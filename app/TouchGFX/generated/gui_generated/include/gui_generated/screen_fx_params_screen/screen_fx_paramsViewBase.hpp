/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_FX_PARAMSVIEWBASE_HPP
#define SCREEN_FX_PARAMSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_fx_params_screen/screen_fx_paramsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class screen_fx_paramsViewBase : public touchgfx::View<screen_fx_paramsPresenter>
{
public:
    screen_fx_paramsViewBase();
    virtual ~screen_fx_paramsViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box MAIN_BACKGROUND;
    touchgfx::ButtonWithLabel btn_opt;
    touchgfx::Circle ParamSlot1;
    touchgfx::PainterRGB565 ParamSlot1Painter;
    touchgfx::Circle ParamSlot2;
    touchgfx::PainterRGB565 ParamSlot2Painter;
    touchgfx::Circle ParamSlot3;
    touchgfx::PainterRGB565 ParamSlot3Painter;
    touchgfx::Circle ParamSlot6;
    touchgfx::PainterRGB565 ParamSlot6Painter;
    touchgfx::Circle ParamSlot5;
    touchgfx::PainterRGB565 ParamSlot5Painter;
    touchgfx::Circle ParamSlot4;
    touchgfx::PainterRGB565 ParamSlot4Painter;
    touchgfx::TextArea FXname;
    touchgfx::TextArea param1_name;
    touchgfx::TextArea param2_name;
    touchgfx::TextArea param3_name;
    touchgfx::TextArea param4_name;
    touchgfx::TextArea param5_name;
    touchgfx::TextArea param6_name;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screen_fx_paramsViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN_FX_PARAMSVIEWBASE_HPP
