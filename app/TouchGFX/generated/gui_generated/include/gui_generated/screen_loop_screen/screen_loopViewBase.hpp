/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_LOOPVIEWBASE_HPP
#define SCREEN_LOOPVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_loop_screen/screen_loopPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class screen_loopViewBase : public touchgfx::View<screen_loopPresenter>
{
public:
    screen_loopViewBase();
    virtual ~screen_loopViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void btn_slot1_pressed()
    {
        // Override and implement this function in screen_loop
    }
    virtual void btn_slot2_pressed()
    {
        // Override and implement this function in screen_loop
    }
    virtual void btn_slot3_pressed()
    {
        // Override and implement this function in screen_loop
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box MAIN_BACKGROUND;
    touchgfx::Line line_signalPath;
    touchgfx::PainterRGB565 line_signalPathPainter;
    touchgfx::ButtonWithLabel btn_FX_slot_3;
    touchgfx::ButtonWithLabel btn_FX_slot_2;
    touchgfx::ButtonWithLabel btn_FX_slot_1;
    touchgfx::ButtonWithLabel btn_Add_fx;
    touchgfx::ButtonWithLabel btn_Del_fx;
    touchgfx::ButtonWithLabel btn_opt;
    touchgfx::Container cont_Slot1;
    touchgfx::Box box_FX_background;
    touchgfx::TextAreaWithOneWildcard text_FXname;
    touchgfx::Container cont_Slot2;
    touchgfx::Box box_FX_background_1;
    touchgfx::TextAreaWithOneWildcard text_FXname_1;
    touchgfx::Container cont_Slot3;
    touchgfx::Box box_FX_background_2;
    touchgfx::TextAreaWithOneWildcard text_FXname_2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXT_FXNAME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_FXnameBuffer[TEXT_FXNAME_SIZE];
    static const uint16_t TEXT_FXNAME_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_FXname_1Buffer[TEXT_FXNAME_1_SIZE];
    static const uint16_t TEXT_FXNAME_2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_FXname_2Buffer[TEXT_FXNAME_2_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<screen_loopViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN_LOOPVIEWBASE_HPP
