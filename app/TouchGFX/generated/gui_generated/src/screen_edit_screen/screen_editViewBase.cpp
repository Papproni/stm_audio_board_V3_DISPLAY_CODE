/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_edit_screen/screen_editViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screen_editViewBase::screen_editViewBase() :
    buttonCallback(this, &screen_editViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    MAIN_BACKGROUND.setPosition(0, 0, 320, 240);
    MAIN_BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(MAIN_BACKGROUND);

    scrollableContainer1.setPosition(0, 0, 320, 240);
    scrollableContainer1.enableVerticalScroll(false);
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFromRGB(255, 5, 5));
    scrollableContainer1.setScrollbarsAlpha(255);
    scrollableContainer1.setScrollbarsPermanentlyVisible();
    scrollableContainer1.setScrollbarsVisible(false);
    SCROLL_BACKGROUND.setPosition(0, 85, 498, 155);
    SCROLL_BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    SCROLL_BACKGROUND.setAlpha(120);
    scrollableContainer1.add(SCROLL_BACKGROUND);

    btn_Loop1.setXY(30, 143);
    btn_Loop1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_DISABLED_ID));
    btn_Loop1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_2QBU));
    btn_Loop1.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_Loop1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    scrollableContainer1.add(btn_Loop1);

    btn_Loop1_1.setXY(160, 143);
    btn_Loop1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_DISABLED_ID));
    btn_Loop1_1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_9FAB));
    btn_Loop1_1.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_Loop1_1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    scrollableContainer1.add(btn_Loop1_1);

    btn_Loop1_2.setXY(271, 143);
    btn_Loop1_2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_DISABLED_ID));
    btn_Loop1_2.setLabelText(touchgfx::TypedText(T___SINGLEUSE_SWZ8));
    btn_Loop1_2.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_Loop1_2.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    scrollableContainer1.add(btn_Loop1_2);

    btn_Loop1_3.setXY(384, 143);
    btn_Loop1_3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_DISABLED_ID));
    btn_Loop1_3.setLabelText(touchgfx::TypedText(T___SINGLEUSE_Y364));
    btn_Loop1_3.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_Loop1_3.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    scrollableContainer1.add(btn_Loop1_3);

    add(scrollableContainer1);

    btn_opt.setXY(0, 0);
    btn_opt.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_DISABLED_ID));
    btn_opt.setLabelText(touchgfx::TypedText(T___SINGLEUSE_EP17));
    btn_opt.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_opt.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_opt.setAction(buttonCallback);
    add(btn_opt);
}

screen_editViewBase::~screen_editViewBase()
{

}

void screen_editViewBase::setupScreen()
{

}

void screen_editViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_opt)
    {
        //To_setting
        //When btn_opt clicked change screen to screen_settings
        //Go to screen_settings with no screen transition
        application().gotoscreen_settingsScreenNoTransition();
    }
}
