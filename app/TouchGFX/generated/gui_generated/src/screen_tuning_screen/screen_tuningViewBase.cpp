/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_tuning_screen/screen_tuningViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

screen_tuningViewBase::screen_tuningViewBase() :
    buttonCallback(this, &screen_tuningViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    MAIN_BACKGROUND.setPosition(0, 0, 320, 240);
    MAIN_BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(MAIN_BACKGROUND);

    tuning_circle.setPosition(0, 0, 320, 240);
    tuning_circle.setCenter(160, 200);
    tuning_circle.setRadius(140);
    tuning_circle.setLineWidth(20);
    tuning_circle.setArc(90, -90);
    tuning_circle.setCapPrecision(180);
    tuning_circlePainter.setColor(touchgfx::Color::getColorFromRGB(107, 107, 107));
    tuning_circle.setPainter(tuning_circlePainter);
    add(tuning_circle);

    tuning_current_loc.setPosition(0, 0, 320, 240);
    tuning_current_loc.setCenter(160, 200);
    tuning_current_loc.setRadius(140);
    tuning_current_loc.setLineWidth(40);
    tuning_current_loc.setArc(30, 28);
    tuning_current_loc.setCapPrecision(180);
    tuning_current_locPainter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    tuning_current_loc.setPainter(tuning_current_locPainter);
    add(tuning_current_loc);

    text_note_middle.setXY(149, 100);
    text_note_middle.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
    text_note_middle.setLinespacing(0);
    text_note_middle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4VSK));
    add(text_note_middle);

    text_note_higher.setXY(252, 174);
    text_note_higher.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_note_higher.setLinespacing(0);
    text_note_higher.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7JJQ));
    add(text_note_higher);

    text_note_lower.setXY(47, 174);
    text_note_lower.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    text_note_lower.setLinespacing(0);
    text_note_lower.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NM4A));
    add(text_note_lower);

    btn_opt.setXY(0, 0);
    btn_opt.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_DISABLED_ID));
    btn_opt.setLabelText(touchgfx::TypedText(T___SINGLEUSE_QHDI));
    btn_opt.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_opt.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_opt.setAction(buttonCallback);
    add(btn_opt);

    line1.setPosition(140, 0, 40, 60);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 47));
    line1.setPainter(line1Painter);
    line1.setStart(20, 5);
    line1.setEnd(20, 45);
    line1.setLineWidth(3);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);
}

screen_tuningViewBase::~screen_tuningViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void screen_tuningViewBase::setupScreen()
{

}

void screen_tuningViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_opt)
    {
        //ToSettings
        //When btn_opt clicked change screen to screen_settings
        //Go to screen_settings with no screen transition
        application().gotoscreen_settingsScreenNoTransition();
    }
}
