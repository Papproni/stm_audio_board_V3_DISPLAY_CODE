/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/template_fx_param_btnBase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

template_fx_param_btnBase::template_fx_param_btnBase()
{
    setWidth(80);
    setHeight(92);
    param_name.setXY(18, 68);
    param_name.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    param_name.setLinespacing(0);
    Unicode::snprintf(param_nameBuffer, PARAM_NAME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BCIO).getText());
    param_name.setWildcard(param_nameBuffer);
    param_name.resizeToCurrentText();
    param_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BRGM));
    add(param_name);

    radioButton.setXY(20, 20);
    radioButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton.setSelected(false);
    radioButton.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButton);
    add(radioButton);
}

template_fx_param_btnBase::~template_fx_param_btnBase()
{

}

void template_fx_param_btnBase::initialize()
{

}
