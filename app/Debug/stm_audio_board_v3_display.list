
stm_audio_board_v3_display.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00022738  080002d0  080002d0  000102d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001f48  08022a08  08022a08  00032a08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000356  08024950  08024950  00034950  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08024ca8  08024ca8  00034ca8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000020  08024cc0  08024cc0  00034cc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .init_array   00000018  08024ce0  08024ce0  00034ce0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   0000000c  08024cf8  08024cf8  00034cf8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000f8  24000000  08024d04  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000029b4  240000f8  08024dfc  000400f8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  24002aac  08024dfc  00042aac  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000400f8  2**0
                  CONTENTS, READONLY
 12 .comment      000000c2  00000000  00000000  00040126  2**0
                  CONTENTS, READONLY
 13 .debug_info   0006f7c8  00000000  00000000  000401e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000d994  00000000  00000000  000af9b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00002478  00000000  00000000  000bd348  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00001aa9  00000000  00000000  000bf7c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0003c4ce  00000000  00000000  000c1269  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0002dcbb  00000000  00000000  000fd737  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0016ccb9  00000000  00000000  0012b3f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000a130  00000000  00000000  002980ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007a  00000000  00000000  002a21dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	; (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	; (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	; (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	240000f8 	.word	0x240000f8
 80002ec:	00000000 	.word	0x00000000
 80002f0:	080229f0 	.word	0x080229f0

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	; (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	; (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	; (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	240000fc 	.word	0x240000fc
 800030c:	080229f0 	.word	0x080229f0

08000310 <memchr>:
 8000310:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000314:	2a10      	cmp	r2, #16
 8000316:	db2b      	blt.n	8000370 <memchr+0x60>
 8000318:	f010 0f07 	tst.w	r0, #7
 800031c:	d008      	beq.n	8000330 <memchr+0x20>
 800031e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000322:	3a01      	subs	r2, #1
 8000324:	428b      	cmp	r3, r1
 8000326:	d02d      	beq.n	8000384 <memchr+0x74>
 8000328:	f010 0f07 	tst.w	r0, #7
 800032c:	b342      	cbz	r2, 8000380 <memchr+0x70>
 800032e:	d1f6      	bne.n	800031e <memchr+0xe>
 8000330:	b4f0      	push	{r4, r5, r6, r7}
 8000332:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000336:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800033a:	f022 0407 	bic.w	r4, r2, #7
 800033e:	f07f 0700 	mvns.w	r7, #0
 8000342:	2300      	movs	r3, #0
 8000344:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000348:	3c08      	subs	r4, #8
 800034a:	ea85 0501 	eor.w	r5, r5, r1
 800034e:	ea86 0601 	eor.w	r6, r6, r1
 8000352:	fa85 f547 	uadd8	r5, r5, r7
 8000356:	faa3 f587 	sel	r5, r3, r7
 800035a:	fa86 f647 	uadd8	r6, r6, r7
 800035e:	faa5 f687 	sel	r6, r5, r7
 8000362:	b98e      	cbnz	r6, 8000388 <memchr+0x78>
 8000364:	d1ee      	bne.n	8000344 <memchr+0x34>
 8000366:	bcf0      	pop	{r4, r5, r6, r7}
 8000368:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800036c:	f002 0207 	and.w	r2, r2, #7
 8000370:	b132      	cbz	r2, 8000380 <memchr+0x70>
 8000372:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000376:	3a01      	subs	r2, #1
 8000378:	ea83 0301 	eor.w	r3, r3, r1
 800037c:	b113      	cbz	r3, 8000384 <memchr+0x74>
 800037e:	d1f8      	bne.n	8000372 <memchr+0x62>
 8000380:	2000      	movs	r0, #0
 8000382:	4770      	bx	lr
 8000384:	3801      	subs	r0, #1
 8000386:	4770      	bx	lr
 8000388:	2d00      	cmp	r5, #0
 800038a:	bf06      	itte	eq
 800038c:	4635      	moveq	r5, r6
 800038e:	3803      	subeq	r0, #3
 8000390:	3807      	subne	r0, #7
 8000392:	f015 0f01 	tst.w	r5, #1
 8000396:	d107      	bne.n	80003a8 <memchr+0x98>
 8000398:	3001      	adds	r0, #1
 800039a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800039e:	bf02      	ittt	eq
 80003a0:	3001      	addeq	r0, #1
 80003a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80003a6:	3001      	addeq	r0, #1
 80003a8:	bcf0      	pop	{r4, r5, r6, r7}
 80003aa:	3801      	subs	r0, #1
 80003ac:	4770      	bx	lr
 80003ae:	bf00      	nop

080003b0 <ILI9341_Init>:
//static void DC_H(void);
//static void LED_H(void);

// Initialization
void ILI9341_Init(void)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	af00      	add	r7, sp, #0
	ILI9341_Reset();
 80003b4:	f000 f99b 	bl	80006ee <ILI9341_Reset>
	ILI9341_SoftReset();
 80003b8:	f000 f9a8 	bl	800070c <ILI9341_SoftReset>

	/* Power Control A */
	LCD_WR_REG(0xCB);
 80003bc:	20cb      	movs	r0, #203	; 0xcb
 80003be:	f000 f9bd 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 80003c2:	2039      	movs	r0, #57	; 0x39
 80003c4:	f000 f9d2 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 80003c8:	202c      	movs	r0, #44	; 0x2c
 80003ca:	f000 f9cf 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80003ce:	2000      	movs	r0, #0
 80003d0:	f000 f9cc 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 80003d4:	2034      	movs	r0, #52	; 0x34
 80003d6:	f000 f9c9 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 80003da:	2002      	movs	r0, #2
 80003dc:	f000 f9c6 	bl	800076c <LCD_WR_DATA>
	/* Power Control B */
	LCD_WR_REG(0xCF);
 80003e0:	20cf      	movs	r0, #207	; 0xcf
 80003e2:	f000 f9ab 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80003e6:	2000      	movs	r0, #0
 80003e8:	f000 f9c0 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 80003ec:	20c1      	movs	r0, #193	; 0xc1
 80003ee:	f000 f9bd 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x30);
 80003f2:	2030      	movs	r0, #48	; 0x30
 80003f4:	f000 f9ba 	bl	800076c <LCD_WR_DATA>
	/* Driver timing control A */
	LCD_WR_REG(0xE8);
 80003f8:	20e8      	movs	r0, #232	; 0xe8
 80003fa:	f000 f99f 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 80003fe:	2085      	movs	r0, #133	; 0x85
 8000400:	f000 f9b4 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f9b1 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x78);
 800040a:	2078      	movs	r0, #120	; 0x78
 800040c:	f000 f9ae 	bl	800076c <LCD_WR_DATA>
	/* Driver timing control B */
	LCD_WR_REG(0xEA);
 8000410:	20ea      	movs	r0, #234	; 0xea
 8000412:	f000 f993 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8000416:	2000      	movs	r0, #0
 8000418:	f000 f9a8 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800041c:	2000      	movs	r0, #0
 800041e:	f000 f9a5 	bl	800076c <LCD_WR_DATA>
	/* Power on Sequence control */
	LCD_WR_REG(0xED);
 8000422:	20ed      	movs	r0, #237	; 0xed
 8000424:	f000 f98a 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 8000428:	2064      	movs	r0, #100	; 0x64
 800042a:	f000 f99f 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 800042e:	2003      	movs	r0, #3
 8000430:	f000 f99c 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x12);
 8000434:	2012      	movs	r0, #18
 8000436:	f000 f999 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x81);
 800043a:	2081      	movs	r0, #129	; 0x81
 800043c:	f000 f996 	bl	800076c <LCD_WR_DATA>
	/* Pump ratio control */
	LCD_WR_REG(0xF7);
 8000440:	20f7      	movs	r0, #247	; 0xf7
 8000442:	f000 f97b 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 8000446:	2020      	movs	r0, #32
 8000448:	f000 f990 	bl	800076c <LCD_WR_DATA>
	/* Power Control 1 */
	LCD_WR_REG(0xC0);
 800044c:	20c0      	movs	r0, #192	; 0xc0
 800044e:	f000 f975 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 8000452:	2010      	movs	r0, #16
 8000454:	f000 f98a 	bl	800076c <LCD_WR_DATA>
	/* Power Control 2 */
	LCD_WR_REG(0xC1);
 8000458:	20c1      	movs	r0, #193	; 0xc1
 800045a:	f000 f96f 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 800045e:	2010      	movs	r0, #16
 8000460:	f000 f984 	bl	800076c <LCD_WR_DATA>
	/* VCOM Control 1 */
	LCD_WR_REG(0xC5);
 8000464:	20c5      	movs	r0, #197	; 0xc5
 8000466:	f000 f969 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x3E);
 800046a:	203e      	movs	r0, #62	; 0x3e
 800046c:	f000 f97e 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 8000470:	2028      	movs	r0, #40	; 0x28
 8000472:	f000 f97b 	bl	800076c <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0xC7);
 8000476:	20c7      	movs	r0, #199	; 0xc7
 8000478:	f000 f960 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x86);
 800047c:	2086      	movs	r0, #134	; 0x86
 800047e:	f000 f975 	bl	800076c <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0x36);
 8000482:	2036      	movs	r0, #54	; 0x36
 8000484:	f000 f95a 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x48);
 8000488:	2048      	movs	r0, #72	; 0x48
 800048a:	f000 f96f 	bl	800076c <LCD_WR_DATA>
	/* Pixel Format Set */
	LCD_WR_REG(0x3A);
 800048e:	203a      	movs	r0, #58	; 0x3a
 8000490:	f000 f954 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x55);    //16bit
 8000494:	2055      	movs	r0, #85	; 0x55
 8000496:	f000 f969 	bl	800076c <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 800049a:	20b1      	movs	r0, #177	; 0xb1
 800049c:	f000 f94e 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80004a0:	2000      	movs	r0, #0
 80004a2:	f000 f963 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x18);
 80004a6:	2018      	movs	r0, #24
 80004a8:	f000 f960 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x20); // Little Endian
#endif
	/* Display Function Control */
	LCD_WR_REG(0xB6);
 80004ac:	20b6      	movs	r0, #182	; 0xb6
 80004ae:	f000 f945 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x08);
 80004b2:	2008      	movs	r0, #8
 80004b4:	f000 f95a 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x82);
 80004b8:	2082      	movs	r0, #130	; 0x82
 80004ba:	f000 f957 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x27);
 80004be:	2027      	movs	r0, #39	; 0x27
 80004c0:	f000 f954 	bl	800076c <LCD_WR_DATA>
	/* 3GAMMA FUNCTION DISABLE */
	LCD_WR_REG(0xF2);
 80004c4:	20f2      	movs	r0, #242	; 0xf2
 80004c6:	f000 f939 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80004ca:	2000      	movs	r0, #0
 80004cc:	f000 f94e 	bl	800076c <LCD_WR_DATA>
	/* GAMMA CURVE SELECTED */
	LCD_WR_REG(0x26); //Gamma set
 80004d0:	2026      	movs	r0, #38	; 0x26
 80004d2:	f000 f933 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x01); 	//Gamma Curve (G2.2)
 80004d6:	2001      	movs	r0, #1
 80004d8:	f000 f948 	bl	800076c <LCD_WR_DATA>
	//Positive Gamma  Correction
	LCD_WR_REG(0xE0);
 80004dc:	20e0      	movs	r0, #224	; 0xe0
 80004de:	f000 f92d 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 80004e2:	200f      	movs	r0, #15
 80004e4:	f000 f942 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 80004e8:	2031      	movs	r0, #49	; 0x31
 80004ea:	f000 f93f 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 80004ee:	202b      	movs	r0, #43	; 0x2b
 80004f0:	f000 f93c 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 80004f4:	200c      	movs	r0, #12
 80004f6:	f000 f939 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 80004fa:	200e      	movs	r0, #14
 80004fc:	f000 f936 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000500:	2008      	movs	r0, #8
 8000502:	f000 f933 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x4E);
 8000506:	204e      	movs	r0, #78	; 0x4e
 8000508:	f000 f930 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0xF1);
 800050c:	20f1      	movs	r0, #241	; 0xf1
 800050e:	f000 f92d 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x37);
 8000512:	2037      	movs	r0, #55	; 0x37
 8000514:	f000 f92a 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8000518:	2007      	movs	r0, #7
 800051a:	f000 f927 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 800051e:	2010      	movs	r0, #16
 8000520:	f000 f924 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000524:	2003      	movs	r0, #3
 8000526:	f000 f921 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 800052a:	200e      	movs	r0, #14
 800052c:	f000 f91e 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x09);
 8000530:	2009      	movs	r0, #9
 8000532:	f000 f91b 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000536:	2000      	movs	r0, #0
 8000538:	f000 f918 	bl	800076c <LCD_WR_DATA>
	//Negative Gamma  Correction
	LCD_WR_REG(0xE1);
 800053c:	20e1      	movs	r0, #225	; 0xe1
 800053e:	f000 f8fd 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8000542:	2000      	movs	r0, #0
 8000544:	f000 f912 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8000548:	200e      	movs	r0, #14
 800054a:	f000 f90f 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x14);
 800054e:	2014      	movs	r0, #20
 8000550:	f000 f90c 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000554:	2003      	movs	r0, #3
 8000556:	f000 f909 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 800055a:	2011      	movs	r0, #17
 800055c:	f000 f906 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8000560:	2007      	movs	r0, #7
 8000562:	f000 f903 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8000566:	2031      	movs	r0, #49	; 0x31
 8000568:	f000 f900 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 800056c:	20c1      	movs	r0, #193	; 0xc1
 800056e:	f000 f8fd 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x48);
 8000572:	2048      	movs	r0, #72	; 0x48
 8000574:	f000 f8fa 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000578:	2008      	movs	r0, #8
 800057a:	f000 f8f7 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 800057e:	200f      	movs	r0, #15
 8000580:	f000 f8f4 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 8000584:	200c      	movs	r0, #12
 8000586:	f000 f8f1 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 800058a:	2031      	movs	r0, #49	; 0x31
 800058c:	f000 f8ee 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x36);
 8000590:	2036      	movs	r0, #54	; 0x36
 8000592:	f000 f8eb 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8000596:	200f      	movs	r0, #15
 8000598:	f000 f8e8 	bl	800076c <LCD_WR_DATA>
	//EXIT SLEEP
	LCD_WR_REG(0x11);
 800059c:	2011      	movs	r0, #17
 800059e:	f000 f8cd 	bl	800073c <LCD_WR_REG>

	HAL_Delay(120);
 80005a2:	2078      	movs	r0, #120	; 0x78
 80005a4:	f001 f8a8 	bl	80016f8 <HAL_Delay>

	//TURN ON DISPLAY
	LCD_WR_REG(0x29);
 80005a8:	2029      	movs	r0, #41	; 0x29
 80005aa:	f000 f8c7 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(0x2C);
 80005ae:	202c      	movs	r0, #44	; 0x2c
 80005b0:	f000 f8dc 	bl	800076c <LCD_WR_DATA>

	LCD_direction(ROTATE_270);
 80005b4:	2003      	movs	r0, #3
 80005b6:	f000 f8f1 	bl	800079c <LCD_direction>

}
 80005ba:	bf00      	nop
 80005bc:	bd80      	pop	{r7, pc}

080005be <ILI9341_SetWindow>:

void ILI9341_SetWindow(uint16_t start_x, uint16_t start_y, uint16_t end_x, uint16_t end_y)
{
 80005be:	b590      	push	{r4, r7, lr}
 80005c0:	b083      	sub	sp, #12
 80005c2:	af00      	add	r7, sp, #0
 80005c4:	4604      	mov	r4, r0
 80005c6:	4608      	mov	r0, r1
 80005c8:	4611      	mov	r1, r2
 80005ca:	461a      	mov	r2, r3
 80005cc:	4623      	mov	r3, r4
 80005ce:	80fb      	strh	r3, [r7, #6]
 80005d0:	4603      	mov	r3, r0
 80005d2:	80bb      	strh	r3, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	807b      	strh	r3, [r7, #2]
 80005d8:	4613      	mov	r3, r2
 80005da:	803b      	strh	r3, [r7, #0]
	// Set Window
	LCD_WR_REG(0x2a);
 80005dc:	202a      	movs	r0, #42	; 0x2a
 80005de:	f000 f8ad 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(start_x >> 8);
 80005e2:	88fb      	ldrh	r3, [r7, #6]
 80005e4:	0a1b      	lsrs	r3, r3, #8
 80005e6:	b29b      	uxth	r3, r3
 80005e8:	b2db      	uxtb	r3, r3
 80005ea:	4618      	mov	r0, r3
 80005ec:	f000 f8be 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_x);
 80005f0:	88fb      	ldrh	r3, [r7, #6]
 80005f2:	b2db      	uxtb	r3, r3
 80005f4:	4618      	mov	r0, r3
 80005f6:	f000 f8b9 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(end_x >> 8);
 80005fa:	887b      	ldrh	r3, [r7, #2]
 80005fc:	0a1b      	lsrs	r3, r3, #8
 80005fe:	b29b      	uxth	r3, r3
 8000600:	b2db      	uxtb	r3, r3
 8000602:	4618      	mov	r0, r3
 8000604:	f000 f8b2 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_x);
 8000608:	887b      	ldrh	r3, [r7, #2]
 800060a:	b2db      	uxtb	r3, r3
 800060c:	4618      	mov	r0, r3
 800060e:	f000 f8ad 	bl	800076c <LCD_WR_DATA>

	LCD_WR_REG(0x2b);
 8000612:	202b      	movs	r0, #43	; 0x2b
 8000614:	f000 f892 	bl	800073c <LCD_WR_REG>
	LCD_WR_DATA(start_y >> 8);
 8000618:	88bb      	ldrh	r3, [r7, #4]
 800061a:	0a1b      	lsrs	r3, r3, #8
 800061c:	b29b      	uxth	r3, r3
 800061e:	b2db      	uxtb	r3, r3
 8000620:	4618      	mov	r0, r3
 8000622:	f000 f8a3 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_y);
 8000626:	88bb      	ldrh	r3, [r7, #4]
 8000628:	b2db      	uxtb	r3, r3
 800062a:	4618      	mov	r0, r3
 800062c:	f000 f89e 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(end_y >> 8);
 8000630:	883b      	ldrh	r3, [r7, #0]
 8000632:	0a1b      	lsrs	r3, r3, #8
 8000634:	b29b      	uxth	r3, r3
 8000636:	b2db      	uxtb	r3, r3
 8000638:	4618      	mov	r0, r3
 800063a:	f000 f897 	bl	800076c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_y);
 800063e:	883b      	ldrh	r3, [r7, #0]
 8000640:	b2db      	uxtb	r3, r3
 8000642:	4618      	mov	r0, r3
 8000644:	f000 f892 	bl	800076c <LCD_WR_DATA>

}
 8000648:	bf00      	nop
 800064a:	370c      	adds	r7, #12
 800064c:	46bd      	mov	sp, r7
 800064e:	bd90      	pop	{r4, r7, pc}

08000650 <ConvHL>:
		Error_Handler();
	}
}

static void ConvHL(uint8_t *s, int32_t l)
{
 8000650:	b480      	push	{r7}
 8000652:	b085      	sub	sp, #20
 8000654:	af00      	add	r7, sp, #0
 8000656:	6078      	str	r0, [r7, #4]
 8000658:	6039      	str	r1, [r7, #0]
	uint8_t v;
	while (l > 0) {
 800065a:	e010      	b.n	800067e <ConvHL+0x2e>
		v = *(s+1);
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	785b      	ldrb	r3, [r3, #1]
 8000660:	73fb      	strb	r3, [r7, #15]
		*(s+1) = *s;
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	3301      	adds	r3, #1
 8000666:	687a      	ldr	r2, [r7, #4]
 8000668:	7812      	ldrb	r2, [r2, #0]
 800066a:	701a      	strb	r2, [r3, #0]
		*s = v;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	7bfa      	ldrb	r2, [r7, #15]
 8000670:	701a      	strb	r2, [r3, #0]
		s += 2;
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	3302      	adds	r3, #2
 8000676:	607b      	str	r3, [r7, #4]
		l -= 2;
 8000678:	683b      	ldr	r3, [r7, #0]
 800067a:	3b02      	subs	r3, #2
 800067c:	603b      	str	r3, [r7, #0]
	while (l > 0) {
 800067e:	683b      	ldr	r3, [r7, #0]
 8000680:	2b00      	cmp	r3, #0
 8000682:	dceb      	bgt.n	800065c <ConvHL+0xc>
	}
}
 8000684:	bf00      	nop
 8000686:	bf00      	nop
 8000688:	3714      	adds	r7, #20
 800068a:	46bd      	mov	sp, r7
 800068c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000690:	4770      	bx	lr
	...

08000694 <ILI9341_DrawBitmap>:

// Call this function after ILI9341_SetWindow
// This function is non blocked
// The variable for Callback is open. User should set by himself
void ILI9341_DrawBitmap(uint16_t w, uint16_t h, uint8_t *s)
{
 8000694:	b580      	push	{r7, lr}
 8000696:	b082      	sub	sp, #8
 8000698:	af00      	add	r7, sp, #0
 800069a:	4603      	mov	r3, r0
 800069c:	603a      	str	r2, [r7, #0]
 800069e:	80fb      	strh	r3, [r7, #6]
 80006a0:	460b      	mov	r3, r1
 80006a2:	80bb      	strh	r3, [r7, #4]
	// Enable to access GRAM
	LCD_WR_REG(0x2c);
 80006a4:	202c      	movs	r0, #44	; 0x2c
 80006a6:	f000 f849 	bl	800073c <LCD_WR_REG>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
	ConvHL(s, (int32_t)w*h*2);
 80006aa:	88fb      	ldrh	r3, [r7, #6]
 80006ac:	88ba      	ldrh	r2, [r7, #4]
 80006ae:	fb02 f303 	mul.w	r3, r2, r3
 80006b2:	005b      	lsls	r3, r3, #1
 80006b4:	4619      	mov	r1, r3
 80006b6:	6838      	ldr	r0, [r7, #0]
 80006b8:	f7ff ffca 	bl	8000650 <ConvHL>
	HAL_SPI_Transmit_DMA(&hspi5, (uint8_t*)s, w * h *2);
 80006bc:	88fa      	ldrh	r2, [r7, #6]
 80006be:	88bb      	ldrh	r3, [r7, #4]
 80006c0:	fb12 f303 	smulbb	r3, r2, r3
 80006c4:	b29b      	uxth	r3, r3
 80006c6:	005b      	lsls	r3, r3, #1
 80006c8:	b29b      	uxth	r3, r3
 80006ca:	461a      	mov	r2, r3
 80006cc:	6839      	ldr	r1, [r7, #0]
 80006ce:	4803      	ldr	r0, [pc, #12]	; (80006dc <ILI9341_DrawBitmap+0x48>)
 80006d0:	f009 f916 	bl	8009900 <HAL_SPI_Transmit_DMA>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 80006d4:	bf00      	nop
 80006d6:	3708      	adds	r7, #8
 80006d8:	46bd      	mov	sp, r7
 80006da:	bd80      	pop	{r7, pc}
 80006dc:	24000230 	.word	0x24000230

080006e0 <ILI9341_EndOfDrawBitmap>:

// User should call it at callback
void ILI9341_EndOfDrawBitmap(void)
{
 80006e0:	b480      	push	{r7}
 80006e2:	af00      	add	r7, sp, #0
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 80006e4:	bf00      	nop
 80006e6:	46bd      	mov	sp, r7
 80006e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ec:	4770      	bx	lr

080006ee <ILI9341_Reset>:

void ILI9341_Reset(void)
{
 80006ee:	b580      	push	{r7, lr}
 80006f0:	af00      	add	r7, sp, #0
	RESET_L();
 80006f2:	f000 f887 	bl	8000804 <RESET_L>
	HAL_Delay(100);
 80006f6:	2064      	movs	r0, #100	; 0x64
 80006f8:	f000 fffe 	bl	80016f8 <HAL_Delay>
	RESET_H();
 80006fc:	f000 f88e 	bl	800081c <RESET_H>
	HAL_Delay(100);
 8000700:	2064      	movs	r0, #100	; 0x64
 8000702:	f000 fff9 	bl	80016f8 <HAL_Delay>
//	CS_L();
//	LED_H();
}
 8000706:	bf00      	nop
 8000708:	bd80      	pop	{r7, pc}
	...

0800070c <ILI9341_SoftReset>:

void ILI9341_SoftReset(void)
{
 800070c:	b580      	push	{r7, lr}
 800070e:	b082      	sub	sp, #8
 8000710:	af00      	add	r7, sp, #0
	uint8_t cmd;
	cmd = 0x01; //Software reset
 8000712:	2301      	movs	r3, #1
 8000714:	71fb      	strb	r3, [r7, #7]
//	DC_L();
	if (HAL_SPI_Transmit(&hspi5, &cmd, 1, 1000) != HAL_OK) {
 8000716:	1df9      	adds	r1, r7, #7
 8000718:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800071c:	2201      	movs	r2, #1
 800071e:	4806      	ldr	r0, [pc, #24]	; (8000738 <ILI9341_SoftReset+0x2c>)
 8000720:	f008 ff00 	bl	8009524 <HAL_SPI_Transmit>
 8000724:	4603      	mov	r3, r0
 8000726:	2b00      	cmp	r3, #0
 8000728:	d001      	beq.n	800072e <ILI9341_SoftReset+0x22>
		Error_Handler();
 800072a:	f000 fb4b 	bl	8000dc4 <Error_Handler>
	}
}
 800072e:	bf00      	nop
 8000730:	3708      	adds	r7, #8
 8000732:	46bd      	mov	sp, r7
 8000734:	bd80      	pop	{r7, pc}
 8000736:	bf00      	nop
 8000738:	24000230 	.word	0x24000230

0800073c <LCD_WR_REG>:


void LCD_WR_REG(uint8_t data)
{
 800073c:	b580      	push	{r7, lr}
 800073e:	b082      	sub	sp, #8
 8000740:	af00      	add	r7, sp, #0
 8000742:	4603      	mov	r3, r0
 8000744:	71fb      	strb	r3, [r7, #7]
//	DC_L();
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 8000746:	1df9      	adds	r1, r7, #7
 8000748:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800074c:	2201      	movs	r2, #1
 800074e:	4806      	ldr	r0, [pc, #24]	; (8000768 <LCD_WR_REG+0x2c>)
 8000750:	f008 fee8 	bl	8009524 <HAL_SPI_Transmit>
 8000754:	4603      	mov	r3, r0
 8000756:	2b00      	cmp	r3, #0
 8000758:	d001      	beq.n	800075e <LCD_WR_REG+0x22>
		Error_Handler();
 800075a:	f000 fb33 	bl	8000dc4 <Error_Handler>
	}
}
 800075e:	bf00      	nop
 8000760:	3708      	adds	r7, #8
 8000762:	46bd      	mov	sp, r7
 8000764:	bd80      	pop	{r7, pc}
 8000766:	bf00      	nop
 8000768:	24000230 	.word	0x24000230

0800076c <LCD_WR_DATA>:

static void LCD_WR_DATA(uint8_t data)
{
 800076c:	b580      	push	{r7, lr}
 800076e:	b082      	sub	sp, #8
 8000770:	af00      	add	r7, sp, #0
 8000772:	4603      	mov	r3, r0
 8000774:	71fb      	strb	r3, [r7, #7]
//	DC_H();
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 8000776:	1df9      	adds	r1, r7, #7
 8000778:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800077c:	2201      	movs	r2, #1
 800077e:	4806      	ldr	r0, [pc, #24]	; (8000798 <LCD_WR_DATA+0x2c>)
 8000780:	f008 fed0 	bl	8009524 <HAL_SPI_Transmit>
 8000784:	4603      	mov	r3, r0
 8000786:	2b00      	cmp	r3, #0
 8000788:	d001      	beq.n	800078e <LCD_WR_DATA+0x22>
		Error_Handler();
 800078a:	f000 fb1b 	bl	8000dc4 <Error_Handler>
	}
}
 800078e:	bf00      	nop
 8000790:	3708      	adds	r7, #8
 8000792:	46bd      	mov	sp, r7
 8000794:	bd80      	pop	{r7, pc}
 8000796:	bf00      	nop
 8000798:	24000230 	.word	0x24000230

0800079c <LCD_direction>:
	spiDmaTransferComplete = 1;
}
*/

static void LCD_direction(LCD_Horizontal_t direction)
{
 800079c:	b580      	push	{r7, lr}
 800079e:	b082      	sub	sp, #8
 80007a0:	af00      	add	r7, sp, #0
 80007a2:	4603      	mov	r3, r0
 80007a4:	71fb      	strb	r3, [r7, #7]
	switch (direction) {
 80007a6:	79fb      	ldrb	r3, [r7, #7]
 80007a8:	2b03      	cmp	r3, #3
 80007aa:	d827      	bhi.n	80007fc <LCD_direction+0x60>
 80007ac:	a201      	add	r2, pc, #4	; (adr r2, 80007b4 <LCD_direction+0x18>)
 80007ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007b2:	bf00      	nop
 80007b4:	080007c5 	.word	0x080007c5
 80007b8:	080007d3 	.word	0x080007d3
 80007bc:	080007e1 	.word	0x080007e1
 80007c0:	080007ef 	.word	0x080007ef
	case ROTATE_0:
		LCD_WR_REG(0x36);
 80007c4:	2036      	movs	r0, #54	; 0x36
 80007c6:	f7ff ffb9 	bl	800073c <LCD_WR_REG>
		LCD_WR_DATA(0x48);
 80007ca:	2048      	movs	r0, #72	; 0x48
 80007cc:	f7ff ffce 	bl	800076c <LCD_WR_DATA>
		break;
 80007d0:	e014      	b.n	80007fc <LCD_direction+0x60>
	case ROTATE_90:
		LCD_WR_REG(0x36);
 80007d2:	2036      	movs	r0, #54	; 0x36
 80007d4:	f7ff ffb2 	bl	800073c <LCD_WR_REG>
		LCD_WR_DATA(0x28);
 80007d8:	2028      	movs	r0, #40	; 0x28
 80007da:	f7ff ffc7 	bl	800076c <LCD_WR_DATA>
		break;
 80007de:	e00d      	b.n	80007fc <LCD_direction+0x60>
	case ROTATE_180:
		LCD_WR_REG(0x36);
 80007e0:	2036      	movs	r0, #54	; 0x36
 80007e2:	f7ff ffab 	bl	800073c <LCD_WR_REG>
		LCD_WR_DATA(0x88);
 80007e6:	2088      	movs	r0, #136	; 0x88
 80007e8:	f7ff ffc0 	bl	800076c <LCD_WR_DATA>
		break;
 80007ec:	e006      	b.n	80007fc <LCD_direction+0x60>
	case ROTATE_270:
		LCD_WR_REG(0x36);
 80007ee:	2036      	movs	r0, #54	; 0x36
 80007f0:	f7ff ffa4 	bl	800073c <LCD_WR_REG>
		LCD_WR_DATA(0xE8);
 80007f4:	20e8      	movs	r0, #232	; 0xe8
 80007f6:	f7ff ffb9 	bl	800076c <LCD_WR_DATA>
		break;
 80007fa:	bf00      	nop
	}
}
 80007fc:	bf00      	nop
 80007fe:	3708      	adds	r7, #8
 8000800:	46bd      	mov	sp, r7
 8000802:	bd80      	pop	{r7, pc}

08000804 <RESET_L>:

static void RESET_L(void)
{
 8000804:	b580      	push	{r7, lr}
 8000806:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 8000808:	2200      	movs	r2, #0
 800080a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800080e:	4802      	ldr	r0, [pc, #8]	; (8000818 <RESET_L+0x14>)
 8000810:	f005 f9da 	bl	8005bc8 <HAL_GPIO_WritePin>
}
 8000814:	bf00      	nop
 8000816:	bd80      	pop	{r7, pc}
 8000818:	58021800 	.word	0x58021800

0800081c <RESET_H>:

static void RESET_H(void)
{
 800081c:	b580      	push	{r7, lr}
 800081e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_SET);
 8000820:	2201      	movs	r2, #1
 8000822:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000826:	4802      	ldr	r0, [pc, #8]	; (8000830 <RESET_H+0x14>)
 8000828:	f005 f9ce 	bl	8005bc8 <HAL_GPIO_WritePin>
}
 800082c:	bf00      	nop
 800082e:	bd80      	pop	{r7, pc}
 8000830:	58021800 	.word	0x58021800

08000834 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000834:	b580      	push	{r7, lr}
 8000836:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000838:	f000 fecc 	bl	80015d4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800083c:	f000 f816 	bl	800086c <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8000840:	f000 f884 	bl	800094c <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000844:	f000 fa06 	bl	8000c54 <MX_GPIO_Init>
  MX_DMA_Init();
 8000848:	f000 f9e4 	bl	8000c14 <MX_DMA_Init>
  MX_SPI1_Init();
 800084c:	f000 f936 	bl	8000abc <MX_SPI1_Init>
  MX_SPI5_Init();
 8000850:	f000 f98a 	bl	8000b68 <MX_SPI5_Init>
  MX_CRC_Init();
 8000854:	f000 f910 	bl	8000a78 <MX_CRC_Init>
  MX_ADC1_Init();
 8000858:	f000 f896 	bl	8000988 <MX_ADC1_Init>
  MX_TouchGFX_Init();
 800085c:	f009 fce9 	bl	800a232 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  ILI9341_Init();
 8000860:	f7ff fda6 	bl	80003b0 <ILI9341_Init>
  {
//	  MX_TouchGFX_Process();
//	 	  touchgfxSignalVSync();
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8000864:	f009 fced 	bl	800a242 <MX_TouchGFX_Process>
 8000868:	e7fc      	b.n	8000864 <main+0x30>
	...

0800086c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800086c:	b580      	push	{r7, lr}
 800086e:	b09c      	sub	sp, #112	; 0x70
 8000870:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000872:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000876:	224c      	movs	r2, #76	; 0x4c
 8000878:	2100      	movs	r1, #0
 800087a:	4618      	mov	r0, r3
 800087c:	f021 fa93 	bl	8021da6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000880:	1d3b      	adds	r3, r7, #4
 8000882:	2220      	movs	r2, #32
 8000884:	2100      	movs	r1, #0
 8000886:	4618      	mov	r0, r3
 8000888:	f021 fa8d 	bl	8021da6 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 800088c:	2002      	movs	r0, #2
 800088e:	f005 f9b5 	bl	8005bfc <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 8000892:	2300      	movs	r3, #0
 8000894:	603b      	str	r3, [r7, #0]
 8000896:	4b2c      	ldr	r3, [pc, #176]	; (8000948 <SystemClock_Config+0xdc>)
 8000898:	699b      	ldr	r3, [r3, #24]
 800089a:	4a2b      	ldr	r2, [pc, #172]	; (8000948 <SystemClock_Config+0xdc>)
 800089c:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80008a0:	6193      	str	r3, [r2, #24]
 80008a2:	4b29      	ldr	r3, [pc, #164]	; (8000948 <SystemClock_Config+0xdc>)
 80008a4:	699b      	ldr	r3, [r3, #24]
 80008a6:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80008aa:	603b      	str	r3, [r7, #0]
 80008ac:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80008ae:	bf00      	nop
 80008b0:	4b25      	ldr	r3, [pc, #148]	; (8000948 <SystemClock_Config+0xdc>)
 80008b2:	699b      	ldr	r3, [r3, #24]
 80008b4:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80008b8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80008bc:	d1f8      	bne.n	80008b0 <SystemClock_Config+0x44>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80008be:	2302      	movs	r3, #2
 80008c0:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 80008c2:	2301      	movs	r3, #1
 80008c4:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSICalibrationValue = 64;
 80008c6:	2340      	movs	r3, #64	; 0x40
 80008c8:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80008ca:	2302      	movs	r3, #2
 80008cc:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80008ce:	2300      	movs	r3, #0
 80008d0:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 4;
 80008d2:	2304      	movs	r3, #4
 80008d4:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 34;
 80008d6:	2322      	movs	r3, #34	; 0x22
 80008d8:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 1;
 80008da:	2301      	movs	r3, #1
 80008dc:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80008de:	2302      	movs	r3, #2
 80008e0:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 80008e2:	2302      	movs	r3, #2
 80008e4:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 80008e6:	230c      	movs	r3, #12
 80008e8:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80008ea:	2300      	movs	r3, #0
 80008ec:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 80008ee:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80008f2:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80008f4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80008f8:	4618      	mov	r0, r3
 80008fa:	f005 f9b9 	bl	8005c70 <HAL_RCC_OscConfig>
 80008fe:	4603      	mov	r3, r0
 8000900:	2b00      	cmp	r3, #0
 8000902:	d001      	beq.n	8000908 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000904:	f000 fa5e 	bl	8000dc4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000908:	233f      	movs	r3, #63	; 0x3f
 800090a:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800090c:	2303      	movs	r3, #3
 800090e:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000910:	2300      	movs	r3, #0
 8000912:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000914:	2308      	movs	r3, #8
 8000916:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000918:	2340      	movs	r3, #64	; 0x40
 800091a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 800091c:	2340      	movs	r3, #64	; 0x40
 800091e:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8000920:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000924:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8000926:	2340      	movs	r3, #64	; 0x40
 8000928:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 800092a:	1d3b      	adds	r3, r7, #4
 800092c:	2103      	movs	r1, #3
 800092e:	4618      	mov	r0, r3
 8000930:	f005 fd78 	bl	8006424 <HAL_RCC_ClockConfig>
 8000934:	4603      	mov	r3, r0
 8000936:	2b00      	cmp	r3, #0
 8000938:	d001      	beq.n	800093e <SystemClock_Config+0xd2>
  {
    Error_Handler();
 800093a:	f000 fa43 	bl	8000dc4 <Error_Handler>
  }
}
 800093e:	bf00      	nop
 8000940:	3770      	adds	r7, #112	; 0x70
 8000942:	46bd      	mov	sp, r7
 8000944:	bd80      	pop	{r7, pc}
 8000946:	bf00      	nop
 8000948:	58024800 	.word	0x58024800

0800094c <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 800094c:	b580      	push	{r7, lr}
 800094e:	b0ae      	sub	sp, #184	; 0xb8
 8000950:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000952:	463b      	mov	r3, r7
 8000954:	22b8      	movs	r2, #184	; 0xb8
 8000956:	2100      	movs	r1, #0
 8000958:	4618      	mov	r0, r3
 800095a:	f021 fa24 	bl	8021da6 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_CKPER;
 800095e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8000962:	f04f 0300 	mov.w	r3, #0
 8000966:	e9c7 2300 	strd	r2, r3, [r7]
  PeriphClkInitStruct.CkperClockSelection = RCC_CLKPSOURCE_HSI;
 800096a:	2300      	movs	r3, #0
 800096c:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800096e:	463b      	mov	r3, r7
 8000970:	4618      	mov	r0, r3
 8000972:	f006 f8cd 	bl	8006b10 <HAL_RCCEx_PeriphCLKConfig>
 8000976:	4603      	mov	r3, r0
 8000978:	2b00      	cmp	r3, #0
 800097a:	d001      	beq.n	8000980 <PeriphCommonClock_Config+0x34>
  {
    Error_Handler();
 800097c:	f000 fa22 	bl	8000dc4 <Error_Handler>
  }
}
 8000980:	bf00      	nop
 8000982:	37b8      	adds	r7, #184	; 0xb8
 8000984:	46bd      	mov	sp, r7
 8000986:	bd80      	pop	{r7, pc}

08000988 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000988:	b580      	push	{r7, lr}
 800098a:	b08c      	sub	sp, #48	; 0x30
 800098c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 800098e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000992:	2200      	movs	r2, #0
 8000994:	601a      	str	r2, [r3, #0]
 8000996:	605a      	str	r2, [r3, #4]
 8000998:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 800099a:	463b      	mov	r3, r7
 800099c:	2224      	movs	r2, #36	; 0x24
 800099e:	2100      	movs	r1, #0
 80009a0:	4618      	mov	r0, r3
 80009a2:	f021 fa00 	bl	8021da6 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80009a6:	4b31      	ldr	r3, [pc, #196]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009a8:	4a31      	ldr	r2, [pc, #196]	; (8000a70 <MX_ADC1_Init+0xe8>)
 80009aa:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 80009ac:	4b2f      	ldr	r3, [pc, #188]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009ae:	2200      	movs	r2, #0
 80009b0:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 80009b2:	4b2e      	ldr	r3, [pc, #184]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009b4:	2200      	movs	r2, #0
 80009b6:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80009b8:	4b2c      	ldr	r3, [pc, #176]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009ba:	2200      	movs	r2, #0
 80009bc:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80009be:	4b2b      	ldr	r3, [pc, #172]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009c0:	2204      	movs	r2, #4
 80009c2:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 80009c4:	4b29      	ldr	r3, [pc, #164]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009c6:	2200      	movs	r2, #0
 80009c8:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80009ca:	4b28      	ldr	r3, [pc, #160]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009cc:	2200      	movs	r2, #0
 80009ce:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 80009d0:	4b26      	ldr	r3, [pc, #152]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009d2:	2201      	movs	r2, #1
 80009d4:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80009d6:	4b25      	ldr	r3, [pc, #148]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009d8:	2200      	movs	r2, #0
 80009da:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80009de:	4b23      	ldr	r3, [pc, #140]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009e0:	2200      	movs	r2, #0
 80009e2:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80009e4:	4b21      	ldr	r3, [pc, #132]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009e6:	2200      	movs	r2, #0
 80009e8:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 80009ea:	4b20      	ldr	r3, [pc, #128]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009ec:	2200      	movs	r2, #0
 80009ee:	631a      	str	r2, [r3, #48]	; 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80009f0:	4b1e      	ldr	r3, [pc, #120]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009f2:	2200      	movs	r2, #0
 80009f4:	63da      	str	r2, [r3, #60]	; 0x3c
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 80009f6:	4b1d      	ldr	r3, [pc, #116]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009f8:	2200      	movs	r2, #0
 80009fa:	641a      	str	r2, [r3, #64]	; 0x40
  hadc1.Init.OversamplingMode = DISABLE;
 80009fc:	4b1b      	ldr	r3, [pc, #108]	; (8000a6c <MX_ADC1_Init+0xe4>)
 80009fe:	2200      	movs	r2, #0
 8000a00:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000a04:	4819      	ldr	r0, [pc, #100]	; (8000a6c <MX_ADC1_Init+0xe4>)
 8000a06:	f001 f8e1 	bl	8001bcc <HAL_ADC_Init>
 8000a0a:	4603      	mov	r3, r0
 8000a0c:	2b00      	cmp	r3, #0
 8000a0e:	d001      	beq.n	8000a14 <MX_ADC1_Init+0x8c>
  {
    Error_Handler();
 8000a10:	f000 f9d8 	bl	8000dc4 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000a14:	2300      	movs	r3, #0
 8000a16:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000a18:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a1c:	4619      	mov	r1, r3
 8000a1e:	4813      	ldr	r0, [pc, #76]	; (8000a6c <MX_ADC1_Init+0xe4>)
 8000a20:	f002 f920 	bl	8002c64 <HAL_ADCEx_MultiModeConfigChannel>
 8000a24:	4603      	mov	r3, r0
 8000a26:	2b00      	cmp	r3, #0
 8000a28:	d001      	beq.n	8000a2e <MX_ADC1_Init+0xa6>
  {
    Error_Handler();
 8000a2a:	f000 f9cb 	bl	8000dc4 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000a2e:	4b11      	ldr	r3, [pc, #68]	; (8000a74 <MX_ADC1_Init+0xec>)
 8000a30:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000a32:	2306      	movs	r3, #6
 8000a34:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000a36:	2300      	movs	r3, #0
 8000a38:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000a3a:	f240 73ff 	movw	r3, #2047	; 0x7ff
 8000a3e:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000a40:	2304      	movs	r3, #4
 8000a42:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000a44:	2300      	movs	r3, #0
 8000a46:	617b      	str	r3, [r7, #20]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000a48:	2300      	movs	r3, #0
 8000a4a:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000a4e:	463b      	mov	r3, r7
 8000a50:	4619      	mov	r1, r3
 8000a52:	4806      	ldr	r0, [pc, #24]	; (8000a6c <MX_ADC1_Init+0xe4>)
 8000a54:	f001 fac2 	bl	8001fdc <HAL_ADC_ConfigChannel>
 8000a58:	4603      	mov	r3, r0
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	d001      	beq.n	8000a62 <MX_ADC1_Init+0xda>
  {
    Error_Handler();
 8000a5e:	f000 f9b1 	bl	8000dc4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000a62:	bf00      	nop
 8000a64:	3730      	adds	r7, #48	; 0x30
 8000a66:	46bd      	mov	sp, r7
 8000a68:	bd80      	pop	{r7, pc}
 8000a6a:	bf00      	nop
 8000a6c:	24000114 	.word	0x24000114
 8000a70:	40022000 	.word	0x40022000
 8000a74:	0c900008 	.word	0x0c900008

08000a78 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000a78:	b580      	push	{r7, lr}
 8000a7a:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000a7c:	4b0d      	ldr	r3, [pc, #52]	; (8000ab4 <MX_CRC_Init+0x3c>)
 8000a7e:	4a0e      	ldr	r2, [pc, #56]	; (8000ab8 <MX_CRC_Init+0x40>)
 8000a80:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000a82:	4b0c      	ldr	r3, [pc, #48]	; (8000ab4 <MX_CRC_Init+0x3c>)
 8000a84:	2200      	movs	r2, #0
 8000a86:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8000a88:	4b0a      	ldr	r3, [pc, #40]	; (8000ab4 <MX_CRC_Init+0x3c>)
 8000a8a:	2200      	movs	r2, #0
 8000a8c:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000a8e:	4b09      	ldr	r3, [pc, #36]	; (8000ab4 <MX_CRC_Init+0x3c>)
 8000a90:	2200      	movs	r2, #0
 8000a92:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000a94:	4b07      	ldr	r3, [pc, #28]	; (8000ab4 <MX_CRC_Init+0x3c>)
 8000a96:	2200      	movs	r2, #0
 8000a98:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000a9a:	4b06      	ldr	r3, [pc, #24]	; (8000ab4 <MX_CRC_Init+0x3c>)
 8000a9c:	2201      	movs	r2, #1
 8000a9e:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000aa0:	4804      	ldr	r0, [pc, #16]	; (8000ab4 <MX_CRC_Init+0x3c>)
 8000aa2:	f002 fad1 	bl	8003048 <HAL_CRC_Init>
 8000aa6:	4603      	mov	r3, r0
 8000aa8:	2b00      	cmp	r3, #0
 8000aaa:	d001      	beq.n	8000ab0 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8000aac:	f000 f98a 	bl	8000dc4 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000ab0:	bf00      	nop
 8000ab2:	bd80      	pop	{r7, pc}
 8000ab4:	24000184 	.word	0x24000184
 8000ab8:	58024c00 	.word	0x58024c00

08000abc <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000ac0:	4b27      	ldr	r3, [pc, #156]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000ac2:	4a28      	ldr	r2, [pc, #160]	; (8000b64 <MX_SPI1_Init+0xa8>)
 8000ac4:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000ac6:	4b26      	ldr	r3, [pc, #152]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000ac8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000acc:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000ace:	4b24      	ldr	r3, [pc, #144]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 8000ad4:	4b22      	ldr	r3, [pc, #136]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000ad6:	2203      	movs	r2, #3
 8000ad8:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000ada:	4b21      	ldr	r3, [pc, #132]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000adc:	2200      	movs	r2, #0
 8000ade:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000ae0:	4b1f      	ldr	r3, [pc, #124]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 8000ae6:	4b1e      	ldr	r3, [pc, #120]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000ae8:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8000aec:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000aee:	4b1c      	ldr	r3, [pc, #112]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000af0:	2200      	movs	r2, #0
 8000af2:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000af4:	4b1a      	ldr	r3, [pc, #104]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000af6:	2200      	movs	r2, #0
 8000af8:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000afa:	4b19      	ldr	r3, [pc, #100]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000afc:	2200      	movs	r2, #0
 8000afe:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000b00:	4b17      	ldr	r3, [pc, #92]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b02:	2200      	movs	r2, #0
 8000b04:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 0x0;
 8000b06:	4b16      	ldr	r3, [pc, #88]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b08:	2200      	movs	r2, #0
 8000b0a:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000b0c:	4b14      	ldr	r3, [pc, #80]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b0e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000b12:	635a      	str	r2, [r3, #52]	; 0x34
  hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000b14:	4b12      	ldr	r3, [pc, #72]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b16:	2200      	movs	r2, #0
 8000b18:	639a      	str	r2, [r3, #56]	; 0x38
  hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000b1a:	4b11      	ldr	r3, [pc, #68]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b1c:	2200      	movs	r2, #0
 8000b1e:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000b20:	4b0f      	ldr	r3, [pc, #60]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b22:	2200      	movs	r2, #0
 8000b24:	641a      	str	r2, [r3, #64]	; 0x40
  hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000b26:	4b0e      	ldr	r3, [pc, #56]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b28:	2200      	movs	r2, #0
 8000b2a:	645a      	str	r2, [r3, #68]	; 0x44
  hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000b2c:	4b0c      	ldr	r3, [pc, #48]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b2e:	2200      	movs	r2, #0
 8000b30:	649a      	str	r2, [r3, #72]	; 0x48
  hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000b32:	4b0b      	ldr	r3, [pc, #44]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b34:	2200      	movs	r2, #0
 8000b36:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000b38:	4b09      	ldr	r3, [pc, #36]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b3a:	2200      	movs	r2, #0
 8000b3c:	651a      	str	r2, [r3, #80]	; 0x50
  hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000b3e:	4b08      	ldr	r3, [pc, #32]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b40:	2200      	movs	r2, #0
 8000b42:	655a      	str	r2, [r3, #84]	; 0x54
  hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000b44:	4b06      	ldr	r3, [pc, #24]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b46:	2200      	movs	r2, #0
 8000b48:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000b4a:	4805      	ldr	r0, [pc, #20]	; (8000b60 <MX_SPI1_Init+0xa4>)
 8000b4c:	f008 fbc6 	bl	80092dc <HAL_SPI_Init>
 8000b50:	4603      	mov	r3, r0
 8000b52:	2b00      	cmp	r3, #0
 8000b54:	d001      	beq.n	8000b5a <MX_SPI1_Init+0x9e>
  {
    Error_Handler();
 8000b56:	f000 f935 	bl	8000dc4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000b5a:	bf00      	nop
 8000b5c:	bd80      	pop	{r7, pc}
 8000b5e:	bf00      	nop
 8000b60:	240001a8 	.word	0x240001a8
 8000b64:	40013000 	.word	0x40013000

08000b68 <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 8000b68:	b580      	push	{r7, lr}
 8000b6a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 8000b6c:	4b27      	ldr	r3, [pc, #156]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000b6e:	4a28      	ldr	r2, [pc, #160]	; (8000c10 <MX_SPI5_Init+0xa8>)
 8000b70:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000b72:	4b26      	ldr	r3, [pc, #152]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000b74:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000b78:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 8000b7a:	4b24      	ldr	r3, [pc, #144]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000b7c:	2200      	movs	r2, #0
 8000b7e:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000b80:	4b22      	ldr	r3, [pc, #136]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000b82:	2207      	movs	r2, #7
 8000b84:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000b86:	4b21      	ldr	r3, [pc, #132]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000b88:	2200      	movs	r2, #0
 8000b8a:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000b8c:	4b1f      	ldr	r3, [pc, #124]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000b8e:	2200      	movs	r2, #0
 8000b90:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_HARD_OUTPUT;
 8000b92:	4b1e      	ldr	r3, [pc, #120]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000b94:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8000b98:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
 8000b9a:	4b1c      	ldr	r3, [pc, #112]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000b9c:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 8000ba0:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000ba2:	4b1a      	ldr	r3, [pc, #104]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000ba8:	4b18      	ldr	r3, [pc, #96]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000baa:	2200      	movs	r2, #0
 8000bac:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000bae:	4b17      	ldr	r3, [pc, #92]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 0x0;
 8000bb4:	4b15      	ldr	r3, [pc, #84]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi5.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000bba:	4b14      	ldr	r3, [pc, #80]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bbc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000bc0:	635a      	str	r2, [r3, #52]	; 0x34
  hspi5.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000bc2:	4b12      	ldr	r3, [pc, #72]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bc4:	2200      	movs	r2, #0
 8000bc6:	639a      	str	r2, [r3, #56]	; 0x38
  hspi5.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000bc8:	4b10      	ldr	r3, [pc, #64]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bca:	2200      	movs	r2, #0
 8000bcc:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi5.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000bce:	4b0f      	ldr	r3, [pc, #60]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bd0:	2200      	movs	r2, #0
 8000bd2:	641a      	str	r2, [r3, #64]	; 0x40
  hspi5.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000bd4:	4b0d      	ldr	r3, [pc, #52]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	645a      	str	r2, [r3, #68]	; 0x44
  hspi5.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000bda:	4b0c      	ldr	r3, [pc, #48]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bdc:	2200      	movs	r2, #0
 8000bde:	649a      	str	r2, [r3, #72]	; 0x48
  hspi5.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000be0:	4b0a      	ldr	r3, [pc, #40]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000be2:	2200      	movs	r2, #0
 8000be4:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi5.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000be6:	4b09      	ldr	r3, [pc, #36]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000be8:	2200      	movs	r2, #0
 8000bea:	651a      	str	r2, [r3, #80]	; 0x50
  hspi5.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000bec:	4b07      	ldr	r3, [pc, #28]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	655a      	str	r2, [r3, #84]	; 0x54
  hspi5.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000bf2:	4b06      	ldr	r3, [pc, #24]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bf4:	2200      	movs	r2, #0
 8000bf6:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000bf8:	4804      	ldr	r0, [pc, #16]	; (8000c0c <MX_SPI5_Init+0xa4>)
 8000bfa:	f008 fb6f 	bl	80092dc <HAL_SPI_Init>
 8000bfe:	4603      	mov	r3, r0
 8000c00:	2b00      	cmp	r3, #0
 8000c02:	d001      	beq.n	8000c08 <MX_SPI5_Init+0xa0>
  {
    Error_Handler();
 8000c04:	f000 f8de 	bl	8000dc4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */

  /* USER CODE END SPI5_Init 2 */

}
 8000c08:	bf00      	nop
 8000c0a:	bd80      	pop	{r7, pc}
 8000c0c:	24000230 	.word	0x24000230
 8000c10:	40015000 	.word	0x40015000

08000c14 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000c14:	b580      	push	{r7, lr}
 8000c16:	b082      	sub	sp, #8
 8000c18:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000c1a:	4b0d      	ldr	r3, [pc, #52]	; (8000c50 <MX_DMA_Init+0x3c>)
 8000c1c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000c20:	4a0b      	ldr	r2, [pc, #44]	; (8000c50 <MX_DMA_Init+0x3c>)
 8000c22:	f043 0301 	orr.w	r3, r3, #1
 8000c26:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000c2a:	4b09      	ldr	r3, [pc, #36]	; (8000c50 <MX_DMA_Init+0x3c>)
 8000c2c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000c30:	f003 0301 	and.w	r3, r3, #1
 8000c34:	607b      	str	r3, [r7, #4]
 8000c36:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8000c38:	2200      	movs	r2, #0
 8000c3a:	2100      	movs	r1, #0
 8000c3c:	200b      	movs	r0, #11
 8000c3e:	f002 f9ce 	bl	8002fde <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8000c42:	200b      	movs	r0, #11
 8000c44:	f002 f9e5 	bl	8003012 <HAL_NVIC_EnableIRQ>

}
 8000c48:	bf00      	nop
 8000c4a:	3708      	adds	r7, #8
 8000c4c:	46bd      	mov	sp, r7
 8000c4e:	bd80      	pop	{r7, pc}
 8000c50:	58024400 	.word	0x58024400

08000c54 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c54:	b580      	push	{r7, lr}
 8000c56:	b08c      	sub	sp, #48	; 0x30
 8000c58:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c5a:	f107 031c 	add.w	r3, r7, #28
 8000c5e:	2200      	movs	r2, #0
 8000c60:	601a      	str	r2, [r3, #0]
 8000c62:	605a      	str	r2, [r3, #4]
 8000c64:	609a      	str	r2, [r3, #8]
 8000c66:	60da      	str	r2, [r3, #12]
 8000c68:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c6a:	4b52      	ldr	r3, [pc, #328]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000c6c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c70:	4a50      	ldr	r2, [pc, #320]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000c72:	f043 0304 	orr.w	r3, r3, #4
 8000c76:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000c7a:	4b4e      	ldr	r3, [pc, #312]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000c7c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c80:	f003 0304 	and.w	r3, r3, #4
 8000c84:	61bb      	str	r3, [r7, #24]
 8000c86:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000c88:	4b4a      	ldr	r3, [pc, #296]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000c8a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c8e:	4a49      	ldr	r2, [pc, #292]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000c90:	f043 0320 	orr.w	r3, r3, #32
 8000c94:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000c98:	4b46      	ldr	r3, [pc, #280]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000c9a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000c9e:	f003 0320 	and.w	r3, r3, #32
 8000ca2:	617b      	str	r3, [r7, #20]
 8000ca4:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000ca6:	4b43      	ldr	r3, [pc, #268]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000ca8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cac:	4a41      	ldr	r2, [pc, #260]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000cae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000cb2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000cb6:	4b3f      	ldr	r3, [pc, #252]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000cb8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cbc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000cc0:	613b      	str	r3, [r7, #16]
 8000cc2:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cc4:	4b3b      	ldr	r3, [pc, #236]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000cc6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cca:	4a3a      	ldr	r2, [pc, #232]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000ccc:	f043 0301 	orr.w	r3, r3, #1
 8000cd0:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000cd4:	4b37      	ldr	r3, [pc, #220]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000cd6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cda:	f003 0301 	and.w	r3, r3, #1
 8000cde:	60fb      	str	r3, [r7, #12]
 8000ce0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ce2:	4b34      	ldr	r3, [pc, #208]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000ce4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ce8:	4a32      	ldr	r2, [pc, #200]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000cea:	f043 0302 	orr.w	r3, r3, #2
 8000cee:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000cf2:	4b30      	ldr	r3, [pc, #192]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000cf4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000cf8:	f003 0302 	and.w	r3, r3, #2
 8000cfc:	60bb      	str	r3, [r7, #8]
 8000cfe:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000d00:	4b2c      	ldr	r3, [pc, #176]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000d02:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d06:	4a2b      	ldr	r2, [pc, #172]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000d08:	f043 0308 	orr.w	r3, r3, #8
 8000d0c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d10:	4b28      	ldr	r3, [pc, #160]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000d12:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d16:	f003 0308 	and.w	r3, r3, #8
 8000d1a:	607b      	str	r3, [r7, #4]
 8000d1c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000d1e:	4b25      	ldr	r3, [pc, #148]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000d20:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d24:	4a23      	ldr	r2, [pc, #140]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000d26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d2a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d2e:	4b21      	ldr	r3, [pc, #132]	; (8000db4 <MX_GPIO_Init+0x160>)
 8000d30:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d34:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d38:	603b      	str	r3, [r7, #0]
 8000d3a:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_OK_GPIO_Port, LED_OK_Pin, GPIO_PIN_SET);
 8000d3c:	2201      	movs	r2, #1
 8000d3e:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000d42:	481d      	ldr	r0, [pc, #116]	; (8000db8 <MX_GPIO_Init+0x164>)
 8000d44:	f004 ff40 	bl	8005bc8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ILI9341_RESET_GPIO_Port, ILI9341_RESET_Pin, GPIO_PIN_SET);
 8000d48:	2201      	movs	r2, #1
 8000d4a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000d4e:	481b      	ldr	r0, [pc, #108]	; (8000dbc <MX_GPIO_Init+0x168>)
 8000d50:	f004 ff3a 	bl	8005bc8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_OK_Pin */
  GPIO_InitStruct.Pin = LED_OK_Pin;
 8000d54:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000d58:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d5a:	2301      	movs	r3, #1
 8000d5c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d5e:	2300      	movs	r3, #0
 8000d60:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d62:	2300      	movs	r3, #0
 8000d64:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(LED_OK_GPIO_Port, &GPIO_InitStruct);
 8000d66:	f107 031c 	add.w	r3, r7, #28
 8000d6a:	4619      	mov	r1, r3
 8000d6c:	4812      	ldr	r0, [pc, #72]	; (8000db8 <MX_GPIO_Init+0x164>)
 8000d6e:	f004 fd83 	bl	8005878 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_TOUCH_IQR_Pin */
  GPIO_InitStruct.Pin = ILI9341_TOUCH_IQR_Pin;
 8000d72:	2340      	movs	r3, #64	; 0x40
 8000d74:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000d76:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8000d7a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(ILI9341_TOUCH_IQR_GPIO_Port, &GPIO_InitStruct);
 8000d80:	f107 031c 	add.w	r3, r7, #28
 8000d84:	4619      	mov	r1, r3
 8000d86:	480e      	ldr	r0, [pc, #56]	; (8000dc0 <MX_GPIO_Init+0x16c>)
 8000d88:	f004 fd76 	bl	8005878 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_RESET_Pin */
  GPIO_InitStruct.Pin = ILI9341_RESET_Pin;
 8000d8c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000d90:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d92:	2301      	movs	r3, #1
 8000d94:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d96:	2300      	movs	r3, #0
 8000d98:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d9a:	2300      	movs	r3, #0
 8000d9c:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(ILI9341_RESET_GPIO_Port, &GPIO_InitStruct);
 8000d9e:	f107 031c 	add.w	r3, r7, #28
 8000da2:	4619      	mov	r1, r3
 8000da4:	4805      	ldr	r0, [pc, #20]	; (8000dbc <MX_GPIO_Init+0x168>)
 8000da6:	f004 fd67 	bl	8005878 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000daa:	bf00      	nop
 8000dac:	3730      	adds	r7, #48	; 0x30
 8000dae:	46bd      	mov	sp, r7
 8000db0:	bd80      	pop	{r7, pc}
 8000db2:	bf00      	nop
 8000db4:	58024400 	.word	0x58024400
 8000db8:	58020800 	.word	0x58020800
 8000dbc:	58021800 	.word	0x58021800
 8000dc0:	58020c00 	.word	0x58020c00

08000dc4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000dc4:	b480      	push	{r7}
 8000dc6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000dc8:	b672      	cpsid	i
}
 8000dca:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000dcc:	e7fe      	b.n	8000dcc <Error_Handler+0x8>
	...

08000dd0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000dd0:	b480      	push	{r7}
 8000dd2:	b083      	sub	sp, #12
 8000dd4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000dd6:	4b0a      	ldr	r3, [pc, #40]	; (8000e00 <HAL_MspInit+0x30>)
 8000dd8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000ddc:	4a08      	ldr	r2, [pc, #32]	; (8000e00 <HAL_MspInit+0x30>)
 8000dde:	f043 0302 	orr.w	r3, r3, #2
 8000de2:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8000de6:	4b06      	ldr	r3, [pc, #24]	; (8000e00 <HAL_MspInit+0x30>)
 8000de8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000dec:	f003 0302 	and.w	r3, r3, #2
 8000df0:	607b      	str	r3, [r7, #4]
 8000df2:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000df4:	bf00      	nop
 8000df6:	370c      	adds	r7, #12
 8000df8:	46bd      	mov	sp, r7
 8000dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dfe:	4770      	bx	lr
 8000e00:	58024400 	.word	0x58024400

08000e04 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000e04:	b580      	push	{r7, lr}
 8000e06:	b0bc      	sub	sp, #240	; 0xf0
 8000e08:	af00      	add	r7, sp, #0
 8000e0a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e0c:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000e10:	2200      	movs	r2, #0
 8000e12:	601a      	str	r2, [r3, #0]
 8000e14:	605a      	str	r2, [r3, #4]
 8000e16:	609a      	str	r2, [r3, #8]
 8000e18:	60da      	str	r2, [r3, #12]
 8000e1a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000e1c:	f107 0320 	add.w	r3, r7, #32
 8000e20:	22b8      	movs	r2, #184	; 0xb8
 8000e22:	2100      	movs	r1, #0
 8000e24:	4618      	mov	r0, r3
 8000e26:	f020 ffbe 	bl	8021da6 <memset>
  if(hadc->Instance==ADC1)
 8000e2a:	687b      	ldr	r3, [r7, #4]
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	4a59      	ldr	r2, [pc, #356]	; (8000f94 <HAL_ADC_MspInit+0x190>)
 8000e30:	4293      	cmp	r3, r2
 8000e32:	f040 80ab 	bne.w	8000f8c <HAL_ADC_MspInit+0x188>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8000e36:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8000e3a:	f04f 0300 	mov.w	r3, #0
 8000e3e:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.PLL2.PLL2M = 4;
 8000e42:	2304      	movs	r3, #4
 8000e44:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.PLL2.PLL2N = 12;
 8000e46:	230c      	movs	r3, #12
 8000e48:	62fb      	str	r3, [r7, #44]	; 0x2c
    PeriphClkInitStruct.PLL2.PLL2P = 2;
 8000e4a:	2302      	movs	r3, #2
 8000e4c:	633b      	str	r3, [r7, #48]	; 0x30
    PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8000e4e:	2302      	movs	r3, #2
 8000e50:	637b      	str	r3, [r7, #52]	; 0x34
    PeriphClkInitStruct.PLL2.PLL2R = 2;
 8000e52:	2302      	movs	r3, #2
 8000e54:	63bb      	str	r3, [r7, #56]	; 0x38
    PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 8000e56:	23c0      	movs	r3, #192	; 0xc0
 8000e58:	63fb      	str	r3, [r7, #60]	; 0x3c
    PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 8000e5a:	2300      	movs	r3, #0
 8000e5c:	643b      	str	r3, [r7, #64]	; 0x40
    PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8000e5e:	2300      	movs	r3, #0
 8000e60:	647b      	str	r3, [r7, #68]	; 0x44
    PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 8000e62:	2300      	movs	r3, #0
 8000e64:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e68:	f107 0320 	add.w	r3, r7, #32
 8000e6c:	4618      	mov	r0, r3
 8000e6e:	f005 fe4f 	bl	8006b10 <HAL_RCCEx_PeriphCLKConfig>
 8000e72:	4603      	mov	r3, r0
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d001      	beq.n	8000e7c <HAL_ADC_MspInit+0x78>
    {
      Error_Handler();
 8000e78:	f7ff ffa4 	bl	8000dc4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 8000e7c:	4b46      	ldr	r3, [pc, #280]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000e7e:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000e82:	4a45      	ldr	r2, [pc, #276]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000e84:	f043 0320 	orr.w	r3, r3, #32
 8000e88:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000e8c:	4b42      	ldr	r3, [pc, #264]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000e8e:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000e92:	f003 0320 	and.w	r3, r3, #32
 8000e96:	61fb      	str	r3, [r7, #28]
 8000e98:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e9a:	4b3f      	ldr	r3, [pc, #252]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000e9c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ea0:	4a3d      	ldr	r2, [pc, #244]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000ea2:	f043 0301 	orr.w	r3, r3, #1
 8000ea6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000eaa:	4b3b      	ldr	r3, [pc, #236]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000eac:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000eb0:	f003 0301 	and.w	r3, r3, #1
 8000eb4:	61bb      	str	r3, [r7, #24]
 8000eb6:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000eb8:	4b37      	ldr	r3, [pc, #220]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000eba:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ebe:	4a36      	ldr	r2, [pc, #216]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000ec0:	f043 0304 	orr.w	r3, r3, #4
 8000ec4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000ec8:	4b33      	ldr	r3, [pc, #204]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000eca:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ece:	f003 0304 	and.w	r3, r3, #4
 8000ed2:	617b      	str	r3, [r7, #20]
 8000ed4:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ed6:	4b30      	ldr	r3, [pc, #192]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000ed8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000edc:	4a2e      	ldr	r2, [pc, #184]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000ede:	f043 0302 	orr.w	r3, r3, #2
 8000ee2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000ee6:	4b2c      	ldr	r3, [pc, #176]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000ee8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000eec:	f003 0302 	and.w	r3, r3, #2
 8000ef0:	613b      	str	r3, [r7, #16]
 8000ef2:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000ef4:	4b28      	ldr	r3, [pc, #160]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000ef6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000efa:	4a27      	ldr	r2, [pc, #156]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000efc:	f043 0320 	orr.w	r3, r3, #32
 8000f00:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000f04:	4b24      	ldr	r3, [pc, #144]	; (8000f98 <HAL_ADC_MspInit+0x194>)
 8000f06:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000f0a:	f003 0320 	and.w	r3, r3, #32
 8000f0e:	60fb      	str	r3, [r7, #12]
 8000f10:	68fb      	ldr	r3, [r7, #12]
    PC4     ------> ADC1_INP4
    PB1     ------> ADC1_INP5
    PF11     ------> ADC1_INP2
    PF12     ------> ADC1_INP6
    */
    GPIO_InitStruct.Pin = POT1_Pin|POT2_Pin;
 8000f12:	23c0      	movs	r3, #192	; 0xc0
 8000f14:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000f18:	2303      	movs	r3, #3
 8000f1a:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f1e:	2300      	movs	r3, #0
 8000f20:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f24:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000f28:	4619      	mov	r1, r3
 8000f2a:	481c      	ldr	r0, [pc, #112]	; (8000f9c <HAL_ADC_MspInit+0x198>)
 8000f2c:	f004 fca4 	bl	8005878 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT4_Pin;
 8000f30:	2310      	movs	r3, #16
 8000f32:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000f36:	2303      	movs	r3, #3
 8000f38:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f3c:	2300      	movs	r3, #0
 8000f3e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(POT4_GPIO_Port, &GPIO_InitStruct);
 8000f42:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000f46:	4619      	mov	r1, r3
 8000f48:	4815      	ldr	r0, [pc, #84]	; (8000fa0 <HAL_ADC_MspInit+0x19c>)
 8000f4a:	f004 fc95 	bl	8005878 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT3_Pin;
 8000f4e:	2302      	movs	r3, #2
 8000f50:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000f54:	2303      	movs	r3, #3
 8000f56:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f5a:	2300      	movs	r3, #0
 8000f5c:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(POT3_GPIO_Port, &GPIO_InitStruct);
 8000f60:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000f64:	4619      	mov	r1, r3
 8000f66:	480f      	ldr	r0, [pc, #60]	; (8000fa4 <HAL_ADC_MspInit+0x1a0>)
 8000f68:	f004 fc86 	bl	8005878 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT5_Pin|POT6_Pin;
 8000f6c:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8000f70:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000f74:	2303      	movs	r3, #3
 8000f76:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000f80:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000f84:	4619      	mov	r1, r3
 8000f86:	4808      	ldr	r0, [pc, #32]	; (8000fa8 <HAL_ADC_MspInit+0x1a4>)
 8000f88:	f004 fc76 	bl	8005878 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8000f8c:	bf00      	nop
 8000f8e:	37f0      	adds	r7, #240	; 0xf0
 8000f90:	46bd      	mov	sp, r7
 8000f92:	bd80      	pop	{r7, pc}
 8000f94:	40022000 	.word	0x40022000
 8000f98:	58024400 	.word	0x58024400
 8000f9c:	58020000 	.word	0x58020000
 8000fa0:	58020800 	.word	0x58020800
 8000fa4:	58020400 	.word	0x58020400
 8000fa8:	58021400 	.word	0x58021400

08000fac <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000fac:	b480      	push	{r7}
 8000fae:	b085      	sub	sp, #20
 8000fb0:	af00      	add	r7, sp, #0
 8000fb2:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000fb4:	687b      	ldr	r3, [r7, #4]
 8000fb6:	681b      	ldr	r3, [r3, #0]
 8000fb8:	4a0b      	ldr	r2, [pc, #44]	; (8000fe8 <HAL_CRC_MspInit+0x3c>)
 8000fba:	4293      	cmp	r3, r2
 8000fbc:	d10e      	bne.n	8000fdc <HAL_CRC_MspInit+0x30>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000fbe:	4b0b      	ldr	r3, [pc, #44]	; (8000fec <HAL_CRC_MspInit+0x40>)
 8000fc0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000fc4:	4a09      	ldr	r2, [pc, #36]	; (8000fec <HAL_CRC_MspInit+0x40>)
 8000fc6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000fca:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000fce:	4b07      	ldr	r3, [pc, #28]	; (8000fec <HAL_CRC_MspInit+0x40>)
 8000fd0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000fd4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8000fd8:	60fb      	str	r3, [r7, #12]
 8000fda:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000fdc:	bf00      	nop
 8000fde:	3714      	adds	r7, #20
 8000fe0:	46bd      	mov	sp, r7
 8000fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe6:	4770      	bx	lr
 8000fe8:	58024c00 	.word	0x58024c00
 8000fec:	58024400 	.word	0x58024400

08000ff0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	b0bc      	sub	sp, #240	; 0xf0
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ff8:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	601a      	str	r2, [r3, #0]
 8001000:	605a      	str	r2, [r3, #4]
 8001002:	609a      	str	r2, [r3, #8]
 8001004:	60da      	str	r2, [r3, #12]
 8001006:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001008:	f107 0320 	add.w	r3, r7, #32
 800100c:	22b8      	movs	r2, #184	; 0xb8
 800100e:	2100      	movs	r1, #0
 8001010:	4618      	mov	r0, r3
 8001012:	f020 fec8 	bl	8021da6 <memset>
  if(hspi->Instance==SPI1)
 8001016:	687b      	ldr	r3, [r7, #4]
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	4a92      	ldr	r2, [pc, #584]	; (8001264 <HAL_SPI_MspInit+0x274>)
 800101c:	4293      	cmp	r3, r2
 800101e:	f040 8090 	bne.w	8001142 <HAL_SPI_MspInit+0x152>

  /* USER CODE END SPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI1;
 8001022:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001026:	f04f 0300 	mov.w	r3, #0
 800102a:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_CLKP;
 800102e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001032:	67fb      	str	r3, [r7, #124]	; 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001034:	f107 0320 	add.w	r3, r7, #32
 8001038:	4618      	mov	r0, r3
 800103a:	f005 fd69 	bl	8006b10 <HAL_RCCEx_PeriphCLKConfig>
 800103e:	4603      	mov	r3, r0
 8001040:	2b00      	cmp	r3, #0
 8001042:	d001      	beq.n	8001048 <HAL_SPI_MspInit+0x58>
    {
      Error_Handler();
 8001044:	f7ff febe 	bl	8000dc4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8001048:	4b87      	ldr	r3, [pc, #540]	; (8001268 <HAL_SPI_MspInit+0x278>)
 800104a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800104e:	4a86      	ldr	r2, [pc, #536]	; (8001268 <HAL_SPI_MspInit+0x278>)
 8001050:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001054:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8001058:	4b83      	ldr	r3, [pc, #524]	; (8001268 <HAL_SPI_MspInit+0x278>)
 800105a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800105e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001062:	61fb      	str	r3, [r7, #28]
 8001064:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001066:	4b80      	ldr	r3, [pc, #512]	; (8001268 <HAL_SPI_MspInit+0x278>)
 8001068:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800106c:	4a7e      	ldr	r2, [pc, #504]	; (8001268 <HAL_SPI_MspInit+0x278>)
 800106e:	f043 0301 	orr.w	r3, r3, #1
 8001072:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001076:	4b7c      	ldr	r3, [pc, #496]	; (8001268 <HAL_SPI_MspInit+0x278>)
 8001078:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800107c:	f003 0301 	and.w	r3, r3, #1
 8001080:	61bb      	str	r3, [r7, #24]
 8001082:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001084:	4b78      	ldr	r3, [pc, #480]	; (8001268 <HAL_SPI_MspInit+0x278>)
 8001086:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800108a:	4a77      	ldr	r2, [pc, #476]	; (8001268 <HAL_SPI_MspInit+0x278>)
 800108c:	f043 0308 	orr.w	r3, r3, #8
 8001090:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001094:	4b74      	ldr	r3, [pc, #464]	; (8001268 <HAL_SPI_MspInit+0x278>)
 8001096:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800109a:	f003 0308 	and.w	r3, r3, #8
 800109e:	617b      	str	r3, [r7, #20]
 80010a0:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80010a2:	4b71      	ldr	r3, [pc, #452]	; (8001268 <HAL_SPI_MspInit+0x278>)
 80010a4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80010a8:	4a6f      	ldr	r2, [pc, #444]	; (8001268 <HAL_SPI_MspInit+0x278>)
 80010aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010ae:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80010b2:	4b6d      	ldr	r3, [pc, #436]	; (8001268 <HAL_SPI_MspInit+0x278>)
 80010b4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80010b8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80010bc:	613b      	str	r3, [r7, #16]
 80010be:	693b      	ldr	r3, [r7, #16]
    PA4     ------> SPI1_NSS
    PA5     ------> SPI1_SCK
    PD7     ------> SPI1_MOSI
    PG9     ------> SPI1_MISO
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 80010c0:	2330      	movs	r3, #48	; 0x30
 80010c2:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010c6:	2302      	movs	r3, #2
 80010c8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010cc:	2300      	movs	r3, #0
 80010ce:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010d2:	2300      	movs	r3, #0
 80010d4:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80010d8:	2305      	movs	r3, #5
 80010da:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010de:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80010e2:	4619      	mov	r1, r3
 80010e4:	4861      	ldr	r0, [pc, #388]	; (800126c <HAL_SPI_MspInit+0x27c>)
 80010e6:	f004 fbc7 	bl	8005878 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80010ea:	2380      	movs	r3, #128	; 0x80
 80010ec:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010f0:	2302      	movs	r3, #2
 80010f2:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010f6:	2300      	movs	r3, #0
 80010f8:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010fc:	2300      	movs	r3, #0
 80010fe:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8001102:	2305      	movs	r3, #5
 8001104:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001108:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800110c:	4619      	mov	r1, r3
 800110e:	4858      	ldr	r0, [pc, #352]	; (8001270 <HAL_SPI_MspInit+0x280>)
 8001110:	f004 fbb2 	bl	8005878 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001114:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001118:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800111c:	2302      	movs	r3, #2
 800111e:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001122:	2300      	movs	r3, #0
 8001124:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001128:	2300      	movs	r3, #0
 800112a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800112e:	2305      	movs	r3, #5
 8001130:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001134:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001138:	4619      	mov	r1, r3
 800113a:	484e      	ldr	r0, [pc, #312]	; (8001274 <HAL_SPI_MspInit+0x284>)
 800113c:	f004 fb9c 	bl	8005878 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001140:	e08b      	b.n	800125a <HAL_SPI_MspInit+0x26a>
  else if(hspi->Instance==SPI5)
 8001142:	687b      	ldr	r3, [r7, #4]
 8001144:	681b      	ldr	r3, [r3, #0]
 8001146:	4a4c      	ldr	r2, [pc, #304]	; (8001278 <HAL_SPI_MspInit+0x288>)
 8001148:	4293      	cmp	r3, r2
 800114a:	f040 8086 	bne.w	800125a <HAL_SPI_MspInit+0x26a>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI5;
 800114e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001152:	f04f 0300 	mov.w	r3, #0
 8001156:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_HSI;
 800115a:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800115e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001162:	f107 0320 	add.w	r3, r7, #32
 8001166:	4618      	mov	r0, r3
 8001168:	f005 fcd2 	bl	8006b10 <HAL_RCCEx_PeriphCLKConfig>
 800116c:	4603      	mov	r3, r0
 800116e:	2b00      	cmp	r3, #0
 8001170:	d001      	beq.n	8001176 <HAL_SPI_MspInit+0x186>
      Error_Handler();
 8001172:	f7ff fe27 	bl	8000dc4 <Error_Handler>
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001176:	4b3c      	ldr	r3, [pc, #240]	; (8001268 <HAL_SPI_MspInit+0x278>)
 8001178:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800117c:	4a3a      	ldr	r2, [pc, #232]	; (8001268 <HAL_SPI_MspInit+0x278>)
 800117e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001182:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8001186:	4b38      	ldr	r3, [pc, #224]	; (8001268 <HAL_SPI_MspInit+0x278>)
 8001188:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800118c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001190:	60fb      	str	r3, [r7, #12]
 8001192:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001194:	4b34      	ldr	r3, [pc, #208]	; (8001268 <HAL_SPI_MspInit+0x278>)
 8001196:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800119a:	4a33      	ldr	r2, [pc, #204]	; (8001268 <HAL_SPI_MspInit+0x278>)
 800119c:	f043 0320 	orr.w	r3, r3, #32
 80011a0:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011a4:	4b30      	ldr	r3, [pc, #192]	; (8001268 <HAL_SPI_MspInit+0x278>)
 80011a6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011aa:	f003 0320 	and.w	r3, r3, #32
 80011ae:	60bb      	str	r3, [r7, #8]
 80011b0:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80011b2:	f44f 7370 	mov.w	r3, #960	; 0x3c0
 80011b6:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011ba:	2302      	movs	r3, #2
 80011bc:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011c0:	2300      	movs	r3, #0
 80011c2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011c6:	2300      	movs	r3, #0
 80011c8:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80011cc:	2305      	movs	r3, #5
 80011ce:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80011d2:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80011d6:	4619      	mov	r1, r3
 80011d8:	4828      	ldr	r0, [pc, #160]	; (800127c <HAL_SPI_MspInit+0x28c>)
 80011da:	f004 fb4d 	bl	8005878 <HAL_GPIO_Init>
    hdma_spi5_tx.Instance = DMA1_Stream0;
 80011de:	4b28      	ldr	r3, [pc, #160]	; (8001280 <HAL_SPI_MspInit+0x290>)
 80011e0:	4a28      	ldr	r2, [pc, #160]	; (8001284 <HAL_SPI_MspInit+0x294>)
 80011e2:	601a      	str	r2, [r3, #0]
    hdma_spi5_tx.Init.Request = DMA_REQUEST_SPI5_TX;
 80011e4:	4b26      	ldr	r3, [pc, #152]	; (8001280 <HAL_SPI_MspInit+0x290>)
 80011e6:	2256      	movs	r2, #86	; 0x56
 80011e8:	605a      	str	r2, [r3, #4]
    hdma_spi5_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80011ea:	4b25      	ldr	r3, [pc, #148]	; (8001280 <HAL_SPI_MspInit+0x290>)
 80011ec:	2240      	movs	r2, #64	; 0x40
 80011ee:	609a      	str	r2, [r3, #8]
    hdma_spi5_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80011f0:	4b23      	ldr	r3, [pc, #140]	; (8001280 <HAL_SPI_MspInit+0x290>)
 80011f2:	2200      	movs	r2, #0
 80011f4:	60da      	str	r2, [r3, #12]
    hdma_spi5_tx.Init.MemInc = DMA_MINC_ENABLE;
 80011f6:	4b22      	ldr	r3, [pc, #136]	; (8001280 <HAL_SPI_MspInit+0x290>)
 80011f8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80011fc:	611a      	str	r2, [r3, #16]
    hdma_spi5_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80011fe:	4b20      	ldr	r3, [pc, #128]	; (8001280 <HAL_SPI_MspInit+0x290>)
 8001200:	2200      	movs	r2, #0
 8001202:	615a      	str	r2, [r3, #20]
    hdma_spi5_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001204:	4b1e      	ldr	r3, [pc, #120]	; (8001280 <HAL_SPI_MspInit+0x290>)
 8001206:	2200      	movs	r2, #0
 8001208:	619a      	str	r2, [r3, #24]
    hdma_spi5_tx.Init.Mode = DMA_NORMAL;
 800120a:	4b1d      	ldr	r3, [pc, #116]	; (8001280 <HAL_SPI_MspInit+0x290>)
 800120c:	2200      	movs	r2, #0
 800120e:	61da      	str	r2, [r3, #28]
    hdma_spi5_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001210:	4b1b      	ldr	r3, [pc, #108]	; (8001280 <HAL_SPI_MspInit+0x290>)
 8001212:	2200      	movs	r2, #0
 8001214:	621a      	str	r2, [r3, #32]
    hdma_spi5_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 8001216:	4b1a      	ldr	r3, [pc, #104]	; (8001280 <HAL_SPI_MspInit+0x290>)
 8001218:	2204      	movs	r2, #4
 800121a:	625a      	str	r2, [r3, #36]	; 0x24
    hdma_spi5_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 800121c:	4b18      	ldr	r3, [pc, #96]	; (8001280 <HAL_SPI_MspInit+0x290>)
 800121e:	2203      	movs	r2, #3
 8001220:	629a      	str	r2, [r3, #40]	; 0x28
    hdma_spi5_tx.Init.MemBurst = DMA_MBURST_SINGLE;
 8001222:	4b17      	ldr	r3, [pc, #92]	; (8001280 <HAL_SPI_MspInit+0x290>)
 8001224:	2200      	movs	r2, #0
 8001226:	62da      	str	r2, [r3, #44]	; 0x2c
    hdma_spi5_tx.Init.PeriphBurst = DMA_PBURST_SINGLE;
 8001228:	4b15      	ldr	r3, [pc, #84]	; (8001280 <HAL_SPI_MspInit+0x290>)
 800122a:	2200      	movs	r2, #0
 800122c:	631a      	str	r2, [r3, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_spi5_tx) != HAL_OK)
 800122e:	4814      	ldr	r0, [pc, #80]	; (8001280 <HAL_SPI_MspInit+0x290>)
 8001230:	f001 fffc 	bl	800322c <HAL_DMA_Init>
 8001234:	4603      	mov	r3, r0
 8001236:	2b00      	cmp	r3, #0
 8001238:	d001      	beq.n	800123e <HAL_SPI_MspInit+0x24e>
      Error_Handler();
 800123a:	f7ff fdc3 	bl	8000dc4 <Error_Handler>
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi5_tx);
 800123e:	687b      	ldr	r3, [r7, #4]
 8001240:	4a0f      	ldr	r2, [pc, #60]	; (8001280 <HAL_SPI_MspInit+0x290>)
 8001242:	679a      	str	r2, [r3, #120]	; 0x78
 8001244:	4a0e      	ldr	r2, [pc, #56]	; (8001280 <HAL_SPI_MspInit+0x290>)
 8001246:	687b      	ldr	r3, [r7, #4]
 8001248:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_NVIC_SetPriority(SPI5_IRQn, 0, 0);
 800124a:	2200      	movs	r2, #0
 800124c:	2100      	movs	r1, #0
 800124e:	2055      	movs	r0, #85	; 0x55
 8001250:	f001 fec5 	bl	8002fde <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI5_IRQn);
 8001254:	2055      	movs	r0, #85	; 0x55
 8001256:	f001 fedc 	bl	8003012 <HAL_NVIC_EnableIRQ>
}
 800125a:	bf00      	nop
 800125c:	37f0      	adds	r7, #240	; 0xf0
 800125e:	46bd      	mov	sp, r7
 8001260:	bd80      	pop	{r7, pc}
 8001262:	bf00      	nop
 8001264:	40013000 	.word	0x40013000
 8001268:	58024400 	.word	0x58024400
 800126c:	58020000 	.word	0x58020000
 8001270:	58020c00 	.word	0x58020c00
 8001274:	58021800 	.word	0x58021800
 8001278:	40015000 	.word	0x40015000
 800127c:	58021400 	.word	0x58021400
 8001280:	240002b8 	.word	0x240002b8
 8001284:	40020010 	.word	0x40020010

08001288 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001288:	b480      	push	{r7}
 800128a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800128c:	e7fe      	b.n	800128c <NMI_Handler+0x4>

0800128e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800128e:	b480      	push	{r7}
 8001290:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001292:	e7fe      	b.n	8001292 <HardFault_Handler+0x4>

08001294 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001294:	b480      	push	{r7}
 8001296:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001298:	e7fe      	b.n	8001298 <MemManage_Handler+0x4>

0800129a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800129a:	b480      	push	{r7}
 800129c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800129e:	e7fe      	b.n	800129e <BusFault_Handler+0x4>

080012a0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80012a0:	b480      	push	{r7}
 80012a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80012a4:	e7fe      	b.n	80012a4 <UsageFault_Handler+0x4>

080012a6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80012a6:	b480      	push	{r7}
 80012a8:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80012aa:	bf00      	nop
 80012ac:	46bd      	mov	sp, r7
 80012ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b2:	4770      	bx	lr

080012b4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80012b4:	b480      	push	{r7}
 80012b6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80012b8:	bf00      	nop
 80012ba:	46bd      	mov	sp, r7
 80012bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012c0:	4770      	bx	lr

080012c2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80012c2:	b480      	push	{r7}
 80012c4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80012c6:	bf00      	nop
 80012c8:	46bd      	mov	sp, r7
 80012ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ce:	4770      	bx	lr

080012d0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80012d0:	b580      	push	{r7, lr}
 80012d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80012d4:	f000 f9f0 	bl	80016b8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80012d8:	bf00      	nop
 80012da:	bd80      	pop	{r7, pc}

080012dc <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 80012dc:	b580      	push	{r7, lr}
 80012de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi5_tx);
 80012e0:	4802      	ldr	r0, [pc, #8]	; (80012ec <DMA1_Stream0_IRQHandler+0x10>)
 80012e2:	f002 ffab 	bl	800423c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 80012e6:	bf00      	nop
 80012e8:	bd80      	pop	{r7, pc}
 80012ea:	bf00      	nop
 80012ec:	240002b8 	.word	0x240002b8

080012f0 <SPI5_IRQHandler>:

/**
  * @brief This function handles SPI5 global interrupt.
  */
void SPI5_IRQHandler(void)
{
 80012f0:	b580      	push	{r7, lr}
 80012f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI5_IRQn 0 */

  /* USER CODE END SPI5_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi5);
 80012f4:	4802      	ldr	r0, [pc, #8]	; (8001300 <SPI5_IRQHandler+0x10>)
 80012f6:	f008 fc45 	bl	8009b84 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI5_IRQn 1 */

  /* USER CODE END SPI5_IRQn 1 */
}
 80012fa:	bf00      	nop
 80012fc:	bd80      	pop	{r7, pc}
 80012fe:	bf00      	nop
 8001300:	24000230 	.word	0x24000230

08001304 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001304:	b480      	push	{r7}
 8001306:	af00      	add	r7, sp, #0
  return 1;
 8001308:	2301      	movs	r3, #1
}
 800130a:	4618      	mov	r0, r3
 800130c:	46bd      	mov	sp, r7
 800130e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001312:	4770      	bx	lr

08001314 <_kill>:

int _kill(int pid, int sig)
{
 8001314:	b580      	push	{r7, lr}
 8001316:	b082      	sub	sp, #8
 8001318:	af00      	add	r7, sp, #0
 800131a:	6078      	str	r0, [r7, #4]
 800131c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800131e:	f020 fde5 	bl	8021eec <__errno>
 8001322:	4603      	mov	r3, r0
 8001324:	2216      	movs	r2, #22
 8001326:	601a      	str	r2, [r3, #0]
  return -1;
 8001328:	f04f 33ff 	mov.w	r3, #4294967295
}
 800132c:	4618      	mov	r0, r3
 800132e:	3708      	adds	r7, #8
 8001330:	46bd      	mov	sp, r7
 8001332:	bd80      	pop	{r7, pc}

08001334 <_exit>:

void _exit (int status)
{
 8001334:	b580      	push	{r7, lr}
 8001336:	b082      	sub	sp, #8
 8001338:	af00      	add	r7, sp, #0
 800133a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800133c:	f04f 31ff 	mov.w	r1, #4294967295
 8001340:	6878      	ldr	r0, [r7, #4]
 8001342:	f7ff ffe7 	bl	8001314 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001346:	e7fe      	b.n	8001346 <_exit+0x12>

08001348 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001348:	b580      	push	{r7, lr}
 800134a:	b086      	sub	sp, #24
 800134c:	af00      	add	r7, sp, #0
 800134e:	60f8      	str	r0, [r7, #12]
 8001350:	60b9      	str	r1, [r7, #8]
 8001352:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001354:	2300      	movs	r3, #0
 8001356:	617b      	str	r3, [r7, #20]
 8001358:	e00a      	b.n	8001370 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800135a:	f3af 8000 	nop.w
 800135e:	4601      	mov	r1, r0
 8001360:	68bb      	ldr	r3, [r7, #8]
 8001362:	1c5a      	adds	r2, r3, #1
 8001364:	60ba      	str	r2, [r7, #8]
 8001366:	b2ca      	uxtb	r2, r1
 8001368:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800136a:	697b      	ldr	r3, [r7, #20]
 800136c:	3301      	adds	r3, #1
 800136e:	617b      	str	r3, [r7, #20]
 8001370:	697a      	ldr	r2, [r7, #20]
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	429a      	cmp	r2, r3
 8001376:	dbf0      	blt.n	800135a <_read+0x12>
  }

  return len;
 8001378:	687b      	ldr	r3, [r7, #4]
}
 800137a:	4618      	mov	r0, r3
 800137c:	3718      	adds	r7, #24
 800137e:	46bd      	mov	sp, r7
 8001380:	bd80      	pop	{r7, pc}

08001382 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001382:	b580      	push	{r7, lr}
 8001384:	b086      	sub	sp, #24
 8001386:	af00      	add	r7, sp, #0
 8001388:	60f8      	str	r0, [r7, #12]
 800138a:	60b9      	str	r1, [r7, #8]
 800138c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800138e:	2300      	movs	r3, #0
 8001390:	617b      	str	r3, [r7, #20]
 8001392:	e009      	b.n	80013a8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001394:	68bb      	ldr	r3, [r7, #8]
 8001396:	1c5a      	adds	r2, r3, #1
 8001398:	60ba      	str	r2, [r7, #8]
 800139a:	781b      	ldrb	r3, [r3, #0]
 800139c:	4618      	mov	r0, r3
 800139e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80013a2:	697b      	ldr	r3, [r7, #20]
 80013a4:	3301      	adds	r3, #1
 80013a6:	617b      	str	r3, [r7, #20]
 80013a8:	697a      	ldr	r2, [r7, #20]
 80013aa:	687b      	ldr	r3, [r7, #4]
 80013ac:	429a      	cmp	r2, r3
 80013ae:	dbf1      	blt.n	8001394 <_write+0x12>
  }
  return len;
 80013b0:	687b      	ldr	r3, [r7, #4]
}
 80013b2:	4618      	mov	r0, r3
 80013b4:	3718      	adds	r7, #24
 80013b6:	46bd      	mov	sp, r7
 80013b8:	bd80      	pop	{r7, pc}

080013ba <_close>:

int _close(int file)
{
 80013ba:	b480      	push	{r7}
 80013bc:	b083      	sub	sp, #12
 80013be:	af00      	add	r7, sp, #0
 80013c0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80013c2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80013c6:	4618      	mov	r0, r3
 80013c8:	370c      	adds	r7, #12
 80013ca:	46bd      	mov	sp, r7
 80013cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013d0:	4770      	bx	lr

080013d2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80013d2:	b480      	push	{r7}
 80013d4:	b083      	sub	sp, #12
 80013d6:	af00      	add	r7, sp, #0
 80013d8:	6078      	str	r0, [r7, #4]
 80013da:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80013dc:	683b      	ldr	r3, [r7, #0]
 80013de:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80013e2:	605a      	str	r2, [r3, #4]
  return 0;
 80013e4:	2300      	movs	r3, #0
}
 80013e6:	4618      	mov	r0, r3
 80013e8:	370c      	adds	r7, #12
 80013ea:	46bd      	mov	sp, r7
 80013ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013f0:	4770      	bx	lr

080013f2 <_isatty>:

int _isatty(int file)
{
 80013f2:	b480      	push	{r7}
 80013f4:	b083      	sub	sp, #12
 80013f6:	af00      	add	r7, sp, #0
 80013f8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80013fa:	2301      	movs	r3, #1
}
 80013fc:	4618      	mov	r0, r3
 80013fe:	370c      	adds	r7, #12
 8001400:	46bd      	mov	sp, r7
 8001402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001406:	4770      	bx	lr

08001408 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001408:	b480      	push	{r7}
 800140a:	b085      	sub	sp, #20
 800140c:	af00      	add	r7, sp, #0
 800140e:	60f8      	str	r0, [r7, #12]
 8001410:	60b9      	str	r1, [r7, #8]
 8001412:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001414:	2300      	movs	r3, #0
}
 8001416:	4618      	mov	r0, r3
 8001418:	3714      	adds	r7, #20
 800141a:	46bd      	mov	sp, r7
 800141c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001420:	4770      	bx	lr
	...

08001424 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001424:	b580      	push	{r7, lr}
 8001426:	b086      	sub	sp, #24
 8001428:	af00      	add	r7, sp, #0
 800142a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800142c:	4a14      	ldr	r2, [pc, #80]	; (8001480 <_sbrk+0x5c>)
 800142e:	4b15      	ldr	r3, [pc, #84]	; (8001484 <_sbrk+0x60>)
 8001430:	1ad3      	subs	r3, r2, r3
 8001432:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001434:	697b      	ldr	r3, [r7, #20]
 8001436:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001438:	4b13      	ldr	r3, [pc, #76]	; (8001488 <_sbrk+0x64>)
 800143a:	681b      	ldr	r3, [r3, #0]
 800143c:	2b00      	cmp	r3, #0
 800143e:	d102      	bne.n	8001446 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001440:	4b11      	ldr	r3, [pc, #68]	; (8001488 <_sbrk+0x64>)
 8001442:	4a12      	ldr	r2, [pc, #72]	; (800148c <_sbrk+0x68>)
 8001444:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001446:	4b10      	ldr	r3, [pc, #64]	; (8001488 <_sbrk+0x64>)
 8001448:	681a      	ldr	r2, [r3, #0]
 800144a:	687b      	ldr	r3, [r7, #4]
 800144c:	4413      	add	r3, r2
 800144e:	693a      	ldr	r2, [r7, #16]
 8001450:	429a      	cmp	r2, r3
 8001452:	d207      	bcs.n	8001464 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001454:	f020 fd4a 	bl	8021eec <__errno>
 8001458:	4603      	mov	r3, r0
 800145a:	220c      	movs	r2, #12
 800145c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800145e:	f04f 33ff 	mov.w	r3, #4294967295
 8001462:	e009      	b.n	8001478 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001464:	4b08      	ldr	r3, [pc, #32]	; (8001488 <_sbrk+0x64>)
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800146a:	4b07      	ldr	r3, [pc, #28]	; (8001488 <_sbrk+0x64>)
 800146c:	681a      	ldr	r2, [r3, #0]
 800146e:	687b      	ldr	r3, [r7, #4]
 8001470:	4413      	add	r3, r2
 8001472:	4a05      	ldr	r2, [pc, #20]	; (8001488 <_sbrk+0x64>)
 8001474:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001476:	68fb      	ldr	r3, [r7, #12]
}
 8001478:	4618      	mov	r0, r3
 800147a:	3718      	adds	r7, #24
 800147c:	46bd      	mov	sp, r7
 800147e:	bd80      	pop	{r7, pc}
 8001480:	24050000 	.word	0x24050000
 8001484:	00000400 	.word	0x00000400
 8001488:	24000330 	.word	0x24000330
 800148c:	24002ab0 	.word	0x24002ab0

08001490 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001490:	b480      	push	{r7}
 8001492:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8001494:	4b32      	ldr	r3, [pc, #200]	; (8001560 <SystemInit+0xd0>)
 8001496:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800149a:	4a31      	ldr	r2, [pc, #196]	; (8001560 <SystemInit+0xd0>)
 800149c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80014a0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80014a4:	4b2f      	ldr	r3, [pc, #188]	; (8001564 <SystemInit+0xd4>)
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	f003 030f 	and.w	r3, r3, #15
 80014ac:	2b06      	cmp	r3, #6
 80014ae:	d807      	bhi.n	80014c0 <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80014b0:	4b2c      	ldr	r3, [pc, #176]	; (8001564 <SystemInit+0xd4>)
 80014b2:	681b      	ldr	r3, [r3, #0]
 80014b4:	f023 030f 	bic.w	r3, r3, #15
 80014b8:	4a2a      	ldr	r2, [pc, #168]	; (8001564 <SystemInit+0xd4>)
 80014ba:	f043 0307 	orr.w	r3, r3, #7
 80014be:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 80014c0:	4b29      	ldr	r3, [pc, #164]	; (8001568 <SystemInit+0xd8>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	4a28      	ldr	r2, [pc, #160]	; (8001568 <SystemInit+0xd8>)
 80014c6:	f043 0301 	orr.w	r3, r3, #1
 80014ca:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80014cc:	4b26      	ldr	r3, [pc, #152]	; (8001568 <SystemInit+0xd8>)
 80014ce:	2200      	movs	r2, #0
 80014d0:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80014d2:	4b25      	ldr	r3, [pc, #148]	; (8001568 <SystemInit+0xd8>)
 80014d4:	681a      	ldr	r2, [r3, #0]
 80014d6:	4924      	ldr	r1, [pc, #144]	; (8001568 <SystemInit+0xd8>)
 80014d8:	4b24      	ldr	r3, [pc, #144]	; (800156c <SystemInit+0xdc>)
 80014da:	4013      	ands	r3, r2
 80014dc:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80014de:	4b21      	ldr	r3, [pc, #132]	; (8001564 <SystemInit+0xd4>)
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	f003 0308 	and.w	r3, r3, #8
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d007      	beq.n	80014fa <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80014ea:	4b1e      	ldr	r3, [pc, #120]	; (8001564 <SystemInit+0xd4>)
 80014ec:	681b      	ldr	r3, [r3, #0]
 80014ee:	f023 030f 	bic.w	r3, r3, #15
 80014f2:	4a1c      	ldr	r2, [pc, #112]	; (8001564 <SystemInit+0xd4>)
 80014f4:	f043 0307 	orr.w	r3, r3, #7
 80014f8:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 80014fa:	4b1b      	ldr	r3, [pc, #108]	; (8001568 <SystemInit+0xd8>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 8001500:	4b19      	ldr	r3, [pc, #100]	; (8001568 <SystemInit+0xd8>)
 8001502:	2200      	movs	r2, #0
 8001504:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 8001506:	4b18      	ldr	r3, [pc, #96]	; (8001568 <SystemInit+0xd8>)
 8001508:	2200      	movs	r2, #0
 800150a:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 800150c:	4b16      	ldr	r3, [pc, #88]	; (8001568 <SystemInit+0xd8>)
 800150e:	4a18      	ldr	r2, [pc, #96]	; (8001570 <SystemInit+0xe0>)
 8001510:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 8001512:	4b15      	ldr	r3, [pc, #84]	; (8001568 <SystemInit+0xd8>)
 8001514:	4a17      	ldr	r2, [pc, #92]	; (8001574 <SystemInit+0xe4>)
 8001516:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8001518:	4b13      	ldr	r3, [pc, #76]	; (8001568 <SystemInit+0xd8>)
 800151a:	4a17      	ldr	r2, [pc, #92]	; (8001578 <SystemInit+0xe8>)
 800151c:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 800151e:	4b12      	ldr	r3, [pc, #72]	; (8001568 <SystemInit+0xd8>)
 8001520:	2200      	movs	r2, #0
 8001522:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 8001524:	4b10      	ldr	r3, [pc, #64]	; (8001568 <SystemInit+0xd8>)
 8001526:	4a14      	ldr	r2, [pc, #80]	; (8001578 <SystemInit+0xe8>)
 8001528:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 800152a:	4b0f      	ldr	r3, [pc, #60]	; (8001568 <SystemInit+0xd8>)
 800152c:	2200      	movs	r2, #0
 800152e:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 8001530:	4b0d      	ldr	r3, [pc, #52]	; (8001568 <SystemInit+0xd8>)
 8001532:	4a11      	ldr	r2, [pc, #68]	; (8001578 <SystemInit+0xe8>)
 8001534:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8001536:	4b0c      	ldr	r3, [pc, #48]	; (8001568 <SystemInit+0xd8>)
 8001538:	2200      	movs	r2, #0
 800153a:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 800153c:	4b0a      	ldr	r3, [pc, #40]	; (8001568 <SystemInit+0xd8>)
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	4a09      	ldr	r2, [pc, #36]	; (8001568 <SystemInit+0xd8>)
 8001542:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001546:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8001548:	4b07      	ldr	r3, [pc, #28]	; (8001568 <SystemInit+0xd8>)
 800154a:	2200      	movs	r2, #0
 800154c:	661a      	str	r2, [r3, #96]	; 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 800154e:	4b0b      	ldr	r3, [pc, #44]	; (800157c <SystemInit+0xec>)
 8001550:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8001554:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8001556:	bf00      	nop
 8001558:	46bd      	mov	sp, r7
 800155a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800155e:	4770      	bx	lr
 8001560:	e000ed00 	.word	0xe000ed00
 8001564:	52002000 	.word	0x52002000
 8001568:	58024400 	.word	0x58024400
 800156c:	eaf6ed7f 	.word	0xeaf6ed7f
 8001570:	02020200 	.word	0x02020200
 8001574:	01ff0000 	.word	0x01ff0000
 8001578:	01010280 	.word	0x01010280
 800157c:	52004000 	.word	0x52004000

08001580 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8001580:	f8df d034 	ldr.w	sp, [pc, #52]	; 80015b8 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8001584:	f7ff ff84 	bl	8001490 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001588:	480c      	ldr	r0, [pc, #48]	; (80015bc <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800158a:	490d      	ldr	r1, [pc, #52]	; (80015c0 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 800158c:	4a0d      	ldr	r2, [pc, #52]	; (80015c4 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800158e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001590:	e002      	b.n	8001598 <LoopCopyDataInit>

08001592 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001592:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001594:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001596:	3304      	adds	r3, #4

08001598 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001598:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800159a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800159c:	d3f9      	bcc.n	8001592 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800159e:	4a0a      	ldr	r2, [pc, #40]	; (80015c8 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80015a0:	4c0a      	ldr	r4, [pc, #40]	; (80015cc <LoopFillZerobss+0x22>)
  movs r3, #0
 80015a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80015a4:	e001      	b.n	80015aa <LoopFillZerobss>

080015a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80015a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80015a8:	3204      	adds	r2, #4

080015aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80015aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80015ac:	d3fb      	bcc.n	80015a6 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80015ae:	f020 fca3 	bl	8021ef8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80015b2:	f7ff f93f 	bl	8000834 <main>
  bx  lr
 80015b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80015b8:	24050000 	.word	0x24050000
  ldr r0, =_sdata
 80015bc:	24000000 	.word	0x24000000
  ldr r1, =_edata
 80015c0:	240000f8 	.word	0x240000f8
  ldr r2, =_sidata
 80015c4:	08024d04 	.word	0x08024d04
  ldr r2, =_sbss
 80015c8:	240000f8 	.word	0x240000f8
  ldr r4, =_ebss
 80015cc:	24002aac 	.word	0x24002aac

080015d0 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80015d0:	e7fe      	b.n	80015d0 <ADC3_IRQHandler>
	...

080015d4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80015d4:	b580      	push	{r7, lr}
 80015d6:	b082      	sub	sp, #8
 80015d8:	af00      	add	r7, sp, #0
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80015da:	2003      	movs	r0, #3
 80015dc:	f001 fcf4 	bl	8002fc8 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 80015e0:	f005 f8d6 	bl	8006790 <HAL_RCC_GetSysClockFreq>
 80015e4:	4602      	mov	r2, r0
 80015e6:	4b15      	ldr	r3, [pc, #84]	; (800163c <HAL_Init+0x68>)
 80015e8:	699b      	ldr	r3, [r3, #24]
 80015ea:	0a1b      	lsrs	r3, r3, #8
 80015ec:	f003 030f 	and.w	r3, r3, #15
 80015f0:	4913      	ldr	r1, [pc, #76]	; (8001640 <HAL_Init+0x6c>)
 80015f2:	5ccb      	ldrb	r3, [r1, r3]
 80015f4:	f003 031f 	and.w	r3, r3, #31
 80015f8:	fa22 f303 	lsr.w	r3, r2, r3
 80015fc:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80015fe:	4b0f      	ldr	r3, [pc, #60]	; (800163c <HAL_Init+0x68>)
 8001600:	699b      	ldr	r3, [r3, #24]
 8001602:	f003 030f 	and.w	r3, r3, #15
 8001606:	4a0e      	ldr	r2, [pc, #56]	; (8001640 <HAL_Init+0x6c>)
 8001608:	5cd3      	ldrb	r3, [r2, r3]
 800160a:	f003 031f 	and.w	r3, r3, #31
 800160e:	687a      	ldr	r2, [r7, #4]
 8001610:	fa22 f303 	lsr.w	r3, r2, r3
 8001614:	4a0b      	ldr	r2, [pc, #44]	; (8001644 <HAL_Init+0x70>)
 8001616:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8001618:	4a0b      	ldr	r2, [pc, #44]	; (8001648 <HAL_Init+0x74>)
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 800161e:	200f      	movs	r0, #15
 8001620:	f000 f814 	bl	800164c <HAL_InitTick>
 8001624:	4603      	mov	r3, r0
 8001626:	2b00      	cmp	r3, #0
 8001628:	d001      	beq.n	800162e <HAL_Init+0x5a>
  {
    return HAL_ERROR;
 800162a:	2301      	movs	r3, #1
 800162c:	e002      	b.n	8001634 <HAL_Init+0x60>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 800162e:	f7ff fbcf 	bl	8000dd0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001632:	2300      	movs	r3, #0
}
 8001634:	4618      	mov	r0, r3
 8001636:	3708      	adds	r7, #8
 8001638:	46bd      	mov	sp, r7
 800163a:	bd80      	pop	{r7, pc}
 800163c:	58024400 	.word	0x58024400
 8001640:	08023978 	.word	0x08023978
 8001644:	24000008 	.word	0x24000008
 8001648:	24000004 	.word	0x24000004

0800164c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800164c:	b580      	push	{r7, lr}
 800164e:	b082      	sub	sp, #8
 8001650:	af00      	add	r7, sp, #0
 8001652:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 8001654:	4b15      	ldr	r3, [pc, #84]	; (80016ac <HAL_InitTick+0x60>)
 8001656:	781b      	ldrb	r3, [r3, #0]
 8001658:	2b00      	cmp	r3, #0
 800165a:	d101      	bne.n	8001660 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 800165c:	2301      	movs	r3, #1
 800165e:	e021      	b.n	80016a4 <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8001660:	4b13      	ldr	r3, [pc, #76]	; (80016b0 <HAL_InitTick+0x64>)
 8001662:	681a      	ldr	r2, [r3, #0]
 8001664:	4b11      	ldr	r3, [pc, #68]	; (80016ac <HAL_InitTick+0x60>)
 8001666:	781b      	ldrb	r3, [r3, #0]
 8001668:	4619      	mov	r1, r3
 800166a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800166e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001672:	fbb2 f3f3 	udiv	r3, r2, r3
 8001676:	4618      	mov	r0, r3
 8001678:	f001 fcd9 	bl	800302e <HAL_SYSTICK_Config>
 800167c:	4603      	mov	r3, r0
 800167e:	2b00      	cmp	r3, #0
 8001680:	d001      	beq.n	8001686 <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 8001682:	2301      	movs	r3, #1
 8001684:	e00e      	b.n	80016a4 <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001686:	687b      	ldr	r3, [r7, #4]
 8001688:	2b0f      	cmp	r3, #15
 800168a:	d80a      	bhi.n	80016a2 <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800168c:	2200      	movs	r2, #0
 800168e:	6879      	ldr	r1, [r7, #4]
 8001690:	f04f 30ff 	mov.w	r0, #4294967295
 8001694:	f001 fca3 	bl	8002fde <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001698:	4a06      	ldr	r2, [pc, #24]	; (80016b4 <HAL_InitTick+0x68>)
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800169e:	2300      	movs	r3, #0
 80016a0:	e000      	b.n	80016a4 <HAL_InitTick+0x58>
    return HAL_ERROR;
 80016a2:	2301      	movs	r3, #1
}
 80016a4:	4618      	mov	r0, r3
 80016a6:	3708      	adds	r7, #8
 80016a8:	46bd      	mov	sp, r7
 80016aa:	bd80      	pop	{r7, pc}
 80016ac:	24000010 	.word	0x24000010
 80016b0:	24000004 	.word	0x24000004
 80016b4:	2400000c 	.word	0x2400000c

080016b8 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80016b8:	b480      	push	{r7}
 80016ba:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 80016bc:	4b06      	ldr	r3, [pc, #24]	; (80016d8 <HAL_IncTick+0x20>)
 80016be:	781b      	ldrb	r3, [r3, #0]
 80016c0:	461a      	mov	r2, r3
 80016c2:	4b06      	ldr	r3, [pc, #24]	; (80016dc <HAL_IncTick+0x24>)
 80016c4:	681b      	ldr	r3, [r3, #0]
 80016c6:	4413      	add	r3, r2
 80016c8:	4a04      	ldr	r2, [pc, #16]	; (80016dc <HAL_IncTick+0x24>)
 80016ca:	6013      	str	r3, [r2, #0]
}
 80016cc:	bf00      	nop
 80016ce:	46bd      	mov	sp, r7
 80016d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016d4:	4770      	bx	lr
 80016d6:	bf00      	nop
 80016d8:	24000010 	.word	0x24000010
 80016dc:	24000334 	.word	0x24000334

080016e0 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80016e0:	b480      	push	{r7}
 80016e2:	af00      	add	r7, sp, #0
  return uwTick;
 80016e4:	4b03      	ldr	r3, [pc, #12]	; (80016f4 <HAL_GetTick+0x14>)
 80016e6:	681b      	ldr	r3, [r3, #0]
}
 80016e8:	4618      	mov	r0, r3
 80016ea:	46bd      	mov	sp, r7
 80016ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016f0:	4770      	bx	lr
 80016f2:	bf00      	nop
 80016f4:	24000334 	.word	0x24000334

080016f8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80016f8:	b580      	push	{r7, lr}
 80016fa:	b084      	sub	sp, #16
 80016fc:	af00      	add	r7, sp, #0
 80016fe:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001700:	f7ff ffee 	bl	80016e0 <HAL_GetTick>
 8001704:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001706:	687b      	ldr	r3, [r7, #4]
 8001708:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800170a:	68fb      	ldr	r3, [r7, #12]
 800170c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001710:	d005      	beq.n	800171e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001712:	4b0a      	ldr	r3, [pc, #40]	; (800173c <HAL_Delay+0x44>)
 8001714:	781b      	ldrb	r3, [r3, #0]
 8001716:	461a      	mov	r2, r3
 8001718:	68fb      	ldr	r3, [r7, #12]
 800171a:	4413      	add	r3, r2
 800171c:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 800171e:	bf00      	nop
 8001720:	f7ff ffde 	bl	80016e0 <HAL_GetTick>
 8001724:	4602      	mov	r2, r0
 8001726:	68bb      	ldr	r3, [r7, #8]
 8001728:	1ad3      	subs	r3, r2, r3
 800172a:	68fa      	ldr	r2, [r7, #12]
 800172c:	429a      	cmp	r2, r3
 800172e:	d8f7      	bhi.n	8001720 <HAL_Delay+0x28>
  {
  }
}
 8001730:	bf00      	nop
 8001732:	bf00      	nop
 8001734:	3710      	adds	r7, #16
 8001736:	46bd      	mov	sp, r7
 8001738:	bd80      	pop	{r7, pc}
 800173a:	bf00      	nop
 800173c:	24000010 	.word	0x24000010

08001740 <LL_ADC_SetCommonClock>:
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
{
 8001740:	b480      	push	{r7}
 8001742:	b083      	sub	sp, #12
 8001744:	af00      	add	r7, sp, #0
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	689b      	ldr	r3, [r3, #8]
 800174e:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8001752:	683b      	ldr	r3, [r7, #0]
 8001754:	431a      	orrs	r2, r3
 8001756:	687b      	ldr	r3, [r7, #4]
 8001758:	609a      	str	r2, [r3, #8]
}
 800175a:	bf00      	nop
 800175c:	370c      	adds	r7, #12
 800175e:	46bd      	mov	sp, r7
 8001760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001764:	4770      	bx	lr

08001766 <LL_ADC_SetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t PathInternal)
{
 8001766:	b480      	push	{r7}
 8001768:	b083      	sub	sp, #12
 800176a:	af00      	add	r7, sp, #0
 800176c:	6078      	str	r0, [r7, #4]
 800176e:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	689b      	ldr	r3, [r3, #8]
 8001774:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8001778:	683b      	ldr	r3, [r7, #0]
 800177a:	431a      	orrs	r2, r3
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	609a      	str	r2, [r3, #8]
}
 8001780:	bf00      	nop
 8001782:	370c      	adds	r7, #12
 8001784:	46bd      	mov	sp, r7
 8001786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800178a:	4770      	bx	lr

0800178c <LL_ADC_GetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  */
__STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
{
 800178c:	b480      	push	{r7}
 800178e:	b083      	sub	sp, #12
 8001790:	af00      	add	r7, sp, #0
 8001792:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	689b      	ldr	r3, [r3, #8]
 8001798:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
}
 800179c:	4618      	mov	r0, r3
 800179e:	370c      	adds	r7, #12
 80017a0:	46bd      	mov	sp, r7
 80017a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a6:	4770      	bx	lr

080017a8 <LL_ADC_SetOffset>:
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32_t OffsetLevel)
{
 80017a8:	b480      	push	{r7}
 80017aa:	b087      	sub	sp, #28
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	60f8      	str	r0, [r7, #12]
 80017b0:	60b9      	str	r1, [r7, #8]
 80017b2:	607a      	str	r2, [r7, #4]
 80017b4:	603b      	str	r3, [r7, #0]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 80017b6:	68fb      	ldr	r3, [r7, #12]
 80017b8:	3360      	adds	r3, #96	; 0x60
 80017ba:	461a      	mov	r2, r3
 80017bc:	68bb      	ldr	r3, [r7, #8]
 80017be:	009b      	lsls	r3, r3, #2
 80017c0:	4413      	add	r3, r2
 80017c2:	617b      	str	r3, [r7, #20]
#if defined(ADC_VER_V5_V90)
  if (ADCx == ADC3)
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	4a10      	ldr	r2, [pc, #64]	; (8001808 <LL_ADC_SetOffset+0x60>)
 80017c8:	4293      	cmp	r3, r2
 80017ca:	d10b      	bne.n	80017e4 <LL_ADC_SetOffset+0x3c>
  {
    MODIFY_REG(*preg,
 80017cc:	697b      	ldr	r3, [r7, #20]
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 80017d6:	683b      	ldr	r3, [r7, #0]
 80017d8:	4313      	orrs	r3, r2
 80017da:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 80017de:	697b      	ldr	r3, [r7, #20]
 80017e0:	601a      	str	r2, [r3, #0]
  {
    MODIFY_REG(*preg,
               ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
               (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
  }
}
 80017e2:	e00b      	b.n	80017fc <LL_ADC_SetOffset+0x54>
    MODIFY_REG(*preg,
 80017e4:	697b      	ldr	r3, [r7, #20]
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	f003 4200 	and.w	r2, r3, #2147483648	; 0x80000000
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	f003 41f8 	and.w	r1, r3, #2080374784	; 0x7c000000
 80017f2:	683b      	ldr	r3, [r7, #0]
 80017f4:	430b      	orrs	r3, r1
 80017f6:	431a      	orrs	r2, r3
 80017f8:	697b      	ldr	r3, [r7, #20]
 80017fa:	601a      	str	r2, [r3, #0]
}
 80017fc:	bf00      	nop
 80017fe:	371c      	adds	r7, #28
 8001800:	46bd      	mov	sp, r7
 8001802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001806:	4770      	bx	lr
 8001808:	58026000 	.word	0x58026000

0800180c <LL_ADC_GetOffsetChannel>:
  *         (1, 2) For ADC channel read back from ADC register,
  *                comparison with internal channel parameter to be done
  *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
  */
__STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
{
 800180c:	b480      	push	{r7}
 800180e:	b085      	sub	sp, #20
 8001810:	af00      	add	r7, sp, #0
 8001812:	6078      	str	r0, [r7, #4]
 8001814:	6039      	str	r1, [r7, #0]
  const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	3360      	adds	r3, #96	; 0x60
 800181a:	461a      	mov	r2, r3
 800181c:	683b      	ldr	r3, [r7, #0]
 800181e:	009b      	lsls	r3, r3, #2
 8001820:	4413      	add	r3, r2
 8001822:	60fb      	str	r3, [r7, #12]

  return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
 8001824:	68fb      	ldr	r3, [r7, #12]
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	f003 43f8 	and.w	r3, r3, #2080374784	; 0x7c000000
}
 800182c:	4618      	mov	r0, r3
 800182e:	3714      	adds	r7, #20
 8001830:	46bd      	mov	sp, r7
 8001832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001836:	4770      	bx	lr

08001838 <LL_ADC_SetDataRightShift>:
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthShift)
{
 8001838:	b480      	push	{r7}
 800183a:	b085      	sub	sp, #20
 800183c:	af00      	add	r7, sp, #0
 800183e:	60f8      	str	r0, [r7, #12]
 8001840:	60b9      	str	r1, [r7, #8]
 8001842:	607a      	str	r2, [r7, #4]
  MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RSHIFT4), RigthShift << (Offsety & 0x1FUL));
 8001844:	68fb      	ldr	r3, [r7, #12]
 8001846:	691b      	ldr	r3, [r3, #16]
 8001848:	f423 42f0 	bic.w	r2, r3, #30720	; 0x7800
 800184c:	68bb      	ldr	r3, [r7, #8]
 800184e:	f003 031f 	and.w	r3, r3, #31
 8001852:	6879      	ldr	r1, [r7, #4]
 8001854:	fa01 f303 	lsl.w	r3, r1, r3
 8001858:	431a      	orrs	r2, r3
 800185a:	68fb      	ldr	r3, [r7, #12]
 800185c:	611a      	str	r2, [r3, #16]
}
 800185e:	bf00      	nop
 8001860:	3714      	adds	r7, #20
 8001862:	46bd      	mov	sp, r7
 8001864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001868:	4770      	bx	lr
	...

0800186c <LL_ADC_SetOffsetSignedSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSignedSaturation)
{
 800186c:	b480      	push	{r7}
 800186e:	b087      	sub	sp, #28
 8001870:	af00      	add	r7, sp, #0
 8001872:	60f8      	str	r0, [r7, #12]
 8001874:	60b9      	str	r1, [r7, #8]
 8001876:	607a      	str	r2, [r7, #4]
#if defined(ADC_VER_V5_V90)
  if (ADCx == ADC3)
 8001878:	68fb      	ldr	r3, [r7, #12]
 800187a:	4a0c      	ldr	r2, [pc, #48]	; (80018ac <LL_ADC_SetOffsetSignedSaturation+0x40>)
 800187c:	4293      	cmp	r3, r2
 800187e:	d00e      	beq.n	800189e <LL_ADC_SetOffsetSignedSaturation+0x32>
    /* Function not available on this instance */
  }
  else
#endif  /* ADC_VER_V5_V90 */
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001880:	68fb      	ldr	r3, [r7, #12]
 8001882:	3360      	adds	r3, #96	; 0x60
 8001884:	461a      	mov	r2, r3
 8001886:	68bb      	ldr	r3, [r7, #8]
 8001888:	009b      	lsls	r3, r3, #2
 800188a:	4413      	add	r3, r2
 800188c:	617b      	str	r3, [r7, #20]
    MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 800188e:	697b      	ldr	r3, [r7, #20]
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	431a      	orrs	r2, r3
 800189a:	697b      	ldr	r3, [r7, #20]
 800189c:	601a      	str	r2, [r3, #0]
  }
}
 800189e:	bf00      	nop
 80018a0:	371c      	adds	r7, #28
 80018a2:	46bd      	mov	sp, r7
 80018a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a8:	4770      	bx	lr
 80018aa:	bf00      	nop
 80018ac:	58026000 	.word	0x58026000

080018b0 <LL_ADC_SetOffsetSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSaturation)
{
 80018b0:	b480      	push	{r7}
 80018b2:	b087      	sub	sp, #28
 80018b4:	af00      	add	r7, sp, #0
 80018b6:	60f8      	str	r0, [r7, #12]
 80018b8:	60b9      	str	r1, [r7, #8]
 80018ba:	607a      	str	r2, [r7, #4]
  if (ADCx == ADC3)
 80018bc:	68fb      	ldr	r3, [r7, #12]
 80018be:	4a0c      	ldr	r2, [pc, #48]	; (80018f0 <LL_ADC_SetOffsetSaturation+0x40>)
 80018c0:	4293      	cmp	r3, r2
 80018c2:	d10e      	bne.n	80018e2 <LL_ADC_SetOffsetSaturation+0x32>
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 80018c4:	68fb      	ldr	r3, [r7, #12]
 80018c6:	3360      	adds	r3, #96	; 0x60
 80018c8:	461a      	mov	r2, r3
 80018ca:	68bb      	ldr	r3, [r7, #8]
 80018cc:	009b      	lsls	r3, r3, #2
 80018ce:	4413      	add	r3, r2
 80018d0:	617b      	str	r3, [r7, #20]

    MODIFY_REG(*preg,
 80018d2:	697b      	ldr	r3, [r7, #20]
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	431a      	orrs	r2, r3
 80018de:	697b      	ldr	r3, [r7, #20]
 80018e0:	601a      	str	r2, [r3, #0]
               ADC3_OFR1_SATEN,
               OffsetSaturation);
  }
}
 80018e2:	bf00      	nop
 80018e4:	371c      	adds	r7, #28
 80018e6:	46bd      	mov	sp, r7
 80018e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ec:	4770      	bx	lr
 80018ee:	bf00      	nop
 80018f0:	58026000 	.word	0x58026000

080018f4 <LL_ADC_SetOffsetSign>:
  *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
  *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
{
 80018f4:	b480      	push	{r7}
 80018f6:	b087      	sub	sp, #28
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	60f8      	str	r0, [r7, #12]
 80018fc:	60b9      	str	r1, [r7, #8]
 80018fe:	607a      	str	r2, [r7, #4]
  if (ADCx == ADC3)
 8001900:	68fb      	ldr	r3, [r7, #12]
 8001902:	4a0c      	ldr	r2, [pc, #48]	; (8001934 <LL_ADC_SetOffsetSign+0x40>)
 8001904:	4293      	cmp	r3, r2
 8001906:	d10e      	bne.n	8001926 <LL_ADC_SetOffsetSign+0x32>
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001908:	68fb      	ldr	r3, [r7, #12]
 800190a:	3360      	adds	r3, #96	; 0x60
 800190c:	461a      	mov	r2, r3
 800190e:	68bb      	ldr	r3, [r7, #8]
 8001910:	009b      	lsls	r3, r3, #2
 8001912:	4413      	add	r3, r2
 8001914:	617b      	str	r3, [r7, #20]

    MODIFY_REG(*preg,
 8001916:	697b      	ldr	r3, [r7, #20]
 8001918:	681b      	ldr	r3, [r3, #0]
 800191a:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	431a      	orrs	r2, r3
 8001922:	697b      	ldr	r3, [r7, #20]
 8001924:	601a      	str	r2, [r3, #0]
               ADC3_OFR1_OFFSETPOS,
               OffsetSign);
  }
}
 8001926:	bf00      	nop
 8001928:	371c      	adds	r7, #28
 800192a:	46bd      	mov	sp, r7
 800192c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001930:	4770      	bx	lr
 8001932:	bf00      	nop
 8001934:	58026000 	.word	0x58026000

08001938 <LL_ADC_SetOffsetState>:
  *         @arg @ref LL_ADC_OFFSET_DISABLE
  *         @arg @ref LL_ADC_OFFSET_ENABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetState)
{
 8001938:	b480      	push	{r7}
 800193a:	b087      	sub	sp, #28
 800193c:	af00      	add	r7, sp, #0
 800193e:	60f8      	str	r0, [r7, #12]
 8001940:	60b9      	str	r1, [r7, #8]
 8001942:	607a      	str	r2, [r7, #4]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001944:	68fb      	ldr	r3, [r7, #12]
 8001946:	3360      	adds	r3, #96	; 0x60
 8001948:	461a      	mov	r2, r3
 800194a:	68bb      	ldr	r3, [r7, #8]
 800194c:	009b      	lsls	r3, r3, #2
 800194e:	4413      	add	r3, r2
 8001950:	617b      	str	r3, [r7, #20]
  if (ADCx == ADC3)
 8001952:	68fb      	ldr	r3, [r7, #12]
 8001954:	4a0c      	ldr	r2, [pc, #48]	; (8001988 <LL_ADC_SetOffsetState+0x50>)
 8001956:	4293      	cmp	r3, r2
 8001958:	d108      	bne.n	800196c <LL_ADC_SetOffsetState+0x34>
  {
    MODIFY_REG(*preg,
 800195a:	697b      	ldr	r3, [r7, #20]
 800195c:	681b      	ldr	r3, [r3, #0]
 800195e:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	431a      	orrs	r2, r3
 8001966:	697b      	ldr	r3, [r7, #20]
 8001968:	601a      	str	r2, [r3, #0]
  {
    MODIFY_REG(*preg,
               ADC_OFR1_SSATE,
               OffsetState);
  }
}
 800196a:	e007      	b.n	800197c <LL_ADC_SetOffsetState+0x44>
    MODIFY_REG(*preg,
 800196c:	697b      	ldr	r3, [r7, #20]
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	431a      	orrs	r2, r3
 8001978:	697b      	ldr	r3, [r7, #20]
 800197a:	601a      	str	r2, [r3, #0]
}
 800197c:	bf00      	nop
 800197e:	371c      	adds	r7, #28
 8001980:	46bd      	mov	sp, r7
 8001982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001986:	4770      	bx	lr
 8001988:	58026000 	.word	0x58026000

0800198c <LL_ADC_REG_SetSequencerRanks>:
  *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to 8 Ms/s)).
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channel)
{
 800198c:	b480      	push	{r7}
 800198e:	b087      	sub	sp, #28
 8001990:	af00      	add	r7, sp, #0
 8001992:	60f8      	str	r0, [r7, #12]
 8001994:	60b9      	str	r1, [r7, #8]
 8001996:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "Channel" with bits position          */
  /* in register and register position depending on parameter "Rank".         */
  /* Parameters "Rank" and "Channel" are used with masks because containing   */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGOFFSET_POS));
 8001998:	68fb      	ldr	r3, [r7, #12]
 800199a:	3330      	adds	r3, #48	; 0x30
 800199c:	461a      	mov	r2, r3
 800199e:	68bb      	ldr	r3, [r7, #8]
 80019a0:	0a1b      	lsrs	r3, r3, #8
 80019a2:	009b      	lsls	r3, r3, #2
 80019a4:	f003 030c 	and.w	r3, r3, #12
 80019a8:	4413      	add	r3, r2
 80019aa:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 80019ac:	697b      	ldr	r3, [r7, #20]
 80019ae:	681a      	ldr	r2, [r3, #0]
 80019b0:	68bb      	ldr	r3, [r7, #8]
 80019b2:	f003 031f 	and.w	r3, r3, #31
 80019b6:	211f      	movs	r1, #31
 80019b8:	fa01 f303 	lsl.w	r3, r1, r3
 80019bc:	43db      	mvns	r3, r3
 80019be:	401a      	ands	r2, r3
 80019c0:	687b      	ldr	r3, [r7, #4]
 80019c2:	0e9b      	lsrs	r3, r3, #26
 80019c4:	f003 011f 	and.w	r1, r3, #31
 80019c8:	68bb      	ldr	r3, [r7, #8]
 80019ca:	f003 031f 	and.w	r3, r3, #31
 80019ce:	fa01 f303 	lsl.w	r3, r1, r3
 80019d2:	431a      	orrs	r2, r3
 80019d4:	697b      	ldr	r3, [r7, #20]
 80019d6:	601a      	str	r2, [r3, #0]
             ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
             ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
}
 80019d8:	bf00      	nop
 80019da:	371c      	adds	r7, #28
 80019dc:	46bd      	mov	sp, r7
 80019de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e2:	4770      	bx	lr

080019e4 <LL_ADC_SetChannelSamplingTime>:
  *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
  *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SamplingTime)
{
 80019e4:	b480      	push	{r7}
 80019e6:	b087      	sub	sp, #28
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	60f8      	str	r0, [r7, #12]
 80019ec:	60b9      	str	r1, [r7, #8]
 80019ee:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "SamplingTime" with bits position     */
  /* in register and register position depending on parameter "Channel".      */
  /* Parameter "Channel" is used with masks because containing                */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
 80019f0:	68fb      	ldr	r3, [r7, #12]
 80019f2:	3314      	adds	r3, #20
 80019f4:	461a      	mov	r2, r3
 80019f6:	68bb      	ldr	r3, [r7, #8]
 80019f8:	0e5b      	lsrs	r3, r3, #25
 80019fa:	009b      	lsls	r3, r3, #2
 80019fc:	f003 0304 	and.w	r3, r3, #4
 8001a00:	4413      	add	r3, r2
 8001a02:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001a04:	697b      	ldr	r3, [r7, #20]
 8001a06:	681a      	ldr	r2, [r3, #0]
 8001a08:	68bb      	ldr	r3, [r7, #8]
 8001a0a:	0d1b      	lsrs	r3, r3, #20
 8001a0c:	f003 031f 	and.w	r3, r3, #31
 8001a10:	2107      	movs	r1, #7
 8001a12:	fa01 f303 	lsl.w	r3, r1, r3
 8001a16:	43db      	mvns	r3, r3
 8001a18:	401a      	ands	r2, r3
 8001a1a:	68bb      	ldr	r3, [r7, #8]
 8001a1c:	0d1b      	lsrs	r3, r3, #20
 8001a1e:	f003 031f 	and.w	r3, r3, #31
 8001a22:	6879      	ldr	r1, [r7, #4]
 8001a24:	fa01 f303 	lsl.w	r3, r1, r3
 8001a28:	431a      	orrs	r2, r3
 8001a2a:	697b      	ldr	r3, [r7, #20]
 8001a2c:	601a      	str	r2, [r3, #0]
             ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS),
             SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS));
}
 8001a2e:	bf00      	nop
 8001a30:	371c      	adds	r7, #28
 8001a32:	46bd      	mov	sp, r7
 8001a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a38:	4770      	bx	lr
	...

08001a3c <LL_ADC_SetChannelSingleDiff>:
  *         @arg @ref LL_ADC_SINGLE_ENDED
  *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SingleDiff)
{
 8001a3c:	b480      	push	{r7}
 8001a3e:	b085      	sub	sp, #20
 8001a40:	af00      	add	r7, sp, #0
 8001a42:	60f8      	str	r0, [r7, #12]
 8001a44:	60b9      	str	r1, [r7, #8]
 8001a46:	607a      	str	r2, [r7, #4]
#if defined(ADC_VER_V5_V90)
  /* Bits of channels in single or differential mode are set only for         */
  /* differential mode (for single mode, mask of bits allowed to be set is    */
  /* shifted out of range of bits of channels in single or differential mode. */
  if (ADCx == ADC3)
 8001a48:	68fb      	ldr	r3, [r7, #12]
 8001a4a:	4a1a      	ldr	r2, [pc, #104]	; (8001ab4 <LL_ADC_SetChannelSingleDiff+0x78>)
 8001a4c:	4293      	cmp	r3, r2
 8001a4e:	d115      	bne.n	8001a7c <LL_ADC_SetChannelSingleDiff+0x40>
  {
    MODIFY_REG(ADCx->LTR2_DIFSEL,
 8001a50:	68fb      	ldr	r3, [r7, #12]
 8001a52:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 8001a56:	68bb      	ldr	r3, [r7, #8]
 8001a58:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001a5c:	43db      	mvns	r3, r3
 8001a5e:	401a      	ands	r2, r3
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	f003 0318 	and.w	r3, r3, #24
 8001a66:	4914      	ldr	r1, [pc, #80]	; (8001ab8 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8001a68:	40d9      	lsrs	r1, r3
 8001a6a:	68bb      	ldr	r3, [r7, #8]
 8001a6c:	400b      	ands	r3, r1
 8001a6e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001a72:	431a      	orrs	r2, r3
 8001a74:	68fb      	ldr	r3, [r7, #12]
 8001a76:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  /* shifted out of range of bits of channels in single or differential mode. */
  MODIFY_REG(ADCx->DIFSEL,
             Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
             (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
#endif /* ADC_VER_V5_V90 */
}
 8001a7a:	e014      	b.n	8001aa6 <LL_ADC_SetChannelSingleDiff+0x6a>
    MODIFY_REG(ADCx->DIFSEL_RES12,
 8001a7c:	68fb      	ldr	r3, [r7, #12]
 8001a7e:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 8001a82:	68bb      	ldr	r3, [r7, #8]
 8001a84:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001a88:	43db      	mvns	r3, r3
 8001a8a:	401a      	ands	r2, r3
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	f003 0318 	and.w	r3, r3, #24
 8001a92:	4909      	ldr	r1, [pc, #36]	; (8001ab8 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8001a94:	40d9      	lsrs	r1, r3
 8001a96:	68bb      	ldr	r3, [r7, #8]
 8001a98:	400b      	ands	r3, r1
 8001a9a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001a9e:	431a      	orrs	r2, r3
 8001aa0:	68fb      	ldr	r3, [r7, #12]
 8001aa2:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
}
 8001aa6:	bf00      	nop
 8001aa8:	3714      	adds	r7, #20
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab0:	4770      	bx	lr
 8001ab2:	bf00      	nop
 8001ab4:	58026000 	.word	0x58026000
 8001ab8:	000fffff 	.word	0x000fffff

08001abc <LL_ADC_DisableDeepPowerDown>:
  * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
{
 8001abc:	b480      	push	{r7}
 8001abe:	b083      	sub	sp, #12
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	689a      	ldr	r2, [r3, #8]
 8001ac8:	4b04      	ldr	r3, [pc, #16]	; (8001adc <LL_ADC_DisableDeepPowerDown+0x20>)
 8001aca:	4013      	ands	r3, r2
 8001acc:	687a      	ldr	r2, [r7, #4]
 8001ace:	6093      	str	r3, [r2, #8]
}
 8001ad0:	bf00      	nop
 8001ad2:	370c      	adds	r7, #12
 8001ad4:	46bd      	mov	sp, r7
 8001ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ada:	4770      	bx	lr
 8001adc:	5fffffc0 	.word	0x5fffffc0

08001ae0 <LL_ADC_IsDeepPowerDownEnabled>:
  * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
  * @param  ADCx ADC instance
  * @retval 0: deep power down is disabled, 1: deep power down is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
{
 8001ae0:	b480      	push	{r7}
 8001ae2:	b083      	sub	sp, #12
 8001ae4:	af00      	add	r7, sp, #0
 8001ae6:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	689b      	ldr	r3, [r3, #8]
 8001aec:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8001af0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8001af4:	d101      	bne.n	8001afa <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8001af6:	2301      	movs	r3, #1
 8001af8:	e000      	b.n	8001afc <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8001afa:	2300      	movs	r3, #0
}
 8001afc:	4618      	mov	r0, r3
 8001afe:	370c      	adds	r7, #12
 8001b00:	46bd      	mov	sp, r7
 8001b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b06:	4770      	bx	lr

08001b08 <LL_ADC_EnableInternalRegulator>:
  * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
{
 8001b08:	b480      	push	{r7}
 8001b0a:	b083      	sub	sp, #12
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	689a      	ldr	r2, [r3, #8]
 8001b14:	4b05      	ldr	r3, [pc, #20]	; (8001b2c <LL_ADC_EnableInternalRegulator+0x24>)
 8001b16:	4013      	ands	r3, r2
 8001b18:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	609a      	str	r2, [r3, #8]
             ADC_CR_BITS_PROPERTY_RS,
             ADC_CR_ADVREGEN);
}
 8001b20:	bf00      	nop
 8001b22:	370c      	adds	r7, #12
 8001b24:	46bd      	mov	sp, r7
 8001b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b2a:	4770      	bx	lr
 8001b2c:	6fffffc0 	.word	0x6fffffc0

08001b30 <LL_ADC_IsInternalRegulatorEnabled>:
  * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
  * @param  ADCx ADC instance
  * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
{
 8001b30:	b480      	push	{r7}
 8001b32:	b083      	sub	sp, #12
 8001b34:	af00      	add	r7, sp, #0
 8001b36:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	689b      	ldr	r3, [r3, #8]
 8001b3c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b40:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8001b44:	d101      	bne.n	8001b4a <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8001b46:	2301      	movs	r3, #1
 8001b48:	e000      	b.n	8001b4c <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8001b4a:	2300      	movs	r3, #0
}
 8001b4c:	4618      	mov	r0, r3
 8001b4e:	370c      	adds	r7, #12
 8001b50:	46bd      	mov	sp, r7
 8001b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b56:	4770      	bx	lr

08001b58 <LL_ADC_IsEnabled>:
  * @rmtoll CR       ADEN           LL_ADC_IsEnabled
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
{
 8001b58:	b480      	push	{r7}
 8001b5a:	b083      	sub	sp, #12
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	689b      	ldr	r3, [r3, #8]
 8001b64:	f003 0301 	and.w	r3, r3, #1
 8001b68:	2b01      	cmp	r3, #1
 8001b6a:	d101      	bne.n	8001b70 <LL_ADC_IsEnabled+0x18>
 8001b6c:	2301      	movs	r3, #1
 8001b6e:	e000      	b.n	8001b72 <LL_ADC_IsEnabled+0x1a>
 8001b70:	2300      	movs	r3, #0
}
 8001b72:	4618      	mov	r0, r3
 8001b74:	370c      	adds	r7, #12
 8001b76:	46bd      	mov	sp, r7
 8001b78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b7c:	4770      	bx	lr

08001b7e <LL_ADC_REG_IsConversionOngoing>:
  * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group regular.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8001b7e:	b480      	push	{r7}
 8001b80:	b083      	sub	sp, #12
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	689b      	ldr	r3, [r3, #8]
 8001b8a:	f003 0304 	and.w	r3, r3, #4
 8001b8e:	2b04      	cmp	r3, #4
 8001b90:	d101      	bne.n	8001b96 <LL_ADC_REG_IsConversionOngoing+0x18>
 8001b92:	2301      	movs	r3, #1
 8001b94:	e000      	b.n	8001b98 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8001b96:	2300      	movs	r3, #0
}
 8001b98:	4618      	mov	r0, r3
 8001b9a:	370c      	adds	r7, #12
 8001b9c:	46bd      	mov	sp, r7
 8001b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ba2:	4770      	bx	lr

08001ba4 <LL_ADC_INJ_IsConversionOngoing>:
  * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group injected.
  */
__STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8001ba4:	b480      	push	{r7}
 8001ba6:	b083      	sub	sp, #12
 8001ba8:	af00      	add	r7, sp, #0
 8001baa:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	689b      	ldr	r3, [r3, #8]
 8001bb0:	f003 0308 	and.w	r3, r3, #8
 8001bb4:	2b08      	cmp	r3, #8
 8001bb6:	d101      	bne.n	8001bbc <LL_ADC_INJ_IsConversionOngoing+0x18>
 8001bb8:	2301      	movs	r3, #1
 8001bba:	e000      	b.n	8001bbe <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8001bbc:	2300      	movs	r3, #0
}
 8001bbe:	4618      	mov	r0, r3
 8001bc0:	370c      	adds	r7, #12
 8001bc2:	46bd      	mov	sp, r7
 8001bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bc8:	4770      	bx	lr
	...

08001bcc <HAL_ADC_Init>:
  *         without  disabling the other ADCs.
  * @param hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8001bcc:	b590      	push	{r4, r7, lr}
 8001bce:	b089      	sub	sp, #36	; 0x24
 8001bd0:	af00      	add	r7, sp, #0
 8001bd2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8001bd4:	2300      	movs	r3, #0
 8001bd6:	77fb      	strb	r3, [r7, #31]
  uint32_t tmpCFGR;
  uint32_t tmp_adc_reg_is_conversion_on_going;
  __IO uint32_t wait_loop_index = 0UL;
 8001bd8:	2300      	movs	r3, #0
 8001bda:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_adc_is_conversion_on_going_regular;
  uint32_t tmp_adc_is_conversion_on_going_injected;

  /* Check ADC handle */
  if (hadc == NULL)
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	2b00      	cmp	r3, #0
 8001be0:	d101      	bne.n	8001be6 <HAL_ADC_Init+0x1a>
  {
    return HAL_ERROR;
 8001be2:	2301      	movs	r3, #1
 8001be4:	e1ee      	b.n	8001fc4 <HAL_ADC_Init+0x3f8>
  assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));

  if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 8001be6:	687b      	ldr	r3, [r7, #4]
 8001be8:	691b      	ldr	r3, [r3, #16]
 8001bea:	2b00      	cmp	r3, #0
  /* DISCEN and CONT bits cannot be set at the same time */
  assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == ENABLE)));

  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  if (hadc->State == HAL_ADC_STATE_RESET)
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001bf0:	2b00      	cmp	r3, #0
 8001bf2:	d109      	bne.n	8001c08 <HAL_ADC_Init+0x3c>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8001bf4:	6878      	ldr	r0, [r7, #4]
 8001bf6:	f7ff f905 	bl	8000e04 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	2200      	movs	r2, #0
 8001bfe:	665a      	str	r2, [r3, #100]	; 0x64

    /* Initialize Lock */
    hadc->Lock = HAL_UNLOCKED;
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	2200      	movs	r2, #0
 8001c04:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  }

  /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
  if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	681b      	ldr	r3, [r3, #0]
 8001c0c:	4618      	mov	r0, r3
 8001c0e:	f7ff ff67 	bl	8001ae0 <LL_ADC_IsDeepPowerDownEnabled>
 8001c12:	4603      	mov	r3, r0
 8001c14:	2b00      	cmp	r3, #0
 8001c16:	d004      	beq.n	8001c22 <HAL_ADC_Init+0x56>
  {
    /* Disable ADC deep power down mode */
    LL_ADC_DisableDeepPowerDown(hadc->Instance);
 8001c18:	687b      	ldr	r3, [r7, #4]
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	4618      	mov	r0, r3
 8001c1e:	f7ff ff4d 	bl	8001abc <LL_ADC_DisableDeepPowerDown>
    /* System was in deep power down mode, calibration must
     be relaunched or a previously saved calibration factor
     re-applied once the ADC voltage regulator is enabled */
  }

  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	4618      	mov	r0, r3
 8001c28:	f7ff ff82 	bl	8001b30 <LL_ADC_IsInternalRegulatorEnabled>
 8001c2c:	4603      	mov	r3, r0
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	d114      	bne.n	8001c5c <HAL_ADC_Init+0x90>
  {
    /* Enable ADC internal voltage regulator */
    LL_ADC_EnableInternalRegulator(hadc->Instance);
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	4618      	mov	r0, r3
 8001c38:	f7ff ff66 	bl	8001b08 <LL_ADC_EnableInternalRegulator>

    /* Note: Variable divided by 2 to compensate partially              */
    /*       CPU processing cycles, scaling in us split to not          */
    /*       exceed 32 bits register capacity and handle low frequency. */
    wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 8001c3c:	4b8e      	ldr	r3, [pc, #568]	; (8001e78 <HAL_ADC_Init+0x2ac>)
 8001c3e:	681b      	ldr	r3, [r3, #0]
 8001c40:	099b      	lsrs	r3, r3, #6
 8001c42:	4a8e      	ldr	r2, [pc, #568]	; (8001e7c <HAL_ADC_Init+0x2b0>)
 8001c44:	fba2 2303 	umull	r2, r3, r2, r3
 8001c48:	099b      	lsrs	r3, r3, #6
 8001c4a:	3301      	adds	r3, #1
 8001c4c:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 8001c4e:	e002      	b.n	8001c56 <HAL_ADC_Init+0x8a>
    {
      wait_loop_index--;
 8001c50:	68bb      	ldr	r3, [r7, #8]
 8001c52:	3b01      	subs	r3, #1
 8001c54:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 8001c56:	68bb      	ldr	r3, [r7, #8]
 8001c58:	2b00      	cmp	r3, #0
 8001c5a:	d1f9      	bne.n	8001c50 <HAL_ADC_Init+0x84>
  }

  /* Verification that ADC voltage regulator is correctly enabled, whether    */
  /* or not ADC is coming from state reset (if any potential problem of       */
  /* clocking, voltage regulator would not be enabled).                       */
  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	4618      	mov	r0, r3
 8001c62:	f7ff ff65 	bl	8001b30 <LL_ADC_IsInternalRegulatorEnabled>
 8001c66:	4603      	mov	r3, r0
 8001c68:	2b00      	cmp	r3, #0
 8001c6a:	d10d      	bne.n	8001c88 <HAL_ADC_Init+0xbc>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001c70:	f043 0210 	orr.w	r2, r3, #16
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	661a      	str	r2, [r3, #96]	; 0x60

    /* Set ADC error code to ADC peripheral internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8001c7c:	f043 0201 	orr.w	r2, r3, #1
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	665a      	str	r2, [r3, #100]	; 0x64

    tmp_hal_status = HAL_ERROR;
 8001c84:	2301      	movs	r3, #1
 8001c86:	77fb      	strb	r3, [r7, #31]

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed and if there is no conversion on going on regular    */
  /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
  /* called to update a parameter on the fly).                                */
  tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	681b      	ldr	r3, [r3, #0]
 8001c8c:	4618      	mov	r0, r3
 8001c8e:	f7ff ff76 	bl	8001b7e <LL_ADC_REG_IsConversionOngoing>
 8001c92:	6178      	str	r0, [r7, #20]

  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001c98:	f003 0310 	and.w	r3, r3, #16
 8001c9c:	2b00      	cmp	r3, #0
 8001c9e:	f040 8188 	bne.w	8001fb2 <HAL_ADC_Init+0x3e6>
      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 8001ca2:	697b      	ldr	r3, [r7, #20]
 8001ca4:	2b00      	cmp	r3, #0
 8001ca6:	f040 8184 	bne.w	8001fb2 <HAL_ADC_Init+0x3e6>
     )
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001cae:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 8001cb2:	f043 0202 	orr.w	r2, r3, #2
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	661a      	str	r2, [r3, #96]	; 0x60
    /* Configuration of common ADC parameters                                 */

    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - clock configuration                                                 */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	4618      	mov	r0, r3
 8001cc0:	f7ff ff4a 	bl	8001b58 <LL_ADC_IsEnabled>
 8001cc4:	4603      	mov	r3, r0
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d136      	bne.n	8001d38 <HAL_ADC_Init+0x16c>
    {
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	4a6c      	ldr	r2, [pc, #432]	; (8001e80 <HAL_ADC_Init+0x2b4>)
 8001cd0:	4293      	cmp	r3, r2
 8001cd2:	d004      	beq.n	8001cde <HAL_ADC_Init+0x112>
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	4a6a      	ldr	r2, [pc, #424]	; (8001e84 <HAL_ADC_Init+0x2b8>)
 8001cda:	4293      	cmp	r3, r2
 8001cdc:	d10e      	bne.n	8001cfc <HAL_ADC_Init+0x130>
 8001cde:	4868      	ldr	r0, [pc, #416]	; (8001e80 <HAL_ADC_Init+0x2b4>)
 8001ce0:	f7ff ff3a 	bl	8001b58 <LL_ADC_IsEnabled>
 8001ce4:	4604      	mov	r4, r0
 8001ce6:	4867      	ldr	r0, [pc, #412]	; (8001e84 <HAL_ADC_Init+0x2b8>)
 8001ce8:	f7ff ff36 	bl	8001b58 <LL_ADC_IsEnabled>
 8001cec:	4603      	mov	r3, r0
 8001cee:	4323      	orrs	r3, r4
 8001cf0:	2b00      	cmp	r3, #0
 8001cf2:	bf0c      	ite	eq
 8001cf4:	2301      	moveq	r3, #1
 8001cf6:	2300      	movne	r3, #0
 8001cf8:	b2db      	uxtb	r3, r3
 8001cfa:	e008      	b.n	8001d0e <HAL_ADC_Init+0x142>
 8001cfc:	4862      	ldr	r0, [pc, #392]	; (8001e88 <HAL_ADC_Init+0x2bc>)
 8001cfe:	f7ff ff2b 	bl	8001b58 <LL_ADC_IsEnabled>
 8001d02:	4603      	mov	r3, r0
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	bf0c      	ite	eq
 8001d08:	2301      	moveq	r3, #1
 8001d0a:	2300      	movne	r3, #0
 8001d0c:	b2db      	uxtb	r3, r3
 8001d0e:	2b00      	cmp	r3, #0
 8001d10:	d012      	beq.n	8001d38 <HAL_ADC_Init+0x16c>
        /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
        /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
        /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
        /*     (set into HAL_ADC_ConfigChannel() or                             */
        /*     HAL_ADCEx_InjectedConfigChannel() )                              */
        LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	4a5a      	ldr	r2, [pc, #360]	; (8001e80 <HAL_ADC_Init+0x2b4>)
 8001d18:	4293      	cmp	r3, r2
 8001d1a:	d004      	beq.n	8001d26 <HAL_ADC_Init+0x15a>
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	4a58      	ldr	r2, [pc, #352]	; (8001e84 <HAL_ADC_Init+0x2b8>)
 8001d22:	4293      	cmp	r3, r2
 8001d24:	d101      	bne.n	8001d2a <HAL_ADC_Init+0x15e>
 8001d26:	4a59      	ldr	r2, [pc, #356]	; (8001e8c <HAL_ADC_Init+0x2c0>)
 8001d28:	e000      	b.n	8001d2c <HAL_ADC_Init+0x160>
 8001d2a:	4a59      	ldr	r2, [pc, #356]	; (8001e90 <HAL_ADC_Init+0x2c4>)
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	685b      	ldr	r3, [r3, #4]
 8001d30:	4619      	mov	r1, r3
 8001d32:	4610      	mov	r0, r2
 8001d34:	f7ff fd04 	bl	8001740 <LL_ADC_SetCommonClock>
                hadc->Init.Overrun                                                    |
                hadc->Init.Resolution                                                 |
                ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));

#elif defined(ADC_VER_V5_V90)
    if (hadc->Instance == ADC3)
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	4a52      	ldr	r2, [pc, #328]	; (8001e88 <HAL_ADC_Init+0x2bc>)
 8001d3e:	4293      	cmp	r3, r2
 8001d40:	d129      	bne.n	8001d96 <HAL_ADC_Init+0x1ca>
    {
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	7e5b      	ldrb	r3, [r3, #25]
 8001d46:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                     |
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 8001d4c:	431a      	orrs	r2, r3
                  hadc->Init.DataAlign                                                   |
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	68db      	ldr	r3, [r3, #12]
                  hadc->Init.Overrun                                                     |
 8001d52:	431a      	orrs	r2, r3
                  ((__LL_ADC12_RESOLUTION_TO_ADC3(hadc->Init.Resolution)  & (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)) << 1UL)                                                   |
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	689b      	ldr	r3, [r3, #8]
 8001d58:	2b08      	cmp	r3, #8
 8001d5a:	d013      	beq.n	8001d84 <HAL_ADC_Init+0x1b8>
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	689b      	ldr	r3, [r3, #8]
 8001d60:	2b0c      	cmp	r3, #12
 8001d62:	d00d      	beq.n	8001d80 <HAL_ADC_Init+0x1b4>
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	689b      	ldr	r3, [r3, #8]
 8001d68:	2b1c      	cmp	r3, #28
 8001d6a:	d007      	beq.n	8001d7c <HAL_ADC_Init+0x1b0>
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	689b      	ldr	r3, [r3, #8]
 8001d70:	2b18      	cmp	r3, #24
 8001d72:	d101      	bne.n	8001d78 <HAL_ADC_Init+0x1ac>
 8001d74:	2318      	movs	r3, #24
 8001d76:	e006      	b.n	8001d86 <HAL_ADC_Init+0x1ba>
 8001d78:	2300      	movs	r3, #0
 8001d7a:	e004      	b.n	8001d86 <HAL_ADC_Init+0x1ba>
 8001d7c:	2310      	movs	r3, #16
 8001d7e:	e002      	b.n	8001d86 <HAL_ADC_Init+0x1ba>
 8001d80:	2308      	movs	r3, #8
 8001d82:	e000      	b.n	8001d86 <HAL_ADC_Init+0x1ba>
 8001d84:	2300      	movs	r3, #0
                  hadc->Init.DataAlign                                                   |
 8001d86:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001d8e:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 8001d90:	4313      	orrs	r3, r2
 8001d92:	61bb      	str	r3, [r7, #24]
 8001d94:	e00e      	b.n	8001db4 <HAL_ADC_Init+0x1e8>
    }
    else
    {
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	7e5b      	ldrb	r3, [r3, #25]
 8001d9a:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                    |
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8001da0:	431a      	orrs	r2, r3
                  hadc->Init.Resolution                                                 |
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	689b      	ldr	r3, [r3, #8]
                  hadc->Init.Overrun                                                    |
 8001da6:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001dae:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8001db0:	4313      	orrs	r3, r2
 8001db2:	61bb      	str	r3, [r7, #24]
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
    }

#endif /* ADC_VER_V5_3 */

    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001dba:	2b01      	cmp	r3, #1
 8001dbc:	d106      	bne.n	8001dcc <HAL_ADC_Init+0x200>
    {
      tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001dc2:	3b01      	subs	r3, #1
 8001dc4:	045b      	lsls	r3, r3, #17
 8001dc6:	69ba      	ldr	r2, [r7, #24]
 8001dc8:	4313      	orrs	r3, r2
 8001dca:	61bb      	str	r3, [r7, #24]
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001dd0:	2b00      	cmp	r3, #0
 8001dd2:	d009      	beq.n	8001de8 <HAL_ADC_Init+0x21c>
    {
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001dd8:	f403 7278 	and.w	r2, r3, #992	; 0x3e0
                  | hadc->Init.ExternalTrigConvEdge
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001de0:	4313      	orrs	r3, r2
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8001de2:	69ba      	ldr	r2, [r7, #24]
 8001de4:	4313      	orrs	r3, r2
 8001de6:	61bb      	str	r3, [r7, #24]
                 );
    }


#if defined(ADC_VER_V5_V90)
    if (hadc->Instance == ADC3)
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	4a26      	ldr	r2, [pc, #152]	; (8001e88 <HAL_ADC_Init+0x2bc>)
 8001dee:	4293      	cmp	r3, r2
 8001df0:	d115      	bne.n	8001e1e <HAL_ADC_Init+0x252>
    {
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC3_CFGR_FIELDS_1, tmpCFGR);
 8001df2:	687b      	ldr	r3, [r7, #4]
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	68da      	ldr	r2, [r3, #12]
 8001df8:	4b26      	ldr	r3, [pc, #152]	; (8001e94 <HAL_ADC_Init+0x2c8>)
 8001dfa:	4013      	ands	r3, r2
 8001dfc:	687a      	ldr	r2, [r7, #4]
 8001dfe:	6812      	ldr	r2, [r2, #0]
 8001e00:	69b9      	ldr	r1, [r7, #24]
 8001e02:	430b      	orrs	r3, r1
 8001e04:	60d3      	str	r3, [r2, #12]
      /* Configuration of sampling mode */
      MODIFY_REG(hadc->Instance->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	681b      	ldr	r3, [r3, #0]
 8001e0a:	691b      	ldr	r3, [r3, #16]
 8001e0c:	f023 6140 	bic.w	r1, r3, #201326592	; 0xc000000
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	430a      	orrs	r2, r1
 8001e1a:	611a      	str	r2, [r3, #16]
 8001e1c:	e009      	b.n	8001e32 <HAL_ADC_Init+0x266>
    }
    else
    {
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	68da      	ldr	r2, [r3, #12]
 8001e24:	4b1c      	ldr	r3, [pc, #112]	; (8001e98 <HAL_ADC_Init+0x2cc>)
 8001e26:	4013      	ands	r3, r2
 8001e28:	687a      	ldr	r2, [r7, #4]
 8001e2a:	6812      	ldr	r2, [r2, #0]
 8001e2c:	69b9      	ldr	r1, [r7, #24]
 8001e2e:	430b      	orrs	r3, r1
 8001e30:	60d3      	str	r3, [r2, #12]
    /* Parameters that can be updated when ADC is disabled or enabled without */
    /* conversion on going on regular and injected groups:                    */
    /*  - Conversion data management      Init.ConversionDataManagement       */
    /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
    /*  - Oversampling parameters         Init.Oversampling                   */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	4618      	mov	r0, r3
 8001e38:	f7ff fea1 	bl	8001b7e <LL_ADC_REG_IsConversionOngoing>
 8001e3c:	6138      	str	r0, [r7, #16]
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	681b      	ldr	r3, [r3, #0]
 8001e42:	4618      	mov	r0, r3
 8001e44:	f7ff feae 	bl	8001ba4 <LL_ADC_INJ_IsConversionOngoing>
 8001e48:	60f8      	str	r0, [r7, #12]
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 8001e4a:	693b      	ldr	r3, [r7, #16]
 8001e4c:	2b00      	cmp	r3, #0
 8001e4e:	f040 808e 	bne.w	8001f6e <HAL_ADC_Init+0x3a2>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 8001e52:	68fb      	ldr	r3, [r7, #12]
 8001e54:	2b00      	cmp	r3, #0
 8001e56:	f040 808a 	bne.w	8001f6e <HAL_ADC_Init+0x3a2>
       )
    {
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance == ADC3)
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	4a0a      	ldr	r2, [pc, #40]	; (8001e88 <HAL_ADC_Init+0x2bc>)
 8001e60:	4293      	cmp	r3, r2
 8001e62:	d11b      	bne.n	8001e9c <HAL_ADC_Init+0x2d0>
      {
        tmpCFGR = (
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	7e1b      	ldrb	r3, [r3, #24]
 8001e68:	039a      	lsls	r2, r3, #14
                    ADC3_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8001e70:	005b      	lsls	r3, r3, #1
        tmpCFGR = (
 8001e72:	4313      	orrs	r3, r2
 8001e74:	61bb      	str	r3, [r7, #24]
 8001e76:	e018      	b.n	8001eaa <HAL_ADC_Init+0x2de>
 8001e78:	24000004 	.word	0x24000004
 8001e7c:	053e2d63 	.word	0x053e2d63
 8001e80:	40022000 	.word	0x40022000
 8001e84:	40022100 	.word	0x40022100
 8001e88:	58026000 	.word	0x58026000
 8001e8c:	40022300 	.word	0x40022300
 8001e90:	58026300 	.word	0x58026300
 8001e94:	fff04007 	.word	0xfff04007
 8001e98:	fff0c003 	.word	0xfff0c003
      }
      else
      {
        tmpCFGR = (
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8001e9c:	687b      	ldr	r3, [r7, #4]
 8001e9e:	7e1b      	ldrb	r3, [r3, #24]
 8001ea0:	039a      	lsls	r2, r3, #14
                    ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        tmpCFGR = (
 8001ea6:	4313      	orrs	r3, r2
 8001ea8:	61bb      	str	r3, [r7, #24]
      tmpCFGR = (
                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
#endif

      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	681b      	ldr	r3, [r3, #0]
 8001eae:	68da      	ldr	r2, [r3, #12]
 8001eb0:	4b46      	ldr	r3, [pc, #280]	; (8001fcc <HAL_ADC_Init+0x400>)
 8001eb2:	4013      	ands	r3, r2
 8001eb4:	687a      	ldr	r2, [r7, #4]
 8001eb6:	6812      	ldr	r2, [r2, #0]
 8001eb8:	69b9      	ldr	r1, [r7, #24]
 8001eba:	430b      	orrs	r3, r1
 8001ebc:	60d3      	str	r3, [r2, #12]

      if (hadc->Init.OversamplingMode == ENABLE)
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8001ec4:	2b01      	cmp	r3, #1
 8001ec6:	d137      	bne.n	8001f38 <HAL_ADC_Init+0x36c>
#endif
        assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
        assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
        assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));

        if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001ecc:	2b00      	cmp	r3, #0
          /* Multi trigger is not applicable to software-triggered conversions */
          assert_param((hadc->Init.Oversampling.TriggeredMode == ADC_TRIGGEREDMODE_SINGLE_TRIGGER));
        }

#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	681b      	ldr	r3, [r3, #0]
 8001ed2:	4a3f      	ldr	r2, [pc, #252]	; (8001fd0 <HAL_ADC_Init+0x404>)
 8001ed4:	4293      	cmp	r3, r2
 8001ed6:	d116      	bne.n	8001f06 <HAL_ADC_Init+0x33a>
          /* Configuration of Oversampler:                                      */
          /*  - Oversampling Ratio                                              */
          /*  - Right bit shift                                                 */
          /*  - Triggered mode                                                  */
          /*  - Oversampling mode (continued/resumed)                           */
          MODIFY_REG(hadc->Instance->CFGR2,
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	691a      	ldr	r2, [r3, #16]
 8001ede:	4b3d      	ldr	r3, [pc, #244]	; (8001fd4 <HAL_ADC_Init+0x408>)
 8001ee0:	4013      	ands	r3, r2
 8001ee2:	687a      	ldr	r2, [r7, #4]
 8001ee4:	6c91      	ldr	r1, [r2, #72]	; 0x48
 8001ee6:	687a      	ldr	r2, [r7, #4]
 8001ee8:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8001eea:	4311      	orrs	r1, r2
 8001eec:	687a      	ldr	r2, [r7, #4]
 8001eee:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8001ef0:	4311      	orrs	r1, r2
 8001ef2:	687a      	ldr	r2, [r7, #4]
 8001ef4:	6d52      	ldr	r2, [r2, #84]	; 0x54
 8001ef6:	430a      	orrs	r2, r1
 8001ef8:	431a      	orrs	r2, r3
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	f042 0201 	orr.w	r2, r2, #1
 8001f02:	611a      	str	r2, [r3, #16]
 8001f04:	e020      	b.n	8001f48 <HAL_ADC_Init+0x37c>
          /*  - Oversampling Ratio                                               */
          /*  - Right bit shift                                                  */
          /*  - Left bit shift                                                   */
          /*  - Triggered mode                                                   */
          /*  - Oversampling mode (continued/resumed)                            */
          MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 8001f06:	687b      	ldr	r3, [r7, #4]
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	691a      	ldr	r2, [r3, #16]
 8001f0c:	4b32      	ldr	r3, [pc, #200]	; (8001fd8 <HAL_ADC_Init+0x40c>)
 8001f0e:	4013      	ands	r3, r2
 8001f10:	687a      	ldr	r2, [r7, #4]
 8001f12:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8001f14:	3a01      	subs	r2, #1
 8001f16:	0411      	lsls	r1, r2, #16
 8001f18:	687a      	ldr	r2, [r7, #4]
 8001f1a:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8001f1c:	4311      	orrs	r1, r2
 8001f1e:	687a      	ldr	r2, [r7, #4]
 8001f20:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8001f22:	4311      	orrs	r1, r2
 8001f24:	687a      	ldr	r2, [r7, #4]
 8001f26:	6d52      	ldr	r2, [r2, #84]	; 0x54
 8001f28:	430a      	orrs	r2, r1
 8001f2a:	431a      	orrs	r2, r3
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	f042 0201 	orr.w	r2, r2, #1
 8001f34:	611a      	str	r2, [r3, #16]
 8001f36:	e007      	b.n	8001f48 <HAL_ADC_Init+0x37c>

      }
      else
      {
        /* Disable ADC oversampling scope on ADC group regular */
        CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	691a      	ldr	r2, [r3, #16]
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	f022 0201 	bic.w	r2, r2, #1
 8001f46:	611a      	str	r2, [r3, #16]
      }

      /* Set the LeftShift parameter: it is applied to the final result with or without oversampling */
      MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	691b      	ldr	r3, [r3, #16]
 8001f4e:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	430a      	orrs	r2, r1
 8001f5c:	611a      	str	r2, [r3, #16]
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance != ADC3)
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	4a1b      	ldr	r2, [pc, #108]	; (8001fd0 <HAL_ADC_Init+0x404>)
 8001f64:	4293      	cmp	r3, r2
 8001f66:	d002      	beq.n	8001f6e <HAL_ADC_Init+0x3a2>
      {
        /* Configure the BOOST Mode */
        ADC_ConfigureBoostMode(hadc);
 8001f68:	6878      	ldr	r0, [r7, #4]
 8001f6a:	f000 fd67 	bl	8002a3c <ADC_ConfigureBoostMode>
    /*   Note: Scan mode is not present by hardware on this device, but       */
    /*   emulated by software for alignment over all STM32 devices.           */
    /* - if scan mode is enabled, regular channels sequence length is set to  */
    /*   parameter "NbrOfConversion".                                         */

    if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	691b      	ldr	r3, [r3, #16]
 8001f72:	2b01      	cmp	r3, #1
 8001f74:	d10c      	bne.n	8001f90 <HAL_ADC_Init+0x3c4>
    {
      /* Set number of ranks in regular group sequencer */
      MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f7c:	f023 010f 	bic.w	r1, r3, #15
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	69db      	ldr	r3, [r3, #28]
 8001f84:	1e5a      	subs	r2, r3, #1
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	430a      	orrs	r2, r1
 8001f8c:	631a      	str	r2, [r3, #48]	; 0x30
 8001f8e:	e007      	b.n	8001fa0 <HAL_ADC_Init+0x3d4>
    }
    else
    {
      CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	f022 020f 	bic.w	r2, r2, #15
 8001f9e:	631a      	str	r2, [r3, #48]	; 0x30
    }

    /* Initialize the ADC state */
    /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
    ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001fa4:	f023 0303 	bic.w	r3, r3, #3
 8001fa8:	f043 0201 	orr.w	r2, r3, #1
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	661a      	str	r2, [r3, #96]	; 0x60
 8001fb0:	e007      	b.n	8001fc2 <HAL_ADC_Init+0x3f6>
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8001fb2:	687b      	ldr	r3, [r7, #4]
 8001fb4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001fb6:	f043 0210 	orr.w	r2, r3, #16
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 8001fbe:	2301      	movs	r3, #1
 8001fc0:	77fb      	strb	r3, [r7, #31]
  }

  /* Return function status */
  return tmp_hal_status;
 8001fc2:	7ffb      	ldrb	r3, [r7, #31]
}
 8001fc4:	4618      	mov	r0, r3
 8001fc6:	3724      	adds	r7, #36	; 0x24
 8001fc8:	46bd      	mov	sp, r7
 8001fca:	bd90      	pop	{r4, r7, pc}
 8001fcc:	ffffbffc 	.word	0xffffbffc
 8001fd0:	58026000 	.word	0x58026000
 8001fd4:	fc00f81f 	.word	0xfc00f81f
 8001fd8:	fc00f81e 	.word	0xfc00f81e

08001fdc <HAL_ADC_ConfigChannel>:
  * @param hadc ADC handle
  * @param sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8001fdc:	b590      	push	{r4, r7, lr}
 8001fde:	b0b9      	sub	sp, #228	; 0xe4
 8001fe0:	af00      	add	r7, sp, #0
 8001fe2:	6078      	str	r0, [r7, #4]
 8001fe4:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
  uint32_t tmpOffsetShifted;
  uint32_t tmp_config_internal_channel;
  __IO uint32_t wait_loop_index = 0;
 8001fec:	2300      	movs	r3, #0
 8001fee:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
  assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
  /* Check offset range according to oversampling setting */
  if (hadc->Init.OversamplingMode == ENABLE)
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8001ff6:	2b01      	cmp	r3, #1
  /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
     ignored (considered as reset) */
  assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENABLE)));

  /* Verification of channel number */
  if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
 8001ff8:	683b      	ldr	r3, [r7, #0]
 8001ffa:	68db      	ldr	r3, [r3, #12]
 8001ffc:	4aab      	ldr	r2, [pc, #684]	; (80022ac <HAL_ADC_ConfigChannel+0x2d0>)
 8001ffe:	4293      	cmp	r3, r2
    }
#endif
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8002006:	2b01      	cmp	r3, #1
 8002008:	d102      	bne.n	8002010 <HAL_ADC_ConfigChannel+0x34>
 800200a:	2302      	movs	r3, #2
 800200c:	f000 bcfe 	b.w	8002a0c <HAL_ADC_ConfigChannel+0xa30>
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	2201      	movs	r2, #1
 8002014:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel rank                                                          */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	681b      	ldr	r3, [r3, #0]
 800201c:	4618      	mov	r0, r3
 800201e:	f7ff fdae 	bl	8001b7e <LL_ADC_REG_IsConversionOngoing>
 8002022:	4603      	mov	r3, r0
 8002024:	2b00      	cmp	r3, #0
 8002026:	f040 84e2 	bne.w	80029ee <HAL_ADC_ConfigChannel+0xa12>
  {
    if (!(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel)))
 800202a:	683b      	ldr	r3, [r7, #0]
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	2b00      	cmp	r3, #0
 8002030:	db38      	blt.n	80020a4 <HAL_ADC_ConfigChannel+0xc8>
    {
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance != ADC3)
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	4a9e      	ldr	r2, [pc, #632]	; (80022b0 <HAL_ADC_ConfigChannel+0x2d4>)
 8002038:	4293      	cmp	r3, r2
 800203a:	d033      	beq.n	80020a4 <HAL_ADC_ConfigChannel+0xc8>
      {
        /* ADC channels preselection */
        hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
 800203c:	683b      	ldr	r3, [r7, #0]
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002044:	2b00      	cmp	r3, #0
 8002046:	d108      	bne.n	800205a <HAL_ADC_ConfigChannel+0x7e>
 8002048:	683b      	ldr	r3, [r7, #0]
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	0e9b      	lsrs	r3, r3, #26
 800204e:	f003 031f 	and.w	r3, r3, #31
 8002052:	2201      	movs	r2, #1
 8002054:	fa02 f303 	lsl.w	r3, r2, r3
 8002058:	e01d      	b.n	8002096 <HAL_ADC_ConfigChannel+0xba>
 800205a:	683b      	ldr	r3, [r7, #0]
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002062:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002066:	fa93 f3a3 	rbit	r3, r3
 800206a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 800206e:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8002072:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 8002076:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800207a:	2b00      	cmp	r3, #0
 800207c:	d101      	bne.n	8002082 <HAL_ADC_ConfigChannel+0xa6>
  {
    return 32U;
 800207e:	2320      	movs	r3, #32
 8002080:	e004      	b.n	800208c <HAL_ADC_ConfigChannel+0xb0>
  }
  return __builtin_clz(value);
 8002082:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8002086:	fab3 f383 	clz	r3, r3
 800208a:	b2db      	uxtb	r3, r3
 800208c:	f003 031f 	and.w	r3, r3, #31
 8002090:	2201      	movs	r2, #1
 8002092:	fa02 f303 	lsl.w	r3, r2, r3
 8002096:	687a      	ldr	r2, [r7, #4]
 8002098:	6812      	ldr	r2, [r2, #0]
 800209a:	69d1      	ldr	r1, [r2, #28]
 800209c:	687a      	ldr	r2, [r7, #4]
 800209e:	6812      	ldr	r2, [r2, #0]
 80020a0:	430b      	orrs	r3, r1
 80020a2:	61d3      	str	r3, [r2, #28]
      hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
#endif /* ADC_VER_V5_V90 */
    }

    /* Set ADC group regular sequence: channel on the selected scan sequence rank */
    LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	6818      	ldr	r0, [r3, #0]
 80020a8:	683b      	ldr	r3, [r7, #0]
 80020aa:	6859      	ldr	r1, [r3, #4]
 80020ac:	683b      	ldr	r3, [r7, #0]
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	461a      	mov	r2, r3
 80020b2:	f7ff fc6b 	bl	800198c <LL_ADC_REG_SetSequencerRanks>
    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated when ADC is disabled or enabled without   */
    /* conversion on going on regular group:                                    */
    /*  - Channel sampling time                                                 */
    /*  - Channel offset                                                        */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	4618      	mov	r0, r3
 80020bc:	f7ff fd5f 	bl	8001b7e <LL_ADC_REG_IsConversionOngoing>
 80020c0:	f8c7 00d4 	str.w	r0, [r7, #212]	; 0xd4
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	4618      	mov	r0, r3
 80020ca:	f7ff fd6b 	bl	8001ba4 <LL_ADC_INJ_IsConversionOngoing>
 80020ce:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 80020d2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	f040 8270 	bne.w	80025bc <HAL_ADC_ConfigChannel+0x5e0>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 80020dc:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 80020e0:	2b00      	cmp	r3, #0
 80020e2:	f040 826b 	bne.w	80025bc <HAL_ADC_ConfigChannel+0x5e0>
       )
    {
      /* Set sampling time of the selected ADC channel */
      LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	6818      	ldr	r0, [r3, #0]
 80020ea:	683b      	ldr	r3, [r7, #0]
 80020ec:	6819      	ldr	r1, [r3, #0]
 80020ee:	683b      	ldr	r3, [r7, #0]
 80020f0:	689b      	ldr	r3, [r3, #8]
 80020f2:	461a      	mov	r2, r3
 80020f4:	f7ff fc76 	bl	80019e4 <LL_ADC_SetChannelSamplingTime>
      /* Configure the offset: offset enable/disable, channel, offset value */

      /* Shift the offset with respect to the selected ADC resolution. */
      /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance == ADC3)
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	4a6c      	ldr	r2, [pc, #432]	; (80022b0 <HAL_ADC_ConfigChannel+0x2d4>)
 80020fe:	4293      	cmp	r3, r2
 8002100:	d10d      	bne.n	800211e <HAL_ADC_ConfigChannel+0x142>
      {
        tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 8002102:	683b      	ldr	r3, [r7, #0]
 8002104:	695a      	ldr	r2, [r3, #20]
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	68db      	ldr	r3, [r3, #12]
 800210c:	08db      	lsrs	r3, r3, #3
 800210e:	f003 0303 	and.w	r3, r3, #3
 8002112:	005b      	lsls	r3, r3, #1
 8002114:	fa02 f303 	lsl.w	r3, r2, r3
 8002118:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800211c:	e032      	b.n	8002184 <HAL_ADC_ConfigChannel+0x1a8>
      }
      else
#endif /* ADC_VER_V5_V90 */
      {
        tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 800211e:	4b65      	ldr	r3, [pc, #404]	; (80022b4 <HAL_ADC_ConfigChannel+0x2d8>)
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8002126:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800212a:	d10b      	bne.n	8002144 <HAL_ADC_ConfigChannel+0x168>
 800212c:	683b      	ldr	r3, [r7, #0]
 800212e:	695a      	ldr	r2, [r3, #20]
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	681b      	ldr	r3, [r3, #0]
 8002134:	68db      	ldr	r3, [r3, #12]
 8002136:	089b      	lsrs	r3, r3, #2
 8002138:	f003 0307 	and.w	r3, r3, #7
 800213c:	005b      	lsls	r3, r3, #1
 800213e:	fa02 f303 	lsl.w	r3, r2, r3
 8002142:	e01d      	b.n	8002180 <HAL_ADC_ConfigChannel+0x1a4>
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	68db      	ldr	r3, [r3, #12]
 800214a:	f003 0310 	and.w	r3, r3, #16
 800214e:	2b00      	cmp	r3, #0
 8002150:	d10b      	bne.n	800216a <HAL_ADC_ConfigChannel+0x18e>
 8002152:	683b      	ldr	r3, [r7, #0]
 8002154:	695a      	ldr	r2, [r3, #20]
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	68db      	ldr	r3, [r3, #12]
 800215c:	089b      	lsrs	r3, r3, #2
 800215e:	f003 0307 	and.w	r3, r3, #7
 8002162:	005b      	lsls	r3, r3, #1
 8002164:	fa02 f303 	lsl.w	r3, r2, r3
 8002168:	e00a      	b.n	8002180 <HAL_ADC_ConfigChannel+0x1a4>
 800216a:	683b      	ldr	r3, [r7, #0]
 800216c:	695a      	ldr	r2, [r3, #20]
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	681b      	ldr	r3, [r3, #0]
 8002172:	68db      	ldr	r3, [r3, #12]
 8002174:	089b      	lsrs	r3, r3, #2
 8002176:	f003 0304 	and.w	r3, r3, #4
 800217a:	005b      	lsls	r3, r3, #1
 800217c:	fa02 f303 	lsl.w	r3, r2, r3
 8002180:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
      }
      
      if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
 8002184:	683b      	ldr	r3, [r7, #0]
 8002186:	691b      	ldr	r3, [r3, #16]
 8002188:	2b04      	cmp	r3, #4
 800218a:	d048      	beq.n	800221e <HAL_ADC_ConfigChannel+0x242>
      {
        /* Set ADC selected offset number */
        LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted);
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	6818      	ldr	r0, [r3, #0]
 8002190:	683b      	ldr	r3, [r7, #0]
 8002192:	6919      	ldr	r1, [r3, #16]
 8002194:	683b      	ldr	r3, [r7, #0]
 8002196:	681a      	ldr	r2, [r3, #0]
 8002198:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800219c:	f7ff fb04 	bl	80017a8 <LL_ADC_SetOffset>

#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	4a42      	ldr	r2, [pc, #264]	; (80022b0 <HAL_ADC_ConfigChannel+0x2d4>)
 80021a6:	4293      	cmp	r3, r2
 80021a8:	d119      	bne.n	80021de <HAL_ADC_ConfigChannel+0x202>
        {
          assert_param(IS_ADC3_OFFSET_SIGN(sConfig->OffsetSign));
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
          /* Set ADC selected offset sign & saturation */
          LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	6818      	ldr	r0, [r3, #0]
 80021ae:	683b      	ldr	r3, [r7, #0]
 80021b0:	6919      	ldr	r1, [r3, #16]
 80021b2:	683b      	ldr	r3, [r7, #0]
 80021b4:	69db      	ldr	r3, [r3, #28]
 80021b6:	461a      	mov	r2, r3
 80021b8:	f7ff fb9c 	bl	80018f4 <LL_ADC_SetOffsetSign>
          LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturation == ENABLE) ? LL_ADC_OFFSET_SATURATION_ENABLE : LL_ADC_OFFSET_SATURATION_DISABLE);
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	6818      	ldr	r0, [r3, #0]
 80021c0:	683b      	ldr	r3, [r7, #0]
 80021c2:	6919      	ldr	r1, [r3, #16]
 80021c4:	683b      	ldr	r3, [r7, #0]
 80021c6:	f893 3020 	ldrb.w	r3, [r3, #32]
 80021ca:	2b01      	cmp	r3, #1
 80021cc:	d102      	bne.n	80021d4 <HAL_ADC_ConfigChannel+0x1f8>
 80021ce:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80021d2:	e000      	b.n	80021d6 <HAL_ADC_ConfigChannel+0x1fa>
 80021d4:	2300      	movs	r3, #0
 80021d6:	461a      	mov	r2, r3
 80021d8:	f7ff fb6a 	bl	80018b0 <LL_ADC_SetOffsetSaturation>
 80021dc:	e1ee      	b.n	80025bc <HAL_ADC_ConfigChannel+0x5e0>
        else
#endif /* ADC_VER_V5_V90 */
        {
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSignedSaturation));
          /* Set ADC selected offset signed saturation */
          LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSignedSaturation == ENABLE) ? LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE : LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE);
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	6818      	ldr	r0, [r3, #0]
 80021e2:	683b      	ldr	r3, [r7, #0]
 80021e4:	6919      	ldr	r1, [r3, #16]
 80021e6:	683b      	ldr	r3, [r7, #0]
 80021e8:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80021ec:	2b01      	cmp	r3, #1
 80021ee:	d102      	bne.n	80021f6 <HAL_ADC_ConfigChannel+0x21a>
 80021f0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80021f4:	e000      	b.n	80021f8 <HAL_ADC_ConfigChannel+0x21c>
 80021f6:	2300      	movs	r3, #0
 80021f8:	461a      	mov	r2, r3
 80021fa:	f7ff fb37 	bl	800186c <LL_ADC_SetOffsetSignedSaturation>

          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetRightShift));
          /* Set ADC selected offset right shift */
          LL_ADC_SetDataRightShift(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetRightShift == ENABLE) ? LL_ADC_OFFSET_RSHIFT_ENABLE : LL_ADC_OFFSET_RSHIFT_DISABLE);
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	6818      	ldr	r0, [r3, #0]
 8002202:	683b      	ldr	r3, [r7, #0]
 8002204:	6919      	ldr	r1, [r3, #16]
 8002206:	683b      	ldr	r3, [r7, #0]
 8002208:	7e1b      	ldrb	r3, [r3, #24]
 800220a:	2b01      	cmp	r3, #1
 800220c:	d102      	bne.n	8002214 <HAL_ADC_ConfigChannel+0x238>
 800220e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002212:	e000      	b.n	8002216 <HAL_ADC_ConfigChannel+0x23a>
 8002214:	2300      	movs	r3, #0
 8002216:	461a      	mov	r2, r3
 8002218:	f7ff fb0e 	bl	8001838 <LL_ADC_SetDataRightShift>
 800221c:	e1ce      	b.n	80025bc <HAL_ADC_ConfigChannel+0x5e0>
      {
        /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is enabled.
          If this is the case, offset OFRx is disabled since
          sConfig->OffsetNumber = ADC_OFFSET_NONE. */
#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	4a23      	ldr	r2, [pc, #140]	; (80022b0 <HAL_ADC_ConfigChannel+0x2d4>)
 8002224:	4293      	cmp	r3, r2
 8002226:	f040 8181 	bne.w	800252c <HAL_ADC_ConfigChannel+0x550>
        {
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	2100      	movs	r1, #0
 8002230:	4618      	mov	r0, r3
 8002232:	f7ff faeb 	bl	800180c <LL_ADC_GetOffsetChannel>
 8002236:	4603      	mov	r3, r0
 8002238:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800223c:	2b00      	cmp	r3, #0
 800223e:	d10a      	bne.n	8002256 <HAL_ADC_ConfigChannel+0x27a>
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	2100      	movs	r1, #0
 8002246:	4618      	mov	r0, r3
 8002248:	f7ff fae0 	bl	800180c <LL_ADC_GetOffsetChannel>
 800224c:	4603      	mov	r3, r0
 800224e:	0e9b      	lsrs	r3, r3, #26
 8002250:	f003 021f 	and.w	r2, r3, #31
 8002254:	e01e      	b.n	8002294 <HAL_ADC_ConfigChannel+0x2b8>
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	2100      	movs	r1, #0
 800225c:	4618      	mov	r0, r3
 800225e:	f7ff fad5 	bl	800180c <LL_ADC_GetOffsetChannel>
 8002262:	4603      	mov	r3, r0
 8002264:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002268:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800226c:	fa93 f3a3 	rbit	r3, r3
 8002270:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  return result;
 8002274:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8002278:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  if (value == 0U)
 800227c:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 8002280:	2b00      	cmp	r3, #0
 8002282:	d101      	bne.n	8002288 <HAL_ADC_ConfigChannel+0x2ac>
    return 32U;
 8002284:	2320      	movs	r3, #32
 8002286:	e004      	b.n	8002292 <HAL_ADC_ConfigChannel+0x2b6>
  return __builtin_clz(value);
 8002288:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800228c:	fab3 f383 	clz	r3, r3
 8002290:	b2db      	uxtb	r3, r3
 8002292:	461a      	mov	r2, r3
 8002294:	683b      	ldr	r3, [r7, #0]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800229c:	2b00      	cmp	r3, #0
 800229e:	d10b      	bne.n	80022b8 <HAL_ADC_ConfigChannel+0x2dc>
 80022a0:	683b      	ldr	r3, [r7, #0]
 80022a2:	681b      	ldr	r3, [r3, #0]
 80022a4:	0e9b      	lsrs	r3, r3, #26
 80022a6:	f003 031f 	and.w	r3, r3, #31
 80022aa:	e01e      	b.n	80022ea <HAL_ADC_ConfigChannel+0x30e>
 80022ac:	47ff0000 	.word	0x47ff0000
 80022b0:	58026000 	.word	0x58026000
 80022b4:	5c001000 	.word	0x5c001000
 80022b8:	683b      	ldr	r3, [r7, #0]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80022c0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80022c4:	fa93 f3a3 	rbit	r3, r3
 80022c8:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
  return result;
 80022cc:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 80022d0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  if (value == 0U)
 80022d4:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d101      	bne.n	80022e0 <HAL_ADC_ConfigChannel+0x304>
    return 32U;
 80022dc:	2320      	movs	r3, #32
 80022de:	e004      	b.n	80022ea <HAL_ADC_ConfigChannel+0x30e>
  return __builtin_clz(value);
 80022e0:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 80022e4:	fab3 f383 	clz	r3, r3
 80022e8:	b2db      	uxtb	r3, r3
 80022ea:	429a      	cmp	r2, r3
 80022ec:	d106      	bne.n	80022fc <HAL_ADC_ConfigChannel+0x320>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	2200      	movs	r2, #0
 80022f4:	2100      	movs	r1, #0
 80022f6:	4618      	mov	r0, r3
 80022f8:	f7ff fb1e 	bl	8001938 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	2101      	movs	r1, #1
 8002302:	4618      	mov	r0, r3
 8002304:	f7ff fa82 	bl	800180c <LL_ADC_GetOffsetChannel>
 8002308:	4603      	mov	r3, r0
 800230a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800230e:	2b00      	cmp	r3, #0
 8002310:	d10a      	bne.n	8002328 <HAL_ADC_ConfigChannel+0x34c>
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	2101      	movs	r1, #1
 8002318:	4618      	mov	r0, r3
 800231a:	f7ff fa77 	bl	800180c <LL_ADC_GetOffsetChannel>
 800231e:	4603      	mov	r3, r0
 8002320:	0e9b      	lsrs	r3, r3, #26
 8002322:	f003 021f 	and.w	r2, r3, #31
 8002326:	e01e      	b.n	8002366 <HAL_ADC_ConfigChannel+0x38a>
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	2101      	movs	r1, #1
 800232e:	4618      	mov	r0, r3
 8002330:	f7ff fa6c 	bl	800180c <LL_ADC_GetOffsetChannel>
 8002334:	4603      	mov	r3, r0
 8002336:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800233a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800233e:	fa93 f3a3 	rbit	r3, r3
 8002342:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  return result;
 8002346:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800234a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  if (value == 0U)
 800234e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8002352:	2b00      	cmp	r3, #0
 8002354:	d101      	bne.n	800235a <HAL_ADC_ConfigChannel+0x37e>
    return 32U;
 8002356:	2320      	movs	r3, #32
 8002358:	e004      	b.n	8002364 <HAL_ADC_ConfigChannel+0x388>
  return __builtin_clz(value);
 800235a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800235e:	fab3 f383 	clz	r3, r3
 8002362:	b2db      	uxtb	r3, r3
 8002364:	461a      	mov	r2, r3
 8002366:	683b      	ldr	r3, [r7, #0]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800236e:	2b00      	cmp	r3, #0
 8002370:	d105      	bne.n	800237e <HAL_ADC_ConfigChannel+0x3a2>
 8002372:	683b      	ldr	r3, [r7, #0]
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	0e9b      	lsrs	r3, r3, #26
 8002378:	f003 031f 	and.w	r3, r3, #31
 800237c:	e018      	b.n	80023b0 <HAL_ADC_ConfigChannel+0x3d4>
 800237e:	683b      	ldr	r3, [r7, #0]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002386:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800238a:	fa93 f3a3 	rbit	r3, r3
 800238e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  return result;
 8002392:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002396:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  if (value == 0U)
 800239a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800239e:	2b00      	cmp	r3, #0
 80023a0:	d101      	bne.n	80023a6 <HAL_ADC_ConfigChannel+0x3ca>
    return 32U;
 80023a2:	2320      	movs	r3, #32
 80023a4:	e004      	b.n	80023b0 <HAL_ADC_ConfigChannel+0x3d4>
  return __builtin_clz(value);
 80023a6:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80023aa:	fab3 f383 	clz	r3, r3
 80023ae:	b2db      	uxtb	r3, r3
 80023b0:	429a      	cmp	r2, r3
 80023b2:	d106      	bne.n	80023c2 <HAL_ADC_ConfigChannel+0x3e6>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	2200      	movs	r2, #0
 80023ba:	2101      	movs	r1, #1
 80023bc:	4618      	mov	r0, r3
 80023be:	f7ff fabb 	bl	8001938 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	2102      	movs	r1, #2
 80023c8:	4618      	mov	r0, r3
 80023ca:	f7ff fa1f 	bl	800180c <LL_ADC_GetOffsetChannel>
 80023ce:	4603      	mov	r3, r0
 80023d0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d10a      	bne.n	80023ee <HAL_ADC_ConfigChannel+0x412>
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	2102      	movs	r1, #2
 80023de:	4618      	mov	r0, r3
 80023e0:	f7ff fa14 	bl	800180c <LL_ADC_GetOffsetChannel>
 80023e4:	4603      	mov	r3, r0
 80023e6:	0e9b      	lsrs	r3, r3, #26
 80023e8:	f003 021f 	and.w	r2, r3, #31
 80023ec:	e01e      	b.n	800242c <HAL_ADC_ConfigChannel+0x450>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	2102      	movs	r1, #2
 80023f4:	4618      	mov	r0, r3
 80023f6:	f7ff fa09 	bl	800180c <LL_ADC_GetOffsetChannel>
 80023fa:	4603      	mov	r3, r0
 80023fc:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002400:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8002404:	fa93 f3a3 	rbit	r3, r3
 8002408:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  return result;
 800240c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8002410:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  if (value == 0U)
 8002414:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8002418:	2b00      	cmp	r3, #0
 800241a:	d101      	bne.n	8002420 <HAL_ADC_ConfigChannel+0x444>
    return 32U;
 800241c:	2320      	movs	r3, #32
 800241e:	e004      	b.n	800242a <HAL_ADC_ConfigChannel+0x44e>
  return __builtin_clz(value);
 8002420:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8002424:	fab3 f383 	clz	r3, r3
 8002428:	b2db      	uxtb	r3, r3
 800242a:	461a      	mov	r2, r3
 800242c:	683b      	ldr	r3, [r7, #0]
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002434:	2b00      	cmp	r3, #0
 8002436:	d105      	bne.n	8002444 <HAL_ADC_ConfigChannel+0x468>
 8002438:	683b      	ldr	r3, [r7, #0]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	0e9b      	lsrs	r3, r3, #26
 800243e:	f003 031f 	and.w	r3, r3, #31
 8002442:	e014      	b.n	800246e <HAL_ADC_ConfigChannel+0x492>
 8002444:	683b      	ldr	r3, [r7, #0]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	67fb      	str	r3, [r7, #124]	; 0x7c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800244a:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800244c:	fa93 f3a3 	rbit	r3, r3
 8002450:	67bb      	str	r3, [r7, #120]	; 0x78
  return result;
 8002452:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002454:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
  if (value == 0U)
 8002458:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800245c:	2b00      	cmp	r3, #0
 800245e:	d101      	bne.n	8002464 <HAL_ADC_ConfigChannel+0x488>
    return 32U;
 8002460:	2320      	movs	r3, #32
 8002462:	e004      	b.n	800246e <HAL_ADC_ConfigChannel+0x492>
  return __builtin_clz(value);
 8002464:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002468:	fab3 f383 	clz	r3, r3
 800246c:	b2db      	uxtb	r3, r3
 800246e:	429a      	cmp	r2, r3
 8002470:	d106      	bne.n	8002480 <HAL_ADC_ConfigChannel+0x4a4>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	2200      	movs	r2, #0
 8002478:	2102      	movs	r1, #2
 800247a:	4618      	mov	r0, r3
 800247c:	f7ff fa5c 	bl	8001938 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	681b      	ldr	r3, [r3, #0]
 8002484:	2103      	movs	r1, #3
 8002486:	4618      	mov	r0, r3
 8002488:	f7ff f9c0 	bl	800180c <LL_ADC_GetOffsetChannel>
 800248c:	4603      	mov	r3, r0
 800248e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002492:	2b00      	cmp	r3, #0
 8002494:	d10a      	bne.n	80024ac <HAL_ADC_ConfigChannel+0x4d0>
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	681b      	ldr	r3, [r3, #0]
 800249a:	2103      	movs	r1, #3
 800249c:	4618      	mov	r0, r3
 800249e:	f7ff f9b5 	bl	800180c <LL_ADC_GetOffsetChannel>
 80024a2:	4603      	mov	r3, r0
 80024a4:	0e9b      	lsrs	r3, r3, #26
 80024a6:	f003 021f 	and.w	r2, r3, #31
 80024aa:	e017      	b.n	80024dc <HAL_ADC_ConfigChannel+0x500>
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	2103      	movs	r1, #3
 80024b2:	4618      	mov	r0, r3
 80024b4:	f7ff f9aa 	bl	800180c <LL_ADC_GetOffsetChannel>
 80024b8:	4603      	mov	r3, r0
 80024ba:	673b      	str	r3, [r7, #112]	; 0x70
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80024bc:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80024be:	fa93 f3a3 	rbit	r3, r3
 80024c2:	66fb      	str	r3, [r7, #108]	; 0x6c
  return result;
 80024c4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80024c6:	677b      	str	r3, [r7, #116]	; 0x74
  if (value == 0U)
 80024c8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80024ca:	2b00      	cmp	r3, #0
 80024cc:	d101      	bne.n	80024d2 <HAL_ADC_ConfigChannel+0x4f6>
    return 32U;
 80024ce:	2320      	movs	r3, #32
 80024d0:	e003      	b.n	80024da <HAL_ADC_ConfigChannel+0x4fe>
  return __builtin_clz(value);
 80024d2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80024d4:	fab3 f383 	clz	r3, r3
 80024d8:	b2db      	uxtb	r3, r3
 80024da:	461a      	mov	r2, r3
 80024dc:	683b      	ldr	r3, [r7, #0]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80024e4:	2b00      	cmp	r3, #0
 80024e6:	d105      	bne.n	80024f4 <HAL_ADC_ConfigChannel+0x518>
 80024e8:	683b      	ldr	r3, [r7, #0]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	0e9b      	lsrs	r3, r3, #26
 80024ee:	f003 031f 	and.w	r3, r3, #31
 80024f2:	e011      	b.n	8002518 <HAL_ADC_ConfigChannel+0x53c>
 80024f4:	683b      	ldr	r3, [r7, #0]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	667b      	str	r3, [r7, #100]	; 0x64
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80024fa:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80024fc:	fa93 f3a3 	rbit	r3, r3
 8002500:	663b      	str	r3, [r7, #96]	; 0x60
  return result;
 8002502:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002504:	66bb      	str	r3, [r7, #104]	; 0x68
  if (value == 0U)
 8002506:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002508:	2b00      	cmp	r3, #0
 800250a:	d101      	bne.n	8002510 <HAL_ADC_ConfigChannel+0x534>
    return 32U;
 800250c:	2320      	movs	r3, #32
 800250e:	e003      	b.n	8002518 <HAL_ADC_ConfigChannel+0x53c>
  return __builtin_clz(value);
 8002510:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002512:	fab3 f383 	clz	r3, r3
 8002516:	b2db      	uxtb	r3, r3
 8002518:	429a      	cmp	r2, r3
 800251a:	d14f      	bne.n	80025bc <HAL_ADC_ConfigChannel+0x5e0>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	681b      	ldr	r3, [r3, #0]
 8002520:	2200      	movs	r2, #0
 8002522:	2103      	movs	r1, #3
 8002524:	4618      	mov	r0, r3
 8002526:	f7ff fa07 	bl	8001938 <LL_ADC_SetOffsetState>
 800252a:	e047      	b.n	80025bc <HAL_ADC_ConfigChannel+0x5e0>
          }
        }
        else
#endif /* ADC_VER_V5_V90 */
        {
          if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002532:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002536:	683b      	ldr	r3, [r7, #0]
 8002538:	681b      	ldr	r3, [r3, #0]
 800253a:	069b      	lsls	r3, r3, #26
 800253c:	429a      	cmp	r2, r3
 800253e:	d107      	bne.n	8002550 <HAL_ADC_ConfigChannel+0x574>
          {
            CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002546:	687b      	ldr	r3, [r7, #4]
 8002548:	681b      	ldr	r3, [r3, #0]
 800254a:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 800254e:	661a      	str	r2, [r3, #96]	; 0x60
          }
          if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002556:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 800255a:	683b      	ldr	r3, [r7, #0]
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	069b      	lsls	r3, r3, #26
 8002560:	429a      	cmp	r2, r3
 8002562:	d107      	bne.n	8002574 <HAL_ADC_ConfigChannel+0x598>
          {
            CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002572:	665a      	str	r2, [r3, #100]	; 0x64
          }
          if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800257a:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 800257e:	683b      	ldr	r3, [r7, #0]
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	069b      	lsls	r3, r3, #26
 8002584:	429a      	cmp	r2, r3
 8002586:	d107      	bne.n	8002598 <HAL_ADC_ConfigChannel+0x5bc>
          {
            CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002596:	669a      	str	r2, [r3, #104]	; 0x68
          }
          if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800259e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 80025a2:	683b      	ldr	r3, [r7, #0]
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	069b      	lsls	r3, r3, #26
 80025a8:	429a      	cmp	r2, r3
 80025aa:	d107      	bne.n	80025bc <HAL_ADC_ConfigChannel+0x5e0>
          {
            CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 80025ba:	66da      	str	r2, [r3, #108]	; 0x6c

    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated only when ADC is disabled:                */
    /*  - Single or differential mode                                           */
    /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	4618      	mov	r0, r3
 80025c2:	f7ff fac9 	bl	8001b58 <LL_ADC_IsEnabled>
 80025c6:	4603      	mov	r3, r0
 80025c8:	2b00      	cmp	r3, #0
 80025ca:	f040 8219 	bne.w	8002a00 <HAL_ADC_ConfigChannel+0xa24>
    {
      /* Set mode single-ended or differential input of the selected ADC channel */
      LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	6818      	ldr	r0, [r3, #0]
 80025d2:	683b      	ldr	r3, [r7, #0]
 80025d4:	6819      	ldr	r1, [r3, #0]
 80025d6:	683b      	ldr	r3, [r7, #0]
 80025d8:	68db      	ldr	r3, [r3, #12]
 80025da:	461a      	mov	r2, r3
 80025dc:	f7ff fa2e 	bl	8001a3c <LL_ADC_SetChannelSingleDiff>

      /* Configuration of differential mode */
      if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
 80025e0:	683b      	ldr	r3, [r7, #0]
 80025e2:	68db      	ldr	r3, [r3, #12]
 80025e4:	4aa1      	ldr	r2, [pc, #644]	; (800286c <HAL_ADC_ConfigChannel+0x890>)
 80025e6:	4293      	cmp	r3, r2
 80025e8:	f040 812e 	bne.w	8002848 <HAL_ADC_ConfigChannel+0x86c>
      {
        /* Set sampling time of the selected ADC channel */
        /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range */
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	6818      	ldr	r0, [r3, #0]
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 80025f0:	683b      	ldr	r3, [r7, #0]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80025f8:	2b00      	cmp	r3, #0
 80025fa:	d10b      	bne.n	8002614 <HAL_ADC_ConfigChannel+0x638>
 80025fc:	683b      	ldr	r3, [r7, #0]
 80025fe:	681b      	ldr	r3, [r3, #0]
 8002600:	0e9b      	lsrs	r3, r3, #26
 8002602:	3301      	adds	r3, #1
 8002604:	f003 031f 	and.w	r3, r3, #31
 8002608:	2b09      	cmp	r3, #9
 800260a:	bf94      	ite	ls
 800260c:	2301      	movls	r3, #1
 800260e:	2300      	movhi	r3, #0
 8002610:	b2db      	uxtb	r3, r3
 8002612:	e019      	b.n	8002648 <HAL_ADC_ConfigChannel+0x66c>
 8002614:	683b      	ldr	r3, [r7, #0]
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	65bb      	str	r3, [r7, #88]	; 0x58
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800261a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800261c:	fa93 f3a3 	rbit	r3, r3
 8002620:	657b      	str	r3, [r7, #84]	; 0x54
  return result;
 8002622:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002624:	65fb      	str	r3, [r7, #92]	; 0x5c
  if (value == 0U)
 8002626:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8002628:	2b00      	cmp	r3, #0
 800262a:	d101      	bne.n	8002630 <HAL_ADC_ConfigChannel+0x654>
    return 32U;
 800262c:	2320      	movs	r3, #32
 800262e:	e003      	b.n	8002638 <HAL_ADC_ConfigChannel+0x65c>
  return __builtin_clz(value);
 8002630:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8002632:	fab3 f383 	clz	r3, r3
 8002636:	b2db      	uxtb	r3, r3
 8002638:	3301      	adds	r3, #1
 800263a:	f003 031f 	and.w	r3, r3, #31
 800263e:	2b09      	cmp	r3, #9
 8002640:	bf94      	ite	ls
 8002642:	2301      	movls	r3, #1
 8002644:	2300      	movhi	r3, #0
 8002646:	b2db      	uxtb	r3, r3
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002648:	2b00      	cmp	r3, #0
 800264a:	d079      	beq.n	8002740 <HAL_ADC_ConfigChannel+0x764>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 800264c:	683b      	ldr	r3, [r7, #0]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002654:	2b00      	cmp	r3, #0
 8002656:	d107      	bne.n	8002668 <HAL_ADC_ConfigChannel+0x68c>
 8002658:	683b      	ldr	r3, [r7, #0]
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	0e9b      	lsrs	r3, r3, #26
 800265e:	3301      	adds	r3, #1
 8002660:	069b      	lsls	r3, r3, #26
 8002662:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002666:	e015      	b.n	8002694 <HAL_ADC_ConfigChannel+0x6b8>
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800266e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002670:	fa93 f3a3 	rbit	r3, r3
 8002674:	64bb      	str	r3, [r7, #72]	; 0x48
  return result;
 8002676:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002678:	653b      	str	r3, [r7, #80]	; 0x50
  if (value == 0U)
 800267a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800267c:	2b00      	cmp	r3, #0
 800267e:	d101      	bne.n	8002684 <HAL_ADC_ConfigChannel+0x6a8>
    return 32U;
 8002680:	2320      	movs	r3, #32
 8002682:	e003      	b.n	800268c <HAL_ADC_ConfigChannel+0x6b0>
  return __builtin_clz(value);
 8002684:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002686:	fab3 f383 	clz	r3, r3
 800268a:	b2db      	uxtb	r3, r3
 800268c:	3301      	adds	r3, #1
 800268e:	069b      	lsls	r3, r3, #26
 8002690:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002694:	683b      	ldr	r3, [r7, #0]
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800269c:	2b00      	cmp	r3, #0
 800269e:	d109      	bne.n	80026b4 <HAL_ADC_ConfigChannel+0x6d8>
 80026a0:	683b      	ldr	r3, [r7, #0]
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	0e9b      	lsrs	r3, r3, #26
 80026a6:	3301      	adds	r3, #1
 80026a8:	f003 031f 	and.w	r3, r3, #31
 80026ac:	2101      	movs	r1, #1
 80026ae:	fa01 f303 	lsl.w	r3, r1, r3
 80026b2:	e017      	b.n	80026e4 <HAL_ADC_ConfigChannel+0x708>
 80026b4:	683b      	ldr	r3, [r7, #0]
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	643b      	str	r3, [r7, #64]	; 0x40
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80026ba:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80026bc:	fa93 f3a3 	rbit	r3, r3
 80026c0:	63fb      	str	r3, [r7, #60]	; 0x3c
  return result;
 80026c2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80026c4:	647b      	str	r3, [r7, #68]	; 0x44
  if (value == 0U)
 80026c6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80026c8:	2b00      	cmp	r3, #0
 80026ca:	d101      	bne.n	80026d0 <HAL_ADC_ConfigChannel+0x6f4>
    return 32U;
 80026cc:	2320      	movs	r3, #32
 80026ce:	e003      	b.n	80026d8 <HAL_ADC_ConfigChannel+0x6fc>
  return __builtin_clz(value);
 80026d0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80026d2:	fab3 f383 	clz	r3, r3
 80026d6:	b2db      	uxtb	r3, r3
 80026d8:	3301      	adds	r3, #1
 80026da:	f003 031f 	and.w	r3, r3, #31
 80026de:	2101      	movs	r1, #1
 80026e0:	fa01 f303 	lsl.w	r3, r1, r3
 80026e4:	ea42 0103 	orr.w	r1, r2, r3
 80026e8:	683b      	ldr	r3, [r7, #0]
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d10a      	bne.n	800270a <HAL_ADC_ConfigChannel+0x72e>
 80026f4:	683b      	ldr	r3, [r7, #0]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	0e9b      	lsrs	r3, r3, #26
 80026fa:	3301      	adds	r3, #1
 80026fc:	f003 021f 	and.w	r2, r3, #31
 8002700:	4613      	mov	r3, r2
 8002702:	005b      	lsls	r3, r3, #1
 8002704:	4413      	add	r3, r2
 8002706:	051b      	lsls	r3, r3, #20
 8002708:	e018      	b.n	800273c <HAL_ADC_ConfigChannel+0x760>
 800270a:	683b      	ldr	r3, [r7, #0]
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002710:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002712:	fa93 f3a3 	rbit	r3, r3
 8002716:	633b      	str	r3, [r7, #48]	; 0x30
  return result;
 8002718:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800271a:	63bb      	str	r3, [r7, #56]	; 0x38
  if (value == 0U)
 800271c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800271e:	2b00      	cmp	r3, #0
 8002720:	d101      	bne.n	8002726 <HAL_ADC_ConfigChannel+0x74a>
    return 32U;
 8002722:	2320      	movs	r3, #32
 8002724:	e003      	b.n	800272e <HAL_ADC_ConfigChannel+0x752>
  return __builtin_clz(value);
 8002726:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002728:	fab3 f383 	clz	r3, r3
 800272c:	b2db      	uxtb	r3, r3
 800272e:	3301      	adds	r3, #1
 8002730:	f003 021f 	and.w	r2, r3, #31
 8002734:	4613      	mov	r3, r2
 8002736:	005b      	lsls	r3, r3, #1
 8002738:	4413      	add	r3, r2
 800273a:	051b      	lsls	r3, r3, #20
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 800273c:	430b      	orrs	r3, r1
 800273e:	e07e      	b.n	800283e <HAL_ADC_ConfigChannel+0x862>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002740:	683b      	ldr	r3, [r7, #0]
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002748:	2b00      	cmp	r3, #0
 800274a:	d107      	bne.n	800275c <HAL_ADC_ConfigChannel+0x780>
 800274c:	683b      	ldr	r3, [r7, #0]
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	0e9b      	lsrs	r3, r3, #26
 8002752:	3301      	adds	r3, #1
 8002754:	069b      	lsls	r3, r3, #26
 8002756:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 800275a:	e015      	b.n	8002788 <HAL_ADC_ConfigChannel+0x7ac>
 800275c:	683b      	ldr	r3, [r7, #0]
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002762:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002764:	fa93 f3a3 	rbit	r3, r3
 8002768:	627b      	str	r3, [r7, #36]	; 0x24
  return result;
 800276a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800276c:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (value == 0U)
 800276e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002770:	2b00      	cmp	r3, #0
 8002772:	d101      	bne.n	8002778 <HAL_ADC_ConfigChannel+0x79c>
    return 32U;
 8002774:	2320      	movs	r3, #32
 8002776:	e003      	b.n	8002780 <HAL_ADC_ConfigChannel+0x7a4>
  return __builtin_clz(value);
 8002778:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800277a:	fab3 f383 	clz	r3, r3
 800277e:	b2db      	uxtb	r3, r3
 8002780:	3301      	adds	r3, #1
 8002782:	069b      	lsls	r3, r3, #26
 8002784:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002788:	683b      	ldr	r3, [r7, #0]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002790:	2b00      	cmp	r3, #0
 8002792:	d109      	bne.n	80027a8 <HAL_ADC_ConfigChannel+0x7cc>
 8002794:	683b      	ldr	r3, [r7, #0]
 8002796:	681b      	ldr	r3, [r3, #0]
 8002798:	0e9b      	lsrs	r3, r3, #26
 800279a:	3301      	adds	r3, #1
 800279c:	f003 031f 	and.w	r3, r3, #31
 80027a0:	2101      	movs	r1, #1
 80027a2:	fa01 f303 	lsl.w	r3, r1, r3
 80027a6:	e017      	b.n	80027d8 <HAL_ADC_ConfigChannel+0x7fc>
 80027a8:	683b      	ldr	r3, [r7, #0]
 80027aa:	681b      	ldr	r3, [r3, #0]
 80027ac:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80027ae:	69fb      	ldr	r3, [r7, #28]
 80027b0:	fa93 f3a3 	rbit	r3, r3
 80027b4:	61bb      	str	r3, [r7, #24]
  return result;
 80027b6:	69bb      	ldr	r3, [r7, #24]
 80027b8:	623b      	str	r3, [r7, #32]
  if (value == 0U)
 80027ba:	6a3b      	ldr	r3, [r7, #32]
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d101      	bne.n	80027c4 <HAL_ADC_ConfigChannel+0x7e8>
    return 32U;
 80027c0:	2320      	movs	r3, #32
 80027c2:	e003      	b.n	80027cc <HAL_ADC_ConfigChannel+0x7f0>
  return __builtin_clz(value);
 80027c4:	6a3b      	ldr	r3, [r7, #32]
 80027c6:	fab3 f383 	clz	r3, r3
 80027ca:	b2db      	uxtb	r3, r3
 80027cc:	3301      	adds	r3, #1
 80027ce:	f003 031f 	and.w	r3, r3, #31
 80027d2:	2101      	movs	r1, #1
 80027d4:	fa01 f303 	lsl.w	r3, r1, r3
 80027d8:	ea42 0103 	orr.w	r1, r2, r3
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80027e4:	2b00      	cmp	r3, #0
 80027e6:	d10d      	bne.n	8002804 <HAL_ADC_ConfigChannel+0x828>
 80027e8:	683b      	ldr	r3, [r7, #0]
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	0e9b      	lsrs	r3, r3, #26
 80027ee:	3301      	adds	r3, #1
 80027f0:	f003 021f 	and.w	r2, r3, #31
 80027f4:	4613      	mov	r3, r2
 80027f6:	005b      	lsls	r3, r3, #1
 80027f8:	4413      	add	r3, r2
 80027fa:	3b1e      	subs	r3, #30
 80027fc:	051b      	lsls	r3, r3, #20
 80027fe:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002802:	e01b      	b.n	800283c <HAL_ADC_ConfigChannel+0x860>
 8002804:	683b      	ldr	r3, [r7, #0]
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	613b      	str	r3, [r7, #16]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800280a:	693b      	ldr	r3, [r7, #16]
 800280c:	fa93 f3a3 	rbit	r3, r3
 8002810:	60fb      	str	r3, [r7, #12]
  return result;
 8002812:	68fb      	ldr	r3, [r7, #12]
 8002814:	617b      	str	r3, [r7, #20]
  if (value == 0U)
 8002816:	697b      	ldr	r3, [r7, #20]
 8002818:	2b00      	cmp	r3, #0
 800281a:	d101      	bne.n	8002820 <HAL_ADC_ConfigChannel+0x844>
    return 32U;
 800281c:	2320      	movs	r3, #32
 800281e:	e003      	b.n	8002828 <HAL_ADC_ConfigChannel+0x84c>
  return __builtin_clz(value);
 8002820:	697b      	ldr	r3, [r7, #20]
 8002822:	fab3 f383 	clz	r3, r3
 8002826:	b2db      	uxtb	r3, r3
 8002828:	3301      	adds	r3, #1
 800282a:	f003 021f 	and.w	r2, r3, #31
 800282e:	4613      	mov	r3, r2
 8002830:	005b      	lsls	r3, r3, #1
 8002832:	4413      	add	r3, r2
 8002834:	3b1e      	subs	r3, #30
 8002836:	051b      	lsls	r3, r3, #20
 8002838:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 800283c:	430b      	orrs	r3, r1
 800283e:	683a      	ldr	r2, [r7, #0]
 8002840:	6892      	ldr	r2, [r2, #8]
 8002842:	4619      	mov	r1, r3
 8002844:	f7ff f8ce 	bl	80019e4 <LL_ADC_SetChannelSamplingTime>
      /* If internal channel selected, enable dedicated internal buffers and    */
      /* paths.                                                                 */
      /* Note: these internal measurement paths can be disabled using           */
      /* HAL_ADC_DeInit().                                                      */

      if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002848:	683b      	ldr	r3, [r7, #0]
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	2b00      	cmp	r3, #0
 800284e:	f280 80d7 	bge.w	8002a00 <HAL_ADC_ConfigChannel+0xa24>
      {
        /* Configuration of common ADC parameters                                 */

        tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	4a06      	ldr	r2, [pc, #24]	; (8002870 <HAL_ADC_ConfigChannel+0x894>)
 8002858:	4293      	cmp	r3, r2
 800285a:	d004      	beq.n	8002866 <HAL_ADC_ConfigChannel+0x88a>
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	4a04      	ldr	r2, [pc, #16]	; (8002874 <HAL_ADC_ConfigChannel+0x898>)
 8002862:	4293      	cmp	r3, r2
 8002864:	d10a      	bne.n	800287c <HAL_ADC_ConfigChannel+0x8a0>
 8002866:	4b04      	ldr	r3, [pc, #16]	; (8002878 <HAL_ADC_ConfigChannel+0x89c>)
 8002868:	e009      	b.n	800287e <HAL_ADC_ConfigChannel+0x8a2>
 800286a:	bf00      	nop
 800286c:	47ff0000 	.word	0x47ff0000
 8002870:	40022000 	.word	0x40022000
 8002874:	40022100 	.word	0x40022100
 8002878:	40022300 	.word	0x40022300
 800287c:	4b65      	ldr	r3, [pc, #404]	; (8002a14 <HAL_ADC_ConfigChannel+0xa38>)
 800287e:	4618      	mov	r0, r3
 8002880:	f7fe ff84 	bl	800178c <LL_ADC_GetCommonPathInternalCh>
 8002884:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc

        /* Software is allowed to change common parameters only when all ADCs   */
        /* of the common group are disabled.                                    */
        if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	4a62      	ldr	r2, [pc, #392]	; (8002a18 <HAL_ADC_ConfigChannel+0xa3c>)
 800288e:	4293      	cmp	r3, r2
 8002890:	d004      	beq.n	800289c <HAL_ADC_ConfigChannel+0x8c0>
 8002892:	687b      	ldr	r3, [r7, #4]
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	4a61      	ldr	r2, [pc, #388]	; (8002a1c <HAL_ADC_ConfigChannel+0xa40>)
 8002898:	4293      	cmp	r3, r2
 800289a:	d10e      	bne.n	80028ba <HAL_ADC_ConfigChannel+0x8de>
 800289c:	485e      	ldr	r0, [pc, #376]	; (8002a18 <HAL_ADC_ConfigChannel+0xa3c>)
 800289e:	f7ff f95b 	bl	8001b58 <LL_ADC_IsEnabled>
 80028a2:	4604      	mov	r4, r0
 80028a4:	485d      	ldr	r0, [pc, #372]	; (8002a1c <HAL_ADC_ConfigChannel+0xa40>)
 80028a6:	f7ff f957 	bl	8001b58 <LL_ADC_IsEnabled>
 80028aa:	4603      	mov	r3, r0
 80028ac:	4323      	orrs	r3, r4
 80028ae:	2b00      	cmp	r3, #0
 80028b0:	bf0c      	ite	eq
 80028b2:	2301      	moveq	r3, #1
 80028b4:	2300      	movne	r3, #0
 80028b6:	b2db      	uxtb	r3, r3
 80028b8:	e008      	b.n	80028cc <HAL_ADC_ConfigChannel+0x8f0>
 80028ba:	4859      	ldr	r0, [pc, #356]	; (8002a20 <HAL_ADC_ConfigChannel+0xa44>)
 80028bc:	f7ff f94c 	bl	8001b58 <LL_ADC_IsEnabled>
 80028c0:	4603      	mov	r3, r0
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	bf0c      	ite	eq
 80028c6:	2301      	moveq	r3, #1
 80028c8:	2300      	movne	r3, #0
 80028ca:	b2db      	uxtb	r3, r3
 80028cc:	2b00      	cmp	r3, #0
 80028ce:	f000 8084 	beq.w	80029da <HAL_ADC_ConfigChannel+0x9fe>
        {
          /* If the requested internal measurement path has already been enabled, */
          /* bypass the configuration processing.                                 */
          if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 80028d2:	683b      	ldr	r3, [r7, #0]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	4a53      	ldr	r2, [pc, #332]	; (8002a24 <HAL_ADC_ConfigChannel+0xa48>)
 80028d8:	4293      	cmp	r3, r2
 80028da:	d132      	bne.n	8002942 <HAL_ADC_ConfigChannel+0x966>
 80028dc:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 80028e0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80028e4:	2b00      	cmp	r3, #0
 80028e6:	d12c      	bne.n	8002942 <HAL_ADC_ConfigChannel+0x966>
          {
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	4a4c      	ldr	r2, [pc, #304]	; (8002a20 <HAL_ADC_ConfigChannel+0xa44>)
 80028ee:	4293      	cmp	r3, r2
 80028f0:	f040 8086 	bne.w	8002a00 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channel);
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	4a47      	ldr	r2, [pc, #284]	; (8002a18 <HAL_ADC_ConfigChannel+0xa3c>)
 80028fa:	4293      	cmp	r3, r2
 80028fc:	d004      	beq.n	8002908 <HAL_ADC_ConfigChannel+0x92c>
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	681b      	ldr	r3, [r3, #0]
 8002902:	4a46      	ldr	r2, [pc, #280]	; (8002a1c <HAL_ADC_ConfigChannel+0xa40>)
 8002904:	4293      	cmp	r3, r2
 8002906:	d101      	bne.n	800290c <HAL_ADC_ConfigChannel+0x930>
 8002908:	4a47      	ldr	r2, [pc, #284]	; (8002a28 <HAL_ADC_ConfigChannel+0xa4c>)
 800290a:	e000      	b.n	800290e <HAL_ADC_ConfigChannel+0x932>
 800290c:	4a41      	ldr	r2, [pc, #260]	; (8002a14 <HAL_ADC_ConfigChannel+0xa38>)
 800290e:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002912:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002916:	4619      	mov	r1, r3
 8002918:	4610      	mov	r0, r2
 800291a:	f7fe ff24 	bl	8001766 <LL_ADC_SetCommonPathInternalCh>
              /* Delay for temperature sensor stabilization time */
              /* Wait loop initialization and execution */
              /* Note: Variable divided by 2 to compensate partially              */
              /*       CPU processing cycles, scaling in us split to not          */
              /*       exceed 32 bits register capacity and handle low frequency. */
              wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 800291e:	4b43      	ldr	r3, [pc, #268]	; (8002a2c <HAL_ADC_ConfigChannel+0xa50>)
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	099b      	lsrs	r3, r3, #6
 8002924:	4a42      	ldr	r2, [pc, #264]	; (8002a30 <HAL_ADC_ConfigChannel+0xa54>)
 8002926:	fba2 2303 	umull	r2, r3, r2, r3
 800292a:	099b      	lsrs	r3, r3, #6
 800292c:	3301      	adds	r3, #1
 800292e:	005b      	lsls	r3, r3, #1
 8002930:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 8002932:	e002      	b.n	800293a <HAL_ADC_ConfigChannel+0x95e>
              {
                wait_loop_index--;
 8002934:	68bb      	ldr	r3, [r7, #8]
 8002936:	3b01      	subs	r3, #1
 8002938:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 800293a:	68bb      	ldr	r3, [r7, #8]
 800293c:	2b00      	cmp	r3, #0
 800293e:	d1f9      	bne.n	8002934 <HAL_ADC_ConfigChannel+0x958>
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8002940:	e05e      	b.n	8002a00 <HAL_ADC_ConfigChannel+0xa24>
              }
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 8002942:	683b      	ldr	r3, [r7, #0]
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	4a3b      	ldr	r2, [pc, #236]	; (8002a34 <HAL_ADC_ConfigChannel+0xa58>)
 8002948:	4293      	cmp	r3, r2
 800294a:	d120      	bne.n	800298e <HAL_ADC_ConfigChannel+0x9b2>
 800294c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002950:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002954:	2b00      	cmp	r3, #0
 8002956:	d11a      	bne.n	800298e <HAL_ADC_ConfigChannel+0x9b2>
          {
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	681b      	ldr	r3, [r3, #0]
 800295c:	4a30      	ldr	r2, [pc, #192]	; (8002a20 <HAL_ADC_ConfigChannel+0xa44>)
 800295e:	4293      	cmp	r3, r2
 8002960:	d14e      	bne.n	8002a00 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	4a2c      	ldr	r2, [pc, #176]	; (8002a18 <HAL_ADC_ConfigChannel+0xa3c>)
 8002968:	4293      	cmp	r3, r2
 800296a:	d004      	beq.n	8002976 <HAL_ADC_ConfigChannel+0x99a>
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	4a2a      	ldr	r2, [pc, #168]	; (8002a1c <HAL_ADC_ConfigChannel+0xa40>)
 8002972:	4293      	cmp	r3, r2
 8002974:	d101      	bne.n	800297a <HAL_ADC_ConfigChannel+0x99e>
 8002976:	4a2c      	ldr	r2, [pc, #176]	; (8002a28 <HAL_ADC_ConfigChannel+0xa4c>)
 8002978:	e000      	b.n	800297c <HAL_ADC_ConfigChannel+0x9a0>
 800297a:	4a26      	ldr	r2, [pc, #152]	; (8002a14 <HAL_ADC_ConfigChannel+0xa38>)
 800297c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002980:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002984:	4619      	mov	r1, r3
 8002986:	4610      	mov	r0, r2
 8002988:	f7fe feed 	bl	8001766 <LL_ADC_SetCommonPathInternalCh>
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 800298c:	e038      	b.n	8002a00 <HAL_ADC_ConfigChannel+0xa24>
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 800298e:	683b      	ldr	r3, [r7, #0]
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	4a29      	ldr	r2, [pc, #164]	; (8002a38 <HAL_ADC_ConfigChannel+0xa5c>)
 8002994:	4293      	cmp	r3, r2
 8002996:	d133      	bne.n	8002a00 <HAL_ADC_ConfigChannel+0xa24>
 8002998:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800299c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d12d      	bne.n	8002a00 <HAL_ADC_ConfigChannel+0xa24>
          {
            if (ADC_VREFINT_INSTANCE(hadc))
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	4a1d      	ldr	r2, [pc, #116]	; (8002a20 <HAL_ADC_ConfigChannel+0xa44>)
 80029aa:	4293      	cmp	r3, r2
 80029ac:	d128      	bne.n	8002a00 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	4a19      	ldr	r2, [pc, #100]	; (8002a18 <HAL_ADC_ConfigChannel+0xa3c>)
 80029b4:	4293      	cmp	r3, r2
 80029b6:	d004      	beq.n	80029c2 <HAL_ADC_ConfigChannel+0x9e6>
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	4a17      	ldr	r2, [pc, #92]	; (8002a1c <HAL_ADC_ConfigChannel+0xa40>)
 80029be:	4293      	cmp	r3, r2
 80029c0:	d101      	bne.n	80029c6 <HAL_ADC_ConfigChannel+0x9ea>
 80029c2:	4a19      	ldr	r2, [pc, #100]	; (8002a28 <HAL_ADC_ConfigChannel+0xa4c>)
 80029c4:	e000      	b.n	80029c8 <HAL_ADC_ConfigChannel+0x9ec>
 80029c6:	4a13      	ldr	r2, [pc, #76]	; (8002a14 <HAL_ADC_ConfigChannel+0xa38>)
 80029c8:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 80029cc:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80029d0:	4619      	mov	r1, r3
 80029d2:	4610      	mov	r0, r2
 80029d4:	f7fe fec7 	bl	8001766 <LL_ADC_SetCommonPathInternalCh>
 80029d8:	e012      	b.n	8002a00 <HAL_ADC_ConfigChannel+0xa24>
        /* enabled and other ADC of the common group are enabled, internal      */
        /* measurement paths cannot be enabled.                                 */
        else
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80029de:	f043 0220 	orr.w	r2, r3, #32
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	661a      	str	r2, [r3, #96]	; 0x60

          tmp_hal_status = HAL_ERROR;
 80029e6:	2301      	movs	r3, #1
 80029e8:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80029ec:	e008      	b.n	8002a00 <HAL_ADC_ConfigChannel+0xa24>
  /* channel could be done on neither of the channel configuration structure  */
  /* parameters.                                                              */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80029f2:	f043 0220 	orr.w	r2, r3, #32
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 80029fa:	2301      	movs	r3, #1
 80029fc:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002a00:	687b      	ldr	r3, [r7, #4]
 8002a02:	2200      	movs	r2, #0
 8002a04:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Return function status */
  return tmp_hal_status;
 8002a08:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
}
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	37e4      	adds	r7, #228	; 0xe4
 8002a10:	46bd      	mov	sp, r7
 8002a12:	bd90      	pop	{r4, r7, pc}
 8002a14:	58026300 	.word	0x58026300
 8002a18:	40022000 	.word	0x40022000
 8002a1c:	40022100 	.word	0x40022100
 8002a20:	58026000 	.word	0x58026000
 8002a24:	c7520000 	.word	0xc7520000
 8002a28:	40022300 	.word	0x40022300
 8002a2c:	24000004 	.word	0x24000004
 8002a30:	053e2d63 	.word	0x053e2d63
 8002a34:	c3210000 	.word	0xc3210000
 8002a38:	cb840000 	.word	0xcb840000

08002a3c <ADC_ConfigureBoostMode>:
  *         stopped.
  * @param  hadc ADC handle
  * @retval None.
  */
void ADC_ConfigureBoostMode(ADC_HandleTypeDef *hadc)
{
 8002a3c:	b580      	push	{r7, lr}
 8002a3e:	b084      	sub	sp, #16
 8002a40:	af00      	add	r7, sp, #0
 8002a42:	6078      	str	r0, [r7, #4]
  uint32_t freq;
  if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	4a6c      	ldr	r2, [pc, #432]	; (8002bfc <ADC_ConfigureBoostMode+0x1c0>)
 8002a4a:	4293      	cmp	r3, r2
 8002a4c:	d004      	beq.n	8002a58 <ADC_ConfigureBoostMode+0x1c>
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	4a6b      	ldr	r2, [pc, #428]	; (8002c00 <ADC_ConfigureBoostMode+0x1c4>)
 8002a54:	4293      	cmp	r3, r2
 8002a56:	d109      	bne.n	8002a6c <ADC_ConfigureBoostMode+0x30>
 8002a58:	4b6a      	ldr	r3, [pc, #424]	; (8002c04 <ADC_ConfigureBoostMode+0x1c8>)
 8002a5a:	689b      	ldr	r3, [r3, #8]
 8002a5c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002a60:	2b00      	cmp	r3, #0
 8002a62:	bf14      	ite	ne
 8002a64:	2301      	movne	r3, #1
 8002a66:	2300      	moveq	r3, #0
 8002a68:	b2db      	uxtb	r3, r3
 8002a6a:	e008      	b.n	8002a7e <ADC_ConfigureBoostMode+0x42>
 8002a6c:	4b66      	ldr	r3, [pc, #408]	; (8002c08 <ADC_ConfigureBoostMode+0x1cc>)
 8002a6e:	689b      	ldr	r3, [r3, #8]
 8002a70:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002a74:	2b00      	cmp	r3, #0
 8002a76:	bf14      	ite	ne
 8002a78:	2301      	movne	r3, #1
 8002a7a:	2300      	moveq	r3, #0
 8002a7c:	b2db      	uxtb	r3, r3
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d01c      	beq.n	8002abc <ADC_ConfigureBoostMode+0x80>
  {
    freq = HAL_RCC_GetHCLKFreq();
 8002a82:	f003 ffff 	bl	8006a84 <HAL_RCC_GetHCLKFreq>
 8002a86:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	685b      	ldr	r3, [r3, #4]
 8002a8c:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002a90:	d010      	beq.n	8002ab4 <ADC_ConfigureBoostMode+0x78>
 8002a92:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002a96:	d873      	bhi.n	8002b80 <ADC_ConfigureBoostMode+0x144>
 8002a98:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002a9c:	d002      	beq.n	8002aa4 <ADC_ConfigureBoostMode+0x68>
 8002a9e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8002aa2:	d16d      	bne.n	8002b80 <ADC_ConfigureBoostMode+0x144>
    {
      case ADC_CLOCK_SYNC_PCLK_DIV1:
      case ADC_CLOCK_SYNC_PCLK_DIV2:
        freq /= (hadc->Init.ClockPrescaler >> ADC_CCR_CKMODE_Pos);
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	685b      	ldr	r3, [r3, #4]
 8002aa8:	0c1b      	lsrs	r3, r3, #16
 8002aaa:	68fa      	ldr	r2, [r7, #12]
 8002aac:	fbb2 f3f3 	udiv	r3, r2, r3
 8002ab0:	60fb      	str	r3, [r7, #12]
        break;
 8002ab2:	e068      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_SYNC_PCLK_DIV4:
        freq /= 4UL;
 8002ab4:	68fb      	ldr	r3, [r7, #12]
 8002ab6:	089b      	lsrs	r3, r3, #2
 8002ab8:	60fb      	str	r3, [r7, #12]
        break;
 8002aba:	e064      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
        break;
    }
  }
  else
  {
    freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
 8002abc:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8002ac0:	f04f 0100 	mov.w	r1, #0
 8002ac4:	f005 f9c4 	bl	8007e50 <HAL_RCCEx_GetPeriphCLKFreq>
 8002ac8:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	685b      	ldr	r3, [r3, #4]
 8002ace:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 8002ad2:	d051      	beq.n	8002b78 <ADC_ConfigureBoostMode+0x13c>
 8002ad4:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 8002ad8:	d854      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002ada:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 8002ade:	d047      	beq.n	8002b70 <ADC_ConfigureBoostMode+0x134>
 8002ae0:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 8002ae4:	d84e      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002ae6:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 8002aea:	d03d      	beq.n	8002b68 <ADC_ConfigureBoostMode+0x12c>
 8002aec:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 8002af0:	d848      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002af2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8002af6:	d033      	beq.n	8002b60 <ADC_ConfigureBoostMode+0x124>
 8002af8:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8002afc:	d842      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002afe:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8002b02:	d029      	beq.n	8002b58 <ADC_ConfigureBoostMode+0x11c>
 8002b04:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8002b08:	d83c      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002b0a:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 8002b0e:	d01a      	beq.n	8002b46 <ADC_ConfigureBoostMode+0x10a>
 8002b10:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 8002b14:	d836      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002b16:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8002b1a:	d014      	beq.n	8002b46 <ADC_ConfigureBoostMode+0x10a>
 8002b1c:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8002b20:	d830      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002b22:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002b26:	d00e      	beq.n	8002b46 <ADC_ConfigureBoostMode+0x10a>
 8002b28:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002b2c:	d82a      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002b2e:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8002b32:	d008      	beq.n	8002b46 <ADC_ConfigureBoostMode+0x10a>
 8002b34:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8002b38:	d824      	bhi.n	8002b84 <ADC_ConfigureBoostMode+0x148>
 8002b3a:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8002b3e:	d002      	beq.n	8002b46 <ADC_ConfigureBoostMode+0x10a>
 8002b40:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 8002b44:	d11e      	bne.n	8002b84 <ADC_ConfigureBoostMode+0x148>
      case ADC_CLOCK_ASYNC_DIV4:
      case ADC_CLOCK_ASYNC_DIV6:
      case ADC_CLOCK_ASYNC_DIV8:
      case ADC_CLOCK_ASYNC_DIV10:
      case ADC_CLOCK_ASYNC_DIV12:
        freq /= ((hadc->Init.ClockPrescaler >> ADC_CCR_PRESC_Pos) << 1UL);
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	685b      	ldr	r3, [r3, #4]
 8002b4a:	0c9b      	lsrs	r3, r3, #18
 8002b4c:	005b      	lsls	r3, r3, #1
 8002b4e:	68fa      	ldr	r2, [r7, #12]
 8002b50:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b54:	60fb      	str	r3, [r7, #12]
        break;
 8002b56:	e016      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV16:
        freq /= 16UL;
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	091b      	lsrs	r3, r3, #4
 8002b5c:	60fb      	str	r3, [r7, #12]
        break;
 8002b5e:	e012      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV32:
        freq /= 32UL;
 8002b60:	68fb      	ldr	r3, [r7, #12]
 8002b62:	095b      	lsrs	r3, r3, #5
 8002b64:	60fb      	str	r3, [r7, #12]
        break;
 8002b66:	e00e      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV64:
        freq /= 64UL;
 8002b68:	68fb      	ldr	r3, [r7, #12]
 8002b6a:	099b      	lsrs	r3, r3, #6
 8002b6c:	60fb      	str	r3, [r7, #12]
        break;
 8002b6e:	e00a      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV128:
        freq /= 128UL;
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	09db      	lsrs	r3, r3, #7
 8002b74:	60fb      	str	r3, [r7, #12]
        break;
 8002b76:	e006      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV256:
        freq /= 256UL;
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	0a1b      	lsrs	r3, r3, #8
 8002b7c:	60fb      	str	r3, [r7, #12]
        break;
 8002b7e:	e002      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
        break;
 8002b80:	bf00      	nop
 8002b82:	e000      	b.n	8002b86 <ADC_ConfigureBoostMode+0x14a>
      default:
        break;
 8002b84:	bf00      	nop
    }
  }

#if defined(ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
  freq /= 2U;
 8002b86:	68fb      	ldr	r3, [r7, #12]
 8002b88:	085b      	lsrs	r3, r3, #1
 8002b8a:	60fb      	str	r3, [r7, #12]
  if (freq <= 6250000UL)
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	4a1f      	ldr	r2, [pc, #124]	; (8002c0c <ADC_ConfigureBoostMode+0x1d0>)
 8002b90:	4293      	cmp	r3, r2
 8002b92:	d808      	bhi.n	8002ba6 <ADC_ConfigureBoostMode+0x16a>
  {
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	689a      	ldr	r2, [r3, #8]
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8002ba2:	609a      	str	r2, [r3, #8]
    {
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
    }
  }
#endif /* ADC_VER_V5_3 */
}
 8002ba4:	e025      	b.n	8002bf2 <ADC_ConfigureBoostMode+0x1b6>
  else if (freq <= 12500000UL)
 8002ba6:	68fb      	ldr	r3, [r7, #12]
 8002ba8:	4a19      	ldr	r2, [pc, #100]	; (8002c10 <ADC_ConfigureBoostMode+0x1d4>)
 8002baa:	4293      	cmp	r3, r2
 8002bac:	d80a      	bhi.n	8002bc4 <ADC_ConfigureBoostMode+0x188>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	689b      	ldr	r3, [r3, #8]
 8002bb4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002bc0:	609a      	str	r2, [r3, #8]
}
 8002bc2:	e016      	b.n	8002bf2 <ADC_ConfigureBoostMode+0x1b6>
  else if (freq <= 25000000UL)
 8002bc4:	68fb      	ldr	r3, [r7, #12]
 8002bc6:	4a13      	ldr	r2, [pc, #76]	; (8002c14 <ADC_ConfigureBoostMode+0x1d8>)
 8002bc8:	4293      	cmp	r3, r2
 8002bca:	d80a      	bhi.n	8002be2 <ADC_ConfigureBoostMode+0x1a6>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	689b      	ldr	r3, [r3, #8]
 8002bd2:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002bd6:	687b      	ldr	r3, [r7, #4]
 8002bd8:	681b      	ldr	r3, [r3, #0]
 8002bda:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002bde:	609a      	str	r2, [r3, #8]
}
 8002be0:	e007      	b.n	8002bf2 <ADC_ConfigureBoostMode+0x1b6>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	689a      	ldr	r2, [r3, #8]
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8002bf0:	609a      	str	r2, [r3, #8]
}
 8002bf2:	bf00      	nop
 8002bf4:	3710      	adds	r7, #16
 8002bf6:	46bd      	mov	sp, r7
 8002bf8:	bd80      	pop	{r7, pc}
 8002bfa:	bf00      	nop
 8002bfc:	40022000 	.word	0x40022000
 8002c00:	40022100 	.word	0x40022100
 8002c04:	40022300 	.word	0x40022300
 8002c08:	58026300 	.word	0x58026300
 8002c0c:	005f5e10 	.word	0x005f5e10
 8002c10:	00bebc20 	.word	0x00bebc20
 8002c14:	017d7840 	.word	0x017d7840

08002c18 <LL_ADC_IsEnabled>:
{
 8002c18:	b480      	push	{r7}
 8002c1a:	b083      	sub	sp, #12
 8002c1c:	af00      	add	r7, sp, #0
 8002c1e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	689b      	ldr	r3, [r3, #8]
 8002c24:	f003 0301 	and.w	r3, r3, #1
 8002c28:	2b01      	cmp	r3, #1
 8002c2a:	d101      	bne.n	8002c30 <LL_ADC_IsEnabled+0x18>
 8002c2c:	2301      	movs	r3, #1
 8002c2e:	e000      	b.n	8002c32 <LL_ADC_IsEnabled+0x1a>
 8002c30:	2300      	movs	r3, #0
}
 8002c32:	4618      	mov	r0, r3
 8002c34:	370c      	adds	r7, #12
 8002c36:	46bd      	mov	sp, r7
 8002c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c3c:	4770      	bx	lr

08002c3e <LL_ADC_REG_IsConversionOngoing>:
{
 8002c3e:	b480      	push	{r7}
 8002c40:	b083      	sub	sp, #12
 8002c42:	af00      	add	r7, sp, #0
 8002c44:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	689b      	ldr	r3, [r3, #8]
 8002c4a:	f003 0304 	and.w	r3, r3, #4
 8002c4e:	2b04      	cmp	r3, #4
 8002c50:	d101      	bne.n	8002c56 <LL_ADC_REG_IsConversionOngoing+0x18>
 8002c52:	2301      	movs	r3, #1
 8002c54:	e000      	b.n	8002c58 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8002c56:	2300      	movs	r3, #0
}
 8002c58:	4618      	mov	r0, r3
 8002c5a:	370c      	adds	r7, #12
 8002c5c:	46bd      	mov	sp, r7
 8002c5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c62:	4770      	bx	lr

08002c64 <HAL_ADCEx_MultiModeConfigChannel>:
  * @param hadc Master ADC handle
  * @param multimode Structure of ADC multimode configuration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *multimode)
{
 8002c64:	b590      	push	{r4, r7, lr}
 8002c66:	b0a3      	sub	sp, #140	; 0x8c
 8002c68:	af00      	add	r7, sp, #0
 8002c6a:	6078      	str	r0, [r7, #4]
 8002c6c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002c6e:	2300      	movs	r3, #0
 8002c70:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
    assert_param(IS_ADC_DUAL_DATA_MODE(multimode->DualModeData));
    assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 8002c7a:	2b01      	cmp	r3, #1
 8002c7c:	d101      	bne.n	8002c82 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 8002c7e:	2302      	movs	r3, #2
 8002c80:	e0c1      	b.n	8002e06 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	2201      	movs	r2, #1
 8002c86:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  tmphadcSlave.State = HAL_ADC_STATE_RESET;
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	66fb      	str	r3, [r7, #108]	; 0x6c
  tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 8002c8e:	2300      	movs	r3, #0
 8002c90:	673b      	str	r3, [r7, #112]	; 0x70

  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	681b      	ldr	r3, [r3, #0]
 8002c96:	4a5e      	ldr	r2, [pc, #376]	; (8002e10 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8002c98:	4293      	cmp	r3, r2
 8002c9a:	d102      	bne.n	8002ca2 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8002c9c:	4b5d      	ldr	r3, [pc, #372]	; (8002e14 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8002c9e:	60fb      	str	r3, [r7, #12]
 8002ca0:	e001      	b.n	8002ca6 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8002ca2:	2300      	movs	r3, #0
 8002ca4:	60fb      	str	r3, [r7, #12]

  if (tmphadcSlave.Instance == NULL)
 8002ca6:	68fb      	ldr	r3, [r7, #12]
 8002ca8:	2b00      	cmp	r3, #0
 8002caa:	d10b      	bne.n	8002cc4 <HAL_ADCEx_MultiModeConfigChannel+0x60>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002cb0:	f043 0220 	orr.w	r2, r3, #32
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	661a      	str	r2, [r3, #96]	; 0x60

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	2200      	movs	r2, #0
 8002cbc:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    return HAL_ERROR;
 8002cc0:	2301      	movs	r3, #1
 8002cc2:	e0a0      	b.n	8002e06 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>

  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Multimode DATA Format configuration                                   */
  tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 8002cc4:	68fb      	ldr	r3, [r7, #12]
 8002cc6:	4618      	mov	r0, r3
 8002cc8:	f7ff ffb9 	bl	8002c3e <LL_ADC_REG_IsConversionOngoing>
 8002ccc:	f8c7 0080 	str.w	r0, [r7, #128]	; 0x80
  if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	4618      	mov	r0, r3
 8002cd6:	f7ff ffb2 	bl	8002c3e <LL_ADC_REG_IsConversionOngoing>
 8002cda:	4603      	mov	r3, r0
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	f040 8081 	bne.w	8002de4 <HAL_ADCEx_MultiModeConfigChannel+0x180>
      && (tmphadcSlave_conversion_on_going == 0UL))
 8002ce2:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002ce6:	2b00      	cmp	r3, #0
 8002ce8:	d17c      	bne.n	8002de4 <HAL_ADCEx_MultiModeConfigChannel+0x180>
  {
    /* Pointer to the common control register */
    tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	4a48      	ldr	r2, [pc, #288]	; (8002e10 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8002cf0:	4293      	cmp	r3, r2
 8002cf2:	d004      	beq.n	8002cfe <HAL_ADCEx_MultiModeConfigChannel+0x9a>
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	4a46      	ldr	r2, [pc, #280]	; (8002e14 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8002cfa:	4293      	cmp	r3, r2
 8002cfc:	d101      	bne.n	8002d02 <HAL_ADCEx_MultiModeConfigChannel+0x9e>
 8002cfe:	4b46      	ldr	r3, [pc, #280]	; (8002e18 <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 8002d00:	e000      	b.n	8002d04 <HAL_ADCEx_MultiModeConfigChannel+0xa0>
 8002d02:	4b46      	ldr	r3, [pc, #280]	; (8002e1c <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 8002d04:	67fb      	str	r3, [r7, #124]	; 0x7c

    /* If multimode is selected, configure all multimode parameters.          */
    /* Otherwise, reset multimode parameters (can be used in case of          */
    /* transition from multimode to independent mode).                        */
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8002d06:	683b      	ldr	r3, [r7, #0]
 8002d08:	681b      	ldr	r3, [r3, #0]
 8002d0a:	2b00      	cmp	r3, #0
 8002d0c:	d039      	beq.n	8002d82 <HAL_ADCEx_MultiModeConfigChannel+0x11e>
    {
      MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DAMDF, multimode->DualModeData);
 8002d0e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002d10:	689b      	ldr	r3, [r3, #8]
 8002d12:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8002d16:	683b      	ldr	r3, [r7, #0]
 8002d18:	685b      	ldr	r3, [r3, #4]
 8002d1a:	431a      	orrs	r2, r3
 8002d1c:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002d1e:	609a      	str	r2, [r3, #8]
      /*      from 1 to 8 clock cycles for 12 bits                              */
      /*      from 1 to 6 clock cycles for 10 and 8 bits                        */
      /*    If a higher delay is selected, it will be clipped to maximum delay  */
      /*    range                                                               */

      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	4a3a      	ldr	r2, [pc, #232]	; (8002e10 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8002d26:	4293      	cmp	r3, r2
 8002d28:	d004      	beq.n	8002d34 <HAL_ADCEx_MultiModeConfigChannel+0xd0>
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	4a39      	ldr	r2, [pc, #228]	; (8002e14 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8002d30:	4293      	cmp	r3, r2
 8002d32:	d10e      	bne.n	8002d52 <HAL_ADCEx_MultiModeConfigChannel+0xee>
 8002d34:	4836      	ldr	r0, [pc, #216]	; (8002e10 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8002d36:	f7ff ff6f 	bl	8002c18 <LL_ADC_IsEnabled>
 8002d3a:	4604      	mov	r4, r0
 8002d3c:	4835      	ldr	r0, [pc, #212]	; (8002e14 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8002d3e:	f7ff ff6b 	bl	8002c18 <LL_ADC_IsEnabled>
 8002d42:	4603      	mov	r3, r0
 8002d44:	4323      	orrs	r3, r4
 8002d46:	2b00      	cmp	r3, #0
 8002d48:	bf0c      	ite	eq
 8002d4a:	2301      	moveq	r3, #1
 8002d4c:	2300      	movne	r3, #0
 8002d4e:	b2db      	uxtb	r3, r3
 8002d50:	e008      	b.n	8002d64 <HAL_ADCEx_MultiModeConfigChannel+0x100>
 8002d52:	4833      	ldr	r0, [pc, #204]	; (8002e20 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 8002d54:	f7ff ff60 	bl	8002c18 <LL_ADC_IsEnabled>
 8002d58:	4603      	mov	r3, r0
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	bf0c      	ite	eq
 8002d5e:	2301      	moveq	r3, #1
 8002d60:	2300      	movne	r3, #0
 8002d62:	b2db      	uxtb	r3, r3
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	d047      	beq.n	8002df8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
      {
        MODIFY_REG(tmpADC_Common->CCR,
 8002d68:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002d6a:	689a      	ldr	r2, [r3, #8]
 8002d6c:	4b2d      	ldr	r3, [pc, #180]	; (8002e24 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 8002d6e:	4013      	ands	r3, r2
 8002d70:	683a      	ldr	r2, [r7, #0]
 8002d72:	6811      	ldr	r1, [r2, #0]
 8002d74:	683a      	ldr	r2, [r7, #0]
 8002d76:	6892      	ldr	r2, [r2, #8]
 8002d78:	430a      	orrs	r2, r1
 8002d7a:	431a      	orrs	r2, r3
 8002d7c:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002d7e:	609a      	str	r2, [r3, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8002d80:	e03a      	b.n	8002df8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
                  );
      }
    }
    else /* ADC_MODE_INDEPENDENT */
    {
      CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF);
 8002d82:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002d84:	689b      	ldr	r3, [r3, #8]
 8002d86:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8002d8a:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002d8c:	609a      	str	r2, [r3, #8]

      /* Parameters that can be updated only when ADC is disabled:                */
      /*  - Multimode mode selection                                              */
      /*  - Multimode delay                                                       */
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	4a1f      	ldr	r2, [pc, #124]	; (8002e10 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8002d94:	4293      	cmp	r3, r2
 8002d96:	d004      	beq.n	8002da2 <HAL_ADCEx_MultiModeConfigChannel+0x13e>
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	4a1d      	ldr	r2, [pc, #116]	; (8002e14 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8002d9e:	4293      	cmp	r3, r2
 8002da0:	d10e      	bne.n	8002dc0 <HAL_ADCEx_MultiModeConfigChannel+0x15c>
 8002da2:	481b      	ldr	r0, [pc, #108]	; (8002e10 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8002da4:	f7ff ff38 	bl	8002c18 <LL_ADC_IsEnabled>
 8002da8:	4604      	mov	r4, r0
 8002daa:	481a      	ldr	r0, [pc, #104]	; (8002e14 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 8002dac:	f7ff ff34 	bl	8002c18 <LL_ADC_IsEnabled>
 8002db0:	4603      	mov	r3, r0
 8002db2:	4323      	orrs	r3, r4
 8002db4:	2b00      	cmp	r3, #0
 8002db6:	bf0c      	ite	eq
 8002db8:	2301      	moveq	r3, #1
 8002dba:	2300      	movne	r3, #0
 8002dbc:	b2db      	uxtb	r3, r3
 8002dbe:	e008      	b.n	8002dd2 <HAL_ADCEx_MultiModeConfigChannel+0x16e>
 8002dc0:	4817      	ldr	r0, [pc, #92]	; (8002e20 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 8002dc2:	f7ff ff29 	bl	8002c18 <LL_ADC_IsEnabled>
 8002dc6:	4603      	mov	r3, r0
 8002dc8:	2b00      	cmp	r3, #0
 8002dca:	bf0c      	ite	eq
 8002dcc:	2301      	moveq	r3, #1
 8002dce:	2300      	movne	r3, #0
 8002dd0:	b2db      	uxtb	r3, r3
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	d010      	beq.n	8002df8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
      {
        CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 8002dd6:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002dd8:	689a      	ldr	r2, [r3, #8]
 8002dda:	4b12      	ldr	r3, [pc, #72]	; (8002e24 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 8002ddc:	4013      	ands	r3, r2
 8002dde:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8002de0:	6093      	str	r3, [r2, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8002de2:	e009      	b.n	8002df8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
  /* If one of the ADC sharing the same common group is enabled, no update    */
  /* could be done on neither of the multimode structure parameters.          */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002de8:	f043 0220 	orr.w	r2, r3, #32
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 8002df0:	2301      	movs	r3, #1
 8002df2:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 8002df6:	e000      	b.n	8002dfa <HAL_ADCEx_MultiModeConfigChannel+0x196>
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8002df8:	bf00      	nop
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	2200      	movs	r2, #0
 8002dfe:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Return function status */
  return tmp_hal_status;
 8002e02:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
}
 8002e06:	4618      	mov	r0, r3
 8002e08:	378c      	adds	r7, #140	; 0x8c
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	bd90      	pop	{r4, r7, pc}
 8002e0e:	bf00      	nop
 8002e10:	40022000 	.word	0x40022000
 8002e14:	40022100 	.word	0x40022100
 8002e18:	40022300 	.word	0x40022300
 8002e1c:	58026300 	.word	0x58026300
 8002e20:	58026000 	.word	0x58026000
 8002e24:	fffff0e0 	.word	0xfffff0e0

08002e28 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002e28:	b480      	push	{r7}
 8002e2a:	b085      	sub	sp, #20
 8002e2c:	af00      	add	r7, sp, #0
 8002e2e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	f003 0307 	and.w	r3, r3, #7
 8002e36:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8002e38:	4b0b      	ldr	r3, [pc, #44]	; (8002e68 <__NVIC_SetPriorityGrouping+0x40>)
 8002e3a:	68db      	ldr	r3, [r3, #12]
 8002e3c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8002e3e:	68ba      	ldr	r2, [r7, #8]
 8002e40:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002e44:	4013      	ands	r3, r2
 8002e46:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8002e48:	68fb      	ldr	r3, [r7, #12]
 8002e4a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8002e4c:	68bb      	ldr	r3, [r7, #8]
 8002e4e:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8002e50:	4b06      	ldr	r3, [pc, #24]	; (8002e6c <__NVIC_SetPriorityGrouping+0x44>)
 8002e52:	4313      	orrs	r3, r2
 8002e54:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8002e56:	4a04      	ldr	r2, [pc, #16]	; (8002e68 <__NVIC_SetPriorityGrouping+0x40>)
 8002e58:	68bb      	ldr	r3, [r7, #8]
 8002e5a:	60d3      	str	r3, [r2, #12]
}
 8002e5c:	bf00      	nop
 8002e5e:	3714      	adds	r7, #20
 8002e60:	46bd      	mov	sp, r7
 8002e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e66:	4770      	bx	lr
 8002e68:	e000ed00 	.word	0xe000ed00
 8002e6c:	05fa0000 	.word	0x05fa0000

08002e70 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8002e70:	b480      	push	{r7}
 8002e72:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8002e74:	4b04      	ldr	r3, [pc, #16]	; (8002e88 <__NVIC_GetPriorityGrouping+0x18>)
 8002e76:	68db      	ldr	r3, [r3, #12]
 8002e78:	0a1b      	lsrs	r3, r3, #8
 8002e7a:	f003 0307 	and.w	r3, r3, #7
}
 8002e7e:	4618      	mov	r0, r3
 8002e80:	46bd      	mov	sp, r7
 8002e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e86:	4770      	bx	lr
 8002e88:	e000ed00 	.word	0xe000ed00

08002e8c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002e8c:	b480      	push	{r7}
 8002e8e:	b083      	sub	sp, #12
 8002e90:	af00      	add	r7, sp, #0
 8002e92:	4603      	mov	r3, r0
 8002e94:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8002e96:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	db0b      	blt.n	8002eb6 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002e9e:	88fb      	ldrh	r3, [r7, #6]
 8002ea0:	f003 021f 	and.w	r2, r3, #31
 8002ea4:	4907      	ldr	r1, [pc, #28]	; (8002ec4 <__NVIC_EnableIRQ+0x38>)
 8002ea6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002eaa:	095b      	lsrs	r3, r3, #5
 8002eac:	2001      	movs	r0, #1
 8002eae:	fa00 f202 	lsl.w	r2, r0, r2
 8002eb2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8002eb6:	bf00      	nop
 8002eb8:	370c      	adds	r7, #12
 8002eba:	46bd      	mov	sp, r7
 8002ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ec0:	4770      	bx	lr
 8002ec2:	bf00      	nop
 8002ec4:	e000e100 	.word	0xe000e100

08002ec8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002ec8:	b480      	push	{r7}
 8002eca:	b083      	sub	sp, #12
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	4603      	mov	r3, r0
 8002ed0:	6039      	str	r1, [r7, #0]
 8002ed2:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8002ed4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002ed8:	2b00      	cmp	r3, #0
 8002eda:	db0a      	blt.n	8002ef2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002edc:	683b      	ldr	r3, [r7, #0]
 8002ede:	b2da      	uxtb	r2, r3
 8002ee0:	490c      	ldr	r1, [pc, #48]	; (8002f14 <__NVIC_SetPriority+0x4c>)
 8002ee2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002ee6:	0112      	lsls	r2, r2, #4
 8002ee8:	b2d2      	uxtb	r2, r2
 8002eea:	440b      	add	r3, r1
 8002eec:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8002ef0:	e00a      	b.n	8002f08 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002ef2:	683b      	ldr	r3, [r7, #0]
 8002ef4:	b2da      	uxtb	r2, r3
 8002ef6:	4908      	ldr	r1, [pc, #32]	; (8002f18 <__NVIC_SetPriority+0x50>)
 8002ef8:	88fb      	ldrh	r3, [r7, #6]
 8002efa:	f003 030f 	and.w	r3, r3, #15
 8002efe:	3b04      	subs	r3, #4
 8002f00:	0112      	lsls	r2, r2, #4
 8002f02:	b2d2      	uxtb	r2, r2
 8002f04:	440b      	add	r3, r1
 8002f06:	761a      	strb	r2, [r3, #24]
}
 8002f08:	bf00      	nop
 8002f0a:	370c      	adds	r7, #12
 8002f0c:	46bd      	mov	sp, r7
 8002f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f12:	4770      	bx	lr
 8002f14:	e000e100 	.word	0xe000e100
 8002f18:	e000ed00 	.word	0xe000ed00

08002f1c <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002f1c:	b480      	push	{r7}
 8002f1e:	b089      	sub	sp, #36	; 0x24
 8002f20:	af00      	add	r7, sp, #0
 8002f22:	60f8      	str	r0, [r7, #12]
 8002f24:	60b9      	str	r1, [r7, #8]
 8002f26:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	f003 0307 	and.w	r3, r3, #7
 8002f2e:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8002f30:	69fb      	ldr	r3, [r7, #28]
 8002f32:	f1c3 0307 	rsb	r3, r3, #7
 8002f36:	2b04      	cmp	r3, #4
 8002f38:	bf28      	it	cs
 8002f3a:	2304      	movcs	r3, #4
 8002f3c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8002f3e:	69fb      	ldr	r3, [r7, #28]
 8002f40:	3304      	adds	r3, #4
 8002f42:	2b06      	cmp	r3, #6
 8002f44:	d902      	bls.n	8002f4c <NVIC_EncodePriority+0x30>
 8002f46:	69fb      	ldr	r3, [r7, #28]
 8002f48:	3b03      	subs	r3, #3
 8002f4a:	e000      	b.n	8002f4e <NVIC_EncodePriority+0x32>
 8002f4c:	2300      	movs	r3, #0
 8002f4e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002f50:	f04f 32ff 	mov.w	r2, #4294967295
 8002f54:	69bb      	ldr	r3, [r7, #24]
 8002f56:	fa02 f303 	lsl.w	r3, r2, r3
 8002f5a:	43da      	mvns	r2, r3
 8002f5c:	68bb      	ldr	r3, [r7, #8]
 8002f5e:	401a      	ands	r2, r3
 8002f60:	697b      	ldr	r3, [r7, #20]
 8002f62:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002f64:	f04f 31ff 	mov.w	r1, #4294967295
 8002f68:	697b      	ldr	r3, [r7, #20]
 8002f6a:	fa01 f303 	lsl.w	r3, r1, r3
 8002f6e:	43d9      	mvns	r1, r3
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002f74:	4313      	orrs	r3, r2
         );
}
 8002f76:	4618      	mov	r0, r3
 8002f78:	3724      	adds	r7, #36	; 0x24
 8002f7a:	46bd      	mov	sp, r7
 8002f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f80:	4770      	bx	lr
	...

08002f84 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002f84:	b580      	push	{r7, lr}
 8002f86:	b082      	sub	sp, #8
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	3b01      	subs	r3, #1
 8002f90:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002f94:	d301      	bcc.n	8002f9a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002f96:	2301      	movs	r3, #1
 8002f98:	e00f      	b.n	8002fba <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002f9a:	4a0a      	ldr	r2, [pc, #40]	; (8002fc4 <SysTick_Config+0x40>)
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	3b01      	subs	r3, #1
 8002fa0:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002fa2:	210f      	movs	r1, #15
 8002fa4:	f04f 30ff 	mov.w	r0, #4294967295
 8002fa8:	f7ff ff8e 	bl	8002ec8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002fac:	4b05      	ldr	r3, [pc, #20]	; (8002fc4 <SysTick_Config+0x40>)
 8002fae:	2200      	movs	r2, #0
 8002fb0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002fb2:	4b04      	ldr	r3, [pc, #16]	; (8002fc4 <SysTick_Config+0x40>)
 8002fb4:	2207      	movs	r2, #7
 8002fb6:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002fb8:	2300      	movs	r3, #0
}
 8002fba:	4618      	mov	r0, r3
 8002fbc:	3708      	adds	r7, #8
 8002fbe:	46bd      	mov	sp, r7
 8002fc0:	bd80      	pop	{r7, pc}
 8002fc2:	bf00      	nop
 8002fc4:	e000e010 	.word	0xe000e010

08002fc8 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002fc8:	b580      	push	{r7, lr}
 8002fca:	b082      	sub	sp, #8
 8002fcc:	af00      	add	r7, sp, #0
 8002fce:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8002fd0:	6878      	ldr	r0, [r7, #4]
 8002fd2:	f7ff ff29 	bl	8002e28 <__NVIC_SetPriorityGrouping>
}
 8002fd6:	bf00      	nop
 8002fd8:	3708      	adds	r7, #8
 8002fda:	46bd      	mov	sp, r7
 8002fdc:	bd80      	pop	{r7, pc}

08002fde <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002fde:	b580      	push	{r7, lr}
 8002fe0:	b086      	sub	sp, #24
 8002fe2:	af00      	add	r7, sp, #0
 8002fe4:	4603      	mov	r3, r0
 8002fe6:	60b9      	str	r1, [r7, #8]
 8002fe8:	607a      	str	r2, [r7, #4]
 8002fea:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8002fec:	f7ff ff40 	bl	8002e70 <__NVIC_GetPriorityGrouping>
 8002ff0:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8002ff2:	687a      	ldr	r2, [r7, #4]
 8002ff4:	68b9      	ldr	r1, [r7, #8]
 8002ff6:	6978      	ldr	r0, [r7, #20]
 8002ff8:	f7ff ff90 	bl	8002f1c <NVIC_EncodePriority>
 8002ffc:	4602      	mov	r2, r0
 8002ffe:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003002:	4611      	mov	r1, r2
 8003004:	4618      	mov	r0, r3
 8003006:	f7ff ff5f 	bl	8002ec8 <__NVIC_SetPriority>
}
 800300a:	bf00      	nop
 800300c:	3718      	adds	r7, #24
 800300e:	46bd      	mov	sp, r7
 8003010:	bd80      	pop	{r7, pc}

08003012 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003012:	b580      	push	{r7, lr}
 8003014:	b082      	sub	sp, #8
 8003016:	af00      	add	r7, sp, #0
 8003018:	4603      	mov	r3, r0
 800301a:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 800301c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003020:	4618      	mov	r0, r3
 8003022:	f7ff ff33 	bl	8002e8c <__NVIC_EnableIRQ>
}
 8003026:	bf00      	nop
 8003028:	3708      	adds	r7, #8
 800302a:	46bd      	mov	sp, r7
 800302c:	bd80      	pop	{r7, pc}

0800302e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800302e:	b580      	push	{r7, lr}
 8003030:	b082      	sub	sp, #8
 8003032:	af00      	add	r7, sp, #0
 8003034:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003036:	6878      	ldr	r0, [r7, #4]
 8003038:	f7ff ffa4 	bl	8002f84 <SysTick_Config>
 800303c:	4603      	mov	r3, r0
}
 800303e:	4618      	mov	r0, r3
 8003040:	3708      	adds	r7, #8
 8003042:	46bd      	mov	sp, r7
 8003044:	bd80      	pop	{r7, pc}
	...

08003048 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003048:	b580      	push	{r7, lr}
 800304a:	b082      	sub	sp, #8
 800304c:	af00      	add	r7, sp, #0
 800304e:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	2b00      	cmp	r3, #0
 8003054:	d101      	bne.n	800305a <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003056:	2301      	movs	r3, #1
 8003058:	e054      	b.n	8003104 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	7f5b      	ldrb	r3, [r3, #29]
 800305e:	b2db      	uxtb	r3, r3
 8003060:	2b00      	cmp	r3, #0
 8003062:	d105      	bne.n	8003070 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	2200      	movs	r2, #0
 8003068:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800306a:	6878      	ldr	r0, [r7, #4]
 800306c:	f7fd ff9e 	bl	8000fac <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	2202      	movs	r2, #2
 8003074:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	791b      	ldrb	r3, [r3, #4]
 800307a:	2b00      	cmp	r3, #0
 800307c:	d10c      	bne.n	8003098 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	4a22      	ldr	r2, [pc, #136]	; (800310c <HAL_CRC_Init+0xc4>)
 8003084:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	689a      	ldr	r2, [r3, #8]
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	f022 0218 	bic.w	r2, r2, #24
 8003094:	609a      	str	r2, [r3, #8]
 8003096:	e00c      	b.n	80030b2 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	6899      	ldr	r1, [r3, #8]
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	68db      	ldr	r3, [r3, #12]
 80030a0:	461a      	mov	r2, r3
 80030a2:	6878      	ldr	r0, [r7, #4]
 80030a4:	f000 f834 	bl	8003110 <HAL_CRCEx_Polynomial_Set>
 80030a8:	4603      	mov	r3, r0
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d001      	beq.n	80030b2 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 80030ae:	2301      	movs	r3, #1
 80030b0:	e028      	b.n	8003104 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	795b      	ldrb	r3, [r3, #5]
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	d105      	bne.n	80030c6 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	f04f 32ff 	mov.w	r2, #4294967295
 80030c2:	611a      	str	r2, [r3, #16]
 80030c4:	e004      	b.n	80030d0 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	687a      	ldr	r2, [r7, #4]
 80030cc:	6912      	ldr	r2, [r2, #16]
 80030ce:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	689b      	ldr	r3, [r3, #8]
 80030d6:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	695a      	ldr	r2, [r3, #20]
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	430a      	orrs	r2, r1
 80030e4:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	681b      	ldr	r3, [r3, #0]
 80030ea:	689b      	ldr	r3, [r3, #8]
 80030ec:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	699a      	ldr	r2, [r3, #24]
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	430a      	orrs	r2, r1
 80030fa:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	2201      	movs	r2, #1
 8003100:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 8003102:	2300      	movs	r3, #0
}
 8003104:	4618      	mov	r0, r3
 8003106:	3708      	adds	r7, #8
 8003108:	46bd      	mov	sp, r7
 800310a:	bd80      	pop	{r7, pc}
 800310c:	04c11db7 	.word	0x04c11db7

08003110 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 8003110:	b480      	push	{r7}
 8003112:	b087      	sub	sp, #28
 8003114:	af00      	add	r7, sp, #0
 8003116:	60f8      	str	r0, [r7, #12]
 8003118:	60b9      	str	r1, [r7, #8]
 800311a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800311c:	2300      	movs	r3, #0
 800311e:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8003120:	231f      	movs	r3, #31
 8003122:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8003124:	68bb      	ldr	r3, [r7, #8]
 8003126:	f003 0301 	and.w	r3, r3, #1
 800312a:	2b00      	cmp	r3, #0
 800312c:	d102      	bne.n	8003134 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 800312e:	2301      	movs	r3, #1
 8003130:	75fb      	strb	r3, [r7, #23]
 8003132:	e063      	b.n	80031fc <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8003134:	bf00      	nop
 8003136:	693b      	ldr	r3, [r7, #16]
 8003138:	1e5a      	subs	r2, r3, #1
 800313a:	613a      	str	r2, [r7, #16]
 800313c:	2b00      	cmp	r3, #0
 800313e:	d009      	beq.n	8003154 <HAL_CRCEx_Polynomial_Set+0x44>
 8003140:	693b      	ldr	r3, [r7, #16]
 8003142:	f003 031f 	and.w	r3, r3, #31
 8003146:	68ba      	ldr	r2, [r7, #8]
 8003148:	fa22 f303 	lsr.w	r3, r2, r3
 800314c:	f003 0301 	and.w	r3, r3, #1
 8003150:	2b00      	cmp	r3, #0
 8003152:	d0f0      	beq.n	8003136 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	2b18      	cmp	r3, #24
 8003158:	d846      	bhi.n	80031e8 <HAL_CRCEx_Polynomial_Set+0xd8>
 800315a:	a201      	add	r2, pc, #4	; (adr r2, 8003160 <HAL_CRCEx_Polynomial_Set+0x50>)
 800315c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003160:	080031ef 	.word	0x080031ef
 8003164:	080031e9 	.word	0x080031e9
 8003168:	080031e9 	.word	0x080031e9
 800316c:	080031e9 	.word	0x080031e9
 8003170:	080031e9 	.word	0x080031e9
 8003174:	080031e9 	.word	0x080031e9
 8003178:	080031e9 	.word	0x080031e9
 800317c:	080031e9 	.word	0x080031e9
 8003180:	080031dd 	.word	0x080031dd
 8003184:	080031e9 	.word	0x080031e9
 8003188:	080031e9 	.word	0x080031e9
 800318c:	080031e9 	.word	0x080031e9
 8003190:	080031e9 	.word	0x080031e9
 8003194:	080031e9 	.word	0x080031e9
 8003198:	080031e9 	.word	0x080031e9
 800319c:	080031e9 	.word	0x080031e9
 80031a0:	080031d1 	.word	0x080031d1
 80031a4:	080031e9 	.word	0x080031e9
 80031a8:	080031e9 	.word	0x080031e9
 80031ac:	080031e9 	.word	0x080031e9
 80031b0:	080031e9 	.word	0x080031e9
 80031b4:	080031e9 	.word	0x080031e9
 80031b8:	080031e9 	.word	0x080031e9
 80031bc:	080031e9 	.word	0x080031e9
 80031c0:	080031c5 	.word	0x080031c5
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 80031c4:	693b      	ldr	r3, [r7, #16]
 80031c6:	2b06      	cmp	r3, #6
 80031c8:	d913      	bls.n	80031f2 <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 80031ca:	2301      	movs	r3, #1
 80031cc:	75fb      	strb	r3, [r7, #23]
        }
        break;
 80031ce:	e010      	b.n	80031f2 <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 80031d0:	693b      	ldr	r3, [r7, #16]
 80031d2:	2b07      	cmp	r3, #7
 80031d4:	d90f      	bls.n	80031f6 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 80031d6:	2301      	movs	r3, #1
 80031d8:	75fb      	strb	r3, [r7, #23]
        }
        break;
 80031da:	e00c      	b.n	80031f6 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 80031dc:	693b      	ldr	r3, [r7, #16]
 80031de:	2b0f      	cmp	r3, #15
 80031e0:	d90b      	bls.n	80031fa <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 80031e2:	2301      	movs	r3, #1
 80031e4:	75fb      	strb	r3, [r7, #23]
        }
        break;
 80031e6:	e008      	b.n	80031fa <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 80031e8:	2301      	movs	r3, #1
 80031ea:	75fb      	strb	r3, [r7, #23]
        break;
 80031ec:	e006      	b.n	80031fc <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80031ee:	bf00      	nop
 80031f0:	e004      	b.n	80031fc <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80031f2:	bf00      	nop
 80031f4:	e002      	b.n	80031fc <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80031f6:	bf00      	nop
 80031f8:	e000      	b.n	80031fc <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80031fa:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 80031fc:	7dfb      	ldrb	r3, [r7, #23]
 80031fe:	2b00      	cmp	r3, #0
 8003200:	d10d      	bne.n	800321e <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	68ba      	ldr	r2, [r7, #8]
 8003208:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 800320a:	68fb      	ldr	r3, [r7, #12]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	689b      	ldr	r3, [r3, #8]
 8003210:	f023 0118 	bic.w	r1, r3, #24
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	687a      	ldr	r2, [r7, #4]
 800321a:	430a      	orrs	r2, r1
 800321c:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 800321e:	7dfb      	ldrb	r3, [r7, #23]
}
 8003220:	4618      	mov	r0, r3
 8003222:	371c      	adds	r7, #28
 8003224:	46bd      	mov	sp, r7
 8003226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800322a:	4770      	bx	lr

0800322c <HAL_DMA_Init>:
  * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800322c:	b580      	push	{r7, lr}
 800322e:	b086      	sub	sp, #24
 8003230:	af00      	add	r7, sp, #0
 8003232:	6078      	str	r0, [r7, #4]
  uint32_t registerValue;
  uint32_t tickstart = HAL_GetTick();
 8003234:	f7fe fa54 	bl	80016e0 <HAL_GetTick>
 8003238:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	2b00      	cmp	r3, #0
 800323e:	d101      	bne.n	8003244 <HAL_DMA_Init+0x18>
  {
    return HAL_ERROR;
 8003240:	2301      	movs	r3, #1
 8003242:	e312      	b.n	800386a <HAL_DMA_Init+0x63e>
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	4a66      	ldr	r2, [pc, #408]	; (80033e4 <HAL_DMA_Init+0x1b8>)
 800324a:	4293      	cmp	r3, r2
 800324c:	d04a      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	4a65      	ldr	r2, [pc, #404]	; (80033e8 <HAL_DMA_Init+0x1bc>)
 8003254:	4293      	cmp	r3, r2
 8003256:	d045      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	4a63      	ldr	r2, [pc, #396]	; (80033ec <HAL_DMA_Init+0x1c0>)
 800325e:	4293      	cmp	r3, r2
 8003260:	d040      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	4a62      	ldr	r2, [pc, #392]	; (80033f0 <HAL_DMA_Init+0x1c4>)
 8003268:	4293      	cmp	r3, r2
 800326a:	d03b      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	4a60      	ldr	r2, [pc, #384]	; (80033f4 <HAL_DMA_Init+0x1c8>)
 8003272:	4293      	cmp	r3, r2
 8003274:	d036      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	4a5f      	ldr	r2, [pc, #380]	; (80033f8 <HAL_DMA_Init+0x1cc>)
 800327c:	4293      	cmp	r3, r2
 800327e:	d031      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	4a5d      	ldr	r2, [pc, #372]	; (80033fc <HAL_DMA_Init+0x1d0>)
 8003286:	4293      	cmp	r3, r2
 8003288:	d02c      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	4a5c      	ldr	r2, [pc, #368]	; (8003400 <HAL_DMA_Init+0x1d4>)
 8003290:	4293      	cmp	r3, r2
 8003292:	d027      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	4a5a      	ldr	r2, [pc, #360]	; (8003404 <HAL_DMA_Init+0x1d8>)
 800329a:	4293      	cmp	r3, r2
 800329c:	d022      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	681b      	ldr	r3, [r3, #0]
 80032a2:	4a59      	ldr	r2, [pc, #356]	; (8003408 <HAL_DMA_Init+0x1dc>)
 80032a4:	4293      	cmp	r3, r2
 80032a6:	d01d      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	4a57      	ldr	r2, [pc, #348]	; (800340c <HAL_DMA_Init+0x1e0>)
 80032ae:	4293      	cmp	r3, r2
 80032b0:	d018      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	681b      	ldr	r3, [r3, #0]
 80032b6:	4a56      	ldr	r2, [pc, #344]	; (8003410 <HAL_DMA_Init+0x1e4>)
 80032b8:	4293      	cmp	r3, r2
 80032ba:	d013      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	4a54      	ldr	r2, [pc, #336]	; (8003414 <HAL_DMA_Init+0x1e8>)
 80032c2:	4293      	cmp	r3, r2
 80032c4:	d00e      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	4a53      	ldr	r2, [pc, #332]	; (8003418 <HAL_DMA_Init+0x1ec>)
 80032cc:	4293      	cmp	r3, r2
 80032ce:	d009      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	681b      	ldr	r3, [r3, #0]
 80032d4:	4a51      	ldr	r2, [pc, #324]	; (800341c <HAL_DMA_Init+0x1f0>)
 80032d6:	4293      	cmp	r3, r2
 80032d8:	d004      	beq.n	80032e4 <HAL_DMA_Init+0xb8>
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	4a50      	ldr	r2, [pc, #320]	; (8003420 <HAL_DMA_Init+0x1f4>)
 80032e0:	4293      	cmp	r3, r2
 80032e2:	d101      	bne.n	80032e8 <HAL_DMA_Init+0xbc>
 80032e4:	2301      	movs	r3, #1
 80032e6:	e000      	b.n	80032ea <HAL_DMA_Init+0xbe>
 80032e8:	2300      	movs	r3, #0
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	f000 813c 	beq.w	8003568 <HAL_DMA_Init+0x33c>
      assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
      assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	2202      	movs	r2, #2
 80032f4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	2200      	movs	r2, #0
 80032fc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	681b      	ldr	r3, [r3, #0]
 8003304:	4a37      	ldr	r2, [pc, #220]	; (80033e4 <HAL_DMA_Init+0x1b8>)
 8003306:	4293      	cmp	r3, r2
 8003308:	d04a      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	4a36      	ldr	r2, [pc, #216]	; (80033e8 <HAL_DMA_Init+0x1bc>)
 8003310:	4293      	cmp	r3, r2
 8003312:	d045      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	4a34      	ldr	r2, [pc, #208]	; (80033ec <HAL_DMA_Init+0x1c0>)
 800331a:	4293      	cmp	r3, r2
 800331c:	d040      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	4a33      	ldr	r2, [pc, #204]	; (80033f0 <HAL_DMA_Init+0x1c4>)
 8003324:	4293      	cmp	r3, r2
 8003326:	d03b      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	4a31      	ldr	r2, [pc, #196]	; (80033f4 <HAL_DMA_Init+0x1c8>)
 800332e:	4293      	cmp	r3, r2
 8003330:	d036      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	4a30      	ldr	r2, [pc, #192]	; (80033f8 <HAL_DMA_Init+0x1cc>)
 8003338:	4293      	cmp	r3, r2
 800333a:	d031      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	4a2e      	ldr	r2, [pc, #184]	; (80033fc <HAL_DMA_Init+0x1d0>)
 8003342:	4293      	cmp	r3, r2
 8003344:	d02c      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	4a2d      	ldr	r2, [pc, #180]	; (8003400 <HAL_DMA_Init+0x1d4>)
 800334c:	4293      	cmp	r3, r2
 800334e:	d027      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	4a2b      	ldr	r2, [pc, #172]	; (8003404 <HAL_DMA_Init+0x1d8>)
 8003356:	4293      	cmp	r3, r2
 8003358:	d022      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	4a2a      	ldr	r2, [pc, #168]	; (8003408 <HAL_DMA_Init+0x1dc>)
 8003360:	4293      	cmp	r3, r2
 8003362:	d01d      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	4a28      	ldr	r2, [pc, #160]	; (800340c <HAL_DMA_Init+0x1e0>)
 800336a:	4293      	cmp	r3, r2
 800336c:	d018      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	4a27      	ldr	r2, [pc, #156]	; (8003410 <HAL_DMA_Init+0x1e4>)
 8003374:	4293      	cmp	r3, r2
 8003376:	d013      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	4a25      	ldr	r2, [pc, #148]	; (8003414 <HAL_DMA_Init+0x1e8>)
 800337e:	4293      	cmp	r3, r2
 8003380:	d00e      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	4a24      	ldr	r2, [pc, #144]	; (8003418 <HAL_DMA_Init+0x1ec>)
 8003388:	4293      	cmp	r3, r2
 800338a:	d009      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	4a22      	ldr	r2, [pc, #136]	; (800341c <HAL_DMA_Init+0x1f0>)
 8003392:	4293      	cmp	r3, r2
 8003394:	d004      	beq.n	80033a0 <HAL_DMA_Init+0x174>
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	681b      	ldr	r3, [r3, #0]
 800339a:	4a21      	ldr	r2, [pc, #132]	; (8003420 <HAL_DMA_Init+0x1f4>)
 800339c:	4293      	cmp	r3, r2
 800339e:	d108      	bne.n	80033b2 <HAL_DMA_Init+0x186>
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	681a      	ldr	r2, [r3, #0]
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	f022 0201 	bic.w	r2, r2, #1
 80033ae:	601a      	str	r2, [r3, #0]
 80033b0:	e007      	b.n	80033c2 <HAL_DMA_Init+0x196>
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	681a      	ldr	r2, [r3, #0]
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	f022 0201 	bic.w	r2, r2, #1
 80033c0:	601a      	str	r2, [r3, #0]

    /* Check if the DMA Stream is effectively disabled */
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 80033c2:	e02f      	b.n	8003424 <HAL_DMA_Init+0x1f8>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80033c4:	f7fe f98c 	bl	80016e0 <HAL_GetTick>
 80033c8:	4602      	mov	r2, r0
 80033ca:	693b      	ldr	r3, [r7, #16]
 80033cc:	1ad3      	subs	r3, r2, r3
 80033ce:	2b05      	cmp	r3, #5
 80033d0:	d928      	bls.n	8003424 <HAL_DMA_Init+0x1f8>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	2220      	movs	r2, #32
 80033d6:	655a      	str	r2, [r3, #84]	; 0x54

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_ERROR;
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	2203      	movs	r2, #3
 80033dc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        return HAL_ERROR;
 80033e0:	2301      	movs	r3, #1
 80033e2:	e242      	b.n	800386a <HAL_DMA_Init+0x63e>
 80033e4:	40020010 	.word	0x40020010
 80033e8:	40020028 	.word	0x40020028
 80033ec:	40020040 	.word	0x40020040
 80033f0:	40020058 	.word	0x40020058
 80033f4:	40020070 	.word	0x40020070
 80033f8:	40020088 	.word	0x40020088
 80033fc:	400200a0 	.word	0x400200a0
 8003400:	400200b8 	.word	0x400200b8
 8003404:	40020410 	.word	0x40020410
 8003408:	40020428 	.word	0x40020428
 800340c:	40020440 	.word	0x40020440
 8003410:	40020458 	.word	0x40020458
 8003414:	40020470 	.word	0x40020470
 8003418:	40020488 	.word	0x40020488
 800341c:	400204a0 	.word	0x400204a0
 8003420:	400204b8 	.word	0x400204b8
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	f003 0301 	and.w	r3, r3, #1
 800342e:	2b00      	cmp	r3, #0
 8003430:	d1c8      	bne.n	80033c4 <HAL_DMA_Init+0x198>
      }
    }

    /* Get the CR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->CR;
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	617b      	str	r3, [r7, #20]

    /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
    registerValue &= ((uint32_t)~(DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800343a:	697a      	ldr	r2, [r7, #20]
 800343c:	4b83      	ldr	r3, [pc, #524]	; (800364c <HAL_DMA_Init+0x420>)
 800343e:	4013      	ands	r3, r2
 8003440:	617b      	str	r3, [r7, #20]
                        DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                        DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                        DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

    /* Prepare the DMA Stream configuration */
    registerValue |=  hdma->Init.Direction           |
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	689a      	ldr	r2, [r3, #8]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	68db      	ldr	r3, [r3, #12]
    registerValue |=  hdma->Init.Direction           |
 800344a:	431a      	orrs	r2, r3
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	691b      	ldr	r3, [r3, #16]
 8003450:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	695b      	ldr	r3, [r3, #20]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003456:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	699b      	ldr	r3, [r3, #24]
 800345c:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	69db      	ldr	r3, [r3, #28]
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003462:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	6a1b      	ldr	r3, [r3, #32]
 8003468:	4313      	orrs	r3, r2
    registerValue |=  hdma->Init.Direction           |
 800346a:	697a      	ldr	r2, [r7, #20]
 800346c:	4313      	orrs	r3, r2
 800346e:	617b      	str	r3, [r7, #20]

    /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003474:	2b04      	cmp	r3, #4
 8003476:	d107      	bne.n	8003488 <HAL_DMA_Init+0x25c>
    {
      /* Get memory burst and peripheral burst */
      registerValue |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003480:	4313      	orrs	r3, r2
 8003482:	697a      	ldr	r2, [r7, #20]
 8003484:	4313      	orrs	r3, r2
 8003486:	617b      	str	r3, [r7, #20]
                                    lock when transferring data to/from USART/UART */
#if (STM32H7_DEV_ID == 0x450UL)
    if((DBGMCU->IDCODE & 0xFFFF0000U) >= 0x20000000U)
    {
#endif /* STM32H7_DEV_ID == 0x450UL */
      if(IS_DMA_UART_USART_REQUEST(hdma->Init.Request) != 0U)
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	685b      	ldr	r3, [r3, #4]
 800348c:	2b28      	cmp	r3, #40	; 0x28
 800348e:	d903      	bls.n	8003498 <HAL_DMA_Init+0x26c>
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	685b      	ldr	r3, [r3, #4]
 8003494:	2b2e      	cmp	r3, #46	; 0x2e
 8003496:	d91f      	bls.n	80034d8 <HAL_DMA_Init+0x2ac>
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	685b      	ldr	r3, [r3, #4]
 800349c:	2b3e      	cmp	r3, #62	; 0x3e
 800349e:	d903      	bls.n	80034a8 <HAL_DMA_Init+0x27c>
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	685b      	ldr	r3, [r3, #4]
 80034a4:	2b42      	cmp	r3, #66	; 0x42
 80034a6:	d917      	bls.n	80034d8 <HAL_DMA_Init+0x2ac>
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	685b      	ldr	r3, [r3, #4]
 80034ac:	2b46      	cmp	r3, #70	; 0x46
 80034ae:	d903      	bls.n	80034b8 <HAL_DMA_Init+0x28c>
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	685b      	ldr	r3, [r3, #4]
 80034b4:	2b48      	cmp	r3, #72	; 0x48
 80034b6:	d90f      	bls.n	80034d8 <HAL_DMA_Init+0x2ac>
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	685b      	ldr	r3, [r3, #4]
 80034bc:	2b4e      	cmp	r3, #78	; 0x4e
 80034be:	d903      	bls.n	80034c8 <HAL_DMA_Init+0x29c>
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	685b      	ldr	r3, [r3, #4]
 80034c4:	2b52      	cmp	r3, #82	; 0x52
 80034c6:	d907      	bls.n	80034d8 <HAL_DMA_Init+0x2ac>
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	685b      	ldr	r3, [r3, #4]
 80034cc:	2b73      	cmp	r3, #115	; 0x73
 80034ce:	d905      	bls.n	80034dc <HAL_DMA_Init+0x2b0>
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	685b      	ldr	r3, [r3, #4]
 80034d4:	2b77      	cmp	r3, #119	; 0x77
 80034d6:	d801      	bhi.n	80034dc <HAL_DMA_Init+0x2b0>
 80034d8:	2301      	movs	r3, #1
 80034da:	e000      	b.n	80034de <HAL_DMA_Init+0x2b2>
 80034dc:	2300      	movs	r3, #0
 80034de:	2b00      	cmp	r3, #0
 80034e0:	d003      	beq.n	80034ea <HAL_DMA_Init+0x2be>
      {
        registerValue |= DMA_SxCR_TRBUFF;
 80034e2:	697b      	ldr	r3, [r7, #20]
 80034e4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80034e8:	617b      	str	r3, [r7, #20]
#if (STM32H7_DEV_ID == 0x450UL)
    }
#endif /* STM32H7_DEV_ID == 0x450UL */

    /* Write to DMA Stream CR register */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->CR = registerValue;
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	697a      	ldr	r2, [r7, #20]
 80034f0:	601a      	str	r2, [r3, #0]

    /* Get the FCR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR;
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	695b      	ldr	r3, [r3, #20]
 80034f8:	617b      	str	r3, [r7, #20]

    /* Clear Direct mode and FIFO threshold bits */
    registerValue &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80034fa:	697b      	ldr	r3, [r7, #20]
 80034fc:	f023 0307 	bic.w	r3, r3, #7
 8003500:	617b      	str	r3, [r7, #20]

    /* Prepare the DMA Stream FIFO configuration */
    registerValue |= hdma->Init.FIFOMode;
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003506:	697a      	ldr	r2, [r7, #20]
 8003508:	4313      	orrs	r3, r2
 800350a:	617b      	str	r3, [r7, #20]

    /* the FIFO threshold is not used when the FIFO mode is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003510:	2b04      	cmp	r3, #4
 8003512:	d117      	bne.n	8003544 <HAL_DMA_Init+0x318>
    {
      /* Get the FIFO threshold */
      registerValue |= hdma->Init.FIFOThreshold;
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003518:	697a      	ldr	r2, [r7, #20]
 800351a:	4313      	orrs	r3, r2
 800351c:	617b      	str	r3, [r7, #20]

      /* Check compatibility between FIFO threshold level and size of the memory burst */
      /* for INCR4, INCR8, INCR16 */
      if(hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003522:	2b00      	cmp	r3, #0
 8003524:	d00e      	beq.n	8003544 <HAL_DMA_Init+0x318>
      {
        if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8003526:	6878      	ldr	r0, [r7, #4]
 8003528:	f002 f81c 	bl	8005564 <DMA_CheckFifoParam>
 800352c:	4603      	mov	r3, r0
 800352e:	2b00      	cmp	r3, #0
 8003530:	d008      	beq.n	8003544 <HAL_DMA_Init+0x318>
        {
          /* Update error code */
          hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003532:	687b      	ldr	r3, [r7, #4]
 8003534:	2240      	movs	r2, #64	; 0x40
 8003536:	655a      	str	r2, [r3, #84]	; 0x54

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	2201      	movs	r2, #1
 800353c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          return HAL_ERROR;
 8003540:	2301      	movs	r3, #1
 8003542:	e192      	b.n	800386a <HAL_DMA_Init+0x63e>
        }
      }
    }

    /* Write to DMA Stream FCR */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR = registerValue;
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	697a      	ldr	r2, [r7, #20]
 800354a:	615a      	str	r2, [r3, #20]

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
       DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_dma = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800354c:	6878      	ldr	r0, [r7, #4]
 800354e:	f001 ff57 	bl	8005400 <DMA_CalcBaseAndBitshift>
 8003552:	4603      	mov	r3, r0
 8003554:	60bb      	str	r3, [r7, #8]

    /* Clear all interrupt flags */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800355a:	f003 031f 	and.w	r3, r3, #31
 800355e:	223f      	movs	r2, #63	; 0x3f
 8003560:	409a      	lsls	r2, r3
 8003562:	68bb      	ldr	r3, [r7, #8]
 8003564:	609a      	str	r2, [r3, #8]
 8003566:	e0c8      	b.n	80036fa <HAL_DMA_Init+0x4ce>
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	4a38      	ldr	r2, [pc, #224]	; (8003650 <HAL_DMA_Init+0x424>)
 800356e:	4293      	cmp	r3, r2
 8003570:	d022      	beq.n	80035b8 <HAL_DMA_Init+0x38c>
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	4a37      	ldr	r2, [pc, #220]	; (8003654 <HAL_DMA_Init+0x428>)
 8003578:	4293      	cmp	r3, r2
 800357a:	d01d      	beq.n	80035b8 <HAL_DMA_Init+0x38c>
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	4a35      	ldr	r2, [pc, #212]	; (8003658 <HAL_DMA_Init+0x42c>)
 8003582:	4293      	cmp	r3, r2
 8003584:	d018      	beq.n	80035b8 <HAL_DMA_Init+0x38c>
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	4a34      	ldr	r2, [pc, #208]	; (800365c <HAL_DMA_Init+0x430>)
 800358c:	4293      	cmp	r3, r2
 800358e:	d013      	beq.n	80035b8 <HAL_DMA_Init+0x38c>
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	4a32      	ldr	r2, [pc, #200]	; (8003660 <HAL_DMA_Init+0x434>)
 8003596:	4293      	cmp	r3, r2
 8003598:	d00e      	beq.n	80035b8 <HAL_DMA_Init+0x38c>
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	4a31      	ldr	r2, [pc, #196]	; (8003664 <HAL_DMA_Init+0x438>)
 80035a0:	4293      	cmp	r3, r2
 80035a2:	d009      	beq.n	80035b8 <HAL_DMA_Init+0x38c>
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	4a2f      	ldr	r2, [pc, #188]	; (8003668 <HAL_DMA_Init+0x43c>)
 80035aa:	4293      	cmp	r3, r2
 80035ac:	d004      	beq.n	80035b8 <HAL_DMA_Init+0x38c>
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	681b      	ldr	r3, [r3, #0]
 80035b2:	4a2e      	ldr	r2, [pc, #184]	; (800366c <HAL_DMA_Init+0x440>)
 80035b4:	4293      	cmp	r3, r2
 80035b6:	d101      	bne.n	80035bc <HAL_DMA_Init+0x390>
 80035b8:	2301      	movs	r3, #1
 80035ba:	e000      	b.n	80035be <HAL_DMA_Init+0x392>
 80035bc:	2300      	movs	r3, #0
 80035be:	2b00      	cmp	r3, #0
 80035c0:	f000 8092 	beq.w	80036e8 <HAL_DMA_Init+0x4bc>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	4a21      	ldr	r2, [pc, #132]	; (8003650 <HAL_DMA_Init+0x424>)
 80035ca:	4293      	cmp	r3, r2
 80035cc:	d021      	beq.n	8003612 <HAL_DMA_Init+0x3e6>
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	4a20      	ldr	r2, [pc, #128]	; (8003654 <HAL_DMA_Init+0x428>)
 80035d4:	4293      	cmp	r3, r2
 80035d6:	d01c      	beq.n	8003612 <HAL_DMA_Init+0x3e6>
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	4a1e      	ldr	r2, [pc, #120]	; (8003658 <HAL_DMA_Init+0x42c>)
 80035de:	4293      	cmp	r3, r2
 80035e0:	d017      	beq.n	8003612 <HAL_DMA_Init+0x3e6>
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	4a1d      	ldr	r2, [pc, #116]	; (800365c <HAL_DMA_Init+0x430>)
 80035e8:	4293      	cmp	r3, r2
 80035ea:	d012      	beq.n	8003612 <HAL_DMA_Init+0x3e6>
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	4a1b      	ldr	r2, [pc, #108]	; (8003660 <HAL_DMA_Init+0x434>)
 80035f2:	4293      	cmp	r3, r2
 80035f4:	d00d      	beq.n	8003612 <HAL_DMA_Init+0x3e6>
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	4a1a      	ldr	r2, [pc, #104]	; (8003664 <HAL_DMA_Init+0x438>)
 80035fc:	4293      	cmp	r3, r2
 80035fe:	d008      	beq.n	8003612 <HAL_DMA_Init+0x3e6>
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	4a18      	ldr	r2, [pc, #96]	; (8003668 <HAL_DMA_Init+0x43c>)
 8003606:	4293      	cmp	r3, r2
 8003608:	d003      	beq.n	8003612 <HAL_DMA_Init+0x3e6>
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	681b      	ldr	r3, [r3, #0]
 800360e:	4a17      	ldr	r2, [pc, #92]	; (800366c <HAL_DMA_Init+0x440>)
 8003610:	4293      	cmp	r3, r2
      /* Check the request parameter */
      assert_param(IS_BDMA_REQUEST(hdma->Init.Request));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	2202      	movs	r2, #2
 8003616:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	2200      	movs	r2, #0
 800361e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Get the CR register value */
    registerValue = ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR;
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	617b      	str	r3, [r7, #20]

    /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, MEM2MEM, DBM and CT bits */
    registerValue &= ((uint32_t)~(BDMA_CCR_PL    | BDMA_CCR_MSIZE   | BDMA_CCR_PSIZE  | \
 800362a:	697a      	ldr	r2, [r7, #20]
 800362c:	4b10      	ldr	r3, [pc, #64]	; (8003670 <HAL_DMA_Init+0x444>)
 800362e:	4013      	ands	r3, r2
 8003630:	617b      	str	r3, [r7, #20]
                                  BDMA_CCR_MINC  | BDMA_CCR_PINC    | BDMA_CCR_CIRC   | \
                                  BDMA_CCR_DIR   | BDMA_CCR_MEM2MEM | BDMA_CCR_DBM    | \
                                  BDMA_CCR_CT));

    /* Prepare the DMA Channel configuration */
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	689b      	ldr	r3, [r3, #8]
 8003636:	2b40      	cmp	r3, #64	; 0x40
 8003638:	d01c      	beq.n	8003674 <HAL_DMA_Init+0x448>
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	689b      	ldr	r3, [r3, #8]
 800363e:	2b80      	cmp	r3, #128	; 0x80
 8003640:	d102      	bne.n	8003648 <HAL_DMA_Init+0x41c>
 8003642:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8003646:	e016      	b.n	8003676 <HAL_DMA_Init+0x44a>
 8003648:	2300      	movs	r3, #0
 800364a:	e014      	b.n	8003676 <HAL_DMA_Init+0x44a>
 800364c:	fe10803f 	.word	0xfe10803f
 8003650:	58025408 	.word	0x58025408
 8003654:	5802541c 	.word	0x5802541c
 8003658:	58025430 	.word	0x58025430
 800365c:	58025444 	.word	0x58025444
 8003660:	58025458 	.word	0x58025458
 8003664:	5802546c 	.word	0x5802546c
 8003668:	58025480 	.word	0x58025480
 800366c:	58025494 	.word	0x58025494
 8003670:	fffe000f 	.word	0xfffe000f
 8003674:	2310      	movs	r3, #16
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8003676:	687a      	ldr	r2, [r7, #4]
 8003678:	68d2      	ldr	r2, [r2, #12]
 800367a:	08d2      	lsrs	r2, r2, #3
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 800367c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	691b      	ldr	r3, [r3, #16]
 8003682:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8003684:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	695b      	ldr	r3, [r3, #20]
 800368a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 800368c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	699b      	ldr	r3, [r3, #24]
 8003692:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8003694:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	69db      	ldr	r3, [r3, #28]
 800369a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 800369c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PRIORITY(hdma->Init.Priority);
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	6a1b      	ldr	r3, [r3, #32]
 80036a2:	091b      	lsrs	r3, r3, #4
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 80036a4:	4313      	orrs	r3, r2
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 80036a6:	697a      	ldr	r2, [r7, #20]
 80036a8:	4313      	orrs	r3, r2
 80036aa:	617b      	str	r3, [r7, #20]

    /* Write to DMA Channel CR register */
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR = registerValue;
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	697a      	ldr	r2, [r7, #20]
 80036b2:	601a      	str	r2, [r3, #0]

    /* calculation of the channel index */
    hdma->StreamIndex = (((uint32_t)((uint32_t*)hdma->Instance) - (uint32_t)BDMA_Channel0) / ((uint32_t)BDMA_Channel1 - (uint32_t)BDMA_Channel0)) << 2U;
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	681b      	ldr	r3, [r3, #0]
 80036b8:	461a      	mov	r2, r3
 80036ba:	4b6e      	ldr	r3, [pc, #440]	; (8003874 <HAL_DMA_Init+0x648>)
 80036bc:	4413      	add	r3, r2
 80036be:	4a6e      	ldr	r2, [pc, #440]	; (8003878 <HAL_DMA_Init+0x64c>)
 80036c0:	fba2 2303 	umull	r2, r3, r2, r3
 80036c4:	091b      	lsrs	r3, r3, #4
 80036c6:	009a      	lsls	r2, r3, #2
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
    DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_bdma = (BDMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80036cc:	6878      	ldr	r0, [r7, #4]
 80036ce:	f001 fe97 	bl	8005400 <DMA_CalcBaseAndBitshift>
 80036d2:	4603      	mov	r3, r0
 80036d4:	60fb      	str	r3, [r7, #12]

    /* Clear all interrupt flags */
    regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80036da:	f003 031f 	and.w	r3, r3, #31
 80036de:	2201      	movs	r2, #1
 80036e0:	409a      	lsls	r2, r3
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	605a      	str	r2, [r3, #4]
 80036e6:	e008      	b.n	80036fa <HAL_DMA_Init+0x4ce>
  }
  else
  {
    hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	2240      	movs	r2, #64	; 0x40
 80036ec:	655a      	str	r2, [r3, #84]	; 0x54
    hdma->State     = HAL_DMA_STATE_ERROR;
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	2203      	movs	r2, #3
 80036f2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    return HAL_ERROR;
 80036f6:	2301      	movs	r3, #1
 80036f8:	e0b7      	b.n	800386a <HAL_DMA_Init+0x63e>
  }

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	4a5f      	ldr	r2, [pc, #380]	; (800387c <HAL_DMA_Init+0x650>)
 8003700:	4293      	cmp	r3, r2
 8003702:	d072      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	681b      	ldr	r3, [r3, #0]
 8003708:	4a5d      	ldr	r2, [pc, #372]	; (8003880 <HAL_DMA_Init+0x654>)
 800370a:	4293      	cmp	r3, r2
 800370c:	d06d      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	681b      	ldr	r3, [r3, #0]
 8003712:	4a5c      	ldr	r2, [pc, #368]	; (8003884 <HAL_DMA_Init+0x658>)
 8003714:	4293      	cmp	r3, r2
 8003716:	d068      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	681b      	ldr	r3, [r3, #0]
 800371c:	4a5a      	ldr	r2, [pc, #360]	; (8003888 <HAL_DMA_Init+0x65c>)
 800371e:	4293      	cmp	r3, r2
 8003720:	d063      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	4a59      	ldr	r2, [pc, #356]	; (800388c <HAL_DMA_Init+0x660>)
 8003728:	4293      	cmp	r3, r2
 800372a:	d05e      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	4a57      	ldr	r2, [pc, #348]	; (8003890 <HAL_DMA_Init+0x664>)
 8003732:	4293      	cmp	r3, r2
 8003734:	d059      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	4a56      	ldr	r2, [pc, #344]	; (8003894 <HAL_DMA_Init+0x668>)
 800373c:	4293      	cmp	r3, r2
 800373e:	d054      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	4a54      	ldr	r2, [pc, #336]	; (8003898 <HAL_DMA_Init+0x66c>)
 8003746:	4293      	cmp	r3, r2
 8003748:	d04f      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	4a53      	ldr	r2, [pc, #332]	; (800389c <HAL_DMA_Init+0x670>)
 8003750:	4293      	cmp	r3, r2
 8003752:	d04a      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	4a51      	ldr	r2, [pc, #324]	; (80038a0 <HAL_DMA_Init+0x674>)
 800375a:	4293      	cmp	r3, r2
 800375c:	d045      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	4a50      	ldr	r2, [pc, #320]	; (80038a4 <HAL_DMA_Init+0x678>)
 8003764:	4293      	cmp	r3, r2
 8003766:	d040      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	4a4e      	ldr	r2, [pc, #312]	; (80038a8 <HAL_DMA_Init+0x67c>)
 800376e:	4293      	cmp	r3, r2
 8003770:	d03b      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	4a4d      	ldr	r2, [pc, #308]	; (80038ac <HAL_DMA_Init+0x680>)
 8003778:	4293      	cmp	r3, r2
 800377a:	d036      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	4a4b      	ldr	r2, [pc, #300]	; (80038b0 <HAL_DMA_Init+0x684>)
 8003782:	4293      	cmp	r3, r2
 8003784:	d031      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	4a4a      	ldr	r2, [pc, #296]	; (80038b4 <HAL_DMA_Init+0x688>)
 800378c:	4293      	cmp	r3, r2
 800378e:	d02c      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	4a48      	ldr	r2, [pc, #288]	; (80038b8 <HAL_DMA_Init+0x68c>)
 8003796:	4293      	cmp	r3, r2
 8003798:	d027      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	681b      	ldr	r3, [r3, #0]
 800379e:	4a47      	ldr	r2, [pc, #284]	; (80038bc <HAL_DMA_Init+0x690>)
 80037a0:	4293      	cmp	r3, r2
 80037a2:	d022      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	4a45      	ldr	r2, [pc, #276]	; (80038c0 <HAL_DMA_Init+0x694>)
 80037aa:	4293      	cmp	r3, r2
 80037ac:	d01d      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	4a44      	ldr	r2, [pc, #272]	; (80038c4 <HAL_DMA_Init+0x698>)
 80037b4:	4293      	cmp	r3, r2
 80037b6:	d018      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	4a42      	ldr	r2, [pc, #264]	; (80038c8 <HAL_DMA_Init+0x69c>)
 80037be:	4293      	cmp	r3, r2
 80037c0:	d013      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	4a41      	ldr	r2, [pc, #260]	; (80038cc <HAL_DMA_Init+0x6a0>)
 80037c8:	4293      	cmp	r3, r2
 80037ca:	d00e      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 80037cc:	687b      	ldr	r3, [r7, #4]
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	4a3f      	ldr	r2, [pc, #252]	; (80038d0 <HAL_DMA_Init+0x6a4>)
 80037d2:	4293      	cmp	r3, r2
 80037d4:	d009      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	4a3e      	ldr	r2, [pc, #248]	; (80038d4 <HAL_DMA_Init+0x6a8>)
 80037dc:	4293      	cmp	r3, r2
 80037de:	d004      	beq.n	80037ea <HAL_DMA_Init+0x5be>
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	4a3c      	ldr	r2, [pc, #240]	; (80038d8 <HAL_DMA_Init+0x6ac>)
 80037e6:	4293      	cmp	r3, r2
 80037e8:	d101      	bne.n	80037ee <HAL_DMA_Init+0x5c2>
 80037ea:	2301      	movs	r3, #1
 80037ec:	e000      	b.n	80037f0 <HAL_DMA_Init+0x5c4>
 80037ee:	2300      	movs	r3, #0
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d032      	beq.n	800385a <HAL_DMA_Init+0x62e>
  {
    /* Initialize parameters for DMAMUX channel :
    DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
    */
    DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 80037f4:	6878      	ldr	r0, [r7, #4]
 80037f6:	f001 ff31 	bl	800565c <DMA_CalcDMAMUXChannelBaseAndMask>

    if(hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	689b      	ldr	r3, [r3, #8]
 80037fe:	2b80      	cmp	r3, #128	; 0x80
 8003800:	d102      	bne.n	8003808 <HAL_DMA_Init+0x5dc>
    {
      /* if memory to memory force the request to 0*/
      hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	2200      	movs	r2, #0
 8003806:	605a      	str	r2, [r3, #4]
    }

    /* Set peripheral request  to DMAMUX channel */
    hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	685a      	ldr	r2, [r3, #4]
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003810:	b2d2      	uxtb	r2, r2
 8003812:	601a      	str	r2, [r3, #0]

    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003818:	687a      	ldr	r2, [r7, #4]
 800381a:	6e92      	ldr	r2, [r2, #104]	; 0x68
 800381c:	605a      	str	r2, [r3, #4]

    /* Initialize parameters for DMAMUX request generator :
    if the DMA request is DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR7
    */
    if((hdma->Init.Request >= DMA_REQUEST_GENERATOR0) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR7))
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	685b      	ldr	r3, [r3, #4]
 8003822:	2b00      	cmp	r3, #0
 8003824:	d010      	beq.n	8003848 <HAL_DMA_Init+0x61c>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	685b      	ldr	r3, [r3, #4]
 800382a:	2b08      	cmp	r3, #8
 800382c:	d80c      	bhi.n	8003848 <HAL_DMA_Init+0x61c>
    {
      /* Initialize parameters for DMAMUX request generator :
      DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask */
      DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 800382e:	6878      	ldr	r0, [r7, #4]
 8003830:	f001 ffae 	bl	8005790 <DMA_CalcDMAMUXRequestGenBaseAndMask>

      /* Reset the DMAMUX request generator register */
      hdma->DMAmuxRequestGen->RGCR = 0U;
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003838:	2200      	movs	r2, #0
 800383a:	601a      	str	r2, [r3, #0]

      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003840:	687a      	ldr	r2, [r7, #4]
 8003842:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8003844:	605a      	str	r2, [r3, #4]
 8003846:	e008      	b.n	800385a <HAL_DMA_Init+0x62e>
    }
    else
    {
      hdma->DMAmuxRequestGen = 0U;
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	2200      	movs	r2, #0
 800384c:	66da      	str	r2, [r3, #108]	; 0x6c
      hdma->DMAmuxRequestGenStatus = 0U;
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	2200      	movs	r2, #0
 8003852:	671a      	str	r2, [r3, #112]	; 0x70
      hdma->DMAmuxRequestGenStatusMask = 0U;
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	2200      	movs	r2, #0
 8003858:	675a      	str	r2, [r3, #116]	; 0x74
    }
  }

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	2200      	movs	r2, #0
 800385e:	655a      	str	r2, [r3, #84]	; 0x54

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	2201      	movs	r2, #1
 8003864:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 8003868:	2300      	movs	r3, #0
}
 800386a:	4618      	mov	r0, r3
 800386c:	3718      	adds	r7, #24
 800386e:	46bd      	mov	sp, r7
 8003870:	bd80      	pop	{r7, pc}
 8003872:	bf00      	nop
 8003874:	a7fdabf8 	.word	0xa7fdabf8
 8003878:	cccccccd 	.word	0xcccccccd
 800387c:	40020010 	.word	0x40020010
 8003880:	40020028 	.word	0x40020028
 8003884:	40020040 	.word	0x40020040
 8003888:	40020058 	.word	0x40020058
 800388c:	40020070 	.word	0x40020070
 8003890:	40020088 	.word	0x40020088
 8003894:	400200a0 	.word	0x400200a0
 8003898:	400200b8 	.word	0x400200b8
 800389c:	40020410 	.word	0x40020410
 80038a0:	40020428 	.word	0x40020428
 80038a4:	40020440 	.word	0x40020440
 80038a8:	40020458 	.word	0x40020458
 80038ac:	40020470 	.word	0x40020470
 80038b0:	40020488 	.word	0x40020488
 80038b4:	400204a0 	.word	0x400204a0
 80038b8:	400204b8 	.word	0x400204b8
 80038bc:	58025408 	.word	0x58025408
 80038c0:	5802541c 	.word	0x5802541c
 80038c4:	58025430 	.word	0x58025430
 80038c8:	58025444 	.word	0x58025444
 80038cc:	58025458 	.word	0x58025458
 80038d0:	5802546c 	.word	0x5802546c
 80038d4:	58025480 	.word	0x58025480
 80038d8:	58025494 	.word	0x58025494

080038dc <HAL_DMA_Start_IT>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80038dc:	b580      	push	{r7, lr}
 80038de:	b086      	sub	sp, #24
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	60f8      	str	r0, [r7, #12]
 80038e4:	60b9      	str	r1, [r7, #8]
 80038e6:	607a      	str	r2, [r7, #4]
 80038e8:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80038ea:	2300      	movs	r3, #0
 80038ec:	75fb      	strb	r3, [r7, #23]

  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	2b00      	cmp	r3, #0
 80038f2:	d101      	bne.n	80038f8 <HAL_DMA_Start_IT+0x1c>
  {
    return HAL_ERROR;
 80038f4:	2301      	movs	r3, #1
 80038f6:	e226      	b.n	8003d46 <HAL_DMA_Start_IT+0x46a>
  }

  /* Process locked */
  __HAL_LOCK(hdma);
 80038f8:	68fb      	ldr	r3, [r7, #12]
 80038fa:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80038fe:	2b01      	cmp	r3, #1
 8003900:	d101      	bne.n	8003906 <HAL_DMA_Start_IT+0x2a>
 8003902:	2302      	movs	r3, #2
 8003904:	e21f      	b.n	8003d46 <HAL_DMA_Start_IT+0x46a>
 8003906:	68fb      	ldr	r3, [r7, #12]
 8003908:	2201      	movs	r2, #1
 800390a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  if(HAL_DMA_STATE_READY == hdma->State)
 800390e:	68fb      	ldr	r3, [r7, #12]
 8003910:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003914:	b2db      	uxtb	r3, r3
 8003916:	2b01      	cmp	r3, #1
 8003918:	f040 820a 	bne.w	8003d30 <HAL_DMA_Start_IT+0x454>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	2202      	movs	r2, #2
 8003920:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	2200      	movs	r2, #0
 8003928:	655a      	str	r2, [r3, #84]	; 0x54

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 800392a:	68fb      	ldr	r3, [r7, #12]
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	4a68      	ldr	r2, [pc, #416]	; (8003ad0 <HAL_DMA_Start_IT+0x1f4>)
 8003930:	4293      	cmp	r3, r2
 8003932:	d04a      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	4a66      	ldr	r2, [pc, #408]	; (8003ad4 <HAL_DMA_Start_IT+0x1f8>)
 800393a:	4293      	cmp	r3, r2
 800393c:	d045      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 800393e:	68fb      	ldr	r3, [r7, #12]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	4a65      	ldr	r2, [pc, #404]	; (8003ad8 <HAL_DMA_Start_IT+0x1fc>)
 8003944:	4293      	cmp	r3, r2
 8003946:	d040      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	4a63      	ldr	r2, [pc, #396]	; (8003adc <HAL_DMA_Start_IT+0x200>)
 800394e:	4293      	cmp	r3, r2
 8003950:	d03b      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 8003952:	68fb      	ldr	r3, [r7, #12]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	4a62      	ldr	r2, [pc, #392]	; (8003ae0 <HAL_DMA_Start_IT+0x204>)
 8003958:	4293      	cmp	r3, r2
 800395a:	d036      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	4a60      	ldr	r2, [pc, #384]	; (8003ae4 <HAL_DMA_Start_IT+0x208>)
 8003962:	4293      	cmp	r3, r2
 8003964:	d031      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	4a5f      	ldr	r2, [pc, #380]	; (8003ae8 <HAL_DMA_Start_IT+0x20c>)
 800396c:	4293      	cmp	r3, r2
 800396e:	d02c      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	4a5d      	ldr	r2, [pc, #372]	; (8003aec <HAL_DMA_Start_IT+0x210>)
 8003976:	4293      	cmp	r3, r2
 8003978:	d027      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 800397a:	68fb      	ldr	r3, [r7, #12]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	4a5c      	ldr	r2, [pc, #368]	; (8003af0 <HAL_DMA_Start_IT+0x214>)
 8003980:	4293      	cmp	r3, r2
 8003982:	d022      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	4a5a      	ldr	r2, [pc, #360]	; (8003af4 <HAL_DMA_Start_IT+0x218>)
 800398a:	4293      	cmp	r3, r2
 800398c:	d01d      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	681b      	ldr	r3, [r3, #0]
 8003992:	4a59      	ldr	r2, [pc, #356]	; (8003af8 <HAL_DMA_Start_IT+0x21c>)
 8003994:	4293      	cmp	r3, r2
 8003996:	d018      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 8003998:	68fb      	ldr	r3, [r7, #12]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	4a57      	ldr	r2, [pc, #348]	; (8003afc <HAL_DMA_Start_IT+0x220>)
 800399e:	4293      	cmp	r3, r2
 80039a0:	d013      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 80039a2:	68fb      	ldr	r3, [r7, #12]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	4a56      	ldr	r2, [pc, #344]	; (8003b00 <HAL_DMA_Start_IT+0x224>)
 80039a8:	4293      	cmp	r3, r2
 80039aa:	d00e      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	4a54      	ldr	r2, [pc, #336]	; (8003b04 <HAL_DMA_Start_IT+0x228>)
 80039b2:	4293      	cmp	r3, r2
 80039b4:	d009      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 80039b6:	68fb      	ldr	r3, [r7, #12]
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	4a53      	ldr	r2, [pc, #332]	; (8003b08 <HAL_DMA_Start_IT+0x22c>)
 80039bc:	4293      	cmp	r3, r2
 80039be:	d004      	beq.n	80039ca <HAL_DMA_Start_IT+0xee>
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	4a51      	ldr	r2, [pc, #324]	; (8003b0c <HAL_DMA_Start_IT+0x230>)
 80039c6:	4293      	cmp	r3, r2
 80039c8:	d108      	bne.n	80039dc <HAL_DMA_Start_IT+0x100>
 80039ca:	68fb      	ldr	r3, [r7, #12]
 80039cc:	681b      	ldr	r3, [r3, #0]
 80039ce:	681a      	ldr	r2, [r3, #0]
 80039d0:	68fb      	ldr	r3, [r7, #12]
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	f022 0201 	bic.w	r2, r2, #1
 80039d8:	601a      	str	r2, [r3, #0]
 80039da:	e007      	b.n	80039ec <HAL_DMA_Start_IT+0x110>
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	681b      	ldr	r3, [r3, #0]
 80039e0:	681a      	ldr	r2, [r3, #0]
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	f022 0201 	bic.w	r2, r2, #1
 80039ea:	601a      	str	r2, [r3, #0]

    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 80039ec:	683b      	ldr	r3, [r7, #0]
 80039ee:	687a      	ldr	r2, [r7, #4]
 80039f0:	68b9      	ldr	r1, [r7, #8]
 80039f2:	68f8      	ldr	r0, [r7, #12]
 80039f4:	f001 fb58 	bl	80050a8 <DMA_SetConfig>

    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80039f8:	68fb      	ldr	r3, [r7, #12]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	4a34      	ldr	r2, [pc, #208]	; (8003ad0 <HAL_DMA_Start_IT+0x1f4>)
 80039fe:	4293      	cmp	r3, r2
 8003a00:	d04a      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a02:	68fb      	ldr	r3, [r7, #12]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	4a33      	ldr	r2, [pc, #204]	; (8003ad4 <HAL_DMA_Start_IT+0x1f8>)
 8003a08:	4293      	cmp	r3, r2
 8003a0a:	d045      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a0c:	68fb      	ldr	r3, [r7, #12]
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	4a31      	ldr	r2, [pc, #196]	; (8003ad8 <HAL_DMA_Start_IT+0x1fc>)
 8003a12:	4293      	cmp	r3, r2
 8003a14:	d040      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	4a30      	ldr	r2, [pc, #192]	; (8003adc <HAL_DMA_Start_IT+0x200>)
 8003a1c:	4293      	cmp	r3, r2
 8003a1e:	d03b      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a20:	68fb      	ldr	r3, [r7, #12]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	4a2e      	ldr	r2, [pc, #184]	; (8003ae0 <HAL_DMA_Start_IT+0x204>)
 8003a26:	4293      	cmp	r3, r2
 8003a28:	d036      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a2a:	68fb      	ldr	r3, [r7, #12]
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	4a2d      	ldr	r2, [pc, #180]	; (8003ae4 <HAL_DMA_Start_IT+0x208>)
 8003a30:	4293      	cmp	r3, r2
 8003a32:	d031      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	4a2b      	ldr	r2, [pc, #172]	; (8003ae8 <HAL_DMA_Start_IT+0x20c>)
 8003a3a:	4293      	cmp	r3, r2
 8003a3c:	d02c      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	4a2a      	ldr	r2, [pc, #168]	; (8003aec <HAL_DMA_Start_IT+0x210>)
 8003a44:	4293      	cmp	r3, r2
 8003a46:	d027      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a48:	68fb      	ldr	r3, [r7, #12]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	4a28      	ldr	r2, [pc, #160]	; (8003af0 <HAL_DMA_Start_IT+0x214>)
 8003a4e:	4293      	cmp	r3, r2
 8003a50:	d022      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	4a27      	ldr	r2, [pc, #156]	; (8003af4 <HAL_DMA_Start_IT+0x218>)
 8003a58:	4293      	cmp	r3, r2
 8003a5a:	d01d      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	4a25      	ldr	r2, [pc, #148]	; (8003af8 <HAL_DMA_Start_IT+0x21c>)
 8003a62:	4293      	cmp	r3, r2
 8003a64:	d018      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	4a24      	ldr	r2, [pc, #144]	; (8003afc <HAL_DMA_Start_IT+0x220>)
 8003a6c:	4293      	cmp	r3, r2
 8003a6e:	d013      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	4a22      	ldr	r2, [pc, #136]	; (8003b00 <HAL_DMA_Start_IT+0x224>)
 8003a76:	4293      	cmp	r3, r2
 8003a78:	d00e      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	4a21      	ldr	r2, [pc, #132]	; (8003b04 <HAL_DMA_Start_IT+0x228>)
 8003a80:	4293      	cmp	r3, r2
 8003a82:	d009      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a84:	68fb      	ldr	r3, [r7, #12]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	4a1f      	ldr	r2, [pc, #124]	; (8003b08 <HAL_DMA_Start_IT+0x22c>)
 8003a8a:	4293      	cmp	r3, r2
 8003a8c:	d004      	beq.n	8003a98 <HAL_DMA_Start_IT+0x1bc>
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	4a1e      	ldr	r2, [pc, #120]	; (8003b0c <HAL_DMA_Start_IT+0x230>)
 8003a94:	4293      	cmp	r3, r2
 8003a96:	d101      	bne.n	8003a9c <HAL_DMA_Start_IT+0x1c0>
 8003a98:	2301      	movs	r3, #1
 8003a9a:	e000      	b.n	8003a9e <HAL_DMA_Start_IT+0x1c2>
 8003a9c:	2300      	movs	r3, #0
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d036      	beq.n	8003b10 <HAL_DMA_Start_IT+0x234>
    {
      /* Enable Common interrupts*/
      MODIFY_REG(((DMA_Stream_TypeDef   *)hdma->Instance)->CR, (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT), (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME));
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	f023 021e 	bic.w	r2, r3, #30
 8003aac:	68fb      	ldr	r3, [r7, #12]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	f042 0216 	orr.w	r2, r2, #22
 8003ab4:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d03e      	beq.n	8003b3c <HAL_DMA_Start_IT+0x260>
      {
        /* Enable Half Transfer IT if corresponding Callback is set */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  |= DMA_IT_HT;
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	681a      	ldr	r2, [r3, #0]
 8003ac4:	68fb      	ldr	r3, [r7, #12]
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	f042 0208 	orr.w	r2, r2, #8
 8003acc:	601a      	str	r2, [r3, #0]
 8003ace:	e035      	b.n	8003b3c <HAL_DMA_Start_IT+0x260>
 8003ad0:	40020010 	.word	0x40020010
 8003ad4:	40020028 	.word	0x40020028
 8003ad8:	40020040 	.word	0x40020040
 8003adc:	40020058 	.word	0x40020058
 8003ae0:	40020070 	.word	0x40020070
 8003ae4:	40020088 	.word	0x40020088
 8003ae8:	400200a0 	.word	0x400200a0
 8003aec:	400200b8 	.word	0x400200b8
 8003af0:	40020410 	.word	0x40020410
 8003af4:	40020428 	.word	0x40020428
 8003af8:	40020440 	.word	0x40020440
 8003afc:	40020458 	.word	0x40020458
 8003b00:	40020470 	.word	0x40020470
 8003b04:	40020488 	.word	0x40020488
 8003b08:	400204a0 	.word	0x400204a0
 8003b0c:	400204b8 	.word	0x400204b8
      }
    }
    else /* BDMA channel */
    {
      /* Enable Common interrupts */
      MODIFY_REG(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR, (BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE), (BDMA_CCR_TCIE | BDMA_CCR_TEIE));
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	681b      	ldr	r3, [r3, #0]
 8003b16:	f023 020e 	bic.w	r2, r3, #14
 8003b1a:	68fb      	ldr	r3, [r7, #12]
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	f042 020a 	orr.w	r2, r2, #10
 8003b22:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b28:	2b00      	cmp	r3, #0
 8003b2a:	d007      	beq.n	8003b3c <HAL_DMA_Start_IT+0x260>
      {
        /*Enable Half Transfer IT if corresponding Callback is set */
        ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  |= BDMA_CCR_HTIE;
 8003b2c:	68fb      	ldr	r3, [r7, #12]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	681a      	ldr	r2, [r3, #0]
 8003b32:	68fb      	ldr	r3, [r7, #12]
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	f042 0204 	orr.w	r2, r2, #4
 8003b3a:	601a      	str	r2, [r3, #0]
      }
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	4a83      	ldr	r2, [pc, #524]	; (8003d50 <HAL_DMA_Start_IT+0x474>)
 8003b42:	4293      	cmp	r3, r2
 8003b44:	d072      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	4a82      	ldr	r2, [pc, #520]	; (8003d54 <HAL_DMA_Start_IT+0x478>)
 8003b4c:	4293      	cmp	r3, r2
 8003b4e:	d06d      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b50:	68fb      	ldr	r3, [r7, #12]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	4a80      	ldr	r2, [pc, #512]	; (8003d58 <HAL_DMA_Start_IT+0x47c>)
 8003b56:	4293      	cmp	r3, r2
 8003b58:	d068      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b5a:	68fb      	ldr	r3, [r7, #12]
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	4a7f      	ldr	r2, [pc, #508]	; (8003d5c <HAL_DMA_Start_IT+0x480>)
 8003b60:	4293      	cmp	r3, r2
 8003b62:	d063      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b64:	68fb      	ldr	r3, [r7, #12]
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	4a7d      	ldr	r2, [pc, #500]	; (8003d60 <HAL_DMA_Start_IT+0x484>)
 8003b6a:	4293      	cmp	r3, r2
 8003b6c:	d05e      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b6e:	68fb      	ldr	r3, [r7, #12]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	4a7c      	ldr	r2, [pc, #496]	; (8003d64 <HAL_DMA_Start_IT+0x488>)
 8003b74:	4293      	cmp	r3, r2
 8003b76:	d059      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b78:	68fb      	ldr	r3, [r7, #12]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	4a7a      	ldr	r2, [pc, #488]	; (8003d68 <HAL_DMA_Start_IT+0x48c>)
 8003b7e:	4293      	cmp	r3, r2
 8003b80:	d054      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	4a79      	ldr	r2, [pc, #484]	; (8003d6c <HAL_DMA_Start_IT+0x490>)
 8003b88:	4293      	cmp	r3, r2
 8003b8a:	d04f      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b8c:	68fb      	ldr	r3, [r7, #12]
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	4a77      	ldr	r2, [pc, #476]	; (8003d70 <HAL_DMA_Start_IT+0x494>)
 8003b92:	4293      	cmp	r3, r2
 8003b94:	d04a      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	4a76      	ldr	r2, [pc, #472]	; (8003d74 <HAL_DMA_Start_IT+0x498>)
 8003b9c:	4293      	cmp	r3, r2
 8003b9e:	d045      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003ba0:	68fb      	ldr	r3, [r7, #12]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	4a74      	ldr	r2, [pc, #464]	; (8003d78 <HAL_DMA_Start_IT+0x49c>)
 8003ba6:	4293      	cmp	r3, r2
 8003ba8:	d040      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003baa:	68fb      	ldr	r3, [r7, #12]
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	4a73      	ldr	r2, [pc, #460]	; (8003d7c <HAL_DMA_Start_IT+0x4a0>)
 8003bb0:	4293      	cmp	r3, r2
 8003bb2:	d03b      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003bb4:	68fb      	ldr	r3, [r7, #12]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	4a71      	ldr	r2, [pc, #452]	; (8003d80 <HAL_DMA_Start_IT+0x4a4>)
 8003bba:	4293      	cmp	r3, r2
 8003bbc:	d036      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003bbe:	68fb      	ldr	r3, [r7, #12]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	4a70      	ldr	r2, [pc, #448]	; (8003d84 <HAL_DMA_Start_IT+0x4a8>)
 8003bc4:	4293      	cmp	r3, r2
 8003bc6:	d031      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003bc8:	68fb      	ldr	r3, [r7, #12]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	4a6e      	ldr	r2, [pc, #440]	; (8003d88 <HAL_DMA_Start_IT+0x4ac>)
 8003bce:	4293      	cmp	r3, r2
 8003bd0:	d02c      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003bd2:	68fb      	ldr	r3, [r7, #12]
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	4a6d      	ldr	r2, [pc, #436]	; (8003d8c <HAL_DMA_Start_IT+0x4b0>)
 8003bd8:	4293      	cmp	r3, r2
 8003bda:	d027      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	4a6b      	ldr	r2, [pc, #428]	; (8003d90 <HAL_DMA_Start_IT+0x4b4>)
 8003be2:	4293      	cmp	r3, r2
 8003be4:	d022      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	4a6a      	ldr	r2, [pc, #424]	; (8003d94 <HAL_DMA_Start_IT+0x4b8>)
 8003bec:	4293      	cmp	r3, r2
 8003bee:	d01d      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	4a68      	ldr	r2, [pc, #416]	; (8003d98 <HAL_DMA_Start_IT+0x4bc>)
 8003bf6:	4293      	cmp	r3, r2
 8003bf8:	d018      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003bfa:	68fb      	ldr	r3, [r7, #12]
 8003bfc:	681b      	ldr	r3, [r3, #0]
 8003bfe:	4a67      	ldr	r2, [pc, #412]	; (8003d9c <HAL_DMA_Start_IT+0x4c0>)
 8003c00:	4293      	cmp	r3, r2
 8003c02:	d013      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003c04:	68fb      	ldr	r3, [r7, #12]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	4a65      	ldr	r2, [pc, #404]	; (8003da0 <HAL_DMA_Start_IT+0x4c4>)
 8003c0a:	4293      	cmp	r3, r2
 8003c0c:	d00e      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003c0e:	68fb      	ldr	r3, [r7, #12]
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	4a64      	ldr	r2, [pc, #400]	; (8003da4 <HAL_DMA_Start_IT+0x4c8>)
 8003c14:	4293      	cmp	r3, r2
 8003c16:	d009      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	4a62      	ldr	r2, [pc, #392]	; (8003da8 <HAL_DMA_Start_IT+0x4cc>)
 8003c1e:	4293      	cmp	r3, r2
 8003c20:	d004      	beq.n	8003c2c <HAL_DMA_Start_IT+0x350>
 8003c22:	68fb      	ldr	r3, [r7, #12]
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	4a61      	ldr	r2, [pc, #388]	; (8003dac <HAL_DMA_Start_IT+0x4d0>)
 8003c28:	4293      	cmp	r3, r2
 8003c2a:	d101      	bne.n	8003c30 <HAL_DMA_Start_IT+0x354>
 8003c2c:	2301      	movs	r3, #1
 8003c2e:	e000      	b.n	8003c32 <HAL_DMA_Start_IT+0x356>
 8003c30:	2300      	movs	r3, #0
 8003c32:	2b00      	cmp	r3, #0
 8003c34:	d01a      	beq.n	8003c6c <HAL_DMA_Start_IT+0x390>
    {
      /* Check if DMAMUX Synchronization is enabled */
      if((hdma->DMAmuxChannel->CCR & DMAMUX_CxCR_SE) != 0U)
 8003c36:	68fb      	ldr	r3, [r7, #12]
 8003c38:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d007      	beq.n	8003c54 <HAL_DMA_Start_IT+0x378>
      {
        /* Enable DMAMUX sync overrun IT*/
        hdma->DMAmuxChannel->CCR |= DMAMUX_CxCR_SOIE;
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003c48:	681a      	ldr	r2, [r3, #0]
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003c4e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003c52:	601a      	str	r2, [r3, #0]
      }

      if(hdma->DMAmuxRequestGen != 0U)
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003c58:	2b00      	cmp	r3, #0
 8003c5a:	d007      	beq.n	8003c6c <HAL_DMA_Start_IT+0x390>
      {
        /* if using DMAMUX request generator, enable the DMAMUX request generator overrun IT*/
        /* enable the request gen overrun IT */
        hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 8003c5c:	68fb      	ldr	r3, [r7, #12]
 8003c5e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003c60:	681a      	ldr	r2, [r3, #0]
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003c66:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003c6a:	601a      	str	r2, [r3, #0]
      }
    }

    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	4a37      	ldr	r2, [pc, #220]	; (8003d50 <HAL_DMA_Start_IT+0x474>)
 8003c72:	4293      	cmp	r3, r2
 8003c74:	d04a      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	4a36      	ldr	r2, [pc, #216]	; (8003d54 <HAL_DMA_Start_IT+0x478>)
 8003c7c:	4293      	cmp	r3, r2
 8003c7e:	d045      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	4a34      	ldr	r2, [pc, #208]	; (8003d58 <HAL_DMA_Start_IT+0x47c>)
 8003c86:	4293      	cmp	r3, r2
 8003c88:	d040      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	4a33      	ldr	r2, [pc, #204]	; (8003d5c <HAL_DMA_Start_IT+0x480>)
 8003c90:	4293      	cmp	r3, r2
 8003c92:	d03b      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003c94:	68fb      	ldr	r3, [r7, #12]
 8003c96:	681b      	ldr	r3, [r3, #0]
 8003c98:	4a31      	ldr	r2, [pc, #196]	; (8003d60 <HAL_DMA_Start_IT+0x484>)
 8003c9a:	4293      	cmp	r3, r2
 8003c9c:	d036      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003c9e:	68fb      	ldr	r3, [r7, #12]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	4a30      	ldr	r2, [pc, #192]	; (8003d64 <HAL_DMA_Start_IT+0x488>)
 8003ca4:	4293      	cmp	r3, r2
 8003ca6:	d031      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	4a2e      	ldr	r2, [pc, #184]	; (8003d68 <HAL_DMA_Start_IT+0x48c>)
 8003cae:	4293      	cmp	r3, r2
 8003cb0:	d02c      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	4a2d      	ldr	r2, [pc, #180]	; (8003d6c <HAL_DMA_Start_IT+0x490>)
 8003cb8:	4293      	cmp	r3, r2
 8003cba:	d027      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003cbc:	68fb      	ldr	r3, [r7, #12]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	4a2b      	ldr	r2, [pc, #172]	; (8003d70 <HAL_DMA_Start_IT+0x494>)
 8003cc2:	4293      	cmp	r3, r2
 8003cc4:	d022      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	4a2a      	ldr	r2, [pc, #168]	; (8003d74 <HAL_DMA_Start_IT+0x498>)
 8003ccc:	4293      	cmp	r3, r2
 8003cce:	d01d      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	4a28      	ldr	r2, [pc, #160]	; (8003d78 <HAL_DMA_Start_IT+0x49c>)
 8003cd6:	4293      	cmp	r3, r2
 8003cd8:	d018      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	4a27      	ldr	r2, [pc, #156]	; (8003d7c <HAL_DMA_Start_IT+0x4a0>)
 8003ce0:	4293      	cmp	r3, r2
 8003ce2:	d013      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003ce4:	68fb      	ldr	r3, [r7, #12]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	4a25      	ldr	r2, [pc, #148]	; (8003d80 <HAL_DMA_Start_IT+0x4a4>)
 8003cea:	4293      	cmp	r3, r2
 8003cec:	d00e      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003cee:	68fb      	ldr	r3, [r7, #12]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	4a24      	ldr	r2, [pc, #144]	; (8003d84 <HAL_DMA_Start_IT+0x4a8>)
 8003cf4:	4293      	cmp	r3, r2
 8003cf6:	d009      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	4a22      	ldr	r2, [pc, #136]	; (8003d88 <HAL_DMA_Start_IT+0x4ac>)
 8003cfe:	4293      	cmp	r3, r2
 8003d00:	d004      	beq.n	8003d0c <HAL_DMA_Start_IT+0x430>
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	4a21      	ldr	r2, [pc, #132]	; (8003d8c <HAL_DMA_Start_IT+0x4b0>)
 8003d08:	4293      	cmp	r3, r2
 8003d0a:	d108      	bne.n	8003d1e <HAL_DMA_Start_IT+0x442>
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	681a      	ldr	r2, [r3, #0]
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	f042 0201 	orr.w	r2, r2, #1
 8003d1a:	601a      	str	r2, [r3, #0]
 8003d1c:	e012      	b.n	8003d44 <HAL_DMA_Start_IT+0x468>
 8003d1e:	68fb      	ldr	r3, [r7, #12]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	681a      	ldr	r2, [r3, #0]
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	f042 0201 	orr.w	r2, r2, #1
 8003d2c:	601a      	str	r2, [r3, #0]
 8003d2e:	e009      	b.n	8003d44 <HAL_DMA_Start_IT+0x468>
  }
  else
  {
    /* Set the error code to busy */
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8003d30:	68fb      	ldr	r3, [r7, #12]
 8003d32:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003d36:	655a      	str	r2, [r3, #84]	; 0x54

    /* Process unlocked */
    __HAL_UNLOCK(hdma);
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	2200      	movs	r2, #0
 8003d3c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Return error status */
    status = HAL_ERROR;
 8003d40:	2301      	movs	r3, #1
 8003d42:	75fb      	strb	r3, [r7, #23]
  }

  return status;
 8003d44:	7dfb      	ldrb	r3, [r7, #23]
}
 8003d46:	4618      	mov	r0, r3
 8003d48:	3718      	adds	r7, #24
 8003d4a:	46bd      	mov	sp, r7
 8003d4c:	bd80      	pop	{r7, pc}
 8003d4e:	bf00      	nop
 8003d50:	40020010 	.word	0x40020010
 8003d54:	40020028 	.word	0x40020028
 8003d58:	40020040 	.word	0x40020040
 8003d5c:	40020058 	.word	0x40020058
 8003d60:	40020070 	.word	0x40020070
 8003d64:	40020088 	.word	0x40020088
 8003d68:	400200a0 	.word	0x400200a0
 8003d6c:	400200b8 	.word	0x400200b8
 8003d70:	40020410 	.word	0x40020410
 8003d74:	40020428 	.word	0x40020428
 8003d78:	40020440 	.word	0x40020440
 8003d7c:	40020458 	.word	0x40020458
 8003d80:	40020470 	.word	0x40020470
 8003d84:	40020488 	.word	0x40020488
 8003d88:	400204a0 	.word	0x400204a0
 8003d8c:	400204b8 	.word	0x400204b8
 8003d90:	58025408 	.word	0x58025408
 8003d94:	5802541c 	.word	0x5802541c
 8003d98:	58025430 	.word	0x58025430
 8003d9c:	58025444 	.word	0x58025444
 8003da0:	58025458 	.word	0x58025458
 8003da4:	5802546c 	.word	0x5802546c
 8003da8:	58025480 	.word	0x58025480
 8003dac:	58025494 	.word	0x58025494

08003db0 <HAL_DMA_Abort_IT>:
  * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8003db0:	b580      	push	{r7, lr}
 8003db2:	b084      	sub	sp, #16
 8003db4:	af00      	add	r7, sp, #0
 8003db6:	6078      	str	r0, [r7, #4]
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	2b00      	cmp	r3, #0
 8003dbc:	d101      	bne.n	8003dc2 <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 8003dbe:	2301      	movs	r3, #1
 8003dc0:	e237      	b.n	8004232 <HAL_DMA_Abort_IT+0x482>
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003dc8:	b2db      	uxtb	r3, r3
 8003dca:	2b02      	cmp	r3, #2
 8003dcc:	d004      	beq.n	8003dd8 <HAL_DMA_Abort_IT+0x28>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	2280      	movs	r2, #128	; 0x80
 8003dd2:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8003dd4:	2301      	movs	r3, #1
 8003dd6:	e22c      	b.n	8004232 <HAL_DMA_Abort_IT+0x482>
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	4a5c      	ldr	r2, [pc, #368]	; (8003f50 <HAL_DMA_Abort_IT+0x1a0>)
 8003dde:	4293      	cmp	r3, r2
 8003de0:	d04a      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	4a5b      	ldr	r2, [pc, #364]	; (8003f54 <HAL_DMA_Abort_IT+0x1a4>)
 8003de8:	4293      	cmp	r3, r2
 8003dea:	d045      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	4a59      	ldr	r2, [pc, #356]	; (8003f58 <HAL_DMA_Abort_IT+0x1a8>)
 8003df2:	4293      	cmp	r3, r2
 8003df4:	d040      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	4a58      	ldr	r2, [pc, #352]	; (8003f5c <HAL_DMA_Abort_IT+0x1ac>)
 8003dfc:	4293      	cmp	r3, r2
 8003dfe:	d03b      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	4a56      	ldr	r2, [pc, #344]	; (8003f60 <HAL_DMA_Abort_IT+0x1b0>)
 8003e06:	4293      	cmp	r3, r2
 8003e08:	d036      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	4a55      	ldr	r2, [pc, #340]	; (8003f64 <HAL_DMA_Abort_IT+0x1b4>)
 8003e10:	4293      	cmp	r3, r2
 8003e12:	d031      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	4a53      	ldr	r2, [pc, #332]	; (8003f68 <HAL_DMA_Abort_IT+0x1b8>)
 8003e1a:	4293      	cmp	r3, r2
 8003e1c:	d02c      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	4a52      	ldr	r2, [pc, #328]	; (8003f6c <HAL_DMA_Abort_IT+0x1bc>)
 8003e24:	4293      	cmp	r3, r2
 8003e26:	d027      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	4a50      	ldr	r2, [pc, #320]	; (8003f70 <HAL_DMA_Abort_IT+0x1c0>)
 8003e2e:	4293      	cmp	r3, r2
 8003e30:	d022      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	681b      	ldr	r3, [r3, #0]
 8003e36:	4a4f      	ldr	r2, [pc, #316]	; (8003f74 <HAL_DMA_Abort_IT+0x1c4>)
 8003e38:	4293      	cmp	r3, r2
 8003e3a:	d01d      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	4a4d      	ldr	r2, [pc, #308]	; (8003f78 <HAL_DMA_Abort_IT+0x1c8>)
 8003e42:	4293      	cmp	r3, r2
 8003e44:	d018      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	4a4c      	ldr	r2, [pc, #304]	; (8003f7c <HAL_DMA_Abort_IT+0x1cc>)
 8003e4c:	4293      	cmp	r3, r2
 8003e4e:	d013      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	4a4a      	ldr	r2, [pc, #296]	; (8003f80 <HAL_DMA_Abort_IT+0x1d0>)
 8003e56:	4293      	cmp	r3, r2
 8003e58:	d00e      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	4a49      	ldr	r2, [pc, #292]	; (8003f84 <HAL_DMA_Abort_IT+0x1d4>)
 8003e60:	4293      	cmp	r3, r2
 8003e62:	d009      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	4a47      	ldr	r2, [pc, #284]	; (8003f88 <HAL_DMA_Abort_IT+0x1d8>)
 8003e6a:	4293      	cmp	r3, r2
 8003e6c:	d004      	beq.n	8003e78 <HAL_DMA_Abort_IT+0xc8>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	4a46      	ldr	r2, [pc, #280]	; (8003f8c <HAL_DMA_Abort_IT+0x1dc>)
 8003e74:	4293      	cmp	r3, r2
 8003e76:	d101      	bne.n	8003e7c <HAL_DMA_Abort_IT+0xcc>
 8003e78:	2301      	movs	r3, #1
 8003e7a:	e000      	b.n	8003e7e <HAL_DMA_Abort_IT+0xce>
 8003e7c:	2300      	movs	r3, #0
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	f000 8086 	beq.w	8003f90 <HAL_DMA_Abort_IT+0x1e0>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	2204      	movs	r2, #4
 8003e88:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	4a2f      	ldr	r2, [pc, #188]	; (8003f50 <HAL_DMA_Abort_IT+0x1a0>)
 8003e92:	4293      	cmp	r3, r2
 8003e94:	d04a      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	4a2e      	ldr	r2, [pc, #184]	; (8003f54 <HAL_DMA_Abort_IT+0x1a4>)
 8003e9c:	4293      	cmp	r3, r2
 8003e9e:	d045      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	4a2c      	ldr	r2, [pc, #176]	; (8003f58 <HAL_DMA_Abort_IT+0x1a8>)
 8003ea6:	4293      	cmp	r3, r2
 8003ea8:	d040      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	4a2b      	ldr	r2, [pc, #172]	; (8003f5c <HAL_DMA_Abort_IT+0x1ac>)
 8003eb0:	4293      	cmp	r3, r2
 8003eb2:	d03b      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	4a29      	ldr	r2, [pc, #164]	; (8003f60 <HAL_DMA_Abort_IT+0x1b0>)
 8003eba:	4293      	cmp	r3, r2
 8003ebc:	d036      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	4a28      	ldr	r2, [pc, #160]	; (8003f64 <HAL_DMA_Abort_IT+0x1b4>)
 8003ec4:	4293      	cmp	r3, r2
 8003ec6:	d031      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	4a26      	ldr	r2, [pc, #152]	; (8003f68 <HAL_DMA_Abort_IT+0x1b8>)
 8003ece:	4293      	cmp	r3, r2
 8003ed0:	d02c      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	681b      	ldr	r3, [r3, #0]
 8003ed6:	4a25      	ldr	r2, [pc, #148]	; (8003f6c <HAL_DMA_Abort_IT+0x1bc>)
 8003ed8:	4293      	cmp	r3, r2
 8003eda:	d027      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	4a23      	ldr	r2, [pc, #140]	; (8003f70 <HAL_DMA_Abort_IT+0x1c0>)
 8003ee2:	4293      	cmp	r3, r2
 8003ee4:	d022      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	4a22      	ldr	r2, [pc, #136]	; (8003f74 <HAL_DMA_Abort_IT+0x1c4>)
 8003eec:	4293      	cmp	r3, r2
 8003eee:	d01d      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003ef0:	687b      	ldr	r3, [r7, #4]
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	4a20      	ldr	r2, [pc, #128]	; (8003f78 <HAL_DMA_Abort_IT+0x1c8>)
 8003ef6:	4293      	cmp	r3, r2
 8003ef8:	d018      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	4a1f      	ldr	r2, [pc, #124]	; (8003f7c <HAL_DMA_Abort_IT+0x1cc>)
 8003f00:	4293      	cmp	r3, r2
 8003f02:	d013      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	681b      	ldr	r3, [r3, #0]
 8003f08:	4a1d      	ldr	r2, [pc, #116]	; (8003f80 <HAL_DMA_Abort_IT+0x1d0>)
 8003f0a:	4293      	cmp	r3, r2
 8003f0c:	d00e      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	4a1c      	ldr	r2, [pc, #112]	; (8003f84 <HAL_DMA_Abort_IT+0x1d4>)
 8003f14:	4293      	cmp	r3, r2
 8003f16:	d009      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	4a1a      	ldr	r2, [pc, #104]	; (8003f88 <HAL_DMA_Abort_IT+0x1d8>)
 8003f1e:	4293      	cmp	r3, r2
 8003f20:	d004      	beq.n	8003f2c <HAL_DMA_Abort_IT+0x17c>
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	4a19      	ldr	r2, [pc, #100]	; (8003f8c <HAL_DMA_Abort_IT+0x1dc>)
 8003f28:	4293      	cmp	r3, r2
 8003f2a:	d108      	bne.n	8003f3e <HAL_DMA_Abort_IT+0x18e>
 8003f2c:	687b      	ldr	r3, [r7, #4]
 8003f2e:	681b      	ldr	r3, [r3, #0]
 8003f30:	681a      	ldr	r2, [r3, #0]
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	f022 0201 	bic.w	r2, r2, #1
 8003f3a:	601a      	str	r2, [r3, #0]
 8003f3c:	e178      	b.n	8004230 <HAL_DMA_Abort_IT+0x480>
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	681a      	ldr	r2, [r3, #0]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	f022 0201 	bic.w	r2, r2, #1
 8003f4c:	601a      	str	r2, [r3, #0]
 8003f4e:	e16f      	b.n	8004230 <HAL_DMA_Abort_IT+0x480>
 8003f50:	40020010 	.word	0x40020010
 8003f54:	40020028 	.word	0x40020028
 8003f58:	40020040 	.word	0x40020040
 8003f5c:	40020058 	.word	0x40020058
 8003f60:	40020070 	.word	0x40020070
 8003f64:	40020088 	.word	0x40020088
 8003f68:	400200a0 	.word	0x400200a0
 8003f6c:	400200b8 	.word	0x400200b8
 8003f70:	40020410 	.word	0x40020410
 8003f74:	40020428 	.word	0x40020428
 8003f78:	40020440 	.word	0x40020440
 8003f7c:	40020458 	.word	0x40020458
 8003f80:	40020470 	.word	0x40020470
 8003f84:	40020488 	.word	0x40020488
 8003f88:	400204a0 	.word	0x400204a0
 8003f8c:	400204b8 	.word	0x400204b8
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts  */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	681a      	ldr	r2, [r3, #0]
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	f022 020e 	bic.w	r2, r2, #14
 8003f9e:	601a      	str	r2, [r3, #0]

      /* Disable the channel */
      __HAL_DMA_DISABLE(hdma);
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	4a6c      	ldr	r2, [pc, #432]	; (8004158 <HAL_DMA_Abort_IT+0x3a8>)
 8003fa6:	4293      	cmp	r3, r2
 8003fa8:	d04a      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	4a6b      	ldr	r2, [pc, #428]	; (800415c <HAL_DMA_Abort_IT+0x3ac>)
 8003fb0:	4293      	cmp	r3, r2
 8003fb2:	d045      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	681b      	ldr	r3, [r3, #0]
 8003fb8:	4a69      	ldr	r2, [pc, #420]	; (8004160 <HAL_DMA_Abort_IT+0x3b0>)
 8003fba:	4293      	cmp	r3, r2
 8003fbc:	d040      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	4a68      	ldr	r2, [pc, #416]	; (8004164 <HAL_DMA_Abort_IT+0x3b4>)
 8003fc4:	4293      	cmp	r3, r2
 8003fc6:	d03b      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	4a66      	ldr	r2, [pc, #408]	; (8004168 <HAL_DMA_Abort_IT+0x3b8>)
 8003fce:	4293      	cmp	r3, r2
 8003fd0:	d036      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	4a65      	ldr	r2, [pc, #404]	; (800416c <HAL_DMA_Abort_IT+0x3bc>)
 8003fd8:	4293      	cmp	r3, r2
 8003fda:	d031      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	681b      	ldr	r3, [r3, #0]
 8003fe0:	4a63      	ldr	r2, [pc, #396]	; (8004170 <HAL_DMA_Abort_IT+0x3c0>)
 8003fe2:	4293      	cmp	r3, r2
 8003fe4:	d02c      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	4a62      	ldr	r2, [pc, #392]	; (8004174 <HAL_DMA_Abort_IT+0x3c4>)
 8003fec:	4293      	cmp	r3, r2
 8003fee:	d027      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	4a60      	ldr	r2, [pc, #384]	; (8004178 <HAL_DMA_Abort_IT+0x3c8>)
 8003ff6:	4293      	cmp	r3, r2
 8003ff8:	d022      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	4a5f      	ldr	r2, [pc, #380]	; (800417c <HAL_DMA_Abort_IT+0x3cc>)
 8004000:	4293      	cmp	r3, r2
 8004002:	d01d      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	4a5d      	ldr	r2, [pc, #372]	; (8004180 <HAL_DMA_Abort_IT+0x3d0>)
 800400a:	4293      	cmp	r3, r2
 800400c:	d018      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	4a5c      	ldr	r2, [pc, #368]	; (8004184 <HAL_DMA_Abort_IT+0x3d4>)
 8004014:	4293      	cmp	r3, r2
 8004016:	d013      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	681b      	ldr	r3, [r3, #0]
 800401c:	4a5a      	ldr	r2, [pc, #360]	; (8004188 <HAL_DMA_Abort_IT+0x3d8>)
 800401e:	4293      	cmp	r3, r2
 8004020:	d00e      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	4a59      	ldr	r2, [pc, #356]	; (800418c <HAL_DMA_Abort_IT+0x3dc>)
 8004028:	4293      	cmp	r3, r2
 800402a:	d009      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	4a57      	ldr	r2, [pc, #348]	; (8004190 <HAL_DMA_Abort_IT+0x3e0>)
 8004032:	4293      	cmp	r3, r2
 8004034:	d004      	beq.n	8004040 <HAL_DMA_Abort_IT+0x290>
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	4a56      	ldr	r2, [pc, #344]	; (8004194 <HAL_DMA_Abort_IT+0x3e4>)
 800403c:	4293      	cmp	r3, r2
 800403e:	d108      	bne.n	8004052 <HAL_DMA_Abort_IT+0x2a2>
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	681a      	ldr	r2, [r3, #0]
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	f022 0201 	bic.w	r2, r2, #1
 800404e:	601a      	str	r2, [r3, #0]
 8004050:	e007      	b.n	8004062 <HAL_DMA_Abort_IT+0x2b2>
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	681a      	ldr	r2, [r3, #0]
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	f022 0201 	bic.w	r2, r2, #1
 8004060:	601a      	str	r2, [r3, #0]

      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004062:	687b      	ldr	r3, [r7, #4]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	4a3c      	ldr	r2, [pc, #240]	; (8004158 <HAL_DMA_Abort_IT+0x3a8>)
 8004068:	4293      	cmp	r3, r2
 800406a:	d072      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 800406c:	687b      	ldr	r3, [r7, #4]
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4a3a      	ldr	r2, [pc, #232]	; (800415c <HAL_DMA_Abort_IT+0x3ac>)
 8004072:	4293      	cmp	r3, r2
 8004074:	d06d      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	4a39      	ldr	r2, [pc, #228]	; (8004160 <HAL_DMA_Abort_IT+0x3b0>)
 800407c:	4293      	cmp	r3, r2
 800407e:	d068      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	4a37      	ldr	r2, [pc, #220]	; (8004164 <HAL_DMA_Abort_IT+0x3b4>)
 8004086:	4293      	cmp	r3, r2
 8004088:	d063      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	681b      	ldr	r3, [r3, #0]
 800408e:	4a36      	ldr	r2, [pc, #216]	; (8004168 <HAL_DMA_Abort_IT+0x3b8>)
 8004090:	4293      	cmp	r3, r2
 8004092:	d05e      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	4a34      	ldr	r2, [pc, #208]	; (800416c <HAL_DMA_Abort_IT+0x3bc>)
 800409a:	4293      	cmp	r3, r2
 800409c:	d059      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	681b      	ldr	r3, [r3, #0]
 80040a2:	4a33      	ldr	r2, [pc, #204]	; (8004170 <HAL_DMA_Abort_IT+0x3c0>)
 80040a4:	4293      	cmp	r3, r2
 80040a6:	d054      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	4a31      	ldr	r2, [pc, #196]	; (8004174 <HAL_DMA_Abort_IT+0x3c4>)
 80040ae:	4293      	cmp	r3, r2
 80040b0:	d04f      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	681b      	ldr	r3, [r3, #0]
 80040b6:	4a30      	ldr	r2, [pc, #192]	; (8004178 <HAL_DMA_Abort_IT+0x3c8>)
 80040b8:	4293      	cmp	r3, r2
 80040ba:	d04a      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	4a2e      	ldr	r2, [pc, #184]	; (800417c <HAL_DMA_Abort_IT+0x3cc>)
 80040c2:	4293      	cmp	r3, r2
 80040c4:	d045      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	4a2d      	ldr	r2, [pc, #180]	; (8004180 <HAL_DMA_Abort_IT+0x3d0>)
 80040cc:	4293      	cmp	r3, r2
 80040ce:	d040      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	4a2b      	ldr	r2, [pc, #172]	; (8004184 <HAL_DMA_Abort_IT+0x3d4>)
 80040d6:	4293      	cmp	r3, r2
 80040d8:	d03b      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	681b      	ldr	r3, [r3, #0]
 80040de:	4a2a      	ldr	r2, [pc, #168]	; (8004188 <HAL_DMA_Abort_IT+0x3d8>)
 80040e0:	4293      	cmp	r3, r2
 80040e2:	d036      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	4a28      	ldr	r2, [pc, #160]	; (800418c <HAL_DMA_Abort_IT+0x3dc>)
 80040ea:	4293      	cmp	r3, r2
 80040ec:	d031      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	681b      	ldr	r3, [r3, #0]
 80040f2:	4a27      	ldr	r2, [pc, #156]	; (8004190 <HAL_DMA_Abort_IT+0x3e0>)
 80040f4:	4293      	cmp	r3, r2
 80040f6:	d02c      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	4a25      	ldr	r2, [pc, #148]	; (8004194 <HAL_DMA_Abort_IT+0x3e4>)
 80040fe:	4293      	cmp	r3, r2
 8004100:	d027      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	4a24      	ldr	r2, [pc, #144]	; (8004198 <HAL_DMA_Abort_IT+0x3e8>)
 8004108:	4293      	cmp	r3, r2
 800410a:	d022      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	681b      	ldr	r3, [r3, #0]
 8004110:	4a22      	ldr	r2, [pc, #136]	; (800419c <HAL_DMA_Abort_IT+0x3ec>)
 8004112:	4293      	cmp	r3, r2
 8004114:	d01d      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	681b      	ldr	r3, [r3, #0]
 800411a:	4a21      	ldr	r2, [pc, #132]	; (80041a0 <HAL_DMA_Abort_IT+0x3f0>)
 800411c:	4293      	cmp	r3, r2
 800411e:	d018      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	4a1f      	ldr	r2, [pc, #124]	; (80041a4 <HAL_DMA_Abort_IT+0x3f4>)
 8004126:	4293      	cmp	r3, r2
 8004128:	d013      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	4a1e      	ldr	r2, [pc, #120]	; (80041a8 <HAL_DMA_Abort_IT+0x3f8>)
 8004130:	4293      	cmp	r3, r2
 8004132:	d00e      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	4a1c      	ldr	r2, [pc, #112]	; (80041ac <HAL_DMA_Abort_IT+0x3fc>)
 800413a:	4293      	cmp	r3, r2
 800413c:	d009      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	681b      	ldr	r3, [r3, #0]
 8004142:	4a1b      	ldr	r2, [pc, #108]	; (80041b0 <HAL_DMA_Abort_IT+0x400>)
 8004144:	4293      	cmp	r3, r2
 8004146:	d004      	beq.n	8004152 <HAL_DMA_Abort_IT+0x3a2>
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	4a19      	ldr	r2, [pc, #100]	; (80041b4 <HAL_DMA_Abort_IT+0x404>)
 800414e:	4293      	cmp	r3, r2
 8004150:	d132      	bne.n	80041b8 <HAL_DMA_Abort_IT+0x408>
 8004152:	2301      	movs	r3, #1
 8004154:	e031      	b.n	80041ba <HAL_DMA_Abort_IT+0x40a>
 8004156:	bf00      	nop
 8004158:	40020010 	.word	0x40020010
 800415c:	40020028 	.word	0x40020028
 8004160:	40020040 	.word	0x40020040
 8004164:	40020058 	.word	0x40020058
 8004168:	40020070 	.word	0x40020070
 800416c:	40020088 	.word	0x40020088
 8004170:	400200a0 	.word	0x400200a0
 8004174:	400200b8 	.word	0x400200b8
 8004178:	40020410 	.word	0x40020410
 800417c:	40020428 	.word	0x40020428
 8004180:	40020440 	.word	0x40020440
 8004184:	40020458 	.word	0x40020458
 8004188:	40020470 	.word	0x40020470
 800418c:	40020488 	.word	0x40020488
 8004190:	400204a0 	.word	0x400204a0
 8004194:	400204b8 	.word	0x400204b8
 8004198:	58025408 	.word	0x58025408
 800419c:	5802541c 	.word	0x5802541c
 80041a0:	58025430 	.word	0x58025430
 80041a4:	58025444 	.word	0x58025444
 80041a8:	58025458 	.word	0x58025458
 80041ac:	5802546c 	.word	0x5802546c
 80041b0:	58025480 	.word	0x58025480
 80041b4:	58025494 	.word	0x58025494
 80041b8:	2300      	movs	r3, #0
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	d028      	beq.n	8004210 <HAL_DMA_Abort_IT+0x460>
      {
        /* disable the DMAMUX sync overrun IT */
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80041c2:	681a      	ldr	r2, [r3, #0]
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80041c8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80041cc:	601a      	str	r2, [r3, #0]

        /* Clear all flags */
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80041d2:	60fb      	str	r3, [r7, #12]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80041d8:	f003 031f 	and.w	r3, r3, #31
 80041dc:	2201      	movs	r2, #1
 80041de:	409a      	lsls	r2, r3
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	605a      	str	r2, [r3, #4]

        /* Clear the DMAMUX synchro overrun flag */
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80041e8:	687a      	ldr	r2, [r7, #4]
 80041ea:	6e92      	ldr	r2, [r2, #104]	; 0x68
 80041ec:	605a      	str	r2, [r3, #4]

        if(hdma->DMAmuxRequestGen != 0U)
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80041f2:	2b00      	cmp	r3, #0
 80041f4:	d00c      	beq.n	8004210 <HAL_DMA_Abort_IT+0x460>
        {
          /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
          /* disable the request gen overrun IT */
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80041fa:	681a      	ldr	r2, [r3, #0]
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004200:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004204:	601a      	str	r2, [r3, #0]

          /* Clear the DMAMUX request generator overrun flag */
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800420a:	687a      	ldr	r2, [r7, #4]
 800420c:	6f52      	ldr	r2, [r2, #116]	; 0x74
 800420e:	605a      	str	r2, [r3, #4]
        }
      }

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	2201      	movs	r2, #1
 8004214:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	2200      	movs	r2, #0
 800421c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      /* Call User Abort callback */
      if(hdma->XferAbortCallback != NULL)
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004224:	2b00      	cmp	r3, #0
 8004226:	d003      	beq.n	8004230 <HAL_DMA_Abort_IT+0x480>
      {
        hdma->XferAbortCallback(hdma);
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800422c:	6878      	ldr	r0, [r7, #4]
 800422e:	4798      	blx	r3
      }
    }
  }

  return HAL_OK;
 8004230:	2300      	movs	r3, #0
}
 8004232:	4618      	mov	r0, r3
 8004234:	3710      	adds	r7, #16
 8004236:	46bd      	mov	sp, r7
 8004238:	bd80      	pop	{r7, pc}
 800423a:	bf00      	nop

0800423c <HAL_DMA_IRQHandler>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 800423c:	b580      	push	{r7, lr}
 800423e:	b08a      	sub	sp, #40	; 0x28
 8004240:	af00      	add	r7, sp, #0
 8004242:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr_dma, tmpisr_bdma;
  uint32_t ccr_reg;
  __IO uint32_t count = 0U;
 8004244:	2300      	movs	r3, #0
 8004246:	60fb      	str	r3, [r7, #12]
  uint32_t timeout = SystemCoreClock / 9600U;
 8004248:	4b67      	ldr	r3, [pc, #412]	; (80043e8 <HAL_DMA_IRQHandler+0x1ac>)
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	4a67      	ldr	r2, [pc, #412]	; (80043ec <HAL_DMA_IRQHandler+0x1b0>)
 800424e:	fba2 2303 	umull	r2, r3, r2, r3
 8004252:	0a9b      	lsrs	r3, r3, #10
 8004254:	627b      	str	r3, [r7, #36]	; 0x24

  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800425a:	623b      	str	r3, [r7, #32]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004260:	61fb      	str	r3, [r7, #28]

  tmpisr_dma  = regs_dma->ISR;
 8004262:	6a3b      	ldr	r3, [r7, #32]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	61bb      	str	r3, [r7, #24]
  tmpisr_bdma = regs_bdma->ISR;
 8004268:	69fb      	ldr	r3, [r7, #28]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	617b      	str	r3, [r7, #20]

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U)  /* DMA1 or DMA2 instance */
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	4a5f      	ldr	r2, [pc, #380]	; (80043f0 <HAL_DMA_IRQHandler+0x1b4>)
 8004274:	4293      	cmp	r3, r2
 8004276:	d04a      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	681b      	ldr	r3, [r3, #0]
 800427c:	4a5d      	ldr	r2, [pc, #372]	; (80043f4 <HAL_DMA_IRQHandler+0x1b8>)
 800427e:	4293      	cmp	r3, r2
 8004280:	d045      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	4a5c      	ldr	r2, [pc, #368]	; (80043f8 <HAL_DMA_IRQHandler+0x1bc>)
 8004288:	4293      	cmp	r3, r2
 800428a:	d040      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	4a5a      	ldr	r2, [pc, #360]	; (80043fc <HAL_DMA_IRQHandler+0x1c0>)
 8004292:	4293      	cmp	r3, r2
 8004294:	d03b      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	4a59      	ldr	r2, [pc, #356]	; (8004400 <HAL_DMA_IRQHandler+0x1c4>)
 800429c:	4293      	cmp	r3, r2
 800429e:	d036      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	4a57      	ldr	r2, [pc, #348]	; (8004404 <HAL_DMA_IRQHandler+0x1c8>)
 80042a6:	4293      	cmp	r3, r2
 80042a8:	d031      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	4a56      	ldr	r2, [pc, #344]	; (8004408 <HAL_DMA_IRQHandler+0x1cc>)
 80042b0:	4293      	cmp	r3, r2
 80042b2:	d02c      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	4a54      	ldr	r2, [pc, #336]	; (800440c <HAL_DMA_IRQHandler+0x1d0>)
 80042ba:	4293      	cmp	r3, r2
 80042bc:	d027      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	4a53      	ldr	r2, [pc, #332]	; (8004410 <HAL_DMA_IRQHandler+0x1d4>)
 80042c4:	4293      	cmp	r3, r2
 80042c6:	d022      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	4a51      	ldr	r2, [pc, #324]	; (8004414 <HAL_DMA_IRQHandler+0x1d8>)
 80042ce:	4293      	cmp	r3, r2
 80042d0:	d01d      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	4a50      	ldr	r2, [pc, #320]	; (8004418 <HAL_DMA_IRQHandler+0x1dc>)
 80042d8:	4293      	cmp	r3, r2
 80042da:	d018      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	4a4e      	ldr	r2, [pc, #312]	; (800441c <HAL_DMA_IRQHandler+0x1e0>)
 80042e2:	4293      	cmp	r3, r2
 80042e4:	d013      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	681b      	ldr	r3, [r3, #0]
 80042ea:	4a4d      	ldr	r2, [pc, #308]	; (8004420 <HAL_DMA_IRQHandler+0x1e4>)
 80042ec:	4293      	cmp	r3, r2
 80042ee:	d00e      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	4a4b      	ldr	r2, [pc, #300]	; (8004424 <HAL_DMA_IRQHandler+0x1e8>)
 80042f6:	4293      	cmp	r3, r2
 80042f8:	d009      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	681b      	ldr	r3, [r3, #0]
 80042fe:	4a4a      	ldr	r2, [pc, #296]	; (8004428 <HAL_DMA_IRQHandler+0x1ec>)
 8004300:	4293      	cmp	r3, r2
 8004302:	d004      	beq.n	800430e <HAL_DMA_IRQHandler+0xd2>
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	4a48      	ldr	r2, [pc, #288]	; (800442c <HAL_DMA_IRQHandler+0x1f0>)
 800430a:	4293      	cmp	r3, r2
 800430c:	d101      	bne.n	8004312 <HAL_DMA_IRQHandler+0xd6>
 800430e:	2301      	movs	r3, #1
 8004310:	e000      	b.n	8004314 <HAL_DMA_IRQHandler+0xd8>
 8004312:	2300      	movs	r3, #0
 8004314:	2b00      	cmp	r3, #0
 8004316:	f000 842b 	beq.w	8004b70 <HAL_DMA_IRQHandler+0x934>
  {
    /* Transfer Error Interrupt management ***************************************/
    if ((tmpisr_dma & (DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800431e:	f003 031f 	and.w	r3, r3, #31
 8004322:	2208      	movs	r2, #8
 8004324:	409a      	lsls	r2, r3
 8004326:	69bb      	ldr	r3, [r7, #24]
 8004328:	4013      	ands	r3, r2
 800432a:	2b00      	cmp	r3, #0
 800432c:	f000 80a2 	beq.w	8004474 <HAL_DMA_IRQHandler+0x238>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != 0U)
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	681b      	ldr	r3, [r3, #0]
 8004334:	4a2e      	ldr	r2, [pc, #184]	; (80043f0 <HAL_DMA_IRQHandler+0x1b4>)
 8004336:	4293      	cmp	r3, r2
 8004338:	d04a      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	681b      	ldr	r3, [r3, #0]
 800433e:	4a2d      	ldr	r2, [pc, #180]	; (80043f4 <HAL_DMA_IRQHandler+0x1b8>)
 8004340:	4293      	cmp	r3, r2
 8004342:	d045      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	4a2b      	ldr	r2, [pc, #172]	; (80043f8 <HAL_DMA_IRQHandler+0x1bc>)
 800434a:	4293      	cmp	r3, r2
 800434c:	d040      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	4a2a      	ldr	r2, [pc, #168]	; (80043fc <HAL_DMA_IRQHandler+0x1c0>)
 8004354:	4293      	cmp	r3, r2
 8004356:	d03b      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	681b      	ldr	r3, [r3, #0]
 800435c:	4a28      	ldr	r2, [pc, #160]	; (8004400 <HAL_DMA_IRQHandler+0x1c4>)
 800435e:	4293      	cmp	r3, r2
 8004360:	d036      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	681b      	ldr	r3, [r3, #0]
 8004366:	4a27      	ldr	r2, [pc, #156]	; (8004404 <HAL_DMA_IRQHandler+0x1c8>)
 8004368:	4293      	cmp	r3, r2
 800436a:	d031      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	681b      	ldr	r3, [r3, #0]
 8004370:	4a25      	ldr	r2, [pc, #148]	; (8004408 <HAL_DMA_IRQHandler+0x1cc>)
 8004372:	4293      	cmp	r3, r2
 8004374:	d02c      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	4a24      	ldr	r2, [pc, #144]	; (800440c <HAL_DMA_IRQHandler+0x1d0>)
 800437c:	4293      	cmp	r3, r2
 800437e:	d027      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	4a22      	ldr	r2, [pc, #136]	; (8004410 <HAL_DMA_IRQHandler+0x1d4>)
 8004386:	4293      	cmp	r3, r2
 8004388:	d022      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	4a21      	ldr	r2, [pc, #132]	; (8004414 <HAL_DMA_IRQHandler+0x1d8>)
 8004390:	4293      	cmp	r3, r2
 8004392:	d01d      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	4a1f      	ldr	r2, [pc, #124]	; (8004418 <HAL_DMA_IRQHandler+0x1dc>)
 800439a:	4293      	cmp	r3, r2
 800439c:	d018      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	681b      	ldr	r3, [r3, #0]
 80043a2:	4a1e      	ldr	r2, [pc, #120]	; (800441c <HAL_DMA_IRQHandler+0x1e0>)
 80043a4:	4293      	cmp	r3, r2
 80043a6:	d013      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	4a1c      	ldr	r2, [pc, #112]	; (8004420 <HAL_DMA_IRQHandler+0x1e4>)
 80043ae:	4293      	cmp	r3, r2
 80043b0:	d00e      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	4a1b      	ldr	r2, [pc, #108]	; (8004424 <HAL_DMA_IRQHandler+0x1e8>)
 80043b8:	4293      	cmp	r3, r2
 80043ba:	d009      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	4a19      	ldr	r2, [pc, #100]	; (8004428 <HAL_DMA_IRQHandler+0x1ec>)
 80043c2:	4293      	cmp	r3, r2
 80043c4:	d004      	beq.n	80043d0 <HAL_DMA_IRQHandler+0x194>
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	681b      	ldr	r3, [r3, #0]
 80043ca:	4a18      	ldr	r2, [pc, #96]	; (800442c <HAL_DMA_IRQHandler+0x1f0>)
 80043cc:	4293      	cmp	r3, r2
 80043ce:	d12f      	bne.n	8004430 <HAL_DMA_IRQHandler+0x1f4>
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	681b      	ldr	r3, [r3, #0]
 80043d6:	f003 0304 	and.w	r3, r3, #4
 80043da:	2b00      	cmp	r3, #0
 80043dc:	bf14      	ite	ne
 80043de:	2301      	movne	r3, #1
 80043e0:	2300      	moveq	r3, #0
 80043e2:	b2db      	uxtb	r3, r3
 80043e4:	e02e      	b.n	8004444 <HAL_DMA_IRQHandler+0x208>
 80043e6:	bf00      	nop
 80043e8:	24000004 	.word	0x24000004
 80043ec:	1b4e81b5 	.word	0x1b4e81b5
 80043f0:	40020010 	.word	0x40020010
 80043f4:	40020028 	.word	0x40020028
 80043f8:	40020040 	.word	0x40020040
 80043fc:	40020058 	.word	0x40020058
 8004400:	40020070 	.word	0x40020070
 8004404:	40020088 	.word	0x40020088
 8004408:	400200a0 	.word	0x400200a0
 800440c:	400200b8 	.word	0x400200b8
 8004410:	40020410 	.word	0x40020410
 8004414:	40020428 	.word	0x40020428
 8004418:	40020440 	.word	0x40020440
 800441c:	40020458 	.word	0x40020458
 8004420:	40020470 	.word	0x40020470
 8004424:	40020488 	.word	0x40020488
 8004428:	400204a0 	.word	0x400204a0
 800442c:	400204b8 	.word	0x400204b8
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	f003 0308 	and.w	r3, r3, #8
 800443a:	2b00      	cmp	r3, #0
 800443c:	bf14      	ite	ne
 800443e:	2301      	movne	r3, #1
 8004440:	2300      	moveq	r3, #0
 8004442:	b2db      	uxtb	r3, r3
 8004444:	2b00      	cmp	r3, #0
 8004446:	d015      	beq.n	8004474 <HAL_DMA_IRQHandler+0x238>
      {
        /* Disable the transfer error interrupt */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TE);
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	681a      	ldr	r2, [r3, #0]
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	f022 0204 	bic.w	r2, r2, #4
 8004456:	601a      	str	r2, [r3, #0]

        /* Clear the transfer error flag */
        regs_dma->IFCR = DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800445c:	f003 031f 	and.w	r3, r3, #31
 8004460:	2208      	movs	r2, #8
 8004462:	409a      	lsls	r2, r3
 8004464:	6a3b      	ldr	r3, [r7, #32]
 8004466:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800446c:	f043 0201 	orr.w	r2, r3, #1
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* FIFO Error Interrupt management ******************************************/
    if ((tmpisr_dma & (DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004478:	f003 031f 	and.w	r3, r3, #31
 800447c:	69ba      	ldr	r2, [r7, #24]
 800447e:	fa22 f303 	lsr.w	r3, r2, r3
 8004482:	f003 0301 	and.w	r3, r3, #1
 8004486:	2b00      	cmp	r3, #0
 8004488:	d06e      	beq.n	8004568 <HAL_DMA_IRQHandler+0x32c>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != 0U)
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	4a69      	ldr	r2, [pc, #420]	; (8004634 <HAL_DMA_IRQHandler+0x3f8>)
 8004490:	4293      	cmp	r3, r2
 8004492:	d04a      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	4a67      	ldr	r2, [pc, #412]	; (8004638 <HAL_DMA_IRQHandler+0x3fc>)
 800449a:	4293      	cmp	r3, r2
 800449c:	d045      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	4a66      	ldr	r2, [pc, #408]	; (800463c <HAL_DMA_IRQHandler+0x400>)
 80044a4:	4293      	cmp	r3, r2
 80044a6:	d040      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	4a64      	ldr	r2, [pc, #400]	; (8004640 <HAL_DMA_IRQHandler+0x404>)
 80044ae:	4293      	cmp	r3, r2
 80044b0:	d03b      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	4a63      	ldr	r2, [pc, #396]	; (8004644 <HAL_DMA_IRQHandler+0x408>)
 80044b8:	4293      	cmp	r3, r2
 80044ba:	d036      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	4a61      	ldr	r2, [pc, #388]	; (8004648 <HAL_DMA_IRQHandler+0x40c>)
 80044c2:	4293      	cmp	r3, r2
 80044c4:	d031      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	4a60      	ldr	r2, [pc, #384]	; (800464c <HAL_DMA_IRQHandler+0x410>)
 80044cc:	4293      	cmp	r3, r2
 80044ce:	d02c      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	4a5e      	ldr	r2, [pc, #376]	; (8004650 <HAL_DMA_IRQHandler+0x414>)
 80044d6:	4293      	cmp	r3, r2
 80044d8:	d027      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	4a5d      	ldr	r2, [pc, #372]	; (8004654 <HAL_DMA_IRQHandler+0x418>)
 80044e0:	4293      	cmp	r3, r2
 80044e2:	d022      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	4a5b      	ldr	r2, [pc, #364]	; (8004658 <HAL_DMA_IRQHandler+0x41c>)
 80044ea:	4293      	cmp	r3, r2
 80044ec:	d01d      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	4a5a      	ldr	r2, [pc, #360]	; (800465c <HAL_DMA_IRQHandler+0x420>)
 80044f4:	4293      	cmp	r3, r2
 80044f6:	d018      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	4a58      	ldr	r2, [pc, #352]	; (8004660 <HAL_DMA_IRQHandler+0x424>)
 80044fe:	4293      	cmp	r3, r2
 8004500:	d013      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	4a57      	ldr	r2, [pc, #348]	; (8004664 <HAL_DMA_IRQHandler+0x428>)
 8004508:	4293      	cmp	r3, r2
 800450a:	d00e      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 800450c:	687b      	ldr	r3, [r7, #4]
 800450e:	681b      	ldr	r3, [r3, #0]
 8004510:	4a55      	ldr	r2, [pc, #340]	; (8004668 <HAL_DMA_IRQHandler+0x42c>)
 8004512:	4293      	cmp	r3, r2
 8004514:	d009      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	4a54      	ldr	r2, [pc, #336]	; (800466c <HAL_DMA_IRQHandler+0x430>)
 800451c:	4293      	cmp	r3, r2
 800451e:	d004      	beq.n	800452a <HAL_DMA_IRQHandler+0x2ee>
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	4a52      	ldr	r2, [pc, #328]	; (8004670 <HAL_DMA_IRQHandler+0x434>)
 8004526:	4293      	cmp	r3, r2
 8004528:	d10a      	bne.n	8004540 <HAL_DMA_IRQHandler+0x304>
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	681b      	ldr	r3, [r3, #0]
 800452e:	695b      	ldr	r3, [r3, #20]
 8004530:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004534:	2b00      	cmp	r3, #0
 8004536:	bf14      	ite	ne
 8004538:	2301      	movne	r3, #1
 800453a:	2300      	moveq	r3, #0
 800453c:	b2db      	uxtb	r3, r3
 800453e:	e003      	b.n	8004548 <HAL_DMA_IRQHandler+0x30c>
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	2300      	movs	r3, #0
 8004548:	2b00      	cmp	r3, #0
 800454a:	d00d      	beq.n	8004568 <HAL_DMA_IRQHandler+0x32c>
      {
        /* Clear the FIFO error flag */
        regs_dma->IFCR = DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU);
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004550:	f003 031f 	and.w	r3, r3, #31
 8004554:	2201      	movs	r2, #1
 8004556:	409a      	lsls	r2, r3
 8004558:	6a3b      	ldr	r3, [r7, #32]
 800455a:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004560:	f043 0202 	orr.w	r2, r3, #2
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Direct Mode Error Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800456c:	f003 031f 	and.w	r3, r3, #31
 8004570:	2204      	movs	r2, #4
 8004572:	409a      	lsls	r2, r3
 8004574:	69bb      	ldr	r3, [r7, #24]
 8004576:	4013      	ands	r3, r2
 8004578:	2b00      	cmp	r3, #0
 800457a:	f000 808f 	beq.w	800469c <HAL_DMA_IRQHandler+0x460>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != 0U)
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	681b      	ldr	r3, [r3, #0]
 8004582:	4a2c      	ldr	r2, [pc, #176]	; (8004634 <HAL_DMA_IRQHandler+0x3f8>)
 8004584:	4293      	cmp	r3, r2
 8004586:	d04a      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	4a2a      	ldr	r2, [pc, #168]	; (8004638 <HAL_DMA_IRQHandler+0x3fc>)
 800458e:	4293      	cmp	r3, r2
 8004590:	d045      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	681b      	ldr	r3, [r3, #0]
 8004596:	4a29      	ldr	r2, [pc, #164]	; (800463c <HAL_DMA_IRQHandler+0x400>)
 8004598:	4293      	cmp	r3, r2
 800459a:	d040      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	4a27      	ldr	r2, [pc, #156]	; (8004640 <HAL_DMA_IRQHandler+0x404>)
 80045a2:	4293      	cmp	r3, r2
 80045a4:	d03b      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	4a26      	ldr	r2, [pc, #152]	; (8004644 <HAL_DMA_IRQHandler+0x408>)
 80045ac:	4293      	cmp	r3, r2
 80045ae:	d036      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	4a24      	ldr	r2, [pc, #144]	; (8004648 <HAL_DMA_IRQHandler+0x40c>)
 80045b6:	4293      	cmp	r3, r2
 80045b8:	d031      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	4a23      	ldr	r2, [pc, #140]	; (800464c <HAL_DMA_IRQHandler+0x410>)
 80045c0:	4293      	cmp	r3, r2
 80045c2:	d02c      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	4a21      	ldr	r2, [pc, #132]	; (8004650 <HAL_DMA_IRQHandler+0x414>)
 80045ca:	4293      	cmp	r3, r2
 80045cc:	d027      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	4a20      	ldr	r2, [pc, #128]	; (8004654 <HAL_DMA_IRQHandler+0x418>)
 80045d4:	4293      	cmp	r3, r2
 80045d6:	d022      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	681b      	ldr	r3, [r3, #0]
 80045dc:	4a1e      	ldr	r2, [pc, #120]	; (8004658 <HAL_DMA_IRQHandler+0x41c>)
 80045de:	4293      	cmp	r3, r2
 80045e0:	d01d      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	4a1d      	ldr	r2, [pc, #116]	; (800465c <HAL_DMA_IRQHandler+0x420>)
 80045e8:	4293      	cmp	r3, r2
 80045ea:	d018      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	4a1b      	ldr	r2, [pc, #108]	; (8004660 <HAL_DMA_IRQHandler+0x424>)
 80045f2:	4293      	cmp	r3, r2
 80045f4:	d013      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	4a1a      	ldr	r2, [pc, #104]	; (8004664 <HAL_DMA_IRQHandler+0x428>)
 80045fc:	4293      	cmp	r3, r2
 80045fe:	d00e      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	4a18      	ldr	r2, [pc, #96]	; (8004668 <HAL_DMA_IRQHandler+0x42c>)
 8004606:	4293      	cmp	r3, r2
 8004608:	d009      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	4a17      	ldr	r2, [pc, #92]	; (800466c <HAL_DMA_IRQHandler+0x430>)
 8004610:	4293      	cmp	r3, r2
 8004612:	d004      	beq.n	800461e <HAL_DMA_IRQHandler+0x3e2>
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	4a15      	ldr	r2, [pc, #84]	; (8004670 <HAL_DMA_IRQHandler+0x434>)
 800461a:	4293      	cmp	r3, r2
 800461c:	d12a      	bne.n	8004674 <HAL_DMA_IRQHandler+0x438>
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	f003 0302 	and.w	r3, r3, #2
 8004628:	2b00      	cmp	r3, #0
 800462a:	bf14      	ite	ne
 800462c:	2301      	movne	r3, #1
 800462e:	2300      	moveq	r3, #0
 8004630:	b2db      	uxtb	r3, r3
 8004632:	e023      	b.n	800467c <HAL_DMA_IRQHandler+0x440>
 8004634:	40020010 	.word	0x40020010
 8004638:	40020028 	.word	0x40020028
 800463c:	40020040 	.word	0x40020040
 8004640:	40020058 	.word	0x40020058
 8004644:	40020070 	.word	0x40020070
 8004648:	40020088 	.word	0x40020088
 800464c:	400200a0 	.word	0x400200a0
 8004650:	400200b8 	.word	0x400200b8
 8004654:	40020410 	.word	0x40020410
 8004658:	40020428 	.word	0x40020428
 800465c:	40020440 	.word	0x40020440
 8004660:	40020458 	.word	0x40020458
 8004664:	40020470 	.word	0x40020470
 8004668:	40020488 	.word	0x40020488
 800466c:	400204a0 	.word	0x400204a0
 8004670:	400204b8 	.word	0x400204b8
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	2300      	movs	r3, #0
 800467c:	2b00      	cmp	r3, #0
 800467e:	d00d      	beq.n	800469c <HAL_DMA_IRQHandler+0x460>
      {
        /* Clear the direct mode error flag */
        regs_dma->IFCR = DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004684:	f003 031f 	and.w	r3, r3, #31
 8004688:	2204      	movs	r2, #4
 800468a:	409a      	lsls	r2, r3
 800468c:	6a3b      	ldr	r3, [r7, #32]
 800468e:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004694:	f043 0204 	orr.w	r2, r3, #4
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Half Transfer Complete Interrupt management ******************************/
    if ((tmpisr_dma & (DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80046a0:	f003 031f 	and.w	r3, r3, #31
 80046a4:	2210      	movs	r2, #16
 80046a6:	409a      	lsls	r2, r3
 80046a8:	69bb      	ldr	r3, [r7, #24]
 80046aa:	4013      	ands	r3, r2
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	f000 80a6 	beq.w	80047fe <HAL_DMA_IRQHandler+0x5c2>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	4a85      	ldr	r2, [pc, #532]	; (80048cc <HAL_DMA_IRQHandler+0x690>)
 80046b8:	4293      	cmp	r3, r2
 80046ba:	d04a      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	4a83      	ldr	r2, [pc, #524]	; (80048d0 <HAL_DMA_IRQHandler+0x694>)
 80046c2:	4293      	cmp	r3, r2
 80046c4:	d045      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	4a82      	ldr	r2, [pc, #520]	; (80048d4 <HAL_DMA_IRQHandler+0x698>)
 80046cc:	4293      	cmp	r3, r2
 80046ce:	d040      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	4a80      	ldr	r2, [pc, #512]	; (80048d8 <HAL_DMA_IRQHandler+0x69c>)
 80046d6:	4293      	cmp	r3, r2
 80046d8:	d03b      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	4a7f      	ldr	r2, [pc, #508]	; (80048dc <HAL_DMA_IRQHandler+0x6a0>)
 80046e0:	4293      	cmp	r3, r2
 80046e2:	d036      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	681b      	ldr	r3, [r3, #0]
 80046e8:	4a7d      	ldr	r2, [pc, #500]	; (80048e0 <HAL_DMA_IRQHandler+0x6a4>)
 80046ea:	4293      	cmp	r3, r2
 80046ec:	d031      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	4a7c      	ldr	r2, [pc, #496]	; (80048e4 <HAL_DMA_IRQHandler+0x6a8>)
 80046f4:	4293      	cmp	r3, r2
 80046f6:	d02c      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 80046f8:	687b      	ldr	r3, [r7, #4]
 80046fa:	681b      	ldr	r3, [r3, #0]
 80046fc:	4a7a      	ldr	r2, [pc, #488]	; (80048e8 <HAL_DMA_IRQHandler+0x6ac>)
 80046fe:	4293      	cmp	r3, r2
 8004700:	d027      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	4a79      	ldr	r2, [pc, #484]	; (80048ec <HAL_DMA_IRQHandler+0x6b0>)
 8004708:	4293      	cmp	r3, r2
 800470a:	d022      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	4a77      	ldr	r2, [pc, #476]	; (80048f0 <HAL_DMA_IRQHandler+0x6b4>)
 8004712:	4293      	cmp	r3, r2
 8004714:	d01d      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	681b      	ldr	r3, [r3, #0]
 800471a:	4a76      	ldr	r2, [pc, #472]	; (80048f4 <HAL_DMA_IRQHandler+0x6b8>)
 800471c:	4293      	cmp	r3, r2
 800471e:	d018      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	681b      	ldr	r3, [r3, #0]
 8004724:	4a74      	ldr	r2, [pc, #464]	; (80048f8 <HAL_DMA_IRQHandler+0x6bc>)
 8004726:	4293      	cmp	r3, r2
 8004728:	d013      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	4a73      	ldr	r2, [pc, #460]	; (80048fc <HAL_DMA_IRQHandler+0x6c0>)
 8004730:	4293      	cmp	r3, r2
 8004732:	d00e      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	681b      	ldr	r3, [r3, #0]
 8004738:	4a71      	ldr	r2, [pc, #452]	; (8004900 <HAL_DMA_IRQHandler+0x6c4>)
 800473a:	4293      	cmp	r3, r2
 800473c:	d009      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	4a70      	ldr	r2, [pc, #448]	; (8004904 <HAL_DMA_IRQHandler+0x6c8>)
 8004744:	4293      	cmp	r3, r2
 8004746:	d004      	beq.n	8004752 <HAL_DMA_IRQHandler+0x516>
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	4a6e      	ldr	r2, [pc, #440]	; (8004908 <HAL_DMA_IRQHandler+0x6cc>)
 800474e:	4293      	cmp	r3, r2
 8004750:	d10a      	bne.n	8004768 <HAL_DMA_IRQHandler+0x52c>
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	681b      	ldr	r3, [r3, #0]
 8004758:	f003 0308 	and.w	r3, r3, #8
 800475c:	2b00      	cmp	r3, #0
 800475e:	bf14      	ite	ne
 8004760:	2301      	movne	r3, #1
 8004762:	2300      	moveq	r3, #0
 8004764:	b2db      	uxtb	r3, r3
 8004766:	e009      	b.n	800477c <HAL_DMA_IRQHandler+0x540>
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	681b      	ldr	r3, [r3, #0]
 800476e:	f003 0304 	and.w	r3, r3, #4
 8004772:	2b00      	cmp	r3, #0
 8004774:	bf14      	ite	ne
 8004776:	2301      	movne	r3, #1
 8004778:	2300      	moveq	r3, #0
 800477a:	b2db      	uxtb	r3, r3
 800477c:	2b00      	cmp	r3, #0
 800477e:	d03e      	beq.n	80047fe <HAL_DMA_IRQHandler+0x5c2>
      {
        /* Clear the half transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004784:	f003 031f 	and.w	r3, r3, #31
 8004788:	2210      	movs	r2, #16
 800478a:	409a      	lsls	r2, r3
 800478c:	6a3b      	ldr	r3, [r7, #32]
 800478e:	609a      	str	r2, [r3, #8]

        /* Multi_Buffering mode enabled */
        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800479a:	2b00      	cmp	r3, #0
 800479c:	d018      	beq.n	80047d0 <HAL_DMA_IRQHandler+0x594>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d108      	bne.n	80047be <HAL_DMA_IRQHandler+0x582>
          {
            if(hdma->XferHalfCpltCallback != NULL)
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047b0:	2b00      	cmp	r3, #0
 80047b2:	d024      	beq.n	80047fe <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferHalfCpltCallback(hdma);
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047b8:	6878      	ldr	r0, [r7, #4]
 80047ba:	4798      	blx	r3
 80047bc:	e01f      	b.n	80047fe <HAL_DMA_IRQHandler+0x5c2>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferM1HalfCpltCallback != NULL)
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80047c2:	2b00      	cmp	r3, #0
 80047c4:	d01b      	beq.n	80047fe <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferM1HalfCpltCallback(hdma);
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80047ca:	6878      	ldr	r0, [r7, #4]
 80047cc:	4798      	blx	r3
 80047ce:	e016      	b.n	80047fe <HAL_DMA_IRQHandler+0x5c2>
          }
        }
        else
        {
          /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d107      	bne.n	80047ee <HAL_DMA_IRQHandler+0x5b2>
          {
            /* Disable the half transfer interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	681a      	ldr	r2, [r3, #0]
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	f022 0208 	bic.w	r2, r2, #8
 80047ec:	601a      	str	r2, [r3, #0]
          }

          if(hdma->XferHalfCpltCallback != NULL)
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d003      	beq.n	80047fe <HAL_DMA_IRQHandler+0x5c2>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047fa:	6878      	ldr	r0, [r7, #4]
 80047fc:	4798      	blx	r3
          }
        }
      }
    }
    /* Transfer Complete Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004802:	f003 031f 	and.w	r3, r3, #31
 8004806:	2220      	movs	r2, #32
 8004808:	409a      	lsls	r2, r3
 800480a:	69bb      	ldr	r3, [r7, #24]
 800480c:	4013      	ands	r3, r2
 800480e:	2b00      	cmp	r3, #0
 8004810:	f000 8110 	beq.w	8004a34 <HAL_DMA_IRQHandler+0x7f8>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	681b      	ldr	r3, [r3, #0]
 8004818:	4a2c      	ldr	r2, [pc, #176]	; (80048cc <HAL_DMA_IRQHandler+0x690>)
 800481a:	4293      	cmp	r3, r2
 800481c:	d04a      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	4a2b      	ldr	r2, [pc, #172]	; (80048d0 <HAL_DMA_IRQHandler+0x694>)
 8004824:	4293      	cmp	r3, r2
 8004826:	d045      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	4a29      	ldr	r2, [pc, #164]	; (80048d4 <HAL_DMA_IRQHandler+0x698>)
 800482e:	4293      	cmp	r3, r2
 8004830:	d040      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	681b      	ldr	r3, [r3, #0]
 8004836:	4a28      	ldr	r2, [pc, #160]	; (80048d8 <HAL_DMA_IRQHandler+0x69c>)
 8004838:	4293      	cmp	r3, r2
 800483a:	d03b      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	4a26      	ldr	r2, [pc, #152]	; (80048dc <HAL_DMA_IRQHandler+0x6a0>)
 8004842:	4293      	cmp	r3, r2
 8004844:	d036      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 8004846:	687b      	ldr	r3, [r7, #4]
 8004848:	681b      	ldr	r3, [r3, #0]
 800484a:	4a25      	ldr	r2, [pc, #148]	; (80048e0 <HAL_DMA_IRQHandler+0x6a4>)
 800484c:	4293      	cmp	r3, r2
 800484e:	d031      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	4a23      	ldr	r2, [pc, #140]	; (80048e4 <HAL_DMA_IRQHandler+0x6a8>)
 8004856:	4293      	cmp	r3, r2
 8004858:	d02c      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	4a22      	ldr	r2, [pc, #136]	; (80048e8 <HAL_DMA_IRQHandler+0x6ac>)
 8004860:	4293      	cmp	r3, r2
 8004862:	d027      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	4a20      	ldr	r2, [pc, #128]	; (80048ec <HAL_DMA_IRQHandler+0x6b0>)
 800486a:	4293      	cmp	r3, r2
 800486c:	d022      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	4a1f      	ldr	r2, [pc, #124]	; (80048f0 <HAL_DMA_IRQHandler+0x6b4>)
 8004874:	4293      	cmp	r3, r2
 8004876:	d01d      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	4a1d      	ldr	r2, [pc, #116]	; (80048f4 <HAL_DMA_IRQHandler+0x6b8>)
 800487e:	4293      	cmp	r3, r2
 8004880:	d018      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	4a1c      	ldr	r2, [pc, #112]	; (80048f8 <HAL_DMA_IRQHandler+0x6bc>)
 8004888:	4293      	cmp	r3, r2
 800488a:	d013      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	4a1a      	ldr	r2, [pc, #104]	; (80048fc <HAL_DMA_IRQHandler+0x6c0>)
 8004892:	4293      	cmp	r3, r2
 8004894:	d00e      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	4a19      	ldr	r2, [pc, #100]	; (8004900 <HAL_DMA_IRQHandler+0x6c4>)
 800489c:	4293      	cmp	r3, r2
 800489e:	d009      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	4a17      	ldr	r2, [pc, #92]	; (8004904 <HAL_DMA_IRQHandler+0x6c8>)
 80048a6:	4293      	cmp	r3, r2
 80048a8:	d004      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x678>
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	4a16      	ldr	r2, [pc, #88]	; (8004908 <HAL_DMA_IRQHandler+0x6cc>)
 80048b0:	4293      	cmp	r3, r2
 80048b2:	d12b      	bne.n	800490c <HAL_DMA_IRQHandler+0x6d0>
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	f003 0310 	and.w	r3, r3, #16
 80048be:	2b00      	cmp	r3, #0
 80048c0:	bf14      	ite	ne
 80048c2:	2301      	movne	r3, #1
 80048c4:	2300      	moveq	r3, #0
 80048c6:	b2db      	uxtb	r3, r3
 80048c8:	e02a      	b.n	8004920 <HAL_DMA_IRQHandler+0x6e4>
 80048ca:	bf00      	nop
 80048cc:	40020010 	.word	0x40020010
 80048d0:	40020028 	.word	0x40020028
 80048d4:	40020040 	.word	0x40020040
 80048d8:	40020058 	.word	0x40020058
 80048dc:	40020070 	.word	0x40020070
 80048e0:	40020088 	.word	0x40020088
 80048e4:	400200a0 	.word	0x400200a0
 80048e8:	400200b8 	.word	0x400200b8
 80048ec:	40020410 	.word	0x40020410
 80048f0:	40020428 	.word	0x40020428
 80048f4:	40020440 	.word	0x40020440
 80048f8:	40020458 	.word	0x40020458
 80048fc:	40020470 	.word	0x40020470
 8004900:	40020488 	.word	0x40020488
 8004904:	400204a0 	.word	0x400204a0
 8004908:	400204b8 	.word	0x400204b8
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	f003 0302 	and.w	r3, r3, #2
 8004916:	2b00      	cmp	r3, #0
 8004918:	bf14      	ite	ne
 800491a:	2301      	movne	r3, #1
 800491c:	2300      	moveq	r3, #0
 800491e:	b2db      	uxtb	r3, r3
 8004920:	2b00      	cmp	r3, #0
 8004922:	f000 8087 	beq.w	8004a34 <HAL_DMA_IRQHandler+0x7f8>
      {
        /* Clear the transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800492a:	f003 031f 	and.w	r3, r3, #31
 800492e:	2220      	movs	r2, #32
 8004930:	409a      	lsls	r2, r3
 8004932:	6a3b      	ldr	r3, [r7, #32]
 8004934:	609a      	str	r2, [r3, #8]

        if(HAL_DMA_STATE_ABORT == hdma->State)
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800493c:	b2db      	uxtb	r3, r3
 800493e:	2b04      	cmp	r3, #4
 8004940:	d139      	bne.n	80049b6 <HAL_DMA_IRQHandler+0x77a>
        {
          /* Disable all the transfer interrupts */
          ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	681a      	ldr	r2, [r3, #0]
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	f022 0216 	bic.w	r2, r2, #22
 8004950:	601a      	str	r2, [r3, #0]
          ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	695a      	ldr	r2, [r3, #20]
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004960:	615a      	str	r2, [r3, #20]

          if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004966:	2b00      	cmp	r3, #0
 8004968:	d103      	bne.n	8004972 <HAL_DMA_IRQHandler+0x736>
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800496e:	2b00      	cmp	r3, #0
 8004970:	d007      	beq.n	8004982 <HAL_DMA_IRQHandler+0x746>
          {
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 8004972:	687b      	ldr	r3, [r7, #4]
 8004974:	681b      	ldr	r3, [r3, #0]
 8004976:	681a      	ldr	r2, [r3, #0]
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	681b      	ldr	r3, [r3, #0]
 800497c:	f022 0208 	bic.w	r2, r2, #8
 8004980:	601a      	str	r2, [r3, #0]
          }

          /* Clear all interrupt flags at correct offset within the register */
          regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004986:	f003 031f 	and.w	r3, r3, #31
 800498a:	223f      	movs	r2, #63	; 0x3f
 800498c:	409a      	lsls	r2, r3
 800498e:	6a3b      	ldr	r3, [r7, #32]
 8004990:	609a      	str	r2, [r3, #8]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	2201      	movs	r2, #1
 8004996:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	2200      	movs	r2, #0
 800499e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

          if(hdma->XferAbortCallback != NULL)
 80049a2:	687b      	ldr	r3, [r7, #4]
 80049a4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	f000 834a 	beq.w	8005040 <HAL_DMA_IRQHandler+0xe04>
          {
            hdma->XferAbortCallback(hdma);
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80049b0:	6878      	ldr	r0, [r7, #4]
 80049b2:	4798      	blx	r3
          }
          return;
 80049b4:	e344      	b.n	8005040 <HAL_DMA_IRQHandler+0xe04>
        }

        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d018      	beq.n	80049f6 <HAL_DMA_IRQHandler+0x7ba>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	681b      	ldr	r3, [r3, #0]
 80049ca:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80049ce:	2b00      	cmp	r3, #0
 80049d0:	d108      	bne.n	80049e4 <HAL_DMA_IRQHandler+0x7a8>
          {
            if(hdma->XferM1CpltCallback != NULL)
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	d02c      	beq.n	8004a34 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory1 */
              hdma->XferM1CpltCallback(hdma);
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049de:	6878      	ldr	r0, [r7, #4]
 80049e0:	4798      	blx	r3
 80049e2:	e027      	b.n	8004a34 <HAL_DMA_IRQHandler+0x7f8>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferCpltCallback != NULL)
 80049e4:	687b      	ldr	r3, [r7, #4]
 80049e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049e8:	2b00      	cmp	r3, #0
 80049ea:	d023      	beq.n	8004a34 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory0 */
              hdma->XferCpltCallback(hdma);
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049f0:	6878      	ldr	r0, [r7, #4]
 80049f2:	4798      	blx	r3
 80049f4:	e01e      	b.n	8004a34 <HAL_DMA_IRQHandler+0x7f8>
          }
        }
        /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
        else
        {
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	681b      	ldr	r3, [r3, #0]
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004a00:	2b00      	cmp	r3, #0
 8004a02:	d10f      	bne.n	8004a24 <HAL_DMA_IRQHandler+0x7e8>
          {
            /* Disable the transfer complete interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC);
 8004a04:	687b      	ldr	r3, [r7, #4]
 8004a06:	681b      	ldr	r3, [r3, #0]
 8004a08:	681a      	ldr	r2, [r3, #0]
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	f022 0210 	bic.w	r2, r2, #16
 8004a12:	601a      	str	r2, [r3, #0]

            /* Change the DMA state */
            hdma->State = HAL_DMA_STATE_READY;
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	2201      	movs	r2, #1
 8004a18:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

            /* Process Unlocked */
            __HAL_UNLOCK(hdma);
 8004a1c:	687b      	ldr	r3, [r7, #4]
 8004a1e:	2200      	movs	r2, #0
 8004a20:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          }

          if(hdma->XferCpltCallback != NULL)
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004a28:	2b00      	cmp	r3, #0
 8004a2a:	d003      	beq.n	8004a34 <HAL_DMA_IRQHandler+0x7f8>
          {
            /* Transfer complete callback */
            hdma->XferCpltCallback(hdma);
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004a30:	6878      	ldr	r0, [r7, #4]
 8004a32:	4798      	blx	r3
        }
      }
    }

    /* manage error case */
    if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004a38:	2b00      	cmp	r3, #0
 8004a3a:	f000 8306 	beq.w	800504a <HAL_DMA_IRQHandler+0xe0e>
    {
      if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != 0U)
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004a42:	f003 0301 	and.w	r3, r3, #1
 8004a46:	2b00      	cmp	r3, #0
 8004a48:	f000 8088 	beq.w	8004b5c <HAL_DMA_IRQHandler+0x920>
      {
        hdma->State = HAL_DMA_STATE_ABORT;
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	2204      	movs	r2, #4
 8004a50:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Disable the stream */
        __HAL_DMA_DISABLE(hdma);
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	681b      	ldr	r3, [r3, #0]
 8004a58:	4a7a      	ldr	r2, [pc, #488]	; (8004c44 <HAL_DMA_IRQHandler+0xa08>)
 8004a5a:	4293      	cmp	r3, r2
 8004a5c:	d04a      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	4a79      	ldr	r2, [pc, #484]	; (8004c48 <HAL_DMA_IRQHandler+0xa0c>)
 8004a64:	4293      	cmp	r3, r2
 8004a66:	d045      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	4a77      	ldr	r2, [pc, #476]	; (8004c4c <HAL_DMA_IRQHandler+0xa10>)
 8004a6e:	4293      	cmp	r3, r2
 8004a70:	d040      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	681b      	ldr	r3, [r3, #0]
 8004a76:	4a76      	ldr	r2, [pc, #472]	; (8004c50 <HAL_DMA_IRQHandler+0xa14>)
 8004a78:	4293      	cmp	r3, r2
 8004a7a:	d03b      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	4a74      	ldr	r2, [pc, #464]	; (8004c54 <HAL_DMA_IRQHandler+0xa18>)
 8004a82:	4293      	cmp	r3, r2
 8004a84:	d036      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	681b      	ldr	r3, [r3, #0]
 8004a8a:	4a73      	ldr	r2, [pc, #460]	; (8004c58 <HAL_DMA_IRQHandler+0xa1c>)
 8004a8c:	4293      	cmp	r3, r2
 8004a8e:	d031      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	681b      	ldr	r3, [r3, #0]
 8004a94:	4a71      	ldr	r2, [pc, #452]	; (8004c5c <HAL_DMA_IRQHandler+0xa20>)
 8004a96:	4293      	cmp	r3, r2
 8004a98:	d02c      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	4a70      	ldr	r2, [pc, #448]	; (8004c60 <HAL_DMA_IRQHandler+0xa24>)
 8004aa0:	4293      	cmp	r3, r2
 8004aa2:	d027      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	4a6e      	ldr	r2, [pc, #440]	; (8004c64 <HAL_DMA_IRQHandler+0xa28>)
 8004aaa:	4293      	cmp	r3, r2
 8004aac:	d022      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	4a6d      	ldr	r2, [pc, #436]	; (8004c68 <HAL_DMA_IRQHandler+0xa2c>)
 8004ab4:	4293      	cmp	r3, r2
 8004ab6:	d01d      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	4a6b      	ldr	r2, [pc, #428]	; (8004c6c <HAL_DMA_IRQHandler+0xa30>)
 8004abe:	4293      	cmp	r3, r2
 8004ac0:	d018      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	4a6a      	ldr	r2, [pc, #424]	; (8004c70 <HAL_DMA_IRQHandler+0xa34>)
 8004ac8:	4293      	cmp	r3, r2
 8004aca:	d013      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	4a68      	ldr	r2, [pc, #416]	; (8004c74 <HAL_DMA_IRQHandler+0xa38>)
 8004ad2:	4293      	cmp	r3, r2
 8004ad4:	d00e      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	681b      	ldr	r3, [r3, #0]
 8004ada:	4a67      	ldr	r2, [pc, #412]	; (8004c78 <HAL_DMA_IRQHandler+0xa3c>)
 8004adc:	4293      	cmp	r3, r2
 8004ade:	d009      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	4a65      	ldr	r2, [pc, #404]	; (8004c7c <HAL_DMA_IRQHandler+0xa40>)
 8004ae6:	4293      	cmp	r3, r2
 8004ae8:	d004      	beq.n	8004af4 <HAL_DMA_IRQHandler+0x8b8>
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	4a64      	ldr	r2, [pc, #400]	; (8004c80 <HAL_DMA_IRQHandler+0xa44>)
 8004af0:	4293      	cmp	r3, r2
 8004af2:	d108      	bne.n	8004b06 <HAL_DMA_IRQHandler+0x8ca>
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	681b      	ldr	r3, [r3, #0]
 8004af8:	681a      	ldr	r2, [r3, #0]
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	f022 0201 	bic.w	r2, r2, #1
 8004b02:	601a      	str	r2, [r3, #0]
 8004b04:	e007      	b.n	8004b16 <HAL_DMA_IRQHandler+0x8da>
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	681a      	ldr	r2, [r3, #0]
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	f022 0201 	bic.w	r2, r2, #1
 8004b14:	601a      	str	r2, [r3, #0]

        do
        {
          if (++count > timeout)
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	3301      	adds	r3, #1
 8004b1a:	60fb      	str	r3, [r7, #12]
 8004b1c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004b1e:	429a      	cmp	r2, r3
 8004b20:	d307      	bcc.n	8004b32 <HAL_DMA_IRQHandler+0x8f6>
          {
            break;
          }
        }
        while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U);
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	681b      	ldr	r3, [r3, #0]
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	f003 0301 	and.w	r3, r3, #1
 8004b2c:	2b00      	cmp	r3, #0
 8004b2e:	d1f2      	bne.n	8004b16 <HAL_DMA_IRQHandler+0x8da>
 8004b30:	e000      	b.n	8004b34 <HAL_DMA_IRQHandler+0x8f8>
            break;
 8004b32:	bf00      	nop

        if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	681b      	ldr	r3, [r3, #0]
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	f003 0301 	and.w	r3, r3, #1
 8004b3e:	2b00      	cmp	r3, #0
 8004b40:	d004      	beq.n	8004b4c <HAL_DMA_IRQHandler+0x910>
        {
          /* Change the DMA state to error if DMA disable fails */
          hdma->State = HAL_DMA_STATE_ERROR;
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	2203      	movs	r2, #3
 8004b46:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004b4a:	e003      	b.n	8004b54 <HAL_DMA_IRQHandler+0x918>
        }
        else
        {
          /* Change the DMA state to Ready if DMA disable success */
          hdma->State = HAL_DMA_STATE_READY;
 8004b4c:	687b      	ldr	r3, [r7, #4]
 8004b4e:	2201      	movs	r2, #1
 8004b50:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        }

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	2200      	movs	r2, #0
 8004b58:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      }

      if(hdma->XferErrorCallback != NULL)
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	f000 8272 	beq.w	800504a <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004b6a:	6878      	ldr	r0, [r7, #4]
 8004b6c:	4798      	blx	r3
 8004b6e:	e26c      	b.n	800504a <HAL_DMA_IRQHandler+0xe0e>
      }
    }
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U)  /* BDMA instance(s) */
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	4a43      	ldr	r2, [pc, #268]	; (8004c84 <HAL_DMA_IRQHandler+0xa48>)
 8004b76:	4293      	cmp	r3, r2
 8004b78:	d022      	beq.n	8004bc0 <HAL_DMA_IRQHandler+0x984>
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	681b      	ldr	r3, [r3, #0]
 8004b7e:	4a42      	ldr	r2, [pc, #264]	; (8004c88 <HAL_DMA_IRQHandler+0xa4c>)
 8004b80:	4293      	cmp	r3, r2
 8004b82:	d01d      	beq.n	8004bc0 <HAL_DMA_IRQHandler+0x984>
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	4a40      	ldr	r2, [pc, #256]	; (8004c8c <HAL_DMA_IRQHandler+0xa50>)
 8004b8a:	4293      	cmp	r3, r2
 8004b8c:	d018      	beq.n	8004bc0 <HAL_DMA_IRQHandler+0x984>
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	4a3f      	ldr	r2, [pc, #252]	; (8004c90 <HAL_DMA_IRQHandler+0xa54>)
 8004b94:	4293      	cmp	r3, r2
 8004b96:	d013      	beq.n	8004bc0 <HAL_DMA_IRQHandler+0x984>
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	681b      	ldr	r3, [r3, #0]
 8004b9c:	4a3d      	ldr	r2, [pc, #244]	; (8004c94 <HAL_DMA_IRQHandler+0xa58>)
 8004b9e:	4293      	cmp	r3, r2
 8004ba0:	d00e      	beq.n	8004bc0 <HAL_DMA_IRQHandler+0x984>
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	681b      	ldr	r3, [r3, #0]
 8004ba6:	4a3c      	ldr	r2, [pc, #240]	; (8004c98 <HAL_DMA_IRQHandler+0xa5c>)
 8004ba8:	4293      	cmp	r3, r2
 8004baa:	d009      	beq.n	8004bc0 <HAL_DMA_IRQHandler+0x984>
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	4a3a      	ldr	r2, [pc, #232]	; (8004c9c <HAL_DMA_IRQHandler+0xa60>)
 8004bb2:	4293      	cmp	r3, r2
 8004bb4:	d004      	beq.n	8004bc0 <HAL_DMA_IRQHandler+0x984>
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	681b      	ldr	r3, [r3, #0]
 8004bba:	4a39      	ldr	r2, [pc, #228]	; (8004ca0 <HAL_DMA_IRQHandler+0xa64>)
 8004bbc:	4293      	cmp	r3, r2
 8004bbe:	d101      	bne.n	8004bc4 <HAL_DMA_IRQHandler+0x988>
 8004bc0:	2301      	movs	r3, #1
 8004bc2:	e000      	b.n	8004bc6 <HAL_DMA_IRQHandler+0x98a>
 8004bc4:	2300      	movs	r3, #0
 8004bc6:	2b00      	cmp	r3, #0
 8004bc8:	f000 823f 	beq.w	800504a <HAL_DMA_IRQHandler+0xe0e>
  {
    ccr_reg = (((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR);
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	613b      	str	r3, [r7, #16]

    /* Half Transfer Complete Interrupt management ******************************/
    if (((tmpisr_bdma & (BDMA_FLAG_HT0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_HTIE) != 0U))
 8004bd4:	687b      	ldr	r3, [r7, #4]
 8004bd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004bd8:	f003 031f 	and.w	r3, r3, #31
 8004bdc:	2204      	movs	r2, #4
 8004bde:	409a      	lsls	r2, r3
 8004be0:	697b      	ldr	r3, [r7, #20]
 8004be2:	4013      	ands	r3, r2
 8004be4:	2b00      	cmp	r3, #0
 8004be6:	f000 80cd 	beq.w	8004d84 <HAL_DMA_IRQHandler+0xb48>
 8004bea:	693b      	ldr	r3, [r7, #16]
 8004bec:	f003 0304 	and.w	r3, r3, #4
 8004bf0:	2b00      	cmp	r3, #0
 8004bf2:	f000 80c7 	beq.w	8004d84 <HAL_DMA_IRQHandler+0xb48>
    {
      /* Clear the half transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_HTIF0 << (hdma->StreamIndex & 0x1FU));
 8004bf6:	687b      	ldr	r3, [r7, #4]
 8004bf8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004bfa:	f003 031f 	and.w	r3, r3, #31
 8004bfe:	2204      	movs	r2, #4
 8004c00:	409a      	lsls	r2, r3
 8004c02:	69fb      	ldr	r3, [r7, #28]
 8004c04:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004c06:	693b      	ldr	r3, [r7, #16]
 8004c08:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004c0c:	2b00      	cmp	r3, #0
 8004c0e:	d049      	beq.n	8004ca4 <HAL_DMA_IRQHandler+0xa68>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 8004c10:	693b      	ldr	r3, [r7, #16]
 8004c12:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004c16:	2b00      	cmp	r3, #0
 8004c18:	d109      	bne.n	8004c2e <HAL_DMA_IRQHandler+0x9f2>
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004c1e:	2b00      	cmp	r3, #0
 8004c20:	f000 8210 	beq.w	8005044 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 1 */
            hdma->XferM1HalfCpltCallback(hdma);
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004c28:	6878      	ldr	r0, [r7, #4]
 8004c2a:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004c2c:	e20a      	b.n	8005044 <HAL_DMA_IRQHandler+0xe08>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	f000 8206 	beq.w	8005044 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 0 */
            hdma->XferHalfCpltCallback(hdma);
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c3c:	6878      	ldr	r0, [r7, #4]
 8004c3e:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004c40:	e200      	b.n	8005044 <HAL_DMA_IRQHandler+0xe08>
 8004c42:	bf00      	nop
 8004c44:	40020010 	.word	0x40020010
 8004c48:	40020028 	.word	0x40020028
 8004c4c:	40020040 	.word	0x40020040
 8004c50:	40020058 	.word	0x40020058
 8004c54:	40020070 	.word	0x40020070
 8004c58:	40020088 	.word	0x40020088
 8004c5c:	400200a0 	.word	0x400200a0
 8004c60:	400200b8 	.word	0x400200b8
 8004c64:	40020410 	.word	0x40020410
 8004c68:	40020428 	.word	0x40020428
 8004c6c:	40020440 	.word	0x40020440
 8004c70:	40020458 	.word	0x40020458
 8004c74:	40020470 	.word	0x40020470
 8004c78:	40020488 	.word	0x40020488
 8004c7c:	400204a0 	.word	0x400204a0
 8004c80:	400204b8 	.word	0x400204b8
 8004c84:	58025408 	.word	0x58025408
 8004c88:	5802541c 	.word	0x5802541c
 8004c8c:	58025430 	.word	0x58025430
 8004c90:	58025444 	.word	0x58025444
 8004c94:	58025458 	.word	0x58025458
 8004c98:	5802546c 	.word	0x5802546c
 8004c9c:	58025480 	.word	0x58025480
 8004ca0:	58025494 	.word	0x58025494
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 8004ca4:	693b      	ldr	r3, [r7, #16]
 8004ca6:	f003 0320 	and.w	r3, r3, #32
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d160      	bne.n	8004d70 <HAL_DMA_IRQHandler+0xb34>
        {
          /* Disable the half transfer interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 8004cae:	687b      	ldr	r3, [r7, #4]
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	4a7f      	ldr	r2, [pc, #508]	; (8004eb0 <HAL_DMA_IRQHandler+0xc74>)
 8004cb4:	4293      	cmp	r3, r2
 8004cb6:	d04a      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	4a7d      	ldr	r2, [pc, #500]	; (8004eb4 <HAL_DMA_IRQHandler+0xc78>)
 8004cbe:	4293      	cmp	r3, r2
 8004cc0:	d045      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	4a7c      	ldr	r2, [pc, #496]	; (8004eb8 <HAL_DMA_IRQHandler+0xc7c>)
 8004cc8:	4293      	cmp	r3, r2
 8004cca:	d040      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	4a7a      	ldr	r2, [pc, #488]	; (8004ebc <HAL_DMA_IRQHandler+0xc80>)
 8004cd2:	4293      	cmp	r3, r2
 8004cd4:	d03b      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	681b      	ldr	r3, [r3, #0]
 8004cda:	4a79      	ldr	r2, [pc, #484]	; (8004ec0 <HAL_DMA_IRQHandler+0xc84>)
 8004cdc:	4293      	cmp	r3, r2
 8004cde:	d036      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	4a77      	ldr	r2, [pc, #476]	; (8004ec4 <HAL_DMA_IRQHandler+0xc88>)
 8004ce6:	4293      	cmp	r3, r2
 8004ce8:	d031      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	681b      	ldr	r3, [r3, #0]
 8004cee:	4a76      	ldr	r2, [pc, #472]	; (8004ec8 <HAL_DMA_IRQHandler+0xc8c>)
 8004cf0:	4293      	cmp	r3, r2
 8004cf2:	d02c      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	681b      	ldr	r3, [r3, #0]
 8004cf8:	4a74      	ldr	r2, [pc, #464]	; (8004ecc <HAL_DMA_IRQHandler+0xc90>)
 8004cfa:	4293      	cmp	r3, r2
 8004cfc:	d027      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	4a73      	ldr	r2, [pc, #460]	; (8004ed0 <HAL_DMA_IRQHandler+0xc94>)
 8004d04:	4293      	cmp	r3, r2
 8004d06:	d022      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	4a71      	ldr	r2, [pc, #452]	; (8004ed4 <HAL_DMA_IRQHandler+0xc98>)
 8004d0e:	4293      	cmp	r3, r2
 8004d10:	d01d      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	4a70      	ldr	r2, [pc, #448]	; (8004ed8 <HAL_DMA_IRQHandler+0xc9c>)
 8004d18:	4293      	cmp	r3, r2
 8004d1a:	d018      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	4a6e      	ldr	r2, [pc, #440]	; (8004edc <HAL_DMA_IRQHandler+0xca0>)
 8004d22:	4293      	cmp	r3, r2
 8004d24:	d013      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	4a6d      	ldr	r2, [pc, #436]	; (8004ee0 <HAL_DMA_IRQHandler+0xca4>)
 8004d2c:	4293      	cmp	r3, r2
 8004d2e:	d00e      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	681b      	ldr	r3, [r3, #0]
 8004d34:	4a6b      	ldr	r2, [pc, #428]	; (8004ee4 <HAL_DMA_IRQHandler+0xca8>)
 8004d36:	4293      	cmp	r3, r2
 8004d38:	d009      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	4a6a      	ldr	r2, [pc, #424]	; (8004ee8 <HAL_DMA_IRQHandler+0xcac>)
 8004d40:	4293      	cmp	r3, r2
 8004d42:	d004      	beq.n	8004d4e <HAL_DMA_IRQHandler+0xb12>
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	681b      	ldr	r3, [r3, #0]
 8004d48:	4a68      	ldr	r2, [pc, #416]	; (8004eec <HAL_DMA_IRQHandler+0xcb0>)
 8004d4a:	4293      	cmp	r3, r2
 8004d4c:	d108      	bne.n	8004d60 <HAL_DMA_IRQHandler+0xb24>
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	681b      	ldr	r3, [r3, #0]
 8004d52:	681a      	ldr	r2, [r3, #0]
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	f022 0208 	bic.w	r2, r2, #8
 8004d5c:	601a      	str	r2, [r3, #0]
 8004d5e:	e007      	b.n	8004d70 <HAL_DMA_IRQHandler+0xb34>
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	681a      	ldr	r2, [r3, #0]
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	f022 0204 	bic.w	r2, r2, #4
 8004d6e:	601a      	str	r2, [r3, #0]
        }

        /* DMA peripheral state is not updated in Half Transfer */
        /* but in Transfer Complete case */

       if(hdma->XferHalfCpltCallback != NULL)
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	f000 8165 	beq.w	8005044 <HAL_DMA_IRQHandler+0xe08>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d7e:	6878      	ldr	r0, [r7, #4]
 8004d80:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004d82:	e15f      	b.n	8005044 <HAL_DMA_IRQHandler+0xe08>
        }
      }
    }

    /* Transfer Complete Interrupt management ***********************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TC0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TCIE) != 0U))
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004d88:	f003 031f 	and.w	r3, r3, #31
 8004d8c:	2202      	movs	r2, #2
 8004d8e:	409a      	lsls	r2, r3
 8004d90:	697b      	ldr	r3, [r7, #20]
 8004d92:	4013      	ands	r3, r2
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	f000 80c5 	beq.w	8004f24 <HAL_DMA_IRQHandler+0xce8>
 8004d9a:	693b      	ldr	r3, [r7, #16]
 8004d9c:	f003 0302 	and.w	r3, r3, #2
 8004da0:	2b00      	cmp	r3, #0
 8004da2:	f000 80bf 	beq.w	8004f24 <HAL_DMA_IRQHandler+0xce8>
    {
      /* Clear the transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_TCIF0) << (hdma->StreamIndex & 0x1FU);
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004daa:	f003 031f 	and.w	r3, r3, #31
 8004dae:	2202      	movs	r2, #2
 8004db0:	409a      	lsls	r2, r3
 8004db2:	69fb      	ldr	r3, [r7, #28]
 8004db4:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004db6:	693b      	ldr	r3, [r7, #16]
 8004db8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004dbc:	2b00      	cmp	r3, #0
 8004dbe:	d018      	beq.n	8004df2 <HAL_DMA_IRQHandler+0xbb6>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 8004dc0:	693b      	ldr	r3, [r7, #16]
 8004dc2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004dc6:	2b00      	cmp	r3, #0
 8004dc8:	d109      	bne.n	8004dde <HAL_DMA_IRQHandler+0xba2>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	f000 813a 	beq.w	8005048 <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 1 */
            hdma->XferM1CpltCallback(hdma);
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004dd8:	6878      	ldr	r0, [r7, #4]
 8004dda:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004ddc:	e134      	b.n	8005048 <HAL_DMA_IRQHandler+0xe0c>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004de2:	2b00      	cmp	r3, #0
 8004de4:	f000 8130 	beq.w	8005048 <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 0 */
            hdma->XferCpltCallback(hdma);
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004dec:	6878      	ldr	r0, [r7, #4]
 8004dee:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004df0:	e12a      	b.n	8005048 <HAL_DMA_IRQHandler+0xe0c>
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 8004df2:	693b      	ldr	r3, [r7, #16]
 8004df4:	f003 0320 	and.w	r3, r3, #32
 8004df8:	2b00      	cmp	r3, #0
 8004dfa:	f040 8089 	bne.w	8004f10 <HAL_DMA_IRQHandler+0xcd4>
        {
          /* Disable the transfer complete and error interrupt, if the DMA mode is not CIRCULAR */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 8004dfe:	687b      	ldr	r3, [r7, #4]
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	4a2b      	ldr	r2, [pc, #172]	; (8004eb0 <HAL_DMA_IRQHandler+0xc74>)
 8004e04:	4293      	cmp	r3, r2
 8004e06:	d04a      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	681b      	ldr	r3, [r3, #0]
 8004e0c:	4a29      	ldr	r2, [pc, #164]	; (8004eb4 <HAL_DMA_IRQHandler+0xc78>)
 8004e0e:	4293      	cmp	r3, r2
 8004e10:	d045      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	4a28      	ldr	r2, [pc, #160]	; (8004eb8 <HAL_DMA_IRQHandler+0xc7c>)
 8004e18:	4293      	cmp	r3, r2
 8004e1a:	d040      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	4a26      	ldr	r2, [pc, #152]	; (8004ebc <HAL_DMA_IRQHandler+0xc80>)
 8004e22:	4293      	cmp	r3, r2
 8004e24:	d03b      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	4a25      	ldr	r2, [pc, #148]	; (8004ec0 <HAL_DMA_IRQHandler+0xc84>)
 8004e2c:	4293      	cmp	r3, r2
 8004e2e:	d036      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	4a23      	ldr	r2, [pc, #140]	; (8004ec4 <HAL_DMA_IRQHandler+0xc88>)
 8004e36:	4293      	cmp	r3, r2
 8004e38:	d031      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	4a22      	ldr	r2, [pc, #136]	; (8004ec8 <HAL_DMA_IRQHandler+0xc8c>)
 8004e40:	4293      	cmp	r3, r2
 8004e42:	d02c      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	4a20      	ldr	r2, [pc, #128]	; (8004ecc <HAL_DMA_IRQHandler+0xc90>)
 8004e4a:	4293      	cmp	r3, r2
 8004e4c:	d027      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	4a1f      	ldr	r2, [pc, #124]	; (8004ed0 <HAL_DMA_IRQHandler+0xc94>)
 8004e54:	4293      	cmp	r3, r2
 8004e56:	d022      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	4a1d      	ldr	r2, [pc, #116]	; (8004ed4 <HAL_DMA_IRQHandler+0xc98>)
 8004e5e:	4293      	cmp	r3, r2
 8004e60:	d01d      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	681b      	ldr	r3, [r3, #0]
 8004e66:	4a1c      	ldr	r2, [pc, #112]	; (8004ed8 <HAL_DMA_IRQHandler+0xc9c>)
 8004e68:	4293      	cmp	r3, r2
 8004e6a:	d018      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	681b      	ldr	r3, [r3, #0]
 8004e70:	4a1a      	ldr	r2, [pc, #104]	; (8004edc <HAL_DMA_IRQHandler+0xca0>)
 8004e72:	4293      	cmp	r3, r2
 8004e74:	d013      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	4a19      	ldr	r2, [pc, #100]	; (8004ee0 <HAL_DMA_IRQHandler+0xca4>)
 8004e7c:	4293      	cmp	r3, r2
 8004e7e:	d00e      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	681b      	ldr	r3, [r3, #0]
 8004e84:	4a17      	ldr	r2, [pc, #92]	; (8004ee4 <HAL_DMA_IRQHandler+0xca8>)
 8004e86:	4293      	cmp	r3, r2
 8004e88:	d009      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	4a16      	ldr	r2, [pc, #88]	; (8004ee8 <HAL_DMA_IRQHandler+0xcac>)
 8004e90:	4293      	cmp	r3, r2
 8004e92:	d004      	beq.n	8004e9e <HAL_DMA_IRQHandler+0xc62>
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	4a14      	ldr	r2, [pc, #80]	; (8004eec <HAL_DMA_IRQHandler+0xcb0>)
 8004e9a:	4293      	cmp	r3, r2
 8004e9c:	d128      	bne.n	8004ef0 <HAL_DMA_IRQHandler+0xcb4>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	681a      	ldr	r2, [r3, #0]
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	f022 0214 	bic.w	r2, r2, #20
 8004eac:	601a      	str	r2, [r3, #0]
 8004eae:	e027      	b.n	8004f00 <HAL_DMA_IRQHandler+0xcc4>
 8004eb0:	40020010 	.word	0x40020010
 8004eb4:	40020028 	.word	0x40020028
 8004eb8:	40020040 	.word	0x40020040
 8004ebc:	40020058 	.word	0x40020058
 8004ec0:	40020070 	.word	0x40020070
 8004ec4:	40020088 	.word	0x40020088
 8004ec8:	400200a0 	.word	0x400200a0
 8004ecc:	400200b8 	.word	0x400200b8
 8004ed0:	40020410 	.word	0x40020410
 8004ed4:	40020428 	.word	0x40020428
 8004ed8:	40020440 	.word	0x40020440
 8004edc:	40020458 	.word	0x40020458
 8004ee0:	40020470 	.word	0x40020470
 8004ee4:	40020488 	.word	0x40020488
 8004ee8:	400204a0 	.word	0x400204a0
 8004eec:	400204b8 	.word	0x400204b8
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	681a      	ldr	r2, [r3, #0]
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	f022 020a 	bic.w	r2, r2, #10
 8004efe:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	2201      	movs	r2, #1
 8004f04:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8004f08:	687b      	ldr	r3, [r7, #4]
 8004f0a:	2200      	movs	r2, #0
 8004f0c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	f000 8097 	beq.w	8005048 <HAL_DMA_IRQHandler+0xe0c>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004f1e:	6878      	ldr	r0, [r7, #4]
 8004f20:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004f22:	e091      	b.n	8005048 <HAL_DMA_IRQHandler+0xe0c>
        }
      }
    }
    /* Transfer Error Interrupt management **************************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TE0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TEIE) != 0U))
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f28:	f003 031f 	and.w	r3, r3, #31
 8004f2c:	2208      	movs	r2, #8
 8004f2e:	409a      	lsls	r2, r3
 8004f30:	697b      	ldr	r3, [r7, #20]
 8004f32:	4013      	ands	r3, r2
 8004f34:	2b00      	cmp	r3, #0
 8004f36:	f000 8088 	beq.w	800504a <HAL_DMA_IRQHandler+0xe0e>
 8004f3a:	693b      	ldr	r3, [r7, #16]
 8004f3c:	f003 0308 	and.w	r3, r3, #8
 8004f40:	2b00      	cmp	r3, #0
 8004f42:	f000 8082 	beq.w	800504a <HAL_DMA_IRQHandler+0xe0e>
    {
      /* When a DMA transfer error occurs */
      /* A hardware clear of its EN bits is performed */
      /* Disable ALL DMA IT */
      __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	4a41      	ldr	r2, [pc, #260]	; (8005050 <HAL_DMA_IRQHandler+0xe14>)
 8004f4c:	4293      	cmp	r3, r2
 8004f4e:	d04a      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	4a3f      	ldr	r2, [pc, #252]	; (8005054 <HAL_DMA_IRQHandler+0xe18>)
 8004f56:	4293      	cmp	r3, r2
 8004f58:	d045      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	4a3e      	ldr	r2, [pc, #248]	; (8005058 <HAL_DMA_IRQHandler+0xe1c>)
 8004f60:	4293      	cmp	r3, r2
 8004f62:	d040      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004f64:	687b      	ldr	r3, [r7, #4]
 8004f66:	681b      	ldr	r3, [r3, #0]
 8004f68:	4a3c      	ldr	r2, [pc, #240]	; (800505c <HAL_DMA_IRQHandler+0xe20>)
 8004f6a:	4293      	cmp	r3, r2
 8004f6c:	d03b      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	4a3b      	ldr	r2, [pc, #236]	; (8005060 <HAL_DMA_IRQHandler+0xe24>)
 8004f74:	4293      	cmp	r3, r2
 8004f76:	d036      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	681b      	ldr	r3, [r3, #0]
 8004f7c:	4a39      	ldr	r2, [pc, #228]	; (8005064 <HAL_DMA_IRQHandler+0xe28>)
 8004f7e:	4293      	cmp	r3, r2
 8004f80:	d031      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	681b      	ldr	r3, [r3, #0]
 8004f86:	4a38      	ldr	r2, [pc, #224]	; (8005068 <HAL_DMA_IRQHandler+0xe2c>)
 8004f88:	4293      	cmp	r3, r2
 8004f8a:	d02c      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	681b      	ldr	r3, [r3, #0]
 8004f90:	4a36      	ldr	r2, [pc, #216]	; (800506c <HAL_DMA_IRQHandler+0xe30>)
 8004f92:	4293      	cmp	r3, r2
 8004f94:	d027      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004f96:	687b      	ldr	r3, [r7, #4]
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	4a35      	ldr	r2, [pc, #212]	; (8005070 <HAL_DMA_IRQHandler+0xe34>)
 8004f9c:	4293      	cmp	r3, r2
 8004f9e:	d022      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	4a33      	ldr	r2, [pc, #204]	; (8005074 <HAL_DMA_IRQHandler+0xe38>)
 8004fa6:	4293      	cmp	r3, r2
 8004fa8:	d01d      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	681b      	ldr	r3, [r3, #0]
 8004fae:	4a32      	ldr	r2, [pc, #200]	; (8005078 <HAL_DMA_IRQHandler+0xe3c>)
 8004fb0:	4293      	cmp	r3, r2
 8004fb2:	d018      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	681b      	ldr	r3, [r3, #0]
 8004fb8:	4a30      	ldr	r2, [pc, #192]	; (800507c <HAL_DMA_IRQHandler+0xe40>)
 8004fba:	4293      	cmp	r3, r2
 8004fbc:	d013      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	681b      	ldr	r3, [r3, #0]
 8004fc2:	4a2f      	ldr	r2, [pc, #188]	; (8005080 <HAL_DMA_IRQHandler+0xe44>)
 8004fc4:	4293      	cmp	r3, r2
 8004fc6:	d00e      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	681b      	ldr	r3, [r3, #0]
 8004fcc:	4a2d      	ldr	r2, [pc, #180]	; (8005084 <HAL_DMA_IRQHandler+0xe48>)
 8004fce:	4293      	cmp	r3, r2
 8004fd0:	d009      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	4a2c      	ldr	r2, [pc, #176]	; (8005088 <HAL_DMA_IRQHandler+0xe4c>)
 8004fd8:	4293      	cmp	r3, r2
 8004fda:	d004      	beq.n	8004fe6 <HAL_DMA_IRQHandler+0xdaa>
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	681b      	ldr	r3, [r3, #0]
 8004fe0:	4a2a      	ldr	r2, [pc, #168]	; (800508c <HAL_DMA_IRQHandler+0xe50>)
 8004fe2:	4293      	cmp	r3, r2
 8004fe4:	d108      	bne.n	8004ff8 <HAL_DMA_IRQHandler+0xdbc>
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	681b      	ldr	r3, [r3, #0]
 8004fea:	681a      	ldr	r2, [r3, #0]
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	f022 021c 	bic.w	r2, r2, #28
 8004ff4:	601a      	str	r2, [r3, #0]
 8004ff6:	e007      	b.n	8005008 <HAL_DMA_IRQHandler+0xdcc>
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	681a      	ldr	r2, [r3, #0]
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	681b      	ldr	r3, [r3, #0]
 8005002:	f022 020e 	bic.w	r2, r2, #14
 8005006:	601a      	str	r2, [r3, #0]

      /* Clear all flags */
      regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800500c:	f003 031f 	and.w	r3, r3, #31
 8005010:	2201      	movs	r2, #1
 8005012:	409a      	lsls	r2, r3
 8005014:	69fb      	ldr	r3, [r7, #28]
 8005016:	605a      	str	r2, [r3, #4]

      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TE;
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	2201      	movs	r2, #1
 800501c:	655a      	str	r2, [r3, #84]	; 0x54

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	2201      	movs	r2, #1
 8005022:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	2200      	movs	r2, #0
 800502a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      if (hdma->XferErrorCallback != NULL)
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005032:	2b00      	cmp	r3, #0
 8005034:	d009      	beq.n	800504a <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800503a:	6878      	ldr	r0, [r7, #4]
 800503c:	4798      	blx	r3
 800503e:	e004      	b.n	800504a <HAL_DMA_IRQHandler+0xe0e>
          return;
 8005040:	bf00      	nop
 8005042:	e002      	b.n	800504a <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005044:	bf00      	nop
 8005046:	e000      	b.n	800504a <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005048:	bf00      	nop
  }
  else
  {
    /* Nothing To Do */
  }
}
 800504a:	3728      	adds	r7, #40	; 0x28
 800504c:	46bd      	mov	sp, r7
 800504e:	bd80      	pop	{r7, pc}
 8005050:	40020010 	.word	0x40020010
 8005054:	40020028 	.word	0x40020028
 8005058:	40020040 	.word	0x40020040
 800505c:	40020058 	.word	0x40020058
 8005060:	40020070 	.word	0x40020070
 8005064:	40020088 	.word	0x40020088
 8005068:	400200a0 	.word	0x400200a0
 800506c:	400200b8 	.word	0x400200b8
 8005070:	40020410 	.word	0x40020410
 8005074:	40020428 	.word	0x40020428
 8005078:	40020440 	.word	0x40020440
 800507c:	40020458 	.word	0x40020458
 8005080:	40020470 	.word	0x40020470
 8005084:	40020488 	.word	0x40020488
 8005088:	400204a0 	.word	0x400204a0
 800508c:	400204b8 	.word	0x400204b8

08005090 <HAL_DMA_GetError>:
  * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
  *              the configuration information for the specified DMA Stream.
  * @retval DMA Error Code
  */
uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
{
 8005090:	b480      	push	{r7}
 8005092:	b083      	sub	sp, #12
 8005094:	af00      	add	r7, sp, #0
 8005096:	6078      	str	r0, [r7, #4]
  return hdma->ErrorCode;
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
}
 800509c:	4618      	mov	r0, r3
 800509e:	370c      	adds	r7, #12
 80050a0:	46bd      	mov	sp, r7
 80050a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050a6:	4770      	bx	lr

080050a8 <DMA_SetConfig>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval None
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80050a8:	b480      	push	{r7}
 80050aa:	b087      	sub	sp, #28
 80050ac:	af00      	add	r7, sp, #0
 80050ae:	60f8      	str	r0, [r7, #12]
 80050b0:	60b9      	str	r1, [r7, #8]
 80050b2:	607a      	str	r2, [r7, #4]
 80050b4:	603b      	str	r3, [r7, #0]
  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80050b6:	68fb      	ldr	r3, [r7, #12]
 80050b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80050ba:	617b      	str	r3, [r7, #20]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 80050bc:	68fb      	ldr	r3, [r7, #12]
 80050be:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80050c0:	613b      	str	r3, [r7, #16]

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 80050c2:	68fb      	ldr	r3, [r7, #12]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	4a7f      	ldr	r2, [pc, #508]	; (80052c4 <DMA_SetConfig+0x21c>)
 80050c8:	4293      	cmp	r3, r2
 80050ca:	d072      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	4a7d      	ldr	r2, [pc, #500]	; (80052c8 <DMA_SetConfig+0x220>)
 80050d2:	4293      	cmp	r3, r2
 80050d4:	d06d      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 80050d6:	68fb      	ldr	r3, [r7, #12]
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	4a7c      	ldr	r2, [pc, #496]	; (80052cc <DMA_SetConfig+0x224>)
 80050dc:	4293      	cmp	r3, r2
 80050de:	d068      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 80050e0:	68fb      	ldr	r3, [r7, #12]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	4a7a      	ldr	r2, [pc, #488]	; (80052d0 <DMA_SetConfig+0x228>)
 80050e6:	4293      	cmp	r3, r2
 80050e8:	d063      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 80050ea:	68fb      	ldr	r3, [r7, #12]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	4a79      	ldr	r2, [pc, #484]	; (80052d4 <DMA_SetConfig+0x22c>)
 80050f0:	4293      	cmp	r3, r2
 80050f2:	d05e      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	4a77      	ldr	r2, [pc, #476]	; (80052d8 <DMA_SetConfig+0x230>)
 80050fa:	4293      	cmp	r3, r2
 80050fc:	d059      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	4a76      	ldr	r2, [pc, #472]	; (80052dc <DMA_SetConfig+0x234>)
 8005104:	4293      	cmp	r3, r2
 8005106:	d054      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	4a74      	ldr	r2, [pc, #464]	; (80052e0 <DMA_SetConfig+0x238>)
 800510e:	4293      	cmp	r3, r2
 8005110:	d04f      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005112:	68fb      	ldr	r3, [r7, #12]
 8005114:	681b      	ldr	r3, [r3, #0]
 8005116:	4a73      	ldr	r2, [pc, #460]	; (80052e4 <DMA_SetConfig+0x23c>)
 8005118:	4293      	cmp	r3, r2
 800511a:	d04a      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	4a71      	ldr	r2, [pc, #452]	; (80052e8 <DMA_SetConfig+0x240>)
 8005122:	4293      	cmp	r3, r2
 8005124:	d045      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005126:	68fb      	ldr	r3, [r7, #12]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	4a70      	ldr	r2, [pc, #448]	; (80052ec <DMA_SetConfig+0x244>)
 800512c:	4293      	cmp	r3, r2
 800512e:	d040      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005130:	68fb      	ldr	r3, [r7, #12]
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	4a6e      	ldr	r2, [pc, #440]	; (80052f0 <DMA_SetConfig+0x248>)
 8005136:	4293      	cmp	r3, r2
 8005138:	d03b      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 800513a:	68fb      	ldr	r3, [r7, #12]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	4a6d      	ldr	r2, [pc, #436]	; (80052f4 <DMA_SetConfig+0x24c>)
 8005140:	4293      	cmp	r3, r2
 8005142:	d036      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005144:	68fb      	ldr	r3, [r7, #12]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	4a6b      	ldr	r2, [pc, #428]	; (80052f8 <DMA_SetConfig+0x250>)
 800514a:	4293      	cmp	r3, r2
 800514c:	d031      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 800514e:	68fb      	ldr	r3, [r7, #12]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	4a6a      	ldr	r2, [pc, #424]	; (80052fc <DMA_SetConfig+0x254>)
 8005154:	4293      	cmp	r3, r2
 8005156:	d02c      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	4a68      	ldr	r2, [pc, #416]	; (8005300 <DMA_SetConfig+0x258>)
 800515e:	4293      	cmp	r3, r2
 8005160:	d027      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005162:	68fb      	ldr	r3, [r7, #12]
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	4a67      	ldr	r2, [pc, #412]	; (8005304 <DMA_SetConfig+0x25c>)
 8005168:	4293      	cmp	r3, r2
 800516a:	d022      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 800516c:	68fb      	ldr	r3, [r7, #12]
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	4a65      	ldr	r2, [pc, #404]	; (8005308 <DMA_SetConfig+0x260>)
 8005172:	4293      	cmp	r3, r2
 8005174:	d01d      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005176:	68fb      	ldr	r3, [r7, #12]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	4a64      	ldr	r2, [pc, #400]	; (800530c <DMA_SetConfig+0x264>)
 800517c:	4293      	cmp	r3, r2
 800517e:	d018      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	4a62      	ldr	r2, [pc, #392]	; (8005310 <DMA_SetConfig+0x268>)
 8005186:	4293      	cmp	r3, r2
 8005188:	d013      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 800518a:	68fb      	ldr	r3, [r7, #12]
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	4a61      	ldr	r2, [pc, #388]	; (8005314 <DMA_SetConfig+0x26c>)
 8005190:	4293      	cmp	r3, r2
 8005192:	d00e      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	681b      	ldr	r3, [r3, #0]
 8005198:	4a5f      	ldr	r2, [pc, #380]	; (8005318 <DMA_SetConfig+0x270>)
 800519a:	4293      	cmp	r3, r2
 800519c:	d009      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 800519e:	68fb      	ldr	r3, [r7, #12]
 80051a0:	681b      	ldr	r3, [r3, #0]
 80051a2:	4a5e      	ldr	r2, [pc, #376]	; (800531c <DMA_SetConfig+0x274>)
 80051a4:	4293      	cmp	r3, r2
 80051a6:	d004      	beq.n	80051b2 <DMA_SetConfig+0x10a>
 80051a8:	68fb      	ldr	r3, [r7, #12]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	4a5c      	ldr	r2, [pc, #368]	; (8005320 <DMA_SetConfig+0x278>)
 80051ae:	4293      	cmp	r3, r2
 80051b0:	d101      	bne.n	80051b6 <DMA_SetConfig+0x10e>
 80051b2:	2301      	movs	r3, #1
 80051b4:	e000      	b.n	80051b8 <DMA_SetConfig+0x110>
 80051b6:	2300      	movs	r3, #0
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	d00d      	beq.n	80051d8 <DMA_SetConfig+0x130>
  {
    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 80051bc:	68fb      	ldr	r3, [r7, #12]
 80051be:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80051c0:	68fa      	ldr	r2, [r7, #12]
 80051c2:	6e92      	ldr	r2, [r2, #104]	; 0x68
 80051c4:	605a      	str	r2, [r3, #4]

    if(hdma->DMAmuxRequestGen != 0U)
 80051c6:	68fb      	ldr	r3, [r7, #12]
 80051c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d004      	beq.n	80051d8 <DMA_SetConfig+0x130>
    {
      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80051ce:	68fb      	ldr	r3, [r7, #12]
 80051d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80051d2:	68fa      	ldr	r2, [r7, #12]
 80051d4:	6f52      	ldr	r2, [r2, #116]	; 0x74
 80051d6:	605a      	str	r2, [r3, #4]
    }
  }

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	4a39      	ldr	r2, [pc, #228]	; (80052c4 <DMA_SetConfig+0x21c>)
 80051de:	4293      	cmp	r3, r2
 80051e0:	d04a      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 80051e2:	68fb      	ldr	r3, [r7, #12]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	4a38      	ldr	r2, [pc, #224]	; (80052c8 <DMA_SetConfig+0x220>)
 80051e8:	4293      	cmp	r3, r2
 80051ea:	d045      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 80051ec:	68fb      	ldr	r3, [r7, #12]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	4a36      	ldr	r2, [pc, #216]	; (80052cc <DMA_SetConfig+0x224>)
 80051f2:	4293      	cmp	r3, r2
 80051f4:	d040      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	4a35      	ldr	r2, [pc, #212]	; (80052d0 <DMA_SetConfig+0x228>)
 80051fc:	4293      	cmp	r3, r2
 80051fe:	d03b      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 8005200:	68fb      	ldr	r3, [r7, #12]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	4a33      	ldr	r2, [pc, #204]	; (80052d4 <DMA_SetConfig+0x22c>)
 8005206:	4293      	cmp	r3, r2
 8005208:	d036      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 800520a:	68fb      	ldr	r3, [r7, #12]
 800520c:	681b      	ldr	r3, [r3, #0]
 800520e:	4a32      	ldr	r2, [pc, #200]	; (80052d8 <DMA_SetConfig+0x230>)
 8005210:	4293      	cmp	r3, r2
 8005212:	d031      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 8005214:	68fb      	ldr	r3, [r7, #12]
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	4a30      	ldr	r2, [pc, #192]	; (80052dc <DMA_SetConfig+0x234>)
 800521a:	4293      	cmp	r3, r2
 800521c:	d02c      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 800521e:	68fb      	ldr	r3, [r7, #12]
 8005220:	681b      	ldr	r3, [r3, #0]
 8005222:	4a2f      	ldr	r2, [pc, #188]	; (80052e0 <DMA_SetConfig+0x238>)
 8005224:	4293      	cmp	r3, r2
 8005226:	d027      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 8005228:	68fb      	ldr	r3, [r7, #12]
 800522a:	681b      	ldr	r3, [r3, #0]
 800522c:	4a2d      	ldr	r2, [pc, #180]	; (80052e4 <DMA_SetConfig+0x23c>)
 800522e:	4293      	cmp	r3, r2
 8005230:	d022      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 8005232:	68fb      	ldr	r3, [r7, #12]
 8005234:	681b      	ldr	r3, [r3, #0]
 8005236:	4a2c      	ldr	r2, [pc, #176]	; (80052e8 <DMA_SetConfig+0x240>)
 8005238:	4293      	cmp	r3, r2
 800523a:	d01d      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	681b      	ldr	r3, [r3, #0]
 8005240:	4a2a      	ldr	r2, [pc, #168]	; (80052ec <DMA_SetConfig+0x244>)
 8005242:	4293      	cmp	r3, r2
 8005244:	d018      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	4a29      	ldr	r2, [pc, #164]	; (80052f0 <DMA_SetConfig+0x248>)
 800524c:	4293      	cmp	r3, r2
 800524e:	d013      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 8005250:	68fb      	ldr	r3, [r7, #12]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	4a27      	ldr	r2, [pc, #156]	; (80052f4 <DMA_SetConfig+0x24c>)
 8005256:	4293      	cmp	r3, r2
 8005258:	d00e      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 800525a:	68fb      	ldr	r3, [r7, #12]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	4a26      	ldr	r2, [pc, #152]	; (80052f8 <DMA_SetConfig+0x250>)
 8005260:	4293      	cmp	r3, r2
 8005262:	d009      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 8005264:	68fb      	ldr	r3, [r7, #12]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	4a24      	ldr	r2, [pc, #144]	; (80052fc <DMA_SetConfig+0x254>)
 800526a:	4293      	cmp	r3, r2
 800526c:	d004      	beq.n	8005278 <DMA_SetConfig+0x1d0>
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	681b      	ldr	r3, [r3, #0]
 8005272:	4a23      	ldr	r2, [pc, #140]	; (8005300 <DMA_SetConfig+0x258>)
 8005274:	4293      	cmp	r3, r2
 8005276:	d101      	bne.n	800527c <DMA_SetConfig+0x1d4>
 8005278:	2301      	movs	r3, #1
 800527a:	e000      	b.n	800527e <DMA_SetConfig+0x1d6>
 800527c:	2300      	movs	r3, #0
 800527e:	2b00      	cmp	r3, #0
 8005280:	d059      	beq.n	8005336 <DMA_SetConfig+0x28e>
  {
    /* Clear all interrupt flags at correct offset within the register */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8005282:	68fb      	ldr	r3, [r7, #12]
 8005284:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005286:	f003 031f 	and.w	r3, r3, #31
 800528a:	223f      	movs	r2, #63	; 0x3f
 800528c:	409a      	lsls	r2, r3
 800528e:	697b      	ldr	r3, [r7, #20]
 8005290:	609a      	str	r2, [r3, #8]

    /* Clear DBM bit */
    ((DMA_Stream_TypeDef *)hdma->Instance)->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8005292:	68fb      	ldr	r3, [r7, #12]
 8005294:	681b      	ldr	r3, [r3, #0]
 8005296:	681a      	ldr	r2, [r3, #0]
 8005298:	68fb      	ldr	r3, [r7, #12]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80052a0:	601a      	str	r2, [r3, #0]

    /* Configure DMA Stream data length */
    ((DMA_Stream_TypeDef *)hdma->Instance)->NDTR = DataLength;
 80052a2:	68fb      	ldr	r3, [r7, #12]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	683a      	ldr	r2, [r7, #0]
 80052a8:	605a      	str	r2, [r3, #4]

    /* Peripheral to Memory */
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80052aa:	68fb      	ldr	r3, [r7, #12]
 80052ac:	689b      	ldr	r3, [r3, #8]
 80052ae:	2b40      	cmp	r3, #64	; 0x40
 80052b0:	d138      	bne.n	8005324 <DMA_SetConfig+0x27c>
    {
      /* Configure DMA Stream destination address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = DstAddress;
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	687a      	ldr	r2, [r7, #4]
 80052b8:	609a      	str	r2, [r3, #8]

      /* Configure DMA Stream source address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = SrcAddress;
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	68ba      	ldr	r2, [r7, #8]
 80052c0:	60da      	str	r2, [r3, #12]
  }
  else
  {
    /* Nothing To Do */
  }
}
 80052c2:	e086      	b.n	80053d2 <DMA_SetConfig+0x32a>
 80052c4:	40020010 	.word	0x40020010
 80052c8:	40020028 	.word	0x40020028
 80052cc:	40020040 	.word	0x40020040
 80052d0:	40020058 	.word	0x40020058
 80052d4:	40020070 	.word	0x40020070
 80052d8:	40020088 	.word	0x40020088
 80052dc:	400200a0 	.word	0x400200a0
 80052e0:	400200b8 	.word	0x400200b8
 80052e4:	40020410 	.word	0x40020410
 80052e8:	40020428 	.word	0x40020428
 80052ec:	40020440 	.word	0x40020440
 80052f0:	40020458 	.word	0x40020458
 80052f4:	40020470 	.word	0x40020470
 80052f8:	40020488 	.word	0x40020488
 80052fc:	400204a0 	.word	0x400204a0
 8005300:	400204b8 	.word	0x400204b8
 8005304:	58025408 	.word	0x58025408
 8005308:	5802541c 	.word	0x5802541c
 800530c:	58025430 	.word	0x58025430
 8005310:	58025444 	.word	0x58025444
 8005314:	58025458 	.word	0x58025458
 8005318:	5802546c 	.word	0x5802546c
 800531c:	58025480 	.word	0x58025480
 8005320:	58025494 	.word	0x58025494
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = SrcAddress;
 8005324:	68fb      	ldr	r3, [r7, #12]
 8005326:	681b      	ldr	r3, [r3, #0]
 8005328:	68ba      	ldr	r2, [r7, #8]
 800532a:	609a      	str	r2, [r3, #8]
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = DstAddress;
 800532c:	68fb      	ldr	r3, [r7, #12]
 800532e:	681b      	ldr	r3, [r3, #0]
 8005330:	687a      	ldr	r2, [r7, #4]
 8005332:	60da      	str	r2, [r3, #12]
}
 8005334:	e04d      	b.n	80053d2 <DMA_SetConfig+0x32a>
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8005336:	68fb      	ldr	r3, [r7, #12]
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	4a29      	ldr	r2, [pc, #164]	; (80053e0 <DMA_SetConfig+0x338>)
 800533c:	4293      	cmp	r3, r2
 800533e:	d022      	beq.n	8005386 <DMA_SetConfig+0x2de>
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	4a27      	ldr	r2, [pc, #156]	; (80053e4 <DMA_SetConfig+0x33c>)
 8005346:	4293      	cmp	r3, r2
 8005348:	d01d      	beq.n	8005386 <DMA_SetConfig+0x2de>
 800534a:	68fb      	ldr	r3, [r7, #12]
 800534c:	681b      	ldr	r3, [r3, #0]
 800534e:	4a26      	ldr	r2, [pc, #152]	; (80053e8 <DMA_SetConfig+0x340>)
 8005350:	4293      	cmp	r3, r2
 8005352:	d018      	beq.n	8005386 <DMA_SetConfig+0x2de>
 8005354:	68fb      	ldr	r3, [r7, #12]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	4a24      	ldr	r2, [pc, #144]	; (80053ec <DMA_SetConfig+0x344>)
 800535a:	4293      	cmp	r3, r2
 800535c:	d013      	beq.n	8005386 <DMA_SetConfig+0x2de>
 800535e:	68fb      	ldr	r3, [r7, #12]
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	4a23      	ldr	r2, [pc, #140]	; (80053f0 <DMA_SetConfig+0x348>)
 8005364:	4293      	cmp	r3, r2
 8005366:	d00e      	beq.n	8005386 <DMA_SetConfig+0x2de>
 8005368:	68fb      	ldr	r3, [r7, #12]
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	4a21      	ldr	r2, [pc, #132]	; (80053f4 <DMA_SetConfig+0x34c>)
 800536e:	4293      	cmp	r3, r2
 8005370:	d009      	beq.n	8005386 <DMA_SetConfig+0x2de>
 8005372:	68fb      	ldr	r3, [r7, #12]
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	4a20      	ldr	r2, [pc, #128]	; (80053f8 <DMA_SetConfig+0x350>)
 8005378:	4293      	cmp	r3, r2
 800537a:	d004      	beq.n	8005386 <DMA_SetConfig+0x2de>
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	4a1e      	ldr	r2, [pc, #120]	; (80053fc <DMA_SetConfig+0x354>)
 8005382:	4293      	cmp	r3, r2
 8005384:	d101      	bne.n	800538a <DMA_SetConfig+0x2e2>
 8005386:	2301      	movs	r3, #1
 8005388:	e000      	b.n	800538c <DMA_SetConfig+0x2e4>
 800538a:	2300      	movs	r3, #0
 800538c:	2b00      	cmp	r3, #0
 800538e:	d020      	beq.n	80053d2 <DMA_SetConfig+0x32a>
    regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 8005390:	68fb      	ldr	r3, [r7, #12]
 8005392:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005394:	f003 031f 	and.w	r3, r3, #31
 8005398:	2201      	movs	r2, #1
 800539a:	409a      	lsls	r2, r3
 800539c:	693b      	ldr	r3, [r7, #16]
 800539e:	605a      	str	r2, [r3, #4]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CNDTR = DataLength;
 80053a0:	68fb      	ldr	r3, [r7, #12]
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	683a      	ldr	r2, [r7, #0]
 80053a6:	605a      	str	r2, [r3, #4]
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	689b      	ldr	r3, [r3, #8]
 80053ac:	2b40      	cmp	r3, #64	; 0x40
 80053ae:	d108      	bne.n	80053c2 <DMA_SetConfig+0x31a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = DstAddress;
 80053b0:	68fb      	ldr	r3, [r7, #12]
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	687a      	ldr	r2, [r7, #4]
 80053b6:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = SrcAddress;
 80053b8:	68fb      	ldr	r3, [r7, #12]
 80053ba:	681b      	ldr	r3, [r3, #0]
 80053bc:	68ba      	ldr	r2, [r7, #8]
 80053be:	60da      	str	r2, [r3, #12]
}
 80053c0:	e007      	b.n	80053d2 <DMA_SetConfig+0x32a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = SrcAddress;
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	68ba      	ldr	r2, [r7, #8]
 80053c8:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = DstAddress;
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	687a      	ldr	r2, [r7, #4]
 80053d0:	60da      	str	r2, [r3, #12]
}
 80053d2:	bf00      	nop
 80053d4:	371c      	adds	r7, #28
 80053d6:	46bd      	mov	sp, r7
 80053d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053dc:	4770      	bx	lr
 80053de:	bf00      	nop
 80053e0:	58025408 	.word	0x58025408
 80053e4:	5802541c 	.word	0x5802541c
 80053e8:	58025430 	.word	0x58025430
 80053ec:	58025444 	.word	0x58025444
 80053f0:	58025458 	.word	0x58025458
 80053f4:	5802546c 	.word	0x5802546c
 80053f8:	58025480 	.word	0x58025480
 80053fc:	58025494 	.word	0x58025494

08005400 <DMA_CalcBaseAndBitshift>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8005400:	b480      	push	{r7}
 8005402:	b085      	sub	sp, #20
 8005404:	af00      	add	r7, sp, #0
 8005406:	6078      	str	r0, [r7, #4]
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	4a42      	ldr	r2, [pc, #264]	; (8005518 <DMA_CalcBaseAndBitshift+0x118>)
 800540e:	4293      	cmp	r3, r2
 8005410:	d04a      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	681b      	ldr	r3, [r3, #0]
 8005416:	4a41      	ldr	r2, [pc, #260]	; (800551c <DMA_CalcBaseAndBitshift+0x11c>)
 8005418:	4293      	cmp	r3, r2
 800541a:	d045      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 800541c:	687b      	ldr	r3, [r7, #4]
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	4a3f      	ldr	r2, [pc, #252]	; (8005520 <DMA_CalcBaseAndBitshift+0x120>)
 8005422:	4293      	cmp	r3, r2
 8005424:	d040      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	4a3e      	ldr	r2, [pc, #248]	; (8005524 <DMA_CalcBaseAndBitshift+0x124>)
 800542c:	4293      	cmp	r3, r2
 800542e:	d03b      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	4a3c      	ldr	r2, [pc, #240]	; (8005528 <DMA_CalcBaseAndBitshift+0x128>)
 8005436:	4293      	cmp	r3, r2
 8005438:	d036      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 800543a:	687b      	ldr	r3, [r7, #4]
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	4a3b      	ldr	r2, [pc, #236]	; (800552c <DMA_CalcBaseAndBitshift+0x12c>)
 8005440:	4293      	cmp	r3, r2
 8005442:	d031      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	681b      	ldr	r3, [r3, #0]
 8005448:	4a39      	ldr	r2, [pc, #228]	; (8005530 <DMA_CalcBaseAndBitshift+0x130>)
 800544a:	4293      	cmp	r3, r2
 800544c:	d02c      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	681b      	ldr	r3, [r3, #0]
 8005452:	4a38      	ldr	r2, [pc, #224]	; (8005534 <DMA_CalcBaseAndBitshift+0x134>)
 8005454:	4293      	cmp	r3, r2
 8005456:	d027      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	681b      	ldr	r3, [r3, #0]
 800545c:	4a36      	ldr	r2, [pc, #216]	; (8005538 <DMA_CalcBaseAndBitshift+0x138>)
 800545e:	4293      	cmp	r3, r2
 8005460:	d022      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005462:	687b      	ldr	r3, [r7, #4]
 8005464:	681b      	ldr	r3, [r3, #0]
 8005466:	4a35      	ldr	r2, [pc, #212]	; (800553c <DMA_CalcBaseAndBitshift+0x13c>)
 8005468:	4293      	cmp	r3, r2
 800546a:	d01d      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	4a33      	ldr	r2, [pc, #204]	; (8005540 <DMA_CalcBaseAndBitshift+0x140>)
 8005472:	4293      	cmp	r3, r2
 8005474:	d018      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	681b      	ldr	r3, [r3, #0]
 800547a:	4a32      	ldr	r2, [pc, #200]	; (8005544 <DMA_CalcBaseAndBitshift+0x144>)
 800547c:	4293      	cmp	r3, r2
 800547e:	d013      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	4a30      	ldr	r2, [pc, #192]	; (8005548 <DMA_CalcBaseAndBitshift+0x148>)
 8005486:	4293      	cmp	r3, r2
 8005488:	d00e      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 800548a:	687b      	ldr	r3, [r7, #4]
 800548c:	681b      	ldr	r3, [r3, #0]
 800548e:	4a2f      	ldr	r2, [pc, #188]	; (800554c <DMA_CalcBaseAndBitshift+0x14c>)
 8005490:	4293      	cmp	r3, r2
 8005492:	d009      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	681b      	ldr	r3, [r3, #0]
 8005498:	4a2d      	ldr	r2, [pc, #180]	; (8005550 <DMA_CalcBaseAndBitshift+0x150>)
 800549a:	4293      	cmp	r3, r2
 800549c:	d004      	beq.n	80054a8 <DMA_CalcBaseAndBitshift+0xa8>
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	681b      	ldr	r3, [r3, #0]
 80054a2:	4a2c      	ldr	r2, [pc, #176]	; (8005554 <DMA_CalcBaseAndBitshift+0x154>)
 80054a4:	4293      	cmp	r3, r2
 80054a6:	d101      	bne.n	80054ac <DMA_CalcBaseAndBitshift+0xac>
 80054a8:	2301      	movs	r3, #1
 80054aa:	e000      	b.n	80054ae <DMA_CalcBaseAndBitshift+0xae>
 80054ac:	2300      	movs	r3, #0
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d024      	beq.n	80054fc <DMA_CalcBaseAndBitshift+0xfc>
  {
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	b2db      	uxtb	r3, r3
 80054b8:	3b10      	subs	r3, #16
 80054ba:	4a27      	ldr	r2, [pc, #156]	; (8005558 <DMA_CalcBaseAndBitshift+0x158>)
 80054bc:	fba2 2303 	umull	r2, r3, r2, r3
 80054c0:	091b      	lsrs	r3, r3, #4
 80054c2:	60fb      	str	r3, [r7, #12]

    /* lookup table for necessary bitshift of flags within status registers */
    static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 80054c4:	68fb      	ldr	r3, [r7, #12]
 80054c6:	f003 0307 	and.w	r3, r3, #7
 80054ca:	4a24      	ldr	r2, [pc, #144]	; (800555c <DMA_CalcBaseAndBitshift+0x15c>)
 80054cc:	5cd3      	ldrb	r3, [r2, r3]
 80054ce:	461a      	mov	r2, r3
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	65da      	str	r2, [r3, #92]	; 0x5c

    if (stream_number > 3U)
 80054d4:	68fb      	ldr	r3, [r7, #12]
 80054d6:	2b03      	cmp	r3, #3
 80054d8:	d908      	bls.n	80054ec <DMA_CalcBaseAndBitshift+0xec>
    {
      /* return pointer to HISR and HIFCR */
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	681b      	ldr	r3, [r3, #0]
 80054de:	461a      	mov	r2, r3
 80054e0:	4b1f      	ldr	r3, [pc, #124]	; (8005560 <DMA_CalcBaseAndBitshift+0x160>)
 80054e2:	4013      	ands	r3, r2
 80054e4:	1d1a      	adds	r2, r3, #4
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	659a      	str	r2, [r3, #88]	; 0x58
 80054ea:	e00d      	b.n	8005508 <DMA_CalcBaseAndBitshift+0x108>
    }
    else
    {
      /* return pointer to LISR and LIFCR */
      hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU));
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	681b      	ldr	r3, [r3, #0]
 80054f0:	461a      	mov	r2, r3
 80054f2:	4b1b      	ldr	r3, [pc, #108]	; (8005560 <DMA_CalcBaseAndBitshift+0x160>)
 80054f4:	4013      	ands	r3, r2
 80054f6:	687a      	ldr	r2, [r7, #4]
 80054f8:	6593      	str	r3, [r2, #88]	; 0x58
 80054fa:	e005      	b.n	8005508 <DMA_CalcBaseAndBitshift+0x108>
    }
  }
  else /* BDMA instance(s) */
  {
    /* return pointer to ISR and IFCR */
    hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0xFFU));
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	659a      	str	r2, [r3, #88]	; 0x58
  }

  return hdma->StreamBaseAddress;
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 800550c:	4618      	mov	r0, r3
 800550e:	3714      	adds	r7, #20
 8005510:	46bd      	mov	sp, r7
 8005512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005516:	4770      	bx	lr
 8005518:	40020010 	.word	0x40020010
 800551c:	40020028 	.word	0x40020028
 8005520:	40020040 	.word	0x40020040
 8005524:	40020058 	.word	0x40020058
 8005528:	40020070 	.word	0x40020070
 800552c:	40020088 	.word	0x40020088
 8005530:	400200a0 	.word	0x400200a0
 8005534:	400200b8 	.word	0x400200b8
 8005538:	40020410 	.word	0x40020410
 800553c:	40020428 	.word	0x40020428
 8005540:	40020440 	.word	0x40020440
 8005544:	40020458 	.word	0x40020458
 8005548:	40020470 	.word	0x40020470
 800554c:	40020488 	.word	0x40020488
 8005550:	400204a0 	.word	0x400204a0
 8005554:	400204b8 	.word	0x400204b8
 8005558:	aaaaaaab 	.word	0xaaaaaaab
 800555c:	08023988 	.word	0x08023988
 8005560:	fffffc00 	.word	0xfffffc00

08005564 <DMA_CheckFifoParam>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8005564:	b480      	push	{r7}
 8005566:	b085      	sub	sp, #20
 8005568:	af00      	add	r7, sp, #0
 800556a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800556c:	2300      	movs	r3, #0
 800556e:	73fb      	strb	r3, [r7, #15]

  /* Memory Data size equal to Byte */
  if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	699b      	ldr	r3, [r3, #24]
 8005574:	2b00      	cmp	r3, #0
 8005576:	d120      	bne.n	80055ba <DMA_CheckFifoParam+0x56>
  {
    switch (hdma->Init.FIFOThreshold)
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800557c:	2b03      	cmp	r3, #3
 800557e:	d858      	bhi.n	8005632 <DMA_CheckFifoParam+0xce>
 8005580:	a201      	add	r2, pc, #4	; (adr r2, 8005588 <DMA_CheckFifoParam+0x24>)
 8005582:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005586:	bf00      	nop
 8005588:	08005599 	.word	0x08005599
 800558c:	080055ab 	.word	0x080055ab
 8005590:	08005599 	.word	0x08005599
 8005594:	08005633 	.word	0x08005633
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:

        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800559c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80055a0:	2b00      	cmp	r3, #0
 80055a2:	d048      	beq.n	8005636 <DMA_CheckFifoParam+0xd2>
        {
          status = HAL_ERROR;
 80055a4:	2301      	movs	r3, #1
 80055a6:	73fb      	strb	r3, [r7, #15]
        }
        break;
 80055a8:	e045      	b.n	8005636 <DMA_CheckFifoParam+0xd2>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80055ae:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80055b2:	d142      	bne.n	800563a <DMA_CheckFifoParam+0xd6>
        {
          status = HAL_ERROR;
 80055b4:	2301      	movs	r3, #1
 80055b6:	73fb      	strb	r3, [r7, #15]
        }
        break;
 80055b8:	e03f      	b.n	800563a <DMA_CheckFifoParam+0xd6>
        break;
    }
  }

  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	699b      	ldr	r3, [r3, #24]
 80055be:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80055c2:	d123      	bne.n	800560c <DMA_CheckFifoParam+0xa8>
  {
    switch (hdma->Init.FIFOThreshold)
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80055c8:	2b03      	cmp	r3, #3
 80055ca:	d838      	bhi.n	800563e <DMA_CheckFifoParam+0xda>
 80055cc:	a201      	add	r2, pc, #4	; (adr r2, 80055d4 <DMA_CheckFifoParam+0x70>)
 80055ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80055d2:	bf00      	nop
 80055d4:	080055e5 	.word	0x080055e5
 80055d8:	080055eb 	.word	0x080055eb
 80055dc:	080055e5 	.word	0x080055e5
 80055e0:	080055fd 	.word	0x080055fd
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
        status = HAL_ERROR;
 80055e4:	2301      	movs	r3, #1
 80055e6:	73fb      	strb	r3, [r7, #15]
        break;
 80055e8:	e030      	b.n	800564c <DMA_CheckFifoParam+0xe8>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80055ee:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80055f2:	2b00      	cmp	r3, #0
 80055f4:	d025      	beq.n	8005642 <DMA_CheckFifoParam+0xde>
        {
          status = HAL_ERROR;
 80055f6:	2301      	movs	r3, #1
 80055f8:	73fb      	strb	r3, [r7, #15]
        }
        break;
 80055fa:	e022      	b.n	8005642 <DMA_CheckFifoParam+0xde>

      case DMA_FIFO_THRESHOLD_FULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80055fc:	687b      	ldr	r3, [r7, #4]
 80055fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005600:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005604:	d11f      	bne.n	8005646 <DMA_CheckFifoParam+0xe2>
        {
          status = HAL_ERROR;
 8005606:	2301      	movs	r3, #1
 8005608:	73fb      	strb	r3, [r7, #15]
        }
        break;
 800560a:	e01c      	b.n	8005646 <DMA_CheckFifoParam+0xe2>
  }

  /* Memory Data size equal to Word */
  else
  {
    switch (hdma->Init.FIFOThreshold)
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005610:	2b02      	cmp	r3, #2
 8005612:	d902      	bls.n	800561a <DMA_CheckFifoParam+0xb6>
 8005614:	2b03      	cmp	r3, #3
 8005616:	d003      	beq.n	8005620 <DMA_CheckFifoParam+0xbc>
          status = HAL_ERROR;
        }
    break;

      default:
        break;
 8005618:	e018      	b.n	800564c <DMA_CheckFifoParam+0xe8>
        status = HAL_ERROR;
 800561a:	2301      	movs	r3, #1
 800561c:	73fb      	strb	r3, [r7, #15]
        break;
 800561e:	e015      	b.n	800564c <DMA_CheckFifoParam+0xe8>
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005620:	687b      	ldr	r3, [r7, #4]
 8005622:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005624:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005628:	2b00      	cmp	r3, #0
 800562a:	d00e      	beq.n	800564a <DMA_CheckFifoParam+0xe6>
          status = HAL_ERROR;
 800562c:	2301      	movs	r3, #1
 800562e:	73fb      	strb	r3, [r7, #15]
    break;
 8005630:	e00b      	b.n	800564a <DMA_CheckFifoParam+0xe6>
        break;
 8005632:	bf00      	nop
 8005634:	e00a      	b.n	800564c <DMA_CheckFifoParam+0xe8>
        break;
 8005636:	bf00      	nop
 8005638:	e008      	b.n	800564c <DMA_CheckFifoParam+0xe8>
        break;
 800563a:	bf00      	nop
 800563c:	e006      	b.n	800564c <DMA_CheckFifoParam+0xe8>
        break;
 800563e:	bf00      	nop
 8005640:	e004      	b.n	800564c <DMA_CheckFifoParam+0xe8>
        break;
 8005642:	bf00      	nop
 8005644:	e002      	b.n	800564c <DMA_CheckFifoParam+0xe8>
        break;
 8005646:	bf00      	nop
 8005648:	e000      	b.n	800564c <DMA_CheckFifoParam+0xe8>
    break;
 800564a:	bf00      	nop
    }
  }

  return status;
 800564c:	7bfb      	ldrb	r3, [r7, #15]
}
 800564e:	4618      	mov	r0, r3
 8005650:	3714      	adds	r7, #20
 8005652:	46bd      	mov	sp, r7
 8005654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005658:	4770      	bx	lr
 800565a:	bf00      	nop

0800565c <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 800565c:	b480      	push	{r7}
 800565e:	b085      	sub	sp, #20
 8005660:	af00      	add	r7, sp, #0
 8005662:	6078      	str	r0, [r7, #4]
  uint32_t stream_number;
  uint32_t stream_baseaddress = (uint32_t)((uint32_t*)hdma->Instance);
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	60bb      	str	r3, [r7, #8]

  if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 800566a:	687b      	ldr	r3, [r7, #4]
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	4a38      	ldr	r2, [pc, #224]	; (8005750 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 8005670:	4293      	cmp	r3, r2
 8005672:	d022      	beq.n	80056ba <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	4a36      	ldr	r2, [pc, #216]	; (8005754 <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 800567a:	4293      	cmp	r3, r2
 800567c:	d01d      	beq.n	80056ba <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800567e:	687b      	ldr	r3, [r7, #4]
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	4a35      	ldr	r2, [pc, #212]	; (8005758 <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 8005684:	4293      	cmp	r3, r2
 8005686:	d018      	beq.n	80056ba <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	681b      	ldr	r3, [r3, #0]
 800568c:	4a33      	ldr	r2, [pc, #204]	; (800575c <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 800568e:	4293      	cmp	r3, r2
 8005690:	d013      	beq.n	80056ba <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	4a32      	ldr	r2, [pc, #200]	; (8005760 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 8005698:	4293      	cmp	r3, r2
 800569a:	d00e      	beq.n	80056ba <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	4a30      	ldr	r2, [pc, #192]	; (8005764 <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 80056a2:	4293      	cmp	r3, r2
 80056a4:	d009      	beq.n	80056ba <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	4a2f      	ldr	r2, [pc, #188]	; (8005768 <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 80056ac:	4293      	cmp	r3, r2
 80056ae:	d004      	beq.n	80056ba <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	681b      	ldr	r3, [r3, #0]
 80056b4:	4a2d      	ldr	r2, [pc, #180]	; (800576c <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 80056b6:	4293      	cmp	r3, r2
 80056b8:	d101      	bne.n	80056be <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 80056ba:	2301      	movs	r3, #1
 80056bc:	e000      	b.n	80056c0 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 80056be:	2300      	movs	r3, #0
 80056c0:	2b00      	cmp	r3, #0
 80056c2:	d01a      	beq.n	80056fa <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
  {
    /* BDMA Channels are connected to DMAMUX2 channels */
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 8U) / 20U;
 80056c4:	687b      	ldr	r3, [r7, #4]
 80056c6:	681b      	ldr	r3, [r3, #0]
 80056c8:	b2db      	uxtb	r3, r3
 80056ca:	3b08      	subs	r3, #8
 80056cc:	4a28      	ldr	r2, [pc, #160]	; (8005770 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 80056ce:	fba2 2303 	umull	r2, r3, r2, r3
 80056d2:	091b      	lsrs	r3, r3, #4
 80056d4:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 80056d6:	68fa      	ldr	r2, [r7, #12]
 80056d8:	4b26      	ldr	r3, [pc, #152]	; (8005774 <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 80056da:	4413      	add	r3, r2
 80056dc:	009b      	lsls	r3, r3, #2
 80056de:	461a      	mov	r2, r3
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX2_ChannelStatus;
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	4a24      	ldr	r2, [pc, #144]	; (8005778 <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 80056e8:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 80056ea:	68fb      	ldr	r3, [r7, #12]
 80056ec:	f003 031f 	and.w	r3, r3, #31
 80056f0:	2201      	movs	r2, #1
 80056f2:	409a      	lsls	r2, r3
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	669a      	str	r2, [r3, #104]	; 0x68
    }
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
  }
}
 80056f8:	e024      	b.n	8005744 <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	b2db      	uxtb	r3, r3
 8005700:	3b10      	subs	r3, #16
 8005702:	4a1e      	ldr	r2, [pc, #120]	; (800577c <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 8005704:	fba2 2303 	umull	r2, r3, r2, r3
 8005708:	091b      	lsrs	r3, r3, #4
 800570a:	60fb      	str	r3, [r7, #12]
    if((stream_baseaddress <= ((uint32_t)DMA2_Stream7) ) && \
 800570c:	68bb      	ldr	r3, [r7, #8]
 800570e:	4a1c      	ldr	r2, [pc, #112]	; (8005780 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 8005710:	4293      	cmp	r3, r2
 8005712:	d806      	bhi.n	8005722 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 8005714:	68bb      	ldr	r3, [r7, #8]
 8005716:	4a1b      	ldr	r2, [pc, #108]	; (8005784 <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 8005718:	4293      	cmp	r3, r2
 800571a:	d902      	bls.n	8005722 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
      stream_number += 8U;
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	3308      	adds	r3, #8
 8005720:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 8005722:	68fa      	ldr	r2, [r7, #12]
 8005724:	4b18      	ldr	r3, [pc, #96]	; (8005788 <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 8005726:	4413      	add	r3, r2
 8005728:	009b      	lsls	r3, r3, #2
 800572a:	461a      	mov	r2, r3
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	4a16      	ldr	r2, [pc, #88]	; (800578c <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 8005734:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	f003 031f 	and.w	r3, r3, #31
 800573c:	2201      	movs	r2, #1
 800573e:	409a      	lsls	r2, r3
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	669a      	str	r2, [r3, #104]	; 0x68
}
 8005744:	bf00      	nop
 8005746:	3714      	adds	r7, #20
 8005748:	46bd      	mov	sp, r7
 800574a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800574e:	4770      	bx	lr
 8005750:	58025408 	.word	0x58025408
 8005754:	5802541c 	.word	0x5802541c
 8005758:	58025430 	.word	0x58025430
 800575c:	58025444 	.word	0x58025444
 8005760:	58025458 	.word	0x58025458
 8005764:	5802546c 	.word	0x5802546c
 8005768:	58025480 	.word	0x58025480
 800576c:	58025494 	.word	0x58025494
 8005770:	cccccccd 	.word	0xcccccccd
 8005774:	16009600 	.word	0x16009600
 8005778:	58025880 	.word	0x58025880
 800577c:	aaaaaaab 	.word	0xaaaaaaab
 8005780:	400204b8 	.word	0x400204b8
 8005784:	4002040f 	.word	0x4002040f
 8005788:	10008200 	.word	0x10008200
 800578c:	40020880 	.word	0x40020880

08005790 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8005790:	b480      	push	{r7}
 8005792:	b085      	sub	sp, #20
 8005794:	af00      	add	r7, sp, #0
 8005796:	6078      	str	r0, [r7, #4]
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	685b      	ldr	r3, [r3, #4]
 800579c:	b2db      	uxtb	r3, r3
 800579e:	60fb      	str	r3, [r7, #12]

  if((request >= DMA_REQUEST_GENERATOR0) && (request <= DMA_REQUEST_GENERATOR7))
 80057a0:	68fb      	ldr	r3, [r7, #12]
 80057a2:	2b00      	cmp	r3, #0
 80057a4:	d04a      	beq.n	800583c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 80057a6:	68fb      	ldr	r3, [r7, #12]
 80057a8:	2b08      	cmp	r3, #8
 80057aa:	d847      	bhi.n	800583c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	681b      	ldr	r3, [r3, #0]
 80057b0:	4a25      	ldr	r2, [pc, #148]	; (8005848 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 80057b2:	4293      	cmp	r3, r2
 80057b4:	d022      	beq.n	80057fc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80057b6:	687b      	ldr	r3, [r7, #4]
 80057b8:	681b      	ldr	r3, [r3, #0]
 80057ba:	4a24      	ldr	r2, [pc, #144]	; (800584c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 80057bc:	4293      	cmp	r3, r2
 80057be:	d01d      	beq.n	80057fc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	681b      	ldr	r3, [r3, #0]
 80057c4:	4a22      	ldr	r2, [pc, #136]	; (8005850 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 80057c6:	4293      	cmp	r3, r2
 80057c8:	d018      	beq.n	80057fc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	4a21      	ldr	r2, [pc, #132]	; (8005854 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 80057d0:	4293      	cmp	r3, r2
 80057d2:	d013      	beq.n	80057fc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80057d4:	687b      	ldr	r3, [r7, #4]
 80057d6:	681b      	ldr	r3, [r3, #0]
 80057d8:	4a1f      	ldr	r2, [pc, #124]	; (8005858 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 80057da:	4293      	cmp	r3, r2
 80057dc:	d00e      	beq.n	80057fc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	4a1e      	ldr	r2, [pc, #120]	; (800585c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 80057e4:	4293      	cmp	r3, r2
 80057e6:	d009      	beq.n	80057fc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80057e8:	687b      	ldr	r3, [r7, #4]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	4a1c      	ldr	r2, [pc, #112]	; (8005860 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 80057ee:	4293      	cmp	r3, r2
 80057f0:	d004      	beq.n	80057fc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	4a1b      	ldr	r2, [pc, #108]	; (8005864 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 80057f8:	4293      	cmp	r3, r2
 80057fa:	d101      	bne.n	8005800 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 80057fc:	2301      	movs	r3, #1
 80057fe:	e000      	b.n	8005802 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 8005800:	2300      	movs	r3, #0
 8005802:	2b00      	cmp	r3, #0
 8005804:	d00a      	beq.n	800581c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
    {
      /* BDMA Channels are connected to DMAMUX2 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_RequestGenerator0) + ((request - 1U) * 4U)));
 8005806:	68fa      	ldr	r2, [r7, #12]
 8005808:	4b17      	ldr	r3, [pc, #92]	; (8005868 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 800580a:	4413      	add	r3, r2
 800580c:	009b      	lsls	r3, r3, #2
 800580e:	461a      	mov	r2, r3
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	4a15      	ldr	r2, [pc, #84]	; (800586c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 8005818:	671a      	str	r2, [r3, #112]	; 0x70
 800581a:	e009      	b.n	8005830 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
    }
    else
    {
      /* DMA1 and DMA2 Streams use DMAMUX1 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 800581c:	68fa      	ldr	r2, [r7, #12]
 800581e:	4b14      	ldr	r3, [pc, #80]	; (8005870 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 8005820:	4413      	add	r3, r2
 8005822:	009b      	lsls	r3, r3, #2
 8005824:	461a      	mov	r2, r3
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	4a11      	ldr	r2, [pc, #68]	; (8005874 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 800582e:	671a      	str	r2, [r3, #112]	; 0x70
    }

    hdma->DMAmuxRequestGenStatusMask = 1UL << (request - 1U);
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	3b01      	subs	r3, #1
 8005834:	2201      	movs	r2, #1
 8005836:	409a      	lsls	r2, r3
 8005838:	687b      	ldr	r3, [r7, #4]
 800583a:	675a      	str	r2, [r3, #116]	; 0x74
  }
}
 800583c:	bf00      	nop
 800583e:	3714      	adds	r7, #20
 8005840:	46bd      	mov	sp, r7
 8005842:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005846:	4770      	bx	lr
 8005848:	58025408 	.word	0x58025408
 800584c:	5802541c 	.word	0x5802541c
 8005850:	58025430 	.word	0x58025430
 8005854:	58025444 	.word	0x58025444
 8005858:	58025458 	.word	0x58025458
 800585c:	5802546c 	.word	0x5802546c
 8005860:	58025480 	.word	0x58025480
 8005864:	58025494 	.word	0x58025494
 8005868:	1600963f 	.word	0x1600963f
 800586c:	58025940 	.word	0x58025940
 8005870:	1000823f 	.word	0x1000823f
 8005874:	40020940 	.word	0x40020940

08005878 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005878:	b480      	push	{r7}
 800587a:	b089      	sub	sp, #36	; 0x24
 800587c:	af00      	add	r7, sp, #0
 800587e:	6078      	str	r0, [r7, #4]
 8005880:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8005882:	2300      	movs	r3, #0
 8005884:	61fb      	str	r3, [r7, #28]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
 8005886:	4b86      	ldr	r3, [pc, #536]	; (8005aa0 <HAL_GPIO_Init+0x228>)
 8005888:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 800588a:	e18c      	b.n	8005ba6 <HAL_GPIO_Init+0x32e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 800588c:	683b      	ldr	r3, [r7, #0]
 800588e:	681a      	ldr	r2, [r3, #0]
 8005890:	2101      	movs	r1, #1
 8005892:	69fb      	ldr	r3, [r7, #28]
 8005894:	fa01 f303 	lsl.w	r3, r1, r3
 8005898:	4013      	ands	r3, r2
 800589a:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 800589c:	693b      	ldr	r3, [r7, #16]
 800589e:	2b00      	cmp	r3, #0
 80058a0:	f000 817e 	beq.w	8005ba0 <HAL_GPIO_Init+0x328>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80058a4:	683b      	ldr	r3, [r7, #0]
 80058a6:	685b      	ldr	r3, [r3, #4]
 80058a8:	f003 0303 	and.w	r3, r3, #3
 80058ac:	2b01      	cmp	r3, #1
 80058ae:	d005      	beq.n	80058bc <HAL_GPIO_Init+0x44>
 80058b0:	683b      	ldr	r3, [r7, #0]
 80058b2:	685b      	ldr	r3, [r3, #4]
 80058b4:	f003 0303 	and.w	r3, r3, #3
 80058b8:	2b02      	cmp	r3, #2
 80058ba:	d130      	bne.n	800591e <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	689b      	ldr	r3, [r3, #8]
 80058c0:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80058c2:	69fb      	ldr	r3, [r7, #28]
 80058c4:	005b      	lsls	r3, r3, #1
 80058c6:	2203      	movs	r2, #3
 80058c8:	fa02 f303 	lsl.w	r3, r2, r3
 80058cc:	43db      	mvns	r3, r3
 80058ce:	69ba      	ldr	r2, [r7, #24]
 80058d0:	4013      	ands	r3, r2
 80058d2:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80058d4:	683b      	ldr	r3, [r7, #0]
 80058d6:	68da      	ldr	r2, [r3, #12]
 80058d8:	69fb      	ldr	r3, [r7, #28]
 80058da:	005b      	lsls	r3, r3, #1
 80058dc:	fa02 f303 	lsl.w	r3, r2, r3
 80058e0:	69ba      	ldr	r2, [r7, #24]
 80058e2:	4313      	orrs	r3, r2
 80058e4:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	69ba      	ldr	r2, [r7, #24]
 80058ea:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	685b      	ldr	r3, [r3, #4]
 80058f0:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80058f2:	2201      	movs	r2, #1
 80058f4:	69fb      	ldr	r3, [r7, #28]
 80058f6:	fa02 f303 	lsl.w	r3, r2, r3
 80058fa:	43db      	mvns	r3, r3
 80058fc:	69ba      	ldr	r2, [r7, #24]
 80058fe:	4013      	ands	r3, r2
 8005900:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005902:	683b      	ldr	r3, [r7, #0]
 8005904:	685b      	ldr	r3, [r3, #4]
 8005906:	091b      	lsrs	r3, r3, #4
 8005908:	f003 0201 	and.w	r2, r3, #1
 800590c:	69fb      	ldr	r3, [r7, #28]
 800590e:	fa02 f303 	lsl.w	r3, r2, r3
 8005912:	69ba      	ldr	r2, [r7, #24]
 8005914:	4313      	orrs	r3, r2
 8005916:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	69ba      	ldr	r2, [r7, #24]
 800591c:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800591e:	683b      	ldr	r3, [r7, #0]
 8005920:	685b      	ldr	r3, [r3, #4]
 8005922:	f003 0303 	and.w	r3, r3, #3
 8005926:	2b03      	cmp	r3, #3
 8005928:	d017      	beq.n	800595a <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	68db      	ldr	r3, [r3, #12]
 800592e:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8005930:	69fb      	ldr	r3, [r7, #28]
 8005932:	005b      	lsls	r3, r3, #1
 8005934:	2203      	movs	r2, #3
 8005936:	fa02 f303 	lsl.w	r3, r2, r3
 800593a:	43db      	mvns	r3, r3
 800593c:	69ba      	ldr	r2, [r7, #24]
 800593e:	4013      	ands	r3, r2
 8005940:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005942:	683b      	ldr	r3, [r7, #0]
 8005944:	689a      	ldr	r2, [r3, #8]
 8005946:	69fb      	ldr	r3, [r7, #28]
 8005948:	005b      	lsls	r3, r3, #1
 800594a:	fa02 f303 	lsl.w	r3, r2, r3
 800594e:	69ba      	ldr	r2, [r7, #24]
 8005950:	4313      	orrs	r3, r2
 8005952:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	69ba      	ldr	r2, [r7, #24]
 8005958:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800595a:	683b      	ldr	r3, [r7, #0]
 800595c:	685b      	ldr	r3, [r3, #4]
 800595e:	f003 0303 	and.w	r3, r3, #3
 8005962:	2b02      	cmp	r3, #2
 8005964:	d123      	bne.n	80059ae <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8005966:	69fb      	ldr	r3, [r7, #28]
 8005968:	08da      	lsrs	r2, r3, #3
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	3208      	adds	r2, #8
 800596e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005972:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8005974:	69fb      	ldr	r3, [r7, #28]
 8005976:	f003 0307 	and.w	r3, r3, #7
 800597a:	009b      	lsls	r3, r3, #2
 800597c:	220f      	movs	r2, #15
 800597e:	fa02 f303 	lsl.w	r3, r2, r3
 8005982:	43db      	mvns	r3, r3
 8005984:	69ba      	ldr	r2, [r7, #24]
 8005986:	4013      	ands	r3, r2
 8005988:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 800598a:	683b      	ldr	r3, [r7, #0]
 800598c:	691a      	ldr	r2, [r3, #16]
 800598e:	69fb      	ldr	r3, [r7, #28]
 8005990:	f003 0307 	and.w	r3, r3, #7
 8005994:	009b      	lsls	r3, r3, #2
 8005996:	fa02 f303 	lsl.w	r3, r2, r3
 800599a:	69ba      	ldr	r2, [r7, #24]
 800599c:	4313      	orrs	r3, r2
 800599e:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80059a0:	69fb      	ldr	r3, [r7, #28]
 80059a2:	08da      	lsrs	r2, r3, #3
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	3208      	adds	r2, #8
 80059a8:	69b9      	ldr	r1, [r7, #24]
 80059aa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80059ae:	687b      	ldr	r3, [r7, #4]
 80059b0:	681b      	ldr	r3, [r3, #0]
 80059b2:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 80059b4:	69fb      	ldr	r3, [r7, #28]
 80059b6:	005b      	lsls	r3, r3, #1
 80059b8:	2203      	movs	r2, #3
 80059ba:	fa02 f303 	lsl.w	r3, r2, r3
 80059be:	43db      	mvns	r3, r3
 80059c0:	69ba      	ldr	r2, [r7, #24]
 80059c2:	4013      	ands	r3, r2
 80059c4:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80059c6:	683b      	ldr	r3, [r7, #0]
 80059c8:	685b      	ldr	r3, [r3, #4]
 80059ca:	f003 0203 	and.w	r2, r3, #3
 80059ce:	69fb      	ldr	r3, [r7, #28]
 80059d0:	005b      	lsls	r3, r3, #1
 80059d2:	fa02 f303 	lsl.w	r3, r2, r3
 80059d6:	69ba      	ldr	r2, [r7, #24]
 80059d8:	4313      	orrs	r3, r2
 80059da:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	69ba      	ldr	r2, [r7, #24]
 80059e0:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80059e2:	683b      	ldr	r3, [r7, #0]
 80059e4:	685b      	ldr	r3, [r3, #4]
 80059e6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80059ea:	2b00      	cmp	r3, #0
 80059ec:	f000 80d8 	beq.w	8005ba0 <HAL_GPIO_Init+0x328>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80059f0:	4b2c      	ldr	r3, [pc, #176]	; (8005aa4 <HAL_GPIO_Init+0x22c>)
 80059f2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80059f6:	4a2b      	ldr	r2, [pc, #172]	; (8005aa4 <HAL_GPIO_Init+0x22c>)
 80059f8:	f043 0302 	orr.w	r3, r3, #2
 80059fc:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8005a00:	4b28      	ldr	r3, [pc, #160]	; (8005aa4 <HAL_GPIO_Init+0x22c>)
 8005a02:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8005a06:	f003 0302 	and.w	r3, r3, #2
 8005a0a:	60fb      	str	r3, [r7, #12]
 8005a0c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8005a0e:	4a26      	ldr	r2, [pc, #152]	; (8005aa8 <HAL_GPIO_Init+0x230>)
 8005a10:	69fb      	ldr	r3, [r7, #28]
 8005a12:	089b      	lsrs	r3, r3, #2
 8005a14:	3302      	adds	r3, #2
 8005a16:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005a1a:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8005a1c:	69fb      	ldr	r3, [r7, #28]
 8005a1e:	f003 0303 	and.w	r3, r3, #3
 8005a22:	009b      	lsls	r3, r3, #2
 8005a24:	220f      	movs	r2, #15
 8005a26:	fa02 f303 	lsl.w	r3, r2, r3
 8005a2a:	43db      	mvns	r3, r3
 8005a2c:	69ba      	ldr	r2, [r7, #24]
 8005a2e:	4013      	ands	r3, r2
 8005a30:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005a32:	687b      	ldr	r3, [r7, #4]
 8005a34:	4a1d      	ldr	r2, [pc, #116]	; (8005aac <HAL_GPIO_Init+0x234>)
 8005a36:	4293      	cmp	r3, r2
 8005a38:	d04a      	beq.n	8005ad0 <HAL_GPIO_Init+0x258>
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	4a1c      	ldr	r2, [pc, #112]	; (8005ab0 <HAL_GPIO_Init+0x238>)
 8005a3e:	4293      	cmp	r3, r2
 8005a40:	d02b      	beq.n	8005a9a <HAL_GPIO_Init+0x222>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	4a1b      	ldr	r2, [pc, #108]	; (8005ab4 <HAL_GPIO_Init+0x23c>)
 8005a46:	4293      	cmp	r3, r2
 8005a48:	d025      	beq.n	8005a96 <HAL_GPIO_Init+0x21e>
 8005a4a:	687b      	ldr	r3, [r7, #4]
 8005a4c:	4a1a      	ldr	r2, [pc, #104]	; (8005ab8 <HAL_GPIO_Init+0x240>)
 8005a4e:	4293      	cmp	r3, r2
 8005a50:	d01f      	beq.n	8005a92 <HAL_GPIO_Init+0x21a>
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	4a19      	ldr	r2, [pc, #100]	; (8005abc <HAL_GPIO_Init+0x244>)
 8005a56:	4293      	cmp	r3, r2
 8005a58:	d019      	beq.n	8005a8e <HAL_GPIO_Init+0x216>
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	4a18      	ldr	r2, [pc, #96]	; (8005ac0 <HAL_GPIO_Init+0x248>)
 8005a5e:	4293      	cmp	r3, r2
 8005a60:	d013      	beq.n	8005a8a <HAL_GPIO_Init+0x212>
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	4a17      	ldr	r2, [pc, #92]	; (8005ac4 <HAL_GPIO_Init+0x24c>)
 8005a66:	4293      	cmp	r3, r2
 8005a68:	d00d      	beq.n	8005a86 <HAL_GPIO_Init+0x20e>
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	4a16      	ldr	r2, [pc, #88]	; (8005ac8 <HAL_GPIO_Init+0x250>)
 8005a6e:	4293      	cmp	r3, r2
 8005a70:	d007      	beq.n	8005a82 <HAL_GPIO_Init+0x20a>
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	4a15      	ldr	r2, [pc, #84]	; (8005acc <HAL_GPIO_Init+0x254>)
 8005a76:	4293      	cmp	r3, r2
 8005a78:	d101      	bne.n	8005a7e <HAL_GPIO_Init+0x206>
 8005a7a:	2309      	movs	r3, #9
 8005a7c:	e029      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a7e:	230a      	movs	r3, #10
 8005a80:	e027      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a82:	2307      	movs	r3, #7
 8005a84:	e025      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a86:	2306      	movs	r3, #6
 8005a88:	e023      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a8a:	2305      	movs	r3, #5
 8005a8c:	e021      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a8e:	2304      	movs	r3, #4
 8005a90:	e01f      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a92:	2303      	movs	r3, #3
 8005a94:	e01d      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a96:	2302      	movs	r3, #2
 8005a98:	e01b      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a9a:	2301      	movs	r3, #1
 8005a9c:	e019      	b.n	8005ad2 <HAL_GPIO_Init+0x25a>
 8005a9e:	bf00      	nop
 8005aa0:	58000080 	.word	0x58000080
 8005aa4:	58024400 	.word	0x58024400
 8005aa8:	58000400 	.word	0x58000400
 8005aac:	58020000 	.word	0x58020000
 8005ab0:	58020400 	.word	0x58020400
 8005ab4:	58020800 	.word	0x58020800
 8005ab8:	58020c00 	.word	0x58020c00
 8005abc:	58021000 	.word	0x58021000
 8005ac0:	58021400 	.word	0x58021400
 8005ac4:	58021800 	.word	0x58021800
 8005ac8:	58021c00 	.word	0x58021c00
 8005acc:	58022400 	.word	0x58022400
 8005ad0:	2300      	movs	r3, #0
 8005ad2:	69fa      	ldr	r2, [r7, #28]
 8005ad4:	f002 0203 	and.w	r2, r2, #3
 8005ad8:	0092      	lsls	r2, r2, #2
 8005ada:	4093      	lsls	r3, r2
 8005adc:	69ba      	ldr	r2, [r7, #24]
 8005ade:	4313      	orrs	r3, r2
 8005ae0:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005ae2:	4938      	ldr	r1, [pc, #224]	; (8005bc4 <HAL_GPIO_Init+0x34c>)
 8005ae4:	69fb      	ldr	r3, [r7, #28]
 8005ae6:	089b      	lsrs	r3, r3, #2
 8005ae8:	3302      	adds	r3, #2
 8005aea:	69ba      	ldr	r2, [r7, #24]
 8005aec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8005af0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005af8:	693b      	ldr	r3, [r7, #16]
 8005afa:	43db      	mvns	r3, r3
 8005afc:	69ba      	ldr	r2, [r7, #24]
 8005afe:	4013      	ands	r3, r2
 8005b00:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8005b02:	683b      	ldr	r3, [r7, #0]
 8005b04:	685b      	ldr	r3, [r3, #4]
 8005b06:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005b0a:	2b00      	cmp	r3, #0
 8005b0c:	d003      	beq.n	8005b16 <HAL_GPIO_Init+0x29e>
        {
          temp |= iocurrent;
 8005b0e:	69ba      	ldr	r2, [r7, #24]
 8005b10:	693b      	ldr	r3, [r7, #16]
 8005b12:	4313      	orrs	r3, r2
 8005b14:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 8005b16:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005b1a:	69bb      	ldr	r3, [r7, #24]
 8005b1c:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 8005b1e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005b22:	685b      	ldr	r3, [r3, #4]
 8005b24:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005b26:	693b      	ldr	r3, [r7, #16]
 8005b28:	43db      	mvns	r3, r3
 8005b2a:	69ba      	ldr	r2, [r7, #24]
 8005b2c:	4013      	ands	r3, r2
 8005b2e:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005b30:	683b      	ldr	r3, [r7, #0]
 8005b32:	685b      	ldr	r3, [r3, #4]
 8005b34:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005b38:	2b00      	cmp	r3, #0
 8005b3a:	d003      	beq.n	8005b44 <HAL_GPIO_Init+0x2cc>
        {
          temp |= iocurrent;
 8005b3c:	69ba      	ldr	r2, [r7, #24]
 8005b3e:	693b      	ldr	r3, [r7, #16]
 8005b40:	4313      	orrs	r3, r2
 8005b42:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 8005b44:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005b48:	69bb      	ldr	r3, [r7, #24]
 8005b4a:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 8005b4c:	697b      	ldr	r3, [r7, #20]
 8005b4e:	685b      	ldr	r3, [r3, #4]
 8005b50:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005b52:	693b      	ldr	r3, [r7, #16]
 8005b54:	43db      	mvns	r3, r3
 8005b56:	69ba      	ldr	r2, [r7, #24]
 8005b58:	4013      	ands	r3, r2
 8005b5a:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005b5c:	683b      	ldr	r3, [r7, #0]
 8005b5e:	685b      	ldr	r3, [r3, #4]
 8005b60:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005b64:	2b00      	cmp	r3, #0
 8005b66:	d003      	beq.n	8005b70 <HAL_GPIO_Init+0x2f8>
        {
          temp |= iocurrent;
 8005b68:	69ba      	ldr	r2, [r7, #24]
 8005b6a:	693b      	ldr	r3, [r7, #16]
 8005b6c:	4313      	orrs	r3, r2
 8005b6e:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 8005b70:	697b      	ldr	r3, [r7, #20]
 8005b72:	69ba      	ldr	r2, [r7, #24]
 8005b74:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 8005b76:	697b      	ldr	r3, [r7, #20]
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005b7c:	693b      	ldr	r3, [r7, #16]
 8005b7e:	43db      	mvns	r3, r3
 8005b80:	69ba      	ldr	r2, [r7, #24]
 8005b82:	4013      	ands	r3, r2
 8005b84:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005b86:	683b      	ldr	r3, [r7, #0]
 8005b88:	685b      	ldr	r3, [r3, #4]
 8005b8a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005b8e:	2b00      	cmp	r3, #0
 8005b90:	d003      	beq.n	8005b9a <HAL_GPIO_Init+0x322>
        {
          temp |= iocurrent;
 8005b92:	69ba      	ldr	r2, [r7, #24]
 8005b94:	693b      	ldr	r3, [r7, #16]
 8005b96:	4313      	orrs	r3, r2
 8005b98:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 8005b9a:	697b      	ldr	r3, [r7, #20]
 8005b9c:	69ba      	ldr	r2, [r7, #24]
 8005b9e:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8005ba0:	69fb      	ldr	r3, [r7, #28]
 8005ba2:	3301      	adds	r3, #1
 8005ba4:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8005ba6:	683b      	ldr	r3, [r7, #0]
 8005ba8:	681a      	ldr	r2, [r3, #0]
 8005baa:	69fb      	ldr	r3, [r7, #28]
 8005bac:	fa22 f303 	lsr.w	r3, r2, r3
 8005bb0:	2b00      	cmp	r3, #0
 8005bb2:	f47f ae6b 	bne.w	800588c <HAL_GPIO_Init+0x14>
  }
}
 8005bb6:	bf00      	nop
 8005bb8:	bf00      	nop
 8005bba:	3724      	adds	r7, #36	; 0x24
 8005bbc:	46bd      	mov	sp, r7
 8005bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bc2:	4770      	bx	lr
 8005bc4:	58000400 	.word	0x58000400

08005bc8 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8005bc8:	b480      	push	{r7}
 8005bca:	b083      	sub	sp, #12
 8005bcc:	af00      	add	r7, sp, #0
 8005bce:	6078      	str	r0, [r7, #4]
 8005bd0:	460b      	mov	r3, r1
 8005bd2:	807b      	strh	r3, [r7, #2]
 8005bd4:	4613      	mov	r3, r2
 8005bd6:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8005bd8:	787b      	ldrb	r3, [r7, #1]
 8005bda:	2b00      	cmp	r3, #0
 8005bdc:	d003      	beq.n	8005be6 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8005bde:	887a      	ldrh	r2, [r7, #2]
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 8005be4:	e003      	b.n	8005bee <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8005be6:	887b      	ldrh	r3, [r7, #2]
 8005be8:	041a      	lsls	r2, r3, #16
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	619a      	str	r2, [r3, #24]
}
 8005bee:	bf00      	nop
 8005bf0:	370c      	adds	r7, #12
 8005bf2:	46bd      	mov	sp, r7
 8005bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bf8:	4770      	bx	lr
	...

08005bfc <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8005bfc:	b580      	push	{r7, lr}
 8005bfe:	b084      	sub	sp, #16
 8005c00:	af00      	add	r7, sp, #0
 8005c02:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 8005c04:	4b19      	ldr	r3, [pc, #100]	; (8005c6c <HAL_PWREx_ConfigSupply+0x70>)
 8005c06:	68db      	ldr	r3, [r3, #12]
 8005c08:	f003 0304 	and.w	r3, r3, #4
 8005c0c:	2b04      	cmp	r3, #4
 8005c0e:	d00a      	beq.n	8005c26 <HAL_PWREx_ConfigSupply+0x2a>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8005c10:	4b16      	ldr	r3, [pc, #88]	; (8005c6c <HAL_PWREx_ConfigSupply+0x70>)
 8005c12:	68db      	ldr	r3, [r3, #12]
 8005c14:	f003 0307 	and.w	r3, r3, #7
 8005c18:	687a      	ldr	r2, [r7, #4]
 8005c1a:	429a      	cmp	r2, r3
 8005c1c:	d001      	beq.n	8005c22 <HAL_PWREx_ConfigSupply+0x26>
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 8005c1e:	2301      	movs	r3, #1
 8005c20:	e01f      	b.n	8005c62 <HAL_PWREx_ConfigSupply+0x66>
    else
    {
      /* Supply configuration update locked, but new supply configuration
         matches with old supply configuration : nothing to do
      */
      return HAL_OK;
 8005c22:	2300      	movs	r3, #0
 8005c24:	e01d      	b.n	8005c62 <HAL_PWREx_ConfigSupply+0x66>
    }
  }

  /* Set the power supply configuration */
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 8005c26:	4b11      	ldr	r3, [pc, #68]	; (8005c6c <HAL_PWREx_ConfigSupply+0x70>)
 8005c28:	68db      	ldr	r3, [r3, #12]
 8005c2a:	f023 0207 	bic.w	r2, r3, #7
 8005c2e:	490f      	ldr	r1, [pc, #60]	; (8005c6c <HAL_PWREx_ConfigSupply+0x70>)
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	4313      	orrs	r3, r2
 8005c34:	60cb      	str	r3, [r1, #12]

  /* Get tick */
  tickstart = HAL_GetTick ();
 8005c36:	f7fb fd53 	bl	80016e0 <HAL_GetTick>
 8005c3a:	60f8      	str	r0, [r7, #12]

  /* Wait till voltage level flag is set */
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8005c3c:	e009      	b.n	8005c52 <HAL_PWREx_ConfigSupply+0x56>
  {
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8005c3e:	f7fb fd4f 	bl	80016e0 <HAL_GetTick>
 8005c42:	4602      	mov	r2, r0
 8005c44:	68fb      	ldr	r3, [r7, #12]
 8005c46:	1ad3      	subs	r3, r2, r3
 8005c48:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005c4c:	d901      	bls.n	8005c52 <HAL_PWREx_ConfigSupply+0x56>
    {
      return HAL_ERROR;
 8005c4e:	2301      	movs	r3, #1
 8005c50:	e007      	b.n	8005c62 <HAL_PWREx_ConfigSupply+0x66>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8005c52:	4b06      	ldr	r3, [pc, #24]	; (8005c6c <HAL_PWREx_ConfigSupply+0x70>)
 8005c54:	685b      	ldr	r3, [r3, #4]
 8005c56:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8005c5a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005c5e:	d1ee      	bne.n	8005c3e <HAL_PWREx_ConfigSupply+0x42>
      }
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
 8005c60:	2300      	movs	r3, #0
}
 8005c62:	4618      	mov	r0, r3
 8005c64:	3710      	adds	r7, #16
 8005c66:	46bd      	mov	sp, r7
 8005c68:	bd80      	pop	{r7, pc}
 8005c6a:	bf00      	nop
 8005c6c:	58024800 	.word	0x58024800

08005c70 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005c70:	b580      	push	{r7, lr}
 8005c72:	b08c      	sub	sp, #48	; 0x30
 8005c74:	af00      	add	r7, sp, #0
 8005c76:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	2b00      	cmp	r3, #0
 8005c7c:	d101      	bne.n	8005c82 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8005c7e:	2301      	movs	r3, #1
 8005c80:	e3c8      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	681b      	ldr	r3, [r3, #0]
 8005c86:	f003 0301 	and.w	r3, r3, #1
 8005c8a:	2b00      	cmp	r3, #0
 8005c8c:	f000 8087 	beq.w	8005d9e <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8005c90:	4b88      	ldr	r3, [pc, #544]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005c92:	691b      	ldr	r3, [r3, #16]
 8005c94:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8005c98:	62fb      	str	r3, [r7, #44]	; 0x2c
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8005c9a:	4b86      	ldr	r3, [pc, #536]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005c9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005c9e:	62bb      	str	r3, [r7, #40]	; 0x28
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8005ca0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005ca2:	2b10      	cmp	r3, #16
 8005ca4:	d007      	beq.n	8005cb6 <HAL_RCC_OscConfig+0x46>
 8005ca6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005ca8:	2b18      	cmp	r3, #24
 8005caa:	d110      	bne.n	8005cce <HAL_RCC_OscConfig+0x5e>
 8005cac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005cae:	f003 0303 	and.w	r3, r3, #3
 8005cb2:	2b02      	cmp	r3, #2
 8005cb4:	d10b      	bne.n	8005cce <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005cb6:	4b7f      	ldr	r3, [pc, #508]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005cb8:	681b      	ldr	r3, [r3, #0]
 8005cba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005cbe:	2b00      	cmp	r3, #0
 8005cc0:	d06c      	beq.n	8005d9c <HAL_RCC_OscConfig+0x12c>
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	685b      	ldr	r3, [r3, #4]
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d168      	bne.n	8005d9c <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 8005cca:	2301      	movs	r3, #1
 8005ccc:	e3a2      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	685b      	ldr	r3, [r3, #4]
 8005cd2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005cd6:	d106      	bne.n	8005ce6 <HAL_RCC_OscConfig+0x76>
 8005cd8:	4b76      	ldr	r3, [pc, #472]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	4a75      	ldr	r2, [pc, #468]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005cde:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005ce2:	6013      	str	r3, [r2, #0]
 8005ce4:	e02e      	b.n	8005d44 <HAL_RCC_OscConfig+0xd4>
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	685b      	ldr	r3, [r3, #4]
 8005cea:	2b00      	cmp	r3, #0
 8005cec:	d10c      	bne.n	8005d08 <HAL_RCC_OscConfig+0x98>
 8005cee:	4b71      	ldr	r3, [pc, #452]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005cf0:	681b      	ldr	r3, [r3, #0]
 8005cf2:	4a70      	ldr	r2, [pc, #448]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005cf4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005cf8:	6013      	str	r3, [r2, #0]
 8005cfa:	4b6e      	ldr	r3, [pc, #440]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	4a6d      	ldr	r2, [pc, #436]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d00:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005d04:	6013      	str	r3, [r2, #0]
 8005d06:	e01d      	b.n	8005d44 <HAL_RCC_OscConfig+0xd4>
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	685b      	ldr	r3, [r3, #4]
 8005d0c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005d10:	d10c      	bne.n	8005d2c <HAL_RCC_OscConfig+0xbc>
 8005d12:	4b68      	ldr	r3, [pc, #416]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d14:	681b      	ldr	r3, [r3, #0]
 8005d16:	4a67      	ldr	r2, [pc, #412]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d18:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005d1c:	6013      	str	r3, [r2, #0]
 8005d1e:	4b65      	ldr	r3, [pc, #404]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d20:	681b      	ldr	r3, [r3, #0]
 8005d22:	4a64      	ldr	r2, [pc, #400]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d24:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005d28:	6013      	str	r3, [r2, #0]
 8005d2a:	e00b      	b.n	8005d44 <HAL_RCC_OscConfig+0xd4>
 8005d2c:	4b61      	ldr	r3, [pc, #388]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d2e:	681b      	ldr	r3, [r3, #0]
 8005d30:	4a60      	ldr	r2, [pc, #384]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d32:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005d36:	6013      	str	r3, [r2, #0]
 8005d38:	4b5e      	ldr	r3, [pc, #376]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	4a5d      	ldr	r2, [pc, #372]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d3e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005d42:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	685b      	ldr	r3, [r3, #4]
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	d013      	beq.n	8005d74 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005d4c:	f7fb fcc8 	bl	80016e0 <HAL_GetTick>
 8005d50:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8005d52:	e008      	b.n	8005d66 <HAL_RCC_OscConfig+0xf6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005d54:	f7fb fcc4 	bl	80016e0 <HAL_GetTick>
 8005d58:	4602      	mov	r2, r0
 8005d5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d5c:	1ad3      	subs	r3, r2, r3
 8005d5e:	2b64      	cmp	r3, #100	; 0x64
 8005d60:	d901      	bls.n	8005d66 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8005d62:	2303      	movs	r3, #3
 8005d64:	e356      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8005d66:	4b53      	ldr	r3, [pc, #332]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d0f0      	beq.n	8005d54 <HAL_RCC_OscConfig+0xe4>
 8005d72:	e014      	b.n	8005d9e <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005d74:	f7fb fcb4 	bl	80016e0 <HAL_GetTick>
 8005d78:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8005d7a:	e008      	b.n	8005d8e <HAL_RCC_OscConfig+0x11e>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005d7c:	f7fb fcb0 	bl	80016e0 <HAL_GetTick>
 8005d80:	4602      	mov	r2, r0
 8005d82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d84:	1ad3      	subs	r3, r2, r3
 8005d86:	2b64      	cmp	r3, #100	; 0x64
 8005d88:	d901      	bls.n	8005d8e <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 8005d8a:	2303      	movs	r3, #3
 8005d8c:	e342      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8005d8e:	4b49      	ldr	r3, [pc, #292]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005d96:	2b00      	cmp	r3, #0
 8005d98:	d1f0      	bne.n	8005d7c <HAL_RCC_OscConfig+0x10c>
 8005d9a:	e000      	b.n	8005d9e <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005d9c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	681b      	ldr	r3, [r3, #0]
 8005da2:	f003 0302 	and.w	r3, r3, #2
 8005da6:	2b00      	cmp	r3, #0
 8005da8:	f000 808c 	beq.w	8005ec4 <HAL_RCC_OscConfig+0x254>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8005dac:	4b41      	ldr	r3, [pc, #260]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005dae:	691b      	ldr	r3, [r3, #16]
 8005db0:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8005db4:	623b      	str	r3, [r7, #32]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8005db6:	4b3f      	ldr	r3, [pc, #252]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005db8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005dba:	61fb      	str	r3, [r7, #28]
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8005dbc:	6a3b      	ldr	r3, [r7, #32]
 8005dbe:	2b00      	cmp	r3, #0
 8005dc0:	d007      	beq.n	8005dd2 <HAL_RCC_OscConfig+0x162>
 8005dc2:	6a3b      	ldr	r3, [r7, #32]
 8005dc4:	2b18      	cmp	r3, #24
 8005dc6:	d137      	bne.n	8005e38 <HAL_RCC_OscConfig+0x1c8>
 8005dc8:	69fb      	ldr	r3, [r7, #28]
 8005dca:	f003 0303 	and.w	r3, r3, #3
 8005dce:	2b00      	cmp	r3, #0
 8005dd0:	d132      	bne.n	8005e38 <HAL_RCC_OscConfig+0x1c8>
    {
      /* When HSI is used as system clock it will not be disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8005dd2:	4b38      	ldr	r3, [pc, #224]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005dd4:	681b      	ldr	r3, [r3, #0]
 8005dd6:	f003 0304 	and.w	r3, r3, #4
 8005dda:	2b00      	cmp	r3, #0
 8005ddc:	d005      	beq.n	8005dea <HAL_RCC_OscConfig+0x17a>
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	68db      	ldr	r3, [r3, #12]
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	d101      	bne.n	8005dea <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 8005de6:	2301      	movs	r3, #1
 8005de8:	e314      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, only HSI division and calibration are allowed */
      else
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2, HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8005dea:	4b32      	ldr	r3, [pc, #200]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	f023 0219 	bic.w	r2, r3, #25
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	68db      	ldr	r3, [r3, #12]
 8005df6:	492f      	ldr	r1, [pc, #188]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005df8:	4313      	orrs	r3, r2
 8005dfa:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005dfc:	f7fb fc70 	bl	80016e0 <HAL_GetTick>
 8005e00:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8005e02:	e008      	b.n	8005e16 <HAL_RCC_OscConfig+0x1a6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005e04:	f7fb fc6c 	bl	80016e0 <HAL_GetTick>
 8005e08:	4602      	mov	r2, r0
 8005e0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005e0c:	1ad3      	subs	r3, r2, r3
 8005e0e:	2b02      	cmp	r3, #2
 8005e10:	d901      	bls.n	8005e16 <HAL_RCC_OscConfig+0x1a6>
          {
            return HAL_TIMEOUT;
 8005e12:	2303      	movs	r3, #3
 8005e14:	e2fe      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8005e16:	4b27      	ldr	r3, [pc, #156]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	f003 0304 	and.w	r3, r3, #4
 8005e1e:	2b00      	cmp	r3, #0
 8005e20:	d0f0      	beq.n	8005e04 <HAL_RCC_OscConfig+0x194>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005e22:	4b24      	ldr	r3, [pc, #144]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e24:	685b      	ldr	r3, [r3, #4]
 8005e26:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8005e2a:	687b      	ldr	r3, [r7, #4]
 8005e2c:	691b      	ldr	r3, [r3, #16]
 8005e2e:	061b      	lsls	r3, r3, #24
 8005e30:	4920      	ldr	r1, [pc, #128]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e32:	4313      	orrs	r3, r2
 8005e34:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8005e36:	e045      	b.n	8005ec4 <HAL_RCC_OscConfig+0x254>
    }

    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	68db      	ldr	r3, [r3, #12]
 8005e3c:	2b00      	cmp	r3, #0
 8005e3e:	d026      	beq.n	8005e8e <HAL_RCC_OscConfig+0x21e>
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8005e40:	4b1c      	ldr	r3, [pc, #112]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e42:	681b      	ldr	r3, [r3, #0]
 8005e44:	f023 0219 	bic.w	r2, r3, #25
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	68db      	ldr	r3, [r3, #12]
 8005e4c:	4919      	ldr	r1, [pc, #100]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e4e:	4313      	orrs	r3, r2
 8005e50:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005e52:	f7fb fc45 	bl	80016e0 <HAL_GetTick>
 8005e56:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8005e58:	e008      	b.n	8005e6c <HAL_RCC_OscConfig+0x1fc>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005e5a:	f7fb fc41 	bl	80016e0 <HAL_GetTick>
 8005e5e:	4602      	mov	r2, r0
 8005e60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005e62:	1ad3      	subs	r3, r2, r3
 8005e64:	2b02      	cmp	r3, #2
 8005e66:	d901      	bls.n	8005e6c <HAL_RCC_OscConfig+0x1fc>
          {
            return HAL_TIMEOUT;
 8005e68:	2303      	movs	r3, #3
 8005e6a:	e2d3      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8005e6c:	4b11      	ldr	r3, [pc, #68]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e6e:	681b      	ldr	r3, [r3, #0]
 8005e70:	f003 0304 	and.w	r3, r3, #4
 8005e74:	2b00      	cmp	r3, #0
 8005e76:	d0f0      	beq.n	8005e5a <HAL_RCC_OscConfig+0x1ea>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005e78:	4b0e      	ldr	r3, [pc, #56]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e7a:	685b      	ldr	r3, [r3, #4]
 8005e7c:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8005e80:	687b      	ldr	r3, [r7, #4]
 8005e82:	691b      	ldr	r3, [r3, #16]
 8005e84:	061b      	lsls	r3, r3, #24
 8005e86:	490b      	ldr	r1, [pc, #44]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e88:	4313      	orrs	r3, r2
 8005e8a:	604b      	str	r3, [r1, #4]
 8005e8c:	e01a      	b.n	8005ec4 <HAL_RCC_OscConfig+0x254>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005e8e:	4b09      	ldr	r3, [pc, #36]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	4a08      	ldr	r2, [pc, #32]	; (8005eb4 <HAL_RCC_OscConfig+0x244>)
 8005e94:	f023 0301 	bic.w	r3, r3, #1
 8005e98:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005e9a:	f7fb fc21 	bl	80016e0 <HAL_GetTick>
 8005e9e:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8005ea0:	e00a      	b.n	8005eb8 <HAL_RCC_OscConfig+0x248>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005ea2:	f7fb fc1d 	bl	80016e0 <HAL_GetTick>
 8005ea6:	4602      	mov	r2, r0
 8005ea8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005eaa:	1ad3      	subs	r3, r2, r3
 8005eac:	2b02      	cmp	r3, #2
 8005eae:	d903      	bls.n	8005eb8 <HAL_RCC_OscConfig+0x248>
          {
            return HAL_TIMEOUT;
 8005eb0:	2303      	movs	r3, #3
 8005eb2:	e2af      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
 8005eb4:	58024400 	.word	0x58024400
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8005eb8:	4b96      	ldr	r3, [pc, #600]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005eba:	681b      	ldr	r3, [r3, #0]
 8005ebc:	f003 0304 	and.w	r3, r3, #4
 8005ec0:	2b00      	cmp	r3, #0
 8005ec2:	d1ee      	bne.n	8005ea2 <HAL_RCC_OscConfig+0x232>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8005ec4:	687b      	ldr	r3, [r7, #4]
 8005ec6:	681b      	ldr	r3, [r3, #0]
 8005ec8:	f003 0310 	and.w	r3, r3, #16
 8005ecc:	2b00      	cmp	r3, #0
 8005ece:	d06a      	beq.n	8005fa6 <HAL_RCC_OscConfig+0x336>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8005ed0:	4b90      	ldr	r3, [pc, #576]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005ed2:	691b      	ldr	r3, [r3, #16]
 8005ed4:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8005ed8:	61bb      	str	r3, [r7, #24]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8005eda:	4b8e      	ldr	r3, [pc, #568]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005edc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005ede:	617b      	str	r3, [r7, #20]
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8005ee0:	69bb      	ldr	r3, [r7, #24]
 8005ee2:	2b08      	cmp	r3, #8
 8005ee4:	d007      	beq.n	8005ef6 <HAL_RCC_OscConfig+0x286>
 8005ee6:	69bb      	ldr	r3, [r7, #24]
 8005ee8:	2b18      	cmp	r3, #24
 8005eea:	d11b      	bne.n	8005f24 <HAL_RCC_OscConfig+0x2b4>
 8005eec:	697b      	ldr	r3, [r7, #20]
 8005eee:	f003 0303 	and.w	r3, r3, #3
 8005ef2:	2b01      	cmp	r3, #1
 8005ef4:	d116      	bne.n	8005f24 <HAL_RCC_OscConfig+0x2b4>
    {
      /* When CSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8005ef6:	4b87      	ldr	r3, [pc, #540]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005ef8:	681b      	ldr	r3, [r3, #0]
 8005efa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005efe:	2b00      	cmp	r3, #0
 8005f00:	d005      	beq.n	8005f0e <HAL_RCC_OscConfig+0x29e>
 8005f02:	687b      	ldr	r3, [r7, #4]
 8005f04:	69db      	ldr	r3, [r3, #28]
 8005f06:	2b80      	cmp	r3, #128	; 0x80
 8005f08:	d001      	beq.n	8005f0e <HAL_RCC_OscConfig+0x29e>
      {
        return HAL_ERROR;
 8005f0a:	2301      	movs	r3, #1
 8005f0c:	e282      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8005f0e:	4b81      	ldr	r3, [pc, #516]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f10:	68db      	ldr	r3, [r3, #12]
 8005f12:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	6a1b      	ldr	r3, [r3, #32]
 8005f1a:	061b      	lsls	r3, r3, #24
 8005f1c:	497d      	ldr	r1, [pc, #500]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f1e:	4313      	orrs	r3, r2
 8005f20:	60cb      	str	r3, [r1, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8005f22:	e040      	b.n	8005fa6 <HAL_RCC_OscConfig+0x336>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	69db      	ldr	r3, [r3, #28]
 8005f28:	2b00      	cmp	r3, #0
 8005f2a:	d023      	beq.n	8005f74 <HAL_RCC_OscConfig+0x304>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8005f2c:	4b79      	ldr	r3, [pc, #484]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	4a78      	ldr	r2, [pc, #480]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f32:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005f36:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005f38:	f7fb fbd2 	bl	80016e0 <HAL_GetTick>
 8005f3c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8005f3e:	e008      	b.n	8005f52 <HAL_RCC_OscConfig+0x2e2>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8005f40:	f7fb fbce 	bl	80016e0 <HAL_GetTick>
 8005f44:	4602      	mov	r2, r0
 8005f46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f48:	1ad3      	subs	r3, r2, r3
 8005f4a:	2b02      	cmp	r3, #2
 8005f4c:	d901      	bls.n	8005f52 <HAL_RCC_OscConfig+0x2e2>
          {
            return HAL_TIMEOUT;
 8005f4e:	2303      	movs	r3, #3
 8005f50:	e260      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8005f52:	4b70      	ldr	r3, [pc, #448]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d0f0      	beq.n	8005f40 <HAL_RCC_OscConfig+0x2d0>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8005f5e:	4b6d      	ldr	r3, [pc, #436]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f60:	68db      	ldr	r3, [r3, #12]
 8005f62:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	6a1b      	ldr	r3, [r3, #32]
 8005f6a:	061b      	lsls	r3, r3, #24
 8005f6c:	4969      	ldr	r1, [pc, #420]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f6e:	4313      	orrs	r3, r2
 8005f70:	60cb      	str	r3, [r1, #12]
 8005f72:	e018      	b.n	8005fa6 <HAL_RCC_OscConfig+0x336>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 8005f74:	4b67      	ldr	r3, [pc, #412]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f76:	681b      	ldr	r3, [r3, #0]
 8005f78:	4a66      	ldr	r2, [pc, #408]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f7a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005f7e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005f80:	f7fb fbae 	bl	80016e0 <HAL_GetTick>
 8005f84:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8005f86:	e008      	b.n	8005f9a <HAL_RCC_OscConfig+0x32a>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8005f88:	f7fb fbaa 	bl	80016e0 <HAL_GetTick>
 8005f8c:	4602      	mov	r2, r0
 8005f8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f90:	1ad3      	subs	r3, r2, r3
 8005f92:	2b02      	cmp	r3, #2
 8005f94:	d901      	bls.n	8005f9a <HAL_RCC_OscConfig+0x32a>
          {
            return HAL_TIMEOUT;
 8005f96:	2303      	movs	r3, #3
 8005f98:	e23c      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8005f9a:	4b5e      	ldr	r3, [pc, #376]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005f9c:	681b      	ldr	r3, [r3, #0]
 8005f9e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005fa2:	2b00      	cmp	r3, #0
 8005fa4:	d1f0      	bne.n	8005f88 <HAL_RCC_OscConfig+0x318>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	681b      	ldr	r3, [r3, #0]
 8005faa:	f003 0308 	and.w	r3, r3, #8
 8005fae:	2b00      	cmp	r3, #0
 8005fb0:	d036      	beq.n	8006020 <HAL_RCC_OscConfig+0x3b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	695b      	ldr	r3, [r3, #20]
 8005fb6:	2b00      	cmp	r3, #0
 8005fb8:	d019      	beq.n	8005fee <HAL_RCC_OscConfig+0x37e>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005fba:	4b56      	ldr	r3, [pc, #344]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005fbc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005fbe:	4a55      	ldr	r2, [pc, #340]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005fc0:	f043 0301 	orr.w	r3, r3, #1
 8005fc4:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005fc6:	f7fb fb8b 	bl	80016e0 <HAL_GetTick>
 8005fca:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8005fcc:	e008      	b.n	8005fe0 <HAL_RCC_OscConfig+0x370>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005fce:	f7fb fb87 	bl	80016e0 <HAL_GetTick>
 8005fd2:	4602      	mov	r2, r0
 8005fd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005fd6:	1ad3      	subs	r3, r2, r3
 8005fd8:	2b02      	cmp	r3, #2
 8005fda:	d901      	bls.n	8005fe0 <HAL_RCC_OscConfig+0x370>
        {
          return HAL_TIMEOUT;
 8005fdc:	2303      	movs	r3, #3
 8005fde:	e219      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8005fe0:	4b4c      	ldr	r3, [pc, #304]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005fe2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005fe4:	f003 0302 	and.w	r3, r3, #2
 8005fe8:	2b00      	cmp	r3, #0
 8005fea:	d0f0      	beq.n	8005fce <HAL_RCC_OscConfig+0x35e>
 8005fec:	e018      	b.n	8006020 <HAL_RCC_OscConfig+0x3b0>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005fee:	4b49      	ldr	r3, [pc, #292]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005ff0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005ff2:	4a48      	ldr	r2, [pc, #288]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8005ff4:	f023 0301 	bic.w	r3, r3, #1
 8005ff8:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005ffa:	f7fb fb71 	bl	80016e0 <HAL_GetTick>
 8005ffe:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006000:	e008      	b.n	8006014 <HAL_RCC_OscConfig+0x3a4>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006002:	f7fb fb6d 	bl	80016e0 <HAL_GetTick>
 8006006:	4602      	mov	r2, r0
 8006008:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800600a:	1ad3      	subs	r3, r2, r3
 800600c:	2b02      	cmp	r3, #2
 800600e:	d901      	bls.n	8006014 <HAL_RCC_OscConfig+0x3a4>
        {
          return HAL_TIMEOUT;
 8006010:	2303      	movs	r3, #3
 8006012:	e1ff      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006014:	4b3f      	ldr	r3, [pc, #252]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8006016:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006018:	f003 0302 	and.w	r3, r3, #2
 800601c:	2b00      	cmp	r3, #0
 800601e:	d1f0      	bne.n	8006002 <HAL_RCC_OscConfig+0x392>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	f003 0320 	and.w	r3, r3, #32
 8006028:	2b00      	cmp	r3, #0
 800602a:	d036      	beq.n	800609a <HAL_RCC_OscConfig+0x42a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	699b      	ldr	r3, [r3, #24]
 8006030:	2b00      	cmp	r3, #0
 8006032:	d019      	beq.n	8006068 <HAL_RCC_OscConfig+0x3f8>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 8006034:	4b37      	ldr	r3, [pc, #220]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8006036:	681b      	ldr	r3, [r3, #0]
 8006038:	4a36      	ldr	r2, [pc, #216]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 800603a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800603e:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 8006040:	f7fb fb4e 	bl	80016e0 <HAL_GetTick>
 8006044:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8006046:	e008      	b.n	800605a <HAL_RCC_OscConfig+0x3ea>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006048:	f7fb fb4a 	bl	80016e0 <HAL_GetTick>
 800604c:	4602      	mov	r2, r0
 800604e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006050:	1ad3      	subs	r3, r2, r3
 8006052:	2b02      	cmp	r3, #2
 8006054:	d901      	bls.n	800605a <HAL_RCC_OscConfig+0x3ea>
        {
          return HAL_TIMEOUT;
 8006056:	2303      	movs	r3, #3
 8006058:	e1dc      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 800605a:	4b2e      	ldr	r3, [pc, #184]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 800605c:	681b      	ldr	r3, [r3, #0]
 800605e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8006062:	2b00      	cmp	r3, #0
 8006064:	d0f0      	beq.n	8006048 <HAL_RCC_OscConfig+0x3d8>
 8006066:	e018      	b.n	800609a <HAL_RCC_OscConfig+0x42a>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8006068:	4b2a      	ldr	r3, [pc, #168]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 800606a:	681b      	ldr	r3, [r3, #0]
 800606c:	4a29      	ldr	r2, [pc, #164]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 800606e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006072:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 8006074:	f7fb fb34 	bl	80016e0 <HAL_GetTick>
 8006078:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 800607a:	e008      	b.n	800608e <HAL_RCC_OscConfig+0x41e>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 800607c:	f7fb fb30 	bl	80016e0 <HAL_GetTick>
 8006080:	4602      	mov	r2, r0
 8006082:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006084:	1ad3      	subs	r3, r2, r3
 8006086:	2b02      	cmp	r3, #2
 8006088:	d901      	bls.n	800608e <HAL_RCC_OscConfig+0x41e>
        {
          return HAL_TIMEOUT;
 800608a:	2303      	movs	r3, #3
 800608c:	e1c2      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 800608e:	4b21      	ldr	r3, [pc, #132]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8006090:	681b      	ldr	r3, [r3, #0]
 8006092:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8006096:	2b00      	cmp	r3, #0
 8006098:	d1f0      	bne.n	800607c <HAL_RCC_OscConfig+0x40c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800609a:	687b      	ldr	r3, [r7, #4]
 800609c:	681b      	ldr	r3, [r3, #0]
 800609e:	f003 0304 	and.w	r3, r3, #4
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	f000 8086 	beq.w	80061b4 <HAL_RCC_OscConfig+0x544>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 80060a8:	4b1b      	ldr	r3, [pc, #108]	; (8006118 <HAL_RCC_OscConfig+0x4a8>)
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	4a1a      	ldr	r2, [pc, #104]	; (8006118 <HAL_RCC_OscConfig+0x4a8>)
 80060ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80060b2:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80060b4:	f7fb fb14 	bl	80016e0 <HAL_GetTick>
 80060b8:	6278      	str	r0, [r7, #36]	; 0x24

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80060ba:	e008      	b.n	80060ce <HAL_RCC_OscConfig+0x45e>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80060bc:	f7fb fb10 	bl	80016e0 <HAL_GetTick>
 80060c0:	4602      	mov	r2, r0
 80060c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060c4:	1ad3      	subs	r3, r2, r3
 80060c6:	2b64      	cmp	r3, #100	; 0x64
 80060c8:	d901      	bls.n	80060ce <HAL_RCC_OscConfig+0x45e>
      {
        return HAL_TIMEOUT;
 80060ca:	2303      	movs	r3, #3
 80060cc:	e1a2      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80060ce:	4b12      	ldr	r3, [pc, #72]	; (8006118 <HAL_RCC_OscConfig+0x4a8>)
 80060d0:	681b      	ldr	r3, [r3, #0]
 80060d2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80060d6:	2b00      	cmp	r3, #0
 80060d8:	d0f0      	beq.n	80060bc <HAL_RCC_OscConfig+0x44c>
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80060da:	687b      	ldr	r3, [r7, #4]
 80060dc:	689b      	ldr	r3, [r3, #8]
 80060de:	2b01      	cmp	r3, #1
 80060e0:	d106      	bne.n	80060f0 <HAL_RCC_OscConfig+0x480>
 80060e2:	4b0c      	ldr	r3, [pc, #48]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 80060e4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80060e6:	4a0b      	ldr	r2, [pc, #44]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 80060e8:	f043 0301 	orr.w	r3, r3, #1
 80060ec:	6713      	str	r3, [r2, #112]	; 0x70
 80060ee:	e032      	b.n	8006156 <HAL_RCC_OscConfig+0x4e6>
 80060f0:	687b      	ldr	r3, [r7, #4]
 80060f2:	689b      	ldr	r3, [r3, #8]
 80060f4:	2b00      	cmp	r3, #0
 80060f6:	d111      	bne.n	800611c <HAL_RCC_OscConfig+0x4ac>
 80060f8:	4b06      	ldr	r3, [pc, #24]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 80060fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80060fc:	4a05      	ldr	r2, [pc, #20]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 80060fe:	f023 0301 	bic.w	r3, r3, #1
 8006102:	6713      	str	r3, [r2, #112]	; 0x70
 8006104:	4b03      	ldr	r3, [pc, #12]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 8006106:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006108:	4a02      	ldr	r2, [pc, #8]	; (8006114 <HAL_RCC_OscConfig+0x4a4>)
 800610a:	f023 0304 	bic.w	r3, r3, #4
 800610e:	6713      	str	r3, [r2, #112]	; 0x70
 8006110:	e021      	b.n	8006156 <HAL_RCC_OscConfig+0x4e6>
 8006112:	bf00      	nop
 8006114:	58024400 	.word	0x58024400
 8006118:	58024800 	.word	0x58024800
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	689b      	ldr	r3, [r3, #8]
 8006120:	2b05      	cmp	r3, #5
 8006122:	d10c      	bne.n	800613e <HAL_RCC_OscConfig+0x4ce>
 8006124:	4b83      	ldr	r3, [pc, #524]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006126:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006128:	4a82      	ldr	r2, [pc, #520]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800612a:	f043 0304 	orr.w	r3, r3, #4
 800612e:	6713      	str	r3, [r2, #112]	; 0x70
 8006130:	4b80      	ldr	r3, [pc, #512]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006132:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006134:	4a7f      	ldr	r2, [pc, #508]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006136:	f043 0301 	orr.w	r3, r3, #1
 800613a:	6713      	str	r3, [r2, #112]	; 0x70
 800613c:	e00b      	b.n	8006156 <HAL_RCC_OscConfig+0x4e6>
 800613e:	4b7d      	ldr	r3, [pc, #500]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006140:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006142:	4a7c      	ldr	r2, [pc, #496]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006144:	f023 0301 	bic.w	r3, r3, #1
 8006148:	6713      	str	r3, [r2, #112]	; 0x70
 800614a:	4b7a      	ldr	r3, [pc, #488]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800614c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800614e:	4a79      	ldr	r2, [pc, #484]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006150:	f023 0304 	bic.w	r3, r3, #4
 8006154:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006156:	687b      	ldr	r3, [r7, #4]
 8006158:	689b      	ldr	r3, [r3, #8]
 800615a:	2b00      	cmp	r3, #0
 800615c:	d015      	beq.n	800618a <HAL_RCC_OscConfig+0x51a>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800615e:	f7fb fabf 	bl	80016e0 <HAL_GetTick>
 8006162:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006164:	e00a      	b.n	800617c <HAL_RCC_OscConfig+0x50c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006166:	f7fb fabb 	bl	80016e0 <HAL_GetTick>
 800616a:	4602      	mov	r2, r0
 800616c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800616e:	1ad3      	subs	r3, r2, r3
 8006170:	f241 3288 	movw	r2, #5000	; 0x1388
 8006174:	4293      	cmp	r3, r2
 8006176:	d901      	bls.n	800617c <HAL_RCC_OscConfig+0x50c>
        {
          return HAL_TIMEOUT;
 8006178:	2303      	movs	r3, #3
 800617a:	e14b      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800617c:	4b6d      	ldr	r3, [pc, #436]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800617e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006180:	f003 0302 	and.w	r3, r3, #2
 8006184:	2b00      	cmp	r3, #0
 8006186:	d0ee      	beq.n	8006166 <HAL_RCC_OscConfig+0x4f6>
 8006188:	e014      	b.n	80061b4 <HAL_RCC_OscConfig+0x544>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800618a:	f7fb faa9 	bl	80016e0 <HAL_GetTick>
 800618e:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8006190:	e00a      	b.n	80061a8 <HAL_RCC_OscConfig+0x538>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006192:	f7fb faa5 	bl	80016e0 <HAL_GetTick>
 8006196:	4602      	mov	r2, r0
 8006198:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800619a:	1ad3      	subs	r3, r2, r3
 800619c:	f241 3288 	movw	r2, #5000	; 0x1388
 80061a0:	4293      	cmp	r3, r2
 80061a2:	d901      	bls.n	80061a8 <HAL_RCC_OscConfig+0x538>
        {
          return HAL_TIMEOUT;
 80061a4:	2303      	movs	r3, #3
 80061a6:	e135      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 80061a8:	4b62      	ldr	r3, [pc, #392]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80061aa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80061ac:	f003 0302 	and.w	r3, r3, #2
 80061b0:	2b00      	cmp	r3, #0
 80061b2:	d1ee      	bne.n	8006192 <HAL_RCC_OscConfig+0x522>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061b8:	2b00      	cmp	r3, #0
 80061ba:	f000 812a 	beq.w	8006412 <HAL_RCC_OscConfig+0x7a2>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 80061be:	4b5d      	ldr	r3, [pc, #372]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80061c0:	691b      	ldr	r3, [r3, #16]
 80061c2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80061c6:	2b18      	cmp	r3, #24
 80061c8:	f000 80ba 	beq.w	8006340 <HAL_RCC_OscConfig+0x6d0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061d0:	2b02      	cmp	r3, #2
 80061d2:	f040 8095 	bne.w	8006300 <HAL_RCC_OscConfig+0x690>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80061d6:	4b57      	ldr	r3, [pc, #348]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	4a56      	ldr	r2, [pc, #344]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80061dc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80061e0:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80061e2:	f7fb fa7d 	bl	80016e0 <HAL_GetTick>
 80061e6:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80061e8:	e008      	b.n	80061fc <HAL_RCC_OscConfig+0x58c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80061ea:	f7fb fa79 	bl	80016e0 <HAL_GetTick>
 80061ee:	4602      	mov	r2, r0
 80061f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80061f2:	1ad3      	subs	r3, r2, r3
 80061f4:	2b02      	cmp	r3, #2
 80061f6:	d901      	bls.n	80061fc <HAL_RCC_OscConfig+0x58c>
          {
            return HAL_TIMEOUT;
 80061f8:	2303      	movs	r3, #3
 80061fa:	e10b      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80061fc:	4b4d      	ldr	r3, [pc, #308]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006204:	2b00      	cmp	r3, #0
 8006206:	d1f0      	bne.n	80061ea <HAL_RCC_OscConfig+0x57a>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8006208:	4b4a      	ldr	r3, [pc, #296]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800620a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800620c:	4b4a      	ldr	r3, [pc, #296]	; (8006338 <HAL_RCC_OscConfig+0x6c8>)
 800620e:	4013      	ands	r3, r2
 8006210:	687a      	ldr	r2, [r7, #4]
 8006212:	6a91      	ldr	r1, [r2, #40]	; 0x28
 8006214:	687a      	ldr	r2, [r7, #4]
 8006216:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8006218:	0112      	lsls	r2, r2, #4
 800621a:	430a      	orrs	r2, r1
 800621c:	4945      	ldr	r1, [pc, #276]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800621e:	4313      	orrs	r3, r2
 8006220:	628b      	str	r3, [r1, #40]	; 0x28
 8006222:	687b      	ldr	r3, [r7, #4]
 8006224:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006226:	3b01      	subs	r3, #1
 8006228:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800622c:	687b      	ldr	r3, [r7, #4]
 800622e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006230:	3b01      	subs	r3, #1
 8006232:	025b      	lsls	r3, r3, #9
 8006234:	b29b      	uxth	r3, r3
 8006236:	431a      	orrs	r2, r3
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800623c:	3b01      	subs	r3, #1
 800623e:	041b      	lsls	r3, r3, #16
 8006240:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8006244:	431a      	orrs	r2, r3
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800624a:	3b01      	subs	r3, #1
 800624c:	061b      	lsls	r3, r3, #24
 800624e:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 8006252:	4938      	ldr	r1, [pc, #224]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006254:	4313      	orrs	r3, r2
 8006256:	630b      	str	r3, [r1, #48]	; 0x30
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);

        /* Disable PLLFRACN . */
        __HAL_RCC_PLLFRACN_DISABLE();
 8006258:	4b36      	ldr	r3, [pc, #216]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800625a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800625c:	4a35      	ldr	r2, [pc, #212]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800625e:	f023 0301 	bic.w	r3, r3, #1
 8006262:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8006264:	4b33      	ldr	r3, [pc, #204]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006266:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006268:	4b34      	ldr	r3, [pc, #208]	; (800633c <HAL_RCC_OscConfig+0x6cc>)
 800626a:	4013      	ands	r3, r2
 800626c:	687a      	ldr	r2, [r7, #4]
 800626e:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8006270:	00d2      	lsls	r2, r2, #3
 8006272:	4930      	ldr	r1, [pc, #192]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006274:	4313      	orrs	r3, r2
 8006276:	634b      	str	r3, [r1, #52]	; 0x34

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8006278:	4b2e      	ldr	r3, [pc, #184]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800627a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800627c:	f023 020c 	bic.w	r2, r3, #12
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006284:	492b      	ldr	r1, [pc, #172]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006286:	4313      	orrs	r3, r2
 8006288:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 800628a:	4b2a      	ldr	r3, [pc, #168]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800628c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800628e:	f023 0202 	bic.w	r2, r3, #2
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006296:	4927      	ldr	r1, [pc, #156]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006298:	4313      	orrs	r3, r2
 800629a:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Enable PLL System Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 800629c:	4b25      	ldr	r3, [pc, #148]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 800629e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80062a0:	4a24      	ldr	r2, [pc, #144]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062a2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80062a6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1Q Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80062a8:	4b22      	ldr	r3, [pc, #136]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80062ac:	4a21      	ldr	r2, [pc, #132]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062ae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80062b2:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1R  Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 80062b4:	4b1f      	ldr	r3, [pc, #124]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80062b8:	4a1e      	ldr	r2, [pc, #120]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062ba:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80062be:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLLFRACN_ENABLE();
 80062c0:	4b1c      	ldr	r3, [pc, #112]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80062c4:	4a1b      	ldr	r2, [pc, #108]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062c6:	f043 0301 	orr.w	r3, r3, #1
 80062ca:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80062cc:	4b19      	ldr	r3, [pc, #100]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	4a18      	ldr	r2, [pc, #96]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062d2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80062d6:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80062d8:	f7fb fa02 	bl	80016e0 <HAL_GetTick>
 80062dc:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80062de:	e008      	b.n	80062f2 <HAL_RCC_OscConfig+0x682>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80062e0:	f7fb f9fe 	bl	80016e0 <HAL_GetTick>
 80062e4:	4602      	mov	r2, r0
 80062e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062e8:	1ad3      	subs	r3, r2, r3
 80062ea:	2b02      	cmp	r3, #2
 80062ec:	d901      	bls.n	80062f2 <HAL_RCC_OscConfig+0x682>
          {
            return HAL_TIMEOUT;
 80062ee:	2303      	movs	r3, #3
 80062f0:	e090      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80062f2:	4b10      	ldr	r3, [pc, #64]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 80062f4:	681b      	ldr	r3, [r3, #0]
 80062f6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80062fa:	2b00      	cmp	r3, #0
 80062fc:	d0f0      	beq.n	80062e0 <HAL_RCC_OscConfig+0x670>
 80062fe:	e088      	b.n	8006412 <HAL_RCC_OscConfig+0x7a2>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006300:	4b0c      	ldr	r3, [pc, #48]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006302:	681b      	ldr	r3, [r3, #0]
 8006304:	4a0b      	ldr	r2, [pc, #44]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006306:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800630a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800630c:	f7fb f9e8 	bl	80016e0 <HAL_GetTick>
 8006310:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8006312:	e008      	b.n	8006326 <HAL_RCC_OscConfig+0x6b6>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006314:	f7fb f9e4 	bl	80016e0 <HAL_GetTick>
 8006318:	4602      	mov	r2, r0
 800631a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800631c:	1ad3      	subs	r3, r2, r3
 800631e:	2b02      	cmp	r3, #2
 8006320:	d901      	bls.n	8006326 <HAL_RCC_OscConfig+0x6b6>
          {
            return HAL_TIMEOUT;
 8006322:	2303      	movs	r3, #3
 8006324:	e076      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8006326:	4b03      	ldr	r3, [pc, #12]	; (8006334 <HAL_RCC_OscConfig+0x6c4>)
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800632e:	2b00      	cmp	r3, #0
 8006330:	d1f0      	bne.n	8006314 <HAL_RCC_OscConfig+0x6a4>
 8006332:	e06e      	b.n	8006412 <HAL_RCC_OscConfig+0x7a2>
 8006334:	58024400 	.word	0x58024400
 8006338:	fffffc0c 	.word	0xfffffc0c
 800633c:	ffff0007 	.word	0xffff0007
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLLCKSELR;
 8006340:	4b36      	ldr	r3, [pc, #216]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 8006342:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006344:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 8006346:	4b35      	ldr	r3, [pc, #212]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 8006348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800634a:	60fb      	str	r3, [r7, #12]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006350:	2b01      	cmp	r3, #1
 8006352:	d031      	beq.n	80063b8 <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006354:	693b      	ldr	r3, [r7, #16]
 8006356:	f003 0203 	and.w	r2, r3, #3
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800635e:	429a      	cmp	r2, r3
 8006360:	d12a      	bne.n	80063b8 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 8006362:	693b      	ldr	r3, [r7, #16]
 8006364:	091b      	lsrs	r3, r3, #4
 8006366:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800636e:	429a      	cmp	r2, r3
 8006370:	d122      	bne.n	80063b8 <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006372:	68fb      	ldr	r3, [r7, #12]
 8006374:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800637c:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 800637e:	429a      	cmp	r2, r3
 8006380:	d11a      	bne.n	80063b8 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8006382:	68fb      	ldr	r3, [r7, #12]
 8006384:	0a5b      	lsrs	r3, r3, #9
 8006386:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800638e:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 8006390:	429a      	cmp	r2, r3
 8006392:	d111      	bne.n	80063b8 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	0c1b      	lsrs	r3, r3, #16
 8006398:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800639c:	687b      	ldr	r3, [r7, #4]
 800639e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80063a0:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80063a2:	429a      	cmp	r2, r3
 80063a4:	d108      	bne.n	80063b8 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 80063a6:	68fb      	ldr	r3, [r7, #12]
 80063a8:	0e1b      	lsrs	r3, r3, #24
 80063aa:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80063b2:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80063b4:	429a      	cmp	r2, r3
 80063b6:	d001      	beq.n	80063bc <HAL_RCC_OscConfig+0x74c>
      {
        return HAL_ERROR;
 80063b8:	2301      	movs	r3, #1
 80063ba:	e02b      	b.n	8006414 <HAL_RCC_OscConfig+0x7a4>
      }
      else
      {
        /* Check if only fractional part needs to be updated  */
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 80063bc:	4b17      	ldr	r3, [pc, #92]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 80063be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80063c0:	08db      	lsrs	r3, r3, #3
 80063c2:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80063c6:	613b      	str	r3, [r7, #16]
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80063cc:	693a      	ldr	r2, [r7, #16]
 80063ce:	429a      	cmp	r2, r3
 80063d0:	d01f      	beq.n	8006412 <HAL_RCC_OscConfig+0x7a2>
        {
          assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
          /* Disable PLL1FRACEN */
          __HAL_RCC_PLLFRACN_DISABLE();
 80063d2:	4b12      	ldr	r3, [pc, #72]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 80063d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80063d6:	4a11      	ldr	r2, [pc, #68]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 80063d8:	f023 0301 	bic.w	r3, r3, #1
 80063dc:	62d3      	str	r3, [r2, #44]	; 0x2c
          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 80063de:	f7fb f97f 	bl	80016e0 <HAL_GetTick>
 80063e2:	6278      	str	r0, [r7, #36]	; 0x24
          /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value will be taken into account. */
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 80063e4:	bf00      	nop
 80063e6:	f7fb f97b 	bl	80016e0 <HAL_GetTick>
 80063ea:	4602      	mov	r2, r0
 80063ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80063ee:	4293      	cmp	r3, r2
 80063f0:	d0f9      	beq.n	80063e6 <HAL_RCC_OscConfig+0x776>
          {
          }
          /* Configure PLL1 PLL1FRACN */
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 80063f2:	4b0a      	ldr	r3, [pc, #40]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 80063f4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80063f6:	4b0a      	ldr	r3, [pc, #40]	; (8006420 <HAL_RCC_OscConfig+0x7b0>)
 80063f8:	4013      	ands	r3, r2
 80063fa:	687a      	ldr	r2, [r7, #4]
 80063fc:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80063fe:	00d2      	lsls	r2, r2, #3
 8006400:	4906      	ldr	r1, [pc, #24]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 8006402:	4313      	orrs	r3, r2
 8006404:	634b      	str	r3, [r1, #52]	; 0x34
          /* Enable PLL1FRACEN to latch new value. */
          __HAL_RCC_PLLFRACN_ENABLE();
 8006406:	4b05      	ldr	r3, [pc, #20]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 8006408:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800640a:	4a04      	ldr	r2, [pc, #16]	; (800641c <HAL_RCC_OscConfig+0x7ac>)
 800640c:	f043 0301 	orr.w	r3, r3, #1
 8006410:	62d3      	str	r3, [r2, #44]	; 0x2c
        }
      }
    }
  }
  return HAL_OK;
 8006412:	2300      	movs	r3, #0
}
 8006414:	4618      	mov	r0, r3
 8006416:	3730      	adds	r7, #48	; 0x30
 8006418:	46bd      	mov	sp, r7
 800641a:	bd80      	pop	{r7, pc}
 800641c:	58024400 	.word	0x58024400
 8006420:	ffff0007 	.word	0xffff0007

08006424 <HAL_RCC_ClockConfig>:
  *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8006424:	b580      	push	{r7, lr}
 8006426:	b086      	sub	sp, #24
 8006428:	af00      	add	r7, sp, #0
 800642a:	6078      	str	r0, [r7, #4]
 800642c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;
  uint32_t common_system_clock;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800642e:	687b      	ldr	r3, [r7, #4]
 8006430:	2b00      	cmp	r3, #0
 8006432:	d101      	bne.n	8006438 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8006434:	2301      	movs	r3, #1
 8006436:	e19c      	b.n	8006772 <HAL_RCC_ClockConfig+0x34e>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006438:	4b8a      	ldr	r3, [pc, #552]	; (8006664 <HAL_RCC_ClockConfig+0x240>)
 800643a:	681b      	ldr	r3, [r3, #0]
 800643c:	f003 030f 	and.w	r3, r3, #15
 8006440:	683a      	ldr	r2, [r7, #0]
 8006442:	429a      	cmp	r2, r3
 8006444:	d910      	bls.n	8006468 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006446:	4b87      	ldr	r3, [pc, #540]	; (8006664 <HAL_RCC_ClockConfig+0x240>)
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	f023 020f 	bic.w	r2, r3, #15
 800644e:	4985      	ldr	r1, [pc, #532]	; (8006664 <HAL_RCC_ClockConfig+0x240>)
 8006450:	683b      	ldr	r3, [r7, #0]
 8006452:	4313      	orrs	r3, r2
 8006454:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006456:	4b83      	ldr	r3, [pc, #524]	; (8006664 <HAL_RCC_ClockConfig+0x240>)
 8006458:	681b      	ldr	r3, [r3, #0]
 800645a:	f003 030f 	and.w	r3, r3, #15
 800645e:	683a      	ldr	r2, [r7, #0]
 8006460:	429a      	cmp	r2, r3
 8006462:	d001      	beq.n	8006468 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8006464:	2301      	movs	r3, #1
 8006466:	e184      	b.n	8006772 <HAL_RCC_ClockConfig+0x34e>

  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8006468:	687b      	ldr	r3, [r7, #4]
 800646a:	681b      	ldr	r3, [r3, #0]
 800646c:	f003 0304 	and.w	r3, r3, #4
 8006470:	2b00      	cmp	r3, #0
 8006472:	d010      	beq.n	8006496 <HAL_RCC_ClockConfig+0x72>
  {
#if defined (RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	691a      	ldr	r2, [r3, #16]
 8006478:	4b7b      	ldr	r3, [pc, #492]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 800647a:	699b      	ldr	r3, [r3, #24]
 800647c:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8006480:	429a      	cmp	r2, r3
 8006482:	d908      	bls.n	8006496 <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8006484:	4b78      	ldr	r3, [pc, #480]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006486:	699b      	ldr	r3, [r3, #24]
 8006488:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	691b      	ldr	r3, [r3, #16]
 8006490:	4975      	ldr	r1, [pc, #468]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006492:	4313      	orrs	r3, r2
 8006494:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006496:	687b      	ldr	r3, [r7, #4]
 8006498:	681b      	ldr	r3, [r3, #0]
 800649a:	f003 0308 	and.w	r3, r3, #8
 800649e:	2b00      	cmp	r3, #0
 80064a0:	d010      	beq.n	80064c4 <HAL_RCC_ClockConfig+0xa0>
  {
#if defined (RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	695a      	ldr	r2, [r3, #20]
 80064a6:	4b70      	ldr	r3, [pc, #448]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80064a8:	69db      	ldr	r3, [r3, #28]
 80064aa:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80064ae:	429a      	cmp	r2, r3
 80064b0:	d908      	bls.n	80064c4 <HAL_RCC_ClockConfig+0xa0>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80064b2:	4b6d      	ldr	r3, [pc, #436]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80064b4:	69db      	ldr	r3, [r3, #28]
 80064b6:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	695b      	ldr	r3, [r3, #20]
 80064be:	496a      	ldr	r1, [pc, #424]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80064c0:	4313      	orrs	r3, r2
 80064c2:	61cb      	str	r3, [r1, #28]
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
    }
#endif
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80064c4:	687b      	ldr	r3, [r7, #4]
 80064c6:	681b      	ldr	r3, [r3, #0]
 80064c8:	f003 0310 	and.w	r3, r3, #16
 80064cc:	2b00      	cmp	r3, #0
 80064ce:	d010      	beq.n	80064f2 <HAL_RCC_ClockConfig+0xce>
  {
#if defined(RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	699a      	ldr	r2, [r3, #24]
 80064d4:	4b64      	ldr	r3, [pc, #400]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80064d6:	69db      	ldr	r3, [r3, #28]
 80064d8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80064dc:	429a      	cmp	r2, r3
 80064de:	d908      	bls.n	80064f2 <HAL_RCC_ClockConfig+0xce>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80064e0:	4b61      	ldr	r3, [pc, #388]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80064e2:	69db      	ldr	r3, [r3, #28]
 80064e4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	699b      	ldr	r3, [r3, #24]
 80064ec:	495e      	ldr	r1, [pc, #376]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80064ee:	4313      	orrs	r3, r2
 80064f0:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80064f2:	687b      	ldr	r3, [r7, #4]
 80064f4:	681b      	ldr	r3, [r3, #0]
 80064f6:	f003 0320 	and.w	r3, r3, #32
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	d010      	beq.n	8006520 <HAL_RCC_ClockConfig+0xfc>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	69da      	ldr	r2, [r3, #28]
 8006502:	4b59      	ldr	r3, [pc, #356]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006504:	6a1b      	ldr	r3, [r3, #32]
 8006506:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800650a:	429a      	cmp	r2, r3
 800650c:	d908      	bls.n	8006520 <HAL_RCC_ClockConfig+0xfc>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 800650e:	4b56      	ldr	r3, [pc, #344]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006510:	6a1b      	ldr	r3, [r3, #32]
 8006512:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	69db      	ldr	r3, [r3, #28]
 800651a:	4953      	ldr	r1, [pc, #332]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 800651c:	4313      	orrs	r3, r2
 800651e:	620b      	str	r3, [r1, #32]
    }
#endif
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	681b      	ldr	r3, [r3, #0]
 8006524:	f003 0302 	and.w	r3, r3, #2
 8006528:	2b00      	cmp	r3, #0
 800652a:	d010      	beq.n	800654e <HAL_RCC_ClockConfig+0x12a>
  {
#if defined (RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	68da      	ldr	r2, [r3, #12]
 8006530:	4b4d      	ldr	r3, [pc, #308]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006532:	699b      	ldr	r3, [r3, #24]
 8006534:	f003 030f 	and.w	r3, r3, #15
 8006538:	429a      	cmp	r2, r3
 800653a:	d908      	bls.n	800654e <HAL_RCC_ClockConfig+0x12a>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800653c:	4b4a      	ldr	r3, [pc, #296]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 800653e:	699b      	ldr	r3, [r3, #24]
 8006540:	f023 020f 	bic.w	r2, r3, #15
 8006544:	687b      	ldr	r3, [r7, #4]
 8006546:	68db      	ldr	r3, [r3, #12]
 8006548:	4947      	ldr	r1, [pc, #284]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 800654a:	4313      	orrs	r3, r2
 800654c:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*------------------------- SYSCLK Configuration -------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	681b      	ldr	r3, [r3, #0]
 8006552:	f003 0301 	and.w	r3, r3, #1
 8006556:	2b00      	cmp	r3, #0
 8006558:	d055      	beq.n	8006606 <HAL_RCC_ClockConfig+0x1e2>
  {
    assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
#if defined(RCC_D1CFGR_D1CPRE)
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 800655a:	4b43      	ldr	r3, [pc, #268]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 800655c:	699b      	ldr	r3, [r3, #24]
 800655e:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	689b      	ldr	r3, [r3, #8]
 8006566:	4940      	ldr	r1, [pc, #256]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006568:	4313      	orrs	r3, r2
 800656a:	618b      	str	r3, [r1, #24]
#else
    MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
#endif
    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	685b      	ldr	r3, [r3, #4]
 8006570:	2b02      	cmp	r3, #2
 8006572:	d107      	bne.n	8006584 <HAL_RCC_ClockConfig+0x160>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006574:	4b3c      	ldr	r3, [pc, #240]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006576:	681b      	ldr	r3, [r3, #0]
 8006578:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800657c:	2b00      	cmp	r3, #0
 800657e:	d121      	bne.n	80065c4 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8006580:	2301      	movs	r3, #1
 8006582:	e0f6      	b.n	8006772 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	685b      	ldr	r3, [r3, #4]
 8006588:	2b03      	cmp	r3, #3
 800658a:	d107      	bne.n	800659c <HAL_RCC_ClockConfig+0x178>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800658c:	4b36      	ldr	r3, [pc, #216]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 800658e:	681b      	ldr	r3, [r3, #0]
 8006590:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006594:	2b00      	cmp	r3, #0
 8006596:	d115      	bne.n	80065c4 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8006598:	2301      	movs	r3, #1
 800659a:	e0ea      	b.n	8006772 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* CSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	685b      	ldr	r3, [r3, #4]
 80065a0:	2b01      	cmp	r3, #1
 80065a2:	d107      	bne.n	80065b4 <HAL_RCC_ClockConfig+0x190>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80065a4:	4b30      	ldr	r3, [pc, #192]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80065ac:	2b00      	cmp	r3, #0
 80065ae:	d109      	bne.n	80065c4 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80065b0:	2301      	movs	r3, #1
 80065b2:	e0de      	b.n	8006772 <HAL_RCC_ClockConfig+0x34e>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80065b4:	4b2c      	ldr	r3, [pc, #176]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80065b6:	681b      	ldr	r3, [r3, #0]
 80065b8:	f003 0304 	and.w	r3, r3, #4
 80065bc:	2b00      	cmp	r3, #0
 80065be:	d101      	bne.n	80065c4 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80065c0:	2301      	movs	r3, #1
 80065c2:	e0d6      	b.n	8006772 <HAL_RCC_ClockConfig+0x34e>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80065c4:	4b28      	ldr	r3, [pc, #160]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80065c6:	691b      	ldr	r3, [r3, #16]
 80065c8:	f023 0207 	bic.w	r2, r3, #7
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	685b      	ldr	r3, [r3, #4]
 80065d0:	4925      	ldr	r1, [pc, #148]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80065d2:	4313      	orrs	r3, r2
 80065d4:	610b      	str	r3, [r1, #16]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80065d6:	f7fb f883 	bl	80016e0 <HAL_GetTick>
 80065da:	6178      	str	r0, [r7, #20]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80065dc:	e00a      	b.n	80065f4 <HAL_RCC_ClockConfig+0x1d0>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80065de:	f7fb f87f 	bl	80016e0 <HAL_GetTick>
 80065e2:	4602      	mov	r2, r0
 80065e4:	697b      	ldr	r3, [r7, #20]
 80065e6:	1ad3      	subs	r3, r2, r3
 80065e8:	f241 3288 	movw	r2, #5000	; 0x1388
 80065ec:	4293      	cmp	r3, r2
 80065ee:	d901      	bls.n	80065f4 <HAL_RCC_ClockConfig+0x1d0>
      {
        return HAL_TIMEOUT;
 80065f0:	2303      	movs	r3, #3
 80065f2:	e0be      	b.n	8006772 <HAL_RCC_ClockConfig+0x34e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80065f4:	4b1c      	ldr	r3, [pc, #112]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 80065f6:	691b      	ldr	r3, [r3, #16]
 80065f8:	f003 0238 	and.w	r2, r3, #56	; 0x38
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	685b      	ldr	r3, [r3, #4]
 8006600:	00db      	lsls	r3, r3, #3
 8006602:	429a      	cmp	r2, r3
 8006604:	d1eb      	bne.n	80065de <HAL_RCC_ClockConfig+0x1ba>

  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006606:	687b      	ldr	r3, [r7, #4]
 8006608:	681b      	ldr	r3, [r3, #0]
 800660a:	f003 0302 	and.w	r3, r3, #2
 800660e:	2b00      	cmp	r3, #0
 8006610:	d010      	beq.n	8006634 <HAL_RCC_ClockConfig+0x210>
  {
#if defined(RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	68da      	ldr	r2, [r3, #12]
 8006616:	4b14      	ldr	r3, [pc, #80]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006618:	699b      	ldr	r3, [r3, #24]
 800661a:	f003 030f 	and.w	r3, r3, #15
 800661e:	429a      	cmp	r2, r3
 8006620:	d208      	bcs.n	8006634 <HAL_RCC_ClockConfig+0x210>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006622:	4b11      	ldr	r3, [pc, #68]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006624:	699b      	ldr	r3, [r3, #24]
 8006626:	f023 020f 	bic.w	r2, r3, #15
 800662a:	687b      	ldr	r3, [r7, #4]
 800662c:	68db      	ldr	r3, [r3, #12]
 800662e:	490e      	ldr	r1, [pc, #56]	; (8006668 <HAL_RCC_ClockConfig+0x244>)
 8006630:	4313      	orrs	r3, r2
 8006632:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006634:	4b0b      	ldr	r3, [pc, #44]	; (8006664 <HAL_RCC_ClockConfig+0x240>)
 8006636:	681b      	ldr	r3, [r3, #0]
 8006638:	f003 030f 	and.w	r3, r3, #15
 800663c:	683a      	ldr	r2, [r7, #0]
 800663e:	429a      	cmp	r2, r3
 8006640:	d214      	bcs.n	800666c <HAL_RCC_ClockConfig+0x248>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006642:	4b08      	ldr	r3, [pc, #32]	; (8006664 <HAL_RCC_ClockConfig+0x240>)
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	f023 020f 	bic.w	r2, r3, #15
 800664a:	4906      	ldr	r1, [pc, #24]	; (8006664 <HAL_RCC_ClockConfig+0x240>)
 800664c:	683b      	ldr	r3, [r7, #0]
 800664e:	4313      	orrs	r3, r2
 8006650:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006652:	4b04      	ldr	r3, [pc, #16]	; (8006664 <HAL_RCC_ClockConfig+0x240>)
 8006654:	681b      	ldr	r3, [r3, #0]
 8006656:	f003 030f 	and.w	r3, r3, #15
 800665a:	683a      	ldr	r2, [r7, #0]
 800665c:	429a      	cmp	r2, r3
 800665e:	d005      	beq.n	800666c <HAL_RCC_ClockConfig+0x248>
    {
      return HAL_ERROR;
 8006660:	2301      	movs	r3, #1
 8006662:	e086      	b.n	8006772 <HAL_RCC_ClockConfig+0x34e>
 8006664:	52002000 	.word	0x52002000
 8006668:	58024400 	.word	0x58024400
    }
  }

  /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	681b      	ldr	r3, [r3, #0]
 8006670:	f003 0304 	and.w	r3, r3, #4
 8006674:	2b00      	cmp	r3, #0
 8006676:	d010      	beq.n	800669a <HAL_RCC_ClockConfig+0x276>
  {
#if defined(RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	691a      	ldr	r2, [r3, #16]
 800667c:	4b3f      	ldr	r3, [pc, #252]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 800667e:	699b      	ldr	r3, [r3, #24]
 8006680:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8006684:	429a      	cmp	r2, r3
 8006686:	d208      	bcs.n	800669a <HAL_RCC_ClockConfig+0x276>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8006688:	4b3c      	ldr	r3, [pc, #240]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 800668a:	699b      	ldr	r3, [r3, #24]
 800668c:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	691b      	ldr	r3, [r3, #16]
 8006694:	4939      	ldr	r1, [pc, #228]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 8006696:	4313      	orrs	r3, r2
 8006698:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	f003 0308 	and.w	r3, r3, #8
 80066a2:	2b00      	cmp	r3, #0
 80066a4:	d010      	beq.n	80066c8 <HAL_RCC_ClockConfig+0x2a4>
  {
#if defined(RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80066a6:	687b      	ldr	r3, [r7, #4]
 80066a8:	695a      	ldr	r2, [r3, #20]
 80066aa:	4b34      	ldr	r3, [pc, #208]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 80066ac:	69db      	ldr	r3, [r3, #28]
 80066ae:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80066b2:	429a      	cmp	r2, r3
 80066b4:	d208      	bcs.n	80066c8 <HAL_RCC_ClockConfig+0x2a4>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80066b6:	4b31      	ldr	r3, [pc, #196]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 80066b8:	69db      	ldr	r3, [r3, #28]
 80066ba:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80066be:	687b      	ldr	r3, [r7, #4]
 80066c0:	695b      	ldr	r3, [r3, #20]
 80066c2:	492e      	ldr	r1, [pc, #184]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 80066c4:	4313      	orrs	r3, r2
 80066c6:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	681b      	ldr	r3, [r3, #0]
 80066cc:	f003 0310 	and.w	r3, r3, #16
 80066d0:	2b00      	cmp	r3, #0
 80066d2:	d010      	beq.n	80066f6 <HAL_RCC_ClockConfig+0x2d2>
  {
#if defined (RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	699a      	ldr	r2, [r3, #24]
 80066d8:	4b28      	ldr	r3, [pc, #160]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 80066da:	69db      	ldr	r3, [r3, #28]
 80066dc:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80066e0:	429a      	cmp	r2, r3
 80066e2:	d208      	bcs.n	80066f6 <HAL_RCC_ClockConfig+0x2d2>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80066e4:	4b25      	ldr	r3, [pc, #148]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 80066e6:	69db      	ldr	r3, [r3, #28]
 80066e8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80066ec:	687b      	ldr	r3, [r7, #4]
 80066ee:	699b      	ldr	r3, [r3, #24]
 80066f0:	4922      	ldr	r1, [pc, #136]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 80066f2:	4313      	orrs	r3, r2
 80066f4:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	681b      	ldr	r3, [r3, #0]
 80066fa:	f003 0320 	and.w	r3, r3, #32
 80066fe:	2b00      	cmp	r3, #0
 8006700:	d010      	beq.n	8006724 <HAL_RCC_ClockConfig+0x300>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 8006702:	687b      	ldr	r3, [r7, #4]
 8006704:	69da      	ldr	r2, [r3, #28]
 8006706:	4b1d      	ldr	r3, [pc, #116]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 8006708:	6a1b      	ldr	r3, [r3, #32]
 800670a:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800670e:	429a      	cmp	r2, r3
 8006710:	d208      	bcs.n	8006724 <HAL_RCC_ClockConfig+0x300>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 8006712:	4b1a      	ldr	r3, [pc, #104]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 8006714:	6a1b      	ldr	r3, [r3, #32]
 8006716:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	69db      	ldr	r3, [r3, #28]
 800671e:	4917      	ldr	r1, [pc, #92]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 8006720:	4313      	orrs	r3, r2
 8006722:	620b      	str	r3, [r1, #32]
#endif
  }

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8006724:	f000 f834 	bl	8006790 <HAL_RCC_GetSysClockFreq>
 8006728:	4602      	mov	r2, r0
 800672a:	4b14      	ldr	r3, [pc, #80]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 800672c:	699b      	ldr	r3, [r3, #24]
 800672e:	0a1b      	lsrs	r3, r3, #8
 8006730:	f003 030f 	and.w	r3, r3, #15
 8006734:	4912      	ldr	r1, [pc, #72]	; (8006780 <HAL_RCC_ClockConfig+0x35c>)
 8006736:	5ccb      	ldrb	r3, [r1, r3]
 8006738:	f003 031f 	and.w	r3, r3, #31
 800673c:	fa22 f303 	lsr.w	r3, r2, r3
 8006740:	613b      	str	r3, [r7, #16]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8006742:	4b0e      	ldr	r3, [pc, #56]	; (800677c <HAL_RCC_ClockConfig+0x358>)
 8006744:	699b      	ldr	r3, [r3, #24]
 8006746:	f003 030f 	and.w	r3, r3, #15
 800674a:	4a0d      	ldr	r2, [pc, #52]	; (8006780 <HAL_RCC_ClockConfig+0x35c>)
 800674c:	5cd3      	ldrb	r3, [r2, r3]
 800674e:	f003 031f 	and.w	r3, r3, #31
 8006752:	693a      	ldr	r2, [r7, #16]
 8006754:	fa22 f303 	lsr.w	r3, r2, r3
 8006758:	4a0a      	ldr	r2, [pc, #40]	; (8006784 <HAL_RCC_ClockConfig+0x360>)
 800675a:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 800675c:	4a0a      	ldr	r2, [pc, #40]	; (8006788 <HAL_RCC_ClockConfig+0x364>)
 800675e:	693b      	ldr	r3, [r7, #16]
 8006760:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 8006762:	4b0a      	ldr	r3, [pc, #40]	; (800678c <HAL_RCC_ClockConfig+0x368>)
 8006764:	681b      	ldr	r3, [r3, #0]
 8006766:	4618      	mov	r0, r3
 8006768:	f7fa ff70 	bl	800164c <HAL_InitTick>
 800676c:	4603      	mov	r3, r0
 800676e:	73fb      	strb	r3, [r7, #15]

  return halstatus;
 8006770:	7bfb      	ldrb	r3, [r7, #15]
}
 8006772:	4618      	mov	r0, r3
 8006774:	3718      	adds	r7, #24
 8006776:	46bd      	mov	sp, r7
 8006778:	bd80      	pop	{r7, pc}
 800677a:	bf00      	nop
 800677c:	58024400 	.word	0x58024400
 8006780:	08023978 	.word	0x08023978
 8006784:	24000008 	.word	0x24000008
 8006788:	24000004 	.word	0x24000004
 800678c:	2400000c 	.word	0x2400000c

08006790 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8006790:	b480      	push	{r7}
 8006792:	b089      	sub	sp, #36	; 0x24
 8006794:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006796:	4bb3      	ldr	r3, [pc, #716]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8006798:	691b      	ldr	r3, [r3, #16]
 800679a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800679e:	2b18      	cmp	r3, #24
 80067a0:	f200 8155 	bhi.w	8006a4e <HAL_RCC_GetSysClockFreq+0x2be>
 80067a4:	a201      	add	r2, pc, #4	; (adr r2, 80067ac <HAL_RCC_GetSysClockFreq+0x1c>)
 80067a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80067aa:	bf00      	nop
 80067ac:	08006811 	.word	0x08006811
 80067b0:	08006a4f 	.word	0x08006a4f
 80067b4:	08006a4f 	.word	0x08006a4f
 80067b8:	08006a4f 	.word	0x08006a4f
 80067bc:	08006a4f 	.word	0x08006a4f
 80067c0:	08006a4f 	.word	0x08006a4f
 80067c4:	08006a4f 	.word	0x08006a4f
 80067c8:	08006a4f 	.word	0x08006a4f
 80067cc:	08006837 	.word	0x08006837
 80067d0:	08006a4f 	.word	0x08006a4f
 80067d4:	08006a4f 	.word	0x08006a4f
 80067d8:	08006a4f 	.word	0x08006a4f
 80067dc:	08006a4f 	.word	0x08006a4f
 80067e0:	08006a4f 	.word	0x08006a4f
 80067e4:	08006a4f 	.word	0x08006a4f
 80067e8:	08006a4f 	.word	0x08006a4f
 80067ec:	0800683d 	.word	0x0800683d
 80067f0:	08006a4f 	.word	0x08006a4f
 80067f4:	08006a4f 	.word	0x08006a4f
 80067f8:	08006a4f 	.word	0x08006a4f
 80067fc:	08006a4f 	.word	0x08006a4f
 8006800:	08006a4f 	.word	0x08006a4f
 8006804:	08006a4f 	.word	0x08006a4f
 8006808:	08006a4f 	.word	0x08006a4f
 800680c:	08006843 	.word	0x08006843
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8006810:	4b94      	ldr	r3, [pc, #592]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8006812:	681b      	ldr	r3, [r3, #0]
 8006814:	f003 0320 	and.w	r3, r3, #32
 8006818:	2b00      	cmp	r3, #0
 800681a:	d009      	beq.n	8006830 <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800681c:	4b91      	ldr	r3, [pc, #580]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	08db      	lsrs	r3, r3, #3
 8006822:	f003 0303 	and.w	r3, r3, #3
 8006826:	4a90      	ldr	r2, [pc, #576]	; (8006a68 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8006828:	fa22 f303 	lsr.w	r3, r2, r3
 800682c:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 800682e:	e111      	b.n	8006a54 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 8006830:	4b8d      	ldr	r3, [pc, #564]	; (8006a68 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8006832:	61bb      	str	r3, [r7, #24]
      break;
 8006834:	e10e      	b.n	8006a54 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 8006836:	4b8d      	ldr	r3, [pc, #564]	; (8006a6c <HAL_RCC_GetSysClockFreq+0x2dc>)
 8006838:	61bb      	str	r3, [r7, #24]
      break;
 800683a:	e10b      	b.n	8006a54 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 800683c:	4b8c      	ldr	r3, [pc, #560]	; (8006a70 <HAL_RCC_GetSysClockFreq+0x2e0>)
 800683e:	61bb      	str	r3, [r7, #24]
      break;
 8006840:	e108      	b.n	8006a54 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8006842:	4b88      	ldr	r3, [pc, #544]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8006844:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006846:	f003 0303 	and.w	r3, r3, #3
 800684a:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 800684c:	4b85      	ldr	r3, [pc, #532]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800684e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006850:	091b      	lsrs	r3, r3, #4
 8006852:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006856:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8006858:	4b82      	ldr	r3, [pc, #520]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800685a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800685c:	f003 0301 	and.w	r3, r3, #1
 8006860:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8006862:	4b80      	ldr	r3, [pc, #512]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8006864:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006866:	08db      	lsrs	r3, r3, #3
 8006868:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800686c:	68fa      	ldr	r2, [r7, #12]
 800686e:	fb02 f303 	mul.w	r3, r2, r3
 8006872:	ee07 3a90 	vmov	s15, r3
 8006876:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800687a:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 800687e:	693b      	ldr	r3, [r7, #16]
 8006880:	2b00      	cmp	r3, #0
 8006882:	f000 80e1 	beq.w	8006a48 <HAL_RCC_GetSysClockFreq+0x2b8>
 8006886:	697b      	ldr	r3, [r7, #20]
 8006888:	2b02      	cmp	r3, #2
 800688a:	f000 8083 	beq.w	8006994 <HAL_RCC_GetSysClockFreq+0x204>
 800688e:	697b      	ldr	r3, [r7, #20]
 8006890:	2b02      	cmp	r3, #2
 8006892:	f200 80a1 	bhi.w	80069d8 <HAL_RCC_GetSysClockFreq+0x248>
 8006896:	697b      	ldr	r3, [r7, #20]
 8006898:	2b00      	cmp	r3, #0
 800689a:	d003      	beq.n	80068a4 <HAL_RCC_GetSysClockFreq+0x114>
 800689c:	697b      	ldr	r3, [r7, #20]
 800689e:	2b01      	cmp	r3, #1
 80068a0:	d056      	beq.n	8006950 <HAL_RCC_GetSysClockFreq+0x1c0>
 80068a2:	e099      	b.n	80069d8 <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80068a4:	4b6f      	ldr	r3, [pc, #444]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80068a6:	681b      	ldr	r3, [r3, #0]
 80068a8:	f003 0320 	and.w	r3, r3, #32
 80068ac:	2b00      	cmp	r3, #0
 80068ae:	d02d      	beq.n	800690c <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80068b0:	4b6c      	ldr	r3, [pc, #432]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80068b2:	681b      	ldr	r3, [r3, #0]
 80068b4:	08db      	lsrs	r3, r3, #3
 80068b6:	f003 0303 	and.w	r3, r3, #3
 80068ba:	4a6b      	ldr	r2, [pc, #428]	; (8006a68 <HAL_RCC_GetSysClockFreq+0x2d8>)
 80068bc:	fa22 f303 	lsr.w	r3, r2, r3
 80068c0:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	ee07 3a90 	vmov	s15, r3
 80068c8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80068cc:	693b      	ldr	r3, [r7, #16]
 80068ce:	ee07 3a90 	vmov	s15, r3
 80068d2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80068d6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80068da:	4b62      	ldr	r3, [pc, #392]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80068dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80068de:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80068e2:	ee07 3a90 	vmov	s15, r3
 80068e6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80068ea:	ed97 6a02 	vldr	s12, [r7, #8]
 80068ee:	eddf 5a61 	vldr	s11, [pc, #388]	; 8006a74 <HAL_RCC_GetSysClockFreq+0x2e4>
 80068f2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80068f6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80068fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80068fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006902:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006906:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 800690a:	e087      	b.n	8006a1c <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800690c:	693b      	ldr	r3, [r7, #16]
 800690e:	ee07 3a90 	vmov	s15, r3
 8006912:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006916:	eddf 6a58 	vldr	s13, [pc, #352]	; 8006a78 <HAL_RCC_GetSysClockFreq+0x2e8>
 800691a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800691e:	4b51      	ldr	r3, [pc, #324]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8006920:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006922:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006926:	ee07 3a90 	vmov	s15, r3
 800692a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800692e:	ed97 6a02 	vldr	s12, [r7, #8]
 8006932:	eddf 5a50 	vldr	s11, [pc, #320]	; 8006a74 <HAL_RCC_GetSysClockFreq+0x2e4>
 8006936:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800693a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800693e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8006942:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006946:	ee67 7a27 	vmul.f32	s15, s14, s15
 800694a:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 800694e:	e065      	b.n	8006a1c <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006950:	693b      	ldr	r3, [r7, #16]
 8006952:	ee07 3a90 	vmov	s15, r3
 8006956:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800695a:	eddf 6a48 	vldr	s13, [pc, #288]	; 8006a7c <HAL_RCC_GetSysClockFreq+0x2ec>
 800695e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006962:	4b40      	ldr	r3, [pc, #256]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8006964:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006966:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800696a:	ee07 3a90 	vmov	s15, r3
 800696e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006972:	ed97 6a02 	vldr	s12, [r7, #8]
 8006976:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8006a74 <HAL_RCC_GetSysClockFreq+0x2e4>
 800697a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800697e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006982:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8006986:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800698a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800698e:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8006992:	e043      	b.n	8006a1c <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8006994:	693b      	ldr	r3, [r7, #16]
 8006996:	ee07 3a90 	vmov	s15, r3
 800699a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800699e:	eddf 6a38 	vldr	s13, [pc, #224]	; 8006a80 <HAL_RCC_GetSysClockFreq+0x2f0>
 80069a2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80069a6:	4b2f      	ldr	r3, [pc, #188]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80069a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069aa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80069ae:	ee07 3a90 	vmov	s15, r3
 80069b2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80069b6:	ed97 6a02 	vldr	s12, [r7, #8]
 80069ba:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8006a74 <HAL_RCC_GetSysClockFreq+0x2e4>
 80069be:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80069c2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80069c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80069ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80069ce:	ee67 7a27 	vmul.f32	s15, s14, s15
 80069d2:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 80069d6:	e021      	b.n	8006a1c <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80069d8:	693b      	ldr	r3, [r7, #16]
 80069da:	ee07 3a90 	vmov	s15, r3
 80069de:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80069e2:	eddf 6a26 	vldr	s13, [pc, #152]	; 8006a7c <HAL_RCC_GetSysClockFreq+0x2ec>
 80069e6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80069ea:	4b1e      	ldr	r3, [pc, #120]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80069ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069ee:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80069f2:	ee07 3a90 	vmov	s15, r3
 80069f6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80069fa:	ed97 6a02 	vldr	s12, [r7, #8]
 80069fe:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8006a74 <HAL_RCC_GetSysClockFreq+0x2e4>
 8006a02:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006a06:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006a0a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8006a0e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006a12:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006a16:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8006a1a:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8006a1c:	4b11      	ldr	r3, [pc, #68]	; (8006a64 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8006a1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a20:	0a5b      	lsrs	r3, r3, #9
 8006a22:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006a26:	3301      	adds	r3, #1
 8006a28:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8006a2a:	683b      	ldr	r3, [r7, #0]
 8006a2c:	ee07 3a90 	vmov	s15, r3
 8006a30:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8006a34:	edd7 6a07 	vldr	s13, [r7, #28]
 8006a38:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006a3c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006a40:	ee17 3a90 	vmov	r3, s15
 8006a44:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8006a46:	e005      	b.n	8006a54 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8006a48:	2300      	movs	r3, #0
 8006a4a:	61bb      	str	r3, [r7, #24]
      break;
 8006a4c:	e002      	b.n	8006a54 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 8006a4e:	4b07      	ldr	r3, [pc, #28]	; (8006a6c <HAL_RCC_GetSysClockFreq+0x2dc>)
 8006a50:	61bb      	str	r3, [r7, #24]
      break;
 8006a52:	bf00      	nop
  }

  return sysclockfreq;
 8006a54:	69bb      	ldr	r3, [r7, #24]
}
 8006a56:	4618      	mov	r0, r3
 8006a58:	3724      	adds	r7, #36	; 0x24
 8006a5a:	46bd      	mov	sp, r7
 8006a5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a60:	4770      	bx	lr
 8006a62:	bf00      	nop
 8006a64:	58024400 	.word	0x58024400
 8006a68:	03d09000 	.word	0x03d09000
 8006a6c:	003d0900 	.word	0x003d0900
 8006a70:	017d7840 	.word	0x017d7840
 8006a74:	46000000 	.word	0x46000000
 8006a78:	4c742400 	.word	0x4c742400
 8006a7c:	4a742400 	.word	0x4a742400
 8006a80:	4bbebc20 	.word	0x4bbebc20

08006a84 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8006a84:	b580      	push	{r7, lr}
 8006a86:	b082      	sub	sp, #8
 8006a88:	af00      	add	r7, sp, #0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8006a8a:	f7ff fe81 	bl	8006790 <HAL_RCC_GetSysClockFreq>
 8006a8e:	4602      	mov	r2, r0
 8006a90:	4b10      	ldr	r3, [pc, #64]	; (8006ad4 <HAL_RCC_GetHCLKFreq+0x50>)
 8006a92:	699b      	ldr	r3, [r3, #24]
 8006a94:	0a1b      	lsrs	r3, r3, #8
 8006a96:	f003 030f 	and.w	r3, r3, #15
 8006a9a:	490f      	ldr	r1, [pc, #60]	; (8006ad8 <HAL_RCC_GetHCLKFreq+0x54>)
 8006a9c:	5ccb      	ldrb	r3, [r1, r3]
 8006a9e:	f003 031f 	and.w	r3, r3, #31
 8006aa2:	fa22 f303 	lsr.w	r3, r2, r3
 8006aa6:	607b      	str	r3, [r7, #4]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8006aa8:	4b0a      	ldr	r3, [pc, #40]	; (8006ad4 <HAL_RCC_GetHCLKFreq+0x50>)
 8006aaa:	699b      	ldr	r3, [r3, #24]
 8006aac:	f003 030f 	and.w	r3, r3, #15
 8006ab0:	4a09      	ldr	r2, [pc, #36]	; (8006ad8 <HAL_RCC_GetHCLKFreq+0x54>)
 8006ab2:	5cd3      	ldrb	r3, [r2, r3]
 8006ab4:	f003 031f 	and.w	r3, r3, #31
 8006ab8:	687a      	ldr	r2, [r7, #4]
 8006aba:	fa22 f303 	lsr.w	r3, r2, r3
 8006abe:	4a07      	ldr	r2, [pc, #28]	; (8006adc <HAL_RCC_GetHCLKFreq+0x58>)
 8006ac0:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8006ac2:	4a07      	ldr	r2, [pc, #28]	; (8006ae0 <HAL_RCC_GetHCLKFreq+0x5c>)
 8006ac4:	687b      	ldr	r3, [r7, #4]
 8006ac6:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
 8006ac8:	4b04      	ldr	r3, [pc, #16]	; (8006adc <HAL_RCC_GetHCLKFreq+0x58>)
 8006aca:	681b      	ldr	r3, [r3, #0]
}
 8006acc:	4618      	mov	r0, r3
 8006ace:	3708      	adds	r7, #8
 8006ad0:	46bd      	mov	sp, r7
 8006ad2:	bd80      	pop	{r7, pc}
 8006ad4:	58024400 	.word	0x58024400
 8006ad8:	08023978 	.word	0x08023978
 8006adc:	24000008 	.word	0x24000008
 8006ae0:	24000004 	.word	0x24000004

08006ae4 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8006ae4:	b580      	push	{r7, lr}
 8006ae6:	af00      	add	r7, sp, #0
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8006ae8:	f7ff ffcc 	bl	8006a84 <HAL_RCC_GetHCLKFreq>
 8006aec:	4602      	mov	r2, r0
 8006aee:	4b06      	ldr	r3, [pc, #24]	; (8006b08 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006af0:	69db      	ldr	r3, [r3, #28]
 8006af2:	091b      	lsrs	r3, r3, #4
 8006af4:	f003 0307 	and.w	r3, r3, #7
 8006af8:	4904      	ldr	r1, [pc, #16]	; (8006b0c <HAL_RCC_GetPCLK1Freq+0x28>)
 8006afa:	5ccb      	ldrb	r3, [r1, r3]
 8006afc:	f003 031f 	and.w	r3, r3, #31
 8006b00:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8006b04:	4618      	mov	r0, r3
 8006b06:	bd80      	pop	{r7, pc}
 8006b08:	58024400 	.word	0x58024400
 8006b0c:	08023978 	.word	0x08023978

08006b10 <HAL_RCCEx_PeriphCLKConfig>:
  * (*) : Available on some STM32H7 lines only.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006b10:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006b14:	b0c6      	sub	sp, #280	; 0x118
 8006b16:	af00      	add	r7, sp, #0
 8006b18:	f8c7 0104 	str.w	r0, [r7, #260]	; 0x104
  uint32_t tmpreg;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8006b1c:	2300      	movs	r3, #0
 8006b1e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8006b22:	2300      	movs	r3, #0
 8006b24:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116

  /*---------------------------- SPDIFRX configuration -------------------------------*/

  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8006b28:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006b2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b30:	f002 6400 	and.w	r4, r2, #134217728	; 0x8000000
 8006b34:	2500      	movs	r5, #0
 8006b36:	ea54 0305 	orrs.w	r3, r4, r5
 8006b3a:	d049      	beq.n	8006bd0 <HAL_RCCEx_PeriphCLKConfig+0xc0>
  {

    switch (PeriphClkInit->SpdifrxClockSelection)
 8006b3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006b40:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006b42:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8006b46:	d02f      	beq.n	8006ba8 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8006b48:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8006b4c:	d828      	bhi.n	8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8006b4e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8006b52:	d01a      	beq.n	8006b8a <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8006b54:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8006b58:	d822      	bhi.n	8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8006b5a:	2b00      	cmp	r3, #0
 8006b5c:	d003      	beq.n	8006b66 <HAL_RCCEx_PeriphCLKConfig+0x56>
 8006b5e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8006b62:	d007      	beq.n	8006b74 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8006b64:	e01c      	b.n	8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x90>
    {
      case RCC_SPDIFRXCLKSOURCE_PLL:      /* PLL is used as clock source for SPDIFRX*/
        /* Enable PLL1Q Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006b66:	4bab      	ldr	r3, [pc, #684]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006b68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b6a:	4aaa      	ldr	r2, [pc, #680]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006b6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006b70:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8006b72:	e01a      	b.n	8006baa <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL2: /* PLL2 is used as clock source for SPDIFRX*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8006b74:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006b78:	3308      	adds	r3, #8
 8006b7a:	2102      	movs	r1, #2
 8006b7c:	4618      	mov	r0, r3
 8006b7e:	f002 fa49 	bl	8009014 <RCCEx_PLL2_Config>
 8006b82:	4603      	mov	r3, r0
 8006b84:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8006b88:	e00f      	b.n	8006baa <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPDIFRX*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8006b8a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006b8e:	3328      	adds	r3, #40	; 0x28
 8006b90:	2102      	movs	r1, #2
 8006b92:	4618      	mov	r0, r3
 8006b94:	f002 faf0 	bl	8009178 <RCCEx_PLL3_Config>
 8006b98:	4603      	mov	r3, r0
 8006b9a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8006b9e:	e004      	b.n	8006baa <HAL_RCCEx_PeriphCLKConfig+0x9a>
        /* Internal OSC clock is used as source of SPDIFRX clock*/
        /* SPDIFRX clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8006ba0:	2301      	movs	r3, #1
 8006ba2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8006ba6:	e000      	b.n	8006baa <HAL_RCCEx_PeriphCLKConfig+0x9a>
        break;
 8006ba8:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006baa:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006bae:	2b00      	cmp	r3, #0
 8006bb0:	d10a      	bne.n	8006bc8 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    {
      /* Set the source of SPDIFRX clock*/
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8006bb2:	4b98      	ldr	r3, [pc, #608]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006bb4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006bb6:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8006bba:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006bbe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006bc0:	4a94      	ldr	r2, [pc, #592]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006bc2:	430b      	orrs	r3, r1
 8006bc4:	6513      	str	r3, [r2, #80]	; 0x50
 8006bc6:	e003      	b.n	8006bd0 <HAL_RCCEx_PeriphCLKConfig+0xc0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006bc8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006bcc:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SAI1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8006bd0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006bd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006bd8:	f402 7880 	and.w	r8, r2, #256	; 0x100
 8006bdc:	f04f 0900 	mov.w	r9, #0
 8006be0:	ea58 0309 	orrs.w	r3, r8, r9
 8006be4:	d047      	beq.n	8006c76 <HAL_RCCEx_PeriphCLKConfig+0x166>
  {
    switch (PeriphClkInit->Sai1ClockSelection)
 8006be6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006bea:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006bec:	2b04      	cmp	r3, #4
 8006bee:	d82a      	bhi.n	8006c46 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8006bf0:	a201      	add	r2, pc, #4	; (adr r2, 8006bf8 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8006bf2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006bf6:	bf00      	nop
 8006bf8:	08006c0d 	.word	0x08006c0d
 8006bfc:	08006c1b 	.word	0x08006c1b
 8006c00:	08006c31 	.word	0x08006c31
 8006c04:	08006c4f 	.word	0x08006c4f
 8006c08:	08006c4f 	.word	0x08006c4f
    {
      case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006c0c:	4b81      	ldr	r3, [pc, #516]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006c0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c10:	4a80      	ldr	r2, [pc, #512]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006c12:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006c16:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8006c18:	e01a      	b.n	8006c50 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8006c1a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006c1e:	3308      	adds	r3, #8
 8006c20:	2100      	movs	r1, #0
 8006c22:	4618      	mov	r0, r3
 8006c24:	f002 f9f6 	bl	8009014 <RCCEx_PLL2_Config>
 8006c28:	4603      	mov	r3, r0
 8006c2a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8006c2e:	e00f      	b.n	8006c50 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8006c30:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006c34:	3328      	adds	r3, #40	; 0x28
 8006c36:	2100      	movs	r1, #0
 8006c38:	4618      	mov	r0, r3
 8006c3a:	f002 fa9d 	bl	8009178 <RCCEx_PLL3_Config>
 8006c3e:	4603      	mov	r3, r0
 8006c40:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8006c44:	e004      	b.n	8006c50 <HAL_RCCEx_PeriphCLKConfig+0x140>
        /* HSI, HSE, or CSI oscillator is used as source of SAI1 clock */
        /* SAI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8006c46:	2301      	movs	r3, #1
 8006c48:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8006c4c:	e000      	b.n	8006c50 <HAL_RCCEx_PeriphCLKConfig+0x140>
        break;
 8006c4e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006c50:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006c54:	2b00      	cmp	r3, #0
 8006c56:	d10a      	bne.n	8006c6e <HAL_RCCEx_PeriphCLKConfig+0x15e>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8006c58:	4b6e      	ldr	r3, [pc, #440]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006c5a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006c5c:	f023 0107 	bic.w	r1, r3, #7
 8006c60:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006c64:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006c66:	4a6b      	ldr	r2, [pc, #428]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006c68:	430b      	orrs	r3, r1
 8006c6a:	6513      	str	r3, [r2, #80]	; 0x50
 8006c6c:	e003      	b.n	8006c76 <HAL_RCCEx_PeriphCLKConfig+0x166>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006c6e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006c72:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif  /*SAI2B*/

#if defined(SAI4)
  /*---------------------------- SAI4A configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8006c76:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006c7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c7e:	f402 6a80 	and.w	sl, r2, #1024	; 0x400
 8006c82:	f04f 0b00 	mov.w	fp, #0
 8006c86:	ea5a 030b 	orrs.w	r3, sl, fp
 8006c8a:	d05b      	beq.n	8006d44 <HAL_RCCEx_PeriphCLKConfig+0x234>
  {
    switch (PeriphClkInit->Sai4AClockSelection)
 8006c8c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006c90:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8006c94:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 8006c98:	d03b      	beq.n	8006d12 <HAL_RCCEx_PeriphCLKConfig+0x202>
 8006c9a:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 8006c9e:	d834      	bhi.n	8006d0a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8006ca0:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8006ca4:	d037      	beq.n	8006d16 <HAL_RCCEx_PeriphCLKConfig+0x206>
 8006ca6:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8006caa:	d82e      	bhi.n	8006d0a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8006cac:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8006cb0:	d033      	beq.n	8006d1a <HAL_RCCEx_PeriphCLKConfig+0x20a>
 8006cb2:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8006cb6:	d828      	bhi.n	8006d0a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8006cb8:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8006cbc:	d01a      	beq.n	8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 8006cbe:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8006cc2:	d822      	bhi.n	8006d0a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8006cc4:	2b00      	cmp	r3, #0
 8006cc6:	d003      	beq.n	8006cd0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 8006cc8:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8006ccc:	d007      	beq.n	8006cde <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 8006cce:	e01c      	b.n	8006d0a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    {
      case RCC_SAI4ACLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006cd0:	4b50      	ldr	r3, [pc, #320]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006cd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006cd4:	4a4f      	ldr	r2, [pc, #316]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006cd6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006cda:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8006cdc:	e01e      	b.n	8006d1c <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8006cde:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006ce2:	3308      	adds	r3, #8
 8006ce4:	2100      	movs	r1, #0
 8006ce6:	4618      	mov	r0, r3
 8006ce8:	f002 f994 	bl	8009014 <RCCEx_PLL2_Config>
 8006cec:	4603      	mov	r3, r0
 8006cee:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8006cf2:	e013      	b.n	8006d1c <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8006cf4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006cf8:	3328      	adds	r3, #40	; 0x28
 8006cfa:	2100      	movs	r1, #0
 8006cfc:	4618      	mov	r0, r3
 8006cfe:	f002 fa3b 	bl	8009178 <RCCEx_PLL3_Config>
 8006d02:	4603      	mov	r3, r0
 8006d04:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8006d08:	e008      	b.n	8006d1c <HAL_RCCEx_PeriphCLKConfig+0x20c>
        /* SAI4A clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8006d0a:	2301      	movs	r3, #1
 8006d0c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8006d10:	e004      	b.n	8006d1c <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8006d12:	bf00      	nop
 8006d14:	e002      	b.n	8006d1c <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8006d16:	bf00      	nop
 8006d18:	e000      	b.n	8006d1c <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8006d1a:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006d1c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006d20:	2b00      	cmp	r3, #0
 8006d22:	d10b      	bne.n	8006d3c <HAL_RCCEx_PeriphCLKConfig+0x22c>
    {
      /* Set the source of SAI4A clock*/
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8006d24:	4b3b      	ldr	r3, [pc, #236]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006d26:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006d28:	f423 0160 	bic.w	r1, r3, #14680064	; 0xe00000
 8006d2c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006d30:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8006d34:	4a37      	ldr	r2, [pc, #220]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006d36:	430b      	orrs	r3, r1
 8006d38:	6593      	str	r3, [r2, #88]	; 0x58
 8006d3a:	e003      	b.n	8006d44 <HAL_RCCEx_PeriphCLKConfig+0x234>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006d3c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006d40:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  /*---------------------------- SAI4B configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 8006d44:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006d48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d4c:	f402 6300 	and.w	r3, r2, #2048	; 0x800
 8006d50:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8006d54:	2300      	movs	r3, #0
 8006d56:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8006d5a:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	; 0xf8
 8006d5e:	460b      	mov	r3, r1
 8006d60:	4313      	orrs	r3, r2
 8006d62:	d05d      	beq.n	8006e20 <HAL_RCCEx_PeriphCLKConfig+0x310>
  {
    switch (PeriphClkInit->Sai4BClockSelection)
 8006d64:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006d68:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8006d6c:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8006d70:	d03b      	beq.n	8006dea <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8006d72:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8006d76:	d834      	bhi.n	8006de2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8006d78:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8006d7c:	d037      	beq.n	8006dee <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8006d7e:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8006d82:	d82e      	bhi.n	8006de2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8006d84:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8006d88:	d033      	beq.n	8006df2 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8006d8a:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8006d8e:	d828      	bhi.n	8006de2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8006d90:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8006d94:	d01a      	beq.n	8006dcc <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 8006d96:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8006d9a:	d822      	bhi.n	8006de2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8006d9c:	2b00      	cmp	r3, #0
 8006d9e:	d003      	beq.n	8006da8 <HAL_RCCEx_PeriphCLKConfig+0x298>
 8006da0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8006da4:	d007      	beq.n	8006db6 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 8006da6:	e01c      	b.n	8006de2 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
    {
      case RCC_SAI4BCLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006da8:	4b1a      	ldr	r3, [pc, #104]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006daa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006dac:	4a19      	ldr	r2, [pc, #100]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006dae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006db2:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8006db4:	e01e      	b.n	8006df4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8006db6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006dba:	3308      	adds	r3, #8
 8006dbc:	2100      	movs	r1, #0
 8006dbe:	4618      	mov	r0, r3
 8006dc0:	f002 f928 	bl	8009014 <RCCEx_PLL2_Config>
 8006dc4:	4603      	mov	r3, r0
 8006dc6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8006dca:	e013      	b.n	8006df4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8006dcc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006dd0:	3328      	adds	r3, #40	; 0x28
 8006dd2:	2100      	movs	r1, #0
 8006dd4:	4618      	mov	r0, r3
 8006dd6:	f002 f9cf 	bl	8009178 <RCCEx_PLL3_Config>
 8006dda:	4603      	mov	r3, r0
 8006ddc:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8006de0:	e008      	b.n	8006df4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        /* SAI4B clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8006de2:	2301      	movs	r3, #1
 8006de4:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8006de8:	e004      	b.n	8006df4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8006dea:	bf00      	nop
 8006dec:	e002      	b.n	8006df4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8006dee:	bf00      	nop
 8006df0:	e000      	b.n	8006df4 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8006df2:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006df4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006df8:	2b00      	cmp	r3, #0
 8006dfa:	d10d      	bne.n	8006e18 <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Set the source of SAI4B clock*/
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8006dfc:	4b05      	ldr	r3, [pc, #20]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006dfe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006e00:	f023 61e0 	bic.w	r1, r3, #117440512	; 0x7000000
 8006e04:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006e08:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8006e0c:	4a01      	ldr	r2, [pc, #4]	; (8006e14 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8006e0e:	430b      	orrs	r3, r1
 8006e10:	6593      	str	r3, [r2, #88]	; 0x58
 8006e12:	e005      	b.n	8006e20 <HAL_RCCEx_PeriphCLKConfig+0x310>
 8006e14:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006e18:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006e1c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif  /*QUADSPI*/

#if defined(OCTOSPI1) || defined(OCTOSPI2)
  /*---------------------------- OCTOSPI configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8006e20:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006e24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006e28:	f002 7300 	and.w	r3, r2, #33554432	; 0x2000000
 8006e2c:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8006e30:	2300      	movs	r3, #0
 8006e32:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8006e36:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	; 0xf0
 8006e3a:	460b      	mov	r3, r1
 8006e3c:	4313      	orrs	r3, r2
 8006e3e:	d03a      	beq.n	8006eb6 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
  {
    switch (PeriphClkInit->OspiClockSelection)
 8006e40:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006e44:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006e46:	2b30      	cmp	r3, #48	; 0x30
 8006e48:	d01f      	beq.n	8006e8a <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8006e4a:	2b30      	cmp	r3, #48	; 0x30
 8006e4c:	d819      	bhi.n	8006e82 <HAL_RCCEx_PeriphCLKConfig+0x372>
 8006e4e:	2b20      	cmp	r3, #32
 8006e50:	d00c      	beq.n	8006e6c <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8006e52:	2b20      	cmp	r3, #32
 8006e54:	d815      	bhi.n	8006e82 <HAL_RCCEx_PeriphCLKConfig+0x372>
 8006e56:	2b00      	cmp	r3, #0
 8006e58:	d019      	beq.n	8006e8e <HAL_RCCEx_PeriphCLKConfig+0x37e>
 8006e5a:	2b10      	cmp	r3, #16
 8006e5c:	d111      	bne.n	8006e82 <HAL_RCCEx_PeriphCLKConfig+0x372>
    {
      case RCC_OSPICLKSOURCE_PLL:      /* PLL is used as clock source for OSPI*/
        /* Enable OSPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006e5e:	4baa      	ldr	r3, [pc, #680]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8006e60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006e62:	4aa9      	ldr	r2, [pc, #676]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8006e64:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006e68:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8006e6a:	e011      	b.n	8006e90 <HAL_RCCEx_PeriphCLKConfig+0x380>

      case RCC_OSPICLKSOURCE_PLL2: /* PLL2 is used as clock source for OSPI*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8006e6c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006e70:	3308      	adds	r3, #8
 8006e72:	2102      	movs	r1, #2
 8006e74:	4618      	mov	r0, r3
 8006e76:	f002 f8cd 	bl	8009014 <RCCEx_PLL2_Config>
 8006e7a:	4603      	mov	r3, r0
 8006e7c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8006e80:	e006      	b.n	8006e90 <HAL_RCCEx_PeriphCLKConfig+0x380>
      case RCC_OSPICLKSOURCE_HCLK:
        /* HCLK clock selected as OSPI kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8006e82:	2301      	movs	r3, #1
 8006e84:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8006e88:	e002      	b.n	8006e90 <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8006e8a:	bf00      	nop
 8006e8c:	e000      	b.n	8006e90 <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8006e8e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006e90:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006e94:	2b00      	cmp	r3, #0
 8006e96:	d10a      	bne.n	8006eae <HAL_RCCEx_PeriphCLKConfig+0x39e>
    {
      /* Set the source of OSPI clock*/
      __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 8006e98:	4b9b      	ldr	r3, [pc, #620]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8006e9a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006e9c:	f023 0130 	bic.w	r1, r3, #48	; 0x30
 8006ea0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006ea4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006ea6:	4a98      	ldr	r2, [pc, #608]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8006ea8:	430b      	orrs	r3, r1
 8006eaa:	64d3      	str	r3, [r2, #76]	; 0x4c
 8006eac:	e003      	b.n	8006eb6 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006eae:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006eb2:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif  /*OCTOSPI*/

  /*---------------------------- SPI1/2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 8006eb6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006eba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ebe:	f402 5380 	and.w	r3, r2, #4096	; 0x1000
 8006ec2:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8006ec6:	2300      	movs	r3, #0
 8006ec8:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8006ecc:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	; 0xe8
 8006ed0:	460b      	mov	r3, r1
 8006ed2:	4313      	orrs	r3, r2
 8006ed4:	d051      	beq.n	8006f7a <HAL_RCCEx_PeriphCLKConfig+0x46a>
  {
    switch (PeriphClkInit->Spi123ClockSelection)
 8006ed6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006eda:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006edc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006ee0:	d035      	beq.n	8006f4e <HAL_RCCEx_PeriphCLKConfig+0x43e>
 8006ee2:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006ee6:	d82e      	bhi.n	8006f46 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8006ee8:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8006eec:	d031      	beq.n	8006f52 <HAL_RCCEx_PeriphCLKConfig+0x442>
 8006eee:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8006ef2:	d828      	bhi.n	8006f46 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8006ef4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006ef8:	d01a      	beq.n	8006f30 <HAL_RCCEx_PeriphCLKConfig+0x420>
 8006efa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006efe:	d822      	bhi.n	8006f46 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8006f00:	2b00      	cmp	r3, #0
 8006f02:	d003      	beq.n	8006f0c <HAL_RCCEx_PeriphCLKConfig+0x3fc>
 8006f04:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006f08:	d007      	beq.n	8006f1a <HAL_RCCEx_PeriphCLKConfig+0x40a>
 8006f0a:	e01c      	b.n	8006f46 <HAL_RCCEx_PeriphCLKConfig+0x436>
    {
      case RCC_SPI123CLKSOURCE_PLL:      /* PLL is used as clock source for SPI1/2/3 */
        /* Enable SPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8006f0c:	4b7e      	ldr	r3, [pc, #504]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8006f0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006f10:	4a7d      	ldr	r2, [pc, #500]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8006f12:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006f16:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8006f18:	e01c      	b.n	8006f54 <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8006f1a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006f1e:	3308      	adds	r3, #8
 8006f20:	2100      	movs	r1, #0
 8006f22:	4618      	mov	r0, r3
 8006f24:	f002 f876 	bl	8009014 <RCCEx_PLL2_Config>
 8006f28:	4603      	mov	r3, r0
 8006f2a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8006f2e:	e011      	b.n	8006f54 <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8006f30:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006f34:	3328      	adds	r3, #40	; 0x28
 8006f36:	2100      	movs	r1, #0
 8006f38:	4618      	mov	r0, r3
 8006f3a:	f002 f91d 	bl	8009178 <RCCEx_PLL3_Config>
 8006f3e:	4603      	mov	r3, r0
 8006f40:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8006f44:	e006      	b.n	8006f54 <HAL_RCCEx_PeriphCLKConfig+0x444>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1/2/3 clock */
        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8006f46:	2301      	movs	r3, #1
 8006f48:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8006f4c:	e002      	b.n	8006f54 <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 8006f4e:	bf00      	nop
 8006f50:	e000      	b.n	8006f54 <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 8006f52:	bf00      	nop
    }

    if (ret == HAL_OK)
 8006f54:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006f58:	2b00      	cmp	r3, #0
 8006f5a:	d10a      	bne.n	8006f72 <HAL_RCCEx_PeriphCLKConfig+0x462>
    {
      /* Set the source of SPI1/2/3 clock*/
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8006f5c:	4b6a      	ldr	r3, [pc, #424]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8006f5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006f60:	f423 41e0 	bic.w	r1, r3, #28672	; 0x7000
 8006f64:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006f68:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006f6a:	4a67      	ldr	r2, [pc, #412]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8006f6c:	430b      	orrs	r3, r1
 8006f6e:	6513      	str	r3, [r2, #80]	; 0x50
 8006f70:	e003      	b.n	8006f7a <HAL_RCCEx_PeriphCLKConfig+0x46a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8006f72:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8006f76:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SPI4/5 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8006f7a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006f7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f82:	f402 5300 	and.w	r3, r2, #8192	; 0x2000
 8006f86:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8006f8a:	2300      	movs	r3, #0
 8006f8c:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8006f90:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	; 0xe0
 8006f94:	460b      	mov	r3, r1
 8006f96:	4313      	orrs	r3, r2
 8006f98:	d053      	beq.n	8007042 <HAL_RCCEx_PeriphCLKConfig+0x532>
  {
    switch (PeriphClkInit->Spi45ClockSelection)
 8006f9a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006f9e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006fa0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006fa4:	d033      	beq.n	800700e <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 8006fa6:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006faa:	d82c      	bhi.n	8007006 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8006fac:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8006fb0:	d02f      	beq.n	8007012 <HAL_RCCEx_PeriphCLKConfig+0x502>
 8006fb2:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8006fb6:	d826      	bhi.n	8007006 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8006fb8:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8006fbc:	d02b      	beq.n	8007016 <HAL_RCCEx_PeriphCLKConfig+0x506>
 8006fbe:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8006fc2:	d820      	bhi.n	8007006 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8006fc4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8006fc8:	d012      	beq.n	8006ff0 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 8006fca:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8006fce:	d81a      	bhi.n	8007006 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8006fd0:	2b00      	cmp	r3, #0
 8006fd2:	d022      	beq.n	800701a <HAL_RCCEx_PeriphCLKConfig+0x50a>
 8006fd4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006fd8:	d115      	bne.n	8007006 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI4/5 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8006fda:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006fde:	3308      	adds	r3, #8
 8006fe0:	2101      	movs	r1, #1
 8006fe2:	4618      	mov	r0, r3
 8006fe4:	f002 f816 	bl	8009014 <RCCEx_PLL2_Config>
 8006fe8:	4603      	mov	r3, r0
 8006fea:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8006fee:	e015      	b.n	800701c <HAL_RCCEx_PeriphCLKConfig+0x50c>
      case RCC_SPI45CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8006ff0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8006ff4:	3328      	adds	r3, #40	; 0x28
 8006ff6:	2101      	movs	r1, #1
 8006ff8:	4618      	mov	r0, r3
 8006ffa:	f002 f8bd 	bl	8009178 <RCCEx_PLL3_Config>
 8006ffe:	4603      	mov	r3, r0
 8007000:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8007004:	e00a      	b.n	800701c <HAL_RCCEx_PeriphCLKConfig+0x50c>
        /* HSE,  oscillator is used as source of SPI4/5 clock */
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007006:	2301      	movs	r3, #1
 8007008:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800700c:	e006      	b.n	800701c <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 800700e:	bf00      	nop
 8007010:	e004      	b.n	800701c <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8007012:	bf00      	nop
 8007014:	e002      	b.n	800701c <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8007016:	bf00      	nop
 8007018:	e000      	b.n	800701c <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 800701a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800701c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007020:	2b00      	cmp	r3, #0
 8007022:	d10a      	bne.n	800703a <HAL_RCCEx_PeriphCLKConfig+0x52a>
    {
      /* Set the source of SPI4/5 clock*/
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8007024:	4b38      	ldr	r3, [pc, #224]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007026:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007028:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 800702c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007030:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007032:	4a35      	ldr	r2, [pc, #212]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007034:	430b      	orrs	r3, r1
 8007036:	6513      	str	r3, [r2, #80]	; 0x50
 8007038:	e003      	b.n	8007042 <HAL_RCCEx_PeriphCLKConfig+0x532>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800703a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800703e:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SPI6 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8007042:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007046:	e9d3 2300 	ldrd	r2, r3, [r3]
 800704a:	f402 4380 	and.w	r3, r2, #16384	; 0x4000
 800704e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8007052:	2300      	movs	r3, #0
 8007054:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8007058:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800705c:	460b      	mov	r3, r1
 800705e:	4313      	orrs	r3, r2
 8007060:	d058      	beq.n	8007114 <HAL_RCCEx_PeriphCLKConfig+0x604>
  {
    switch (PeriphClkInit->Spi6ClockSelection)
 8007062:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007066:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800706a:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800706e:	d033      	beq.n	80070d8 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8007070:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8007074:	d82c      	bhi.n	80070d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8007076:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800707a:	d02f      	beq.n	80070dc <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 800707c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007080:	d826      	bhi.n	80070d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8007082:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007086:	d02b      	beq.n	80070e0 <HAL_RCCEx_PeriphCLKConfig+0x5d0>
 8007088:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800708c:	d820      	bhi.n	80070d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800708e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007092:	d012      	beq.n	80070ba <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8007094:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007098:	d81a      	bhi.n	80070d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800709a:	2b00      	cmp	r3, #0
 800709c:	d022      	beq.n	80070e4 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800709e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80070a2:	d115      	bne.n	80070d0 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI6*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80070a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80070a8:	3308      	adds	r3, #8
 80070aa:	2101      	movs	r1, #1
 80070ac:	4618      	mov	r0, r3
 80070ae:	f001 ffb1 	bl	8009014 <RCCEx_PLL2_Config>
 80070b2:	4603      	mov	r3, r0
 80070b4:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80070b8:	e015      	b.n	80070e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
      case RCC_SPI6CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI6*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80070ba:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80070be:	3328      	adds	r3, #40	; 0x28
 80070c0:	2101      	movs	r1, #1
 80070c2:	4618      	mov	r0, r3
 80070c4:	f002 f858 	bl	8009178 <RCCEx_PLL3_Config>
 80070c8:	4603      	mov	r3, r0
 80070ca:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80070ce:	e00a      	b.n	80070e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        /* SPI6 clock source configuration done later after clock selection check */
        break;
#endif

      default:
        ret = HAL_ERROR;
 80070d0:	2301      	movs	r3, #1
 80070d2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80070d6:	e006      	b.n	80070e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80070d8:	bf00      	nop
 80070da:	e004      	b.n	80070e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80070dc:	bf00      	nop
 80070de:	e002      	b.n	80070e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80070e0:	bf00      	nop
 80070e2:	e000      	b.n	80070e6 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80070e4:	bf00      	nop
    }

    if (ret == HAL_OK)
 80070e6:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80070ea:	2b00      	cmp	r3, #0
 80070ec:	d10e      	bne.n	800710c <HAL_RCCEx_PeriphCLKConfig+0x5fc>
    {
      /* Set the source of SPI6 clock*/
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 80070ee:	4b06      	ldr	r3, [pc, #24]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 80070f0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80070f2:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 80070f6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80070fa:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80070fe:	4a02      	ldr	r2, [pc, #8]	; (8007108 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007100:	430b      	orrs	r3, r1
 8007102:	6593      	str	r3, [r2, #88]	; 0x58
 8007104:	e006      	b.n	8007114 <HAL_RCCEx_PeriphCLKConfig+0x604>
 8007106:	bf00      	nop
 8007108:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 800710c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007110:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif /*DSI*/

#if defined(FDCAN1) || defined(FDCAN2)
  /*---------------------------- FDCAN configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8007114:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007118:	e9d3 2300 	ldrd	r2, r3, [r3]
 800711c:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 8007120:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8007124:	2300      	movs	r3, #0
 8007126:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800712a:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	; 0xd0
 800712e:	460b      	mov	r3, r1
 8007130:	4313      	orrs	r3, r2
 8007132:	d037      	beq.n	80071a4 <HAL_RCCEx_PeriphCLKConfig+0x694>
  {
    switch (PeriphClkInit->FdcanClockSelection)
 8007134:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007138:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800713a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800713e:	d00e      	beq.n	800715e <HAL_RCCEx_PeriphCLKConfig+0x64e>
 8007140:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007144:	d816      	bhi.n	8007174 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8007146:	2b00      	cmp	r3, #0
 8007148:	d018      	beq.n	800717c <HAL_RCCEx_PeriphCLKConfig+0x66c>
 800714a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800714e:	d111      	bne.n	8007174 <HAL_RCCEx_PeriphCLKConfig+0x664>
    {
      case RCC_FDCANCLKSOURCE_PLL:      /* PLL is used as clock source for FDCAN*/
        /* Enable FDCAN Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007150:	4bc4      	ldr	r3, [pc, #784]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007152:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007154:	4ac3      	ldr	r2, [pc, #780]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007156:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800715a:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 800715c:	e00f      	b.n	800717e <HAL_RCCEx_PeriphCLKConfig+0x66e>

      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is used as clock source for FDCAN*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800715e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007162:	3308      	adds	r3, #8
 8007164:	2101      	movs	r1, #1
 8007166:	4618      	mov	r0, r3
 8007168:	f001 ff54 	bl	8009014 <RCCEx_PLL2_Config>
 800716c:	4603      	mov	r3, r0
 800716e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 8007172:	e004      	b.n	800717e <HAL_RCCEx_PeriphCLKConfig+0x66e>
        /* HSE is used as clock source for FDCAN*/
        /* FDCAN clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007174:	2301      	movs	r3, #1
 8007176:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800717a:	e000      	b.n	800717e <HAL_RCCEx_PeriphCLKConfig+0x66e>
        break;
 800717c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800717e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007182:	2b00      	cmp	r3, #0
 8007184:	d10a      	bne.n	800719c <HAL_RCCEx_PeriphCLKConfig+0x68c>
    {
      /* Set the source of FDCAN clock*/
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8007186:	4bb7      	ldr	r3, [pc, #732]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007188:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800718a:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 800718e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007192:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007194:	4ab3      	ldr	r2, [pc, #716]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007196:	430b      	orrs	r3, r1
 8007198:	6513      	str	r3, [r2, #80]	; 0x50
 800719a:	e003      	b.n	80071a4 <HAL_RCCEx_PeriphCLKConfig+0x694>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800719c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80071a0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif /*FDCAN1 || FDCAN2*/

  /*---------------------------- FMC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 80071a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80071a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071ac:	f002 7380 	and.w	r3, r2, #16777216	; 0x1000000
 80071b0:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80071b4:	2300      	movs	r3, #0
 80071b6:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80071ba:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	; 0xc8
 80071be:	460b      	mov	r3, r1
 80071c0:	4313      	orrs	r3, r2
 80071c2:	d039      	beq.n	8007238 <HAL_RCCEx_PeriphCLKConfig+0x728>
  {
    switch (PeriphClkInit->FmcClockSelection)
 80071c4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80071c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80071ca:	2b03      	cmp	r3, #3
 80071cc:	d81c      	bhi.n	8007208 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
 80071ce:	a201      	add	r2, pc, #4	; (adr r2, 80071d4 <HAL_RCCEx_PeriphCLKConfig+0x6c4>)
 80071d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80071d4:	08007211 	.word	0x08007211
 80071d8:	080071e5 	.word	0x080071e5
 80071dc:	080071f3 	.word	0x080071f3
 80071e0:	08007211 	.word	0x08007211
    {
      case RCC_FMCCLKSOURCE_PLL:      /* PLL is used as clock source for FMC*/
        /* Enable FMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80071e4:	4b9f      	ldr	r3, [pc, #636]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80071e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80071e8:	4a9e      	ldr	r2, [pc, #632]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80071ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80071ee:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FMC clock source configuration done later after clock selection check */
        break;
 80071f0:	e00f      	b.n	8007212 <HAL_RCCEx_PeriphCLKConfig+0x702>

      case RCC_FMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for FMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80071f2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80071f6:	3308      	adds	r3, #8
 80071f8:	2102      	movs	r1, #2
 80071fa:	4618      	mov	r0, r3
 80071fc:	f001 ff0a 	bl	8009014 <RCCEx_PLL2_Config>
 8007200:	4603      	mov	r3, r0
 8007202:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* FMC clock source configuration done later after clock selection check */
        break;
 8007206:	e004      	b.n	8007212 <HAL_RCCEx_PeriphCLKConfig+0x702>
      case RCC_FMCCLKSOURCE_HCLK:
        /* D1/CD HCLK  clock selected as FMC kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8007208:	2301      	movs	r3, #1
 800720a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800720e:	e000      	b.n	8007212 <HAL_RCCEx_PeriphCLKConfig+0x702>
        break;
 8007210:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007212:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007216:	2b00      	cmp	r3, #0
 8007218:	d10a      	bne.n	8007230 <HAL_RCCEx_PeriphCLKConfig+0x720>
    {
      /* Set the source of FMC clock*/
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 800721a:	4b92      	ldr	r3, [pc, #584]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800721c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800721e:	f023 0103 	bic.w	r1, r3, #3
 8007222:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007226:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007228:	4a8e      	ldr	r2, [pc, #568]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800722a:	430b      	orrs	r3, r1
 800722c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800722e:	e003      	b.n	8007238 <HAL_RCCEx_PeriphCLKConfig+0x728>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007230:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007234:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- RTC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8007238:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800723c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007240:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 8007244:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8007248:	2300      	movs	r3, #0
 800724a:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800724e:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8007252:	460b      	mov	r3, r1
 8007254:	4313      	orrs	r3, r2
 8007256:	f000 8099 	beq.w	800738c <HAL_RCCEx_PeriphCLKConfig+0x87c>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 800725a:	4b83      	ldr	r3, [pc, #524]	; (8007468 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800725c:	681b      	ldr	r3, [r3, #0]
 800725e:	4a82      	ldr	r2, [pc, #520]	; (8007468 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8007260:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007264:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8007266:	f7fa fa3b 	bl	80016e0 <HAL_GetTick>
 800726a:	f8c7 0110 	str.w	r0, [r7, #272]	; 0x110

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 800726e:	e00b      	b.n	8007288 <HAL_RCCEx_PeriphCLKConfig+0x778>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007270:	f7fa fa36 	bl	80016e0 <HAL_GetTick>
 8007274:	4602      	mov	r2, r0
 8007276:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 800727a:	1ad3      	subs	r3, r2, r3
 800727c:	2b64      	cmp	r3, #100	; 0x64
 800727e:	d903      	bls.n	8007288 <HAL_RCCEx_PeriphCLKConfig+0x778>
      {
        ret = HAL_TIMEOUT;
 8007280:	2303      	movs	r3, #3
 8007282:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007286:	e005      	b.n	8007294 <HAL_RCCEx_PeriphCLKConfig+0x784>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8007288:	4b77      	ldr	r3, [pc, #476]	; (8007468 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800728a:	681b      	ldr	r3, [r3, #0]
 800728c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007290:	2b00      	cmp	r3, #0
 8007292:	d0ed      	beq.n	8007270 <HAL_RCCEx_PeriphCLKConfig+0x760>
      }
    }

    if (ret == HAL_OK)
 8007294:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007298:	2b00      	cmp	r3, #0
 800729a:	d173      	bne.n	8007384 <HAL_RCCEx_PeriphCLKConfig+0x874>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 800729c:	4b71      	ldr	r3, [pc, #452]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800729e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80072a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80072a4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80072a8:	4053      	eors	r3, r2
 80072aa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80072ae:	2b00      	cmp	r3, #0
 80072b0:	d015      	beq.n	80072de <HAL_RCCEx_PeriphCLKConfig+0x7ce>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80072b2:	4b6c      	ldr	r3, [pc, #432]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80072b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072b6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80072ba:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 80072be:	4b69      	ldr	r3, [pc, #420]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80072c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072c2:	4a68      	ldr	r2, [pc, #416]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80072c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80072c8:	6713      	str	r3, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 80072ca:	4b66      	ldr	r3, [pc, #408]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80072cc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072ce:	4a65      	ldr	r2, [pc, #404]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80072d0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80072d4:	6713      	str	r3, [r2, #112]	; 0x70
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpreg;
 80072d6:	4a63      	ldr	r2, [pc, #396]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80072d8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80072dc:	6713      	str	r3, [r2, #112]	; 0x70
      }

      /* If LSE is selected as RTC clock source (and enabled prior to Backup Domain reset), wait for LSE reactivation */
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 80072de:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80072e2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80072e6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80072ea:	d118      	bne.n	800731e <HAL_RCCEx_PeriphCLKConfig+0x80e>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80072ec:	f7fa f9f8 	bl	80016e0 <HAL_GetTick>
 80072f0:	f8c7 0110 	str.w	r0, [r7, #272]	; 0x110

        /* Wait till LSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80072f4:	e00d      	b.n	8007312 <HAL_RCCEx_PeriphCLKConfig+0x802>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80072f6:	f7fa f9f3 	bl	80016e0 <HAL_GetTick>
 80072fa:	4602      	mov	r2, r0
 80072fc:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8007300:	1ad2      	subs	r2, r2, r3
 8007302:	f241 3388 	movw	r3, #5000	; 0x1388
 8007306:	429a      	cmp	r2, r3
 8007308:	d903      	bls.n	8007312 <HAL_RCCEx_PeriphCLKConfig+0x802>
          {
            ret = HAL_TIMEOUT;
 800730a:	2303      	movs	r3, #3
 800730c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
            break;
 8007310:	e005      	b.n	800731e <HAL_RCCEx_PeriphCLKConfig+0x80e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007312:	4b54      	ldr	r3, [pc, #336]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007314:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007316:	f003 0302 	and.w	r3, r3, #2
 800731a:	2b00      	cmp	r3, #0
 800731c:	d0eb      	beq.n	80072f6 <HAL_RCCEx_PeriphCLKConfig+0x7e6>
          }
        }
      }

      if (ret == HAL_OK)
 800731e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007322:	2b00      	cmp	r3, #0
 8007324:	d129      	bne.n	800737a <HAL_RCCEx_PeriphCLKConfig+0x86a>
      {
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007326:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800732a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800732e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8007332:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007336:	d10e      	bne.n	8007356 <HAL_RCCEx_PeriphCLKConfig+0x846>
 8007338:	4b4a      	ldr	r3, [pc, #296]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800733a:	691b      	ldr	r3, [r3, #16]
 800733c:	f423 517c 	bic.w	r1, r3, #16128	; 0x3f00
 8007340:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007344:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8007348:	091a      	lsrs	r2, r3, #4
 800734a:	4b48      	ldr	r3, [pc, #288]	; (800746c <HAL_RCCEx_PeriphCLKConfig+0x95c>)
 800734c:	4013      	ands	r3, r2
 800734e:	4a45      	ldr	r2, [pc, #276]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007350:	430b      	orrs	r3, r1
 8007352:	6113      	str	r3, [r2, #16]
 8007354:	e005      	b.n	8007362 <HAL_RCCEx_PeriphCLKConfig+0x852>
 8007356:	4b43      	ldr	r3, [pc, #268]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007358:	691b      	ldr	r3, [r3, #16]
 800735a:	4a42      	ldr	r2, [pc, #264]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800735c:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8007360:	6113      	str	r3, [r2, #16]
 8007362:	4b40      	ldr	r3, [pc, #256]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007364:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8007366:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800736a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800736e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007372:	4a3c      	ldr	r2, [pc, #240]	; (8007464 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007374:	430b      	orrs	r3, r1
 8007376:	6713      	str	r3, [r2, #112]	; 0x70
 8007378:	e008      	b.n	800738c <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
      else
      {
        /* set overall return value */
        status = ret;
 800737a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800737e:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
 8007382:	e003      	b.n	800738c <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007384:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007388:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }


  /*-------------------------- USART1/6 configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 800738c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007390:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007394:	f002 0301 	and.w	r3, r2, #1
 8007398:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800739c:	2300      	movs	r3, #0
 800739e:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 80073a2:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	; 0xb8
 80073a6:	460b      	mov	r3, r1
 80073a8:	4313      	orrs	r3, r2
 80073aa:	f000 808f 	beq.w	80074cc <HAL_RCCEx_PeriphCLKConfig+0x9bc>
  {
    switch (PeriphClkInit->Usart16ClockSelection)
 80073ae:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80073b2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80073b4:	2b28      	cmp	r3, #40	; 0x28
 80073b6:	d871      	bhi.n	800749c <HAL_RCCEx_PeriphCLKConfig+0x98c>
 80073b8:	a201      	add	r2, pc, #4	; (adr r2, 80073c0 <HAL_RCCEx_PeriphCLKConfig+0x8b0>)
 80073ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80073be:	bf00      	nop
 80073c0:	080074a5 	.word	0x080074a5
 80073c4:	0800749d 	.word	0x0800749d
 80073c8:	0800749d 	.word	0x0800749d
 80073cc:	0800749d 	.word	0x0800749d
 80073d0:	0800749d 	.word	0x0800749d
 80073d4:	0800749d 	.word	0x0800749d
 80073d8:	0800749d 	.word	0x0800749d
 80073dc:	0800749d 	.word	0x0800749d
 80073e0:	08007471 	.word	0x08007471
 80073e4:	0800749d 	.word	0x0800749d
 80073e8:	0800749d 	.word	0x0800749d
 80073ec:	0800749d 	.word	0x0800749d
 80073f0:	0800749d 	.word	0x0800749d
 80073f4:	0800749d 	.word	0x0800749d
 80073f8:	0800749d 	.word	0x0800749d
 80073fc:	0800749d 	.word	0x0800749d
 8007400:	08007487 	.word	0x08007487
 8007404:	0800749d 	.word	0x0800749d
 8007408:	0800749d 	.word	0x0800749d
 800740c:	0800749d 	.word	0x0800749d
 8007410:	0800749d 	.word	0x0800749d
 8007414:	0800749d 	.word	0x0800749d
 8007418:	0800749d 	.word	0x0800749d
 800741c:	0800749d 	.word	0x0800749d
 8007420:	080074a5 	.word	0x080074a5
 8007424:	0800749d 	.word	0x0800749d
 8007428:	0800749d 	.word	0x0800749d
 800742c:	0800749d 	.word	0x0800749d
 8007430:	0800749d 	.word	0x0800749d
 8007434:	0800749d 	.word	0x0800749d
 8007438:	0800749d 	.word	0x0800749d
 800743c:	0800749d 	.word	0x0800749d
 8007440:	080074a5 	.word	0x080074a5
 8007444:	0800749d 	.word	0x0800749d
 8007448:	0800749d 	.word	0x0800749d
 800744c:	0800749d 	.word	0x0800749d
 8007450:	0800749d 	.word	0x0800749d
 8007454:	0800749d 	.word	0x0800749d
 8007458:	0800749d 	.word	0x0800749d
 800745c:	0800749d 	.word	0x0800749d
 8007460:	080074a5 	.word	0x080074a5
 8007464:	58024400 	.word	0x58024400
 8007468:	58024800 	.word	0x58024800
 800746c:	00ffffcf 	.word	0x00ffffcf
      case RCC_USART16CLKSOURCE_PCLK2: /* CD/D2 PCLK2 as clock source for USART1/6 */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      case RCC_USART16CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART1/6 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007470:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007474:	3308      	adds	r3, #8
 8007476:	2101      	movs	r1, #1
 8007478:	4618      	mov	r0, r3
 800747a:	f001 fdcb 	bl	8009014 <RCCEx_PLL2_Config>
 800747e:	4603      	mov	r3, r0
 8007480:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8007484:	e00f      	b.n	80074a6 <HAL_RCCEx_PeriphCLKConfig+0x996>

      case RCC_USART16CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART1/6 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007486:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800748a:	3328      	adds	r3, #40	; 0x28
 800748c:	2101      	movs	r1, #1
 800748e:	4618      	mov	r0, r3
 8007490:	f001 fe72 	bl	8009178 <RCCEx_PLL3_Config>
 8007494:	4603      	mov	r3, r0
 8007496:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 800749a:	e004      	b.n	80074a6 <HAL_RCCEx_PeriphCLKConfig+0x996>
        /* LSE,  oscillator is used as source of USART1/6 clock */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800749c:	2301      	movs	r3, #1
 800749e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80074a2:	e000      	b.n	80074a6 <HAL_RCCEx_PeriphCLKConfig+0x996>
        break;
 80074a4:	bf00      	nop
    }

    if (ret == HAL_OK)
 80074a6:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80074aa:	2b00      	cmp	r3, #0
 80074ac:	d10a      	bne.n	80074c4 <HAL_RCCEx_PeriphCLKConfig+0x9b4>
    {
      /* Set the source of USART1/6 clock */
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 80074ae:	4bbf      	ldr	r3, [pc, #764]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80074b0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80074b2:	f023 0138 	bic.w	r1, r3, #56	; 0x38
 80074b6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80074ba:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80074bc:	4abb      	ldr	r2, [pc, #748]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80074be:	430b      	orrs	r3, r1
 80074c0:	6553      	str	r3, [r2, #84]	; 0x54
 80074c2:	e003      	b.n	80074cc <HAL_RCCEx_PeriphCLKConfig+0x9bc>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80074c4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80074c8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*-------------------------- USART2/3/4/5/7/8 Configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 80074cc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80074d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80074d4:	f002 0302 	and.w	r3, r2, #2
 80074d8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80074dc:	2300      	movs	r3, #0
 80074de:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80074e2:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	; 0xb0
 80074e6:	460b      	mov	r3, r1
 80074e8:	4313      	orrs	r3, r2
 80074ea:	d041      	beq.n	8007570 <HAL_RCCEx_PeriphCLKConfig+0xa60>
  {
    switch (PeriphClkInit->Usart234578ClockSelection)
 80074ec:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80074f0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80074f2:	2b05      	cmp	r3, #5
 80074f4:	d824      	bhi.n	8007540 <HAL_RCCEx_PeriphCLKConfig+0xa30>
 80074f6:	a201      	add	r2, pc, #4	; (adr r2, 80074fc <HAL_RCCEx_PeriphCLKConfig+0x9ec>)
 80074f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80074fc:	08007549 	.word	0x08007549
 8007500:	08007515 	.word	0x08007515
 8007504:	0800752b 	.word	0x0800752b
 8007508:	08007549 	.word	0x08007549
 800750c:	08007549 	.word	0x08007549
 8007510:	08007549 	.word	0x08007549
      case RCC_USART234578CLKSOURCE_PCLK1: /* CD/D2 PCLK1 as clock source for USART2/3/4/5/7/8 */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      case RCC_USART234578CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007514:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007518:	3308      	adds	r3, #8
 800751a:	2101      	movs	r1, #1
 800751c:	4618      	mov	r0, r3
 800751e:	f001 fd79 	bl	8009014 <RCCEx_PLL2_Config>
 8007522:	4603      	mov	r3, r0
 8007524:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8007528:	e00f      	b.n	800754a <HAL_RCCEx_PeriphCLKConfig+0xa3a>

      case RCC_USART234578CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800752a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800752e:	3328      	adds	r3, #40	; 0x28
 8007530:	2101      	movs	r1, #1
 8007532:	4618      	mov	r0, r3
 8007534:	f001 fe20 	bl	8009178 <RCCEx_PLL3_Config>
 8007538:	4603      	mov	r3, r0
 800753a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 800753e:	e004      	b.n	800754a <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        /* LSE,  oscillator is used as source of USART2/3/4/5/7/8 clock */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007540:	2301      	movs	r3, #1
 8007542:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007546:	e000      	b.n	800754a <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        break;
 8007548:	bf00      	nop
    }

    if (ret == HAL_OK)
 800754a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800754e:	2b00      	cmp	r3, #0
 8007550:	d10a      	bne.n	8007568 <HAL_RCCEx_PeriphCLKConfig+0xa58>
    {
      /* Set the source of USART2/3/4/5/7/8 clock */
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8007552:	4b96      	ldr	r3, [pc, #600]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8007554:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007556:	f023 0107 	bic.w	r1, r3, #7
 800755a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800755e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007560:	4a92      	ldr	r2, [pc, #584]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8007562:	430b      	orrs	r3, r1
 8007564:	6553      	str	r3, [r2, #84]	; 0x54
 8007566:	e003      	b.n	8007570 <HAL_RCCEx_PeriphCLKConfig+0xa60>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007568:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800756c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*-------------------------- LPUART1 Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8007570:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007574:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007578:	f002 0304 	and.w	r3, r2, #4
 800757c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8007580:	2300      	movs	r3, #0
 8007582:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8007586:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800758a:	460b      	mov	r3, r1
 800758c:	4313      	orrs	r3, r2
 800758e:	d044      	beq.n	800761a <HAL_RCCEx_PeriphCLKConfig+0xb0a>
  {
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8007590:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007594:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007598:	2b05      	cmp	r3, #5
 800759a:	d825      	bhi.n	80075e8 <HAL_RCCEx_PeriphCLKConfig+0xad8>
 800759c:	a201      	add	r2, pc, #4	; (adr r2, 80075a4 <HAL_RCCEx_PeriphCLKConfig+0xa94>)
 800759e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075a2:	bf00      	nop
 80075a4:	080075f1 	.word	0x080075f1
 80075a8:	080075bd 	.word	0x080075bd
 80075ac:	080075d3 	.word	0x080075d3
 80075b0:	080075f1 	.word	0x080075f1
 80075b4:	080075f1 	.word	0x080075f1
 80075b8:	080075f1 	.word	0x080075f1
      case RCC_LPUART1CLKSOURCE_PCLK4: /* SRD/D3 PCLK1 (PCLK4) as clock source for LPUART1 */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPUART1 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80075bc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80075c0:	3308      	adds	r3, #8
 80075c2:	2101      	movs	r1, #1
 80075c4:	4618      	mov	r0, r3
 80075c6:	f001 fd25 	bl	8009014 <RCCEx_PLL2_Config>
 80075ca:	4603      	mov	r3, r0
 80075cc:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 80075d0:	e00f      	b.n	80075f2 <HAL_RCCEx_PeriphCLKConfig+0xae2>

      case RCC_LPUART1CLKSOURCE_PLL3: /* PLL3 is used as clock source for LPUART1 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80075d2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80075d6:	3328      	adds	r3, #40	; 0x28
 80075d8:	2101      	movs	r1, #1
 80075da:	4618      	mov	r0, r3
 80075dc:	f001 fdcc 	bl	8009178 <RCCEx_PLL3_Config>
 80075e0:	4603      	mov	r3, r0
 80075e2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 80075e6:	e004      	b.n	80075f2 <HAL_RCCEx_PeriphCLKConfig+0xae2>
        /* LSE,  oscillator is used as source of LPUART1 clock */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80075e8:	2301      	movs	r3, #1
 80075ea:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80075ee:	e000      	b.n	80075f2 <HAL_RCCEx_PeriphCLKConfig+0xae2>
        break;
 80075f0:	bf00      	nop
    }

    if (ret == HAL_OK)
 80075f2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80075f6:	2b00      	cmp	r3, #0
 80075f8:	d10b      	bne.n	8007612 <HAL_RCCEx_PeriphCLKConfig+0xb02>
    {
      /* Set the source of LPUART1 clock */
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 80075fa:	4b6c      	ldr	r3, [pc, #432]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80075fc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80075fe:	f023 0107 	bic.w	r1, r3, #7
 8007602:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007606:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800760a:	4a68      	ldr	r2, [pc, #416]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800760c:	430b      	orrs	r3, r1
 800760e:	6593      	str	r3, [r2, #88]	; 0x58
 8007610:	e003      	b.n	800761a <HAL_RCCEx_PeriphCLKConfig+0xb0a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007612:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007616:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 800761a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800761e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007622:	f002 0320 	and.w	r3, r2, #32
 8007626:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800762a:	2300      	movs	r3, #0
 800762c:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8007630:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	; 0xa0
 8007634:	460b      	mov	r3, r1
 8007636:	4313      	orrs	r3, r2
 8007638:	d055      	beq.n	80076e6 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
  {
    switch (PeriphClkInit->Lptim1ClockSelection)
 800763a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800763e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007642:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8007646:	d033      	beq.n	80076b0 <HAL_RCCEx_PeriphCLKConfig+0xba0>
 8007648:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800764c:	d82c      	bhi.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800764e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007652:	d02f      	beq.n	80076b4 <HAL_RCCEx_PeriphCLKConfig+0xba4>
 8007654:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007658:	d826      	bhi.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800765a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800765e:	d02b      	beq.n	80076b8 <HAL_RCCEx_PeriphCLKConfig+0xba8>
 8007660:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007664:	d820      	bhi.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8007666:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800766a:	d012      	beq.n	8007692 <HAL_RCCEx_PeriphCLKConfig+0xb82>
 800766c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007670:	d81a      	bhi.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8007672:	2b00      	cmp	r3, #0
 8007674:	d022      	beq.n	80076bc <HAL_RCCEx_PeriphCLKConfig+0xbac>
 8007676:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800767a:	d115      	bne.n	80076a8 <HAL_RCCEx_PeriphCLKConfig+0xb98>
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800767c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007680:	3308      	adds	r3, #8
 8007682:	2100      	movs	r1, #0
 8007684:	4618      	mov	r0, r3
 8007686:	f001 fcc5 	bl	8009014 <RCCEx_PLL2_Config>
 800768a:	4603      	mov	r3, r0
 800768c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 8007690:	e015      	b.n	80076be <HAL_RCCEx_PeriphCLKConfig+0xbae>

      case RCC_LPTIM1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007692:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007696:	3328      	adds	r3, #40	; 0x28
 8007698:	2102      	movs	r1, #2
 800769a:	4618      	mov	r0, r3
 800769c:	f001 fd6c 	bl	8009178 <RCCEx_PLL3_Config>
 80076a0:	4603      	mov	r3, r0
 80076a2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 80076a6:	e00a      	b.n	80076be <HAL_RCCEx_PeriphCLKConfig+0xbae>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM1 clock */
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80076a8:	2301      	movs	r3, #1
 80076aa:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80076ae:	e006      	b.n	80076be <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80076b0:	bf00      	nop
 80076b2:	e004      	b.n	80076be <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80076b4:	bf00      	nop
 80076b6:	e002      	b.n	80076be <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80076b8:	bf00      	nop
 80076ba:	e000      	b.n	80076be <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80076bc:	bf00      	nop
    }

    if (ret == HAL_OK)
 80076be:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80076c2:	2b00      	cmp	r3, #0
 80076c4:	d10b      	bne.n	80076de <HAL_RCCEx_PeriphCLKConfig+0xbce>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 80076c6:	4b39      	ldr	r3, [pc, #228]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80076c8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80076ca:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 80076ce:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80076d2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80076d6:	4a35      	ldr	r2, [pc, #212]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80076d8:	430b      	orrs	r3, r1
 80076da:	6553      	str	r3, [r2, #84]	; 0x54
 80076dc:	e003      	b.n	80076e6 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80076de:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80076e2:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 80076e6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80076ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076ee:	f002 0340 	and.w	r3, r2, #64	; 0x40
 80076f2:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80076f6:	2300      	movs	r3, #0
 80076f8:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80076fc:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	; 0x98
 8007700:	460b      	mov	r3, r1
 8007702:	4313      	orrs	r3, r2
 8007704:	d058      	beq.n	80077b8 <HAL_RCCEx_PeriphCLKConfig+0xca8>
  {
    switch (PeriphClkInit->Lptim2ClockSelection)
 8007706:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800770a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800770e:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8007712:	d033      	beq.n	800777c <HAL_RCCEx_PeriphCLKConfig+0xc6c>
 8007714:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8007718:	d82c      	bhi.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800771a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800771e:	d02f      	beq.n	8007780 <HAL_RCCEx_PeriphCLKConfig+0xc70>
 8007720:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007724:	d826      	bhi.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8007726:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800772a:	d02b      	beq.n	8007784 <HAL_RCCEx_PeriphCLKConfig+0xc74>
 800772c:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8007730:	d820      	bhi.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8007732:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007736:	d012      	beq.n	800775e <HAL_RCCEx_PeriphCLKConfig+0xc4e>
 8007738:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800773c:	d81a      	bhi.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800773e:	2b00      	cmp	r3, #0
 8007740:	d022      	beq.n	8007788 <HAL_RCCEx_PeriphCLKConfig+0xc78>
 8007742:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007746:	d115      	bne.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0xc64>
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007748:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800774c:	3308      	adds	r3, #8
 800774e:	2100      	movs	r1, #0
 8007750:	4618      	mov	r0, r3
 8007752:	f001 fc5f 	bl	8009014 <RCCEx_PLL2_Config>
 8007756:	4603      	mov	r3, r0
 8007758:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 800775c:	e015      	b.n	800778a <HAL_RCCEx_PeriphCLKConfig+0xc7a>

      case RCC_LPTIM2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800775e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007762:	3328      	adds	r3, #40	; 0x28
 8007764:	2102      	movs	r1, #2
 8007766:	4618      	mov	r0, r3
 8007768:	f001 fd06 	bl	8009178 <RCCEx_PLL3_Config>
 800776c:	4603      	mov	r3, r0
 800776e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8007772:	e00a      	b.n	800778a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM2 clock */
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007774:	2301      	movs	r3, #1
 8007776:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800777a:	e006      	b.n	800778a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 800777c:	bf00      	nop
 800777e:	e004      	b.n	800778a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8007780:	bf00      	nop
 8007782:	e002      	b.n	800778a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8007784:	bf00      	nop
 8007786:	e000      	b.n	800778a <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8007788:	bf00      	nop
    }

    if (ret == HAL_OK)
 800778a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800778e:	2b00      	cmp	r3, #0
 8007790:	d10e      	bne.n	80077b0 <HAL_RCCEx_PeriphCLKConfig+0xca0>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 8007792:	4b06      	ldr	r3, [pc, #24]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8007794:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007796:	f423 51e0 	bic.w	r1, r3, #7168	; 0x1c00
 800779a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800779e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80077a2:	4a02      	ldr	r2, [pc, #8]	; (80077ac <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80077a4:	430b      	orrs	r3, r1
 80077a6:	6593      	str	r3, [r2, #88]	; 0x58
 80077a8:	e006      	b.n	80077b8 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 80077aa:	bf00      	nop
 80077ac:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 80077b0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80077b4:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM345 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 80077b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80077bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80077c0:	f002 0380 	and.w	r3, r2, #128	; 0x80
 80077c4:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80077c8:	2300      	movs	r3, #0
 80077ca:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80077ce:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	; 0x90
 80077d2:	460b      	mov	r3, r1
 80077d4:	4313      	orrs	r3, r2
 80077d6:	d055      	beq.n	8007884 <HAL_RCCEx_PeriphCLKConfig+0xd74>
  {
    switch (PeriphClkInit->Lptim345ClockSelection)
 80077d8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80077dc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80077e0:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 80077e4:	d033      	beq.n	800784e <HAL_RCCEx_PeriphCLKConfig+0xd3e>
 80077e6:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 80077ea:	d82c      	bhi.n	8007846 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 80077ec:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80077f0:	d02f      	beq.n	8007852 <HAL_RCCEx_PeriphCLKConfig+0xd42>
 80077f2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80077f6:	d826      	bhi.n	8007846 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 80077f8:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80077fc:	d02b      	beq.n	8007856 <HAL_RCCEx_PeriphCLKConfig+0xd46>
 80077fe:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8007802:	d820      	bhi.n	8007846 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8007804:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007808:	d012      	beq.n	8007830 <HAL_RCCEx_PeriphCLKConfig+0xd20>
 800780a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800780e:	d81a      	bhi.n	8007846 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8007810:	2b00      	cmp	r3, #0
 8007812:	d022      	beq.n	800785a <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 8007814:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007818:	d115      	bne.n	8007846 <HAL_RCCEx_PeriphCLKConfig+0xd36>
      case RCC_LPTIM345CLKSOURCE_PCLK4:      /* SRD/D3 PCLK1 (PCLK4) as clock source for LPTIM3/4/5 */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM345CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800781a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800781e:	3308      	adds	r3, #8
 8007820:	2100      	movs	r1, #0
 8007822:	4618      	mov	r0, r3
 8007824:	f001 fbf6 	bl	8009014 <RCCEx_PLL2_Config>
 8007828:	4603      	mov	r3, r0
 800782a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 800782e:	e015      	b.n	800785c <HAL_RCCEx_PeriphCLKConfig+0xd4c>

      case RCC_LPTIM345CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007830:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007834:	3328      	adds	r3, #40	; 0x28
 8007836:	2102      	movs	r1, #2
 8007838:	4618      	mov	r0, r3
 800783a:	f001 fc9d 	bl	8009178 <RCCEx_PLL3_Config>
 800783e:	4603      	mov	r3, r0
 8007840:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8007844:	e00a      	b.n	800785c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM3/4/5 clock */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007846:	2301      	movs	r3, #1
 8007848:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800784c:	e006      	b.n	800785c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 800784e:	bf00      	nop
 8007850:	e004      	b.n	800785c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8007852:	bf00      	nop
 8007854:	e002      	b.n	800785c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8007856:	bf00      	nop
 8007858:	e000      	b.n	800785c <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 800785a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800785c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007860:	2b00      	cmp	r3, #0
 8007862:	d10b      	bne.n	800787c <HAL_RCCEx_PeriphCLKConfig+0xd6c>
    {
      /* Set the source of LPTIM3/4/5 clock */
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8007864:	4ba0      	ldr	r3, [pc, #640]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007866:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007868:	f423 4160 	bic.w	r1, r3, #57344	; 0xe000
 800786c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007870:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8007874:	4a9c      	ldr	r2, [pc, #624]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007876:	430b      	orrs	r3, r1
 8007878:	6593      	str	r3, [r2, #88]	; 0x58
 800787a:	e003      	b.n	8007884 <HAL_RCCEx_PeriphCLKConfig+0xd74>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800787c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007880:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*------------------------------ I2C1/2/3/5* Configuration ------------------------*/
#if defined(I2C5)
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1235) == RCC_PERIPHCLK_I2C1235)
 8007884:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007888:	e9d3 2300 	ldrd	r2, r3, [r3]
 800788c:	f002 0308 	and.w	r3, r2, #8
 8007890:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8007894:	2300      	movs	r3, #0
 8007896:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800789a:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	; 0x88
 800789e:	460b      	mov	r3, r1
 80078a0:	4313      	orrs	r3, r2
 80078a2:	d01e      	beq.n	80078e2 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1235CLKSOURCE(PeriphClkInit->I2c1235ClockSelection));

    if ((PeriphClkInit->I2c1235ClockSelection) == RCC_I2C1235CLKSOURCE_PLL3)
 80078a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80078a8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80078ac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80078b0:	d10c      	bne.n	80078cc <HAL_RCCEx_PeriphCLKConfig+0xdbc>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 80078b2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80078b6:	3328      	adds	r3, #40	; 0x28
 80078b8:	2102      	movs	r1, #2
 80078ba:	4618      	mov	r0, r3
 80078bc:	f001 fc5c 	bl	8009178 <RCCEx_PLL3_Config>
 80078c0:	4603      	mov	r3, r0
 80078c2:	2b00      	cmp	r3, #0
 80078c4:	d002      	beq.n	80078cc <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      {
        status = HAL_ERROR;
 80078c6:	2301      	movs	r3, #1
 80078c8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
      }
    }

    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);
 80078cc:	4b86      	ldr	r3, [pc, #536]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80078ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80078d0:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80078d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80078d8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80078dc:	4a82      	ldr	r2, [pc, #520]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80078de:	430b      	orrs	r3, r1
 80078e0:	6553      	str	r3, [r2, #84]	; 0x54

  }
#endif /* I2C5 */

  /*------------------------------ I2C4 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80078e2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80078e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078ea:	f002 0310 	and.w	r3, r2, #16
 80078ee:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80078f2:	2300      	movs	r3, #0
 80078f4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80078f8:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	; 0x80
 80078fc:	460b      	mov	r3, r1
 80078fe:	4313      	orrs	r3, r2
 8007900:	d01e      	beq.n	8007940 <HAL_RCCEx_PeriphCLKConfig+0xe30>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 8007902:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007906:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800790a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800790e:	d10c      	bne.n	800792a <HAL_RCCEx_PeriphCLKConfig+0xe1a>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007910:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007914:	3328      	adds	r3, #40	; 0x28
 8007916:	2102      	movs	r1, #2
 8007918:	4618      	mov	r0, r3
 800791a:	f001 fc2d 	bl	8009178 <RCCEx_PLL3_Config>
 800791e:	4603      	mov	r3, r0
 8007920:	2b00      	cmp	r3, #0
 8007922:	d002      	beq.n	800792a <HAL_RCCEx_PeriphCLKConfig+0xe1a>
      {
        status = HAL_ERROR;
 8007924:	2301      	movs	r3, #1
 8007926:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
      }
    }

    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 800792a:	4b6f      	ldr	r3, [pc, #444]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800792c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800792e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8007932:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007936:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800793a:	4a6b      	ldr	r2, [pc, #428]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800793c:	430b      	orrs	r3, r1
 800793e:	6593      	str	r3, [r2, #88]	; 0x58

  }

  /*---------------------------- ADC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8007940:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007944:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007948:	f402 2300 	and.w	r3, r2, #524288	; 0x80000
 800794c:	67bb      	str	r3, [r7, #120]	; 0x78
 800794e:	2300      	movs	r3, #0
 8007950:	67fb      	str	r3, [r7, #124]	; 0x7c
 8007952:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	; 0x78
 8007956:	460b      	mov	r3, r1
 8007958:	4313      	orrs	r3, r2
 800795a:	d03e      	beq.n	80079da <HAL_RCCEx_PeriphCLKConfig+0xeca>
  {
    switch (PeriphClkInit->AdcClockSelection)
 800795c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007960:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8007964:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8007968:	d022      	beq.n	80079b0 <HAL_RCCEx_PeriphCLKConfig+0xea0>
 800796a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800796e:	d81b      	bhi.n	80079a8 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 8007970:	2b00      	cmp	r3, #0
 8007972:	d003      	beq.n	800797c <HAL_RCCEx_PeriphCLKConfig+0xe6c>
 8007974:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007978:	d00b      	beq.n	8007992 <HAL_RCCEx_PeriphCLKConfig+0xe82>
 800797a:	e015      	b.n	80079a8 <HAL_RCCEx_PeriphCLKConfig+0xe98>
    {

      case RCC_ADCCLKSOURCE_PLL2: /* PLL2 is used as clock source for ADC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 800797c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007980:	3308      	adds	r3, #8
 8007982:	2100      	movs	r1, #0
 8007984:	4618      	mov	r0, r3
 8007986:	f001 fb45 	bl	8009014 <RCCEx_PLL2_Config>
 800798a:	4603      	mov	r3, r0
 800798c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 8007990:	e00f      	b.n	80079b2 <HAL_RCCEx_PeriphCLKConfig+0xea2>

      case RCC_ADCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for ADC*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007992:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007996:	3328      	adds	r3, #40	; 0x28
 8007998:	2102      	movs	r1, #2
 800799a:	4618      	mov	r0, r3
 800799c:	f001 fbec 	bl	8009178 <RCCEx_PLL3_Config>
 80079a0:	4603      	mov	r3, r0
 80079a2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 80079a6:	e004      	b.n	80079b2 <HAL_RCCEx_PeriphCLKConfig+0xea2>
        /* HSI, HSE, or CSI oscillator is used as source of ADC clock */
        /* ADC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80079a8:	2301      	movs	r3, #1
 80079aa:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80079ae:	e000      	b.n	80079b2 <HAL_RCCEx_PeriphCLKConfig+0xea2>
        break;
 80079b0:	bf00      	nop
    }

    if (ret == HAL_OK)
 80079b2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80079b6:	2b00      	cmp	r3, #0
 80079b8:	d10b      	bne.n	80079d2 <HAL_RCCEx_PeriphCLKConfig+0xec2>
    {
      /* Set the source of ADC clock*/
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 80079ba:	4b4b      	ldr	r3, [pc, #300]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80079bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80079be:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 80079c2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80079c6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80079ca:	4a47      	ldr	r2, [pc, #284]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80079cc:	430b      	orrs	r3, r1
 80079ce:	6593      	str	r3, [r2, #88]	; 0x58
 80079d0:	e003      	b.n	80079da <HAL_RCCEx_PeriphCLKConfig+0xeca>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80079d2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80079d6:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*------------------------------ USB Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 80079da:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80079de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079e2:	f402 2380 	and.w	r3, r2, #262144	; 0x40000
 80079e6:	673b      	str	r3, [r7, #112]	; 0x70
 80079e8:	2300      	movs	r3, #0
 80079ea:	677b      	str	r3, [r7, #116]	; 0x74
 80079ec:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	; 0x70
 80079f0:	460b      	mov	r3, r1
 80079f2:	4313      	orrs	r3, r2
 80079f4:	d03b      	beq.n	8007a6e <HAL_RCCEx_PeriphCLKConfig+0xf5e>
  {

    switch (PeriphClkInit->UsbClockSelection)
 80079f6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80079fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80079fe:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007a02:	d01f      	beq.n	8007a44 <HAL_RCCEx_PeriphCLKConfig+0xf34>
 8007a04:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007a08:	d818      	bhi.n	8007a3c <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 8007a0a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007a0e:	d003      	beq.n	8007a18 <HAL_RCCEx_PeriphCLKConfig+0xf08>
 8007a10:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007a14:	d007      	beq.n	8007a26 <HAL_RCCEx_PeriphCLKConfig+0xf16>
 8007a16:	e011      	b.n	8007a3c <HAL_RCCEx_PeriphCLKConfig+0xf2c>
    {
      case RCC_USBCLKSOURCE_PLL:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007a18:	4b33      	ldr	r3, [pc, #204]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007a1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007a1c:	4a32      	ldr	r2, [pc, #200]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007a1e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007a22:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* USB clock source configuration done later after clock selection check */
        break;
 8007a24:	e00f      	b.n	8007a46 <HAL_RCCEx_PeriphCLKConfig+0xf36>

      case RCC_USBCLKSOURCE_PLL3: /* PLL3 is used as clock source for USB*/

        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007a26:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007a2a:	3328      	adds	r3, #40	; 0x28
 8007a2c:	2101      	movs	r1, #1
 8007a2e:	4618      	mov	r0, r3
 8007a30:	f001 fba2 	bl	8009178 <RCCEx_PLL3_Config>
 8007a34:	4603      	mov	r3, r0
 8007a36:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* USB clock source configuration done later after clock selection check */
        break;
 8007a3a:	e004      	b.n	8007a46 <HAL_RCCEx_PeriphCLKConfig+0xf36>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007a3c:	2301      	movs	r3, #1
 8007a3e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007a42:	e000      	b.n	8007a46 <HAL_RCCEx_PeriphCLKConfig+0xf36>
        break;
 8007a44:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007a46:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007a4a:	2b00      	cmp	r3, #0
 8007a4c:	d10b      	bne.n	8007a66 <HAL_RCCEx_PeriphCLKConfig+0xf56>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8007a4e:	4b26      	ldr	r3, [pc, #152]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007a50:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007a52:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8007a56:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007a5a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007a5e:	4a22      	ldr	r2, [pc, #136]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007a60:	430b      	orrs	r3, r1
 8007a62:	6553      	str	r3, [r2, #84]	; 0x54
 8007a64:	e003      	b.n	8007a6e <HAL_RCCEx_PeriphCLKConfig+0xf5e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007a66:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007a6a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }

  }

  /*------------------------------------- SDMMC Configuration ------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8007a6e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007a72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a76:	f402 3380 	and.w	r3, r2, #65536	; 0x10000
 8007a7a:	66bb      	str	r3, [r7, #104]	; 0x68
 8007a7c:	2300      	movs	r3, #0
 8007a7e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8007a80:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	; 0x68
 8007a84:	460b      	mov	r3, r1
 8007a86:	4313      	orrs	r3, r2
 8007a88:	d034      	beq.n	8007af4 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC(PeriphClkInit->SdmmcClockSelection));

    switch (PeriphClkInit->SdmmcClockSelection)
 8007a8a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007a8e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007a90:	2b00      	cmp	r3, #0
 8007a92:	d003      	beq.n	8007a9c <HAL_RCCEx_PeriphCLKConfig+0xf8c>
 8007a94:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007a98:	d007      	beq.n	8007aaa <HAL_RCCEx_PeriphCLKConfig+0xf9a>
 8007a9a:	e011      	b.n	8007ac0 <HAL_RCCEx_PeriphCLKConfig+0xfb0>
    {
      case RCC_SDMMCCLKSOURCE_PLL:      /* PLL is used as clock source for SDMMC*/
        /* Enable SDMMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007a9c:	4b12      	ldr	r3, [pc, #72]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007a9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007aa0:	4a11      	ldr	r2, [pc, #68]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007aa2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007aa6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8007aa8:	e00e      	b.n	8007ac8 <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for SDMMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007aaa:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007aae:	3308      	adds	r3, #8
 8007ab0:	2102      	movs	r1, #2
 8007ab2:	4618      	mov	r0, r3
 8007ab4:	f001 faae 	bl	8009014 <RCCEx_PLL2_Config>
 8007ab8:	4603      	mov	r3, r0
 8007aba:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8007abe:	e003      	b.n	8007ac8 <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      default:
        ret = HAL_ERROR;
 8007ac0:	2301      	movs	r3, #1
 8007ac2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007ac6:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007ac8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007acc:	2b00      	cmp	r3, #0
 8007ace:	d10d      	bne.n	8007aec <HAL_RCCEx_PeriphCLKConfig+0xfdc>
    {
      /* Set the source of SDMMC clock*/
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8007ad0:	4b05      	ldr	r3, [pc, #20]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007ad2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007ad4:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8007ad8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007adc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007ade:	4a02      	ldr	r2, [pc, #8]	; (8007ae8 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8007ae0:	430b      	orrs	r3, r1
 8007ae2:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007ae4:	e006      	b.n	8007af4 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 8007ae6:	bf00      	nop
 8007ae8:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007aec:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007af0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

#if defined(LTDC)
  /*-------------------------------------- LTDC Configuration -----------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007af4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007af8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007afc:	f002 5300 	and.w	r3, r2, #536870912	; 0x20000000
 8007b00:	663b      	str	r3, [r7, #96]	; 0x60
 8007b02:	2300      	movs	r3, #0
 8007b04:	667b      	str	r3, [r7, #100]	; 0x64
 8007b06:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 8007b0a:	460b      	mov	r3, r1
 8007b0c:	4313      	orrs	r3, r2
 8007b0e:	d00c      	beq.n	8007b2a <HAL_RCCEx_PeriphCLKConfig+0x101a>
  {
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8007b10:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007b14:	3328      	adds	r3, #40	; 0x28
 8007b16:	2102      	movs	r1, #2
 8007b18:	4618      	mov	r0, r3
 8007b1a:	f001 fb2d 	bl	8009178 <RCCEx_PLL3_Config>
 8007b1e:	4603      	mov	r3, r0
 8007b20:	2b00      	cmp	r3, #0
 8007b22:	d002      	beq.n	8007b2a <HAL_RCCEx_PeriphCLKConfig+0x101a>
    {
      status = HAL_ERROR;
 8007b24:	2301      	movs	r3, #1
 8007b26:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif /* LTDC */

  /*------------------------------ RNG Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007b2a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007b2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b32:	f402 3300 	and.w	r3, r2, #131072	; 0x20000
 8007b36:	65bb      	str	r3, [r7, #88]	; 0x58
 8007b38:	2300      	movs	r3, #0
 8007b3a:	65fb      	str	r3, [r7, #92]	; 0x5c
 8007b3c:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	; 0x58
 8007b40:	460b      	mov	r3, r1
 8007b42:	4313      	orrs	r3, r2
 8007b44:	d036      	beq.n	8007bb4 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
  {

    switch (PeriphClkInit->RngClockSelection)
 8007b46:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007b4a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8007b4c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007b50:	d018      	beq.n	8007b84 <HAL_RCCEx_PeriphCLKConfig+0x1074>
 8007b52:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007b56:	d811      	bhi.n	8007b7c <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8007b58:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007b5c:	d014      	beq.n	8007b88 <HAL_RCCEx_PeriphCLKConfig+0x1078>
 8007b5e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007b62:	d80b      	bhi.n	8007b7c <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8007b64:	2b00      	cmp	r3, #0
 8007b66:	d011      	beq.n	8007b8c <HAL_RCCEx_PeriphCLKConfig+0x107c>
 8007b68:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007b6c:	d106      	bne.n	8007b7c <HAL_RCCEx_PeriphCLKConfig+0x106c>
    {
      case RCC_RNGCLKSOURCE_PLL:     /* PLL is used as clock source for RNG*/
        /* Enable RNG Clock output generated form System RNG . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007b6e:	4bb7      	ldr	r3, [pc, #732]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007b70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007b72:	4ab6      	ldr	r2, [pc, #728]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007b74:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007b78:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* RNG clock source configuration done later after clock selection check */
        break;
 8007b7a:	e008      	b.n	8007b8e <HAL_RCCEx_PeriphCLKConfig+0x107e>
        /* HSI48 oscillator is used as source of RNG clock */
        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007b7c:	2301      	movs	r3, #1
 8007b7e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007b82:	e004      	b.n	8007b8e <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8007b84:	bf00      	nop
 8007b86:	e002      	b.n	8007b8e <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8007b88:	bf00      	nop
 8007b8a:	e000      	b.n	8007b8e <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8007b8c:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007b8e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007b92:	2b00      	cmp	r3, #0
 8007b94:	d10a      	bne.n	8007bac <HAL_RCCEx_PeriphCLKConfig+0x109c>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8007b96:	4bad      	ldr	r3, [pc, #692]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007b98:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007b9a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8007b9e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007ba2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8007ba4:	4aa9      	ldr	r2, [pc, #676]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007ba6:	430b      	orrs	r3, r1
 8007ba8:	6553      	str	r3, [r2, #84]	; 0x54
 8007baa:	e003      	b.n	8007bb4 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007bac:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007bb0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }

  }

  /*------------------------------ SWPMI1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8007bb4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007bb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bbc:	f402 1380 	and.w	r3, r2, #1048576	; 0x100000
 8007bc0:	653b      	str	r3, [r7, #80]	; 0x50
 8007bc2:	2300      	movs	r3, #0
 8007bc4:	657b      	str	r3, [r7, #84]	; 0x54
 8007bc6:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 8007bca:	460b      	mov	r3, r1
 8007bcc:	4313      	orrs	r3, r2
 8007bce:	d009      	beq.n	8007be4 <HAL_RCCEx_PeriphCLKConfig+0x10d4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 interface clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8007bd0:	4b9e      	ldr	r3, [pc, #632]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007bd2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007bd4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8007bd8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007bdc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007bde:	4a9b      	ldr	r2, [pc, #620]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007be0:	430b      	orrs	r3, r1
 8007be2:	6513      	str	r3, [r2, #80]	; 0x50
    /* Configure the HRTIM1 clock source */
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
  }
#endif  /*HRTIM1*/
  /*------------------------------ DFSDM1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8007be4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007be8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bec:	f402 1300 	and.w	r3, r2, #2097152	; 0x200000
 8007bf0:	64bb      	str	r3, [r7, #72]	; 0x48
 8007bf2:	2300      	movs	r3, #0
 8007bf4:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007bf6:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	; 0x48
 8007bfa:	460b      	mov	r3, r1
 8007bfc:	4313      	orrs	r3, r2
 8007bfe:	d009      	beq.n	8007c14 <HAL_RCCEx_PeriphCLKConfig+0x1104>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8007c00:	4b92      	ldr	r3, [pc, #584]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c02:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007c04:	f023 7180 	bic.w	r1, r3, #16777216	; 0x1000000
 8007c08:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c0c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8007c0e:	4a8f      	ldr	r2, [pc, #572]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c10:	430b      	orrs	r3, r1
 8007c12:	6513      	str	r3, [r2, #80]	; 0x50
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
  }
#endif  /* DFSDM2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8007c14:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c1c:	f002 4380 	and.w	r3, r2, #1073741824	; 0x40000000
 8007c20:	643b      	str	r3, [r7, #64]	; 0x40
 8007c22:	2300      	movs	r3, #0
 8007c24:	647b      	str	r3, [r7, #68]	; 0x44
 8007c26:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 8007c2a:	460b      	mov	r3, r1
 8007c2c:	4313      	orrs	r3, r2
 8007c2e:	d00e      	beq.n	8007c4e <HAL_RCCEx_PeriphCLKConfig+0x113e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007c30:	4b86      	ldr	r3, [pc, #536]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c32:	691b      	ldr	r3, [r3, #16]
 8007c34:	4a85      	ldr	r2, [pc, #532]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c36:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8007c3a:	6113      	str	r3, [r2, #16]
 8007c3c:	4b83      	ldr	r3, [pc, #524]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c3e:	6919      	ldr	r1, [r3, #16]
 8007c40:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c44:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8007c48:	4a80      	ldr	r2, [pc, #512]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c4a:	430b      	orrs	r3, r1
 8007c4c:	6113      	str	r3, [r2, #16]
  }

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8007c4e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c56:	f002 4300 	and.w	r3, r2, #2147483648	; 0x80000000
 8007c5a:	63bb      	str	r3, [r7, #56]	; 0x38
 8007c5c:	2300      	movs	r3, #0
 8007c5e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007c60:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
 8007c64:	460b      	mov	r3, r1
 8007c66:	4313      	orrs	r3, r2
 8007c68:	d009      	beq.n	8007c7e <HAL_RCCEx_PeriphCLKConfig+0x116e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(PeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8007c6a:	4b78      	ldr	r3, [pc, #480]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c6e:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 8007c72:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c76:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c78:	4a74      	ldr	r2, [pc, #464]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c7a:	430b      	orrs	r3, r1
 8007c7c:	64d3      	str	r3, [r2, #76]	; 0x4c
  }

  /*------------------------------ CEC Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8007c7e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c86:	f402 0300 	and.w	r3, r2, #8388608	; 0x800000
 8007c8a:	633b      	str	r3, [r7, #48]	; 0x30
 8007c8c:	2300      	movs	r3, #0
 8007c8e:	637b      	str	r3, [r7, #52]	; 0x34
 8007c90:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 8007c94:	460b      	mov	r3, r1
 8007c96:	4313      	orrs	r3, r2
 8007c98:	d00a      	beq.n	8007cb0 <HAL_RCCEx_PeriphCLKConfig+0x11a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC interface clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8007c9a:	4b6c      	ldr	r3, [pc, #432]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007c9c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c9e:	f423 0140 	bic.w	r1, r3, #12582912	; 0xc00000
 8007ca2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007ca6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007caa:	4a68      	ldr	r2, [pc, #416]	; (8007e4c <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8007cac:	430b      	orrs	r3, r1
 8007cae:	6553      	str	r3, [r2, #84]	; 0x54
  }

  /*---------------------------- PLL2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 8007cb0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007cb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cb8:	2100      	movs	r1, #0
 8007cba:	62b9      	str	r1, [r7, #40]	; 0x28
 8007cbc:	f003 0301 	and.w	r3, r3, #1
 8007cc0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007cc2:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	; 0x28
 8007cc6:	460b      	mov	r3, r1
 8007cc8:	4313      	orrs	r3, r2
 8007cca:	d011      	beq.n	8007cf0 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007ccc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007cd0:	3308      	adds	r3, #8
 8007cd2:	2100      	movs	r1, #0
 8007cd4:	4618      	mov	r0, r3
 8007cd6:	f001 f99d 	bl	8009014 <RCCEx_PLL2_Config>
 8007cda:	4603      	mov	r3, r0
 8007cdc:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8007ce0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007ce4:	2b00      	cmp	r3, #0
 8007ce6:	d003      	beq.n	8007cf0 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007ce8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007cec:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    } 
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8007cf0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007cf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cf8:	2100      	movs	r1, #0
 8007cfa:	6239      	str	r1, [r7, #32]
 8007cfc:	f003 0302 	and.w	r3, r3, #2
 8007d00:	627b      	str	r3, [r7, #36]	; 0x24
 8007d02:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8007d06:	460b      	mov	r3, r1
 8007d08:	4313      	orrs	r3, r2
 8007d0a:	d011      	beq.n	8007d30 <HAL_RCCEx_PeriphCLKConfig+0x1220>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007d0c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d10:	3308      	adds	r3, #8
 8007d12:	2101      	movs	r1, #1
 8007d14:	4618      	mov	r0, r3
 8007d16:	f001 f97d 	bl	8009014 <RCCEx_PLL2_Config>
 8007d1a:	4603      	mov	r3, r0
 8007d1c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8007d20:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007d24:	2b00      	cmp	r3, #0
 8007d26:	d003      	beq.n	8007d30 <HAL_RCCEx_PeriphCLKConfig+0x1220>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007d28:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007d2c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8007d30:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d38:	2100      	movs	r1, #0
 8007d3a:	61b9      	str	r1, [r7, #24]
 8007d3c:	f003 0304 	and.w	r3, r3, #4
 8007d40:	61fb      	str	r3, [r7, #28]
 8007d42:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8007d46:	460b      	mov	r3, r1
 8007d48:	4313      	orrs	r3, r2
 8007d4a:	d011      	beq.n	8007d70 <HAL_RCCEx_PeriphCLKConfig+0x1260>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007d4c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d50:	3308      	adds	r3, #8
 8007d52:	2102      	movs	r1, #2
 8007d54:	4618      	mov	r0, r3
 8007d56:	f001 f95d 	bl	8009014 <RCCEx_PLL2_Config>
 8007d5a:	4603      	mov	r3, r0
 8007d5c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8007d60:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007d64:	2b00      	cmp	r3, #0
 8007d66:	d003      	beq.n	8007d70 <HAL_RCCEx_PeriphCLKConfig+0x1260>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007d68:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007d6c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  

  /*---------------------------- PLL3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8007d70:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d78:	2100      	movs	r1, #0
 8007d7a:	6139      	str	r1, [r7, #16]
 8007d7c:	f003 0308 	and.w	r3, r3, #8
 8007d80:	617b      	str	r3, [r7, #20]
 8007d82:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8007d86:	460b      	mov	r3, r1
 8007d88:	4313      	orrs	r3, r2
 8007d8a:	d011      	beq.n	8007db0 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007d8c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d90:	3328      	adds	r3, #40	; 0x28
 8007d92:	2100      	movs	r1, #0
 8007d94:	4618      	mov	r0, r3
 8007d96:	f001 f9ef 	bl	8009178 <RCCEx_PLL3_Config>
 8007d9a:	4603      	mov	r3, r0
 8007d9c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  
    if (ret == HAL_OK)
 8007da0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007da4:	2b00      	cmp	r3, #0
 8007da6:	d003      	beq.n	8007db0 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007da8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007dac:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 8007db0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007db4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007db8:	2100      	movs	r1, #0
 8007dba:	60b9      	str	r1, [r7, #8]
 8007dbc:	f003 0310 	and.w	r3, r3, #16
 8007dc0:	60fb      	str	r3, [r7, #12]
 8007dc2:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8007dc6:	460b      	mov	r3, r1
 8007dc8:	4313      	orrs	r3, r2
 8007dca:	d011      	beq.n	8007df0 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007dcc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007dd0:	3328      	adds	r3, #40	; 0x28
 8007dd2:	2101      	movs	r1, #1
 8007dd4:	4618      	mov	r0, r3
 8007dd6:	f001 f9cf 	bl	8009178 <RCCEx_PLL3_Config>
 8007dda:	4603      	mov	r3, r0
 8007ddc:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8007de0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007de4:	2b00      	cmp	r3, #0
 8007de6:	d003      	beq.n	8007df0 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007de8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007dec:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 8007df0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007df4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007df8:	2100      	movs	r1, #0
 8007dfa:	6039      	str	r1, [r7, #0]
 8007dfc:	f003 0320 	and.w	r3, r3, #32
 8007e00:	607b      	str	r3, [r7, #4]
 8007e02:	e9d7 1200 	ldrd	r1, r2, [r7]
 8007e06:	460b      	mov	r3, r1
 8007e08:	4313      	orrs	r3, r2
 8007e0a:	d011      	beq.n	8007e30 <HAL_RCCEx_PeriphCLKConfig+0x1320>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007e0c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007e10:	3328      	adds	r3, #40	; 0x28
 8007e12:	2102      	movs	r1, #2
 8007e14:	4618      	mov	r0, r3
 8007e16:	f001 f9af 	bl	8009178 <RCCEx_PLL3_Config>
 8007e1a:	4603      	mov	r3, r0
 8007e1c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8007e20:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007e24:	2b00      	cmp	r3, #0
 8007e26:	d003      	beq.n	8007e30 <HAL_RCCEx_PeriphCLKConfig+0x1320>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007e28:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007e2c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    } 
  }

  if (status == HAL_OK)
 8007e30:	f897 3116 	ldrb.w	r3, [r7, #278]	; 0x116
 8007e34:	2b00      	cmp	r3, #0
 8007e36:	d101      	bne.n	8007e3c <HAL_RCCEx_PeriphCLKConfig+0x132c>
  {
    return HAL_OK;
 8007e38:	2300      	movs	r3, #0
 8007e3a:	e000      	b.n	8007e3e <HAL_RCCEx_PeriphCLKConfig+0x132e>
  }
  return HAL_ERROR;
 8007e3c:	2301      	movs	r3, #1
}
 8007e3e:	4618      	mov	r0, r3
 8007e40:	f507 778c 	add.w	r7, r7, #280	; 0x118
 8007e44:	46bd      	mov	sp, r7
 8007e46:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007e4a:	bf00      	nop
 8007e4c:	58024400 	.word	0x58024400

08007e50 <HAL_RCCEx_GetPeriphCLKFreq>:
  * @retval Frequency in KHz
  *
  *  (*) : Available on some STM32H7 lines only.
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint64_t PeriphClk)
{
 8007e50:	b580      	push	{r7, lr}
 8007e52:	b090      	sub	sp, #64	; 0x40
 8007e54:	af00      	add	r7, sp, #0
 8007e56:	e9c7 0100 	strd	r0, r1, [r7]
  /* This variable is used to store the SAI and CKP clock source */
  uint32_t saiclocksource;
  uint32_t ckpclocksource;
  uint32_t srcclk;

  if (PeriphClk == RCC_PERIPHCLK_SAI1)
 8007e5a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007e5e:	f5a2 7180 	sub.w	r1, r2, #256	; 0x100
 8007e62:	430b      	orrs	r3, r1
 8007e64:	f040 8094 	bne.w	8007f90 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
  {

    saiclocksource = __HAL_RCC_GET_SAI1_SOURCE();
 8007e68:	4b9b      	ldr	r3, [pc, #620]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007e6a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007e6c:	f003 0307 	and.w	r3, r3, #7
 8007e70:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8007e72:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007e74:	2b04      	cmp	r3, #4
 8007e76:	f200 8087 	bhi.w	8007f88 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 8007e7a:	a201      	add	r2, pc, #4	; (adr r2, 8007e80 <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 8007e7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007e80:	08007e95 	.word	0x08007e95
 8007e84:	08007ebd 	.word	0x08007ebd
 8007e88:	08007ee5 	.word	0x08007ee5
 8007e8c:	08007f81 	.word	0x08007f81
 8007e90:	08007f0d 	.word	0x08007f0d
    {
      case RCC_SAI1CLKSOURCE_PLL: /* PLL1 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8007e94:	4b90      	ldr	r3, [pc, #576]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007e96:	681b      	ldr	r3, [r3, #0]
 8007e98:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007e9c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007ea0:	d108      	bne.n	8007eb4 <HAL_RCCEx_GetPeriphCLKFreq+0x64>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8007ea2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8007ea6:	4618      	mov	r0, r3
 8007ea8:	f000 ff62 	bl	8008d70 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8007eac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007eae:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8007eb0:	f000 bc93 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8007eb4:	2300      	movs	r3, #0
 8007eb6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8007eb8:	f000 bc8f 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8007ebc:	4b86      	ldr	r3, [pc, #536]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007ebe:	681b      	ldr	r3, [r3, #0]
 8007ec0:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8007ec4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8007ec8:	d108      	bne.n	8007edc <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8007eca:	f107 0318 	add.w	r3, r7, #24
 8007ece:	4618      	mov	r0, r3
 8007ed0:	f000 fca6 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8007ed4:	69bb      	ldr	r3, [r7, #24]
 8007ed6:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8007ed8:	f000 bc7f 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8007edc:	2300      	movs	r3, #0
 8007ede:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8007ee0:	f000 bc7b 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI1CLKSOURCE_PLL3: /* PLL3 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8007ee4:	4b7c      	ldr	r3, [pc, #496]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007ee6:	681b      	ldr	r3, [r3, #0]
 8007ee8:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8007eec:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007ef0:	d108      	bne.n	8007f04 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8007ef2:	f107 030c 	add.w	r3, r7, #12
 8007ef6:	4618      	mov	r0, r3
 8007ef8:	f000 fde6 	bl	8008ac8 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 8007efc:	68fb      	ldr	r3, [r7, #12]
 8007efe:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8007f00:	f000 bc6b 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8007f04:	2300      	movs	r3, #0
 8007f06:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8007f08:	f000 bc67 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI1CLKSOURCE_CLKP: /* CKPER is the clock source for SAI1*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8007f0c:	4b72      	ldr	r3, [pc, #456]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007f0e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007f10:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007f14:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8007f16:	4b70      	ldr	r3, [pc, #448]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007f18:	681b      	ldr	r3, [r3, #0]
 8007f1a:	f003 0304 	and.w	r3, r3, #4
 8007f1e:	2b04      	cmp	r3, #4
 8007f20:	d10c      	bne.n	8007f3c <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 8007f22:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007f24:	2b00      	cmp	r3, #0
 8007f26:	d109      	bne.n	8007f3c <HAL_RCCEx_GetPeriphCLKFreq+0xec>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007f28:	4b6b      	ldr	r3, [pc, #428]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007f2a:	681b      	ldr	r3, [r3, #0]
 8007f2c:	08db      	lsrs	r3, r3, #3
 8007f2e:	f003 0303 	and.w	r3, r3, #3
 8007f32:	4a6a      	ldr	r2, [pc, #424]	; (80080dc <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 8007f34:	fa22 f303 	lsr.w	r3, r2, r3
 8007f38:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007f3a:	e01f      	b.n	8007f7c <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8007f3c:	4b66      	ldr	r3, [pc, #408]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007f3e:	681b      	ldr	r3, [r3, #0]
 8007f40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007f44:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007f48:	d106      	bne.n	8007f58 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 8007f4a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007f4c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007f50:	d102      	bne.n	8007f58 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8007f52:	4b63      	ldr	r3, [pc, #396]	; (80080e0 <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 8007f54:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007f56:	e011      	b.n	8007f7c <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8007f58:	4b5f      	ldr	r3, [pc, #380]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007f5a:	681b      	ldr	r3, [r3, #0]
 8007f5c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007f60:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8007f64:	d106      	bne.n	8007f74 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 8007f66:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007f68:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007f6c:	d102      	bne.n	8007f74 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8007f6e:	4b5d      	ldr	r3, [pc, #372]	; (80080e4 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8007f70:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007f72:	e003      	b.n	8007f7c <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8007f74:	2300      	movs	r3, #0
 8007f76:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8007f78:	f000 bc2f 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8007f7c:	f000 bc2d 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case (RCC_SAI1CLKSOURCE_PIN): /* External clock is the clock source for SAI1 */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 8007f80:	4b59      	ldr	r3, [pc, #356]	; (80080e8 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 8007f82:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8007f84:	f000 bc29 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 8007f88:	2300      	movs	r3, #0
 8007f8a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8007f8c:	f000 bc25 	b.w	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
    }
  }
#endif

#if defined(SAI4)
  else if (PeriphClk == RCC_PERIPHCLK_SAI4A)
 8007f90:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007f94:	f5a2 6180 	sub.w	r1, r2, #1024	; 0x400
 8007f98:	430b      	orrs	r3, r1
 8007f9a:	f040 80a7 	bne.w	80080ec <HAL_RCCEx_GetPeriphCLKFreq+0x29c>
  {

    saiclocksource = __HAL_RCC_GET_SAI4A_SOURCE();
 8007f9e:	4b4e      	ldr	r3, [pc, #312]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007fa0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007fa2:	f403 0360 	and.w	r3, r3, #14680064	; 0xe00000
 8007fa6:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8007fa8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007faa:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8007fae:	d054      	beq.n	800805a <HAL_RCCEx_GetPeriphCLKFreq+0x20a>
 8007fb0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007fb2:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8007fb6:	f200 808b 	bhi.w	80080d0 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 8007fba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007fbc:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8007fc0:	f000 8083 	beq.w	80080ca <HAL_RCCEx_GetPeriphCLKFreq+0x27a>
 8007fc4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007fc6:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8007fca:	f200 8081 	bhi.w	80080d0 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 8007fce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007fd0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007fd4:	d02f      	beq.n	8008036 <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 8007fd6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007fd8:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007fdc:	d878      	bhi.n	80080d0 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 8007fde:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	d004      	beq.n	8007fee <HAL_RCCEx_GetPeriphCLKFreq+0x19e>
 8007fe4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007fe6:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007fea:	d012      	beq.n	8008012 <HAL_RCCEx_GetPeriphCLKFreq+0x1c2>
 8007fec:	e070      	b.n	80080d0 <HAL_RCCEx_GetPeriphCLKFreq+0x280>
    {
      case RCC_SAI4ACLKSOURCE_PLL: /* PLL1 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8007fee:	4b3a      	ldr	r3, [pc, #232]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8007ff0:	681b      	ldr	r3, [r3, #0]
 8007ff2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007ff6:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007ffa:	d107      	bne.n	800800c <HAL_RCCEx_GetPeriphCLKFreq+0x1bc>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8007ffc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008000:	4618      	mov	r0, r3
 8008002:	f000 feb5 	bl	8008d70 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8008006:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008008:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800800a:	e3e6      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800800c:	2300      	movs	r3, #0
 800800e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008010:	e3e3      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI4ACLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8008012:	4b31      	ldr	r3, [pc, #196]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008014:	681b      	ldr	r3, [r3, #0]
 8008016:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800801a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800801e:	d107      	bne.n	8008030 <HAL_RCCEx_GetPeriphCLKFreq+0x1e0>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8008020:	f107 0318 	add.w	r3, r7, #24
 8008024:	4618      	mov	r0, r3
 8008026:	f000 fbfb 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 800802a:	69bb      	ldr	r3, [r7, #24]
 800802c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800802e:	e3d4      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008030:	2300      	movs	r3, #0
 8008032:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008034:	e3d1      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8008036:	4b28      	ldr	r3, [pc, #160]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008038:	681b      	ldr	r3, [r3, #0]
 800803a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800803e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008042:	d107      	bne.n	8008054 <HAL_RCCEx_GetPeriphCLKFreq+0x204>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8008044:	f107 030c 	add.w	r3, r7, #12
 8008048:	4618      	mov	r0, r3
 800804a:	f000 fd3d 	bl	8008ac8 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 800804e:	68fb      	ldr	r3, [r7, #12]
 8008050:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008052:	e3c2      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008054:	2300      	movs	r3, #0
 8008056:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008058:	e3bf      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_CLKP: /* CKPER is the clock source for SAI4A*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 800805a:	4b1f      	ldr	r3, [pc, #124]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800805c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800805e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8008062:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8008064:	4b1c      	ldr	r3, [pc, #112]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008066:	681b      	ldr	r3, [r3, #0]
 8008068:	f003 0304 	and.w	r3, r3, #4
 800806c:	2b04      	cmp	r3, #4
 800806e:	d10c      	bne.n	800808a <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
 8008070:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008072:	2b00      	cmp	r3, #0
 8008074:	d109      	bne.n	800808a <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8008076:	4b18      	ldr	r3, [pc, #96]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008078:	681b      	ldr	r3, [r3, #0]
 800807a:	08db      	lsrs	r3, r3, #3
 800807c:	f003 0303 	and.w	r3, r3, #3
 8008080:	4a16      	ldr	r2, [pc, #88]	; (80080dc <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 8008082:	fa22 f303 	lsr.w	r3, r2, r3
 8008086:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008088:	e01e      	b.n	80080c8 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 800808a:	4b13      	ldr	r3, [pc, #76]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800808c:	681b      	ldr	r3, [r3, #0]
 800808e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008092:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008096:	d106      	bne.n	80080a6 <HAL_RCCEx_GetPeriphCLKFreq+0x256>
 8008098:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800809a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800809e:	d102      	bne.n	80080a6 <HAL_RCCEx_GetPeriphCLKFreq+0x256>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 80080a0:	4b0f      	ldr	r3, [pc, #60]	; (80080e0 <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 80080a2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80080a4:	e010      	b.n	80080c8 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 80080a6:	4b0c      	ldr	r3, [pc, #48]	; (80080d8 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80080a8:	681b      	ldr	r3, [r3, #0]
 80080aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80080ae:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80080b2:	d106      	bne.n	80080c2 <HAL_RCCEx_GetPeriphCLKFreq+0x272>
 80080b4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80080b6:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80080ba:	d102      	bne.n	80080c2 <HAL_RCCEx_GetPeriphCLKFreq+0x272>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 80080bc:	4b09      	ldr	r3, [pc, #36]	; (80080e4 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80080be:	63fb      	str	r3, [r7, #60]	; 0x3c
 80080c0:	e002      	b.n	80080c8 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 80080c2:	2300      	movs	r3, #0
 80080c4:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 80080c6:	e388      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 80080c8:	e387      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_PIN: /* External clock is the clock source for SAI4A */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 80080ca:	4b07      	ldr	r3, [pc, #28]	; (80080e8 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 80080cc:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80080ce:	e384      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 80080d0:	2300      	movs	r3, #0
 80080d2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80080d4:	e381      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 80080d6:	bf00      	nop
 80080d8:	58024400 	.word	0x58024400
 80080dc:	03d09000 	.word	0x03d09000
 80080e0:	003d0900 	.word	0x003d0900
 80080e4:	017d7840 	.word	0x017d7840
 80080e8:	00bb8000 	.word	0x00bb8000
      }
    }
  }

  else if (PeriphClk == RCC_PERIPHCLK_SAI4B)
 80080ec:	e9d7 2300 	ldrd	r2, r3, [r7]
 80080f0:	f5a2 6100 	sub.w	r1, r2, #2048	; 0x800
 80080f4:	430b      	orrs	r3, r1
 80080f6:	f040 809c 	bne.w	8008232 <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
  {

    saiclocksource = __HAL_RCC_GET_SAI4B_SOURCE();
 80080fa:	4b9e      	ldr	r3, [pc, #632]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80080fc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80080fe:	f003 63e0 	and.w	r3, r3, #117440512	; 0x7000000
 8008102:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8008104:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008106:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800810a:	d054      	beq.n	80081b6 <HAL_RCCEx_GetPeriphCLKFreq+0x366>
 800810c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800810e:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008112:	f200 808b 	bhi.w	800822c <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 8008116:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008118:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 800811c:	f000 8083 	beq.w	8008226 <HAL_RCCEx_GetPeriphCLKFreq+0x3d6>
 8008120:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008122:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8008126:	f200 8081 	bhi.w	800822c <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800812a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800812c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008130:	d02f      	beq.n	8008192 <HAL_RCCEx_GetPeriphCLKFreq+0x342>
 8008132:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008134:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008138:	d878      	bhi.n	800822c <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 800813a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800813c:	2b00      	cmp	r3, #0
 800813e:	d004      	beq.n	800814a <HAL_RCCEx_GetPeriphCLKFreq+0x2fa>
 8008140:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008142:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008146:	d012      	beq.n	800816e <HAL_RCCEx_GetPeriphCLKFreq+0x31e>
 8008148:	e070      	b.n	800822c <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
    {
      case RCC_SAI4BCLKSOURCE_PLL: /* PLL1 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 800814a:	4b8a      	ldr	r3, [pc, #552]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800814c:	681b      	ldr	r3, [r3, #0]
 800814e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008152:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008156:	d107      	bne.n	8008168 <HAL_RCCEx_GetPeriphCLKFreq+0x318>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8008158:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800815c:	4618      	mov	r0, r3
 800815e:	f000 fe07 	bl	8008d70 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8008162:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008164:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008166:	e338      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008168:	2300      	movs	r3, #0
 800816a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800816c:	e335      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI4BCLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 800816e:	4b81      	ldr	r3, [pc, #516]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8008170:	681b      	ldr	r3, [r3, #0]
 8008172:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008176:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800817a:	d107      	bne.n	800818c <HAL_RCCEx_GetPeriphCLKFreq+0x33c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800817c:	f107 0318 	add.w	r3, r7, #24
 8008180:	4618      	mov	r0, r3
 8008182:	f000 fb4d 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8008186:	69bb      	ldr	r3, [r7, #24]
 8008188:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800818a:	e326      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800818c:	2300      	movs	r3, #0
 800818e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008190:	e323      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8008192:	4b78      	ldr	r3, [pc, #480]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8008194:	681b      	ldr	r3, [r3, #0]
 8008196:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800819a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800819e:	d107      	bne.n	80081b0 <HAL_RCCEx_GetPeriphCLKFreq+0x360>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80081a0:	f107 030c 	add.w	r3, r7, #12
 80081a4:	4618      	mov	r0, r3
 80081a6:	f000 fc8f 	bl	8008ac8 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80081aa:	68fb      	ldr	r3, [r7, #12]
 80081ac:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80081ae:	e314      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80081b0:	2300      	movs	r3, #0
 80081b2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80081b4:	e311      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_CLKP: /* CKPER is the clock source for SAI4B*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80081b6:	4b6f      	ldr	r3, [pc, #444]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80081b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80081ba:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80081be:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 80081c0:	4b6c      	ldr	r3, [pc, #432]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80081c2:	681b      	ldr	r3, [r3, #0]
 80081c4:	f003 0304 	and.w	r3, r3, #4
 80081c8:	2b04      	cmp	r3, #4
 80081ca:	d10c      	bne.n	80081e6 <HAL_RCCEx_GetPeriphCLKFreq+0x396>
 80081cc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80081ce:	2b00      	cmp	r3, #0
 80081d0:	d109      	bne.n	80081e6 <HAL_RCCEx_GetPeriphCLKFreq+0x396>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80081d2:	4b68      	ldr	r3, [pc, #416]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80081d4:	681b      	ldr	r3, [r3, #0]
 80081d6:	08db      	lsrs	r3, r3, #3
 80081d8:	f003 0303 	and.w	r3, r3, #3
 80081dc:	4a66      	ldr	r2, [pc, #408]	; (8008378 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 80081de:	fa22 f303 	lsr.w	r3, r2, r3
 80081e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80081e4:	e01e      	b.n	8008224 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 80081e6:	4b63      	ldr	r3, [pc, #396]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80081e8:	681b      	ldr	r3, [r3, #0]
 80081ea:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80081ee:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80081f2:	d106      	bne.n	8008202 <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
 80081f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80081f6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80081fa:	d102      	bne.n	8008202 <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 80081fc:	4b5f      	ldr	r3, [pc, #380]	; (800837c <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 80081fe:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008200:	e010      	b.n	8008224 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8008202:	4b5c      	ldr	r3, [pc, #368]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8008204:	681b      	ldr	r3, [r3, #0]
 8008206:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800820a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800820e:	d106      	bne.n	800821e <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
 8008210:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008212:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008216:	d102      	bne.n	800821e <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8008218:	4b59      	ldr	r3, [pc, #356]	; (8008380 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800821a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800821c:	e002      	b.n	8008224 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 800821e:	2300      	movs	r3, #0
 8008220:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8008222:	e2da      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8008224:	e2d9      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_PIN: /* External clock is the clock source for SAI4B */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 8008226:	4b57      	ldr	r3, [pc, #348]	; (8008384 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8008228:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800822a:	e2d6      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 800822c:	2300      	movs	r3, #0
 800822e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008230:	e2d3      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
#endif /*SAI4*/
  else if (PeriphClk == RCC_PERIPHCLK_SPI123)
 8008232:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008236:	f5a2 5180 	sub.w	r1, r2, #4096	; 0x1000
 800823a:	430b      	orrs	r3, r1
 800823c:	f040 80a7 	bne.w	800838e <HAL_RCCEx_GetPeriphCLKFreq+0x53e>
  {
    /* Get SPI1/2/3 clock source */
    srcclk = __HAL_RCC_GET_SPI123_SOURCE();
 8008240:	4b4c      	ldr	r3, [pc, #304]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8008242:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008244:	f403 43e0 	and.w	r3, r3, #28672	; 0x7000
 8008248:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 800824a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800824c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008250:	d055      	beq.n	80082fe <HAL_RCCEx_GetPeriphCLKFreq+0x4ae>
 8008252:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008254:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008258:	f200 8096 	bhi.w	8008388 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800825c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800825e:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8008262:	f000 8084 	beq.w	800836e <HAL_RCCEx_GetPeriphCLKFreq+0x51e>
 8008266:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008268:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800826c:	f200 808c 	bhi.w	8008388 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 8008270:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008272:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008276:	d030      	beq.n	80082da <HAL_RCCEx_GetPeriphCLKFreq+0x48a>
 8008278:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800827a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800827e:	f200 8083 	bhi.w	8008388 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 8008282:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008284:	2b00      	cmp	r3, #0
 8008286:	d004      	beq.n	8008292 <HAL_RCCEx_GetPeriphCLKFreq+0x442>
 8008288:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800828a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800828e:	d012      	beq.n	80082b6 <HAL_RCCEx_GetPeriphCLKFreq+0x466>
 8008290:	e07a      	b.n	8008388 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
    {
      case RCC_SPI123CLKSOURCE_PLL: /* PLL1 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8008292:	4b38      	ldr	r3, [pc, #224]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8008294:	681b      	ldr	r3, [r3, #0]
 8008296:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800829a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800829e:	d107      	bne.n	80082b0 <HAL_RCCEx_GetPeriphCLKFreq+0x460>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80082a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80082a4:	4618      	mov	r0, r3
 80082a6:	f000 fd63 	bl	8008d70 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80082aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80082ac:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80082ae:	e294      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80082b0:	2300      	movs	r3, #0
 80082b2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80082b4:	e291      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80082b6:	4b2f      	ldr	r3, [pc, #188]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80082b8:	681b      	ldr	r3, [r3, #0]
 80082ba:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80082be:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80082c2:	d107      	bne.n	80082d4 <HAL_RCCEx_GetPeriphCLKFreq+0x484>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80082c4:	f107 0318 	add.w	r3, r7, #24
 80082c8:	4618      	mov	r0, r3
 80082ca:	f000 faa9 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80082ce:	69bb      	ldr	r3, [r7, #24]
 80082d0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80082d2:	e282      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80082d4:	2300      	movs	r3, #0
 80082d6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80082d8:	e27f      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SPI123CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80082da:	4b26      	ldr	r3, [pc, #152]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80082dc:	681b      	ldr	r3, [r3, #0]
 80082de:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80082e2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80082e6:	d107      	bne.n	80082f8 <HAL_RCCEx_GetPeriphCLKFreq+0x4a8>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80082e8:	f107 030c 	add.w	r3, r7, #12
 80082ec:	4618      	mov	r0, r3
 80082ee:	f000 fbeb 	bl	8008ac8 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80082f2:	68fb      	ldr	r3, [r7, #12]
 80082f4:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80082f6:	e270      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80082f8:	2300      	movs	r3, #0
 80082fa:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80082fc:	e26d      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SPI123CLKSOURCE_CLKP: /* CKPER is the clock source for SPI123 */
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80082fe:	4b1d      	ldr	r3, [pc, #116]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8008300:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008302:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8008306:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8008308:	4b1a      	ldr	r3, [pc, #104]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800830a:	681b      	ldr	r3, [r3, #0]
 800830c:	f003 0304 	and.w	r3, r3, #4
 8008310:	2b04      	cmp	r3, #4
 8008312:	d10c      	bne.n	800832e <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 8008314:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008316:	2b00      	cmp	r3, #0
 8008318:	d109      	bne.n	800832e <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800831a:	4b16      	ldr	r3, [pc, #88]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800831c:	681b      	ldr	r3, [r3, #0]
 800831e:	08db      	lsrs	r3, r3, #3
 8008320:	f003 0303 	and.w	r3, r3, #3
 8008324:	4a14      	ldr	r2, [pc, #80]	; (8008378 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 8008326:	fa22 f303 	lsr.w	r3, r2, r3
 800832a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800832c:	e01e      	b.n	800836c <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 800832e:	4b11      	ldr	r3, [pc, #68]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8008330:	681b      	ldr	r3, [r3, #0]
 8008332:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008336:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800833a:	d106      	bne.n	800834a <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
 800833c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800833e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008342:	d102      	bne.n	800834a <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8008344:	4b0d      	ldr	r3, [pc, #52]	; (800837c <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 8008346:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008348:	e010      	b.n	800836c <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 800834a:	4b0a      	ldr	r3, [pc, #40]	; (8008374 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800834c:	681b      	ldr	r3, [r3, #0]
 800834e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008352:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008356:	d106      	bne.n	8008366 <HAL_RCCEx_GetPeriphCLKFreq+0x516>
 8008358:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800835a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800835e:	d102      	bne.n	8008366 <HAL_RCCEx_GetPeriphCLKFreq+0x516>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8008360:	4b07      	ldr	r3, [pc, #28]	; (8008380 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8008362:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008364:	e002      	b.n	800836c <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8008366:	2300      	movs	r3, #0
 8008368:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 800836a:	e236      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800836c:	e235      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case (RCC_SPI123CLKSOURCE_PIN): /* External clock is the clock source for I2S */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 800836e:	4b05      	ldr	r3, [pc, #20]	; (8008384 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8008370:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008372:	e232      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8008374:	58024400 	.word	0x58024400
 8008378:	03d09000 	.word	0x03d09000
 800837c:	003d0900 	.word	0x003d0900
 8008380:	017d7840 	.word	0x017d7840
 8008384:	00bb8000 	.word	0x00bb8000
      }
      default :
      {
        frequency = 0;
 8008388:	2300      	movs	r3, #0
 800838a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800838c:	e225      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI45)
 800838e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008392:	f5a2 5100 	sub.w	r1, r2, #8192	; 0x2000
 8008396:	430b      	orrs	r3, r1
 8008398:	f040 8085 	bne.w	80084a6 <HAL_RCCEx_GetPeriphCLKFreq+0x656>
  {
    /* Get SPI45 clock source */
    srcclk = __HAL_RCC_GET_SPI45_SOURCE();
 800839c:	4b9c      	ldr	r3, [pc, #624]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800839e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80083a0:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
 80083a4:	63bb      	str	r3, [r7, #56]	; 0x38
    switch (srcclk)
 80083a6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083a8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80083ac:	d06b      	beq.n	8008486 <HAL_RCCEx_GetPeriphCLKFreq+0x636>
 80083ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083b0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80083b4:	d874      	bhi.n	80084a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80083b6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083b8:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80083bc:	d056      	beq.n	800846c <HAL_RCCEx_GetPeriphCLKFreq+0x61c>
 80083be:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083c0:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80083c4:	d86c      	bhi.n	80084a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80083c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083c8:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80083cc:	d03b      	beq.n	8008446 <HAL_RCCEx_GetPeriphCLKFreq+0x5f6>
 80083ce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083d0:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80083d4:	d864      	bhi.n	80084a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80083d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083d8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80083dc:	d021      	beq.n	8008422 <HAL_RCCEx_GetPeriphCLKFreq+0x5d2>
 80083de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083e0:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80083e4:	d85c      	bhi.n	80084a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80083e6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083e8:	2b00      	cmp	r3, #0
 80083ea:	d004      	beq.n	80083f6 <HAL_RCCEx_GetPeriphCLKFreq+0x5a6>
 80083ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80083ee:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80083f2:	d004      	beq.n	80083fe <HAL_RCCEx_GetPeriphCLKFreq+0x5ae>
 80083f4:	e054      	b.n	80084a0 <HAL_RCCEx_GetPeriphCLKFreq+0x650>
    {
      case RCC_SPI45CLKSOURCE_PCLK2: /* CD/D2 PCLK2 is the clock source for SPI4/5 */
      {
        frequency = HAL_RCC_GetPCLK1Freq();
 80083f6:	f7fe fb75 	bl	8006ae4 <HAL_RCC_GetPCLK1Freq>
 80083fa:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 80083fc:	e1ed      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80083fe:	4b84      	ldr	r3, [pc, #528]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008400:	681b      	ldr	r3, [r3, #0]
 8008402:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008406:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800840a:	d107      	bne.n	800841c <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800840c:	f107 0318 	add.w	r3, r7, #24
 8008410:	4618      	mov	r0, r3
 8008412:	f000 fa05 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8008416:	69fb      	ldr	r3, [r7, #28]
 8008418:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800841a:	e1de      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800841c:	2300      	movs	r3, #0
 800841e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008420:	e1db      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8008422:	4b7b      	ldr	r3, [pc, #492]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008424:	681b      	ldr	r3, [r3, #0]
 8008426:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800842a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800842e:	d107      	bne.n	8008440 <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8008430:	f107 030c 	add.w	r3, r7, #12
 8008434:	4618      	mov	r0, r3
 8008436:	f000 fb47 	bl	8008ac8 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 800843a:	693b      	ldr	r3, [r7, #16]
 800843c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800843e:	e1cc      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008440:	2300      	movs	r3, #0
 8008442:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008444:	e1c9      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_HSI: /* HSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8008446:	4b72      	ldr	r3, [pc, #456]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008448:	681b      	ldr	r3, [r3, #0]
 800844a:	f003 0304 	and.w	r3, r3, #4
 800844e:	2b04      	cmp	r3, #4
 8008450:	d109      	bne.n	8008466 <HAL_RCCEx_GetPeriphCLKFreq+0x616>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8008452:	4b6f      	ldr	r3, [pc, #444]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008454:	681b      	ldr	r3, [r3, #0]
 8008456:	08db      	lsrs	r3, r3, #3
 8008458:	f003 0303 	and.w	r3, r3, #3
 800845c:	4a6d      	ldr	r2, [pc, #436]	; (8008614 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 800845e:	fa22 f303 	lsr.w	r3, r2, r3
 8008462:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008464:	e1b9      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008466:	2300      	movs	r3, #0
 8008468:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800846a:	e1b6      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_CSI: /* CSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 800846c:	4b68      	ldr	r3, [pc, #416]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800846e:	681b      	ldr	r3, [r3, #0]
 8008470:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008474:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008478:	d102      	bne.n	8008480 <HAL_RCCEx_GetPeriphCLKFreq+0x630>
        {
          frequency = CSI_VALUE;
 800847a:	4b67      	ldr	r3, [pc, #412]	; (8008618 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 800847c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800847e:	e1ac      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008480:	2300      	movs	r3, #0
 8008482:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008484:	e1a9      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_HSE: /* HSE is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8008486:	4b62      	ldr	r3, [pc, #392]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008488:	681b      	ldr	r3, [r3, #0]
 800848a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800848e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008492:	d102      	bne.n	800849a <HAL_RCCEx_GetPeriphCLKFreq+0x64a>
        {
          frequency = HSE_VALUE;
 8008494:	4b61      	ldr	r3, [pc, #388]	; (800861c <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 8008496:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008498:	e19f      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800849a:	2300      	movs	r3, #0
 800849c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800849e:	e19c      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 80084a0:	2300      	movs	r3, #0
 80084a2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80084a4:	e199      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_ADC)
 80084a6:	e9d7 2300 	ldrd	r2, r3, [r7]
 80084aa:	f5a2 2100 	sub.w	r1, r2, #524288	; 0x80000
 80084ae:	430b      	orrs	r3, r1
 80084b0:	d173      	bne.n	800859a <HAL_RCCEx_GetPeriphCLKFreq+0x74a>
  {
    /* Get ADC clock source */
    srcclk = __HAL_RCC_GET_ADC_SOURCE();
 80084b2:	4b57      	ldr	r3, [pc, #348]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80084b4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80084b6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80084ba:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 80084bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80084be:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80084c2:	d02f      	beq.n	8008524 <HAL_RCCEx_GetPeriphCLKFreq+0x6d4>
 80084c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80084c6:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80084ca:	d863      	bhi.n	8008594 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
 80084cc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80084ce:	2b00      	cmp	r3, #0
 80084d0:	d004      	beq.n	80084dc <HAL_RCCEx_GetPeriphCLKFreq+0x68c>
 80084d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80084d4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80084d8:	d012      	beq.n	8008500 <HAL_RCCEx_GetPeriphCLKFreq+0x6b0>
 80084da:	e05b      	b.n	8008594 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
    {
      case RCC_ADCCLKSOURCE_PLL2:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80084dc:	4b4c      	ldr	r3, [pc, #304]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80084de:	681b      	ldr	r3, [r3, #0]
 80084e0:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80084e4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80084e8:	d107      	bne.n	80084fa <HAL_RCCEx_GetPeriphCLKFreq+0x6aa>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80084ea:	f107 0318 	add.w	r3, r7, #24
 80084ee:	4618      	mov	r0, r3
 80084f0:	f000 f996 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80084f4:	69bb      	ldr	r3, [r7, #24]
 80084f6:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80084f8:	e16f      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80084fa:	2300      	movs	r3, #0
 80084fc:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80084fe:	e16c      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_ADCCLKSOURCE_PLL3:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8008500:	4b43      	ldr	r3, [pc, #268]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008502:	681b      	ldr	r3, [r3, #0]
 8008504:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8008508:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800850c:	d107      	bne.n	800851e <HAL_RCCEx_GetPeriphCLKFreq+0x6ce>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800850e:	f107 030c 	add.w	r3, r7, #12
 8008512:	4618      	mov	r0, r3
 8008514:	f000 fad8 	bl	8008ac8 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_R_Frequency;
 8008518:	697b      	ldr	r3, [r7, #20]
 800851a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800851c:	e15d      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800851e:	2300      	movs	r3, #0
 8008520:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008522:	e15a      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_ADCCLKSOURCE_CLKP:
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8008524:	4b3a      	ldr	r3, [pc, #232]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008526:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008528:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800852c:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 800852e:	4b38      	ldr	r3, [pc, #224]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008530:	681b      	ldr	r3, [r3, #0]
 8008532:	f003 0304 	and.w	r3, r3, #4
 8008536:	2b04      	cmp	r3, #4
 8008538:	d10c      	bne.n	8008554 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
 800853a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800853c:	2b00      	cmp	r3, #0
 800853e:	d109      	bne.n	8008554 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8008540:	4b33      	ldr	r3, [pc, #204]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008542:	681b      	ldr	r3, [r3, #0]
 8008544:	08db      	lsrs	r3, r3, #3
 8008546:	f003 0303 	and.w	r3, r3, #3
 800854a:	4a32      	ldr	r2, [pc, #200]	; (8008614 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 800854c:	fa22 f303 	lsr.w	r3, r2, r3
 8008550:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008552:	e01e      	b.n	8008592 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8008554:	4b2e      	ldr	r3, [pc, #184]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800855c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008560:	d106      	bne.n	8008570 <HAL_RCCEx_GetPeriphCLKFreq+0x720>
 8008562:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008564:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008568:	d102      	bne.n	8008570 <HAL_RCCEx_GetPeriphCLKFreq+0x720>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 800856a:	4b2b      	ldr	r3, [pc, #172]	; (8008618 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 800856c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800856e:	e010      	b.n	8008592 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8008570:	4b27      	ldr	r3, [pc, #156]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8008572:	681b      	ldr	r3, [r3, #0]
 8008574:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008578:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800857c:	d106      	bne.n	800858c <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
 800857e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008580:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008584:	d102      	bne.n	800858c <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8008586:	4b25      	ldr	r3, [pc, #148]	; (800861c <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 8008588:	63fb      	str	r3, [r7, #60]	; 0x3c
 800858a:	e002      	b.n	8008592 <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 800858c:	2300      	movs	r3, #0
 800858e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8008590:	e123      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8008592:	e122      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8008594:	2300      	movs	r3, #0
 8008596:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008598:	e11f      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SDMMC)
 800859a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800859e:	f5a2 3180 	sub.w	r1, r2, #65536	; 0x10000
 80085a2:	430b      	orrs	r3, r1
 80085a4:	d13c      	bne.n	8008620 <HAL_RCCEx_GetPeriphCLKFreq+0x7d0>
  {
    /* Get SDMMC clock source */
    srcclk = __HAL_RCC_GET_SDMMC_SOURCE();
 80085a6:	4b1a      	ldr	r3, [pc, #104]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80085a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80085aa:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80085ae:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 80085b0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80085b2:	2b00      	cmp	r3, #0
 80085b4:	d004      	beq.n	80085c0 <HAL_RCCEx_GetPeriphCLKFreq+0x770>
 80085b6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80085b8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80085bc:	d012      	beq.n	80085e4 <HAL_RCCEx_GetPeriphCLKFreq+0x794>
 80085be:	e023      	b.n	8008608 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>
    {
      case RCC_SDMMCCLKSOURCE_PLL: /* PLL1 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 80085c0:	4b13      	ldr	r3, [pc, #76]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80085c2:	681b      	ldr	r3, [r3, #0]
 80085c4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80085c8:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80085cc:	d107      	bne.n	80085de <HAL_RCCEx_GetPeriphCLKFreq+0x78e>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80085ce:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80085d2:	4618      	mov	r0, r3
 80085d4:	f000 fbcc 	bl	8008d70 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80085d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80085da:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80085dc:	e0fd      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80085de:	2300      	movs	r3, #0
 80085e0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80085e2:	e0fa      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80085e4:	4b0a      	ldr	r3, [pc, #40]	; (8008610 <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80085e6:	681b      	ldr	r3, [r3, #0]
 80085e8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80085ec:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80085f0:	d107      	bne.n	8008602 <HAL_RCCEx_GetPeriphCLKFreq+0x7b2>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80085f2:	f107 0318 	add.w	r3, r7, #24
 80085f6:	4618      	mov	r0, r3
 80085f8:	f000 f912 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_R_Frequency;
 80085fc:	6a3b      	ldr	r3, [r7, #32]
 80085fe:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008600:	e0eb      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008602:	2300      	movs	r3, #0
 8008604:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008606:	e0e8      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8008608:	2300      	movs	r3, #0
 800860a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800860c:	e0e5      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800860e:	bf00      	nop
 8008610:	58024400 	.word	0x58024400
 8008614:	03d09000 	.word	0x03d09000
 8008618:	003d0900 	.word	0x003d0900
 800861c:	017d7840 	.word	0x017d7840
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI6)
 8008620:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008624:	f5a2 4180 	sub.w	r1, r2, #16384	; 0x4000
 8008628:	430b      	orrs	r3, r1
 800862a:	f040 8085 	bne.w	8008738 <HAL_RCCEx_GetPeriphCLKFreq+0x8e8>
  {
    /* Get SPI6 clock source */
    srcclk = __HAL_RCC_GET_SPI6_SOURCE();
 800862e:	4b6d      	ldr	r3, [pc, #436]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8008630:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008632:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8008636:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8008638:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800863a:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800863e:	d06b      	beq.n	8008718 <HAL_RCCEx_GetPeriphCLKFreq+0x8c8>
 8008640:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008642:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008646:	d874      	bhi.n	8008732 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8008648:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800864a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800864e:	d056      	beq.n	80086fe <HAL_RCCEx_GetPeriphCLKFreq+0x8ae>
 8008650:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008652:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008656:	d86c      	bhi.n	8008732 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8008658:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800865a:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800865e:	d03b      	beq.n	80086d8 <HAL_RCCEx_GetPeriphCLKFreq+0x888>
 8008660:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008662:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008666:	d864      	bhi.n	8008732 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8008668:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800866a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800866e:	d021      	beq.n	80086b4 <HAL_RCCEx_GetPeriphCLKFreq+0x864>
 8008670:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008672:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008676:	d85c      	bhi.n	8008732 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8008678:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800867a:	2b00      	cmp	r3, #0
 800867c:	d004      	beq.n	8008688 <HAL_RCCEx_GetPeriphCLKFreq+0x838>
 800867e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008680:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008684:	d004      	beq.n	8008690 <HAL_RCCEx_GetPeriphCLKFreq+0x840>
 8008686:	e054      	b.n	8008732 <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
    {
      case RCC_SPI6CLKSOURCE_D3PCLK1: /* D3PCLK1 (PCLK4) is the clock source for SPI6 */
      {
        frequency = HAL_RCCEx_GetD3PCLK1Freq();
 8008688:	f000 f8b4 	bl	80087f4 <HAL_RCCEx_GetD3PCLK1Freq>
 800868c:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 800868e:	e0a4      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8008690:	4b54      	ldr	r3, [pc, #336]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008698:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800869c:	d107      	bne.n	80086ae <HAL_RCCEx_GetPeriphCLKFreq+0x85e>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800869e:	f107 0318 	add.w	r3, r7, #24
 80086a2:	4618      	mov	r0, r3
 80086a4:	f000 f8bc 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 80086a8:	69fb      	ldr	r3, [r7, #28]
 80086aa:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80086ac:	e095      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80086ae:	2300      	movs	r3, #0
 80086b0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80086b2:	e092      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80086b4:	4b4b      	ldr	r3, [pc, #300]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80086b6:	681b      	ldr	r3, [r3, #0]
 80086b8:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80086bc:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80086c0:	d107      	bne.n	80086d2 <HAL_RCCEx_GetPeriphCLKFreq+0x882>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80086c2:	f107 030c 	add.w	r3, r7, #12
 80086c6:	4618      	mov	r0, r3
 80086c8:	f000 f9fe 	bl	8008ac8 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 80086cc:	693b      	ldr	r3, [r7, #16]
 80086ce:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80086d0:	e083      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80086d2:	2300      	movs	r3, #0
 80086d4:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80086d6:	e080      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_HSI: /* HSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 80086d8:	4b42      	ldr	r3, [pc, #264]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80086da:	681b      	ldr	r3, [r3, #0]
 80086dc:	f003 0304 	and.w	r3, r3, #4
 80086e0:	2b04      	cmp	r3, #4
 80086e2:	d109      	bne.n	80086f8 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80086e4:	4b3f      	ldr	r3, [pc, #252]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80086e6:	681b      	ldr	r3, [r3, #0]
 80086e8:	08db      	lsrs	r3, r3, #3
 80086ea:	f003 0303 	and.w	r3, r3, #3
 80086ee:	4a3e      	ldr	r2, [pc, #248]	; (80087e8 <HAL_RCCEx_GetPeriphCLKFreq+0x998>)
 80086f0:	fa22 f303 	lsr.w	r3, r2, r3
 80086f4:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80086f6:	e070      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80086f8:	2300      	movs	r3, #0
 80086fa:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80086fc:	e06d      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_CSI: /* CSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 80086fe:	4b39      	ldr	r3, [pc, #228]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8008700:	681b      	ldr	r3, [r3, #0]
 8008702:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008706:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800870a:	d102      	bne.n	8008712 <HAL_RCCEx_GetPeriphCLKFreq+0x8c2>
        {
          frequency = CSI_VALUE;
 800870c:	4b37      	ldr	r3, [pc, #220]	; (80087ec <HAL_RCCEx_GetPeriphCLKFreq+0x99c>)
 800870e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008710:	e063      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008712:	2300      	movs	r3, #0
 8008714:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008716:	e060      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_HSE: /* HSE is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8008718:	4b32      	ldr	r3, [pc, #200]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800871a:	681b      	ldr	r3, [r3, #0]
 800871c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008720:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008724:	d102      	bne.n	800872c <HAL_RCCEx_GetPeriphCLKFreq+0x8dc>
        {
          frequency = HSE_VALUE;
 8008726:	4b32      	ldr	r3, [pc, #200]	; (80087f0 <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 8008728:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800872a:	e056      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800872c:	2300      	movs	r3, #0
 800872e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008730:	e053      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
        break;
      }
#endif /* RCC_SPI6CLKSOURCE_PIN */
      default :
      {
        frequency = 0;
 8008732:	2300      	movs	r3, #0
 8008734:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008736:	e050      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_FDCAN)
 8008738:	e9d7 2300 	ldrd	r2, r3, [r7]
 800873c:	f5a2 4100 	sub.w	r1, r2, #32768	; 0x8000
 8008740:	430b      	orrs	r3, r1
 8008742:	d148      	bne.n	80087d6 <HAL_RCCEx_GetPeriphCLKFreq+0x986>
  {
    /* Get FDCAN clock source */
    srcclk = __HAL_RCC_GET_FDCAN_SOURCE();
 8008744:	4b27      	ldr	r3, [pc, #156]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8008746:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008748:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800874c:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 800874e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008750:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008754:	d02a      	beq.n	80087ac <HAL_RCCEx_GetPeriphCLKFreq+0x95c>
 8008756:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008758:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800875c:	d838      	bhi.n	80087d0 <HAL_RCCEx_GetPeriphCLKFreq+0x980>
 800875e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008760:	2b00      	cmp	r3, #0
 8008762:	d004      	beq.n	800876e <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 8008764:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008766:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800876a:	d00d      	beq.n	8008788 <HAL_RCCEx_GetPeriphCLKFreq+0x938>
 800876c:	e030      	b.n	80087d0 <HAL_RCCEx_GetPeriphCLKFreq+0x980>
    {
      case RCC_FDCANCLKSOURCE_HSE: /* HSE is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 800876e:	4b1d      	ldr	r3, [pc, #116]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008776:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800877a:	d102      	bne.n	8008782 <HAL_RCCEx_GetPeriphCLKFreq+0x932>
        {
          frequency = HSE_VALUE;
 800877c:	4b1c      	ldr	r3, [pc, #112]	; (80087f0 <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 800877e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008780:	e02b      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008782:	2300      	movs	r3, #0
 8008784:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008786:	e028      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_FDCANCLKSOURCE_PLL: /* PLL is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8008788:	4b16      	ldr	r3, [pc, #88]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800878a:	681b      	ldr	r3, [r3, #0]
 800878c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008790:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008794:	d107      	bne.n	80087a6 <HAL_RCCEx_GetPeriphCLKFreq+0x956>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8008796:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800879a:	4618      	mov	r0, r3
 800879c:	f000 fae8 	bl	8008d70 <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80087a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80087a2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80087a4:	e019      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80087a6:	2300      	movs	r3, #0
 80087a8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80087aa:	e016      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80087ac:	4b0d      	ldr	r3, [pc, #52]	; (80087e4 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80087b4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80087b8:	d107      	bne.n	80087ca <HAL_RCCEx_GetPeriphCLKFreq+0x97a>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80087ba:	f107 0318 	add.w	r3, r7, #24
 80087be:	4618      	mov	r0, r3
 80087c0:	f000 f82e 	bl	8008820 <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 80087c4:	69fb      	ldr	r3, [r7, #28]
 80087c6:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80087c8:	e007      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80087ca:	2300      	movs	r3, #0
 80087cc:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80087ce:	e004      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 80087d0:	2300      	movs	r3, #0
 80087d2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80087d4:	e001      	b.n	80087da <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else
  {
    frequency = 0;
 80087d6:	2300      	movs	r3, #0
 80087d8:	63fb      	str	r3, [r7, #60]	; 0x3c
  }

  return frequency;
 80087da:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 80087dc:	4618      	mov	r0, r3
 80087de:	3740      	adds	r7, #64	; 0x40
 80087e0:	46bd      	mov	sp, r7
 80087e2:	bd80      	pop	{r7, pc}
 80087e4:	58024400 	.word	0x58024400
 80087e8:	03d09000 	.word	0x03d09000
 80087ec:	003d0900 	.word	0x003d0900
 80087f0:	017d7840 	.word	0x017d7840

080087f4 <HAL_RCCEx_GetD3PCLK1Freq>:
  * @note   Each time D3PCLK1 changes, this function must be called to update the
  *         right D3PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval D3PCLK1 frequency
  */
uint32_t HAL_RCCEx_GetD3PCLK1Freq(void)
{
 80087f4:	b580      	push	{r7, lr}
 80087f6:	af00      	add	r7, sp, #0
#if defined(RCC_D3CFGR_D3PPRE)
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
 80087f8:	f7fe f944 	bl	8006a84 <HAL_RCC_GetHCLKFreq>
 80087fc:	4602      	mov	r2, r0
 80087fe:	4b06      	ldr	r3, [pc, #24]	; (8008818 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8008800:	6a1b      	ldr	r3, [r3, #32]
 8008802:	091b      	lsrs	r3, r3, #4
 8008804:	f003 0307 	and.w	r3, r3, #7
 8008808:	4904      	ldr	r1, [pc, #16]	; (800881c <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 800880a:	5ccb      	ldrb	r3, [r1, r3]
 800880c:	f003 031f 	and.w	r3, r3, #31
 8008810:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE) >> RCC_SRDCFGR_SRDPPRE_Pos] & 0x1FU));
#endif
}
 8008814:	4618      	mov	r0, r3
 8008816:	bd80      	pop	{r7, pc}
 8008818:	58024400 	.word	0x58024400
 800881c:	08023978 	.word	0x08023978

08008820 <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef *PLL2_Clocks)
{
 8008820:	b480      	push	{r7}
 8008822:	b089      	sub	sp, #36	; 0x24
 8008824:	af00      	add	r7, sp, #0
 8008826:	6078      	str	r0, [r7, #4]
  float_t fracn2, pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8008828:	4ba1      	ldr	r3, [pc, #644]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800882a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800882c:	f003 0303 	and.w	r3, r3, #3
 8008830:	61bb      	str	r3, [r7, #24]
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
 8008832:	4b9f      	ldr	r3, [pc, #636]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008834:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008836:	0b1b      	lsrs	r3, r3, #12
 8008838:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800883c:	617b      	str	r3, [r7, #20]
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
 800883e:	4b9c      	ldr	r3, [pc, #624]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008840:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008842:	091b      	lsrs	r3, r3, #4
 8008844:	f003 0301 	and.w	r3, r3, #1
 8008848:	613b      	str	r3, [r7, #16]
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
 800884a:	4b99      	ldr	r3, [pc, #612]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800884c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800884e:	08db      	lsrs	r3, r3, #3
 8008850:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8008854:	693a      	ldr	r2, [r7, #16]
 8008856:	fb02 f303 	mul.w	r3, r2, r3
 800885a:	ee07 3a90 	vmov	s15, r3
 800885e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008862:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll2m != 0U)
 8008866:	697b      	ldr	r3, [r7, #20]
 8008868:	2b00      	cmp	r3, #0
 800886a:	f000 8111 	beq.w	8008a90 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
  {
    switch (pllsource)
 800886e:	69bb      	ldr	r3, [r7, #24]
 8008870:	2b02      	cmp	r3, #2
 8008872:	f000 8083 	beq.w	800897c <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8008876:	69bb      	ldr	r3, [r7, #24]
 8008878:	2b02      	cmp	r3, #2
 800887a:	f200 80a1 	bhi.w	80089c0 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800887e:	69bb      	ldr	r3, [r7, #24]
 8008880:	2b00      	cmp	r3, #0
 8008882:	d003      	beq.n	800888c <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8008884:	69bb      	ldr	r3, [r7, #24]
 8008886:	2b01      	cmp	r3, #1
 8008888:	d056      	beq.n	8008938 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 800888a:	e099      	b.n	80089c0 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800888c:	4b88      	ldr	r3, [pc, #544]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800888e:	681b      	ldr	r3, [r3, #0]
 8008890:	f003 0320 	and.w	r3, r3, #32
 8008894:	2b00      	cmp	r3, #0
 8008896:	d02d      	beq.n	80088f4 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8008898:	4b85      	ldr	r3, [pc, #532]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800889a:	681b      	ldr	r3, [r3, #0]
 800889c:	08db      	lsrs	r3, r3, #3
 800889e:	f003 0303 	and.w	r3, r3, #3
 80088a2:	4a84      	ldr	r2, [pc, #528]	; (8008ab4 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 80088a4:	fa22 f303 	lsr.w	r3, r2, r3
 80088a8:	60bb      	str	r3, [r7, #8]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80088aa:	68bb      	ldr	r3, [r7, #8]
 80088ac:	ee07 3a90 	vmov	s15, r3
 80088b0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80088b4:	697b      	ldr	r3, [r7, #20]
 80088b6:	ee07 3a90 	vmov	s15, r3
 80088ba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80088be:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80088c2:	4b7b      	ldr	r3, [pc, #492]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80088c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80088c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80088ca:	ee07 3a90 	vmov	s15, r3
 80088ce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80088d2:	ed97 6a03 	vldr	s12, [r7, #12]
 80088d6:	eddf 5a78 	vldr	s11, [pc, #480]	; 8008ab8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80088da:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80088de:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80088e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80088e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 80088ee:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
        }
        break;
 80088f2:	e087      	b.n	8008a04 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80088f4:	697b      	ldr	r3, [r7, #20]
 80088f6:	ee07 3a90 	vmov	s15, r3
 80088fa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80088fe:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8008abc <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8008902:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008906:	4b6a      	ldr	r3, [pc, #424]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008908:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800890a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800890e:	ee07 3a90 	vmov	s15, r3
 8008912:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008916:	ed97 6a03 	vldr	s12, [r7, #12]
 800891a:	eddf 5a67 	vldr	s11, [pc, #412]	; 8008ab8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800891e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008922:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008926:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800892a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800892e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008932:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008936:	e065      	b.n	8008a04 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8008938:	697b      	ldr	r3, [r7, #20]
 800893a:	ee07 3a90 	vmov	s15, r3
 800893e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008942:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8008ac0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8008946:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800894a:	4b59      	ldr	r3, [pc, #356]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800894c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800894e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008952:	ee07 3a90 	vmov	s15, r3
 8008956:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800895a:	ed97 6a03 	vldr	s12, [r7, #12]
 800895e:	eddf 5a56 	vldr	s11, [pc, #344]	; 8008ab8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8008962:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008966:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800896a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800896e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008972:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008976:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800897a:	e043      	b.n	8008a04 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 800897c:	697b      	ldr	r3, [r7, #20]
 800897e:	ee07 3a90 	vmov	s15, r3
 8008982:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008986:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8008ac4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 800898a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800898e:	4b48      	ldr	r3, [pc, #288]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008990:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008992:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008996:	ee07 3a90 	vmov	s15, r3
 800899a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800899e:	ed97 6a03 	vldr	s12, [r7, #12]
 80089a2:	eddf 5a45 	vldr	s11, [pc, #276]	; 8008ab8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80089a6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80089aa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80089ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80089b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089b6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80089ba:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 80089be:	e021      	b.n	8008a04 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      default:
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80089c0:	697b      	ldr	r3, [r7, #20]
 80089c2:	ee07 3a90 	vmov	s15, r3
 80089c6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80089ca:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8008ac0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 80089ce:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80089d2:	4b37      	ldr	r3, [pc, #220]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80089d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80089d6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80089da:	ee07 3a90 	vmov	s15, r3
 80089de:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80089e2:	ed97 6a03 	vldr	s12, [r7, #12]
 80089e6:	eddf 5a34 	vldr	s11, [pc, #208]	; 8008ab8 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80089ea:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80089ee:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80089f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80089f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089fa:	ee67 7a27 	vmul.f32	s15, s14, s15
 80089fe:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008a02:	bf00      	nop
    }
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
 8008a04:	4b2a      	ldr	r3, [pc, #168]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008a06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a08:	0a5b      	lsrs	r3, r3, #9
 8008a0a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008a0e:	ee07 3a90 	vmov	s15, r3
 8008a12:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008a16:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008a1a:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008a1e:	edd7 6a07 	vldr	s13, [r7, #28]
 8008a22:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008a26:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008a2a:	ee17 2a90 	vmov	r2, s15
 8008a2e:	687b      	ldr	r3, [r7, #4]
 8008a30:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
 8008a32:	4b1f      	ldr	r3, [pc, #124]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008a34:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a36:	0c1b      	lsrs	r3, r3, #16
 8008a38:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008a3c:	ee07 3a90 	vmov	s15, r3
 8008a40:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008a44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008a48:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008a4c:	edd7 6a07 	vldr	s13, [r7, #28]
 8008a50:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008a54:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008a58:	ee17 2a90 	vmov	r2, s15
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
 8008a60:	4b13      	ldr	r3, [pc, #76]	; (8008ab0 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008a62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a64:	0e1b      	lsrs	r3, r3, #24
 8008a66:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008a6a:	ee07 3a90 	vmov	s15, r3
 8008a6e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008a72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008a76:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008a7a:	edd7 6a07 	vldr	s13, [r7, #28]
 8008a7e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008a82:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008a86:	ee17 2a90 	vmov	r2, s15
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	609a      	str	r2, [r3, #8]
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
 8008a8e:	e008      	b.n	8008aa2 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
    PLL2_Clocks->PLL2_P_Frequency = 0U;
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	2200      	movs	r2, #0
 8008a94:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	2200      	movs	r2, #0
 8008a9a:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
 8008a9c:	687b      	ldr	r3, [r7, #4]
 8008a9e:	2200      	movs	r2, #0
 8008aa0:	609a      	str	r2, [r3, #8]
}
 8008aa2:	bf00      	nop
 8008aa4:	3724      	adds	r7, #36	; 0x24
 8008aa6:	46bd      	mov	sp, r7
 8008aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aac:	4770      	bx	lr
 8008aae:	bf00      	nop
 8008ab0:	58024400 	.word	0x58024400
 8008ab4:	03d09000 	.word	0x03d09000
 8008ab8:	46000000 	.word	0x46000000
 8008abc:	4c742400 	.word	0x4c742400
 8008ac0:	4a742400 	.word	0x4a742400
 8008ac4:	4bbebc20 	.word	0x4bbebc20

08008ac8 <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef *PLL3_Clocks)
{
 8008ac8:	b480      	push	{r7}
 8008aca:	b089      	sub	sp, #36	; 0x24
 8008acc:	af00      	add	r7, sp, #0
 8008ace:	6078      	str	r0, [r7, #4]
  float_t fracn3, pll3vco;

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
     PLL3xCLK = PLL3_VCO / PLLxR
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8008ad0:	4ba1      	ldr	r3, [pc, #644]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008ad2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008ad4:	f003 0303 	and.w	r3, r3, #3
 8008ad8:	61bb      	str	r3, [r7, #24]
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
 8008ada:	4b9f      	ldr	r3, [pc, #636]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008adc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008ade:	0d1b      	lsrs	r3, r3, #20
 8008ae0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008ae4:	617b      	str	r3, [r7, #20]
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
 8008ae6:	4b9c      	ldr	r3, [pc, #624]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008ae8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008aea:	0a1b      	lsrs	r3, r3, #8
 8008aec:	f003 0301 	and.w	r3, r3, #1
 8008af0:	613b      	str	r3, [r7, #16]
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
 8008af2:	4b99      	ldr	r3, [pc, #612]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008af4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008af6:	08db      	lsrs	r3, r3, #3
 8008af8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8008afc:	693a      	ldr	r2, [r7, #16]
 8008afe:	fb02 f303 	mul.w	r3, r2, r3
 8008b02:	ee07 3a90 	vmov	s15, r3
 8008b06:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008b0a:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll3m != 0U)
 8008b0e:	697b      	ldr	r3, [r7, #20]
 8008b10:	2b00      	cmp	r3, #0
 8008b12:	f000 8111 	beq.w	8008d38 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
  {
    switch (pllsource)
 8008b16:	69bb      	ldr	r3, [r7, #24]
 8008b18:	2b02      	cmp	r3, #2
 8008b1a:	f000 8083 	beq.w	8008c24 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8008b1e:	69bb      	ldr	r3, [r7, #24]
 8008b20:	2b02      	cmp	r3, #2
 8008b22:	f200 80a1 	bhi.w	8008c68 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8008b26:	69bb      	ldr	r3, [r7, #24]
 8008b28:	2b00      	cmp	r3, #0
 8008b2a:	d003      	beq.n	8008b34 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8008b2c:	69bb      	ldr	r3, [r7, #24]
 8008b2e:	2b01      	cmp	r3, #1
 8008b30:	d056      	beq.n	8008be0 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8008b32:	e099      	b.n	8008c68 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8008b34:	4b88      	ldr	r3, [pc, #544]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008b36:	681b      	ldr	r3, [r3, #0]
 8008b38:	f003 0320 	and.w	r3, r3, #32
 8008b3c:	2b00      	cmp	r3, #0
 8008b3e:	d02d      	beq.n	8008b9c <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8008b40:	4b85      	ldr	r3, [pc, #532]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008b42:	681b      	ldr	r3, [r3, #0]
 8008b44:	08db      	lsrs	r3, r3, #3
 8008b46:	f003 0303 	and.w	r3, r3, #3
 8008b4a:	4a84      	ldr	r2, [pc, #528]	; (8008d5c <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8008b4c:	fa22 f303 	lsr.w	r3, r2, r3
 8008b50:	60bb      	str	r3, [r7, #8]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8008b52:	68bb      	ldr	r3, [r7, #8]
 8008b54:	ee07 3a90 	vmov	s15, r3
 8008b58:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008b5c:	697b      	ldr	r3, [r7, #20]
 8008b5e:	ee07 3a90 	vmov	s15, r3
 8008b62:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008b66:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008b6a:	4b7b      	ldr	r3, [pc, #492]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008b6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b6e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008b72:	ee07 3a90 	vmov	s15, r3
 8008b76:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008b7a:	ed97 6a03 	vldr	s12, [r7, #12]
 8008b7e:	eddf 5a78 	vldr	s11, [pc, #480]	; 8008d60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8008b82:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008b86:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008b8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008b8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008b92:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008b96:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8008b9a:	e087      	b.n	8008cac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8008b9c:	697b      	ldr	r3, [r7, #20]
 8008b9e:	ee07 3a90 	vmov	s15, r3
 8008ba2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008ba6:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8008d64 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 8008baa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008bae:	4b6a      	ldr	r3, [pc, #424]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008bb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008bb2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008bb6:	ee07 3a90 	vmov	s15, r3
 8008bba:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008bbe:	ed97 6a03 	vldr	s12, [r7, #12]
 8008bc2:	eddf 5a67 	vldr	s11, [pc, #412]	; 8008d60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8008bc6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008bca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008bce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008bd2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008bd6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008bda:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008bde:	e065      	b.n	8008cac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8008be0:	697b      	ldr	r3, [r7, #20]
 8008be2:	ee07 3a90 	vmov	s15, r3
 8008be6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008bea:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8008d68 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8008bee:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008bf2:	4b59      	ldr	r3, [pc, #356]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008bf4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008bf6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008bfa:	ee07 3a90 	vmov	s15, r3
 8008bfe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008c02:	ed97 6a03 	vldr	s12, [r7, #12]
 8008c06:	eddf 5a56 	vldr	s11, [pc, #344]	; 8008d60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8008c0a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008c0e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008c12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008c16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008c1a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008c1e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008c22:	e043      	b.n	8008cac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8008c24:	697b      	ldr	r3, [r7, #20]
 8008c26:	ee07 3a90 	vmov	s15, r3
 8008c2a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008c2e:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8008d6c <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 8008c32:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008c36:	4b48      	ldr	r3, [pc, #288]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008c38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008c3a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008c3e:	ee07 3a90 	vmov	s15, r3
 8008c42:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008c46:	ed97 6a03 	vldr	s12, [r7, #12]
 8008c4a:	eddf 5a45 	vldr	s11, [pc, #276]	; 8008d60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8008c4e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008c52:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008c56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008c5a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008c5e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008c62:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008c66:	e021      	b.n	8008cac <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      default:
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8008c68:	697b      	ldr	r3, [r7, #20]
 8008c6a:	ee07 3a90 	vmov	s15, r3
 8008c6e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008c72:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8008d68 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8008c76:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008c7a:	4b37      	ldr	r3, [pc, #220]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008c7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008c7e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008c82:	ee07 3a90 	vmov	s15, r3
 8008c86:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008c8a:	ed97 6a03 	vldr	s12, [r7, #12]
 8008c8e:	eddf 5a34 	vldr	s11, [pc, #208]	; 8008d60 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8008c92:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008c96:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008c9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008c9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008ca2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008ca6:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008caa:	bf00      	nop
    }
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
 8008cac:	4b2a      	ldr	r3, [pc, #168]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008cae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008cb0:	0a5b      	lsrs	r3, r3, #9
 8008cb2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008cb6:	ee07 3a90 	vmov	s15, r3
 8008cba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008cbe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008cc2:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008cc6:	edd7 6a07 	vldr	s13, [r7, #28]
 8008cca:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008cce:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008cd2:	ee17 2a90 	vmov	r2, s15
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
 8008cda:	4b1f      	ldr	r3, [pc, #124]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008cdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008cde:	0c1b      	lsrs	r3, r3, #16
 8008ce0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008ce4:	ee07 3a90 	vmov	s15, r3
 8008ce8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008cec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008cf0:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008cf4:	edd7 6a07 	vldr	s13, [r7, #28]
 8008cf8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008cfc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008d00:	ee17 2a90 	vmov	r2, s15
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
 8008d08:	4b13      	ldr	r3, [pc, #76]	; (8008d58 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008d0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008d0c:	0e1b      	lsrs	r3, r3, #24
 8008d0e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008d12:	ee07 3a90 	vmov	s15, r3
 8008d16:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008d1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008d1e:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008d22:	edd7 6a07 	vldr	s13, [r7, #28]
 8008d26:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008d2a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008d2e:	ee17 2a90 	vmov	r2, s15
 8008d32:	687b      	ldr	r3, [r7, #4]
 8008d34:	609a      	str	r2, [r3, #8]
    PLL3_Clocks->PLL3_P_Frequency = 0U;
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
 8008d36:	e008      	b.n	8008d4a <HAL_RCCEx_GetPLL3ClockFreq+0x282>
    PLL3_Clocks->PLL3_P_Frequency = 0U;
 8008d38:	687b      	ldr	r3, [r7, #4]
 8008d3a:	2200      	movs	r2, #0
 8008d3c:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	2200      	movs	r2, #0
 8008d42:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
 8008d44:	687b      	ldr	r3, [r7, #4]
 8008d46:	2200      	movs	r2, #0
 8008d48:	609a      	str	r2, [r3, #8]
}
 8008d4a:	bf00      	nop
 8008d4c:	3724      	adds	r7, #36	; 0x24
 8008d4e:	46bd      	mov	sp, r7
 8008d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d54:	4770      	bx	lr
 8008d56:	bf00      	nop
 8008d58:	58024400 	.word	0x58024400
 8008d5c:	03d09000 	.word	0x03d09000
 8008d60:	46000000 	.word	0x46000000
 8008d64:	4c742400 	.word	0x4c742400
 8008d68:	4a742400 	.word	0x4a742400
 8008d6c:	4bbebc20 	.word	0x4bbebc20

08008d70 <HAL_RCCEx_GetPLL1ClockFreq>:
  *         right PLL1CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL1_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL1ClockFreq(PLL1_ClocksTypeDef *PLL1_Clocks)
{
 8008d70:	b480      	push	{r7}
 8008d72:	b089      	sub	sp, #36	; 0x24
 8008d74:	af00      	add	r7, sp, #0
 8008d76:	6078      	str	r0, [r7, #4]
  uint32_t pllsource, pll1m, pll1fracen, hsivalue;
  float_t fracn1, pll1vco;

  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8008d78:	4ba0      	ldr	r3, [pc, #640]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008d7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008d7c:	f003 0303 	and.w	r3, r3, #3
 8008d80:	61bb      	str	r3, [r7, #24]
  pll1m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 8008d82:	4b9e      	ldr	r3, [pc, #632]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008d84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008d86:	091b      	lsrs	r3, r3, #4
 8008d88:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008d8c:	617b      	str	r3, [r7, #20]
  pll1fracen = RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN;
 8008d8e:	4b9b      	ldr	r3, [pc, #620]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008d90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d92:	f003 0301 	and.w	r3, r3, #1
 8008d96:	613b      	str	r3, [r7, #16]
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8008d98:	4b98      	ldr	r3, [pc, #608]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008d9a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008d9c:	08db      	lsrs	r3, r3, #3
 8008d9e:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8008da2:	693a      	ldr	r2, [r7, #16]
 8008da4:	fb02 f303 	mul.w	r3, r2, r3
 8008da8:	ee07 3a90 	vmov	s15, r3
 8008dac:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008db0:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll1m != 0U)
 8008db4:	697b      	ldr	r3, [r7, #20]
 8008db6:	2b00      	cmp	r3, #0
 8008db8:	f000 8111 	beq.w	8008fde <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
  {
    switch (pllsource)
 8008dbc:	69bb      	ldr	r3, [r7, #24]
 8008dbe:	2b02      	cmp	r3, #2
 8008dc0:	f000 8083 	beq.w	8008eca <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 8008dc4:	69bb      	ldr	r3, [r7, #24]
 8008dc6:	2b02      	cmp	r3, #2
 8008dc8:	f200 80a1 	bhi.w	8008f0e <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 8008dcc:	69bb      	ldr	r3, [r7, #24]
 8008dce:	2b00      	cmp	r3, #0
 8008dd0:	d003      	beq.n	8008dda <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 8008dd2:	69bb      	ldr	r3, [r7, #24]
 8008dd4:	2b01      	cmp	r3, #1
 8008dd6:	d056      	beq.n	8008e86 <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 8008dd8:	e099      	b.n	8008f0e <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8008dda:	4b88      	ldr	r3, [pc, #544]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008ddc:	681b      	ldr	r3, [r3, #0]
 8008dde:	f003 0320 	and.w	r3, r3, #32
 8008de2:	2b00      	cmp	r3, #0
 8008de4:	d02d      	beq.n	8008e42 <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8008de6:	4b85      	ldr	r3, [pc, #532]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008de8:	681b      	ldr	r3, [r3, #0]
 8008dea:	08db      	lsrs	r3, r3, #3
 8008dec:	f003 0303 	and.w	r3, r3, #3
 8008df0:	4a83      	ldr	r2, [pc, #524]	; (8009000 <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 8008df2:	fa22 f303 	lsr.w	r3, r2, r3
 8008df6:	60bb      	str	r3, [r7, #8]
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8008df8:	68bb      	ldr	r3, [r7, #8]
 8008dfa:	ee07 3a90 	vmov	s15, r3
 8008dfe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008e02:	697b      	ldr	r3, [r7, #20]
 8008e04:	ee07 3a90 	vmov	s15, r3
 8008e08:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008e0c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008e10:	4b7a      	ldr	r3, [pc, #488]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008e12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e14:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008e18:	ee07 3a90 	vmov	s15, r3
 8008e1c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008e20:	ed97 6a03 	vldr	s12, [r7, #12]
 8008e24:	eddf 5a77 	vldr	s11, [pc, #476]	; 8009004 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8008e28:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008e2c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008e30:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008e34:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008e38:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008e3c:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8008e40:	e087      	b.n	8008f52 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8008e42:	697b      	ldr	r3, [r7, #20]
 8008e44:	ee07 3a90 	vmov	s15, r3
 8008e48:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008e4c:	eddf 6a6e 	vldr	s13, [pc, #440]	; 8009008 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 8008e50:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008e54:	4b69      	ldr	r3, [pc, #420]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008e56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e58:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008e5c:	ee07 3a90 	vmov	s15, r3
 8008e60:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008e64:	ed97 6a03 	vldr	s12, [r7, #12]
 8008e68:	eddf 5a66 	vldr	s11, [pc, #408]	; 8009004 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8008e6c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008e70:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008e74:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008e78:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008e7c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008e80:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008e84:	e065      	b.n	8008f52 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll1vco = ((float_t)CSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8008e86:	697b      	ldr	r3, [r7, #20]
 8008e88:	ee07 3a90 	vmov	s15, r3
 8008e8c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008e90:	eddf 6a5e 	vldr	s13, [pc, #376]	; 800900c <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 8008e94:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008e98:	4b58      	ldr	r3, [pc, #352]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008e9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e9c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008ea0:	ee07 3a90 	vmov	s15, r3
 8008ea4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008ea8:	ed97 6a03 	vldr	s12, [r7, #12]
 8008eac:	eddf 5a55 	vldr	s11, [pc, #340]	; 8009004 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8008eb0:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008eb4:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008eb8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008ebc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008ec0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008ec4:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008ec8:	e043      	b.n	8008f52 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8008eca:	697b      	ldr	r3, [r7, #20]
 8008ecc:	ee07 3a90 	vmov	s15, r3
 8008ed0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008ed4:	eddf 6a4e 	vldr	s13, [pc, #312]	; 8009010 <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 8008ed8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008edc:	4b47      	ldr	r3, [pc, #284]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008ede:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008ee0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008ee4:	ee07 3a90 	vmov	s15, r3
 8008ee8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008eec:	ed97 6a03 	vldr	s12, [r7, #12]
 8008ef0:	eddf 5a44 	vldr	s11, [pc, #272]	; 8009004 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8008ef4:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008ef8:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008efc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008f00:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008f04:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008f08:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008f0c:	e021      	b.n	8008f52 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      default:
        pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8008f0e:	697b      	ldr	r3, [r7, #20]
 8008f10:	ee07 3a90 	vmov	s15, r3
 8008f14:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008f18:	eddf 6a3b 	vldr	s13, [pc, #236]	; 8009008 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 8008f1c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008f20:	4b36      	ldr	r3, [pc, #216]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008f22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008f24:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008f28:	ee07 3a90 	vmov	s15, r3
 8008f2c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008f30:	ed97 6a03 	vldr	s12, [r7, #12]
 8008f34:	eddf 5a33 	vldr	s11, [pc, #204]	; 8009004 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8008f38:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008f3c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008f40:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008f44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008f48:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008f4c:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008f50:	bf00      	nop
    }

    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9)  + (float_t)1)) ;
 8008f52:	4b2a      	ldr	r3, [pc, #168]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008f54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008f56:	0a5b      	lsrs	r3, r3, #9
 8008f58:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008f5c:	ee07 3a90 	vmov	s15, r3
 8008f60:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008f64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008f68:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008f6c:	edd7 6a07 	vldr	s13, [r7, #28]
 8008f70:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008f74:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008f78:	ee17 2a90 	vmov	r2, s15
 8008f7c:	687b      	ldr	r3, [r7, #4]
 8008f7e:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> 16) + (float_t)1)) ;
 8008f80:	4b1e      	ldr	r3, [pc, #120]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008f82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008f84:	0c1b      	lsrs	r3, r3, #16
 8008f86:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008f8a:	ee07 3a90 	vmov	s15, r3
 8008f8e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008f92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008f96:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008f9a:	edd7 6a07 	vldr	s13, [r7, #28]
 8008f9e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008fa2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008fa6:	ee17 2a90 	vmov	r2, s15
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> 24) + (float_t)1)) ;
 8008fae:	4b13      	ldr	r3, [pc, #76]	; (8008ffc <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8008fb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008fb2:	0e1b      	lsrs	r3, r3, #24
 8008fb4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008fb8:	ee07 3a90 	vmov	s15, r3
 8008fbc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008fc0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008fc4:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008fc8:	edd7 6a07 	vldr	s13, [r7, #28]
 8008fcc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008fd0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008fd4:	ee17 2a90 	vmov	r2, s15
 8008fd8:	687b      	ldr	r3, [r7, #4]
 8008fda:	609a      	str	r2, [r3, #8]
    PLL1_Clocks->PLL1_P_Frequency = 0U;
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
    PLL1_Clocks->PLL1_R_Frequency = 0U;
  }

}
 8008fdc:	e008      	b.n	8008ff0 <HAL_RCCEx_GetPLL1ClockFreq+0x280>
    PLL1_Clocks->PLL1_P_Frequency = 0U;
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	2200      	movs	r2, #0
 8008fe2:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	2200      	movs	r2, #0
 8008fe8:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = 0U;
 8008fea:	687b      	ldr	r3, [r7, #4]
 8008fec:	2200      	movs	r2, #0
 8008fee:	609a      	str	r2, [r3, #8]
}
 8008ff0:	bf00      	nop
 8008ff2:	3724      	adds	r7, #36	; 0x24
 8008ff4:	46bd      	mov	sp, r7
 8008ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ffa:	4770      	bx	lr
 8008ffc:	58024400 	.word	0x58024400
 8009000:	03d09000 	.word	0x03d09000
 8009004:	46000000 	.word	0x46000000
 8009008:	4c742400 	.word	0x4c742400
 800900c:	4a742400 	.word	0x4a742400
 8009010:	4bbebc20 	.word	0x4bbebc20

08009014 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 8009014:	b580      	push	{r7, lr}
 8009016:	b084      	sub	sp, #16
 8009018:	af00      	add	r7, sp, #0
 800901a:	6078      	str	r0, [r7, #4]
 800901c:	6039      	str	r1, [r7, #0]

  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800901e:	2300      	movs	r3, #0
 8009020:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8009022:	4b53      	ldr	r3, [pc, #332]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009024:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009026:	f003 0303 	and.w	r3, r3, #3
 800902a:	2b03      	cmp	r3, #3
 800902c:	d101      	bne.n	8009032 <RCCEx_PLL2_Config+0x1e>
  {
    return HAL_ERROR;
 800902e:	2301      	movs	r3, #1
 8009030:	e099      	b.n	8009166 <RCCEx_PLL2_Config+0x152>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 8009032:	4b4f      	ldr	r3, [pc, #316]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009034:	681b      	ldr	r3, [r3, #0]
 8009036:	4a4e      	ldr	r2, [pc, #312]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009038:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800903c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800903e:	f7f8 fb4f 	bl	80016e0 <HAL_GetTick>
 8009042:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8009044:	e008      	b.n	8009058 <RCCEx_PLL2_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8009046:	f7f8 fb4b 	bl	80016e0 <HAL_GetTick>
 800904a:	4602      	mov	r2, r0
 800904c:	68bb      	ldr	r3, [r7, #8]
 800904e:	1ad3      	subs	r3, r2, r3
 8009050:	2b02      	cmp	r3, #2
 8009052:	d901      	bls.n	8009058 <RCCEx_PLL2_Config+0x44>
      {
        return HAL_TIMEOUT;
 8009054:	2303      	movs	r3, #3
 8009056:	e086      	b.n	8009166 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8009058:	4b45      	ldr	r3, [pc, #276]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 800905a:	681b      	ldr	r3, [r3, #0]
 800905c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009060:	2b00      	cmp	r3, #0
 8009062:	d1f0      	bne.n	8009046 <RCCEx_PLL2_Config+0x32>
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 8009064:	4b42      	ldr	r3, [pc, #264]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009066:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009068:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800906c:	687b      	ldr	r3, [r7, #4]
 800906e:	681b      	ldr	r3, [r3, #0]
 8009070:	031b      	lsls	r3, r3, #12
 8009072:	493f      	ldr	r1, [pc, #252]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009074:	4313      	orrs	r3, r2
 8009076:	628b      	str	r3, [r1, #40]	; 0x28
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	685b      	ldr	r3, [r3, #4]
 800907c:	3b01      	subs	r3, #1
 800907e:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8009082:	687b      	ldr	r3, [r7, #4]
 8009084:	689b      	ldr	r3, [r3, #8]
 8009086:	3b01      	subs	r3, #1
 8009088:	025b      	lsls	r3, r3, #9
 800908a:	b29b      	uxth	r3, r3
 800908c:	431a      	orrs	r2, r3
 800908e:	687b      	ldr	r3, [r7, #4]
 8009090:	68db      	ldr	r3, [r3, #12]
 8009092:	3b01      	subs	r3, #1
 8009094:	041b      	lsls	r3, r3, #16
 8009096:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800909a:	431a      	orrs	r2, r3
 800909c:	687b      	ldr	r3, [r7, #4]
 800909e:	691b      	ldr	r3, [r3, #16]
 80090a0:	3b01      	subs	r3, #1
 80090a2:	061b      	lsls	r3, r3, #24
 80090a4:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 80090a8:	4931      	ldr	r1, [pc, #196]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090aa:	4313      	orrs	r3, r2
 80090ac:	638b      	str	r3, [r1, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 80090ae:	4b30      	ldr	r3, [pc, #192]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090b2:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 80090b6:	687b      	ldr	r3, [r7, #4]
 80090b8:	695b      	ldr	r3, [r3, #20]
 80090ba:	492d      	ldr	r1, [pc, #180]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090bc:	4313      	orrs	r3, r2
 80090be:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 80090c0:	4b2b      	ldr	r3, [pc, #172]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090c4:	f023 0220 	bic.w	r2, r3, #32
 80090c8:	687b      	ldr	r3, [r7, #4]
 80090ca:	699b      	ldr	r3, [r3, #24]
 80090cc:	4928      	ldr	r1, [pc, #160]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090ce:	4313      	orrs	r3, r2
 80090d0:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 80090d2:	4b27      	ldr	r3, [pc, #156]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090d6:	4a26      	ldr	r2, [pc, #152]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090d8:	f023 0310 	bic.w	r3, r3, #16
 80090dc:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 80090de:	4b24      	ldr	r3, [pc, #144]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090e0:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80090e2:	4b24      	ldr	r3, [pc, #144]	; (8009174 <RCCEx_PLL2_Config+0x160>)
 80090e4:	4013      	ands	r3, r2
 80090e6:	687a      	ldr	r2, [r7, #4]
 80090e8:	69d2      	ldr	r2, [r2, #28]
 80090ea:	00d2      	lsls	r2, r2, #3
 80090ec:	4920      	ldr	r1, [pc, #128]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090ee:	4313      	orrs	r3, r2
 80090f0:	63cb      	str	r3, [r1, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 80090f2:	4b1f      	ldr	r3, [pc, #124]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090f6:	4a1e      	ldr	r2, [pc, #120]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 80090f8:	f043 0310 	orr.w	r3, r3, #16
 80090fc:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 80090fe:	683b      	ldr	r3, [r7, #0]
 8009100:	2b00      	cmp	r3, #0
 8009102:	d106      	bne.n	8009112 <RCCEx_PLL2_Config+0xfe>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8009104:	4b1a      	ldr	r3, [pc, #104]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009106:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009108:	4a19      	ldr	r2, [pc, #100]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 800910a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800910e:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009110:	e00f      	b.n	8009132 <RCCEx_PLL2_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 8009112:	683b      	ldr	r3, [r7, #0]
 8009114:	2b01      	cmp	r3, #1
 8009116:	d106      	bne.n	8009126 <RCCEx_PLL2_Config+0x112>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 8009118:	4b15      	ldr	r3, [pc, #84]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 800911a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800911c:	4a14      	ldr	r2, [pc, #80]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 800911e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8009122:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009124:	e005      	b.n	8009132 <RCCEx_PLL2_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 8009126:	4b12      	ldr	r3, [pc, #72]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800912a:	4a11      	ldr	r2, [pc, #68]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 800912c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009130:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 8009132:	4b0f      	ldr	r3, [pc, #60]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009134:	681b      	ldr	r3, [r3, #0]
 8009136:	4a0e      	ldr	r2, [pc, #56]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 8009138:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800913c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800913e:	f7f8 facf 	bl	80016e0 <HAL_GetTick>
 8009142:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8009144:	e008      	b.n	8009158 <RCCEx_PLL2_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8009146:	f7f8 facb 	bl	80016e0 <HAL_GetTick>
 800914a:	4602      	mov	r2, r0
 800914c:	68bb      	ldr	r3, [r7, #8]
 800914e:	1ad3      	subs	r3, r2, r3
 8009150:	2b02      	cmp	r3, #2
 8009152:	d901      	bls.n	8009158 <RCCEx_PLL2_Config+0x144>
      {
        return HAL_TIMEOUT;
 8009154:	2303      	movs	r3, #3
 8009156:	e006      	b.n	8009166 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8009158:	4b05      	ldr	r3, [pc, #20]	; (8009170 <RCCEx_PLL2_Config+0x15c>)
 800915a:	681b      	ldr	r3, [r3, #0]
 800915c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009160:	2b00      	cmp	r3, #0
 8009162:	d0f0      	beq.n	8009146 <RCCEx_PLL2_Config+0x132>
    }

  }


  return status;
 8009164:	7bfb      	ldrb	r3, [r7, #15]
}
 8009166:	4618      	mov	r0, r3
 8009168:	3710      	adds	r7, #16
 800916a:	46bd      	mov	sp, r7
 800916c:	bd80      	pop	{r7, pc}
 800916e:	bf00      	nop
 8009170:	58024400 	.word	0x58024400
 8009174:	ffff0007 	.word	0xffff0007

08009178 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 8009178:	b580      	push	{r7, lr}
 800917a:	b084      	sub	sp, #16
 800917c:	af00      	add	r7, sp, #0
 800917e:	6078      	str	r0, [r7, #4]
 8009180:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8009182:	2300      	movs	r3, #0
 8009184:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8009186:	4b53      	ldr	r3, [pc, #332]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009188:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800918a:	f003 0303 	and.w	r3, r3, #3
 800918e:	2b03      	cmp	r3, #3
 8009190:	d101      	bne.n	8009196 <RCCEx_PLL3_Config+0x1e>
  {
    return HAL_ERROR;
 8009192:	2301      	movs	r3, #1
 8009194:	e099      	b.n	80092ca <RCCEx_PLL3_Config+0x152>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 8009196:	4b4f      	ldr	r3, [pc, #316]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009198:	681b      	ldr	r3, [r3, #0]
 800919a:	4a4e      	ldr	r2, [pc, #312]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800919c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80091a0:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80091a2:	f7f8 fa9d 	bl	80016e0 <HAL_GetTick>
 80091a6:	60b8      	str	r0, [r7, #8]
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80091a8:	e008      	b.n	80091bc <RCCEx_PLL3_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80091aa:	f7f8 fa99 	bl	80016e0 <HAL_GetTick>
 80091ae:	4602      	mov	r2, r0
 80091b0:	68bb      	ldr	r3, [r7, #8]
 80091b2:	1ad3      	subs	r3, r2, r3
 80091b4:	2b02      	cmp	r3, #2
 80091b6:	d901      	bls.n	80091bc <RCCEx_PLL3_Config+0x44>
      {
        return HAL_TIMEOUT;
 80091b8:	2303      	movs	r3, #3
 80091ba:	e086      	b.n	80092ca <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80091bc:	4b45      	ldr	r3, [pc, #276]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 80091be:	681b      	ldr	r3, [r3, #0]
 80091c0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80091c4:	2b00      	cmp	r3, #0
 80091c6:	d1f0      	bne.n	80091aa <RCCEx_PLL3_Config+0x32>
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 80091c8:	4b42      	ldr	r3, [pc, #264]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 80091ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80091cc:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 80091d0:	687b      	ldr	r3, [r7, #4]
 80091d2:	681b      	ldr	r3, [r3, #0]
 80091d4:	051b      	lsls	r3, r3, #20
 80091d6:	493f      	ldr	r1, [pc, #252]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 80091d8:	4313      	orrs	r3, r2
 80091da:	628b      	str	r3, [r1, #40]	; 0x28
 80091dc:	687b      	ldr	r3, [r7, #4]
 80091de:	685b      	ldr	r3, [r3, #4]
 80091e0:	3b01      	subs	r3, #1
 80091e2:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80091e6:	687b      	ldr	r3, [r7, #4]
 80091e8:	689b      	ldr	r3, [r3, #8]
 80091ea:	3b01      	subs	r3, #1
 80091ec:	025b      	lsls	r3, r3, #9
 80091ee:	b29b      	uxth	r3, r3
 80091f0:	431a      	orrs	r2, r3
 80091f2:	687b      	ldr	r3, [r7, #4]
 80091f4:	68db      	ldr	r3, [r3, #12]
 80091f6:	3b01      	subs	r3, #1
 80091f8:	041b      	lsls	r3, r3, #16
 80091fa:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 80091fe:	431a      	orrs	r2, r3
 8009200:	687b      	ldr	r3, [r7, #4]
 8009202:	691b      	ldr	r3, [r3, #16]
 8009204:	3b01      	subs	r3, #1
 8009206:	061b      	lsls	r3, r3, #24
 8009208:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800920c:	4931      	ldr	r1, [pc, #196]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800920e:	4313      	orrs	r3, r2
 8009210:	640b      	str	r3, [r1, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8009212:	4b30      	ldr	r3, [pc, #192]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009214:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009216:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800921a:	687b      	ldr	r3, [r7, #4]
 800921c:	695b      	ldr	r3, [r3, #20]
 800921e:	492d      	ldr	r1, [pc, #180]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009220:	4313      	orrs	r3, r2
 8009222:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 8009224:	4b2b      	ldr	r3, [pc, #172]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009226:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009228:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800922c:	687b      	ldr	r3, [r7, #4]
 800922e:	699b      	ldr	r3, [r3, #24]
 8009230:	4928      	ldr	r1, [pc, #160]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009232:	4313      	orrs	r3, r2
 8009234:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8009236:	4b27      	ldr	r3, [pc, #156]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009238:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800923a:	4a26      	ldr	r2, [pc, #152]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800923c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009240:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8009242:	4b24      	ldr	r3, [pc, #144]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009244:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009246:	4b24      	ldr	r3, [pc, #144]	; (80092d8 <RCCEx_PLL3_Config+0x160>)
 8009248:	4013      	ands	r3, r2
 800924a:	687a      	ldr	r2, [r7, #4]
 800924c:	69d2      	ldr	r2, [r2, #28]
 800924e:	00d2      	lsls	r2, r2, #3
 8009250:	4920      	ldr	r1, [pc, #128]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009252:	4313      	orrs	r3, r2
 8009254:	644b      	str	r3, [r1, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 8009256:	4b1f      	ldr	r3, [pc, #124]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009258:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800925a:	4a1e      	ldr	r2, [pc, #120]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800925c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009260:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 8009262:	683b      	ldr	r3, [r7, #0]
 8009264:	2b00      	cmp	r3, #0
 8009266:	d106      	bne.n	8009276 <RCCEx_PLL3_Config+0xfe>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8009268:	4b1a      	ldr	r3, [pc, #104]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800926a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800926c:	4a19      	ldr	r2, [pc, #100]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800926e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8009272:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009274:	e00f      	b.n	8009296 <RCCEx_PLL3_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 8009276:	683b      	ldr	r3, [r7, #0]
 8009278:	2b01      	cmp	r3, #1
 800927a:	d106      	bne.n	800928a <RCCEx_PLL3_Config+0x112>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 800927c:	4b15      	ldr	r3, [pc, #84]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800927e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009280:	4a14      	ldr	r2, [pc, #80]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009282:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8009286:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009288:	e005      	b.n	8009296 <RCCEx_PLL3_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800928a:	4b12      	ldr	r3, [pc, #72]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800928c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800928e:	4a11      	ldr	r2, [pc, #68]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009290:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8009294:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 8009296:	4b0f      	ldr	r3, [pc, #60]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 8009298:	681b      	ldr	r3, [r3, #0]
 800929a:	4a0e      	ldr	r2, [pc, #56]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 800929c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80092a0:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80092a2:	f7f8 fa1d 	bl	80016e0 <HAL_GetTick>
 80092a6:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80092a8:	e008      	b.n	80092bc <RCCEx_PLL3_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80092aa:	f7f8 fa19 	bl	80016e0 <HAL_GetTick>
 80092ae:	4602      	mov	r2, r0
 80092b0:	68bb      	ldr	r3, [r7, #8]
 80092b2:	1ad3      	subs	r3, r2, r3
 80092b4:	2b02      	cmp	r3, #2
 80092b6:	d901      	bls.n	80092bc <RCCEx_PLL3_Config+0x144>
      {
        return HAL_TIMEOUT;
 80092b8:	2303      	movs	r3, #3
 80092ba:	e006      	b.n	80092ca <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80092bc:	4b05      	ldr	r3, [pc, #20]	; (80092d4 <RCCEx_PLL3_Config+0x15c>)
 80092be:	681b      	ldr	r3, [r3, #0]
 80092c0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80092c4:	2b00      	cmp	r3, #0
 80092c6:	d0f0      	beq.n	80092aa <RCCEx_PLL3_Config+0x132>
    }

  }


  return status;
 80092c8:	7bfb      	ldrb	r3, [r7, #15]
}
 80092ca:	4618      	mov	r0, r3
 80092cc:	3710      	adds	r7, #16
 80092ce:	46bd      	mov	sp, r7
 80092d0:	bd80      	pop	{r7, pc}
 80092d2:	bf00      	nop
 80092d4:	58024400 	.word	0x58024400
 80092d8:	ffff0007 	.word	0xffff0007

080092dc <HAL_SPI_Init>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80092dc:	b580      	push	{r7, lr}
 80092de:	b084      	sub	sp, #16
 80092e0:	af00      	add	r7, sp, #0
 80092e2:	6078      	str	r0, [r7, #4]
#if (USE_SPI_CRC != 0UL)
  uint32_t crc_poly_msb_mask;
#endif /* USE_SPI_CRC */

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80092e4:	687b      	ldr	r3, [r7, #4]
 80092e6:	2b00      	cmp	r3, #0
 80092e8:	d101      	bne.n	80092ee <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80092ea:	2301      	movs	r3, #1
 80092ec:	e10f      	b.n	800950e <HAL_SPI_Init+0x232>
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	2200      	movs	r2, #0
 80092f2:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 80092f4:	687b      	ldr	r3, [r7, #4]
 80092f6:	681b      	ldr	r3, [r3, #0]
 80092f8:	4a87      	ldr	r2, [pc, #540]	; (8009518 <HAL_SPI_Init+0x23c>)
 80092fa:	4293      	cmp	r3, r2
 80092fc:	d00f      	beq.n	800931e <HAL_SPI_Init+0x42>
 80092fe:	687b      	ldr	r3, [r7, #4]
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	4a86      	ldr	r2, [pc, #536]	; (800951c <HAL_SPI_Init+0x240>)
 8009304:	4293      	cmp	r3, r2
 8009306:	d00a      	beq.n	800931e <HAL_SPI_Init+0x42>
 8009308:	687b      	ldr	r3, [r7, #4]
 800930a:	681b      	ldr	r3, [r3, #0]
 800930c:	4a84      	ldr	r2, [pc, #528]	; (8009520 <HAL_SPI_Init+0x244>)
 800930e:	4293      	cmp	r3, r2
 8009310:	d005      	beq.n	800931e <HAL_SPI_Init+0x42>
 8009312:	687b      	ldr	r3, [r7, #4]
 8009314:	68db      	ldr	r3, [r3, #12]
 8009316:	2b0f      	cmp	r3, #15
 8009318:	d901      	bls.n	800931e <HAL_SPI_Init+0x42>
  {
    return HAL_ERROR;
 800931a:	2301      	movs	r3, #1
 800931c:	e0f7      	b.n	800950e <HAL_SPI_Init+0x232>
  }

  /* Verify that the SPI instance supports requested data packing */
  packet_length = SPI_GetPacketSize(hspi);
 800931e:	6878      	ldr	r0, [r7, #4]
 8009320:	f000 ff6c 	bl	800a1fc <SPI_GetPacketSize>
 8009324:	60f8      	str	r0, [r7, #12]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 8009326:	687b      	ldr	r3, [r7, #4]
 8009328:	681b      	ldr	r3, [r3, #0]
 800932a:	4a7b      	ldr	r2, [pc, #492]	; (8009518 <HAL_SPI_Init+0x23c>)
 800932c:	4293      	cmp	r3, r2
 800932e:	d00c      	beq.n	800934a <HAL_SPI_Init+0x6e>
 8009330:	687b      	ldr	r3, [r7, #4]
 8009332:	681b      	ldr	r3, [r3, #0]
 8009334:	4a79      	ldr	r2, [pc, #484]	; (800951c <HAL_SPI_Init+0x240>)
 8009336:	4293      	cmp	r3, r2
 8009338:	d007      	beq.n	800934a <HAL_SPI_Init+0x6e>
 800933a:	687b      	ldr	r3, [r7, #4]
 800933c:	681b      	ldr	r3, [r3, #0]
 800933e:	4a78      	ldr	r2, [pc, #480]	; (8009520 <HAL_SPI_Init+0x244>)
 8009340:	4293      	cmp	r3, r2
 8009342:	d002      	beq.n	800934a <HAL_SPI_Init+0x6e>
 8009344:	68fb      	ldr	r3, [r7, #12]
 8009346:	2b08      	cmp	r3, #8
 8009348:	d811      	bhi.n	800936e <HAL_SPI_Init+0x92>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800934a:	687b      	ldr	r3, [r7, #4]
 800934c:	681b      	ldr	r3, [r3, #0]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800934e:	4a72      	ldr	r2, [pc, #456]	; (8009518 <HAL_SPI_Init+0x23c>)
 8009350:	4293      	cmp	r3, r2
 8009352:	d009      	beq.n	8009368 <HAL_SPI_Init+0x8c>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 8009354:	687b      	ldr	r3, [r7, #4]
 8009356:	681b      	ldr	r3, [r3, #0]
 8009358:	4a70      	ldr	r2, [pc, #448]	; (800951c <HAL_SPI_Init+0x240>)
 800935a:	4293      	cmp	r3, r2
 800935c:	d004      	beq.n	8009368 <HAL_SPI_Init+0x8c>
 800935e:	687b      	ldr	r3, [r7, #4]
 8009360:	681b      	ldr	r3, [r3, #0]
 8009362:	4a6f      	ldr	r2, [pc, #444]	; (8009520 <HAL_SPI_Init+0x244>)
 8009364:	4293      	cmp	r3, r2
 8009366:	d104      	bne.n	8009372 <HAL_SPI_Init+0x96>
 8009368:	68fb      	ldr	r3, [r7, #12]
 800936a:	2b10      	cmp	r3, #16
 800936c:	d901      	bls.n	8009372 <HAL_SPI_Init+0x96>
  {
    return HAL_ERROR;
 800936e:	2301      	movs	r3, #1
 8009370:	e0cd      	b.n	800950e <HAL_SPI_Init+0x232>
  {
    crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
  }
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8009372:	687b      	ldr	r3, [r7, #4]
 8009374:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8009378:	b2db      	uxtb	r3, r3
 800937a:	2b00      	cmp	r3, #0
 800937c:	d106      	bne.n	800938c <HAL_SPI_Init+0xb0>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800937e:	687b      	ldr	r3, [r7, #4]
 8009380:	2200      	movs	r2, #0
 8009382:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8009386:	6878      	ldr	r0, [r7, #4]
 8009388:	f7f7 fe32 	bl	8000ff0 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800938c:	687b      	ldr	r3, [r7, #4]
 800938e:	2202      	movs	r2, #2
 8009390:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8009394:	687b      	ldr	r3, [r7, #4]
 8009396:	681b      	ldr	r3, [r3, #0]
 8009398:	681a      	ldr	r2, [r3, #0]
 800939a:	687b      	ldr	r3, [r7, #4]
 800939c:	681b      	ldr	r3, [r3, #0]
 800939e:	f022 0201 	bic.w	r2, r2, #1
 80093a2:	601a      	str	r2, [r3, #0]

#if (USE_SPI_CRC == 0)
  /* Keep the default value of CRCSIZE in case of CRC is not used */
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 80093a4:	687b      	ldr	r3, [r7, #4]
 80093a6:	681b      	ldr	r3, [r3, #0]
 80093a8:	689b      	ldr	r3, [r3, #8]
 80093aa:	f403 13f8 	and.w	r3, r3, #2031616	; 0x1f0000
 80093ae:	60bb      	str	r3, [r7, #8]
  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit, CRC calculation state, CRC Length */

  /* SPIx NSS Software Management Configuration */
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 80093b0:	687b      	ldr	r3, [r7, #4]
 80093b2:	699b      	ldr	r3, [r3, #24]
 80093b4:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80093b8:	d119      	bne.n	80093ee <HAL_SPI_Init+0x112>
 80093ba:	687b      	ldr	r3, [r7, #4]
 80093bc:	685b      	ldr	r3, [r3, #4]
 80093be:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80093c2:	d103      	bne.n	80093cc <HAL_SPI_Init+0xf0>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 80093c4:	687b      	ldr	r3, [r7, #4]
 80093c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 80093c8:	2b00      	cmp	r3, #0
 80093ca:	d008      	beq.n	80093de <HAL_SPI_Init+0x102>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 80093cc:	687b      	ldr	r3, [r7, #4]
 80093ce:	685b      	ldr	r3, [r3, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 80093d0:	2b00      	cmp	r3, #0
 80093d2:	d10c      	bne.n	80093ee <HAL_SPI_Init+0x112>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 80093d4:	687b      	ldr	r3, [r7, #4]
 80093d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 80093d8:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80093dc:	d107      	bne.n	80093ee <HAL_SPI_Init+0x112>
  {
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 80093de:	687b      	ldr	r3, [r7, #4]
 80093e0:	681b      	ldr	r3, [r3, #0]
 80093e2:	681a      	ldr	r2, [r3, #0]
 80093e4:	687b      	ldr	r3, [r7, #4]
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80093ec:	601a      	str	r2, [r3, #0]
  }

  /* SPIx Master Rx Auto Suspend Configuration */
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
 80093ee:	687b      	ldr	r3, [r7, #4]
 80093f0:	685b      	ldr	r3, [r3, #4]
 80093f2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80093f6:	2b00      	cmp	r3, #0
 80093f8:	d00f      	beq.n	800941a <HAL_SPI_Init+0x13e>
 80093fa:	687b      	ldr	r3, [r7, #4]
 80093fc:	68db      	ldr	r3, [r3, #12]
 80093fe:	2b06      	cmp	r3, #6
 8009400:	d90b      	bls.n	800941a <HAL_SPI_Init+0x13e>
  {
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 8009402:	687b      	ldr	r3, [r7, #4]
 8009404:	681b      	ldr	r3, [r3, #0]
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	f423 7180 	bic.w	r1, r3, #256	; 0x100
 800940c:	687b      	ldr	r3, [r7, #4]
 800940e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8009410:	687b      	ldr	r3, [r7, #4]
 8009412:	681b      	ldr	r3, [r3, #0]
 8009414:	430a      	orrs	r2, r1
 8009416:	601a      	str	r2, [r3, #0]
 8009418:	e007      	b.n	800942a <HAL_SPI_Init+0x14e>
  }
  else
  {
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 800941a:	687b      	ldr	r3, [r7, #4]
 800941c:	681b      	ldr	r3, [r3, #0]
 800941e:	681a      	ldr	r2, [r3, #0]
 8009420:	687b      	ldr	r3, [r7, #4]
 8009422:	681b      	ldr	r3, [r3, #0]
 8009424:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009428:	601a      	str	r2, [r3, #0]
  }

  /* SPIx CFG1 Configuration */
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	69da      	ldr	r2, [r3, #28]
 800942e:	687b      	ldr	r3, [r7, #4]
 8009430:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009432:	431a      	orrs	r2, r3
 8009434:	68bb      	ldr	r3, [r7, #8]
 8009436:	431a      	orrs	r2, r3
 8009438:	687b      	ldr	r3, [r7, #4]
 800943a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800943c:	ea42 0103 	orr.w	r1, r2, r3
 8009440:	687b      	ldr	r3, [r7, #4]
 8009442:	68da      	ldr	r2, [r3, #12]
 8009444:	687b      	ldr	r3, [r7, #4]
 8009446:	681b      	ldr	r3, [r3, #0]
 8009448:	430a      	orrs	r2, r1
 800944a:	609a      	str	r2, [r3, #8]
                                   hspi->Init.FifoThreshold     | hspi->Init.DataSize));

  /* SPIx CFG2 Configuration */
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 800944c:	687b      	ldr	r3, [r7, #4]
 800944e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009450:	687b      	ldr	r3, [r7, #4]
 8009452:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009454:	431a      	orrs	r2, r3
 8009456:	687b      	ldr	r3, [r7, #4]
 8009458:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800945a:	431a      	orrs	r2, r3
 800945c:	687b      	ldr	r3, [r7, #4]
 800945e:	699b      	ldr	r3, [r3, #24]
 8009460:	431a      	orrs	r2, r3
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	691b      	ldr	r3, [r3, #16]
 8009466:	431a      	orrs	r2, r3
 8009468:	687b      	ldr	r3, [r7, #4]
 800946a:	695b      	ldr	r3, [r3, #20]
 800946c:	431a      	orrs	r2, r3
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	6a1b      	ldr	r3, [r3, #32]
 8009472:	431a      	orrs	r2, r3
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	685b      	ldr	r3, [r3, #4]
 8009478:	431a      	orrs	r2, r3
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800947e:	431a      	orrs	r2, r3
 8009480:	687b      	ldr	r3, [r7, #4]
 8009482:	689b      	ldr	r3, [r3, #8]
 8009484:	431a      	orrs	r2, r3
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800948a:	ea42 0103 	orr.w	r1, r2, r3
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8009492:	687b      	ldr	r3, [r7, #4]
 8009494:	681b      	ldr	r3, [r3, #0]
 8009496:	430a      	orrs	r2, r1
 8009498:	60da      	str	r2, [r3, #12]
    }
  }
#endif /* USE_SPI_CRC */

  /* Insure that Underrun configuration is managed only by Salve */
  if (hspi->Init.Mode == SPI_MODE_SLAVE)
 800949a:	687b      	ldr	r3, [r7, #4]
 800949c:	685b      	ldr	r3, [r3, #4]
 800949e:	2b00      	cmp	r3, #0
 80094a0:	d113      	bne.n	80094ca <HAL_SPI_Init+0x1ee>
    /* Set Default Underrun configuration */
#if (USE_SPI_CRC != 0UL)
    if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
#endif /* USE_SPI_CRC */
    {
      MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 80094a2:	687b      	ldr	r3, [r7, #4]
 80094a4:	681b      	ldr	r3, [r3, #0]
 80094a6:	689b      	ldr	r3, [r3, #8]
 80094a8:	f423 52c0 	bic.w	r2, r3, #6144	; 0x1800
 80094ac:	687b      	ldr	r3, [r7, #4]
 80094ae:	681b      	ldr	r3, [r3, #0]
 80094b0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80094b4:	609a      	str	r2, [r3, #8]
    }
    MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 80094b6:	687b      	ldr	r3, [r7, #4]
 80094b8:	681b      	ldr	r3, [r3, #0]
 80094ba:	689b      	ldr	r3, [r3, #8]
 80094bc:	f423 62c0 	bic.w	r2, r3, #1536	; 0x600
 80094c0:	687b      	ldr	r3, [r7, #4]
 80094c2:	681b      	ldr	r3, [r3, #0]
 80094c4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80094c8:	609a      	str	r2, [r3, #8]
  }

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	681b      	ldr	r3, [r3, #0]
 80094ce:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80094d0:	687b      	ldr	r3, [r7, #4]
 80094d2:	681b      	ldr	r3, [r3, #0]
 80094d4:	f022 0201 	bic.w	r2, r2, #1
 80094d8:	651a      	str	r2, [r3, #80]	; 0x50
#endif /* SPI_I2SCFGR_I2SMOD */

  /* Insure that AFCNTR is managed only by Master */
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	685b      	ldr	r3, [r3, #4]
 80094de:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80094e2:	2b00      	cmp	r3, #0
 80094e4:	d00a      	beq.n	80094fc <HAL_SPI_Init+0x220>
  {
    /* Alternate function GPIOs control */
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 80094e6:	687b      	ldr	r3, [r7, #4]
 80094e8:	681b      	ldr	r3, [r3, #0]
 80094ea:	68db      	ldr	r3, [r3, #12]
 80094ec:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80094f0:	687b      	ldr	r3, [r7, #4]
 80094f2:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80094f4:	687b      	ldr	r3, [r7, #4]
 80094f6:	681b      	ldr	r3, [r3, #0]
 80094f8:	430a      	orrs	r2, r1
 80094fa:	60da      	str	r2, [r3, #12]
  }

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80094fc:	687b      	ldr	r3, [r7, #4]
 80094fe:	2200      	movs	r2, #0
 8009500:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->State     = HAL_SPI_STATE_READY;
 8009504:	687b      	ldr	r3, [r7, #4]
 8009506:	2201      	movs	r2, #1
 8009508:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  return HAL_OK;
 800950c:	2300      	movs	r3, #0
}
 800950e:	4618      	mov	r0, r3
 8009510:	3710      	adds	r7, #16
 8009512:	46bd      	mov	sp, r7
 8009514:	bd80      	pop	{r7, pc}
 8009516:	bf00      	nop
 8009518:	40013000 	.word	0x40013000
 800951c:	40003800 	.word	0x40003800
 8009520:	40003c00 	.word	0x40003c00

08009524 <HAL_SPI_Transmit>:
  * @param  Size   : amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8009524:	b580      	push	{r7, lr}
 8009526:	b088      	sub	sp, #32
 8009528:	af02      	add	r7, sp, #8
 800952a:	60f8      	str	r0, [r7, #12]
 800952c:	60b9      	str	r1, [r7, #8]
 800952e:	603b      	str	r3, [r7, #0]
 8009530:	4613      	mov	r3, r2
 8009532:	80fb      	strh	r3, [r7, #6]
#if defined (__GNUC__)
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 8009534:	68fb      	ldr	r3, [r7, #12]
 8009536:	681b      	ldr	r3, [r3, #0]
 8009538:	3320      	adds	r3, #32
 800953a:	617b      	str	r3, [r7, #20]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800953c:	f7f8 f8d0 	bl	80016e0 <HAL_GetTick>
 8009540:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 8009542:	68fb      	ldr	r3, [r7, #12]
 8009544:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8009548:	b2db      	uxtb	r3, r3
 800954a:	2b01      	cmp	r3, #1
 800954c:	d001      	beq.n	8009552 <HAL_SPI_Transmit+0x2e>
  {
    return HAL_BUSY;
 800954e:	2302      	movs	r3, #2
 8009550:	e1d1      	b.n	80098f6 <HAL_SPI_Transmit+0x3d2>
  }

  if ((pData == NULL) || (Size == 0UL))
 8009552:	68bb      	ldr	r3, [r7, #8]
 8009554:	2b00      	cmp	r3, #0
 8009556:	d002      	beq.n	800955e <HAL_SPI_Transmit+0x3a>
 8009558:	88fb      	ldrh	r3, [r7, #6]
 800955a:	2b00      	cmp	r3, #0
 800955c:	d101      	bne.n	8009562 <HAL_SPI_Transmit+0x3e>
  {
    return HAL_ERROR;
 800955e:	2301      	movs	r3, #1
 8009560:	e1c9      	b.n	80098f6 <HAL_SPI_Transmit+0x3d2>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 8009562:	68fb      	ldr	r3, [r7, #12]
 8009564:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8009568:	2b01      	cmp	r3, #1
 800956a:	d101      	bne.n	8009570 <HAL_SPI_Transmit+0x4c>
 800956c:	2302      	movs	r3, #2
 800956e:	e1c2      	b.n	80098f6 <HAL_SPI_Transmit+0x3d2>
 8009570:	68fb      	ldr	r3, [r7, #12]
 8009572:	2201      	movs	r2, #1
 8009574:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8009578:	68fb      	ldr	r3, [r7, #12]
 800957a:	2203      	movs	r2, #3
 800957c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009580:	68fb      	ldr	r3, [r7, #12]
 8009582:	2200      	movs	r2, #0
 8009584:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8009588:	68fb      	ldr	r3, [r7, #12]
 800958a:	68ba      	ldr	r2, [r7, #8]
 800958c:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800958e:	68fb      	ldr	r3, [r7, #12]
 8009590:	88fa      	ldrh	r2, [r7, #6]
 8009592:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 8009596:	68fb      	ldr	r3, [r7, #12]
 8009598:	88fa      	ldrh	r2, [r7, #6]
 800959a:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800959e:	68fb      	ldr	r3, [r7, #12]
 80095a0:	2200      	movs	r2, #0
 80095a2:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->RxXferSize  = (uint16_t) 0UL;
 80095a4:	68fb      	ldr	r3, [r7, #12]
 80095a6:	2200      	movs	r2, #0
 80095a8:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t) 0UL;
 80095ac:	68fb      	ldr	r3, [r7, #12]
 80095ae:	2200      	movs	r2, #0
 80095b0:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxISR       = NULL;
 80095b4:	68fb      	ldr	r3, [r7, #12]
 80095b6:	2200      	movs	r2, #0
 80095b8:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 80095ba:	68fb      	ldr	r3, [r7, #12]
 80095bc:	2200      	movs	r2, #0
 80095be:	671a      	str	r2, [r3, #112]	; 0x70

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80095c0:	68fb      	ldr	r3, [r7, #12]
 80095c2:	689b      	ldr	r3, [r3, #8]
 80095c4:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 80095c8:	d108      	bne.n	80095dc <HAL_SPI_Transmit+0xb8>
  {
    SPI_1LINE_TX(hspi);
 80095ca:	68fb      	ldr	r3, [r7, #12]
 80095cc:	681b      	ldr	r3, [r3, #0]
 80095ce:	681a      	ldr	r2, [r3, #0]
 80095d0:	68fb      	ldr	r3, [r7, #12]
 80095d2:	681b      	ldr	r3, [r3, #0]
 80095d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80095d8:	601a      	str	r2, [r3, #0]
 80095da:	e009      	b.n	80095f0 <HAL_SPI_Transmit+0xcc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 80095dc:	68fb      	ldr	r3, [r7, #12]
 80095de:	681b      	ldr	r3, [r3, #0]
 80095e0:	68db      	ldr	r3, [r3, #12]
 80095e2:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 80095e6:	68fb      	ldr	r3, [r7, #12]
 80095e8:	681b      	ldr	r3, [r3, #0]
 80095ea:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80095ee:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 80095f0:	68fb      	ldr	r3, [r7, #12]
 80095f2:	681b      	ldr	r3, [r3, #0]
 80095f4:	685a      	ldr	r2, [r3, #4]
 80095f6:	4b96      	ldr	r3, [pc, #600]	; (8009850 <HAL_SPI_Transmit+0x32c>)
 80095f8:	4013      	ands	r3, r2
 80095fa:	88f9      	ldrh	r1, [r7, #6]
 80095fc:	68fa      	ldr	r2, [r7, #12]
 80095fe:	6812      	ldr	r2, [r2, #0]
 8009600:	430b      	orrs	r3, r1
 8009602:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 8009604:	68fb      	ldr	r3, [r7, #12]
 8009606:	681b      	ldr	r3, [r3, #0]
 8009608:	681a      	ldr	r2, [r3, #0]
 800960a:	68fb      	ldr	r3, [r7, #12]
 800960c:	681b      	ldr	r3, [r3, #0]
 800960e:	f042 0201 	orr.w	r2, r2, #1
 8009612:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009614:	68fb      	ldr	r3, [r7, #12]
 8009616:	685b      	ldr	r3, [r3, #4]
 8009618:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800961c:	d107      	bne.n	800962e <HAL_SPI_Transmit+0x10a>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800961e:	68fb      	ldr	r3, [r7, #12]
 8009620:	681b      	ldr	r3, [r3, #0]
 8009622:	681a      	ldr	r2, [r3, #0]
 8009624:	68fb      	ldr	r3, [r7, #12]
 8009626:	681b      	ldr	r3, [r3, #0]
 8009628:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800962c:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 32 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800962e:	68fb      	ldr	r3, [r7, #12]
 8009630:	68db      	ldr	r3, [r3, #12]
 8009632:	2b0f      	cmp	r3, #15
 8009634:	d947      	bls.n	80096c6 <HAL_SPI_Transmit+0x1a2>
  {
    /* Transmit data in 32 Bit mode */
    while (hspi->TxXferCount > 0UL)
 8009636:	e03f      	b.n	80096b8 <HAL_SPI_Transmit+0x194>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8009638:	68fb      	ldr	r3, [r7, #12]
 800963a:	681b      	ldr	r3, [r3, #0]
 800963c:	695b      	ldr	r3, [r3, #20]
 800963e:	f003 0302 	and.w	r3, r3, #2
 8009642:	2b02      	cmp	r3, #2
 8009644:	d114      	bne.n	8009670 <HAL_SPI_Transmit+0x14c>
      {
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8009646:	68fb      	ldr	r3, [r7, #12]
 8009648:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800964a:	68fb      	ldr	r3, [r7, #12]
 800964c:	681b      	ldr	r3, [r3, #0]
 800964e:	6812      	ldr	r2, [r2, #0]
 8009650:	621a      	str	r2, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
 8009652:	68fb      	ldr	r3, [r7, #12]
 8009654:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009656:	1d1a      	adds	r2, r3, #4
 8009658:	68fb      	ldr	r3, [r7, #12]
 800965a:	65da      	str	r2, [r3, #92]	; 0x5c
        hspi->TxXferCount--;
 800965c:	68fb      	ldr	r3, [r7, #12]
 800965e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009662:	b29b      	uxth	r3, r3
 8009664:	3b01      	subs	r3, #1
 8009666:	b29a      	uxth	r2, r3
 8009668:	68fb      	ldr	r3, [r7, #12]
 800966a:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800966e:	e023      	b.n	80096b8 <HAL_SPI_Transmit+0x194>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009670:	f7f8 f836 	bl	80016e0 <HAL_GetTick>
 8009674:	4602      	mov	r2, r0
 8009676:	693b      	ldr	r3, [r7, #16]
 8009678:	1ad3      	subs	r3, r2, r3
 800967a:	683a      	ldr	r2, [r7, #0]
 800967c:	429a      	cmp	r2, r3
 800967e:	d803      	bhi.n	8009688 <HAL_SPI_Transmit+0x164>
 8009680:	683b      	ldr	r3, [r7, #0]
 8009682:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009686:	d102      	bne.n	800968e <HAL_SPI_Transmit+0x16a>
 8009688:	683b      	ldr	r3, [r7, #0]
 800968a:	2b00      	cmp	r3, #0
 800968c:	d114      	bne.n	80096b8 <HAL_SPI_Transmit+0x194>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800968e:	68f8      	ldr	r0, [r7, #12]
 8009690:	f000 fce6 	bl	800a060 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8009694:	68fb      	ldr	r3, [r7, #12]
 8009696:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800969a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800969e:	68fb      	ldr	r3, [r7, #12]
 80096a0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 80096a4:	68fb      	ldr	r3, [r7, #12]
 80096a6:	2201      	movs	r2, #1
 80096a8:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 80096ac:	68fb      	ldr	r3, [r7, #12]
 80096ae:	2200      	movs	r2, #0
 80096b0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 80096b4:	2303      	movs	r3, #3
 80096b6:	e11e      	b.n	80098f6 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 80096b8:	68fb      	ldr	r3, [r7, #12]
 80096ba:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 80096be:	b29b      	uxth	r3, r3
 80096c0:	2b00      	cmp	r3, #0
 80096c2:	d1b9      	bne.n	8009638 <HAL_SPI_Transmit+0x114>
 80096c4:	e0f1      	b.n	80098aa <HAL_SPI_Transmit+0x386>
        }
      }
    }
  }
  /* Transmit data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80096c6:	68fb      	ldr	r3, [r7, #12]
 80096c8:	68db      	ldr	r3, [r3, #12]
 80096ca:	2b07      	cmp	r3, #7
 80096cc:	f240 80e6 	bls.w	800989c <HAL_SPI_Transmit+0x378>
  {
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0UL)
 80096d0:	e05d      	b.n	800978e <HAL_SPI_Transmit+0x26a>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 80096d2:	68fb      	ldr	r3, [r7, #12]
 80096d4:	681b      	ldr	r3, [r3, #0]
 80096d6:	695b      	ldr	r3, [r3, #20]
 80096d8:	f003 0302 	and.w	r3, r3, #2
 80096dc:	2b02      	cmp	r3, #2
 80096de:	d132      	bne.n	8009746 <HAL_SPI_Transmit+0x222>
      {
        if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 80096e0:	68fb      	ldr	r3, [r7, #12]
 80096e2:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 80096e6:	b29b      	uxth	r3, r3
 80096e8:	2b01      	cmp	r3, #1
 80096ea:	d918      	bls.n	800971e <HAL_SPI_Transmit+0x1fa>
 80096ec:	68fb      	ldr	r3, [r7, #12]
 80096ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80096f0:	2b00      	cmp	r3, #0
 80096f2:	d014      	beq.n	800971e <HAL_SPI_Transmit+0x1fa>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 80096f4:	68fb      	ldr	r3, [r7, #12]
 80096f6:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80096f8:	68fb      	ldr	r3, [r7, #12]
 80096fa:	681b      	ldr	r3, [r3, #0]
 80096fc:	6812      	ldr	r2, [r2, #0]
 80096fe:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 8009700:	68fb      	ldr	r3, [r7, #12]
 8009702:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009704:	1d1a      	adds	r2, r3, #4
 8009706:	68fb      	ldr	r3, [r7, #12]
 8009708:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800970a:	68fb      	ldr	r3, [r7, #12]
 800970c:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009710:	b29b      	uxth	r3, r3
 8009712:	3b02      	subs	r3, #2
 8009714:	b29a      	uxth	r2, r3
 8009716:	68fb      	ldr	r3, [r7, #12]
 8009718:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800971c:	e037      	b.n	800978e <HAL_SPI_Transmit+0x26a>
        }
        else
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800971e:	68fb      	ldr	r3, [r7, #12]
 8009720:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009722:	881a      	ldrh	r2, [r3, #0]
 8009724:	697b      	ldr	r3, [r7, #20]
 8009726:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8009728:	68fb      	ldr	r3, [r7, #12]
 800972a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800972c:	1c9a      	adds	r2, r3, #2
 800972e:	68fb      	ldr	r3, [r7, #12]
 8009730:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 8009732:	68fb      	ldr	r3, [r7, #12]
 8009734:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009738:	b29b      	uxth	r3, r3
 800973a:	3b01      	subs	r3, #1
 800973c:	b29a      	uxth	r2, r3
 800973e:	68fb      	ldr	r3, [r7, #12]
 8009740:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 8009744:	e023      	b.n	800978e <HAL_SPI_Transmit+0x26a>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009746:	f7f7 ffcb 	bl	80016e0 <HAL_GetTick>
 800974a:	4602      	mov	r2, r0
 800974c:	693b      	ldr	r3, [r7, #16]
 800974e:	1ad3      	subs	r3, r2, r3
 8009750:	683a      	ldr	r2, [r7, #0]
 8009752:	429a      	cmp	r2, r3
 8009754:	d803      	bhi.n	800975e <HAL_SPI_Transmit+0x23a>
 8009756:	683b      	ldr	r3, [r7, #0]
 8009758:	f1b3 3fff 	cmp.w	r3, #4294967295
 800975c:	d102      	bne.n	8009764 <HAL_SPI_Transmit+0x240>
 800975e:	683b      	ldr	r3, [r7, #0]
 8009760:	2b00      	cmp	r3, #0
 8009762:	d114      	bne.n	800978e <HAL_SPI_Transmit+0x26a>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8009764:	68f8      	ldr	r0, [r7, #12]
 8009766:	f000 fc7b 	bl	800a060 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800976a:	68fb      	ldr	r3, [r7, #12]
 800976c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009770:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8009774:	68fb      	ldr	r3, [r7, #12]
 8009776:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800977a:	68fb      	ldr	r3, [r7, #12]
 800977c:	2201      	movs	r2, #1
 800977e:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8009782:	68fb      	ldr	r3, [r7, #12]
 8009784:	2200      	movs	r2, #0
 8009786:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800978a:	2303      	movs	r3, #3
 800978c:	e0b3      	b.n	80098f6 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800978e:	68fb      	ldr	r3, [r7, #12]
 8009790:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009794:	b29b      	uxth	r3, r3
 8009796:	2b00      	cmp	r3, #0
 8009798:	d19b      	bne.n	80096d2 <HAL_SPI_Transmit+0x1ae>
 800979a:	e086      	b.n	80098aa <HAL_SPI_Transmit+0x386>
  else
  {
    while (hspi->TxXferCount > 0UL)
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800979c:	68fb      	ldr	r3, [r7, #12]
 800979e:	681b      	ldr	r3, [r3, #0]
 80097a0:	695b      	ldr	r3, [r3, #20]
 80097a2:	f003 0302 	and.w	r3, r3, #2
 80097a6:	2b02      	cmp	r3, #2
 80097a8:	d154      	bne.n	8009854 <HAL_SPI_Transmit+0x330>
      {
        if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 80097aa:	68fb      	ldr	r3, [r7, #12]
 80097ac:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 80097b0:	b29b      	uxth	r3, r3
 80097b2:	2b03      	cmp	r3, #3
 80097b4:	d918      	bls.n	80097e8 <HAL_SPI_Transmit+0x2c4>
 80097b6:	68fb      	ldr	r3, [r7, #12]
 80097b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80097ba:	2b40      	cmp	r3, #64	; 0x40
 80097bc:	d914      	bls.n	80097e8 <HAL_SPI_Transmit+0x2c4>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 80097be:	68fb      	ldr	r3, [r7, #12]
 80097c0:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80097c2:	68fb      	ldr	r3, [r7, #12]
 80097c4:	681b      	ldr	r3, [r3, #0]
 80097c6:	6812      	ldr	r2, [r2, #0]
 80097c8:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 80097ca:	68fb      	ldr	r3, [r7, #12]
 80097cc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80097ce:	1d1a      	adds	r2, r3, #4
 80097d0:	68fb      	ldr	r3, [r7, #12]
 80097d2:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)4UL;
 80097d4:	68fb      	ldr	r3, [r7, #12]
 80097d6:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 80097da:	b29b      	uxth	r3, r3
 80097dc:	3b04      	subs	r3, #4
 80097de:	b29a      	uxth	r2, r3
 80097e0:	68fb      	ldr	r3, [r7, #12]
 80097e2:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 80097e6:	e059      	b.n	800989c <HAL_SPI_Transmit+0x378>
        }
        else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 80097e8:	68fb      	ldr	r3, [r7, #12]
 80097ea:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 80097ee:	b29b      	uxth	r3, r3
 80097f0:	2b01      	cmp	r3, #1
 80097f2:	d917      	bls.n	8009824 <HAL_SPI_Transmit+0x300>
 80097f4:	68fb      	ldr	r3, [r7, #12]
 80097f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80097f8:	2b00      	cmp	r3, #0
 80097fa:	d013      	beq.n	8009824 <HAL_SPI_Transmit+0x300>
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 80097fc:	68fb      	ldr	r3, [r7, #12]
 80097fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009800:	881a      	ldrh	r2, [r3, #0]
 8009802:	697b      	ldr	r3, [r7, #20]
 8009804:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8009806:	68fb      	ldr	r3, [r7, #12]
 8009808:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800980a:	1c9a      	adds	r2, r3, #2
 800980c:	68fb      	ldr	r3, [r7, #12]
 800980e:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 8009810:	68fb      	ldr	r3, [r7, #12]
 8009812:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009816:	b29b      	uxth	r3, r3
 8009818:	3b02      	subs	r3, #2
 800981a:	b29a      	uxth	r2, r3
 800981c:	68fb      	ldr	r3, [r7, #12]
 800981e:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 8009822:	e03b      	b.n	800989c <HAL_SPI_Transmit+0x378>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8009824:	68fb      	ldr	r3, [r7, #12]
 8009826:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8009828:	68fb      	ldr	r3, [r7, #12]
 800982a:	681b      	ldr	r3, [r3, #0]
 800982c:	3320      	adds	r3, #32
 800982e:	7812      	ldrb	r2, [r2, #0]
 8009830:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr += sizeof(uint8_t);
 8009832:	68fb      	ldr	r3, [r7, #12]
 8009834:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009836:	1c5a      	adds	r2, r3, #1
 8009838:	68fb      	ldr	r3, [r7, #12]
 800983a:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800983c:	68fb      	ldr	r3, [r7, #12]
 800983e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009842:	b29b      	uxth	r3, r3
 8009844:	3b01      	subs	r3, #1
 8009846:	b29a      	uxth	r2, r3
 8009848:	68fb      	ldr	r3, [r7, #12]
 800984a:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800984e:	e025      	b.n	800989c <HAL_SPI_Transmit+0x378>
 8009850:	ffff0000 	.word	0xffff0000
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009854:	f7f7 ff44 	bl	80016e0 <HAL_GetTick>
 8009858:	4602      	mov	r2, r0
 800985a:	693b      	ldr	r3, [r7, #16]
 800985c:	1ad3      	subs	r3, r2, r3
 800985e:	683a      	ldr	r2, [r7, #0]
 8009860:	429a      	cmp	r2, r3
 8009862:	d803      	bhi.n	800986c <HAL_SPI_Transmit+0x348>
 8009864:	683b      	ldr	r3, [r7, #0]
 8009866:	f1b3 3fff 	cmp.w	r3, #4294967295
 800986a:	d102      	bne.n	8009872 <HAL_SPI_Transmit+0x34e>
 800986c:	683b      	ldr	r3, [r7, #0]
 800986e:	2b00      	cmp	r3, #0
 8009870:	d114      	bne.n	800989c <HAL_SPI_Transmit+0x378>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8009872:	68f8      	ldr	r0, [r7, #12]
 8009874:	f000 fbf4 	bl	800a060 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8009878:	68fb      	ldr	r3, [r7, #12]
 800987a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800987e:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8009882:	68fb      	ldr	r3, [r7, #12]
 8009884:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 8009888:	68fb      	ldr	r3, [r7, #12]
 800988a:	2201      	movs	r2, #1
 800988c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8009890:	68fb      	ldr	r3, [r7, #12]
 8009892:	2200      	movs	r2, #0
 8009894:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 8009898:	2303      	movs	r3, #3
 800989a:	e02c      	b.n	80098f6 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800989c:	68fb      	ldr	r3, [r7, #12]
 800989e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 80098a2:	b29b      	uxth	r3, r3
 80098a4:	2b00      	cmp	r3, #0
 80098a6:	f47f af79 	bne.w	800979c <HAL_SPI_Transmit+0x278>
      }
    }
  }

  /* Wait for Tx (and CRC) data to be sent */
  if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
 80098aa:	693b      	ldr	r3, [r7, #16]
 80098ac:	9300      	str	r3, [sp, #0]
 80098ae:	683b      	ldr	r3, [r7, #0]
 80098b0:	2200      	movs	r2, #0
 80098b2:	2108      	movs	r1, #8
 80098b4:	68f8      	ldr	r0, [r7, #12]
 80098b6:	f000 fc73 	bl	800a1a0 <SPI_WaitOnFlagUntilTimeout>
 80098ba:	4603      	mov	r3, r0
 80098bc:	2b00      	cmp	r3, #0
 80098be:	d007      	beq.n	80098d0 <HAL_SPI_Transmit+0x3ac>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80098c0:	68fb      	ldr	r3, [r7, #12]
 80098c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80098c6:	f043 0220 	orr.w	r2, r3, #32
 80098ca:	68fb      	ldr	r3, [r7, #12]
 80098cc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  }

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 80098d0:	68f8      	ldr	r0, [r7, #12]
 80098d2:	f000 fbc5 	bl	800a060 <SPI_CloseTransfer>

  hspi->State = HAL_SPI_STATE_READY;
 80098d6:	68fb      	ldr	r3, [r7, #12]
 80098d8:	2201      	movs	r2, #1
 80098da:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 80098de:	68fb      	ldr	r3, [r7, #12]
 80098e0:	2200      	movs	r2, #0
 80098e2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80098e6:	68fb      	ldr	r3, [r7, #12]
 80098e8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80098ec:	2b00      	cmp	r3, #0
 80098ee:	d001      	beq.n	80098f4 <HAL_SPI_Transmit+0x3d0>
  {
    return HAL_ERROR;
 80098f0:	2301      	movs	r3, #1
 80098f2:	e000      	b.n	80098f6 <HAL_SPI_Transmit+0x3d2>
  }
  else
  {
    return HAL_OK;
 80098f4:	2300      	movs	r3, #0
  }
}
 80098f6:	4618      	mov	r0, r3
 80098f8:	3718      	adds	r7, #24
 80098fa:	46bd      	mov	sp, r7
 80098fc:	bd80      	pop	{r7, pc}
 80098fe:	bf00      	nop

08009900 <HAL_SPI_Transmit_DMA>:
  * @param  pData: pointer to data buffer
  * @param  Size : amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 8009900:	b580      	push	{r7, lr}
 8009902:	b084      	sub	sp, #16
 8009904:	af00      	add	r7, sp, #0
 8009906:	60f8      	str	r0, [r7, #12]
 8009908:	60b9      	str	r1, [r7, #8]
 800990a:	4613      	mov	r3, r2
 800990c:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 800990e:	68fb      	ldr	r3, [r7, #12]
 8009910:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8009914:	b2db      	uxtb	r3, r3
 8009916:	2b01      	cmp	r3, #1
 8009918:	d001      	beq.n	800991e <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 800991a:	2302      	movs	r3, #2
 800991c:	e126      	b.n	8009b6c <HAL_SPI_Transmit_DMA+0x26c>
  }

  if ((pData == NULL) || (Size == 0UL))
 800991e:	68bb      	ldr	r3, [r7, #8]
 8009920:	2b00      	cmp	r3, #0
 8009922:	d002      	beq.n	800992a <HAL_SPI_Transmit_DMA+0x2a>
 8009924:	88fb      	ldrh	r3, [r7, #6]
 8009926:	2b00      	cmp	r3, #0
 8009928:	d101      	bne.n	800992e <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 800992a:	2301      	movs	r3, #1
 800992c:	e11e      	b.n	8009b6c <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800992e:	68fb      	ldr	r3, [r7, #12]
 8009930:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8009934:	2b01      	cmp	r3, #1
 8009936:	d101      	bne.n	800993c <HAL_SPI_Transmit_DMA+0x3c>
 8009938:	2302      	movs	r3, #2
 800993a:	e117      	b.n	8009b6c <HAL_SPI_Transmit_DMA+0x26c>
 800993c:	68fb      	ldr	r3, [r7, #12]
 800993e:	2201      	movs	r2, #1
 8009940:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8009944:	68fb      	ldr	r3, [r7, #12]
 8009946:	2203      	movs	r2, #3
 8009948:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800994c:	68fb      	ldr	r3, [r7, #12]
 800994e:	2200      	movs	r2, #0
 8009950:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8009954:	68fb      	ldr	r3, [r7, #12]
 8009956:	68ba      	ldr	r2, [r7, #8]
 8009958:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800995a:	68fb      	ldr	r3, [r7, #12]
 800995c:	88fa      	ldrh	r2, [r7, #6]
 800995e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 8009962:	68fb      	ldr	r3, [r7, #12]
 8009964:	88fa      	ldrh	r2, [r7, #6]
 8009966:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800996a:	68fb      	ldr	r3, [r7, #12]
 800996c:	2200      	movs	r2, #0
 800996e:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->TxISR       = NULL;
 8009970:	68fb      	ldr	r3, [r7, #12]
 8009972:	2200      	movs	r2, #0
 8009974:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 8009976:	68fb      	ldr	r3, [r7, #12]
 8009978:	2200      	movs	r2, #0
 800997a:	671a      	str	r2, [r3, #112]	; 0x70
  hspi->RxXferSize  = (uint16_t)0UL;
 800997c:	68fb      	ldr	r3, [r7, #12]
 800997e:	2200      	movs	r2, #0
 8009980:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t)0UL;
 8009984:	68fb      	ldr	r3, [r7, #12]
 8009986:	2200      	movs	r2, #0
 8009988:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800998c:	68fb      	ldr	r3, [r7, #12]
 800998e:	689b      	ldr	r3, [r3, #8]
 8009990:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 8009994:	d108      	bne.n	80099a8 <HAL_SPI_Transmit_DMA+0xa8>
  {
    SPI_1LINE_TX(hspi);
 8009996:	68fb      	ldr	r3, [r7, #12]
 8009998:	681b      	ldr	r3, [r3, #0]
 800999a:	681a      	ldr	r2, [r3, #0]
 800999c:	68fb      	ldr	r3, [r7, #12]
 800999e:	681b      	ldr	r3, [r3, #0]
 80099a0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80099a4:	601a      	str	r2, [r3, #0]
 80099a6:	e009      	b.n	80099bc <HAL_SPI_Transmit_DMA+0xbc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 80099a8:	68fb      	ldr	r3, [r7, #12]
 80099aa:	681b      	ldr	r3, [r3, #0]
 80099ac:	68db      	ldr	r3, [r3, #12]
 80099ae:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 80099b2:	68fb      	ldr	r3, [r7, #12]
 80099b4:	681b      	ldr	r3, [r3, #0]
 80099b6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80099ba:	60da      	str	r2, [r3, #12]
  }

  /* Packing mode management is enabled by the DMA settings */
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 80099bc:	68fb      	ldr	r3, [r7, #12]
 80099be:	68db      	ldr	r3, [r3, #12]
 80099c0:	2b0f      	cmp	r3, #15
 80099c2:	d905      	bls.n	80099d0 <HAL_SPI_Transmit_DMA+0xd0>
 80099c4:	68fb      	ldr	r3, [r7, #12]
 80099c6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80099c8:	699b      	ldr	r3, [r3, #24]
 80099ca:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80099ce:	d10f      	bne.n	80099f0 <HAL_SPI_Transmit_DMA+0xf0>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 80099d0:	68fb      	ldr	r3, [r7, #12]
 80099d2:	68db      	ldr	r3, [r3, #12]
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 80099d4:	2b07      	cmp	r3, #7
 80099d6:	d911      	bls.n	80099fc <HAL_SPI_Transmit_DMA+0xfc>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 80099d8:	68fb      	ldr	r3, [r7, #12]
 80099da:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80099dc:	699b      	ldr	r3, [r3, #24]
 80099de:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80099e2:	d00b      	beq.n	80099fc <HAL_SPI_Transmit_DMA+0xfc>
                                                     (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))))
 80099e4:	68fb      	ldr	r3, [r7, #12]
 80099e6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80099e8:	699b      	ldr	r3, [r3, #24]
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 80099ea:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80099ee:	d005      	beq.n	80099fc <HAL_SPI_Transmit_DMA+0xfc>
  {
    /* Restriction the DMA data received is not allowed in this mode */
    __HAL_UNLOCK(hspi);
 80099f0:	68fb      	ldr	r3, [r7, #12]
 80099f2:	2200      	movs	r2, #0
 80099f4:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return HAL_ERROR;
 80099f8:	2301      	movs	r3, #1
 80099fa:	e0b7      	b.n	8009b6c <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Adjust XferCount according to DMA alignment / Data size */
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 80099fc:	68fb      	ldr	r3, [r7, #12]
 80099fe:	68db      	ldr	r3, [r3, #12]
 8009a00:	2b07      	cmp	r3, #7
 8009a02:	d820      	bhi.n	8009a46 <HAL_SPI_Transmit_DMA+0x146>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8009a04:	68fb      	ldr	r3, [r7, #12]
 8009a06:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009a08:	699b      	ldr	r3, [r3, #24]
 8009a0a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009a0e:	d109      	bne.n	8009a24 <HAL_SPI_Transmit_DMA+0x124>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 8009a10:	68fb      	ldr	r3, [r7, #12]
 8009a12:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009a16:	b29b      	uxth	r3, r3
 8009a18:	3301      	adds	r3, #1
 8009a1a:	105b      	asrs	r3, r3, #1
 8009a1c:	b29a      	uxth	r2, r3
 8009a1e:	68fb      	ldr	r3, [r7, #12]
 8009a20:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
    }
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 8009a24:	68fb      	ldr	r3, [r7, #12]
 8009a26:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009a28:	699b      	ldr	r3, [r3, #24]
 8009a2a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009a2e:	d11e      	bne.n	8009a6e <HAL_SPI_Transmit_DMA+0x16e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 8009a30:	68fb      	ldr	r3, [r7, #12]
 8009a32:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009a36:	b29b      	uxth	r3, r3
 8009a38:	3303      	adds	r3, #3
 8009a3a:	109b      	asrs	r3, r3, #2
 8009a3c:	b29a      	uxth	r2, r3
 8009a3e:	68fb      	ldr	r3, [r7, #12]
 8009a40:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 8009a44:	e013      	b.n	8009a6e <HAL_SPI_Transmit_DMA+0x16e>
    }
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 8009a46:	68fb      	ldr	r3, [r7, #12]
 8009a48:	68db      	ldr	r3, [r3, #12]
 8009a4a:	2b0f      	cmp	r3, #15
 8009a4c:	d80f      	bhi.n	8009a6e <HAL_SPI_Transmit_DMA+0x16e>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 8009a4e:	68fb      	ldr	r3, [r7, #12]
 8009a50:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009a52:	699b      	ldr	r3, [r3, #24]
 8009a54:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009a58:	d109      	bne.n	8009a6e <HAL_SPI_Transmit_DMA+0x16e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 8009a5a:	68fb      	ldr	r3, [r7, #12]
 8009a5c:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009a60:	b29b      	uxth	r3, r3
 8009a62:	3301      	adds	r3, #1
 8009a64:	105b      	asrs	r3, r3, #1
 8009a66:	b29a      	uxth	r2, r3
 8009a68:	68fb      	ldr	r3, [r7, #12]
 8009a6a:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  {
    /* Adjustment done */
  }

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8009a6e:	68fb      	ldr	r3, [r7, #12]
 8009a70:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009a72:	4a40      	ldr	r2, [pc, #256]	; (8009b74 <HAL_SPI_Transmit_DMA+0x274>)
 8009a74:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8009a76:	68fb      	ldr	r3, [r7, #12]
 8009a78:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009a7a:	4a3f      	ldr	r2, [pc, #252]	; (8009b78 <HAL_SPI_Transmit_DMA+0x278>)
 8009a7c:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8009a7e:	68fb      	ldr	r3, [r7, #12]
 8009a80:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009a82:	4a3e      	ldr	r2, [pc, #248]	; (8009b7c <HAL_SPI_Transmit_DMA+0x27c>)
 8009a84:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8009a86:	68fb      	ldr	r3, [r7, #12]
 8009a88:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009a8a:	2200      	movs	r2, #0
 8009a8c:	651a      	str	r2, [r3, #80]	; 0x50

  /* Clear TXDMAEN bit*/
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 8009a8e:	68fb      	ldr	r3, [r7, #12]
 8009a90:	681b      	ldr	r3, [r3, #0]
 8009a92:	689a      	ldr	r2, [r3, #8]
 8009a94:	68fb      	ldr	r3, [r7, #12]
 8009a96:	681b      	ldr	r3, [r3, #0]
 8009a98:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009a9c:	609a      	str	r2, [r3, #8]

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 8009a9e:	68fb      	ldr	r3, [r7, #12]
 8009aa0:	6f98      	ldr	r0, [r3, #120]	; 0x78
 8009aa2:	68fb      	ldr	r3, [r7, #12]
 8009aa4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009aa6:	4619      	mov	r1, r3
 8009aa8:	68fb      	ldr	r3, [r7, #12]
 8009aaa:	681b      	ldr	r3, [r3, #0]
 8009aac:	3320      	adds	r3, #32
 8009aae:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 8009ab0:	68fb      	ldr	r3, [r7, #12]
 8009ab2:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8009ab6:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 8009ab8:	f7f9 ff10 	bl	80038dc <HAL_DMA_Start_IT>
 8009abc:	4603      	mov	r3, r0
 8009abe:	2b00      	cmp	r3, #0
 8009ac0:	d011      	beq.n	8009ae6 <HAL_SPI_Transmit_DMA+0x1e6>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8009ac2:	68fb      	ldr	r3, [r7, #12]
 8009ac4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009ac8:	f043 0210 	orr.w	r2, r3, #16
 8009acc:	68fb      	ldr	r3, [r7, #12]
 8009ace:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 8009ad2:	68fb      	ldr	r3, [r7, #12]
 8009ad4:	2201      	movs	r2, #1
 8009ad6:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

    /* Unlock the process */
    __HAL_UNLOCK(hspi);
 8009ada:	68fb      	ldr	r3, [r7, #12]
 8009adc:	2200      	movs	r2, #0
 8009ade:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    return HAL_ERROR;
 8009ae2:	2301      	movs	r3, #1
 8009ae4:	e042      	b.n	8009b6c <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Set the number of data at current transfer */
  if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 8009ae6:	68fb      	ldr	r3, [r7, #12]
 8009ae8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009aea:	69db      	ldr	r3, [r3, #28]
 8009aec:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009af0:	d108      	bne.n	8009b04 <HAL_SPI_Transmit_DMA+0x204>
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 8009af2:	68fb      	ldr	r3, [r7, #12]
 8009af4:	681b      	ldr	r3, [r3, #0]
 8009af6:	6859      	ldr	r1, [r3, #4]
 8009af8:	68fb      	ldr	r3, [r7, #12]
 8009afa:	681a      	ldr	r2, [r3, #0]
 8009afc:	4b20      	ldr	r3, [pc, #128]	; (8009b80 <HAL_SPI_Transmit_DMA+0x280>)
 8009afe:	400b      	ands	r3, r1
 8009b00:	6053      	str	r3, [r2, #4]
 8009b02:	e009      	b.n	8009b18 <HAL_SPI_Transmit_DMA+0x218>
  }
  else
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 8009b04:	68fb      	ldr	r3, [r7, #12]
 8009b06:	681b      	ldr	r3, [r3, #0]
 8009b08:	685a      	ldr	r2, [r3, #4]
 8009b0a:	4b1d      	ldr	r3, [pc, #116]	; (8009b80 <HAL_SPI_Transmit_DMA+0x280>)
 8009b0c:	4013      	ands	r3, r2
 8009b0e:	88f9      	ldrh	r1, [r7, #6]
 8009b10:	68fa      	ldr	r2, [r7, #12]
 8009b12:	6812      	ldr	r2, [r2, #0]
 8009b14:	430b      	orrs	r3, r1
 8009b16:	6053      	str	r3, [r2, #4]
  }

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 8009b18:	68fb      	ldr	r3, [r7, #12]
 8009b1a:	681b      	ldr	r3, [r3, #0]
 8009b1c:	689a      	ldr	r2, [r3, #8]
 8009b1e:	68fb      	ldr	r3, [r7, #12]
 8009b20:	681b      	ldr	r3, [r3, #0]
 8009b22:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009b26:	609a      	str	r2, [r3, #8]

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 8009b28:	68fb      	ldr	r3, [r7, #12]
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	691a      	ldr	r2, [r3, #16]
 8009b2e:	68fb      	ldr	r3, [r7, #12]
 8009b30:	681b      	ldr	r3, [r3, #0]
 8009b32:	f442 7248 	orr.w	r2, r2, #800	; 0x320
 8009b36:	611a      	str	r2, [r3, #16]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 8009b38:	68fb      	ldr	r3, [r7, #12]
 8009b3a:	681b      	ldr	r3, [r3, #0]
 8009b3c:	681a      	ldr	r2, [r3, #0]
 8009b3e:	68fb      	ldr	r3, [r7, #12]
 8009b40:	681b      	ldr	r3, [r3, #0]
 8009b42:	f042 0201 	orr.w	r2, r2, #1
 8009b46:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009b48:	68fb      	ldr	r3, [r7, #12]
 8009b4a:	685b      	ldr	r3, [r3, #4]
 8009b4c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009b50:	d107      	bne.n	8009b62 <HAL_SPI_Transmit_DMA+0x262>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 8009b52:	68fb      	ldr	r3, [r7, #12]
 8009b54:	681b      	ldr	r3, [r3, #0]
 8009b56:	681a      	ldr	r2, [r3, #0]
 8009b58:	68fb      	ldr	r3, [r7, #12]
 8009b5a:	681b      	ldr	r3, [r3, #0]
 8009b5c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009b60:	601a      	str	r2, [r3, #0]
  }

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 8009b62:	68fb      	ldr	r3, [r7, #12]
 8009b64:	2200      	movs	r2, #0
 8009b66:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  return HAL_OK;
 8009b6a:	2300      	movs	r3, #0
}
 8009b6c:	4618      	mov	r0, r3
 8009b6e:	3710      	adds	r7, #16
 8009b70:	46bd      	mov	sp, r7
 8009b72:	bd80      	pop	{r7, pc}
 8009b74:	08009fcb 	.word	0x08009fcb
 8009b78:	08009f85 	.word	0x08009f85
 8009b7c:	08009fe7 	.word	0x08009fe7
 8009b80:	ffff0000 	.word	0xffff0000

08009b84 <HAL_SPI_IRQHandler>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8009b84:	b580      	push	{r7, lr}
 8009b86:	b08a      	sub	sp, #40	; 0x28
 8009b88:	af00      	add	r7, sp, #0
 8009b8a:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->IER;
 8009b8c:	687b      	ldr	r3, [r7, #4]
 8009b8e:	681b      	ldr	r3, [r3, #0]
 8009b90:	691b      	ldr	r3, [r3, #16]
 8009b92:	623b      	str	r3, [r7, #32]
  uint32_t itflag   = hspi->Instance->SR;
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	681b      	ldr	r3, [r3, #0]
 8009b98:	695b      	ldr	r3, [r3, #20]
 8009b9a:	61fb      	str	r3, [r7, #28]
  uint32_t trigger  = itsource & itflag;
 8009b9c:	6a3a      	ldr	r2, [r7, #32]
 8009b9e:	69fb      	ldr	r3, [r7, #28]
 8009ba0:	4013      	ands	r3, r2
 8009ba2:	61bb      	str	r3, [r7, #24]
  uint32_t cfg1     = hspi->Instance->CFG1;
 8009ba4:	687b      	ldr	r3, [r7, #4]
 8009ba6:	681b      	ldr	r3, [r3, #0]
 8009ba8:	689b      	ldr	r3, [r3, #8]
 8009baa:	617b      	str	r3, [r7, #20]
  uint32_t handled  = 0UL;
 8009bac:	2300      	movs	r3, #0
 8009bae:	627b      	str	r3, [r7, #36]	; 0x24

  HAL_SPI_StateTypeDef State = hspi->State;
 8009bb0:	687b      	ldr	r3, [r7, #4]
 8009bb2:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8009bb6:	74fb      	strb	r3, [r7, #19]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 8009bb8:	687b      	ldr	r3, [r7, #4]
 8009bba:	681b      	ldr	r3, [r3, #0]
 8009bbc:	3330      	adds	r3, #48	; 0x30
 8009bbe:	60fb      	str	r3, [r7, #12]
#endif /* __GNUC__ */

  /* SPI in SUSPEND mode  ----------------------------------------------------*/
  if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
 8009bc0:	69fb      	ldr	r3, [r7, #28]
 8009bc2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009bc6:	2b00      	cmp	r3, #0
 8009bc8:	d010      	beq.n	8009bec <HAL_SPI_IRQHandler+0x68>
 8009bca:	6a3b      	ldr	r3, [r7, #32]
 8009bcc:	f003 0308 	and.w	r3, r3, #8
 8009bd0:	2b00      	cmp	r3, #0
 8009bd2:	d00b      	beq.n	8009bec <HAL_SPI_IRQHandler+0x68>
  {
    /* Clear the Suspend flag */
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 8009bd4:	687b      	ldr	r3, [r7, #4]
 8009bd6:	681b      	ldr	r3, [r3, #0]
 8009bd8:	699a      	ldr	r2, [r3, #24]
 8009bda:	687b      	ldr	r3, [r7, #4]
 8009bdc:	681b      	ldr	r3, [r3, #0]
 8009bde:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009be2:	619a      	str	r2, [r3, #24]

    /* Suspend on going, Call the Suspend callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->SuspendCallback(hspi);
#else
    HAL_SPI_SuspendCallback(hspi);
 8009be4:	6878      	ldr	r0, [r7, #4]
 8009be6:	f000 f9c3 	bl	8009f70 <HAL_SPI_SuspendCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
    return;
 8009bea:	e192      	b.n	8009f12 <HAL_SPI_IRQHandler+0x38e>
  }

  /* SPI in mode Transmitter and Receiver ------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 8009bec:	69bb      	ldr	r3, [r7, #24]
 8009bee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009bf2:	2b00      	cmp	r3, #0
 8009bf4:	d113      	bne.n	8009c1e <HAL_SPI_IRQHandler+0x9a>
 8009bf6:	69bb      	ldr	r3, [r7, #24]
 8009bf8:	f003 0320 	and.w	r3, r3, #32
 8009bfc:	2b00      	cmp	r3, #0
 8009bfe:	d10e      	bne.n	8009c1e <HAL_SPI_IRQHandler+0x9a>
      HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
 8009c00:	69bb      	ldr	r3, [r7, #24]
 8009c02:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 8009c06:	2b00      	cmp	r3, #0
 8009c08:	d009      	beq.n	8009c1e <HAL_SPI_IRQHandler+0x9a>
  {
    hspi->TxISR(hspi);
 8009c0a:	687b      	ldr	r3, [r7, #4]
 8009c0c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009c0e:	6878      	ldr	r0, [r7, #4]
 8009c10:	4798      	blx	r3
    hspi->RxISR(hspi);
 8009c12:	687b      	ldr	r3, [r7, #4]
 8009c14:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009c16:	6878      	ldr	r0, [r7, #4]
 8009c18:	4798      	blx	r3
    handled = 1UL;
 8009c1a:	2301      	movs	r3, #1
 8009c1c:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Receiver ----------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 8009c1e:	69bb      	ldr	r3, [r7, #24]
 8009c20:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009c24:	2b00      	cmp	r3, #0
 8009c26:	d10f      	bne.n	8009c48 <HAL_SPI_IRQHandler+0xc4>
 8009c28:	69bb      	ldr	r3, [r7, #24]
 8009c2a:	f003 0301 	and.w	r3, r3, #1
 8009c2e:	2b00      	cmp	r3, #0
 8009c30:	d00a      	beq.n	8009c48 <HAL_SPI_IRQHandler+0xc4>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 8009c32:	69bb      	ldr	r3, [r7, #24]
 8009c34:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 8009c38:	2b00      	cmp	r3, #0
 8009c3a:	d105      	bne.n	8009c48 <HAL_SPI_IRQHandler+0xc4>
  {
    hspi->RxISR(hspi);
 8009c3c:	687b      	ldr	r3, [r7, #4]
 8009c3e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009c40:	6878      	ldr	r0, [r7, #4]
 8009c42:	4798      	blx	r3
    handled = 1UL;
 8009c44:	2301      	movs	r3, #1
 8009c46:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 8009c48:	69bb      	ldr	r3, [r7, #24]
 8009c4a:	f003 0320 	and.w	r3, r3, #32
 8009c4e:	2b00      	cmp	r3, #0
 8009c50:	d10f      	bne.n	8009c72 <HAL_SPI_IRQHandler+0xee>
 8009c52:	69bb      	ldr	r3, [r7, #24]
 8009c54:	f003 0302 	and.w	r3, r3, #2
 8009c58:	2b00      	cmp	r3, #0
 8009c5a:	d00a      	beq.n	8009c72 <HAL_SPI_IRQHandler+0xee>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 8009c5c:	69bb      	ldr	r3, [r7, #24]
 8009c5e:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 8009c62:	2b00      	cmp	r3, #0
 8009c64:	d105      	bne.n	8009c72 <HAL_SPI_IRQHandler+0xee>
  {
    hspi->TxISR(hspi);
 8009c66:	687b      	ldr	r3, [r7, #4]
 8009c68:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009c6a:	6878      	ldr	r0, [r7, #4]
 8009c6c:	4798      	blx	r3
    handled = 1UL;
 8009c6e:	2301      	movs	r3, #1
 8009c70:	627b      	str	r3, [r7, #36]	; 0x24
  {
    __HAL_SPI_CLEAR_TSERFFLAG(hspi);
  }
#endif /* USE_SPI_RELOAD_TRANSFER */

  if (handled != 0UL)
 8009c72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c74:	2b00      	cmp	r3, #0
 8009c76:	f040 8147 	bne.w	8009f08 <HAL_SPI_IRQHandler+0x384>
  {
    return;
  }

  /* SPI End Of Transfer: DMA or IT based transfer */
  if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
 8009c7a:	69bb      	ldr	r3, [r7, #24]
 8009c7c:	f003 0308 	and.w	r3, r3, #8
 8009c80:	2b00      	cmp	r3, #0
 8009c82:	f000 808b 	beq.w	8009d9c <HAL_SPI_IRQHandler+0x218>
  {
    /* Clear EOT/TXTF/SUSP flag */
    __HAL_SPI_CLEAR_EOTFLAG(hspi);
 8009c86:	687b      	ldr	r3, [r7, #4]
 8009c88:	681b      	ldr	r3, [r3, #0]
 8009c8a:	699a      	ldr	r2, [r3, #24]
 8009c8c:	687b      	ldr	r3, [r7, #4]
 8009c8e:	681b      	ldr	r3, [r3, #0]
 8009c90:	f042 0208 	orr.w	r2, r2, #8
 8009c94:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 8009c96:	687b      	ldr	r3, [r7, #4]
 8009c98:	681b      	ldr	r3, [r3, #0]
 8009c9a:	699a      	ldr	r2, [r3, #24]
 8009c9c:	687b      	ldr	r3, [r7, #4]
 8009c9e:	681b      	ldr	r3, [r3, #0]
 8009ca0:	f042 0210 	orr.w	r2, r2, #16
 8009ca4:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 8009ca6:	687b      	ldr	r3, [r7, #4]
 8009ca8:	681b      	ldr	r3, [r3, #0]
 8009caa:	699a      	ldr	r2, [r3, #24]
 8009cac:	687b      	ldr	r3, [r7, #4]
 8009cae:	681b      	ldr	r3, [r3, #0]
 8009cb0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009cb4:	619a      	str	r2, [r3, #24]

    /* Disable EOT interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
 8009cb6:	687b      	ldr	r3, [r7, #4]
 8009cb8:	681b      	ldr	r3, [r3, #0]
 8009cba:	691a      	ldr	r2, [r3, #16]
 8009cbc:	687b      	ldr	r3, [r7, #4]
 8009cbe:	681b      	ldr	r3, [r3, #0]
 8009cc0:	f022 0208 	bic.w	r2, r2, #8
 8009cc4:	611a      	str	r2, [r3, #16]

    /* For the IT based receive extra polling maybe required for last packet */
    if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 8009cc6:	687b      	ldr	r3, [r7, #4]
 8009cc8:	681b      	ldr	r3, [r3, #0]
 8009cca:	689b      	ldr	r3, [r3, #8]
 8009ccc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8009cd0:	2b00      	cmp	r3, #0
 8009cd2:	d13d      	bne.n	8009d50 <HAL_SPI_IRQHandler+0x1cc>
    {
      /* Pooling remaining data */
      while (hspi->RxXferCount != 0UL)
 8009cd4:	e036      	b.n	8009d44 <HAL_SPI_IRQHandler+0x1c0>
      {
        /* Receive data in 32 Bit mode */
        if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 8009cd6:	687b      	ldr	r3, [r7, #4]
 8009cd8:	68db      	ldr	r3, [r3, #12]
 8009cda:	2b0f      	cmp	r3, #15
 8009cdc:	d90b      	bls.n	8009cf6 <HAL_SPI_IRQHandler+0x172>
        {
          *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 8009cde:	687b      	ldr	r3, [r7, #4]
 8009ce0:	681a      	ldr	r2, [r3, #0]
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009ce6:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8009ce8:	601a      	str	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint32_t);
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009cee:	1d1a      	adds	r2, r3, #4
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	665a      	str	r2, [r3, #100]	; 0x64
 8009cf4:	e01d      	b.n	8009d32 <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 16 Bit mode */
        else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8009cf6:	687b      	ldr	r3, [r7, #4]
 8009cf8:	68db      	ldr	r3, [r3, #12]
 8009cfa:	2b07      	cmp	r3, #7
 8009cfc:	d90b      	bls.n	8009d16 <HAL_SPI_IRQHandler+0x192>
        {
#if defined (__GNUC__)
          *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 8009cfe:	687b      	ldr	r3, [r7, #4]
 8009d00:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009d02:	68fa      	ldr	r2, [r7, #12]
 8009d04:	8812      	ldrh	r2, [r2, #0]
 8009d06:	b292      	uxth	r2, r2
 8009d08:	801a      	strh	r2, [r3, #0]
#else
          *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
          hspi->pRxBuffPtr += sizeof(uint16_t);
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009d0e:	1c9a      	adds	r2, r3, #2
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	665a      	str	r2, [r3, #100]	; 0x64
 8009d14:	e00d      	b.n	8009d32 <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 8 Bit mode */
        else
        {
          *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 8009d16:	687b      	ldr	r3, [r7, #4]
 8009d18:	681b      	ldr	r3, [r3, #0]
 8009d1a:	f103 0230 	add.w	r2, r3, #48	; 0x30
 8009d1e:	687b      	ldr	r3, [r7, #4]
 8009d20:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009d22:	7812      	ldrb	r2, [r2, #0]
 8009d24:	b2d2      	uxtb	r2, r2
 8009d26:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint8_t);
 8009d28:	687b      	ldr	r3, [r7, #4]
 8009d2a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009d2c:	1c5a      	adds	r2, r3, #1
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	665a      	str	r2, [r3, #100]	; 0x64
        }

        hspi->RxXferCount--;
 8009d32:	687b      	ldr	r3, [r7, #4]
 8009d34:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 8009d38:	b29b      	uxth	r3, r3
 8009d3a:	3b01      	subs	r3, #1
 8009d3c:	b29a      	uxth	r2, r3
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
      while (hspi->RxXferCount != 0UL)
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 8009d4a:	b29b      	uxth	r3, r3
 8009d4c:	2b00      	cmp	r3, #0
 8009d4e:	d1c2      	bne.n	8009cd6 <HAL_SPI_IRQHandler+0x152>
      }
    }

    /* Call SPI Standard close procedure */
    SPI_CloseTransfer(hspi);
 8009d50:	6878      	ldr	r0, [r7, #4]
 8009d52:	f000 f985 	bl	800a060 <SPI_CloseTransfer>

    hspi->State = HAL_SPI_STATE_READY;
 8009d56:	687b      	ldr	r3, [r7, #4]
 8009d58:	2201      	movs	r2, #1
 8009d5a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009d5e:	687b      	ldr	r3, [r7, #4]
 8009d60:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009d64:	2b00      	cmp	r3, #0
 8009d66:	d003      	beq.n	8009d70 <HAL_SPI_IRQHandler+0x1ec>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8009d68:	6878      	ldr	r0, [r7, #4]
 8009d6a:	f000 f8f7 	bl	8009f5c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8009d6e:	e0d0      	b.n	8009f12 <HAL_SPI_IRQHandler+0x38e>
    {
      hspi->TxCpltCallback(hspi);
    }
#else
    /* Call appropriate user callback */
    if (State == HAL_SPI_STATE_BUSY_TX_RX)
 8009d70:	7cfb      	ldrb	r3, [r7, #19]
 8009d72:	2b05      	cmp	r3, #5
 8009d74:	d103      	bne.n	8009d7e <HAL_SPI_IRQHandler+0x1fa>
    {
      HAL_SPI_TxRxCpltCallback(hspi);
 8009d76:	6878      	ldr	r0, [r7, #4]
 8009d78:	f000 f8dc 	bl	8009f34 <HAL_SPI_TxRxCpltCallback>
    else
    {
      /* End of the appropriate call */
    }

    return;
 8009d7c:	e0c6      	b.n	8009f0c <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_RX)
 8009d7e:	7cfb      	ldrb	r3, [r7, #19]
 8009d80:	2b04      	cmp	r3, #4
 8009d82:	d103      	bne.n	8009d8c <HAL_SPI_IRQHandler+0x208>
      HAL_SPI_RxCpltCallback(hspi);
 8009d84:	6878      	ldr	r0, [r7, #4]
 8009d86:	f000 f8cb 	bl	8009f20 <HAL_SPI_RxCpltCallback>
    return;
 8009d8a:	e0bf      	b.n	8009f0c <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_TX)
 8009d8c:	7cfb      	ldrb	r3, [r7, #19]
 8009d8e:	2b03      	cmp	r3, #3
 8009d90:	f040 80bc 	bne.w	8009f0c <HAL_SPI_IRQHandler+0x388>
      HAL_SPI_TxCpltCallback(hspi);
 8009d94:	6878      	ldr	r0, [r7, #4]
 8009d96:	f002 fe9d 	bl	800cad4 <HAL_SPI_TxCpltCallback>
    return;
 8009d9a:	e0b7      	b.n	8009f0c <HAL_SPI_IRQHandler+0x388>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
 8009d9c:	69bb      	ldr	r3, [r7, #24]
 8009d9e:	f403 7358 	and.w	r3, r3, #864	; 0x360
 8009da2:	2b00      	cmp	r3, #0
 8009da4:	f000 80b5 	beq.w	8009f12 <HAL_SPI_IRQHandler+0x38e>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if ((trigger & SPI_FLAG_OVR) != 0UL)
 8009da8:	69bb      	ldr	r3, [r7, #24]
 8009daa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009dae:	2b00      	cmp	r3, #0
 8009db0:	d00f      	beq.n	8009dd2 <HAL_SPI_IRQHandler+0x24e>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8009db2:	687b      	ldr	r3, [r7, #4]
 8009db4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009db8:	f043 0204 	orr.w	r2, r3, #4
 8009dbc:	687b      	ldr	r3, [r7, #4]
 8009dbe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8009dc2:	687b      	ldr	r3, [r7, #4]
 8009dc4:	681b      	ldr	r3, [r3, #0]
 8009dc6:	699a      	ldr	r2, [r3, #24]
 8009dc8:	687b      	ldr	r3, [r7, #4]
 8009dca:	681b      	ldr	r3, [r3, #0]
 8009dcc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009dd0:	619a      	str	r2, [r3, #24]
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if ((trigger & SPI_FLAG_MODF) != 0UL)
 8009dd2:	69bb      	ldr	r3, [r7, #24]
 8009dd4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8009dd8:	2b00      	cmp	r3, #0
 8009dda:	d00f      	beq.n	8009dfc <HAL_SPI_IRQHandler+0x278>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009de2:	f043 0201 	orr.w	r2, r3, #1
 8009de6:	687b      	ldr	r3, [r7, #4]
 8009de8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	681b      	ldr	r3, [r3, #0]
 8009df0:	699a      	ldr	r2, [r3, #24]
 8009df2:	687b      	ldr	r3, [r7, #4]
 8009df4:	681b      	ldr	r3, [r3, #0]
 8009df6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009dfa:	619a      	str	r2, [r3, #24]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_FRE) != 0UL)
 8009dfc:	69bb      	ldr	r3, [r7, #24]
 8009dfe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009e02:	2b00      	cmp	r3, #0
 8009e04:	d00f      	beq.n	8009e26 <HAL_SPI_IRQHandler+0x2a2>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8009e06:	687b      	ldr	r3, [r7, #4]
 8009e08:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009e0c:	f043 0208 	orr.w	r2, r3, #8
 8009e10:	687b      	ldr	r3, [r7, #4]
 8009e12:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8009e16:	687b      	ldr	r3, [r7, #4]
 8009e18:	681b      	ldr	r3, [r3, #0]
 8009e1a:	699a      	ldr	r2, [r3, #24]
 8009e1c:	687b      	ldr	r3, [r7, #4]
 8009e1e:	681b      	ldr	r3, [r3, #0]
 8009e20:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009e24:	619a      	str	r2, [r3, #24]
    }

    /* SPI Underrun error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_UDR) != 0UL)
 8009e26:	69bb      	ldr	r3, [r7, #24]
 8009e28:	f003 0320 	and.w	r3, r3, #32
 8009e2c:	2b00      	cmp	r3, #0
 8009e2e:	d00f      	beq.n	8009e50 <HAL_SPI_IRQHandler+0x2cc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009e36:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	681b      	ldr	r3, [r3, #0]
 8009e44:	699a      	ldr	r2, [r3, #24]
 8009e46:	687b      	ldr	r3, [r7, #4]
 8009e48:	681b      	ldr	r3, [r3, #0]
 8009e4a:	f042 0220 	orr.w	r2, r2, #32
 8009e4e:	619a      	str	r2, [r3, #24]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009e50:	687b      	ldr	r3, [r7, #4]
 8009e52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009e56:	2b00      	cmp	r3, #0
 8009e58:	d05a      	beq.n	8009f10 <HAL_SPI_IRQHandler+0x38c>
    {
      /* Disable SPI peripheral */
      __HAL_SPI_DISABLE(hspi);
 8009e5a:	687b      	ldr	r3, [r7, #4]
 8009e5c:	681b      	ldr	r3, [r3, #0]
 8009e5e:	681a      	ldr	r2, [r3, #0]
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	681b      	ldr	r3, [r3, #0]
 8009e64:	f022 0201 	bic.w	r2, r2, #1
 8009e68:	601a      	str	r2, [r3, #0]

      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF |
 8009e6a:	687b      	ldr	r3, [r7, #4]
 8009e6c:	681b      	ldr	r3, [r3, #0]
 8009e6e:	6919      	ldr	r1, [r3, #16]
 8009e70:	687b      	ldr	r3, [r7, #4]
 8009e72:	681a      	ldr	r2, [r3, #0]
 8009e74:	4b28      	ldr	r3, [pc, #160]	; (8009f18 <HAL_SPI_IRQHandler+0x394>)
 8009e76:	400b      	ands	r3, r1
 8009e78:	6113      	str	r3, [r2, #16]
                                  SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));

      /* Disable the SPI DMA requests if enabled */
      if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 8009e7a:	697b      	ldr	r3, [r7, #20]
 8009e7c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8009e80:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8009e84:	d138      	bne.n	8009ef8 <HAL_SPI_IRQHandler+0x374>
      {
        /* Disable the SPI DMA requests */
        CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 8009e86:	687b      	ldr	r3, [r7, #4]
 8009e88:	681b      	ldr	r3, [r3, #0]
 8009e8a:	689a      	ldr	r2, [r3, #8]
 8009e8c:	687b      	ldr	r3, [r7, #4]
 8009e8e:	681b      	ldr	r3, [r3, #0]
 8009e90:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8009e94:	609a      	str	r2, [r3, #8]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8009e96:	687b      	ldr	r3, [r7, #4]
 8009e98:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009e9a:	2b00      	cmp	r3, #0
 8009e9c:	d013      	beq.n	8009ec6 <HAL_SPI_IRQHandler+0x342>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8009e9e:	687b      	ldr	r3, [r7, #4]
 8009ea0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009ea2:	4a1e      	ldr	r2, [pc, #120]	; (8009f1c <HAL_SPI_IRQHandler+0x398>)
 8009ea4:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8009ea6:	687b      	ldr	r3, [r7, #4]
 8009ea8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009eaa:	4618      	mov	r0, r3
 8009eac:	f7f9 ff80 	bl	8003db0 <HAL_DMA_Abort_IT>
 8009eb0:	4603      	mov	r3, r0
 8009eb2:	2b00      	cmp	r3, #0
 8009eb4:	d007      	beq.n	8009ec6 <HAL_SPI_IRQHandler+0x342>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8009eb6:	687b      	ldr	r3, [r7, #4]
 8009eb8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009ebc:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8009ec6:	687b      	ldr	r3, [r7, #4]
 8009ec8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009eca:	2b00      	cmp	r3, #0
 8009ecc:	d020      	beq.n	8009f10 <HAL_SPI_IRQHandler+0x38c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8009ece:	687b      	ldr	r3, [r7, #4]
 8009ed0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009ed2:	4a12      	ldr	r2, [pc, #72]	; (8009f1c <HAL_SPI_IRQHandler+0x398>)
 8009ed4:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8009ed6:	687b      	ldr	r3, [r7, #4]
 8009ed8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009eda:	4618      	mov	r0, r3
 8009edc:	f7f9 ff68 	bl	8003db0 <HAL_DMA_Abort_IT>
 8009ee0:	4603      	mov	r3, r0
 8009ee2:	2b00      	cmp	r3, #0
 8009ee4:	d014      	beq.n	8009f10 <HAL_SPI_IRQHandler+0x38c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8009ee6:	687b      	ldr	r3, [r7, #4]
 8009ee8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009eec:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8009ef0:	687b      	ldr	r3, [r7, #4]
 8009ef2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
        HAL_SPI_ErrorCallback(hspi);
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8009ef6:	e00b      	b.n	8009f10 <HAL_SPI_IRQHandler+0x38c>
        hspi->State = HAL_SPI_STATE_READY;
 8009ef8:	687b      	ldr	r3, [r7, #4]
 8009efa:	2201      	movs	r2, #1
 8009efc:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
        HAL_SPI_ErrorCallback(hspi);
 8009f00:	6878      	ldr	r0, [r7, #4]
 8009f02:	f000 f82b 	bl	8009f5c <HAL_SPI_ErrorCallback>
    return;
 8009f06:	e003      	b.n	8009f10 <HAL_SPI_IRQHandler+0x38c>
    return;
 8009f08:	bf00      	nop
 8009f0a:	e002      	b.n	8009f12 <HAL_SPI_IRQHandler+0x38e>
    return;
 8009f0c:	bf00      	nop
 8009f0e:	e000      	b.n	8009f12 <HAL_SPI_IRQHandler+0x38e>
    return;
 8009f10:	bf00      	nop
  }
}
 8009f12:	3728      	adds	r7, #40	; 0x28
 8009f14:	46bd      	mov	sp, r7
 8009f16:	bd80      	pop	{r7, pc}
 8009f18:	fffffc94 	.word	0xfffffc94
 8009f1c:	0800a02d 	.word	0x0800a02d

08009f20 <HAL_SPI_RxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8009f20:	b480      	push	{r7}
 8009f22:	b083      	sub	sp, #12
 8009f24:	af00      	add	r7, sp, #0
 8009f26:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 8009f28:	bf00      	nop
 8009f2a:	370c      	adds	r7, #12
 8009f2c:	46bd      	mov	sp, r7
 8009f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f32:	4770      	bx	lr

08009f34 <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8009f34:	b480      	push	{r7}
 8009f36:	b083      	sub	sp, #12
 8009f38:	af00      	add	r7, sp, #0
 8009f3a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 8009f3c:	bf00      	nop
 8009f3e:	370c      	adds	r7, #12
 8009f40:	46bd      	mov	sp, r7
 8009f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f46:	4770      	bx	lr

08009f48 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8009f48:	b480      	push	{r7}
 8009f4a:	b083      	sub	sp, #12
 8009f4c:	af00      	add	r7, sp, #0
 8009f4e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8009f50:	bf00      	nop
 8009f52:	370c      	adds	r7, #12
 8009f54:	46bd      	mov	sp, r7
 8009f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f5a:	4770      	bx	lr

08009f5c <HAL_SPI_ErrorCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8009f5c:	b480      	push	{r7}
 8009f5e:	b083      	sub	sp, #12
 8009f60:	af00      	add	r7, sp, #0
 8009f62:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 8009f64:	bf00      	nop
 8009f66:	370c      	adds	r7, #12
 8009f68:	46bd      	mov	sp, r7
 8009f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f6e:	4770      	bx	lr

08009f70 <HAL_SPI_SuspendCallback>:
  * @brief  SPI Suspend callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_SuspendCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8009f70:	b480      	push	{r7}
 8009f72:	b083      	sub	sp, #12
 8009f74:	af00      	add	r7, sp, #0
 8009f76:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_SuspendCallback can be implemented in the user file.
   */
}
 8009f78:	bf00      	nop
 8009f7a:	370c      	adds	r7, #12
 8009f7c:	46bd      	mov	sp, r7
 8009f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f82:	4770      	bx	lr

08009f84 <SPI_DMATransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8009f84:	b580      	push	{r7, lr}
 8009f86:	b084      	sub	sp, #16
 8009f88:	af00      	add	r7, sp, #0
 8009f8a:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8009f8c:	687b      	ldr	r3, [r7, #4]
 8009f8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f90:	60fb      	str	r3, [r7, #12]

  if (hspi->State != HAL_SPI_STATE_ABORT)
 8009f92:	68fb      	ldr	r3, [r7, #12]
 8009f94:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8009f98:	b2db      	uxtb	r3, r3
 8009f9a:	2b07      	cmp	r3, #7
 8009f9c:	d011      	beq.n	8009fc2 <SPI_DMATransmitCplt+0x3e>
  {
    if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 8009f9e:	68fb      	ldr	r3, [r7, #12]
 8009fa0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009fa2:	69db      	ldr	r3, [r3, #28]
 8009fa4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009fa8:	d103      	bne.n	8009fb2 <SPI_DMATransmitCplt+0x2e>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->TxCpltCallback(hspi);
#else
      HAL_SPI_TxCpltCallback(hspi);
 8009faa:	68f8      	ldr	r0, [r7, #12]
 8009fac:	f002 fd92 	bl	800cad4 <HAL_SPI_TxCpltCallback>
    {
      /* Enable EOT interrupt */
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
    }
  }
}
 8009fb0:	e007      	b.n	8009fc2 <SPI_DMATransmitCplt+0x3e>
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
 8009fb2:	68fb      	ldr	r3, [r7, #12]
 8009fb4:	681b      	ldr	r3, [r3, #0]
 8009fb6:	691a      	ldr	r2, [r3, #16]
 8009fb8:	68fb      	ldr	r3, [r7, #12]
 8009fba:	681b      	ldr	r3, [r3, #0]
 8009fbc:	f042 0208 	orr.w	r2, r2, #8
 8009fc0:	611a      	str	r2, [r3, #16]
}
 8009fc2:	bf00      	nop
 8009fc4:	3710      	adds	r7, #16
 8009fc6:	46bd      	mov	sp, r7
 8009fc8:	bd80      	pop	{r7, pc}

08009fca <SPI_DMAHalfTransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma) /* Derogation MISRAC2012-Rule-8.13 */
{
 8009fca:	b580      	push	{r7, lr}
 8009fcc:	b084      	sub	sp, #16
 8009fce:	af00      	add	r7, sp, #0
 8009fd0:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009fd6:	60fb      	str	r3, [r7, #12]
                            ((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-8.13 */

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8009fd8:	68f8      	ldr	r0, [r7, #12]
 8009fda:	f7ff ffb5 	bl	8009f48 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8009fde:	bf00      	nop
 8009fe0:	3710      	adds	r7, #16
 8009fe2:	46bd      	mov	sp, r7
 8009fe4:	bd80      	pop	{r7, pc}

08009fe6 <SPI_DMAError>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8009fe6:	b580      	push	{r7, lr}
 8009fe8:	b084      	sub	sp, #16
 8009fea:	af00      	add	r7, sp, #0
 8009fec:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ff2:	60fb      	str	r3, [r7, #12]

  /* if DMA error is FIFO error ignore it */
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
 8009ff4:	6878      	ldr	r0, [r7, #4]
 8009ff6:	f7fb f84b 	bl	8005090 <HAL_DMA_GetError>
 8009ffa:	4603      	mov	r3, r0
 8009ffc:	2b02      	cmp	r3, #2
 8009ffe:	d011      	beq.n	800a024 <SPI_DMAError+0x3e>
  {
    /* Call SPI standard close procedure */
    SPI_CloseTransfer(hspi);
 800a000:	68f8      	ldr	r0, [r7, #12]
 800a002:	f000 f82d 	bl	800a060 <SPI_CloseTransfer>

    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800a006:	68fb      	ldr	r3, [r7, #12]
 800a008:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a00c:	f043 0210 	orr.w	r2, r3, #16
 800a010:	68fb      	ldr	r3, [r7, #12]
 800a012:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 800a016:	68fb      	ldr	r3, [r7, #12]
 800a018:	2201      	movs	r2, #1
 800a01a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->ErrorCallback(hspi);
#else
    HAL_SPI_ErrorCallback(hspi);
 800a01e:	68f8      	ldr	r0, [r7, #12]
 800a020:	f7ff ff9c 	bl	8009f5c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }
}
 800a024:	bf00      	nop
 800a026:	3710      	adds	r7, #16
 800a028:	46bd      	mov	sp, r7
 800a02a:	bd80      	pop	{r7, pc}

0800a02c <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800a02c:	b580      	push	{r7, lr}
 800a02e:	b084      	sub	sp, #16
 800a030:	af00      	add	r7, sp, #0
 800a032:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800a034:	687b      	ldr	r3, [r7, #4]
 800a036:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a038:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = (uint16_t) 0UL;
 800a03a:	68fb      	ldr	r3, [r7, #12]
 800a03c:	2200      	movs	r2, #0
 800a03e:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxXferCount = (uint16_t) 0UL;
 800a042:	68fb      	ldr	r3, [r7, #12]
 800a044:	2200      	movs	r2, #0
 800a046:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Restore hspi->State to Ready */
  hspi->State = HAL_SPI_STATE_READY;
 800a04a:	68fb      	ldr	r3, [r7, #12]
 800a04c:	2201      	movs	r2, #1
 800a04e:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 800a052:	68f8      	ldr	r0, [r7, #12]
 800a054:	f7ff ff82 	bl	8009f5c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800a058:	bf00      	nop
 800a05a:	3710      	adds	r7, #16
 800a05c:	46bd      	mov	sp, r7
 800a05e:	bd80      	pop	{r7, pc}

0800a060 <SPI_CloseTransfer>:
  *               the configuration information for SPI module.
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
 800a060:	b480      	push	{r7}
 800a062:	b085      	sub	sp, #20
 800a064:	af00      	add	r7, sp, #0
 800a066:	6078      	str	r0, [r7, #4]
  uint32_t itflag = hspi->Instance->SR;
 800a068:	687b      	ldr	r3, [r7, #4]
 800a06a:	681b      	ldr	r3, [r3, #0]
 800a06c:	695b      	ldr	r3, [r3, #20]
 800a06e:	60fb      	str	r3, [r7, #12]

  __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800a070:	687b      	ldr	r3, [r7, #4]
 800a072:	681b      	ldr	r3, [r3, #0]
 800a074:	699a      	ldr	r2, [r3, #24]
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	681b      	ldr	r3, [r3, #0]
 800a07a:	f042 0208 	orr.w	r2, r2, #8
 800a07e:	619a      	str	r2, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800a080:	687b      	ldr	r3, [r7, #4]
 800a082:	681b      	ldr	r3, [r3, #0]
 800a084:	699a      	ldr	r2, [r3, #24]
 800a086:	687b      	ldr	r3, [r7, #4]
 800a088:	681b      	ldr	r3, [r3, #0]
 800a08a:	f042 0210 	orr.w	r2, r2, #16
 800a08e:	619a      	str	r2, [r3, #24]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800a090:	687b      	ldr	r3, [r7, #4]
 800a092:	681b      	ldr	r3, [r3, #0]
 800a094:	681a      	ldr	r2, [r3, #0]
 800a096:	687b      	ldr	r3, [r7, #4]
 800a098:	681b      	ldr	r3, [r3, #0]
 800a09a:	f022 0201 	bic.w	r2, r2, #1
 800a09e:	601a      	str	r2, [r3, #0]

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
 800a0a0:	687b      	ldr	r3, [r7, #4]
 800a0a2:	681b      	ldr	r3, [r3, #0]
 800a0a4:	6919      	ldr	r1, [r3, #16]
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	681a      	ldr	r2, [r3, #0]
 800a0aa:	4b3c      	ldr	r3, [pc, #240]	; (800a19c <SPI_CloseTransfer+0x13c>)
 800a0ac:	400b      	ands	r3, r1
 800a0ae:	6113      	str	r3, [r2, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800a0b0:	687b      	ldr	r3, [r7, #4]
 800a0b2:	681b      	ldr	r3, [r3, #0]
 800a0b4:	689a      	ldr	r2, [r3, #8]
 800a0b6:	687b      	ldr	r3, [r7, #4]
 800a0b8:	681b      	ldr	r3, [r3, #0]
 800a0ba:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800a0be:	609a      	str	r2, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800a0c0:	687b      	ldr	r3, [r7, #4]
 800a0c2:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800a0c6:	b2db      	uxtb	r3, r3
 800a0c8:	2b04      	cmp	r3, #4
 800a0ca:	d014      	beq.n	800a0f6 <SPI_CloseTransfer+0x96>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
 800a0cc:	68fb      	ldr	r3, [r7, #12]
 800a0ce:	f003 0320 	and.w	r3, r3, #32
 800a0d2:	2b00      	cmp	r3, #0
 800a0d4:	d00f      	beq.n	800a0f6 <SPI_CloseTransfer+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a0dc:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800a0e0:	687b      	ldr	r3, [r7, #4]
 800a0e2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800a0e6:	687b      	ldr	r3, [r7, #4]
 800a0e8:	681b      	ldr	r3, [r3, #0]
 800a0ea:	699a      	ldr	r2, [r3, #24]
 800a0ec:	687b      	ldr	r3, [r7, #4]
 800a0ee:	681b      	ldr	r3, [r3, #0]
 800a0f0:	f042 0220 	orr.w	r2, r2, #32
 800a0f4:	619a      	str	r2, [r3, #24]
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800a0fc:	b2db      	uxtb	r3, r3
 800a0fe:	2b03      	cmp	r3, #3
 800a100:	d014      	beq.n	800a12c <SPI_CloseTransfer+0xcc>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
 800a102:	68fb      	ldr	r3, [r7, #12]
 800a104:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a108:	2b00      	cmp	r3, #0
 800a10a:	d00f      	beq.n	800a12c <SPI_CloseTransfer+0xcc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a112:	f043 0204 	orr.w	r2, r3, #4
 800a116:	687b      	ldr	r3, [r7, #4]
 800a118:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800a11c:	687b      	ldr	r3, [r7, #4]
 800a11e:	681b      	ldr	r3, [r3, #0]
 800a120:	699a      	ldr	r2, [r3, #24]
 800a122:	687b      	ldr	r3, [r7, #4]
 800a124:	681b      	ldr	r3, [r3, #0]
 800a126:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a12a:	619a      	str	r2, [r3, #24]
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
 800a12c:	68fb      	ldr	r3, [r7, #12]
 800a12e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800a132:	2b00      	cmp	r3, #0
 800a134:	d00f      	beq.n	800a156 <SPI_CloseTransfer+0xf6>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a13c:	f043 0201 	orr.w	r2, r3, #1
 800a140:	687b      	ldr	r3, [r7, #4]
 800a142:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800a146:	687b      	ldr	r3, [r7, #4]
 800a148:	681b      	ldr	r3, [r3, #0]
 800a14a:	699a      	ldr	r2, [r3, #24]
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	681b      	ldr	r3, [r3, #0]
 800a150:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a154:	619a      	str	r2, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
 800a156:	68fb      	ldr	r3, [r7, #12]
 800a158:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a15c:	2b00      	cmp	r3, #0
 800a15e:	d00f      	beq.n	800a180 <SPI_CloseTransfer+0x120>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800a160:	687b      	ldr	r3, [r7, #4]
 800a162:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a166:	f043 0208 	orr.w	r2, r3, #8
 800a16a:	687b      	ldr	r3, [r7, #4]
 800a16c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_FREFLAG(hspi);
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	681b      	ldr	r3, [r3, #0]
 800a174:	699a      	ldr	r2, [r3, #24]
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	681b      	ldr	r3, [r3, #0]
 800a17a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a17e:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
 800a180:	687b      	ldr	r3, [r7, #4]
 800a182:	2200      	movs	r2, #0
 800a184:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  hspi->RxXferCount = (uint16_t)0UL;
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	2200      	movs	r2, #0
 800a18c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
}
 800a190:	bf00      	nop
 800a192:	3714      	adds	r7, #20
 800a194:	46bd      	mov	sp, r7
 800a196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a19a:	4770      	bx	lr
 800a19c:	fffffc90 	.word	0xfffffc90

0800a1a0 <SPI_WaitOnFlagUntilTimeout>:
  * @param Tickstart: Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(const SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 800a1a0:	b580      	push	{r7, lr}
 800a1a2:	b084      	sub	sp, #16
 800a1a4:	af00      	add	r7, sp, #0
 800a1a6:	60f8      	str	r0, [r7, #12]
 800a1a8:	60b9      	str	r1, [r7, #8]
 800a1aa:	603b      	str	r3, [r7, #0]
 800a1ac:	4613      	mov	r3, r2
 800a1ae:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800a1b0:	e010      	b.n	800a1d4 <SPI_WaitOnFlagUntilTimeout+0x34>
  {
    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a1b2:	f7f7 fa95 	bl	80016e0 <HAL_GetTick>
 800a1b6:	4602      	mov	r2, r0
 800a1b8:	69bb      	ldr	r3, [r7, #24]
 800a1ba:	1ad3      	subs	r3, r2, r3
 800a1bc:	683a      	ldr	r2, [r7, #0]
 800a1be:	429a      	cmp	r2, r3
 800a1c0:	d803      	bhi.n	800a1ca <SPI_WaitOnFlagUntilTimeout+0x2a>
 800a1c2:	683b      	ldr	r3, [r7, #0]
 800a1c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a1c8:	d102      	bne.n	800a1d0 <SPI_WaitOnFlagUntilTimeout+0x30>
 800a1ca:	683b      	ldr	r3, [r7, #0]
 800a1cc:	2b00      	cmp	r3, #0
 800a1ce:	d101      	bne.n	800a1d4 <SPI_WaitOnFlagUntilTimeout+0x34>
    {
      return HAL_TIMEOUT;
 800a1d0:	2303      	movs	r3, #3
 800a1d2:	e00f      	b.n	800a1f4 <SPI_WaitOnFlagUntilTimeout+0x54>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800a1d4:	68fb      	ldr	r3, [r7, #12]
 800a1d6:	681b      	ldr	r3, [r3, #0]
 800a1d8:	695a      	ldr	r2, [r3, #20]
 800a1da:	68bb      	ldr	r3, [r7, #8]
 800a1dc:	4013      	ands	r3, r2
 800a1de:	68ba      	ldr	r2, [r7, #8]
 800a1e0:	429a      	cmp	r2, r3
 800a1e2:	bf0c      	ite	eq
 800a1e4:	2301      	moveq	r3, #1
 800a1e6:	2300      	movne	r3, #0
 800a1e8:	b2db      	uxtb	r3, r3
 800a1ea:	461a      	mov	r2, r3
 800a1ec:	79fb      	ldrb	r3, [r7, #7]
 800a1ee:	429a      	cmp	r2, r3
 800a1f0:	d0df      	beq.n	800a1b2 <SPI_WaitOnFlagUntilTimeout+0x12>
    }
  }
  return HAL_OK;
 800a1f2:	2300      	movs	r3, #0
}
 800a1f4:	4618      	mov	r0, r3
 800a1f6:	3710      	adds	r7, #16
 800a1f8:	46bd      	mov	sp, r7
 800a1fa:	bd80      	pop	{r7, pc}

0800a1fc <SPI_GetPacketSize>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(const SPI_HandleTypeDef *hspi)
{
 800a1fc:	b480      	push	{r7}
 800a1fe:	b085      	sub	sp, #20
 800a200:	af00      	add	r7, sp, #0
 800a202:	6078      	str	r0, [r7, #4]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a208:	095b      	lsrs	r3, r3, #5
 800a20a:	3301      	adds	r3, #1
 800a20c:	60fb      	str	r3, [r7, #12]
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	68db      	ldr	r3, [r3, #12]
 800a212:	3301      	adds	r3, #1
 800a214:	60bb      	str	r3, [r7, #8]

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
 800a216:	68bb      	ldr	r3, [r7, #8]
 800a218:	3307      	adds	r3, #7
 800a21a:	08db      	lsrs	r3, r3, #3
 800a21c:	60bb      	str	r3, [r7, #8]

  return data_size * fifo_threashold;
 800a21e:	68bb      	ldr	r3, [r7, #8]
 800a220:	68fa      	ldr	r2, [r7, #12]
 800a222:	fb02 f303 	mul.w	r3, r2, r3
}
 800a226:	4618      	mov	r0, r3
 800a228:	3714      	adds	r7, #20
 800a22a:	46bd      	mov	sp, r7
 800a22c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a230:	4770      	bx	lr

0800a232 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800a232:	b580      	push	{r7, lr}
 800a234:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800a236:	f003 f90b 	bl	800d450 <touchgfx_components_init>
  touchgfx_init();
 800a23a:	f003 f8df 	bl	800d3fc <touchgfx_init>
}
 800a23e:	bf00      	nop
 800a240:	bd80      	pop	{r7, pc}

0800a242 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800a242:	b580      	push	{r7, lr}
 800a244:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800a246:	f003 f90b 	bl	800d460 <touchgfx_taskEntry>
}
 800a24a:	bf00      	nop
 800a24c:	bd80      	pop	{r7, pc}
	...

0800a250 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800a250:	b480      	push	{r7}
 800a252:	b083      	sub	sp, #12
 800a254:	af00      	add	r7, sp, #0
 800a256:	6078      	str	r0, [r7, #4]
    {
 800a258:	4a04      	ldr	r2, [pc, #16]	; (800a26c <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800a25a:	687b      	ldr	r3, [r7, #4]
 800a25c:	601a      	str	r2, [r3, #0]
    }
 800a25e:	687b      	ldr	r3, [r7, #4]
 800a260:	4618      	mov	r0, r3
 800a262:	370c      	adds	r7, #12
 800a264:	46bd      	mov	sp, r7
 800a266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a26a:	4770      	bx	lr
 800a26c:	080239ac 	.word	0x080239ac

0800a270 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800a270:	b580      	push	{r7, lr}
 800a272:	b082      	sub	sp, #8
 800a274:	af00      	add	r7, sp, #0
 800a276:	6078      	str	r0, [r7, #4]
    }
 800a278:	6878      	ldr	r0, [r7, #4]
 800a27a:	f7ff ffe9 	bl	800a250 <_ZN8touchgfx12FontProviderD1Ev>
 800a27e:	2104      	movs	r1, #4
 800a280:	6878      	ldr	r0, [r7, #4]
 800a282:	f017 fb5c 	bl	802193e <_ZdlPvj>
 800a286:	687b      	ldr	r3, [r7, #4]
 800a288:	4618      	mov	r0, r3
 800a28a:	3708      	adds	r7, #8
 800a28c:	46bd      	mov	sp, r7
 800a28e:	bd80      	pop	{r7, pc}

0800a290 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800a290:	b580      	push	{r7, lr}
 800a292:	b082      	sub	sp, #8
 800a294:	af00      	add	r7, sp, #0
 800a296:	6078      	str	r0, [r7, #4]
 800a298:	460b      	mov	r3, r1
 800a29a:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800a29c:	887b      	ldrh	r3, [r7, #2]
 800a29e:	2b02      	cmp	r3, #2
 800a2a0:	d010      	beq.n	800a2c4 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800a2a2:	2b02      	cmp	r3, #2
 800a2a4:	dc13      	bgt.n	800a2ce <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800a2a6:	2b00      	cmp	r3, #0
 800a2a8:	d002      	beq.n	800a2b0 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800a2aa:	2b01      	cmp	r3, #1
 800a2ac:	d005      	beq.n	800a2ba <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800a2ae:	e00e      	b.n	800a2ce <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800a2b0:	f001 ff14 	bl	800c0dc <_ZN17TypedTextDatabase8getFontsEv>
 800a2b4:	4603      	mov	r3, r0
 800a2b6:	681b      	ldr	r3, [r3, #0]
 800a2b8:	e00a      	b.n	800a2d0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800a2ba:	f001 ff0f 	bl	800c0dc <_ZN17TypedTextDatabase8getFontsEv>
 800a2be:	4603      	mov	r3, r0
 800a2c0:	685b      	ldr	r3, [r3, #4]
 800a2c2:	e005      	b.n	800a2d0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800a2c4:	f001 ff0a 	bl	800c0dc <_ZN17TypedTextDatabase8getFontsEv>
 800a2c8:	4603      	mov	r3, r0
 800a2ca:	689b      	ldr	r3, [r3, #8]
 800a2cc:	e000      	b.n	800a2d0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800a2ce:	2300      	movs	r3, #0
    }
}
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	3708      	adds	r7, #8
 800a2d4:	46bd      	mov	sp, r7
 800a2d6:	bd80      	pop	{r7, pc}

0800a2d8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800a2d8:	b580      	push	{r7, lr}
 800a2da:	b082      	sub	sp, #8
 800a2dc:	af00      	add	r7, sp, #0
 800a2de:	6078      	str	r0, [r7, #4]
 800a2e0:	4a05      	ldr	r2, [pc, #20]	; (800a2f8 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800a2e2:	687b      	ldr	r3, [r7, #4]
 800a2e4:	601a      	str	r2, [r3, #0]
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	4618      	mov	r0, r3
 800a2ea:	f7ff ffb1 	bl	800a250 <_ZN8touchgfx12FontProviderD1Ev>
 800a2ee:	687b      	ldr	r3, [r7, #4]
 800a2f0:	4618      	mov	r0, r3
 800a2f2:	3708      	adds	r7, #8
 800a2f4:	46bd      	mov	sp, r7
 800a2f6:	bd80      	pop	{r7, pc}
 800a2f8:	08023998 	.word	0x08023998

0800a2fc <_ZN23ApplicationFontProviderD0Ev>:
 800a2fc:	b580      	push	{r7, lr}
 800a2fe:	b082      	sub	sp, #8
 800a300:	af00      	add	r7, sp, #0
 800a302:	6078      	str	r0, [r7, #4]
 800a304:	6878      	ldr	r0, [r7, #4]
 800a306:	f7ff ffe7 	bl	800a2d8 <_ZN23ApplicationFontProviderD1Ev>
 800a30a:	2104      	movs	r1, #4
 800a30c:	6878      	ldr	r0, [r7, #4]
 800a30e:	f017 fb16 	bl	802193e <_ZdlPvj>
 800a312:	687b      	ldr	r3, [r7, #4]
 800a314:	4618      	mov	r0, r3
 800a316:	3708      	adds	r7, #8
 800a318:	46bd      	mov	sp, r7
 800a31a:	bd80      	pop	{r7, pc}

0800a31c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800a31c:	b480      	push	{r7}
 800a31e:	b083      	sub	sp, #12
 800a320:	af00      	add	r7, sp, #0
 800a322:	6078      	str	r0, [r7, #4]
    {
 800a324:	4a04      	ldr	r2, [pc, #16]	; (800a338 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800a326:	687b      	ldr	r3, [r7, #4]
 800a328:	601a      	str	r2, [r3, #0]
    }
 800a32a:	687b      	ldr	r3, [r7, #4]
 800a32c:	4618      	mov	r0, r3
 800a32e:	370c      	adds	r7, #12
 800a330:	46bd      	mov	sp, r7
 800a332:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a336:	4770      	bx	lr
 800a338:	08023c5c 	.word	0x08023c5c

0800a33c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800a33c:	b580      	push	{r7, lr}
 800a33e:	b082      	sub	sp, #8
 800a340:	af00      	add	r7, sp, #0
 800a342:	6078      	str	r0, [r7, #4]
    }
 800a344:	6878      	ldr	r0, [r7, #4]
 800a346:	f7ff ffe9 	bl	800a31c <_ZN8touchgfx4FontD1Ev>
 800a34a:	2114      	movs	r1, #20
 800a34c:	6878      	ldr	r0, [r7, #4]
 800a34e:	f017 faf6 	bl	802193e <_ZdlPvj>
 800a352:	687b      	ldr	r3, [r7, #4]
 800a354:	4618      	mov	r0, r3
 800a356:	3708      	adds	r7, #8
 800a358:	46bd      	mov	sp, r7
 800a35a:	bd80      	pop	{r7, pc}

0800a35c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800a35c:	b590      	push	{r4, r7, lr}
 800a35e:	b087      	sub	sp, #28
 800a360:	af00      	add	r7, sp, #0
 800a362:	6078      	str	r0, [r7, #4]
 800a364:	460b      	mov	r3, r1
 800a366:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800a368:	887b      	ldrh	r3, [r7, #2]
 800a36a:	2b00      	cmp	r3, #0
 800a36c:	d101      	bne.n	800a372 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800a36e:	2300      	movs	r3, #0
 800a370:	e010      	b.n	800a394 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800a372:	2300      	movs	r3, #0
 800a374:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800a376:	2300      	movs	r3, #0
 800a378:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	681b      	ldr	r3, [r3, #0]
 800a37e:	3308      	adds	r3, #8
 800a380:	681c      	ldr	r4, [r3, #0]
 800a382:	f107 030f 	add.w	r3, r7, #15
 800a386:	f107 0210 	add.w	r2, r7, #16
 800a38a:	8879      	ldrh	r1, [r7, #2]
 800a38c:	6878      	ldr	r0, [r7, #4]
 800a38e:	47a0      	blx	r4
 800a390:	6178      	str	r0, [r7, #20]
        return glyph;
 800a392:	697b      	ldr	r3, [r7, #20]
    }
 800a394:	4618      	mov	r0, r3
 800a396:	371c      	adds	r7, #28
 800a398:	46bd      	mov	sp, r7
 800a39a:	bd90      	pop	{r4, r7, pc}

0800a39c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800a39c:	b480      	push	{r7}
 800a39e:	b083      	sub	sp, #12
 800a3a0:	af00      	add	r7, sp, #0
 800a3a2:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800a3a4:	687b      	ldr	r3, [r7, #4]
 800a3a6:	89db      	ldrh	r3, [r3, #14]
    }
 800a3a8:	4618      	mov	r0, r3
 800a3aa:	370c      	adds	r7, #12
 800a3ac:	46bd      	mov	sp, r7
 800a3ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3b2:	4770      	bx	lr

0800a3b4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800a3b4:	b480      	push	{r7}
 800a3b6:	b083      	sub	sp, #12
 800a3b8:	af00      	add	r7, sp, #0
 800a3ba:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800a3bc:	687b      	ldr	r3, [r7, #4]
 800a3be:	8a1b      	ldrh	r3, [r3, #16]
    }
 800a3c0:	4618      	mov	r0, r3
 800a3c2:	370c      	adds	r7, #12
 800a3c4:	46bd      	mov	sp, r7
 800a3c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ca:	4770      	bx	lr

0800a3cc <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800a3cc:	b480      	push	{r7}
 800a3ce:	b083      	sub	sp, #12
 800a3d0:	af00      	add	r7, sp, #0
 800a3d2:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800a3d4:	687b      	ldr	r3, [r7, #4]
 800a3d6:	88db      	ldrh	r3, [r3, #6]
    }
 800a3d8:	4618      	mov	r0, r3
 800a3da:	370c      	adds	r7, #12
 800a3dc:	46bd      	mov	sp, r7
 800a3de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3e2:	4770      	bx	lr

0800a3e4 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800a3e4:	b480      	push	{r7}
 800a3e6:	b083      	sub	sp, #12
 800a3e8:	af00      	add	r7, sp, #0
 800a3ea:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800a3ec:	687b      	ldr	r3, [r7, #4]
 800a3ee:	889b      	ldrh	r3, [r3, #4]
    }
 800a3f0:	4618      	mov	r0, r3
 800a3f2:	370c      	adds	r7, #12
 800a3f4:	46bd      	mov	sp, r7
 800a3f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3fa:	4770      	bx	lr

0800a3fc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800a3fc:	b480      	push	{r7}
 800a3fe:	b083      	sub	sp, #12
 800a400:	af00      	add	r7, sp, #0
 800a402:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800a404:	687b      	ldr	r3, [r7, #4]
 800a406:	7a9b      	ldrb	r3, [r3, #10]
 800a408:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800a40c:	b2db      	uxtb	r3, r3
    }
 800a40e:	4618      	mov	r0, r3
 800a410:	370c      	adds	r7, #12
 800a412:	46bd      	mov	sp, r7
 800a414:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a418:	4770      	bx	lr

0800a41a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800a41a:	b480      	push	{r7}
 800a41c:	b083      	sub	sp, #12
 800a41e:	af00      	add	r7, sp, #0
 800a420:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800a422:	687b      	ldr	r3, [r7, #4]
 800a424:	7a9b      	ldrb	r3, [r3, #10]
 800a426:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800a42a:	b2db      	uxtb	r3, r3
    }
 800a42c:	4618      	mov	r0, r3
 800a42e:	370c      	adds	r7, #12
 800a430:	46bd      	mov	sp, r7
 800a432:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a436:	4770      	bx	lr

0800a438 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800a438:	b580      	push	{r7, lr}
 800a43a:	b082      	sub	sp, #8
 800a43c:	af00      	add	r7, sp, #0
 800a43e:	6078      	str	r0, [r7, #4]
 800a440:	4a05      	ldr	r2, [pc, #20]	; (800a458 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800a442:	687b      	ldr	r3, [r7, #4]
 800a444:	601a      	str	r2, [r3, #0]
 800a446:	687b      	ldr	r3, [r7, #4]
 800a448:	4618      	mov	r0, r3
 800a44a:	f7ff ff67 	bl	800a31c <_ZN8touchgfx4FontD1Ev>
 800a44e:	687b      	ldr	r3, [r7, #4]
 800a450:	4618      	mov	r0, r3
 800a452:	3708      	adds	r7, #8
 800a454:	46bd      	mov	sp, r7
 800a456:	bd80      	pop	{r7, pc}
 800a458:	08024538 	.word	0x08024538

0800a45c <_ZN8touchgfx9ConstFontD0Ev>:
 800a45c:	b580      	push	{r7, lr}
 800a45e:	b082      	sub	sp, #8
 800a460:	af00      	add	r7, sp, #0
 800a462:	6078      	str	r0, [r7, #4]
 800a464:	6878      	ldr	r0, [r7, #4]
 800a466:	f7ff ffe7 	bl	800a438 <_ZN8touchgfx9ConstFontD1Ev>
 800a46a:	211c      	movs	r1, #28
 800a46c:	6878      	ldr	r0, [r7, #4]
 800a46e:	f017 fa66 	bl	802193e <_ZdlPvj>
 800a472:	687b      	ldr	r3, [r7, #4]
 800a474:	4618      	mov	r0, r3
 800a476:	3708      	adds	r7, #8
 800a478:	46bd      	mov	sp, r7
 800a47a:	bd80      	pop	{r7, pc}

0800a47c <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800a47c:	b580      	push	{r7, lr}
 800a47e:	b082      	sub	sp, #8
 800a480:	af00      	add	r7, sp, #0
 800a482:	6078      	str	r0, [r7, #4]
 800a484:	4a05      	ldr	r2, [pc, #20]	; (800a49c <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	601a      	str	r2, [r3, #0]
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	4618      	mov	r0, r3
 800a48e:	f7ff ffd3 	bl	800a438 <_ZN8touchgfx9ConstFontD1Ev>
 800a492:	687b      	ldr	r3, [r7, #4]
 800a494:	4618      	mov	r0, r3
 800a496:	3708      	adds	r7, #8
 800a498:	46bd      	mov	sp, r7
 800a49a:	bd80      	pop	{r7, pc}
 800a49c:	080239d0 	.word	0x080239d0

0800a4a0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 800a4a0:	b580      	push	{r7, lr}
 800a4a2:	b082      	sub	sp, #8
 800a4a4:	af00      	add	r7, sp, #0
 800a4a6:	6078      	str	r0, [r7, #4]
 800a4a8:	6878      	ldr	r0, [r7, #4]
 800a4aa:	f7ff ffe7 	bl	800a47c <_ZN8touchgfx13GeneratedFontD1Ev>
 800a4ae:	212c      	movs	r1, #44	; 0x2c
 800a4b0:	6878      	ldr	r0, [r7, #4]
 800a4b2:	f017 fa44 	bl	802193e <_ZdlPvj>
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	4618      	mov	r0, r3
 800a4ba:	3708      	adds	r7, #8
 800a4bc:	46bd      	mov	sp, r7
 800a4be:	bd80      	pop	{r7, pc}

0800a4c0 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800a4c0:	b480      	push	{r7}
 800a4c2:	b083      	sub	sp, #12
 800a4c4:	af00      	add	r7, sp, #0
 800a4c6:	6078      	str	r0, [r7, #4]
    {
 800a4c8:	4a04      	ldr	r2, [pc, #16]	; (800a4dc <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800a4ca:	687b      	ldr	r3, [r7, #4]
 800a4cc:	601a      	str	r2, [r3, #0]
    }
 800a4ce:	687b      	ldr	r3, [r7, #4]
 800a4d0:	4618      	mov	r0, r3
 800a4d2:	370c      	adds	r7, #12
 800a4d4:	46bd      	mov	sp, r7
 800a4d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4da:	4770      	bx	lr
 800a4dc:	080239c0 	.word	0x080239c0

0800a4e0 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800a4e0:	b580      	push	{r7, lr}
 800a4e2:	b082      	sub	sp, #8
 800a4e4:	af00      	add	r7, sp, #0
 800a4e6:	6078      	str	r0, [r7, #4]
    }
 800a4e8:	6878      	ldr	r0, [r7, #4]
 800a4ea:	f7ff ffe9 	bl	800a4c0 <_ZN8touchgfx9TypedTextD1Ev>
 800a4ee:	2108      	movs	r1, #8
 800a4f0:	6878      	ldr	r0, [r7, #4]
 800a4f2:	f017 fa24 	bl	802193e <_ZdlPvj>
 800a4f6:	687b      	ldr	r3, [r7, #4]
 800a4f8:	4618      	mov	r0, r3
 800a4fa:	3708      	adds	r7, #8
 800a4fc:	46bd      	mov	sp, r7
 800a4fe:	bd80      	pop	{r7, pc}

0800a500 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800a500:	b480      	push	{r7}
 800a502:	b083      	sub	sp, #12
 800a504:	af00      	add	r7, sp, #0
 800a506:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800a50c:	4618      	mov	r0, r3
 800a50e:	370c      	adds	r7, #12
 800a510:	46bd      	mov	sp, r7
 800a512:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a516:	4770      	bx	lr

0800a518 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800a518:	b480      	push	{r7}
 800a51a:	b083      	sub	sp, #12
 800a51c:	af00      	add	r7, sp, #0
 800a51e:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800a520:	687b      	ldr	r3, [r7, #4]
 800a522:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800a524:	4618      	mov	r0, r3
 800a526:	370c      	adds	r7, #12
 800a528:	46bd      	mov	sp, r7
 800a52a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a52e:	4770      	bx	lr

0800a530 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800a530:	b580      	push	{r7, lr}
 800a532:	b08e      	sub	sp, #56	; 0x38
 800a534:	af0a      	add	r7, sp, #40	; 0x28
 800a536:	60f8      	str	r0, [r7, #12]
 800a538:	60b9      	str	r1, [r7, #8]
 800a53a:	4611      	mov	r1, r2
 800a53c:	461a      	mov	r2, r3
 800a53e:	460b      	mov	r3, r1
 800a540:	80fb      	strh	r3, [r7, #6]
 800a542:	4613      	mov	r3, r2
 800a544:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800a546:	68f8      	ldr	r0, [r7, #12]
 800a548:	88b9      	ldrh	r1, [r7, #4]
 800a54a:	88fa      	ldrh	r2, [r7, #6]
 800a54c:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800a550:	9308      	str	r3, [sp, #32]
 800a552:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800a554:	9307      	str	r3, [sp, #28]
 800a556:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800a55a:	9306      	str	r3, [sp, #24]
 800a55c:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800a560:	9305      	str	r3, [sp, #20]
 800a562:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a566:	9304      	str	r3, [sp, #16]
 800a568:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800a56c:	9303      	str	r3, [sp, #12]
 800a56e:	f897 3020 	ldrb.w	r3, [r7, #32]
 800a572:	9302      	str	r3, [sp, #8]
 800a574:	7f3b      	ldrb	r3, [r7, #28]
 800a576:	9301      	str	r3, [sp, #4]
 800a578:	8b3b      	ldrh	r3, [r7, #24]
 800a57a:	9300      	str	r3, [sp, #0]
 800a57c:	460b      	mov	r3, r1
 800a57e:	68b9      	ldr	r1, [r7, #8]
 800a580:	f008 f9e0 	bl	8012944 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800a584:	4a09      	ldr	r2, [pc, #36]	; (800a5ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800a586:	68fb      	ldr	r3, [r7, #12]
 800a588:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800a58a:	68fb      	ldr	r3, [r7, #12]
 800a58c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a58e:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800a590:	68fb      	ldr	r3, [r7, #12]
 800a592:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a594:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800a596:	68fb      	ldr	r3, [r7, #12]
 800a598:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a59a:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800a59c:	68fb      	ldr	r3, [r7, #12]
 800a59e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a5a0:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800a5a2:	68fb      	ldr	r3, [r7, #12]
 800a5a4:	4618      	mov	r0, r3
 800a5a6:	3710      	adds	r7, #16
 800a5a8:	46bd      	mov	sp, r7
 800a5aa:	bd80      	pop	{r7, pc}
 800a5ac:	080239d0 	.word	0x080239d0

0800a5b0 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800a5b0:	b480      	push	{r7}
 800a5b2:	b085      	sub	sp, #20
 800a5b4:	af00      	add	r7, sp, #0
 800a5b6:	6078      	str	r0, [r7, #4]
 800a5b8:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800a5ba:	687b      	ldr	r3, [r7, #4]
 800a5bc:	69db      	ldr	r3, [r3, #28]
 800a5be:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800a5c0:	683b      	ldr	r3, [r7, #0]
 800a5c2:	889b      	ldrh	r3, [r3, #4]
 800a5c4:	0adb      	lsrs	r3, r3, #11
 800a5c6:	b29b      	uxth	r3, r3
 800a5c8:	009b      	lsls	r3, r3, #2
 800a5ca:	68fa      	ldr	r2, [r7, #12]
 800a5cc:	4413      	add	r3, r2
 800a5ce:	681a      	ldr	r2, [r3, #0]
 800a5d0:	683b      	ldr	r3, [r7, #0]
 800a5d2:	681b      	ldr	r3, [r3, #0]
 800a5d4:	4413      	add	r3, r2
}
 800a5d6:	4618      	mov	r0, r3
 800a5d8:	3714      	adds	r7, #20
 800a5da:	46bd      	mov	sp, r7
 800a5dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5e0:	4770      	bx	lr

0800a5e2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800a5e2:	b480      	push	{r7}
 800a5e4:	b089      	sub	sp, #36	; 0x24
 800a5e6:	af00      	add	r7, sp, #0
 800a5e8:	60f8      	str	r0, [r7, #12]
 800a5ea:	460b      	mov	r3, r1
 800a5ec:	607a      	str	r2, [r7, #4]
 800a5ee:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800a5f0:	687b      	ldr	r3, [r7, #4]
 800a5f2:	2b00      	cmp	r3, #0
 800a5f4:	d003      	beq.n	800a5fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800a5f6:	687b      	ldr	r3, [r7, #4]
 800a5f8:	7b1b      	ldrb	r3, [r3, #12]
 800a5fa:	2b00      	cmp	r3, #0
 800a5fc:	d101      	bne.n	800a602 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800a5fe:	2300      	movs	r3, #0
 800a600:	e031      	b.n	800a666 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800a602:	68fb      	ldr	r3, [r7, #12]
 800a604:	6a1a      	ldr	r2, [r3, #32]
 800a606:	687b      	ldr	r3, [r7, #4]
 800a608:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800a60a:	697b      	ldr	r3, [r7, #20]
 800a60c:	7b5b      	ldrb	r3, [r3, #13]
 800a60e:	021b      	lsls	r3, r3, #8
 800a610:	b21b      	sxth	r3, r3
 800a612:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800a616:	b219      	sxth	r1, r3
 800a618:	697b      	ldr	r3, [r7, #20]
 800a61a:	7adb      	ldrb	r3, [r3, #11]
 800a61c:	b21b      	sxth	r3, r3
 800a61e:	430b      	orrs	r3, r1
 800a620:	b21b      	sxth	r3, r3
 800a622:	b29b      	uxth	r3, r3
 800a624:	009b      	lsls	r3, r3, #2
 800a626:	4413      	add	r3, r2
 800a628:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800a62a:	687b      	ldr	r3, [r7, #4]
 800a62c:	7b1b      	ldrb	r3, [r3, #12]
 800a62e:	837b      	strh	r3, [r7, #26]
 800a630:	e013      	b.n	800a65a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800a632:	69fb      	ldr	r3, [r7, #28]
 800a634:	881b      	ldrh	r3, [r3, #0]
 800a636:	897a      	ldrh	r2, [r7, #10]
 800a638:	429a      	cmp	r2, r3
 800a63a:	d103      	bne.n	800a644 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800a63c:	69fb      	ldr	r3, [r7, #28]
 800a63e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800a642:	e010      	b.n	800a666 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800a644:	69fb      	ldr	r3, [r7, #28]
 800a646:	881b      	ldrh	r3, [r3, #0]
 800a648:	897a      	ldrh	r2, [r7, #10]
 800a64a:	429a      	cmp	r2, r3
 800a64c:	d309      	bcc.n	800a662 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800a64e:	8b7b      	ldrh	r3, [r7, #26]
 800a650:	3b01      	subs	r3, #1
 800a652:	837b      	strh	r3, [r7, #26]
 800a654:	69fb      	ldr	r3, [r7, #28]
 800a656:	3304      	adds	r3, #4
 800a658:	61fb      	str	r3, [r7, #28]
 800a65a:	8b7b      	ldrh	r3, [r7, #26]
 800a65c:	2b00      	cmp	r3, #0
 800a65e:	d1e8      	bne.n	800a632 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800a660:	e000      	b.n	800a664 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800a662:	bf00      	nop
        }
    }
    return 0;
 800a664:	2300      	movs	r3, #0
}
 800a666:	4618      	mov	r0, r3
 800a668:	3724      	adds	r7, #36	; 0x24
 800a66a:	46bd      	mov	sp, r7
 800a66c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a670:	4770      	bx	lr
	...

0800a674 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a674:	b580      	push	{r7, lr}
 800a676:	af00      	add	r7, sp, #0
 800a678:	4801      	ldr	r0, [pc, #4]	; (800a680 <__tcf_0+0xc>)
 800a67a:	f7ff feff 	bl	800a47c <_ZN8touchgfx13GeneratedFontD1Ev>
 800a67e:	bd80      	pop	{r7, pc}
 800a680:	24000338 	.word	0x24000338

0800a684 <_Z23getFont_verdana_10_4bppv>:
{
 800a684:	b580      	push	{r7, lr}
 800a686:	b08e      	sub	sp, #56	; 0x38
 800a688:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a68a:	4b21      	ldr	r3, [pc, #132]	; (800a710 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800a68c:	681b      	ldr	r3, [r3, #0]
 800a68e:	f3bf 8f5b 	dmb	ish
 800a692:	f003 0301 	and.w	r3, r3, #1
 800a696:	2b00      	cmp	r3, #0
 800a698:	bf0c      	ite	eq
 800a69a:	2301      	moveq	r3, #1
 800a69c:	2300      	movne	r3, #0
 800a69e:	b2db      	uxtb	r3, r3
 800a6a0:	2b00      	cmp	r3, #0
 800a6a2:	d030      	beq.n	800a706 <_Z23getFont_verdana_10_4bppv+0x82>
 800a6a4:	481a      	ldr	r0, [pc, #104]	; (800a710 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800a6a6:	f017 f94c 	bl	8021942 <__cxa_guard_acquire>
 800a6aa:	4603      	mov	r3, r0
 800a6ac:	2b00      	cmp	r3, #0
 800a6ae:	bf14      	ite	ne
 800a6b0:	2301      	movne	r3, #1
 800a6b2:	2300      	moveq	r3, #0
 800a6b4:	b2db      	uxtb	r3, r3
 800a6b6:	2b00      	cmp	r3, #0
 800a6b8:	d025      	beq.n	800a706 <_Z23getFont_verdana_10_4bppv+0x82>
 800a6ba:	2300      	movs	r3, #0
 800a6bc:	930c      	str	r3, [sp, #48]	; 0x30
 800a6be:	2300      	movs	r3, #0
 800a6c0:	930b      	str	r3, [sp, #44]	; 0x2c
 800a6c2:	2300      	movs	r3, #0
 800a6c4:	930a      	str	r3, [sp, #40]	; 0x28
 800a6c6:	233f      	movs	r3, #63	; 0x3f
 800a6c8:	9309      	str	r3, [sp, #36]	; 0x24
 800a6ca:	4b12      	ldr	r3, [pc, #72]	; (800a714 <_Z23getFont_verdana_10_4bppv+0x90>)
 800a6cc:	9308      	str	r3, [sp, #32]
 800a6ce:	4b12      	ldr	r3, [pc, #72]	; (800a718 <_Z23getFont_verdana_10_4bppv+0x94>)
 800a6d0:	9307      	str	r3, [sp, #28]
 800a6d2:	2300      	movs	r3, #0
 800a6d4:	9306      	str	r3, [sp, #24]
 800a6d6:	2300      	movs	r3, #0
 800a6d8:	9305      	str	r3, [sp, #20]
 800a6da:	2301      	movs	r3, #1
 800a6dc:	9304      	str	r3, [sp, #16]
 800a6de:	2304      	movs	r3, #4
 800a6e0:	9303      	str	r3, [sp, #12]
 800a6e2:	2300      	movs	r3, #0
 800a6e4:	9302      	str	r3, [sp, #8]
 800a6e6:	2300      	movs	r3, #0
 800a6e8:	9301      	str	r3, [sp, #4]
 800a6ea:	230a      	movs	r3, #10
 800a6ec:	9300      	str	r3, [sp, #0]
 800a6ee:	230a      	movs	r3, #10
 800a6f0:	2201      	movs	r2, #1
 800a6f2:	490a      	ldr	r1, [pc, #40]	; (800a71c <_Z23getFont_verdana_10_4bppv+0x98>)
 800a6f4:	480a      	ldr	r0, [pc, #40]	; (800a720 <_Z23getFont_verdana_10_4bppv+0x9c>)
 800a6f6:	f7ff ff1b 	bl	800a530 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a6fa:	480a      	ldr	r0, [pc, #40]	; (800a724 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800a6fc:	f017 f96c 	bl	80219d8 <atexit>
 800a700:	4803      	ldr	r0, [pc, #12]	; (800a710 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800a702:	f017 f92a 	bl	802195a <__cxa_guard_release>
    return verdana_10_4bpp;
 800a706:	4b06      	ldr	r3, [pc, #24]	; (800a720 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800a708:	4618      	mov	r0, r3
 800a70a:	46bd      	mov	sp, r7
 800a70c:	bd80      	pop	{r7, pc}
 800a70e:	bf00      	nop
 800a710:	24000364 	.word	0x24000364
 800a714:	08024ca8 	.word	0x08024ca8
 800a718:	08024cb4 	.word	0x08024cb4
 800a71c:	08024c34 	.word	0x08024c34
 800a720:	24000338 	.word	0x24000338
 800a724:	0800a675 	.word	0x0800a675

0800a728 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 6, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800a728:	b580      	push	{r7, lr}
 800a72a:	af00      	add	r7, sp, #0
 800a72c:	4801      	ldr	r0, [pc, #4]	; (800a734 <__tcf_0+0xc>)
 800a72e:	f7ff fea5 	bl	800a47c <_ZN8touchgfx13GeneratedFontD1Ev>
 800a732:	bd80      	pop	{r7, pc}
 800a734:	24000368 	.word	0x24000368

0800a738 <_Z23getFont_verdana_20_4bppv>:
{
 800a738:	b580      	push	{r7, lr}
 800a73a:	b08e      	sub	sp, #56	; 0x38
 800a73c:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 6, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800a73e:	4b21      	ldr	r3, [pc, #132]	; (800a7c4 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800a740:	681b      	ldr	r3, [r3, #0]
 800a742:	f3bf 8f5b 	dmb	ish
 800a746:	f003 0301 	and.w	r3, r3, #1
 800a74a:	2b00      	cmp	r3, #0
 800a74c:	bf0c      	ite	eq
 800a74e:	2301      	moveq	r3, #1
 800a750:	2300      	movne	r3, #0
 800a752:	b2db      	uxtb	r3, r3
 800a754:	2b00      	cmp	r3, #0
 800a756:	d030      	beq.n	800a7ba <_Z23getFont_verdana_20_4bppv+0x82>
 800a758:	481a      	ldr	r0, [pc, #104]	; (800a7c4 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800a75a:	f017 f8f2 	bl	8021942 <__cxa_guard_acquire>
 800a75e:	4603      	mov	r3, r0
 800a760:	2b00      	cmp	r3, #0
 800a762:	bf14      	ite	ne
 800a764:	2301      	movne	r3, #1
 800a766:	2300      	moveq	r3, #0
 800a768:	b2db      	uxtb	r3, r3
 800a76a:	2b00      	cmp	r3, #0
 800a76c:	d025      	beq.n	800a7ba <_Z23getFont_verdana_20_4bppv+0x82>
 800a76e:	2300      	movs	r3, #0
 800a770:	930c      	str	r3, [sp, #48]	; 0x30
 800a772:	2300      	movs	r3, #0
 800a774:	930b      	str	r3, [sp, #44]	; 0x2c
 800a776:	2300      	movs	r3, #0
 800a778:	930a      	str	r3, [sp, #40]	; 0x28
 800a77a:	233f      	movs	r3, #63	; 0x3f
 800a77c:	9309      	str	r3, [sp, #36]	; 0x24
 800a77e:	4b12      	ldr	r3, [pc, #72]	; (800a7c8 <_Z23getFont_verdana_20_4bppv+0x90>)
 800a780:	9308      	str	r3, [sp, #32]
 800a782:	4b12      	ldr	r3, [pc, #72]	; (800a7cc <_Z23getFont_verdana_20_4bppv+0x94>)
 800a784:	9307      	str	r3, [sp, #28]
 800a786:	2301      	movs	r3, #1
 800a788:	9306      	str	r3, [sp, #24]
 800a78a:	2300      	movs	r3, #0
 800a78c:	9305      	str	r3, [sp, #20]
 800a78e:	2301      	movs	r3, #1
 800a790:	9304      	str	r3, [sp, #16]
 800a792:	2304      	movs	r3, #4
 800a794:	9303      	str	r3, [sp, #12]
 800a796:	2300      	movs	r3, #0
 800a798:	9302      	str	r3, [sp, #8]
 800a79a:	2300      	movs	r3, #0
 800a79c:	9301      	str	r3, [sp, #4]
 800a79e:	2314      	movs	r3, #20
 800a7a0:	9300      	str	r3, [sp, #0]
 800a7a2:	2314      	movs	r3, #20
 800a7a4:	2206      	movs	r2, #6
 800a7a6:	490a      	ldr	r1, [pc, #40]	; (800a7d0 <_Z23getFont_verdana_20_4bppv+0x98>)
 800a7a8:	480a      	ldr	r0, [pc, #40]	; (800a7d4 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800a7aa:	f7ff fec1 	bl	800a530 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a7ae:	480a      	ldr	r0, [pc, #40]	; (800a7d8 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800a7b0:	f017 f912 	bl	80219d8 <atexit>
 800a7b4:	4803      	ldr	r0, [pc, #12]	; (800a7c4 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800a7b6:	f017 f8d0 	bl	802195a <__cxa_guard_release>
    return verdana_20_4bpp;
 800a7ba:	4b06      	ldr	r3, [pc, #24]	; (800a7d4 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800a7bc:	4618      	mov	r0, r3
 800a7be:	46bd      	mov	sp, r7
 800a7c0:	bd80      	pop	{r7, pc}
 800a7c2:	bf00      	nop
 800a7c4:	24000394 	.word	0x24000394
 800a7c8:	08024cac 	.word	0x08024cac
 800a7cc:	08024cb8 	.word	0x08024cb8
 800a7d0:	08024c44 	.word	0x08024c44
 800a7d4:	24000368 	.word	0x24000368
 800a7d8:	0800a729 	.word	0x0800a729

0800a7dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a7dc:	b580      	push	{r7, lr}
 800a7de:	af00      	add	r7, sp, #0
 800a7e0:	4801      	ldr	r0, [pc, #4]	; (800a7e8 <__tcf_0+0xc>)
 800a7e2:	f7ff fe4b 	bl	800a47c <_ZN8touchgfx13GeneratedFontD1Ev>
 800a7e6:	bd80      	pop	{r7, pc}
 800a7e8:	24000398 	.word	0x24000398

0800a7ec <_Z23getFont_verdana_40_4bppv>:
{
 800a7ec:	b580      	push	{r7, lr}
 800a7ee:	b08e      	sub	sp, #56	; 0x38
 800a7f0:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a7f2:	4b21      	ldr	r3, [pc, #132]	; (800a878 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800a7f4:	681b      	ldr	r3, [r3, #0]
 800a7f6:	f3bf 8f5b 	dmb	ish
 800a7fa:	f003 0301 	and.w	r3, r3, #1
 800a7fe:	2b00      	cmp	r3, #0
 800a800:	bf0c      	ite	eq
 800a802:	2301      	moveq	r3, #1
 800a804:	2300      	movne	r3, #0
 800a806:	b2db      	uxtb	r3, r3
 800a808:	2b00      	cmp	r3, #0
 800a80a:	d030      	beq.n	800a86e <_Z23getFont_verdana_40_4bppv+0x82>
 800a80c:	481a      	ldr	r0, [pc, #104]	; (800a878 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800a80e:	f017 f898 	bl	8021942 <__cxa_guard_acquire>
 800a812:	4603      	mov	r3, r0
 800a814:	2b00      	cmp	r3, #0
 800a816:	bf14      	ite	ne
 800a818:	2301      	movne	r3, #1
 800a81a:	2300      	moveq	r3, #0
 800a81c:	b2db      	uxtb	r3, r3
 800a81e:	2b00      	cmp	r3, #0
 800a820:	d025      	beq.n	800a86e <_Z23getFont_verdana_40_4bppv+0x82>
 800a822:	2300      	movs	r3, #0
 800a824:	930c      	str	r3, [sp, #48]	; 0x30
 800a826:	2300      	movs	r3, #0
 800a828:	930b      	str	r3, [sp, #44]	; 0x2c
 800a82a:	2300      	movs	r3, #0
 800a82c:	930a      	str	r3, [sp, #40]	; 0x28
 800a82e:	233f      	movs	r3, #63	; 0x3f
 800a830:	9309      	str	r3, [sp, #36]	; 0x24
 800a832:	4b12      	ldr	r3, [pc, #72]	; (800a87c <_Z23getFont_verdana_40_4bppv+0x90>)
 800a834:	9308      	str	r3, [sp, #32]
 800a836:	4b12      	ldr	r3, [pc, #72]	; (800a880 <_Z23getFont_verdana_40_4bppv+0x94>)
 800a838:	9307      	str	r3, [sp, #28]
 800a83a:	2300      	movs	r3, #0
 800a83c:	9306      	str	r3, [sp, #24]
 800a83e:	2300      	movs	r3, #0
 800a840:	9305      	str	r3, [sp, #20]
 800a842:	2301      	movs	r3, #1
 800a844:	9304      	str	r3, [sp, #16]
 800a846:	2304      	movs	r3, #4
 800a848:	9303      	str	r3, [sp, #12]
 800a84a:	2300      	movs	r3, #0
 800a84c:	9302      	str	r3, [sp, #8]
 800a84e:	2300      	movs	r3, #0
 800a850:	9301      	str	r3, [sp, #4]
 800a852:	2328      	movs	r3, #40	; 0x28
 800a854:	9300      	str	r3, [sp, #0]
 800a856:	2328      	movs	r3, #40	; 0x28
 800a858:	2201      	movs	r2, #1
 800a85a:	490a      	ldr	r1, [pc, #40]	; (800a884 <_Z23getFont_verdana_40_4bppv+0x98>)
 800a85c:	480a      	ldr	r0, [pc, #40]	; (800a888 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800a85e:	f7ff fe67 	bl	800a530 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a862:	480a      	ldr	r0, [pc, #40]	; (800a88c <_Z23getFont_verdana_40_4bppv+0xa0>)
 800a864:	f017 f8b8 	bl	80219d8 <atexit>
 800a868:	4803      	ldr	r0, [pc, #12]	; (800a878 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800a86a:	f017 f876 	bl	802195a <__cxa_guard_release>
    return verdana_40_4bpp;
 800a86e:	4b06      	ldr	r3, [pc, #24]	; (800a888 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800a870:	4618      	mov	r0, r3
 800a872:	46bd      	mov	sp, r7
 800a874:	bd80      	pop	{r7, pc}
 800a876:	bf00      	nop
 800a878:	240003c4 	.word	0x240003c4
 800a87c:	08024cb0 	.word	0x08024cb0
 800a880:	08024cbc 	.word	0x08024cbc
 800a884:	08024c98 	.word	0x08024c98
 800a888:	24000398 	.word	0x24000398
 800a88c:	0800a7dd 	.word	0x0800a7dd

0800a890 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800a890:	b480      	push	{r7}
 800a892:	b083      	sub	sp, #12
 800a894:	af00      	add	r7, sp, #0
 800a896:	6078      	str	r0, [r7, #4]
 800a898:	6039      	str	r1, [r7, #0]
 800a89a:	683b      	ldr	r3, [r7, #0]
 800a89c:	4618      	mov	r0, r3
 800a89e:	370c      	adds	r7, #12
 800a8a0:	46bd      	mov	sp, r7
 800a8a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8a6:	4770      	bx	lr

0800a8a8 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800a8a8:	b480      	push	{r7}
 800a8aa:	b083      	sub	sp, #12
 800a8ac:	af00      	add	r7, sp, #0
 800a8ae:	6078      	str	r0, [r7, #4]
 800a8b0:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a8b2:	bf00      	nop
 800a8b4:	370c      	adds	r7, #12
 800a8b6:	46bd      	mov	sp, r7
 800a8b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8bc:	4770      	bx	lr

0800a8be <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800a8be:	b480      	push	{r7}
 800a8c0:	b083      	sub	sp, #12
 800a8c2:	af00      	add	r7, sp, #0
 800a8c4:	6078      	str	r0, [r7, #4]
 800a8c6:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a8c8:	bf00      	nop
 800a8ca:	370c      	adds	r7, #12
 800a8cc:	46bd      	mov	sp, r7
 800a8ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8d2:	4770      	bx	lr

0800a8d4 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800a8d4:	b480      	push	{r7}
 800a8d6:	b083      	sub	sp, #12
 800a8d8:	af00      	add	r7, sp, #0
 800a8da:	6078      	str	r0, [r7, #4]
 800a8dc:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a8de:	bf00      	nop
 800a8e0:	370c      	adds	r7, #12
 800a8e2:	46bd      	mov	sp, r7
 800a8e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8e8:	4770      	bx	lr

0800a8ea <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800a8ea:	b480      	push	{r7}
 800a8ec:	b083      	sub	sp, #12
 800a8ee:	af00      	add	r7, sp, #0
 800a8f0:	6078      	str	r0, [r7, #4]
 800a8f2:	460b      	mov	r3, r1
 800a8f4:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800a8f6:	bf00      	nop
 800a8f8:	370c      	adds	r7, #12
 800a8fa:	46bd      	mov	sp, r7
 800a8fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a900:	4770      	bx	lr

0800a902 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800a902:	b480      	push	{r7}
 800a904:	b083      	sub	sp, #12
 800a906:	af00      	add	r7, sp, #0
 800a908:	6078      	str	r0, [r7, #4]
    {
    }
 800a90a:	bf00      	nop
 800a90c:	370c      	adds	r7, #12
 800a90e:	46bd      	mov	sp, r7
 800a910:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a914:	4770      	bx	lr

0800a916 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800a916:	b480      	push	{r7}
 800a918:	b083      	sub	sp, #12
 800a91a:	af00      	add	r7, sp, #0
 800a91c:	6078      	str	r0, [r7, #4]
    {
    }
 800a91e:	bf00      	nop
 800a920:	370c      	adds	r7, #12
 800a922:	46bd      	mov	sp, r7
 800a924:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a928:	4770      	bx	lr
	...

0800a92c <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800a92c:	b480      	push	{r7}
 800a92e:	b083      	sub	sp, #12
 800a930:	af00      	add	r7, sp, #0
 800a932:	6078      	str	r0, [r7, #4]
    {
 800a934:	4a04      	ldr	r2, [pc, #16]	; (800a948 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800a936:	687b      	ldr	r3, [r7, #4]
 800a938:	601a      	str	r2, [r3, #0]
    }
 800a93a:	687b      	ldr	r3, [r7, #4]
 800a93c:	4618      	mov	r0, r3
 800a93e:	370c      	adds	r7, #12
 800a940:	46bd      	mov	sp, r7
 800a942:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a946:	4770      	bx	lr
 800a948:	08023b50 	.word	0x08023b50

0800a94c <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800a94c:	b580      	push	{r7, lr}
 800a94e:	b082      	sub	sp, #8
 800a950:	af00      	add	r7, sp, #0
 800a952:	6078      	str	r0, [r7, #4]
    }
 800a954:	6878      	ldr	r0, [r7, #4]
 800a956:	f7ff ffe9 	bl	800a92c <_ZN8touchgfx15UIEventListenerD1Ev>
 800a95a:	2104      	movs	r1, #4
 800a95c:	6878      	ldr	r0, [r7, #4]
 800a95e:	f016 ffee 	bl	802193e <_ZdlPvj>
 800a962:	687b      	ldr	r3, [r7, #4]
 800a964:	4618      	mov	r0, r3
 800a966:	3708      	adds	r7, #8
 800a968:	46bd      	mov	sp, r7
 800a96a:	bd80      	pop	{r7, pc}

0800a96c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800a96c:	b480      	push	{r7}
 800a96e:	b083      	sub	sp, #12
 800a970:	af00      	add	r7, sp, #0
 800a972:	6078      	str	r0, [r7, #4]
    {
    }
 800a974:	bf00      	nop
 800a976:	370c      	adds	r7, #12
 800a978:	46bd      	mov	sp, r7
 800a97a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a97e:	4770      	bx	lr

0800a980 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800a980:	b480      	push	{r7}
 800a982:	b083      	sub	sp, #12
 800a984:	af00      	add	r7, sp, #0
 800a986:	6078      	str	r0, [r7, #4]
 800a988:	460b      	mov	r3, r1
 800a98a:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800a98c:	bf00      	nop
 800a98e:	370c      	adds	r7, #12
 800a990:	46bd      	mov	sp, r7
 800a992:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a996:	4770      	bx	lr

0800a998 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800a998:	b480      	push	{r7}
 800a99a:	b083      	sub	sp, #12
 800a99c:	af00      	add	r7, sp, #0
 800a99e:	6078      	str	r0, [r7, #4]
 800a9a0:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800a9a2:	687b      	ldr	r3, [r7, #4]
 800a9a4:	683a      	ldr	r2, [r7, #0]
 800a9a6:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800a9aa:	6810      	ldr	r0, [r2, #0]
 800a9ac:	6851      	ldr	r1, [r2, #4]
 800a9ae:	c303      	stmia	r3!, {r0, r1}
    }
 800a9b0:	bf00      	nop
 800a9b2:	370c      	adds	r7, #12
 800a9b4:	46bd      	mov	sp, r7
 800a9b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9ba:	4770      	bx	lr

0800a9bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800a9bc:	b580      	push	{r7, lr}
 800a9be:	b082      	sub	sp, #8
 800a9c0:	af00      	add	r7, sp, #0
 800a9c2:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800a9c4:	687b      	ldr	r3, [r7, #4]
 800a9c6:	3304      	adds	r3, #4
 800a9c8:	4618      	mov	r0, r3
 800a9ca:	f006 feba 	bl	8011742 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800a9ce:	bf00      	nop
 800a9d0:	3708      	adds	r7, #8
 800a9d2:	46bd      	mov	sp, r7
 800a9d4:	bd80      	pop	{r7, pc}
	...

0800a9d8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800a9d8:	b480      	push	{r7}
 800a9da:	b083      	sub	sp, #12
 800a9dc:	af00      	add	r7, sp, #0
 800a9de:	6078      	str	r0, [r7, #4]
    {
 800a9e0:	4a04      	ldr	r2, [pc, #16]	; (800a9f4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	601a      	str	r2, [r3, #0]
    }
 800a9e6:	687b      	ldr	r3, [r7, #4]
 800a9e8:	4618      	mov	r0, r3
 800a9ea:	370c      	adds	r7, #12
 800a9ec:	46bd      	mov	sp, r7
 800a9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9f2:	4770      	bx	lr
 800a9f4:	08023b38 	.word	0x08023b38

0800a9f8 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800a9f8:	b580      	push	{r7, lr}
 800a9fa:	b082      	sub	sp, #8
 800a9fc:	af00      	add	r7, sp, #0
 800a9fe:	6078      	str	r0, [r7, #4]
    }
 800aa00:	6878      	ldr	r0, [r7, #4]
 800aa02:	f7ff ffe9 	bl	800a9d8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800aa06:	2104      	movs	r1, #4
 800aa08:	6878      	ldr	r0, [r7, #4]
 800aa0a:	f016 ff98 	bl	802193e <_ZdlPvj>
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	4618      	mov	r0, r3
 800aa12:	3708      	adds	r7, #8
 800aa14:	46bd      	mov	sp, r7
 800aa16:	bd80      	pop	{r7, pc}

0800aa18 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800aa18:	b480      	push	{r7}
 800aa1a:	af00      	add	r7, sp, #0
    {
        return instance;
 800aa1c:	4b03      	ldr	r3, [pc, #12]	; (800aa2c <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800aa1e:	681b      	ldr	r3, [r3, #0]
    }
 800aa20:	4618      	mov	r0, r3
 800aa22:	46bd      	mov	sp, r7
 800aa24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa28:	4770      	bx	lr
 800aa2a:	bf00      	nop
 800aa2c:	24001e7c 	.word	0x24001e7c

0800aa30 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800aa30:	b480      	push	{r7}
 800aa32:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800aa34:	4b0b      	ldr	r3, [pc, #44]	; (800aa64 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800aa36:	681b      	ldr	r3, [r3, #0]
 800aa38:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800aa3c:	2b00      	cmp	r3, #0
 800aa3e:	d008      	beq.n	800aa52 <_ZN8touchgfx3HAL3lcdEv+0x22>
 800aa40:	4b08      	ldr	r3, [pc, #32]	; (800aa64 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800aa42:	681b      	ldr	r3, [r3, #0]
 800aa44:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800aa46:	2b00      	cmp	r3, #0
 800aa48:	d003      	beq.n	800aa52 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800aa4a:	4b06      	ldr	r3, [pc, #24]	; (800aa64 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800aa4c:	681b      	ldr	r3, [r3, #0]
 800aa4e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800aa50:	e002      	b.n	800aa58 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800aa52:	4b04      	ldr	r3, [pc, #16]	; (800aa64 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	689b      	ldr	r3, [r3, #8]
    }
 800aa58:	4618      	mov	r0, r3
 800aa5a:	46bd      	mov	sp, r7
 800aa5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa60:	4770      	bx	lr
 800aa62:	bf00      	nop
 800aa64:	24001e7c 	.word	0x24001e7c

0800aa68 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800aa68:	b480      	push	{r7}
 800aa6a:	b083      	sub	sp, #12
 800aa6c:	af00      	add	r7, sp, #0
 800aa6e:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800aa70:	4a07      	ldr	r2, [pc, #28]	; (800aa90 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800aa72:	687b      	ldr	r3, [r7, #4]
 800aa74:	601a      	str	r2, [r3, #0]
 800aa76:	687b      	ldr	r3, [r7, #4]
 800aa78:	2200      	movs	r2, #0
 800aa7a:	605a      	str	r2, [r3, #4]
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	2200      	movs	r2, #0
 800aa80:	721a      	strb	r2, [r3, #8]
    {
    }
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	4618      	mov	r0, r3
 800aa86:	370c      	adds	r7, #12
 800aa88:	46bd      	mov	sp, r7
 800aa8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa8e:	4770      	bx	lr
 800aa90:	08023b14 	.word	0x08023b14

0800aa94 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800aa94:	b480      	push	{r7}
 800aa96:	b083      	sub	sp, #12
 800aa98:	af00      	add	r7, sp, #0
 800aa9a:	6078      	str	r0, [r7, #4]
    {
 800aa9c:	4a04      	ldr	r2, [pc, #16]	; (800aab0 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800aa9e:	687b      	ldr	r3, [r7, #4]
 800aaa0:	601a      	str	r2, [r3, #0]
    }
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	4618      	mov	r0, r3
 800aaa6:	370c      	adds	r7, #12
 800aaa8:	46bd      	mov	sp, r7
 800aaaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaae:	4770      	bx	lr
 800aab0:	08023b14 	.word	0x08023b14

0800aab4 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800aab4:	b580      	push	{r7, lr}
 800aab6:	b082      	sub	sp, #8
 800aab8:	af00      	add	r7, sp, #0
 800aaba:	6078      	str	r0, [r7, #4]
    }
 800aabc:	6878      	ldr	r0, [r7, #4]
 800aabe:	f7ff ffe9 	bl	800aa94 <_ZN8touchgfx10TransitionD1Ev>
 800aac2:	210c      	movs	r1, #12
 800aac4:	6878      	ldr	r0, [r7, #4]
 800aac6:	f016 ff3a 	bl	802193e <_ZdlPvj>
 800aaca:	687b      	ldr	r3, [r7, #4]
 800aacc:	4618      	mov	r0, r3
 800aace:	3708      	adds	r7, #8
 800aad0:	46bd      	mov	sp, r7
 800aad2:	bd80      	pop	{r7, pc}

0800aad4 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800aad4:	b480      	push	{r7}
 800aad6:	b083      	sub	sp, #12
 800aad8:	af00      	add	r7, sp, #0
 800aada:	6078      	str	r0, [r7, #4]
    {
    }
 800aadc:	bf00      	nop
 800aade:	370c      	adds	r7, #12
 800aae0:	46bd      	mov	sp, r7
 800aae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aae6:	4770      	bx	lr

0800aae8 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800aae8:	b480      	push	{r7}
 800aaea:	b083      	sub	sp, #12
 800aaec:	af00      	add	r7, sp, #0
 800aaee:	6078      	str	r0, [r7, #4]
    {
    }
 800aaf0:	bf00      	nop
 800aaf2:	370c      	adds	r7, #12
 800aaf4:	46bd      	mov	sp, r7
 800aaf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aafa:	4770      	bx	lr

0800aafc <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800aafc:	b480      	push	{r7}
 800aafe:	b083      	sub	sp, #12
 800ab00:	af00      	add	r7, sp, #0
 800ab02:	6078      	str	r0, [r7, #4]
    {
    }
 800ab04:	bf00      	nop
 800ab06:	370c      	adds	r7, #12
 800ab08:	46bd      	mov	sp, r7
 800ab0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab0e:	4770      	bx	lr

0800ab10 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800ab10:	b580      	push	{r7, lr}
 800ab12:	b082      	sub	sp, #8
 800ab14:	af00      	add	r7, sp, #0
 800ab16:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800ab18:	f006 fdee 	bl	80116f8 <_ZN8touchgfx11Application11getInstanceEv>
 800ab1c:	4603      	mov	r3, r0
 800ab1e:	681a      	ldr	r2, [r3, #0]
 800ab20:	323c      	adds	r2, #60	; 0x3c
 800ab22:	6812      	ldr	r2, [r2, #0]
 800ab24:	4618      	mov	r0, r3
 800ab26:	4790      	blx	r2
    }
 800ab28:	bf00      	nop
 800ab2a:	3708      	adds	r7, #8
 800ab2c:	46bd      	mov	sp, r7
 800ab2e:	bd80      	pop	{r7, pc}

0800ab30 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800ab30:	b480      	push	{r7}
 800ab32:	b083      	sub	sp, #12
 800ab34:	af00      	add	r7, sp, #0
 800ab36:	6078      	str	r0, [r7, #4]
 800ab38:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800ab3a:	687b      	ldr	r3, [r7, #4]
 800ab3c:	683a      	ldr	r2, [r7, #0]
 800ab3e:	605a      	str	r2, [r3, #4]
    }
 800ab40:	bf00      	nop
 800ab42:	370c      	adds	r7, #12
 800ab44:	46bd      	mov	sp, r7
 800ab46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab4a:	4770      	bx	lr

0800ab4c <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800ab4c:	b580      	push	{r7, lr}
 800ab4e:	b082      	sub	sp, #8
 800ab50:	af00      	add	r7, sp, #0
 800ab52:	6078      	str	r0, [r7, #4]
 800ab54:	4a05      	ldr	r2, [pc, #20]	; (800ab6c <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800ab56:	687b      	ldr	r3, [r7, #4]
 800ab58:	601a      	str	r2, [r3, #0]
 800ab5a:	687b      	ldr	r3, [r7, #4]
 800ab5c:	4618      	mov	r0, r3
 800ab5e:	f7ff fee5 	bl	800a92c <_ZN8touchgfx15UIEventListenerD1Ev>
 800ab62:	687b      	ldr	r3, [r7, #4]
 800ab64:	4618      	mov	r0, r3
 800ab66:	3708      	adds	r7, #8
 800ab68:	46bd      	mov	sp, r7
 800ab6a:	bd80      	pop	{r7, pc}
 800ab6c:	0802447c 	.word	0x0802447c

0800ab70 <_ZN8touchgfx11ApplicationD0Ev>:
 800ab70:	b580      	push	{r7, lr}
 800ab72:	b082      	sub	sp, #8
 800ab74:	af00      	add	r7, sp, #0
 800ab76:	6078      	str	r0, [r7, #4]
 800ab78:	6878      	ldr	r0, [r7, #4]
 800ab7a:	f7ff ffe7 	bl	800ab4c <_ZN8touchgfx11ApplicationD1Ev>
 800ab7e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800ab82:	6878      	ldr	r0, [r7, #4]
 800ab84:	f016 fedb 	bl	802193e <_ZdlPvj>
 800ab88:	687b      	ldr	r3, [r7, #4]
 800ab8a:	4618      	mov	r0, r3
 800ab8c:	3708      	adds	r7, #8
 800ab8e:	46bd      	mov	sp, r7
 800ab90:	bd80      	pop	{r7, pc}
	...

0800ab94 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800ab94:	b580      	push	{r7, lr}
 800ab96:	b082      	sub	sp, #8
 800ab98:	af00      	add	r7, sp, #0
 800ab9a:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800ab9c:	687b      	ldr	r3, [r7, #4]
 800ab9e:	4618      	mov	r0, r3
 800aba0:	f006 fe70 	bl	8011884 <_ZN8touchgfx11ApplicationC1Ev>
 800aba4:	4a09      	ldr	r2, [pc, #36]	; (800abcc <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800abaa:	687b      	ldr	r3, [r7, #4]
 800abac:	2200      	movs	r2, #0
 800abae:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	2200      	movs	r2, #0
 800abb6:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800abba:	687b      	ldr	r3, [r7, #4]
 800abbc:	4a04      	ldr	r2, [pc, #16]	; (800abd0 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800abbe:	6013      	str	r3, [r2, #0]
    }
 800abc0:	687b      	ldr	r3, [r7, #4]
 800abc2:	4618      	mov	r0, r3
 800abc4:	3708      	adds	r7, #8
 800abc6:	46bd      	mov	sp, r7
 800abc8:	bd80      	pop	{r7, pc}
 800abca:	bf00      	nop
 800abcc:	08023ac0 	.word	0x08023ac0
 800abd0:	24001ec8 	.word	0x24001ec8

0800abd4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800abd4:	b580      	push	{r7, lr}
 800abd6:	b082      	sub	sp, #8
 800abd8:	af00      	add	r7, sp, #0
 800abda:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800abdc:	6878      	ldr	r0, [r7, #4]
 800abde:	f000 f804 	bl	800abea <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800abe2:	bf00      	nop
 800abe4:	3708      	adds	r7, #8
 800abe6:	46bd      	mov	sp, r7
 800abe8:	bd80      	pop	{r7, pc}

0800abea <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800abea:	b580      	push	{r7, lr}
 800abec:	b082      	sub	sp, #8
 800abee:	af00      	add	r7, sp, #0
 800abf0:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800abf2:	687b      	ldr	r3, [r7, #4]
 800abf4:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800abf8:	2b00      	cmp	r3, #0
 800abfa:	d00f      	beq.n	800ac1c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800abfc:	687b      	ldr	r3, [r7, #4]
 800abfe:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800ac08:	681b      	ldr	r3, [r3, #0]
 800ac0a:	330c      	adds	r3, #12
 800ac0c:	681b      	ldr	r3, [r3, #0]
 800ac0e:	4610      	mov	r0, r2
 800ac10:	4798      	blx	r3
 800ac12:	4603      	mov	r3, r0
 800ac14:	2b00      	cmp	r3, #0
 800ac16:	d001      	beq.n	800ac1c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800ac18:	2301      	movs	r3, #1
 800ac1a:	e000      	b.n	800ac1e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800ac1c:	2300      	movs	r3, #0
 800ac1e:	2b00      	cmp	r3, #0
 800ac20:	d00e      	beq.n	800ac40 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800ac28:	687b      	ldr	r3, [r7, #4]
 800ac2a:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800ac2e:	681b      	ldr	r3, [r3, #0]
 800ac30:	3308      	adds	r3, #8
 800ac32:	681b      	ldr	r3, [r3, #0]
 800ac34:	4610      	mov	r0, r2
 800ac36:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800ac38:	687b      	ldr	r3, [r7, #4]
 800ac3a:	2200      	movs	r2, #0
 800ac3c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800ac40:	bf00      	nop
 800ac42:	3708      	adds	r7, #8
 800ac44:	46bd      	mov	sp, r7
 800ac46:	bd80      	pop	{r7, pc}

0800ac48 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800ac48:	b480      	push	{r7}
 800ac4a:	b083      	sub	sp, #12
 800ac4c:	af00      	add	r7, sp, #0
 800ac4e:	6078      	str	r0, [r7, #4]
 800ac50:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800ac52:	687b      	ldr	r3, [r7, #4]
 800ac54:	683a      	ldr	r2, [r7, #0]
 800ac56:	601a      	str	r2, [r3, #0]
    }
 800ac58:	bf00      	nop
 800ac5a:	370c      	adds	r7, #12
 800ac5c:	46bd      	mov	sp, r7
 800ac5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac62:	4770      	bx	lr

0800ac64 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800ac64:	b580      	push	{r7, lr}
 800ac66:	b082      	sub	sp, #8
 800ac68:	af00      	add	r7, sp, #0
 800ac6a:	6078      	str	r0, [r7, #4]
 800ac6c:	4a05      	ldr	r2, [pc, #20]	; (800ac84 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	601a      	str	r2, [r3, #0]
 800ac72:	687b      	ldr	r3, [r7, #4]
 800ac74:	4618      	mov	r0, r3
 800ac76:	f7ff ff69 	bl	800ab4c <_ZN8touchgfx11ApplicationD1Ev>
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	4618      	mov	r0, r3
 800ac7e:	3708      	adds	r7, #8
 800ac80:	46bd      	mov	sp, r7
 800ac82:	bd80      	pop	{r7, pc}
 800ac84:	08023ac0 	.word	0x08023ac0

0800ac88 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800ac88:	b580      	push	{r7, lr}
 800ac8a:	b082      	sub	sp, #8
 800ac8c:	af00      	add	r7, sp, #0
 800ac8e:	6078      	str	r0, [r7, #4]
 800ac90:	6878      	ldr	r0, [r7, #4]
 800ac92:	f7ff ffe7 	bl	800ac64 <_ZN8touchgfx14MVPApplicationD1Ev>
 800ac96:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800ac9a:	6878      	ldr	r0, [r7, #4]
 800ac9c:	f016 fe4f 	bl	802193e <_ZdlPvj>
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	4618      	mov	r0, r3
 800aca4:	3708      	adds	r7, #8
 800aca6:	46bd      	mov	sp, r7
 800aca8:	bd80      	pop	{r7, pc}
	...

0800acac <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800acac:	b580      	push	{r7, lr}
 800acae:	b082      	sub	sp, #8
 800acb0:	af00      	add	r7, sp, #0
 800acb2:	6078      	str	r0, [r7, #4]
 800acb4:	4a08      	ldr	r2, [pc, #32]	; (800acd8 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800acb6:	687b      	ldr	r3, [r7, #4]
 800acb8:	601a      	str	r2, [r3, #0]
 800acba:	687b      	ldr	r3, [r7, #4]
 800acbc:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800acc0:	4618      	mov	r0, r3
 800acc2:	f000 facb 	bl	800b25c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800acc6:	687b      	ldr	r3, [r7, #4]
 800acc8:	4618      	mov	r0, r3
 800acca:	f7ff ffcb 	bl	800ac64 <_ZN8touchgfx14MVPApplicationD1Ev>
 800acce:	687b      	ldr	r3, [r7, #4]
 800acd0:	4618      	mov	r0, r3
 800acd2:	3708      	adds	r7, #8
 800acd4:	46bd      	mov	sp, r7
 800acd6:	bd80      	pop	{r7, pc}
 800acd8:	08023a54 	.word	0x08023a54

0800acdc <_ZN23FrontendApplicationBaseD0Ev>:
 800acdc:	b580      	push	{r7, lr}
 800acde:	b082      	sub	sp, #8
 800ace0:	af00      	add	r7, sp, #0
 800ace2:	6078      	str	r0, [r7, #4]
 800ace4:	6878      	ldr	r0, [r7, #4]
 800ace6:	f7ff ffe1 	bl	800acac <_ZN23FrontendApplicationBaseD1Ev>
 800acea:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800acee:	6878      	ldr	r0, [r7, #4]
 800acf0:	f016 fe25 	bl	802193e <_ZdlPvj>
 800acf4:	687b      	ldr	r3, [r7, #4]
 800acf6:	4618      	mov	r0, r3
 800acf8:	3708      	adds	r7, #8
 800acfa:	46bd      	mov	sp, r7
 800acfc:	bd80      	pop	{r7, pc}

0800acfe <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800acfe:	b580      	push	{r7, lr}
 800ad00:	b082      	sub	sp, #8
 800ad02:	af00      	add	r7, sp, #0
 800ad04:	6078      	str	r0, [r7, #4]
    {
        gotoscreenScreenNoTransition();
 800ad06:	6878      	ldr	r0, [r7, #4]
 800ad08:	f000 f882 	bl	800ae10 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800ad0c:	bf00      	nop
 800ad0e:	3708      	adds	r7, #8
 800ad10:	46bd      	mov	sp, r7
 800ad12:	bd80      	pop	{r7, pc}

0800ad14 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800ad14:	b480      	push	{r7}
 800ad16:	b083      	sub	sp, #12
 800ad18:	af00      	add	r7, sp, #0
 800ad1a:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800ad1c:	687b      	ldr	r3, [r7, #4]
 800ad1e:	2201      	movs	r2, #1
 800ad20:	721a      	strb	r2, [r3, #8]
    }
 800ad22:	bf00      	nop
 800ad24:	370c      	adds	r7, #12
 800ad26:	46bd      	mov	sp, r7
 800ad28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad2c:	4770      	bx	lr

0800ad2e <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800ad2e:	b480      	push	{r7}
 800ad30:	b083      	sub	sp, #12
 800ad32:	af00      	add	r7, sp, #0
 800ad34:	6078      	str	r0, [r7, #4]
 800ad36:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800ad38:	687b      	ldr	r3, [r7, #4]
 800ad3a:	683a      	ldr	r2, [r7, #0]
 800ad3c:	605a      	str	r2, [r3, #4]
    }
 800ad3e:	bf00      	nop
 800ad40:	370c      	adds	r7, #12
 800ad42:	46bd      	mov	sp, r7
 800ad44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad48:	4770      	bx	lr
	...

0800ad4c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800ad4c:	b580      	push	{r7, lr}
 800ad4e:	b084      	sub	sp, #16
 800ad50:	af00      	add	r7, sp, #0
 800ad52:	60f8      	str	r0, [r7, #12]
 800ad54:	60b9      	str	r1, [r7, #8]
 800ad56:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800ad58:	68fb      	ldr	r3, [r7, #12]
 800ad5a:	4618      	mov	r0, r3
 800ad5c:	f7ff ff1a 	bl	800ab94 <_ZN8touchgfx14MVPApplicationC1Ev>
 800ad60:	4a16      	ldr	r2, [pc, #88]	; (800adbc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800ad62:	68fb      	ldr	r3, [r7, #12]
 800ad64:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800ad66:	68fb      	ldr	r3, [r7, #12]
 800ad68:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ad6c:	4618      	mov	r0, r3
 800ad6e:	f000 f8a5 	bl	800aebc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800ad72:	68fb      	ldr	r3, [r7, #12]
 800ad74:	687a      	ldr	r2, [r7, #4]
 800ad76:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800ad7a:	68fb      	ldr	r3, [r7, #12]
 800ad7c:	68ba      	ldr	r2, [r7, #8]
 800ad7e:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800ad82:	f7ff fe49 	bl	800aa18 <_ZN8touchgfx3HAL11getInstanceEv>
 800ad86:	4603      	mov	r3, r0
 800ad88:	681a      	ldr	r2, [r3, #0]
 800ad8a:	3208      	adds	r2, #8
 800ad8c:	6812      	ldr	r2, [r2, #0]
 800ad8e:	2100      	movs	r1, #0
 800ad90:	4618      	mov	r0, r3
 800ad92:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800ad94:	2000      	movs	r0, #0
 800ad96:	f001 f929 	bl	800bfec <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800ad9a:	f7ff fe49 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800ad9e:	4603      	mov	r3, r0
 800ada0:	4618      	mov	r0, r3
 800ada2:	f00f fa72 	bl	801a28a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800ada6:	f7ff fe43 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800adaa:	4603      	mov	r3, r0
 800adac:	4618      	mov	r0, r3
 800adae:	f00f fae7 	bl	801a380 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800adb2:	68fb      	ldr	r3, [r7, #12]
 800adb4:	4618      	mov	r0, r3
 800adb6:	3710      	adds	r7, #16
 800adb8:	46bd      	mov	sp, r7
 800adba:	bd80      	pop	{r7, pc}
 800adbc:	08023a54 	.word	0x08023a54

0800adc0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800adc0:	b480      	push	{r7}
 800adc2:	b083      	sub	sp, #12
 800adc4:	af00      	add	r7, sp, #0
 800adc6:	6078      	str	r0, [r7, #4]
 800adc8:	6039      	str	r1, [r7, #0]
 800adca:	687b      	ldr	r3, [r7, #4]
 800adcc:	4618      	mov	r0, r3
 800adce:	370c      	adds	r7, #12
 800add0:	46bd      	mov	sp, r7
 800add2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800add6:	4770      	bx	lr

0800add8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800add8:	b580      	push	{r7, lr}
 800adda:	b082      	sub	sp, #8
 800addc:	af00      	add	r7, sp, #0
 800adde:	6078      	str	r0, [r7, #4]
 800ade0:	6039      	str	r1, [r7, #0]
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	683a      	ldr	r2, [r7, #0]
 800ade6:	4611      	mov	r1, r2
 800ade8:	4618      	mov	r0, r3
 800adea:	f7ff ffe9 	bl	800adc0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800adee:	683b      	ldr	r3, [r7, #0]
 800adf0:	685a      	ldr	r2, [r3, #4]
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	605a      	str	r2, [r3, #4]
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	683a      	ldr	r2, [r7, #0]
 800adfa:	3308      	adds	r3, #8
 800adfc:	3208      	adds	r2, #8
 800adfe:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ae02:	e883 0003 	stmia.w	r3, {r0, r1}
 800ae06:	687b      	ldr	r3, [r7, #4]
 800ae08:	4618      	mov	r0, r3
 800ae0a:	3708      	adds	r7, #8
 800ae0c:	46bd      	mov	sp, r7
 800ae0e:	bd80      	pop	{r7, pc}

0800ae10 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>:
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
 800ae10:	b590      	push	{r4, r7, lr}
 800ae12:	b089      	sub	sp, #36	; 0x24
 800ae14:	af00      	add	r7, sp, #0
 800ae16:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenScreenNoTransitionImpl);
 800ae18:	687b      	ldr	r3, [r7, #4]
 800ae1a:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800ae1e:	4b10      	ldr	r3, [pc, #64]	; (800ae60 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv+0x50>)
 800ae20:	61bb      	str	r3, [r7, #24]
 800ae22:	2300      	movs	r3, #0
 800ae24:	61fb      	str	r3, [r7, #28]
 800ae26:	f107 0008 	add.w	r0, r7, #8
 800ae2a:	f107 0318 	add.w	r3, r7, #24
 800ae2e:	cb0c      	ldmia	r3, {r2, r3}
 800ae30:	6879      	ldr	r1, [r7, #4]
 800ae32:	f000 f85f 	bl	800aef4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800ae36:	f107 0308 	add.w	r3, r7, #8
 800ae3a:	4619      	mov	r1, r3
 800ae3c:	4620      	mov	r0, r4
 800ae3e:	f7ff ffcb 	bl	800add8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800ae42:	f107 0308 	add.w	r3, r7, #8
 800ae46:	4618      	mov	r0, r3
 800ae48:	f000 fa08 	bl	800b25c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800ae4c:	687b      	ldr	r3, [r7, #4]
 800ae4e:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800ae58:	bf00      	nop
 800ae5a:	3724      	adds	r7, #36	; 0x24
 800ae5c:	46bd      	mov	sp, r7
 800ae5e:	bd90      	pop	{r4, r7, pc}
 800ae60:	0800ae65 	.word	0x0800ae65

0800ae64 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
 800ae64:	b580      	push	{r7, lr}
 800ae66:	b084      	sub	sp, #16
 800ae68:	af02      	add	r7, sp, #8
 800ae6a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800ae6c:	687b      	ldr	r3, [r7, #4]
 800ae6e:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800ae72:	687b      	ldr	r3, [r7, #4]
 800ae74:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800ae78:	461a      	mov	r2, r3
 800ae7a:	687b      	ldr	r3, [r7, #4]
 800ae7c:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800ae80:	9300      	str	r3, [sp, #0]
 800ae82:	4b04      	ldr	r3, [pc, #16]	; (800ae94 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x30>)
 800ae84:	4804      	ldr	r0, [pc, #16]	; (800ae98 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x34>)
 800ae86:	f000 f867 	bl	800af58 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800ae8a:	bf00      	nop
 800ae8c:	3708      	adds	r7, #8
 800ae8e:	46bd      	mov	sp, r7
 800ae90:	bd80      	pop	{r7, pc}
 800ae92:	bf00      	nop
 800ae94:	24001ebc 	.word	0x24001ebc
 800ae98:	24001eb8 	.word	0x24001eb8

0800ae9c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800ae9c:	b480      	push	{r7}
 800ae9e:	b083      	sub	sp, #12
 800aea0:	af00      	add	r7, sp, #0
 800aea2:	6078      	str	r0, [r7, #4]
 800aea4:	4a04      	ldr	r2, [pc, #16]	; (800aeb8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800aea6:	687b      	ldr	r3, [r7, #4]
 800aea8:	601a      	str	r2, [r3, #0]
 800aeaa:	687b      	ldr	r3, [r7, #4]
 800aeac:	4618      	mov	r0, r3
 800aeae:	370c      	adds	r7, #12
 800aeb0:	46bd      	mov	sp, r7
 800aeb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeb6:	4770      	bx	lr
 800aeb8:	08023b38 	.word	0x08023b38

0800aebc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800aebc:	b580      	push	{r7, lr}
 800aebe:	b082      	sub	sp, #8
 800aec0:	af00      	add	r7, sp, #0
 800aec2:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800aec4:	687b      	ldr	r3, [r7, #4]
 800aec6:	4618      	mov	r0, r3
 800aec8:	f7ff ffe8 	bl	800ae9c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800aecc:	4a08      	ldr	r2, [pc, #32]	; (800aef0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800aece:	687b      	ldr	r3, [r7, #4]
 800aed0:	601a      	str	r2, [r3, #0]
 800aed2:	687b      	ldr	r3, [r7, #4]
 800aed4:	2200      	movs	r2, #0
 800aed6:	605a      	str	r2, [r3, #4]
 800aed8:	687b      	ldr	r3, [r7, #4]
 800aeda:	2200      	movs	r2, #0
 800aedc:	609a      	str	r2, [r3, #8]
 800aede:	687b      	ldr	r3, [r7, #4]
 800aee0:	2200      	movs	r2, #0
 800aee2:	60da      	str	r2, [r3, #12]
    {
    }
 800aee4:	687b      	ldr	r3, [r7, #4]
 800aee6:	4618      	mov	r0, r3
 800aee8:	3708      	adds	r7, #8
 800aeea:	46bd      	mov	sp, r7
 800aeec:	bd80      	pop	{r7, pc}
 800aeee:	bf00      	nop
 800aef0:	08023aa8 	.word	0x08023aa8

0800aef4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800aef4:	b580      	push	{r7, lr}
 800aef6:	b084      	sub	sp, #16
 800aef8:	af00      	add	r7, sp, #0
 800aefa:	60f8      	str	r0, [r7, #12]
 800aefc:	60b9      	str	r1, [r7, #8]
 800aefe:	4639      	mov	r1, r7
 800af00:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800af04:	68fb      	ldr	r3, [r7, #12]
 800af06:	4618      	mov	r0, r3
 800af08:	f7ff ffc8 	bl	800ae9c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800af0c:	4a08      	ldr	r2, [pc, #32]	; (800af30 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800af0e:	68fb      	ldr	r3, [r7, #12]
 800af10:	601a      	str	r2, [r3, #0]
 800af12:	68fb      	ldr	r3, [r7, #12]
 800af14:	68ba      	ldr	r2, [r7, #8]
 800af16:	605a      	str	r2, [r3, #4]
 800af18:	68fb      	ldr	r3, [r7, #12]
 800af1a:	3308      	adds	r3, #8
 800af1c:	463a      	mov	r2, r7
 800af1e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800af22:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800af26:	68fb      	ldr	r3, [r7, #12]
 800af28:	4618      	mov	r0, r3
 800af2a:	3710      	adds	r7, #16
 800af2c:	46bd      	mov	sp, r7
 800af2e:	bd80      	pop	{r7, pc}
 800af30:	08023aa8 	.word	0x08023aa8

0800af34 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800af34:	b580      	push	{r7, lr}
 800af36:	b082      	sub	sp, #8
 800af38:	af00      	add	r7, sp, #0
 800af3a:	6078      	str	r0, [r7, #4]
 800af3c:	687b      	ldr	r3, [r7, #4]
 800af3e:	4618      	mov	r0, r3
 800af40:	f7ff fd92 	bl	800aa68 <_ZN8touchgfx10TransitionC1Ev>
 800af44:	4a03      	ldr	r2, [pc, #12]	; (800af54 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800af46:	687b      	ldr	r3, [r7, #4]
 800af48:	601a      	str	r2, [r3, #0]
 800af4a:	687b      	ldr	r3, [r7, #4]
 800af4c:	4618      	mov	r0, r3
 800af4e:	3708      	adds	r7, #8
 800af50:	46bd      	mov	sp, r7
 800af52:	bd80      	pop	{r7, pc}
 800af54:	08023a30 	.word	0x08023a30

0800af58 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800af58:	b590      	push	{r4, r7, lr}
 800af5a:	b08f      	sub	sp, #60	; 0x3c
 800af5c:	af00      	add	r7, sp, #0
 800af5e:	60f8      	str	r0, [r7, #12]
 800af60:	60b9      	str	r1, [r7, #8]
 800af62:	607a      	str	r2, [r7, #4]
 800af64:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	689a      	ldr	r2, [r3, #8]
 800af6a:	687b      	ldr	r3, [r7, #4]
 800af6c:	689b      	ldr	r3, [r3, #8]
 800af6e:	681b      	ldr	r3, [r3, #0]
 800af70:	3320      	adds	r3, #32
 800af72:	681b      	ldr	r3, [r3, #0]
 800af74:	4610      	mov	r0, r2
 800af76:	4798      	blx	r3
 800af78:	4603      	mov	r3, r0
 800af7a:	2bdf      	cmp	r3, #223	; 0xdf
 800af7c:	d805      	bhi.n	800af8a <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 800af7e:	4b7d      	ldr	r3, [pc, #500]	; (800b174 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x21c>)
 800af80:	4a7d      	ldr	r2, [pc, #500]	; (800b178 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800af82:	21a3      	movs	r1, #163	; 0xa3
 800af84:	487d      	ldr	r0, [pc, #500]	; (800b17c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800af86:	f016 fd09 	bl	802199c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800af8a:	687b      	ldr	r3, [r7, #4]
 800af8c:	685a      	ldr	r2, [r3, #4]
 800af8e:	687b      	ldr	r3, [r7, #4]
 800af90:	685b      	ldr	r3, [r3, #4]
 800af92:	681b      	ldr	r3, [r3, #0]
 800af94:	3320      	adds	r3, #32
 800af96:	681b      	ldr	r3, [r3, #0]
 800af98:	4610      	mov	r0, r2
 800af9a:	4798      	blx	r3
 800af9c:	4603      	mov	r3, r0
 800af9e:	2b0f      	cmp	r3, #15
 800afa0:	d805      	bhi.n	800afae <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x56>
 800afa2:	4b77      	ldr	r3, [pc, #476]	; (800b180 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800afa4:	4a74      	ldr	r2, [pc, #464]	; (800b178 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800afa6:	21a4      	movs	r1, #164	; 0xa4
 800afa8:	4874      	ldr	r0, [pc, #464]	; (800b17c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800afaa:	f016 fcf7 	bl	802199c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800afae:	687b      	ldr	r3, [r7, #4]
 800afb0:	68da      	ldr	r2, [r3, #12]
 800afb2:	687b      	ldr	r3, [r7, #4]
 800afb4:	68db      	ldr	r3, [r3, #12]
 800afb6:	681b      	ldr	r3, [r3, #0]
 800afb8:	3320      	adds	r3, #32
 800afba:	681b      	ldr	r3, [r3, #0]
 800afbc:	4610      	mov	r0, r2
 800afbe:	4798      	blx	r3
 800afc0:	4603      	mov	r3, r0
 800afc2:	2b0b      	cmp	r3, #11
 800afc4:	d805      	bhi.n	800afd2 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
 800afc6:	4b6f      	ldr	r3, [pc, #444]	; (800b184 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800afc8:	4a6b      	ldr	r2, [pc, #428]	; (800b178 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800afca:	21a5      	movs	r1, #165	; 0xa5
 800afcc:	486b      	ldr	r0, [pc, #428]	; (800b17c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800afce:	f016 fce5 	bl	802199c <__assert_func>
 800afd2:	68fb      	ldr	r3, [r7, #12]
 800afd4:	62bb      	str	r3, [r7, #40]	; 0x28
 800afd6:	68bb      	ldr	r3, [r7, #8]
 800afd8:	627b      	str	r3, [r7, #36]	; 0x24
 800afda:	683b      	ldr	r3, [r7, #0]
 800afdc:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800afde:	f006 fb8b 	bl	80116f8 <_ZN8touchgfx11Application11getInstanceEv>
 800afe2:	4603      	mov	r3, r0
 800afe4:	4618      	mov	r0, r3
 800afe6:	f7ff fce9 	bl	800a9bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800afea:	6a3b      	ldr	r3, [r7, #32]
 800afec:	681b      	ldr	r3, [r3, #0]
 800afee:	2b00      	cmp	r3, #0
 800aff0:	d008      	beq.n	800b004 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xac>
        (*currentTrans)->tearDown();
 800aff2:	6a3b      	ldr	r3, [r7, #32]
 800aff4:	681a      	ldr	r2, [r3, #0]
 800aff6:	6a3b      	ldr	r3, [r7, #32]
 800aff8:	681b      	ldr	r3, [r3, #0]
 800affa:	681b      	ldr	r3, [r3, #0]
 800affc:	330c      	adds	r3, #12
 800affe:	681b      	ldr	r3, [r3, #0]
 800b000:	4610      	mov	r0, r2
 800b002:	4798      	blx	r3
    if (*currentTrans)
 800b004:	6a3b      	ldr	r3, [r7, #32]
 800b006:	681b      	ldr	r3, [r3, #0]
 800b008:	2b00      	cmp	r3, #0
 800b00a:	d007      	beq.n	800b01c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc4>
        (*currentTrans)->~Transition();
 800b00c:	6a3b      	ldr	r3, [r7, #32]
 800b00e:	681a      	ldr	r2, [r3, #0]
 800b010:	6a3b      	ldr	r3, [r7, #32]
 800b012:	681b      	ldr	r3, [r3, #0]
 800b014:	681b      	ldr	r3, [r3, #0]
 800b016:	681b      	ldr	r3, [r3, #0]
 800b018:	4610      	mov	r0, r2
 800b01a:	4798      	blx	r3
    if (*currentScreen)
 800b01c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b01e:	681b      	ldr	r3, [r3, #0]
 800b020:	2b00      	cmp	r3, #0
 800b022:	d008      	beq.n	800b036 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xde>
        (*currentScreen)->tearDownScreen();
 800b024:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b026:	681a      	ldr	r2, [r3, #0]
 800b028:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b02a:	681b      	ldr	r3, [r3, #0]
 800b02c:	681b      	ldr	r3, [r3, #0]
 800b02e:	3314      	adds	r3, #20
 800b030:	681b      	ldr	r3, [r3, #0]
 800b032:	4610      	mov	r0, r2
 800b034:	4798      	blx	r3
    if (*currentPresenter)
 800b036:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b038:	681b      	ldr	r3, [r3, #0]
 800b03a:	2b00      	cmp	r3, #0
 800b03c:	d008      	beq.n	800b050 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf8>
        (*currentPresenter)->deactivate();
 800b03e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b040:	681a      	ldr	r2, [r3, #0]
 800b042:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b044:	681b      	ldr	r3, [r3, #0]
 800b046:	681b      	ldr	r3, [r3, #0]
 800b048:	3304      	adds	r3, #4
 800b04a:	681b      	ldr	r3, [r3, #0]
 800b04c:	4610      	mov	r0, r2
 800b04e:	4798      	blx	r3
    if (*currentScreen)
 800b050:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b052:	681b      	ldr	r3, [r3, #0]
 800b054:	2b00      	cmp	r3, #0
 800b056:	d007      	beq.n	800b068 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x110>
        (*currentScreen)->~Screen();
 800b058:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b05a:	681a      	ldr	r2, [r3, #0]
 800b05c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b05e:	681b      	ldr	r3, [r3, #0]
 800b060:	681b      	ldr	r3, [r3, #0]
 800b062:	681b      	ldr	r3, [r3, #0]
 800b064:	4610      	mov	r0, r2
 800b066:	4798      	blx	r3
    if (*currentPresenter)
 800b068:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b06a:	681b      	ldr	r3, [r3, #0]
 800b06c:	2b00      	cmp	r3, #0
 800b06e:	d008      	beq.n	800b082 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
        (*currentPresenter)->~Presenter();
 800b070:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b072:	681a      	ldr	r2, [r3, #0]
 800b074:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b076:	681b      	ldr	r3, [r3, #0]
 800b078:	681b      	ldr	r3, [r3, #0]
 800b07a:	3308      	adds	r3, #8
 800b07c:	681b      	ldr	r3, [r3, #0]
 800b07e:	4610      	mov	r0, r2
 800b080:	4798      	blx	r3
}
 800b082:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800b084:	687b      	ldr	r3, [r7, #4]
 800b086:	68db      	ldr	r3, [r3, #12]
 800b088:	2100      	movs	r1, #0
 800b08a:	4618      	mov	r0, r3
 800b08c:	f000 f87c 	bl	800b188 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800b090:	4603      	mov	r3, r0
 800b092:	4619      	mov	r1, r3
 800b094:	200c      	movs	r0, #12
 800b096:	f7ff fbfb 	bl	800a890 <_ZnwjPv>
 800b09a:	4604      	mov	r4, r0
 800b09c:	4620      	mov	r0, r4
 800b09e:	f7ff ff49 	bl	800af34 <_ZN8touchgfx12NoTransitionC1Ev>
 800b0a2:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800b0a4:	687b      	ldr	r3, [r7, #4]
 800b0a6:	689b      	ldr	r3, [r3, #8]
 800b0a8:	2100      	movs	r1, #0
 800b0aa:	4618      	mov	r0, r3
 800b0ac:	f000 f87f 	bl	800b1ae <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>
 800b0b0:	4603      	mov	r3, r0
 800b0b2:	4619      	mov	r1, r3
 800b0b4:	20e0      	movs	r0, #224	; 0xe0
 800b0b6:	f7ff fbeb 	bl	800a890 <_ZnwjPv>
 800b0ba:	4604      	mov	r4, r0
 800b0bc:	4620      	mov	r0, r4
 800b0be:	f001 f9a7 	bl	800c410 <_ZN10screenViewC1Ev>
 800b0c2:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800b0c4:	687b      	ldr	r3, [r7, #4]
 800b0c6:	685b      	ldr	r3, [r3, #4]
 800b0c8:	2100      	movs	r1, #0
 800b0ca:	4618      	mov	r0, r3
 800b0cc:	f000 f882 	bl	800b1d4 <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>
 800b0d0:	4603      	mov	r3, r0
 800b0d2:	4619      	mov	r1, r3
 800b0d4:	2010      	movs	r0, #16
 800b0d6:	f7ff fbdb 	bl	800a890 <_ZnwjPv>
 800b0da:	4604      	mov	r4, r0
 800b0dc:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b0de:	4620      	mov	r0, r4
 800b0e0:	f001 f940 	bl	800c364 <_ZN15screenPresenterC1ER10screenView>
 800b0e4:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800b0e6:	683b      	ldr	r3, [r7, #0]
 800b0e8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b0ea:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800b0ec:	68bb      	ldr	r3, [r7, #8]
 800b0ee:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b0f0:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800b0f2:	68fb      	ldr	r3, [r7, #12]
 800b0f4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b0f6:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800b0f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b0fa:	2b00      	cmp	r3, #0
 800b0fc:	d002      	beq.n	800b104 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>
 800b0fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b100:	3304      	adds	r3, #4
 800b102:	e000      	b.n	800b106 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ae>
 800b104:	2300      	movs	r3, #0
 800b106:	4619      	mov	r1, r3
 800b108:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800b10a:	f7ff fd9d 	bl	800ac48 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800b10e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b110:	3304      	adds	r3, #4
 800b112:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b114:	4618      	mov	r0, r3
 800b116:	f7ff fe0a 	bl	800ad2e <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800b11a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b11c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b11e:	4618      	mov	r0, r3
 800b120:	f000 f86b 	bl	800b1fa <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>
 800b124:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b126:	61fb      	str	r3, [r7, #28]
 800b128:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b12a:	61bb      	str	r3, [r7, #24]
 800b12c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b12e:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800b130:	69fb      	ldr	r3, [r7, #28]
 800b132:	681b      	ldr	r3, [r3, #0]
 800b134:	330c      	adds	r3, #12
 800b136:	681b      	ldr	r3, [r3, #0]
 800b138:	69f8      	ldr	r0, [r7, #28]
 800b13a:	4798      	blx	r3
    newPresenter->activate();
 800b13c:	69bb      	ldr	r3, [r7, #24]
 800b13e:	681b      	ldr	r3, [r3, #0]
 800b140:	681b      	ldr	r3, [r3, #0]
 800b142:	69b8      	ldr	r0, [r7, #24]
 800b144:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800b146:	6979      	ldr	r1, [r7, #20]
 800b148:	69f8      	ldr	r0, [r7, #28]
 800b14a:	f007 ff99 	bl	8013080 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800b14e:	697b      	ldr	r3, [r7, #20]
 800b150:	681b      	ldr	r3, [r3, #0]
 800b152:	3310      	adds	r3, #16
 800b154:	681b      	ldr	r3, [r3, #0]
 800b156:	6978      	ldr	r0, [r7, #20]
 800b158:	4798      	blx	r3
    newTransition->invalidate();
 800b15a:	697b      	ldr	r3, [r7, #20]
 800b15c:	681b      	ldr	r3, [r3, #0]
 800b15e:	3314      	adds	r3, #20
 800b160:	681b      	ldr	r3, [r3, #0]
 800b162:	6978      	ldr	r0, [r7, #20]
 800b164:	4798      	blx	r3
}
 800b166:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800b168:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800b16a:	4618      	mov	r0, r3
 800b16c:	373c      	adds	r7, #60	; 0x3c
 800b16e:	46bd      	mov	sp, r7
 800b170:	bd90      	pop	{r4, r7, pc}
 800b172:	bf00      	nop
 800b174:	08022a08 	.word	0x08022a08
 800b178:	08022a98 	.word	0x08022a98
 800b17c:	08022b9c 	.word	0x08022b9c
 800b180:	08022be0 	.word	0x08022be0
 800b184:	08022c84 	.word	0x08022c84

0800b188 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800b188:	b580      	push	{r7, lr}
 800b18a:	b082      	sub	sp, #8
 800b18c:	af00      	add	r7, sp, #0
 800b18e:	6078      	str	r0, [r7, #4]
 800b190:	460b      	mov	r3, r1
 800b192:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800b194:	687b      	ldr	r3, [r7, #4]
 800b196:	681b      	ldr	r3, [r3, #0]
 800b198:	3324      	adds	r3, #36	; 0x24
 800b19a:	681b      	ldr	r3, [r3, #0]
 800b19c:	887a      	ldrh	r2, [r7, #2]
 800b19e:	4611      	mov	r1, r2
 800b1a0:	6878      	ldr	r0, [r7, #4]
 800b1a2:	4798      	blx	r3
 800b1a4:	4603      	mov	r3, r0
    }
 800b1a6:	4618      	mov	r0, r3
 800b1a8:	3708      	adds	r7, #8
 800b1aa:	46bd      	mov	sp, r7
 800b1ac:	bd80      	pop	{r7, pc}

0800b1ae <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>:
    T& at(const uint16_t index)
 800b1ae:	b580      	push	{r7, lr}
 800b1b0:	b082      	sub	sp, #8
 800b1b2:	af00      	add	r7, sp, #0
 800b1b4:	6078      	str	r0, [r7, #4]
 800b1b6:	460b      	mov	r3, r1
 800b1b8:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800b1ba:	687b      	ldr	r3, [r7, #4]
 800b1bc:	681b      	ldr	r3, [r3, #0]
 800b1be:	3324      	adds	r3, #36	; 0x24
 800b1c0:	681b      	ldr	r3, [r3, #0]
 800b1c2:	887a      	ldrh	r2, [r7, #2]
 800b1c4:	4611      	mov	r1, r2
 800b1c6:	6878      	ldr	r0, [r7, #4]
 800b1c8:	4798      	blx	r3
 800b1ca:	4603      	mov	r3, r0
    }
 800b1cc:	4618      	mov	r0, r3
 800b1ce:	3708      	adds	r7, #8
 800b1d0:	46bd      	mov	sp, r7
 800b1d2:	bd80      	pop	{r7, pc}

0800b1d4 <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>:
    T& at(const uint16_t index)
 800b1d4:	b580      	push	{r7, lr}
 800b1d6:	b082      	sub	sp, #8
 800b1d8:	af00      	add	r7, sp, #0
 800b1da:	6078      	str	r0, [r7, #4]
 800b1dc:	460b      	mov	r3, r1
 800b1de:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800b1e0:	687b      	ldr	r3, [r7, #4]
 800b1e2:	681b      	ldr	r3, [r3, #0]
 800b1e4:	3324      	adds	r3, #36	; 0x24
 800b1e6:	681b      	ldr	r3, [r3, #0]
 800b1e8:	887a      	ldrh	r2, [r7, #2]
 800b1ea:	4611      	mov	r1, r2
 800b1ec:	6878      	ldr	r0, [r7, #4]
 800b1ee:	4798      	blx	r3
 800b1f0:	4603      	mov	r3, r0
    }
 800b1f2:	4618      	mov	r0, r3
 800b1f4:	3708      	adds	r7, #8
 800b1f6:	46bd      	mov	sp, r7
 800b1f8:	bd80      	pop	{r7, pc}

0800b1fa <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800b1fa:	b480      	push	{r7}
 800b1fc:	b083      	sub	sp, #12
 800b1fe:	af00      	add	r7, sp, #0
 800b200:	6078      	str	r0, [r7, #4]
 800b202:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800b204:	687b      	ldr	r3, [r7, #4]
 800b206:	683a      	ldr	r2, [r7, #0]
 800b208:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800b20a:	bf00      	nop
 800b20c:	370c      	adds	r7, #12
 800b20e:	46bd      	mov	sp, r7
 800b210:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b214:	4770      	bx	lr
	...

0800b218 <_ZN8touchgfx12NoTransitionD1Ev>:
 800b218:	b580      	push	{r7, lr}
 800b21a:	b082      	sub	sp, #8
 800b21c:	af00      	add	r7, sp, #0
 800b21e:	6078      	str	r0, [r7, #4]
 800b220:	4a05      	ldr	r2, [pc, #20]	; (800b238 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800b222:	687b      	ldr	r3, [r7, #4]
 800b224:	601a      	str	r2, [r3, #0]
 800b226:	687b      	ldr	r3, [r7, #4]
 800b228:	4618      	mov	r0, r3
 800b22a:	f7ff fc33 	bl	800aa94 <_ZN8touchgfx10TransitionD1Ev>
 800b22e:	687b      	ldr	r3, [r7, #4]
 800b230:	4618      	mov	r0, r3
 800b232:	3708      	adds	r7, #8
 800b234:	46bd      	mov	sp, r7
 800b236:	bd80      	pop	{r7, pc}
 800b238:	08023a30 	.word	0x08023a30

0800b23c <_ZN8touchgfx12NoTransitionD0Ev>:
 800b23c:	b580      	push	{r7, lr}
 800b23e:	b082      	sub	sp, #8
 800b240:	af00      	add	r7, sp, #0
 800b242:	6078      	str	r0, [r7, #4]
 800b244:	6878      	ldr	r0, [r7, #4]
 800b246:	f7ff ffe7 	bl	800b218 <_ZN8touchgfx12NoTransitionD1Ev>
 800b24a:	210c      	movs	r1, #12
 800b24c:	6878      	ldr	r0, [r7, #4]
 800b24e:	f016 fb76 	bl	802193e <_ZdlPvj>
 800b252:	687b      	ldr	r3, [r7, #4]
 800b254:	4618      	mov	r0, r3
 800b256:	3708      	adds	r7, #8
 800b258:	46bd      	mov	sp, r7
 800b25a:	bd80      	pop	{r7, pc}

0800b25c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800b25c:	b580      	push	{r7, lr}
 800b25e:	b082      	sub	sp, #8
 800b260:	af00      	add	r7, sp, #0
 800b262:	6078      	str	r0, [r7, #4]
 800b264:	4a05      	ldr	r2, [pc, #20]	; (800b27c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800b266:	687b      	ldr	r3, [r7, #4]
 800b268:	601a      	str	r2, [r3, #0]
 800b26a:	687b      	ldr	r3, [r7, #4]
 800b26c:	4618      	mov	r0, r3
 800b26e:	f7ff fbb3 	bl	800a9d8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	4618      	mov	r0, r3
 800b276:	3708      	adds	r7, #8
 800b278:	46bd      	mov	sp, r7
 800b27a:	bd80      	pop	{r7, pc}
 800b27c:	08023aa8 	.word	0x08023aa8

0800b280 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800b280:	b580      	push	{r7, lr}
 800b282:	b082      	sub	sp, #8
 800b284:	af00      	add	r7, sp, #0
 800b286:	6078      	str	r0, [r7, #4]
 800b288:	6878      	ldr	r0, [r7, #4]
 800b28a:	f7ff ffe7 	bl	800b25c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800b28e:	2110      	movs	r1, #16
 800b290:	6878      	ldr	r0, [r7, #4]
 800b292:	f016 fb54 	bl	802193e <_ZdlPvj>
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	4618      	mov	r0, r3
 800b29a:	3708      	adds	r7, #8
 800b29c:	46bd      	mov	sp, r7
 800b29e:	bd80      	pop	{r7, pc}

0800b2a0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800b2a0:	b580      	push	{r7, lr}
 800b2a2:	b082      	sub	sp, #8
 800b2a4:	af00      	add	r7, sp, #0
 800b2a6:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800b2a8:	687b      	ldr	r3, [r7, #4]
 800b2aa:	685b      	ldr	r3, [r3, #4]
 800b2ac:	687a      	ldr	r2, [r7, #4]
 800b2ae:	68d2      	ldr	r2, [r2, #12]
 800b2b0:	1052      	asrs	r2, r2, #1
 800b2b2:	1899      	adds	r1, r3, r2
 800b2b4:	687b      	ldr	r3, [r7, #4]
 800b2b6:	68db      	ldr	r3, [r3, #12]
 800b2b8:	f003 0301 	and.w	r3, r3, #1
 800b2bc:	2b00      	cmp	r3, #0
 800b2be:	d102      	bne.n	800b2c6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800b2c0:	687b      	ldr	r3, [r7, #4]
 800b2c2:	689b      	ldr	r3, [r3, #8]
 800b2c4:	e00a      	b.n	800b2dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800b2c6:	687b      	ldr	r3, [r7, #4]
 800b2c8:	685b      	ldr	r3, [r3, #4]
 800b2ca:	687a      	ldr	r2, [r7, #4]
 800b2cc:	68d2      	ldr	r2, [r2, #12]
 800b2ce:	1052      	asrs	r2, r2, #1
 800b2d0:	4413      	add	r3, r2
 800b2d2:	681b      	ldr	r3, [r3, #0]
 800b2d4:	687a      	ldr	r2, [r7, #4]
 800b2d6:	6892      	ldr	r2, [r2, #8]
 800b2d8:	4413      	add	r3, r2
 800b2da:	681b      	ldr	r3, [r3, #0]
 800b2dc:	4608      	mov	r0, r1
 800b2de:	4798      	blx	r3
    }
 800b2e0:	bf00      	nop
 800b2e2:	3708      	adds	r7, #8
 800b2e4:	46bd      	mov	sp, r7
 800b2e6:	bd80      	pop	{r7, pc}

0800b2e8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800b2e8:	b480      	push	{r7}
 800b2ea:	b083      	sub	sp, #12
 800b2ec:	af00      	add	r7, sp, #0
 800b2ee:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800b2f0:	687b      	ldr	r3, [r7, #4]
 800b2f2:	685b      	ldr	r3, [r3, #4]
 800b2f4:	2b00      	cmp	r3, #0
 800b2f6:	d010      	beq.n	800b31a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	689b      	ldr	r3, [r3, #8]
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	d107      	bne.n	800b310 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800b300:	687b      	ldr	r3, [r7, #4]
 800b302:	68db      	ldr	r3, [r3, #12]
 800b304:	f003 0301 	and.w	r3, r3, #1
 800b308:	2b00      	cmp	r3, #0
 800b30a:	d101      	bne.n	800b310 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800b30c:	2301      	movs	r3, #1
 800b30e:	e000      	b.n	800b312 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800b310:	2300      	movs	r3, #0
 800b312:	2b01      	cmp	r3, #1
 800b314:	d001      	beq.n	800b31a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800b316:	2301      	movs	r3, #1
 800b318:	e000      	b.n	800b31c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800b31a:	2300      	movs	r3, #0
    }
 800b31c:	4618      	mov	r0, r3
 800b31e:	370c      	adds	r7, #12
 800b320:	46bd      	mov	sp, r7
 800b322:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b326:	4770      	bx	lr

0800b328 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800b328:	b480      	push	{r7}
 800b32a:	b083      	sub	sp, #12
 800b32c:	af00      	add	r7, sp, #0
 800b32e:	6078      	str	r0, [r7, #4]
 800b330:	6039      	str	r1, [r7, #0]
        : color(col)
 800b332:	687b      	ldr	r3, [r7, #4]
 800b334:	683a      	ldr	r2, [r7, #0]
 800b336:	601a      	str	r2, [r3, #0]
    {
    }
 800b338:	687b      	ldr	r3, [r7, #4]
 800b33a:	4618      	mov	r0, r3
 800b33c:	370c      	adds	r7, #12
 800b33e:	46bd      	mov	sp, r7
 800b340:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b344:	4770      	bx	lr

0800b346 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800b346:	b480      	push	{r7}
 800b348:	b083      	sub	sp, #12
 800b34a:	af00      	add	r7, sp, #0
 800b34c:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800b34e:	687b      	ldr	r3, [r7, #4]
 800b350:	2200      	movs	r2, #0
 800b352:	801a      	strh	r2, [r3, #0]
 800b354:	687b      	ldr	r3, [r7, #4]
 800b356:	2200      	movs	r2, #0
 800b358:	805a      	strh	r2, [r3, #2]
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	2200      	movs	r2, #0
 800b35e:	809a      	strh	r2, [r3, #4]
 800b360:	687b      	ldr	r3, [r7, #4]
 800b362:	2200      	movs	r2, #0
 800b364:	80da      	strh	r2, [r3, #6]
    {
    }
 800b366:	687b      	ldr	r3, [r7, #4]
 800b368:	4618      	mov	r0, r3
 800b36a:	370c      	adds	r7, #12
 800b36c:	46bd      	mov	sp, r7
 800b36e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b372:	4770      	bx	lr

0800b374 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800b374:	b480      	push	{r7}
 800b376:	b085      	sub	sp, #20
 800b378:	af00      	add	r7, sp, #0
 800b37a:	60f8      	str	r0, [r7, #12]
 800b37c:	4608      	mov	r0, r1
 800b37e:	4611      	mov	r1, r2
 800b380:	461a      	mov	r2, r3
 800b382:	4603      	mov	r3, r0
 800b384:	817b      	strh	r3, [r7, #10]
 800b386:	460b      	mov	r3, r1
 800b388:	813b      	strh	r3, [r7, #8]
 800b38a:	4613      	mov	r3, r2
 800b38c:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800b38e:	68fb      	ldr	r3, [r7, #12]
 800b390:	897a      	ldrh	r2, [r7, #10]
 800b392:	801a      	strh	r2, [r3, #0]
 800b394:	68fb      	ldr	r3, [r7, #12]
 800b396:	893a      	ldrh	r2, [r7, #8]
 800b398:	805a      	strh	r2, [r3, #2]
 800b39a:	68fb      	ldr	r3, [r7, #12]
 800b39c:	88fa      	ldrh	r2, [r7, #6]
 800b39e:	809a      	strh	r2, [r3, #4]
 800b3a0:	68fb      	ldr	r3, [r7, #12]
 800b3a2:	8b3a      	ldrh	r2, [r7, #24]
 800b3a4:	80da      	strh	r2, [r3, #6]
    {
    }
 800b3a6:	68fb      	ldr	r3, [r7, #12]
 800b3a8:	4618      	mov	r0, r3
 800b3aa:	3714      	adds	r7, #20
 800b3ac:	46bd      	mov	sp, r7
 800b3ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3b2:	4770      	bx	lr

0800b3b4 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800b3b4:	b580      	push	{r7, lr}
 800b3b6:	b082      	sub	sp, #8
 800b3b8:	af00      	add	r7, sp, #0
 800b3ba:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800b3bc:	4a14      	ldr	r2, [pc, #80]	; (800b410 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800b3be:	687b      	ldr	r3, [r7, #4]
 800b3c0:	601a      	str	r2, [r3, #0]
        : rect(),
 800b3c2:	687b      	ldr	r3, [r7, #4]
 800b3c4:	3304      	adds	r3, #4
 800b3c6:	4618      	mov	r0, r3
 800b3c8:	f7ff ffbd 	bl	800b346 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800b3cc:	687b      	ldr	r3, [r7, #4]
 800b3ce:	330c      	adds	r3, #12
 800b3d0:	4618      	mov	r0, r3
 800b3d2:	f7ff ffb8 	bl	800b346 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	2200      	movs	r2, #0
 800b3da:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800b3dc:	687b      	ldr	r3, [r7, #4]
 800b3de:	2200      	movs	r2, #0
 800b3e0:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800b3e2:	687b      	ldr	r3, [r7, #4]
 800b3e4:	2200      	movs	r2, #0
 800b3e6:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	2200      	movs	r2, #0
 800b3ec:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800b3ee:	687b      	ldr	r3, [r7, #4]
 800b3f0:	2200      	movs	r2, #0
 800b3f2:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800b3f4:	687b      	ldr	r3, [r7, #4]
 800b3f6:	2200      	movs	r2, #0
 800b3f8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	2201      	movs	r2, #1
 800b400:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800b404:	687b      	ldr	r3, [r7, #4]
 800b406:	4618      	mov	r0, r3
 800b408:	3708      	adds	r7, #8
 800b40a:	46bd      	mov	sp, r7
 800b40c:	bd80      	pop	{r7, pc}
 800b40e:	bf00      	nop
 800b410:	080244d0 	.word	0x080244d0

0800b414 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800b414:	b480      	push	{r7}
 800b416:	b083      	sub	sp, #12
 800b418:	af00      	add	r7, sp, #0
 800b41a:	6078      	str	r0, [r7, #4]
    {
 800b41c:	4a04      	ldr	r2, [pc, #16]	; (800b430 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800b41e:	687b      	ldr	r3, [r7, #4]
 800b420:	601a      	str	r2, [r3, #0]
    }
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	4618      	mov	r0, r3
 800b426:	370c      	adds	r7, #12
 800b428:	46bd      	mov	sp, r7
 800b42a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b42e:	4770      	bx	lr
 800b430:	080244d0 	.word	0x080244d0

0800b434 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800b434:	b580      	push	{r7, lr}
 800b436:	b082      	sub	sp, #8
 800b438:	af00      	add	r7, sp, #0
 800b43a:	6078      	str	r0, [r7, #4]
    }
 800b43c:	6878      	ldr	r0, [r7, #4]
 800b43e:	f7ff ffe9 	bl	800b414 <_ZN8touchgfx8DrawableD1Ev>
 800b442:	2128      	movs	r1, #40	; 0x28
 800b444:	6878      	ldr	r0, [r7, #4]
 800b446:	f016 fa7a 	bl	802193e <_ZdlPvj>
 800b44a:	687b      	ldr	r3, [r7, #4]
 800b44c:	4618      	mov	r0, r3
 800b44e:	3708      	adds	r7, #8
 800b450:	46bd      	mov	sp, r7
 800b452:	bd80      	pop	{r7, pc}

0800b454 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800b454:	b580      	push	{r7, lr}
 800b456:	b082      	sub	sp, #8
 800b458:	af00      	add	r7, sp, #0
 800b45a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800b45c:	687b      	ldr	r3, [r7, #4]
 800b45e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800b462:	2b00      	cmp	r3, #0
 800b464:	d005      	beq.n	800b472 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	681b      	ldr	r3, [r3, #0]
 800b46a:	3314      	adds	r3, #20
 800b46c:	681b      	ldr	r3, [r3, #0]
 800b46e:	6878      	ldr	r0, [r7, #4]
 800b470:	4798      	blx	r3
        }
    }
 800b472:	bf00      	nop
 800b474:	3708      	adds	r7, #8
 800b476:	46bd      	mov	sp, r7
 800b478:	bd80      	pop	{r7, pc}

0800b47a <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800b47a:	b480      	push	{r7}
 800b47c:	b083      	sub	sp, #12
 800b47e:	af00      	add	r7, sp, #0
 800b480:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800b482:	2300      	movs	r3, #0
    }
 800b484:	4618      	mov	r0, r3
 800b486:	370c      	adds	r7, #12
 800b488:	46bd      	mov	sp, r7
 800b48a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b48e:	4770      	bx	lr

0800b490 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800b490:	b580      	push	{r7, lr}
 800b492:	b084      	sub	sp, #16
 800b494:	af00      	add	r7, sp, #0
 800b496:	60f8      	str	r0, [r7, #12]
 800b498:	4608      	mov	r0, r1
 800b49a:	4611      	mov	r1, r2
 800b49c:	461a      	mov	r2, r3
 800b49e:	4603      	mov	r3, r0
 800b4a0:	817b      	strh	r3, [r7, #10]
 800b4a2:	460b      	mov	r3, r1
 800b4a4:	813b      	strh	r3, [r7, #8]
 800b4a6:	4613      	mov	r3, r2
 800b4a8:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800b4aa:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800b4ae:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800b4b2:	4619      	mov	r1, r3
 800b4b4:	68f8      	ldr	r0, [r7, #12]
 800b4b6:	f000 f82a 	bl	800b50e <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800b4ba:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800b4be:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800b4c2:	4619      	mov	r1, r3
 800b4c4:	68f8      	ldr	r0, [r7, #12]
 800b4c6:	f000 f87e 	bl	800b5c6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800b4ca:	bf00      	nop
 800b4cc:	3710      	adds	r7, #16
 800b4ce:	46bd      	mov	sp, r7
 800b4d0:	bd80      	pop	{r7, pc}

0800b4d2 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800b4d2:	b480      	push	{r7}
 800b4d4:	b083      	sub	sp, #12
 800b4d6:	af00      	add	r7, sp, #0
 800b4d8:	6078      	str	r0, [r7, #4]
 800b4da:	460b      	mov	r3, r1
 800b4dc:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	887a      	ldrh	r2, [r7, #2]
 800b4e2:	809a      	strh	r2, [r3, #4]
    }
 800b4e4:	bf00      	nop
 800b4e6:	370c      	adds	r7, #12
 800b4e8:	46bd      	mov	sp, r7
 800b4ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4ee:	4770      	bx	lr

0800b4f0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800b4f0:	b480      	push	{r7}
 800b4f2:	b083      	sub	sp, #12
 800b4f4:	af00      	add	r7, sp, #0
 800b4f6:	6078      	str	r0, [r7, #4]
 800b4f8:	460b      	mov	r3, r1
 800b4fa:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	887a      	ldrh	r2, [r7, #2]
 800b500:	80da      	strh	r2, [r3, #6]
    }
 800b502:	bf00      	nop
 800b504:	370c      	adds	r7, #12
 800b506:	46bd      	mov	sp, r7
 800b508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b50c:	4770      	bx	lr

0800b50e <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800b50e:	b580      	push	{r7, lr}
 800b510:	b082      	sub	sp, #8
 800b512:	af00      	add	r7, sp, #0
 800b514:	6078      	str	r0, [r7, #4]
 800b516:	460b      	mov	r3, r1
 800b518:	807b      	strh	r3, [r7, #2]
 800b51a:	4613      	mov	r3, r2
 800b51c:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800b51e:	687b      	ldr	r3, [r7, #4]
 800b520:	681b      	ldr	r3, [r3, #0]
 800b522:	3330      	adds	r3, #48	; 0x30
 800b524:	681b      	ldr	r3, [r3, #0]
 800b526:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800b52a:	4611      	mov	r1, r2
 800b52c:	6878      	ldr	r0, [r7, #4]
 800b52e:	4798      	blx	r3
        setY(y);
 800b530:	687b      	ldr	r3, [r7, #4]
 800b532:	681b      	ldr	r3, [r3, #0]
 800b534:	3334      	adds	r3, #52	; 0x34
 800b536:	681b      	ldr	r3, [r3, #0]
 800b538:	f9b7 2000 	ldrsh.w	r2, [r7]
 800b53c:	4611      	mov	r1, r2
 800b53e:	6878      	ldr	r0, [r7, #4]
 800b540:	4798      	blx	r3
    }
 800b542:	bf00      	nop
 800b544:	3708      	adds	r7, #8
 800b546:	46bd      	mov	sp, r7
 800b548:	bd80      	pop	{r7, pc}

0800b54a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800b54a:	b480      	push	{r7}
 800b54c:	b083      	sub	sp, #12
 800b54e:	af00      	add	r7, sp, #0
 800b550:	6078      	str	r0, [r7, #4]
 800b552:	460b      	mov	r3, r1
 800b554:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800b556:	687b      	ldr	r3, [r7, #4]
 800b558:	887a      	ldrh	r2, [r7, #2]
 800b55a:	811a      	strh	r2, [r3, #8]
    }
 800b55c:	bf00      	nop
 800b55e:	370c      	adds	r7, #12
 800b560:	46bd      	mov	sp, r7
 800b562:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b566:	4770      	bx	lr

0800b568 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800b568:	b480      	push	{r7}
 800b56a:	b083      	sub	sp, #12
 800b56c:	af00      	add	r7, sp, #0
 800b56e:	6078      	str	r0, [r7, #4]
 800b570:	460b      	mov	r3, r1
 800b572:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800b574:	687b      	ldr	r3, [r7, #4]
 800b576:	887a      	ldrh	r2, [r7, #2]
 800b578:	815a      	strh	r2, [r3, #10]
    }
 800b57a:	bf00      	nop
 800b57c:	370c      	adds	r7, #12
 800b57e:	46bd      	mov	sp, r7
 800b580:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b584:	4770      	bx	lr

0800b586 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800b586:	b480      	push	{r7}
 800b588:	b083      	sub	sp, #12
 800b58a:	af00      	add	r7, sp, #0
 800b58c:	6078      	str	r0, [r7, #4]
    {
    }
 800b58e:	bf00      	nop
 800b590:	370c      	adds	r7, #12
 800b592:	46bd      	mov	sp, r7
 800b594:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b598:	4770      	bx	lr

0800b59a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800b59a:	b480      	push	{r7}
 800b59c:	b083      	sub	sp, #12
 800b59e:	af00      	add	r7, sp, #0
 800b5a0:	6078      	str	r0, [r7, #4]
 800b5a2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b5a4:	bf00      	nop
 800b5a6:	370c      	adds	r7, #12
 800b5a8:	46bd      	mov	sp, r7
 800b5aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ae:	4770      	bx	lr

0800b5b0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800b5b0:	b480      	push	{r7}
 800b5b2:	b083      	sub	sp, #12
 800b5b4:	af00      	add	r7, sp, #0
 800b5b6:	6078      	str	r0, [r7, #4]
 800b5b8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b5ba:	bf00      	nop
 800b5bc:	370c      	adds	r7, #12
 800b5be:	46bd      	mov	sp, r7
 800b5c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5c4:	4770      	bx	lr

0800b5c6 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800b5c6:	b580      	push	{r7, lr}
 800b5c8:	b082      	sub	sp, #8
 800b5ca:	af00      	add	r7, sp, #0
 800b5cc:	6078      	str	r0, [r7, #4]
 800b5ce:	460b      	mov	r3, r1
 800b5d0:	807b      	strh	r3, [r7, #2]
 800b5d2:	4613      	mov	r3, r2
 800b5d4:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	681b      	ldr	r3, [r3, #0]
 800b5da:	3338      	adds	r3, #56	; 0x38
 800b5dc:	681b      	ldr	r3, [r3, #0]
 800b5de:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800b5e2:	4611      	mov	r1, r2
 800b5e4:	6878      	ldr	r0, [r7, #4]
 800b5e6:	4798      	blx	r3
        setHeight(height);
 800b5e8:	687b      	ldr	r3, [r7, #4]
 800b5ea:	681b      	ldr	r3, [r3, #0]
 800b5ec:	333c      	adds	r3, #60	; 0x3c
 800b5ee:	681b      	ldr	r3, [r3, #0]
 800b5f0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800b5f4:	4611      	mov	r1, r2
 800b5f6:	6878      	ldr	r0, [r7, #4]
 800b5f8:	4798      	blx	r3
    }
 800b5fa:	bf00      	nop
 800b5fc:	3708      	adds	r7, #8
 800b5fe:	46bd      	mov	sp, r7
 800b600:	bd80      	pop	{r7, pc}

0800b602 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800b602:	b480      	push	{r7}
 800b604:	b083      	sub	sp, #12
 800b606:	af00      	add	r7, sp, #0
 800b608:	6078      	str	r0, [r7, #4]
 800b60a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b60c:	bf00      	nop
 800b60e:	370c      	adds	r7, #12
 800b610:	46bd      	mov	sp, r7
 800b612:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b616:	4770      	bx	lr

0800b618 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800b618:	b480      	push	{r7}
 800b61a:	b083      	sub	sp, #12
 800b61c:	af00      	add	r7, sp, #0
 800b61e:	6078      	str	r0, [r7, #4]
    {
    }
 800b620:	bf00      	nop
 800b622:	370c      	adds	r7, #12
 800b624:	46bd      	mov	sp, r7
 800b626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b62a:	4770      	bx	lr

0800b62c <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800b62c:	b480      	push	{r7}
 800b62e:	b083      	sub	sp, #12
 800b630:	af00      	add	r7, sp, #0
 800b632:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800b634:	687b      	ldr	r3, [r7, #4]
 800b636:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800b63a:	4618      	mov	r0, r3
 800b63c:	370c      	adds	r7, #12
 800b63e:	46bd      	mov	sp, r7
 800b640:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b644:	4770      	bx	lr

0800b646 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800b646:	b480      	push	{r7}
 800b648:	b083      	sub	sp, #12
 800b64a:	af00      	add	r7, sp, #0
 800b64c:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800b654:	4618      	mov	r0, r3
 800b656:	370c      	adds	r7, #12
 800b658:	46bd      	mov	sp, r7
 800b65a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b65e:	4770      	bx	lr

0800b660 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800b660:	b580      	push	{r7, lr}
 800b662:	b082      	sub	sp, #8
 800b664:	af00      	add	r7, sp, #0
 800b666:	6078      	str	r0, [r7, #4]
 800b668:	460b      	mov	r3, r1
 800b66a:	807b      	strh	r3, [r7, #2]
 800b66c:	4613      	mov	r3, r2
 800b66e:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800b670:	687b      	ldr	r3, [r7, #4]
 800b672:	681b      	ldr	r3, [r3, #0]
 800b674:	3354      	adds	r3, #84	; 0x54
 800b676:	681b      	ldr	r3, [r3, #0]
 800b678:	8879      	ldrh	r1, [r7, #2]
 800b67a:	687a      	ldr	r2, [r7, #4]
 800b67c:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800b680:	b292      	uxth	r2, r2
 800b682:	1a8a      	subs	r2, r1, r2
 800b684:	b292      	uxth	r2, r2
 800b686:	b210      	sxth	r0, r2
 800b688:	8839      	ldrh	r1, [r7, #0]
 800b68a:	687a      	ldr	r2, [r7, #4]
 800b68c:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800b690:	b292      	uxth	r2, r2
 800b692:	1a8a      	subs	r2, r1, r2
 800b694:	b292      	uxth	r2, r2
 800b696:	b212      	sxth	r2, r2
 800b698:	4601      	mov	r1, r0
 800b69a:	6878      	ldr	r0, [r7, #4]
 800b69c:	4798      	blx	r3
    }
 800b69e:	bf00      	nop
 800b6a0:	3708      	adds	r7, #8
 800b6a2:	46bd      	mov	sp, r7
 800b6a4:	bd80      	pop	{r7, pc}

0800b6a6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800b6a6:	b480      	push	{r7}
 800b6a8:	b083      	sub	sp, #12
 800b6aa:	af00      	add	r7, sp, #0
 800b6ac:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800b6ae:	687b      	ldr	r3, [r7, #4]
 800b6b0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b6b4:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b6bc:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b6c4:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800b6c6:	bf00      	nop
 800b6c8:	370c      	adds	r7, #12
 800b6ca:	46bd      	mov	sp, r7
 800b6cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6d0:	4770      	bx	lr

0800b6d2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800b6d2:	b580      	push	{r7, lr}
 800b6d4:	b084      	sub	sp, #16
 800b6d6:	af00      	add	r7, sp, #0
 800b6d8:	60f8      	str	r0, [r7, #12]
 800b6da:	60b9      	str	r1, [r7, #8]
 800b6dc:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800b6de:	68f8      	ldr	r0, [r7, #12]
 800b6e0:	f7ff ffe1 	bl	800b6a6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800b6e4:	687b      	ldr	r3, [r7, #4]
 800b6e6:	681a      	ldr	r2, [r3, #0]
 800b6e8:	68fb      	ldr	r3, [r7, #12]
 800b6ea:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800b6ec:	687b      	ldr	r3, [r7, #4]
 800b6ee:	68fa      	ldr	r2, [r7, #12]
 800b6f0:	601a      	str	r2, [r3, #0]
    }
 800b6f2:	bf00      	nop
 800b6f4:	3710      	adds	r7, #16
 800b6f6:	46bd      	mov	sp, r7
 800b6f8:	bd80      	pop	{r7, pc}
	...

0800b6fc <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800b6fc:	b580      	push	{r7, lr}
 800b6fe:	b082      	sub	sp, #8
 800b700:	af00      	add	r7, sp, #0
 800b702:	6078      	str	r0, [r7, #4]
    {
 800b704:	4a06      	ldr	r2, [pc, #24]	; (800b720 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	601a      	str	r2, [r3, #0]
 800b70a:	687b      	ldr	r3, [r7, #4]
 800b70c:	3304      	adds	r3, #4
 800b70e:	4618      	mov	r0, r3
 800b710:	f000 fab2 	bl	800bc78 <_ZN8touchgfx9ContainerD1Ev>
    }
 800b714:	687b      	ldr	r3, [r7, #4]
 800b716:	4618      	mov	r0, r3
 800b718:	3708      	adds	r7, #8
 800b71a:	46bd      	mov	sp, r7
 800b71c:	bd80      	pop	{r7, pc}
 800b71e:	bf00      	nop
 800b720:	080245d4 	.word	0x080245d4

0800b724 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800b724:	b580      	push	{r7, lr}
 800b726:	b082      	sub	sp, #8
 800b728:	af00      	add	r7, sp, #0
 800b72a:	6078      	str	r0, [r7, #4]
    }
 800b72c:	6878      	ldr	r0, [r7, #4]
 800b72e:	f7ff ffe5 	bl	800b6fc <_ZN8touchgfx6ScreenD1Ev>
 800b732:	213c      	movs	r1, #60	; 0x3c
 800b734:	6878      	ldr	r0, [r7, #4]
 800b736:	f016 f902 	bl	802193e <_ZdlPvj>
 800b73a:	687b      	ldr	r3, [r7, #4]
 800b73c:	4618      	mov	r0, r3
 800b73e:	3708      	adds	r7, #8
 800b740:	46bd      	mov	sp, r7
 800b742:	bd80      	pop	{r7, pc}

0800b744 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800b744:	b480      	push	{r7}
 800b746:	b083      	sub	sp, #12
 800b748:	af00      	add	r7, sp, #0
 800b74a:	6078      	str	r0, [r7, #4]
    {
    }
 800b74c:	bf00      	nop
 800b74e:	370c      	adds	r7, #12
 800b750:	46bd      	mov	sp, r7
 800b752:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b756:	4770      	bx	lr

0800b758 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800b758:	b480      	push	{r7}
 800b75a:	b083      	sub	sp, #12
 800b75c:	af00      	add	r7, sp, #0
 800b75e:	6078      	str	r0, [r7, #4]
    {
    }
 800b760:	bf00      	nop
 800b762:	370c      	adds	r7, #12
 800b764:	46bd      	mov	sp, r7
 800b766:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b76a:	4770      	bx	lr

0800b76c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800b76c:	b480      	push	{r7}
 800b76e:	b083      	sub	sp, #12
 800b770:	af00      	add	r7, sp, #0
 800b772:	6078      	str	r0, [r7, #4]
    {
    }
 800b774:	bf00      	nop
 800b776:	370c      	adds	r7, #12
 800b778:	46bd      	mov	sp, r7
 800b77a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b77e:	4770      	bx	lr

0800b780 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800b780:	b480      	push	{r7}
 800b782:	b083      	sub	sp, #12
 800b784:	af00      	add	r7, sp, #0
 800b786:	6078      	str	r0, [r7, #4]
    {
    }
 800b788:	bf00      	nop
 800b78a:	370c      	adds	r7, #12
 800b78c:	46bd      	mov	sp, r7
 800b78e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b792:	4770      	bx	lr

0800b794 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800b794:	b480      	push	{r7}
 800b796:	b083      	sub	sp, #12
 800b798:	af00      	add	r7, sp, #0
 800b79a:	6078      	str	r0, [r7, #4]
 800b79c:	460b      	mov	r3, r1
 800b79e:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800b7a0:	bf00      	nop
 800b7a2:	370c      	adds	r7, #12
 800b7a4:	46bd      	mov	sp, r7
 800b7a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7aa:	4770      	bx	lr

0800b7ac <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800b7ac:	b580      	push	{r7, lr}
 800b7ae:	b082      	sub	sp, #8
 800b7b0:	af00      	add	r7, sp, #0
 800b7b2:	6078      	str	r0, [r7, #4]
 800b7b4:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800b7b6:	687b      	ldr	r3, [r7, #4]
 800b7b8:	3304      	adds	r3, #4
 800b7ba:	6839      	ldr	r1, [r7, #0]
 800b7bc:	4618      	mov	r0, r3
 800b7be:	f002 fd3d 	bl	800e23c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800b7c2:	bf00      	nop
 800b7c4:	3708      	adds	r7, #8
 800b7c6:	46bd      	mov	sp, r7
 800b7c8:	bd80      	pop	{r7, pc}

0800b7ca <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800b7ca:	b580      	push	{r7, lr}
 800b7cc:	b084      	sub	sp, #16
 800b7ce:	af00      	add	r7, sp, #0
 800b7d0:	60f8      	str	r0, [r7, #12]
 800b7d2:	607b      	str	r3, [r7, #4]
 800b7d4:	460b      	mov	r3, r1
 800b7d6:	817b      	strh	r3, [r7, #10]
 800b7d8:	4613      	mov	r3, r2
 800b7da:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800b7dc:	68fb      	ldr	r3, [r7, #12]
 800b7de:	4618      	mov	r0, r3
 800b7e0:	f7ff ff24 	bl	800b62c <_ZNK8touchgfx8Drawable9isVisibleEv>
 800b7e4:	4603      	mov	r3, r0
 800b7e6:	2b00      	cmp	r3, #0
 800b7e8:	d008      	beq.n	800b7fc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800b7ea:	68fb      	ldr	r3, [r7, #12]
 800b7ec:	4618      	mov	r0, r3
 800b7ee:	f7ff ff2a 	bl	800b646 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800b7f2:	4603      	mov	r3, r0
 800b7f4:	2b00      	cmp	r3, #0
 800b7f6:	d001      	beq.n	800b7fc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800b7f8:	2301      	movs	r3, #1
 800b7fa:	e000      	b.n	800b7fe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800b7fc:	2300      	movs	r3, #0
 800b7fe:	2b00      	cmp	r3, #0
 800b800:	d002      	beq.n	800b808 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800b802:	68fa      	ldr	r2, [r7, #12]
 800b804:	687b      	ldr	r3, [r7, #4]
 800b806:	601a      	str	r2, [r3, #0]
        }
    }
 800b808:	bf00      	nop
 800b80a:	3710      	adds	r7, #16
 800b80c:	46bd      	mov	sp, r7
 800b80e:	bd80      	pop	{r7, pc}

0800b810 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800b810:	b580      	push	{r7, lr}
 800b812:	b082      	sub	sp, #8
 800b814:	af00      	add	r7, sp, #0
 800b816:	6078      	str	r0, [r7, #4]
 800b818:	687b      	ldr	r3, [r7, #4]
 800b81a:	4618      	mov	r0, r3
 800b81c:	f7ff fdca 	bl	800b3b4 <_ZN8touchgfx8DrawableC1Ev>
 800b820:	4a03      	ldr	r2, [pc, #12]	; (800b830 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800b822:	687b      	ldr	r3, [r7, #4]
 800b824:	601a      	str	r2, [r3, #0]
 800b826:	687b      	ldr	r3, [r7, #4]
 800b828:	4618      	mov	r0, r3
 800b82a:	3708      	adds	r7, #8
 800b82c:	46bd      	mov	sp, r7
 800b82e:	bd80      	pop	{r7, pc}
 800b830:	08023be0 	.word	0x08023be0

0800b834 <_ZN8touchgfx6WidgetD1Ev>:
 800b834:	b580      	push	{r7, lr}
 800b836:	b082      	sub	sp, #8
 800b838:	af00      	add	r7, sp, #0
 800b83a:	6078      	str	r0, [r7, #4]
 800b83c:	4a05      	ldr	r2, [pc, #20]	; (800b854 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800b83e:	687b      	ldr	r3, [r7, #4]
 800b840:	601a      	str	r2, [r3, #0]
 800b842:	687b      	ldr	r3, [r7, #4]
 800b844:	4618      	mov	r0, r3
 800b846:	f7ff fde5 	bl	800b414 <_ZN8touchgfx8DrawableD1Ev>
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	4618      	mov	r0, r3
 800b84e:	3708      	adds	r7, #8
 800b850:	46bd      	mov	sp, r7
 800b852:	bd80      	pop	{r7, pc}
 800b854:	08023be0 	.word	0x08023be0

0800b858 <_ZN8touchgfx6WidgetD0Ev>:
 800b858:	b580      	push	{r7, lr}
 800b85a:	b082      	sub	sp, #8
 800b85c:	af00      	add	r7, sp, #0
 800b85e:	6078      	str	r0, [r7, #4]
 800b860:	6878      	ldr	r0, [r7, #4]
 800b862:	f7ff ffe7 	bl	800b834 <_ZN8touchgfx6WidgetD1Ev>
 800b866:	2128      	movs	r1, #40	; 0x28
 800b868:	6878      	ldr	r0, [r7, #4]
 800b86a:	f016 f868 	bl	802193e <_ZdlPvj>
 800b86e:	687b      	ldr	r3, [r7, #4]
 800b870:	4618      	mov	r0, r3
 800b872:	3708      	adds	r7, #8
 800b874:	46bd      	mov	sp, r7
 800b876:	bd80      	pop	{r7, pc}

0800b878 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800b878:	b580      	push	{r7, lr}
 800b87a:	b082      	sub	sp, #8
 800b87c:	af00      	add	r7, sp, #0
 800b87e:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800b880:	687b      	ldr	r3, [r7, #4]
 800b882:	4618      	mov	r0, r3
 800b884:	2326      	movs	r3, #38	; 0x26
 800b886:	461a      	mov	r2, r3
 800b888:	2100      	movs	r1, #0
 800b88a:	f016 fa8c 	bl	8021da6 <memset>
 800b88e:	687b      	ldr	r3, [r7, #4]
 800b890:	4618      	mov	r0, r3
 800b892:	f7ff ffbd 	bl	800b810 <_ZN8touchgfx6WidgetC1Ev>
 800b896:	4a09      	ldr	r2, [pc, #36]	; (800b8bc <_ZN8touchgfx3BoxC1Ev+0x44>)
 800b898:	687b      	ldr	r3, [r7, #4]
 800b89a:	601a      	str	r2, [r3, #0]
 800b89c:	687b      	ldr	r3, [r7, #4]
 800b89e:	22ff      	movs	r2, #255	; 0xff
 800b8a0:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	3328      	adds	r3, #40	; 0x28
 800b8a8:	2100      	movs	r1, #0
 800b8aa:	4618      	mov	r0, r3
 800b8ac:	f7ff fd3c 	bl	800b328 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800b8b0:	687b      	ldr	r3, [r7, #4]
 800b8b2:	4618      	mov	r0, r3
 800b8b4:	3708      	adds	r7, #8
 800b8b6:	46bd      	mov	sp, r7
 800b8b8:	bd80      	pop	{r7, pc}
 800b8ba:	bf00      	nop
 800b8bc:	080243bc 	.word	0x080243bc

0800b8c0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800b8c0:	b480      	push	{r7}
 800b8c2:	b083      	sub	sp, #12
 800b8c4:	af00      	add	r7, sp, #0
 800b8c6:	6078      	str	r0, [r7, #4]
 800b8c8:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800b8ca:	687b      	ldr	r3, [r7, #4]
 800b8cc:	683a      	ldr	r2, [r7, #0]
 800b8ce:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800b8d0:	bf00      	nop
 800b8d2:	370c      	adds	r7, #12
 800b8d4:	46bd      	mov	sp, r7
 800b8d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8da:	4770      	bx	lr

0800b8dc <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800b8dc:	b480      	push	{r7}
 800b8de:	b083      	sub	sp, #12
 800b8e0:	af00      	add	r7, sp, #0
 800b8e2:	6078      	str	r0, [r7, #4]
 800b8e4:	460b      	mov	r3, r1
 800b8e6:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800b8e8:	4a06      	ldr	r2, [pc, #24]	; (800b904 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800b8ea:	687b      	ldr	r3, [r7, #4]
 800b8ec:	601a      	str	r2, [r3, #0]
 800b8ee:	687b      	ldr	r3, [r7, #4]
 800b8f0:	887a      	ldrh	r2, [r7, #2]
 800b8f2:	809a      	strh	r2, [r3, #4]
    }
 800b8f4:	687b      	ldr	r3, [r7, #4]
 800b8f6:	4618      	mov	r0, r3
 800b8f8:	370c      	adds	r7, #12
 800b8fa:	46bd      	mov	sp, r7
 800b8fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b900:	4770      	bx	lr
 800b902:	bf00      	nop
 800b904:	080239c0 	.word	0x080239c0

0800b908 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800b908:	b580      	push	{r7, lr}
 800b90a:	b082      	sub	sp, #8
 800b90c:	af00      	add	r7, sp, #0
 800b90e:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800b910:	687b      	ldr	r3, [r7, #4]
 800b912:	4618      	mov	r0, r3
 800b914:	2326      	movs	r3, #38	; 0x26
 800b916:	461a      	mov	r2, r3
 800b918:	2100      	movs	r1, #0
 800b91a:	f016 fa44 	bl	8021da6 <memset>
 800b91e:	687b      	ldr	r3, [r7, #4]
 800b920:	4618      	mov	r0, r3
 800b922:	f7ff ff75 	bl	800b810 <_ZN8touchgfx6WidgetC1Ev>
 800b926:	4a16      	ldr	r2, [pc, #88]	; (800b980 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800b928:	687b      	ldr	r3, [r7, #4]
 800b92a:	601a      	str	r2, [r3, #0]
 800b92c:	687b      	ldr	r3, [r7, #4]
 800b92e:	3328      	adds	r3, #40	; 0x28
 800b930:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b934:	4618      	mov	r0, r3
 800b936:	f7ff ffd1 	bl	800b8dc <_ZN8touchgfx9TypedTextC1Et>
 800b93a:	687b      	ldr	r3, [r7, #4]
 800b93c:	3330      	adds	r3, #48	; 0x30
 800b93e:	2100      	movs	r1, #0
 800b940:	4618      	mov	r0, r3
 800b942:	f7ff fcf1 	bl	800b328 <_ZN8touchgfx9colortypeC1Em>
 800b946:	687b      	ldr	r3, [r7, #4]
 800b948:	2200      	movs	r2, #0
 800b94a:	869a      	strh	r2, [r3, #52]	; 0x34
 800b94c:	687b      	ldr	r3, [r7, #4]
 800b94e:	22ff      	movs	r2, #255	; 0xff
 800b950:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800b954:	687b      	ldr	r3, [r7, #4]
 800b956:	2200      	movs	r2, #0
 800b958:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800b95c:	687b      	ldr	r3, [r7, #4]
 800b95e:	2200      	movs	r2, #0
 800b960:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800b964:	687b      	ldr	r3, [r7, #4]
 800b966:	2200      	movs	r2, #0
 800b968:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800b96c:	687b      	ldr	r3, [r7, #4]
 800b96e:	333c      	adds	r3, #60	; 0x3c
 800b970:	4618      	mov	r0, r3
 800b972:	f000 f807 	bl	800b984 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	4618      	mov	r0, r3
 800b97a:	3708      	adds	r7, #8
 800b97c:	46bd      	mov	sp, r7
 800b97e:	bd80      	pop	{r7, pc}
 800b980:	0802432c 	.word	0x0802432c

0800b984 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800b984:	b580      	push	{r7, lr}
 800b986:	b084      	sub	sp, #16
 800b988:	af02      	add	r7, sp, #8
 800b98a:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800b98c:	6878      	ldr	r0, [r7, #4]
 800b98e:	f04f 33ff 	mov.w	r3, #4294967295
 800b992:	9300      	str	r3, [sp, #0]
 800b994:	f04f 33ff 	mov.w	r3, #4294967295
 800b998:	2200      	movs	r2, #0
 800b99a:	2100      	movs	r1, #0
 800b99c:	f7ff fcea 	bl	800b374 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	2200      	movs	r2, #0
 800b9a4:	609a      	str	r2, [r3, #8]
        {
        }
 800b9a6:	687b      	ldr	r3, [r7, #4]
 800b9a8:	4618      	mov	r0, r3
 800b9aa:	3708      	adds	r7, #8
 800b9ac:	46bd      	mov	sp, r7
 800b9ae:	bd80      	pop	{r7, pc}

0800b9b0 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>:
class View : public Screen
 800b9b0:	b580      	push	{r7, lr}
 800b9b2:	b082      	sub	sp, #8
 800b9b4:	af00      	add	r7, sp, #0
 800b9b6:	6078      	str	r0, [r7, #4]
 800b9b8:	4a05      	ldr	r2, [pc, #20]	; (800b9d0 <_ZN8touchgfx4ViewI15screenPresenterED1Ev+0x20>)
 800b9ba:	687b      	ldr	r3, [r7, #4]
 800b9bc:	601a      	str	r2, [r3, #0]
 800b9be:	687b      	ldr	r3, [r7, #4]
 800b9c0:	4618      	mov	r0, r3
 800b9c2:	f7ff fe9b 	bl	800b6fc <_ZN8touchgfx6ScreenD1Ev>
 800b9c6:	687b      	ldr	r3, [r7, #4]
 800b9c8:	4618      	mov	r0, r3
 800b9ca:	3708      	adds	r7, #8
 800b9cc:	46bd      	mov	sp, r7
 800b9ce:	bd80      	pop	{r7, pc}
 800b9d0:	08023bac 	.word	0x08023bac

0800b9d4 <_ZN8touchgfx4ViewI15screenPresenterED0Ev>:
 800b9d4:	b580      	push	{r7, lr}
 800b9d6:	b082      	sub	sp, #8
 800b9d8:	af00      	add	r7, sp, #0
 800b9da:	6078      	str	r0, [r7, #4]
 800b9dc:	6878      	ldr	r0, [r7, #4]
 800b9de:	f7ff ffe7 	bl	800b9b0 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 800b9e2:	2140      	movs	r1, #64	; 0x40
 800b9e4:	6878      	ldr	r0, [r7, #4]
 800b9e6:	f015 ffaa 	bl	802193e <_ZdlPvj>
 800b9ea:	687b      	ldr	r3, [r7, #4]
 800b9ec:	4618      	mov	r0, r3
 800b9ee:	3708      	adds	r7, #8
 800b9f0:	46bd      	mov	sp, r7
 800b9f2:	bd80      	pop	{r7, pc}

0800b9f4 <_ZN14screenViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase()
 800b9f4:	b590      	push	{r4, r7, lr}
 800b9f6:	b095      	sub	sp, #84	; 0x54
 800b9f8:	af02      	add	r7, sp, #8
 800b9fa:	6178      	str	r0, [r7, #20]
 800b9fc:	697b      	ldr	r3, [r7, #20]
 800b9fe:	4618      	mov	r0, r3
 800ba00:	f000 f924 	bl	800bc4c <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>
 800ba04:	4a72      	ldr	r2, [pc, #456]	; (800bbd0 <_ZN14screenViewBaseC1Ev+0x1dc>)
 800ba06:	697b      	ldr	r3, [r7, #20]
 800ba08:	601a      	str	r2, [r3, #0]
 800ba0a:	697b      	ldr	r3, [r7, #20]
 800ba0c:	3340      	adds	r3, #64	; 0x40
 800ba0e:	4618      	mov	r0, r3
 800ba10:	f7ff ff32 	bl	800b878 <_ZN8touchgfx3BoxC1Ev>
 800ba14:	697b      	ldr	r3, [r7, #20]
 800ba16:	336c      	adds	r3, #108	; 0x6c
 800ba18:	4618      	mov	r0, r3
 800ba1a:	f7ff ff2d 	bl	800b878 <_ZN8touchgfx3BoxC1Ev>
 800ba1e:	697b      	ldr	r3, [r7, #20]
 800ba20:	3398      	adds	r3, #152	; 0x98
 800ba22:	4618      	mov	r0, r3
 800ba24:	f7ff ff70 	bl	800b908 <_ZN8touchgfx8TextAreaC1Ev>
{
    __background.setPosition(0, 0, 320, 240);
 800ba28:	697b      	ldr	r3, [r7, #20]
 800ba2a:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800ba2e:	23f0      	movs	r3, #240	; 0xf0
 800ba30:	9300      	str	r3, [sp, #0]
 800ba32:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ba36:	2200      	movs	r2, #0
 800ba38:	2100      	movs	r1, #0
 800ba3a:	f7ff fd29 	bl	800b490 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800ba3e:	697b      	ldr	r3, [r7, #20]
 800ba40:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800ba44:	2300      	movs	r3, #0
 800ba46:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 800ba4a:	2300      	movs	r3, #0
 800ba4c:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 800ba50:	2300      	movs	r3, #0
 800ba52:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800ba56:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 800ba5a:	041b      	lsls	r3, r3, #16
 800ba5c:	461a      	mov	r2, r3
 800ba5e:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800ba62:	021b      	lsls	r3, r3, #8
 800ba64:	431a      	orrs	r2, r3
 800ba66:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 800ba6a:	4313      	orrs	r3, r2
 800ba6c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ba70:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800ba74:	4611      	mov	r1, r2
 800ba76:	4618      	mov	r0, r3
 800ba78:	f7ff fc56 	bl	800b328 <_ZN8touchgfx9colortypeC1Em>
 800ba7c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ba7e:	4619      	mov	r1, r3
 800ba80:	4620      	mov	r0, r4
 800ba82:	f7ff ff1d 	bl	800b8c0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800ba86:	697a      	ldr	r2, [r7, #20]
 800ba88:	697b      	ldr	r3, [r7, #20]
 800ba8a:	3340      	adds	r3, #64	; 0x40
 800ba8c:	4619      	mov	r1, r3
 800ba8e:	4610      	mov	r0, r2
 800ba90:	f7ff fe8c 	bl	800b7ac <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box1.setPosition(0, 0, 320, 240);
 800ba94:	697b      	ldr	r3, [r7, #20]
 800ba96:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800ba9a:	23f0      	movs	r3, #240	; 0xf0
 800ba9c:	9300      	str	r3, [sp, #0]
 800ba9e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800baa2:	2200      	movs	r2, #0
 800baa4:	2100      	movs	r1, #0
 800baa6:	f7ff fcf3 	bl	800b490 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800baaa:	697b      	ldr	r3, [r7, #20]
 800baac:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800bab0:	23ff      	movs	r3, #255	; 0xff
 800bab2:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 800bab6:	23ff      	movs	r3, #255	; 0xff
 800bab8:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800babc:	23ff      	movs	r3, #255	; 0xff
 800babe:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 800bac2:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 800bac6:	041b      	lsls	r3, r3, #16
 800bac8:	461a      	mov	r2, r3
 800baca:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800bace:	021b      	lsls	r3, r3, #8
 800bad0:	431a      	orrs	r2, r3
 800bad2:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800bad6:	4313      	orrs	r3, r2
 800bad8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800badc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800bae0:	4611      	mov	r1, r2
 800bae2:	4618      	mov	r0, r3
 800bae4:	f7ff fc20 	bl	800b328 <_ZN8touchgfx9colortypeC1Em>
 800bae8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800baea:	4619      	mov	r1, r3
 800baec:	4620      	mov	r0, r4
 800baee:	f7ff fee7 	bl	800b8c0 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box1);
 800baf2:	697a      	ldr	r2, [r7, #20]
 800baf4:	697b      	ldr	r3, [r7, #20]
 800baf6:	336c      	adds	r3, #108	; 0x6c
 800baf8:	4619      	mov	r1, r3
 800bafa:	4610      	mov	r0, r2
 800bafc:	f7ff fe56 	bl	800b7ac <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(87, 86);
 800bb00:	697b      	ldr	r3, [r7, #20]
 800bb02:	3398      	adds	r3, #152	; 0x98
 800bb04:	2256      	movs	r2, #86	; 0x56
 800bb06:	2157      	movs	r1, #87	; 0x57
 800bb08:	4618      	mov	r0, r3
 800bb0a:	f7ff fd00 	bl	800b50e <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800bb0e:	697b      	ldr	r3, [r7, #20]
 800bb10:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800bb14:	2300      	movs	r3, #0
 800bb16:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 800bb1a:	2300      	movs	r3, #0
 800bb1c:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 800bb20:	2300      	movs	r3, #0
 800bb22:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 800bb26:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800bb2a:	041b      	lsls	r3, r3, #16
 800bb2c:	461a      	mov	r2, r3
 800bb2e:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 800bb32:	021b      	lsls	r3, r3, #8
 800bb34:	431a      	orrs	r2, r3
 800bb36:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 800bb3a:	4313      	orrs	r3, r2
 800bb3c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800bb40:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800bb44:	4611      	mov	r1, r2
 800bb46:	4618      	mov	r0, r3
 800bb48:	f7ff fbee 	bl	800b328 <_ZN8touchgfx9colortypeC1Em>
 800bb4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bb4e:	63fc      	str	r4, [r7, #60]	; 0x3c
 800bb50:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800bb52:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800bb54:	69ba      	ldr	r2, [r7, #24]
 800bb56:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800bb58:	bf00      	nop
    textArea1.setLinespacing(0);
 800bb5a:	697b      	ldr	r3, [r7, #20]
 800bb5c:	3398      	adds	r3, #152	; 0x98
 800bb5e:	647b      	str	r3, [r7, #68]	; 0x44
 800bb60:	2300      	movs	r3, #0
 800bb62:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
        linespace = space;
 800bb66:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800bb68:	f8b7 2042 	ldrh.w	r2, [r7, #66]	; 0x42
 800bb6c:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800bb6e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800bb70:	681b      	ldr	r3, [r3, #0]
 800bb72:	3384      	adds	r3, #132	; 0x84
 800bb74:	681b      	ldr	r3, [r3, #0]
 800bb76:	6c7c      	ldr	r4, [r7, #68]	; 0x44
 800bb78:	463a      	mov	r2, r7
 800bb7a:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800bb7c:	4610      	mov	r0, r2
 800bb7e:	4798      	blx	r3
 800bb80:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800bb84:	463a      	mov	r2, r7
 800bb86:	ca07      	ldmia	r2, {r0, r1, r2}
 800bb88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800bb8c:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8Z2S));
 800bb8e:	697b      	ldr	r3, [r7, #20]
 800bb90:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800bb94:	f107 031c 	add.w	r3, r7, #28
 800bb98:	2100      	movs	r1, #0
 800bb9a:	4618      	mov	r0, r3
 800bb9c:	f7ff fe9e 	bl	800b8dc <_ZN8touchgfx9TypedTextC1Et>
 800bba0:	f107 031c 	add.w	r3, r7, #28
 800bba4:	4619      	mov	r1, r3
 800bba6:	4620      	mov	r0, r4
 800bba8:	f004 f88e 	bl	800fcc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800bbac:	f107 031c 	add.w	r3, r7, #28
 800bbb0:	4618      	mov	r0, r3
 800bbb2:	f7fe fc85 	bl	800a4c0 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800bbb6:	697a      	ldr	r2, [r7, #20]
 800bbb8:	697b      	ldr	r3, [r7, #20]
 800bbba:	3398      	adds	r3, #152	; 0x98
 800bbbc:	4619      	mov	r1, r3
 800bbbe:	4610      	mov	r0, r2
 800bbc0:	f7ff fdf4 	bl	800b7ac <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800bbc4:	697b      	ldr	r3, [r7, #20]
 800bbc6:	4618      	mov	r0, r3
 800bbc8:	374c      	adds	r7, #76	; 0x4c
 800bbca:	46bd      	mov	sp, r7
 800bbcc:	bd90      	pop	{r4, r7, pc}
 800bbce:	bf00      	nop
 800bbd0:	08023b78 	.word	0x08023b78

0800bbd4 <_ZN14screenViewBaseD1Ev>:

screenViewBase::~screenViewBase()
 800bbd4:	b580      	push	{r7, lr}
 800bbd6:	b082      	sub	sp, #8
 800bbd8:	af00      	add	r7, sp, #0
 800bbda:	6078      	str	r0, [r7, #4]
 800bbdc:	4a0d      	ldr	r2, [pc, #52]	; (800bc14 <_ZN14screenViewBaseD1Ev+0x40>)
 800bbde:	687b      	ldr	r3, [r7, #4]
 800bbe0:	601a      	str	r2, [r3, #0]
 800bbe2:	687b      	ldr	r3, [r7, #4]
 800bbe4:	3398      	adds	r3, #152	; 0x98
 800bbe6:	4618      	mov	r0, r3
 800bbe8:	f000 f88a 	bl	800bd00 <_ZN8touchgfx8TextAreaD1Ev>
 800bbec:	687b      	ldr	r3, [r7, #4]
 800bbee:	336c      	adds	r3, #108	; 0x6c
 800bbf0:	4618      	mov	r0, r3
 800bbf2:	f000 f863 	bl	800bcbc <_ZN8touchgfx3BoxD1Ev>
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	3340      	adds	r3, #64	; 0x40
 800bbfa:	4618      	mov	r0, r3
 800bbfc:	f000 f85e 	bl	800bcbc <_ZN8touchgfx3BoxD1Ev>
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	4618      	mov	r0, r3
 800bc04:	f7ff fed4 	bl	800b9b0 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
{

}
 800bc08:	687b      	ldr	r3, [r7, #4]
 800bc0a:	4618      	mov	r0, r3
 800bc0c:	3708      	adds	r7, #8
 800bc0e:	46bd      	mov	sp, r7
 800bc10:	bd80      	pop	{r7, pc}
 800bc12:	bf00      	nop
 800bc14:	08023b78 	.word	0x08023b78

0800bc18 <_ZN14screenViewBaseD0Ev>:
screenViewBase::~screenViewBase()
 800bc18:	b580      	push	{r7, lr}
 800bc1a:	b082      	sub	sp, #8
 800bc1c:	af00      	add	r7, sp, #0
 800bc1e:	6078      	str	r0, [r7, #4]
}
 800bc20:	6878      	ldr	r0, [r7, #4]
 800bc22:	f7ff ffd7 	bl	800bbd4 <_ZN14screenViewBaseD1Ev>
 800bc26:	21e0      	movs	r1, #224	; 0xe0
 800bc28:	6878      	ldr	r0, [r7, #4]
 800bc2a:	f015 fe88 	bl	802193e <_ZdlPvj>
 800bc2e:	687b      	ldr	r3, [r7, #4]
 800bc30:	4618      	mov	r0, r3
 800bc32:	3708      	adds	r7, #8
 800bc34:	46bd      	mov	sp, r7
 800bc36:	bd80      	pop	{r7, pc}

0800bc38 <_ZN14screenViewBase11setupScreenEv>:

void screenViewBase::setupScreen()
{
 800bc38:	b480      	push	{r7}
 800bc3a:	b083      	sub	sp, #12
 800bc3c:	af00      	add	r7, sp, #0
 800bc3e:	6078      	str	r0, [r7, #4]

}
 800bc40:	bf00      	nop
 800bc42:	370c      	adds	r7, #12
 800bc44:	46bd      	mov	sp, r7
 800bc46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc4a:	4770      	bx	lr

0800bc4c <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>:
    View()
 800bc4c:	b580      	push	{r7, lr}
 800bc4e:	b082      	sub	sp, #8
 800bc50:	af00      	add	r7, sp, #0
 800bc52:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800bc54:	687b      	ldr	r3, [r7, #4]
 800bc56:	4618      	mov	r0, r3
 800bc58:	f007 f866 	bl	8012d28 <_ZN8touchgfx6ScreenC1Ev>
 800bc5c:	4a05      	ldr	r2, [pc, #20]	; (800bc74 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev+0x28>)
 800bc5e:	687b      	ldr	r3, [r7, #4]
 800bc60:	601a      	str	r2, [r3, #0]
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	2200      	movs	r2, #0
 800bc66:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800bc68:	687b      	ldr	r3, [r7, #4]
 800bc6a:	4618      	mov	r0, r3
 800bc6c:	3708      	adds	r7, #8
 800bc6e:	46bd      	mov	sp, r7
 800bc70:	bd80      	pop	{r7, pc}
 800bc72:	bf00      	nop
 800bc74:	08023bac 	.word	0x08023bac

0800bc78 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800bc78:	b580      	push	{r7, lr}
 800bc7a:	b082      	sub	sp, #8
 800bc7c:	af00      	add	r7, sp, #0
 800bc7e:	6078      	str	r0, [r7, #4]
 800bc80:	4a05      	ldr	r2, [pc, #20]	; (800bc98 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800bc82:	687b      	ldr	r3, [r7, #4]
 800bc84:	601a      	str	r2, [r3, #0]
 800bc86:	687b      	ldr	r3, [r7, #4]
 800bc88:	4618      	mov	r0, r3
 800bc8a:	f7ff fbc3 	bl	800b414 <_ZN8touchgfx8DrawableD1Ev>
 800bc8e:	687b      	ldr	r3, [r7, #4]
 800bc90:	4618      	mov	r0, r3
 800bc92:	3708      	adds	r7, #8
 800bc94:	46bd      	mov	sp, r7
 800bc96:	bd80      	pop	{r7, pc}
 800bc98:	08024144 	.word	0x08024144

0800bc9c <_ZN8touchgfx9ContainerD0Ev>:
 800bc9c:	b580      	push	{r7, lr}
 800bc9e:	b082      	sub	sp, #8
 800bca0:	af00      	add	r7, sp, #0
 800bca2:	6078      	str	r0, [r7, #4]
 800bca4:	6878      	ldr	r0, [r7, #4]
 800bca6:	f7ff ffe7 	bl	800bc78 <_ZN8touchgfx9ContainerD1Ev>
 800bcaa:	212c      	movs	r1, #44	; 0x2c
 800bcac:	6878      	ldr	r0, [r7, #4]
 800bcae:	f015 fe46 	bl	802193e <_ZdlPvj>
 800bcb2:	687b      	ldr	r3, [r7, #4]
 800bcb4:	4618      	mov	r0, r3
 800bcb6:	3708      	adds	r7, #8
 800bcb8:	46bd      	mov	sp, r7
 800bcba:	bd80      	pop	{r7, pc}

0800bcbc <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800bcbc:	b580      	push	{r7, lr}
 800bcbe:	b082      	sub	sp, #8
 800bcc0:	af00      	add	r7, sp, #0
 800bcc2:	6078      	str	r0, [r7, #4]
 800bcc4:	4a05      	ldr	r2, [pc, #20]	; (800bcdc <_ZN8touchgfx3BoxD1Ev+0x20>)
 800bcc6:	687b      	ldr	r3, [r7, #4]
 800bcc8:	601a      	str	r2, [r3, #0]
 800bcca:	687b      	ldr	r3, [r7, #4]
 800bccc:	4618      	mov	r0, r3
 800bcce:	f7ff fdb1 	bl	800b834 <_ZN8touchgfx6WidgetD1Ev>
 800bcd2:	687b      	ldr	r3, [r7, #4]
 800bcd4:	4618      	mov	r0, r3
 800bcd6:	3708      	adds	r7, #8
 800bcd8:	46bd      	mov	sp, r7
 800bcda:	bd80      	pop	{r7, pc}
 800bcdc:	080243bc 	.word	0x080243bc

0800bce0 <_ZN8touchgfx3BoxD0Ev>:
 800bce0:	b580      	push	{r7, lr}
 800bce2:	b082      	sub	sp, #8
 800bce4:	af00      	add	r7, sp, #0
 800bce6:	6078      	str	r0, [r7, #4]
 800bce8:	6878      	ldr	r0, [r7, #4]
 800bcea:	f7ff ffe7 	bl	800bcbc <_ZN8touchgfx3BoxD1Ev>
 800bcee:	212c      	movs	r1, #44	; 0x2c
 800bcf0:	6878      	ldr	r0, [r7, #4]
 800bcf2:	f015 fe24 	bl	802193e <_ZdlPvj>
 800bcf6:	687b      	ldr	r3, [r7, #4]
 800bcf8:	4618      	mov	r0, r3
 800bcfa:	3708      	adds	r7, #8
 800bcfc:	46bd      	mov	sp, r7
 800bcfe:	bd80      	pop	{r7, pc}

0800bd00 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800bd00:	b580      	push	{r7, lr}
 800bd02:	b082      	sub	sp, #8
 800bd04:	af00      	add	r7, sp, #0
 800bd06:	6078      	str	r0, [r7, #4]
 800bd08:	4a08      	ldr	r2, [pc, #32]	; (800bd2c <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800bd0a:	687b      	ldr	r3, [r7, #4]
 800bd0c:	601a      	str	r2, [r3, #0]
 800bd0e:	687b      	ldr	r3, [r7, #4]
 800bd10:	3328      	adds	r3, #40	; 0x28
 800bd12:	4618      	mov	r0, r3
 800bd14:	f7fe fbd4 	bl	800a4c0 <_ZN8touchgfx9TypedTextD1Ev>
 800bd18:	687b      	ldr	r3, [r7, #4]
 800bd1a:	4618      	mov	r0, r3
 800bd1c:	f7ff fd8a 	bl	800b834 <_ZN8touchgfx6WidgetD1Ev>
 800bd20:	687b      	ldr	r3, [r7, #4]
 800bd22:	4618      	mov	r0, r3
 800bd24:	3708      	adds	r7, #8
 800bd26:	46bd      	mov	sp, r7
 800bd28:	bd80      	pop	{r7, pc}
 800bd2a:	bf00      	nop
 800bd2c:	0802432c 	.word	0x0802432c

0800bd30 <_ZN8touchgfx8TextAreaD0Ev>:
 800bd30:	b580      	push	{r7, lr}
 800bd32:	b082      	sub	sp, #8
 800bd34:	af00      	add	r7, sp, #0
 800bd36:	6078      	str	r0, [r7, #4]
 800bd38:	6878      	ldr	r0, [r7, #4]
 800bd3a:	f7ff ffe1 	bl	800bd00 <_ZN8touchgfx8TextAreaD1Ev>
 800bd3e:	2148      	movs	r1, #72	; 0x48
 800bd40:	6878      	ldr	r0, [r7, #4]
 800bd42:	f015 fdfc 	bl	802193e <_ZdlPvj>
 800bd46:	687b      	ldr	r3, [r7, #4]
 800bd48:	4618      	mov	r0, r3
 800bd4a:	3708      	adds	r7, #8
 800bd4c:	46bd      	mov	sp, r7
 800bd4e:	bd80      	pop	{r7, pc}

0800bd50 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800bd50:	b480      	push	{r7}
 800bd52:	af00      	add	r7, sp, #0
    return bitmap_database;
 800bd54:	4b02      	ldr	r3, [pc, #8]	; (800bd60 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800bd56:	4618      	mov	r0, r3
 800bd58:	46bd      	mov	sp, r7
 800bd5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd5e:	4770      	bx	lr
 800bd60:	08023c40 	.word	0x08023c40

0800bd64 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800bd64:	b480      	push	{r7}
 800bd66:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800bd68:	2301      	movs	r3, #1
}
 800bd6a:	4618      	mov	r0, r3
 800bd6c:	46bd      	mov	sp, r7
 800bd6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd72:	4770      	bx	lr

0800bd74 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800bd74:	b480      	push	{r7}
 800bd76:	b085      	sub	sp, #20
 800bd78:	af00      	add	r7, sp, #0
 800bd7a:	60f8      	str	r0, [r7, #12]
 800bd7c:	460b      	mov	r3, r1
 800bd7e:	607a      	str	r2, [r7, #4]
 800bd80:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800bd82:	2300      	movs	r3, #0
    }
 800bd84:	4618      	mov	r0, r3
 800bd86:	3714      	adds	r7, #20
 800bd88:	46bd      	mov	sp, r7
 800bd8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd8e:	4770      	bx	lr

0800bd90 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800bd90:	b480      	push	{r7}
 800bd92:	b083      	sub	sp, #12
 800bd94:	af00      	add	r7, sp, #0
 800bd96:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800bd98:	2300      	movs	r3, #0
    }
 800bd9a:	4618      	mov	r0, r3
 800bd9c:	370c      	adds	r7, #12
 800bd9e:	46bd      	mov	sp, r7
 800bda0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bda4:	4770      	bx	lr

0800bda6 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800bda6:	b480      	push	{r7}
 800bda8:	b083      	sub	sp, #12
 800bdaa:	af00      	add	r7, sp, #0
 800bdac:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800bdae:	2300      	movs	r3, #0
    }
 800bdb0:	4618      	mov	r0, r3
 800bdb2:	370c      	adds	r7, #12
 800bdb4:	46bd      	mov	sp, r7
 800bdb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdba:	4770      	bx	lr

0800bdbc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800bdbc:	b480      	push	{r7}
 800bdbe:	b085      	sub	sp, #20
 800bdc0:	af00      	add	r7, sp, #0
 800bdc2:	60f8      	str	r0, [r7, #12]
 800bdc4:	60b9      	str	r1, [r7, #8]
 800bdc6:	4613      	mov	r3, r2
 800bdc8:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800bdca:	4a07      	ldr	r2, [pc, #28]	; (800bde8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800bdcc:	68fb      	ldr	r3, [r7, #12]
 800bdce:	6013      	str	r3, [r2, #0]
        fonts = f;
 800bdd0:	4a06      	ldr	r2, [pc, #24]	; (800bdec <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800bdd2:	68bb      	ldr	r3, [r7, #8]
 800bdd4:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800bdd6:	4a06      	ldr	r2, [pc, #24]	; (800bdf0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800bdd8:	88fb      	ldrh	r3, [r7, #6]
 800bdda:	8013      	strh	r3, [r2, #0]
    }
 800bddc:	bf00      	nop
 800bdde:	3714      	adds	r7, #20
 800bde0:	46bd      	mov	sp, r7
 800bde2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bde6:	4770      	bx	lr
 800bde8:	24001ecc 	.word	0x24001ecc
 800bdec:	24001ed4 	.word	0x24001ed4
 800bdf0:	24001ed0 	.word	0x24001ed0

0800bdf4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800bdf4:	b40e      	push	{r1, r2, r3}
 800bdf6:	b580      	push	{r7, lr}
 800bdf8:	b085      	sub	sp, #20
 800bdfa:	af00      	add	r7, sp, #0
 800bdfc:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800bdfe:	f107 0320 	add.w	r3, r7, #32
 800be02:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800be04:	68bb      	ldr	r3, [r7, #8]
 800be06:	69fa      	ldr	r2, [r7, #28]
 800be08:	2100      	movs	r1, #0
 800be0a:	6878      	ldr	r0, [r7, #4]
 800be0c:	f006 fbc2 	bl	8012594 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800be10:	4603      	mov	r3, r0
 800be12:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800be14:	89fb      	ldrh	r3, [r7, #14]
}
 800be16:	4618      	mov	r0, r3
 800be18:	3714      	adds	r7, #20
 800be1a:	46bd      	mov	sp, r7
 800be1c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800be20:	b003      	add	sp, #12
 800be22:	4770      	bx	lr

0800be24 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800be24:	b40c      	push	{r2, r3}
 800be26:	b580      	push	{r7, lr}
 800be28:	b084      	sub	sp, #16
 800be2a:	af00      	add	r7, sp, #0
 800be2c:	6078      	str	r0, [r7, #4]
 800be2e:	460b      	mov	r3, r1
 800be30:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800be32:	f107 031c 	add.w	r3, r7, #28
 800be36:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800be38:	78f9      	ldrb	r1, [r7, #3]
 800be3a:	68bb      	ldr	r3, [r7, #8]
 800be3c:	69ba      	ldr	r2, [r7, #24]
 800be3e:	6878      	ldr	r0, [r7, #4]
 800be40:	f006 fba8 	bl	8012594 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800be44:	4603      	mov	r3, r0
 800be46:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800be48:	89fb      	ldrh	r3, [r7, #14]
}
 800be4a:	4618      	mov	r0, r3
 800be4c:	3710      	adds	r7, #16
 800be4e:	46bd      	mov	sp, r7
 800be50:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800be54:	b002      	add	sp, #8
 800be56:	4770      	bx	lr

0800be58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800be58:	b580      	push	{r7, lr}
 800be5a:	b08a      	sub	sp, #40	; 0x28
 800be5c:	af00      	add	r7, sp, #0
 800be5e:	6078      	str	r0, [r7, #4]
 800be60:	460b      	mov	r3, r1
 800be62:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800be64:	687b      	ldr	r3, [r7, #4]
 800be66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800be68:	2b00      	cmp	r3, #0
 800be6a:	d016      	beq.n	800be9a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800be6c:	687b      	ldr	r3, [r7, #4]
 800be6e:	3322      	adds	r3, #34	; 0x22
 800be70:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800be72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800be74:	8adb      	ldrh	r3, [r3, #22]
 800be76:	2b00      	cmp	r3, #0
 800be78:	d105      	bne.n	800be86 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800be7a:	4b43      	ldr	r3, [pc, #268]	; (800bf88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800be7c:	4a43      	ldr	r2, [pc, #268]	; (800bf8c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800be7e:	21c5      	movs	r1, #197	; 0xc5
 800be80:	4843      	ldr	r0, [pc, #268]	; (800bf90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800be82:	f015 fd8b 	bl	802199c <__assert_func>
            return buffer[pos];
 800be86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800be88:	8a9b      	ldrh	r3, [r3, #20]
 800be8a:	461a      	mov	r2, r3
 800be8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800be8e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800be92:	2b00      	cmp	r3, #0
 800be94:	d001      	beq.n	800be9a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800be96:	2301      	movs	r3, #1
 800be98:	e000      	b.n	800be9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800be9a:	2300      	movs	r3, #0
 800be9c:	2b00      	cmp	r3, #0
 800be9e:	d06a      	beq.n	800bf76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800bea0:	6878      	ldr	r0, [r7, #4]
 800bea2:	f007 fe1d 	bl	8013ae0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800bea6:	687b      	ldr	r3, [r7, #4]
 800bea8:	3322      	adds	r3, #34	; 0x22
 800beaa:	623b      	str	r3, [r7, #32]
 800beac:	2301      	movs	r3, #1
 800beae:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800beb0:	6a3b      	ldr	r3, [r7, #32]
 800beb2:	8adb      	ldrh	r3, [r3, #22]
 800beb4:	8bfa      	ldrh	r2, [r7, #30]
 800beb6:	429a      	cmp	r2, r3
 800beb8:	d305      	bcc.n	800bec6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800beba:	4b36      	ldr	r3, [pc, #216]	; (800bf94 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800bebc:	4a36      	ldr	r2, [pc, #216]	; (800bf98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800bebe:	21cb      	movs	r1, #203	; 0xcb
 800bec0:	4833      	ldr	r0, [pc, #204]	; (800bf90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800bec2:	f015 fd6b 	bl	802199c <__assert_func>
            const uint16_t index = pos + offset;
 800bec6:	6a3b      	ldr	r3, [r7, #32]
 800bec8:	8a9a      	ldrh	r2, [r3, #20]
 800beca:	8bfb      	ldrh	r3, [r7, #30]
 800becc:	4413      	add	r3, r2
 800bece:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800bed0:	8bbb      	ldrh	r3, [r7, #28]
 800bed2:	2b09      	cmp	r3, #9
 800bed4:	d801      	bhi.n	800beda <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800bed6:	8bbb      	ldrh	r3, [r7, #28]
 800bed8:	e001      	b.n	800bede <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800beda:	8bbb      	ldrh	r3, [r7, #28]
 800bedc:	3b0a      	subs	r3, #10
 800bede:	6a3a      	ldr	r2, [r7, #32]
 800bee0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800bee4:	f640 123f 	movw	r2, #2367	; 0x93f
 800bee8:	4293      	cmp	r3, r2
 800beea:	bf0c      	ite	eq
 800beec:	2301      	moveq	r3, #1
 800beee:	2300      	movne	r3, #0
 800bef0:	b2db      	uxtb	r3, r3
 800bef2:	2b00      	cmp	r3, #0
 800bef4:	d03f      	beq.n	800bf76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800bef6:	687b      	ldr	r3, [r7, #4]
 800bef8:	3322      	adds	r3, #34	; 0x22
 800befa:	687a      	ldr	r2, [r7, #4]
 800befc:	3222      	adds	r2, #34	; 0x22
 800befe:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800bf00:	68ba      	ldr	r2, [r7, #8]
 800bf02:	8ad2      	ldrh	r2, [r2, #22]
 800bf04:	2a00      	cmp	r2, #0
 800bf06:	d105      	bne.n	800bf14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800bf08:	4b1f      	ldr	r3, [pc, #124]	; (800bf88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800bf0a:	4a20      	ldr	r2, [pc, #128]	; (800bf8c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800bf0c:	21c5      	movs	r1, #197	; 0xc5
 800bf0e:	4820      	ldr	r0, [pc, #128]	; (800bf90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800bf10:	f015 fd44 	bl	802199c <__assert_func>
            return buffer[pos];
 800bf14:	68ba      	ldr	r2, [r7, #8]
 800bf16:	8a92      	ldrh	r2, [r2, #20]
 800bf18:	4611      	mov	r1, r2
 800bf1a:	68ba      	ldr	r2, [r7, #8]
 800bf1c:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800bf20:	613b      	str	r3, [r7, #16]
 800bf22:	4613      	mov	r3, r2
 800bf24:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800bf26:	693b      	ldr	r3, [r7, #16]
 800bf28:	8adb      	ldrh	r3, [r3, #22]
 800bf2a:	2b01      	cmp	r3, #1
 800bf2c:	d806      	bhi.n	800bf3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800bf2e:	4b1b      	ldr	r3, [pc, #108]	; (800bf9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800bf30:	4a1b      	ldr	r2, [pc, #108]	; (800bfa0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800bf32:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800bf36:	4816      	ldr	r0, [pc, #88]	; (800bf90 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800bf38:	f015 fd30 	bl	802199c <__assert_func>
            const uint16_t index = pos + 1;
 800bf3c:	693b      	ldr	r3, [r7, #16]
 800bf3e:	8a9b      	ldrh	r3, [r3, #20]
 800bf40:	3301      	adds	r3, #1
 800bf42:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800bf44:	89bb      	ldrh	r3, [r7, #12]
 800bf46:	2b09      	cmp	r3, #9
 800bf48:	d801      	bhi.n	800bf4e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800bf4a:	89bb      	ldrh	r3, [r7, #12]
 800bf4c:	e000      	b.n	800bf50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800bf4e:	2300      	movs	r3, #0
 800bf50:	693a      	ldr	r2, [r7, #16]
 800bf52:	89f9      	ldrh	r1, [r7, #14]
 800bf54:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800bf58:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800bf5a:	687b      	ldr	r3, [r7, #4]
 800bf5c:	3322      	adds	r3, #34	; 0x22
 800bf5e:	61bb      	str	r3, [r7, #24]
 800bf60:	f640 133f 	movw	r3, #2367	; 0x93f
 800bf64:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800bf66:	69bb      	ldr	r3, [r7, #24]
 800bf68:	8a9b      	ldrh	r3, [r3, #20]
 800bf6a:	4619      	mov	r1, r3
 800bf6c:	69bb      	ldr	r3, [r7, #24]
 800bf6e:	8afa      	ldrh	r2, [r7, #22]
 800bf70:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800bf74:	bf00      	nop
        }
    }
    return getNextChar();
 800bf76:	6878      	ldr	r0, [r7, #4]
 800bf78:	f007 fcb4 	bl	80138e4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bf7c:	4603      	mov	r3, r0
}
 800bf7e:	4618      	mov	r0, r3
 800bf80:	3728      	adds	r7, #40	; 0x28
 800bf82:	46bd      	mov	sp, r7
 800bf84:	bd80      	pop	{r7, pc}
 800bf86:	bf00      	nop
 800bf88:	08022d28 	.word	0x08022d28
 800bf8c:	08022d34 	.word	0x08022d34
 800bf90:	08022de0 	.word	0x08022de0
 800bf94:	08022e28 	.word	0x08022e28
 800bf98:	08022e38 	.word	0x08022e38
 800bf9c:	08022f0c 	.word	0x08022f0c
 800bfa0:	08022f18 	.word	0x08022f18

0800bfa4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800bfa4:	b580      	push	{r7, lr}
 800bfa6:	b082      	sub	sp, #8
 800bfa8:	af00      	add	r7, sp, #0
 800bfaa:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800bfac:	6878      	ldr	r0, [r7, #4]
 800bfae:	f007 fc62 	bl	8013876 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800bfb2:	bf00      	nop
 800bfb4:	3708      	adds	r7, #8
 800bfb6:	46bd      	mov	sp, r7
 800bfb8:	bd80      	pop	{r7, pc}

0800bfba <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800bfba:	b580      	push	{r7, lr}
 800bfbc:	b088      	sub	sp, #32
 800bfbe:	af02      	add	r7, sp, #8
 800bfc0:	60f8      	str	r0, [r7, #12]
 800bfc2:	1d38      	adds	r0, r7, #4
 800bfc4:	e880 0006 	stmia.w	r0, {r1, r2}
 800bfc8:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800bfca:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800bfce:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800bfd0:	1d39      	adds	r1, r7, #4
 800bfd2:	697b      	ldr	r3, [r7, #20]
 800bfd4:	9301      	str	r3, [sp, #4]
 800bfd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bfd8:	9300      	str	r3, [sp, #0]
 800bfda:	6a3b      	ldr	r3, [r7, #32]
 800bfdc:	683a      	ldr	r2, [r7, #0]
 800bfde:	68f8      	ldr	r0, [r7, #12]
 800bfe0:	f004 ff32 	bl	8010e48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800bfe4:	bf00      	nop
 800bfe6:	3718      	adds	r7, #24
 800bfe8:	46bd      	mov	sp, r7
 800bfea:	bd80      	pop	{r7, pc}

0800bfec <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800bfec:	b590      	push	{r4, r7, lr}
 800bfee:	b085      	sub	sp, #20
 800bff0:	af00      	add	r7, sp, #0
 800bff2:	4603      	mov	r3, r0
 800bff4:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800bff6:	2300      	movs	r3, #0
 800bff8:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800bffa:	88fb      	ldrh	r3, [r7, #6]
 800bffc:	2b00      	cmp	r3, #0
 800bffe:	d127      	bne.n	800c050 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800c000:	88fb      	ldrh	r3, [r7, #6]
 800c002:	4a1e      	ldr	r2, [pc, #120]	; (800c07c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800c004:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c008:	2b00      	cmp	r3, #0
 800c00a:	d016      	beq.n	800c03a <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800c00c:	88fb      	ldrh	r3, [r7, #6]
 800c00e:	4a1b      	ldr	r2, [pc, #108]	; (800c07c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800c010:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c014:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800c016:	68bb      	ldr	r3, [r7, #8]
 800c018:	681b      	ldr	r3, [r3, #0]
 800c01a:	68ba      	ldr	r2, [r7, #8]
 800c01c:	4413      	add	r3, r2
 800c01e:	4a18      	ldr	r2, [pc, #96]	; (800c080 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800c020:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800c022:	68bb      	ldr	r3, [r7, #8]
 800c024:	685b      	ldr	r3, [r3, #4]
 800c026:	68ba      	ldr	r2, [r7, #8]
 800c028:	4413      	add	r3, r2
 800c02a:	4a16      	ldr	r2, [pc, #88]	; (800c084 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800c02c:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800c02e:	68bb      	ldr	r3, [r7, #8]
 800c030:	689b      	ldr	r3, [r3, #8]
 800c032:	68ba      	ldr	r2, [r7, #8]
 800c034:	4413      	add	r3, r2
 800c036:	60fb      	str	r3, [r7, #12]
 800c038:	e00a      	b.n	800c050 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800c03a:	4b11      	ldr	r3, [pc, #68]	; (800c080 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800c03c:	4a12      	ldr	r2, [pc, #72]	; (800c088 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800c03e:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800c040:	4a12      	ldr	r2, [pc, #72]	; (800c08c <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800c042:	4b10      	ldr	r3, [pc, #64]	; (800c084 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800c044:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800c046:	88fb      	ldrh	r3, [r7, #6]
 800c048:	4a11      	ldr	r2, [pc, #68]	; (800c090 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800c04a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c04e:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800c050:	68fb      	ldr	r3, [r7, #12]
 800c052:	2b00      	cmp	r3, #0
 800c054:	d00d      	beq.n	800c072 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800c056:	4a0f      	ldr	r2, [pc, #60]	; (800c094 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800c058:	88fb      	ldrh	r3, [r7, #6]
 800c05a:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800c05c:	f000 f83e 	bl	800c0dc <_ZN17TypedTextDatabase8getFontsEv>
 800c060:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800c062:	f000 f833 	bl	800c0cc <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800c066:	4603      	mov	r3, r0
 800c068:	461a      	mov	r2, r3
 800c06a:	4621      	mov	r1, r4
 800c06c:	68f8      	ldr	r0, [r7, #12]
 800c06e:	f7ff fea5 	bl	800bdbc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800c072:	bf00      	nop
 800c074:	3714      	adds	r7, #20
 800c076:	46bd      	mov	sp, r7
 800c078:	bd90      	pop	{r4, r7, pc}
 800c07a:	bf00      	nop
 800c07c:	240003c8 	.word	0x240003c8
 800c080:	240003d0 	.word	0x240003d0
 800c084:	240003d4 	.word	0x240003d4
 800c088:	08024cc4 	.word	0x08024cc4
 800c08c:	08024cc0 	.word	0x08024cc0
 800c090:	08024cdc 	.word	0x08024cdc
 800c094:	240003cc 	.word	0x240003cc

0800c098 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800c098:	b480      	push	{r7}
 800c09a:	b083      	sub	sp, #12
 800c09c:	af00      	add	r7, sp, #0
 800c09e:	6078      	str	r0, [r7, #4]
 800c0a0:	460b      	mov	r3, r1
 800c0a2:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800c0a4:	4b07      	ldr	r3, [pc, #28]	; (800c0c4 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800c0a6:	681a      	ldr	r2, [r3, #0]
 800c0a8:	4b07      	ldr	r3, [pc, #28]	; (800c0c8 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800c0aa:	6819      	ldr	r1, [r3, #0]
 800c0ac:	887b      	ldrh	r3, [r7, #2]
 800c0ae:	009b      	lsls	r3, r3, #2
 800c0b0:	440b      	add	r3, r1
 800c0b2:	681b      	ldr	r3, [r3, #0]
 800c0b4:	005b      	lsls	r3, r3, #1
 800c0b6:	4413      	add	r3, r2
}
 800c0b8:	4618      	mov	r0, r3
 800c0ba:	370c      	adds	r7, #12
 800c0bc:	46bd      	mov	sp, r7
 800c0be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0c2:	4770      	bx	lr
 800c0c4:	240003d0 	.word	0x240003d0
 800c0c8:	240003d4 	.word	0x240003d4

0800c0cc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800c0cc:	b480      	push	{r7}
 800c0ce:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800c0d0:	2301      	movs	r3, #1
}
 800c0d2:	4618      	mov	r0, r3
 800c0d4:	46bd      	mov	sp, r7
 800c0d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0da:	4770      	bx	lr

0800c0dc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800c0dc:	b480      	push	{r7}
 800c0de:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800c0e0:	4b02      	ldr	r3, [pc, #8]	; (800c0ec <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800c0e2:	4618      	mov	r0, r3
 800c0e4:	46bd      	mov	sp, r7
 800c0e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0ea:	4770      	bx	lr
 800c0ec:	240003d8 	.word	0x240003d8

0800c0f0 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800c0f0:	b580      	push	{r7, lr}
 800c0f2:	b082      	sub	sp, #8
 800c0f4:	af00      	add	r7, sp, #0
 800c0f6:	6078      	str	r0, [r7, #4]
 800c0f8:	6039      	str	r1, [r7, #0]
 800c0fa:	687b      	ldr	r3, [r7, #4]
 800c0fc:	2b01      	cmp	r3, #1
 800c0fe:	d113      	bne.n	800c128 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800c100:	683b      	ldr	r3, [r7, #0]
 800c102:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c106:	4293      	cmp	r3, r2
 800c108:	d10e      	bne.n	800c128 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800c10a:	f7fe fb15 	bl	800a738 <_Z23getFont_verdana_20_4bppv>
 800c10e:	4603      	mov	r3, r0
};
 800c110:	4a07      	ldr	r2, [pc, #28]	; (800c130 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800c112:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800c114:	f7fe fb6a 	bl	800a7ec <_Z23getFont_verdana_40_4bppv>
 800c118:	4603      	mov	r3, r0
};
 800c11a:	4a05      	ldr	r2, [pc, #20]	; (800c130 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800c11c:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800c11e:	f7fe fab1 	bl	800a684 <_Z23getFont_verdana_10_4bppv>
 800c122:	4603      	mov	r3, r0
};
 800c124:	4a02      	ldr	r2, [pc, #8]	; (800c130 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800c126:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800c128:	bf00      	nop
 800c12a:	3708      	adds	r7, #8
 800c12c:	46bd      	mov	sp, r7
 800c12e:	bd80      	pop	{r7, pc}
 800c130:	240003d8 	.word	0x240003d8

0800c134 <_GLOBAL__sub_I_touchgfx_fonts>:
 800c134:	b580      	push	{r7, lr}
 800c136:	af00      	add	r7, sp, #0
 800c138:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c13c:	2001      	movs	r0, #1
 800c13e:	f7ff ffd7 	bl	800c0f0 <_Z41__static_initialization_and_destruction_0ii>
 800c142:	bd80      	pop	{r7, pc}

0800c144 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800c144:	b580      	push	{r7, lr}
 800c146:	b082      	sub	sp, #8
 800c148:	af00      	add	r7, sp, #0
 800c14a:	6078      	str	r0, [r7, #4]
 800c14c:	4a05      	ldr	r2, [pc, #20]	; (800c164 <_ZN19FrontendApplicationD1Ev+0x20>)
 800c14e:	687b      	ldr	r3, [r7, #4]
 800c150:	601a      	str	r2, [r3, #0]
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	4618      	mov	r0, r3
 800c156:	f7fe fda9 	bl	800acac <_ZN23FrontendApplicationBaseD1Ev>
 800c15a:	687b      	ldr	r3, [r7, #4]
 800c15c:	4618      	mov	r0, r3
 800c15e:	3708      	adds	r7, #8
 800c160:	46bd      	mov	sp, r7
 800c162:	bd80      	pop	{r7, pc}
 800c164:	08023cb8 	.word	0x08023cb8

0800c168 <_ZN19FrontendApplicationD0Ev>:
 800c168:	b580      	push	{r7, lr}
 800c16a:	b082      	sub	sp, #8
 800c16c:	af00      	add	r7, sp, #0
 800c16e:	6078      	str	r0, [r7, #4]
 800c170:	6878      	ldr	r0, [r7, #4]
 800c172:	f7ff ffe7 	bl	800c144 <_ZN19FrontendApplicationD1Ev>
 800c176:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800c17a:	6878      	ldr	r0, [r7, #4]
 800c17c:	f015 fbdf 	bl	802193e <_ZdlPvj>
 800c180:	687b      	ldr	r3, [r7, #4]
 800c182:	4618      	mov	r0, r3
 800c184:	3708      	adds	r7, #8
 800c186:	46bd      	mov	sp, r7
 800c188:	bd80      	pop	{r7, pc}

0800c18a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800c18a:	b580      	push	{r7, lr}
 800c18c:	b082      	sub	sp, #8
 800c18e:	af00      	add	r7, sp, #0
 800c190:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800c192:	687b      	ldr	r3, [r7, #4]
 800c194:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800c198:	4618      	mov	r0, r3
 800c19a:	f000 f82d 	bl	800c1f8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800c19e:	687b      	ldr	r3, [r7, #4]
 800c1a0:	4618      	mov	r0, r3
 800c1a2:	f005 fb2b 	bl	80117fc <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800c1a6:	bf00      	nop
 800c1a8:	3708      	adds	r7, #8
 800c1aa:	46bd      	mov	sp, r7
 800c1ac:	bd80      	pop	{r7, pc}
	...

0800c1b0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800c1b0:	b580      	push	{r7, lr}
 800c1b2:	b084      	sub	sp, #16
 800c1b4:	af00      	add	r7, sp, #0
 800c1b6:	60f8      	str	r0, [r7, #12]
 800c1b8:	60b9      	str	r1, [r7, #8]
 800c1ba:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800c1bc:	68fb      	ldr	r3, [r7, #12]
 800c1be:	687a      	ldr	r2, [r7, #4]
 800c1c0:	68b9      	ldr	r1, [r7, #8]
 800c1c2:	4618      	mov	r0, r3
 800c1c4:	f7fe fdc2 	bl	800ad4c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800c1c8:	4a03      	ldr	r2, [pc, #12]	; (800c1d8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800c1ca:	68fb      	ldr	r3, [r7, #12]
 800c1cc:	601a      	str	r2, [r3, #0]
{

}
 800c1ce:	68fb      	ldr	r3, [r7, #12]
 800c1d0:	4618      	mov	r0, r3
 800c1d2:	3710      	adds	r7, #16
 800c1d4:	46bd      	mov	sp, r7
 800c1d6:	bd80      	pop	{r7, pc}
 800c1d8:	08023cb8 	.word	0x08023cb8

0800c1dc <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800c1dc:	b480      	push	{r7}
 800c1de:	b083      	sub	sp, #12
 800c1e0:	af00      	add	r7, sp, #0
 800c1e2:	6078      	str	r0, [r7, #4]
 800c1e4:	687b      	ldr	r3, [r7, #4]
 800c1e6:	2200      	movs	r2, #0
 800c1e8:	601a      	str	r2, [r3, #0]
{

}
 800c1ea:	687b      	ldr	r3, [r7, #4]
 800c1ec:	4618      	mov	r0, r3
 800c1ee:	370c      	adds	r7, #12
 800c1f0:	46bd      	mov	sp, r7
 800c1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1f6:	4770      	bx	lr

0800c1f8 <_ZN5Model4tickEv>:

void Model::tick()
{
 800c1f8:	b480      	push	{r7}
 800c1fa:	b083      	sub	sp, #12
 800c1fc:	af00      	add	r7, sp, #0
 800c1fe:	6078      	str	r0, [r7, #4]

}
 800c200:	bf00      	nop
 800c202:	370c      	adds	r7, #12
 800c204:	46bd      	mov	sp, r7
 800c206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c20a:	4770      	bx	lr

0800c20c <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800c20c:	b480      	push	{r7}
 800c20e:	b083      	sub	sp, #12
 800c210:	af00      	add	r7, sp, #0
 800c212:	6078      	str	r0, [r7, #4]
    {
    }
 800c214:	bf00      	nop
 800c216:	370c      	adds	r7, #12
 800c218:	46bd      	mov	sp, r7
 800c21a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c21e:	4770      	bx	lr

0800c220 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800c220:	b480      	push	{r7}
 800c222:	b083      	sub	sp, #12
 800c224:	af00      	add	r7, sp, #0
 800c226:	6078      	str	r0, [r7, #4]
    {
    }
 800c228:	bf00      	nop
 800c22a:	370c      	adds	r7, #12
 800c22c:	46bd      	mov	sp, r7
 800c22e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c232:	4770      	bx	lr

0800c234 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800c234:	b480      	push	{r7}
 800c236:	b083      	sub	sp, #12
 800c238:	af00      	add	r7, sp, #0
 800c23a:	6078      	str	r0, [r7, #4]
    {
 800c23c:	4a04      	ldr	r2, [pc, #16]	; (800c250 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800c23e:	687b      	ldr	r3, [r7, #4]
 800c240:	601a      	str	r2, [r3, #0]
    }
 800c242:	687b      	ldr	r3, [r7, #4]
 800c244:	4618      	mov	r0, r3
 800c246:	370c      	adds	r7, #12
 800c248:	46bd      	mov	sp, r7
 800c24a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c24e:	4770      	bx	lr
 800c250:	08023d44 	.word	0x08023d44

0800c254 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800c254:	b580      	push	{r7, lr}
 800c256:	b082      	sub	sp, #8
 800c258:	af00      	add	r7, sp, #0
 800c25a:	6078      	str	r0, [r7, #4]
    }
 800c25c:	6878      	ldr	r0, [r7, #4]
 800c25e:	f7ff ffe9 	bl	800c234 <_ZN8touchgfx9PresenterD1Ev>
 800c262:	2104      	movs	r1, #4
 800c264:	6878      	ldr	r0, [r7, #4]
 800c266:	f015 fb6a 	bl	802193e <_ZdlPvj>
 800c26a:	687b      	ldr	r3, [r7, #4]
 800c26c:	4618      	mov	r0, r3
 800c26e:	3708      	adds	r7, #8
 800c270:	46bd      	mov	sp, r7
 800c272:	bd80      	pop	{r7, pc}

0800c274 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800c274:	b480      	push	{r7}
 800c276:	b083      	sub	sp, #12
 800c278:	af00      	add	r7, sp, #0
 800c27a:	6078      	str	r0, [r7, #4]
    {
 800c27c:	4a04      	ldr	r2, [pc, #16]	; (800c290 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800c27e:	687b      	ldr	r3, [r7, #4]
 800c280:	601a      	str	r2, [r3, #0]
    }
 800c282:	687b      	ldr	r3, [r7, #4]
 800c284:	4618      	mov	r0, r3
 800c286:	370c      	adds	r7, #12
 800c288:	46bd      	mov	sp, r7
 800c28a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c28e:	4770      	bx	lr
 800c290:	08023d44 	.word	0x08023d44

0800c294 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800c294:	b480      	push	{r7}
 800c296:	b083      	sub	sp, #12
 800c298:	af00      	add	r7, sp, #0
 800c29a:	6078      	str	r0, [r7, #4]
 800c29c:	4a06      	ldr	r2, [pc, #24]	; (800c2b8 <_ZN13ModelListenerC1Ev+0x24>)
 800c29e:	687b      	ldr	r3, [r7, #4]
 800c2a0:	601a      	str	r2, [r3, #0]
 800c2a2:	687b      	ldr	r3, [r7, #4]
 800c2a4:	2200      	movs	r2, #0
 800c2a6:	605a      	str	r2, [r3, #4]
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	4618      	mov	r0, r3
 800c2ac:	370c      	adds	r7, #12
 800c2ae:	46bd      	mov	sp, r7
 800c2b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2b4:	4770      	bx	lr
 800c2b6:	bf00      	nop
 800c2b8:	08023d34 	.word	0x08023d34

0800c2bc <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800c2bc:	b480      	push	{r7}
 800c2be:	b083      	sub	sp, #12
 800c2c0:	af00      	add	r7, sp, #0
 800c2c2:	6078      	str	r0, [r7, #4]
 800c2c4:	4a04      	ldr	r2, [pc, #16]	; (800c2d8 <_ZN13ModelListenerD1Ev+0x1c>)
 800c2c6:	687b      	ldr	r3, [r7, #4]
 800c2c8:	601a      	str	r2, [r3, #0]
 800c2ca:	687b      	ldr	r3, [r7, #4]
 800c2cc:	4618      	mov	r0, r3
 800c2ce:	370c      	adds	r7, #12
 800c2d0:	46bd      	mov	sp, r7
 800c2d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2d6:	4770      	bx	lr
 800c2d8:	08023d34 	.word	0x08023d34

0800c2dc <_ZN13ModelListenerD0Ev>:
 800c2dc:	b580      	push	{r7, lr}
 800c2de:	b082      	sub	sp, #8
 800c2e0:	af00      	add	r7, sp, #0
 800c2e2:	6078      	str	r0, [r7, #4]
 800c2e4:	6878      	ldr	r0, [r7, #4]
 800c2e6:	f7ff ffe9 	bl	800c2bc <_ZN13ModelListenerD1Ev>
 800c2ea:	2108      	movs	r1, #8
 800c2ec:	6878      	ldr	r0, [r7, #4]
 800c2ee:	f015 fb26 	bl	802193e <_ZdlPvj>
 800c2f2:	687b      	ldr	r3, [r7, #4]
 800c2f4:	4618      	mov	r0, r3
 800c2f6:	3708      	adds	r7, #8
 800c2f8:	46bd      	mov	sp, r7
 800c2fa:	bd80      	pop	{r7, pc}

0800c2fc <_ZN15screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screenPresenter() {}
 800c2fc:	b580      	push	{r7, lr}
 800c2fe:	b082      	sub	sp, #8
 800c300:	af00      	add	r7, sp, #0
 800c302:	6078      	str	r0, [r7, #4]
 800c304:	4a09      	ldr	r2, [pc, #36]	; (800c32c <_ZN15screenPresenterD1Ev+0x30>)
 800c306:	687b      	ldr	r3, [r7, #4]
 800c308:	601a      	str	r2, [r3, #0]
 800c30a:	4a09      	ldr	r2, [pc, #36]	; (800c330 <_ZN15screenPresenterD1Ev+0x34>)
 800c30c:	687b      	ldr	r3, [r7, #4]
 800c30e:	605a      	str	r2, [r3, #4]
 800c310:	687b      	ldr	r3, [r7, #4]
 800c312:	3304      	adds	r3, #4
 800c314:	4618      	mov	r0, r3
 800c316:	f7ff ffd1 	bl	800c2bc <_ZN13ModelListenerD1Ev>
 800c31a:	687b      	ldr	r3, [r7, #4]
 800c31c:	4618      	mov	r0, r3
 800c31e:	f7ff ff89 	bl	800c234 <_ZN8touchgfx9PresenterD1Ev>
 800c322:	687b      	ldr	r3, [r7, #4]
 800c324:	4618      	mov	r0, r3
 800c326:	3708      	adds	r7, #8
 800c328:	46bd      	mov	sp, r7
 800c32a:	bd80      	pop	{r7, pc}
 800c32c:	08023d0c 	.word	0x08023d0c
 800c330:	08023d24 	.word	0x08023d24

0800c334 <_ZThn4_N15screenPresenterD1Ev>:
 800c334:	f1a0 0004 	sub.w	r0, r0, #4
 800c338:	e7e0      	b.n	800c2fc <_ZN15screenPresenterD1Ev>
 800c33a:	bf00      	nop

0800c33c <_ZN15screenPresenterD0Ev>:
 800c33c:	b580      	push	{r7, lr}
 800c33e:	b082      	sub	sp, #8
 800c340:	af00      	add	r7, sp, #0
 800c342:	6078      	str	r0, [r7, #4]
 800c344:	6878      	ldr	r0, [r7, #4]
 800c346:	f7ff ffd9 	bl	800c2fc <_ZN15screenPresenterD1Ev>
 800c34a:	2110      	movs	r1, #16
 800c34c:	6878      	ldr	r0, [r7, #4]
 800c34e:	f015 faf6 	bl	802193e <_ZdlPvj>
 800c352:	687b      	ldr	r3, [r7, #4]
 800c354:	4618      	mov	r0, r3
 800c356:	3708      	adds	r7, #8
 800c358:	46bd      	mov	sp, r7
 800c35a:	bd80      	pop	{r7, pc}

0800c35c <_ZThn4_N15screenPresenterD0Ev>:
 800c35c:	f1a0 0004 	sub.w	r0, r0, #4
 800c360:	e7ec      	b.n	800c33c <_ZN15screenPresenterD0Ev>
	...

0800c364 <_ZN15screenPresenterC1ER10screenView>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

screenPresenter::screenPresenter(screenView& v)
 800c364:	b580      	push	{r7, lr}
 800c366:	b082      	sub	sp, #8
 800c368:	af00      	add	r7, sp, #0
 800c36a:	6078      	str	r0, [r7, #4]
 800c36c:	6039      	str	r1, [r7, #0]
    : view(v)
 800c36e:	687b      	ldr	r3, [r7, #4]
 800c370:	4618      	mov	r0, r3
 800c372:	f7ff ff7f 	bl	800c274 <_ZN8touchgfx9PresenterC1Ev>
 800c376:	687b      	ldr	r3, [r7, #4]
 800c378:	3304      	adds	r3, #4
 800c37a:	4618      	mov	r0, r3
 800c37c:	f7ff ff8a 	bl	800c294 <_ZN13ModelListenerC1Ev>
 800c380:	4a06      	ldr	r2, [pc, #24]	; (800c39c <_ZN15screenPresenterC1ER10screenView+0x38>)
 800c382:	687b      	ldr	r3, [r7, #4]
 800c384:	601a      	str	r2, [r3, #0]
 800c386:	4a06      	ldr	r2, [pc, #24]	; (800c3a0 <_ZN15screenPresenterC1ER10screenView+0x3c>)
 800c388:	687b      	ldr	r3, [r7, #4]
 800c38a:	605a      	str	r2, [r3, #4]
 800c38c:	687b      	ldr	r3, [r7, #4]
 800c38e:	683a      	ldr	r2, [r7, #0]
 800c390:	60da      	str	r2, [r3, #12]
{

}
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	4618      	mov	r0, r3
 800c396:	3708      	adds	r7, #8
 800c398:	46bd      	mov	sp, r7
 800c39a:	bd80      	pop	{r7, pc}
 800c39c:	08023d0c 	.word	0x08023d0c
 800c3a0:	08023d24 	.word	0x08023d24

0800c3a4 <_ZN15screenPresenter8activateEv>:

void screenPresenter::activate()
{
 800c3a4:	b480      	push	{r7}
 800c3a6:	b083      	sub	sp, #12
 800c3a8:	af00      	add	r7, sp, #0
 800c3aa:	6078      	str	r0, [r7, #4]

}
 800c3ac:	bf00      	nop
 800c3ae:	370c      	adds	r7, #12
 800c3b0:	46bd      	mov	sp, r7
 800c3b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3b6:	4770      	bx	lr

0800c3b8 <_ZN15screenPresenter10deactivateEv>:

void screenPresenter::deactivate()
{
 800c3b8:	b480      	push	{r7}
 800c3ba:	b083      	sub	sp, #12
 800c3bc:	af00      	add	r7, sp, #0
 800c3be:	6078      	str	r0, [r7, #4]

}
 800c3c0:	bf00      	nop
 800c3c2:	370c      	adds	r7, #12
 800c3c4:	46bd      	mov	sp, r7
 800c3c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3ca:	4770      	bx	lr

0800c3cc <_ZN10screenViewD1Ev>:

class screenView : public screenViewBase
{
public:
    screenView();
    virtual ~screenView() {}
 800c3cc:	b580      	push	{r7, lr}
 800c3ce:	b082      	sub	sp, #8
 800c3d0:	af00      	add	r7, sp, #0
 800c3d2:	6078      	str	r0, [r7, #4]
 800c3d4:	4a05      	ldr	r2, [pc, #20]	; (800c3ec <_ZN10screenViewD1Ev+0x20>)
 800c3d6:	687b      	ldr	r3, [r7, #4]
 800c3d8:	601a      	str	r2, [r3, #0]
 800c3da:	687b      	ldr	r3, [r7, #4]
 800c3dc:	4618      	mov	r0, r3
 800c3de:	f7ff fbf9 	bl	800bbd4 <_ZN14screenViewBaseD1Ev>
 800c3e2:	687b      	ldr	r3, [r7, #4]
 800c3e4:	4618      	mov	r0, r3
 800c3e6:	3708      	adds	r7, #8
 800c3e8:	46bd      	mov	sp, r7
 800c3ea:	bd80      	pop	{r7, pc}
 800c3ec:	08023d5c 	.word	0x08023d5c

0800c3f0 <_ZN10screenViewD0Ev>:
 800c3f0:	b580      	push	{r7, lr}
 800c3f2:	b082      	sub	sp, #8
 800c3f4:	af00      	add	r7, sp, #0
 800c3f6:	6078      	str	r0, [r7, #4]
 800c3f8:	6878      	ldr	r0, [r7, #4]
 800c3fa:	f7ff ffe7 	bl	800c3cc <_ZN10screenViewD1Ev>
 800c3fe:	21e0      	movs	r1, #224	; 0xe0
 800c400:	6878      	ldr	r0, [r7, #4]
 800c402:	f015 fa9c 	bl	802193e <_ZdlPvj>
 800c406:	687b      	ldr	r3, [r7, #4]
 800c408:	4618      	mov	r0, r3
 800c40a:	3708      	adds	r7, #8
 800c40c:	46bd      	mov	sp, r7
 800c40e:	bd80      	pop	{r7, pc}

0800c410 <_ZN10screenViewC1Ev>:
#include <gui/screen_screen/screenView.hpp>

screenView::screenView()
 800c410:	b580      	push	{r7, lr}
 800c412:	b082      	sub	sp, #8
 800c414:	af00      	add	r7, sp, #0
 800c416:	6078      	str	r0, [r7, #4]
 800c418:	687b      	ldr	r3, [r7, #4]
 800c41a:	4618      	mov	r0, r3
 800c41c:	f7ff faea 	bl	800b9f4 <_ZN14screenViewBaseC1Ev>
 800c420:	4a03      	ldr	r2, [pc, #12]	; (800c430 <_ZN10screenViewC1Ev+0x20>)
 800c422:	687b      	ldr	r3, [r7, #4]
 800c424:	601a      	str	r2, [r3, #0]
{

}
 800c426:	687b      	ldr	r3, [r7, #4]
 800c428:	4618      	mov	r0, r3
 800c42a:	3708      	adds	r7, #8
 800c42c:	46bd      	mov	sp, r7
 800c42e:	bd80      	pop	{r7, pc}
 800c430:	08023d5c 	.word	0x08023d5c

0800c434 <_ZN10screenView11setupScreenEv>:

void screenView::setupScreen()
{
 800c434:	b580      	push	{r7, lr}
 800c436:	b082      	sub	sp, #8
 800c438:	af00      	add	r7, sp, #0
 800c43a:	6078      	str	r0, [r7, #4]
    screenViewBase::setupScreen();
 800c43c:	687b      	ldr	r3, [r7, #4]
 800c43e:	4618      	mov	r0, r3
 800c440:	f7ff fbfa 	bl	800bc38 <_ZN14screenViewBase11setupScreenEv>
}
 800c444:	bf00      	nop
 800c446:	3708      	adds	r7, #8
 800c448:	46bd      	mov	sp, r7
 800c44a:	bd80      	pop	{r7, pc}

0800c44c <_ZN10screenView14tearDownScreenEv>:

void screenView::tearDownScreen()
{
 800c44c:	b580      	push	{r7, lr}
 800c44e:	b082      	sub	sp, #8
 800c450:	af00      	add	r7, sp, #0
 800c452:	6078      	str	r0, [r7, #4]
    screenViewBase::tearDownScreen();
 800c454:	687b      	ldr	r3, [r7, #4]
 800c456:	4618      	mov	r0, r3
 800c458:	f7ff f988 	bl	800b76c <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800c45c:	bf00      	nop
 800c45e:	3708      	adds	r7, #8
 800c460:	46bd      	mov	sp, r7
 800c462:	bd80      	pop	{r7, pc}

0800c464 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800c464:	b480      	push	{r7}
 800c466:	b083      	sub	sp, #12
 800c468:	af00      	add	r7, sp, #0
 800c46a:	6078      	str	r0, [r7, #4]
    {
 800c46c:	4a04      	ldr	r2, [pc, #16]	; (800c480 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800c46e:	687b      	ldr	r3, [r7, #4]
 800c470:	601a      	str	r2, [r3, #0]
    }
 800c472:	687b      	ldr	r3, [r7, #4]
 800c474:	4618      	mov	r0, r3
 800c476:	370c      	adds	r7, #12
 800c478:	46bd      	mov	sp, r7
 800c47a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c47e:	4770      	bx	lr
 800c480:	08023da8 	.word	0x08023da8

0800c484 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800c484:	b580      	push	{r7, lr}
 800c486:	b082      	sub	sp, #8
 800c488:	af00      	add	r7, sp, #0
 800c48a:	6078      	str	r0, [r7, #4]
    }
 800c48c:	6878      	ldr	r0, [r7, #4]
 800c48e:	f7ff ffe9 	bl	800c464 <_ZN8touchgfx15TouchControllerD1Ev>
 800c492:	2104      	movs	r1, #4
 800c494:	6878      	ldr	r0, [r7, #4]
 800c496:	f015 fa52 	bl	802193e <_ZdlPvj>
 800c49a:	687b      	ldr	r3, [r7, #4]
 800c49c:	4618      	mov	r0, r3
 800c49e:	3708      	adds	r7, #8
 800c4a0:	46bd      	mov	sp, r7
 800c4a2:	bd80      	pop	{r7, pc}

0800c4a4 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800c4a4:	b480      	push	{r7}
 800c4a6:	b083      	sub	sp, #12
 800c4a8:	af00      	add	r7, sp, #0
 800c4aa:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800c4ac:	bf00      	nop
 800c4ae:	370c      	adds	r7, #12
 800c4b0:	46bd      	mov	sp, r7
 800c4b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4b6:	4770      	bx	lr

0800c4b8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800c4b8:	b480      	push	{r7}
 800c4ba:	b085      	sub	sp, #20
 800c4bc:	af00      	add	r7, sp, #0
 800c4be:	60f8      	str	r0, [r7, #12]
 800c4c0:	60b9      	str	r1, [r7, #8]
 800c4c2:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800c4c4:	2300      	movs	r3, #0
}
 800c4c6:	4618      	mov	r0, r3
 800c4c8:	3714      	adds	r7, #20
 800c4ca:	46bd      	mov	sp, r7
 800c4cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4d0:	4770      	bx	lr
	...

0800c4d4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800c4d4:	b580      	push	{r7, lr}
 800c4d6:	b082      	sub	sp, #8
 800c4d8:	af00      	add	r7, sp, #0
 800c4da:	6078      	str	r0, [r7, #4]
 800c4dc:	4a05      	ldr	r2, [pc, #20]	; (800c4f4 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800c4de:	687b      	ldr	r3, [r7, #4]
 800c4e0:	601a      	str	r2, [r3, #0]
 800c4e2:	687b      	ldr	r3, [r7, #4]
 800c4e4:	4618      	mov	r0, r3
 800c4e6:	f7ff ffbd 	bl	800c464 <_ZN8touchgfx15TouchControllerD1Ev>
 800c4ea:	687b      	ldr	r3, [r7, #4]
 800c4ec:	4618      	mov	r0, r3
 800c4ee:	3708      	adds	r7, #8
 800c4f0:	46bd      	mov	sp, r7
 800c4f2:	bd80      	pop	{r7, pc}
 800c4f4:	08023d90 	.word	0x08023d90

0800c4f8 <_ZN20STM32TouchControllerD0Ev>:
 800c4f8:	b580      	push	{r7, lr}
 800c4fa:	b082      	sub	sp, #8
 800c4fc:	af00      	add	r7, sp, #0
 800c4fe:	6078      	str	r0, [r7, #4]
 800c500:	6878      	ldr	r0, [r7, #4]
 800c502:	f7ff ffe7 	bl	800c4d4 <_ZN20STM32TouchControllerD1Ev>
 800c506:	2104      	movs	r1, #4
 800c508:	6878      	ldr	r0, [r7, #4]
 800c50a:	f015 fa18 	bl	802193e <_ZdlPvj>
 800c50e:	687b      	ldr	r3, [r7, #4]
 800c510:	4618      	mov	r0, r3
 800c512:	3708      	adds	r7, #8
 800c514:	46bd      	mov	sp, r7
 800c516:	bd80      	pop	{r7, pc}

0800c518 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800c518:	b480      	push	{r7}
 800c51a:	af00      	add	r7, sp, #0

}
 800c51c:	bf00      	nop
 800c51e:	46bd      	mov	sp, r7
 800c520:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c524:	4770      	bx	lr
	...

0800c528 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800c528:	b480      	push	{r7}
 800c52a:	b083      	sub	sp, #12
 800c52c:	af00      	add	r7, sp, #0
 800c52e:	4603      	mov	r3, r0
 800c530:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800c532:	79fb      	ldrb	r3, [r7, #7]
 800c534:	2b03      	cmp	r3, #3
 800c536:	d80c      	bhi.n	800c552 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800c538:	a201      	add	r2, pc, #4	; (adr r2, 800c540 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800c53a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c53e:	bf00      	nop
 800c540:	0800c551 	.word	0x0800c551
 800c544:	0800c551 	.word	0x0800c551
 800c548:	0800c551 	.word	0x0800c551
 800c54c:	0800c551 	.word	0x0800c551
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800c550:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800c552:	bf00      	nop
 800c554:	370c      	adds	r7, #12
 800c556:	46bd      	mov	sp, r7
 800c558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c55c:	4770      	bx	lr
 800c55e:	bf00      	nop

0800c560 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800c560:	b480      	push	{r7}
 800c562:	b083      	sub	sp, #12
 800c564:	af00      	add	r7, sp, #0
 800c566:	4603      	mov	r3, r0
 800c568:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800c56a:	79fb      	ldrb	r3, [r7, #7]
 800c56c:	2b03      	cmp	r3, #3
 800c56e:	d80c      	bhi.n	800c58a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800c570:	a201      	add	r2, pc, #4	; (adr r2, 800c578 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800c572:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c576:	bf00      	nop
 800c578:	0800c589 	.word	0x0800c589
 800c57c:	0800c589 	.word	0x0800c589
 800c580:	0800c589 	.word	0x0800c589
 800c584:	0800c589 	.word	0x0800c589
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800c588:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800c58a:	bf00      	nop
 800c58c:	370c      	adds	r7, #12
 800c58e:	46bd      	mov	sp, r7
 800c590:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c594:	4770      	bx	lr
 800c596:	bf00      	nop

0800c598 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800c598:	b480      	push	{r7}
 800c59a:	b083      	sub	sp, #12
 800c59c:	af00      	add	r7, sp, #0
 800c59e:	4603      	mov	r3, r0
 800c5a0:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800c5a2:	79fb      	ldrb	r3, [r7, #7]
 800c5a4:	2b03      	cmp	r3, #3
 800c5a6:	d80c      	bhi.n	800c5c2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800c5a8:	a201      	add	r2, pc, #4	; (adr r2, 800c5b0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800c5aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c5ae:	bf00      	nop
 800c5b0:	0800c5c1 	.word	0x0800c5c1
 800c5b4:	0800c5c1 	.word	0x0800c5c1
 800c5b8:	0800c5c1 	.word	0x0800c5c1
 800c5bc:	0800c5c1 	.word	0x0800c5c1
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800c5c0:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800c5c2:	bf00      	nop
 800c5c4:	370c      	adds	r7, #12
 800c5c6:	46bd      	mov	sp, r7
 800c5c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5cc:	4770      	bx	lr
 800c5ce:	bf00      	nop

0800c5d0 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800c5d0:	b480      	push	{r7}
 800c5d2:	b083      	sub	sp, #12
 800c5d4:	af00      	add	r7, sp, #0
 800c5d6:	6078      	str	r0, [r7, #4]
    {
 800c5d8:	4a04      	ldr	r2, [pc, #16]	; (800c5ec <_ZN8touchgfx3HALD1Ev+0x1c>)
 800c5da:	687b      	ldr	r3, [r7, #4]
 800c5dc:	601a      	str	r2, [r3, #0]
    }
 800c5de:	687b      	ldr	r3, [r7, #4]
 800c5e0:	4618      	mov	r0, r3
 800c5e2:	370c      	adds	r7, #12
 800c5e4:	46bd      	mov	sp, r7
 800c5e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5ea:	4770      	bx	lr
 800c5ec:	080241e0 	.word	0x080241e0

0800c5f0 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800c5f0:	b580      	push	{r7, lr}
 800c5f2:	b082      	sub	sp, #8
 800c5f4:	af00      	add	r7, sp, #0
 800c5f6:	6078      	str	r0, [r7, #4]
    }
 800c5f8:	6878      	ldr	r0, [r7, #4]
 800c5fa:	f7ff ffe9 	bl	800c5d0 <_ZN8touchgfx3HALD1Ev>
 800c5fe:	217c      	movs	r1, #124	; 0x7c
 800c600:	6878      	ldr	r0, [r7, #4]
 800c602:	f015 f99c 	bl	802193e <_ZdlPvj>
 800c606:	687b      	ldr	r3, [r7, #4]
 800c608:	4618      	mov	r0, r3
 800c60a:	3708      	adds	r7, #8
 800c60c:	46bd      	mov	sp, r7
 800c60e:	bd80      	pop	{r7, pc}

0800c610 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800c610:	b480      	push	{r7}
 800c612:	b083      	sub	sp, #12
 800c614:	af00      	add	r7, sp, #0
 800c616:	6078      	str	r0, [r7, #4]
 800c618:	460b      	mov	r3, r1
 800c61a:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800c61c:	687b      	ldr	r3, [r7, #4]
 800c61e:	78fa      	ldrb	r2, [r7, #3]
 800c620:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800c624:	687b      	ldr	r3, [r7, #4]
 800c626:	2201      	movs	r2, #1
 800c628:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 800c62c:	bf00      	nop
 800c62e:	370c      	adds	r7, #12
 800c630:	46bd      	mov	sp, r7
 800c632:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c636:	4770      	bx	lr

0800c638 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800c638:	b580      	push	{r7, lr}
 800c63a:	b082      	sub	sp, #8
 800c63c:	af00      	add	r7, sp, #0
 800c63e:	6078      	str	r0, [r7, #4]
 800c640:	460b      	mov	r3, r1
 800c642:	807b      	strh	r3, [r7, #2]
 800c644:	4613      	mov	r3, r2
 800c646:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800c648:	4b0c      	ldr	r3, [pc, #48]	; (800c67c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800c64a:	881b      	ldrh	r3, [r3, #0]
 800c64c:	887a      	ldrh	r2, [r7, #2]
 800c64e:	429a      	cmp	r2, r3
 800c650:	d304      	bcc.n	800c65c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800c652:	4b0b      	ldr	r3, [pc, #44]	; (800c680 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800c654:	881b      	ldrh	r3, [r3, #0]
 800c656:	883a      	ldrh	r2, [r7, #0]
 800c658:	429a      	cmp	r2, r3
 800c65a:	d205      	bcs.n	800c668 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800c65c:	4b09      	ldr	r3, [pc, #36]	; (800c684 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800c65e:	4a0a      	ldr	r2, [pc, #40]	; (800c688 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800c660:	219e      	movs	r1, #158	; 0x9e
 800c662:	480a      	ldr	r0, [pc, #40]	; (800c68c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800c664:	f015 f99a 	bl	802199c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800c668:	4a09      	ldr	r2, [pc, #36]	; (800c690 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800c66a:	887b      	ldrh	r3, [r7, #2]
 800c66c:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800c66e:	4a09      	ldr	r2, [pc, #36]	; (800c694 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800c670:	883b      	ldrh	r3, [r7, #0]
 800c672:	8013      	strh	r3, [r2, #0]
    }
 800c674:	bf00      	nop
 800c676:	3708      	adds	r7, #8
 800c678:	46bd      	mov	sp, r7
 800c67a:	bd80      	pop	{r7, pc}
 800c67c:	24001e70 	.word	0x24001e70
 800c680:	24001e72 	.word	0x24001e72
 800c684:	08022fcc 	.word	0x08022fcc
 800c688:	08023030 	.word	0x08023030
 800c68c:	08023074 	.word	0x08023074
 800c690:	24001e76 	.word	0x24001e76
 800c694:	24001e78 	.word	0x24001e78

0800c698 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800c698:	b580      	push	{r7, lr}
 800c69a:	b082      	sub	sp, #8
 800c69c:	af00      	add	r7, sp, #0
 800c69e:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800c6a0:	687b      	ldr	r3, [r7, #4]
 800c6a2:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 800c6a6:	2b00      	cmp	r3, #0
 800c6a8:	d009      	beq.n	800c6be <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800c6aa:	687b      	ldr	r3, [r7, #4]
 800c6ac:	685a      	ldr	r2, [r3, #4]
 800c6ae:	687b      	ldr	r3, [r7, #4]
 800c6b0:	685b      	ldr	r3, [r3, #4]
 800c6b2:	681b      	ldr	r3, [r3, #0]
 800c6b4:	681b      	ldr	r3, [r3, #0]
 800c6b6:	4610      	mov	r0, r2
 800c6b8:	4798      	blx	r3
 800c6ba:	4603      	mov	r3, r0
 800c6bc:	e000      	b.n	800c6c0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800c6be:	2300      	movs	r3, #0
    }
 800c6c0:	4618      	mov	r0, r3
 800c6c2:	3708      	adds	r7, #8
 800c6c4:	46bd      	mov	sp, r7
 800c6c6:	bd80      	pop	{r7, pc}

0800c6c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800c6c8:	b580      	push	{r7, lr}
 800c6ca:	b082      	sub	sp, #8
 800c6cc:	af00      	add	r7, sp, #0
 800c6ce:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800c6d0:	6878      	ldr	r0, [r7, #4]
 800c6d2:	f002 fde3 	bl	800f29c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800c6d6:	687b      	ldr	r3, [r7, #4]
 800c6d8:	681b      	ldr	r3, [r3, #0]
 800c6da:	33ac      	adds	r3, #172	; 0xac
 800c6dc:	681b      	ldr	r3, [r3, #0]
 800c6de:	6878      	ldr	r0, [r7, #4]
 800c6e0:	4798      	blx	r3
    }
 800c6e2:	bf00      	nop
 800c6e4:	3708      	adds	r7, #8
 800c6e6:	46bd      	mov	sp, r7
 800c6e8:	bd80      	pop	{r7, pc}

0800c6ea <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800c6ea:	b480      	push	{r7}
 800c6ec:	b083      	sub	sp, #12
 800c6ee:	af00      	add	r7, sp, #0
 800c6f0:	6078      	str	r0, [r7, #4]
 800c6f2:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800c6f4:	2300      	movs	r3, #0
    }
 800c6f6:	4618      	mov	r0, r3
 800c6f8:	370c      	adds	r7, #12
 800c6fa:	46bd      	mov	sp, r7
 800c6fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c700:	4770      	bx	lr
	...

0800c704 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800c704:	b580      	push	{r7, lr}
 800c706:	b084      	sub	sp, #16
 800c708:	af00      	add	r7, sp, #0
 800c70a:	60f8      	str	r0, [r7, #12]
 800c70c:	60b9      	str	r1, [r7, #8]
 800c70e:	607a      	str	r2, [r7, #4]
 800c710:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800c712:	68bb      	ldr	r3, [r7, #8]
 800c714:	2b00      	cmp	r3, #0
 800c716:	d106      	bne.n	800c726 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800c718:	4b0f      	ldr	r3, [pc, #60]	; (800c758 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800c71a:	4a10      	ldr	r2, [pc, #64]	; (800c75c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800c71c:	f240 21d2 	movw	r1, #722	; 0x2d2
 800c720:	480f      	ldr	r0, [pc, #60]	; (800c760 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800c722:	f015 f93b 	bl	802199c <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800c726:	68fb      	ldr	r3, [r7, #12]
 800c728:	68ba      	ldr	r2, [r7, #8]
 800c72a:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800c72c:	68fb      	ldr	r3, [r7, #12]
 800c72e:	687a      	ldr	r2, [r7, #4]
 800c730:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800c732:	687b      	ldr	r3, [r7, #4]
 800c734:	2b00      	cmp	r3, #0
 800c736:	bf14      	ite	ne
 800c738:	2301      	movne	r3, #1
 800c73a:	2300      	moveq	r3, #0
 800c73c:	b2da      	uxtb	r2, r3
 800c73e:	4b09      	ldr	r3, [pc, #36]	; (800c764 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800c740:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800c742:	68fb      	ldr	r3, [r7, #12]
 800c744:	681b      	ldr	r3, [r3, #0]
 800c746:	338c      	adds	r3, #140	; 0x8c
 800c748:	681b      	ldr	r3, [r3, #0]
 800c74a:	6839      	ldr	r1, [r7, #0]
 800c74c:	68f8      	ldr	r0, [r7, #12]
 800c74e:	4798      	blx	r3
    }
 800c750:	bf00      	nop
 800c752:	3710      	adds	r7, #16
 800c754:	46bd      	mov	sp, r7
 800c756:	bd80      	pop	{r7, pc}
 800c758:	080230b8 	.word	0x080230b8
 800c75c:	080230f0 	.word	0x080230f0
 800c760:	08023074 	.word	0x08023074
 800c764:	24001e7a 	.word	0x24001e7a

0800c768 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800c768:	b480      	push	{r7}
 800c76a:	b083      	sub	sp, #12
 800c76c:	af00      	add	r7, sp, #0
 800c76e:	6078      	str	r0, [r7, #4]
 800c770:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800c772:	687b      	ldr	r3, [r7, #4]
 800c774:	683a      	ldr	r2, [r7, #0]
 800c776:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800c778:	683b      	ldr	r3, [r7, #0]
 800c77a:	2b00      	cmp	r3, #0
 800c77c:	bf14      	ite	ne
 800c77e:	2301      	movne	r3, #1
 800c780:	2300      	moveq	r3, #0
 800c782:	b2da      	uxtb	r2, r3
 800c784:	4b03      	ldr	r3, [pc, #12]	; (800c794 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800c786:	701a      	strb	r2, [r3, #0]
    }
 800c788:	bf00      	nop
 800c78a:	370c      	adds	r7, #12
 800c78c:	46bd      	mov	sp, r7
 800c78e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c792:	4770      	bx	lr
 800c794:	24001e7b 	.word	0x24001e7b

0800c798 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800c798:	b480      	push	{r7}
 800c79a:	b083      	sub	sp, #12
 800c79c:	af00      	add	r7, sp, #0
 800c79e:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800c7a0:	2300      	movs	r3, #0
    }
 800c7a2:	4618      	mov	r0, r3
 800c7a4:	370c      	adds	r7, #12
 800c7a6:	46bd      	mov	sp, r7
 800c7a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7ac:	4770      	bx	lr

0800c7ae <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800c7ae:	b580      	push	{r7, lr}
 800c7b0:	b082      	sub	sp, #8
 800c7b2:	af00      	add	r7, sp, #0
 800c7b4:	6078      	str	r0, [r7, #4]
 800c7b6:	460b      	mov	r3, r1
 800c7b8:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c7be:	2b00      	cmp	r3, #0
 800c7c0:	d004      	beq.n	800c7cc <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800c7c2:	687b      	ldr	r3, [r7, #4]
 800c7c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c7c6:	887a      	ldrh	r2, [r7, #2]
 800c7c8:	4610      	mov	r0, r2
 800c7ca:	4798      	blx	r3
        }
    }
 800c7cc:	bf00      	nop
 800c7ce:	3708      	adds	r7, #8
 800c7d0:	46bd      	mov	sp, r7
 800c7d2:	bd80      	pop	{r7, pc}

0800c7d4 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800c7d4:	b480      	push	{r7}
 800c7d6:	b083      	sub	sp, #12
 800c7d8:	af00      	add	r7, sp, #0
 800c7da:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800c7dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 800c7e0:	4618      	mov	r0, r3
 800c7e2:	370c      	adds	r7, #12
 800c7e4:	46bd      	mov	sp, r7
 800c7e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7ea:	4770      	bx	lr

0800c7ec <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800c7ec:	b580      	push	{r7, lr}
 800c7ee:	b082      	sub	sp, #8
 800c7f0:	af00      	add	r7, sp, #0
 800c7f2:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800c7f4:	687b      	ldr	r3, [r7, #4]
 800c7f6:	685a      	ldr	r2, [r3, #4]
 800c7f8:	687b      	ldr	r3, [r7, #4]
 800c7fa:	685b      	ldr	r3, [r3, #4]
 800c7fc:	681b      	ldr	r3, [r3, #0]
 800c7fe:	3318      	adds	r3, #24
 800c800:	681b      	ldr	r3, [r3, #0]
 800c802:	4610      	mov	r0, r2
 800c804:	4798      	blx	r3
 800c806:	4603      	mov	r3, r0
    }
 800c808:	4618      	mov	r0, r3
 800c80a:	3708      	adds	r7, #8
 800c80c:	46bd      	mov	sp, r7
 800c80e:	bd80      	pop	{r7, pc}

0800c810 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800c810:	b480      	push	{r7}
 800c812:	b085      	sub	sp, #20
 800c814:	af00      	add	r7, sp, #0
 800c816:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800c818:	687b      	ldr	r3, [r7, #4]
 800c81a:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800c824:	429a      	cmp	r2, r3
 800c826:	d011      	beq.n	800c84c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800c828:	4b14      	ldr	r3, [pc, #80]	; (800c87c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800c82a:	781b      	ldrb	r3, [r3, #0]
 800c82c:	2b00      	cmp	r3, #0
 800c82e:	d11e      	bne.n	800c86e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800c830:	4b13      	ldr	r3, [pc, #76]	; (800c880 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800c832:	881b      	ldrh	r3, [r3, #0]
 800c834:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800c836:	4b13      	ldr	r3, [pc, #76]	; (800c884 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800c838:	881a      	ldrh	r2, [r3, #0]
 800c83a:	4b11      	ldr	r3, [pc, #68]	; (800c880 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800c83c:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800c83e:	4a11      	ldr	r2, [pc, #68]	; (800c884 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800c840:	89bb      	ldrh	r3, [r7, #12]
 800c842:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800c844:	4b0d      	ldr	r3, [pc, #52]	; (800c87c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800c846:	2201      	movs	r2, #1
 800c848:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800c84a:	e010      	b.n	800c86e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800c84c:	4b0b      	ldr	r3, [pc, #44]	; (800c87c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800c84e:	781b      	ldrb	r3, [r3, #0]
 800c850:	2b00      	cmp	r3, #0
 800c852:	d00c      	beq.n	800c86e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800c854:	4b0a      	ldr	r3, [pc, #40]	; (800c880 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800c856:	881b      	ldrh	r3, [r3, #0]
 800c858:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800c85a:	4b0a      	ldr	r3, [pc, #40]	; (800c884 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800c85c:	881a      	ldrh	r2, [r3, #0]
 800c85e:	4b08      	ldr	r3, [pc, #32]	; (800c880 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800c860:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800c862:	4a08      	ldr	r2, [pc, #32]	; (800c884 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800c864:	89fb      	ldrh	r3, [r7, #14]
 800c866:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800c868:	4b04      	ldr	r3, [pc, #16]	; (800c87c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800c86a:	2200      	movs	r2, #0
 800c86c:	701a      	strb	r2, [r3, #0]
    }
 800c86e:	bf00      	nop
 800c870:	3714      	adds	r7, #20
 800c872:	46bd      	mov	sp, r7
 800c874:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c878:	4770      	bx	lr
 800c87a:	bf00      	nop
 800c87c:	24001e74 	.word	0x24001e74
 800c880:	24001e72 	.word	0x24001e72
 800c884:	24001e70 	.word	0x24001e70

0800c888 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800c888:	b580      	push	{r7, lr}
 800c88a:	b082      	sub	sp, #8
 800c88c:	af00      	add	r7, sp, #0
 800c88e:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800c890:	687b      	ldr	r3, [r7, #4]
 800c892:	4618      	mov	r0, r3
 800c894:	f001 ff60 	bl	800e758 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800c898:	bf00      	nop
 800c89a:	3708      	adds	r7, #8
 800c89c:	46bd      	mov	sp, r7
 800c89e:	bd80      	pop	{r7, pc}

0800c8a0 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800c8a0:	b580      	push	{r7, lr}
 800c8a2:	b082      	sub	sp, #8
 800c8a4:	af00      	add	r7, sp, #0
 800c8a6:	6078      	str	r0, [r7, #4]
 800c8a8:	4a05      	ldr	r2, [pc, #20]	; (800c8c0 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800c8aa:	687b      	ldr	r3, [r7, #4]
 800c8ac:	601a      	str	r2, [r3, #0]
 800c8ae:	687b      	ldr	r3, [r7, #4]
 800c8b0:	4618      	mov	r0, r3
 800c8b2:	f7ff fe8d 	bl	800c5d0 <_ZN8touchgfx3HALD1Ev>
 800c8b6:	687b      	ldr	r3, [r7, #4]
 800c8b8:	4618      	mov	r0, r3
 800c8ba:	3708      	adds	r7, #8
 800c8bc:	46bd      	mov	sp, r7
 800c8be:	bd80      	pop	{r7, pc}
 800c8c0:	0802400c 	.word	0x0802400c

0800c8c4 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800c8c4:	b580      	push	{r7, lr}
 800c8c6:	b082      	sub	sp, #8
 800c8c8:	af00      	add	r7, sp, #0
 800c8ca:	6078      	str	r0, [r7, #4]
 800c8cc:	6878      	ldr	r0, [r7, #4]
 800c8ce:	f7ff ffe7 	bl	800c8a0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800c8d2:	217c      	movs	r1, #124	; 0x7c
 800c8d4:	6878      	ldr	r0, [r7, #4]
 800c8d6:	f015 f832 	bl	802193e <_ZdlPvj>
 800c8da:	687b      	ldr	r3, [r7, #4]
 800c8dc:	4618      	mov	r0, r3
 800c8de:	3708      	adds	r7, #8
 800c8e0:	46bd      	mov	sp, r7
 800c8e2:	bd80      	pop	{r7, pc}

0800c8e4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800c8e4:	b580      	push	{r7, lr}
 800c8e6:	b082      	sub	sp, #8
 800c8e8:	af00      	add	r7, sp, #0
 800c8ea:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800c8ec:	687b      	ldr	r3, [r7, #4]
 800c8ee:	4618      	mov	r0, r3
 800c8f0:	f7ff ffca 	bl	800c888 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800c8f4:	bf00      	nop
 800c8f6:	3708      	adds	r7, #8
 800c8f8:	46bd      	mov	sp, r7
 800c8fa:	bd80      	pop	{r7, pc}

0800c8fc <_ZN11TouchGFXHAL10initializeEv>:
 */
#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800c8fc:	b580      	push	{r7, lr}
 800c8fe:	b082      	sub	sp, #8
 800c900:	af00      	add	r7, sp, #0
 800c902:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800c904:	687b      	ldr	r3, [r7, #4]
 800c906:	4618      	mov	r0, r3
 800c908:	f000 fffe 	bl	800d908 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800c90c:	bf00      	nop
 800c90e:	3708      	adds	r7, #8
 800c910:	46bd      	mov	sp, r7
 800c912:	bd80      	pop	{r7, pc}

0800c914 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800c914:	b580      	push	{r7, lr}
 800c916:	b082      	sub	sp, #8
 800c918:	af00      	add	r7, sp, #0
 800c91a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800c91c:	687b      	ldr	r3, [r7, #4]
 800c91e:	4618      	mov	r0, r3
 800c920:	f001 f870 	bl	800da04 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800c924:	4603      	mov	r3, r0
}
 800c926:	4618      	mov	r0, r3
 800c928:	3708      	adds	r7, #8
 800c92a:	46bd      	mov	sp, r7
 800c92c:	bd80      	pop	{r7, pc}

0800c92e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800c92e:	b580      	push	{r7, lr}
 800c930:	b082      	sub	sp, #8
 800c932:	af00      	add	r7, sp, #0
 800c934:	6078      	str	r0, [r7, #4]
 800c936:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800c938:	687b      	ldr	r3, [r7, #4]
 800c93a:	6839      	ldr	r1, [r7, #0]
 800c93c:	4618      	mov	r0, r3
 800c93e:	f001 f86c 	bl	800da1a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800c942:	bf00      	nop
 800c944:	3708      	adds	r7, #8
 800c946:	46bd      	mov	sp, r7
 800c948:	bd80      	pop	{r7, pc}

0800c94a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800c94a:	b580      	push	{r7, lr}
 800c94c:	b082      	sub	sp, #8
 800c94e:	af00      	add	r7, sp, #0
 800c950:	6078      	str	r0, [r7, #4]
 800c952:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800c954:	687b      	ldr	r3, [r7, #4]
 800c956:	6839      	ldr	r1, [r7, #0]
 800c958:	4618      	mov	r0, r3
 800c95a:	f001 f869 	bl	800da30 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800c95e:	bf00      	nop
 800c960:	3708      	adds	r7, #8
 800c962:	46bd      	mov	sp, r7
 800c964:	bd80      	pop	{r7, pc}

0800c966 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800c966:	b580      	push	{r7, lr}
 800c968:	b084      	sub	sp, #16
 800c96a:	af00      	add	r7, sp, #0
 800c96c:	60f8      	str	r0, [r7, #12]
 800c96e:	60b9      	str	r1, [r7, #8]
 800c970:	607a      	str	r2, [r7, #4]
 800c972:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800c974:	68f8      	ldr	r0, [r7, #12]
 800c976:	683b      	ldr	r3, [r7, #0]
 800c978:	687a      	ldr	r2, [r7, #4]
 800c97a:	68b9      	ldr	r1, [r7, #8]
 800c97c:	f001 f89b 	bl	800dab6 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800c980:	4603      	mov	r3, r0
}
 800c982:	4618      	mov	r0, r3
 800c984:	3710      	adds	r7, #16
 800c986:	46bd      	mov	sp, r7
 800c988:	bd80      	pop	{r7, pc}

0800c98a <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800c98a:	b580      	push	{r7, lr}
 800c98c:	b082      	sub	sp, #8
 800c98e:	af00      	add	r7, sp, #0
 800c990:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800c992:	687b      	ldr	r3, [r7, #4]
 800c994:	4618      	mov	r0, r3
 800c996:	f000 ffe7 	bl	800d968 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800c99a:	bf00      	nop
 800c99c:	3708      	adds	r7, #8
 800c99e:	46bd      	mov	sp, r7
 800c9a0:	bd80      	pop	{r7, pc}

0800c9a2 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800c9a2:	b580      	push	{r7, lr}
 800c9a4:	b082      	sub	sp, #8
 800c9a6:	af00      	add	r7, sp, #0
 800c9a8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800c9aa:	687b      	ldr	r3, [r7, #4]
 800c9ac:	4618      	mov	r0, r3
 800c9ae:	f000 ffe5 	bl	800d97c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800c9b2:	bf00      	nop
 800c9b4:	3708      	adds	r7, #8
 800c9b6:	46bd      	mov	sp, r7
 800c9b8:	bd80      	pop	{r7, pc}

0800c9ba <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800c9ba:	b580      	push	{r7, lr}
 800c9bc:	b082      	sub	sp, #8
 800c9be:	af00      	add	r7, sp, #0
 800c9c0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800c9c2:	687b      	ldr	r3, [r7, #4]
 800c9c4:	4618      	mov	r0, r3
 800c9c6:	f000 ffe3 	bl	800d990 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800c9ca:	bf00      	nop
 800c9cc:	3708      	adds	r7, #8
 800c9ce:	46bd      	mov	sp, r7
 800c9d0:	bd80      	pop	{r7, pc}

0800c9d2 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800c9d2:	b580      	push	{r7, lr}
 800c9d4:	b082      	sub	sp, #8
 800c9d6:	af00      	add	r7, sp, #0
 800c9d8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800c9da:	687b      	ldr	r3, [r7, #4]
 800c9dc:	4618      	mov	r0, r3
 800c9de:	f000 ffe1 	bl	800d9a4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800c9e2:	bf00      	nop
 800c9e4:	3708      	adds	r7, #8
 800c9e6:	46bd      	mov	sp, r7
 800c9e8:	bd80      	pop	{r7, pc}

0800c9ea <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800c9ea:	b580      	push	{r7, lr}
 800c9ec:	b082      	sub	sp, #8
 800c9ee:	af00      	add	r7, sp, #0
 800c9f0:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800c9f2:	687b      	ldr	r3, [r7, #4]
 800c9f4:	4618      	mov	r0, r3
 800c9f6:	f000 ffdf 	bl	800d9b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800c9fa:	4603      	mov	r3, r0
}
 800c9fc:	4618      	mov	r0, r3
 800c9fe:	3708      	adds	r7, #8
 800ca00:	46bd      	mov	sp, r7
 800ca02:	bd80      	pop	{r7, pc}

0800ca04 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800ca04:	b580      	push	{r7, lr}
 800ca06:	b082      	sub	sp, #8
 800ca08:	af00      	add	r7, sp, #0
 800ca0a:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800ca0c:	687b      	ldr	r3, [r7, #4]
 800ca0e:	4618      	mov	r0, r3
 800ca10:	f000 ffdf 	bl	800d9d2 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800ca14:	bf00      	nop
 800ca16:	3708      	adds	r7, #8
 800ca18:	46bd      	mov	sp, r7
 800ca1a:	bd80      	pop	{r7, pc}

0800ca1c <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800ca1c:	b580      	push	{r7, lr}
 800ca1e:	b082      	sub	sp, #8
 800ca20:	af00      	add	r7, sp, #0
 800ca22:	6078      	str	r0, [r7, #4]
 800ca24:	4a05      	ldr	r2, [pc, #20]	; (800ca3c <_ZN11TouchGFXHALD1Ev+0x20>)
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	601a      	str	r2, [r3, #0]
 800ca2a:	687b      	ldr	r3, [r7, #4]
 800ca2c:	4618      	mov	r0, r3
 800ca2e:	f7ff ff37 	bl	800c8a0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800ca32:	687b      	ldr	r3, [r7, #4]
 800ca34:	4618      	mov	r0, r3
 800ca36:	3708      	adds	r7, #8
 800ca38:	46bd      	mov	sp, r7
 800ca3a:	bd80      	pop	{r7, pc}
 800ca3c:	08023dc0 	.word	0x08023dc0

0800ca40 <_ZN11TouchGFXHALD0Ev>:
 800ca40:	b580      	push	{r7, lr}
 800ca42:	b082      	sub	sp, #8
 800ca44:	af00      	add	r7, sp, #0
 800ca46:	6078      	str	r0, [r7, #4]
 800ca48:	6878      	ldr	r0, [r7, #4]
 800ca4a:	f7ff ffe7 	bl	800ca1c <_ZN11TouchGFXHALD1Ev>
 800ca4e:	217c      	movs	r1, #124	; 0x7c
 800ca50:	6878      	ldr	r0, [r7, #4]
 800ca52:	f014 ff74 	bl	802193e <_ZdlPvj>
 800ca56:	687b      	ldr	r3, [r7, #4]
 800ca58:	4618      	mov	r0, r3
 800ca5a:	3708      	adds	r7, #8
 800ca5c:	46bd      	mov	sp, r7
 800ca5e:	bd80      	pop	{r7, pc}

0800ca60 <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 800ca60:	b480      	push	{r7}
 800ca62:	af00      	add	r7, sp, #0
	return isTransmittingData;
 800ca64:	4b03      	ldr	r3, [pc, #12]	; (800ca74 <touchgfxDisplayDriverTransmitActive+0x14>)
 800ca66:	781b      	ldrb	r3, [r3, #0]
}
 800ca68:	4618      	mov	r0, r3
 800ca6a:	46bd      	mov	sp, r7
 800ca6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca70:	4770      	bx	lr
 800ca72:	bf00      	nop
 800ca74:	240003e4 	.word	0x240003e4

0800ca78 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 800ca78:	b590      	push	{r4, r7, lr}
 800ca7a:	b085      	sub	sp, #20
 800ca7c:	af00      	add	r7, sp, #0
 800ca7e:	60f8      	str	r0, [r7, #12]
 800ca80:	4608      	mov	r0, r1
 800ca82:	4611      	mov	r1, r2
 800ca84:	461a      	mov	r2, r3
 800ca86:	4603      	mov	r3, r0
 800ca88:	817b      	strh	r3, [r7, #10]
 800ca8a:	460b      	mov	r3, r1
 800ca8c:	813b      	strh	r3, [r7, #8]
 800ca8e:	4613      	mov	r3, r2
 800ca90:	80fb      	strh	r3, [r7, #6]
	isTransmittingData = 1;
 800ca92:	4b0f      	ldr	r3, [pc, #60]	; (800cad0 <touchgfxDisplayDriverTransmitBlock+0x58>)
 800ca94:	2201      	movs	r2, #1
 800ca96:	701a      	strb	r2, [r3, #0]
	ILI9341_SetWindow(x, y, x+w-1, y+h-1);
 800ca98:	897a      	ldrh	r2, [r7, #10]
 800ca9a:	88fb      	ldrh	r3, [r7, #6]
 800ca9c:	4413      	add	r3, r2
 800ca9e:	b29b      	uxth	r3, r3
 800caa0:	3b01      	subs	r3, #1
 800caa2:	b29c      	uxth	r4, r3
 800caa4:	893a      	ldrh	r2, [r7, #8]
 800caa6:	8c3b      	ldrh	r3, [r7, #32]
 800caa8:	4413      	add	r3, r2
 800caaa:	b29b      	uxth	r3, r3
 800caac:	3b01      	subs	r3, #1
 800caae:	b29b      	uxth	r3, r3
 800cab0:	8939      	ldrh	r1, [r7, #8]
 800cab2:	8978      	ldrh	r0, [r7, #10]
 800cab4:	4622      	mov	r2, r4
 800cab6:	f7f3 fd82 	bl	80005be <ILI9341_SetWindow>
	ILI9341_DrawBitmap(w, h, pixels);
 800caba:	8c39      	ldrh	r1, [r7, #32]
 800cabc:	88fb      	ldrh	r3, [r7, #6]
 800cabe:	68fa      	ldr	r2, [r7, #12]
 800cac0:	4618      	mov	r0, r3
 800cac2:	f7f3 fde7 	bl	8000694 <ILI9341_DrawBitmap>
}
 800cac6:	bf00      	nop
 800cac8:	3714      	adds	r7, #20
 800caca:	46bd      	mov	sp, r7
 800cacc:	bd90      	pop	{r4, r7, pc}
 800cace:	bf00      	nop
 800cad0:	240003e4 	.word	0x240003e4

0800cad4 <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800cad4:	b580      	push	{r7, lr}
 800cad6:	b082      	sub	sp, #8
 800cad8:	af00      	add	r7, sp, #0
 800cada:	6078      	str	r0, [r7, #4]
	if (hspi->Instance == SPI5) {
 800cadc:	687b      	ldr	r3, [r7, #4]
 800cade:	681b      	ldr	r3, [r3, #0]
 800cae0:	4a06      	ldr	r2, [pc, #24]	; (800cafc <HAL_SPI_TxCpltCallback+0x28>)
 800cae2:	4293      	cmp	r3, r2
 800cae4:	d106      	bne.n	800caf4 <HAL_SPI_TxCpltCallback+0x20>
		ILI9341_EndOfDrawBitmap();
 800cae6:	f7f3 fdfb 	bl	80006e0 <ILI9341_EndOfDrawBitmap>
		isTransmittingData = 0;
 800caea:	4b05      	ldr	r3, [pc, #20]	; (800cb00 <HAL_SPI_TxCpltCallback+0x2c>)
 800caec:	2200      	movs	r2, #0
 800caee:	701a      	strb	r2, [r3, #0]
		DisplayDriver_TransferCompleteCallback();
 800caf0:	f001 f8e1 	bl	800dcb6 <DisplayDriver_TransferCompleteCallback>
	}
}
 800caf4:	bf00      	nop
 800caf6:	3708      	adds	r7, #8
 800caf8:	46bd      	mov	sp, r7
 800cafa:	bd80      	pop	{r7, pc}
 800cafc:	40015000 	.word	0x40015000
 800cb00:	240003e4 	.word	0x240003e4

0800cb04 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800cb04:	b480      	push	{r7}
 800cb06:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800cb08:	4b05      	ldr	r3, [pc, #20]	; (800cb20 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800cb0a:	2200      	movs	r2, #0
 800cb0c:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800cb0e:	4b05      	ldr	r3, [pc, #20]	; (800cb24 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800cb10:	2200      	movs	r2, #0
 800cb12:	601a      	str	r2, [r3, #0]
}
 800cb14:	bf00      	nop
 800cb16:	46bd      	mov	sp, r7
 800cb18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb1c:	4770      	bx	lr
 800cb1e:	bf00      	nop
 800cb20:	240003e8 	.word	0x240003e8
 800cb24:	240003ec 	.word	0x240003ec

0800cb28 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800cb28:	b480      	push	{r7}
 800cb2a:	af00      	add	r7, sp, #0
    while (fb_sem);
 800cb2c:	bf00      	nop
 800cb2e:	4b08      	ldr	r3, [pc, #32]	; (800cb50 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800cb30:	681b      	ldr	r3, [r3, #0]
 800cb32:	2b00      	cmp	r3, #0
 800cb34:	bf14      	ite	ne
 800cb36:	2301      	movne	r3, #1
 800cb38:	2300      	moveq	r3, #0
 800cb3a:	b2db      	uxtb	r3, r3
 800cb3c:	2b00      	cmp	r3, #0
 800cb3e:	d1f6      	bne.n	800cb2e <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800cb40:	4b03      	ldr	r3, [pc, #12]	; (800cb50 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800cb42:	2201      	movs	r2, #1
 800cb44:	601a      	str	r2, [r3, #0]
}
 800cb46:	bf00      	nop
 800cb48:	46bd      	mov	sp, r7
 800cb4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb4e:	4770      	bx	lr
 800cb50:	240003e8 	.word	0x240003e8

0800cb54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800cb54:	b480      	push	{r7}
 800cb56:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800cb58:	4b03      	ldr	r3, [pc, #12]	; (800cb68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800cb5a:	2200      	movs	r2, #0
 800cb5c:	601a      	str	r2, [r3, #0]
}
 800cb5e:	bf00      	nop
 800cb60:	46bd      	mov	sp, r7
 800cb62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb66:	4770      	bx	lr
 800cb68:	240003e8 	.word	0x240003e8

0800cb6c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800cb6c:	b480      	push	{r7}
 800cb6e:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800cb70:	4b03      	ldr	r3, [pc, #12]	; (800cb80 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800cb72:	2201      	movs	r2, #1
 800cb74:	601a      	str	r2, [r3, #0]
}
 800cb76:	bf00      	nop
 800cb78:	46bd      	mov	sp, r7
 800cb7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb7e:	4770      	bx	lr
 800cb80:	240003e8 	.word	0x240003e8

0800cb84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800cb84:	b480      	push	{r7}
 800cb86:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800cb88:	4b03      	ldr	r3, [pc, #12]	; (800cb98 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800cb8a:	2200      	movs	r2, #0
 800cb8c:	601a      	str	r2, [r3, #0]
}
 800cb8e:	bf00      	nop
 800cb90:	46bd      	mov	sp, r7
 800cb92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb96:	4770      	bx	lr
 800cb98:	240003e8 	.word	0x240003e8

0800cb9c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800cb9c:	b480      	push	{r7}
 800cb9e:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800cba0:	4b03      	ldr	r3, [pc, #12]	; (800cbb0 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800cba2:	2200      	movs	r2, #0
 800cba4:	601a      	str	r2, [r3, #0]
}
 800cba6:	bf00      	nop
 800cba8:	46bd      	mov	sp, r7
 800cbaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbae:	4770      	bx	lr
 800cbb0:	240003ec 	.word	0x240003ec

0800cbb4 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800cbb4:	b480      	push	{r7}
 800cbb6:	af00      	add	r7, sp, #0
    return vsync_sem;
 800cbb8:	4b05      	ldr	r3, [pc, #20]	; (800cbd0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800cbba:	681b      	ldr	r3, [r3, #0]
 800cbbc:	2b00      	cmp	r3, #0
 800cbbe:	bf14      	ite	ne
 800cbc0:	2301      	movne	r3, #1
 800cbc2:	2300      	moveq	r3, #0
 800cbc4:	b2db      	uxtb	r3, r3
}
 800cbc6:	4618      	mov	r0, r3
 800cbc8:	46bd      	mov	sp, r7
 800cbca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbce:	4770      	bx	lr
 800cbd0:	240003ec 	.word	0x240003ec

0800cbd4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800cbd4:	b580      	push	{r7, lr}
 800cbd6:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800cbd8:	4b0a      	ldr	r3, [pc, #40]	; (800cc04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800cbda:	681b      	ldr	r3, [r3, #0]
 800cbdc:	2b00      	cmp	r3, #0
 800cbde:	bf14      	ite	ne
 800cbe0:	2301      	movne	r3, #1
 800cbe2:	2300      	moveq	r3, #0
 800cbe4:	b2db      	uxtb	r3, r3
 800cbe6:	2b00      	cmp	r3, #0
 800cbe8:	d00a      	beq.n	800cc00 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800cbea:	4b06      	ldr	r3, [pc, #24]	; (800cc04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800cbec:	2200      	movs	r2, #0
 800cbee:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800cbf0:	f7fd ff12 	bl	800aa18 <_ZN8touchgfx3HAL11getInstanceEv>
 800cbf4:	4603      	mov	r3, r0
 800cbf6:	681a      	ldr	r2, [r3, #0]
 800cbf8:	3270      	adds	r2, #112	; 0x70
 800cbfa:	6812      	ldr	r2, [r2, #0]
 800cbfc:	4618      	mov	r0, r3
 800cbfe:	4790      	blx	r2
    }
}
 800cc00:	bf00      	nop
 800cc02:	bd80      	pop	{r7, pc}
 800cc04:	240003ec 	.word	0x240003ec

0800cc08 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800cc08:	b480      	push	{r7}
 800cc0a:	b083      	sub	sp, #12
 800cc0c:	af00      	add	r7, sp, #0
 800cc0e:	6078      	str	r0, [r7, #4]
        : color(0)
 800cc10:	687b      	ldr	r3, [r7, #4]
 800cc12:	2200      	movs	r2, #0
 800cc14:	601a      	str	r2, [r3, #0]
    }
 800cc16:	687b      	ldr	r3, [r7, #4]
 800cc18:	4618      	mov	r0, r3
 800cc1a:	370c      	adds	r7, #12
 800cc1c:	46bd      	mov	sp, r7
 800cc1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc22:	4770      	bx	lr

0800cc24 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800cc24:	b480      	push	{r7}
 800cc26:	b083      	sub	sp, #12
 800cc28:	af00      	add	r7, sp, #0
 800cc2a:	6078      	str	r0, [r7, #4]
    {
 800cc2c:	4a04      	ldr	r2, [pc, #16]	; (800cc40 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800cc2e:	687b      	ldr	r3, [r7, #4]
 800cc30:	601a      	str	r2, [r3, #0]
    }
 800cc32:	687b      	ldr	r3, [r7, #4]
 800cc34:	4618      	mov	r0, r3
 800cc36:	370c      	adds	r7, #12
 800cc38:	46bd      	mov	sp, r7
 800cc3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc3e:	4770      	bx	lr
 800cc40:	08023ee8 	.word	0x08023ee8

0800cc44 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800cc44:	b580      	push	{r7, lr}
 800cc46:	b082      	sub	sp, #8
 800cc48:	af00      	add	r7, sp, #0
 800cc4a:	6078      	str	r0, [r7, #4]
    }
 800cc4c:	6878      	ldr	r0, [r7, #4]
 800cc4e:	f7ff ffe9 	bl	800cc24 <_ZN8touchgfx9DMA_QueueD1Ev>
 800cc52:	2104      	movs	r1, #4
 800cc54:	6878      	ldr	r0, [r7, #4]
 800cc56:	f014 fe72 	bl	802193e <_ZdlPvj>
 800cc5a:	687b      	ldr	r3, [r7, #4]
 800cc5c:	4618      	mov	r0, r3
 800cc5e:	3708      	adds	r7, #8
 800cc60:	46bd      	mov	sp, r7
 800cc62:	bd80      	pop	{r7, pc}

0800cc64 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 800cc64:	b480      	push	{r7}
 800cc66:	b083      	sub	sp, #12
 800cc68:	af00      	add	r7, sp, #0
 800cc6a:	6078      	str	r0, [r7, #4]
    {
    }
 800cc6c:	bf00      	nop
 800cc6e:	370c      	adds	r7, #12
 800cc70:	46bd      	mov	sp, r7
 800cc72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc76:	4770      	bx	lr

0800cc78 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 800cc78:	b480      	push	{r7}
 800cc7a:	b083      	sub	sp, #12
 800cc7c:	af00      	add	r7, sp, #0
 800cc7e:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800cc80:	2300      	movs	r3, #0
    }
 800cc82:	4618      	mov	r0, r3
 800cc84:	370c      	adds	r7, #12
 800cc86:	46bd      	mov	sp, r7
 800cc88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc8c:	4770      	bx	lr
	...

0800cc90 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800cc90:	b480      	push	{r7}
 800cc92:	b083      	sub	sp, #12
 800cc94:	af00      	add	r7, sp, #0
 800cc96:	6078      	str	r0, [r7, #4]
    {
 800cc98:	4a04      	ldr	r2, [pc, #16]	; (800ccac <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800cc9a:	687b      	ldr	r3, [r7, #4]
 800cc9c:	601a      	str	r2, [r3, #0]
    }
 800cc9e:	687b      	ldr	r3, [r7, #4]
 800cca0:	4618      	mov	r0, r3
 800cca2:	370c      	adds	r7, #12
 800cca4:	46bd      	mov	sp, r7
 800cca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccaa:	4770      	bx	lr
 800ccac:	080242b8 	.word	0x080242b8

0800ccb0 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800ccb0:	b580      	push	{r7, lr}
 800ccb2:	b082      	sub	sp, #8
 800ccb4:	af00      	add	r7, sp, #0
 800ccb6:	6078      	str	r0, [r7, #4]
    }
 800ccb8:	6878      	ldr	r0, [r7, #4]
 800ccba:	f7ff ffe9 	bl	800cc90 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800ccbe:	210c      	movs	r1, #12
 800ccc0:	6878      	ldr	r0, [r7, #4]
 800ccc2:	f014 fe3c 	bl	802193e <_ZdlPvj>
 800ccc6:	687b      	ldr	r3, [r7, #4]
 800ccc8:	4618      	mov	r0, r3
 800ccca:	3708      	adds	r7, #8
 800cccc:	46bd      	mov	sp, r7
 800ccce:	bd80      	pop	{r7, pc}

0800ccd0 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800ccd0:	b480      	push	{r7}
 800ccd2:	b083      	sub	sp, #12
 800ccd4:	af00      	add	r7, sp, #0
 800ccd6:	6078      	str	r0, [r7, #4]
 800ccd8:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800ccda:	4a09      	ldr	r2, [pc, #36]	; (800cd00 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800ccdc:	687b      	ldr	r3, [r7, #4]
 800ccde:	601a      	str	r2, [r3, #0]
 800cce0:	687b      	ldr	r3, [r7, #4]
 800cce2:	683a      	ldr	r2, [r7, #0]
 800cce4:	605a      	str	r2, [r3, #4]
 800cce6:	687b      	ldr	r3, [r7, #4]
 800cce8:	2200      	movs	r2, #0
 800ccea:	721a      	strb	r2, [r3, #8]
 800ccec:	687b      	ldr	r3, [r7, #4]
 800ccee:	2200      	movs	r2, #0
 800ccf0:	725a      	strb	r2, [r3, #9]
    {
    }
 800ccf2:	687b      	ldr	r3, [r7, #4]
 800ccf4:	4618      	mov	r0, r3
 800ccf6:	370c      	adds	r7, #12
 800ccf8:	46bd      	mov	sp, r7
 800ccfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccfe:	4770      	bx	lr
 800cd00:	080242b8 	.word	0x080242b8

0800cd04 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 800cd04:	b480      	push	{r7}
 800cd06:	b083      	sub	sp, #12
 800cd08:	af00      	add	r7, sp, #0
 800cd0a:	6078      	str	r0, [r7, #4]
    {
    }
 800cd0c:	bf00      	nop
 800cd0e:	370c      	adds	r7, #12
 800cd10:	46bd      	mov	sp, r7
 800cd12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd16:	4770      	bx	lr

0800cd18 <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 800cd18:	b480      	push	{r7}
 800cd1a:	b083      	sub	sp, #12
 800cd1c:	af00      	add	r7, sp, #0
 800cd1e:	6078      	str	r0, [r7, #4]
    {
    }
 800cd20:	bf00      	nop
 800cd22:	370c      	adds	r7, #12
 800cd24:	46bd      	mov	sp, r7
 800cd26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd2a:	4770      	bx	lr

0800cd2c <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800cd2c:	b580      	push	{r7, lr}
 800cd2e:	b082      	sub	sp, #8
 800cd30:	af00      	add	r7, sp, #0
 800cd32:	6078      	str	r0, [r7, #4]
 800cd34:	687b      	ldr	r3, [r7, #4]
 800cd36:	330c      	adds	r3, #12
 800cd38:	4618      	mov	r0, r3
 800cd3a:	f7ff ff65 	bl	800cc08 <_ZN8touchgfx9colortypeC1Ev>
 800cd3e:	687b      	ldr	r3, [r7, #4]
 800cd40:	4618      	mov	r0, r3
 800cd42:	3708      	adds	r7, #8
 800cd44:	46bd      	mov	sp, r7
 800cd46:	bd80      	pop	{r7, pc}

0800cd48 <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 800cd48:	b580      	push	{r7, lr}
 800cd4a:	b082      	sub	sp, #8
 800cd4c:	af00      	add	r7, sp, #0
 800cd4e:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 800cd50:	687a      	ldr	r2, [r7, #4]
 800cd52:	687b      	ldr	r3, [r7, #4]
 800cd54:	330c      	adds	r3, #12
 800cd56:	4619      	mov	r1, r3
 800cd58:	4610      	mov	r0, r2
 800cd5a:	f7ff ffb9 	bl	800ccd0 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800cd5e:	4a0b      	ldr	r2, [pc, #44]	; (800cd8c <_ZN8STM32DMAC1Ev+0x44>)
 800cd60:	687b      	ldr	r3, [r7, #4]
 800cd62:	601a      	str	r2, [r3, #0]
 800cd64:	687b      	ldr	r3, [r7, #4]
 800cd66:	f103 000c 	add.w	r0, r3, #12
 800cd6a:	687b      	ldr	r3, [r7, #4]
 800cd6c:	3320      	adds	r3, #32
 800cd6e:	2201      	movs	r2, #1
 800cd70:	4619      	mov	r1, r3
 800cd72:	f002 fbcd 	bl	800f510 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800cd76:	687b      	ldr	r3, [r7, #4]
 800cd78:	3320      	adds	r3, #32
 800cd7a:	4618      	mov	r0, r3
 800cd7c:	f7ff ffd6 	bl	800cd2c <_ZN8touchgfx6BlitOpC1Ev>
{
}
 800cd80:	687b      	ldr	r3, [r7, #4]
 800cd82:	4618      	mov	r0, r3
 800cd84:	3708      	adds	r7, #8
 800cd86:	46bd      	mov	sp, r7
 800cd88:	bd80      	pop	{r7, pc}
 800cd8a:	bf00      	nop
 800cd8c:	08023e98 	.word	0x08023e98

0800cd90 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 800cd90:	b480      	push	{r7}
 800cd92:	b083      	sub	sp, #12
 800cd94:	af00      	add	r7, sp, #0
 800cd96:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 800cd98:	2300      	movs	r3, #0
}
 800cd9a:	4618      	mov	r0, r3
 800cd9c:	370c      	adds	r7, #12
 800cd9e:	46bd      	mov	sp, r7
 800cda0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cda4:	4770      	bx	lr
	...

0800cda8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 800cda8:	b580      	push	{r7, lr}
 800cdaa:	b082      	sub	sp, #8
 800cdac:	af00      	add	r7, sp, #0
 800cdae:	6078      	str	r0, [r7, #4]
 800cdb0:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800cdb2:	4b03      	ldr	r3, [pc, #12]	; (800cdc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800cdb4:	4a03      	ldr	r2, [pc, #12]	; (800cdc4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800cdb6:	2122      	movs	r1, #34	; 0x22
 800cdb8:	4803      	ldr	r0, [pc, #12]	; (800cdc8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800cdba:	f014 fdef 	bl	802199c <__assert_func>
 800cdbe:	bf00      	nop
 800cdc0:	08023140 	.word	0x08023140
 800cdc4:	08023164 	.word	0x08023164
 800cdc8:	080231a4 	.word	0x080231a4

0800cdcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800cdcc:	b580      	push	{r7, lr}
 800cdce:	b082      	sub	sp, #8
 800cdd0:	af00      	add	r7, sp, #0
 800cdd2:	6078      	str	r0, [r7, #4]
 800cdd4:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800cdd6:	4b03      	ldr	r3, [pc, #12]	; (800cde4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800cdd8:	4a03      	ldr	r2, [pc, #12]	; (800cde8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800cdda:	2127      	movs	r1, #39	; 0x27
 800cddc:	4803      	ldr	r0, [pc, #12]	; (800cdec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800cdde:	f014 fddd 	bl	802199c <__assert_func>
 800cde2:	bf00      	nop
 800cde4:	08023140 	.word	0x08023140
 800cde8:	080231d0 	.word	0x080231d0
 800cdec:	080231a4 	.word	0x080231a4

0800cdf0 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800cdf0:	b580      	push	{r7, lr}
 800cdf2:	b082      	sub	sp, #8
 800cdf4:	af00      	add	r7, sp, #0
 800cdf6:	6078      	str	r0, [r7, #4]
 800cdf8:	4a08      	ldr	r2, [pc, #32]	; (800ce1c <_ZN8STM32DMAD1Ev+0x2c>)
 800cdfa:	687b      	ldr	r3, [r7, #4]
 800cdfc:	601a      	str	r2, [r3, #0]
 800cdfe:	687b      	ldr	r3, [r7, #4]
 800ce00:	330c      	adds	r3, #12
 800ce02:	4618      	mov	r0, r3
 800ce04:	f000 f81c 	bl	800ce40 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800ce08:	687b      	ldr	r3, [r7, #4]
 800ce0a:	4618      	mov	r0, r3
 800ce0c:	f7ff ff40 	bl	800cc90 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800ce10:	687b      	ldr	r3, [r7, #4]
 800ce12:	4618      	mov	r0, r3
 800ce14:	3708      	adds	r7, #8
 800ce16:	46bd      	mov	sp, r7
 800ce18:	bd80      	pop	{r7, pc}
 800ce1a:	bf00      	nop
 800ce1c:	08023e98 	.word	0x08023e98

0800ce20 <_ZN8STM32DMAD0Ev>:
 800ce20:	b580      	push	{r7, lr}
 800ce22:	b082      	sub	sp, #8
 800ce24:	af00      	add	r7, sp, #0
 800ce26:	6078      	str	r0, [r7, #4]
 800ce28:	6878      	ldr	r0, [r7, #4]
 800ce2a:	f7ff ffe1 	bl	800cdf0 <_ZN8STM32DMAD1Ev>
 800ce2e:	2144      	movs	r1, #68	; 0x44
 800ce30:	6878      	ldr	r0, [r7, #4]
 800ce32:	f014 fd84 	bl	802193e <_ZdlPvj>
 800ce36:	687b      	ldr	r3, [r7, #4]
 800ce38:	4618      	mov	r0, r3
 800ce3a:	3708      	adds	r7, #8
 800ce3c:	46bd      	mov	sp, r7
 800ce3e:	bd80      	pop	{r7, pc}

0800ce40 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800ce40:	b580      	push	{r7, lr}
 800ce42:	b082      	sub	sp, #8
 800ce44:	af00      	add	r7, sp, #0
 800ce46:	6078      	str	r0, [r7, #4]
 800ce48:	4a05      	ldr	r2, [pc, #20]	; (800ce60 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800ce4a:	687b      	ldr	r3, [r7, #4]
 800ce4c:	601a      	str	r2, [r3, #0]
 800ce4e:	687b      	ldr	r3, [r7, #4]
 800ce50:	4618      	mov	r0, r3
 800ce52:	f7ff fee7 	bl	800cc24 <_ZN8touchgfx9DMA_QueueD1Ev>
 800ce56:	687b      	ldr	r3, [r7, #4]
 800ce58:	4618      	mov	r0, r3
 800ce5a:	3708      	adds	r7, #8
 800ce5c:	46bd      	mov	sp, r7
 800ce5e:	bd80      	pop	{r7, pc}
 800ce60:	08024308 	.word	0x08024308

0800ce64 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ce64:	b580      	push	{r7, lr}
 800ce66:	b082      	sub	sp, #8
 800ce68:	af00      	add	r7, sp, #0
 800ce6a:	6078      	str	r0, [r7, #4]
 800ce6c:	6878      	ldr	r0, [r7, #4]
 800ce6e:	f7ff ffe7 	bl	800ce40 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800ce72:	2114      	movs	r1, #20
 800ce74:	6878      	ldr	r0, [r7, #4]
 800ce76:	f014 fd62 	bl	802193e <_ZdlPvj>
 800ce7a:	687b      	ldr	r3, [r7, #4]
 800ce7c:	4618      	mov	r0, r3
 800ce7e:	3708      	adds	r7, #8
 800ce80:	46bd      	mov	sp, r7
 800ce82:	bd80      	pop	{r7, pc}

0800ce84 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800ce84:	b480      	push	{r7}
 800ce86:	b083      	sub	sp, #12
 800ce88:	af00      	add	r7, sp, #0
 800ce8a:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800ce8c:	4a04      	ldr	r2, [pc, #16]	; (800cea0 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800ce8e:	687b      	ldr	r3, [r7, #4]
 800ce90:	6013      	str	r3, [r2, #0]
    }
 800ce92:	bf00      	nop
 800ce94:	370c      	adds	r7, #12
 800ce96:	46bd      	mov	sp, r7
 800ce98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce9c:	4770      	bx	lr
 800ce9e:	bf00      	nop
 800cea0:	24001ed8 	.word	0x24001ed8

0800cea4 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800cea4:	b480      	push	{r7}
 800cea6:	b085      	sub	sp, #20
 800cea8:	af00      	add	r7, sp, #0
 800ceaa:	60f8      	str	r0, [r7, #12]
 800ceac:	60b9      	str	r1, [r7, #8]
 800ceae:	607a      	str	r2, [r7, #4]
 800ceb0:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800ceb2:	4a0b      	ldr	r2, [pc, #44]	; (800cee0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800ceb4:	68fb      	ldr	r3, [r7, #12]
 800ceb6:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800ceb8:	68fb      	ldr	r3, [r7, #12]
 800ceba:	68ba      	ldr	r2, [r7, #8]
 800cebc:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800cebe:	68fb      	ldr	r3, [r7, #12]
 800cec0:	687a      	ldr	r2, [r7, #4]
 800cec2:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800cec4:	68fb      	ldr	r3, [r7, #12]
 800cec6:	683a      	ldr	r2, [r7, #0]
 800cec8:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800ceca:	68fb      	ldr	r3, [r7, #12]
 800cecc:	69ba      	ldr	r2, [r7, #24]
 800cece:	611a      	str	r2, [r3, #16]
    {
    }
 800ced0:	68fb      	ldr	r3, [r7, #12]
 800ced2:	4618      	mov	r0, r3
 800ced4:	3714      	adds	r7, #20
 800ced6:	46bd      	mov	sp, r7
 800ced8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cedc:	4770      	bx	lr
 800cede:	bf00      	nop
 800cee0:	08023fd0 	.word	0x08023fd0

0800cee4 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800cee4:	b480      	push	{r7}
 800cee6:	b083      	sub	sp, #12
 800cee8:	af00      	add	r7, sp, #0
 800ceea:	6078      	str	r0, [r7, #4]
    {
 800ceec:	4a04      	ldr	r2, [pc, #16]	; (800cf00 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800ceee:	687b      	ldr	r3, [r7, #4]
 800cef0:	601a      	str	r2, [r3, #0]
    }
 800cef2:	687b      	ldr	r3, [r7, #4]
 800cef4:	4618      	mov	r0, r3
 800cef6:	370c      	adds	r7, #12
 800cef8:	46bd      	mov	sp, r7
 800cefa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cefe:	4770      	bx	lr
 800cf00:	08023fd0 	.word	0x08023fd0

0800cf04 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800cf04:	b580      	push	{r7, lr}
 800cf06:	b082      	sub	sp, #8
 800cf08:	af00      	add	r7, sp, #0
 800cf0a:	6078      	str	r0, [r7, #4]
    }
 800cf0c:	6878      	ldr	r0, [r7, #4]
 800cf0e:	f7ff ffe9 	bl	800cee4 <_ZN8touchgfx7MVPHeapD1Ev>
 800cf12:	2114      	movs	r1, #20
 800cf14:	6878      	ldr	r0, [r7, #4]
 800cf16:	f014 fd12 	bl	802193e <_ZdlPvj>
 800cf1a:	687b      	ldr	r3, [r7, #4]
 800cf1c:	4618      	mov	r0, r3
 800cf1e:	3708      	adds	r7, #8
 800cf20:	46bd      	mov	sp, r7
 800cf22:	bd80      	pop	{r7, pc}

0800cf24 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800cf24:	b480      	push	{r7}
 800cf26:	b083      	sub	sp, #12
 800cf28:	af00      	add	r7, sp, #0
 800cf2a:	6078      	str	r0, [r7, #4]
    {
 800cf2c:	4a04      	ldr	r2, [pc, #16]	; (800cf40 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800cf2e:	687b      	ldr	r3, [r7, #4]
 800cf30:	601a      	str	r2, [r3, #0]
    }
 800cf32:	687b      	ldr	r3, [r7, #4]
 800cf34:	4618      	mov	r0, r3
 800cf36:	370c      	adds	r7, #12
 800cf38:	46bd      	mov	sp, r7
 800cf3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf3e:	4770      	bx	lr
 800cf40:	08024424 	.word	0x08024424

0800cf44 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800cf44:	b580      	push	{r7, lr}
 800cf46:	b082      	sub	sp, #8
 800cf48:	af00      	add	r7, sp, #0
 800cf4a:	6078      	str	r0, [r7, #4]
    }
 800cf4c:	6878      	ldr	r0, [r7, #4]
 800cf4e:	f7ff ffe9 	bl	800cf24 <_ZN8touchgfx3LCDD1Ev>
 800cf52:	2108      	movs	r1, #8
 800cf54:	6878      	ldr	r0, [r7, #4]
 800cf56:	f014 fcf2 	bl	802193e <_ZdlPvj>
 800cf5a:	687b      	ldr	r3, [r7, #4]
 800cf5c:	4618      	mov	r0, r3
 800cf5e:	3708      	adds	r7, #8
 800cf60:	46bd      	mov	sp, r7
 800cf62:	bd80      	pop	{r7, pc}

0800cf64 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800cf64:	b480      	push	{r7}
 800cf66:	b083      	sub	sp, #12
 800cf68:	af00      	add	r7, sp, #0
 800cf6a:	6078      	str	r0, [r7, #4]
            : startX(0),
 800cf6c:	687b      	ldr	r3, [r7, #4]
 800cf6e:	2200      	movs	r2, #0
 800cf70:	801a      	strh	r2, [r3, #0]
              startY(0),
 800cf72:	687b      	ldr	r3, [r7, #4]
 800cf74:	2200      	movs	r2, #0
 800cf76:	805a      	strh	r2, [r3, #2]
              downX(0),
 800cf78:	687b      	ldr	r3, [r7, #4]
 800cf7a:	2200      	movs	r2, #0
 800cf7c:	809a      	strh	r2, [r3, #4]
              downY(0),
 800cf7e:	687b      	ldr	r3, [r7, #4]
 800cf80:	2200      	movs	r2, #0
 800cf82:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800cf84:	687b      	ldr	r3, [r7, #4]
 800cf86:	2200      	movs	r2, #0
 800cf88:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800cf8a:	687b      	ldr	r3, [r7, #4]
 800cf8c:	2200      	movs	r2, #0
 800cf8e:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800cf90:	687b      	ldr	r3, [r7, #4]
 800cf92:	2200      	movs	r2, #0
 800cf94:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800cf96:	687b      	ldr	r3, [r7, #4]
 800cf98:	2200      	movs	r2, #0
 800cf9a:	739a      	strb	r2, [r3, #14]
        {
        }
 800cf9c:	687b      	ldr	r3, [r7, #4]
 800cf9e:	4618      	mov	r0, r3
 800cfa0:	370c      	adds	r7, #12
 800cfa2:	46bd      	mov	sp, r7
 800cfa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfa8:	4770      	bx	lr

0800cfaa <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800cfaa:	b580      	push	{r7, lr}
 800cfac:	b082      	sub	sp, #8
 800cfae:	af00      	add	r7, sp, #0
 800cfb0:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800cfb2:	687b      	ldr	r3, [r7, #4]
 800cfb4:	4618      	mov	r0, r3
 800cfb6:	f7ff ffd5 	bl	800cf64 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800cfba:	687b      	ldr	r3, [r7, #4]
 800cfbc:	2200      	movs	r2, #0
 800cfbe:	611a      	str	r2, [r3, #16]
 800cfc0:	687b      	ldr	r3, [r7, #4]
 800cfc2:	2200      	movs	r2, #0
 800cfc4:	829a      	strh	r2, [r3, #20]
    {
    }
 800cfc6:	687b      	ldr	r3, [r7, #4]
 800cfc8:	4618      	mov	r0, r3
 800cfca:	3708      	adds	r7, #8
 800cfcc:	46bd      	mov	sp, r7
 800cfce:	bd80      	pop	{r7, pc}

0800cfd0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800cfd0:	b580      	push	{r7, lr}
 800cfd2:	b084      	sub	sp, #16
 800cfd4:	af00      	add	r7, sp, #0
 800cfd6:	60f8      	str	r0, [r7, #12]
 800cfd8:	60b9      	str	r1, [r7, #8]
 800cfda:	607a      	str	r2, [r7, #4]
 800cfdc:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800cfde:	4a55      	ldr	r2, [pc, #340]	; (800d134 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800cfe0:	68fb      	ldr	r3, [r7, #12]
 800cfe2:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800cfe4:	68fb      	ldr	r3, [r7, #12]
 800cfe6:	68ba      	ldr	r2, [r7, #8]
 800cfe8:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800cfea:	68fb      	ldr	r3, [r7, #12]
 800cfec:	687a      	ldr	r2, [r7, #4]
 800cfee:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800cff0:	68fb      	ldr	r3, [r7, #12]
 800cff2:	683a      	ldr	r2, [r7, #0]
 800cff4:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800cff6:	68fb      	ldr	r3, [r7, #12]
 800cff8:	2200      	movs	r2, #0
 800cffa:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800cffc:	68fb      	ldr	r3, [r7, #12]
 800cffe:	2200      	movs	r2, #0
 800d000:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800d002:	68fb      	ldr	r3, [r7, #12]
 800d004:	2200      	movs	r2, #0
 800d006:	619a      	str	r2, [r3, #24]
          gestures(),
 800d008:	68fb      	ldr	r3, [r7, #12]
 800d00a:	331c      	adds	r3, #28
 800d00c:	4618      	mov	r0, r3
 800d00e:	f7ff ffcc 	bl	800cfaa <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800d012:	68fb      	ldr	r3, [r7, #12]
 800d014:	2200      	movs	r2, #0
 800d016:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 800d01a:	68fb      	ldr	r3, [r7, #12]
 800d01c:	2200      	movs	r2, #0
 800d01e:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 800d020:	68fb      	ldr	r3, [r7, #12]
 800d022:	2200      	movs	r2, #0
 800d024:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 800d026:	68fb      	ldr	r3, [r7, #12]
 800d028:	2200      	movs	r2, #0
 800d02a:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 800d02c:	68fb      	ldr	r3, [r7, #12]
 800d02e:	2200      	movs	r2, #0
 800d030:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800d032:	68fb      	ldr	r3, [r7, #12]
 800d034:	2200      	movs	r2, #0
 800d036:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 800d03a:	68fb      	ldr	r3, [r7, #12]
 800d03c:	2201      	movs	r2, #1
 800d03e:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 800d042:	68fb      	ldr	r3, [r7, #12]
 800d044:	2200      	movs	r2, #0
 800d046:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 800d04a:	68fb      	ldr	r3, [r7, #12]
 800d04c:	2200      	movs	r2, #0
 800d04e:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 800d052:	68fb      	ldr	r3, [r7, #12]
 800d054:	2200      	movs	r2, #0
 800d056:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 800d058:	68fb      	ldr	r3, [r7, #12]
 800d05a:	3350      	adds	r3, #80	; 0x50
 800d05c:	4618      	mov	r0, r3
 800d05e:	f7fe f972 	bl	800b346 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800d062:	68fb      	ldr	r3, [r7, #12]
 800d064:	2200      	movs	r2, #0
 800d066:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 800d06a:	68fb      	ldr	r3, [r7, #12]
 800d06c:	2200      	movs	r2, #0
 800d06e:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 800d070:	68fb      	ldr	r3, [r7, #12]
 800d072:	2200      	movs	r2, #0
 800d074:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 800d076:	68fb      	ldr	r3, [r7, #12]
 800d078:	2200      	movs	r2, #0
 800d07a:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 800d07c:	68fb      	ldr	r3, [r7, #12]
 800d07e:	2201      	movs	r2, #1
 800d080:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 800d084:	68fb      	ldr	r3, [r7, #12]
 800d086:	2200      	movs	r2, #0
 800d088:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 800d08c:	68fb      	ldr	r3, [r7, #12]
 800d08e:	2200      	movs	r2, #0
 800d090:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 800d094:	68fb      	ldr	r3, [r7, #12]
 800d096:	2201      	movs	r2, #1
 800d098:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 800d09c:	68fb      	ldr	r3, [r7, #12]
 800d09e:	2200      	movs	r2, #0
 800d0a0:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 800d0a4:	68fb      	ldr	r3, [r7, #12]
 800d0a6:	2200      	movs	r2, #0
 800d0a8:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 800d0ac:	68fb      	ldr	r3, [r7, #12]
 800d0ae:	2200      	movs	r2, #0
 800d0b0:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 800d0b4:	68fb      	ldr	r3, [r7, #12]
 800d0b6:	2200      	movs	r2, #0
 800d0b8:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 800d0bc:	68fb      	ldr	r3, [r7, #12]
 800d0be:	2200      	movs	r2, #0
 800d0c0:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 800d0c4:	68fb      	ldr	r3, [r7, #12]
 800d0c6:	2200      	movs	r2, #0
 800d0c8:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800d0ca:	68fb      	ldr	r3, [r7, #12]
 800d0cc:	2200      	movs	r2, #0
 800d0ce:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 800d0d2:	68fb      	ldr	r3, [r7, #12]
 800d0d4:	2200      	movs	r2, #0
 800d0d6:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 800d0da:	68fb      	ldr	r3, [r7, #12]
 800d0dc:	2201      	movs	r2, #1
 800d0de:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 800d0e2:	68fb      	ldr	r3, [r7, #12]
 800d0e4:	2201      	movs	r2, #1
 800d0e6:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 800d0ea:	4a13      	ldr	r2, [pc, #76]	; (800d138 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800d0ec:	68fb      	ldr	r3, [r7, #12]
 800d0ee:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800d0f0:	4a12      	ldr	r2, [pc, #72]	; (800d13c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800d0f2:	8b3b      	ldrh	r3, [r7, #24]
 800d0f4:	8013      	strh	r3, [r2, #0]
 800d0f6:	4b11      	ldr	r3, [pc, #68]	; (800d13c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800d0f8:	881a      	ldrh	r2, [r3, #0]
 800d0fa:	4b11      	ldr	r3, [pc, #68]	; (800d140 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800d0fc:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800d0fe:	4a11      	ldr	r2, [pc, #68]	; (800d144 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800d100:	8bbb      	ldrh	r3, [r7, #28]
 800d102:	8013      	strh	r3, [r2, #0]
 800d104:	4b0f      	ldr	r3, [pc, #60]	; (800d144 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800d106:	881a      	ldrh	r2, [r3, #0]
 800d108:	4b0f      	ldr	r3, [pc, #60]	; (800d148 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800d10a:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800d10c:	4b0f      	ldr	r3, [pc, #60]	; (800d14c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800d10e:	2200      	movs	r2, #0
 800d110:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800d112:	8b3a      	ldrh	r2, [r7, #24]
 800d114:	8bbb      	ldrh	r3, [r7, #28]
 800d116:	429a      	cmp	r2, r3
 800d118:	bf34      	ite	cc
 800d11a:	2301      	movcc	r3, #1
 800d11c:	2300      	movcs	r3, #0
 800d11e:	b2db      	uxtb	r3, r3
 800d120:	461a      	mov	r2, r3
 800d122:	68fb      	ldr	r3, [r7, #12]
 800d124:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800d128:	68fb      	ldr	r3, [r7, #12]
 800d12a:	4618      	mov	r0, r3
 800d12c:	3710      	adds	r7, #16
 800d12e:	46bd      	mov	sp, r7
 800d130:	bd80      	pop	{r7, pc}
 800d132:	bf00      	nop
 800d134:	080241e0 	.word	0x080241e0
 800d138:	24001e7c 	.word	0x24001e7c
 800d13c:	24001e70 	.word	0x24001e70
 800d140:	24001e76 	.word	0x24001e76
 800d144:	24001e72 	.word	0x24001e72
 800d148:	24001e78 	.word	0x24001e78
 800d14c:	24001e74 	.word	0x24001e74

0800d150 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800d150:	b580      	push	{r7, lr}
 800d152:	b082      	sub	sp, #8
 800d154:	af00      	add	r7, sp, #0
 800d156:	6078      	str	r0, [r7, #4]
 800d158:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreenScreenNoTransition();
 800d15a:	683b      	ldr	r3, [r7, #0]
 800d15c:	4618      	mov	r0, r3
 800d15e:	f7fd fe57 	bl	800ae10 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800d162:	bf00      	nop
 800d164:	3708      	adds	r7, #8
 800d166:	46bd      	mov	sp, r7
 800d168:	bd80      	pop	{r7, pc}
	...

0800d16c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800d16c:	b580      	push	{r7, lr}
 800d16e:	b086      	sub	sp, #24
 800d170:	af02      	add	r7, sp, #8
 800d172:	60f8      	str	r0, [r7, #12]
 800d174:	60b9      	str	r1, [r7, #8]
 800d176:	607a      	str	r2, [r7, #4]
 800d178:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800d17a:	68f8      	ldr	r0, [r7, #12]
 800d17c:	69bb      	ldr	r3, [r7, #24]
 800d17e:	9300      	str	r3, [sp, #0]
 800d180:	683b      	ldr	r3, [r7, #0]
 800d182:	687a      	ldr	r2, [r7, #4]
 800d184:	68b9      	ldr	r1, [r7, #8]
 800d186:	f7ff fe8d 	bl	800cea4 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800d18a:	4a04      	ldr	r2, [pc, #16]	; (800d19c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800d18c:	68fb      	ldr	r3, [r7, #12]
 800d18e:	601a      	str	r2, [r3, #0]
    {

    }
 800d190:	68fb      	ldr	r3, [r7, #12]
 800d192:	4618      	mov	r0, r3
 800d194:	3710      	adds	r7, #16
 800d196:	46bd      	mov	sp, r7
 800d198:	bd80      	pop	{r7, pc}
 800d19a:	bf00      	nop
 800d19c:	08023fbc 	.word	0x08023fbc

0800d1a0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800d1a0:	b580      	push	{r7, lr}
 800d1a2:	af00      	add	r7, sp, #0
 800d1a4:	4801      	ldr	r0, [pc, #4]	; (800d1ac <__tcf_0+0xc>)
 800d1a6:	f000 f969 	bl	800d47c <_ZN12FrontendHeapD1Ev>
 800d1aa:	bd80      	pop	{r7, pc}
 800d1ac:	240003f0 	.word	0x240003f0

0800d1b0 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800d1b0:	b580      	push	{r7, lr}
 800d1b2:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800d1b4:	4b11      	ldr	r3, [pc, #68]	; (800d1fc <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d1b6:	681b      	ldr	r3, [r3, #0]
 800d1b8:	f3bf 8f5b 	dmb	ish
 800d1bc:	f003 0301 	and.w	r3, r3, #1
 800d1c0:	2b00      	cmp	r3, #0
 800d1c2:	bf0c      	ite	eq
 800d1c4:	2301      	moveq	r3, #1
 800d1c6:	2300      	movne	r3, #0
 800d1c8:	b2db      	uxtb	r3, r3
 800d1ca:	2b00      	cmp	r3, #0
 800d1cc:	d013      	beq.n	800d1f6 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800d1ce:	480b      	ldr	r0, [pc, #44]	; (800d1fc <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d1d0:	f014 fbb7 	bl	8021942 <__cxa_guard_acquire>
 800d1d4:	4603      	mov	r3, r0
 800d1d6:	2b00      	cmp	r3, #0
 800d1d8:	bf14      	ite	ne
 800d1da:	2301      	movne	r3, #1
 800d1dc:	2300      	moveq	r3, #0
 800d1de:	b2db      	uxtb	r3, r3
 800d1e0:	2b00      	cmp	r3, #0
 800d1e2:	d008      	beq.n	800d1f6 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800d1e4:	4806      	ldr	r0, [pc, #24]	; (800d200 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800d1e6:	f000 f867 	bl	800d2b8 <_ZN12FrontendHeapC1Ev>
 800d1ea:	4806      	ldr	r0, [pc, #24]	; (800d204 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800d1ec:	f014 fbf4 	bl	80219d8 <atexit>
 800d1f0:	4802      	ldr	r0, [pc, #8]	; (800d1fc <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d1f2:	f014 fbb2 	bl	802195a <__cxa_guard_release>
        return instance;
 800d1f6:	4b02      	ldr	r3, [pc, #8]	; (800d200 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800d1f8:	4618      	mov	r0, r3
 800d1fa:	bd80      	pop	{r7, pc}
 800d1fc:	24000678 	.word	0x24000678
 800d200:	240003f0 	.word	0x240003f0
 800d204:	0800d1a1 	.word	0x0800d1a1

0800d208 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800d208:	b580      	push	{r7, lr}
 800d20a:	b082      	sub	sp, #8
 800d20c:	af00      	add	r7, sp, #0
 800d20e:	6078      	str	r0, [r7, #4]
 800d210:	4a05      	ldr	r2, [pc, #20]	; (800d228 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800d212:	687b      	ldr	r3, [r7, #4]
 800d214:	601a      	str	r2, [r3, #0]
 800d216:	687b      	ldr	r3, [r7, #4]
 800d218:	4618      	mov	r0, r3
 800d21a:	f7ff fe63 	bl	800cee4 <_ZN8touchgfx7MVPHeapD1Ev>
 800d21e:	687b      	ldr	r3, [r7, #4]
 800d220:	4618      	mov	r0, r3
 800d222:	3708      	adds	r7, #8
 800d224:	46bd      	mov	sp, r7
 800d226:	bd80      	pop	{r7, pc}
 800d228:	08023fbc 	.word	0x08023fbc

0800d22c <_ZN16FrontendHeapBaseD0Ev>:
 800d22c:	b580      	push	{r7, lr}
 800d22e:	b082      	sub	sp, #8
 800d230:	af00      	add	r7, sp, #0
 800d232:	6078      	str	r0, [r7, #4]
 800d234:	6878      	ldr	r0, [r7, #4]
 800d236:	f7ff ffe7 	bl	800d208 <_ZN16FrontendHeapBaseD1Ev>
 800d23a:	2114      	movs	r1, #20
 800d23c:	6878      	ldr	r0, [r7, #4]
 800d23e:	f014 fb7e 	bl	802193e <_ZdlPvj>
 800d242:	687b      	ldr	r3, [r7, #4]
 800d244:	4618      	mov	r0, r3
 800d246:	3708      	adds	r7, #8
 800d248:	46bd      	mov	sp, r7
 800d24a:	bd80      	pop	{r7, pc}

0800d24c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800d24c:	b580      	push	{r7, lr}
 800d24e:	b082      	sub	sp, #8
 800d250:	af00      	add	r7, sp, #0
 800d252:	6078      	str	r0, [r7, #4]
 800d254:	687b      	ldr	r3, [r7, #4]
 800d256:	4618      	mov	r0, r3
 800d258:	f000 ffdc 	bl	800e214 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d25c:	4a03      	ldr	r2, [pc, #12]	; (800d26c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d25e:	687b      	ldr	r3, [r7, #4]
 800d260:	601a      	str	r2, [r3, #0]
 800d262:	687b      	ldr	r3, [r7, #4]
 800d264:	4618      	mov	r0, r3
 800d266:	3708      	adds	r7, #8
 800d268:	46bd      	mov	sp, r7
 800d26a:	bd80      	pop	{r7, pc}
 800d26c:	08023f88 	.word	0x08023f88

0800d270 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800d270:	b580      	push	{r7, lr}
 800d272:	b082      	sub	sp, #8
 800d274:	af00      	add	r7, sp, #0
 800d276:	6078      	str	r0, [r7, #4]
 800d278:	687b      	ldr	r3, [r7, #4]
 800d27a:	4618      	mov	r0, r3
 800d27c:	f000 ffca 	bl	800e214 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d280:	4a03      	ldr	r2, [pc, #12]	; (800d290 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d282:	687b      	ldr	r3, [r7, #4]
 800d284:	601a      	str	r2, [r3, #0]
 800d286:	687b      	ldr	r3, [r7, #4]
 800d288:	4618      	mov	r0, r3
 800d28a:	3708      	adds	r7, #8
 800d28c:	46bd      	mov	sp, r7
 800d28e:	bd80      	pop	{r7, pc}
 800d290:	08023f54 	.word	0x08023f54

0800d294 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800d294:	b580      	push	{r7, lr}
 800d296:	b082      	sub	sp, #8
 800d298:	af00      	add	r7, sp, #0
 800d29a:	6078      	str	r0, [r7, #4]
 800d29c:	687b      	ldr	r3, [r7, #4]
 800d29e:	4618      	mov	r0, r3
 800d2a0:	f000 ffb8 	bl	800e214 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d2a4:	4a03      	ldr	r2, [pc, #12]	; (800d2b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d2a6:	687b      	ldr	r3, [r7, #4]
 800d2a8:	601a      	str	r2, [r3, #0]
 800d2aa:	687b      	ldr	r3, [r7, #4]
 800d2ac:	4618      	mov	r0, r3
 800d2ae:	3708      	adds	r7, #8
 800d2b0:	46bd      	mov	sp, r7
 800d2b2:	bd80      	pop	{r7, pc}
 800d2b4:	08023f20 	.word	0x08023f20

0800d2b8 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800d2b8:	b590      	push	{r4, r7, lr}
 800d2ba:	b085      	sub	sp, #20
 800d2bc:	af02      	add	r7, sp, #8
 800d2be:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800d2c0:	6878      	ldr	r0, [r7, #4]
 800d2c2:	687b      	ldr	r3, [r7, #4]
 800d2c4:	f103 0114 	add.w	r1, r3, #20
 800d2c8:	687b      	ldr	r3, [r7, #4]
 800d2ca:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800d2ce:	687b      	ldr	r3, [r7, #4]
 800d2d0:	f503 748a 	add.w	r4, r3, #276	; 0x114
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800d2d4:	687b      	ldr	r3, [r7, #4]
 800d2d6:	f503 7396 	add.w	r3, r3, #300	; 0x12c
                     app(model, *this)
 800d2da:	9300      	str	r3, [sp, #0]
 800d2dc:	4623      	mov	r3, r4
 800d2de:	f7ff ff45 	bl	800d16c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800d2e2:	4a18      	ldr	r2, [pc, #96]	; (800d344 <_ZN12FrontendHeapC1Ev+0x8c>)
 800d2e4:	687b      	ldr	r3, [r7, #4]
 800d2e6:	601a      	str	r2, [r3, #0]
 800d2e8:	687b      	ldr	r3, [r7, #4]
 800d2ea:	3314      	adds	r3, #20
 800d2ec:	4618      	mov	r0, r3
 800d2ee:	f7ff ffad 	bl	800d24c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d2f2:	687b      	ldr	r3, [r7, #4]
 800d2f4:	332c      	adds	r3, #44	; 0x2c
 800d2f6:	4618      	mov	r0, r3
 800d2f8:	f7ff ffba 	bl	800d270 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d2fc:	687b      	ldr	r3, [r7, #4]
 800d2fe:	f503 738a 	add.w	r3, r3, #276	; 0x114
 800d302:	4618      	mov	r0, r3
 800d304:	f7ff ffc6 	bl	800d294 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d308:	687b      	ldr	r3, [r7, #4]
 800d30a:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800d30e:	4618      	mov	r0, r3
 800d310:	f7fe ff64 	bl	800c1dc <_ZN5ModelC1Ev>
 800d314:	687b      	ldr	r3, [r7, #4]
 800d316:	f503 7096 	add.w	r0, r3, #300	; 0x12c
 800d31a:	687b      	ldr	r3, [r7, #4]
 800d31c:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800d320:	687a      	ldr	r2, [r7, #4]
 800d322:	4619      	mov	r1, r3
 800d324:	f7fe ff44 	bl	800c1b0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800d328:	687a      	ldr	r2, [r7, #4]
 800d32a:	687b      	ldr	r3, [r7, #4]
 800d32c:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800d330:	4619      	mov	r1, r3
 800d332:	4610      	mov	r0, r2
 800d334:	f7ff ff0c 	bl	800d150 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800d338:	687b      	ldr	r3, [r7, #4]
 800d33a:	4618      	mov	r0, r3
 800d33c:	370c      	adds	r7, #12
 800d33e:	46bd      	mov	sp, r7
 800d340:	bd90      	pop	{r4, r7, pc}
 800d342:	bf00      	nop
 800d344:	08023f0c 	.word	0x08023f0c

0800d348 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800d348:	b580      	push	{r7, lr}
 800d34a:	b086      	sub	sp, #24
 800d34c:	af02      	add	r7, sp, #8
 800d34e:	60f8      	str	r0, [r7, #12]
 800d350:	60b9      	str	r1, [r7, #8]
 800d352:	607a      	str	r2, [r7, #4]
 800d354:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800d356:	68f8      	ldr	r0, [r7, #12]
 800d358:	8bbb      	ldrh	r3, [r7, #28]
 800d35a:	9301      	str	r3, [sp, #4]
 800d35c:	8b3b      	ldrh	r3, [r7, #24]
 800d35e:	9300      	str	r3, [sp, #0]
 800d360:	683b      	ldr	r3, [r7, #0]
 800d362:	687a      	ldr	r2, [r7, #4]
 800d364:	68b9      	ldr	r1, [r7, #8]
 800d366:	f7ff fe33 	bl	800cfd0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800d36a:	4a04      	ldr	r2, [pc, #16]	; (800d37c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800d36c:	68fb      	ldr	r3, [r7, #12]
 800d36e:	601a      	str	r2, [r3, #0]
    }
 800d370:	68fb      	ldr	r3, [r7, #12]
 800d372:	4618      	mov	r0, r3
 800d374:	3710      	adds	r7, #16
 800d376:	46bd      	mov	sp, r7
 800d378:	bd80      	pop	{r7, pc}
 800d37a:	bf00      	nop
 800d37c:	0802400c 	.word	0x0802400c

0800d380 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800d380:	b580      	push	{r7, lr}
 800d382:	b086      	sub	sp, #24
 800d384:	af02      	add	r7, sp, #8
 800d386:	60f8      	str	r0, [r7, #12]
 800d388:	60b9      	str	r1, [r7, #8]
 800d38a:	607a      	str	r2, [r7, #4]
 800d38c:	603b      	str	r3, [r7, #0]
 800d38e:	68f8      	ldr	r0, [r7, #12]
 800d390:	8bbb      	ldrh	r3, [r7, #28]
 800d392:	9301      	str	r3, [sp, #4]
 800d394:	8b3b      	ldrh	r3, [r7, #24]
 800d396:	9300      	str	r3, [sp, #0]
 800d398:	683b      	ldr	r3, [r7, #0]
 800d39a:	687a      	ldr	r2, [r7, #4]
 800d39c:	68b9      	ldr	r1, [r7, #8]
 800d39e:	f7ff ffd3 	bl	800d348 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800d3a2:	4a04      	ldr	r2, [pc, #16]	; (800d3b4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800d3a4:	68fb      	ldr	r3, [r7, #12]
 800d3a6:	601a      	str	r2, [r3, #0]
    }
 800d3a8:	68fb      	ldr	r3, [r7, #12]
 800d3aa:	4618      	mov	r0, r3
 800d3ac:	3710      	adds	r7, #16
 800d3ae:	46bd      	mov	sp, r7
 800d3b0:	bd80      	pop	{r7, pc}
 800d3b2:	bf00      	nop
 800d3b4:	08023dc0 	.word	0x08023dc0

0800d3b8 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800d3b8:	b480      	push	{r7}
 800d3ba:	b083      	sub	sp, #12
 800d3bc:	af00      	add	r7, sp, #0
 800d3be:	6078      	str	r0, [r7, #4]
 800d3c0:	4a04      	ldr	r2, [pc, #16]	; (800d3d4 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	601a      	str	r2, [r3, #0]
 800d3c6:	687b      	ldr	r3, [r7, #4]
 800d3c8:	4618      	mov	r0, r3
 800d3ca:	370c      	adds	r7, #12
 800d3cc:	46bd      	mov	sp, r7
 800d3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3d2:	4770      	bx	lr
 800d3d4:	08023da8 	.word	0x08023da8

0800d3d8 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800d3d8:	b580      	push	{r7, lr}
 800d3da:	b082      	sub	sp, #8
 800d3dc:	af00      	add	r7, sp, #0
 800d3de:	6078      	str	r0, [r7, #4]
 800d3e0:	687b      	ldr	r3, [r7, #4]
 800d3e2:	4618      	mov	r0, r3
 800d3e4:	f7ff ffe8 	bl	800d3b8 <_ZN8touchgfx15TouchControllerC1Ev>
 800d3e8:	4a03      	ldr	r2, [pc, #12]	; (800d3f8 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800d3ea:	687b      	ldr	r3, [r7, #4]
 800d3ec:	601a      	str	r2, [r3, #0]
 800d3ee:	687b      	ldr	r3, [r7, #4]
 800d3f0:	4618      	mov	r0, r3
 800d3f2:	3708      	adds	r7, #8
 800d3f4:	46bd      	mov	sp, r7
 800d3f6:	bd80      	pop	{r7, pc}
 800d3f8:	08023d90 	.word	0x08023d90

0800d3fc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 800d3fc:	b590      	push	{r4, r7, lr}
 800d3fe:	b085      	sub	sp, #20
 800d400:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800d402:	f7fe fca5 	bl	800bd50 <_ZN14BitmapDatabase11getInstanceEv>
 800d406:	4604      	mov	r4, r0
 800d408:	f7fe fcac 	bl	800bd64 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800d40c:	4603      	mov	r3, r0
 800d40e:	4619      	mov	r1, r3
 800d410:	2300      	movs	r3, #0
 800d412:	9300      	str	r3, [sp, #0]
 800d414:	2300      	movs	r3, #0
 800d416:	2200      	movs	r2, #0
 800d418:	4620      	mov	r0, r4
 800d41a:	f006 fe35 	bl	8014088 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800d41e:	4809      	ldr	r0, [pc, #36]	; (800d444 <touchgfx_init+0x48>)
 800d420:	f7ff fd30 	bl	800ce84 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800d424:	2000      	movs	r0, #0
 800d426:	f7fe fde1 	bl	800bfec <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800d42a:	4807      	ldr	r0, [pc, #28]	; (800d448 <touchgfx_init+0x4c>)
 800d42c:	f006 fd94 	bl	8013f58 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800d430:	f7ff febe 	bl	800d1b0 <_ZN12FrontendHeap11getInstanceEv>
 800d434:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800d436:	4805      	ldr	r0, [pc, #20]	; (800d44c <touchgfx_init+0x50>)
 800d438:	f7ff fa60 	bl	800c8fc <_ZN11TouchGFXHAL10initializeEv>
}
 800d43c:	bf00      	nop
 800d43e:	370c      	adds	r7, #12
 800d440:	46bd      	mov	sp, r7
 800d442:	bd90      	pop	{r4, r7, pc}
 800d444:	24000748 	.word	0x24000748
 800d448:	24000014 	.word	0x24000014
 800d44c:	2400074c 	.word	0x2400074c

0800d450 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800d450:	b480      	push	{r7}
 800d452:	af00      	add	r7, sp, #0
}
 800d454:	bf00      	nop
 800d456:	46bd      	mov	sp, r7
 800d458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d45c:	4770      	bx	lr
	...

0800d460 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800d460:	b580      	push	{r7, lr}
 800d462:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 800d464:	f7ff fba6 	bl	800cbb4 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800d468:	4603      	mov	r3, r0
 800d46a:	2b00      	cmp	r3, #0
 800d46c:	d002      	beq.n	800d474 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 800d46e:	4802      	ldr	r0, [pc, #8]	; (800d478 <touchgfx_taskEntry+0x18>)
 800d470:	f7ff f92a 	bl	800c6c8 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 800d474:	bf00      	nop
 800d476:	bd80      	pop	{r7, pc}
 800d478:	2400074c 	.word	0x2400074c

0800d47c <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800d47c:	b580      	push	{r7, lr}
 800d47e:	b082      	sub	sp, #8
 800d480:	af00      	add	r7, sp, #0
 800d482:	6078      	str	r0, [r7, #4]
 800d484:	4a10      	ldr	r2, [pc, #64]	; (800d4c8 <_ZN12FrontendHeapD1Ev+0x4c>)
 800d486:	687b      	ldr	r3, [r7, #4]
 800d488:	601a      	str	r2, [r3, #0]
 800d48a:	687b      	ldr	r3, [r7, #4]
 800d48c:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800d490:	4618      	mov	r0, r3
 800d492:	f7fe fe57 	bl	800c144 <_ZN19FrontendApplicationD1Ev>
 800d496:	687b      	ldr	r3, [r7, #4]
 800d498:	f503 738a 	add.w	r3, r3, #276	; 0x114
 800d49c:	4618      	mov	r0, r3
 800d49e:	f000 f827 	bl	800d4f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d4a2:	687b      	ldr	r3, [r7, #4]
 800d4a4:	332c      	adds	r3, #44	; 0x2c
 800d4a6:	4618      	mov	r0, r3
 800d4a8:	f000 f844 	bl	800d534 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d4ac:	687b      	ldr	r3, [r7, #4]
 800d4ae:	3314      	adds	r3, #20
 800d4b0:	4618      	mov	r0, r3
 800d4b2:	f000 f861 	bl	800d578 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d4b6:	687b      	ldr	r3, [r7, #4]
 800d4b8:	4618      	mov	r0, r3
 800d4ba:	f7ff fea5 	bl	800d208 <_ZN16FrontendHeapBaseD1Ev>
 800d4be:	687b      	ldr	r3, [r7, #4]
 800d4c0:	4618      	mov	r0, r3
 800d4c2:	3708      	adds	r7, #8
 800d4c4:	46bd      	mov	sp, r7
 800d4c6:	bd80      	pop	{r7, pc}
 800d4c8:	08023f0c 	.word	0x08023f0c

0800d4cc <_ZN12FrontendHeapD0Ev>:
 800d4cc:	b580      	push	{r7, lr}
 800d4ce:	b082      	sub	sp, #8
 800d4d0:	af00      	add	r7, sp, #0
 800d4d2:	6078      	str	r0, [r7, #4]
 800d4d4:	6878      	ldr	r0, [r7, #4]
 800d4d6:	f7ff ffd1 	bl	800d47c <_ZN12FrontendHeapD1Ev>
 800d4da:	f44f 7122 	mov.w	r1, #648	; 0x288
 800d4de:	6878      	ldr	r0, [r7, #4]
 800d4e0:	f014 fa2d 	bl	802193e <_ZdlPvj>
 800d4e4:	687b      	ldr	r3, [r7, #4]
 800d4e6:	4618      	mov	r0, r3
 800d4e8:	3708      	adds	r7, #8
 800d4ea:	46bd      	mov	sp, r7
 800d4ec:	bd80      	pop	{r7, pc}
	...

0800d4f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d4f0:	b580      	push	{r7, lr}
 800d4f2:	b082      	sub	sp, #8
 800d4f4:	af00      	add	r7, sp, #0
 800d4f6:	6078      	str	r0, [r7, #4]
 800d4f8:	4a05      	ldr	r2, [pc, #20]	; (800d510 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	601a      	str	r2, [r3, #0]
 800d4fe:	687b      	ldr	r3, [r7, #4]
 800d500:	4618      	mov	r0, r3
 800d502:	f000 fe86 	bl	800e212 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d506:	687b      	ldr	r3, [r7, #4]
 800d508:	4618      	mov	r0, r3
 800d50a:	3708      	adds	r7, #8
 800d50c:	46bd      	mov	sp, r7
 800d50e:	bd80      	pop	{r7, pc}
 800d510:	08023f20 	.word	0x08023f20

0800d514 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d514:	b580      	push	{r7, lr}
 800d516:	b082      	sub	sp, #8
 800d518:	af00      	add	r7, sp, #0
 800d51a:	6078      	str	r0, [r7, #4]
 800d51c:	6878      	ldr	r0, [r7, #4]
 800d51e:	f7ff ffe7 	bl	800d4f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d522:	2114      	movs	r1, #20
 800d524:	6878      	ldr	r0, [r7, #4]
 800d526:	f014 fa0a 	bl	802193e <_ZdlPvj>
 800d52a:	687b      	ldr	r3, [r7, #4]
 800d52c:	4618      	mov	r0, r3
 800d52e:	3708      	adds	r7, #8
 800d530:	46bd      	mov	sp, r7
 800d532:	bd80      	pop	{r7, pc}

0800d534 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d534:	b580      	push	{r7, lr}
 800d536:	b082      	sub	sp, #8
 800d538:	af00      	add	r7, sp, #0
 800d53a:	6078      	str	r0, [r7, #4]
 800d53c:	4a05      	ldr	r2, [pc, #20]	; (800d554 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d53e:	687b      	ldr	r3, [r7, #4]
 800d540:	601a      	str	r2, [r3, #0]
 800d542:	687b      	ldr	r3, [r7, #4]
 800d544:	4618      	mov	r0, r3
 800d546:	f000 fe64 	bl	800e212 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d54a:	687b      	ldr	r3, [r7, #4]
 800d54c:	4618      	mov	r0, r3
 800d54e:	3708      	adds	r7, #8
 800d550:	46bd      	mov	sp, r7
 800d552:	bd80      	pop	{r7, pc}
 800d554:	08023f54 	.word	0x08023f54

0800d558 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d558:	b580      	push	{r7, lr}
 800d55a:	b082      	sub	sp, #8
 800d55c:	af00      	add	r7, sp, #0
 800d55e:	6078      	str	r0, [r7, #4]
 800d560:	6878      	ldr	r0, [r7, #4]
 800d562:	f7ff ffe7 	bl	800d534 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d566:	21e8      	movs	r1, #232	; 0xe8
 800d568:	6878      	ldr	r0, [r7, #4]
 800d56a:	f014 f9e8 	bl	802193e <_ZdlPvj>
 800d56e:	687b      	ldr	r3, [r7, #4]
 800d570:	4618      	mov	r0, r3
 800d572:	3708      	adds	r7, #8
 800d574:	46bd      	mov	sp, r7
 800d576:	bd80      	pop	{r7, pc}

0800d578 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d578:	b580      	push	{r7, lr}
 800d57a:	b082      	sub	sp, #8
 800d57c:	af00      	add	r7, sp, #0
 800d57e:	6078      	str	r0, [r7, #4]
 800d580:	4a05      	ldr	r2, [pc, #20]	; (800d598 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d582:	687b      	ldr	r3, [r7, #4]
 800d584:	601a      	str	r2, [r3, #0]
 800d586:	687b      	ldr	r3, [r7, #4]
 800d588:	4618      	mov	r0, r3
 800d58a:	f000 fe42 	bl	800e212 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d58e:	687b      	ldr	r3, [r7, #4]
 800d590:	4618      	mov	r0, r3
 800d592:	3708      	adds	r7, #8
 800d594:	46bd      	mov	sp, r7
 800d596:	bd80      	pop	{r7, pc}
 800d598:	08023f88 	.word	0x08023f88

0800d59c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d59c:	b580      	push	{r7, lr}
 800d59e:	b082      	sub	sp, #8
 800d5a0:	af00      	add	r7, sp, #0
 800d5a2:	6078      	str	r0, [r7, #4]
 800d5a4:	6878      	ldr	r0, [r7, #4]
 800d5a6:	f7ff ffe7 	bl	800d578 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d5aa:	2118      	movs	r1, #24
 800d5ac:	6878      	ldr	r0, [r7, #4]
 800d5ae:	f014 f9c6 	bl	802193e <_ZdlPvj>
 800d5b2:	687b      	ldr	r3, [r7, #4]
 800d5b4:	4618      	mov	r0, r3
 800d5b6:	3708      	adds	r7, #8
 800d5b8:	46bd      	mov	sp, r7
 800d5ba:	bd80      	pop	{r7, pc}

0800d5bc <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800d5bc:	b580      	push	{r7, lr}
 800d5be:	b082      	sub	sp, #8
 800d5c0:	af00      	add	r7, sp, #0
 800d5c2:	6078      	str	r0, [r7, #4]
 800d5c4:	4a05      	ldr	r2, [pc, #20]	; (800d5dc <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800d5c6:	687b      	ldr	r3, [r7, #4]
 800d5c8:	601a      	str	r2, [r3, #0]
 800d5ca:	687b      	ldr	r3, [r7, #4]
 800d5cc:	4618      	mov	r0, r3
 800d5ce:	f7ff fca9 	bl	800cf24 <_ZN8touchgfx3LCDD1Ev>
 800d5d2:	687b      	ldr	r3, [r7, #4]
 800d5d4:	4618      	mov	r0, r3
 800d5d6:	3708      	adds	r7, #8
 800d5d8:	46bd      	mov	sp, r7
 800d5da:	bd80      	pop	{r7, pc}
 800d5dc:	0802488c 	.word	0x0802488c

0800d5e0 <_ZN8touchgfx8LCD16bppD0Ev>:
 800d5e0:	b580      	push	{r7, lr}
 800d5e2:	b082      	sub	sp, #8
 800d5e4:	af00      	add	r7, sp, #0
 800d5e6:	6078      	str	r0, [r7, #4]
 800d5e8:	6878      	ldr	r0, [r7, #4]
 800d5ea:	f7ff ffe7 	bl	800d5bc <_ZN8touchgfx8LCD16bppD1Ev>
 800d5ee:	2184      	movs	r1, #132	; 0x84
 800d5f0:	6878      	ldr	r0, [r7, #4]
 800d5f2:	f014 f9a4 	bl	802193e <_ZdlPvj>
 800d5f6:	687b      	ldr	r3, [r7, #4]
 800d5f8:	4618      	mov	r0, r3
 800d5fa:	3708      	adds	r7, #8
 800d5fc:	46bd      	mov	sp, r7
 800d5fe:	bd80      	pop	{r7, pc}

0800d600 <_Z41__static_initialization_and_destruction_0ii>:
 800d600:	b580      	push	{r7, lr}
 800d602:	b084      	sub	sp, #16
 800d604:	af02      	add	r7, sp, #8
 800d606:	6078      	str	r0, [r7, #4]
 800d608:	6039      	str	r1, [r7, #0]
 800d60a:	687b      	ldr	r3, [r7, #4]
 800d60c:	2b01      	cmp	r3, #1
 800d60e:	d118      	bne.n	800d642 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800d610:	683b      	ldr	r3, [r7, #0]
 800d612:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d616:	4293      	cmp	r3, r2
 800d618:	d113      	bne.n	800d642 <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800d61a:	4817      	ldr	r0, [pc, #92]	; (800d678 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800d61c:	f7ff fedc 	bl	800d3d8 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800d620:	4816      	ldr	r0, [pc, #88]	; (800d67c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d622:	f7ff fb91 	bl	800cd48 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800d626:	4816      	ldr	r0, [pc, #88]	; (800d680 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d628:	f00b f800 	bl	801862c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 800d62c:	23f0      	movs	r3, #240	; 0xf0
 800d62e:	9301      	str	r3, [sp, #4]
 800d630:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800d634:	9300      	str	r3, [sp, #0]
 800d636:	4b10      	ldr	r3, [pc, #64]	; (800d678 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800d638:	4a11      	ldr	r2, [pc, #68]	; (800d680 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d63a:	4910      	ldr	r1, [pc, #64]	; (800d67c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d63c:	4811      	ldr	r0, [pc, #68]	; (800d684 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800d63e:	f7ff fe9f 	bl	800d380 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800d642:	687b      	ldr	r3, [r7, #4]
 800d644:	2b00      	cmp	r3, #0
 800d646:	d113      	bne.n	800d670 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800d648:	683b      	ldr	r3, [r7, #0]
 800d64a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d64e:	4293      	cmp	r3, r2
 800d650:	d10e      	bne.n	800d670 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800d652:	480c      	ldr	r0, [pc, #48]	; (800d684 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800d654:	f7ff f9e2 	bl	800ca1c <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800d658:	480b      	ldr	r0, [pc, #44]	; (800d688 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800d65a:	f7fc fe3d 	bl	800a2d8 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800d65e:	4808      	ldr	r0, [pc, #32]	; (800d680 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d660:	f7ff ffac 	bl	800d5bc <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800d664:	4805      	ldr	r0, [pc, #20]	; (800d67c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d666:	f7ff fbc3 	bl	800cdf0 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800d66a:	4803      	ldr	r0, [pc, #12]	; (800d678 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800d66c:	f7fe ff32 	bl	800c4d4 <_ZN20STM32TouchControllerD1Ev>
}
 800d670:	bf00      	nop
 800d672:	3708      	adds	r7, #8
 800d674:	46bd      	mov	sp, r7
 800d676:	bd80      	pop	{r7, pc}
 800d678:	2400067c 	.word	0x2400067c
 800d67c:	24000680 	.word	0x24000680
 800d680:	240006c4 	.word	0x240006c4
 800d684:	2400074c 	.word	0x2400074c
 800d688:	24000014 	.word	0x24000014

0800d68c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800d68c:	b480      	push	{r7}
 800d68e:	b083      	sub	sp, #12
 800d690:	af00      	add	r7, sp, #0
 800d692:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800d694:	2301      	movs	r3, #1
    }
 800d696:	4618      	mov	r0, r3
 800d698:	370c      	adds	r7, #12
 800d69a:	46bd      	mov	sp, r7
 800d69c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6a0:	4770      	bx	lr

0800d6a2 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800d6a2:	b480      	push	{r7}
 800d6a4:	b083      	sub	sp, #12
 800d6a6:	af00      	add	r7, sp, #0
 800d6a8:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800d6aa:	230c      	movs	r3, #12
    }
 800d6ac:	4618      	mov	r0, r3
 800d6ae:	370c      	adds	r7, #12
 800d6b0:	46bd      	mov	sp, r7
 800d6b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6b6:	4770      	bx	lr

0800d6b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800d6b8:	b480      	push	{r7}
 800d6ba:	b083      	sub	sp, #12
 800d6bc:	af00      	add	r7, sp, #0
 800d6be:	6078      	str	r0, [r7, #4]
 800d6c0:	460b      	mov	r3, r1
 800d6c2:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800d6c4:	887a      	ldrh	r2, [r7, #2]
 800d6c6:	4613      	mov	r3, r2
 800d6c8:	005b      	lsls	r3, r3, #1
 800d6ca:	4413      	add	r3, r2
 800d6cc:	009b      	lsls	r3, r3, #2
 800d6ce:	3308      	adds	r3, #8
 800d6d0:	687a      	ldr	r2, [r7, #4]
 800d6d2:	4413      	add	r3, r2
    }
 800d6d4:	4618      	mov	r0, r3
 800d6d6:	370c      	adds	r7, #12
 800d6d8:	46bd      	mov	sp, r7
 800d6da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6de:	4770      	bx	lr

0800d6e0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800d6e0:	b480      	push	{r7}
 800d6e2:	b083      	sub	sp, #12
 800d6e4:	af00      	add	r7, sp, #0
 800d6e6:	6078      	str	r0, [r7, #4]
 800d6e8:	460b      	mov	r3, r1
 800d6ea:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800d6ec:	887a      	ldrh	r2, [r7, #2]
 800d6ee:	4613      	mov	r3, r2
 800d6f0:	005b      	lsls	r3, r3, #1
 800d6f2:	4413      	add	r3, r2
 800d6f4:	009b      	lsls	r3, r3, #2
 800d6f6:	3308      	adds	r3, #8
 800d6f8:	687a      	ldr	r2, [r7, #4]
 800d6fa:	4413      	add	r3, r2
    }
 800d6fc:	4618      	mov	r0, r3
 800d6fe:	370c      	adds	r7, #12
 800d700:	46bd      	mov	sp, r7
 800d702:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d706:	4770      	bx	lr

0800d708 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800d708:	b480      	push	{r7}
 800d70a:	b083      	sub	sp, #12
 800d70c:	af00      	add	r7, sp, #0
 800d70e:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800d710:	2301      	movs	r3, #1
    }
 800d712:	4618      	mov	r0, r3
 800d714:	370c      	adds	r7, #12
 800d716:	46bd      	mov	sp, r7
 800d718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d71c:	4770      	bx	lr

0800d71e <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800d71e:	b480      	push	{r7}
 800d720:	b083      	sub	sp, #12
 800d722:	af00      	add	r7, sp, #0
 800d724:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800d726:	23e0      	movs	r3, #224	; 0xe0
    }
 800d728:	4618      	mov	r0, r3
 800d72a:	370c      	adds	r7, #12
 800d72c:	46bd      	mov	sp, r7
 800d72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d732:	4770      	bx	lr

0800d734 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800d734:	b480      	push	{r7}
 800d736:	b083      	sub	sp, #12
 800d738:	af00      	add	r7, sp, #0
 800d73a:	6078      	str	r0, [r7, #4]
 800d73c:	460b      	mov	r3, r1
 800d73e:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800d740:	887a      	ldrh	r2, [r7, #2]
 800d742:	4613      	mov	r3, r2
 800d744:	00db      	lsls	r3, r3, #3
 800d746:	1a9b      	subs	r3, r3, r2
 800d748:	015b      	lsls	r3, r3, #5
 800d74a:	3308      	adds	r3, #8
 800d74c:	687a      	ldr	r2, [r7, #4]
 800d74e:	4413      	add	r3, r2
    }
 800d750:	4618      	mov	r0, r3
 800d752:	370c      	adds	r7, #12
 800d754:	46bd      	mov	sp, r7
 800d756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d75a:	4770      	bx	lr

0800d75c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800d75c:	b480      	push	{r7}
 800d75e:	b083      	sub	sp, #12
 800d760:	af00      	add	r7, sp, #0
 800d762:	6078      	str	r0, [r7, #4]
 800d764:	460b      	mov	r3, r1
 800d766:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800d768:	887a      	ldrh	r2, [r7, #2]
 800d76a:	4613      	mov	r3, r2
 800d76c:	00db      	lsls	r3, r3, #3
 800d76e:	1a9b      	subs	r3, r3, r2
 800d770:	015b      	lsls	r3, r3, #5
 800d772:	3308      	adds	r3, #8
 800d774:	687a      	ldr	r2, [r7, #4]
 800d776:	4413      	add	r3, r2
    }
 800d778:	4618      	mov	r0, r3
 800d77a:	370c      	adds	r7, #12
 800d77c:	46bd      	mov	sp, r7
 800d77e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d782:	4770      	bx	lr

0800d784 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800d784:	b480      	push	{r7}
 800d786:	b083      	sub	sp, #12
 800d788:	af00      	add	r7, sp, #0
 800d78a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800d78c:	2301      	movs	r3, #1
    }
 800d78e:	4618      	mov	r0, r3
 800d790:	370c      	adds	r7, #12
 800d792:	46bd      	mov	sp, r7
 800d794:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d798:	4770      	bx	lr

0800d79a <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800d79a:	b480      	push	{r7}
 800d79c:	b083      	sub	sp, #12
 800d79e:	af00      	add	r7, sp, #0
 800d7a0:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800d7a2:	2310      	movs	r3, #16
    }
 800d7a4:	4618      	mov	r0, r3
 800d7a6:	370c      	adds	r7, #12
 800d7a8:	46bd      	mov	sp, r7
 800d7aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7ae:	4770      	bx	lr

0800d7b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800d7b0:	b480      	push	{r7}
 800d7b2:	b083      	sub	sp, #12
 800d7b4:	af00      	add	r7, sp, #0
 800d7b6:	6078      	str	r0, [r7, #4]
 800d7b8:	460b      	mov	r3, r1
 800d7ba:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800d7bc:	887b      	ldrh	r3, [r7, #2]
 800d7be:	011b      	lsls	r3, r3, #4
 800d7c0:	3308      	adds	r3, #8
 800d7c2:	687a      	ldr	r2, [r7, #4]
 800d7c4:	4413      	add	r3, r2
    }
 800d7c6:	4618      	mov	r0, r3
 800d7c8:	370c      	adds	r7, #12
 800d7ca:	46bd      	mov	sp, r7
 800d7cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7d0:	4770      	bx	lr

0800d7d2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800d7d2:	b480      	push	{r7}
 800d7d4:	b083      	sub	sp, #12
 800d7d6:	af00      	add	r7, sp, #0
 800d7d8:	6078      	str	r0, [r7, #4]
 800d7da:	460b      	mov	r3, r1
 800d7dc:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800d7de:	887b      	ldrh	r3, [r7, #2]
 800d7e0:	011b      	lsls	r3, r3, #4
 800d7e2:	3308      	adds	r3, #8
 800d7e4:	687a      	ldr	r2, [r7, #4]
 800d7e6:	4413      	add	r3, r2
    }
 800d7e8:	4618      	mov	r0, r3
 800d7ea:	370c      	adds	r7, #12
 800d7ec:	46bd      	mov	sp, r7
 800d7ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7f2:	4770      	bx	lr

0800d7f4 <_GLOBAL__sub_I_touchgfx_init>:
 800d7f4:	b580      	push	{r7, lr}
 800d7f6:	af00      	add	r7, sp, #0
 800d7f8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d7fc:	2001      	movs	r0, #1
 800d7fe:	f7ff feff 	bl	800d600 <_Z41__static_initialization_and_destruction_0ii>
 800d802:	bd80      	pop	{r7, pc}

0800d804 <_GLOBAL__sub_D_touchgfx_init>:
 800d804:	b580      	push	{r7, lr}
 800d806:	af00      	add	r7, sp, #0
 800d808:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d80c:	2000      	movs	r0, #0
 800d80e:	f7ff fef7 	bl	800d600 <_Z41__static_initialization_and_destruction_0ii>
 800d812:	bd80      	pop	{r7, pc}

0800d814 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800d814:	b480      	push	{r7}
 800d816:	b083      	sub	sp, #12
 800d818:	af00      	add	r7, sp, #0
 800d81a:	6078      	str	r0, [r7, #4]
    {
 800d81c:	4a04      	ldr	r2, [pc, #16]	; (800d830 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800d81e:	687b      	ldr	r3, [r7, #4]
 800d820:	601a      	str	r2, [r3, #0]
    }
 800d822:	687b      	ldr	r3, [r7, #4]
 800d824:	4618      	mov	r0, r3
 800d826:	370c      	adds	r7, #12
 800d828:	46bd      	mov	sp, r7
 800d82a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d82e:	4770      	bx	lr
 800d830:	080240e4 	.word	0x080240e4

0800d834 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800d834:	b580      	push	{r7, lr}
 800d836:	b082      	sub	sp, #8
 800d838:	af00      	add	r7, sp, #0
 800d83a:	6078      	str	r0, [r7, #4]
    }
 800d83c:	6878      	ldr	r0, [r7, #4]
 800d83e:	f7ff ffe9 	bl	800d814 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800d842:	2104      	movs	r1, #4
 800d844:	6878      	ldr	r0, [r7, #4]
 800d846:	f014 f87a 	bl	802193e <_ZdlPvj>
 800d84a:	687b      	ldr	r3, [r7, #4]
 800d84c:	4618      	mov	r0, r3
 800d84e:	3708      	adds	r7, #8
 800d850:	46bd      	mov	sp, r7
 800d852:	bd80      	pop	{r7, pc}

0800d854 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800d854:	b480      	push	{r7}
 800d856:	b083      	sub	sp, #12
 800d858:	af00      	add	r7, sp, #0
 800d85a:	6078      	str	r0, [r7, #4]
 800d85c:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 800d85e:	687b      	ldr	r3, [r7, #4]
 800d860:	683a      	ldr	r2, [r7, #0]
 800d862:	619a      	str	r2, [r3, #24]
    }
 800d864:	bf00      	nop
 800d866:	370c      	adds	r7, #12
 800d868:	46bd      	mov	sp, r7
 800d86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d86e:	4770      	bx	lr

0800d870 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 800d870:	b480      	push	{r7}
 800d872:	b083      	sub	sp, #12
 800d874:	af00      	add	r7, sp, #0
 800d876:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 800d878:	687b      	ldr	r3, [r7, #4]
 800d87a:	699b      	ldr	r3, [r3, #24]
    }
 800d87c:	4618      	mov	r0, r3
 800d87e:	370c      	adds	r7, #12
 800d880:	46bd      	mov	sp, r7
 800d882:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d886:	4770      	bx	lr

0800d888 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800d888:	b580      	push	{r7, lr}
 800d88a:	b082      	sub	sp, #8
 800d88c:	af00      	add	r7, sp, #0
 800d88e:	6078      	str	r0, [r7, #4]
 800d890:	460b      	mov	r3, r1
 800d892:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800d894:	78fb      	ldrb	r3, [r7, #3]
 800d896:	2b00      	cmp	r3, #0
 800d898:	d002      	beq.n	800d8a0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800d89a:	78fb      	ldrb	r3, [r7, #3]
 800d89c:	2b02      	cmp	r3, #2
 800d89e:	d105      	bne.n	800d8ac <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800d8a0:	687b      	ldr	r3, [r7, #4]
 800d8a2:	78fa      	ldrb	r2, [r7, #3]
 800d8a4:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800d8a8:	2301      	movs	r3, #1
 800d8aa:	e027      	b.n	800d8fc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800d8ac:	78fb      	ldrb	r3, [r7, #3]
 800d8ae:	2b01      	cmp	r3, #1
 800d8b0:	d123      	bne.n	800d8fa <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800d8b2:	687b      	ldr	r3, [r7, #4]
 800d8b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d8b6:	2b00      	cmp	r3, #0
 800d8b8:	d014      	beq.n	800d8e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800d8ba:	687b      	ldr	r3, [r7, #4]
 800d8bc:	681b      	ldr	r3, [r3, #0]
 800d8be:	339c      	adds	r3, #156	; 0x9c
 800d8c0:	681b      	ldr	r3, [r3, #0]
 800d8c2:	6878      	ldr	r0, [r7, #4]
 800d8c4:	4798      	blx	r3
 800d8c6:	4603      	mov	r3, r0
 800d8c8:	461a      	mov	r2, r3
 800d8ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d8ce:	429a      	cmp	r2, r3
 800d8d0:	d008      	beq.n	800d8e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800d8d2:	4b0c      	ldr	r3, [pc, #48]	; (800d904 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800d8d4:	781b      	ldrb	r3, [r3, #0]
 800d8d6:	f083 0301 	eor.w	r3, r3, #1
 800d8da:	b2db      	uxtb	r3, r3
 800d8dc:	2b00      	cmp	r3, #0
 800d8de:	d001      	beq.n	800d8e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800d8e0:	2301      	movs	r3, #1
 800d8e2:	e000      	b.n	800d8e6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800d8e4:	2300      	movs	r3, #0
 800d8e6:	2b00      	cmp	r3, #0
 800d8e8:	d005      	beq.n	800d8f6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800d8ea:	687b      	ldr	r3, [r7, #4]
 800d8ec:	78fa      	ldrb	r2, [r7, #3]
 800d8ee:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800d8f2:	2301      	movs	r3, #1
 800d8f4:	e002      	b.n	800d8fc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800d8f6:	2300      	movs	r3, #0
 800d8f8:	e000      	b.n	800d8fc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800d8fa:	2300      	movs	r3, #0
    }
 800d8fc:	4618      	mov	r0, r3
 800d8fe:	3708      	adds	r7, #8
 800d900:	46bd      	mov	sp, r7
 800d902:	bd80      	pop	{r7, pc}
 800d904:	24001e7a 	.word	0x24001e7a

0800d908 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800d908:	b5b0      	push	{r4, r5, r7, lr}
 800d90a:	b082      	sub	sp, #8
 800d90c:	af00      	add	r7, sp, #0
 800d90e:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800d910:	687b      	ldr	r3, [r7, #4]
 800d912:	4618      	mov	r0, r3
 800d914:	f000 ff75 	bl	800e802 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800d918:	687d      	ldr	r5, [r7, #4]
 800d91a:	687b      	ldr	r3, [r7, #4]
 800d91c:	681b      	ldr	r3, [r3, #0]
 800d91e:	3364      	adds	r3, #100	; 0x64
 800d920:	681c      	ldr	r4, [r3, #0]
 800d922:	f003 fee9 	bl	80116f8 <_ZN8touchgfx11Application11getInstanceEv>
 800d926:	4603      	mov	r3, r0
 800d928:	4619      	mov	r1, r3
 800d92a:	4628      	mov	r0, r5
 800d92c:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800d92e:	687b      	ldr	r3, [r7, #4]
 800d930:	681b      	ldr	r3, [r3, #0]
 800d932:	3380      	adds	r3, #128	; 0x80
 800d934:	681b      	ldr	r3, [r3, #0]
 800d936:	6878      	ldr	r0, [r7, #4]
 800d938:	4798      	blx	r3
    enableInterrupts();
 800d93a:	687b      	ldr	r3, [r7, #4]
 800d93c:	681b      	ldr	r3, [r3, #0]
 800d93e:	3378      	adds	r3, #120	; 0x78
 800d940:	681b      	ldr	r3, [r3, #0]
 800d942:	6878      	ldr	r0, [r7, #4]
 800d944:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800d946:	687b      	ldr	r3, [r7, #4]
 800d948:	4906      	ldr	r1, [pc, #24]	; (800d964 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800d94a:	4618      	mov	r0, r3
 800d94c:	f7ff ff82 	bl	800d854 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800d950:	687b      	ldr	r3, [r7, #4]
 800d952:	2102      	movs	r1, #2
 800d954:	4618      	mov	r0, r3
 800d956:	f7ff ff97 	bl	800d888 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800d95a:	bf00      	nop
 800d95c:	3708      	adds	r7, #8
 800d95e:	46bd      	mov	sp, r7
 800d960:	bdb0      	pop	{r4, r5, r7, pc}
 800d962:	bf00      	nop
 800d964:	240007c8 	.word	0x240007c8

0800d968 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800d968:	b480      	push	{r7}
 800d96a:	b083      	sub	sp, #12
 800d96c:	af00      	add	r7, sp, #0
 800d96e:	6078      	str	r0, [r7, #4]
}
 800d970:	bf00      	nop
 800d972:	370c      	adds	r7, #12
 800d974:	46bd      	mov	sp, r7
 800d976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d97a:	4770      	bx	lr

0800d97c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800d97c:	b480      	push	{r7}
 800d97e:	b083      	sub	sp, #12
 800d980:	af00      	add	r7, sp, #0
 800d982:	6078      	str	r0, [r7, #4]
}
 800d984:	bf00      	nop
 800d986:	370c      	adds	r7, #12
 800d988:	46bd      	mov	sp, r7
 800d98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d98e:	4770      	bx	lr

0800d990 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800d990:	b480      	push	{r7}
 800d992:	b083      	sub	sp, #12
 800d994:	af00      	add	r7, sp, #0
 800d996:	6078      	str	r0, [r7, #4]
}
 800d998:	bf00      	nop
 800d99a:	370c      	adds	r7, #12
 800d99c:	46bd      	mov	sp, r7
 800d99e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9a2:	4770      	bx	lr

0800d9a4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800d9a4:	b480      	push	{r7}
 800d9a6:	b083      	sub	sp, #12
 800d9a8:	af00      	add	r7, sp, #0
 800d9aa:	6078      	str	r0, [r7, #4]
}
 800d9ac:	bf00      	nop
 800d9ae:	370c      	adds	r7, #12
 800d9b0:	46bd      	mov	sp, r7
 800d9b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9b6:	4770      	bx	lr

0800d9b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800d9b8:	b580      	push	{r7, lr}
 800d9ba:	b082      	sub	sp, #8
 800d9bc:	af00      	add	r7, sp, #0
 800d9be:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800d9c0:	687b      	ldr	r3, [r7, #4]
 800d9c2:	4618      	mov	r0, r3
 800d9c4:	f000 ff04 	bl	800e7d0 <_ZN8touchgfx3HAL10beginFrameEv>
 800d9c8:	4603      	mov	r3, r0
}
 800d9ca:	4618      	mov	r0, r3
 800d9cc:	3708      	adds	r7, #8
 800d9ce:	46bd      	mov	sp, r7
 800d9d0:	bd80      	pop	{r7, pc}

0800d9d2 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800d9d2:	b580      	push	{r7, lr}
 800d9d4:	b082      	sub	sp, #8
 800d9d6:	af00      	add	r7, sp, #0
 800d9d8:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800d9da:	bf00      	nop
 800d9dc:	f7ff f840 	bl	800ca60 <touchgfxDisplayDriverTransmitActive>
 800d9e0:	4603      	mov	r3, r0
 800d9e2:	2b00      	cmp	r3, #0
 800d9e4:	bf14      	ite	ne
 800d9e6:	2301      	movne	r3, #1
 800d9e8:	2300      	moveq	r3, #0
 800d9ea:	b2db      	uxtb	r3, r3
 800d9ec:	2b00      	cmp	r3, #0
 800d9ee:	d1f5      	bne.n	800d9dc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800d9f0:	687b      	ldr	r3, [r7, #4]
 800d9f2:	4618      	mov	r0, r3
 800d9f4:	f000 fef8 	bl	800e7e8 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800d9f8:	f7ff f8d0 	bl	800cb9c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800d9fc:	bf00      	nop
 800d9fe:	3708      	adds	r7, #8
 800da00:	46bd      	mov	sp, r7
 800da02:	bd80      	pop	{r7, pc}

0800da04 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800da04:	b480      	push	{r7}
 800da06:	b083      	sub	sp, #12
 800da08:	af00      	add	r7, sp, #0
 800da0a:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800da0c:	2300      	movs	r3, #0
}
 800da0e:	4618      	mov	r0, r3
 800da10:	370c      	adds	r7, #12
 800da12:	46bd      	mov	sp, r7
 800da14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da18:	4770      	bx	lr

0800da1a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800da1a:	b480      	push	{r7}
 800da1c:	b083      	sub	sp, #12
 800da1e:	af00      	add	r7, sp, #0
 800da20:	6078      	str	r0, [r7, #4]
 800da22:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800da24:	bf00      	nop
 800da26:	370c      	adds	r7, #12
 800da28:	46bd      	mov	sp, r7
 800da2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da2e:	4770      	bx	lr

0800da30 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800da30:	b580      	push	{r7, lr}
 800da32:	b088      	sub	sp, #32
 800da34:	af02      	add	r7, sp, #8
 800da36:	6078      	str	r0, [r7, #4]
 800da38:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800da3a:	687b      	ldr	r3, [r7, #4]
 800da3c:	6839      	ldr	r1, [r7, #0]
 800da3e:	4618      	mov	r0, r3
 800da40:	f000 fe90 	bl	800e764 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800da44:	687b      	ldr	r3, [r7, #4]
 800da46:	699a      	ldr	r2, [r3, #24]
 800da48:	687b      	ldr	r3, [r7, #4]
 800da4a:	699b      	ldr	r3, [r3, #24]
 800da4c:	681b      	ldr	r3, [r3, #0]
 800da4e:	3304      	adds	r3, #4
 800da50:	681b      	ldr	r3, [r3, #0]
 800da52:	4610      	mov	r0, r2
 800da54:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800da56:	f7ff f803 	bl	800ca60 <touchgfxDisplayDriverTransmitActive>
 800da5a:	4603      	mov	r3, r0
 800da5c:	2b00      	cmp	r3, #0
 800da5e:	bf0c      	ite	eq
 800da60:	2301      	moveq	r3, #1
 800da62:	2300      	movne	r3, #0
 800da64:	b2db      	uxtb	r3, r3
 800da66:	2b00      	cmp	r3, #0
 800da68:	d021      	beq.n	800daae <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800da6a:	f107 030c 	add.w	r3, r7, #12
 800da6e:	4618      	mov	r0, r3
 800da70:	f7fd fc69 	bl	800b346 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800da74:	687b      	ldr	r3, [r7, #4]
 800da76:	699a      	ldr	r2, [r3, #24]
 800da78:	687b      	ldr	r3, [r7, #4]
 800da7a:	699b      	ldr	r3, [r3, #24]
 800da7c:	681b      	ldr	r3, [r3, #0]
 800da7e:	330c      	adds	r3, #12
 800da80:	681b      	ldr	r3, [r3, #0]
 800da82:	f107 010c 	add.w	r1, r7, #12
 800da86:	4610      	mov	r0, r2
 800da88:	4798      	blx	r3
 800da8a:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800da8c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800da90:	b299      	uxth	r1, r3
 800da92:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800da96:	b29a      	uxth	r2, r3
 800da98:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800da9c:	b298      	uxth	r0, r3
 800da9e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800daa2:	b29b      	uxth	r3, r3
 800daa4:	9300      	str	r3, [sp, #0]
 800daa6:	4603      	mov	r3, r0
 800daa8:	6978      	ldr	r0, [r7, #20]
 800daaa:	f7fe ffe5 	bl	800ca78 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800daae:	bf00      	nop
 800dab0:	3718      	adds	r7, #24
 800dab2:	46bd      	mov	sp, r7
 800dab4:	bd80      	pop	{r7, pc}

0800dab6 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800dab6:	b580      	push	{r7, lr}
 800dab8:	b084      	sub	sp, #16
 800daba:	af00      	add	r7, sp, #0
 800dabc:	60f8      	str	r0, [r7, #12]
 800dabe:	60b9      	str	r1, [r7, #8]
 800dac0:	607a      	str	r2, [r7, #4]
 800dac2:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800dac4:	68f8      	ldr	r0, [r7, #12]
 800dac6:	683b      	ldr	r3, [r7, #0]
 800dac8:	687a      	ldr	r2, [r7, #4]
 800daca:	68b9      	ldr	r1, [r7, #8]
 800dacc:	f000 ffbb 	bl	800ea46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800dad0:	4603      	mov	r3, r0
}
 800dad2:	4618      	mov	r0, r3
 800dad4:	3710      	adds	r7, #16
 800dad6:	46bd      	mov	sp, r7
 800dad8:	bd80      	pop	{r7, pc}
	...

0800dadc <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 800dadc:	b480      	push	{r7}
 800dade:	b087      	sub	sp, #28
 800dae0:	af00      	add	r7, sp, #0
 800dae2:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800dae4:	4b25      	ldr	r3, [pc, #148]	; (800db7c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800dae6:	695b      	ldr	r3, [r3, #20]
 800dae8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800daec:	2b00      	cmp	r3, #0
 800daee:	bf14      	ite	ne
 800daf0:	2301      	movne	r3, #1
 800daf2:	2300      	moveq	r3, #0
 800daf4:	b2db      	uxtb	r3, r3
 800daf6:	2b00      	cmp	r3, #0
 800daf8:	d03a      	beq.n	800db70 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800dafa:	4b20      	ldr	r3, [pc, #128]	; (800db7c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800dafc:	2200      	movs	r2, #0
 800dafe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800db02:	f3bf 8f4f 	dsb	sy
}
 800db06:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800db08:	4b1c      	ldr	r3, [pc, #112]	; (800db7c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800db0a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800db0e:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800db10:	697b      	ldr	r3, [r7, #20]
 800db12:	0b5b      	lsrs	r3, r3, #13
 800db14:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800db18:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800db1a:	697b      	ldr	r3, [r7, #20]
 800db1c:	08db      	lsrs	r3, r3, #3
 800db1e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800db22:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800db24:	693b      	ldr	r3, [r7, #16]
 800db26:	015a      	lsls	r2, r3, #5
 800db28:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800db2c:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800db2e:	68fa      	ldr	r2, [r7, #12]
 800db30:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800db32:	4912      	ldr	r1, [pc, #72]	; (800db7c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800db34:	4313      	orrs	r3, r2
 800db36:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800db3a:	68fb      	ldr	r3, [r7, #12]
 800db3c:	1e5a      	subs	r2, r3, #1
 800db3e:	60fa      	str	r2, [r7, #12]
 800db40:	2b00      	cmp	r3, #0
 800db42:	bf14      	ite	ne
 800db44:	2301      	movne	r3, #1
 800db46:	2300      	moveq	r3, #0
 800db48:	b2db      	uxtb	r3, r3
 800db4a:	2b00      	cmp	r3, #0
 800db4c:	d1ea      	bne.n	800db24 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x48>
    } while(sets-- != 0U);
 800db4e:	693b      	ldr	r3, [r7, #16]
 800db50:	1e5a      	subs	r2, r3, #1
 800db52:	613a      	str	r2, [r7, #16]
 800db54:	2b00      	cmp	r3, #0
 800db56:	bf14      	ite	ne
 800db58:	2301      	movne	r3, #1
 800db5a:	2300      	moveq	r3, #0
 800db5c:	b2db      	uxtb	r3, r3
 800db5e:	2b00      	cmp	r3, #0
 800db60:	d1db      	bne.n	800db1a <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 800db62:	f3bf 8f4f 	dsb	sy
}
 800db66:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800db68:	f3bf 8f6f 	isb	sy
}
 800db6c:	bf00      	nop
}
 800db6e:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 800db70:	bf00      	nop
 800db72:	371c      	adds	r7, #28
 800db74:	46bd      	mov	sp, r7
 800db76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db7a:	4770      	bx	lr
 800db7c:	e000ed00 	.word	0xe000ed00

0800db80 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 800db80:	b480      	push	{r7}
 800db82:	b087      	sub	sp, #28
 800db84:	af00      	add	r7, sp, #0
 800db86:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800db88:	4b25      	ldr	r3, [pc, #148]	; (800dc20 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800db8a:	695b      	ldr	r3, [r3, #20]
 800db8c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800db90:	2b00      	cmp	r3, #0
 800db92:	bf14      	ite	ne
 800db94:	2301      	movne	r3, #1
 800db96:	2300      	moveq	r3, #0
 800db98:	b2db      	uxtb	r3, r3
 800db9a:	2b00      	cmp	r3, #0
 800db9c:	d03a      	beq.n	800dc14 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800db9e:	4b20      	ldr	r3, [pc, #128]	; (800dc20 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800dba0:	2200      	movs	r2, #0
 800dba2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800dba6:	f3bf 8f4f 	dsb	sy
}
 800dbaa:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800dbac:	4b1c      	ldr	r3, [pc, #112]	; (800dc20 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800dbae:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dbb2:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800dbb4:	697b      	ldr	r3, [r7, #20]
 800dbb6:	0b5b      	lsrs	r3, r3, #13
 800dbb8:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800dbbc:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800dbbe:	697b      	ldr	r3, [r7, #20]
 800dbc0:	08db      	lsrs	r3, r3, #3
 800dbc2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800dbc6:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800dbc8:	693b      	ldr	r3, [r7, #16]
 800dbca:	015a      	lsls	r2, r3, #5
 800dbcc:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800dbd0:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800dbd2:	68fa      	ldr	r2, [r7, #12]
 800dbd4:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800dbd6:	4912      	ldr	r1, [pc, #72]	; (800dc20 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800dbd8:	4313      	orrs	r3, r2
 800dbda:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800dbde:	68fb      	ldr	r3, [r7, #12]
 800dbe0:	1e5a      	subs	r2, r3, #1
 800dbe2:	60fa      	str	r2, [r7, #12]
 800dbe4:	2b00      	cmp	r3, #0
 800dbe6:	bf14      	ite	ne
 800dbe8:	2301      	movne	r3, #1
 800dbea:	2300      	moveq	r3, #0
 800dbec:	b2db      	uxtb	r3, r3
 800dbee:	2b00      	cmp	r3, #0
 800dbf0:	d1ea      	bne.n	800dbc8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    } while(sets-- != 0U);
 800dbf2:	693b      	ldr	r3, [r7, #16]
 800dbf4:	1e5a      	subs	r2, r3, #1
 800dbf6:	613a      	str	r2, [r7, #16]
 800dbf8:	2b00      	cmp	r3, #0
 800dbfa:	bf14      	ite	ne
 800dbfc:	2301      	movne	r3, #1
 800dbfe:	2300      	moveq	r3, #0
 800dc00:	b2db      	uxtb	r3, r3
 800dc02:	2b00      	cmp	r3, #0
 800dc04:	d1db      	bne.n	800dbbe <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 800dc06:	f3bf 8f4f 	dsb	sy
}
 800dc0a:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800dc0c:	f3bf 8f6f 	isb	sy
}
 800dc10:	bf00      	nop
}
 800dc12:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 800dc14:	bf00      	nop
 800dc16:	371c      	adds	r7, #28
 800dc18:	46bd      	mov	sp, r7
 800dc1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc1e:	4770      	bx	lr
 800dc20:	e000ed00 	.word	0xe000ed00

0800dc24 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800dc24:	b480      	push	{r7}
 800dc26:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 800dc28:	bf00      	nop
 800dc2a:	46bd      	mov	sp, r7
 800dc2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc30:	4770      	bx	lr

0800dc32 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800dc32:	b480      	push	{r7}
 800dc34:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 800dc36:	bf00      	nop
 800dc38:	46bd      	mov	sp, r7
 800dc3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc3e:	4770      	bx	lr

0800dc40 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800dc40:	b580      	push	{r7, lr}
 800dc42:	b086      	sub	sp, #24
 800dc44:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800dc46:	f7fc fee7 	bl	800aa18 <_ZN8touchgfx3HAL11getInstanceEv>
 800dc4a:	4603      	mov	r3, r0
 800dc4c:	4618      	mov	r0, r3
 800dc4e:	f7ff fe0f 	bl	800d870 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800dc52:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800dc54:	68fb      	ldr	r3, [r7, #12]
 800dc56:	681b      	ldr	r3, [r3, #0]
 800dc58:	3318      	adds	r3, #24
 800dc5a:	681b      	ldr	r3, [r3, #0]
 800dc5c:	68f8      	ldr	r0, [r7, #12]
 800dc5e:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800dc60:	68fb      	ldr	r3, [r7, #12]
 800dc62:	681b      	ldr	r3, [r3, #0]
 800dc64:	3308      	adds	r3, #8
 800dc66:	681b      	ldr	r3, [r3, #0]
 800dc68:	68f8      	ldr	r0, [r7, #12]
 800dc6a:	4798      	blx	r3
 800dc6c:	4603      	mov	r3, r0
 800dc6e:	2b00      	cmp	r3, #0
 800dc70:	d01d      	beq.n	800dcae <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800dc72:	463b      	mov	r3, r7
 800dc74:	4618      	mov	r0, r3
 800dc76:	f7fd fb66 	bl	800b346 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800dc7a:	68fb      	ldr	r3, [r7, #12]
 800dc7c:	681b      	ldr	r3, [r3, #0]
 800dc7e:	330c      	adds	r3, #12
 800dc80:	681b      	ldr	r3, [r3, #0]
 800dc82:	463a      	mov	r2, r7
 800dc84:	4611      	mov	r1, r2
 800dc86:	68f8      	ldr	r0, [r7, #12]
 800dc88:	4798      	blx	r3
 800dc8a:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800dc8c:	f9b7 3000 	ldrsh.w	r3, [r7]
 800dc90:	b299      	uxth	r1, r3
 800dc92:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc96:	b29a      	uxth	r2, r3
 800dc98:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800dc9c:	b298      	uxth	r0, r3
 800dc9e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800dca2:	b29b      	uxth	r3, r3
 800dca4:	9300      	str	r3, [sp, #0]
 800dca6:	4603      	mov	r3, r0
 800dca8:	68b8      	ldr	r0, [r7, #8]
 800dcaa:	f7fe fee5 	bl	800ca78 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800dcae:	bf00      	nop
 800dcb0:	3710      	adds	r7, #16
 800dcb2:	46bd      	mov	sp, r7
 800dcb4:	bd80      	pop	{r7, pc}

0800dcb6 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800dcb6:	b580      	push	{r7, lr}
 800dcb8:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800dcba:	f7ff ffc1 	bl	800dc40 <_ZN8touchgfx16startNewTransferEv>
}
 800dcbe:	bf00      	nop
 800dcc0:	bd80      	pop	{r7, pc}
	...

0800dcc4 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800dcc4:	b480      	push	{r7}
 800dcc6:	b083      	sub	sp, #12
 800dcc8:	af00      	add	r7, sp, #0
 800dcca:	6078      	str	r0, [r7, #4]
 800dccc:	4a04      	ldr	r2, [pc, #16]	; (800dce0 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800dcce:	687b      	ldr	r3, [r7, #4]
 800dcd0:	601a      	str	r2, [r3, #0]
 800dcd2:	687b      	ldr	r3, [r7, #4]
 800dcd4:	4618      	mov	r0, r3
 800dcd6:	370c      	adds	r7, #12
 800dcd8:	46bd      	mov	sp, r7
 800dcda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcde:	4770      	bx	lr
 800dce0:	080240e4 	.word	0x080240e4

0800dce4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800dce4:	b5b0      	push	{r4, r5, r7, lr}
 800dce6:	b084      	sub	sp, #16
 800dce8:	af00      	add	r7, sp, #0
 800dcea:	6078      	str	r0, [r7, #4]
    {
 800dcec:	687b      	ldr	r3, [r7, #4]
 800dcee:	4618      	mov	r0, r3
 800dcf0:	f7ff ffe8 	bl	800dcc4 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800dcf4:	4a1a      	ldr	r2, [pc, #104]	; (800dd60 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 800dcf6:	687b      	ldr	r3, [r7, #4]
 800dcf8:	601a      	str	r2, [r3, #0]
 800dcfa:	687a      	ldr	r2, [r7, #4]
 800dcfc:	f241 6388 	movw	r3, #5768	; 0x1688
 800dd00:	4413      	add	r3, r2
 800dd02:	2402      	movs	r4, #2
 800dd04:	461d      	mov	r5, r3
 800dd06:	e004      	b.n	800dd12 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 800dd08:	4628      	mov	r0, r5
 800dd0a:	f7fd fb1c 	bl	800b346 <_ZN8touchgfx4RectC1Ev>
 800dd0e:	3508      	adds	r5, #8
 800dd10:	3c01      	subs	r4, #1
 800dd12:	2c00      	cmp	r4, #0
 800dd14:	daf8      	bge.n	800dd08 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800dd16:	687b      	ldr	r3, [r7, #4]
 800dd18:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800dd1c:	461a      	mov	r2, r3
 800dd1e:	f04f 33ff 	mov.w	r3, #4294967295
 800dd22:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 800dd26:	687b      	ldr	r3, [r7, #4]
 800dd28:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800dd2c:	461a      	mov	r2, r3
 800dd2e:	f04f 33ff 	mov.w	r3, #4294967295
 800dd32:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 800dd36:	2300      	movs	r3, #0
 800dd38:	60fb      	str	r3, [r7, #12]
 800dd3a:	e008      	b.n	800dd4e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800dd3c:	687a      	ldr	r2, [r7, #4]
 800dd3e:	68fb      	ldr	r3, [r7, #12]
 800dd40:	4413      	add	r3, r2
 800dd42:	3304      	adds	r3, #4
 800dd44:	2200      	movs	r2, #0
 800dd46:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800dd48:	68fb      	ldr	r3, [r7, #12]
 800dd4a:	3301      	adds	r3, #1
 800dd4c:	60fb      	str	r3, [r7, #12]
 800dd4e:	68fb      	ldr	r3, [r7, #12]
 800dd50:	2b02      	cmp	r3, #2
 800dd52:	d9f3      	bls.n	800dd3c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 800dd54:	687b      	ldr	r3, [r7, #4]
 800dd56:	4618      	mov	r0, r3
 800dd58:	3710      	adds	r7, #16
 800dd5a:	46bd      	mov	sp, r7
 800dd5c:	bdb0      	pop	{r4, r5, r7, pc}
 800dd5e:	bf00      	nop
 800dd60:	08023fe0 	.word	0x08023fe0

0800dd64 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800dd64:	b580      	push	{r7, lr}
 800dd66:	b082      	sub	sp, #8
 800dd68:	af00      	add	r7, sp, #0
 800dd6a:	6078      	str	r0, [r7, #4]
 800dd6c:	4a05      	ldr	r2, [pc, #20]	; (800dd84 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 800dd6e:	687b      	ldr	r3, [r7, #4]
 800dd70:	601a      	str	r2, [r3, #0]
 800dd72:	687b      	ldr	r3, [r7, #4]
 800dd74:	4618      	mov	r0, r3
 800dd76:	f7ff fd4d 	bl	800d814 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800dd7a:	687b      	ldr	r3, [r7, #4]
 800dd7c:	4618      	mov	r0, r3
 800dd7e:	3708      	adds	r7, #8
 800dd80:	46bd      	mov	sp, r7
 800dd82:	bd80      	pop	{r7, pc}
 800dd84:	08023fe0 	.word	0x08023fe0

0800dd88 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 800dd88:	b580      	push	{r7, lr}
 800dd8a:	b082      	sub	sp, #8
 800dd8c:	af00      	add	r7, sp, #0
 800dd8e:	6078      	str	r0, [r7, #4]
 800dd90:	6878      	ldr	r0, [r7, #4]
 800dd92:	f7ff ffe7 	bl	800dd64 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 800dd96:	f241 61a8 	movw	r1, #5800	; 0x16a8
 800dd9a:	6878      	ldr	r0, [r7, #4]
 800dd9c:	f013 fdcf 	bl	802193e <_ZdlPvj>
 800dda0:	687b      	ldr	r3, [r7, #4]
 800dda2:	4618      	mov	r0, r3
 800dda4:	3708      	adds	r7, #8
 800dda6:	46bd      	mov	sp, r7
 800dda8:	bd80      	pop	{r7, pc}
	...

0800ddac <_Z41__static_initialization_and_destruction_0ii>:
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
}
 800ddac:	b580      	push	{r7, lr}
 800ddae:	b082      	sub	sp, #8
 800ddb0:	af00      	add	r7, sp, #0
 800ddb2:	6078      	str	r0, [r7, #4]
 800ddb4:	6039      	str	r1, [r7, #0]
 800ddb6:	687b      	ldr	r3, [r7, #4]
 800ddb8:	2b01      	cmp	r3, #1
 800ddba:	d107      	bne.n	800ddcc <_Z41__static_initialization_and_destruction_0ii+0x20>
 800ddbc:	683b      	ldr	r3, [r7, #0]
 800ddbe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ddc2:	4293      	cmp	r3, r2
 800ddc4:	d102      	bne.n	800ddcc <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 800ddc6:	4809      	ldr	r0, [pc, #36]	; (800ddec <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800ddc8:	f7ff ff8c 	bl	800dce4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 800ddcc:	687b      	ldr	r3, [r7, #4]
 800ddce:	2b00      	cmp	r3, #0
 800ddd0:	d107      	bne.n	800dde2 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800ddd2:	683b      	ldr	r3, [r7, #0]
 800ddd4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ddd8:	4293      	cmp	r3, r2
 800ddda:	d102      	bne.n	800dde2 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800dddc:	4803      	ldr	r0, [pc, #12]	; (800ddec <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800ddde:	f7ff ffc1 	bl	800dd64 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 800dde2:	bf00      	nop
 800dde4:	3708      	adds	r7, #8
 800dde6:	46bd      	mov	sp, r7
 800dde8:	bd80      	pop	{r7, pc}
 800ddea:	bf00      	nop
 800ddec:	240007c8 	.word	0x240007c8

0800ddf0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800ddf0:	b580      	push	{r7, lr}
 800ddf2:	b086      	sub	sp, #24
 800ddf4:	af00      	add	r7, sp, #0
 800ddf6:	60f8      	str	r0, [r7, #12]
 800ddf8:	4608      	mov	r0, r1
 800ddfa:	4611      	mov	r1, r2
 800ddfc:	461a      	mov	r2, r3
 800ddfe:	4603      	mov	r3, r0
 800de00:	817b      	strh	r3, [r7, #10]
 800de02:	460b      	mov	r3, r1
 800de04:	813b      	strh	r3, [r7, #8]
 800de06:	4613      	mov	r3, r2
 800de08:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800de0a:	68fb      	ldr	r3, [r7, #12]
 800de0c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800de10:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800de14:	3301      	adds	r3, #1
 800de16:	68fa      	ldr	r2, [r7, #12]
 800de18:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800de1c:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 800de20:	68fb      	ldr	r3, [r7, #12]
 800de22:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800de26:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800de2a:	2b03      	cmp	r3, #3
 800de2c:	d109      	bne.n	800de42 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800de2e:	68fb      	ldr	r3, [r7, #12]
 800de30:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800de34:	461a      	mov	r2, r3
 800de36:	2300      	movs	r3, #0
 800de38:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 800de3c:	e001      	b.n	800de42 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800de3e:	f7ff fef1 	bl	800dc24 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800de42:	68fb      	ldr	r3, [r7, #12]
 800de44:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800de48:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800de4c:	68fa      	ldr	r2, [r7, #12]
 800de4e:	4413      	add	r3, r2
 800de50:	791b      	ldrb	r3, [r3, #4]
 800de52:	b2db      	uxtb	r3, r3
 800de54:	2b00      	cmp	r3, #0
 800de56:	bf14      	ite	ne
 800de58:	2301      	movne	r3, #1
 800de5a:	2300      	moveq	r3, #0
 800de5c:	b2db      	uxtb	r3, r3
 800de5e:	2b00      	cmp	r3, #0
 800de60:	d1ed      	bne.n	800de3e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800de62:	68fb      	ldr	r3, [r7, #12]
 800de64:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800de68:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800de6c:	68fa      	ldr	r2, [r7, #12]
 800de6e:	4413      	add	r3, r2
 800de70:	791b      	ldrb	r3, [r3, #4]
 800de72:	b2db      	uxtb	r3, r3
 800de74:	2b00      	cmp	r3, #0
 800de76:	d005      	beq.n	800de84 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800de78:	4b38      	ldr	r3, [pc, #224]	; (800df5c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800de7a:	4a39      	ldr	r2, [pc, #228]	; (800df60 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800de7c:	21aa      	movs	r1, #170	; 0xaa
 800de7e:	4839      	ldr	r0, [pc, #228]	; (800df64 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800de80:	f013 fd8c 	bl	802199c <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800de84:	68fb      	ldr	r3, [r7, #12]
 800de86:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800de8a:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800de8e:	68fa      	ldr	r2, [r7, #12]
 800de90:	4413      	add	r3, r2
 800de92:	2201      	movs	r2, #1
 800de94:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800de96:	88fb      	ldrh	r3, [r7, #6]
 800de98:	005b      	lsls	r3, r3, #1
 800de9a:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800de9c:	697b      	ldr	r3, [r7, #20]
 800de9e:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 800dea2:	fbb2 f3f3 	udiv	r3, r2, r3
 800dea6:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800dea8:	68fb      	ldr	r3, [r7, #12]
 800deaa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800deae:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 800deb2:	4613      	mov	r3, r2
 800deb4:	011b      	lsls	r3, r3, #4
 800deb6:	1a9b      	subs	r3, r3, r2
 800deb8:	01db      	lsls	r3, r3, #7
 800deba:	3308      	adds	r3, #8
 800debc:	68fa      	ldr	r2, [r7, #12]
 800debe:	441a      	add	r2, r3
 800dec0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dec2:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800dec4:	68fb      	ldr	r3, [r7, #12]
 800dec6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800deca:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 800dece:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800ded2:	68fb      	ldr	r3, [r7, #12]
 800ded4:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 800ded8:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800dedc:	68fb      	ldr	r3, [r7, #12]
 800dede:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800dee2:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800dee6:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800deea:	68fa      	ldr	r2, [r7, #12]
 800deec:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800def0:	00db      	lsls	r3, r3, #3
 800def2:	4413      	add	r3, r2
 800def4:	460a      	mov	r2, r1
 800def6:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800def8:	68fb      	ldr	r3, [r7, #12]
 800defa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800defe:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800df02:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800df06:	68fa      	ldr	r2, [r7, #12]
 800df08:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800df0c:	00db      	lsls	r3, r3, #3
 800df0e:	4413      	add	r3, r2
 800df10:	460a      	mov	r2, r1
 800df12:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800df14:	8c3a      	ldrh	r2, [r7, #32]
 800df16:	693b      	ldr	r3, [r7, #16]
 800df18:	429a      	cmp	r2, r3
 800df1a:	bfa8      	it	ge
 800df1c:	461a      	movge	r2, r3
 800df1e:	68fb      	ldr	r3, [r7, #12]
 800df20:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800df24:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800df28:	b211      	sxth	r1, r2
 800df2a:	68fa      	ldr	r2, [r7, #12]
 800df2c:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800df30:	00db      	lsls	r3, r3, #3
 800df32:	4413      	add	r3, r2
 800df34:	460a      	mov	r2, r1
 800df36:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800df38:	68fb      	ldr	r3, [r7, #12]
 800df3a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800df3e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800df42:	68fa      	ldr	r2, [r7, #12]
 800df44:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800df48:	00db      	lsls	r3, r3, #3
 800df4a:	4413      	add	r3, r2
 800df4c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800df50:	b29b      	uxth	r3, r3
    }
 800df52:	4618      	mov	r0, r3
 800df54:	3718      	adds	r7, #24
 800df56:	46bd      	mov	sp, r7
 800df58:	bd80      	pop	{r7, pc}
 800df5a:	bf00      	nop
 800df5c:	08023384 	.word	0x08023384
 800df60:	080233a4 	.word	0x080233a4
 800df64:	080234d8 	.word	0x080234d8

0800df68 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800df68:	b580      	push	{r7, lr}
 800df6a:	b082      	sub	sp, #8
 800df6c:	af00      	add	r7, sp, #0
 800df6e:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800df70:	687b      	ldr	r3, [r7, #4]
 800df72:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800df76:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800df7a:	687a      	ldr	r2, [r7, #4]
 800df7c:	4413      	add	r3, r2
 800df7e:	791b      	ldrb	r3, [r3, #4]
 800df80:	b2db      	uxtb	r3, r3
 800df82:	2b01      	cmp	r3, #1
 800df84:	d005      	beq.n	800df92 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800df86:	4b0a      	ldr	r3, [pc, #40]	; (800dfb0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800df88:	4a0a      	ldr	r2, [pc, #40]	; (800dfb4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800df8a:	21b9      	movs	r1, #185	; 0xb9
 800df8c:	480a      	ldr	r0, [pc, #40]	; (800dfb8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800df8e:	f013 fd05 	bl	802199c <__assert_func>
        state[drawingBlock] = DRAWN;
 800df92:	687b      	ldr	r3, [r7, #4]
 800df94:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800df98:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800df9c:	687a      	ldr	r2, [r7, #4]
 800df9e:	4413      	add	r3, r2
 800dfa0:	2202      	movs	r2, #2
 800dfa2:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800dfa4:	f7ff fe45 	bl	800dc32 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800dfa8:	bf00      	nop
 800dfaa:	3708      	adds	r7, #8
 800dfac:	46bd      	mov	sp, r7
 800dfae:	bd80      	pop	{r7, pc}
 800dfb0:	0802352c 	.word	0x0802352c
 800dfb4:	08023550 	.word	0x08023550
 800dfb8:	080234d8 	.word	0x080234d8

0800dfbc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800dfbc:	b480      	push	{r7}
 800dfbe:	b085      	sub	sp, #20
 800dfc0:	af00      	add	r7, sp, #0
 800dfc2:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800dfc4:	2300      	movs	r3, #0
 800dfc6:	60fb      	str	r3, [r7, #12]
 800dfc8:	e011      	b.n	800dfee <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800dfca:	687a      	ldr	r2, [r7, #4]
 800dfcc:	68fb      	ldr	r3, [r7, #12]
 800dfce:	4413      	add	r3, r2
 800dfd0:	3304      	adds	r3, #4
 800dfd2:	781b      	ldrb	r3, [r3, #0]
 800dfd4:	b2db      	uxtb	r3, r3
 800dfd6:	2b02      	cmp	r3, #2
 800dfd8:	bf0c      	ite	eq
 800dfda:	2301      	moveq	r3, #1
 800dfdc:	2300      	movne	r3, #0
 800dfde:	b2db      	uxtb	r3, r3
 800dfe0:	2b00      	cmp	r3, #0
 800dfe2:	d001      	beq.n	800dfe8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800dfe4:	2301      	movs	r3, #1
 800dfe6:	e006      	b.n	800dff6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800dfe8:	68fb      	ldr	r3, [r7, #12]
 800dfea:	3301      	adds	r3, #1
 800dfec:	60fb      	str	r3, [r7, #12]
 800dfee:	68fb      	ldr	r3, [r7, #12]
 800dff0:	2b02      	cmp	r3, #2
 800dff2:	d9ea      	bls.n	800dfca <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800dff4:	2300      	movs	r3, #0
    }
 800dff6:	4618      	mov	r0, r3
 800dff8:	3714      	adds	r7, #20
 800dffa:	46bd      	mov	sp, r7
 800dffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e000:	4770      	bx	lr
	...

0800e004 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800e004:	b580      	push	{r7, lr}
 800e006:	b082      	sub	sp, #8
 800e008:	af00      	add	r7, sp, #0
 800e00a:	6078      	str	r0, [r7, #4]
 800e00c:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800e00e:	687b      	ldr	r3, [r7, #4]
 800e010:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e014:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e018:	3301      	adds	r3, #1
 800e01a:	687a      	ldr	r2, [r7, #4]
 800e01c:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800e020:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 800e024:	687b      	ldr	r3, [r7, #4]
 800e026:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e02a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e02e:	2b03      	cmp	r3, #3
 800e030:	d106      	bne.n	800e040 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800e032:	687b      	ldr	r3, [r7, #4]
 800e034:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e038:	461a      	mov	r2, r3
 800e03a:	2300      	movs	r3, #0
 800e03c:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 800e040:	687b      	ldr	r3, [r7, #4]
 800e042:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e046:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e04a:	687a      	ldr	r2, [r7, #4]
 800e04c:	4413      	add	r3, r2
 800e04e:	791b      	ldrb	r3, [r3, #4]
 800e050:	b2db      	uxtb	r3, r3
 800e052:	2b02      	cmp	r3, #2
 800e054:	d005      	beq.n	800e062 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800e056:	4b16      	ldr	r3, [pc, #88]	; (800e0b0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800e058:	4a16      	ldr	r2, [pc, #88]	; (800e0b4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800e05a:	21dd      	movs	r1, #221	; 0xdd
 800e05c:	4816      	ldr	r0, [pc, #88]	; (800e0b8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800e05e:	f013 fc9d 	bl	802199c <__assert_func>
        rect = blockRect[sendingBlock];
 800e062:	687b      	ldr	r3, [r7, #4]
 800e064:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e068:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e06c:	683a      	ldr	r2, [r7, #0]
 800e06e:	6879      	ldr	r1, [r7, #4]
 800e070:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800e074:	00db      	lsls	r3, r3, #3
 800e076:	440b      	add	r3, r1
 800e078:	cb03      	ldmia	r3!, {r0, r1}
 800e07a:	6010      	str	r0, [r2, #0]
 800e07c:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800e07e:	687b      	ldr	r3, [r7, #4]
 800e080:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e084:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e088:	687a      	ldr	r2, [r7, #4]
 800e08a:	4413      	add	r3, r2
 800e08c:	2203      	movs	r2, #3
 800e08e:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800e090:	687b      	ldr	r3, [r7, #4]
 800e092:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e096:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 800e09a:	4613      	mov	r3, r2
 800e09c:	011b      	lsls	r3, r3, #4
 800e09e:	1a9b      	subs	r3, r3, r2
 800e0a0:	01db      	lsls	r3, r3, #7
 800e0a2:	3308      	adds	r3, #8
 800e0a4:	687a      	ldr	r2, [r7, #4]
 800e0a6:	4413      	add	r3, r2
    }
 800e0a8:	4618      	mov	r0, r3
 800e0aa:	3708      	adds	r7, #8
 800e0ac:	46bd      	mov	sp, r7
 800e0ae:	bd80      	pop	{r7, pc}
 800e0b0:	08023624 	.word	0x08023624
 800e0b4:	08023644 	.word	0x08023644
 800e0b8:	080234d8 	.word	0x080234d8

0800e0bc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800e0bc:	b580      	push	{r7, lr}
 800e0be:	b084      	sub	sp, #16
 800e0c0:	af00      	add	r7, sp, #0
 800e0c2:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800e0c4:	687b      	ldr	r3, [r7, #4]
 800e0c6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e0ca:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e0ce:	3301      	adds	r3, #1
 800e0d0:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800e0d2:	68fb      	ldr	r3, [r7, #12]
 800e0d4:	2b03      	cmp	r3, #3
 800e0d6:	d101      	bne.n	800e0dc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800e0d8:	2300      	movs	r3, #0
 800e0da:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800e0dc:	687a      	ldr	r2, [r7, #4]
 800e0de:	68fb      	ldr	r3, [r7, #12]
 800e0e0:	4413      	add	r3, r2
 800e0e2:	3304      	adds	r3, #4
 800e0e4:	781b      	ldrb	r3, [r3, #0]
 800e0e6:	b2db      	uxtb	r3, r3
 800e0e8:	2b02      	cmp	r3, #2
 800e0ea:	d005      	beq.n	800e0f8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800e0ec:	4b07      	ldr	r3, [pc, #28]	; (800e10c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800e0ee:	4a08      	ldr	r2, [pc, #32]	; (800e110 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800e0f0:	21ea      	movs	r1, #234	; 0xea
 800e0f2:	4808      	ldr	r0, [pc, #32]	; (800e114 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800e0f4:	f013 fc52 	bl	802199c <__assert_func>
        return blockRect[nextSendingBlock];
 800e0f8:	68fb      	ldr	r3, [r7, #12]
 800e0fa:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800e0fe:	00db      	lsls	r3, r3, #3
 800e100:	687a      	ldr	r2, [r7, #4]
 800e102:	4413      	add	r3, r2
    }
 800e104:	4618      	mov	r0, r3
 800e106:	3710      	adds	r7, #16
 800e108:	46bd      	mov	sp, r7
 800e10a:	bd80      	pop	{r7, pc}
 800e10c:	08023744 	.word	0x08023744
 800e110:	08023768 	.word	0x08023768
 800e114:	080234d8 	.word	0x080234d8

0800e118 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800e118:	b480      	push	{r7}
 800e11a:	b085      	sub	sp, #20
 800e11c:	af00      	add	r7, sp, #0
 800e11e:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800e120:	687b      	ldr	r3, [r7, #4]
 800e122:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e126:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800e12a:	3301      	adds	r3, #1
 800e12c:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800e12e:	68fb      	ldr	r3, [r7, #12]
 800e130:	2b03      	cmp	r3, #3
 800e132:	d101      	bne.n	800e138 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800e134:	2300      	movs	r3, #0
 800e136:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800e138:	687a      	ldr	r2, [r7, #4]
 800e13a:	68fb      	ldr	r3, [r7, #12]
 800e13c:	4413      	add	r3, r2
 800e13e:	3304      	adds	r3, #4
 800e140:	781b      	ldrb	r3, [r3, #0]
 800e142:	b2db      	uxtb	r3, r3
 800e144:	2b00      	cmp	r3, #0
 800e146:	bf0c      	ite	eq
 800e148:	2301      	moveq	r3, #1
 800e14a:	2300      	movne	r3, #0
 800e14c:	b2db      	uxtb	r3, r3
    }
 800e14e:	4618      	mov	r0, r3
 800e150:	3714      	adds	r7, #20
 800e152:	46bd      	mov	sp, r7
 800e154:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e158:	4770      	bx	lr
	...

0800e15c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800e15c:	b580      	push	{r7, lr}
 800e15e:	b082      	sub	sp, #8
 800e160:	af00      	add	r7, sp, #0
 800e162:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800e164:	687b      	ldr	r3, [r7, #4]
 800e166:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e16a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e16e:	687a      	ldr	r2, [r7, #4]
 800e170:	4413      	add	r3, r2
 800e172:	791b      	ldrb	r3, [r3, #4]
 800e174:	b2db      	uxtb	r3, r3
 800e176:	2b03      	cmp	r3, #3
 800e178:	d005      	beq.n	800e186 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800e17a:	4b09      	ldr	r3, [pc, #36]	; (800e1a0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800e17c:	4a09      	ldr	r2, [pc, #36]	; (800e1a4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800e17e:	21ff      	movs	r1, #255	; 0xff
 800e180:	4809      	ldr	r0, [pc, #36]	; (800e1a8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800e182:	f013 fc0b 	bl	802199c <__assert_func>
        state[sendingBlock] = EMPTY;
 800e186:	687b      	ldr	r3, [r7, #4]
 800e188:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e18c:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800e190:	687a      	ldr	r2, [r7, #4]
 800e192:	4413      	add	r3, r2
 800e194:	2200      	movs	r2, #0
 800e196:	711a      	strb	r2, [r3, #4]
    }
 800e198:	bf00      	nop
 800e19a:	3708      	adds	r7, #8
 800e19c:	46bd      	mov	sp, r7
 800e19e:	bd80      	pop	{r7, pc}
 800e1a0:	08023848 	.word	0x08023848
 800e1a4:	08023868 	.word	0x08023868
 800e1a8:	080234d8 	.word	0x080234d8

0800e1ac <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800e1ac:	b580      	push	{r7, lr}
 800e1ae:	af00      	add	r7, sp, #0
 800e1b0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e1b4:	2001      	movs	r0, #1
 800e1b6:	f7ff fdf9 	bl	800ddac <_Z41__static_initialization_and_destruction_0ii>
 800e1ba:	bd80      	pop	{r7, pc}

0800e1bc <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800e1bc:	b580      	push	{r7, lr}
 800e1be:	af00      	add	r7, sp, #0
 800e1c0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e1c4:	2000      	movs	r0, #0
 800e1c6:	f7ff fdf1 	bl	800ddac <_Z41__static_initialization_and_destruction_0ii>
 800e1ca:	bd80      	pop	{r7, pc}

0800e1cc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800e1cc:	8880      	ldrh	r0, [r0, #4]
 800e1ce:	4770      	bx	lr

0800e1d0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800e1d0:	b570      	push	{r4, r5, r6, lr}
 800e1d2:	6803      	ldr	r3, [r0, #0]
 800e1d4:	460c      	mov	r4, r1
 800e1d6:	2100      	movs	r1, #0
 800e1d8:	4605      	mov	r5, r0
 800e1da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e1dc:	4798      	blx	r3
 800e1de:	4606      	mov	r6, r0
 800e1e0:	682b      	ldr	r3, [r5, #0]
 800e1e2:	4628      	mov	r0, r5
 800e1e4:	1ba4      	subs	r4, r4, r6
 800e1e6:	6a1b      	ldr	r3, [r3, #32]
 800e1e8:	b2a4      	uxth	r4, r4
 800e1ea:	4798      	blx	r3
 800e1ec:	fbb4 f0f0 	udiv	r0, r4, r0
 800e1f0:	bd70      	pop	{r4, r5, r6, pc}

0800e1f2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800e1f2:	2300      	movs	r3, #0
 800e1f4:	8083      	strh	r3, [r0, #4]
 800e1f6:	4770      	bx	lr

0800e1f8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800e1f8:	b510      	push	{r4, lr}
 800e1fa:	6803      	ldr	r3, [r0, #0]
 800e1fc:	4604      	mov	r4, r0
 800e1fe:	8881      	ldrh	r1, [r0, #4]
 800e200:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e202:	4798      	blx	r3
 800e204:	88a3      	ldrh	r3, [r4, #4]
 800e206:	3301      	adds	r3, #1
 800e208:	80a3      	strh	r3, [r4, #4]
 800e20a:	bd10      	pop	{r4, pc}

0800e20c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800e20c:	6803      	ldr	r3, [r0, #0]
 800e20e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e210:	4718      	bx	r3

0800e212 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800e212:	4770      	bx	lr

0800e214 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800e214:	4a02      	ldr	r2, [pc, #8]	; (800e220 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800e216:	6002      	str	r2, [r0, #0]
 800e218:	2200      	movs	r2, #0
 800e21a:	8082      	strh	r2, [r0, #4]
 800e21c:	4770      	bx	lr
 800e21e:	bf00      	nop
 800e220:	08024110 	.word	0x08024110

0800e224 <_ZN8touchgfx9Container13getFirstChildEv>:
 800e224:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800e226:	4770      	bx	lr

0800e228 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800e228:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e22a:	2000      	movs	r0, #0
 800e22c:	b12b      	cbz	r3, 800e23a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e22e:	b920      	cbnz	r0, 800e23a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e230:	1a5a      	subs	r2, r3, r1
 800e232:	699b      	ldr	r3, [r3, #24]
 800e234:	4250      	negs	r0, r2
 800e236:	4150      	adcs	r0, r2
 800e238:	e7f8      	b.n	800e22c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800e23a:	4770      	bx	lr

0800e23c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800e23c:	2300      	movs	r3, #0
 800e23e:	6148      	str	r0, [r1, #20]
 800e240:	618b      	str	r3, [r1, #24]
 800e242:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e244:	b913      	cbnz	r3, 800e24c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800e246:	6281      	str	r1, [r0, #40]	; 0x28
 800e248:	4770      	bx	lr
 800e24a:	4613      	mov	r3, r2
 800e24c:	699a      	ldr	r2, [r3, #24]
 800e24e:	2a00      	cmp	r2, #0
 800e250:	d1fb      	bne.n	800e24a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800e252:	6199      	str	r1, [r3, #24]
 800e254:	4770      	bx	lr

0800e256 <_ZN8touchgfx9Container9removeAllEv>:
 800e256:	2200      	movs	r2, #0
 800e258:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e25a:	b123      	cbz	r3, 800e266 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800e25c:	6999      	ldr	r1, [r3, #24]
 800e25e:	6281      	str	r1, [r0, #40]	; 0x28
 800e260:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800e264:	e7f8      	b.n	800e258 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800e266:	4770      	bx	lr

0800e268 <_ZN8touchgfx9Container6unlinkEv>:
 800e268:	2300      	movs	r3, #0
 800e26a:	6283      	str	r3, [r0, #40]	; 0x28
 800e26c:	4770      	bx	lr

0800e26e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800e26e:	2200      	movs	r2, #0
 800e270:	8002      	strh	r2, [r0, #0]
 800e272:	8042      	strh	r2, [r0, #2]
 800e274:	8082      	strh	r2, [r0, #4]
 800e276:	80c2      	strh	r2, [r0, #6]
 800e278:	4770      	bx	lr

0800e27a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800e27a:	b570      	push	{r4, r5, r6, lr}
 800e27c:	460d      	mov	r5, r1
 800e27e:	4616      	mov	r6, r2
 800e280:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e282:	b13c      	cbz	r4, 800e294 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800e284:	6823      	ldr	r3, [r4, #0]
 800e286:	4620      	mov	r0, r4
 800e288:	4632      	mov	r2, r6
 800e28a:	4629      	mov	r1, r5
 800e28c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e28e:	4798      	blx	r3
 800e290:	69a4      	ldr	r4, [r4, #24]
 800e292:	e7f6      	b.n	800e282 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800e294:	bd70      	pop	{r4, r5, r6, pc}

0800e296 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800e296:	b538      	push	{r3, r4, r5, lr}
 800e298:	460d      	mov	r5, r1
 800e29a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e29c:	b134      	cbz	r4, 800e2ac <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800e29e:	682b      	ldr	r3, [r5, #0]
 800e2a0:	4621      	mov	r1, r4
 800e2a2:	4628      	mov	r0, r5
 800e2a4:	689b      	ldr	r3, [r3, #8]
 800e2a6:	4798      	blx	r3
 800e2a8:	69a4      	ldr	r4, [r4, #24]
 800e2aa:	e7f7      	b.n	800e29c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800e2ac:	bd38      	pop	{r3, r4, r5, pc}

0800e2ae <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800e2ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e2b0:	b19b      	cbz	r3, 800e2da <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e2b2:	428b      	cmp	r3, r1
 800e2b4:	d109      	bne.n	800e2ca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800e2b6:	699a      	ldr	r2, [r3, #24]
 800e2b8:	2100      	movs	r1, #0
 800e2ba:	6159      	str	r1, [r3, #20]
 800e2bc:	6282      	str	r2, [r0, #40]	; 0x28
 800e2be:	b902      	cbnz	r2, 800e2c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800e2c0:	4770      	bx	lr
 800e2c2:	6199      	str	r1, [r3, #24]
 800e2c4:	4770      	bx	lr
 800e2c6:	4613      	mov	r3, r2
 800e2c8:	b13a      	cbz	r2, 800e2da <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e2ca:	699a      	ldr	r2, [r3, #24]
 800e2cc:	428a      	cmp	r2, r1
 800e2ce:	d1fa      	bne.n	800e2c6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800e2d0:	698a      	ldr	r2, [r1, #24]
 800e2d2:	619a      	str	r2, [r3, #24]
 800e2d4:	2300      	movs	r3, #0
 800e2d6:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800e2da:	4770      	bx	lr

0800e2dc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800e2dc:	b410      	push	{r4}
 800e2de:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e2e0:	4604      	mov	r4, r0
 800e2e2:	b92b      	cbnz	r3, 800e2f0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800e2e4:	6803      	ldr	r3, [r0, #0]
 800e2e6:	4611      	mov	r1, r2
 800e2e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e2ec:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800e2ee:	4718      	bx	r3
 800e2f0:	b941      	cbnz	r1, 800e304 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800e2f2:	6193      	str	r3, [r2, #24]
 800e2f4:	6282      	str	r2, [r0, #40]	; 0x28
 800e2f6:	6154      	str	r4, [r2, #20]
 800e2f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e2fc:	4770      	bx	lr
 800e2fe:	4603      	mov	r3, r0
 800e300:	2800      	cmp	r0, #0
 800e302:	d0f9      	beq.n	800e2f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800e304:	4299      	cmp	r1, r3
 800e306:	6998      	ldr	r0, [r3, #24]
 800e308:	d1f9      	bne.n	800e2fe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800e30a:	6190      	str	r0, [r2, #24]
 800e30c:	618a      	str	r2, [r1, #24]
 800e30e:	e7f2      	b.n	800e2f6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800e310 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800e310:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e314:	461f      	mov	r7, r3
 800e316:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800e31a:	460d      	mov	r5, r1
 800e31c:	4616      	mov	r6, r2
 800e31e:	b103      	cbz	r3, 800e322 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800e320:	6038      	str	r0, [r7, #0]
 800e322:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e324:	b314      	cbz	r4, 800e36c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800e326:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e32a:	b1eb      	cbz	r3, 800e368 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e32c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e330:	428d      	cmp	r5, r1
 800e332:	db19      	blt.n	800e368 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e334:	b289      	uxth	r1, r1
 800e336:	8923      	ldrh	r3, [r4, #8]
 800e338:	440b      	add	r3, r1
 800e33a:	b21b      	sxth	r3, r3
 800e33c:	429d      	cmp	r5, r3
 800e33e:	da13      	bge.n	800e368 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e340:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e344:	4296      	cmp	r6, r2
 800e346:	db0f      	blt.n	800e368 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e348:	b292      	uxth	r2, r2
 800e34a:	8963      	ldrh	r3, [r4, #10]
 800e34c:	4413      	add	r3, r2
 800e34e:	b21b      	sxth	r3, r3
 800e350:	429e      	cmp	r6, r3
 800e352:	da09      	bge.n	800e368 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e354:	6823      	ldr	r3, [r4, #0]
 800e356:	1ab2      	subs	r2, r6, r2
 800e358:	1a69      	subs	r1, r5, r1
 800e35a:	4620      	mov	r0, r4
 800e35c:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800e360:	b212      	sxth	r2, r2
 800e362:	463b      	mov	r3, r7
 800e364:	b209      	sxth	r1, r1
 800e366:	47c0      	blx	r8
 800e368:	69a4      	ldr	r4, [r4, #24]
 800e36a:	e7db      	b.n	800e324 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800e36c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e370 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800e370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e374:	4c6d      	ldr	r4, [pc, #436]	; (800e52c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800e376:	b0a1      	sub	sp, #132	; 0x84
 800e378:	4606      	mov	r6, r0
 800e37a:	6824      	ldr	r4, [r4, #0]
 800e37c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800e37e:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800e382:	2400      	movs	r4, #0
 800e384:	9303      	str	r3, [sp, #12]
 800e386:	802c      	strh	r4, [r5, #0]
 800e388:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800e38a:	802c      	strh	r4, [r5, #0]
 800e38c:	601c      	str	r4, [r3, #0]
 800e38e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800e392:	f7ff ffbd 	bl	800e310 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e396:	f1b9 0f03 	cmp.w	r9, #3
 800e39a:	f340 80c1 	ble.w	800e520 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800e39e:	4631      	mov	r1, r6
 800e3a0:	a80c      	add	r0, sp, #48	; 0x30
 800e3a2:	f004 fabd 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e3a6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800e3aa:	9306      	str	r3, [sp, #24]
 800e3ac:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800e3b0:	9307      	str	r3, [sp, #28]
 800e3b2:	9b03      	ldr	r3, [sp, #12]
 800e3b4:	f8d3 a000 	ldr.w	sl, [r3]
 800e3b8:	f1ba 0f00 	cmp.w	sl, #0
 800e3bc:	f000 80b3 	beq.w	800e526 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800e3c0:	4651      	mov	r1, sl
 800e3c2:	a810      	add	r0, sp, #64	; 0x40
 800e3c4:	f004 faac 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e3c8:	2002      	movs	r0, #2
 800e3ca:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800e3ce:	9b01      	ldr	r3, [sp, #4]
 800e3d0:	9a06      	ldr	r2, [sp, #24]
 800e3d2:	fb91 f1f0 	sdiv	r1, r1, r0
 800e3d6:	189d      	adds	r5, r3, r2
 800e3d8:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800e3dc:	9a07      	ldr	r2, [sp, #28]
 800e3de:	4419      	add	r1, r3
 800e3e0:	9b02      	ldr	r3, [sp, #8]
 800e3e2:	4413      	add	r3, r2
 800e3e4:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800e3e8:	1a6d      	subs	r5, r5, r1
 800e3ea:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800e3ee:	fb92 f2f0 	sdiv	r2, r2, r0
 800e3f2:	440a      	add	r2, r1
 800e3f4:	1a9b      	subs	r3, r3, r2
 800e3f6:	435b      	muls	r3, r3
 800e3f8:	fb05 3505 	mla	r5, r5, r5, r3
 800e3fc:	4f4c      	ldr	r7, [pc, #304]	; (800e530 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800e3fe:	ac10      	add	r4, sp, #64	; 0x40
 800e400:	f1b9 0f0c 	cmp.w	r9, #12
 800e404:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e406:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e408:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e40a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e40c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e40e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e410:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800e414:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800e418:	f04f 0303 	mov.w	r3, #3
 800e41c:	bfd8      	it	le
 800e41e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800e422:	f04f 0400 	mov.w	r4, #0
 800e426:	f8cd 9000 	str.w	r9, [sp]
 800e42a:	bfcc      	ite	gt
 800e42c:	4698      	movgt	r8, r3
 800e42e:	fb92 f8f3 	sdivle	r8, r2, r3
 800e432:	1c63      	adds	r3, r4, #1
 800e434:	aa10      	add	r2, sp, #64	; 0x40
 800e436:	f004 0401 	and.w	r4, r4, #1
 800e43a:	f04f 0b00 	mov.w	fp, #0
 800e43e:	9308      	str	r3, [sp, #32]
 800e440:	9b00      	ldr	r3, [sp, #0]
 800e442:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800e446:	fb93 f3f8 	sdiv	r3, r3, r8
 800e44a:	3404      	adds	r4, #4
 800e44c:	b29b      	uxth	r3, r3
 800e44e:	9304      	str	r3, [sp, #16]
 800e450:	9a04      	ldr	r2, [sp, #16]
 800e452:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800e456:	fb13 f302 	smulbb	r3, r3, r2
 800e45a:	9a01      	ldr	r2, [sp, #4]
 800e45c:	b29b      	uxth	r3, r3
 800e45e:	1899      	adds	r1, r3, r2
 800e460:	9305      	str	r3, [sp, #20]
 800e462:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800e466:	b209      	sxth	r1, r1
 800e468:	4299      	cmp	r1, r3
 800e46a:	db4d      	blt.n	800e508 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e46c:	8932      	ldrh	r2, [r6, #8]
 800e46e:	4413      	add	r3, r2
 800e470:	b21b      	sxth	r3, r3
 800e472:	4299      	cmp	r1, r3
 800e474:	da48      	bge.n	800e508 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e476:	9b04      	ldr	r3, [sp, #16]
 800e478:	6827      	ldr	r7, [r4, #0]
 800e47a:	fb17 f703 	smulbb	r7, r7, r3
 800e47e:	9b02      	ldr	r3, [sp, #8]
 800e480:	b2bf      	uxth	r7, r7
 800e482:	18fa      	adds	r2, r7, r3
 800e484:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800e488:	b212      	sxth	r2, r2
 800e48a:	429a      	cmp	r2, r3
 800e48c:	db3c      	blt.n	800e508 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e48e:	8970      	ldrh	r0, [r6, #10]
 800e490:	4403      	add	r3, r0
 800e492:	b21b      	sxth	r3, r3
 800e494:	429a      	cmp	r2, r3
 800e496:	da37      	bge.n	800e508 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e498:	2300      	movs	r3, #0
 800e49a:	4630      	mov	r0, r6
 800e49c:	930b      	str	r3, [sp, #44]	; 0x2c
 800e49e:	ab0b      	add	r3, sp, #44	; 0x2c
 800e4a0:	f7ff ff36 	bl	800e310 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e4a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e4a6:	b37a      	cbz	r2, 800e508 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e4a8:	4552      	cmp	r2, sl
 800e4aa:	d02d      	beq.n	800e508 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e4ac:	4611      	mov	r1, r2
 800e4ae:	a80e      	add	r0, sp, #56	; 0x38
 800e4b0:	9209      	str	r2, [sp, #36]	; 0x24
 800e4b2:	f004 fa35 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4b6:	f04f 0e02 	mov.w	lr, #2
 800e4ba:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800e4be:	9a06      	ldr	r2, [sp, #24]
 800e4c0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800e4c4:	9b01      	ldr	r3, [sp, #4]
 800e4c6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800e4ca:	4413      	add	r3, r2
 800e4cc:	9a07      	ldr	r2, [sp, #28]
 800e4ce:	fb91 f1fe 	sdiv	r1, r1, lr
 800e4d2:	fb9c fcfe 	sdiv	ip, ip, lr
 800e4d6:	4401      	add	r1, r0
 800e4d8:	1a58      	subs	r0, r3, r1
 800e4da:	9b02      	ldr	r3, [sp, #8]
 800e4dc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800e4e0:	4413      	add	r3, r2
 800e4e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e4e4:	448c      	add	ip, r1
 800e4e6:	eba3 030c 	sub.w	r3, r3, ip
 800e4ea:	435b      	muls	r3, r3
 800e4ec:	fb00 3300 	mla	r3, r0, r0, r3
 800e4f0:	42ab      	cmp	r3, r5
 800e4f2:	d208      	bcs.n	800e506 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800e4f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800e4f6:	461d      	mov	r5, r3
 800e4f8:	9803      	ldr	r0, [sp, #12]
 800e4fa:	6001      	str	r1, [r0, #0]
 800e4fc:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800e4fe:	9805      	ldr	r0, [sp, #20]
 800e500:	8008      	strh	r0, [r1, #0]
 800e502:	992b      	ldr	r1, [sp, #172]	; 0xac
 800e504:	800f      	strh	r7, [r1, #0]
 800e506:	4692      	mov	sl, r2
 800e508:	f10b 0b01 	add.w	fp, fp, #1
 800e50c:	3408      	adds	r4, #8
 800e50e:	f1bb 0f04 	cmp.w	fp, #4
 800e512:	d19d      	bne.n	800e450 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800e514:	9b00      	ldr	r3, [sp, #0]
 800e516:	9c08      	ldr	r4, [sp, #32]
 800e518:	444b      	add	r3, r9
 800e51a:	4544      	cmp	r4, r8
 800e51c:	9300      	str	r3, [sp, #0]
 800e51e:	d188      	bne.n	800e432 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800e520:	b021      	add	sp, #132	; 0x84
 800e522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e526:	f04f 35ff 	mov.w	r5, #4294967295
 800e52a:	e767      	b.n	800e3fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800e52c:	24001e7c 	.word	0x24001e7c
 800e530:	08023938 	.word	0x08023938

0800e534 <_ZN8touchgfx4RectaNERKS0_>:
 800e534:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e538:	f9b1 7000 	ldrsh.w	r7, [r1]
 800e53c:	888c      	ldrh	r4, [r1, #4]
 800e53e:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e542:	443c      	add	r4, r7
 800e544:	b2a4      	uxth	r4, r4
 800e546:	fa0f f884 	sxth.w	r8, r4
 800e54a:	45c1      	cmp	r9, r8
 800e54c:	da2f      	bge.n	800e5ae <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800e54e:	8882      	ldrh	r2, [r0, #4]
 800e550:	444a      	add	r2, r9
 800e552:	b292      	uxth	r2, r2
 800e554:	fa0f fe82 	sxth.w	lr, r2
 800e558:	4577      	cmp	r7, lr
 800e55a:	da28      	bge.n	800e5ae <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800e55c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800e560:	88cb      	ldrh	r3, [r1, #6]
 800e562:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e566:	442b      	add	r3, r5
 800e568:	b21b      	sxth	r3, r3
 800e56a:	429e      	cmp	r6, r3
 800e56c:	da1f      	bge.n	800e5ae <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800e56e:	88c3      	ldrh	r3, [r0, #6]
 800e570:	4433      	add	r3, r6
 800e572:	b29b      	uxth	r3, r3
 800e574:	fa0f fc83 	sxth.w	ip, r3
 800e578:	4565      	cmp	r5, ip
 800e57a:	da18      	bge.n	800e5ae <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800e57c:	454f      	cmp	r7, r9
 800e57e:	bfb8      	it	lt
 800e580:	464f      	movlt	r7, r9
 800e582:	42b5      	cmp	r5, r6
 800e584:	bfb8      	it	lt
 800e586:	4635      	movlt	r5, r6
 800e588:	45f0      	cmp	r8, lr
 800e58a:	bfd8      	it	le
 800e58c:	4622      	movle	r2, r4
 800e58e:	1bd2      	subs	r2, r2, r7
 800e590:	8082      	strh	r2, [r0, #4]
 800e592:	884a      	ldrh	r2, [r1, #2]
 800e594:	88c9      	ldrh	r1, [r1, #6]
 800e596:	8007      	strh	r7, [r0, #0]
 800e598:	440a      	add	r2, r1
 800e59a:	8045      	strh	r5, [r0, #2]
 800e59c:	b292      	uxth	r2, r2
 800e59e:	b211      	sxth	r1, r2
 800e5a0:	458c      	cmp	ip, r1
 800e5a2:	bfa8      	it	ge
 800e5a4:	4613      	movge	r3, r2
 800e5a6:	1b5b      	subs	r3, r3, r5
 800e5a8:	80c3      	strh	r3, [r0, #6]
 800e5aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e5ae:	2300      	movs	r3, #0
 800e5b0:	8003      	strh	r3, [r0, #0]
 800e5b2:	8043      	strh	r3, [r0, #2]
 800e5b4:	8083      	strh	r3, [r0, #4]
 800e5b6:	80c3      	strh	r3, [r0, #6]
 800e5b8:	e7f7      	b.n	800e5aa <_ZN8touchgfx4RectaNERKS0_+0x76>

0800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>:
 800e5ba:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e5be:	2b00      	cmp	r3, #0
 800e5c0:	dd06      	ble.n	800e5d0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800e5c2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800e5c6:	2800      	cmp	r0, #0
 800e5c8:	bfcc      	ite	gt
 800e5ca:	2000      	movgt	r0, #0
 800e5cc:	2001      	movle	r0, #1
 800e5ce:	4770      	bx	lr
 800e5d0:	2001      	movs	r0, #1
 800e5d2:	4770      	bx	lr

0800e5d4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800e5d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5d8:	2300      	movs	r3, #0
 800e5da:	4604      	mov	r4, r0
 800e5dc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800e5de:	8003      	strh	r3, [r0, #0]
 800e5e0:	8043      	strh	r3, [r0, #2]
 800e5e2:	8083      	strh	r3, [r0, #4]
 800e5e4:	80c3      	strh	r3, [r0, #6]
 800e5e6:	2d00      	cmp	r5, #0
 800e5e8:	d040      	beq.n	800e66c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800e5ea:	1d28      	adds	r0, r5, #4
 800e5ec:	f7ff ffe5 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 800e5f0:	b988      	cbnz	r0, 800e616 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800e5f2:	4620      	mov	r0, r4
 800e5f4:	f7ff ffe1 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 800e5f8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800e5fc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e600:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800e604:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800e608:	b138      	cbz	r0, 800e61a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800e60a:	8022      	strh	r2, [r4, #0]
 800e60c:	8063      	strh	r3, [r4, #2]
 800e60e:	f8a4 e004 	strh.w	lr, [r4, #4]
 800e612:	f8a4 c006 	strh.w	ip, [r4, #6]
 800e616:	69ad      	ldr	r5, [r5, #24]
 800e618:	e7e5      	b.n	800e5e6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800e61a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e61e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800e622:	4290      	cmp	r0, r2
 800e624:	4607      	mov	r7, r0
 800e626:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800e62a:	460e      	mov	r6, r1
 800e62c:	bfa8      	it	ge
 800e62e:	4617      	movge	r7, r2
 800e630:	4299      	cmp	r1, r3
 800e632:	4472      	add	r2, lr
 800e634:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800e638:	bfa8      	it	ge
 800e63a:	461e      	movge	r6, r3
 800e63c:	4440      	add	r0, r8
 800e63e:	4471      	add	r1, lr
 800e640:	4463      	add	r3, ip
 800e642:	b200      	sxth	r0, r0
 800e644:	8027      	strh	r7, [r4, #0]
 800e646:	b212      	sxth	r2, r2
 800e648:	8066      	strh	r6, [r4, #2]
 800e64a:	b209      	sxth	r1, r1
 800e64c:	b21b      	sxth	r3, r3
 800e64e:	4290      	cmp	r0, r2
 800e650:	bfac      	ite	ge
 800e652:	ebc7 0200 	rsbge	r2, r7, r0
 800e656:	ebc7 0202 	rsblt	r2, r7, r2
 800e65a:	4299      	cmp	r1, r3
 800e65c:	bfac      	ite	ge
 800e65e:	ebc6 0301 	rsbge	r3, r6, r1
 800e662:	ebc6 0303 	rsblt	r3, r6, r3
 800e666:	80a2      	strh	r2, [r4, #4]
 800e668:	80e3      	strh	r3, [r4, #6]
 800e66a:	e7d4      	b.n	800e616 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800e66c:	4620      	mov	r0, r4
 800e66e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e672 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800e672:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e676:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800e67a:	b383      	cbz	r3, 800e6de <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800e67c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e67e:	b374      	cbz	r4, 800e6de <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800e680:	f9b1 5000 	ldrsh.w	r5, [r1]
 800e684:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800e688:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800e68c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800e690:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e694:	b303      	cbz	r3, 800e6d8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800e696:	4668      	mov	r0, sp
 800e698:	1d21      	adds	r1, r4, #4
 800e69a:	f8ad 5000 	strh.w	r5, [sp]
 800e69e:	f8ad 6002 	strh.w	r6, [sp, #2]
 800e6a2:	f8ad 7004 	strh.w	r7, [sp, #4]
 800e6a6:	f8ad 8006 	strh.w	r8, [sp, #6]
 800e6aa:	f7ff ff43 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 800e6ae:	4668      	mov	r0, sp
 800e6b0:	f7ff ff83 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 800e6b4:	b980      	cbnz	r0, 800e6d8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800e6b6:	f8bd 3000 	ldrh.w	r3, [sp]
 800e6ba:	4669      	mov	r1, sp
 800e6bc:	88a2      	ldrh	r2, [r4, #4]
 800e6be:	4620      	mov	r0, r4
 800e6c0:	1a9b      	subs	r3, r3, r2
 800e6c2:	88e2      	ldrh	r2, [r4, #6]
 800e6c4:	f8ad 3000 	strh.w	r3, [sp]
 800e6c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e6cc:	1a9b      	subs	r3, r3, r2
 800e6ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e6d2:	6823      	ldr	r3, [r4, #0]
 800e6d4:	689b      	ldr	r3, [r3, #8]
 800e6d6:	4798      	blx	r3
 800e6d8:	69a4      	ldr	r4, [r4, #24]
 800e6da:	2c00      	cmp	r4, #0
 800e6dc:	d1d8      	bne.n	800e690 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800e6de:	b002      	add	sp, #8
 800e6e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e6e4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800e6e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e6e6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800e6ea:	460d      	mov	r5, r1
 800e6ec:	4616      	mov	r6, r2
 800e6ee:	b323      	cbz	r3, 800e73a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800e6f0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800e6f2:	b314      	cbz	r4, 800e73a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800e6f4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800e6f8:	b1eb      	cbz	r3, 800e736 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800e6fa:	6828      	ldr	r0, [r5, #0]
 800e6fc:	466b      	mov	r3, sp
 800e6fe:	6869      	ldr	r1, [r5, #4]
 800e700:	c303      	stmia	r3!, {r0, r1}
 800e702:	4668      	mov	r0, sp
 800e704:	1d21      	adds	r1, r4, #4
 800e706:	f7ff ff15 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 800e70a:	4668      	mov	r0, sp
 800e70c:	f7ff ff55 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 800e710:	b988      	cbnz	r0, 800e736 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800e712:	f8bd 3000 	ldrh.w	r3, [sp]
 800e716:	4669      	mov	r1, sp
 800e718:	88a2      	ldrh	r2, [r4, #4]
 800e71a:	4620      	mov	r0, r4
 800e71c:	1a9b      	subs	r3, r3, r2
 800e71e:	88e2      	ldrh	r2, [r4, #6]
 800e720:	f8ad 3000 	strh.w	r3, [sp]
 800e724:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e728:	1a9b      	subs	r3, r3, r2
 800e72a:	4632      	mov	r2, r6
 800e72c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e730:	6823      	ldr	r3, [r4, #0]
 800e732:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800e734:	4798      	blx	r3
 800e736:	69a4      	ldr	r4, [r4, #24]
 800e738:	e7db      	b.n	800e6f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800e73a:	b002      	add	sp, #8
 800e73c:	bd70      	pop	{r4, r5, r6, pc}

0800e73e <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800e73e:	4770      	bx	lr

0800e740 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800e740:	4770      	bx	lr

0800e742 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800e742:	6803      	ldr	r3, [r0, #0]
 800e744:	b513      	push	{r0, r1, r4, lr}
 800e746:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800e74a:	2300      	movs	r3, #0
 800e74c:	e9cd 3300 	strd	r3, r3, [sp]
 800e750:	466b      	mov	r3, sp
 800e752:	47a0      	blx	r4
 800e754:	b002      	add	sp, #8
 800e756:	bd10      	pop	{r4, pc}

0800e758 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800e758:	2301      	movs	r3, #1
 800e75a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800e75e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800e762:	4770      	bx	lr

0800e764 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800e764:	2301      	movs	r3, #1
 800e766:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800e76a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800e76e:	4770      	bx	lr

0800e770 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800e770:	6843      	ldr	r3, [r0, #4]
 800e772:	2201      	movs	r2, #1
 800e774:	725a      	strb	r2, [r3, #9]
 800e776:	6840      	ldr	r0, [r0, #4]
 800e778:	6803      	ldr	r3, [r0, #0]
 800e77a:	691b      	ldr	r3, [r3, #16]
 800e77c:	4718      	bx	r3

0800e77e <_ZN8touchgfx3HAL8flushDMAEv>:
 800e77e:	6840      	ldr	r0, [r0, #4]
 800e780:	6803      	ldr	r3, [r0, #0]
 800e782:	689b      	ldr	r3, [r3, #8]
 800e784:	4718      	bx	r3

0800e786 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800e786:	b530      	push	{r4, r5, lr}
 800e788:	b08b      	sub	sp, #44	; 0x2c
 800e78a:	6804      	ldr	r4, [r0, #0]
 800e78c:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800e790:	9509      	str	r5, [sp, #36]	; 0x24
 800e792:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800e796:	9508      	str	r5, [sp, #32]
 800e798:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800e79c:	9507      	str	r5, [sp, #28]
 800e79e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800e7a2:	9506      	str	r5, [sp, #24]
 800e7a4:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800e7a8:	9505      	str	r5, [sp, #20]
 800e7aa:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800e7ae:	9504      	str	r5, [sp, #16]
 800e7b0:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800e7b4:	9503      	str	r5, [sp, #12]
 800e7b6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800e7ba:	9502      	str	r5, [sp, #8]
 800e7bc:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800e7c0:	e9cd 3500 	strd	r3, r5, [sp]
 800e7c4:	4613      	mov	r3, r2
 800e7c6:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800e7c8:	2200      	movs	r2, #0
 800e7ca:	47a0      	blx	r4
 800e7cc:	b00b      	add	sp, #44	; 0x2c
 800e7ce:	bd30      	pop	{r4, r5, pc}

0800e7d0 <_ZN8touchgfx3HAL10beginFrameEv>:
 800e7d0:	4b04      	ldr	r3, [pc, #16]	; (800e7e4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800e7d2:	781b      	ldrb	r3, [r3, #0]
 800e7d4:	b123      	cbz	r3, 800e7e0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800e7d6:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800e7da:	f080 0001 	eor.w	r0, r0, #1
 800e7de:	4770      	bx	lr
 800e7e0:	2001      	movs	r0, #1
 800e7e2:	4770      	bx	lr
 800e7e4:	24001e7a 	.word	0x24001e7a

0800e7e8 <_ZN8touchgfx3HAL8endFrameEv>:
 800e7e8:	b510      	push	{r4, lr}
 800e7ea:	4604      	mov	r4, r0
 800e7ec:	6840      	ldr	r0, [r0, #4]
 800e7ee:	6803      	ldr	r3, [r0, #0]
 800e7f0:	689b      	ldr	r3, [r3, #8]
 800e7f2:	4798      	blx	r3
 800e7f4:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800e7f8:	b113      	cbz	r3, 800e800 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800e7fa:	2301      	movs	r3, #1
 800e7fc:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800e800:	bd10      	pop	{r4, pc}

0800e802 <_ZN8touchgfx3HAL10initializeEv>:
 800e802:	b510      	push	{r4, lr}
 800e804:	4604      	mov	r4, r0
 800e806:	f7fe f97d 	bl	800cb04 <_ZN8touchgfx10OSWrappers10initializeEv>
 800e80a:	f7fd fe85 	bl	800c518 <_ZN8touchgfx4GPIO4initEv>
 800e80e:	6860      	ldr	r0, [r4, #4]
 800e810:	6803      	ldr	r3, [r0, #0]
 800e812:	68db      	ldr	r3, [r3, #12]
 800e814:	4798      	blx	r3
 800e816:	68e0      	ldr	r0, [r4, #12]
 800e818:	6803      	ldr	r3, [r0, #0]
 800e81a:	689b      	ldr	r3, [r3, #8]
 800e81c:	4798      	blx	r3
 800e81e:	6823      	ldr	r3, [r4, #0]
 800e820:	4620      	mov	r0, r4
 800e822:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e824:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e828:	4718      	bx	r3

0800e82a <_ZN8touchgfx3HAL9taskEntryEv>:
 800e82a:	b508      	push	{r3, lr}
 800e82c:	6803      	ldr	r3, [r0, #0]
 800e82e:	4604      	mov	r4, r0
 800e830:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e834:	4798      	blx	r3
 800e836:	6823      	ldr	r3, [r4, #0]
 800e838:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800e83a:	4620      	mov	r0, r4
 800e83c:	4798      	blx	r3
 800e83e:	f7fe f9c9 	bl	800cbd4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800e842:	6823      	ldr	r3, [r4, #0]
 800e844:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e846:	e7f8      	b.n	800e83a <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800e848 <_ZN8touchgfx3HAL4tickEv>:
 800e848:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e84a:	6803      	ldr	r3, [r0, #0]
 800e84c:	4604      	mov	r4, r0
 800e84e:	4d5b      	ldr	r5, [pc, #364]	; (800e9bc <_ZN8touchgfx3HAL4tickEv+0x174>)
 800e850:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800e854:	4798      	blx	r3
 800e856:	2800      	cmp	r0, #0
 800e858:	f000 8095 	beq.w	800e986 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800e85c:	2001      	movs	r0, #1
 800e85e:	2600      	movs	r6, #0
 800e860:	f7fd fe62 	bl	800c528 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800e864:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800e868:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800e86c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800e870:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800e874:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800e878:	b133      	cbz	r3, 800e888 <_ZN8touchgfx3HAL4tickEv+0x40>
 800e87a:	6823      	ldr	r3, [r4, #0]
 800e87c:	4620      	mov	r0, r4
 800e87e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800e882:	4798      	blx	r3
 800e884:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800e888:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800e88c:	2601      	movs	r6, #1
 800e88e:	6862      	ldr	r2, [r4, #4]
 800e890:	f083 0301 	eor.w	r3, r3, #1
 800e894:	702e      	strb	r6, [r5, #0]
 800e896:	7253      	strb	r3, [r2, #9]
 800e898:	f002 ff2e 	bl	80116f8 <_ZN8touchgfx11Application11getInstanceEv>
 800e89c:	6803      	ldr	r3, [r0, #0]
 800e89e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e8a0:	4798      	blx	r3
 800e8a2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800e8a6:	b90b      	cbnz	r3, 800e8ac <_ZN8touchgfx3HAL4tickEv+0x64>
 800e8a8:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800e8ac:	f002 ff24 	bl	80116f8 <_ZN8touchgfx11Application11getInstanceEv>
 800e8b0:	6803      	ldr	r3, [r0, #0]
 800e8b2:	695b      	ldr	r3, [r3, #20]
 800e8b4:	4798      	blx	r3
 800e8b6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800e8b8:	6803      	ldr	r3, [r0, #0]
 800e8ba:	691b      	ldr	r3, [r3, #16]
 800e8bc:	4798      	blx	r3
 800e8be:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800e8c2:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800e8c6:	3b01      	subs	r3, #1
 800e8c8:	b2db      	uxtb	r3, r3
 800e8ca:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800e8ce:	b10a      	cbz	r2, 800e8d4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800e8d0:	2b00      	cmp	r3, #0
 800e8d2:	d1eb      	bne.n	800e8ac <_ZN8touchgfx3HAL4tickEv+0x64>
 800e8d4:	4a3a      	ldr	r2, [pc, #232]	; (800e9c0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800e8d6:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800e8da:	7813      	ldrb	r3, [r2, #0]
 800e8dc:	3301      	adds	r3, #1
 800e8de:	b25b      	sxtb	r3, r3
 800e8e0:	4299      	cmp	r1, r3
 800e8e2:	7013      	strb	r3, [r2, #0]
 800e8e4:	dc10      	bgt.n	800e908 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800e8e6:	2300      	movs	r3, #0
 800e8e8:	68e0      	ldr	r0, [r4, #12]
 800e8ea:	a902      	add	r1, sp, #8
 800e8ec:	7013      	strb	r3, [r2, #0]
 800e8ee:	aa03      	add	r2, sp, #12
 800e8f0:	6803      	ldr	r3, [r0, #0]
 800e8f2:	68db      	ldr	r3, [r3, #12]
 800e8f4:	4798      	blx	r3
 800e8f6:	6823      	ldr	r3, [r4, #0]
 800e8f8:	2800      	cmp	r0, #0
 800e8fa:	d050      	beq.n	800e99e <_ZN8touchgfx3HAL4tickEv+0x156>
 800e8fc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800e900:	4620      	mov	r0, r4
 800e902:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800e906:	4798      	blx	r3
 800e908:	2300      	movs	r3, #0
 800e90a:	6960      	ldr	r0, [r4, #20]
 800e90c:	f88d 3007 	strb.w	r3, [sp, #7]
 800e910:	b158      	cbz	r0, 800e92a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800e912:	6803      	ldr	r3, [r0, #0]
 800e914:	f10d 0107 	add.w	r1, sp, #7
 800e918:	68db      	ldr	r3, [r3, #12]
 800e91a:	4798      	blx	r3
 800e91c:	b128      	cbz	r0, 800e92a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800e91e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800e920:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e924:	6803      	ldr	r3, [r0, #0]
 800e926:	68db      	ldr	r3, [r3, #12]
 800e928:	4798      	blx	r3
 800e92a:	f104 001c 	add.w	r0, r4, #28
 800e92e:	f012 ff51 	bl	80217d4 <_ZN8touchgfx8Gestures4tickEv>
 800e932:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800e936:	b30b      	cbz	r3, 800e97c <_ZN8touchgfx3HAL4tickEv+0x134>
 800e938:	6920      	ldr	r0, [r4, #16]
 800e93a:	6803      	ldr	r3, [r0, #0]
 800e93c:	691b      	ldr	r3, [r3, #16]
 800e93e:	4798      	blx	r3
 800e940:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800e942:	4606      	mov	r6, r0
 800e944:	b903      	cbnz	r3, 800e948 <_ZN8touchgfx3HAL4tickEv+0x100>
 800e946:	6760      	str	r0, [r4, #116]	; 0x74
 800e948:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800e94a:	4a1e      	ldr	r2, [pc, #120]	; (800e9c4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800e94c:	1af3      	subs	r3, r6, r3
 800e94e:	4293      	cmp	r3, r2
 800e950:	d914      	bls.n	800e97c <_ZN8touchgfx3HAL4tickEv+0x134>
 800e952:	6920      	ldr	r0, [r4, #16]
 800e954:	6803      	ldr	r3, [r0, #0]
 800e956:	699b      	ldr	r3, [r3, #24]
 800e958:	4798      	blx	r3
 800e95a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800e95c:	2264      	movs	r2, #100	; 0x64
 800e95e:	1af3      	subs	r3, r6, r3
 800e960:	fbb3 f3f2 	udiv	r3, r3, r2
 800e964:	fbb0 f0f3 	udiv	r0, r0, r3
 800e968:	2800      	cmp	r0, #0
 800e96a:	dc1d      	bgt.n	800e9a8 <_ZN8touchgfx3HAL4tickEv+0x160>
 800e96c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800e970:	6920      	ldr	r0, [r4, #16]
 800e972:	2100      	movs	r1, #0
 800e974:	6803      	ldr	r3, [r0, #0]
 800e976:	69db      	ldr	r3, [r3, #28]
 800e978:	4798      	blx	r3
 800e97a:	6766      	str	r6, [r4, #116]	; 0x74
 800e97c:	f002 febc 	bl	80116f8 <_ZN8touchgfx11Application11getInstanceEv>
 800e980:	6803      	ldr	r3, [r0, #0]
 800e982:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e984:	4798      	blx	r3
 800e986:	6823      	ldr	r3, [r4, #0]
 800e988:	4620      	mov	r0, r4
 800e98a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800e98e:	4798      	blx	r3
 800e990:	2001      	movs	r0, #1
 800e992:	f7fd fde5 	bl	800c560 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800e996:	2300      	movs	r3, #0
 800e998:	702b      	strb	r3, [r5, #0]
 800e99a:	b004      	add	sp, #16
 800e99c:	bd70      	pop	{r4, r5, r6, pc}
 800e99e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800e9a2:	4620      	mov	r0, r4
 800e9a4:	4798      	blx	r3
 800e9a6:	e7af      	b.n	800e908 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800e9a8:	2863      	cmp	r0, #99	; 0x63
 800e9aa:	bfcb      	itete	gt
 800e9ac:	2300      	movgt	r3, #0
 800e9ae:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800e9b2:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800e9b6:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800e9ba:	e7d9      	b.n	800e970 <_ZN8touchgfx3HAL4tickEv+0x128>
 800e9bc:	24001e80 	.word	0x24001e80
 800e9c0:	24001e81 	.word	0x24001e81
 800e9c4:	05f5e100 	.word	0x05f5e100

0800e9c8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800e9c8:	b510      	push	{r4, lr}
 800e9ca:	4604      	mov	r4, r0
 800e9cc:	f7fe f8c2 	bl	800cb54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800e9d0:	2200      	movs	r2, #0
 800e9d2:	6863      	ldr	r3, [r4, #4]
 800e9d4:	729a      	strb	r2, [r3, #10]
 800e9d6:	bd10      	pop	{r4, pc}

0800e9d8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800e9d8:	65c1      	str	r1, [r0, #92]	; 0x5c
 800e9da:	301c      	adds	r0, #28
 800e9dc:	f012 bef8 	b.w	80217d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800e9e0 <_ZN8touchgfx3HAL5touchEll>:
 800e9e0:	b530      	push	{r4, r5, lr}
 800e9e2:	b087      	sub	sp, #28
 800e9e4:	4604      	mov	r4, r0
 800e9e6:	a804      	add	r0, sp, #16
 800e9e8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800e9ec:	f002 fc76 	bl	80112dc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800e9f0:	9b04      	ldr	r3, [sp, #16]
 800e9f2:	a906      	add	r1, sp, #24
 800e9f4:	a803      	add	r0, sp, #12
 800e9f6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e9fa:	9b05      	ldr	r3, [sp, #20]
 800e9fc:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ea00:	f002 fcbe 	bl	8011380 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ea04:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800ea08:	f104 001c 	add.w	r0, r4, #28
 800ea0c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ea10:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ea14:	b189      	cbz	r1, 800ea3a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800ea16:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800ea1a:	9300      	str	r3, [sp, #0]
 800ea1c:	4613      	mov	r3, r2
 800ea1e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800ea22:	462a      	mov	r2, r5
 800ea24:	f012 fee4 	bl	80217f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800ea28:	b128      	cbz	r0, 800ea36 <_ZN8touchgfx3HAL5touchEll+0x56>
 800ea2a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ea2e:	6623      	str	r3, [r4, #96]	; 0x60
 800ea30:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ea34:	6663      	str	r3, [r4, #100]	; 0x64
 800ea36:	b007      	add	sp, #28
 800ea38:	bd30      	pop	{r4, r5, pc}
 800ea3a:	f012 ff19 	bl	8021870 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ea3e:	2301      	movs	r3, #1
 800ea40:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800ea44:	e7f1      	b.n	800ea2a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ea46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ea46:	b510      	push	{r4, lr}
 800ea48:	2b00      	cmp	r3, #0
 800ea4a:	d046      	beq.n	800eada <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ea4c:	ea81 0002 	eor.w	r0, r1, r2
 800ea50:	07c4      	lsls	r4, r0, #31
 800ea52:	d508      	bpl.n	800ea66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ea54:	440b      	add	r3, r1
 800ea56:	3a01      	subs	r2, #1
 800ea58:	428b      	cmp	r3, r1
 800ea5a:	d93e      	bls.n	800eada <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ea5c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ea60:	f801 0b01 	strb.w	r0, [r1], #1
 800ea64:	e7f8      	b.n	800ea58 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ea66:	07d0      	lsls	r0, r2, #31
 800ea68:	bf42      	ittt	mi
 800ea6a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ea6e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ea72:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ea76:	2b01      	cmp	r3, #1
 800ea78:	d911      	bls.n	800ea9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ea7a:	ea81 0402 	eor.w	r4, r1, r2
 800ea7e:	4610      	mov	r0, r2
 800ea80:	07a4      	lsls	r4, r4, #30
 800ea82:	d022      	beq.n	800eaca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800ea84:	f023 0401 	bic.w	r4, r3, #1
 800ea88:	440c      	add	r4, r1
 800ea8a:	428c      	cmp	r4, r1
 800ea8c:	4602      	mov	r2, r0
 800ea8e:	d904      	bls.n	800ea9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ea90:	8812      	ldrh	r2, [r2, #0]
 800ea92:	3002      	adds	r0, #2
 800ea94:	f821 2b02 	strh.w	r2, [r1], #2
 800ea98:	e7f7      	b.n	800ea8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ea9a:	f003 0301 	and.w	r3, r3, #1
 800ea9e:	f023 0003 	bic.w	r0, r3, #3
 800eaa2:	4408      	add	r0, r1
 800eaa4:	4288      	cmp	r0, r1
 800eaa6:	4614      	mov	r4, r2
 800eaa8:	d904      	bls.n	800eab4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800eaaa:	6824      	ldr	r4, [r4, #0]
 800eaac:	3204      	adds	r2, #4
 800eaae:	f841 4b04 	str.w	r4, [r1], #4
 800eab2:	e7f7      	b.n	800eaa4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800eab4:	f003 0303 	and.w	r3, r3, #3
 800eab8:	3a01      	subs	r2, #1
 800eaba:	440b      	add	r3, r1
 800eabc:	428b      	cmp	r3, r1
 800eabe:	d90c      	bls.n	800eada <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800eac0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800eac4:	f801 0b01 	strb.w	r0, [r1], #1
 800eac8:	e7f8      	b.n	800eabc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800eaca:	0790      	lsls	r0, r2, #30
 800eacc:	d0e7      	beq.n	800ea9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800eace:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ead2:	3b02      	subs	r3, #2
 800ead4:	f821 0b02 	strh.w	r0, [r1], #2
 800ead8:	e7e1      	b.n	800ea9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800eada:	2001      	movs	r0, #1
 800eadc:	bd10      	pop	{r4, pc}

0800eade <_ZN8touchgfx3HAL7noTouchEv>:
 800eade:	b510      	push	{r4, lr}
 800eae0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800eae4:	4604      	mov	r4, r0
 800eae6:	b153      	cbz	r3, 800eafe <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800eae8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800eaec:	2101      	movs	r1, #1
 800eaee:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800eaf2:	301c      	adds	r0, #28
 800eaf4:	f012 febc 	bl	8021870 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800eaf8:	2300      	movs	r3, #0
 800eafa:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800eafe:	bd10      	pop	{r4, pc}

0800eb00 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800eb00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eb04:	b085      	sub	sp, #20
 800eb06:	4604      	mov	r4, r0
 800eb08:	2000      	movs	r0, #0
 800eb0a:	4699      	mov	r9, r3
 800eb0c:	ad04      	add	r5, sp, #16
 800eb0e:	460f      	mov	r7, r1
 800eb10:	4690      	mov	r8, r2
 800eb12:	f845 0d04 	str.w	r0, [r5, #-4]!
 800eb16:	69a0      	ldr	r0, [r4, #24]
 800eb18:	6806      	ldr	r6, [r0, #0]
 800eb1a:	9501      	str	r5, [sp, #4]
 800eb1c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800eb20:	9500      	str	r5, [sp, #0]
 800eb22:	6835      	ldr	r5, [r6, #0]
 800eb24:	47a8      	blx	r5
 800eb26:	4d10      	ldr	r5, [pc, #64]	; (800eb68 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800eb28:	4606      	mov	r6, r0
 800eb2a:	f8a5 9000 	strh.w	r9, [r5]
 800eb2e:	f7fb ff7f 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800eb32:	6803      	ldr	r3, [r0, #0]
 800eb34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb36:	4798      	blx	r3
 800eb38:	b128      	cbz	r0, 800eb46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800eb3a:	2801      	cmp	r0, #1
 800eb3c:	d00b      	beq.n	800eb56 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800eb3e:	4630      	mov	r0, r6
 800eb40:	b005      	add	sp, #20
 800eb42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb46:	882b      	ldrh	r3, [r5, #0]
 800eb48:	fb08 7203 	mla	r2, r8, r3, r7
 800eb4c:	9b03      	ldr	r3, [sp, #12]
 800eb4e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800eb52:	63e3      	str	r3, [r4, #60]	; 0x3c
 800eb54:	e7f3      	b.n	800eb3e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800eb56:	882a      	ldrh	r2, [r5, #0]
 800eb58:	9b03      	ldr	r3, [sp, #12]
 800eb5a:	fb08 7202 	mla	r2, r8, r2, r7
 800eb5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800eb62:	1a9a      	subs	r2, r3, r2
 800eb64:	63e2      	str	r2, [r4, #60]	; 0x3c
 800eb66:	e7ea      	b.n	800eb3e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800eb68:	24001e76 	.word	0x24001e76

0800eb6c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800eb6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb6e:	b08b      	sub	sp, #44	; 0x2c
 800eb70:	4617      	mov	r7, r2
 800eb72:	4604      	mov	r4, r0
 800eb74:	460e      	mov	r6, r1
 800eb76:	461d      	mov	r5, r3
 800eb78:	f7fb ff5a 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800eb7c:	6803      	ldr	r3, [r0, #0]
 800eb7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb80:	4798      	blx	r3
 800eb82:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800eb86:	9007      	str	r0, [sp, #28]
 800eb88:	4631      	mov	r1, r6
 800eb8a:	6822      	ldr	r2, [r4, #0]
 800eb8c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800eb90:	4b0c      	ldr	r3, [pc, #48]	; (800ebc4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800eb92:	4620      	mov	r0, r4
 800eb94:	881b      	ldrh	r3, [r3, #0]
 800eb96:	9306      	str	r3, [sp, #24]
 800eb98:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800eb9c:	9305      	str	r3, [sp, #20]
 800eb9e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800eba2:	9304      	str	r3, [sp, #16]
 800eba4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800eba8:	9303      	str	r3, [sp, #12]
 800ebaa:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ebae:	9302      	str	r3, [sp, #8]
 800ebb0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ebb4:	e9cd 5300 	strd	r5, r3, [sp]
 800ebb8:	463b      	mov	r3, r7
 800ebba:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800ebbc:	2200      	movs	r2, #0
 800ebbe:	47a8      	blx	r5
 800ebc0:	b00b      	add	sp, #44	; 0x2c
 800ebc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ebc4:	24001e76 	.word	0x24001e76

0800ebc8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800ebc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ebcc:	4698      	mov	r8, r3
 800ebce:	6803      	ldr	r3, [r0, #0]
 800ebd0:	b08b      	sub	sp, #44	; 0x2c
 800ebd2:	4617      	mov	r7, r2
 800ebd4:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800ebd6:	460e      	mov	r6, r1
 800ebd8:	4b13      	ldr	r3, [pc, #76]	; (800ec28 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800ebda:	4604      	mov	r4, r0
 800ebdc:	f8b3 9000 	ldrh.w	r9, [r3]
 800ebe0:	f7fb ff26 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800ebe4:	6803      	ldr	r3, [r0, #0]
 800ebe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebe8:	4798      	blx	r3
 800ebea:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ebee:	2200      	movs	r2, #0
 800ebf0:	4631      	mov	r1, r6
 800ebf2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ebf6:	2302      	movs	r3, #2
 800ebf8:	4620      	mov	r0, r4
 800ebfa:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800ebfe:	2301      	movs	r3, #1
 800ec00:	9305      	str	r3, [sp, #20]
 800ec02:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800ec06:	9304      	str	r3, [sp, #16]
 800ec08:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ec0c:	9303      	str	r3, [sp, #12]
 800ec0e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ec12:	9302      	str	r3, [sp, #8]
 800ec14:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ec18:	e9cd 8300 	strd	r8, r3, [sp]
 800ec1c:	463b      	mov	r3, r7
 800ec1e:	47a8      	blx	r5
 800ec20:	b00b      	add	sp, #44	; 0x2c
 800ec22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ec26:	bf00      	nop
 800ec28:	24001e76 	.word	0x24001e76

0800ec2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800ec2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ec30:	4698      	mov	r8, r3
 800ec32:	6803      	ldr	r3, [r0, #0]
 800ec34:	b087      	sub	sp, #28
 800ec36:	460e      	mov	r6, r1
 800ec38:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800ec3a:	4617      	mov	r7, r2
 800ec3c:	4b0f      	ldr	r3, [pc, #60]	; (800ec7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ec3e:	4604      	mov	r4, r0
 800ec40:	f8b3 9000 	ldrh.w	r9, [r3]
 800ec44:	f7fb fef4 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800ec48:	6803      	ldr	r3, [r0, #0]
 800ec4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec4c:	4798      	blx	r3
 800ec4e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ec52:	463a      	mov	r2, r7
 800ec54:	4631      	mov	r1, r6
 800ec56:	f8cd 900c 	str.w	r9, [sp, #12]
 800ec5a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ec5e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800ec62:	4620      	mov	r0, r4
 800ec64:	9302      	str	r3, [sp, #8]
 800ec66:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ec6a:	9301      	str	r3, [sp, #4]
 800ec6c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ec70:	9300      	str	r3, [sp, #0]
 800ec72:	4643      	mov	r3, r8
 800ec74:	47a8      	blx	r5
 800ec76:	b007      	add	sp, #28
 800ec78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ec7c:	24001e76 	.word	0x24001e76

0800ec80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ec80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec84:	4604      	mov	r4, r0
 800ec86:	b08f      	sub	sp, #60	; 0x3c
 800ec88:	4610      	mov	r0, r2
 800ec8a:	460d      	mov	r5, r1
 800ec8c:	4691      	mov	r9, r2
 800ec8e:	461e      	mov	r6, r3
 800ec90:	f005 f97a 	bl	8013f88 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ec94:	2800      	cmp	r0, #0
 800ec96:	f000 809d 	beq.w	800edd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ec9a:	6823      	ldr	r3, [r4, #0]
 800ec9c:	4620      	mov	r0, r4
 800ec9e:	f8df b198 	ldr.w	fp, [pc, #408]	; 800ee38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800eca2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800eca6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800eca8:	4798      	blx	r3
 800ecaa:	6823      	ldr	r3, [r4, #0]
 800ecac:	4620      	mov	r0, r4
 800ecae:	f8df a18c 	ldr.w	sl, [pc, #396]	; 800ee3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ecb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ecb4:	4798      	blx	r3
 800ecb6:	f8bb 3000 	ldrh.w	r3, [fp]
 800ecba:	4f5c      	ldr	r7, [pc, #368]	; (800ee2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ecbc:	9301      	str	r3, [sp, #4]
 800ecbe:	f8ba 3000 	ldrh.w	r3, [sl]
 800ecc2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ecc6:	4640      	mov	r0, r8
 800ecc8:	9302      	str	r3, [sp, #8]
 800ecca:	883b      	ldrh	r3, [r7, #0]
 800eccc:	9303      	str	r3, [sp, #12]
 800ecce:	4b58      	ldr	r3, [pc, #352]	; (800ee30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ecd0:	881a      	ldrh	r2, [r3, #0]
 800ecd2:	9305      	str	r3, [sp, #20]
 800ecd4:	9204      	str	r2, [sp, #16]
 800ecd6:	f005 f9eb 	bl	80140b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ecda:	8038      	strh	r0, [r7, #0]
 800ecdc:	4640      	mov	r0, r8
 800ecde:	f005 fa1b 	bl	8014118 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ece2:	9b05      	ldr	r3, [sp, #20]
 800ece4:	b280      	uxth	r0, r0
 800ece6:	8018      	strh	r0, [r3, #0]
 800ece8:	4b52      	ldr	r3, [pc, #328]	; (800ee34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ecea:	781b      	ldrb	r3, [r3, #0]
 800ecec:	2b00      	cmp	r3, #0
 800ecee:	d174      	bne.n	800edda <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ecf0:	883b      	ldrh	r3, [r7, #0]
 800ecf2:	f8aa 0000 	strh.w	r0, [sl]
 800ecf6:	f8ab 3000 	strh.w	r3, [fp]
 800ecfa:	4648      	mov	r0, r9
 800ecfc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800ed00:	f005 f942 	bl	8013f88 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ed04:	2200      	movs	r2, #0
 800ed06:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800ed0a:	4611      	mov	r1, r2
 800ed0c:	4628      	mov	r0, r5
 800ed0e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ed12:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ed16:	f7fc fbfa 	bl	800b50e <_ZN8touchgfx8Drawable5setXYEss>
 800ed1a:	2301      	movs	r3, #1
 800ed1c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800ed20:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800ed24:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ed28:	2b00      	cmp	r3, #0
 800ed2a:	dd5c      	ble.n	800ede6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ed2c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ed30:	2b00      	cmp	r3, #0
 800ed32:	dd58      	ble.n	800ede6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ed34:	462a      	mov	r2, r5
 800ed36:	ab0a      	add	r3, sp, #40	; 0x28
 800ed38:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ed3c:	6851      	ldr	r1, [r2, #4]
 800ed3e:	c303      	stmia	r3!, {r0, r1}
 800ed40:	4631      	mov	r1, r6
 800ed42:	a80a      	add	r0, sp, #40	; 0x28
 800ed44:	f7ff fbf6 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 800ed48:	4b38      	ldr	r3, [pc, #224]	; (800ee2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ed4a:	2100      	movs	r1, #0
 800ed4c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed50:	4b37      	ldr	r3, [pc, #220]	; (800ee30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ed52:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ed56:	aa0a      	add	r2, sp, #40	; 0x28
 800ed58:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ed5c:	910c      	str	r1, [sp, #48]	; 0x30
 800ed5e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ed62:	ab08      	add	r3, sp, #32
 800ed64:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ed68:	e883 0003 	stmia.w	r3, {r0, r1}
 800ed6c:	4618      	mov	r0, r3
 800ed6e:	a90c      	add	r1, sp, #48	; 0x30
 800ed70:	f7ff fbe0 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 800ed74:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800ed76:	2b00      	cmp	r3, #0
 800ed78:	d13c      	bne.n	800edf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800ed7a:	2000      	movs	r0, #0
 800ed7c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800ed80:	2600      	movs	r6, #0
 800ed82:	696b      	ldr	r3, [r5, #20]
 800ed84:	a908      	add	r1, sp, #32
 800ed86:	682a      	ldr	r2, [r5, #0]
 800ed88:	4628      	mov	r0, r5
 800ed8a:	9305      	str	r3, [sp, #20]
 800ed8c:	616e      	str	r6, [r5, #20]
 800ed8e:	6892      	ldr	r2, [r2, #8]
 800ed90:	4790      	blx	r2
 800ed92:	9b05      	ldr	r3, [sp, #20]
 800ed94:	4652      	mov	r2, sl
 800ed96:	4649      	mov	r1, r9
 800ed98:	616b      	str	r3, [r5, #20]
 800ed9a:	4628      	mov	r0, r5
 800ed9c:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800eda0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800eda4:	f7fc fbb3 	bl	800b50e <_ZN8touchgfx8Drawable5setXYEss>
 800eda8:	9a01      	ldr	r2, [sp, #4]
 800edaa:	4b23      	ldr	r3, [pc, #140]	; (800ee38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800edac:	4620      	mov	r0, r4
 800edae:	801a      	strh	r2, [r3, #0]
 800edb0:	9a02      	ldr	r2, [sp, #8]
 800edb2:	4b22      	ldr	r3, [pc, #136]	; (800ee3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800edb4:	801a      	strh	r2, [r3, #0]
 800edb6:	9a03      	ldr	r2, [sp, #12]
 800edb8:	4b1c      	ldr	r3, [pc, #112]	; (800ee2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800edba:	801a      	strh	r2, [r3, #0]
 800edbc:	4b1c      	ldr	r3, [pc, #112]	; (800ee30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800edbe:	9a04      	ldr	r2, [sp, #16]
 800edc0:	801a      	strh	r2, [r3, #0]
 800edc2:	6823      	ldr	r3, [r4, #0]
 800edc4:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800edc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800edca:	4798      	blx	r3
 800edcc:	6823      	ldr	r3, [r4, #0]
 800edce:	4620      	mov	r0, r4
 800edd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800edd2:	4798      	blx	r3
 800edd4:	b00f      	add	sp, #60	; 0x3c
 800edd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800edda:	883b      	ldrh	r3, [r7, #0]
 800eddc:	f8ab 0000 	strh.w	r0, [fp]
 800ede0:	f8aa 3000 	strh.w	r3, [sl]
 800ede4:	e789      	b.n	800ecfa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800ede6:	462a      	mov	r2, r5
 800ede8:	ab0a      	add	r3, sp, #40	; 0x28
 800edea:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800edee:	6851      	ldr	r1, [r2, #4]
 800edf0:	c303      	stmia	r3!, {r0, r1}
 800edf2:	e7a9      	b.n	800ed48 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800edf4:	a807      	add	r0, sp, #28
 800edf6:	f005 facb 	bl	8014390 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800edfa:	4606      	mov	r6, r0
 800edfc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800edfe:	6803      	ldr	r3, [r0, #0]
 800ee00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee02:	4798      	blx	r3
 800ee04:	4286      	cmp	r6, r0
 800ee06:	d1b8      	bne.n	800ed7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800ee08:	f7fb fe12 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800ee0c:	6803      	ldr	r3, [r0, #0]
 800ee0e:	4606      	mov	r6, r0
 800ee10:	a807      	add	r0, sp, #28
 800ee12:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ee14:	9305      	str	r3, [sp, #20]
 800ee16:	f005 fabb 	bl	8014390 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ee1a:	9b05      	ldr	r3, [sp, #20]
 800ee1c:	4601      	mov	r1, r0
 800ee1e:	4630      	mov	r0, r6
 800ee20:	4798      	blx	r3
 800ee22:	f080 0001 	eor.w	r0, r0, #1
 800ee26:	b2c0      	uxtb	r0, r0
 800ee28:	e7a8      	b.n	800ed7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800ee2a:	bf00      	nop
 800ee2c:	24001e70 	.word	0x24001e70
 800ee30:	24001e72 	.word	0x24001e72
 800ee34:	24001e74 	.word	0x24001e74
 800ee38:	24001e76 	.word	0x24001e76
 800ee3c:	24001e78 	.word	0x24001e78

0800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800ee40:	4b07      	ldr	r3, [pc, #28]	; (800ee60 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800ee42:	b510      	push	{r4, lr}
 800ee44:	781b      	ldrb	r3, [r3, #0]
 800ee46:	4604      	mov	r4, r0
 800ee48:	b13b      	cbz	r3, 800ee5a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ee4a:	6803      	ldr	r3, [r0, #0]
 800ee4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ee4e:	4798      	blx	r3
 800ee50:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ee52:	4283      	cmp	r3, r0
 800ee54:	d101      	bne.n	800ee5a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ee56:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800ee58:	bd10      	pop	{r4, pc}
 800ee5a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ee5c:	e7fc      	b.n	800ee58 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ee5e:	bf00      	nop
 800ee60:	24001e7a 	.word	0x24001e7a

0800ee64 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ee64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ee68:	461d      	mov	r5, r3
 800ee6a:	b08a      	sub	sp, #40	; 0x28
 800ee6c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ee70:	4690      	mov	r8, r2
 800ee72:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800ee76:	2400      	movs	r4, #0
 800ee78:	4607      	mov	r7, r0
 800ee7a:	fb06 8505 	mla	r5, r6, r5, r8
 800ee7e:	9404      	str	r4, [sp, #16]
 800ee80:	f88d 4020 	strb.w	r4, [sp, #32]
 800ee84:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ee88:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ee8c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ee90:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ee94:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ee98:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ee9c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800eea0:	f7ff ffce 	bl	800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800eea4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800eea8:	6878      	ldr	r0, [r7, #4]
 800eeaa:	f8ad 601e 	strh.w	r6, [sp, #30]
 800eeae:	a901      	add	r1, sp, #4
 800eeb0:	9505      	str	r5, [sp, #20]
 800eeb2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800eeb6:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800eeba:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800eebe:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800eec2:	6803      	ldr	r3, [r0, #0]
 800eec4:	685b      	ldr	r3, [r3, #4]
 800eec6:	4798      	blx	r3
 800eec8:	b00a      	add	sp, #40	; 0x28
 800eeca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800eece <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800eece:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eed2:	b08b      	sub	sp, #44	; 0x2c
 800eed4:	2400      	movs	r4, #0
 800eed6:	4691      	mov	r9, r2
 800eed8:	461d      	mov	r5, r3
 800eeda:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800eede:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800eee2:	4688      	mov	r8, r1
 800eee4:	4607      	mov	r7, r0
 800eee6:	9404      	str	r4, [sp, #16]
 800eee8:	fb06 9505 	mla	r5, r6, r5, r9
 800eeec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800eef0:	f7ff ffa6 	bl	800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800eef4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800eef8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800eefc:	6878      	ldr	r0, [r7, #4]
 800eefe:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ef02:	a901      	add	r1, sp, #4
 800ef04:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ef08:	9505      	str	r5, [sp, #20]
 800ef0a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ef0e:	f8ad 401c 	strh.w	r4, [sp, #28]
 800ef12:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ef16:	f8cd 8010 	str.w	r8, [sp, #16]
 800ef1a:	f8ad 4020 	strh.w	r4, [sp, #32]
 800ef1e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ef22:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800ef26:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800ef2a:	6803      	ldr	r3, [r0, #0]
 800ef2c:	685b      	ldr	r3, [r3, #4]
 800ef2e:	4798      	blx	r3
 800ef30:	b00b      	add	sp, #44	; 0x2c
 800ef32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800ef38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800ef38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef3c:	b08a      	sub	sp, #40	; 0x28
 800ef3e:	4698      	mov	r8, r3
 800ef40:	2300      	movs	r3, #0
 800ef42:	4606      	mov	r6, r0
 800ef44:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800ef48:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800ef4c:	2d0b      	cmp	r5, #11
 800ef4e:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800ef52:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800ef56:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800ef5a:	9304      	str	r3, [sp, #16]
 800ef5c:	d137      	bne.n	800efce <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800ef5e:	2380      	movs	r3, #128	; 0x80
 800ef60:	f88d 0020 	strb.w	r0, [sp, #32]
 800ef64:	4630      	mov	r0, r6
 800ef66:	9203      	str	r2, [sp, #12]
 800ef68:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ef6c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ef70:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ef74:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ef78:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ef7c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ef80:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ef84:	f7ff ff5c 	bl	800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ef88:	2c0b      	cmp	r4, #11
 800ef8a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800ef8e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800ef92:	bf94      	ite	ls
 800ef94:	4b19      	ldrls	r3, [pc, #100]	; (800effc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800ef96:	2100      	movhi	r1, #0
 800ef98:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800ef9c:	bf98      	it	ls
 800ef9e:	5d19      	ldrbls	r1, [r3, r4]
 800efa0:	fb02 8307 	mla	r3, r2, r7, r8
 800efa4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800efa8:	10c9      	asrs	r1, r1, #3
 800efaa:	fb01 0003 	mla	r0, r1, r3, r0
 800efae:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800efb2:	a901      	add	r1, sp, #4
 800efb4:	9005      	str	r0, [sp, #20]
 800efb6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800efba:	2300      	movs	r3, #0
 800efbc:	6870      	ldr	r0, [r6, #4]
 800efbe:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800efc2:	6803      	ldr	r3, [r0, #0]
 800efc4:	685b      	ldr	r3, [r3, #4]
 800efc6:	4798      	blx	r3
 800efc8:	b00a      	add	sp, #40	; 0x28
 800efca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800efce:	2d02      	cmp	r5, #2
 800efd0:	d109      	bne.n	800efe6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800efd2:	28ff      	cmp	r0, #255	; 0xff
 800efd4:	d105      	bne.n	800efe2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800efd6:	f1bc 0f00 	cmp.w	ip, #0
 800efda:	bf14      	ite	ne
 800efdc:	2340      	movne	r3, #64	; 0x40
 800efde:	2320      	moveq	r3, #32
 800efe0:	e7be      	b.n	800ef60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800efe2:	2340      	movs	r3, #64	; 0x40
 800efe4:	e7bc      	b.n	800ef60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800efe6:	28ff      	cmp	r0, #255	; 0xff
 800efe8:	d105      	bne.n	800eff6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800efea:	f1bc 0f00 	cmp.w	ip, #0
 800efee:	bf14      	ite	ne
 800eff0:	2304      	movne	r3, #4
 800eff2:	2301      	moveq	r3, #1
 800eff4:	e7b4      	b.n	800ef60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800eff6:	2304      	movs	r3, #4
 800eff8:	e7b2      	b.n	800ef60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800effa:	bf00      	nop
 800effc:	080241cc 	.word	0x080241cc

0800f000 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800f000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f004:	b08b      	sub	sp, #44	; 0x2c
 800f006:	461d      	mov	r5, r3
 800f008:	2400      	movs	r4, #0
 800f00a:	4688      	mov	r8, r1
 800f00c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800f010:	4693      	mov	fp, r2
 800f012:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800f016:	4607      	mov	r7, r0
 800f018:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800f01c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800f020:	9404      	str	r4, [sp, #16]
 800f022:	bf14      	ite	ne
 800f024:	2308      	movne	r3, #8
 800f026:	2302      	moveq	r3, #2
 800f028:	fb05 b50a 	mla	r5, r5, sl, fp
 800f02c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f030:	f7ff ff06 	bl	800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f034:	2e0b      	cmp	r6, #11
 800f036:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f03a:	a901      	add	r1, sp, #4
 800f03c:	bf98      	it	ls
 800f03e:	4b13      	ldrls	r3, [pc, #76]	; (800f08c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800f040:	f8ad a01e 	strh.w	sl, [sp, #30]
 800f044:	bf98      	it	ls
 800f046:	5d9c      	ldrbls	r4, [r3, r6]
 800f048:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800f04c:	10e4      	asrs	r4, r4, #3
 800f04e:	f8cd 8010 	str.w	r8, [sp, #16]
 800f052:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f056:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f05a:	fb04 0405 	mla	r4, r4, r5, r0
 800f05e:	6878      	ldr	r0, [r7, #4]
 800f060:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f064:	2300      	movs	r3, #0
 800f066:	9405      	str	r4, [sp, #20]
 800f068:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f06c:	f88d 9020 	strb.w	r9, [sp, #32]
 800f070:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800f074:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800f078:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800f07c:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800f080:	6803      	ldr	r3, [r0, #0]
 800f082:	685b      	ldr	r3, [r3, #4]
 800f084:	4798      	blx	r3
 800f086:	b00b      	add	sp, #44	; 0x2c
 800f088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f08c:	080241cc 	.word	0x080241cc

0800f090 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800f090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f094:	461e      	mov	r6, r3
 800f096:	4b0a      	ldr	r3, [pc, #40]	; (800f0c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800f098:	460f      	mov	r7, r1
 800f09a:	4690      	mov	r8, r2
 800f09c:	881d      	ldrh	r5, [r3, #0]
 800f09e:	f7fb fcc7 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800f0a2:	6803      	ldr	r3, [r0, #0]
 800f0a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f0a6:	4798      	blx	r3
 800f0a8:	280b      	cmp	r0, #11
 800f0aa:	bf96      	itet	ls
 800f0ac:	4b05      	ldrls	r3, [pc, #20]	; (800f0c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800f0ae:	2400      	movhi	r4, #0
 800f0b0:	5c1c      	ldrbls	r4, [r3, r0]
 800f0b2:	fb08 7005 	mla	r0, r8, r5, r7
 800f0b6:	10e4      	asrs	r4, r4, #3
 800f0b8:	fb04 6000 	mla	r0, r4, r0, r6
 800f0bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f0c0:	24001e76 	.word	0x24001e76
 800f0c4:	080241cc 	.word	0x080241cc

0800f0c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800f0c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0ca:	b08b      	sub	sp, #44	; 0x2c
 800f0cc:	461f      	mov	r7, r3
 800f0ce:	4604      	mov	r4, r0
 800f0d0:	4616      	mov	r6, r2
 800f0d2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800f0d6:	2500      	movs	r5, #0
 800f0d8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f0dc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800f0e0:	9504      	str	r5, [sp, #16]
 800f0e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f0e6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f0ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f0ee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800f0f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f0f6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800f0fa:	f88d 3020 	strb.w	r3, [sp, #32]
 800f0fe:	f7ff fe9f 	bl	800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f102:	463a      	mov	r2, r7
 800f104:	4631      	mov	r1, r6
 800f106:	4603      	mov	r3, r0
 800f108:	4620      	mov	r0, r4
 800f10a:	f7ff ffc1 	bl	800f090 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f10e:	4b0e      	ldr	r3, [pc, #56]	; (800f148 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800f110:	9005      	str	r0, [sp, #20]
 800f112:	881b      	ldrh	r3, [r3, #0]
 800f114:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f118:	f7fb fc8a 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800f11c:	6803      	ldr	r3, [r0, #0]
 800f11e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f120:	4798      	blx	r3
 800f122:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f124:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800f128:	a901      	add	r1, sp, #4
 800f12a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800f12e:	9304      	str	r3, [sp, #16]
 800f130:	6860      	ldr	r0, [r4, #4]
 800f132:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800f136:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800f13a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800f13e:	6803      	ldr	r3, [r0, #0]
 800f140:	685b      	ldr	r3, [r3, #4]
 800f142:	4798      	blx	r3
 800f144:	b00b      	add	sp, #44	; 0x2c
 800f146:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f148:	24001e76 	.word	0x24001e76

0800f14c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800f14c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f14e:	b08d      	sub	sp, #52	; 0x34
 800f150:	2501      	movs	r5, #1
 800f152:	4604      	mov	r4, r0
 800f154:	466b      	mov	r3, sp
 800f156:	9503      	str	r5, [sp, #12]
 800f158:	e883 0006 	stmia.w	r3, {r1, r2}
 800f15c:	2300      	movs	r3, #0
 800f15e:	f8bd 6000 	ldrh.w	r6, [sp]
 800f162:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800f166:	9306      	str	r3, [sp, #24]
 800f168:	6803      	ldr	r3, [r0, #0]
 800f16a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f16c:	4798      	blx	r3
 800f16e:	463a      	mov	r2, r7
 800f170:	4631      	mov	r1, r6
 800f172:	4603      	mov	r3, r0
 800f174:	4620      	mov	r0, r4
 800f176:	f7ff ff8b 	bl	800f090 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f17a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f17c:	9004      	str	r0, [sp, #16]
 800f17e:	9307      	str	r3, [sp, #28]
 800f180:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f184:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f188:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f18c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f190:	4b0e      	ldr	r3, [pc, #56]	; (800f1cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800f192:	881b      	ldrh	r3, [r3, #0]
 800f194:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f198:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f19c:	f7fb fc48 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800f1a0:	6803      	ldr	r3, [r0, #0]
 800f1a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f1a4:	4798      	blx	r3
 800f1a6:	23ff      	movs	r3, #255	; 0xff
 800f1a8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f1ac:	a903      	add	r1, sp, #12
 800f1ae:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f1b2:	6860      	ldr	r0, [r4, #4]
 800f1b4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f1b8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f1bc:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f1c0:	6803      	ldr	r3, [r0, #0]
 800f1c2:	685b      	ldr	r3, [r3, #4]
 800f1c4:	4798      	blx	r3
 800f1c6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800f1c8:	b00d      	add	sp, #52	; 0x34
 800f1ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f1cc:	24001e76 	.word	0x24001e76

0800f1d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800f1d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1d4:	b08c      	sub	sp, #48	; 0x30
 800f1d6:	461e      	mov	r6, r3
 800f1d8:	2300      	movs	r3, #0
 800f1da:	4604      	mov	r4, r0
 800f1dc:	466d      	mov	r5, sp
 800f1de:	9306      	str	r3, [sp, #24]
 800f1e0:	6803      	ldr	r3, [r0, #0]
 800f1e2:	e885 0006 	stmia.w	r5, {r1, r2}
 800f1e6:	2501      	movs	r5, #1
 800f1e8:	f8bd 7000 	ldrh.w	r7, [sp]
 800f1ec:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800f1f0:	9503      	str	r5, [sp, #12]
 800f1f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f1f4:	4798      	blx	r3
 800f1f6:	4642      	mov	r2, r8
 800f1f8:	4639      	mov	r1, r7
 800f1fa:	4603      	mov	r3, r0
 800f1fc:	4620      	mov	r0, r4
 800f1fe:	f7ff ff47 	bl	800f090 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f202:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f206:	9004      	str	r0, [sp, #16]
 800f208:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f20c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f210:	9607      	str	r6, [sp, #28]
 800f212:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f216:	4b10      	ldr	r3, [pc, #64]	; (800f258 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800f218:	881b      	ldrh	r3, [r3, #0]
 800f21a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f21e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f220:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f224:	f7fb fc04 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 800f228:	6803      	ldr	r3, [r0, #0]
 800f22a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f22c:	4798      	blx	r3
 800f22e:	23ff      	movs	r3, #255	; 0xff
 800f230:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800f234:	a903      	add	r1, sp, #12
 800f236:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800f23a:	6860      	ldr	r0, [r4, #4]
 800f23c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800f240:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f244:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800f248:	6803      	ldr	r3, [r0, #0]
 800f24a:	685b      	ldr	r3, [r3, #4]
 800f24c:	4798      	blx	r3
 800f24e:	4630      	mov	r0, r6
 800f250:	b00c      	add	sp, #48	; 0x30
 800f252:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f256:	bf00      	nop
 800f258:	24001e76 	.word	0x24001e76

0800f25c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800f25c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f25e:	b085      	sub	sp, #20
 800f260:	4605      	mov	r5, r0
 800f262:	ac02      	add	r4, sp, #8
 800f264:	e884 0006 	stmia.w	r4, {r1, r2}
 800f268:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800f26c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800f270:	f7ff fde6 	bl	800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f274:	4631      	mov	r1, r6
 800f276:	4603      	mov	r3, r0
 800f278:	463a      	mov	r2, r7
 800f27a:	4628      	mov	r0, r5
 800f27c:	f7ff ff08 	bl	800f090 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f280:	4a05      	ldr	r2, [pc, #20]	; (800f298 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800f282:	682b      	ldr	r3, [r5, #0]
 800f284:	8812      	ldrh	r2, [r2, #0]
 800f286:	9200      	str	r2, [sp, #0]
 800f288:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800f28a:	4603      	mov	r3, r0
 800f28c:	4628      	mov	r0, r5
 800f28e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800f292:	47b0      	blx	r6
 800f294:	b005      	add	sp, #20
 800f296:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f298:	24001e76 	.word	0x24001e76

0800f29c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800f29c:	b570      	push	{r4, r5, r6, lr}
 800f29e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800f2a2:	4604      	mov	r4, r0
 800f2a4:	b19b      	cbz	r3, 800f2ce <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800f2a6:	2002      	movs	r0, #2
 800f2a8:	f7fd f976 	bl	800c598 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800f2ac:	2300      	movs	r3, #0
 800f2ae:	4620      	mov	r0, r4
 800f2b0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800f2b4:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800f2b8:	6823      	ldr	r3, [r4, #0]
 800f2ba:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800f2be:	f7ff fdbf 	bl	800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f2c2:	4601      	mov	r1, r0
 800f2c4:	4620      	mov	r0, r4
 800f2c6:	462b      	mov	r3, r5
 800f2c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f2cc:	4718      	bx	r3
 800f2ce:	bd70      	pop	{r4, r5, r6, pc}

0800f2d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800f2d0:	b538      	push	{r3, r4, r5, lr}
 800f2d2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800f2d6:	4604      	mov	r4, r0
 800f2d8:	460d      	mov	r5, r1
 800f2da:	428b      	cmp	r3, r1
 800f2dc:	d006      	beq.n	800f2ec <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800f2de:	6803      	ldr	r3, [r0, #0]
 800f2e0:	b929      	cbnz	r1, 800f2ee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800f2e2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f2e6:	4798      	blx	r3
 800f2e8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800f2ec:	bd38      	pop	{r3, r4, r5, pc}
 800f2ee:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800f2f2:	e7f8      	b.n	800f2e6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800f2f4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800f2f4:	4b0d      	ldr	r3, [pc, #52]	; (800f32c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800f2f6:	b510      	push	{r4, lr}
 800f2f8:	781b      	ldrb	r3, [r3, #0]
 800f2fa:	4604      	mov	r4, r0
 800f2fc:	b95b      	cbnz	r3, 800f316 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f2fe:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800f302:	2b02      	cmp	r3, #2
 800f304:	d007      	beq.n	800f316 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f306:	6840      	ldr	r0, [r0, #4]
 800f308:	f000 f90e 	bl	800f528 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800f30c:	b118      	cbz	r0, 800f316 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f30e:	6862      	ldr	r2, [r4, #4]
 800f310:	7a53      	ldrb	r3, [r2, #9]
 800f312:	2b00      	cmp	r3, #0
 800f314:	d0fc      	beq.n	800f310 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800f316:	f7fd fc07 	bl	800cb28 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800f31a:	4620      	mov	r0, r4
 800f31c:	2100      	movs	r1, #0
 800f31e:	f7ff ffd7 	bl	800f2d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f322:	4620      	mov	r0, r4
 800f324:	f7ff fd8c 	bl	800ee40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f328:	bd10      	pop	{r4, pc}
 800f32a:	bf00      	nop
 800f32c:	24001e7a 	.word	0x24001e7a

0800f330 <_ZN8touchgfx13DMA_Interface5flushEv>:
 800f330:	6803      	ldr	r3, [r0, #0]
 800f332:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f334:	4718      	bx	r3

0800f336 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800f336:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800f33a:	1a13      	subs	r3, r2, r0
 800f33c:	4258      	negs	r0, r3
 800f33e:	4158      	adcs	r0, r3
 800f340:	4770      	bx	lr

0800f342 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800f342:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800f346:	1a9b      	subs	r3, r3, r2
 800f348:	2b00      	cmp	r3, #0
 800f34a:	bfdc      	itt	le
 800f34c:	6882      	ldrle	r2, [r0, #8]
 800f34e:	189b      	addle	r3, r3, r2
 800f350:	2b01      	cmp	r3, #1
 800f352:	bfcc      	ite	gt
 800f354:	2000      	movgt	r0, #0
 800f356:	2001      	movle	r0, #1
 800f358:	4770      	bx	lr

0800f35a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800f35a:	6902      	ldr	r2, [r0, #16]
 800f35c:	6843      	ldr	r3, [r0, #4]
 800f35e:	2024      	movs	r0, #36	; 0x24
 800f360:	fb00 3002 	mla	r0, r0, r2, r3
 800f364:	4770      	bx	lr

0800f366 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800f366:	6803      	ldr	r3, [r0, #0]
 800f368:	691b      	ldr	r3, [r3, #16]
 800f36a:	4718      	bx	r3

0800f36c <_ZN8touchgfx13DMA_Interface7executeEv>:
 800f36c:	2301      	movs	r3, #1
 800f36e:	b570      	push	{r4, r5, r6, lr}
 800f370:	7203      	strb	r3, [r0, #8]
 800f372:	4604      	mov	r4, r0
 800f374:	6840      	ldr	r0, [r0, #4]
 800f376:	6803      	ldr	r3, [r0, #0]
 800f378:	699b      	ldr	r3, [r3, #24]
 800f37a:	4798      	blx	r3
 800f37c:	6803      	ldr	r3, [r0, #0]
 800f37e:	4605      	mov	r5, r0
 800f380:	2b40      	cmp	r3, #64	; 0x40
 800f382:	d00c      	beq.n	800f39e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f384:	d810      	bhi.n	800f3a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800f386:	2b04      	cmp	r3, #4
 800f388:	d01d      	beq.n	800f3c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800f38a:	d804      	bhi.n	800f396 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800f38c:	2b01      	cmp	r3, #1
 800f38e:	d006      	beq.n	800f39e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f390:	2b02      	cmp	r3, #2
 800f392:	d02c      	beq.n	800f3ee <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800f394:	bd70      	pop	{r4, r5, r6, pc}
 800f396:	2b08      	cmp	r3, #8
 800f398:	d01d      	beq.n	800f3d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800f39a:	2b20      	cmp	r3, #32
 800f39c:	d1fa      	bne.n	800f394 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800f39e:	6823      	ldr	r3, [r4, #0]
 800f3a0:	4620      	mov	r0, r4
 800f3a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f3a4:	4798      	blx	r3
 800f3a6:	e013      	b.n	800f3d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800f3a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f3ac:	d0f7      	beq.n	800f39e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f3ae:	d804      	bhi.n	800f3ba <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800f3b0:	2b80      	cmp	r3, #128	; 0x80
 800f3b2:	d0f4      	beq.n	800f39e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f3b4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800f3b8:	e7f0      	b.n	800f39c <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800f3ba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800f3be:	d0ee      	beq.n	800f39e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f3c0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800f3c4:	e7e5      	b.n	800f392 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800f3c6:	6823      	ldr	r3, [r4, #0]
 800f3c8:	7f01      	ldrb	r1, [r0, #28]
 800f3ca:	4620      	mov	r0, r4
 800f3cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f3ce:	4798      	blx	r3
 800f3d0:	6823      	ldr	r3, [r4, #0]
 800f3d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f3d4:	e006      	b.n	800f3e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800f3d6:	6823      	ldr	r3, [r4, #0]
 800f3d8:	7f01      	ldrb	r1, [r0, #28]
 800f3da:	4620      	mov	r0, r4
 800f3dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f3de:	4798      	blx	r3
 800f3e0:	6823      	ldr	r3, [r4, #0]
 800f3e2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f3e4:	4629      	mov	r1, r5
 800f3e6:	4620      	mov	r0, r4
 800f3e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f3ec:	4718      	bx	r3
 800f3ee:	6823      	ldr	r3, [r4, #0]
 800f3f0:	4620      	mov	r0, r4
 800f3f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f3f4:	4798      	blx	r3
 800f3f6:	e7f3      	b.n	800f3e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800f3f8 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800f3f8:	4770      	bx	lr

0800f3fa <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800f3fa:	4770      	bx	lr

0800f3fc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800f3fc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800f400:	b510      	push	{r4, lr}
 800f402:	1ad2      	subs	r2, r2, r3
 800f404:	2a00      	cmp	r2, #0
 800f406:	bfdc      	itt	le
 800f408:	6884      	ldrle	r4, [r0, #8]
 800f40a:	1912      	addle	r2, r2, r4
 800f40c:	2a01      	cmp	r2, #1
 800f40e:	dd16      	ble.n	800f43e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800f410:	6842      	ldr	r2, [r0, #4]
 800f412:	2424      	movs	r4, #36	; 0x24
 800f414:	fb04 2303 	mla	r3, r4, r3, r2
 800f418:	f101 0220 	add.w	r2, r1, #32
 800f41c:	f851 4b04 	ldr.w	r4, [r1], #4
 800f420:	4291      	cmp	r1, r2
 800f422:	f843 4b04 	str.w	r4, [r3], #4
 800f426:	d1f9      	bne.n	800f41c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800f428:	780a      	ldrb	r2, [r1, #0]
 800f42a:	701a      	strb	r2, [r3, #0]
 800f42c:	68c3      	ldr	r3, [r0, #12]
 800f42e:	6882      	ldr	r2, [r0, #8]
 800f430:	f3bf 8f5b 	dmb	ish
 800f434:	3301      	adds	r3, #1
 800f436:	429a      	cmp	r2, r3
 800f438:	bfd8      	it	le
 800f43a:	1a9b      	suble	r3, r3, r2
 800f43c:	60c3      	str	r3, [r0, #12]
 800f43e:	bd10      	pop	{r4, pc}

0800f440 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800f440:	6903      	ldr	r3, [r0, #16]
 800f442:	6882      	ldr	r2, [r0, #8]
 800f444:	f3bf 8f5b 	dmb	ish
 800f448:	3301      	adds	r3, #1
 800f44a:	429a      	cmp	r2, r3
 800f44c:	bfd8      	it	le
 800f44e:	1a9b      	suble	r3, r3, r2
 800f450:	6103      	str	r3, [r0, #16]
 800f452:	4770      	bx	lr

0800f454 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800f454:	b570      	push	{r4, r5, r6, lr}
 800f456:	4604      	mov	r4, r0
 800f458:	460e      	mov	r6, r1
 800f45a:	6860      	ldr	r0, [r4, #4]
 800f45c:	6803      	ldr	r3, [r0, #0]
 800f45e:	685b      	ldr	r3, [r3, #4]
 800f460:	4798      	blx	r3
 800f462:	2800      	cmp	r0, #0
 800f464:	d1f9      	bne.n	800f45a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800f466:	4d0d      	ldr	r5, [pc, #52]	; (800f49c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800f468:	6828      	ldr	r0, [r5, #0]
 800f46a:	6803      	ldr	r3, [r0, #0]
 800f46c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f46e:	4798      	blx	r3
 800f470:	f7fd fb7c 	bl	800cb6c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800f474:	6828      	ldr	r0, [r5, #0]
 800f476:	2101      	movs	r1, #1
 800f478:	f7ff ff2a 	bl	800f2d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f47c:	6860      	ldr	r0, [r4, #4]
 800f47e:	4631      	mov	r1, r6
 800f480:	6803      	ldr	r3, [r0, #0]
 800f482:	689b      	ldr	r3, [r3, #8]
 800f484:	4798      	blx	r3
 800f486:	6823      	ldr	r3, [r4, #0]
 800f488:	4620      	mov	r0, r4
 800f48a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f48c:	4798      	blx	r3
 800f48e:	6828      	ldr	r0, [r5, #0]
 800f490:	6803      	ldr	r3, [r0, #0]
 800f492:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f496:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800f498:	4718      	bx	r3
 800f49a:	bf00      	nop
 800f49c:	24001e7c 	.word	0x24001e7c

0800f4a0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800f4a0:	b508      	push	{r3, lr}
 800f4a2:	f7fd fb41 	bl	800cb28 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800f4a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f4aa:	f7fd bb53 	b.w	800cb54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800f4ae <_ZN8touchgfx13DMA_Interface5startEv>:
 800f4ae:	b510      	push	{r4, lr}
 800f4b0:	4604      	mov	r4, r0
 800f4b2:	6840      	ldr	r0, [r0, #4]
 800f4b4:	6803      	ldr	r3, [r0, #0]
 800f4b6:	681b      	ldr	r3, [r3, #0]
 800f4b8:	4798      	blx	r3
 800f4ba:	b948      	cbnz	r0, 800f4d0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800f4bc:	7a63      	ldrb	r3, [r4, #9]
 800f4be:	b13b      	cbz	r3, 800f4d0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800f4c0:	7a23      	ldrb	r3, [r4, #8]
 800f4c2:	b92b      	cbnz	r3, 800f4d0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800f4c4:	6823      	ldr	r3, [r4, #0]
 800f4c6:	4620      	mov	r0, r4
 800f4c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f4ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f4ce:	4718      	bx	r3
 800f4d0:	bd10      	pop	{r4, pc}

0800f4d2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800f4d2:	b570      	push	{r4, r5, r6, lr}
 800f4d4:	4604      	mov	r4, r0
 800f4d6:	6840      	ldr	r0, [r0, #4]
 800f4d8:	6803      	ldr	r3, [r0, #0]
 800f4da:	681b      	ldr	r3, [r3, #0]
 800f4dc:	4798      	blx	r3
 800f4de:	4605      	mov	r5, r0
 800f4e0:	b930      	cbnz	r0, 800f4f0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800f4e2:	7a23      	ldrb	r3, [r4, #8]
 800f4e4:	b123      	cbz	r3, 800f4f0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800f4e6:	6860      	ldr	r0, [r4, #4]
 800f4e8:	6803      	ldr	r3, [r0, #0]
 800f4ea:	695b      	ldr	r3, [r3, #20]
 800f4ec:	4798      	blx	r3
 800f4ee:	7225      	strb	r5, [r4, #8]
 800f4f0:	6860      	ldr	r0, [r4, #4]
 800f4f2:	6803      	ldr	r3, [r0, #0]
 800f4f4:	681b      	ldr	r3, [r3, #0]
 800f4f6:	4798      	blx	r3
 800f4f8:	b928      	cbnz	r0, 800f506 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800f4fa:	6823      	ldr	r3, [r4, #0]
 800f4fc:	4620      	mov	r0, r4
 800f4fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f504:	4718      	bx	r3
 800f506:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f50a:	f7fd bb3b 	b.w	800cb84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800f510 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800f510:	b510      	push	{r4, lr}
 800f512:	6082      	str	r2, [r0, #8]
 800f514:	2200      	movs	r2, #0
 800f516:	4c03      	ldr	r4, [pc, #12]	; (800f524 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800f518:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800f51c:	e9c0 4100 	strd	r4, r1, [r0]
 800f520:	bd10      	pop	{r4, pc}
 800f522:	bf00      	nop
 800f524:	08024308 	.word	0x08024308

0800f528 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800f528:	6840      	ldr	r0, [r0, #4]
 800f52a:	6803      	ldr	r3, [r0, #0]
 800f52c:	681b      	ldr	r3, [r3, #0]
 800f52e:	4718      	bx	r3

0800f530 <_ZN8touchgfx8TextArea8setWidthEs>:
 800f530:	b530      	push	{r4, r5, lr}
 800f532:	b085      	sub	sp, #20
 800f534:	6803      	ldr	r3, [r0, #0]
 800f536:	4604      	mov	r4, r0
 800f538:	8101      	strh	r1, [r0, #8]
 800f53a:	466d      	mov	r5, sp
 800f53c:	4601      	mov	r1, r0
 800f53e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800f542:	343c      	adds	r4, #60	; 0x3c
 800f544:	4628      	mov	r0, r5
 800f546:	4798      	blx	r3
 800f548:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f54c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f550:	b005      	add	sp, #20
 800f552:	bd30      	pop	{r4, r5, pc}

0800f554 <_ZN8touchgfx8TextArea9setHeightEs>:
 800f554:	b530      	push	{r4, r5, lr}
 800f556:	b085      	sub	sp, #20
 800f558:	6803      	ldr	r3, [r0, #0]
 800f55a:	4604      	mov	r4, r0
 800f55c:	8141      	strh	r1, [r0, #10]
 800f55e:	466d      	mov	r5, sp
 800f560:	4601      	mov	r1, r0
 800f562:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800f566:	343c      	adds	r4, #60	; 0x3c
 800f568:	4628      	mov	r0, r5
 800f56a:	4798      	blx	r3
 800f56c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f570:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f574:	b005      	add	sp, #20
 800f576:	bd30      	pop	{r4, r5, pc}

0800f578 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800f578:	2200      	movs	r2, #0
 800f57a:	8002      	strh	r2, [r0, #0]
 800f57c:	8042      	strh	r2, [r0, #2]
 800f57e:	8082      	strh	r2, [r0, #4]
 800f580:	80c2      	strh	r2, [r0, #6]
 800f582:	4770      	bx	lr

0800f584 <_ZN8touchgfx8TextArea8setAlphaEh>:
 800f584:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800f588:	4770      	bx	lr
	...

0800f58c <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800f58c:	b570      	push	{r4, r5, r6, lr}
 800f58e:	6803      	ldr	r3, [r0, #0]
 800f590:	4604      	mov	r4, r0
 800f592:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f594:	460d      	mov	r5, r1
 800f596:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800f598:	4b08      	ldr	r3, [pc, #32]	; (800f5bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 800f59a:	681b      	ldr	r3, [r3, #0]
 800f59c:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800f5a0:	4b07      	ldr	r3, [pc, #28]	; (800f5c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 800f5a2:	681b      	ldr	r3, [r3, #0]
 800f5a4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800f5a8:	6803      	ldr	r3, [r0, #0]
 800f5aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f5ac:	4798      	blx	r3
 800f5ae:	1a29      	subs	r1, r5, r0
 800f5b0:	4633      	mov	r3, r6
 800f5b2:	4620      	mov	r0, r4
 800f5b4:	b209      	sxth	r1, r1
 800f5b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f5ba:	4718      	bx	r3
 800f5bc:	24001ecc 	.word	0x24001ecc
 800f5c0:	24001ed4 	.word	0x24001ed4

0800f5c4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800f5c4:	b570      	push	{r4, r5, r6, lr}
 800f5c6:	6803      	ldr	r3, [r0, #0]
 800f5c8:	4604      	mov	r4, r0
 800f5ca:	4615      	mov	r5, r2
 800f5cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f5ce:	4798      	blx	r3
 800f5d0:	6823      	ldr	r3, [r4, #0]
 800f5d2:	4629      	mov	r1, r5
 800f5d4:	4620      	mov	r0, r4
 800f5d6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f5d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f5dc:	4718      	bx	r3

0800f5de <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800f5de:	2000      	movs	r0, #0
 800f5e0:	4770      	bx	lr

0800f5e2 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800f5e2:	2000      	movs	r0, #0
 800f5e4:	4770      	bx	lr
	...

0800f5e8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800f5e8:	4b07      	ldr	r3, [pc, #28]	; (800f608 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800f5ea:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f5ec:	881b      	ldrh	r3, [r3, #0]
 800f5ee:	4293      	cmp	r3, r2
 800f5f0:	bf81      	itttt	hi
 800f5f2:	4b06      	ldrhi	r3, [pc, #24]	; (800f60c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800f5f4:	681b      	ldrhi	r3, [r3, #0]
 800f5f6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800f5fa:	7858      	ldrbhi	r0, [r3, #1]
 800f5fc:	bf8c      	ite	hi
 800f5fe:	f000 0003 	andhi.w	r0, r0, #3
 800f602:	2000      	movls	r0, #0
 800f604:	4770      	bx	lr
 800f606:	bf00      	nop
 800f608:	24001ed0 	.word	0x24001ed0
 800f60c:	24001ecc 	.word	0x24001ecc

0800f610 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800f610:	4b11      	ldr	r3, [pc, #68]	; (800f658 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800f612:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f616:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f618:	4604      	mov	r4, r0
 800f61a:	881b      	ldrh	r3, [r3, #0]
 800f61c:	428b      	cmp	r3, r1
 800f61e:	d918      	bls.n	800f652 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800f620:	6803      	ldr	r3, [r0, #0]
 800f622:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800f624:	4b0d      	ldr	r3, [pc, #52]	; (800f65c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800f626:	6818      	ldr	r0, [r3, #0]
 800f628:	f7fc fd36 	bl	800c098 <_ZNK8touchgfx5Texts7getTextEt>
 800f62c:	6823      	ldr	r3, [r4, #0]
 800f62e:	4606      	mov	r6, r0
 800f630:	4620      	mov	r0, r4
 800f632:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f634:	4798      	blx	r3
 800f636:	6823      	ldr	r3, [r4, #0]
 800f638:	4607      	mov	r7, r0
 800f63a:	4620      	mov	r0, r4
 800f63c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f640:	4798      	blx	r3
 800f642:	463a      	mov	r2, r7
 800f644:	4603      	mov	r3, r0
 800f646:	4631      	mov	r1, r6
 800f648:	4620      	mov	r0, r4
 800f64a:	46ac      	mov	ip, r5
 800f64c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f650:	4760      	bx	ip
 800f652:	2000      	movs	r0, #0
 800f654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f658:	24001ed0 	.word	0x24001ed0
 800f65c:	24001ed8 	.word	0x24001ed8

0800f660 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800f660:	4b18      	ldr	r3, [pc, #96]	; (800f6c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800f662:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f666:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f668:	4604      	mov	r4, r0
 800f66a:	881b      	ldrh	r3, [r3, #0]
 800f66c:	428b      	cmp	r3, r1
 800f66e:	d926      	bls.n	800f6be <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800f670:	4b15      	ldr	r3, [pc, #84]	; (800f6c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800f672:	681b      	ldr	r3, [r3, #0]
 800f674:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800f678:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800f67c:	4b13      	ldr	r3, [pc, #76]	; (800f6cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800f67e:	7855      	ldrb	r5, [r2, #1]
 800f680:	681b      	ldr	r3, [r3, #0]
 800f682:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800f686:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800f68a:	6833      	ldr	r3, [r6, #0]
 800f68c:	69df      	ldr	r7, [r3, #28]
 800f68e:	4b10      	ldr	r3, [pc, #64]	; (800f6d0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800f690:	6818      	ldr	r0, [r3, #0]
 800f692:	f7fc fd01 	bl	800c098 <_ZNK8touchgfx5Texts7getTextEt>
 800f696:	6823      	ldr	r3, [r4, #0]
 800f698:	4680      	mov	r8, r0
 800f69a:	4620      	mov	r0, r4
 800f69c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f69e:	4798      	blx	r3
 800f6a0:	6823      	ldr	r3, [r4, #0]
 800f6a2:	4681      	mov	r9, r0
 800f6a4:	4620      	mov	r0, r4
 800f6a6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f6aa:	4798      	blx	r3
 800f6ac:	464b      	mov	r3, r9
 800f6ae:	9000      	str	r0, [sp, #0]
 800f6b0:	4642      	mov	r2, r8
 800f6b2:	4629      	mov	r1, r5
 800f6b4:	4630      	mov	r0, r6
 800f6b6:	47b8      	blx	r7
 800f6b8:	b003      	add	sp, #12
 800f6ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f6be:	2000      	movs	r0, #0
 800f6c0:	e7fa      	b.n	800f6b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800f6c2:	bf00      	nop
 800f6c4:	24001ed0 	.word	0x24001ed0
 800f6c8:	24001ecc 	.word	0x24001ecc
 800f6cc:	24001ed4 	.word	0x24001ed4
 800f6d0:	24001ed8 	.word	0x24001ed8

0800f6d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800f6d4:	b40e      	push	{r1, r2, r3}
 800f6d6:	4b30      	ldr	r3, [pc, #192]	; (800f798 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800f6d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f6dc:	881a      	ldrh	r2, [r3, #0]
 800f6de:	b09d      	sub	sp, #116	; 0x74
 800f6e0:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800f6e2:	4604      	mov	r4, r0
 800f6e4:	429a      	cmp	r2, r3
 800f6e6:	d954      	bls.n	800f792 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800f6e8:	aa26      	add	r2, sp, #152	; 0x98
 800f6ea:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800f79c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800f6ee:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800f7a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800f6f2:	9202      	str	r2, [sp, #8]
 800f6f4:	f8d9 2000 	ldr.w	r2, [r9]
 800f6f8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800f6fc:	f8d8 3000 	ldr.w	r3, [r8]
 800f700:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f704:	682b      	ldr	r3, [r5, #0]
 800f706:	4628      	mov	r0, r5
 800f708:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f70a:	4798      	blx	r3
 800f70c:	4606      	mov	r6, r0
 800f70e:	b207      	sxth	r7, r0
 800f710:	a803      	add	r0, sp, #12
 800f712:	f003 fcbb 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 800f716:	682b      	ldr	r3, [r5, #0]
 800f718:	4628      	mov	r0, r5
 800f71a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f71c:	4798      	blx	r3
 800f71e:	682b      	ldr	r3, [r5, #0]
 800f720:	4682      	mov	sl, r0
 800f722:	4628      	mov	r0, r5
 800f724:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f726:	4798      	blx	r3
 800f728:	4653      	mov	r3, sl
 800f72a:	9000      	str	r0, [sp, #0]
 800f72c:	a803      	add	r0, sp, #12
 800f72e:	9a02      	ldr	r2, [sp, #8]
 800f730:	9925      	ldr	r1, [sp, #148]	; 0x94
 800f732:	f003 fd06 	bl	8013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f736:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f738:	f8d9 3000 	ldr.w	r3, [r9]
 800f73c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800f740:	8925      	ldrh	r5, [r4, #8]
 800f742:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800f746:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800f74a:	eba5 050c 	sub.w	r5, r5, ip
 800f74e:	784a      	ldrb	r2, [r1, #1]
 800f750:	f8d8 3000 	ldr.w	r3, [r8]
 800f754:	b22d      	sxth	r5, r5
 800f756:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800f75a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800f75e:	9500      	str	r5, [sp, #0]
 800f760:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800f764:	a803      	add	r0, sp, #12
 800f766:	f001 fb3f 	bl	8010de8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800f76a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800f76e:	b203      	sxth	r3, r0
 800f770:	18b9      	adds	r1, r7, r2
 800f772:	2900      	cmp	r1, #0
 800f774:	dd0b      	ble.n	800f78e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800f776:	3b01      	subs	r3, #1
 800f778:	fb13 f302 	smulbb	r3, r3, r2
 800f77c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800f780:	b21f      	sxth	r7, r3
 800f782:	4638      	mov	r0, r7
 800f784:	b01d      	add	sp, #116	; 0x74
 800f786:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f78a:	b003      	add	sp, #12
 800f78c:	4770      	bx	lr
 800f78e:	2b00      	cmp	r3, #0
 800f790:	dcf7      	bgt.n	800f782 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800f792:	2700      	movs	r7, #0
 800f794:	e7f5      	b.n	800f782 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800f796:	bf00      	nop
 800f798:	24001ed0 	.word	0x24001ed0
 800f79c:	24001ecc 	.word	0x24001ecc
 800f7a0:	24001ed4 	.word	0x24001ed4

0800f7a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800f7a4:	4bbd      	ldr	r3, [pc, #756]	; (800fa9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800f7a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7aa:	460c      	mov	r4, r1
 800f7ac:	881b      	ldrh	r3, [r3, #0]
 800f7ae:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800f7b0:	b0a9      	sub	sp, #164	; 0xa4
 800f7b2:	4680      	mov	r8, r0
 800f7b4:	428b      	cmp	r3, r1
 800f7b6:	d809      	bhi.n	800f7cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800f7b8:	2300      	movs	r3, #0
 800f7ba:	f04f 32ff 	mov.w	r2, #4294967295
 800f7be:	6083      	str	r3, [r0, #8]
 800f7c0:	e9c0 3200 	strd	r3, r2, [r0]
 800f7c4:	4640      	mov	r0, r8
 800f7c6:	b029      	add	sp, #164	; 0xa4
 800f7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7cc:	4eb4      	ldr	r6, [pc, #720]	; (800faa0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800f7ce:	6833      	ldr	r3, [r6, #0]
 800f7d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800f7d4:	4bb3      	ldr	r3, [pc, #716]	; (800faa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800f7d6:	681b      	ldr	r3, [r3, #0]
 800f7d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f7dc:	4bb2      	ldr	r3, [pc, #712]	; (800faa8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800f7de:	6818      	ldr	r0, [r3, #0]
 800f7e0:	f7fc fc5a 	bl	800c098 <_ZNK8touchgfx5Texts7getTextEt>
 800f7e4:	682b      	ldr	r3, [r5, #0]
 800f7e6:	4681      	mov	r9, r0
 800f7e8:	4628      	mov	r0, r5
 800f7ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f7ec:	4798      	blx	r3
 800f7ee:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800f7f0:	b203      	sxth	r3, r0
 800f7f2:	4682      	mov	sl, r0
 800f7f4:	4407      	add	r7, r0
 800f7f6:	a80f      	add	r0, sp, #60	; 0x3c
 800f7f8:	9304      	str	r3, [sp, #16]
 800f7fa:	b2bb      	uxth	r3, r7
 800f7fc:	9303      	str	r3, [sp, #12]
 800f7fe:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800f802:	2b00      	cmp	r3, #0
 800f804:	f040 80a5 	bne.w	800f952 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800f808:	f003 fc40 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 800f80c:	682b      	ldr	r3, [r5, #0]
 800f80e:	4628      	mov	r0, r5
 800f810:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f812:	4798      	blx	r3
 800f814:	682b      	ldr	r3, [r5, #0]
 800f816:	4606      	mov	r6, r0
 800f818:	4628      	mov	r0, r5
 800f81a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f81c:	4798      	blx	r3
 800f81e:	6823      	ldr	r3, [r4, #0]
 800f820:	4607      	mov	r7, r0
 800f822:	4620      	mov	r0, r4
 800f824:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f826:	4798      	blx	r3
 800f828:	6823      	ldr	r3, [r4, #0]
 800f82a:	4683      	mov	fp, r0
 800f82c:	4620      	mov	r0, r4
 800f82e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f832:	4798      	blx	r3
 800f834:	463b      	mov	r3, r7
 800f836:	4649      	mov	r1, r9
 800f838:	4632      	mov	r2, r6
 800f83a:	2600      	movs	r6, #0
 800f83c:	e9cd b000 	strd	fp, r0, [sp]
 800f840:	a80f      	add	r0, sp, #60	; 0x3c
 800f842:	4637      	mov	r7, r6
 800f844:	f003 fc92 	bl	801316c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f848:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f84c:	f8df b250 	ldr.w	fp, [pc, #592]	; 800faa0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800f850:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f854:	bf0c      	ite	eq
 800f856:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800f85a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800f85e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f860:	4629      	mov	r1, r5
 800f862:	f8db 3000 	ldr.w	r3, [fp]
 800f866:	a80f      	add	r0, sp, #60	; 0x3c
 800f868:	3701      	adds	r7, #1
 800f86a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f86e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f872:	b2bf      	uxth	r7, r7
 800f874:	785b      	ldrb	r3, [r3, #1]
 800f876:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f87a:	f000 ffd0 	bl	801081e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f87e:	9b03      	ldr	r3, [sp, #12]
 800f880:	4286      	cmp	r6, r0
 800f882:	eba9 0903 	sub.w	r9, r9, r3
 800f886:	bfb8      	it	lt
 800f888:	4606      	movlt	r6, r0
 800f88a:	a80f      	add	r0, sp, #60	; 0x3c
 800f88c:	fa0f f989 	sxth.w	r9, r9
 800f890:	b236      	sxth	r6, r6
 800f892:	f003 fc22 	bl	80130da <_ZN8touchgfx12TextProvider11endOfStringEv>
 800f896:	b918      	cbnz	r0, 800f8a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800f898:	7a2b      	ldrb	r3, [r5, #8]
 800f89a:	444b      	add	r3, r9
 800f89c:	2b00      	cmp	r3, #0
 800f89e:	dcde      	bgt.n	800f85e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800f8a0:	9b03      	ldr	r3, [sp, #12]
 800f8a2:	4620      	mov	r0, r4
 800f8a4:	9a04      	ldr	r2, [sp, #16]
 800f8a6:	fb13 f707 	smulbb	r7, r3, r7
 800f8aa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f8ac:	f895 9009 	ldrb.w	r9, [r5, #9]
 800f8b0:	1aff      	subs	r7, r7, r3
 800f8b2:	b2bf      	uxth	r7, r7
 800f8b4:	b23b      	sxth	r3, r7
 800f8b6:	429a      	cmp	r2, r3
 800f8b8:	bfa8      	it	ge
 800f8ba:	4657      	movge	r7, sl
 800f8bc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f8c0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f8c4:	6823      	ldr	r3, [r4, #0]
 800f8c6:	444f      	add	r7, r9
 800f8c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f8ca:	bf08      	it	eq
 800f8cc:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800f8d0:	fa1f f987 	uxth.w	r9, r7
 800f8d4:	bf18      	it	ne
 800f8d6:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800f8da:	4798      	blx	r3
 800f8dc:	2801      	cmp	r0, #1
 800f8de:	fa0f f789 	sxth.w	r7, r9
 800f8e2:	b2b3      	uxth	r3, r6
 800f8e4:	f000 80e2 	beq.w	800faac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800f8e8:	2802      	cmp	r0, #2
 800f8ea:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800f8ee:	f000 80e3 	beq.w	800fab8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800f8f2:	7aea      	ldrb	r2, [r5, #11]
 800f8f4:	b236      	sxth	r6, r6
 800f8f6:	7b2d      	ldrb	r5, [r5, #12]
 800f8f8:	1ab6      	subs	r6, r6, r2
 800f8fa:	442a      	add	r2, r5
 800f8fc:	fa1f fa86 	uxth.w	sl, r6
 800f900:	4413      	add	r3, r2
 800f902:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800f906:	fa0f fb8a 	sxth.w	fp, sl
 800f90a:	b29b      	uxth	r3, r3
 800f90c:	2a02      	cmp	r2, #2
 800f90e:	b21e      	sxth	r6, r3
 800f910:	f000 80d6 	beq.w	800fac0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800f914:	2a03      	cmp	r2, #3
 800f916:	f000 80de 	beq.w	800fad6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800f91a:	2a01      	cmp	r2, #1
 800f91c:	f040 80e6 	bne.w	800faec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800f920:	8925      	ldrh	r5, [r4, #8]
 800f922:	4633      	mov	r3, r6
 800f924:	463e      	mov	r6, r7
 800f926:	eba5 0909 	sub.w	r9, r5, r9
 800f92a:	461f      	mov	r7, r3
 800f92c:	465d      	mov	r5, fp
 800f92e:	fa0f fb89 	sxth.w	fp, r9
 800f932:	4b5d      	ldr	r3, [pc, #372]	; (800faa8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800f934:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f936:	6818      	ldr	r0, [r3, #0]
 800f938:	f7fc fbae 	bl	800c098 <_ZNK8touchgfx5Texts7getTextEt>
 800f93c:	f8a8 b000 	strh.w	fp, [r8]
 800f940:	f8a8 5002 	strh.w	r5, [r8, #2]
 800f944:	f8a8 6004 	strh.w	r6, [r8, #4]
 800f948:	f8a8 7006 	strh.w	r7, [r8, #6]
 800f94c:	f8c8 0008 	str.w	r0, [r8, #8]
 800f950:	e738      	b.n	800f7c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800f952:	f003 fb9b 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 800f956:	682b      	ldr	r3, [r5, #0]
 800f958:	4628      	mov	r0, r5
 800f95a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f95c:	4798      	blx	r3
 800f95e:	682b      	ldr	r3, [r5, #0]
 800f960:	4607      	mov	r7, r0
 800f962:	4628      	mov	r0, r5
 800f964:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f966:	4798      	blx	r3
 800f968:	6823      	ldr	r3, [r4, #0]
 800f96a:	4683      	mov	fp, r0
 800f96c:	4620      	mov	r0, r4
 800f96e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f970:	4798      	blx	r3
 800f972:	6822      	ldr	r2, [r4, #0]
 800f974:	9005      	str	r0, [sp, #20]
 800f976:	4620      	mov	r0, r4
 800f978:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800f97c:	4790      	blx	r2
 800f97e:	9b05      	ldr	r3, [sp, #20]
 800f980:	463a      	mov	r2, r7
 800f982:	4649      	mov	r1, r9
 800f984:	9001      	str	r0, [sp, #4]
 800f986:	a80f      	add	r0, sp, #60	; 0x3c
 800f988:	9300      	str	r3, [sp, #0]
 800f98a:	465b      	mov	r3, fp
 800f98c:	f003 fbee 	bl	801316c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f990:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f994:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800f998:	af0f      	add	r7, sp, #60	; 0x3c
 800f99a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f99e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f9a2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f9a4:	bf0a      	itet	eq
 800f9a6:	464a      	moveq	r2, r9
 800f9a8:	461a      	movne	r2, r3
 800f9aa:	4699      	moveq	r9, r3
 800f9ac:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800f9b0:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800f9b4:	1ad2      	subs	r2, r2, r3
 800f9b6:	6833      	ldr	r3, [r6, #0]
 800f9b8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800f9bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800f9c0:	7859      	ldrb	r1, [r3, #1]
 800f9c2:	2300      	movs	r3, #0
 800f9c4:	9707      	str	r7, [sp, #28]
 800f9c6:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800f9ca:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f9ce:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800f9d2:	f88d 1020 	strb.w	r1, [sp, #32]
 800f9d6:	9509      	str	r5, [sp, #36]	; 0x24
 800f9d8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800f9dc:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800f9e0:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800f9e4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f9e8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800f9ec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f9f0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800f9f4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f9f8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800f9fc:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800fa00:	b350      	cbz	r0, 800fa58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800fa02:	682b      	ldr	r3, [r5, #0]
 800fa04:	4628      	mov	r0, r5
 800fa06:	695b      	ldr	r3, [r3, #20]
 800fa08:	4798      	blx	r3
 800fa0a:	4607      	mov	r7, r0
 800fa0c:	b320      	cbz	r0, 800fa58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800fa0e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fa10:	4639      	mov	r1, r7
 800fa12:	6803      	ldr	r3, [r0, #0]
 800fa14:	68db      	ldr	r3, [r3, #12]
 800fa16:	4798      	blx	r3
 800fa18:	4606      	mov	r6, r0
 800fa1a:	b1e8      	cbz	r0, 800fa58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800fa1c:	7b43      	ldrb	r3, [r0, #13]
 800fa1e:	7a82      	ldrb	r2, [r0, #10]
 800fa20:	005b      	lsls	r3, r3, #1
 800fa22:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fa26:	4313      	orrs	r3, r2
 800fa28:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800fa2c:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800fa30:	2b06      	cmp	r3, #6
 800fa32:	d111      	bne.n	800fa58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800fa34:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fa36:	4632      	mov	r2, r6
 800fa38:	4639      	mov	r1, r7
 800fa3a:	6803      	ldr	r3, [r0, #0]
 800fa3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fa3e:	4798      	blx	r3
 800fa40:	7b73      	ldrb	r3, [r6, #13]
 800fa42:	005b      	lsls	r3, r3, #1
 800fa44:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fa48:	7ab3      	ldrb	r3, [r6, #10]
 800fa4a:	4313      	orrs	r3, r2
 800fa4c:	4418      	add	r0, r3
 800fa4e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800fa52:	4418      	add	r0, r3
 800fa54:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800fa58:	2600      	movs	r6, #0
 800fa5a:	4637      	mov	r7, r6
 800fa5c:	a806      	add	r0, sp, #24
 800fa5e:	3701      	adds	r7, #1
 800fa60:	f001 f8bf 	bl	8010be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800fa64:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800fa68:	9b03      	ldr	r3, [sp, #12]
 800fa6a:	b2bf      	uxth	r7, r7
 800fa6c:	4286      	cmp	r6, r0
 800fa6e:	eba9 0903 	sub.w	r9, r9, r3
 800fa72:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800fa76:	bfb8      	it	lt
 800fa78:	4606      	movlt	r6, r0
 800fa7a:	fa0f f989 	sxth.w	r9, r9
 800fa7e:	b236      	sxth	r6, r6
 800fa80:	2b00      	cmp	r3, #0
 800fa82:	f43f af0d 	beq.w	800f8a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800fa86:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800fa8a:	2b00      	cmp	r3, #0
 800fa8c:	f47f af08 	bne.w	800f8a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800fa90:	7a2b      	ldrb	r3, [r5, #8]
 800fa92:	444b      	add	r3, r9
 800fa94:	2b00      	cmp	r3, #0
 800fa96:	dce1      	bgt.n	800fa5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800fa98:	e702      	b.n	800f8a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800fa9a:	bf00      	nop
 800fa9c:	24001ed0 	.word	0x24001ed0
 800faa0:	24001ecc 	.word	0x24001ecc
 800faa4:	24001ed4 	.word	0x24001ed4
 800faa8:	24001ed8 	.word	0x24001ed8
 800faac:	ebaa 0606 	sub.w	r6, sl, r6
 800fab0:	2002      	movs	r0, #2
 800fab2:	fb96 f6f0 	sdiv	r6, r6, r0
 800fab6:	e71c      	b.n	800f8f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800fab8:	441e      	add	r6, r3
 800faba:	ebaa 0606 	sub.w	r6, sl, r6
 800fabe:	e718      	b.n	800f8f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800fac0:	8925      	ldrh	r5, [r4, #8]
 800fac2:	1aed      	subs	r5, r5, r3
 800fac4:	eba5 050a 	sub.w	r5, r5, sl
 800fac8:	fa0f fb85 	sxth.w	fp, r5
 800facc:	8965      	ldrh	r5, [r4, #10]
 800face:	eba5 0509 	sub.w	r5, r5, r9
 800fad2:	b22d      	sxth	r5, r5
 800fad4:	e72d      	b.n	800f932 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800fad6:	8965      	ldrh	r5, [r4, #10]
 800fad8:	f04f 0b00 	mov.w	fp, #0
 800fadc:	1aed      	subs	r5, r5, r3
 800fade:	4633      	mov	r3, r6
 800fae0:	463e      	mov	r6, r7
 800fae2:	eba5 050a 	sub.w	r5, r5, sl
 800fae6:	461f      	mov	r7, r3
 800fae8:	b22d      	sxth	r5, r5
 800faea:	e722      	b.n	800f932 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800faec:	2500      	movs	r5, #0
 800faee:	e720      	b.n	800f932 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800faf0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800faf0:	b513      	push	{r0, r1, r4, lr}
 800faf2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800faf6:	4604      	mov	r4, r0
 800faf8:	b1fb      	cbz	r3, 800fb3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800fafa:	4b16      	ldr	r3, [pc, #88]	; (800fb54 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800fafc:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800fafe:	881b      	ldrh	r3, [r3, #0]
 800fb00:	428b      	cmp	r3, r1
 800fb02:	d91a      	bls.n	800fb3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800fb04:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800fb08:	2b00      	cmp	r3, #0
 800fb0a:	dd16      	ble.n	800fb3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800fb0c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800fb10:	2b00      	cmp	r3, #0
 800fb12:	dd12      	ble.n	800fb3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800fb14:	4b10      	ldr	r3, [pc, #64]	; (800fb58 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800fb16:	6818      	ldr	r0, [r3, #0]
 800fb18:	f7fc fabe 	bl	800c098 <_ZNK8touchgfx5Texts7getTextEt>
 800fb1c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800fb20:	6822      	ldr	r2, [r4, #0]
 800fb22:	2b00      	cmp	r3, #0
 800fb24:	db06      	blt.n	800fb34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800fb26:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800fb2a:	2b00      	cmp	r3, #0
 800fb2c:	db02      	blt.n	800fb34 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800fb2e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800fb30:	4298      	cmp	r0, r3
 800fb32:	d004      	beq.n	800fb3e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800fb34:	6953      	ldr	r3, [r2, #20]
 800fb36:	4620      	mov	r0, r4
 800fb38:	4798      	blx	r3
 800fb3a:	b002      	add	sp, #8
 800fb3c:	bd10      	pop	{r4, pc}
 800fb3e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800fb42:	466b      	mov	r3, sp
 800fb44:	6912      	ldr	r2, [r2, #16]
 800fb46:	c903      	ldmia	r1, {r0, r1}
 800fb48:	e883 0003 	stmia.w	r3, {r0, r1}
 800fb4c:	4619      	mov	r1, r3
 800fb4e:	4620      	mov	r0, r4
 800fb50:	4790      	blx	r2
 800fb52:	e7f2      	b.n	800fb3a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800fb54:	24001ed0 	.word	0x24001ed0
 800fb58:	24001ed8 	.word	0x24001ed8

0800fb5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800fb5c:	4b45      	ldr	r3, [pc, #276]	; (800fc74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800fb5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb62:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800fb64:	b08e      	sub	sp, #56	; 0x38
 800fb66:	881b      	ldrh	r3, [r3, #0]
 800fb68:	4604      	mov	r4, r0
 800fb6a:	4293      	cmp	r3, r2
 800fb6c:	d97e      	bls.n	800fc6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800fb6e:	6808      	ldr	r0, [r1, #0]
 800fb70:	ab05      	add	r3, sp, #20
 800fb72:	6849      	ldr	r1, [r1, #4]
 800fb74:	4d40      	ldr	r5, [pc, #256]	; (800fc78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800fb76:	c303      	stmia	r3!, {r0, r1}
 800fb78:	4611      	mov	r1, r2
 800fb7a:	6828      	ldr	r0, [r5, #0]
 800fb7c:	f7fc fa8c 	bl	800c098 <_ZNK8touchgfx5Texts7getTextEt>
 800fb80:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800fb84:	2b00      	cmp	r3, #0
 800fb86:	db11      	blt.n	800fbac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800fb88:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800fb8c:	2b00      	cmp	r3, #0
 800fb8e:	db0d      	blt.n	800fbac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800fb90:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800fb92:	4298      	cmp	r0, r3
 800fb94:	d10a      	bne.n	800fbac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800fb96:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800fb9a:	ab09      	add	r3, sp, #36	; 0x24
 800fb9c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800fba0:	e883 0003 	stmia.w	r3, {r0, r1}
 800fba4:	4619      	mov	r1, r3
 800fba6:	a805      	add	r0, sp, #20
 800fba8:	f7fe fcc4 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 800fbac:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fbb0:	2b00      	cmp	r3, #0
 800fbb2:	dd5b      	ble.n	800fc6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800fbb4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fbb8:	2b00      	cmp	r3, #0
 800fbba:	dd57      	ble.n	800fc6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800fbbc:	4f2f      	ldr	r7, [pc, #188]	; (800fc7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800fbbe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800fbc0:	683b      	ldr	r3, [r7, #0]
 800fbc2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800fbc6:	4b2e      	ldr	r3, [pc, #184]	; (800fc80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800fbc8:	681b      	ldr	r3, [r3, #0]
 800fbca:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800fbce:	2e00      	cmp	r6, #0
 800fbd0:	d04c      	beq.n	800fc6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800fbd2:	6823      	ldr	r3, [r4, #0]
 800fbd4:	4620      	mov	r0, r4
 800fbd6:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800fbda:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800fbdc:	4798      	blx	r3
 800fbde:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800fbe0:	683b      	ldr	r3, [r7, #0]
 800fbe2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800fbe6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800fbea:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800fbee:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800fbf2:	785b      	ldrb	r3, [r3, #1]
 800fbf4:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800fbf8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800fbfc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800fbfe:	9609      	str	r6, [sp, #36]	; 0x24
 800fc00:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800fc04:	4b1f      	ldr	r3, [pc, #124]	; (800fc84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800fc06:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800fc0a:	681b      	ldr	r3, [r3, #0]
 800fc0c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800fc10:	910b      	str	r1, [sp, #44]	; 0x2c
 800fc12:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800fc16:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800fc1a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800fc1e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800fc22:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800fc26:	b10a      	cbz	r2, 800fc2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800fc28:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800fc2a:	b906      	cbnz	r6, 800fc2e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800fc2c:	689e      	ldr	r6, [r3, #8]
 800fc2e:	af07      	add	r7, sp, #28
 800fc30:	4621      	mov	r1, r4
 800fc32:	4638      	mov	r0, r7
 800fc34:	f002 fe74 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fc38:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800fc3a:	6828      	ldr	r0, [r5, #0]
 800fc3c:	f7fc fa2c 	bl	800c098 <_ZNK8touchgfx5Texts7getTextEt>
 800fc40:	6823      	ldr	r3, [r4, #0]
 800fc42:	4605      	mov	r5, r0
 800fc44:	4620      	mov	r0, r4
 800fc46:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fc48:	4798      	blx	r3
 800fc4a:	6823      	ldr	r3, [r4, #0]
 800fc4c:	4680      	mov	r8, r0
 800fc4e:	4620      	mov	r0, r4
 800fc50:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fc54:	4798      	blx	r3
 800fc56:	ab09      	add	r3, sp, #36	; 0x24
 800fc58:	9501      	str	r5, [sp, #4]
 800fc5a:	9300      	str	r3, [sp, #0]
 800fc5c:	ab05      	add	r3, sp, #20
 800fc5e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800fc62:	4630      	mov	r0, r6
 800fc64:	e897 0006 	ldmia.w	r7, {r1, r2}
 800fc68:	f7fc f9a7 	bl	800bfba <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800fc6c:	b00e      	add	sp, #56	; 0x38
 800fc6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc72:	bf00      	nop
 800fc74:	24001ed0 	.word	0x24001ed0
 800fc78:	24001ed8 	.word	0x24001ed8
 800fc7c:	24001ecc 	.word	0x24001ecc
 800fc80:	24001ed4 	.word	0x24001ed4
 800fc84:	24001e7c 	.word	0x24001e7c

0800fc88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800fc88:	b538      	push	{r3, r4, r5, lr}
 800fc8a:	4b0e      	ldr	r3, [pc, #56]	; (800fcc4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800fc8c:	4604      	mov	r4, r0
 800fc8e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800fc90:	881b      	ldrh	r3, [r3, #0]
 800fc92:	429a      	cmp	r2, r3
 800fc94:	d214      	bcs.n	800fcc0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800fc96:	6803      	ldr	r3, [r0, #0]
 800fc98:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800fc9a:	4798      	blx	r3
 800fc9c:	6823      	ldr	r3, [r4, #0]
 800fc9e:	4605      	mov	r5, r0
 800fca0:	4620      	mov	r0, r4
 800fca2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800fca4:	4798      	blx	r3
 800fca6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800fcaa:	b22d      	sxth	r5, r5
 800fcac:	4601      	mov	r1, r0
 800fcae:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800fcb2:	bf06      	itte	eq
 800fcb4:	4602      	moveq	r2, r0
 800fcb6:	4629      	moveq	r1, r5
 800fcb8:	462a      	movne	r2, r5
 800fcba:	4620      	mov	r0, r4
 800fcbc:	f7fb fc83 	bl	800b5c6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fcc0:	bd38      	pop	{r3, r4, r5, pc}
 800fcc2:	bf00      	nop
 800fcc4:	24001ed0 	.word	0x24001ed0

0800fcc8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800fcc8:	b530      	push	{r4, r5, lr}
 800fcca:	888b      	ldrh	r3, [r1, #4]
 800fccc:	b085      	sub	sp, #20
 800fcce:	4604      	mov	r4, r0
 800fcd0:	8583      	strh	r3, [r0, #44]	; 0x2c
 800fcd2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800fcd6:	b923      	cbnz	r3, 800fce2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800fcd8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800fcdc:	b90b      	cbnz	r3, 800fce2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800fcde:	f7ff ffd3 	bl	800fc88 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800fce2:	6823      	ldr	r3, [r4, #0]
 800fce4:	466d      	mov	r5, sp
 800fce6:	4621      	mov	r1, r4
 800fce8:	343c      	adds	r4, #60	; 0x3c
 800fcea:	4628      	mov	r0, r5
 800fcec:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800fcf0:	4798      	blx	r3
 800fcf2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800fcf6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800fcfa:	b005      	add	sp, #20
 800fcfc:	bd30      	pop	{r4, r5, pc}

0800fcfe <_ZNK8touchgfx3Box12getSolidRectEv>:
 800fcfe:	2300      	movs	r3, #0
 800fd00:	8083      	strh	r3, [r0, #4]
 800fd02:	80c3      	strh	r3, [r0, #6]
 800fd04:	8003      	strh	r3, [r0, #0]
 800fd06:	8043      	strh	r3, [r0, #2]
 800fd08:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800fd0c:	2bff      	cmp	r3, #255	; 0xff
 800fd0e:	bf01      	itttt	eq
 800fd10:	890b      	ldrheq	r3, [r1, #8]
 800fd12:	8083      	strheq	r3, [r0, #4]
 800fd14:	894b      	ldrheq	r3, [r1, #10]
 800fd16:	80c3      	strheq	r3, [r0, #6]
 800fd18:	4770      	bx	lr
	...

0800fd1c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800fd1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fd1e:	4604      	mov	r4, r0
 800fd20:	466b      	mov	r3, sp
 800fd22:	6808      	ldr	r0, [r1, #0]
 800fd24:	6849      	ldr	r1, [r1, #4]
 800fd26:	c303      	stmia	r3!, {r0, r1}
 800fd28:	6823      	ldr	r3, [r4, #0]
 800fd2a:	4669      	mov	r1, sp
 800fd2c:	4620      	mov	r0, r4
 800fd2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd30:	4798      	blx	r3
 800fd32:	4b08      	ldr	r3, [pc, #32]	; (800fd54 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800fd34:	681b      	ldr	r3, [r3, #0]
 800fd36:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800fd3a:	b10a      	cbz	r2, 800fd40 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800fd3c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fd3e:	b900      	cbnz	r0, 800fd42 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800fd40:	6898      	ldr	r0, [r3, #8]
 800fd42:	6803      	ldr	r3, [r0, #0]
 800fd44:	4669      	mov	r1, sp
 800fd46:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800fd48:	6a1d      	ldr	r5, [r3, #32]
 800fd4a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800fd4e:	47a8      	blx	r5
 800fd50:	b003      	add	sp, #12
 800fd52:	bd30      	pop	{r4, r5, pc}
 800fd54:	24001e7c 	.word	0x24001e7c

0800fd58 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800fd58:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800fd5c:	b12a      	cbz	r2, 800fd6a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800fd5e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800fd62:	b112      	cbz	r2, 800fd6a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800fd64:	6803      	ldr	r3, [r0, #0]
 800fd66:	695b      	ldr	r3, [r3, #20]
 800fd68:	4718      	bx	r3
 800fd6a:	4770      	bx	lr

0800fd6c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800fd6c:	b510      	push	{r4, lr}
 800fd6e:	6803      	ldr	r3, [r0, #0]
 800fd70:	460c      	mov	r4, r1
 800fd72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd74:	4798      	blx	r3
 800fd76:	1b03      	subs	r3, r0, r4
 800fd78:	4258      	negs	r0, r3
 800fd7a:	4158      	adcs	r0, r3
 800fd7c:	bd10      	pop	{r4, pc}
	...

0800fd80 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800fd80:	4b01      	ldr	r3, [pc, #4]	; (800fd88 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800fd82:	6019      	str	r1, [r3, #0]
 800fd84:	4770      	bx	lr
 800fd86:	bf00      	nop
 800fd88:	24001e84 	.word	0x24001e84

0800fd8c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fd8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd90:	4696      	mov	lr, r2
 800fd92:	b097      	sub	sp, #92	; 0x5c
 800fd94:	4605      	mov	r5, r0
 800fd96:	4614      	mov	r4, r2
 800fd98:	460e      	mov	r6, r1
 800fd9a:	461f      	mov	r7, r3
 800fd9c:	f10d 0c1c 	add.w	ip, sp, #28
 800fda0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800fda4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800fda8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800fdac:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fdb0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fdb4:	f8de 3000 	ldr.w	r3, [lr]
 800fdb8:	f104 0e14 	add.w	lr, r4, #20
 800fdbc:	f8cc 3000 	str.w	r3, [ip]
 800fdc0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fdc4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fdc8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fdcc:	f8de 3000 	ldr.w	r3, [lr]
 800fdd0:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fdd4:	f8cc 3000 	str.w	r3, [ip]
 800fdd8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fddc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fde0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fde4:	f8de 3000 	ldr.w	r3, [lr]
 800fde8:	4631      	mov	r1, r6
 800fdea:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fdec:	4628      	mov	r0, r5
 800fdee:	f8cc 3000 	str.w	r3, [ip]
 800fdf2:	682b      	ldr	r3, [r5, #0]
 800fdf4:	9201      	str	r2, [sp, #4]
 800fdf6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fdf8:	f8cd 8008 	str.w	r8, [sp, #8]
 800fdfc:	9200      	str	r2, [sp, #0]
 800fdfe:	aa07      	add	r2, sp, #28
 800fe00:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fe04:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800fe08:	463b      	mov	r3, r7
 800fe0a:	47d8      	blx	fp
 800fe0c:	46a6      	mov	lr, r4
 800fe0e:	f10d 0c1c 	add.w	ip, sp, #28
 800fe12:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fe16:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fe1a:	f8de 3000 	ldr.w	r3, [lr]
 800fe1e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800fe22:	343c      	adds	r4, #60	; 0x3c
 800fe24:	f8cc 3000 	str.w	r3, [ip]
 800fe28:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800fe2c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800fe30:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fe34:	f8de 3000 	ldr.w	r3, [lr]
 800fe38:	f8cc 3000 	str.w	r3, [ip]
 800fe3c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800fe40:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fe42:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fe46:	6823      	ldr	r3, [r4, #0]
 800fe48:	4631      	mov	r1, r6
 800fe4a:	4628      	mov	r0, r5
 800fe4c:	f8cc 3000 	str.w	r3, [ip]
 800fe50:	682b      	ldr	r3, [r5, #0]
 800fe52:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fe56:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fe58:	f8cd 8008 	str.w	r8, [sp, #8]
 800fe5c:	9201      	str	r2, [sp, #4]
 800fe5e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fe60:	9200      	str	r2, [sp, #0]
 800fe62:	aa07      	add	r2, sp, #28
 800fe64:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800fe66:	463b      	mov	r3, r7
 800fe68:	47a0      	blx	r4
 800fe6a:	b017      	add	sp, #92	; 0x5c
 800fe6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fe70 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fe70:	2000      	movs	r0, #0
 800fe72:	4770      	bx	lr

0800fe74 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800fe74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe78:	b08d      	sub	sp, #52	; 0x34
 800fe7a:	4688      	mov	r8, r1
 800fe7c:	f8d3 c000 	ldr.w	ip, [r3]
 800fe80:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fe82:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800fe86:	680f      	ldr	r7, [r1, #0]
 800fe88:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800fe8c:	eba7 070c 	sub.w	r7, r7, ip
 800fe90:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800fe94:	edd3 6a07 	vldr	s13, [r3, #28]
 800fe98:	42bc      	cmp	r4, r7
 800fe9a:	9918      	ldr	r1, [sp, #96]	; 0x60
 800fe9c:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800fea0:	bfa8      	it	ge
 800fea2:	463c      	movge	r4, r7
 800fea4:	f9b1 9000 	ldrsh.w	r9, [r1]
 800fea8:	f9ba 1000 	ldrsh.w	r1, [sl]
 800feac:	ee07 4a90 	vmov	s15, r4
 800feb0:	eb09 0e0c 	add.w	lr, r9, ip
 800feb4:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800feb8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800febc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800fec0:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800fec4:	4571      	cmp	r1, lr
 800fec6:	ee25 4a04 	vmul.f32	s8, s10, s8
 800feca:	ee65 4a24 	vmul.f32	s9, s10, s9
 800fece:	ee25 5a27 	vmul.f32	s10, s10, s15
 800fed2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800fed6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800feda:	ee32 1a05 	vadd.f32	s2, s4, s10
 800fede:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800fee2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800fee6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800feea:	ee22 2a07 	vmul.f32	s4, s4, s14
 800feee:	f340 808c 	ble.w	801000a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800fef2:	eba1 060e 	sub.w	r6, r1, lr
 800fef6:	fb96 f5f4 	sdiv	r5, r6, r4
 800fefa:	ee07 5a10 	vmov	s14, r5
 800fefe:	2d00      	cmp	r5, #0
 800ff00:	fb04 6615 	mls	r6, r4, r5, r6
 800ff04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ff08:	eea7 0a04 	vfma.f32	s0, s14, s8
 800ff0c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ff10:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ff14:	dd12      	ble.n	800ff3c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800ff16:	ee70 6a44 	vsub.f32	s13, s0, s8
 800ff1a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ff1e:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ff22:	eef5 6a40 	vcmp.f32	s13, #0.0
 800ff26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff2a:	bf14      	ite	ne
 800ff2c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800ff30:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ff34:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ff38:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ff3c:	fb05 f204 	mul.w	r2, r5, r4
 800ff40:	1abf      	subs	r7, r7, r2
 800ff42:	4494      	add	ip, r2
 800ff44:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800ff48:	4411      	add	r1, r2
 800ff4a:	eb09 020c 	add.w	r2, r9, ip
 800ff4e:	b209      	sxth	r1, r1
 800ff50:	443a      	add	r2, r7
 800ff52:	428a      	cmp	r2, r1
 800ff54:	bfc4      	itt	gt
 800ff56:	eba1 0209 	subgt.w	r2, r1, r9
 800ff5a:	eba2 070c 	subgt.w	r7, r2, ip
 800ff5e:	2f00      	cmp	r7, #0
 800ff60:	dd50      	ble.n	8010004 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800ff62:	fb97 f1f4 	sdiv	r1, r7, r4
 800ff66:	fb04 7211 	mls	r2, r4, r1, r7
 800ff6a:	b90a      	cbnz	r2, 800ff70 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800ff6c:	3901      	subs	r1, #1
 800ff6e:	4622      	mov	r2, r4
 800ff70:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800ff74:	6840      	ldr	r0, [r0, #4]
 800ff76:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800ff7a:	44b6      	add	lr, r6
 800ff7c:	f8d0 a000 	ldr.w	sl, [r0]
 800ff80:	2900      	cmp	r1, #0
 800ff82:	bfcc      	ite	gt
 800ff84:	46a1      	movgt	r9, r4
 800ff86:	4691      	movle	r9, r2
 800ff88:	900b      	str	r0, [sp, #44]	; 0x2c
 800ff8a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800ff8c:	fb04 e505 	mla	r5, r4, r5, lr
 800ff90:	eef0 6a42 	vmov.f32	s13, s4
 800ff94:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800ff98:	9008      	str	r0, [sp, #32]
 800ff9a:	eeb0 7a61 	vmov.f32	s14, s3
 800ff9e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800ffa0:	695b      	ldr	r3, [r3, #20]
 800ffa2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ffa6:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800ffaa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800ffae:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ffb0:	445b      	add	r3, fp
 800ffb2:	9307      	str	r3, [sp, #28]
 800ffb4:	ee16 3a90 	vmov	r3, s13
 800ffb8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800ffbc:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800ffc0:	ee21 3a23 	vmul.f32	s6, s2, s7
 800ffc4:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ffc8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ffcc:	ee17 7a90 	vmov	r7, s15
 800ffd0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800ffd4:	fb97 f7f4 	sdiv	r7, r7, r4
 800ffd8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ffdc:	ee17 ca90 	vmov	ip, s15
 800ffe0:	fb9c fcf4 	sdiv	ip, ip, r4
 800ffe4:	fb0c 3306 	mla	r3, ip, r6, r3
 800ffe8:	9302      	str	r3, [sp, #8]
 800ffea:	ee17 3a10 	vmov	r3, s14
 800ffee:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800fff2:	fb07 3706 	mla	r7, r7, r6, r3
 800fff6:	eba9 0306 	sub.w	r3, r9, r6
 800fffa:	e9cd 4700 	strd	r4, r7, [sp]
 800fffe:	f8da 4008 	ldr.w	r4, [sl, #8]
 8010002:	47a0      	blx	r4
 8010004:	b00d      	add	sp, #52	; 0x34
 8010006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801000a:	2500      	movs	r5, #0
 801000c:	462e      	mov	r6, r5
 801000e:	e799      	b.n	800ff44 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08010010 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010014:	b0db      	sub	sp, #364	; 0x16c
 8010016:	461d      	mov	r5, r3
 8010018:	4614      	mov	r4, r2
 801001a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 801001e:	910f      	str	r1, [sp, #60]	; 0x3c
 8010020:	4629      	mov	r1, r5
 8010022:	930a      	str	r3, [sp, #40]	; 0x28
 8010024:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8010028:	9009      	str	r0, [sp, #36]	; 0x24
 801002a:	930b      	str	r3, [sp, #44]	; 0x2c
 801002c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8010030:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8010034:	9310      	str	r3, [sp, #64]	; 0x40
 8010036:	6803      	ldr	r3, [r0, #0]
 8010038:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801003a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801003e:	47b8      	blx	r7
 8010040:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010042:	6058      	str	r0, [r3, #4]
 8010044:	2800      	cmp	r0, #0
 8010046:	f000 83a1 	beq.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801004a:	682b      	ldr	r3, [r5, #0]
 801004c:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8010050:	ed94 7a02 	vldr	s14, [r4, #8]
 8010054:	9314      	str	r3, [sp, #80]	; 0x50
 8010056:	686b      	ldr	r3, [r5, #4]
 8010058:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801005c:	9315      	str	r3, [sp, #84]	; 0x54
 801005e:	4bc1      	ldr	r3, [pc, #772]	; (8010364 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8010060:	7819      	ldrb	r1, [r3, #0]
 8010062:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8010066:	2900      	cmp	r1, #0
 8010068:	bf16      	itet	ne
 801006a:	4619      	movne	r1, r3
 801006c:	4611      	moveq	r1, r2
 801006e:	4613      	movne	r3, r2
 8010070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010074:	9116      	str	r1, [sp, #88]	; 0x58
 8010076:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801007a:	f240 8387 	bls.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801007e:	ed94 7a07 	vldr	s14, [r4, #28]
 8010082:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010086:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801008a:	f240 837f 	bls.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801008e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8010092:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010096:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801009a:	f240 8377 	bls.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801009e:	6822      	ldr	r2, [r4, #0]
 80100a0:	4bb1      	ldr	r3, [pc, #708]	; (8010368 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80100a2:	429a      	cmp	r2, r3
 80100a4:	f2c0 8372 	blt.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80100a8:	49b0      	ldr	r1, [pc, #704]	; (801036c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80100aa:	6963      	ldr	r3, [r4, #20]
 80100ac:	428a      	cmp	r2, r1
 80100ae:	f300 836d 	bgt.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80100b2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80100b6:	48ae      	ldr	r0, [pc, #696]	; (8010370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80100b8:	33ff      	adds	r3, #255	; 0xff
 80100ba:	4283      	cmp	r3, r0
 80100bc:	f200 8366 	bhi.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80100c0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80100c2:	4dac      	ldr	r5, [pc, #688]	; (8010374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80100c4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80100c8:	33ff      	adds	r3, #255	; 0xff
 80100ca:	42ab      	cmp	r3, r5
 80100cc:	f200 835e 	bhi.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80100d0:	6862      	ldr	r2, [r4, #4]
 80100d2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80100d6:	33ff      	adds	r3, #255	; 0xff
 80100d8:	4283      	cmp	r3, r0
 80100da:	f200 8357 	bhi.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80100de:	69a1      	ldr	r1, [r4, #24]
 80100e0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80100e4:	33ff      	adds	r3, #255	; 0xff
 80100e6:	4283      	cmp	r3, r0
 80100e8:	f200 8350 	bhi.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80100ec:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80100ee:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80100f2:	30ff      	adds	r0, #255	; 0xff
 80100f4:	42a8      	cmp	r0, r5
 80100f6:	f200 8349 	bhi.w	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80100fa:	428a      	cmp	r2, r1
 80100fc:	f280 8110 	bge.w	8010320 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8010100:	429a      	cmp	r2, r3
 8010102:	f300 8119 	bgt.w	8010338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8010106:	4299      	cmp	r1, r3
 8010108:	f280 811d 	bge.w	8010346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 801010c:	2502      	movs	r5, #2
 801010e:	2701      	movs	r7, #1
 8010110:	46a9      	mov	r9, r5
 8010112:	46b8      	mov	r8, r7
 8010114:	f04f 0a00 	mov.w	sl, #0
 8010118:	4621      	mov	r1, r4
 801011a:	a849      	add	r0, sp, #292	; 0x124
 801011c:	f003 fd00 	bl	8013b20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8010120:	4622      	mov	r2, r4
 8010122:	4653      	mov	r3, sl
 8010124:	a949      	add	r1, sp, #292	; 0x124
 8010126:	f8cd 9000 	str.w	r9, [sp]
 801012a:	a819      	add	r0, sp, #100	; 0x64
 801012c:	f003 fe28 	bl	8013d80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010130:	4622      	mov	r2, r4
 8010132:	4653      	mov	r3, sl
 8010134:	a949      	add	r1, sp, #292	; 0x124
 8010136:	f8cd 8000 	str.w	r8, [sp]
 801013a:	a829      	add	r0, sp, #164	; 0xa4
 801013c:	f003 fe20 	bl	8013d80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010140:	4643      	mov	r3, r8
 8010142:	4622      	mov	r2, r4
 8010144:	a949      	add	r1, sp, #292	; 0x124
 8010146:	f8cd 9000 	str.w	r9, [sp]
 801014a:	a839      	add	r0, sp, #228	; 0xe4
 801014c:	f003 fe18 	bl	8013d80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010150:	42af      	cmp	r7, r5
 8010152:	af12      	add	r7, sp, #72	; 0x48
 8010154:	bfb7      	itett	lt
 8010156:	2300      	movlt	r3, #0
 8010158:	2301      	movge	r3, #1
 801015a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801015c:	ac19      	addlt	r4, sp, #100	; 0x64
 801015e:	bfb1      	iteee	lt
 8010160:	930e      	strlt	r3, [sp, #56]	; 0x38
 8010162:	ad19      	addge	r5, sp, #100	; 0x64
 8010164:	930e      	strge	r3, [sp, #56]	; 0x38
 8010166:	ac29      	addge	r4, sp, #164	; 0xa4
 8010168:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801016a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801016e:	e887 0003 	stmia.w	r7, {r0, r1}
 8010172:	b928      	cbnz	r0, 8010180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8010174:	4b80      	ldr	r3, [pc, #512]	; (8010378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8010176:	6818      	ldr	r0, [r3, #0]
 8010178:	6803      	ldr	r3, [r0, #0]
 801017a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801017c:	4798      	blx	r3
 801017e:	6038      	str	r0, [r7, #0]
 8010180:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010182:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010186:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801018a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801018c:	930c      	str	r3, [sp, #48]	; 0x30
 801018e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010190:	6963      	ldr	r3, [r4, #20]
 8010192:	440b      	add	r3, r1
 8010194:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010198:	4408      	add	r0, r1
 801019a:	b200      	sxth	r0, r0
 801019c:	4283      	cmp	r3, r0
 801019e:	900d      	str	r0, [sp, #52]	; 0x34
 80101a0:	f280 80dd 	bge.w	801035e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80101a4:	428b      	cmp	r3, r1
 80101a6:	da08      	bge.n	80101ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80101a8:	2a00      	cmp	r2, #0
 80101aa:	dd06      	ble.n	80101ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80101ac:	1acb      	subs	r3, r1, r3
 80101ae:	429a      	cmp	r2, r3
 80101b0:	f2c0 80e4 	blt.w	801037c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80101b4:	2b00      	cmp	r3, #0
 80101b6:	f300 80e2 	bgt.w	801037e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80101ba:	6967      	ldr	r7, [r4, #20]
 80101bc:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80101c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80101c2:	443b      	add	r3, r7
 80101c4:	461f      	mov	r7, r3
 80101c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80101c8:	1bdf      	subs	r7, r3, r7
 80101ca:	4297      	cmp	r7, r2
 80101cc:	bfa8      	it	ge
 80101ce:	4617      	movge	r7, r2
 80101d0:	2f00      	cmp	r7, #0
 80101d2:	f340 8166 	ble.w	80104a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80101d6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80101d8:	6829      	ldr	r1, [r5, #0]
 80101da:	f9b3 2000 	ldrsh.w	r2, [r3]
 80101de:	f9bb 3000 	ldrsh.w	r3, [fp]
 80101e2:	4411      	add	r1, r2
 80101e4:	6820      	ldr	r0, [r4, #0]
 80101e6:	4299      	cmp	r1, r3
 80101e8:	dd1a      	ble.n	8010220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80101ea:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80101ee:	4402      	add	r2, r0
 80101f0:	440b      	add	r3, r1
 80101f2:	b21b      	sxth	r3, r3
 80101f4:	429a      	cmp	r2, r3
 80101f6:	dc13      	bgt.n	8010220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80101f8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80101fa:	a912      	add	r1, sp, #72	; 0x48
 80101fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80101fe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010200:	681b      	ldr	r3, [r3, #0]
 8010202:	9206      	str	r2, [sp, #24]
 8010204:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010206:	9500      	str	r5, [sp, #0]
 8010208:	9205      	str	r2, [sp, #20]
 801020a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801020c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010210:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010212:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010216:	aa49      	add	r2, sp, #292	; 0x124
 8010218:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801021c:	4623      	mov	r3, r4
 801021e:	47c8      	blx	r9
 8010220:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8010224:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010228:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801022c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010230:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8010234:	68a1      	ldr	r1, [r4, #8]
 8010236:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801023a:	ed94 6a08 	vldr	s12, [r4, #32]
 801023e:	edd4 6a07 	vldr	s13, [r4, #28]
 8010242:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010246:	ee76 6a86 	vadd.f32	s13, s13, s12
 801024a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801024e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010252:	edc4 6a07 	vstr	s13, [r4, #28]
 8010256:	441a      	add	r2, r3
 8010258:	6963      	ldr	r3, [r4, #20]
 801025a:	3301      	adds	r3, #1
 801025c:	6022      	str	r2, [r4, #0]
 801025e:	6163      	str	r3, [r4, #20]
 8010260:	69a3      	ldr	r3, [r4, #24]
 8010262:	3b01      	subs	r3, #1
 8010264:	61a3      	str	r3, [r4, #24]
 8010266:	6923      	ldr	r3, [r4, #16]
 8010268:	440b      	add	r3, r1
 801026a:	68e1      	ldr	r1, [r4, #12]
 801026c:	428b      	cmp	r3, r1
 801026e:	6123      	str	r3, [r4, #16]
 8010270:	db15      	blt.n	801029e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8010272:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010276:	3201      	adds	r2, #1
 8010278:	1a5b      	subs	r3, r3, r1
 801027a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801027e:	6022      	str	r2, [r4, #0]
 8010280:	6123      	str	r3, [r4, #16]
 8010282:	edc4 6a07 	vstr	s13, [r4, #28]
 8010286:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801028a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801028e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010292:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010296:	ee77 7a27 	vadd.f32	s15, s14, s15
 801029a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801029e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80102a2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80102a6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80102aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80102ae:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80102b2:	68a9      	ldr	r1, [r5, #8]
 80102b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80102b8:	ed95 6a08 	vldr	s12, [r5, #32]
 80102bc:	edd5 6a07 	vldr	s13, [r5, #28]
 80102c0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80102c4:	ee76 6a86 	vadd.f32	s13, s13, s12
 80102c8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80102cc:	e9d5 2300 	ldrd	r2, r3, [r5]
 80102d0:	edc5 6a07 	vstr	s13, [r5, #28]
 80102d4:	441a      	add	r2, r3
 80102d6:	696b      	ldr	r3, [r5, #20]
 80102d8:	3301      	adds	r3, #1
 80102da:	602a      	str	r2, [r5, #0]
 80102dc:	616b      	str	r3, [r5, #20]
 80102de:	69ab      	ldr	r3, [r5, #24]
 80102e0:	3b01      	subs	r3, #1
 80102e2:	61ab      	str	r3, [r5, #24]
 80102e4:	692b      	ldr	r3, [r5, #16]
 80102e6:	440b      	add	r3, r1
 80102e8:	68e9      	ldr	r1, [r5, #12]
 80102ea:	428b      	cmp	r3, r1
 80102ec:	612b      	str	r3, [r5, #16]
 80102ee:	db15      	blt.n	801031c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80102f0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80102f4:	3201      	adds	r2, #1
 80102f6:	1a5b      	subs	r3, r3, r1
 80102f8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80102fc:	602a      	str	r2, [r5, #0]
 80102fe:	612b      	str	r3, [r5, #16]
 8010300:	edc5 6a07 	vstr	s13, [r5, #28]
 8010304:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010308:	ee36 7a87 	vadd.f32	s14, s13, s14
 801030c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010310:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010314:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010318:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801031c:	3f01      	subs	r7, #1
 801031e:	e757      	b.n	80101d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8010320:	4299      	cmp	r1, r3
 8010322:	dc13      	bgt.n	801034c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8010324:	429a      	cmp	r2, r3
 8010326:	da14      	bge.n	8010352 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8010328:	2502      	movs	r5, #2
 801032a:	2703      	movs	r7, #3
 801032c:	f04f 0800 	mov.w	r8, #0
 8010330:	46a9      	mov	r9, r5
 8010332:	f04f 0a01 	mov.w	sl, #1
 8010336:	e6ef      	b.n	8010118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010338:	2501      	movs	r5, #1
 801033a:	2700      	movs	r7, #0
 801033c:	46a9      	mov	r9, r5
 801033e:	46b8      	mov	r8, r7
 8010340:	f04f 0a02 	mov.w	sl, #2
 8010344:	e6e8      	b.n	8010118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010346:	2501      	movs	r5, #1
 8010348:	2702      	movs	r7, #2
 801034a:	e6e1      	b.n	8010110 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801034c:	2500      	movs	r5, #0
 801034e:	2701      	movs	r7, #1
 8010350:	e7f4      	b.n	801033c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8010352:	2702      	movs	r7, #2
 8010354:	2503      	movs	r5, #3
 8010356:	f04f 0900 	mov.w	r9, #0
 801035a:	46b8      	mov	r8, r7
 801035c:	e7e9      	b.n	8010332 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801035e:	4613      	mov	r3, r2
 8010360:	e728      	b.n	80101b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8010362:	bf00      	nop
 8010364:	24001e74 	.word	0x24001e74
 8010368:	fffd8f01 	.word	0xfffd8f01
 801036c:	00027100 	.word	0x00027100
 8010370:	0004e1ff 	.word	0x0004e1ff
 8010374:	0004e1fe 	.word	0x0004e1fe
 8010378:	24001e7c 	.word	0x24001e7c
 801037c:	4613      	mov	r3, r2
 801037e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010380:	469e      	mov	lr, r3
 8010382:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8010384:	469c      	mov	ip, r3
 8010386:	9111      	str	r1, [sp, #68]	; 0x44
 8010388:	f04f 0900 	mov.w	r9, #0
 801038c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8010390:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8010394:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8010398:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 801039c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80103a0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80103a4:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80103a8:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80103ac:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80103b0:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80103b4:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80103b8:	f1bc 0f00 	cmp.w	ip, #0
 80103bc:	d147      	bne.n	801044e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80103be:	eb03 0c07 	add.w	ip, r3, r7
 80103c2:	1ad7      	subs	r7, r2, r3
 80103c4:	f1b9 0f00 	cmp.w	r9, #0
 80103c8:	d009      	beq.n	80103de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80103ca:	9029      	str	r0, [sp, #164]	; 0xa4
 80103cc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80103d0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80103d4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80103d8:	912d      	str	r1, [sp, #180]	; 0xb4
 80103da:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80103de:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80103e0:	f04f 0800 	mov.w	r8, #0
 80103e4:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80103e8:	9111      	str	r1, [sp, #68]	; 0x44
 80103ea:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80103ee:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80103f2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80103f6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80103fa:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80103fe:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8010402:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8010406:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801040a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801040e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010412:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8010416:	f1be 0f00 	cmp.w	lr, #0
 801041a:	d031      	beq.n	8010480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801041c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801041e:	4450      	add	r0, sl
 8010420:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010424:	4431      	add	r1, r6
 8010426:	ee37 7a04 	vadd.f32	s14, s14, s8
 801042a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801042e:	4549      	cmp	r1, r9
 8010430:	db08      	blt.n	8010444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8010432:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010436:	3001      	adds	r0, #1
 8010438:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801043c:	eba1 0109 	sub.w	r1, r1, r9
 8010440:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010444:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010448:	f04f 0801 	mov.w	r8, #1
 801044c:	e7e3      	b.n	8010416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801044e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010450:	4450      	add	r0, sl
 8010452:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010456:	4431      	add	r1, r6
 8010458:	ee77 7a84 	vadd.f32	s15, s15, s8
 801045c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010460:	4541      	cmp	r1, r8
 8010462:	db08      	blt.n	8010476 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8010464:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010468:	3001      	adds	r0, #1
 801046a:	ee37 7a25 	vadd.f32	s14, s14, s11
 801046e:	eba1 0108 	sub.w	r1, r1, r8
 8010472:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010476:	f10c 3cff 	add.w	ip, ip, #4294967295
 801047a:	f04f 0901 	mov.w	r9, #1
 801047e:	e79b      	b.n	80103b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010480:	449c      	add	ip, r3
 8010482:	1aff      	subs	r7, r7, r3
 8010484:	f1b8 0f00 	cmp.w	r8, #0
 8010488:	d009      	beq.n	801049e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801048a:	9019      	str	r0, [sp, #100]	; 0x64
 801048c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010490:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010494:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010498:	911d      	str	r1, [sp, #116]	; 0x74
 801049a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801049e:	1ad2      	subs	r2, r2, r3
 80104a0:	e68b      	b.n	80101ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80104a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80104a4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80104a6:	2b00      	cmp	r3, #0
 80104a8:	f000 80d1 	beq.w	801064e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80104ac:	ad19      	add	r5, sp, #100	; 0x64
 80104ae:	ac39      	add	r4, sp, #228	; 0xe4
 80104b0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80104b2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80104b6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80104ba:	930c      	str	r3, [sp, #48]	; 0x30
 80104bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80104be:	6963      	ldr	r3, [r4, #20]
 80104c0:	440b      	add	r3, r1
 80104c2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80104c6:	4408      	add	r0, r1
 80104c8:	b200      	sxth	r0, r0
 80104ca:	4283      	cmp	r3, r0
 80104cc:	900d      	str	r0, [sp, #52]	; 0x34
 80104ce:	f280 80c1 	bge.w	8010654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80104d2:	428b      	cmp	r3, r1
 80104d4:	da08      	bge.n	80104e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80104d6:	2a00      	cmp	r2, #0
 80104d8:	dd06      	ble.n	80104e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80104da:	1acb      	subs	r3, r1, r3
 80104dc:	429a      	cmp	r2, r3
 80104de:	f2c0 80bb 	blt.w	8010658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80104e2:	2b00      	cmp	r3, #0
 80104e4:	f300 80b9 	bgt.w	801065a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80104e8:	6967      	ldr	r7, [r4, #20]
 80104ea:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80104ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80104f0:	443b      	add	r3, r7
 80104f2:	461f      	mov	r7, r3
 80104f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80104f6:	1bdf      	subs	r7, r3, r7
 80104f8:	4297      	cmp	r7, r2
 80104fa:	bfa8      	it	ge
 80104fc:	4617      	movge	r7, r2
 80104fe:	2f00      	cmp	r7, #0
 8010500:	f340 813c 	ble.w	801077c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8010504:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010506:	6829      	ldr	r1, [r5, #0]
 8010508:	f9b3 2000 	ldrsh.w	r2, [r3]
 801050c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010510:	4411      	add	r1, r2
 8010512:	6820      	ldr	r0, [r4, #0]
 8010514:	4299      	cmp	r1, r3
 8010516:	dd1a      	ble.n	801054e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010518:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801051c:	4402      	add	r2, r0
 801051e:	440b      	add	r3, r1
 8010520:	b21b      	sxth	r3, r3
 8010522:	429a      	cmp	r2, r3
 8010524:	dc13      	bgt.n	801054e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010526:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010528:	a912      	add	r1, sp, #72	; 0x48
 801052a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801052c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801052e:	681b      	ldr	r3, [r3, #0]
 8010530:	9206      	str	r2, [sp, #24]
 8010532:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010534:	9500      	str	r5, [sp, #0]
 8010536:	9205      	str	r2, [sp, #20]
 8010538:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801053a:	e9cd b203 	strd	fp, r2, [sp, #12]
 801053e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010540:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010544:	aa49      	add	r2, sp, #292	; 0x124
 8010546:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801054a:	4623      	mov	r3, r4
 801054c:	47c8      	blx	r9
 801054e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8010552:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010556:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801055a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801055e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8010562:	68a1      	ldr	r1, [r4, #8]
 8010564:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010568:	ed94 6a08 	vldr	s12, [r4, #32]
 801056c:	edd4 6a07 	vldr	s13, [r4, #28]
 8010570:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010574:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010578:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801057c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010580:	edc4 6a07 	vstr	s13, [r4, #28]
 8010584:	441a      	add	r2, r3
 8010586:	6963      	ldr	r3, [r4, #20]
 8010588:	3301      	adds	r3, #1
 801058a:	6022      	str	r2, [r4, #0]
 801058c:	6163      	str	r3, [r4, #20]
 801058e:	69a3      	ldr	r3, [r4, #24]
 8010590:	3b01      	subs	r3, #1
 8010592:	61a3      	str	r3, [r4, #24]
 8010594:	6923      	ldr	r3, [r4, #16]
 8010596:	440b      	add	r3, r1
 8010598:	68e1      	ldr	r1, [r4, #12]
 801059a:	428b      	cmp	r3, r1
 801059c:	6123      	str	r3, [r4, #16]
 801059e:	db15      	blt.n	80105cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80105a0:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80105a4:	3201      	adds	r2, #1
 80105a6:	1a5b      	subs	r3, r3, r1
 80105a8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80105ac:	6022      	str	r2, [r4, #0]
 80105ae:	6123      	str	r3, [r4, #16]
 80105b0:	edc4 6a07 	vstr	s13, [r4, #28]
 80105b4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80105b8:	ee36 7a87 	vadd.f32	s14, s13, s14
 80105bc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80105c0:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80105c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80105c8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80105cc:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80105d0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80105d4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80105d8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80105dc:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80105e0:	68a9      	ldr	r1, [r5, #8]
 80105e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80105e6:	ed95 6a08 	vldr	s12, [r5, #32]
 80105ea:	edd5 6a07 	vldr	s13, [r5, #28]
 80105ee:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80105f2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80105f6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80105fa:	e9d5 2300 	ldrd	r2, r3, [r5]
 80105fe:	edc5 6a07 	vstr	s13, [r5, #28]
 8010602:	441a      	add	r2, r3
 8010604:	696b      	ldr	r3, [r5, #20]
 8010606:	3301      	adds	r3, #1
 8010608:	602a      	str	r2, [r5, #0]
 801060a:	616b      	str	r3, [r5, #20]
 801060c:	69ab      	ldr	r3, [r5, #24]
 801060e:	3b01      	subs	r3, #1
 8010610:	61ab      	str	r3, [r5, #24]
 8010612:	692b      	ldr	r3, [r5, #16]
 8010614:	440b      	add	r3, r1
 8010616:	68e9      	ldr	r1, [r5, #12]
 8010618:	428b      	cmp	r3, r1
 801061a:	612b      	str	r3, [r5, #16]
 801061c:	db15      	blt.n	801064a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801061e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8010622:	3201      	adds	r2, #1
 8010624:	1a5b      	subs	r3, r3, r1
 8010626:	ee76 6a26 	vadd.f32	s13, s12, s13
 801062a:	602a      	str	r2, [r5, #0]
 801062c:	612b      	str	r3, [r5, #16]
 801062e:	edc5 6a07 	vstr	s13, [r5, #28]
 8010632:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010636:	ee36 7a87 	vadd.f32	s14, s13, s14
 801063a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801063e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010642:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010646:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801064a:	3f01      	subs	r7, #1
 801064c:	e757      	b.n	80104fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801064e:	ad39      	add	r5, sp, #228	; 0xe4
 8010650:	ac19      	add	r4, sp, #100	; 0x64
 8010652:	e72d      	b.n	80104b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010654:	4613      	mov	r3, r2
 8010656:	e744      	b.n	80104e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010658:	4613      	mov	r3, r2
 801065a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801065c:	469e      	mov	lr, r3
 801065e:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010662:	461f      	mov	r7, r3
 8010664:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010668:	f04f 0900 	mov.w	r9, #0
 801066c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8010670:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010674:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010678:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 801067c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8010680:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8010682:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010686:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801068a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801068e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8010692:	960e      	str	r6, [sp, #56]	; 0x38
 8010694:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8010698:	2f00      	cmp	r7, #0
 801069a:	d146      	bne.n	801072a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801069c:	449c      	add	ip, r3
 801069e:	1ad7      	subs	r7, r2, r3
 80106a0:	f1b9 0f00 	cmp.w	r9, #0
 80106a4:	d009      	beq.n	80106ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80106a6:	9039      	str	r0, [sp, #228]	; 0xe4
 80106a8:	913d      	str	r1, [sp, #244]	; 0xf4
 80106aa:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80106ae:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80106b2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80106b6:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80106ba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80106bc:	f04f 0800 	mov.w	r8, #0
 80106c0:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80106c4:	910e      	str	r1, [sp, #56]	; 0x38
 80106c6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80106ca:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80106ce:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80106d2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80106d6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80106da:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80106de:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80106e2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80106e6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80106ea:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80106ee:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80106f2:	f1be 0f00 	cmp.w	lr, #0
 80106f6:	d030      	beq.n	801075a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80106f8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80106fa:	4450      	add	r0, sl
 80106fc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010700:	4431      	add	r1, r6
 8010702:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010706:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801070a:	4549      	cmp	r1, r9
 801070c:	db08      	blt.n	8010720 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801070e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010712:	3001      	adds	r0, #1
 8010714:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010718:	eba1 0109 	sub.w	r1, r1, r9
 801071c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010720:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010724:	f04f 0801 	mov.w	r8, #1
 8010728:	e7e3      	b.n	80106f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801072a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801072c:	4450      	add	r0, sl
 801072e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010732:	4431      	add	r1, r6
 8010734:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010738:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801073c:	4541      	cmp	r1, r8
 801073e:	db08      	blt.n	8010752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010740:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010744:	3001      	adds	r0, #1
 8010746:	ee37 7a25 	vadd.f32	s14, s14, s11
 801074a:	eba1 0108 	sub.w	r1, r1, r8
 801074e:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010752:	3f01      	subs	r7, #1
 8010754:	f04f 0901 	mov.w	r9, #1
 8010758:	e79e      	b.n	8010698 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801075a:	449c      	add	ip, r3
 801075c:	1aff      	subs	r7, r7, r3
 801075e:	f1b8 0f00 	cmp.w	r8, #0
 8010762:	d009      	beq.n	8010778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010764:	9019      	str	r0, [sp, #100]	; 0x64
 8010766:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801076a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801076e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010772:	911d      	str	r1, [sp, #116]	; 0x74
 8010774:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010778:	1ad2      	subs	r2, r2, r3
 801077a:	e6b5      	b.n	80104e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801077c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801077e:	681b      	ldr	r3, [r3, #0]
 8010780:	b923      	cbnz	r3, 801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010782:	4b04      	ldr	r3, [pc, #16]	; (8010794 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010784:	6818      	ldr	r0, [r3, #0]
 8010786:	6803      	ldr	r3, [r0, #0]
 8010788:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801078a:	4798      	blx	r3
 801078c:	b05b      	add	sp, #364	; 0x16c
 801078e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010792:	bf00      	nop
 8010794:	24001e7c 	.word	0x24001e7c

08010798 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8010798:	b570      	push	{r4, r5, r6, lr}
 801079a:	4604      	mov	r4, r0
 801079c:	2500      	movs	r5, #0
 801079e:	9805      	ldr	r0, [sp, #20]
 80107a0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80107a4:	6061      	str	r1, [r4, #4]
 80107a6:	8263      	strh	r3, [r4, #18]
 80107a8:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80107ac:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80107b0:	8025      	strh	r5, [r4, #0]
 80107b2:	7221      	strb	r1, [r4, #8]
 80107b4:	7266      	strb	r6, [r4, #9]
 80107b6:	60e0      	str	r0, [r4, #12]
 80107b8:	8222      	strh	r2, [r4, #16]
 80107ba:	82a3      	strh	r3, [r4, #20]
 80107bc:	82e5      	strh	r5, [r4, #22]
 80107be:	8325      	strh	r5, [r4, #24]
 80107c0:	8365      	strh	r5, [r4, #26]
 80107c2:	83a5      	strh	r5, [r4, #28]
 80107c4:	83e5      	strh	r5, [r4, #30]
 80107c6:	8425      	strh	r5, [r4, #32]
 80107c8:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80107cc:	b32e      	cbz	r6, 801081a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80107ce:	6803      	ldr	r3, [r0, #0]
 80107d0:	695b      	ldr	r3, [r3, #20]
 80107d2:	4798      	blx	r3
 80107d4:	4606      	mov	r6, r0
 80107d6:	b300      	cbz	r0, 801081a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80107d8:	68e0      	ldr	r0, [r4, #12]
 80107da:	4631      	mov	r1, r6
 80107dc:	6803      	ldr	r3, [r0, #0]
 80107de:	68db      	ldr	r3, [r3, #12]
 80107e0:	4798      	blx	r3
 80107e2:	4605      	mov	r5, r0
 80107e4:	b1c8      	cbz	r0, 801081a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80107e6:	7b43      	ldrb	r3, [r0, #13]
 80107e8:	7a82      	ldrb	r2, [r0, #10]
 80107ea:	005b      	lsls	r3, r3, #1
 80107ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80107f0:	4313      	orrs	r3, r2
 80107f2:	8423      	strh	r3, [r4, #32]
 80107f4:	7a63      	ldrb	r3, [r4, #9]
 80107f6:	2b06      	cmp	r3, #6
 80107f8:	d10f      	bne.n	801081a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80107fa:	68e0      	ldr	r0, [r4, #12]
 80107fc:	462a      	mov	r2, r5
 80107fe:	4631      	mov	r1, r6
 8010800:	6803      	ldr	r3, [r0, #0]
 8010802:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010804:	4798      	blx	r3
 8010806:	7b6b      	ldrb	r3, [r5, #13]
 8010808:	005b      	lsls	r3, r3, #1
 801080a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801080e:	7aab      	ldrb	r3, [r5, #10]
 8010810:	4313      	orrs	r3, r2
 8010812:	4418      	add	r0, r3
 8010814:	8c23      	ldrh	r3, [r4, #32]
 8010816:	4418      	add	r0, r3
 8010818:	8420      	strh	r0, [r4, #32]
 801081a:	4620      	mov	r0, r4
 801081c:	bd70      	pop	{r4, r5, r6, pc}

0801081e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801081e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010822:	2400      	movs	r4, #0
 8010824:	b085      	sub	sp, #20
 8010826:	4681      	mov	r9, r0
 8010828:	4688      	mov	r8, r1
 801082a:	4692      	mov	sl, r2
 801082c:	469b      	mov	fp, r3
 801082e:	4627      	mov	r7, r4
 8010830:	4625      	mov	r5, r4
 8010832:	4626      	mov	r6, r4
 8010834:	4554      	cmp	r4, sl
 8010836:	da2a      	bge.n	801088e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010838:	2300      	movs	r3, #0
 801083a:	9303      	str	r3, [sp, #12]
 801083c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010840:	429d      	cmp	r5, r3
 8010842:	d004      	beq.n	801084e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010844:	f242 030b 	movw	r3, #8203	; 0x200b
 8010848:	429d      	cmp	r5, r3
 801084a:	bf18      	it	ne
 801084c:	462f      	movne	r7, r5
 801084e:	ab03      	add	r3, sp, #12
 8010850:	4642      	mov	r2, r8
 8010852:	4659      	mov	r1, fp
 8010854:	4648      	mov	r0, r9
 8010856:	f002 ff79 	bl	801374c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801085a:	4605      	mov	r5, r0
 801085c:	b1b8      	cbz	r0, 801088e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801085e:	280a      	cmp	r0, #10
 8010860:	d015      	beq.n	801088e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010862:	9a03      	ldr	r2, [sp, #12]
 8010864:	b18a      	cbz	r2, 801088a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010866:	7b50      	ldrb	r0, [r2, #13]
 8010868:	4639      	mov	r1, r7
 801086a:	7a93      	ldrb	r3, [r2, #10]
 801086c:	0040      	lsls	r0, r0, #1
 801086e:	8895      	ldrh	r5, [r2, #4]
 8010870:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010874:	4303      	orrs	r3, r0
 8010876:	4640      	mov	r0, r8
 8010878:	9301      	str	r3, [sp, #4]
 801087a:	f8d8 3000 	ldr.w	r3, [r8]
 801087e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010880:	4798      	blx	r3
 8010882:	9b01      	ldr	r3, [sp, #4]
 8010884:	4418      	add	r0, r3
 8010886:	4406      	add	r6, r0
 8010888:	b2b6      	uxth	r6, r6
 801088a:	3401      	adds	r4, #1
 801088c:	e7d2      	b.n	8010834 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801088e:	4630      	mov	r0, r6
 8010890:	b005      	add	sp, #20
 8010892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010896 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010896:	2a02      	cmp	r2, #2
 8010898:	b530      	push	{r4, r5, lr}
 801089a:	d011      	beq.n	80108c0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801089c:	2a03      	cmp	r2, #3
 801089e:	d01c      	beq.n	80108da <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80108a0:	2a01      	cmp	r2, #1
 80108a2:	d10c      	bne.n	80108be <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80108a4:	888b      	ldrh	r3, [r1, #4]
 80108a6:	8801      	ldrh	r1, [r0, #0]
 80108a8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80108ac:	1a5b      	subs	r3, r3, r1
 80108ae:	8844      	ldrh	r4, [r0, #2]
 80108b0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80108b4:	1a9b      	subs	r3, r3, r2
 80108b6:	8004      	strh	r4, [r0, #0]
 80108b8:	8081      	strh	r1, [r0, #4]
 80108ba:	8043      	strh	r3, [r0, #2]
 80108bc:	80c2      	strh	r2, [r0, #6]
 80108be:	bd30      	pop	{r4, r5, pc}
 80108c0:	88cb      	ldrh	r3, [r1, #6]
 80108c2:	8842      	ldrh	r2, [r0, #2]
 80108c4:	1a9b      	subs	r3, r3, r2
 80108c6:	88c2      	ldrh	r2, [r0, #6]
 80108c8:	1a9b      	subs	r3, r3, r2
 80108ca:	888a      	ldrh	r2, [r1, #4]
 80108cc:	8801      	ldrh	r1, [r0, #0]
 80108ce:	8043      	strh	r3, [r0, #2]
 80108d0:	1a52      	subs	r2, r2, r1
 80108d2:	8881      	ldrh	r1, [r0, #4]
 80108d4:	1a52      	subs	r2, r2, r1
 80108d6:	8002      	strh	r2, [r0, #0]
 80108d8:	e7f1      	b.n	80108be <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80108da:	88cb      	ldrh	r3, [r1, #6]
 80108dc:	8841      	ldrh	r1, [r0, #2]
 80108de:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80108e2:	1a5b      	subs	r3, r3, r1
 80108e4:	f9b0 5000 	ldrsh.w	r5, [r0]
 80108e8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80108ec:	1a9b      	subs	r3, r3, r2
 80108ee:	8045      	strh	r5, [r0, #2]
 80108f0:	8082      	strh	r2, [r0, #4]
 80108f2:	8003      	strh	r3, [r0, #0]
 80108f4:	80c4      	strh	r4, [r0, #6]
 80108f6:	e7e2      	b.n	80108be <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080108f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80108f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108fc:	b09f      	sub	sp, #124	; 0x7c
 80108fe:	9116      	str	r1, [sp, #88]	; 0x58
 8010900:	9317      	str	r3, [sp, #92]	; 0x5c
 8010902:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010904:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010906:	8809      	ldrh	r1, [r1, #0]
 8010908:	889b      	ldrh	r3, [r3, #4]
 801090a:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801090e:	440b      	add	r3, r1
 8010910:	9212      	str	r2, [sp, #72]	; 0x48
 8010912:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8010916:	b21b      	sxth	r3, r3
 8010918:	9011      	str	r0, [sp, #68]	; 0x44
 801091a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801091e:	9310      	str	r3, [sp, #64]	; 0x40
 8010920:	f8d8 3000 	ldr.w	r3, [r8]
 8010924:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8010928:	7b19      	ldrb	r1, [r3, #12]
 801092a:	7adb      	ldrb	r3, [r3, #11]
 801092c:	9114      	str	r1, [sp, #80]	; 0x50
 801092e:	9315      	str	r3, [sp, #84]	; 0x54
 8010930:	2a00      	cmp	r2, #0
 8010932:	d06a      	beq.n	8010a0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8010934:	f898 3010 	ldrb.w	r3, [r8, #16]
 8010938:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801093a:	2b06      	cmp	r3, #6
 801093c:	bf14      	ite	ne
 801093e:	2301      	movne	r3, #1
 8010940:	2302      	moveq	r3, #2
 8010942:	4413      	add	r3, r2
 8010944:	f04f 0900 	mov.w	r9, #0
 8010948:	930f      	str	r3, [sp, #60]	; 0x3c
 801094a:	464c      	mov	r4, r9
 801094c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010950:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010954:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8010958:	4293      	cmp	r3, r2
 801095a:	f280 808f 	bge.w	8010a7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801095e:	2300      	movs	r3, #0
 8010960:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010964:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8010968:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801096c:	429c      	cmp	r4, r3
 801096e:	d006      	beq.n	801097e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010970:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010972:	f242 020b 	movw	r2, #8203	; 0x200b
 8010976:	4294      	cmp	r4, r2
 8010978:	bf18      	it	ne
 801097a:	4623      	movne	r3, r4
 801097c:	930d      	str	r3, [sp, #52]	; 0x34
 801097e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010980:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010982:	f8d8 2000 	ldr.w	r2, [r8]
 8010986:	428b      	cmp	r3, r1
 8010988:	db41      	blt.n	8010a0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801098a:	6813      	ldr	r3, [r2, #0]
 801098c:	4610      	mov	r0, r2
 801098e:	695b      	ldr	r3, [r3, #20]
 8010990:	4798      	blx	r3
 8010992:	4604      	mov	r4, r0
 8010994:	f8d8 0000 	ldr.w	r0, [r8]
 8010998:	aa1d      	add	r2, sp, #116	; 0x74
 801099a:	4621      	mov	r1, r4
 801099c:	6803      	ldr	r3, [r0, #0]
 801099e:	689d      	ldr	r5, [r3, #8]
 80109a0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80109a4:	47a8      	blx	r5
 80109a6:	901c      	str	r0, [sp, #112]	; 0x70
 80109a8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80109ac:	429c      	cmp	r4, r3
 80109ae:	f000 80ec 	beq.w	8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80109b2:	f242 030b 	movw	r3, #8203	; 0x200b
 80109b6:	429c      	cmp	r4, r3
 80109b8:	f000 80e7 	beq.w	8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80109bc:	2c00      	cmp	r4, #0
 80109be:	f000 80f9 	beq.w	8010bb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 80109c2:	2c0a      	cmp	r4, #10
 80109c4:	d060      	beq.n	8010a88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80109c6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80109c8:	b36a      	cbz	r2, 8010a26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80109ca:	8894      	ldrh	r4, [r2, #4]
 80109cc:	f1bb 0f00 	cmp.w	fp, #0
 80109d0:	d03b      	beq.n	8010a4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80109d2:	f892 900d 	ldrb.w	r9, [r2, #13]
 80109d6:	f1bb 0f01 	cmp.w	fp, #1
 80109da:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80109de:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80109e2:	f892 900a 	ldrb.w	r9, [r2, #10]
 80109e6:	ea49 0903 	orr.w	r9, r9, r3
 80109ea:	d134      	bne.n	8010a56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80109ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80109ee:	eba6 0609 	sub.w	r6, r6, r9
 80109f2:	2b00      	cmp	r3, #0
 80109f4:	d14f      	bne.n	8010a96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80109f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80109f8:	eb09 0306 	add.w	r3, r9, r6
 80109fc:	4413      	add	r3, r2
 80109fe:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8010a00:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010a04:	4293      	cmp	r3, r2
 8010a06:	da51      	bge.n	8010aac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010a08:	e038      	b.n	8010a7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010a0a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010a0c:	e79a      	b.n	8010944 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8010a0e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010a12:	4659      	mov	r1, fp
 8010a14:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010a16:	9301      	str	r3, [sp, #4]
 8010a18:	ab1d      	add	r3, sp, #116	; 0x74
 8010a1a:	9300      	str	r3, [sp, #0]
 8010a1c:	ab1c      	add	r3, sp, #112	; 0x70
 8010a1e:	f002 fede 	bl	80137de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010a22:	4604      	mov	r4, r0
 8010a24:	e7c0      	b.n	80109a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8010a26:	f8d8 0000 	ldr.w	r0, [r8]
 8010a2a:	6803      	ldr	r3, [r0, #0]
 8010a2c:	691b      	ldr	r3, [r3, #16]
 8010a2e:	4798      	blx	r3
 8010a30:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010a34:	4298      	cmp	r0, r3
 8010a36:	f000 80a8 	beq.w	8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8010a3a:	f242 030b 	movw	r3, #8203	; 0x200b
 8010a3e:	4298      	cmp	r0, r3
 8010a40:	f000 80a3 	beq.w	8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8010a44:	f1bb 0f00 	cmp.w	fp, #0
 8010a48:	d100      	bne.n	8010a4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8010a4a:	444e      	add	r6, r9
 8010a4c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010a4e:	2a00      	cmp	r2, #0
 8010a50:	d1bf      	bne.n	80109d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010a52:	4691      	mov	r9, r2
 8010a54:	e099      	b.n	8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8010a56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010a58:	2b00      	cmp	r3, #0
 8010a5a:	f000 80ad 	beq.w	8010bb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 8010a5e:	f1bb 0f00 	cmp.w	fp, #0
 8010a62:	d118      	bne.n	8010a96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010a64:	f8d8 0000 	ldr.w	r0, [r8]
 8010a68:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010a6a:	6803      	ldr	r3, [r0, #0]
 8010a6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010a6e:	4798      	blx	r3
 8010a70:	4406      	add	r6, r0
 8010a72:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010a74:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010a76:	1af3      	subs	r3, r6, r3
 8010a78:	4293      	cmp	r3, r2
 8010a7a:	dd17      	ble.n	8010aac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010a7c:	2c00      	cmp	r4, #0
 8010a7e:	f000 8099 	beq.w	8010bb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8010a82:	2c0a      	cmp	r4, #10
 8010a84:	f040 8087 	bne.w	8010b96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8010a88:	240a      	movs	r4, #10
 8010a8a:	fab4 f084 	clz	r0, r4
 8010a8e:	0940      	lsrs	r0, r0, #5
 8010a90:	b01f      	add	sp, #124	; 0x7c
 8010a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a96:	f8d8 0000 	ldr.w	r0, [r8]
 8010a9a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010a9c:	6803      	ldr	r3, [r0, #0]
 8010a9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010aa0:	4798      	blx	r3
 8010aa2:	f1bb 0f01 	cmp.w	fp, #1
 8010aa6:	eba6 0600 	sub.w	r6, r6, r0
 8010aaa:	d0a4      	beq.n	80109f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8010aac:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010aae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010ab0:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010ab4:	f9b3 7000 	ldrsh.w	r7, [r3]
 8010ab8:	7b43      	ldrb	r3, [r0, #13]
 8010aba:	4431      	add	r1, r6
 8010abc:	015b      	lsls	r3, r3, #5
 8010abe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010ac2:	7983      	ldrb	r3, [r0, #6]
 8010ac4:	4313      	orrs	r3, r2
 8010ac6:	440b      	add	r3, r1
 8010ac8:	42bb      	cmp	r3, r7
 8010aca:	db5e      	blt.n	8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8010acc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010ace:	4299      	cmp	r1, r3
 8010ad0:	da5b      	bge.n	8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8010ad2:	f8d8 0000 	ldr.w	r0, [r8]
 8010ad6:	42b7      	cmp	r7, r6
 8010ad8:	6803      	ldr	r3, [r0, #0]
 8010ada:	bfcc      	ite	gt
 8010adc:	1bbf      	subgt	r7, r7, r6
 8010ade:	2700      	movle	r7, #0
 8010ae0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010ae2:	bfc8      	it	gt
 8010ae4:	b2bf      	uxthgt	r7, r7
 8010ae6:	4798      	blx	r3
 8010ae8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8010aea:	7b5a      	ldrb	r2, [r3, #13]
 8010aec:	00d1      	lsls	r1, r2, #3
 8010aee:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8010af2:	7a19      	ldrb	r1, [r3, #8]
 8010af4:	4329      	orrs	r1, r5
 8010af6:	0655      	lsls	r5, r2, #25
 8010af8:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8010afa:	bf48      	it	mi
 8010afc:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8010b00:	4405      	add	r5, r0
 8010b02:	bf48      	it	mi
 8010b04:	b209      	sxthmi	r1, r1
 8010b06:	1a6d      	subs	r5, r5, r1
 8010b08:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010b0a:	b2ad      	uxth	r5, r5
 8010b0c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010b10:	fa0f fa85 	sxth.w	sl, r5
 8010b14:	4551      	cmp	r1, sl
 8010b16:	dd3c      	ble.n	8010b92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8010b18:	0112      	lsls	r2, r2, #4
 8010b1a:	79d8      	ldrb	r0, [r3, #7]
 8010b1c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010b20:	4302      	orrs	r2, r0
 8010b22:	4492      	add	sl, r2
 8010b24:	4551      	cmp	r1, sl
 8010b26:	dc30      	bgt.n	8010b8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8010b28:	1b4d      	subs	r5, r1, r5
 8010b2a:	468a      	mov	sl, r1
 8010b2c:	b22d      	sxth	r5, r5
 8010b2e:	9319      	str	r3, [sp, #100]	; 0x64
 8010b30:	b2ad      	uxth	r5, r5
 8010b32:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010b34:	f8d8 0000 	ldr.w	r0, [r8]
 8010b38:	681a      	ldr	r2, [r3, #0]
 8010b3a:	6801      	ldr	r1, [r0, #0]
 8010b3c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8010b3e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8010b40:	9313      	str	r3, [sp, #76]	; 0x4c
 8010b42:	9218      	str	r2, [sp, #96]	; 0x60
 8010b44:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8010b46:	4788      	blx	r1
 8010b48:	f898 1006 	ldrb.w	r1, [r8, #6]
 8010b4c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8010b4e:	910b      	str	r1, [sp, #44]	; 0x2c
 8010b50:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010b54:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010b56:	910a      	str	r1, [sp, #40]	; 0x28
 8010b58:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010b5c:	9109      	str	r1, [sp, #36]	; 0x24
 8010b5e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8010b62:	9305      	str	r3, [sp, #20]
 8010b64:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010b66:	9206      	str	r2, [sp, #24]
 8010b68:	9304      	str	r3, [sp, #16]
 8010b6a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010b6c:	f8cd a004 	str.w	sl, [sp, #4]
 8010b70:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8010b74:	4437      	add	r7, r6
 8010b76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010b78:	b23f      	sxth	r7, r7
 8010b7a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8010b7e:	9700      	str	r7, [sp, #0]
 8010b80:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010b82:	681a      	ldr	r2, [r3, #0]
 8010b84:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010b86:	685b      	ldr	r3, [r3, #4]
 8010b88:	47a8      	blx	r5
 8010b8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b8c:	3301      	adds	r3, #1
 8010b8e:	930e      	str	r3, [sp, #56]	; 0x38
 8010b90:	e6e0      	b.n	8010954 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8010b92:	2500      	movs	r5, #0
 8010b94:	e7cb      	b.n	8010b2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 8010b96:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010b98:	3501      	adds	r5, #1
 8010b9a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010b9c:	429d      	cmp	r5, r3
 8010b9e:	f6bf af74 	bge.w	8010a8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010ba2:	4659      	mov	r1, fp
 8010ba4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010ba6:	f7fb f957 	bl	800be58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010baa:	4604      	mov	r4, r0
 8010bac:	b110      	cbz	r0, 8010bb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8010bae:	280a      	cmp	r0, #10
 8010bb0:	d1f2      	bne.n	8010b98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 8010bb2:	e769      	b.n	8010a88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010bb4:	2400      	movs	r4, #0
 8010bb6:	e768      	b.n	8010a8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010bb8:	f1bb 0f00 	cmp.w	fp, #0
 8010bbc:	f43f af59 	beq.w	8010a72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8010bc0:	e774      	b.n	8010aac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08010bc2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8010bc2:	b530      	push	{r4, r5, lr}
 8010bc4:	8ac4      	ldrh	r4, [r0, #22]
 8010bc6:	8b45      	ldrh	r5, [r0, #26]
 8010bc8:	8343      	strh	r3, [r0, #26]
 8010bca:	442c      	add	r4, r5
 8010bcc:	1ae4      	subs	r4, r4, r3
 8010bce:	8b83      	ldrh	r3, [r0, #28]
 8010bd0:	82c4      	strh	r4, [r0, #22]
 8010bd2:	8b04      	ldrh	r4, [r0, #24]
 8010bd4:	4422      	add	r2, r4
 8010bd6:	440c      	add	r4, r1
 8010bd8:	1a59      	subs	r1, r3, r1
 8010bda:	83c2      	strh	r2, [r0, #30]
 8010bdc:	8304      	strh	r4, [r0, #24]
 8010bde:	8381      	strh	r1, [r0, #28]
 8010be0:	bd30      	pop	{r4, r5, pc}

08010be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8010be2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010be6:	4604      	mov	r4, r0
 8010be8:	8a47      	ldrh	r7, [r0, #18]
 8010bea:	68c0      	ldr	r0, [r0, #12]
 8010bec:	b085      	sub	sp, #20
 8010bee:	6803      	ldr	r3, [r0, #0]
 8010bf0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010bf2:	4798      	blx	r3
 8010bf4:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8010bf8:	7a63      	ldrb	r3, [r4, #9]
 8010bfa:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8010bfe:	3b01      	subs	r3, #1
 8010c00:	42b7      	cmp	r7, r6
 8010c02:	bfac      	ite	ge
 8010c04:	f04f 0900 	movge.w	r9, #0
 8010c08:	f04f 0901 	movlt.w	r9, #1
 8010c0c:	2b05      	cmp	r3, #5
 8010c0e:	d804      	bhi.n	8010c1a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 8010c10:	e8df f003 	tbb	[pc, r3]
 8010c14:	470f0854 	.word	0x470f0854
 8010c18:	4c4c      	.short	0x4c4c
 8010c1a:	2500      	movs	r5, #0
 8010c1c:	46a9      	mov	r9, r5
 8010c1e:	462e      	mov	r6, r5
 8010c20:	462f      	mov	r7, r5
 8010c22:	e00e      	b.n	8010c42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010c24:	42b7      	cmp	r7, r6
 8010c26:	f04f 0500 	mov.w	r5, #0
 8010c2a:	bfb4      	ite	lt
 8010c2c:	2600      	movlt	r6, #0
 8010c2e:	2601      	movge	r6, #1
 8010c30:	e7f6      	b.n	8010c20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8010c32:	42b7      	cmp	r7, r6
 8010c34:	464d      	mov	r5, r9
 8010c36:	f04f 0900 	mov.w	r9, #0
 8010c3a:	bfb4      	ite	lt
 8010c3c:	2600      	movlt	r6, #0
 8010c3e:	2601      	movge	r6, #1
 8010c40:	464f      	mov	r7, r9
 8010c42:	f04f 0800 	mov.w	r8, #0
 8010c46:	f8a4 8016 	strh.w	r8, [r4, #22]
 8010c4a:	f8a4 8018 	strh.w	r8, [r4, #24]
 8010c4e:	f8cd 8004 	str.w	r8, [sp, #4]
 8010c52:	2300      	movs	r3, #0
 8010c54:	9303      	str	r3, [sp, #12]
 8010c56:	8823      	ldrh	r3, [r4, #0]
 8010c58:	2b20      	cmp	r3, #32
 8010c5a:	d033      	beq.n	8010cc4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 8010c5c:	f242 010b 	movw	r1, #8203	; 0x200b
 8010c60:	1a5a      	subs	r2, r3, r1
 8010c62:	f1d2 0a00 	rsbs	sl, r2, #0
 8010c66:	eb4a 0a02 	adc.w	sl, sl, r2
 8010c6a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010c6e:	4293      	cmp	r3, r2
 8010c70:	d008      	beq.n	8010c84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8010c72:	428b      	cmp	r3, r1
 8010c74:	9a01      	ldr	r2, [sp, #4]
 8010c76:	bf0e      	itee	eq
 8010c78:	f04f 0a01 	moveq.w	sl, #1
 8010c7c:	461a      	movne	r2, r3
 8010c7e:	f04f 0a00 	movne.w	sl, #0
 8010c82:	9201      	str	r2, [sp, #4]
 8010c84:	ab03      	add	r3, sp, #12
 8010c86:	68e2      	ldr	r2, [r4, #12]
 8010c88:	7a21      	ldrb	r1, [r4, #8]
 8010c8a:	6860      	ldr	r0, [r4, #4]
 8010c8c:	f002 fd5e 	bl	801374c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010c90:	8020      	strh	r0, [r4, #0]
 8010c92:	b9d8      	cbnz	r0, 8010ccc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 8010c94:	8ba2      	ldrh	r2, [r4, #28]
 8010c96:	2300      	movs	r3, #0
 8010c98:	4611      	mov	r1, r2
 8010c9a:	4620      	mov	r0, r4
 8010c9c:	f7ff ff91 	bl	8010bc2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010ca0:	e06e      	b.n	8010d80 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8010ca2:	2500      	movs	r5, #0
 8010ca4:	2701      	movs	r7, #1
 8010ca6:	46a9      	mov	r9, r5
 8010ca8:	462e      	mov	r6, r5
 8010caa:	e7ca      	b.n	8010c42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010cac:	42b7      	cmp	r7, r6
 8010cae:	f04f 0500 	mov.w	r5, #0
 8010cb2:	bfb4      	ite	lt
 8010cb4:	2700      	movlt	r7, #0
 8010cb6:	2701      	movge	r7, #1
 8010cb8:	462e      	mov	r6, r5
 8010cba:	e7c2      	b.n	8010c42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010cbc:	2500      	movs	r5, #0
 8010cbe:	2601      	movs	r6, #1
 8010cc0:	46a9      	mov	r9, r5
 8010cc2:	e7ad      	b.n	8010c20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8010cc4:	9301      	str	r3, [sp, #4]
 8010cc6:	f04f 0a01 	mov.w	sl, #1
 8010cca:	e7db      	b.n	8010c84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8010ccc:	8b63      	ldrh	r3, [r4, #26]
 8010cce:	280a      	cmp	r0, #10
 8010cd0:	f103 0301 	add.w	r3, r3, #1
 8010cd4:	8363      	strh	r3, [r4, #26]
 8010cd6:	d0dd      	beq.n	8010c94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 8010cd8:	9a03      	ldr	r2, [sp, #12]
 8010cda:	bb62      	cbnz	r2, 8010d36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 8010cdc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010ce0:	4298      	cmp	r0, r3
 8010ce2:	d003      	beq.n	8010cec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8010ce4:	f242 030b 	movw	r3, #8203	; 0x200b
 8010ce8:	4298      	cmp	r0, r3
 8010cea:	d1b2      	bne.n	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010cec:	8823      	ldrh	r3, [r4, #0]
 8010cee:	8ba1      	ldrh	r1, [r4, #28]
 8010cf0:	2b20      	cmp	r3, #32
 8010cf2:	d003      	beq.n	8010cfc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 8010cf4:	f242 000b 	movw	r0, #8203	; 0x200b
 8010cf8:	4283      	cmp	r3, r0
 8010cfa:	d131      	bne.n	8010d60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 8010cfc:	f1ba 0f00 	cmp.w	sl, #0
 8010d00:	bf0a      	itet	eq
 8010d02:	4688      	moveq	r8, r1
 8010d04:	4650      	movne	r0, sl
 8010d06:	2001      	moveq	r0, #1
 8010d08:	440a      	add	r2, r1
 8010d0a:	8b23      	ldrh	r3, [r4, #24]
 8010d0c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010d10:	b292      	uxth	r2, r2
 8010d12:	83a2      	strh	r2, [r4, #28]
 8010d14:	4413      	add	r3, r2
 8010d16:	f1b9 0f00 	cmp.w	r9, #0
 8010d1a:	d102      	bne.n	8010d22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 8010d1c:	2d00      	cmp	r5, #0
 8010d1e:	d042      	beq.n	8010da6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 8010d20:	b300      	cbz	r0, 8010d64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 8010d22:	8c21      	ldrh	r1, [r4, #32]
 8010d24:	4419      	add	r1, r3
 8010d26:	458c      	cmp	ip, r1
 8010d28:	da37      	bge.n	8010d9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8010d2a:	8ae1      	ldrh	r1, [r4, #22]
 8010d2c:	2900      	cmp	r1, #0
 8010d2e:	d034      	beq.n	8010d9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8010d30:	4563      	cmp	r3, ip
 8010d32:	dd8e      	ble.n	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010d34:	e01d      	b.n	8010d72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 8010d36:	8893      	ldrh	r3, [r2, #4]
 8010d38:	9901      	ldr	r1, [sp, #4]
 8010d3a:	8023      	strh	r3, [r4, #0]
 8010d3c:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8010d40:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8010d44:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8010d48:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8010d4c:	ea4b 0b00 	orr.w	fp, fp, r0
 8010d50:	68e0      	ldr	r0, [r4, #12]
 8010d52:	6803      	ldr	r3, [r0, #0]
 8010d54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010d56:	4798      	blx	r3
 8010d58:	eb0b 0200 	add.w	r2, fp, r0
 8010d5c:	b292      	uxth	r2, r2
 8010d5e:	e7c5      	b.n	8010cec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8010d60:	2000      	movs	r0, #0
 8010d62:	e7d1      	b.n	8010d08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 8010d64:	4563      	cmp	r3, ip
 8010d66:	f77f af74 	ble.w	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010d6a:	8ae3      	ldrh	r3, [r4, #22]
 8010d6c:	2b00      	cmp	r3, #0
 8010d6e:	f43f af70 	beq.w	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010d72:	2301      	movs	r3, #1
 8010d74:	8c22      	ldrh	r2, [r4, #32]
 8010d76:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8010d7a:	8be3      	ldrh	r3, [r4, #30]
 8010d7c:	4413      	add	r3, r2
 8010d7e:	83e3      	strh	r3, [r4, #30]
 8010d80:	68e0      	ldr	r0, [r4, #12]
 8010d82:	6803      	ldr	r3, [r0, #0]
 8010d84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010d86:	4798      	blx	r3
 8010d88:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8010d8c:	4418      	add	r0, r3
 8010d8e:	8a63      	ldrh	r3, [r4, #18]
 8010d90:	1a18      	subs	r0, r3, r0
 8010d92:	8260      	strh	r0, [r4, #18]
 8010d94:	b005      	add	sp, #20
 8010d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d9a:	2300      	movs	r3, #0
 8010d9c:	4611      	mov	r1, r2
 8010d9e:	4620      	mov	r0, r4
 8010da0:	f7ff ff0f 	bl	8010bc2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010da4:	e755      	b.n	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010da6:	4563      	cmp	r3, ip
 8010da8:	dd14      	ble.n	8010dd4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 8010daa:	b117      	cbz	r7, 8010db2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 8010dac:	2301      	movs	r3, #1
 8010dae:	460a      	mov	r2, r1
 8010db0:	e772      	b.n	8010c98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 8010db2:	2e00      	cmp	r6, #0
 8010db4:	f43f af4d 	beq.w	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010db8:	2800      	cmp	r0, #0
 8010dba:	f47f af4a 	bne.w	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010dbe:	f1ba 0f00 	cmp.w	sl, #0
 8010dc2:	d002      	beq.n	8010dca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 8010dc4:	2301      	movs	r3, #1
 8010dc6:	4642      	mov	r2, r8
 8010dc8:	e767      	b.n	8010c9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8010dca:	8ae3      	ldrh	r3, [r4, #22]
 8010dcc:	2b00      	cmp	r3, #0
 8010dce:	f43f af40 	beq.w	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010dd2:	e7d5      	b.n	8010d80 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8010dd4:	2800      	cmp	r0, #0
 8010dd6:	f47f af3c 	bne.w	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010dda:	f1ba 0f00 	cmp.w	sl, #0
 8010dde:	f43f af38 	beq.w	8010c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010de2:	2301      	movs	r3, #1
 8010de4:	4642      	mov	r2, r8
 8010de6:	e7da      	b.n	8010d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

08010de8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010de8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010dea:	4605      	mov	r5, r0
 8010dec:	b08f      	sub	sp, #60	; 0x3c
 8010dee:	4617      	mov	r7, r2
 8010df0:	461c      	mov	r4, r3
 8010df2:	460e      	mov	r6, r1
 8010df4:	b1d1      	cbz	r1, 8010e2c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010df6:	681b      	ldr	r3, [r3, #0]
 8010df8:	4620      	mov	r0, r4
 8010dfa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010dfc:	4798      	blx	r3
 8010dfe:	4240      	negs	r0, r0
 8010e00:	9603      	str	r6, [sp, #12]
 8010e02:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010e06:	b200      	sxth	r0, r0
 8010e08:	9700      	str	r7, [sp, #0]
 8010e0a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8010e0e:	4629      	mov	r1, r5
 8010e10:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8010e14:	2401      	movs	r4, #1
 8010e16:	a805      	add	r0, sp, #20
 8010e18:	f7ff fcbe 	bl	8010798 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8010e1c:	a805      	add	r0, sp, #20
 8010e1e:	f7ff fee0 	bl	8010be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010e22:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8010e26:	b163      	cbz	r3, 8010e42 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8010e28:	3401      	adds	r4, #1
 8010e2a:	e7f7      	b.n	8010e1c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010e2c:	2401      	movs	r4, #1
 8010e2e:	f002 fd59 	bl	80138e4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010e32:	280a      	cmp	r0, #10
 8010e34:	4628      	mov	r0, r5
 8010e36:	bf08      	it	eq
 8010e38:	3401      	addeq	r4, #1
 8010e3a:	f002 fd53 	bl	80138e4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010e3e:	2800      	cmp	r0, #0
 8010e40:	d1f7      	bne.n	8010e32 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8010e42:	b2a0      	uxth	r0, r4
 8010e44:	b00f      	add	sp, #60	; 0x3c
 8010e46:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010e48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e4c:	b0e3      	sub	sp, #396	; 0x18c
 8010e4e:	461c      	mov	r4, r3
 8010e50:	4683      	mov	fp, r0
 8010e52:	4688      	mov	r8, r1
 8010e54:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8010e56:	2b00      	cmp	r3, #0
 8010e58:	f000 8112 	beq.w	8011080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010e5c:	6823      	ldr	r3, [r4, #0]
 8010e5e:	2b00      	cmp	r3, #0
 8010e60:	f000 810e 	beq.w	8011080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010e64:	7ba3      	ldrb	r3, [r4, #14]
 8010e66:	2b00      	cmp	r3, #0
 8010e68:	f000 810a 	beq.w	8011080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010e6c:	ad0a      	add	r5, sp, #40	; 0x28
 8010e6e:	6810      	ldr	r0, [r2, #0]
 8010e70:	6851      	ldr	r1, [r2, #4]
 8010e72:	462b      	mov	r3, r5
 8010e74:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8010e78:	c303      	stmia	r3!, {r0, r1}
 8010e7a:	2100      	movs	r1, #0
 8010e7c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010e80:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010e84:	4628      	mov	r0, r5
 8010e86:	910c      	str	r1, [sp, #48]	; 0x30
 8010e88:	a90c      	add	r1, sp, #48	; 0x30
 8010e8a:	79a2      	ldrb	r2, [r4, #6]
 8010e8c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010e90:	f7ff fd01 	bl	8010896 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010e94:	a90c      	add	r1, sp, #48	; 0x30
 8010e96:	79a2      	ldrb	r2, [r4, #6]
 8010e98:	4608      	mov	r0, r1
 8010e9a:	f7ff fcfc 	bl	8010896 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010e9e:	a817      	add	r0, sp, #92	; 0x5c
 8010ea0:	f002 f8f4 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 8010ea4:	6820      	ldr	r0, [r4, #0]
 8010ea6:	6803      	ldr	r3, [r0, #0]
 8010ea8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010eaa:	4798      	blx	r3
 8010eac:	4606      	mov	r6, r0
 8010eae:	6820      	ldr	r0, [r4, #0]
 8010eb0:	6803      	ldr	r3, [r0, #0]
 8010eb2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010eb4:	4798      	blx	r3
 8010eb6:	4633      	mov	r3, r6
 8010eb8:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8010eba:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8010ebc:	9000      	str	r0, [sp, #0]
 8010ebe:	a817      	add	r0, sp, #92	; 0x5c
 8010ec0:	f002 f93f 	bl	8013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010ec4:	6820      	ldr	r0, [r4, #0]
 8010ec6:	f894 a004 	ldrb.w	sl, [r4, #4]
 8010eca:	6803      	ldr	r3, [r0, #0]
 8010ecc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010ece:	4798      	blx	r3
 8010ed0:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8010ed4:	6823      	ldr	r3, [r4, #0]
 8010ed6:	4607      	mov	r7, r0
 8010ed8:	4406      	add	r6, r0
 8010eda:	a830      	add	r0, sp, #192	; 0xc0
 8010edc:	f893 9009 	ldrb.w	r9, [r3, #9]
 8010ee0:	f002 f8d4 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 8010ee4:	7c23      	ldrb	r3, [r4, #16]
 8010ee6:	b17b      	cbz	r3, 8010f08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8010ee8:	6820      	ldr	r0, [r4, #0]
 8010eea:	6803      	ldr	r3, [r0, #0]
 8010eec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010eee:	4798      	blx	r3
 8010ef0:	9009      	str	r0, [sp, #36]	; 0x24
 8010ef2:	6820      	ldr	r0, [r4, #0]
 8010ef4:	6802      	ldr	r2, [r0, #0]
 8010ef6:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8010ef8:	4790      	blx	r2
 8010efa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010efc:	9000      	str	r0, [sp, #0]
 8010efe:	a830      	add	r0, sp, #192	; 0xc0
 8010f00:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8010f02:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8010f04:	f002 f91d 	bl	8013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010f08:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8010f0c:	a80e      	add	r0, sp, #56	; 0x38
 8010f0e:	7be2      	ldrb	r2, [r4, #15]
 8010f10:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8010f14:	1a8a      	subs	r2, r1, r2
 8010f16:	7c21      	ldrb	r1, [r4, #16]
 8010f18:	9103      	str	r1, [sp, #12]
 8010f1a:	b292      	uxth	r2, r2
 8010f1c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8010f20:	9102      	str	r1, [sp, #8]
 8010f22:	6821      	ldr	r1, [r4, #0]
 8010f24:	9101      	str	r1, [sp, #4]
 8010f26:	7961      	ldrb	r1, [r4, #5]
 8010f28:	9100      	str	r1, [sp, #0]
 8010f2a:	a930      	add	r1, sp, #192	; 0xc0
 8010f2c:	f7ff fc34 	bl	8010798 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8010f30:	2e00      	cmp	r6, #0
 8010f32:	dc5b      	bgt.n	8010fec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8010f34:	af17      	add	r7, sp, #92	; 0x5c
 8010f36:	f04f 0900 	mov.w	r9, #0
 8010f3a:	7c23      	ldrb	r3, [r4, #16]
 8010f3c:	2b00      	cmp	r3, #0
 8010f3e:	f000 80b1 	beq.w	80110a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8010f42:	a80e      	add	r0, sp, #56	; 0x38
 8010f44:	f7ff fe4d 	bl	8010be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010f48:	f1ba 0f00 	cmp.w	sl, #0
 8010f4c:	f000 80a5 	beq.w	801109a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010f50:	7c23      	ldrb	r3, [r4, #16]
 8010f52:	2264      	movs	r2, #100	; 0x64
 8010f54:	4639      	mov	r1, r7
 8010f56:	a849      	add	r0, sp, #292	; 0x124
 8010f58:	9309      	str	r3, [sp, #36]	; 0x24
 8010f5a:	f010 fff4 	bl	8021f46 <memcpy>
 8010f5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010f60:	2b00      	cmp	r3, #0
 8010f62:	f000 80a7 	beq.w	80110b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8010f66:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8010f6a:	7922      	ldrb	r2, [r4, #4]
 8010f6c:	2a01      	cmp	r2, #1
 8010f6e:	f040 808a 	bne.w	8011086 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8010f72:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8010f76:	1ac0      	subs	r0, r0, r3
 8010f78:	2302      	movs	r3, #2
 8010f7a:	fb90 f0f3 	sdiv	r0, r0, r3
 8010f7e:	b200      	sxth	r0, r0
 8010f80:	7c23      	ldrb	r3, [r4, #16]
 8010f82:	2b00      	cmp	r3, #0
 8010f84:	f000 808b 	beq.w	801109e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010f88:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8010f8c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8010f90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010f94:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010f98:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8010f9c:	2100      	movs	r1, #0
 8010f9e:	4410      	add	r0, r2
 8010fa0:	4642      	mov	r2, r8
 8010fa2:	b200      	sxth	r0, r0
 8010fa4:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8010fa8:	9000      	str	r0, [sp, #0]
 8010faa:	4658      	mov	r0, fp
 8010fac:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8010fb0:	f7ff fca2 	bl	80108f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010fb4:	2800      	cmp	r0, #0
 8010fb6:	d163      	bne.n	8011080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010fb8:	b2b2      	uxth	r2, r6
 8010fba:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8010fbe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8010fc2:	4413      	add	r3, r2
 8010fc4:	1a8a      	subs	r2, r1, r2
 8010fc6:	b21b      	sxth	r3, r3
 8010fc8:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8010fcc:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8010fd0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010fd4:	2a00      	cmp	r2, #0
 8010fd6:	d153      	bne.n	8011080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010fd8:	6822      	ldr	r2, [r4, #0]
 8010fda:	8869      	ldrh	r1, [r5, #2]
 8010fdc:	7a12      	ldrb	r2, [r2, #8]
 8010fde:	1a9b      	subs	r3, r3, r2
 8010fe0:	88ea      	ldrh	r2, [r5, #6]
 8010fe2:	440a      	add	r2, r1
 8010fe4:	b212      	sxth	r2, r2
 8010fe6:	4293      	cmp	r3, r2
 8010fe8:	dda7      	ble.n	8010f3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8010fea:	e049      	b.n	8011080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010fec:	7c23      	ldrb	r3, [r4, #16]
 8010fee:	444f      	add	r7, r9
 8010ff0:	b1c3      	cbz	r3, 8011024 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8010ff2:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8010ff6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010ffa:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010ffe:	443b      	add	r3, r7
 8011000:	4293      	cmp	r3, r2
 8011002:	da97      	bge.n	8010f34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8011004:	a80e      	add	r0, sp, #56	; 0x38
 8011006:	f7ff fdec 	bl	8010be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801100a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801100e:	3b01      	subs	r3, #1
 8011010:	b29b      	uxth	r3, r3
 8011012:	454b      	cmp	r3, r9
 8011014:	9309      	str	r3, [sp, #36]	; 0x24
 8011016:	d021      	beq.n	801105c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8011018:	7961      	ldrb	r1, [r4, #5]
 801101a:	a817      	add	r0, sp, #92	; 0x5c
 801101c:	f7fa ff1c 	bl	800be58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011020:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011022:	e7f4      	b.n	801100e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8011024:	fa1f f986 	uxth.w	r9, r6
 8011028:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801102c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011030:	443b      	add	r3, r7
 8011032:	4293      	cmp	r3, r2
 8011034:	f6bf af7e 	bge.w	8010f34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8011038:	a817      	add	r0, sp, #92	; 0x5c
 801103a:	f002 fc53 	bl	80138e4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801103e:	b1f8      	cbz	r0, 8011080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011040:	280a      	cmp	r0, #10
 8011042:	d1f1      	bne.n	8011028 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8011044:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8011048:	444b      	add	r3, r9
 801104a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801104e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8011052:	eba3 0309 	sub.w	r3, r3, r9
 8011056:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801105a:	e7e5      	b.n	8011028 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801105c:	b2b3      	uxth	r3, r6
 801105e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8011062:	441a      	add	r2, r3
 8011064:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8011068:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 801106c:	1ad3      	subs	r3, r2, r3
 801106e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011072:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011076:	b11b      	cbz	r3, 8011080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011078:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 801107c:	2b00      	cmp	r3, #0
 801107e:	d0ba      	beq.n	8010ff6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8011080:	b063      	add	sp, #396	; 0x18c
 8011082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011086:	2a02      	cmp	r2, #2
 8011088:	d105      	bne.n	8011096 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801108a:	7be2      	ldrb	r2, [r4, #15]
 801108c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8011090:	1a80      	subs	r0, r0, r2
 8011092:	1ac0      	subs	r0, r0, r3
 8011094:	e773      	b.n	8010f7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8011096:	2000      	movs	r0, #0
 8011098:	e772      	b.n	8010f80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801109a:	7be0      	ldrb	r0, [r4, #15]
 801109c:	e770      	b.n	8010f80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801109e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80110a2:	e773      	b.n	8010f8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80110a4:	f1ba 0f00 	cmp.w	sl, #0
 80110a8:	d0f7      	beq.n	801109a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80110aa:	2264      	movs	r2, #100	; 0x64
 80110ac:	4639      	mov	r1, r7
 80110ae:	a849      	add	r0, sp, #292	; 0x124
 80110b0:	f010 ff49 	bl	8021f46 <memcpy>
 80110b4:	2300      	movs	r3, #0
 80110b6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80110ba:	6821      	ldr	r1, [r4, #0]
 80110bc:	a849      	add	r0, sp, #292	; 0x124
 80110be:	f7ff fbae 	bl	801081e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80110c2:	b203      	sxth	r3, r0
 80110c4:	e751      	b.n	8010f6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080110c6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80110c6:	2b03      	cmp	r3, #3
 80110c8:	d818      	bhi.n	80110fc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80110ca:	e8df f003 	tbb	[pc, r3]
 80110ce:	0602      	.short	0x0602
 80110d0:	130d      	.short	0x130d
 80110d2:	f9b0 2000 	ldrsh.w	r2, [r0]
 80110d6:	1850      	adds	r0, r2, r1
 80110d8:	4770      	bx	lr
 80110da:	8803      	ldrh	r3, [r0, #0]
 80110dc:	8880      	ldrh	r0, [r0, #4]
 80110de:	4418      	add	r0, r3
 80110e0:	b200      	sxth	r0, r0
 80110e2:	1a80      	subs	r0, r0, r2
 80110e4:	3801      	subs	r0, #1
 80110e6:	4770      	bx	lr
 80110e8:	8803      	ldrh	r3, [r0, #0]
 80110ea:	8880      	ldrh	r0, [r0, #4]
 80110ec:	4418      	add	r0, r3
 80110ee:	b200      	sxth	r0, r0
 80110f0:	1a40      	subs	r0, r0, r1
 80110f2:	e7f7      	b.n	80110e4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80110f4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80110f8:	4410      	add	r0, r2
 80110fa:	4770      	bx	lr
 80110fc:	2000      	movs	r0, #0
 80110fe:	4770      	bx	lr

08011100 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8011100:	2b03      	cmp	r3, #3
 8011102:	d817      	bhi.n	8011134 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8011104:	e8df f003 	tbb	[pc, r3]
 8011108:	10090602 	.word	0x10090602
 801110c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011110:	1850      	adds	r0, r2, r1
 8011112:	4770      	bx	lr
 8011114:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011118:	e7fa      	b.n	8011110 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801111a:	8843      	ldrh	r3, [r0, #2]
 801111c:	88c0      	ldrh	r0, [r0, #6]
 801111e:	4418      	add	r0, r3
 8011120:	b200      	sxth	r0, r0
 8011122:	1a80      	subs	r0, r0, r2
 8011124:	3801      	subs	r0, #1
 8011126:	4770      	bx	lr
 8011128:	8843      	ldrh	r3, [r0, #2]
 801112a:	88c0      	ldrh	r0, [r0, #6]
 801112c:	4418      	add	r0, r3
 801112e:	b200      	sxth	r0, r0
 8011130:	1a40      	subs	r0, r0, r1
 8011132:	e7f7      	b.n	8011124 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8011134:	2000      	movs	r0, #0
 8011136:	4770      	bx	lr

08011138 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8011138:	4b01      	ldr	r3, [pc, #4]	; (8011140 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801113a:	2200      	movs	r2, #0
 801113c:	601a      	str	r2, [r3, #0]
 801113e:	4770      	bx	lr
 8011140:	24001e84 	.word	0x24001e84

08011144 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8011144:	4603      	mov	r3, r0
 8011146:	b1c8      	cbz	r0, 801117c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8011148:	0c02      	lsrs	r2, r0, #16
 801114a:	0412      	lsls	r2, r2, #16
 801114c:	b9a2      	cbnz	r2, 8011178 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801114e:	0403      	lsls	r3, r0, #16
 8011150:	2010      	movs	r0, #16
 8011152:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011156:	bf04      	itt	eq
 8011158:	021b      	lsleq	r3, r3, #8
 801115a:	3008      	addeq	r0, #8
 801115c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011160:	bf04      	itt	eq
 8011162:	011b      	lsleq	r3, r3, #4
 8011164:	3004      	addeq	r0, #4
 8011166:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801116a:	bf04      	itt	eq
 801116c:	009b      	lsleq	r3, r3, #2
 801116e:	3002      	addeq	r0, #2
 8011170:	2b00      	cmp	r3, #0
 8011172:	db04      	blt.n	801117e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8011174:	3001      	adds	r0, #1
 8011176:	4770      	bx	lr
 8011178:	2000      	movs	r0, #0
 801117a:	e7ea      	b.n	8011152 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801117c:	2020      	movs	r0, #32
 801117e:	4770      	bx	lr

08011180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8011180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011184:	b087      	sub	sp, #28
 8011186:	460d      	mov	r5, r1
 8011188:	4616      	mov	r6, r2
 801118a:	4698      	mov	r8, r3
 801118c:	4601      	mov	r1, r0
 801118e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8011192:	b120      	cbz	r0, 801119e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011194:	b11a      	cbz	r2, 801119e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011196:	2d1f      	cmp	r5, #31
 8011198:	d801      	bhi.n	801119e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801119a:	2b1f      	cmp	r3, #31
 801119c:	d904      	bls.n	80111a8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801119e:	2000      	movs	r0, #0
 80111a0:	6038      	str	r0, [r7, #0]
 80111a2:	b007      	add	sp, #28
 80111a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111a8:	b97d      	cbnz	r5, 80111ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80111aa:	b143      	cbz	r3, 80111be <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80111ac:	4602      	mov	r2, r0
 80111ae:	462b      	mov	r3, r5
 80111b0:	4641      	mov	r1, r8
 80111b2:	4630      	mov	r0, r6
 80111b4:	e9cd 4700 	strd	r4, r7, [sp]
 80111b8:	f7ff ffe2 	bl	8011180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80111bc:	e7f1      	b.n	80111a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80111be:	f04f 33ff 	mov.w	r3, #4294967295
 80111c2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80111c6:	603b      	str	r3, [r7, #0]
 80111c8:	e7eb      	b.n	80111a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80111ca:	fa32 fa05 	lsrs.w	sl, r2, r5
 80111ce:	d106      	bne.n	80111de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80111d0:	4346      	muls	r6, r0
 80111d2:	fbb6 f0f4 	udiv	r0, r6, r4
 80111d6:	fb04 6610 	mls	r6, r4, r0, r6
 80111da:	603e      	str	r6, [r7, #0]
 80111dc:	e7e1      	b.n	80111a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80111de:	2201      	movs	r2, #1
 80111e0:	fa00 fb05 	lsl.w	fp, r0, r5
 80111e4:	40aa      	lsls	r2, r5
 80111e6:	fbbb f9f4 	udiv	r9, fp, r4
 80111ea:	3a01      	subs	r2, #1
 80111ec:	fb0a f309 	mul.w	r3, sl, r9
 80111f0:	fb04 b919 	mls	r9, r4, r9, fp
 80111f4:	4016      	ands	r6, r2
 80111f6:	9303      	str	r3, [sp, #12]
 80111f8:	4630      	mov	r0, r6
 80111fa:	f7ff ffa3 	bl	8011144 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80111fe:	462b      	mov	r3, r5
 8011200:	460a      	mov	r2, r1
 8011202:	4601      	mov	r1, r0
 8011204:	4630      	mov	r0, r6
 8011206:	e9cd 4700 	strd	r4, r7, [sp]
 801120a:	f7ff ffb9 	bl	8011180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801120e:	4606      	mov	r6, r0
 8011210:	4648      	mov	r0, r9
 8011212:	eb05 0108 	add.w	r1, r5, r8
 8011216:	f7ff ff95 	bl	8011144 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801121a:	ab05      	add	r3, sp, #20
 801121c:	464a      	mov	r2, r9
 801121e:	e9cd 4300 	strd	r4, r3, [sp]
 8011222:	4603      	mov	r3, r0
 8011224:	4650      	mov	r0, sl
 8011226:	f7ff ffab 	bl	8011180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801122a:	6839      	ldr	r1, [r7, #0]
 801122c:	9a05      	ldr	r2, [sp, #20]
 801122e:	9b03      	ldr	r3, [sp, #12]
 8011230:	4411      	add	r1, r2
 8011232:	fbb1 f2f4 	udiv	r2, r1, r4
 8011236:	18d3      	adds	r3, r2, r3
 8011238:	fb04 1412 	mls	r4, r4, r2, r1
 801123c:	441e      	add	r6, r3
 801123e:	603c      	str	r4, [r7, #0]
 8011240:	4430      	add	r0, r6
 8011242:	e7ae      	b.n	80111a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08011244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8011244:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011248:	b085      	sub	sp, #20
 801124a:	f1b0 0900 	subs.w	r9, r0, #0
 801124e:	461d      	mov	r5, r3
 8011250:	4617      	mov	r7, r2
 8011252:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011254:	bfbb      	ittet	lt
 8011256:	f1c9 0900 	rsblt	r9, r9, #0
 801125a:	f04f 36ff 	movlt.w	r6, #4294967295
 801125e:	2601      	movge	r6, #1
 8011260:	6823      	ldrlt	r3, [r4, #0]
 8011262:	bfbc      	itt	lt
 8011264:	425b      	neglt	r3, r3
 8011266:	6023      	strlt	r3, [r4, #0]
 8011268:	2a00      	cmp	r2, #0
 801126a:	da04      	bge.n	8011276 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801126c:	6823      	ldr	r3, [r4, #0]
 801126e:	4257      	negs	r7, r2
 8011270:	4276      	negs	r6, r6
 8011272:	425b      	negs	r3, r3
 8011274:	6023      	str	r3, [r4, #0]
 8011276:	2d00      	cmp	r5, #0
 8011278:	4638      	mov	r0, r7
 801127a:	bfba      	itte	lt
 801127c:	426d      	neglt	r5, r5
 801127e:	f04f 38ff 	movlt.w	r8, #4294967295
 8011282:	f04f 0801 	movge.w	r8, #1
 8011286:	f7ff ff5d 	bl	8011144 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801128a:	ab03      	add	r3, sp, #12
 801128c:	463a      	mov	r2, r7
 801128e:	e9cd 5300 	strd	r5, r3, [sp]
 8011292:	4603      	mov	r3, r0
 8011294:	4648      	mov	r0, r9
 8011296:	f7ff ff73 	bl	8011180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801129a:	6823      	ldr	r3, [r4, #0]
 801129c:	9a03      	ldr	r2, [sp, #12]
 801129e:	4546      	cmp	r6, r8
 80112a0:	441a      	add	r2, r3
 80112a2:	fb92 f3f5 	sdiv	r3, r2, r5
 80112a6:	4418      	add	r0, r3
 80112a8:	fb05 2313 	mls	r3, r5, r3, r2
 80112ac:	bf18      	it	ne
 80112ae:	4240      	negne	r0, r0
 80112b0:	1c72      	adds	r2, r6, #1
 80112b2:	6023      	str	r3, [r4, #0]
 80112b4:	d105      	bne.n	80112c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80112b6:	2b00      	cmp	r3, #0
 80112b8:	f1c3 0200 	rsb	r2, r3, #0
 80112bc:	db0b      	blt.n	80112d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80112be:	6022      	str	r2, [r4, #0]
 80112c0:	e006      	b.n	80112d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80112c2:	2e01      	cmp	r6, #1
 80112c4:	d104      	bne.n	80112d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80112c6:	2b00      	cmp	r3, #0
 80112c8:	da02      	bge.n	80112d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80112ca:	442b      	add	r3, r5
 80112cc:	3801      	subs	r0, #1
 80112ce:	6023      	str	r3, [r4, #0]
 80112d0:	b005      	add	sp, #20
 80112d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80112d6:	3801      	subs	r0, #1
 80112d8:	1b52      	subs	r2, r2, r5
 80112da:	e7f0      	b.n	80112be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080112dc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80112dc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80112e0:	4c1c      	ldr	r4, [pc, #112]	; (8011354 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80112e2:	4605      	mov	r5, r0
 80112e4:	6807      	ldr	r7, [r0, #0]
 80112e6:	69a3      	ldr	r3, [r4, #24]
 80112e8:	b92b      	cbnz	r3, 80112f6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80112ea:	6840      	ldr	r0, [r0, #4]
 80112ec:	e9c5 7000 	strd	r7, r0, [r5]
 80112f0:	b004      	add	sp, #16
 80112f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112f6:	f04f 0802 	mov.w	r8, #2
 80112fa:	68a2      	ldr	r2, [r4, #8]
 80112fc:	ae04      	add	r6, sp, #16
 80112fe:	6820      	ldr	r0, [r4, #0]
 8011300:	fb93 f1f8 	sdiv	r1, r3, r8
 8011304:	440a      	add	r2, r1
 8011306:	69e1      	ldr	r1, [r4, #28]
 8011308:	f846 2d04 	str.w	r2, [r6, #-4]!
 801130c:	463a      	mov	r2, r7
 801130e:	9600      	str	r6, [sp, #0]
 8011310:	f7ff ff98 	bl	8011244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011314:	69a3      	ldr	r3, [r4, #24]
 8011316:	4607      	mov	r7, r0
 8011318:	686a      	ldr	r2, [r5, #4]
 801131a:	6a21      	ldr	r1, [r4, #32]
 801131c:	9600      	str	r6, [sp, #0]
 801131e:	6860      	ldr	r0, [r4, #4]
 8011320:	f7ff ff90 	bl	8011244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011324:	69a3      	ldr	r3, [r4, #24]
 8011326:	6962      	ldr	r2, [r4, #20]
 8011328:	4407      	add	r7, r0
 801132a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801132c:	9600      	str	r6, [sp, #0]
 801132e:	68e0      	ldr	r0, [r4, #12]
 8011330:	fb93 f8f8 	sdiv	r8, r3, r8
 8011334:	4442      	add	r2, r8
 8011336:	9203      	str	r2, [sp, #12]
 8011338:	682a      	ldr	r2, [r5, #0]
 801133a:	f7ff ff83 	bl	8011244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801133e:	4680      	mov	r8, r0
 8011340:	9600      	str	r6, [sp, #0]
 8011342:	69a3      	ldr	r3, [r4, #24]
 8011344:	686a      	ldr	r2, [r5, #4]
 8011346:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8011348:	6920      	ldr	r0, [r4, #16]
 801134a:	f7ff ff7b 	bl	8011244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801134e:	4440      	add	r0, r8
 8011350:	e7cc      	b.n	80112ec <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8011352:	bf00      	nop
 8011354:	24001e88 	.word	0x24001e88

08011358 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8011358:	4b07      	ldr	r3, [pc, #28]	; (8011378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801135a:	781b      	ldrb	r3, [r3, #0]
 801135c:	2b01      	cmp	r3, #1
 801135e:	d109      	bne.n	8011374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8011360:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011364:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011368:	8003      	strh	r3, [r0, #0]
 801136a:	4b04      	ldr	r3, [pc, #16]	; (801137c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801136c:	881b      	ldrh	r3, [r3, #0]
 801136e:	3b01      	subs	r3, #1
 8011370:	1a9b      	subs	r3, r3, r2
 8011372:	800b      	strh	r3, [r1, #0]
 8011374:	4770      	bx	lr
 8011376:	bf00      	nop
 8011378:	24001e74 	.word	0x24001e74
 801137c:	24001e70 	.word	0x24001e70

08011380 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8011380:	4b07      	ldr	r3, [pc, #28]	; (80113a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8011382:	b510      	push	{r4, lr}
 8011384:	781b      	ldrb	r3, [r3, #0]
 8011386:	2b01      	cmp	r3, #1
 8011388:	d108      	bne.n	801139c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801138a:	4b06      	ldr	r3, [pc, #24]	; (80113a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801138c:	880c      	ldrh	r4, [r1, #0]
 801138e:	881b      	ldrh	r3, [r3, #0]
 8011390:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011394:	3b01      	subs	r3, #1
 8011396:	1b1b      	subs	r3, r3, r4
 8011398:	8003      	strh	r3, [r0, #0]
 801139a:	800a      	strh	r2, [r1, #0]
 801139c:	bd10      	pop	{r4, pc}
 801139e:	bf00      	nop
 80113a0:	24001e74 	.word	0x24001e74
 80113a4:	24001e70 	.word	0x24001e70

080113a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80113a8:	4b0a      	ldr	r3, [pc, #40]	; (80113d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80113aa:	b510      	push	{r4, lr}
 80113ac:	781b      	ldrb	r3, [r3, #0]
 80113ae:	2b01      	cmp	r3, #1
 80113b0:	d10e      	bne.n	80113d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80113b2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80113b6:	8843      	ldrh	r3, [r0, #2]
 80113b8:	f9b0 4000 	ldrsh.w	r4, [r0]
 80113bc:	18ca      	adds	r2, r1, r3
 80113be:	4b06      	ldr	r3, [pc, #24]	; (80113d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80113c0:	8044      	strh	r4, [r0, #2]
 80113c2:	881b      	ldrh	r3, [r3, #0]
 80113c4:	1a9b      	subs	r3, r3, r2
 80113c6:	8003      	strh	r3, [r0, #0]
 80113c8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80113cc:	8081      	strh	r1, [r0, #4]
 80113ce:	80c3      	strh	r3, [r0, #6]
 80113d0:	bd10      	pop	{r4, pc}
 80113d2:	bf00      	nop
 80113d4:	24001e74 	.word	0x24001e74
 80113d8:	24001e70 	.word	0x24001e70

080113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80113dc:	4b08      	ldr	r3, [pc, #32]	; (8011400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80113de:	781b      	ldrb	r3, [r3, #0]
 80113e0:	2b01      	cmp	r3, #1
 80113e2:	d10c      	bne.n	80113fe <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80113e4:	8803      	ldrh	r3, [r0, #0]
 80113e6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80113ea:	8842      	ldrh	r2, [r0, #2]
 80113ec:	8002      	strh	r2, [r0, #0]
 80113ee:	185a      	adds	r2, r3, r1
 80113f0:	4b04      	ldr	r3, [pc, #16]	; (8011404 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80113f2:	881b      	ldrh	r3, [r3, #0]
 80113f4:	1a9b      	subs	r3, r3, r2
 80113f6:	8043      	strh	r3, [r0, #2]
 80113f8:	88c3      	ldrh	r3, [r0, #6]
 80113fa:	80c1      	strh	r1, [r0, #6]
 80113fc:	8083      	strh	r3, [r0, #4]
 80113fe:	4770      	bx	lr
 8011400:	24001e74 	.word	0x24001e74
 8011404:	24001e70 	.word	0x24001e70

08011408 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011408:	4b07      	ldr	r3, [pc, #28]	; (8011428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801140a:	b510      	push	{r4, lr}
 801140c:	781b      	ldrb	r3, [r3, #0]
 801140e:	2b01      	cmp	r3, #1
 8011410:	d108      	bne.n	8011424 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8011412:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011416:	f9b0 4000 	ldrsh.w	r4, [r0]
 801141a:	8003      	strh	r3, [r0, #0]
 801141c:	8893      	ldrh	r3, [r2, #4]
 801141e:	3b01      	subs	r3, #1
 8011420:	1b1b      	subs	r3, r3, r4
 8011422:	800b      	strh	r3, [r1, #0]
 8011424:	bd10      	pop	{r4, pc}
 8011426:	bf00      	nop
 8011428:	24001e74 	.word	0x24001e74

0801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801142c:	4b0a      	ldr	r3, [pc, #40]	; (8011458 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801142e:	460a      	mov	r2, r1
 8011430:	b510      	push	{r4, lr}
 8011432:	781b      	ldrb	r3, [r3, #0]
 8011434:	2b01      	cmp	r3, #1
 8011436:	d10d      	bne.n	8011454 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011438:	8881      	ldrh	r1, [r0, #4]
 801143a:	8803      	ldrh	r3, [r0, #0]
 801143c:	440b      	add	r3, r1
 801143e:	4601      	mov	r1, r0
 8011440:	3b01      	subs	r3, #1
 8011442:	f821 3b02 	strh.w	r3, [r1], #2
 8011446:	f7ff ffdf 	bl	8011408 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801144a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801144e:	88c2      	ldrh	r2, [r0, #6]
 8011450:	80c3      	strh	r3, [r0, #6]
 8011452:	8082      	strh	r2, [r0, #4]
 8011454:	bd10      	pop	{r4, pc}
 8011456:	bf00      	nop
 8011458:	24001e74 	.word	0x24001e74

0801145c <_ZN8touchgfx11Application13requestRedrawEv>:
 801145c:	4b06      	ldr	r3, [pc, #24]	; (8011478 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801145e:	2100      	movs	r1, #0
 8011460:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011464:	4b05      	ldr	r3, [pc, #20]	; (801147c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8011466:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801146a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801146e:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8011472:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8011476:	4770      	bx	lr
 8011478:	24001e70 	.word	0x24001e70
 801147c:	24001e72 	.word	0x24001e72

08011480 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8011480:	4b03      	ldr	r3, [pc, #12]	; (8011490 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8011482:	6818      	ldr	r0, [r3, #0]
 8011484:	b110      	cbz	r0, 801148c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8011486:	6803      	ldr	r3, [r0, #0]
 8011488:	699b      	ldr	r3, [r3, #24]
 801148a:	4718      	bx	r3
 801148c:	4770      	bx	lr
 801148e:	bf00      	nop
 8011490:	24001eb8 	.word	0x24001eb8

08011494 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8011494:	4770      	bx	lr
	...

08011498 <_ZN8touchgfx11Application4drawEv>:
 8011498:	4b09      	ldr	r3, [pc, #36]	; (80114c0 <_ZN8touchgfx11Application4drawEv+0x28>)
 801149a:	b507      	push	{r0, r1, r2, lr}
 801149c:	f9b3 2000 	ldrsh.w	r2, [r3]
 80114a0:	2100      	movs	r1, #0
 80114a2:	4b08      	ldr	r3, [pc, #32]	; (80114c4 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80114a4:	9100      	str	r1, [sp, #0]
 80114a6:	4669      	mov	r1, sp
 80114a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80114ac:	f8ad 2004 	strh.w	r2, [sp, #4]
 80114b0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80114b4:	6803      	ldr	r3, [r0, #0]
 80114b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80114b8:	4798      	blx	r3
 80114ba:	b003      	add	sp, #12
 80114bc:	f85d fb04 	ldr.w	pc, [sp], #4
 80114c0:	24001e70 	.word	0x24001e70
 80114c4:	24001e72 	.word	0x24001e72

080114c8 <_ZN8touchgfx11Application10invalidateEv>:
 80114c8:	4b09      	ldr	r3, [pc, #36]	; (80114f0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80114ca:	b082      	sub	sp, #8
 80114cc:	2100      	movs	r1, #0
 80114ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 80114d2:	4b08      	ldr	r3, [pc, #32]	; (80114f4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80114d4:	f8ad 2004 	strh.w	r2, [sp, #4]
 80114d8:	aa02      	add	r2, sp, #8
 80114da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80114de:	9100      	str	r1, [sp, #0]
 80114e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80114e4:	6803      	ldr	r3, [r0, #0]
 80114e6:	e912 0006 	ldmdb	r2, {r1, r2}
 80114ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80114ec:	b002      	add	sp, #8
 80114ee:	4718      	bx	r3
 80114f0:	24001e70 	.word	0x24001e70
 80114f4:	24001e72 	.word	0x24001e72

080114f8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80114f8:	4b03      	ldr	r3, [pc, #12]	; (8011508 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80114fa:	6818      	ldr	r0, [r3, #0]
 80114fc:	b110      	cbz	r0, 8011504 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80114fe:	6803      	ldr	r3, [r0, #0]
 8011500:	69db      	ldr	r3, [r3, #28]
 8011502:	4718      	bx	r3
 8011504:	4770      	bx	lr
 8011506:	bf00      	nop
 8011508:	24001eb8 	.word	0x24001eb8

0801150c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801150c:	4b03      	ldr	r3, [pc, #12]	; (801151c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801150e:	6818      	ldr	r0, [r3, #0]
 8011510:	b110      	cbz	r0, 8011518 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8011512:	6803      	ldr	r3, [r0, #0]
 8011514:	6a1b      	ldr	r3, [r3, #32]
 8011516:	4718      	bx	r3
 8011518:	4770      	bx	lr
 801151a:	bf00      	nop
 801151c:	24001eb8 	.word	0x24001eb8

08011520 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8011520:	2300      	movs	r3, #0
 8011522:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8011526:	4770      	bx	lr

08011528 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011528:	4b03      	ldr	r3, [pc, #12]	; (8011538 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801152a:	6818      	ldr	r0, [r3, #0]
 801152c:	b110      	cbz	r0, 8011534 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801152e:	6803      	ldr	r3, [r0, #0]
 8011530:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011532:	4718      	bx	r3
 8011534:	4770      	bx	lr
 8011536:	bf00      	nop
 8011538:	24001eb8 	.word	0x24001eb8

0801153c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801153c:	b510      	push	{r4, lr}
 801153e:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011542:	888a      	ldrh	r2, [r1, #4]
 8011544:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011548:	4422      	add	r2, r4
 801154a:	b212      	sxth	r2, r2
 801154c:	4293      	cmp	r3, r2
 801154e:	da15      	bge.n	801157c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011550:	8882      	ldrh	r2, [r0, #4]
 8011552:	4413      	add	r3, r2
 8011554:	b21b      	sxth	r3, r3
 8011556:	429c      	cmp	r4, r3
 8011558:	da10      	bge.n	801157c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801155a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801155e:	88c9      	ldrh	r1, [r1, #6]
 8011560:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011564:	4419      	add	r1, r3
 8011566:	b209      	sxth	r1, r1
 8011568:	428a      	cmp	r2, r1
 801156a:	da07      	bge.n	801157c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801156c:	88c0      	ldrh	r0, [r0, #6]
 801156e:	4410      	add	r0, r2
 8011570:	b200      	sxth	r0, r0
 8011572:	4283      	cmp	r3, r0
 8011574:	bfac      	ite	ge
 8011576:	2000      	movge	r0, #0
 8011578:	2001      	movlt	r0, #1
 801157a:	bd10      	pop	{r4, pc}
 801157c:	2000      	movs	r0, #0
 801157e:	e7fc      	b.n	801157a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08011580 <_ZN8touchgfx4Rect10restrictToEss>:
 8011580:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011584:	2b00      	cmp	r3, #0
 8011586:	b510      	push	{r4, lr}
 8011588:	da04      	bge.n	8011594 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801158a:	8884      	ldrh	r4, [r0, #4]
 801158c:	4423      	add	r3, r4
 801158e:	8083      	strh	r3, [r0, #4]
 8011590:	2300      	movs	r3, #0
 8011592:	8003      	strh	r3, [r0, #0]
 8011594:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011598:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801159c:	1b09      	subs	r1, r1, r4
 801159e:	428b      	cmp	r3, r1
 80115a0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80115a4:	bfc8      	it	gt
 80115a6:	8081      	strhgt	r1, [r0, #4]
 80115a8:	2b00      	cmp	r3, #0
 80115aa:	da04      	bge.n	80115b6 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80115ac:	88c1      	ldrh	r1, [r0, #6]
 80115ae:	440b      	add	r3, r1
 80115b0:	80c3      	strh	r3, [r0, #6]
 80115b2:	2300      	movs	r3, #0
 80115b4:	8043      	strh	r3, [r0, #2]
 80115b6:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80115ba:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80115be:	1a52      	subs	r2, r2, r1
 80115c0:	4293      	cmp	r3, r2
 80115c2:	bfc8      	it	gt
 80115c4:	80c2      	strhgt	r2, [r0, #6]
 80115c6:	bd10      	pop	{r4, pc}

080115c8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80115c8:	4b10      	ldr	r3, [pc, #64]	; (801160c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80115ca:	b510      	push	{r4, lr}
 80115cc:	460c      	mov	r4, r1
 80115ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 80115d2:	4b0f      	ldr	r3, [pc, #60]	; (8011610 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80115d4:	4620      	mov	r0, r4
 80115d6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80115da:	f7ff ffd1 	bl	8011580 <_ZN8touchgfx4Rect10restrictToEss>
 80115de:	4b0d      	ldr	r3, [pc, #52]	; (8011614 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80115e0:	6818      	ldr	r0, [r3, #0]
 80115e2:	b190      	cbz	r0, 801160a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80115e4:	6803      	ldr	r3, [r0, #0]
 80115e6:	4621      	mov	r1, r4
 80115e8:	689b      	ldr	r3, [r3, #8]
 80115ea:	4798      	blx	r3
 80115ec:	4b0a      	ldr	r3, [pc, #40]	; (8011618 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80115ee:	6818      	ldr	r0, [r3, #0]
 80115f0:	b118      	cbz	r0, 80115fa <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80115f2:	6803      	ldr	r3, [r0, #0]
 80115f4:	4621      	mov	r1, r4
 80115f6:	689b      	ldr	r3, [r3, #8]
 80115f8:	4798      	blx	r3
 80115fa:	4b08      	ldr	r3, [pc, #32]	; (801161c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80115fc:	4621      	mov	r1, r4
 80115fe:	6818      	ldr	r0, [r3, #0]
 8011600:	6803      	ldr	r3, [r0, #0]
 8011602:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011606:	69db      	ldr	r3, [r3, #28]
 8011608:	4718      	bx	r3
 801160a:	bd10      	pop	{r4, pc}
 801160c:	24001e72 	.word	0x24001e72
 8011610:	24001e70 	.word	0x24001e70
 8011614:	24001eb8 	.word	0x24001eb8
 8011618:	24001eb4 	.word	0x24001eb4
 801161c:	24001e7c 	.word	0x24001e7c

08011620 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011622:	4606      	mov	r6, r0
 8011624:	4608      	mov	r0, r1
 8011626:	460f      	mov	r7, r1
 8011628:	f7fc ffc7 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 801162c:	b9e8      	cbnz	r0, 801166a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801162e:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011632:	f9b6 4000 	ldrsh.w	r4, [r6]
 8011636:	42a5      	cmp	r5, r4
 8011638:	db17      	blt.n	801166a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801163a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801163e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011642:	429a      	cmp	r2, r3
 8011644:	db11      	blt.n	801166a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011646:	88b9      	ldrh	r1, [r7, #4]
 8011648:	440d      	add	r5, r1
 801164a:	88b1      	ldrh	r1, [r6, #4]
 801164c:	440c      	add	r4, r1
 801164e:	b22d      	sxth	r5, r5
 8011650:	b224      	sxth	r4, r4
 8011652:	42a5      	cmp	r5, r4
 8011654:	dc09      	bgt.n	801166a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011656:	88f8      	ldrh	r0, [r7, #6]
 8011658:	4410      	add	r0, r2
 801165a:	88f2      	ldrh	r2, [r6, #6]
 801165c:	4413      	add	r3, r2
 801165e:	b200      	sxth	r0, r0
 8011660:	b21b      	sxth	r3, r3
 8011662:	4298      	cmp	r0, r3
 8011664:	bfcc      	ite	gt
 8011666:	2000      	movgt	r0, #0
 8011668:	2001      	movle	r0, #1
 801166a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801166c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801166c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801166e:	4604      	mov	r4, r0
 8011670:	4608      	mov	r0, r1
 8011672:	460d      	mov	r5, r1
 8011674:	f7fc ffa1 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 8011678:	b978      	cbnz	r0, 801169a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801167a:	4620      	mov	r0, r4
 801167c:	f7fc ff9d 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 8011680:	f9b5 6000 	ldrsh.w	r6, [r5]
 8011684:	b150      	cbz	r0, 801169c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8011686:	8026      	strh	r6, [r4, #0]
 8011688:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801168c:	8063      	strh	r3, [r4, #2]
 801168e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8011692:	80a3      	strh	r3, [r4, #4]
 8011694:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011698:	80e3      	strh	r3, [r4, #6]
 801169a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801169c:	f9b4 1000 	ldrsh.w	r1, [r4]
 80116a0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80116a4:	42b1      	cmp	r1, r6
 80116a6:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80116aa:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80116ae:	460f      	mov	r7, r1
 80116b0:	88ed      	ldrh	r5, [r5, #6]
 80116b2:	bfa8      	it	ge
 80116b4:	4637      	movge	r7, r6
 80116b6:	4293      	cmp	r3, r2
 80116b8:	4618      	mov	r0, r3
 80116ba:	4466      	add	r6, ip
 80116bc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80116c0:	bfa8      	it	ge
 80116c2:	4610      	movge	r0, r2
 80116c4:	442a      	add	r2, r5
 80116c6:	88e5      	ldrh	r5, [r4, #6]
 80116c8:	4461      	add	r1, ip
 80116ca:	b236      	sxth	r6, r6
 80116cc:	8027      	strh	r7, [r4, #0]
 80116ce:	442b      	add	r3, r5
 80116d0:	b209      	sxth	r1, r1
 80116d2:	b212      	sxth	r2, r2
 80116d4:	8060      	strh	r0, [r4, #2]
 80116d6:	b21b      	sxth	r3, r3
 80116d8:	428e      	cmp	r6, r1
 80116da:	bfac      	ite	ge
 80116dc:	ebc7 0106 	rsbge	r1, r7, r6
 80116e0:	ebc7 0101 	rsblt	r1, r7, r1
 80116e4:	429a      	cmp	r2, r3
 80116e6:	bfac      	ite	ge
 80116e8:	ebc0 0202 	rsbge	r2, r0, r2
 80116ec:	ebc0 0203 	rsblt	r2, r0, r3
 80116f0:	80a1      	strh	r1, [r4, #4]
 80116f2:	80e2      	strh	r2, [r4, #6]
 80116f4:	e7d1      	b.n	801169a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080116f8 <_ZN8touchgfx11Application11getInstanceEv>:
 80116f8:	4b01      	ldr	r3, [pc, #4]	; (8011700 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80116fa:	6818      	ldr	r0, [r3, #0]
 80116fc:	4770      	bx	lr
 80116fe:	bf00      	nop
 8011700:	24001ec8 	.word	0x24001ec8

08011704 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8011704:	2300      	movs	r3, #0
 8011706:	b510      	push	{r4, lr}
 8011708:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 801170c:	4604      	mov	r4, r0
 801170e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8011712:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8011716:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801171a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 801171e:	429a      	cmp	r2, r3
 8011720:	d90e      	bls.n	8011740 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8011722:	18e2      	adds	r2, r4, r3
 8011724:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8011728:	b122      	cbz	r2, 8011734 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801172a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801172e:	6803      	ldr	r3, [r0, #0]
 8011730:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011732:	4798      	blx	r3
 8011734:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8011738:	3301      	adds	r3, #1
 801173a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801173e:	e7ea      	b.n	8011716 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8011740:	bd10      	pop	{r4, pc}

08011742 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8011742:	2300      	movs	r3, #0
 8011744:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8011748:	30a4      	adds	r0, #164	; 0xa4
 801174a:	f820 3c24 	strh.w	r3, [r0, #-36]
 801174e:	f802 3b01 	strb.w	r3, [r2], #1
 8011752:	4282      	cmp	r2, r0
 8011754:	d1fb      	bne.n	801174e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8011756:	4770      	bx	lr

08011758 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8011758:	b570      	push	{r4, r5, r6, lr}
 801175a:	4c0b      	ldr	r4, [pc, #44]	; (8011788 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801175c:	4605      	mov	r5, r0
 801175e:	460e      	mov	r6, r1
 8011760:	6820      	ldr	r0, [r4, #0]
 8011762:	b110      	cbz	r0, 801176a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8011764:	6803      	ldr	r3, [r0, #0]
 8011766:	695b      	ldr	r3, [r3, #20]
 8011768:	4798      	blx	r3
 801176a:	1d28      	adds	r0, r5, #4
 801176c:	f7ff ffe9 	bl	8011742 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011770:	6026      	str	r6, [r4, #0]
 8011772:	6833      	ldr	r3, [r6, #0]
 8011774:	4630      	mov	r0, r6
 8011776:	68db      	ldr	r3, [r3, #12]
 8011778:	4798      	blx	r3
 801177a:	682b      	ldr	r3, [r5, #0]
 801177c:	4628      	mov	r0, r5
 801177e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011780:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011784:	4718      	bx	r3
 8011786:	bf00      	nop
 8011788:	24001eb8 	.word	0x24001eb8

0801178c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801178c:	2300      	movs	r3, #0
 801178e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8011792:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8011796:	461a      	mov	r2, r3
 8011798:	b5f0      	push	{r4, r5, r6, r7, lr}
 801179a:	461c      	mov	r4, r3
 801179c:	461d      	mov	r5, r3
 801179e:	459c      	cmp	ip, r3
 80117a0:	dd1a      	ble.n	80117d8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80117a2:	18c6      	adds	r6, r0, r3
 80117a4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80117a8:	b16e      	cbz	r6, 80117c6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80117aa:	429a      	cmp	r2, r3
 80117ac:	d008      	beq.n	80117c0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80117ae:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80117b2:	fa1f fe82 	uxth.w	lr, r2
 80117b6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80117ba:	1887      	adds	r7, r0, r2
 80117bc:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80117c0:	3201      	adds	r2, #1
 80117c2:	3301      	adds	r3, #1
 80117c4:	e7eb      	b.n	801179e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80117c6:	4299      	cmp	r1, r3
 80117c8:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80117cc:	bfa8      	it	ge
 80117ce:	3501      	addge	r5, #1
 80117d0:	429e      	cmp	r6, r3
 80117d2:	bfc8      	it	gt
 80117d4:	3401      	addgt	r4, #1
 80117d6:	e7f4      	b.n	80117c2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80117d8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80117dc:	1b49      	subs	r1, r1, r5
 80117de:	1b1b      	subs	r3, r3, r4
 80117e0:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80117e4:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80117e8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80117ec:	4293      	cmp	r3, r2
 80117ee:	dd03      	ble.n	80117f8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80117f0:	3b01      	subs	r3, #1
 80117f2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80117f6:	e7f7      	b.n	80117e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80117f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080117fc <_ZN8touchgfx11Application15handleTickEventEv>:
 80117fc:	b570      	push	{r4, r5, r6, lr}
 80117fe:	4d16      	ldr	r5, [pc, #88]	; (8011858 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8011800:	4604      	mov	r4, r0
 8011802:	6828      	ldr	r0, [r5, #0]
 8011804:	b140      	cbz	r0, 8011818 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011806:	7a03      	ldrb	r3, [r0, #8]
 8011808:	b933      	cbnz	r3, 8011818 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801180a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801180e:	6803      	ldr	r3, [r0, #0]
 8011810:	689b      	ldr	r3, [r3, #8]
 8011812:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011816:	4718      	bx	r3
 8011818:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 801181c:	4e0f      	ldr	r6, [pc, #60]	; (801185c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801181e:	b973      	cbnz	r3, 801183e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011820:	b168      	cbz	r0, 801183e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011822:	7a03      	ldrb	r3, [r0, #8]
 8011824:	b15b      	cbz	r3, 801183e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011826:	6830      	ldr	r0, [r6, #0]
 8011828:	b110      	cbz	r0, 8011830 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801182a:	6803      	ldr	r3, [r0, #0]
 801182c:	691b      	ldr	r3, [r3, #16]
 801182e:	4798      	blx	r3
 8011830:	6828      	ldr	r0, [r5, #0]
 8011832:	6803      	ldr	r3, [r0, #0]
 8011834:	68db      	ldr	r3, [r3, #12]
 8011836:	4798      	blx	r3
 8011838:	2301      	movs	r3, #1
 801183a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801183e:	3404      	adds	r4, #4
 8011840:	4620      	mov	r0, r4
 8011842:	f7ff ff5f 	bl	8011704 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8011846:	4620      	mov	r0, r4
 8011848:	f7ff ffa0 	bl	801178c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801184c:	6830      	ldr	r0, [r6, #0]
 801184e:	b110      	cbz	r0, 8011856 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8011850:	6803      	ldr	r3, [r0, #0]
 8011852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011854:	e7dd      	b.n	8011812 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011856:	bd70      	pop	{r4, r5, r6, pc}
 8011858:	24001ebc 	.word	0x24001ebc
 801185c:	24001eb8 	.word	0x24001eb8

08011860 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011860:	4603      	mov	r3, r0
 8011862:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8011866:	2200      	movs	r2, #0
 8011868:	801a      	strh	r2, [r3, #0]
 801186a:	3308      	adds	r3, #8
 801186c:	f823 2c06 	strh.w	r2, [r3, #-6]
 8011870:	f823 2c04 	strh.w	r2, [r3, #-4]
 8011874:	f823 2c02 	strh.w	r2, [r3, #-2]
 8011878:	428b      	cmp	r3, r1
 801187a:	d1f5      	bne.n	8011868 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801187c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8011880:	4770      	bx	lr
	...

08011884 <_ZN8touchgfx11ApplicationC1Ev>:
 8011884:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011886:	4b1d      	ldr	r3, [pc, #116]	; (80118fc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8011888:	4606      	mov	r6, r0
 801188a:	4604      	mov	r4, r0
 801188c:	2500      	movs	r5, #0
 801188e:	f846 3b04 	str.w	r3, [r6], #4
 8011892:	22a8      	movs	r2, #168	; 0xa8
 8011894:	2100      	movs	r1, #0
 8011896:	4630      	mov	r0, r6
 8011898:	f010 fa85 	bl	8021da6 <memset>
 801189c:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80118a0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80118a4:	4f16      	ldr	r7, [pc, #88]	; (8011900 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80118a6:	f7ff ffdb 	bl	8011860 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80118aa:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80118ae:	f7ff ffd7 	bl	8011860 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80118b2:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80118b6:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80118ba:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80118be:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80118c2:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80118c6:	490f      	ldr	r1, [pc, #60]	; (8011904 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80118c8:	480f      	ldr	r0, [pc, #60]	; (8011908 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80118ca:	f00f ff2f 	bl	802172c <CRC_Lock>
 80118ce:	4b0f      	ldr	r3, [pc, #60]	; (801190c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80118d0:	b158      	cbz	r0, 80118ea <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80118d2:	801d      	strh	r5, [r3, #0]
 80118d4:	2300      	movs	r3, #0
 80118d6:	4a0e      	ldr	r2, [pc, #56]	; (8011910 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80118d8:	4630      	mov	r0, r6
 80118da:	6013      	str	r3, [r2, #0]
 80118dc:	4a0d      	ldr	r2, [pc, #52]	; (8011914 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80118de:	603b      	str	r3, [r7, #0]
 80118e0:	6013      	str	r3, [r2, #0]
 80118e2:	f7ff ff2e 	bl	8011742 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80118e6:	4620      	mov	r0, r4
 80118e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80118ea:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80118ee:	2002      	movs	r0, #2
 80118f0:	801a      	strh	r2, [r3, #0]
 80118f2:	6038      	str	r0, [r7, #0]
 80118f4:	f001 fa50 	bl	8012d98 <_ZN8touchgfx6Screen4drawEv>
 80118f8:	e7ec      	b.n	80118d4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80118fa:	bf00      	nop
 80118fc:	0802447c 	.word	0x0802447c
 8011900:	24001eb8 	.word	0x24001eb8
 8011904:	b5e8b5cd 	.word	0xb5e8b5cd
 8011908:	f407a5c2 	.word	0xf407a5c2
 801190c:	24000018 	.word	0x24000018
 8011910:	24001ec8 	.word	0x24001ec8
 8011914:	24001ebc 	.word	0x24001ebc

08011918 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011918:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 801191c:	3b01      	subs	r3, #1
 801191e:	b29b      	uxth	r3, r3
 8011920:	428b      	cmp	r3, r1
 8011922:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011926:	b510      	push	{r4, lr}
 8011928:	d908      	bls.n	801193c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801192a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801192e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8011932:	681a      	ldr	r2, [r3, #0]
 8011934:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011938:	685a      	ldr	r2, [r3, #4]
 801193a:	6062      	str	r2, [r4, #4]
 801193c:	bd10      	pop	{r4, pc}
	...

08011940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8011940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011944:	b08f      	sub	sp, #60	; 0x3c
 8011946:	4b8f      	ldr	r3, [pc, #572]	; (8011b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8011948:	4683      	mov	fp, r0
 801194a:	ac0a      	add	r4, sp, #40	; 0x28
 801194c:	e884 0006 	stmia.w	r4, {r1, r2}
 8011950:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011954:	4620      	mov	r0, r4
 8011956:	4b8c      	ldr	r3, [pc, #560]	; (8011b88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8011958:	f9b3 1000 	ldrsh.w	r1, [r3]
 801195c:	f7ff fe10 	bl	8011580 <_ZN8touchgfx4Rect10restrictToEss>
 8011960:	4620      	mov	r0, r4
 8011962:	f7fc fe2a 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 8011966:	2800      	cmp	r0, #0
 8011968:	d16a      	bne.n	8011a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801196a:	9403      	str	r4, [sp, #12]
 801196c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8011970:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8011974:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8011978:	9301      	str	r3, [sp, #4]
 801197a:	35a4      	adds	r5, #164	; 0xa4
 801197c:	b15c      	cbz	r4, 8011996 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801197e:	4629      	mov	r1, r5
 8011980:	9803      	ldr	r0, [sp, #12]
 8011982:	f7ff fe4d 	bl	8011620 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011986:	3c01      	subs	r4, #1
 8011988:	b118      	cbz	r0, 8011992 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801198a:	b2a1      	uxth	r1, r4
 801198c:	9801      	ldr	r0, [sp, #4]
 801198e:	f7ff ffc3 	bl	8011918 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011992:	3d08      	subs	r5, #8
 8011994:	e7f2      	b.n	801197c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8011996:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801199a:	f10a 33ff 	add.w	r3, sl, #4294967295
 801199e:	f8cd a010 	str.w	sl, [sp, #16]
 80119a2:	9302      	str	r3, [sp, #8]
 80119a4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80119a8:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80119ac:	9306      	str	r3, [sp, #24]
 80119ae:	445c      	add	r4, fp
 80119b0:	2500      	movs	r5, #0
 80119b2:	4626      	mov	r6, r4
 80119b4:	f8cd a014 	str.w	sl, [sp, #20]
 80119b8:	462f      	mov	r7, r5
 80119ba:	9b05      	ldr	r3, [sp, #20]
 80119bc:	2b00      	cmp	r3, #0
 80119be:	d073      	beq.n	8011aa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80119c0:	9903      	ldr	r1, [sp, #12]
 80119c2:	4630      	mov	r0, r6
 80119c4:	f7ff fdba 	bl	801153c <_ZNK8touchgfx4Rect9intersectERKS0_>
 80119c8:	b350      	cbz	r0, 8011a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80119ca:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80119ce:	f9b6 c000 	ldrsh.w	ip, [r6]
 80119d2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80119d6:	45e6      	cmp	lr, ip
 80119d8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80119dc:	db33      	blt.n	8011a46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80119de:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80119e2:	88b3      	ldrh	r3, [r6, #4]
 80119e4:	4472      	add	r2, lr
 80119e6:	4463      	add	r3, ip
 80119e8:	b212      	sxth	r2, r2
 80119ea:	b21b      	sxth	r3, r3
 80119ec:	429a      	cmp	r2, r3
 80119ee:	dc2a      	bgt.n	8011a46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80119f0:	fa1f f289 	uxth.w	r2, r9
 80119f4:	88f3      	ldrh	r3, [r6, #6]
 80119f6:	45c8      	cmp	r8, r9
 80119f8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80119fc:	4413      	add	r3, r2
 80119fe:	fa1f fc88 	uxth.w	ip, r8
 8011a02:	b29b      	uxth	r3, r3
 8011a04:	fa0f fe83 	sxth.w	lr, r3
 8011a08:	db0f      	blt.n	8011a2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011a0a:	eba3 030c 	sub.w	r3, r3, ip
 8011a0e:	1ac9      	subs	r1, r1, r3
 8011a10:	b209      	sxth	r1, r1
 8011a12:	2900      	cmp	r1, #0
 8011a14:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011a18:	dd12      	ble.n	8011a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011a1a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8011a1e:	4605      	mov	r5, r0
 8011a20:	9b05      	ldr	r3, [sp, #20]
 8011a22:	3e08      	subs	r6, #8
 8011a24:	3b01      	subs	r3, #1
 8011a26:	9305      	str	r3, [sp, #20]
 8011a28:	e7c7      	b.n	80119ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8011a2a:	4461      	add	r1, ip
 8011a2c:	b209      	sxth	r1, r1
 8011a2e:	4571      	cmp	r1, lr
 8011a30:	dc38      	bgt.n	8011aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011a32:	eba2 020c 	sub.w	r2, r2, ip
 8011a36:	b212      	sxth	r2, r2
 8011a38:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011a3c:	2a00      	cmp	r2, #0
 8011a3e:	dcee      	bgt.n	8011a1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011a40:	b00f      	add	sp, #60	; 0x3c
 8011a42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a46:	45c8      	cmp	r8, r9
 8011a48:	db2c      	blt.n	8011aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011a4a:	88f3      	ldrh	r3, [r6, #6]
 8011a4c:	4499      	add	r9, r3
 8011a4e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8011a52:	4498      	add	r8, r3
 8011a54:	fa0f f989 	sxth.w	r9, r9
 8011a58:	fa0f f888 	sxth.w	r8, r8
 8011a5c:	45c1      	cmp	r9, r8
 8011a5e:	db21      	blt.n	8011aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011a60:	fa1f f28c 	uxth.w	r2, ip
 8011a64:	88b3      	ldrh	r3, [r6, #4]
 8011a66:	45e6      	cmp	lr, ip
 8011a68:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011a6c:	4413      	add	r3, r2
 8011a6e:	fa1f f88e 	uxth.w	r8, lr
 8011a72:	b29b      	uxth	r3, r3
 8011a74:	fa0f f983 	sxth.w	r9, r3
 8011a78:	db0a      	blt.n	8011a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8011a7a:	eba3 0308 	sub.w	r3, r3, r8
 8011a7e:	1ac9      	subs	r1, r1, r3
 8011a80:	b209      	sxth	r1, r1
 8011a82:	2900      	cmp	r1, #0
 8011a84:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8011a88:	ddda      	ble.n	8011a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011a8a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8011a8e:	e7c6      	b.n	8011a1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011a90:	4441      	add	r1, r8
 8011a92:	b209      	sxth	r1, r1
 8011a94:	4549      	cmp	r1, r9
 8011a96:	dc05      	bgt.n	8011aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011a98:	eba2 0208 	sub.w	r2, r2, r8
 8011a9c:	b212      	sxth	r2, r2
 8011a9e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8011aa2:	e7cb      	b.n	8011a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8011aa4:	4607      	mov	r7, r0
 8011aa6:	e7bb      	b.n	8011a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011aa8:	2d00      	cmp	r5, #0
 8011aaa:	d181      	bne.n	80119b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8011aac:	2f00      	cmp	r7, #0
 8011aae:	f000 81dd 	beq.w	8011e6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011ab2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8011ab6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8011aba:	b2b3      	uxth	r3, r6
 8011abc:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8011ac0:	9305      	str	r3, [sp, #20]
 8011ac2:	9a05      	ldr	r2, [sp, #20]
 8011ac4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8011ac8:	4413      	add	r3, r2
 8011aca:	b2ba      	uxth	r2, r7
 8011acc:	4492      	add	sl, r2
 8011ace:	b29b      	uxth	r3, r3
 8011ad0:	fa1f fa8a 	uxth.w	sl, sl
 8011ad4:	fa0f f883 	sxth.w	r8, r3
 8011ad8:	fa0f f98a 	sxth.w	r9, sl
 8011adc:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011ae0:	9b04      	ldr	r3, [sp, #16]
 8011ae2:	2b00      	cmp	r3, #0
 8011ae4:	d052      	beq.n	8011b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8011ae6:	9903      	ldr	r1, [sp, #12]
 8011ae8:	4620      	mov	r0, r4
 8011aea:	f7ff fd27 	bl	801153c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011aee:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011af2:	b1c0      	cbz	r0, 8011b26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011af4:	f9b4 e000 	ldrsh.w	lr, [r4]
 8011af8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011afc:	4576      	cmp	r6, lr
 8011afe:	dc22      	bgt.n	8011b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8011b00:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011b04:	44f4      	add	ip, lr
 8011b06:	fa0f fc8c 	sxth.w	ip, ip
 8011b0a:	45e0      	cmp	r8, ip
 8011b0c:	db1b      	blt.n	8011b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8011b0e:	428f      	cmp	r7, r1
 8011b10:	fa1f fc81 	uxth.w	ip, r1
 8011b14:	88e1      	ldrh	r1, [r4, #6]
 8011b16:	dc0d      	bgt.n	8011b34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8011b18:	ebaa 0c0c 	sub.w	ip, sl, ip
 8011b1c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8011b20:	eba1 010c 	sub.w	r1, r1, ip
 8011b24:	80e1      	strh	r1, [r4, #6]
 8011b26:	4628      	mov	r0, r5
 8011b28:	9904      	ldr	r1, [sp, #16]
 8011b2a:	3c08      	subs	r4, #8
 8011b2c:	4605      	mov	r5, r0
 8011b2e:	3901      	subs	r1, #1
 8011b30:	9104      	str	r1, [sp, #16]
 8011b32:	e7d3      	b.n	8011adc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8011b34:	4461      	add	r1, ip
 8011b36:	b209      	sxth	r1, r1
 8011b38:	4549      	cmp	r1, r9
 8011b3a:	dcf5      	bgt.n	8011b28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8011b3c:	eba2 0c0c 	sub.w	ip, r2, ip
 8011b40:	f8a4 c006 	strh.w	ip, [r4, #6]
 8011b44:	e7ef      	b.n	8011b26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011b46:	428f      	cmp	r7, r1
 8011b48:	dcee      	bgt.n	8011b28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8011b4a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8011b4e:	4461      	add	r1, ip
 8011b50:	b209      	sxth	r1, r1
 8011b52:	4589      	cmp	r9, r1
 8011b54:	dbe8      	blt.n	8011b28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8011b56:	4576      	cmp	r6, lr
 8011b58:	fa1f fc8e 	uxth.w	ip, lr
 8011b5c:	88a1      	ldrh	r1, [r4, #4]
 8011b5e:	dc07      	bgt.n	8011b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8011b60:	eba3 0c0c 	sub.w	ip, r3, ip
 8011b64:	f8a4 8000 	strh.w	r8, [r4]
 8011b68:	eba1 010c 	sub.w	r1, r1, ip
 8011b6c:	80a1      	strh	r1, [r4, #4]
 8011b6e:	e7da      	b.n	8011b26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011b70:	4461      	add	r1, ip
 8011b72:	b209      	sxth	r1, r1
 8011b74:	4588      	cmp	r8, r1
 8011b76:	dbd7      	blt.n	8011b28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8011b78:	9905      	ldr	r1, [sp, #20]
 8011b7a:	eba1 0c0c 	sub.w	ip, r1, ip
 8011b7e:	f8a4 c004 	strh.w	ip, [r4, #4]
 8011b82:	e7d0      	b.n	8011b26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011b84:	24001e72 	.word	0x24001e72
 8011b88:	24001e70 	.word	0x24001e70
 8011b8c:	2d00      	cmp	r5, #0
 8011b8e:	f000 816d 	beq.w	8011e6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011b92:	9b06      	ldr	r3, [sp, #24]
 8011b94:	445b      	add	r3, fp
 8011b96:	461c      	mov	r4, r3
 8011b98:	9b02      	ldr	r3, [sp, #8]
 8011b9a:	3301      	adds	r3, #1
 8011b9c:	f000 8166 	beq.w	8011e6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011ba0:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8011ba4:	9803      	ldr	r0, [sp, #12]
 8011ba6:	4629      	mov	r1, r5
 8011ba8:	f7ff fd3a 	bl	8011620 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011bac:	b120      	cbz	r0, 8011bb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8011bae:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011bb2:	9801      	ldr	r0, [sp, #4]
 8011bb4:	f7ff feb0 	bl	8011918 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011bb8:	9903      	ldr	r1, [sp, #12]
 8011bba:	4628      	mov	r0, r5
 8011bbc:	f7ff fcbe 	bl	801153c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011bc0:	2800      	cmp	r0, #0
 8011bc2:	f000 809c 	beq.w	8011cfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8011bc6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8011bca:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8011bce:	fa1f f189 	uxth.w	r1, r9
 8011bd2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8011bd6:	9309      	str	r3, [sp, #36]	; 0x24
 8011bd8:	eb01 0c03 	add.w	ip, r1, r3
 8011bdc:	b283      	uxth	r3, r0
 8011bde:	4548      	cmp	r0, r9
 8011be0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011be4:	fa1f fa8c 	uxth.w	sl, ip
 8011be8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8011bec:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8011bf0:	eb03 050c 	add.w	r5, r3, ip
 8011bf4:	b2ad      	uxth	r5, r5
 8011bf6:	9505      	str	r5, [sp, #20]
 8011bf8:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8011bfc:	9504      	str	r5, [sp, #16]
 8011bfe:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8011c02:	f340 8099 	ble.w	8011d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8011c06:	1a5b      	subs	r3, r3, r1
 8011c08:	4596      	cmp	lr, r2
 8011c0a:	fa0f f08a 	sxth.w	r0, sl
 8011c0e:	b29b      	uxth	r3, r3
 8011c10:	b21e      	sxth	r6, r3
 8011c12:	dd2e      	ble.n	8011c72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8011c14:	9f02      	ldr	r7, [sp, #8]
 8011c16:	fa1f fe8e 	uxth.w	lr, lr
 8011c1a:	b292      	uxth	r2, r2
 8011c1c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011c20:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011c24:	9f04      	ldr	r7, [sp, #16]
 8011c26:	ebae 0102 	sub.w	r1, lr, r2
 8011c2a:	44a6      	add	lr, r4
 8011c2c:	1a3f      	subs	r7, r7, r0
 8011c2e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8011c32:	b289      	uxth	r1, r1
 8011c34:	4402      	add	r2, r0
 8011c36:	fa0f fe8e 	sxth.w	lr, lr
 8011c3a:	b20d      	sxth	r5, r1
 8011c3c:	b212      	sxth	r2, r2
 8011c3e:	436f      	muls	r7, r5
 8011c40:	ebae 0202 	sub.w	r2, lr, r2
 8011c44:	4372      	muls	r2, r6
 8011c46:	4297      	cmp	r7, r2
 8011c48:	db09      	blt.n	8011c5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8011c4a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8011c4e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8011c52:	449c      	add	ip, r3
 8011c54:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011c58:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011c5c:	e686      	b.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011c5e:	4421      	add	r1, r4
 8011c60:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8011c64:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8011c68:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011c6c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011c70:	e67c      	b.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011c72:	9f04      	ldr	r7, [sp, #16]
 8011c74:	42b8      	cmp	r0, r7
 8011c76:	da27      	bge.n	8011cc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011c78:	9902      	ldr	r1, [sp, #8]
 8011c7a:	1a3f      	subs	r7, r7, r0
 8011c7c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8011c80:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8011c84:	eb05 010e 	add.w	r1, r5, lr
 8011c88:	fa1f f881 	uxth.w	r8, r1
 8011c8c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8011c90:	4411      	add	r1, r2
 8011c92:	fa0f f988 	sxth.w	r9, r8
 8011c96:	eba2 020e 	sub.w	r2, r2, lr
 8011c9a:	eba1 0108 	sub.w	r1, r1, r8
 8011c9e:	4372      	muls	r2, r6
 8011ca0:	b289      	uxth	r1, r1
 8011ca2:	fa0f f881 	sxth.w	r8, r1
 8011ca6:	fb08 f707 	mul.w	r7, r8, r7
 8011caa:	42ba      	cmp	r2, r7
 8011cac:	dc06      	bgt.n	8011cbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8011cae:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8011cb2:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8011cb6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8011cba:	e7ca      	b.n	8011c52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8011cbc:	4429      	add	r1, r5
 8011cbe:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8011cc2:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011cc6:	e651      	b.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011cc8:	9805      	ldr	r0, [sp, #20]
 8011cca:	2d06      	cmp	r5, #6
 8011ccc:	ebaa 0000 	sub.w	r0, sl, r0
 8011cd0:	b280      	uxth	r0, r0
 8011cd2:	fa0f fe80 	sxth.w	lr, r0
 8011cd6:	d817      	bhi.n	8011d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8011cd8:	9b04      	ldr	r3, [sp, #16]
 8011cda:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8011cde:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8011ce2:	1c6b      	adds	r3, r5, #1
 8011ce4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8011ce8:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8011cec:	9b01      	ldr	r3, [sp, #4]
 8011cee:	9801      	ldr	r0, [sp, #4]
 8011cf0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011cf4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8011cf8:	805a      	strh	r2, [r3, #2]
 8011cfa:	809e      	strh	r6, [r3, #4]
 8011cfc:	80d9      	strh	r1, [r3, #6]
 8011cfe:	9b02      	ldr	r3, [sp, #8]
 8011d00:	3c08      	subs	r4, #8
 8011d02:	3b01      	subs	r3, #1
 8011d04:	9302      	str	r3, [sp, #8]
 8011d06:	e747      	b.n	8011b98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8011d08:	9a02      	ldr	r2, [sp, #8]
 8011d0a:	45b6      	cmp	lr, r6
 8011d0c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011d10:	db0d      	blt.n	8011d2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8011d12:	449c      	add	ip, r3
 8011d14:	445a      	add	r2, fp
 8011d16:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8011d1a:	fa1f fc8c 	uxth.w	ip, ip
 8011d1e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8011d22:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011d26:	448c      	add	ip, r1
 8011d28:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8011d2c:	e61e      	b.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011d2e:	445a      	add	r2, fp
 8011d30:	4484      	add	ip, r0
 8011d32:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8011d36:	e78f      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8011d38:	fa1f f18e 	uxth.w	r1, lr
 8011d3c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011d40:	b293      	uxth	r3, r2
 8011d42:	4596      	cmp	lr, r2
 8011d44:	eb01 0806 	add.w	r8, r1, r6
 8011d48:	9306      	str	r3, [sp, #24]
 8011d4a:	fa1f f888 	uxth.w	r8, r8
 8011d4e:	9f06      	ldr	r7, [sp, #24]
 8011d50:	fa0f f388 	sxth.w	r3, r8
 8011d54:	9307      	str	r3, [sp, #28]
 8011d56:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8011d5a:	443b      	add	r3, r7
 8011d5c:	b29b      	uxth	r3, r3
 8011d5e:	9308      	str	r3, [sp, #32]
 8011d60:	da24      	bge.n	8011dac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8011d62:	9905      	ldr	r1, [sp, #20]
 8011d64:	eba3 0308 	sub.w	r3, r3, r8
 8011d68:	eba2 020e 	sub.w	r2, r2, lr
 8011d6c:	eba9 0000 	sub.w	r0, r9, r0
 8011d70:	ebaa 0401 	sub.w	r4, sl, r1
 8011d74:	b29b      	uxth	r3, r3
 8011d76:	b2a4      	uxth	r4, r4
 8011d78:	b219      	sxth	r1, r3
 8011d7a:	b225      	sxth	r5, r4
 8011d7c:	4348      	muls	r0, r1
 8011d7e:	436a      	muls	r2, r5
 8011d80:	4282      	cmp	r2, r0
 8011d82:	9a02      	ldr	r2, [sp, #8]
 8011d84:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011d88:	445a      	add	r2, fp
 8011d8a:	dc06      	bgt.n	8011d9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8011d8c:	9b07      	ldr	r3, [sp, #28]
 8011d8e:	44a4      	add	ip, r4
 8011d90:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8011d94:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8011d98:	e75e      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8011d9a:	9904      	ldr	r1, [sp, #16]
 8011d9c:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8011da0:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8011da4:	4433      	add	r3, r6
 8011da6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011daa:	e5df      	b.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011dac:	9f06      	ldr	r7, [sp, #24]
 8011dae:	9b04      	ldr	r3, [sp, #16]
 8011db0:	1bc9      	subs	r1, r1, r7
 8011db2:	fa0f f78a 	sxth.w	r7, sl
 8011db6:	b289      	uxth	r1, r1
 8011db8:	429f      	cmp	r7, r3
 8011dba:	fa0f fe81 	sxth.w	lr, r1
 8011dbe:	dd23      	ble.n	8011e08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8011dc0:	9a05      	ldr	r2, [sp, #20]
 8011dc2:	eba9 0000 	sub.w	r0, r9, r0
 8011dc6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011dca:	ebaa 0202 	sub.w	r2, sl, r2
 8011dce:	9d07      	ldr	r5, [sp, #28]
 8011dd0:	fb0e f000 	mul.w	r0, lr, r0
 8011dd4:	b292      	uxth	r2, r2
 8011dd6:	eba5 0a03 	sub.w	sl, r5, r3
 8011dda:	9b02      	ldr	r3, [sp, #8]
 8011ddc:	b214      	sxth	r4, r2
 8011dde:	00db      	lsls	r3, r3, #3
 8011de0:	fb04 fa0a 	mul.w	sl, r4, sl
 8011de4:	445b      	add	r3, fp
 8011de6:	4550      	cmp	r0, sl
 8011de8:	db03      	blt.n	8011df2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8011dea:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8011dee:	4494      	add	ip, r2
 8011df0:	e732      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8011df2:	9a04      	ldr	r2, [sp, #16]
 8011df4:	4431      	add	r1, r6
 8011df6:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8011dfa:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8011dfe:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8011e02:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011e06:	e75c      	b.n	8011cc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8011e08:	9b08      	ldr	r3, [sp, #32]
 8011e0a:	2d06      	cmp	r5, #6
 8011e0c:	eba3 0308 	sub.w	r3, r3, r8
 8011e10:	b29b      	uxth	r3, r3
 8011e12:	b218      	sxth	r0, r3
 8011e14:	d813      	bhi.n	8011e3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8011e16:	9b07      	ldr	r3, [sp, #28]
 8011e18:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8011e1c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8011e20:	1c6b      	adds	r3, r5, #1
 8011e22:	9901      	ldr	r1, [sp, #4]
 8011e24:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8011e28:	9b01      	ldr	r3, [sp, #4]
 8011e2a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8011e2e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011e32:	805a      	strh	r2, [r3, #2]
 8011e34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011e36:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011e3a:	809a      	strh	r2, [r3, #4]
 8011e3c:	e75f      	b.n	8011cfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8011e3e:	9c02      	ldr	r4, [sp, #8]
 8011e40:	4570      	cmp	r0, lr
 8011e42:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8011e46:	db0d      	blt.n	8011e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8011e48:	4431      	add	r1, r6
 8011e4a:	9b06      	ldr	r3, [sp, #24]
 8011e4c:	445c      	add	r4, fp
 8011e4e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8011e52:	b289      	uxth	r1, r1
 8011e54:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8011e58:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011e5c:	4419      	add	r1, r3
 8011e5e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8011e62:	e583      	b.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011e64:	445c      	add	r4, fp
 8011e66:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8011e6a:	e79b      	b.n	8011da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8011e6c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8011e70:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8011e74:	1e65      	subs	r5, r4, #1
 8011e76:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8011e7a:	b2ad      	uxth	r5, r5
 8011e7c:	42b5      	cmp	r5, r6
 8011e7e:	d044      	beq.n	8011f0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8011e80:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8011e84:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8011e88:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8011e8c:	4282      	cmp	r2, r0
 8011e8e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8011e92:	d11f      	bne.n	8011ed4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011e94:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8011e98:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8011e9c:	459c      	cmp	ip, r3
 8011e9e:	d119      	bne.n	8011ed4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011ea0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8011ea4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011ea8:	19d8      	adds	r0, r3, r7
 8011eaa:	b200      	sxth	r0, r0
 8011eac:	4288      	cmp	r0, r1
 8011eae:	d109      	bne.n	8011ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8011eb0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8011eb4:	4413      	add	r3, r2
 8011eb6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8011eba:	4629      	mov	r1, r5
 8011ebc:	9801      	ldr	r0, [sp, #4]
 8011ebe:	f7ff fd2b 	bl	8011918 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011ec2:	e003      	b.n	8011ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8011ec4:	4411      	add	r1, r2
 8011ec6:	b209      	sxth	r1, r1
 8011ec8:	42b9      	cmp	r1, r7
 8011eca:	d0f3      	beq.n	8011eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8011ecc:	3d01      	subs	r5, #1
 8011ece:	3c08      	subs	r4, #8
 8011ed0:	b2ad      	uxth	r5, r5
 8011ed2:	e7d3      	b.n	8011e7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8011ed4:	42b9      	cmp	r1, r7
 8011ed6:	d1f9      	bne.n	8011ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8011ed8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8011edc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8011ee0:	4299      	cmp	r1, r3
 8011ee2:	d1f3      	bne.n	8011ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8011ee4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8011ee8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011eec:	181f      	adds	r7, r3, r0
 8011eee:	b23f      	sxth	r7, r7
 8011ef0:	42ba      	cmp	r2, r7
 8011ef2:	d105      	bne.n	8011f00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8011ef4:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8011ef8:	440b      	add	r3, r1
 8011efa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011efe:	e7dc      	b.n	8011eba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8011f00:	440a      	add	r2, r1
 8011f02:	b212      	sxth	r2, r2
 8011f04:	4290      	cmp	r0, r2
 8011f06:	d1e1      	bne.n	8011ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8011f08:	e7f6      	b.n	8011ef8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8011f0a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8011f0e:	2e07      	cmp	r6, #7
 8011f10:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8011f14:	d812      	bhi.n	8011f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8011f16:	1c75      	adds	r5, r6, #1
 8011f18:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8011f1c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011f20:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8011f24:	9d01      	ldr	r5, [sp, #4]
 8011f26:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8011f2a:	442c      	add	r4, r5
 8011f2c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8011f30:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8011f34:	8061      	strh	r1, [r4, #2]
 8011f36:	80a2      	strh	r2, [r4, #4]
 8011f38:	80e3      	strh	r3, [r4, #6]
 8011f3a:	e581      	b.n	8011a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011f3c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8011f40:	3e01      	subs	r6, #1
 8011f42:	445c      	add	r4, fp
 8011f44:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011f48:	f04f 37ff 	mov.w	r7, #4294967295
 8011f4c:	2500      	movs	r5, #0
 8011f4e:	9305      	str	r3, [sp, #20]
 8011f50:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8011f54:	1e72      	subs	r2, r6, #1
 8011f56:	9302      	str	r3, [sp, #8]
 8011f58:	4691      	mov	r9, r2
 8011f5a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8011f5e:	9304      	str	r3, [sp, #16]
 8011f60:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8011f64:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011f68:	6818      	ldr	r0, [r3, #0]
 8011f6a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8011f6e:	9207      	str	r2, [sp, #28]
 8011f70:	bf16      	itet	ne
 8011f72:	9905      	ldrne	r1, [sp, #20]
 8011f74:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8011f78:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011f7c:	9306      	str	r3, [sp, #24]
 8011f7e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8011f82:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011f86:	fb18 f801 	smulbb	r8, r8, r1
 8011f8a:	6859      	ldr	r1, [r3, #4]
 8011f8c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011f90:	4671      	mov	r1, lr
 8011f92:	a80c      	add	r0, sp, #48	; 0x30
 8011f94:	f7ff fb6a 	bl	801166c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011f98:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8011f9c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8011fa0:	f04f 0c08 	mov.w	ip, #8
 8011fa4:	9b04      	ldr	r3, [sp, #16]
 8011fa6:	9a02      	ldr	r2, [sp, #8]
 8011fa8:	fb10 f001 	smulbb	r0, r0, r1
 8011fac:	fb02 8803 	mla	r8, r2, r3, r8
 8011fb0:	eba0 0108 	sub.w	r1, r0, r8
 8011fb4:	fb90 f0fc 	sdiv	r0, r0, ip
 8011fb8:	4288      	cmp	r0, r1
 8011fba:	dc20      	bgt.n	8011ffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8011fbc:	4551      	cmp	r1, sl
 8011fbe:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011fc2:	da03      	bge.n	8011fcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8011fc4:	b1d9      	cbz	r1, 8011ffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8011fc6:	468a      	mov	sl, r1
 8011fc8:	464f      	mov	r7, r9
 8011fca:	4635      	mov	r5, r6
 8011fcc:	f109 39ff 	add.w	r9, r9, #4294967295
 8011fd0:	f119 0f02 	cmn.w	r9, #2
 8011fd4:	d1c6      	bne.n	8011f64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8011fd6:	4616      	mov	r6, r2
 8011fd8:	3201      	adds	r2, #1
 8011fda:	f1a4 0408 	sub.w	r4, r4, #8
 8011fde:	d1b7      	bne.n	8011f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8011fe0:	9b01      	ldr	r3, [sp, #4]
 8011fe2:	b2ac      	uxth	r4, r5
 8011fe4:	00ed      	lsls	r5, r5, #3
 8011fe6:	1958      	adds	r0, r3, r5
 8011fe8:	1c7b      	adds	r3, r7, #1
 8011fea:	d10b      	bne.n	8012004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8011fec:	4601      	mov	r1, r0
 8011fee:	9803      	ldr	r0, [sp, #12]
 8011ff0:	f7ff fb3c 	bl	801166c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011ff4:	4621      	mov	r1, r4
 8011ff6:	9801      	ldr	r0, [sp, #4]
 8011ff8:	f7ff fc8e 	bl	8011918 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011ffc:	e4b6      	b.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011ffe:	464f      	mov	r7, r9
 8012000:	4635      	mov	r5, r6
 8012002:	e7ed      	b.n	8011fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8012004:	9b01      	ldr	r3, [sp, #4]
 8012006:	00ff      	lsls	r7, r7, #3
 8012008:	445d      	add	r5, fp
 801200a:	19d9      	adds	r1, r3, r7
 801200c:	445f      	add	r7, fp
 801200e:	f7ff fb2d 	bl	801166c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012012:	9b03      	ldr	r3, [sp, #12]
 8012014:	cb03      	ldmia	r3!, {r0, r1}
 8012016:	9b03      	ldr	r3, [sp, #12]
 8012018:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 801201c:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8012020:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8012024:	6869      	ldr	r1, [r5, #4]
 8012026:	c303      	stmia	r3!, {r0, r1}
 8012028:	e7e4      	b.n	8011ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 801202a:	bf00      	nop

0801202c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801202c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012030:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8012034:	b09b      	sub	sp, #108	; 0x6c
 8012036:	4604      	mov	r4, r0
 8012038:	4630      	mov	r0, r6
 801203a:	f7fc fabe 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 801203e:	4605      	mov	r5, r0
 8012040:	b948      	cbnz	r0, 8012056 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8012042:	6823      	ldr	r3, [r4, #0]
 8012044:	4620      	mov	r0, r4
 8012046:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012048:	e896 0006 	ldmia.w	r6, {r1, r2}
 801204c:	4798      	blx	r3
 801204e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8012052:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8012056:	4bc5      	ldr	r3, [pc, #788]	; (801236c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8012058:	681b      	ldr	r3, [r3, #0]
 801205a:	2b00      	cmp	r3, #0
 801205c:	d03f      	beq.n	80120de <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801205e:	4dc4      	ldr	r5, [pc, #784]	; (8012370 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8012060:	4628      	mov	r0, r5
 8012062:	f7fc faaa 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 8012066:	4606      	mov	r6, r0
 8012068:	2800      	cmp	r0, #0
 801206a:	d138      	bne.n	80120de <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801206c:	4628      	mov	r0, r5
 801206e:	f7ff f99b 	bl	80113a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012072:	6823      	ldr	r3, [r4, #0]
 8012074:	6829      	ldr	r1, [r5, #0]
 8012076:	4620      	mov	r0, r4
 8012078:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801207a:	686a      	ldr	r2, [r5, #4]
 801207c:	4798      	blx	r3
 801207e:	802e      	strh	r6, [r5, #0]
 8012080:	806e      	strh	r6, [r5, #2]
 8012082:	80ae      	strh	r6, [r5, #4]
 8012084:	80ee      	strh	r6, [r5, #6]
 8012086:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801208a:	4dba      	ldr	r5, [pc, #744]	; (8012374 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 801208c:	4640      	mov	r0, r8
 801208e:	f7ff fbe7 	bl	8011860 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8012092:	882e      	ldrh	r6, [r5, #0]
 8012094:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8012098:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801209c:	4633      	mov	r3, r6
 801209e:	42bb      	cmp	r3, r7
 80120a0:	d224      	bcs.n	80120ec <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80120a2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80120a6:	2907      	cmp	r1, #7
 80120a8:	d816      	bhi.n	80120d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80120aa:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80120ae:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80120b2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80120b6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80120ba:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80120be:	1c4a      	adds	r2, r1, #1
 80120c0:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80120c4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80120c8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80120cc:	f8a2 a002 	strh.w	sl, [r2, #2]
 80120d0:	f8a2 e004 	strh.w	lr, [r2, #4]
 80120d4:	f8a2 c006 	strh.w	ip, [r2, #6]
 80120d8:	3301      	adds	r3, #1
 80120da:	b29b      	uxth	r3, r3
 80120dc:	e7df      	b.n	801209e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80120de:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80120e2:	2b00      	cmp	r3, #0
 80120e4:	d1cf      	bne.n	8012086 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80120e6:	b01b      	add	sp, #108	; 0x6c
 80120e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120ec:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80120f0:	42b3      	cmp	r3, r6
 80120f2:	d90c      	bls.n	801210e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80120f4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80120f8:	6822      	ldr	r2, [r4, #0]
 80120fa:	3601      	adds	r6, #1
 80120fc:	4620      	mov	r0, r4
 80120fe:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8012100:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8012104:	b2b6      	uxth	r6, r6
 8012106:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 801210a:	47b8      	blx	r7
 801210c:	e7ee      	b.n	80120ec <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801210e:	4a9a      	ldr	r2, [pc, #616]	; (8012378 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8012110:	6813      	ldr	r3, [r2, #0]
 8012112:	4691      	mov	r9, r2
 8012114:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8012118:	2b01      	cmp	r3, #1
 801211a:	f040 80e0 	bne.w	80122de <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 801211e:	8829      	ldrh	r1, [r5, #0]
 8012120:	2600      	movs	r6, #0
 8012122:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8012126:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801212a:	33ae      	adds	r3, #174	; 0xae
 801212c:	428f      	cmp	r7, r1
 801212e:	f103 0308 	add.w	r3, r3, #8
 8012132:	dd0a      	ble.n	801214a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8012134:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8012138:	3101      	adds	r1, #1
 801213a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 801213e:	4402      	add	r2, r0
 8012140:	b212      	sxth	r2, r2
 8012142:	4296      	cmp	r6, r2
 8012144:	bfb8      	it	lt
 8012146:	4616      	movlt	r6, r2
 8012148:	e7f0      	b.n	801212c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801214a:	4b8c      	ldr	r3, [pc, #560]	; (801237c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801214c:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8012378 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8012150:	881b      	ldrh	r3, [r3, #0]
 8012152:	2b0f      	cmp	r3, #15
 8012154:	bf8c      	ite	hi
 8012156:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801215a:	f04f 0b01 	movls.w	fp, #1
 801215e:	2300      	movs	r3, #0
 8012160:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8012164:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8012168:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 801216c:	4b82      	ldr	r3, [pc, #520]	; (8012378 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 801216e:	4438      	add	r0, r7
 8012170:	b207      	sxth	r7, r0
 8012172:	6818      	ldr	r0, [r3, #0]
 8012174:	42b7      	cmp	r7, r6
 8012176:	6803      	ldr	r3, [r0, #0]
 8012178:	f280 8083 	bge.w	8012282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 801217c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8012180:	4798      	blx	r3
 8012182:	eb07 030b 	add.w	r3, r7, fp
 8012186:	4298      	cmp	r0, r3
 8012188:	da07      	bge.n	801219a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801218a:	42b0      	cmp	r0, r6
 801218c:	da05      	bge.n	801219a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801218e:	4287      	cmp	r7, r0
 8012190:	dd6c      	ble.n	801226c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8012192:	2f00      	cmp	r7, #0
 8012194:	dd6a      	ble.n	801226c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8012196:	4630      	mov	r0, r6
 8012198:	e004      	b.n	80121a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 801219a:	4287      	cmp	r7, r0
 801219c:	dcfb      	bgt.n	8012196 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 801219e:	42b0      	cmp	r0, r6
 80121a0:	bfa8      	it	ge
 80121a2:	4630      	movge	r0, r6
 80121a4:	4b76      	ldr	r3, [pc, #472]	; (8012380 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80121a6:	1bc0      	subs	r0, r0, r7
 80121a8:	2200      	movs	r2, #0
 80121aa:	f8ad 7016 	strh.w	r7, [sp, #22]
 80121ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 80121b2:	882f      	ldrh	r7, [r5, #0]
 80121b4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80121b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80121bc:	f8ad 001a 	strh.w	r0, [sp, #26]
 80121c0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80121c4:	42bb      	cmp	r3, r7
 80121c6:	d9cd      	bls.n	8012164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 80121c8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80121cc:	ab07      	add	r3, sp, #28
 80121ce:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80121d2:	6851      	ldr	r1, [r2, #4]
 80121d4:	c303      	stmia	r3!, {r0, r1}
 80121d6:	a905      	add	r1, sp, #20
 80121d8:	a807      	add	r0, sp, #28
 80121da:	f7ff f9af 	bl	801153c <_ZNK8touchgfx4Rect9intersectERKS0_>
 80121de:	2800      	cmp	r0, #0
 80121e0:	d04c      	beq.n	801227c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 80121e2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80121e6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80121ea:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80121ee:	4686      	mov	lr, r0
 80121f0:	4290      	cmp	r0, r2
 80121f2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80121f6:	4450      	add	r0, sl
 80121f8:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80121fc:	bfb8      	it	lt
 80121fe:	4696      	movlt	lr, r2
 8012200:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012204:	4452      	add	r2, sl
 8012206:	b280      	uxth	r0, r0
 8012208:	4299      	cmp	r1, r3
 801220a:	468c      	mov	ip, r1
 801220c:	b292      	uxth	r2, r2
 801220e:	9302      	str	r3, [sp, #8]
 8012210:	bfb8      	it	lt
 8012212:	469c      	movlt	ip, r3
 8012214:	b203      	sxth	r3, r0
 8012216:	fa0f fa82 	sxth.w	sl, r2
 801221a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801221e:	f8ad c01e 	strh.w	ip, [sp, #30]
 8012222:	4553      	cmp	r3, sl
 8012224:	bfb8      	it	lt
 8012226:	4602      	movlt	r2, r0
 8012228:	9b02      	ldr	r3, [sp, #8]
 801222a:	eba2 020e 	sub.w	r2, r2, lr
 801222e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012232:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012236:	4411      	add	r1, r2
 8012238:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801223c:	4413      	add	r3, r2
 801223e:	b289      	uxth	r1, r1
 8012240:	b29b      	uxth	r3, r3
 8012242:	b208      	sxth	r0, r1
 8012244:	b21a      	sxth	r2, r3
 8012246:	4290      	cmp	r0, r2
 8012248:	bfb8      	it	lt
 801224a:	460b      	movlt	r3, r1
 801224c:	eba3 030c 	sub.w	r3, r3, ip
 8012250:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012254:	a807      	add	r0, sp, #28
 8012256:	f7fc f9b0 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 801225a:	b920      	cbnz	r0, 8012266 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 801225c:	6823      	ldr	r3, [r4, #0]
 801225e:	a907      	add	r1, sp, #28
 8012260:	4620      	mov	r0, r4
 8012262:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012264:	4798      	blx	r3
 8012266:	3701      	adds	r7, #1
 8012268:	b2bf      	uxth	r7, r7
 801226a:	e7a9      	b.n	80121c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 801226c:	f8d9 0000 	ldr.w	r0, [r9]
 8012270:	2101      	movs	r1, #1
 8012272:	6803      	ldr	r3, [r0, #0]
 8012274:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8012278:	4798      	blx	r3
 801227a:	e773      	b.n	8012164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 801227c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8012280:	e7e8      	b.n	8012254 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8012282:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012284:	4798      	blx	r3
 8012286:	4b3f      	ldr	r3, [pc, #252]	; (8012384 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8012288:	781b      	ldrb	r3, [r3, #0]
 801228a:	2b00      	cmp	r3, #0
 801228c:	f43f af2b 	beq.w	80120e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8012290:	2300      	movs	r3, #0
 8012292:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8012296:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801229a:	882b      	ldrh	r3, [r5, #0]
 801229c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80122a0:	42ab      	cmp	r3, r5
 80122a2:	f4bf af20 	bcs.w	80120e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80122a6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80122aa:	2907      	cmp	r1, #7
 80122ac:	d814      	bhi.n	80122d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 80122ae:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80122b2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80122b6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80122ba:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80122be:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80122c2:	1c4a      	adds	r2, r1, #1
 80122c4:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80122c8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80122cc:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80122d0:	f8a2 c002 	strh.w	ip, [r2, #2]
 80122d4:	8097      	strh	r7, [r2, #4]
 80122d6:	80d6      	strh	r6, [r2, #6]
 80122d8:	3301      	adds	r3, #1
 80122da:	b29b      	uxth	r3, r3
 80122dc:	e7e0      	b.n	80122a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 80122de:	2b02      	cmp	r3, #2
 80122e0:	f040 8133 	bne.w	801254a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 80122e4:	4b28      	ldr	r3, [pc, #160]	; (8012388 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80122e6:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80122ea:	781b      	ldrb	r3, [r3, #0]
 80122ec:	2b01      	cmp	r3, #1
 80122ee:	f000 8098 	beq.w	8012422 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80122f2:	882a      	ldrh	r2, [r5, #0]
 80122f4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80122f8:	3201      	adds	r2, #1
 80122fa:	b292      	uxth	r2, r2
 80122fc:	2900      	cmp	r1, #0
 80122fe:	d0c2      	beq.n	8012286 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8012300:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8012304:	4694      	mov	ip, r2
 8012306:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 801230a:	f04f 0900 	mov.w	r9, #0
 801230e:	441e      	add	r6, r3
 8012310:	b236      	sxth	r6, r6
 8012312:	fa1f f38c 	uxth.w	r3, ip
 8012316:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 801231a:	4299      	cmp	r1, r3
 801231c:	f240 80be 	bls.w	801249c <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8012320:	4427      	add	r7, r4
 8012322:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8012326:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 801232a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 801232e:	4283      	cmp	r3, r0
 8012330:	f340 80a0 	ble.w	8012474 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8012334:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8012338:	46e1      	mov	r9, ip
 801233a:	4406      	add	r6, r0
 801233c:	b236      	sxth	r6, r6
 801233e:	429e      	cmp	r6, r3
 8012340:	bfa8      	it	ge
 8012342:	461e      	movge	r6, r3
 8012344:	f10c 0c01 	add.w	ip, ip, #1
 8012348:	e7e3      	b.n	8012312 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 801234a:	d10a      	bne.n	8012362 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 801234c:	4562      	cmp	r2, ip
 801234e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8012352:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8012356:	bfb8      	it	lt
 8012358:	4662      	movlt	r2, ip
 801235a:	4288      	cmp	r0, r1
 801235c:	bfb8      	it	lt
 801235e:	461f      	movlt	r7, r3
 8012360:	e086      	b.n	8012470 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8012362:	428a      	cmp	r2, r1
 8012364:	bfb8      	it	lt
 8012366:	460a      	movlt	r2, r1
 8012368:	e082      	b.n	8012470 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 801236a:	bf00      	nop
 801236c:	24001eb4 	.word	0x24001eb4
 8012370:	24001ec0 	.word	0x24001ec0
 8012374:	24000018 	.word	0x24000018
 8012378:	24001e7c 	.word	0x24001e7c
 801237c:	24001e72 	.word	0x24001e72
 8012380:	24001e70 	.word	0x24001e70
 8012384:	24001e7a 	.word	0x24001e7a
 8012388:	24001e74 	.word	0x24001e74
 801238c:	19a1      	adds	r1, r4, r6
 801238e:	ab07      	add	r3, sp, #28
 8012390:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8012394:	6849      	ldr	r1, [r1, #4]
 8012396:	c303      	stmia	r3!, {r0, r1}
 8012398:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801239c:	a807      	add	r0, sp, #28
 801239e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80123a2:	2b13      	cmp	r3, #19
 80123a4:	440b      	add	r3, r1
 80123a6:	bfd8      	it	le
 80123a8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80123ac:	1a9b      	subs	r3, r3, r2
 80123ae:	f8ad 201c 	strh.w	r2, [sp, #28]
 80123b2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80123b6:	f7ff f811 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80123ba:	a807      	add	r0, sp, #28
 80123bc:	f7fc f8fd 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 80123c0:	bb78      	cbnz	r0, 8012422 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80123c2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80123c6:	4426      	add	r6, r4
 80123c8:	f8d9 0000 	ldr.w	r0, [r9]
 80123cc:	f1bc 0f14 	cmp.w	ip, #20
 80123d0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80123d4:	f8d0 e000 	ldr.w	lr, [r0]
 80123d8:	bfa8      	it	ge
 80123da:	f04f 0c14 	movge.w	ip, #20
 80123de:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80123e2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80123e6:	fa1f fc8c 	uxth.w	ip, ip
 80123ea:	f8cd c000 	str.w	ip, [sp]
 80123ee:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80123f2:	47d8      	blx	fp
 80123f4:	4683      	mov	fp, r0
 80123f6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80123fa:	a807      	add	r0, sp, #28
 80123fc:	f7fe ffd4 	bl	80113a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012400:	6823      	ldr	r3, [r4, #0]
 8012402:	4620      	mov	r0, r4
 8012404:	a907      	add	r1, sp, #28
 8012406:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012408:	4798      	blx	r3
 801240a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801240e:	eba0 000b 	sub.w	r0, r0, fp
 8012412:	b200      	sxth	r0, r0
 8012414:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8012418:	b918      	cbnz	r0, 8012422 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 801241a:	b2b9      	uxth	r1, r7
 801241c:	4650      	mov	r0, sl
 801241e:	f7ff fa7b 	bl	8011918 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012422:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8012426:	f1bb 0f00 	cmp.w	fp, #0
 801242a:	f43f af2c 	beq.w	8012286 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801242e:	882b      	ldrh	r3, [r5, #0]
 8012430:	2700      	movs	r7, #0
 8012432:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8012436:	3301      	adds	r3, #1
 8012438:	b29b      	uxth	r3, r3
 801243a:	b299      	uxth	r1, r3
 801243c:	00fe      	lsls	r6, r7, #3
 801243e:	458b      	cmp	fp, r1
 8012440:	d9a4      	bls.n	801238c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 8012442:	4426      	add	r6, r4
 8012444:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8012448:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 801244c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8012450:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8012454:	4408      	add	r0, r1
 8012456:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 801245a:	4461      	add	r1, ip
 801245c:	b200      	sxth	r0, r0
 801245e:	b209      	sxth	r1, r1
 8012460:	4288      	cmp	r0, r1
 8012462:	f6bf af72 	bge.w	801234a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8012466:	4584      	cmp	ip, r0
 8012468:	4662      	mov	r2, ip
 801246a:	461f      	mov	r7, r3
 801246c:	bfb8      	it	lt
 801246e:	4602      	movlt	r2, r0
 8012470:	3301      	adds	r3, #1
 8012472:	e7e2      	b.n	801243a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8012474:	d10e      	bne.n	8012494 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8012476:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 801247a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 801247e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8012482:	4473      	add	r3, lr
 8012484:	b21b      	sxth	r3, r3
 8012486:	429e      	cmp	r6, r3
 8012488:	bfa8      	it	ge
 801248a:	461e      	movge	r6, r3
 801248c:	4287      	cmp	r7, r0
 801248e:	bfb8      	it	lt
 8012490:	46e1      	movlt	r9, ip
 8012492:	e757      	b.n	8012344 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8012494:	4286      	cmp	r6, r0
 8012496:	bfa8      	it	ge
 8012498:	4606      	movge	r6, r0
 801249a:	e753      	b.n	8012344 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 801249c:	eb0a 0007 	add.w	r0, sl, r7
 80124a0:	4427      	add	r7, r4
 80124a2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80124a6:	f1bb 0f13 	cmp.w	fp, #19
 80124aa:	bfdc      	itt	le
 80124ac:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80124b0:	445e      	addle	r6, fp
 80124b2:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80124b6:	bfd8      	it	le
 80124b8:	b236      	sxthle	r6, r6
 80124ba:	f7fc f87e 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 80124be:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80124c2:	2800      	cmp	r0, #0
 80124c4:	f47f af1a 	bne.w	80122fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 80124c8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80124cc:	fa1f fb8b 	uxth.w	fp, fp
 80124d0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80124d4:	1ab6      	subs	r6, r6, r2
 80124d6:	4829      	ldr	r0, [pc, #164]	; (801257c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 80124d8:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80124dc:	2e14      	cmp	r6, #20
 80124de:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80124e2:	6800      	ldr	r0, [r0, #0]
 80124e4:	bfa8      	it	ge
 80124e6:	2614      	movge	r6, #20
 80124e8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80124ec:	f8ad 201e 	strh.w	r2, [sp, #30]
 80124f0:	b289      	uxth	r1, r1
 80124f2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80124f6:	b2b6      	uxth	r6, r6
 80124f8:	f8d0 c000 	ldr.w	ip, [r0]
 80124fc:	b292      	uxth	r2, r2
 80124fe:	455e      	cmp	r6, fp
 8012500:	bf94      	ite	ls
 8012502:	9600      	strls	r6, [sp, #0]
 8012504:	f8cd b000 	strhi.w	fp, [sp]
 8012508:	b29b      	uxth	r3, r3
 801250a:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 801250e:	47b0      	blx	r6
 8012510:	6823      	ldr	r3, [r4, #0]
 8012512:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012516:	a907      	add	r1, sp, #28
 8012518:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801251a:	4620      	mov	r0, r4
 801251c:	4798      	blx	r3
 801251e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8012522:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8012526:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 801252a:	1a5b      	subs	r3, r3, r1
 801252c:	440a      	add	r2, r1
 801252e:	b21b      	sxth	r3, r3
 8012530:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8012534:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8012538:	2b00      	cmp	r3, #0
 801253a:	f47f aeda 	bne.w	80122f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 801253e:	fa1f f189 	uxth.w	r1, r9
 8012542:	4650      	mov	r0, sl
 8012544:	f7ff f9e8 	bl	8011918 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012548:	e6d3      	b.n	80122f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 801254a:	882e      	ldrh	r6, [r5, #0]
 801254c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8012550:	42b3      	cmp	r3, r6
 8012552:	f67f ae98 	bls.w	8012286 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8012556:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801255a:	ab07      	add	r3, sp, #28
 801255c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012560:	6851      	ldr	r1, [r2, #4]
 8012562:	c303      	stmia	r3!, {r0, r1}
 8012564:	a807      	add	r0, sp, #28
 8012566:	f7fc f828 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 801256a:	b920      	cbnz	r0, 8012576 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 801256c:	6823      	ldr	r3, [r4, #0]
 801256e:	a907      	add	r1, sp, #28
 8012570:	4620      	mov	r0, r4
 8012572:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012574:	4798      	blx	r3
 8012576:	3601      	adds	r6, #1
 8012578:	b2b6      	uxth	r6, r6
 801257a:	e7e7      	b.n	801254c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 801257c:	24001e7c 	.word	0x24001e7c

08012580 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012580:	4b03      	ldr	r3, [pc, #12]	; (8012590 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8012582:	2200      	movs	r2, #0
 8012584:	801a      	strh	r2, [r3, #0]
 8012586:	805a      	strh	r2, [r3, #2]
 8012588:	809a      	strh	r2, [r3, #4]
 801258a:	80da      	strh	r2, [r3, #6]
 801258c:	4770      	bx	lr
 801258e:	bf00      	nop
 8012590:	24001ec0 	.word	0x24001ec0

08012594 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8012594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012598:	b09d      	sub	sp, #116	; 0x74
 801259a:	4606      	mov	r6, r0
 801259c:	4614      	mov	r4, r2
 801259e:	468a      	mov	sl, r1
 80125a0:	a803      	add	r0, sp, #12
 80125a2:	461d      	mov	r5, r3
 80125a4:	f000 fd72 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 80125a8:	6833      	ldr	r3, [r6, #0]
 80125aa:	4630      	mov	r0, r6
 80125ac:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80125b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80125b2:	4798      	blx	r3
 80125b4:	6833      	ldr	r3, [r6, #0]
 80125b6:	4607      	mov	r7, r0
 80125b8:	4630      	mov	r0, r6
 80125ba:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80125bc:	4798      	blx	r3
 80125be:	462a      	mov	r2, r5
 80125c0:	2500      	movs	r5, #0
 80125c2:	4621      	mov	r1, r4
 80125c4:	9000      	str	r0, [sp, #0]
 80125c6:	463b      	mov	r3, r7
 80125c8:	462c      	mov	r4, r5
 80125ca:	46a9      	mov	r9, r5
 80125cc:	46a8      	mov	r8, r5
 80125ce:	a803      	add	r0, sp, #12
 80125d0:	f000 fdb7 	bl	8013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80125d4:	2300      	movs	r3, #0
 80125d6:	9302      	str	r3, [sp, #8]
 80125d8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80125dc:	429c      	cmp	r4, r3
 80125de:	d002      	beq.n	80125e6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80125e0:	455c      	cmp	r4, fp
 80125e2:	bf18      	it	ne
 80125e4:	4625      	movne	r5, r4
 80125e6:	ab02      	add	r3, sp, #8
 80125e8:	4632      	mov	r2, r6
 80125ea:	4651      	mov	r1, sl
 80125ec:	a803      	add	r0, sp, #12
 80125ee:	f001 f8ad 	bl	801374c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80125f2:	4604      	mov	r4, r0
 80125f4:	b108      	cbz	r0, 80125fa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80125f6:	280a      	cmp	r0, #10
 80125f8:	d10a      	bne.n	8012610 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80125fa:	45c1      	cmp	r9, r8
 80125fc:	bf38      	it	cc
 80125fe:	46c1      	movcc	r9, r8
 8012600:	f04f 0800 	mov.w	r8, #0
 8012604:	2c00      	cmp	r4, #0
 8012606:	d1e5      	bne.n	80125d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012608:	4648      	mov	r0, r9
 801260a:	b01d      	add	sp, #116	; 0x74
 801260c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012610:	9a02      	ldr	r2, [sp, #8]
 8012612:	2a00      	cmp	r2, #0
 8012614:	d0de      	beq.n	80125d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012616:	7b57      	ldrb	r7, [r2, #13]
 8012618:	4629      	mov	r1, r5
 801261a:	6833      	ldr	r3, [r6, #0]
 801261c:	007f      	lsls	r7, r7, #1
 801261e:	8894      	ldrh	r4, [r2, #4]
 8012620:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012622:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8012626:	7a97      	ldrb	r7, [r2, #10]
 8012628:	4307      	orrs	r7, r0
 801262a:	4630      	mov	r0, r6
 801262c:	4798      	blx	r3
 801262e:	4438      	add	r0, r7
 8012630:	4480      	add	r8, r0
 8012632:	fa1f f888 	uxth.w	r8, r8
 8012636:	e7e5      	b.n	8012604 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08012638 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8012638:	b508      	push	{r3, lr}
 801263a:	6803      	ldr	r3, [r0, #0]
 801263c:	68db      	ldr	r3, [r3, #12]
 801263e:	4798      	blx	r3
 8012640:	b128      	cbz	r0, 801264e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8012642:	7b43      	ldrb	r3, [r0, #13]
 8012644:	7a80      	ldrb	r0, [r0, #10]
 8012646:	005b      	lsls	r3, r3, #1
 8012648:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801264c:	4318      	orrs	r0, r3
 801264e:	bd08      	pop	{r3, pc}

08012650 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012650:	b40e      	push	{r1, r2, r3}
 8012652:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012654:	b09e      	sub	sp, #120	; 0x78
 8012656:	4605      	mov	r5, r0
 8012658:	ab23      	add	r3, sp, #140	; 0x8c
 801265a:	a805      	add	r0, sp, #20
 801265c:	f853 4b04 	ldr.w	r4, [r3], #4
 8012660:	9303      	str	r3, [sp, #12]
 8012662:	f000 fd13 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 8012666:	682b      	ldr	r3, [r5, #0]
 8012668:	4628      	mov	r0, r5
 801266a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801266c:	4798      	blx	r3
 801266e:	682b      	ldr	r3, [r5, #0]
 8012670:	4606      	mov	r6, r0
 8012672:	4628      	mov	r0, r5
 8012674:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012676:	4798      	blx	r3
 8012678:	4633      	mov	r3, r6
 801267a:	4621      	mov	r1, r4
 801267c:	ae1e      	add	r6, sp, #120	; 0x78
 801267e:	2400      	movs	r4, #0
 8012680:	9000      	str	r0, [sp, #0]
 8012682:	9a03      	ldr	r2, [sp, #12]
 8012684:	a805      	add	r0, sp, #20
 8012686:	f000 fd5c 	bl	8013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801268a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801268e:	462a      	mov	r2, r5
 8012690:	4633      	mov	r3, r6
 8012692:	4621      	mov	r1, r4
 8012694:	a805      	add	r0, sp, #20
 8012696:	f001 f859 	bl	801374c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801269a:	b300      	cbz	r0, 80126de <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 801269c:	280a      	cmp	r0, #10
 801269e:	d01a      	beq.n	80126d6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80126a0:	9f04      	ldr	r7, [sp, #16]
 80126a2:	b1c7      	cbz	r7, 80126d6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80126a4:	7b78      	ldrb	r0, [r7, #13]
 80126a6:	7a3b      	ldrb	r3, [r7, #8]
 80126a8:	00c1      	lsls	r1, r0, #3
 80126aa:	88ea      	ldrh	r2, [r5, #6]
 80126ac:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80126b0:	4319      	orrs	r1, r3
 80126b2:	0643      	lsls	r3, r0, #25
 80126b4:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80126b8:	bf48      	it	mi
 80126ba:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80126be:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80126c2:	bf48      	it	mi
 80126c4:	b219      	sxthmi	r1, r3
 80126c6:	79fb      	ldrb	r3, [r7, #7]
 80126c8:	4303      	orrs	r3, r0
 80126ca:	4413      	add	r3, r2
 80126cc:	1a5b      	subs	r3, r3, r1
 80126ce:	b21b      	sxth	r3, r3
 80126d0:	429c      	cmp	r4, r3
 80126d2:	bfb8      	it	lt
 80126d4:	461c      	movlt	r4, r3
 80126d6:	4633      	mov	r3, r6
 80126d8:	462a      	mov	r2, r5
 80126da:	2100      	movs	r1, #0
 80126dc:	e7da      	b.n	8012694 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80126de:	b2a0      	uxth	r0, r4
 80126e0:	b01e      	add	sp, #120	; 0x78
 80126e2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80126e6:	b003      	add	sp, #12
 80126e8:	4770      	bx	lr

080126ea <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80126ea:	7a43      	ldrb	r3, [r0, #9]
 80126ec:	8880      	ldrh	r0, [r0, #4]
 80126ee:	4418      	add	r0, r3
 80126f0:	b280      	uxth	r0, r0
 80126f2:	4770      	bx	lr

080126f4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80126f4:	6803      	ldr	r3, [r0, #0]
 80126f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80126f8:	4718      	bx	r3

080126fa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80126fa:	b40e      	push	{r1, r2, r3}
 80126fc:	b570      	push	{r4, r5, r6, lr}
 80126fe:	b09d      	sub	sp, #116	; 0x74
 8012700:	4604      	mov	r4, r0
 8012702:	ab21      	add	r3, sp, #132	; 0x84
 8012704:	a803      	add	r0, sp, #12
 8012706:	f853 5b04 	ldr.w	r5, [r3], #4
 801270a:	9302      	str	r3, [sp, #8]
 801270c:	f000 fcbe 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 8012710:	6823      	ldr	r3, [r4, #0]
 8012712:	4620      	mov	r0, r4
 8012714:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012716:	4798      	blx	r3
 8012718:	6823      	ldr	r3, [r4, #0]
 801271a:	4606      	mov	r6, r0
 801271c:	4620      	mov	r0, r4
 801271e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012720:	2401      	movs	r4, #1
 8012722:	4798      	blx	r3
 8012724:	4633      	mov	r3, r6
 8012726:	9000      	str	r0, [sp, #0]
 8012728:	4629      	mov	r1, r5
 801272a:	9a02      	ldr	r2, [sp, #8]
 801272c:	a803      	add	r0, sp, #12
 801272e:	f000 fd08 	bl	8013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012732:	a803      	add	r0, sp, #12
 8012734:	f001 f8d6 	bl	80138e4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012738:	b2a3      	uxth	r3, r4
 801273a:	b138      	cbz	r0, 801274c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 801273c:	280a      	cmp	r0, #10
 801273e:	a803      	add	r0, sp, #12
 8012740:	bf04      	itt	eq
 8012742:	3301      	addeq	r3, #1
 8012744:	b21c      	sxtheq	r4, r3
 8012746:	f001 f8cd 	bl	80138e4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801274a:	e7f5      	b.n	8012738 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801274c:	4618      	mov	r0, r3
 801274e:	b01d      	add	sp, #116	; 0x74
 8012750:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012754:	b003      	add	sp, #12
 8012756:	4770      	bx	lr

08012758 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8012758:	b40e      	push	{r1, r2, r3}
 801275a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801275c:	b09e      	sub	sp, #120	; 0x78
 801275e:	4604      	mov	r4, r0
 8012760:	ab23      	add	r3, sp, #140	; 0x8c
 8012762:	a805      	add	r0, sp, #20
 8012764:	f853 5b04 	ldr.w	r5, [r3], #4
 8012768:	9303      	str	r3, [sp, #12]
 801276a:	f000 fc8f 	bl	801308c <_ZN8touchgfx12TextProviderC1Ev>
 801276e:	6823      	ldr	r3, [r4, #0]
 8012770:	4620      	mov	r0, r4
 8012772:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012774:	4798      	blx	r3
 8012776:	6823      	ldr	r3, [r4, #0]
 8012778:	4606      	mov	r6, r0
 801277a:	4620      	mov	r0, r4
 801277c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801277e:	4798      	blx	r3
 8012780:	4633      	mov	r3, r6
 8012782:	4629      	mov	r1, r5
 8012784:	9000      	str	r0, [sp, #0]
 8012786:	9a03      	ldr	r2, [sp, #12]
 8012788:	a805      	add	r0, sp, #20
 801278a:	f000 fcda 	bl	8013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801278e:	ad1e      	add	r5, sp, #120	; 0x78
 8012790:	2100      	movs	r1, #0
 8012792:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8012796:	4622      	mov	r2, r4
 8012798:	a805      	add	r0, sp, #20
 801279a:	f845 1d68 	str.w	r1, [r5, #-104]!
 801279e:	462b      	mov	r3, r5
 80127a0:	f000 ffd4 	bl	801374c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80127a4:	b1d8      	cbz	r0, 80127de <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80127a6:	280a      	cmp	r0, #10
 80127a8:	d012      	beq.n	80127d0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80127aa:	9804      	ldr	r0, [sp, #16]
 80127ac:	b180      	cbz	r0, 80127d0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80127ae:	7b47      	ldrb	r7, [r0, #13]
 80127b0:	88e2      	ldrh	r2, [r4, #6]
 80127b2:	00fb      	lsls	r3, r7, #3
 80127b4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80127b8:	7a03      	ldrb	r3, [r0, #8]
 80127ba:	430b      	orrs	r3, r1
 80127bc:	0679      	lsls	r1, r7, #25
 80127be:	bf44      	itt	mi
 80127c0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80127c4:	b21b      	sxthmi	r3, r3
 80127c6:	1ad3      	subs	r3, r2, r3
 80127c8:	b21b      	sxth	r3, r3
 80127ca:	429e      	cmp	r6, r3
 80127cc:	bfa8      	it	ge
 80127ce:	461e      	movge	r6, r3
 80127d0:	462b      	mov	r3, r5
 80127d2:	4622      	mov	r2, r4
 80127d4:	2100      	movs	r1, #0
 80127d6:	a805      	add	r0, sp, #20
 80127d8:	f000 ffb8 	bl	801374c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80127dc:	e7e2      	b.n	80127a4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80127de:	4630      	mov	r0, r6
 80127e0:	b01e      	add	sp, #120	; 0x78
 80127e2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80127e6:	b003      	add	sp, #12
 80127e8:	4770      	bx	lr

080127ea <_ZNK8touchgfx8Drawable10invalidateEv>:
 80127ea:	b513      	push	{r0, r1, r4, lr}
 80127ec:	6803      	ldr	r3, [r0, #0]
 80127ee:	2400      	movs	r4, #0
 80127f0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80127f4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80127f8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80127fc:	4669      	mov	r1, sp
 80127fe:	691b      	ldr	r3, [r3, #16]
 8012800:	9400      	str	r4, [sp, #0]
 8012802:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012806:	4798      	blx	r3
 8012808:	b002      	add	sp, #8
 801280a:	bd10      	pop	{r4, pc}

0801280c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801280c:	b538      	push	{r3, r4, r5, lr}
 801280e:	680b      	ldr	r3, [r1, #0]
 8012810:	460c      	mov	r4, r1
 8012812:	4605      	mov	r5, r0
 8012814:	68db      	ldr	r3, [r3, #12]
 8012816:	4798      	blx	r3
 8012818:	6823      	ldr	r3, [r4, #0]
 801281a:	4620      	mov	r0, r4
 801281c:	4629      	mov	r1, r5
 801281e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012820:	4798      	blx	r3
 8012822:	4628      	mov	r0, r5
 8012824:	bd38      	pop	{r3, r4, r5, pc}

08012826 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8012826:	b410      	push	{r4}
 8012828:	880a      	ldrh	r2, [r1, #0]
 801282a:	8884      	ldrh	r4, [r0, #4]
 801282c:	4422      	add	r2, r4
 801282e:	800a      	strh	r2, [r1, #0]
 8012830:	884a      	ldrh	r2, [r1, #2]
 8012832:	88c4      	ldrh	r4, [r0, #6]
 8012834:	4422      	add	r2, r4
 8012836:	804a      	strh	r2, [r1, #2]
 8012838:	6940      	ldr	r0, [r0, #20]
 801283a:	b120      	cbz	r0, 8012846 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801283c:	6803      	ldr	r3, [r0, #0]
 801283e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012842:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012844:	4718      	bx	r3
 8012846:	f85d 4b04 	ldr.w	r4, [sp], #4
 801284a:	4770      	bx	lr

0801284c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801284c:	b570      	push	{r4, r5, r6, lr}
 801284e:	8882      	ldrh	r2, [r0, #4]
 8012850:	460c      	mov	r4, r1
 8012852:	880b      	ldrh	r3, [r1, #0]
 8012854:	4605      	mov	r5, r0
 8012856:	4413      	add	r3, r2
 8012858:	800b      	strh	r3, [r1, #0]
 801285a:	884b      	ldrh	r3, [r1, #2]
 801285c:	88c2      	ldrh	r2, [r0, #6]
 801285e:	4413      	add	r3, r2
 8012860:	804b      	strh	r3, [r1, #2]
 8012862:	1d01      	adds	r1, r0, #4
 8012864:	4620      	mov	r0, r4
 8012866:	f7fb fe65 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 801286a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801286e:	2b00      	cmp	r3, #0
 8012870:	dd0b      	ble.n	801288a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012872:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012876:	2b00      	cmp	r3, #0
 8012878:	dd07      	ble.n	801288a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801287a:	6968      	ldr	r0, [r5, #20]
 801287c:	b128      	cbz	r0, 801288a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801287e:	6803      	ldr	r3, [r0, #0]
 8012880:	4621      	mov	r1, r4
 8012882:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012884:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012888:	4718      	bx	r3
 801288a:	bd70      	pop	{r4, r5, r6, pc}

0801288c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801288c:	b570      	push	{r4, r5, r6, lr}
 801288e:	8882      	ldrh	r2, [r0, #4]
 8012890:	460c      	mov	r4, r1
 8012892:	880b      	ldrh	r3, [r1, #0]
 8012894:	4605      	mov	r5, r0
 8012896:	4413      	add	r3, r2
 8012898:	800b      	strh	r3, [r1, #0]
 801289a:	884b      	ldrh	r3, [r1, #2]
 801289c:	88c2      	ldrh	r2, [r0, #6]
 801289e:	4413      	add	r3, r2
 80128a0:	804b      	strh	r3, [r1, #2]
 80128a2:	1d01      	adds	r1, r0, #4
 80128a4:	4620      	mov	r0, r4
 80128a6:	f7fb fe45 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 80128aa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80128ae:	2b00      	cmp	r3, #0
 80128b0:	dd19      	ble.n	80128e6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80128b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80128b6:	2b00      	cmp	r3, #0
 80128b8:	dd15      	ble.n	80128e6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80128ba:	6968      	ldr	r0, [r5, #20]
 80128bc:	b128      	cbz	r0, 80128ca <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80128be:	6803      	ldr	r3, [r0, #0]
 80128c0:	4621      	mov	r1, r4
 80128c2:	691b      	ldr	r3, [r3, #16]
 80128c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80128c8:	4718      	bx	r3
 80128ca:	4b07      	ldr	r3, [pc, #28]	; (80128e8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80128cc:	681b      	ldr	r3, [r3, #0]
 80128ce:	3304      	adds	r3, #4
 80128d0:	429d      	cmp	r5, r3
 80128d2:	d108      	bne.n	80128e6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80128d4:	f7fe ff10 	bl	80116f8 <_ZN8touchgfx11Application11getInstanceEv>
 80128d8:	6803      	ldr	r3, [r0, #0]
 80128da:	6821      	ldr	r1, [r4, #0]
 80128dc:	6862      	ldr	r2, [r4, #4]
 80128de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80128e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80128e4:	4718      	bx	r3
 80128e6:	bd70      	pop	{r4, r5, r6, pc}
 80128e8:	24001eb8 	.word	0x24001eb8

080128ec <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80128ec:	b570      	push	{r4, r5, r6, lr}
 80128ee:	4604      	mov	r4, r0
 80128f0:	4616      	mov	r6, r2
 80128f2:	460d      	mov	r5, r1
 80128f4:	b901      	cbnz	r1, 80128f8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80128f6:	b192      	cbz	r2, 801291e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80128f8:	6823      	ldr	r3, [r4, #0]
 80128fa:	4620      	mov	r0, r4
 80128fc:	699b      	ldr	r3, [r3, #24]
 80128fe:	4798      	blx	r3
 8012900:	88e2      	ldrh	r2, [r4, #6]
 8012902:	88a1      	ldrh	r1, [r4, #4]
 8012904:	4620      	mov	r0, r4
 8012906:	4432      	add	r2, r6
 8012908:	4429      	add	r1, r5
 801290a:	b212      	sxth	r2, r2
 801290c:	b209      	sxth	r1, r1
 801290e:	f7f8 fdfe 	bl	800b50e <_ZN8touchgfx8Drawable5setXYEss>
 8012912:	6823      	ldr	r3, [r4, #0]
 8012914:	4620      	mov	r0, r4
 8012916:	699b      	ldr	r3, [r3, #24]
 8012918:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801291c:	4718      	bx	r3
 801291e:	bd70      	pop	{r4, r5, r6, pc}

08012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012920:	b510      	push	{r4, lr}
 8012922:	2300      	movs	r3, #0
 8012924:	4604      	mov	r4, r0
 8012926:	4608      	mov	r0, r1
 8012928:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801292c:	8023      	strh	r3, [r4, #0]
 801292e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012932:	8063      	strh	r3, [r4, #2]
 8012934:	6803      	ldr	r3, [r0, #0]
 8012936:	80a1      	strh	r1, [r4, #4]
 8012938:	4621      	mov	r1, r4
 801293a:	80e2      	strh	r2, [r4, #6]
 801293c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801293e:	4798      	blx	r3
 8012940:	4620      	mov	r0, r4
 8012942:	bd10      	pop	{r4, pc}

08012944 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8012944:	b530      	push	{r4, r5, lr}
 8012946:	8083      	strh	r3, [r0, #4]
 8012948:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801294c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8012950:	80c3      	strh	r3, [r0, #6]
 8012952:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012956:	6141      	str	r1, [r0, #20]
 8012958:	7203      	strb	r3, [r0, #8]
 801295a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801295e:	8302      	strh	r2, [r0, #24]
 8012960:	7243      	strb	r3, [r0, #9]
 8012962:	7a83      	ldrb	r3, [r0, #10]
 8012964:	f365 0306 	bfi	r3, r5, #0, #7
 8012968:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801296c:	f365 13c7 	bfi	r3, r5, #7, #1
 8012970:	7283      	strb	r3, [r0, #10]
 8012972:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8012976:	72c3      	strb	r3, [r0, #11]
 8012978:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 801297c:	7303      	strb	r3, [r0, #12]
 801297e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8012982:	81c3      	strh	r3, [r0, #14]
 8012984:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8012988:	8203      	strh	r3, [r0, #16]
 801298a:	4b01      	ldr	r3, [pc, #4]	; (8012990 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801298c:	6003      	str	r3, [r0, #0]
 801298e:	bd30      	pop	{r4, r5, pc}
 8012990:	08024538 	.word	0x08024538

08012994 <_ZNK8touchgfx9ConstFont4findEt>:
 8012994:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012996:	6944      	ldr	r4, [r0, #20]
 8012998:	b3bc      	cbz	r4, 8012a0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801299a:	88a3      	ldrh	r3, [r4, #4]
 801299c:	8b02      	ldrh	r2, [r0, #24]
 801299e:	1acb      	subs	r3, r1, r3
 80129a0:	f102 32ff 	add.w	r2, r2, #4294967295
 80129a4:	d431      	bmi.n	8012a0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80129a6:	4293      	cmp	r3, r2
 80129a8:	dd0c      	ble.n	80129c4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80129aa:	230e      	movs	r3, #14
 80129ac:	fb03 4302 	mla	r3, r3, r2, r4
 80129b0:	889b      	ldrh	r3, [r3, #4]
 80129b2:	1a5b      	subs	r3, r3, r1
 80129b4:	1ad3      	subs	r3, r2, r3
 80129b6:	429a      	cmp	r2, r3
 80129b8:	db27      	blt.n	8012a0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80129ba:	2b00      	cmp	r3, #0
 80129bc:	bfbc      	itt	lt
 80129be:	2302      	movlt	r3, #2
 80129c0:	fb92 f3f3 	sdivlt	r3, r2, r3
 80129c4:	2500      	movs	r5, #0
 80129c6:	260e      	movs	r6, #14
 80129c8:	4295      	cmp	r5, r2
 80129ca:	dc1e      	bgt.n	8012a0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80129cc:	fb06 4003 	mla	r0, r6, r3, r4
 80129d0:	8887      	ldrh	r7, [r0, #4]
 80129d2:	42b9      	cmp	r1, r7
 80129d4:	d01a      	beq.n	8012a0c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80129d6:	d20d      	bcs.n	80129f4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80129d8:	1e5a      	subs	r2, r3, #1
 80129da:	4295      	cmp	r5, r2
 80129dc:	dc15      	bgt.n	8012a0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80129de:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80129e2:	1a5b      	subs	r3, r3, r1
 80129e4:	1ad3      	subs	r3, r2, r3
 80129e6:	429a      	cmp	r2, r3
 80129e8:	db0f      	blt.n	8012a0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80129ea:	429d      	cmp	r5, r3
 80129ec:	ddec      	ble.n	80129c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80129ee:	1953      	adds	r3, r2, r5
 80129f0:	105b      	asrs	r3, r3, #1
 80129f2:	e7e9      	b.n	80129c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80129f4:	1c5d      	adds	r5, r3, #1
 80129f6:	42aa      	cmp	r2, r5
 80129f8:	db07      	blt.n	8012a0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80129fa:	8a43      	ldrh	r3, [r0, #18]
 80129fc:	1acb      	subs	r3, r1, r3
 80129fe:	442b      	add	r3, r5
 8012a00:	429d      	cmp	r5, r3
 8012a02:	dc02      	bgt.n	8012a0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012a04:	429a      	cmp	r2, r3
 8012a06:	dadf      	bge.n	80129c8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012a08:	e7f1      	b.n	80129ee <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8012a0a:	2000      	movs	r0, #0
 8012a0c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012a0e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8012a0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012a10:	4604      	mov	r4, r0
 8012a12:	4617      	mov	r7, r2
 8012a14:	461e      	mov	r6, r3
 8012a16:	b911      	cbnz	r1, 8012a1e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8012a18:	2500      	movs	r5, #0
 8012a1a:	4628      	mov	r0, r5
 8012a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012a1e:	290a      	cmp	r1, #10
 8012a20:	d0fa      	beq.n	8012a18 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012a22:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8012a26:	4291      	cmp	r1, r2
 8012a28:	d0f6      	beq.n	8012a18 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012a2a:	f242 020b 	movw	r2, #8203	; 0x200b
 8012a2e:	4291      	cmp	r1, r2
 8012a30:	d0f2      	beq.n	8012a18 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012a32:	f7ff ffaf 	bl	8012994 <_ZNK8touchgfx9ConstFont4findEt>
 8012a36:	4605      	mov	r5, r0
 8012a38:	b950      	cbnz	r0, 8012a50 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012a3a:	6823      	ldr	r3, [r4, #0]
 8012a3c:	4620      	mov	r0, r4
 8012a3e:	691b      	ldr	r3, [r3, #16]
 8012a40:	4798      	blx	r3
 8012a42:	4601      	mov	r1, r0
 8012a44:	4620      	mov	r0, r4
 8012a46:	f7ff ffa5 	bl	8012994 <_ZNK8touchgfx9ConstFont4findEt>
 8012a4a:	4605      	mov	r5, r0
 8012a4c:	2800      	cmp	r0, #0
 8012a4e:	d0e3      	beq.n	8012a18 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012a50:	6823      	ldr	r3, [r4, #0]
 8012a52:	4629      	mov	r1, r5
 8012a54:	4620      	mov	r0, r4
 8012a56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8012a58:	4798      	blx	r3
 8012a5a:	6038      	str	r0, [r7, #0]
 8012a5c:	6823      	ldr	r3, [r4, #0]
 8012a5e:	4620      	mov	r0, r4
 8012a60:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012a62:	4798      	blx	r3
 8012a64:	7030      	strb	r0, [r6, #0]
 8012a66:	e7d8      	b.n	8012a1a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012a68 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012a68:	2000      	movs	r0, #0
 8012a6a:	4770      	bx	lr

08012a6c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012a6c:	2001      	movs	r0, #1
 8012a6e:	4770      	bx	lr

08012a70 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012a70:	2002      	movs	r0, #2
 8012a72:	4770      	bx	lr

08012a74 <_ZN8touchgfx12GestureEventD1Ev>:
 8012a74:	4770      	bx	lr

08012a76 <_ZN8touchgfx9DragEventD1Ev>:
 8012a76:	4770      	bx	lr

08012a78 <_ZN8touchgfx10ClickEventD1Ev>:
 8012a78:	4770      	bx	lr

08012a7a <_ZN8touchgfx10ClickEventD0Ev>:
 8012a7a:	b510      	push	{r4, lr}
 8012a7c:	4604      	mov	r4, r0
 8012a7e:	210c      	movs	r1, #12
 8012a80:	f00e ff5d 	bl	802193e <_ZdlPvj>
 8012a84:	4620      	mov	r0, r4
 8012a86:	bd10      	pop	{r4, pc}

08012a88 <_ZN8touchgfx9DragEventD0Ev>:
 8012a88:	b510      	push	{r4, lr}
 8012a8a:	4604      	mov	r4, r0
 8012a8c:	2110      	movs	r1, #16
 8012a8e:	f00e ff56 	bl	802193e <_ZdlPvj>
 8012a92:	4620      	mov	r0, r4
 8012a94:	bd10      	pop	{r4, pc}

08012a96 <_ZN8touchgfx12GestureEventD0Ev>:
 8012a96:	b510      	push	{r4, lr}
 8012a98:	4604      	mov	r4, r0
 8012a9a:	210c      	movs	r1, #12
 8012a9c:	f00e ff4f 	bl	802193e <_ZdlPvj>
 8012aa0:	4620      	mov	r0, r4
 8012aa2:	bd10      	pop	{r4, pc}

08012aa4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012aa4:	b530      	push	{r4, r5, lr}
 8012aa6:	460d      	mov	r5, r1
 8012aa8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012aaa:	b087      	sub	sp, #28
 8012aac:	4604      	mov	r4, r0
 8012aae:	b301      	cbz	r1, 8012af2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012ab0:	a801      	add	r0, sp, #4
 8012ab2:	f7ff ff35 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ab6:	892a      	ldrh	r2, [r5, #8]
 8012ab8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012abc:	7928      	ldrb	r0, [r5, #4]
 8012abe:	1ad2      	subs	r2, r2, r3
 8012ac0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012ac2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012ac6:	441a      	add	r2, r3
 8012ac8:	896b      	ldrh	r3, [r5, #10]
 8012aca:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012ace:	f88d 0010 	strb.w	r0, [sp, #16]
 8012ad2:	1b5b      	subs	r3, r3, r5
 8012ad4:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012ad6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012ad8:	442b      	add	r3, r5
 8012ada:	4d07      	ldr	r5, [pc, #28]	; (8012af8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012adc:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012ae0:	a903      	add	r1, sp, #12
 8012ae2:	9503      	str	r5, [sp, #12]
 8012ae4:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012ae8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012aec:	6803      	ldr	r3, [r0, #0]
 8012aee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012af0:	4798      	blx	r3
 8012af2:	b007      	add	sp, #28
 8012af4:	bd30      	pop	{r4, r5, pc}
 8012af6:	bf00      	nop
 8012af8:	080245c0 	.word	0x080245c0

08012afc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012afc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b00:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012b02:	b08a      	sub	sp, #40	; 0x28
 8012b04:	4604      	mov	r4, r0
 8012b06:	460d      	mov	r5, r1
 8012b08:	b113      	cbz	r3, 8012b10 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012b0a:	790b      	ldrb	r3, [r1, #4]
 8012b0c:	2b00      	cmp	r3, #0
 8012b0e:	d044      	beq.n	8012b9a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012b10:	f104 0804 	add.w	r8, r4, #4
 8012b14:	a803      	add	r0, sp, #12
 8012b16:	4641      	mov	r1, r8
 8012b18:	f7ff ff02 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b1c:	792b      	ldrb	r3, [r5, #4]
 8012b1e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012b22:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012b26:	b983      	cbnz	r3, 8012b4a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012b28:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8012b2c:	892a      	ldrh	r2, [r5, #8]
 8012b2e:	88e9      	ldrh	r1, [r5, #6]
 8012b30:	4640      	mov	r0, r8
 8012b32:	1b92      	subs	r2, r2, r6
 8012b34:	9301      	str	r3, [sp, #4]
 8012b36:	1bc9      	subs	r1, r1, r7
 8012b38:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012b3c:	b212      	sxth	r2, r2
 8012b3e:	9300      	str	r3, [sp, #0]
 8012b40:	b209      	sxth	r1, r1
 8012b42:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8012b46:	f7fb fc13 	bl	800e370 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012b4a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012b4c:	b329      	cbz	r1, 8012b9a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012b4e:	a805      	add	r0, sp, #20
 8012b50:	f7ff fee6 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b54:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012b58:	792b      	ldrb	r3, [r5, #4]
 8012b5a:	a907      	add	r1, sp, #28
 8012b5c:	1abf      	subs	r7, r7, r2
 8012b5e:	88ea      	ldrh	r2, [r5, #6]
 8012b60:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012b62:	4417      	add	r7, r2
 8012b64:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012b66:	f88d 3020 	strb.w	r3, [sp, #32]
 8012b6a:	4417      	add	r7, r2
 8012b6c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012b70:	1ab6      	subs	r6, r6, r2
 8012b72:	892a      	ldrh	r2, [r5, #8]
 8012b74:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012b78:	4416      	add	r6, r2
 8012b7a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012b7c:	4416      	add	r6, r2
 8012b7e:	4a08      	ldr	r2, [pc, #32]	; (8012ba0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8012b80:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012b84:	2600      	movs	r6, #0
 8012b86:	9207      	str	r2, [sp, #28]
 8012b88:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012b8c:	6803      	ldr	r3, [r0, #0]
 8012b8e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012b90:	4798      	blx	r3
 8012b92:	792b      	ldrb	r3, [r5, #4]
 8012b94:	b10b      	cbz	r3, 8012b9a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012b96:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012b9a:	b00a      	add	sp, #40	; 0x28
 8012b9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ba0:	08024598 	.word	0x08024598

08012ba4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012ba4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ba8:	460c      	mov	r4, r1
 8012baa:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012bac:	b088      	sub	sp, #32
 8012bae:	4605      	mov	r5, r0
 8012bb0:	2900      	cmp	r1, #0
 8012bb2:	d06d      	beq.n	8012c90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012bb4:	4668      	mov	r0, sp
 8012bb6:	f7ff feb3 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012bba:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012bbc:	88e3      	ldrh	r3, [r4, #6]
 8012bbe:	f9bd 8000 	ldrsh.w	r8, [sp]
 8012bc2:	440b      	add	r3, r1
 8012bc4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012bc8:	b21b      	sxth	r3, r3
 8012bca:	4543      	cmp	r3, r8
 8012bcc:	db31      	blt.n	8012c32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012bce:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8012bd2:	44c4      	add	ip, r8
 8012bd4:	fa0f fc8c 	sxth.w	ip, ip
 8012bd8:	4563      	cmp	r3, ip
 8012bda:	da2a      	bge.n	8012c32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012bdc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012bde:	8926      	ldrh	r6, [r4, #8]
 8012be0:	4416      	add	r6, r2
 8012be2:	b236      	sxth	r6, r6
 8012be4:	42be      	cmp	r6, r7
 8012be6:	db24      	blt.n	8012c32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012be8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012bec:	4438      	add	r0, r7
 8012bee:	b200      	sxth	r0, r0
 8012bf0:	4286      	cmp	r6, r0
 8012bf2:	da1e      	bge.n	8012c32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012bf4:	8963      	ldrh	r3, [r4, #10]
 8012bf6:	4419      	add	r1, r3
 8012bf8:	b209      	sxth	r1, r1
 8012bfa:	4541      	cmp	r1, r8
 8012bfc:	db08      	blt.n	8012c10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012bfe:	4561      	cmp	r1, ip
 8012c00:	da06      	bge.n	8012c10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012c02:	89a3      	ldrh	r3, [r4, #12]
 8012c04:	441a      	add	r2, r3
 8012c06:	b212      	sxth	r2, r2
 8012c08:	42ba      	cmp	r2, r7
 8012c0a:	db01      	blt.n	8012c10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012c0c:	4282      	cmp	r2, r0
 8012c0e:	db10      	blt.n	8012c32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012c10:	4b21      	ldr	r3, [pc, #132]	; (8012c98 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8012c12:	a904      	add	r1, sp, #16
 8012c14:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012c16:	9304      	str	r3, [sp, #16]
 8012c18:	2302      	movs	r3, #2
 8012c1a:	f88d 3014 	strb.w	r3, [sp, #20]
 8012c1e:	2300      	movs	r3, #0
 8012c20:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012c24:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012c28:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012c2c:	6803      	ldr	r3, [r0, #0]
 8012c2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012c30:	4798      	blx	r3
 8012c32:	1d29      	adds	r1, r5, #4
 8012c34:	a802      	add	r0, sp, #8
 8012c36:	f7ff fe73 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012c3a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012c3e:	88e0      	ldrh	r0, [r4, #6]
 8012c40:	eba3 0808 	sub.w	r8, r3, r8
 8012c44:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012c48:	7921      	ldrb	r1, [r4, #4]
 8012c4a:	fa1f f888 	uxth.w	r8, r8
 8012c4e:	1bdf      	subs	r7, r3, r7
 8012c50:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8012c54:	b2bb      	uxth	r3, r7
 8012c56:	4440      	add	r0, r8
 8012c58:	8922      	ldrh	r2, [r4, #8]
 8012c5a:	8967      	ldrh	r7, [r4, #10]
 8012c5c:	4460      	add	r0, ip
 8012c5e:	89a4      	ldrh	r4, [r4, #12]
 8012c60:	441a      	add	r2, r3
 8012c62:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012c64:	44b8      	add	r8, r7
 8012c66:	4423      	add	r3, r4
 8012c68:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012c6c:	4432      	add	r2, r6
 8012c6e:	44e0      	add	r8, ip
 8012c70:	4433      	add	r3, r6
 8012c72:	4c0a      	ldr	r4, [pc, #40]	; (8012c9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012c74:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012c76:	f88d 1014 	strb.w	r1, [sp, #20]
 8012c7a:	a904      	add	r1, sp, #16
 8012c7c:	9404      	str	r4, [sp, #16]
 8012c7e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012c82:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012c86:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012c8a:	6803      	ldr	r3, [r0, #0]
 8012c8c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012c8e:	4798      	blx	r3
 8012c90:	b008      	add	sp, #32
 8012c92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012c96:	bf00      	nop
 8012c98:	08024598 	.word	0x08024598
 8012c9c:	080245ac 	.word	0x080245ac

08012ca0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8012ca0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012ca2:	4604      	mov	r4, r0
 8012ca4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012ca8:	3201      	adds	r2, #1
 8012caa:	d112      	bne.n	8012cd2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012cac:	2500      	movs	r5, #0
 8012cae:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012cb2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012cb6:	6803      	ldr	r3, [r0, #0]
 8012cb8:	9500      	str	r5, [sp, #0]
 8012cba:	466d      	mov	r5, sp
 8012cbc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012cc0:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012cc4:	4629      	mov	r1, r5
 8012cc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012cc8:	4798      	blx	r3
 8012cca:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012cce:	e884 0003 	stmia.w	r4, {r0, r1}
 8012cd2:	4620      	mov	r0, r4
 8012cd4:	b003      	add	sp, #12
 8012cd6:	bd30      	pop	{r4, r5, pc}

08012cd8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012cd8:	b513      	push	{r0, r1, r4, lr}
 8012cda:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012cde:	4604      	mov	r4, r0
 8012ce0:	3301      	adds	r3, #1
 8012ce2:	d109      	bne.n	8012cf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012ce4:	4601      	mov	r1, r0
 8012ce6:	4668      	mov	r0, sp
 8012ce8:	f7ff fe1a 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012cec:	f8bd 3000 	ldrh.w	r3, [sp]
 8012cf0:	8423      	strh	r3, [r4, #32]
 8012cf2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012cf6:	8463      	strh	r3, [r4, #34]	; 0x22
 8012cf8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012cfc:	b002      	add	sp, #8
 8012cfe:	bd10      	pop	{r4, pc}

08012d00 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012d00:	b513      	push	{r0, r1, r4, lr}
 8012d02:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012d06:	4604      	mov	r4, r0
 8012d08:	3301      	adds	r3, #1
 8012d0a:	d109      	bne.n	8012d20 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012d0c:	4601      	mov	r1, r0
 8012d0e:	4668      	mov	r0, sp
 8012d10:	f7ff fe06 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012d14:	f8bd 3000 	ldrh.w	r3, [sp]
 8012d18:	8423      	strh	r3, [r4, #32]
 8012d1a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012d1e:	8463      	strh	r3, [r4, #34]	; 0x22
 8012d20:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012d24:	b002      	add	sp, #8
 8012d26:	bd10      	pop	{r4, pc}

08012d28 <_ZN8touchgfx6ScreenC1Ev>:
 8012d28:	b570      	push	{r4, r5, r6, lr}
 8012d2a:	4b17      	ldr	r3, [pc, #92]	; (8012d88 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8012d2c:	4605      	mov	r5, r0
 8012d2e:	4a17      	ldr	r2, [pc, #92]	; (8012d8c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8012d30:	2101      	movs	r1, #1
 8012d32:	f845 3b04 	str.w	r3, [r5], #4
 8012d36:	2300      	movs	r3, #0
 8012d38:	6042      	str	r2, [r0, #4]
 8012d3a:	4604      	mov	r4, r0
 8012d3c:	8103      	strh	r3, [r0, #8]
 8012d3e:	8143      	strh	r3, [r0, #10]
 8012d40:	8183      	strh	r3, [r0, #12]
 8012d42:	81c3      	strh	r3, [r0, #14]
 8012d44:	8203      	strh	r3, [r0, #16]
 8012d46:	8243      	strh	r3, [r0, #18]
 8012d48:	8283      	strh	r3, [r0, #20]
 8012d4a:	82c3      	strh	r3, [r0, #22]
 8012d4c:	6203      	str	r3, [r0, #32]
 8012d4e:	8483      	strh	r3, [r0, #36]	; 0x24
 8012d50:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012d52:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8012d56:	6343      	str	r3, [r0, #52]	; 0x34
 8012d58:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012d5c:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8012d60:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012d64:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8012d68:	4b09      	ldr	r3, [pc, #36]	; (8012d90 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012d6a:	4628      	mov	r0, r5
 8012d6c:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012d70:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8012d72:	4a08      	ldr	r2, [pc, #32]	; (8012d94 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8012d74:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012d78:	4798      	blx	r3
 8012d7a:	6863      	ldr	r3, [r4, #4]
 8012d7c:	4628      	mov	r0, r5
 8012d7e:	4631      	mov	r1, r6
 8012d80:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012d82:	4798      	blx	r3
 8012d84:	4620      	mov	r0, r4
 8012d86:	bd70      	pop	{r4, r5, r6, pc}
 8012d88:	080245d4 	.word	0x080245d4
 8012d8c:	08024144 	.word	0x08024144
 8012d90:	24001e72 	.word	0x24001e72
 8012d94:	24001e70 	.word	0x24001e70

08012d98 <_ZN8touchgfx6Screen4drawEv>:
 8012d98:	4b09      	ldr	r3, [pc, #36]	; (8012dc0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012d9a:	b507      	push	{r0, r1, r2, lr}
 8012d9c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012da0:	2100      	movs	r1, #0
 8012da2:	4b08      	ldr	r3, [pc, #32]	; (8012dc4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8012da4:	9100      	str	r1, [sp, #0]
 8012da6:	4669      	mov	r1, sp
 8012da8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012dac:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012db0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012db4:	6803      	ldr	r3, [r0, #0]
 8012db6:	689b      	ldr	r3, [r3, #8]
 8012db8:	4798      	blx	r3
 8012dba:	b003      	add	sp, #12
 8012dbc:	f85d fb04 	ldr.w	pc, [sp], #4
 8012dc0:	24001e70 	.word	0x24001e70
 8012dc4:	24001e72 	.word	0x24001e72

08012dc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012dcc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012dd0:	b089      	sub	sp, #36	; 0x24
 8012dd2:	4680      	mov	r8, r0
 8012dd4:	460c      	mov	r4, r1
 8012dd6:	2b00      	cmp	r3, #0
 8012dd8:	4615      	mov	r5, r2
 8012dda:	dd0e      	ble.n	8012dfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012ddc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012de0:	2b00      	cmp	r3, #0
 8012de2:	dd0a      	ble.n	8012dfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012de4:	4628      	mov	r0, r5
 8012de6:	f7ff ff5b 	bl	8012ca0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012dea:	4621      	mov	r1, r4
 8012dec:	f7fe fba6 	bl	801153c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012df0:	69eb      	ldr	r3, [r5, #28]
 8012df2:	b928      	cbnz	r0, 8012e00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012df4:	461d      	mov	r5, r3
 8012df6:	2b00      	cmp	r3, #0
 8012df8:	d1f4      	bne.n	8012de4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012dfa:	b009      	add	sp, #36	; 0x24
 8012dfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e00:	ae04      	add	r6, sp, #16
 8012e02:	2b00      	cmp	r3, #0
 8012e04:	f000 80b5 	beq.w	8012f72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012e08:	682b      	ldr	r3, [r5, #0]
 8012e0a:	4629      	mov	r1, r5
 8012e0c:	a802      	add	r0, sp, #8
 8012e0e:	68db      	ldr	r3, [r3, #12]
 8012e10:	4798      	blx	r3
 8012e12:	4628      	mov	r0, r5
 8012e14:	f7ff ff60 	bl	8012cd8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012e18:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012e1c:	4407      	add	r7, r0
 8012e1e:	4628      	mov	r0, r5
 8012e20:	f7ff ff6e 	bl	8012d00 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012e24:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012e28:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012e2c:	b23f      	sxth	r7, r7
 8012e2e:	4418      	add	r0, r3
 8012e30:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012e34:	4621      	mov	r1, r4
 8012e36:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012e3a:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012e3e:	4630      	mov	r0, r6
 8012e40:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012e44:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012e48:	f7fb fb74 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 8012e4c:	4628      	mov	r0, r5
 8012e4e:	f7ff ff27 	bl	8012ca0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012e52:	ab06      	add	r3, sp, #24
 8012e54:	4602      	mov	r2, r0
 8012e56:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012e5a:	e883 0003 	stmia.w	r3, {r0, r1}
 8012e5e:	4611      	mov	r1, r2
 8012e60:	4618      	mov	r0, r3
 8012e62:	f7fb fb67 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 8012e66:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012e6a:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012e6e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8012e72:	4299      	cmp	r1, r3
 8012e74:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8012e78:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012e7c:	d10b      	bne.n	8012e96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012e7e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012e82:	4552      	cmp	r2, sl
 8012e84:	d107      	bne.n	8012e96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012e86:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012e8a:	455a      	cmp	r2, fp
 8012e8c:	d103      	bne.n	8012e96 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012e8e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012e92:	454a      	cmp	r2, r9
 8012e94:	d06d      	beq.n	8012f72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012e96:	f1bb 0f00 	cmp.w	fp, #0
 8012e9a:	dd65      	ble.n	8012f68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012e9c:	f1b9 0f00 	cmp.w	r9, #0
 8012ea0:	dd62      	ble.n	8012f68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012ea2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012ea6:	fa1f f08a 	uxth.w	r0, sl
 8012eaa:	4552      	cmp	r2, sl
 8012eac:	9000      	str	r0, [sp, #0]
 8012eae:	da12      	bge.n	8012ed6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012eb0:	9301      	str	r3, [sp, #4]
 8012eb2:	9b00      	ldr	r3, [sp, #0]
 8012eb4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012eb8:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012ebc:	1a9a      	subs	r2, r3, r2
 8012ebe:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012ec2:	4631      	mov	r1, r6
 8012ec4:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012ec8:	4640      	mov	r0, r8
 8012eca:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012ece:	69ea      	ldr	r2, [r5, #28]
 8012ed0:	f7ff ff7a 	bl	8012dc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012ed4:	9b01      	ldr	r3, [sp, #4]
 8012ed6:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012eda:	b29f      	uxth	r7, r3
 8012edc:	429a      	cmp	r2, r3
 8012ede:	da0d      	bge.n	8012efc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012ee0:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012ee4:	1aba      	subs	r2, r7, r2
 8012ee6:	f8ad a012 	strh.w	sl, [sp, #18]
 8012eea:	4631      	mov	r1, r6
 8012eec:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012ef0:	4640      	mov	r0, r8
 8012ef2:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012ef6:	69ea      	ldr	r2, [r5, #28]
 8012ef8:	f7ff ff66 	bl	8012dc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012efc:	8822      	ldrh	r2, [r4, #0]
 8012efe:	445f      	add	r7, fp
 8012f00:	88a3      	ldrh	r3, [r4, #4]
 8012f02:	b2bf      	uxth	r7, r7
 8012f04:	4413      	add	r3, r2
 8012f06:	b23a      	sxth	r2, r7
 8012f08:	b29b      	uxth	r3, r3
 8012f0a:	b219      	sxth	r1, r3
 8012f0c:	4291      	cmp	r1, r2
 8012f0e:	dd0d      	ble.n	8012f2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8012f10:	1bdb      	subs	r3, r3, r7
 8012f12:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012f16:	f8ad a012 	strh.w	sl, [sp, #18]
 8012f1a:	4631      	mov	r1, r6
 8012f1c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012f20:	4640      	mov	r0, r8
 8012f22:	f8ad 9016 	strh.w	r9, [sp, #22]
 8012f26:	69ea      	ldr	r2, [r5, #28]
 8012f28:	f7ff ff4e 	bl	8012dc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012f2c:	88e2      	ldrh	r2, [r4, #6]
 8012f2e:	8863      	ldrh	r3, [r4, #2]
 8012f30:	4413      	add	r3, r2
 8012f32:	9a00      	ldr	r2, [sp, #0]
 8012f34:	444a      	add	r2, r9
 8012f36:	b29b      	uxth	r3, r3
 8012f38:	fa1f f982 	uxth.w	r9, r2
 8012f3c:	b219      	sxth	r1, r3
 8012f3e:	fa0f f289 	sxth.w	r2, r9
 8012f42:	428a      	cmp	r2, r1
 8012f44:	da15      	bge.n	8012f72 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012f46:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012f4a:	eba3 0309 	sub.w	r3, r3, r9
 8012f4e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012f52:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012f56:	4631      	mov	r1, r6
 8012f58:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012f5c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012f60:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012f64:	69ea      	ldr	r2, [r5, #28]
 8012f66:	e001      	b.n	8012f6c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012f68:	69ea      	ldr	r2, [r5, #28]
 8012f6a:	4621      	mov	r1, r4
 8012f6c:	4640      	mov	r0, r8
 8012f6e:	f7ff ff2b 	bl	8012dc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012f72:	4628      	mov	r0, r5
 8012f74:	f7ff fe94 	bl	8012ca0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012f78:	6861      	ldr	r1, [r4, #4]
 8012f7a:	4602      	mov	r2, r0
 8012f7c:	4633      	mov	r3, r6
 8012f7e:	6820      	ldr	r0, [r4, #0]
 8012f80:	c303      	stmia	r3!, {r0, r1}
 8012f82:	4611      	mov	r1, r2
 8012f84:	4630      	mov	r0, r6
 8012f86:	f7fb fad5 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 8012f8a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012f8e:	2b00      	cmp	r3, #0
 8012f90:	f77f af33 	ble.w	8012dfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012f94:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012f98:	2b00      	cmp	r3, #0
 8012f9a:	f77f af2e 	ble.w	8012dfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012f9e:	4628      	mov	r0, r5
 8012fa0:	f7ff fe9a 	bl	8012cd8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012fa4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012fa8:	1a18      	subs	r0, r3, r0
 8012faa:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012fae:	4628      	mov	r0, r5
 8012fb0:	f7ff fea6 	bl	8012d00 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012fb4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012fb8:	4631      	mov	r1, r6
 8012fba:	1a18      	subs	r0, r3, r0
 8012fbc:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012fc0:	4628      	mov	r0, r5
 8012fc2:	682b      	ldr	r3, [r5, #0]
 8012fc4:	689b      	ldr	r3, [r3, #8]
 8012fc6:	4798      	blx	r3
 8012fc8:	e717      	b.n	8012dfa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012fca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012fca:	b570      	push	{r4, r5, r6, lr}
 8012fcc:	1d06      	adds	r6, r0, #4
 8012fce:	b086      	sub	sp, #24
 8012fd0:	460c      	mov	r4, r1
 8012fd2:	2300      	movs	r3, #0
 8012fd4:	4631      	mov	r1, r6
 8012fd6:	4605      	mov	r5, r0
 8012fd8:	a802      	add	r0, sp, #8
 8012fda:	9301      	str	r3, [sp, #4]
 8012fdc:	f7ff fca0 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012fe0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012fe4:	8822      	ldrh	r2, [r4, #0]
 8012fe6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012fea:	1ad2      	subs	r2, r2, r3
 8012fec:	8863      	ldrh	r3, [r4, #2]
 8012fee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012ff2:	1a5b      	subs	r3, r3, r1
 8012ff4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012ff8:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012ffc:	aa01      	add	r2, sp, #4
 8012ffe:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013002:	4630      	mov	r0, r6
 8013004:	f8ad 1016 	strh.w	r1, [sp, #22]
 8013008:	a904      	add	r1, sp, #16
 801300a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801300e:	f7fb fb69 	bl	800e6e4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8013012:	9a01      	ldr	r2, [sp, #4]
 8013014:	b11a      	cbz	r2, 801301e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8013016:	4621      	mov	r1, r4
 8013018:	4628      	mov	r0, r5
 801301a:	f7ff fed5 	bl	8012dc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801301e:	b006      	add	sp, #24
 8013020:	bd70      	pop	{r4, r5, r6, pc}

08013022 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8013022:	4602      	mov	r2, r0
 8013024:	b530      	push	{r4, r5, lr}
 8013026:	4604      	mov	r4, r0
 8013028:	b085      	sub	sp, #20
 801302a:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801302e:	460d      	mov	r5, r1
 8013030:	466b      	mov	r3, sp
 8013032:	6851      	ldr	r1, [r2, #4]
 8013034:	c303      	stmia	r3!, {r0, r1}
 8013036:	4629      	mov	r1, r5
 8013038:	4668      	mov	r0, sp
 801303a:	f7fb fa7b 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 801303e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013042:	b12b      	cbz	r3, 8013050 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013044:	4669      	mov	r1, sp
 8013046:	4620      	mov	r0, r4
 8013048:	f7ff ffbf 	bl	8012fca <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801304c:	b005      	add	sp, #20
 801304e:	bd30      	pop	{r4, r5, pc}
 8013050:	3404      	adds	r4, #4
 8013052:	a802      	add	r0, sp, #8
 8013054:	4621      	mov	r1, r4
 8013056:	f7ff fc63 	bl	8012920 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801305a:	f8bd 3000 	ldrh.w	r3, [sp]
 801305e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8013062:	4669      	mov	r1, sp
 8013064:	4620      	mov	r0, r4
 8013066:	1a9b      	subs	r3, r3, r2
 8013068:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801306c:	f8ad 3000 	strh.w	r3, [sp]
 8013070:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013074:	1a9b      	subs	r3, r3, r2
 8013076:	f8ad 3002 	strh.w	r3, [sp, #2]
 801307a:	f7fb fafa 	bl	800e672 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801307e:	e7e5      	b.n	801304c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08013080 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8013080:	460b      	mov	r3, r1
 8013082:	680a      	ldr	r2, [r1, #0]
 8013084:	1d01      	adds	r1, r0, #4
 8013086:	6992      	ldr	r2, [r2, #24]
 8013088:	4618      	mov	r0, r3
 801308a:	4710      	bx	r2

0801308c <_ZN8touchgfx12TextProviderC1Ev>:
 801308c:	b538      	push	{r3, r4, r5, lr}
 801308e:	2500      	movs	r5, #0
 8013090:	2302      	movs	r3, #2
 8013092:	4604      	mov	r4, r0
 8013094:	220e      	movs	r2, #14
 8013096:	7403      	strb	r3, [r0, #16]
 8013098:	4629      	mov	r1, r5
 801309a:	6145      	str	r5, [r0, #20]
 801309c:	7605      	strb	r5, [r0, #24]
 801309e:	83c5      	strh	r5, [r0, #30]
 80130a0:	8405      	strh	r5, [r0, #32]
 80130a2:	86c5      	strh	r5, [r0, #54]	; 0x36
 80130a4:	8705      	strh	r5, [r0, #56]	; 0x38
 80130a6:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80130a8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80130ac:	e9c0 5500 	strd	r5, r5, [r0]
 80130b0:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80130b4:	304c      	adds	r0, #76	; 0x4c
 80130b6:	f00e fe76 	bl	8021da6 <memset>
 80130ba:	2301      	movs	r3, #1
 80130bc:	4620      	mov	r0, r4
 80130be:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80130c2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80130c6:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80130ca:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80130ce:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80130d2:	f7f8 ff67 	bl	800bfa4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80130d6:	4620      	mov	r0, r4
 80130d8:	bd38      	pop	{r3, r4, r5, pc}

080130da <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80130da:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80130dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80130e0:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80130e2:	fab0 f080 	clz	r0, r0
 80130e6:	0940      	lsrs	r0, r0, #5
 80130e8:	4770      	bx	lr

080130ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80130ea:	b530      	push	{r4, r5, lr}
 80130ec:	2500      	movs	r5, #0
 80130ee:	2401      	movs	r4, #1
 80130f0:	6843      	ldr	r3, [r0, #4]
 80130f2:	b913      	cbnz	r3, 80130fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80130f4:	6803      	ldr	r3, [r0, #0]
 80130f6:	b313      	cbz	r3, 801313e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80130f8:	6043      	str	r3, [r0, #4]
 80130fa:	7e03      	ldrb	r3, [r0, #24]
 80130fc:	b143      	cbz	r3, 8013110 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80130fe:	6943      	ldr	r3, [r0, #20]
 8013100:	b12b      	cbz	r3, 801310e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8013102:	881a      	ldrh	r2, [r3, #0]
 8013104:	b11a      	cbz	r2, 801310e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8013106:	1c9a      	adds	r2, r3, #2
 8013108:	6142      	str	r2, [r0, #20]
 801310a:	8818      	ldrh	r0, [r3, #0]
 801310c:	bd30      	pop	{r4, r5, pc}
 801310e:	7605      	strb	r5, [r0, #24]
 8013110:	6843      	ldr	r3, [r0, #4]
 8013112:	8819      	ldrh	r1, [r3, #0]
 8013114:	b199      	cbz	r1, 801313e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013116:	1c9a      	adds	r2, r3, #2
 8013118:	2902      	cmp	r1, #2
 801311a:	6042      	str	r2, [r0, #4]
 801311c:	d1f5      	bne.n	801310a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801311e:	7c03      	ldrb	r3, [r0, #16]
 8013120:	2b01      	cmp	r3, #1
 8013122:	d8e5      	bhi.n	80130f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013124:	1c5a      	adds	r2, r3, #1
 8013126:	3302      	adds	r3, #2
 8013128:	7402      	strb	r2, [r0, #16]
 801312a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801312e:	6143      	str	r3, [r0, #20]
 8013130:	2b00      	cmp	r3, #0
 8013132:	d0dd      	beq.n	80130f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013134:	881b      	ldrh	r3, [r3, #0]
 8013136:	2b00      	cmp	r3, #0
 8013138:	d0da      	beq.n	80130f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801313a:	7604      	strb	r4, [r0, #24]
 801313c:	e7d8      	b.n	80130f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801313e:	2000      	movs	r0, #0
 8013140:	e7e4      	b.n	801310c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8013142:	6001      	str	r1, [r0, #0]
 8013144:	2100      	movs	r1, #0
 8013146:	b430      	push	{r4, r5}
 8013148:	6041      	str	r1, [r0, #4]
 801314a:	6815      	ldr	r5, [r2, #0]
 801314c:	6085      	str	r5, [r0, #8]
 801314e:	6852      	ldr	r2, [r2, #4]
 8013150:	6443      	str	r3, [r0, #68]	; 0x44
 8013152:	9b02      	ldr	r3, [sp, #8]
 8013154:	60c2      	str	r2, [r0, #12]
 8013156:	7401      	strb	r1, [r0, #16]
 8013158:	6141      	str	r1, [r0, #20]
 801315a:	7601      	strb	r1, [r0, #24]
 801315c:	8701      	strh	r1, [r0, #56]	; 0x38
 801315e:	8401      	strh	r1, [r0, #32]
 8013160:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8013164:	6483      	str	r3, [r0, #72]	; 0x48
 8013166:	bc30      	pop	{r4, r5}
 8013168:	f7f8 bf1c 	b.w	800bfa4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801316c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801316c:	b408      	push	{r3}
 801316e:	b510      	push	{r4, lr}
 8013170:	b085      	sub	sp, #20
 8013172:	ac07      	add	r4, sp, #28
 8013174:	f854 3b04 	ldr.w	r3, [r4], #4
 8013178:	9300      	str	r3, [sp, #0]
 801317a:	4613      	mov	r3, r2
 801317c:	4622      	mov	r2, r4
 801317e:	9403      	str	r4, [sp, #12]
 8013180:	f7ff ffdf 	bl	8013142 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013184:	b005      	add	sp, #20
 8013186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801318a:	b001      	add	sp, #4
 801318c:	4770      	bx	lr

0801318e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801318e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013190:	4605      	mov	r5, r0
 8013192:	4608      	mov	r0, r1
 8013194:	b1f1      	cbz	r1, 80131d4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8013196:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801319a:	460b      	mov	r3, r1
 801319c:	f101 0708 	add.w	r7, r1, #8
 80131a0:	4622      	mov	r2, r4
 80131a2:	6818      	ldr	r0, [r3, #0]
 80131a4:	3308      	adds	r3, #8
 80131a6:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80131aa:	4626      	mov	r6, r4
 80131ac:	42bb      	cmp	r3, r7
 80131ae:	c603      	stmia	r6!, {r0, r1}
 80131b0:	4634      	mov	r4, r6
 80131b2:	d1f6      	bne.n	80131a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80131b4:	6818      	ldr	r0, [r3, #0]
 80131b6:	6030      	str	r0, [r6, #0]
 80131b8:	4610      	mov	r0, r2
 80131ba:	889b      	ldrh	r3, [r3, #4]
 80131bc:	80b3      	strh	r3, [r6, #4]
 80131be:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80131c2:	015b      	lsls	r3, r3, #5
 80131c4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80131c8:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80131cc:	430b      	orrs	r3, r1
 80131ce:	425b      	negs	r3, r3
 80131d0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80131d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080131d6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80131d6:	b538      	push	{r3, r4, r5, lr}
 80131d8:	460c      	mov	r4, r1
 80131da:	6811      	ldr	r1, [r2, #0]
 80131dc:	4610      	mov	r0, r2
 80131de:	68cd      	ldr	r5, [r1, #12]
 80131e0:	4619      	mov	r1, r3
 80131e2:	47a8      	blx	r5
 80131e4:	2800      	cmp	r0, #0
 80131e6:	bf08      	it	eq
 80131e8:	4620      	moveq	r0, r4
 80131ea:	bd38      	pop	{r3, r4, r5, pc}

080131ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80131ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80131ee:	4604      	mov	r4, r0
 80131f0:	4615      	mov	r5, r2
 80131f2:	4608      	mov	r0, r1
 80131f4:	b93a      	cbnz	r2, 8013206 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80131f6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80131fa:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80131fe:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8013202:	4628      	mov	r0, r5
 8013204:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013206:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801320a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801320e:	8893      	ldrh	r3, [r2, #4]
 8013210:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8013214:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8013218:	79ee      	ldrb	r6, [r5, #7]
 801321a:	4316      	orrs	r6, r2
 801321c:	19da      	adds	r2, r3, r7
 801321e:	b291      	uxth	r1, r2
 8013220:	b2b7      	uxth	r7, r6
 8013222:	291d      	cmp	r1, #29
 8013224:	d87b      	bhi.n	801331e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8013226:	2201      	movs	r2, #1
 8013228:	10f6      	asrs	r6, r6, #3
 801322a:	408a      	lsls	r2, r1
 801322c:	4974      	ldr	r1, [pc, #464]	; (8013400 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801322e:	420a      	tst	r2, r1
 8013230:	d12e      	bne.n	8013290 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8013232:	f412 7f60 	tst.w	r2, #896	; 0x380
 8013236:	d072      	beq.n	801331e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8013238:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801323c:	462b      	mov	r3, r5
 801323e:	f105 0e08 	add.w	lr, r5, #8
 8013242:	4615      	mov	r5, r2
 8013244:	6818      	ldr	r0, [r3, #0]
 8013246:	3308      	adds	r3, #8
 8013248:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801324c:	4694      	mov	ip, r2
 801324e:	4573      	cmp	r3, lr
 8013250:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013254:	4662      	mov	r2, ip
 8013256:	d1f5      	bne.n	8013244 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8013258:	6818      	ldr	r0, [r3, #0]
 801325a:	f8cc 0000 	str.w	r0, [ip]
 801325e:	889b      	ldrh	r3, [r3, #4]
 8013260:	f8ac 3004 	strh.w	r3, [ip, #4]
 8013264:	b2b3      	uxth	r3, r6
 8013266:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801326a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801326e:	1aca      	subs	r2, r1, r3
 8013270:	1bcf      	subs	r7, r1, r7
 8013272:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8013276:	b292      	uxth	r2, r2
 8013278:	1afb      	subs	r3, r7, r3
 801327a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801327e:	10d2      	asrs	r2, r2, #3
 8013280:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8013284:	4302      	orrs	r2, r0
 8013286:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801328a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801328e:	e7b8      	b.n	8013202 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013290:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013292:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013296:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8013298:	f640 6333 	movw	r3, #3635	; 0xe33
 801329c:	4299      	cmp	r1, r3
 801329e:	d110      	bne.n	80132c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80132a0:	6803      	ldr	r3, [r0, #0]
 80132a2:	68db      	ldr	r3, [r3, #12]
 80132a4:	4798      	blx	r3
 80132a6:	7b41      	ldrb	r1, [r0, #13]
 80132a8:	00cb      	lsls	r3, r1, #3
 80132aa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80132ae:	7a03      	ldrb	r3, [r0, #8]
 80132b0:	0648      	lsls	r0, r1, #25
 80132b2:	ea43 0302 	orr.w	r3, r3, r2
 80132b6:	bf44      	itt	mi
 80132b8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80132bc:	b21b      	sxthmi	r3, r3
 80132be:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80132c2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80132c6:	462a      	mov	r2, r5
 80132c8:	f105 0c08 	add.w	ip, r5, #8
 80132cc:	443b      	add	r3, r7
 80132ce:	4433      	add	r3, r6
 80132d0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80132d4:	b29b      	uxth	r3, r3
 80132d6:	4635      	mov	r5, r6
 80132d8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80132dc:	6810      	ldr	r0, [r2, #0]
 80132de:	3208      	adds	r2, #8
 80132e0:	f852 1c04 	ldr.w	r1, [r2, #-4]
 80132e4:	4637      	mov	r7, r6
 80132e6:	4562      	cmp	r2, ip
 80132e8:	c703      	stmia	r7!, {r0, r1}
 80132ea:	463e      	mov	r6, r7
 80132ec:	d1f6      	bne.n	80132dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80132ee:	6810      	ldr	r0, [r2, #0]
 80132f0:	6038      	str	r0, [r7, #0]
 80132f2:	8892      	ldrh	r2, [r2, #4]
 80132f4:	80ba      	strh	r2, [r7, #4]
 80132f6:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80132fa:	10db      	asrs	r3, r3, #3
 80132fc:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013300:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013304:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013308:	4313      	orrs	r3, r2
 801330a:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801330e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013312:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8013316:	1a9b      	subs	r3, r3, r2
 8013318:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801331c:	e771      	b.n	8013202 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801331e:	f023 0204 	bic.w	r2, r3, #4
 8013322:	f640 611b 	movw	r1, #3611	; 0xe1b
 8013326:	428a      	cmp	r2, r1
 8013328:	d003      	beq.n	8013332 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 801332a:	f640 621d 	movw	r2, #3613	; 0xe1d
 801332e:	4293      	cmp	r3, r2
 8013330:	d120      	bne.n	8013374 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 8013332:	3b01      	subs	r3, #1
 8013334:	4602      	mov	r2, r0
 8013336:	4629      	mov	r1, r5
 8013338:	4620      	mov	r0, r4
 801333a:	b29b      	uxth	r3, r3
 801333c:	f7ff ff4b 	bl	80131d6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013340:	7b41      	ldrb	r1, [r0, #13]
 8013342:	00cb      	lsls	r3, r1, #3
 8013344:	0649      	lsls	r1, r1, #25
 8013346:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801334a:	7a03      	ldrb	r3, [r0, #8]
 801334c:	ea43 0302 	orr.w	r3, r3, r2
 8013350:	bf44      	itt	mi
 8013352:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013356:	b21b      	sxthmi	r3, r3
 8013358:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801335c:	7b6b      	ldrb	r3, [r5, #13]
 801335e:	7aaa      	ldrb	r2, [r5, #10]
 8013360:	005b      	lsls	r3, r3, #1
 8013362:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013366:	4313      	orrs	r3, r2
 8013368:	115a      	asrs	r2, r3, #5
 801336a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801336e:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013372:	e035      	b.n	80133e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8013374:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8013378:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801337c:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8013380:	7a2a      	ldrb	r2, [r5, #8]
 8013382:	ea42 0201 	orr.w	r2, r2, r1
 8013386:	f640 6109 	movw	r1, #3593	; 0xe09
 801338a:	bf1c      	itt	ne
 801338c:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8013390:	b212      	sxthne	r2, r2
 8013392:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8013396:	f023 0210 	bic.w	r2, r3, #16
 801339a:	428a      	cmp	r2, r1
 801339c:	d003      	beq.n	80133a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 801339e:	f640 6213 	movw	r2, #3603	; 0xe13
 80133a2:	4293      	cmp	r3, r2
 80133a4:	d129      	bne.n	80133fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80133a6:	7b6e      	ldrb	r6, [r5, #13]
 80133a8:	4629      	mov	r1, r5
 80133aa:	0076      	lsls	r6, r6, #1
 80133ac:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80133b0:	7aae      	ldrb	r6, [r5, #10]
 80133b2:	4316      	orrs	r6, r2
 80133b4:	f640 6213 	movw	r2, #3603	; 0xe13
 80133b8:	4293      	cmp	r3, r2
 80133ba:	4602      	mov	r2, r0
 80133bc:	4620      	mov	r0, r4
 80133be:	bf16      	itet	ne
 80133c0:	f103 33ff 	addne.w	r3, r3, #4294967295
 80133c4:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80133c8:	b29b      	uxthne	r3, r3
 80133ca:	f7ff ff04 	bl	80131d6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80133ce:	7b43      	ldrb	r3, [r0, #13]
 80133d0:	7a82      	ldrb	r2, [r0, #10]
 80133d2:	005b      	lsls	r3, r3, #1
 80133d4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80133d8:	4313      	orrs	r3, r2
 80133da:	1af6      	subs	r6, r6, r3
 80133dc:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80133e0:	7b69      	ldrb	r1, [r5, #13]
 80133e2:	00cb      	lsls	r3, r1, #3
 80133e4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80133e8:	7a2b      	ldrb	r3, [r5, #8]
 80133ea:	4313      	orrs	r3, r2
 80133ec:	064a      	lsls	r2, r1, #25
 80133ee:	bf44      	itt	mi
 80133f0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80133f4:	b21b      	sxthmi	r3, r3
 80133f6:	1bdb      	subs	r3, r3, r7
 80133f8:	e747      	b.n	801328a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80133fa:	2300      	movs	r3, #0
 80133fc:	e7b7      	b.n	801336e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 80133fe:	bf00      	nop
 8013400:	3fc00079 	.word	0x3fc00079

08013404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8013404:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013408:	4604      	mov	r4, r0
 801340a:	b942      	cbnz	r2, 801341e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801340c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013410:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8013414:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8013418:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801341c:	e047      	b.n	80134ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801341e:	7b51      	ldrb	r1, [r2, #13]
 8013420:	8893      	ldrh	r3, [r2, #4]
 8013422:	010d      	lsls	r5, r1, #4
 8013424:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8013428:	79d5      	ldrb	r5, [r2, #7]
 801342a:	4305      	orrs	r5, r0
 801342c:	2d04      	cmp	r5, #4
 801342e:	bfcc      	ite	gt
 8013430:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8013434:	f04f 0e01 	movle.w	lr, #1
 8013438:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801343c:	f200 80ab 	bhi.w	8013596 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8013440:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8013444:	4283      	cmp	r3, r0
 8013446:	d216      	bcs.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013448:	f240 605b 	movw	r0, #1627	; 0x65b
 801344c:	4283      	cmp	r3, r0
 801344e:	d859      	bhi.n	8013504 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8013450:	f240 6057 	movw	r0, #1623	; 0x657
 8013454:	4283      	cmp	r3, r0
 8013456:	d20e      	bcs.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013458:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801345c:	d24a      	bcs.n	80134f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801345e:	f240 604e 	movw	r0, #1614	; 0x64e
 8013462:	4283      	cmp	r3, r0
 8013464:	d207      	bcs.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013466:	f240 601a 	movw	r0, #1562	; 0x61a
 801346a:	4283      	cmp	r3, r0
 801346c:	d02a      	beq.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801346e:	d821      	bhi.n	80134b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8013470:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8013474:	d35b      	bcc.n	801352e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013476:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801347a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801347e:	f040 80d0 	bne.w	8013622 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013482:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8013486:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801348a:	f040 80ca 	bne.w	8013622 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801348e:	00cb      	lsls	r3, r1, #3
 8013490:	0649      	lsls	r1, r1, #25
 8013492:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013496:	7a13      	ldrb	r3, [r2, #8]
 8013498:	ea43 0300 	orr.w	r3, r3, r0
 801349c:	bf44      	itt	mi
 801349e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80134a2:	b21b      	sxthmi	r3, r3
 80134a4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80134a8:	1b5d      	subs	r5, r3, r5
 80134aa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80134ae:	4610      	mov	r0, r2
 80134b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80134b4:	f240 604b 	movw	r0, #1611	; 0x64b
 80134b8:	4283      	cmp	r3, r0
 80134ba:	d338      	bcc.n	801352e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80134bc:	f240 604c 	movw	r0, #1612	; 0x64c
 80134c0:	4283      	cmp	r3, r0
 80134c2:	d9d8      	bls.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80134c4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80134c8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80134cc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80134d0:	f040 80f3 	bne.w	80136ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 80134d4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80134d8:	f040 80ef 	bne.w	80136ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 80134dc:	00cb      	lsls	r3, r1, #3
 80134de:	064e      	lsls	r6, r1, #25
 80134e0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80134e4:	7a13      	ldrb	r3, [r2, #8]
 80134e6:	ea43 0300 	orr.w	r3, r3, r0
 80134ea:	bf44      	itt	mi
 80134ec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80134f0:	b21b      	sxthmi	r3, r3
 80134f2:	e7d9      	b.n	80134a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80134f4:	f240 6054 	movw	r0, #1620	; 0x654
 80134f8:	4283      	cmp	r3, r0
 80134fa:	d8e3      	bhi.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80134fc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8013500:	d9e0      	bls.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013502:	e7b8      	b.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013504:	f240 6074 	movw	r0, #1652	; 0x674
 8013508:	4283      	cmp	r3, r0
 801350a:	d0b4      	beq.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801350c:	d82d      	bhi.n	801356a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801350e:	f240 605e 	movw	r0, #1630	; 0x65e
 8013512:	4283      	cmp	r3, r0
 8013514:	d804      	bhi.n	8013520 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8013516:	f240 605d 	movw	r0, #1629	; 0x65d
 801351a:	4283      	cmp	r3, r0
 801351c:	d3d2      	bcc.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801351e:	e7aa      	b.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013520:	f240 605f 	movw	r0, #1631	; 0x65f
 8013524:	4283      	cmp	r3, r0
 8013526:	d0cd      	beq.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013528:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801352c:	d0a3      	beq.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801352e:	00cb      	lsls	r3, r1, #3
 8013530:	0649      	lsls	r1, r1, #25
 8013532:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013536:	7a13      	ldrb	r3, [r2, #8]
 8013538:	ea43 0300 	orr.w	r3, r3, r0
 801353c:	bf44      	itt	mi
 801353e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013542:	b21b      	sxthmi	r3, r3
 8013544:	1b5d      	subs	r5, r3, r5
 8013546:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801354a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801354e:	7b53      	ldrb	r3, [r2, #13]
 8013550:	015b      	lsls	r3, r3, #5
 8013552:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013556:	7993      	ldrb	r3, [r2, #6]
 8013558:	430b      	orrs	r3, r1
 801355a:	2105      	movs	r1, #5
 801355c:	005b      	lsls	r3, r3, #1
 801355e:	fb93 f3f1 	sdiv	r3, r3, r1
 8013562:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013566:	440b      	add	r3, r1
 8013568:	e756      	b.n	8013418 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801356a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801356e:	4283      	cmp	r3, r0
 8013570:	d809      	bhi.n	8013586 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013572:	f240 60df 	movw	r0, #1759	; 0x6df
 8013576:	4283      	cmp	r3, r0
 8013578:	f4bf af7d 	bcs.w	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801357c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013580:	2b05      	cmp	r3, #5
 8013582:	d8d4      	bhi.n	801352e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013584:	e777      	b.n	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013586:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801358a:	4283      	cmp	r3, r0
 801358c:	d09a      	beq.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801358e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013592:	4283      	cmp	r3, r0
 8013594:	e7ca      	b.n	801352c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013596:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801359a:	d22b      	bcs.n	80135f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801359c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80135a0:	4283      	cmp	r3, r0
 80135a2:	d28f      	bcs.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80135a4:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80135a8:	4283      	cmp	r3, r0
 80135aa:	d816      	bhi.n	80135da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80135ac:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80135b0:	4283      	cmp	r3, r0
 80135b2:	f4bf af60 	bcs.w	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80135b6:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80135ba:	4283      	cmp	r3, r0
 80135bc:	d80a      	bhi.n	80135d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80135be:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80135c2:	4283      	cmp	r3, r0
 80135c4:	f4bf af57 	bcs.w	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80135c8:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80135cc:	4283      	cmp	r3, r0
 80135ce:	f43f af79 	beq.w	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80135d2:	e7ac      	b.n	801352e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80135d4:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80135d8:	e7f8      	b.n	80135cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80135da:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80135de:	4283      	cmp	r3, r0
 80135e0:	d802      	bhi.n	80135e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80135e2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80135e6:	e798      	b.n	801351a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80135e8:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80135ec:	4283      	cmp	r3, r0
 80135ee:	f47f af42 	bne.w	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80135f2:	e767      	b.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80135f4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80135f8:	4283      	cmp	r3, r0
 80135fa:	f43f af63 	beq.w	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80135fe:	d802      	bhi.n	8013606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8013600:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8013604:	e7f2      	b.n	80135ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8013606:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801360a:	4283      	cmp	r3, r0
 801360c:	d805      	bhi.n	801361a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801360e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8013612:	4283      	cmp	r3, r0
 8013614:	f4ff af2f 	bcc.w	8013476 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013618:	e754      	b.n	80134c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801361a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801361e:	4283      	cmp	r3, r0
 8013620:	e7af      	b.n	8013582 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8013622:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013626:	4617      	mov	r7, r2
 8013628:	f102 0808 	add.w	r8, r2, #8
 801362c:	4666      	mov	r6, ip
 801362e:	6838      	ldr	r0, [r7, #0]
 8013630:	3708      	adds	r7, #8
 8013632:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8013636:	46e6      	mov	lr, ip
 8013638:	4547      	cmp	r7, r8
 801363a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801363e:	46f4      	mov	ip, lr
 8013640:	d1f5      	bne.n	801362e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013642:	6838      	ldr	r0, [r7, #0]
 8013644:	f8ce 0000 	str.w	r0, [lr]
 8013648:	88b9      	ldrh	r1, [r7, #4]
 801364a:	f8ae 1004 	strh.w	r1, [lr, #4]
 801364e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013652:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013656:	d009      	beq.n	801366c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 8013658:	7b51      	ldrb	r1, [r2, #13]
 801365a:	7992      	ldrb	r2, [r2, #6]
 801365c:	0149      	lsls	r1, r1, #5
 801365e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013662:	4311      	orrs	r1, r2
 8013664:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013668:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801366c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013670:	b2ad      	uxth	r5, r5
 8013672:	d00d      	beq.n	8013690 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8013674:	442b      	add	r3, r5
 8013676:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801367a:	b29b      	uxth	r3, r3
 801367c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013680:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013684:	10db      	asrs	r3, r3, #3
 8013686:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801368a:	4313      	orrs	r3, r2
 801368c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013690:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013694:	00cb      	lsls	r3, r1, #3
 8013696:	064f      	lsls	r7, r1, #25
 8013698:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801369c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80136a0:	ea43 0302 	orr.w	r3, r3, r2
 80136a4:	bf44      	itt	mi
 80136a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80136aa:	b21b      	sxthmi	r3, r3
 80136ac:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80136b0:	1b5b      	subs	r3, r3, r5
 80136b2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80136b6:	4632      	mov	r2, r6
 80136b8:	e6f9      	b.n	80134ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80136ba:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80136be:	4617      	mov	r7, r2
 80136c0:	f102 0908 	add.w	r9, r2, #8
 80136c4:	4666      	mov	r6, ip
 80136c6:	6838      	ldr	r0, [r7, #0]
 80136c8:	3708      	adds	r7, #8
 80136ca:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80136ce:	46e0      	mov	r8, ip
 80136d0:	454f      	cmp	r7, r9
 80136d2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80136d6:	46c4      	mov	ip, r8
 80136d8:	d1f5      	bne.n	80136c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 80136da:	6838      	ldr	r0, [r7, #0]
 80136dc:	f8c8 0000 	str.w	r0, [r8]
 80136e0:	88b9      	ldrh	r1, [r7, #4]
 80136e2:	f8a8 1004 	strh.w	r1, [r8, #4]
 80136e6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80136ea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80136ee:	d009      	beq.n	8013704 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 80136f0:	7b51      	ldrb	r1, [r2, #13]
 80136f2:	7992      	ldrb	r2, [r2, #6]
 80136f4:	0149      	lsls	r1, r1, #5
 80136f6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80136fa:	4311      	orrs	r1, r2
 80136fc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013700:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013704:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013708:	d00e      	beq.n	8013728 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801370a:	eba3 030e 	sub.w	r3, r3, lr
 801370e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013712:	b29b      	uxth	r3, r3
 8013714:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013718:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801371c:	10db      	asrs	r3, r3, #3
 801371e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013722:	4313      	orrs	r3, r2
 8013724:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013728:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801372c:	00cb      	lsls	r3, r1, #3
 801372e:	0648      	lsls	r0, r1, #25
 8013730:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013734:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013738:	ea43 0302 	orr.w	r3, r3, r2
 801373c:	bf44      	itt	mi
 801373e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013742:	b21b      	sxthmi	r3, r3
 8013744:	1b5d      	subs	r5, r3, r5
 8013746:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801374a:	e7b4      	b.n	80136b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

0801374c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801374c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013750:	461e      	mov	r6, r3
 8013752:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013754:	4604      	mov	r4, r0
 8013756:	4617      	mov	r7, r2
 8013758:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801375c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013760:	f7f8 fb7a 	bl	800be58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013764:	4605      	mov	r5, r0
 8013766:	b918      	cbnz	r0, 8013770 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013768:	6030      	str	r0, [r6, #0]
 801376a:	4628      	mov	r0, r5
 801376c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013770:	683b      	ldr	r3, [r7, #0]
 8013772:	4601      	mov	r1, r0
 8013774:	4638      	mov	r0, r7
 8013776:	68db      	ldr	r3, [r3, #12]
 8013778:	4798      	blx	r3
 801377a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801377e:	4602      	mov	r2, r0
 8013780:	6030      	str	r0, [r6, #0]
 8013782:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013786:	d213      	bcs.n	80137b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013788:	4643      	mov	r3, r8
 801378a:	4639      	mov	r1, r7
 801378c:	4620      	mov	r0, r4
 801378e:	f7ff fe39 	bl	8013404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013792:	6030      	str	r0, [r6, #0]
 8013794:	6833      	ldr	r3, [r6, #0]
 8013796:	b143      	cbz	r3, 80137aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013798:	7b5a      	ldrb	r2, [r3, #13]
 801379a:	7a9b      	ldrb	r3, [r3, #10]
 801379c:	0052      	lsls	r2, r2, #1
 801379e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80137a2:	4313      	orrs	r3, r2
 80137a4:	bf0c      	ite	eq
 80137a6:	2301      	moveq	r3, #1
 80137a8:	2300      	movne	r3, #0
 80137aa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80137ae:	e7dc      	b.n	801376a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80137b0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80137b4:	b29b      	uxth	r3, r3
 80137b6:	2b7f      	cmp	r3, #127	; 0x7f
 80137b8:	d804      	bhi.n	80137c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80137ba:	4639      	mov	r1, r7
 80137bc:	4620      	mov	r0, r4
 80137be:	f7ff fd15 	bl	80131ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80137c2:	e7e6      	b.n	8013792 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80137c4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80137c8:	2b00      	cmp	r3, #0
 80137ca:	d0e3      	beq.n	8013794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80137cc:	f640 1302 	movw	r3, #2306	; 0x902
 80137d0:	429d      	cmp	r5, r3
 80137d2:	d1df      	bne.n	8013794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80137d4:	4601      	mov	r1, r0
 80137d6:	4620      	mov	r0, r4
 80137d8:	f7ff fcd9 	bl	801318e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80137dc:	e7d9      	b.n	8013792 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080137de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80137de:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80137e2:	461e      	mov	r6, r3
 80137e4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80137e6:	4604      	mov	r4, r0
 80137e8:	4617      	mov	r7, r2
 80137ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80137ee:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80137f2:	f7f8 fb31 	bl	800be58 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80137f6:	4605      	mov	r5, r0
 80137f8:	b918      	cbnz	r0, 8013802 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80137fa:	6030      	str	r0, [r6, #0]
 80137fc:	4628      	mov	r0, r5
 80137fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013802:	683b      	ldr	r3, [r7, #0]
 8013804:	4601      	mov	r1, r0
 8013806:	4638      	mov	r0, r7
 8013808:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801380c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013810:	47c8      	blx	r9
 8013812:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013816:	4602      	mov	r2, r0
 8013818:	6030      	str	r0, [r6, #0]
 801381a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801381e:	d213      	bcs.n	8013848 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8013820:	4643      	mov	r3, r8
 8013822:	4639      	mov	r1, r7
 8013824:	4620      	mov	r0, r4
 8013826:	f7ff fded 	bl	8013404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801382a:	6030      	str	r0, [r6, #0]
 801382c:	6833      	ldr	r3, [r6, #0]
 801382e:	b143      	cbz	r3, 8013842 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8013830:	7b5a      	ldrb	r2, [r3, #13]
 8013832:	7a9b      	ldrb	r3, [r3, #10]
 8013834:	0052      	lsls	r2, r2, #1
 8013836:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801383a:	4313      	orrs	r3, r2
 801383c:	bf0c      	ite	eq
 801383e:	2301      	moveq	r3, #1
 8013840:	2300      	movne	r3, #0
 8013842:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013846:	e7d9      	b.n	80137fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013848:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801384c:	b29b      	uxth	r3, r3
 801384e:	2b7f      	cmp	r3, #127	; 0x7f
 8013850:	d804      	bhi.n	801385c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8013852:	4639      	mov	r1, r7
 8013854:	4620      	mov	r0, r4
 8013856:	f7ff fcc9 	bl	80131ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801385a:	e7e6      	b.n	801382a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801385c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013860:	2b00      	cmp	r3, #0
 8013862:	d0e3      	beq.n	801382c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013864:	f640 1302 	movw	r3, #2306	; 0x902
 8013868:	429d      	cmp	r5, r3
 801386a:	d1df      	bne.n	801382c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801386c:	4601      	mov	r1, r0
 801386e:	4620      	mov	r0, r4
 8013870:	f7ff fc8d 	bl	801318e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013874:	e7d9      	b.n	801382a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013876 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013876:	b510      	push	{r4, lr}
 8013878:	4604      	mov	r4, r0
 801387a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801387e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013880:	b1e1      	cbz	r1, 80138bc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8013882:	2b0a      	cmp	r3, #10
 8013884:	d02d      	beq.n	80138e2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8013886:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013888:	3901      	subs	r1, #1
 801388a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801388e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8013890:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013894:	1c51      	adds	r1, r2, #1
 8013896:	b289      	uxth	r1, r1
 8013898:	2901      	cmp	r1, #1
 801389a:	bf8a      	itet	hi
 801389c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80138a0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80138a2:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80138a4:	1c5a      	adds	r2, r3, #1
 80138a6:	8722      	strh	r2, [r4, #56]	; 0x38
 80138a8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80138aa:	4413      	add	r3, r2
 80138ac:	b29b      	uxth	r3, r3
 80138ae:	2b09      	cmp	r3, #9
 80138b0:	bf88      	it	hi
 80138b2:	3b0a      	subhi	r3, #10
 80138b4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80138b8:	8458      	strh	r0, [r3, #34]	; 0x22
 80138ba:	e7de      	b.n	801387a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80138bc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80138be:	2b0a      	cmp	r3, #10
 80138c0:	d00f      	beq.n	80138e2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80138c2:	4620      	mov	r0, r4
 80138c4:	f7ff fc11 	bl	80130ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80138c8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80138ca:	1c5a      	adds	r2, r3, #1
 80138cc:	8722      	strh	r2, [r4, #56]	; 0x38
 80138ce:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80138d0:	4413      	add	r3, r2
 80138d2:	b29b      	uxth	r3, r3
 80138d4:	2b09      	cmp	r3, #9
 80138d6:	bf88      	it	hi
 80138d8:	3b0a      	subhi	r3, #10
 80138da:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80138de:	8458      	strh	r0, [r3, #34]	; 0x22
 80138e0:	e7ec      	b.n	80138bc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80138e2:	bd10      	pop	{r4, pc}

080138e4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80138e4:	b538      	push	{r3, r4, r5, lr}
 80138e6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80138e8:	4604      	mov	r4, r0
 80138ea:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80138ee:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80138f0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80138f2:	3a01      	subs	r2, #1
 80138f4:	8702      	strh	r2, [r0, #56]	; 0x38
 80138f6:	1c5a      	adds	r2, r3, #1
 80138f8:	b292      	uxth	r2, r2
 80138fa:	2a09      	cmp	r2, #9
 80138fc:	bf8a      	itet	hi
 80138fe:	3b09      	subhi	r3, #9
 8013900:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8013902:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8013904:	f7ff ffb7 	bl	8013876 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013908:	8c23      	ldrh	r3, [r4, #32]
 801390a:	2b01      	cmp	r3, #1
 801390c:	bf9c      	itt	ls
 801390e:	3301      	addls	r3, #1
 8013910:	8423      	strhls	r3, [r4, #32]
 8013912:	8be3      	ldrh	r3, [r4, #30]
 8013914:	b90b      	cbnz	r3, 801391a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8013916:	2302      	movs	r3, #2
 8013918:	83e3      	strh	r3, [r4, #30]
 801391a:	8be3      	ldrh	r3, [r4, #30]
 801391c:	4628      	mov	r0, r5
 801391e:	3b01      	subs	r3, #1
 8013920:	b29b      	uxth	r3, r3
 8013922:	83e3      	strh	r3, [r4, #30]
 8013924:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013928:	8365      	strh	r5, [r4, #26]
 801392a:	bd38      	pop	{r3, r4, r5, pc}

0801392c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801392c:	428a      	cmp	r2, r1
 801392e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013932:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8013934:	d932      	bls.n	801399c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8013936:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8013938:	1a54      	subs	r4, r2, r1
 801393a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801393e:	19ee      	adds	r6, r5, r7
 8013940:	fa1f fe84 	uxth.w	lr, r4
 8013944:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8013948:	3e01      	subs	r6, #1
 801394a:	b2b4      	uxth	r4, r6
 801394c:	eba4 090e 	sub.w	r9, r4, lr
 8013950:	fa1f f989 	uxth.w	r9, r9
 8013954:	2c09      	cmp	r4, #9
 8013956:	4626      	mov	r6, r4
 8013958:	bf88      	it	hi
 801395a:	f1a4 060a 	subhi.w	r6, r4, #10
 801395e:	f1bc 0f00 	cmp.w	ip, #0
 8013962:	f104 34ff 	add.w	r4, r4, #4294967295
 8013966:	bf08      	it	eq
 8013968:	f04f 0c02 	moveq.w	ip, #2
 801396c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013970:	b2a4      	uxth	r4, r4
 8013972:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013976:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801397a:	454c      	cmp	r4, r9
 801397c:	fa1f fc8c 	uxth.w	ip, ip
 8013980:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013984:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013988:	d1e4      	bne.n	8013954 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801398a:	eba5 050e 	sub.w	r5, r5, lr
 801398e:	eb0e 0408 	add.w	r4, lr, r8
 8013992:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8013996:	8705      	strh	r5, [r0, #56]	; 0x38
 8013998:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801399c:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801399e:	250a      	movs	r5, #10
 80139a0:	1a64      	subs	r4, r4, r1
 80139a2:	4439      	add	r1, r7
 80139a4:	b289      	uxth	r1, r1
 80139a6:	8704      	strh	r4, [r0, #56]	; 0x38
 80139a8:	2909      	cmp	r1, #9
 80139aa:	bf88      	it	hi
 80139ac:	390a      	subhi	r1, #10
 80139ae:	86c1      	strh	r1, [r0, #54]	; 0x36
 80139b0:	b18a      	cbz	r2, 80139d6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 80139b2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80139b4:	3a01      	subs	r2, #1
 80139b6:	3101      	adds	r1, #1
 80139b8:	b292      	uxth	r2, r2
 80139ba:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80139be:	8701      	strh	r1, [r0, #56]	; 0x38
 80139c0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80139c2:	b901      	cbnz	r1, 80139c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 80139c4:	86c5      	strh	r5, [r0, #54]	; 0x36
 80139c6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80139c8:	3901      	subs	r1, #1
 80139ca:	b289      	uxth	r1, r1
 80139cc:	86c1      	strh	r1, [r0, #54]	; 0x36
 80139ce:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80139d2:	844c      	strh	r4, [r1, #34]	; 0x22
 80139d4:	e7ec      	b.n	80139b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80139d6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80139da:	f7ff bf4c 	b.w	8013876 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080139de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80139de:	b570      	push	{r4, r5, r6, lr}
 80139e0:	2500      	movs	r5, #0
 80139e2:	4295      	cmp	r5, r2
 80139e4:	d011      	beq.n	8013a0a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80139e6:	8bc4      	ldrh	r4, [r0, #30]
 80139e8:	f831 6b02 	ldrh.w	r6, [r1], #2
 80139ec:	4414      	add	r4, r2
 80139ee:	3c01      	subs	r4, #1
 80139f0:	1b64      	subs	r4, r4, r5
 80139f2:	b2a4      	uxth	r4, r4
 80139f4:	2c01      	cmp	r4, #1
 80139f6:	bf88      	it	hi
 80139f8:	3c02      	subhi	r4, #2
 80139fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80139fe:	8b64      	ldrh	r4, [r4, #26]
 8013a00:	42b4      	cmp	r4, r6
 8013a02:	d117      	bne.n	8013a34 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8013a04:	3501      	adds	r5, #1
 8013a06:	b2ad      	uxth	r5, r5
 8013a08:	e7eb      	b.n	80139e2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013a0a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013a0e:	2400      	movs	r4, #0
 8013a10:	4413      	add	r3, r2
 8013a12:	b2a2      	uxth	r2, r4
 8013a14:	429a      	cmp	r2, r3
 8013a16:	da0f      	bge.n	8013a38 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8013a18:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013a1a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013a1e:	3401      	adds	r4, #1
 8013a20:	4432      	add	r2, r6
 8013a22:	b292      	uxth	r2, r2
 8013a24:	2a09      	cmp	r2, #9
 8013a26:	bf88      	it	hi
 8013a28:	3a0a      	subhi	r2, #10
 8013a2a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013a2e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8013a30:	42aa      	cmp	r2, r5
 8013a32:	d0ee      	beq.n	8013a12 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8013a34:	2000      	movs	r0, #0
 8013a36:	bd70      	pop	{r4, r5, r6, pc}
 8013a38:	2001      	movs	r0, #1
 8013a3a:	e7fc      	b.n	8013a36 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08013a3c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8013a3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a40:	4605      	mov	r5, r0
 8013a42:	4616      	mov	r6, r2
 8013a44:	1c8c      	adds	r4, r1, #2
 8013a46:	8809      	ldrh	r1, [r1, #0]
 8013a48:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8013a4c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8013a50:	42b3      	cmp	r3, r6
 8013a52:	d124      	bne.n	8013a9e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013a54:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013a58:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8013a5c:	f001 070f 	and.w	r7, r1, #15
 8013a60:	4652      	mov	r2, sl
 8013a62:	f8cd 8000 	str.w	r8, [sp]
 8013a66:	464b      	mov	r3, r9
 8013a68:	4621      	mov	r1, r4
 8013a6a:	4628      	mov	r0, r5
 8013a6c:	f7ff ffb7 	bl	80139de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8013a70:	4683      	mov	fp, r0
 8013a72:	b168      	cbz	r0, 8013a90 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013a74:	eb0a 0109 	add.w	r1, sl, r9
 8013a78:	463a      	mov	r2, r7
 8013a7a:	4628      	mov	r0, r5
 8013a7c:	4441      	add	r1, r8
 8013a7e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8013a82:	4649      	mov	r1, r9
 8013a84:	f7ff ff52 	bl	801392c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013a88:	4658      	mov	r0, fp
 8013a8a:	b003      	add	sp, #12
 8013a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a90:	eb07 010a 	add.w	r1, r7, sl
 8013a94:	4449      	add	r1, r9
 8013a96:	4441      	add	r1, r8
 8013a98:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013a9c:	e7d2      	b.n	8013a44 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013a9e:	f04f 0b00 	mov.w	fp, #0
 8013aa2:	e7f1      	b.n	8013a88 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013aa4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013aa4:	b570      	push	{r4, r5, r6, lr}
 8013aa6:	8810      	ldrh	r0, [r2, #0]
 8013aa8:	4298      	cmp	r0, r3
 8013aaa:	d817      	bhi.n	8013adc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013aac:	1e48      	subs	r0, r1, #1
 8013aae:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013ab2:	4298      	cmp	r0, r3
 8013ab4:	d312      	bcc.n	8013adc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013ab6:	2400      	movs	r4, #0
 8013ab8:	428c      	cmp	r4, r1
 8013aba:	d20f      	bcs.n	8013adc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013abc:	1860      	adds	r0, r4, r1
 8013abe:	1040      	asrs	r0, r0, #1
 8013ac0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013ac4:	0085      	lsls	r5, r0, #2
 8013ac6:	42b3      	cmp	r3, r6
 8013ac8:	d902      	bls.n	8013ad0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013aca:	3001      	adds	r0, #1
 8013acc:	b284      	uxth	r4, r0
 8013ace:	e7f3      	b.n	8013ab8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013ad0:	d201      	bcs.n	8013ad6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013ad2:	b281      	uxth	r1, r0
 8013ad4:	e7f0      	b.n	8013ab8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013ad6:	442a      	add	r2, r5
 8013ad8:	8850      	ldrh	r0, [r2, #2]
 8013ada:	bd70      	pop	{r4, r5, r6, pc}
 8013adc:	2000      	movs	r0, #0
 8013ade:	e7fc      	b.n	8013ada <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08013ae0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8013ae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ae4:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013ae6:	4604      	mov	r4, r0
 8013ae8:	260b      	movs	r6, #11
 8013aea:	886f      	ldrh	r7, [r5, #2]
 8013aec:	087f      	lsrs	r7, r7, #1
 8013aee:	3e01      	subs	r6, #1
 8013af0:	d013      	beq.n	8013b1a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013af2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013af4:	462a      	mov	r2, r5
 8013af6:	4639      	mov	r1, r7
 8013af8:	4620      	mov	r0, r4
 8013afa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013afe:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013b02:	4643      	mov	r3, r8
 8013b04:	f7ff ffce 	bl	8013aa4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013b08:	b138      	cbz	r0, 8013b1a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013b0a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013b0e:	4642      	mov	r2, r8
 8013b10:	4620      	mov	r0, r4
 8013b12:	f7ff ff93 	bl	8013a3c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013b16:	2800      	cmp	r0, #0
 8013b18:	d1e9      	bne.n	8013aee <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013b1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08013b20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013b20:	b570      	push	{r4, r5, r6, lr}
 8013b22:	694a      	ldr	r2, [r1, #20]
 8013b24:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8013b26:	684b      	ldr	r3, [r1, #4]
 8013b28:	1b54      	subs	r4, r2, r5
 8013b2a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8013b2c:	f000 8106 	beq.w	8013d3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8013b30:	1b9b      	subs	r3, r3, r6
 8013b32:	d003      	beq.n	8013b3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013b34:	4363      	muls	r3, r4
 8013b36:	2210      	movs	r2, #16
 8013b38:	fb93 f3f2 	sdiv	r3, r3, r2
 8013b3c:	680c      	ldr	r4, [r1, #0]
 8013b3e:	698a      	ldr	r2, [r1, #24]
 8013b40:	1b65      	subs	r5, r4, r5
 8013b42:	f000 80fd 	beq.w	8013d40 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013b46:	1b92      	subs	r2, r2, r6
 8013b48:	d003      	beq.n	8013b52 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013b4a:	436a      	muls	r2, r5
 8013b4c:	2410      	movs	r4, #16
 8013b4e:	fb92 f2f4 	sdiv	r2, r2, r4
 8013b52:	1a9b      	subs	r3, r3, r2
 8013b54:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8013d7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013b58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013b5c:	460a      	mov	r2, r1
 8013b5e:	ee07 3a90 	vmov	s15, r3
 8013b62:	f100 040c 	add.w	r4, r0, #12
 8013b66:	4603      	mov	r3, r0
 8013b68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013b6c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013b70:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8013b74:	eeb1 6a43 	vneg.f32	s12, s6
 8013b78:	edd2 7a02 	vldr	s15, [r2, #8]
 8013b7c:	3214      	adds	r2, #20
 8013b7e:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8013b82:	ece3 6a01 	vstmia	r3!, {s13}
 8013b86:	429c      	cmp	r4, r3
 8013b88:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013b8c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013b90:	edc3 7a02 	vstr	s15, [r3, #8]
 8013b94:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013b98:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013b9c:	edc3 7a05 	vstr	s15, [r3, #20]
 8013ba0:	d1ea      	bne.n	8013b78 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8013ba2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013ba4:	698b      	ldr	r3, [r1, #24]
 8013ba6:	edd0 4a02 	vldr	s9, [r0, #8]
 8013baa:	1a9b      	subs	r3, r3, r2
 8013bac:	edd0 3a00 	vldr	s7, [r0]
 8013bb0:	edd0 6a01 	vldr	s13, [r0, #4]
 8013bb4:	ee07 3a90 	vmov	s15, r3
 8013bb8:	684b      	ldr	r3, [r1, #4]
 8013bba:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013bbe:	ed90 5a05 	vldr	s10, [r0, #20]
 8013bc2:	1a9b      	subs	r3, r3, r2
 8013bc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013bc8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013bcc:	ed90 2a03 	vldr	s4, [r0, #12]
 8013bd0:	ee07 3a10 	vmov	s14, r3
 8013bd4:	edd0 5a04 	vldr	s11, [r0, #16]
 8013bd8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013bdc:	ed90 1a07 	vldr	s2, [r0, #28]
 8013be0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013be4:	edd0 2a06 	vldr	s5, [r0, #24]
 8013be8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8013bec:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013bf0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013bf4:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013bf8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013bfc:	ee67 7a83 	vmul.f32	s15, s15, s6
 8013c00:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8013c04:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013c06:	694a      	ldr	r2, [r1, #20]
 8013c08:	1b13      	subs	r3, r2, r4
 8013c0a:	ee07 3a10 	vmov	s14, r3
 8013c0e:	680b      	ldr	r3, [r1, #0]
 8013c10:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c14:	1b1b      	subs	r3, r3, r4
 8013c16:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013c1a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013c1e:	ee07 3a10 	vmov	s14, r3
 8013c22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c26:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013c2a:	eee6 4a87 	vfma.f32	s9, s13, s14
 8013c2e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8013c32:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013c36:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013c38:	698b      	ldr	r3, [r1, #24]
 8013c3a:	1a9b      	subs	r3, r3, r2
 8013c3c:	ee06 3a90 	vmov	s13, r3
 8013c40:	684b      	ldr	r3, [r1, #4]
 8013c42:	1a9b      	subs	r3, r3, r2
 8013c44:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013c48:	ee07 3a10 	vmov	s14, r3
 8013c4c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013c50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c54:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013c58:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013c5c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013c60:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013c64:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013c68:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013c6a:	694a      	ldr	r2, [r1, #20]
 8013c6c:	1b13      	subs	r3, r2, r4
 8013c6e:	ee07 3a10 	vmov	s14, r3
 8013c72:	680b      	ldr	r3, [r1, #0]
 8013c74:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c78:	1b1b      	subs	r3, r3, r4
 8013c7a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013c7e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8013c82:	ee07 3a10 	vmov	s14, r3
 8013c86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c8a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013c8e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8013c92:	edd0 5a08 	vldr	s11, [r0, #32]
 8013c96:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013c9a:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013c9e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013ca2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8013ca6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013ca8:	698b      	ldr	r3, [r1, #24]
 8013caa:	1a9b      	subs	r3, r3, r2
 8013cac:	ee07 3a10 	vmov	s14, r3
 8013cb0:	684b      	ldr	r3, [r1, #4]
 8013cb2:	1a9b      	subs	r3, r3, r2
 8013cb4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013cb8:	ee01 3a90 	vmov	s3, r3
 8013cbc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013cc0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013cc4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013cc8:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013ccc:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013cd0:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013cd4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013cd8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013cda:	694a      	ldr	r2, [r1, #20]
 8013cdc:	1b13      	subs	r3, r2, r4
 8013cde:	ee03 3a10 	vmov	s6, r3
 8013ce2:	680b      	ldr	r3, [r1, #0]
 8013ce4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013ce8:	1b1b      	subs	r3, r3, r4
 8013cea:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013cee:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8013cf2:	ee03 3a10 	vmov	s6, r3
 8013cf6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013cfa:	ee23 4a04 	vmul.f32	s8, s6, s8
 8013cfe:	eee1 5a04 	vfma.f32	s11, s2, s8
 8013d02:	ee25 6a86 	vmul.f32	s12, s11, s12
 8013d06:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8013d0a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8013d0e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8013d12:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8013d16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d1a:	dd13      	ble.n	8013d44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013d1c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013d20:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013d24:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013d26:	eee3 7a87 	vfma.f32	s15, s7, s14
 8013d2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013d2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d32:	dd15      	ble.n	8013d60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013d34:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013d38:	6403      	str	r3, [r0, #64]	; 0x40
 8013d3a:	bd70      	pop	{r4, r5, r6, pc}
 8013d3c:	4623      	mov	r3, r4
 8013d3e:	e6fd      	b.n	8013b3c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013d40:	462a      	mov	r2, r5
 8013d42:	e706      	b.n	8013b52 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013d44:	d502      	bpl.n	8013d4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013d46:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013d4a:	e7e9      	b.n	8013d20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013d4c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8013d50:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013d54:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013d58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d5c:	dade      	bge.n	8013d1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8013d5e:	e7f2      	b.n	8013d46 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8013d60:	d502      	bpl.n	8013d68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8013d62:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013d66:	e7e7      	b.n	8013d38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013d68:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013d6c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8013d70:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013d74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013d78:	dadc      	bge.n	8013d34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013d7a:	e7f2      	b.n	8013d62 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013d7c:	3d800000 	.word	0x3d800000

08013d80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8013d80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013d84:	2714      	movs	r7, #20
 8013d86:	435f      	muls	r7, r3
 8013d88:	eb02 0c07 	add.w	ip, r2, r7
 8013d8c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8013d90:	f115 0e0f 	adds.w	lr, r5, #15
 8013d94:	f100 80a2 	bmi.w	8013edc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013d98:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013d9c:	9c08      	ldr	r4, [sp, #32]
 8013d9e:	2614      	movs	r6, #20
 8013da0:	f8c0 e014 	str.w	lr, [r0, #20]
 8013da4:	4366      	muls	r6, r4
 8013da6:	eb02 0806 	add.w	r8, r2, r6
 8013daa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013dae:	f115 040f 	adds.w	r4, r5, #15
 8013db2:	f100 809f 	bmi.w	8013ef4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013db6:	1124      	asrs	r4, r4, #4
 8013db8:	eba4 040e 	sub.w	r4, r4, lr
 8013dbc:	6184      	str	r4, [r0, #24]
 8013dbe:	2c00      	cmp	r4, #0
 8013dc0:	f000 808a 	beq.w	8013ed8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013dc4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013dc8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013dcc:	5995      	ldr	r5, [r2, r6]
 8013dce:	eba4 0809 	sub.w	r8, r4, r9
 8013dd2:	59d4      	ldr	r4, [r2, r7]
 8013dd4:	eba5 0a04 	sub.w	sl, r5, r4
 8013dd8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013ddc:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013de0:	fb0e fe05 	mul.w	lr, lr, r5
 8013de4:	fb0a ee19 	mls	lr, sl, r9, lr
 8013de8:	fb08 e404 	mla	r4, r8, r4, lr
 8013dec:	3c01      	subs	r4, #1
 8013dee:	19a4      	adds	r4, r4, r6
 8013df0:	f100 808c 	bmi.w	8013f0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8013df4:	fb94 fef6 	sdiv	lr, r4, r6
 8013df8:	fb06 441e 	mls	r4, r6, lr, r4
 8013dfc:	f8c0 e000 	str.w	lr, [r0]
 8013e00:	6104      	str	r4, [r0, #16]
 8013e02:	2d00      	cmp	r5, #0
 8013e04:	f2c0 8095 	blt.w	8013f32 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8013e08:	fb95 f4f6 	sdiv	r4, r5, r6
 8013e0c:	fb06 5514 	mls	r5, r6, r4, r5
 8013e10:	6044      	str	r4, [r0, #4]
 8013e12:	6085      	str	r5, [r0, #8]
 8013e14:	60c6      	str	r6, [r0, #12]
 8013e16:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013e1a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8013e1e:	6945      	ldr	r5, [r0, #20]
 8013e20:	59d2      	ldr	r2, [r2, r7]
 8013e22:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8013e26:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8013f54 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8013e2a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013e2e:	ee07 4a10 	vmov	s14, r4
 8013e32:	6804      	ldr	r4, [r0, #0]
 8013e34:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013e38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013e3c:	ee07 2a90 	vmov	s15, r2
 8013e40:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013e44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e48:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013e4c:	edd3 6a00 	vldr	s13, [r3]
 8013e50:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013e54:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013e58:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013e5c:	edc0 6a07 	vstr	s13, [r0, #28]
 8013e60:	edd0 6a01 	vldr	s13, [r0, #4]
 8013e64:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013e68:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013e6c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013e70:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013e74:	ed80 6a08 	vstr	s12, [r0, #32]
 8013e78:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013e7a:	6242      	str	r2, [r0, #36]	; 0x24
 8013e7c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8013e80:	ed93 6a03 	vldr	s12, [r3, #12]
 8013e84:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013e88:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013e8c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8013e90:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013e94:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013e98:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013e9c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013ea0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013ea4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013ea6:	6302      	str	r2, [r0, #48]	; 0x30
 8013ea8:	ed93 6a06 	vldr	s12, [r3, #24]
 8013eac:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8013eb0:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013eb4:	eeb0 7a46 	vmov.f32	s14, s12
 8013eb8:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013ebc:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013ec0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013ec4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013ec8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013ecc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013ed0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8013ed4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8013ed6:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013ed8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013edc:	2410      	movs	r4, #16
 8013ede:	f1c5 0501 	rsb	r5, r5, #1
 8013ee2:	fb9e fef4 	sdiv	lr, lr, r4
 8013ee6:	f015 050f 	ands.w	r5, r5, #15
 8013eea:	bf18      	it	ne
 8013eec:	2501      	movne	r5, #1
 8013eee:	ebae 0e05 	sub.w	lr, lr, r5
 8013ef2:	e753      	b.n	8013d9c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013ef4:	f04f 0910 	mov.w	r9, #16
 8013ef8:	f1c5 0501 	rsb	r5, r5, #1
 8013efc:	fb94 f4f9 	sdiv	r4, r4, r9
 8013f00:	f015 050f 	ands.w	r5, r5, #15
 8013f04:	bf18      	it	ne
 8013f06:	2501      	movne	r5, #1
 8013f08:	1b64      	subs	r4, r4, r5
 8013f0a:	e755      	b.n	8013db8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013f0c:	4264      	negs	r4, r4
 8013f0e:	fb94 fef6 	sdiv	lr, r4, r6
 8013f12:	f1ce 0800 	rsb	r8, lr, #0
 8013f16:	fb06 441e 	mls	r4, r6, lr, r4
 8013f1a:	f8c0 8000 	str.w	r8, [r0]
 8013f1e:	6104      	str	r4, [r0, #16]
 8013f20:	2c00      	cmp	r4, #0
 8013f22:	f43f af6e 	beq.w	8013e02 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8013f26:	ea6f 0e0e 	mvn.w	lr, lr
 8013f2a:	1b34      	subs	r4, r6, r4
 8013f2c:	f8c0 e000 	str.w	lr, [r0]
 8013f30:	e766      	b.n	8013e00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8013f32:	426d      	negs	r5, r5
 8013f34:	fb95 f4f6 	sdiv	r4, r5, r6
 8013f38:	f1c4 0e00 	rsb	lr, r4, #0
 8013f3c:	fb06 5514 	mls	r5, r6, r4, r5
 8013f40:	f8c0 e004 	str.w	lr, [r0, #4]
 8013f44:	6085      	str	r5, [r0, #8]
 8013f46:	2d00      	cmp	r5, #0
 8013f48:	f43f af64 	beq.w	8013e14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013f4c:	43e4      	mvns	r4, r4
 8013f4e:	1b75      	subs	r5, r6, r5
 8013f50:	6044      	str	r4, [r0, #4]
 8013f52:	e75e      	b.n	8013e12 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013f54:	3d800000 	.word	0x3d800000

08013f58 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013f58:	4b01      	ldr	r3, [pc, #4]	; (8013f60 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8013f5a:	6018      	str	r0, [r3, #0]
 8013f5c:	4770      	bx	lr
 8013f5e:	bf00      	nop
 8013f60:	24001edc 	.word	0x24001edc

08013f64 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013f64:	4b06      	ldr	r3, [pc, #24]	; (8013f80 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8013f66:	881a      	ldrh	r2, [r3, #0]
 8013f68:	4282      	cmp	r2, r0
 8013f6a:	d807      	bhi.n	8013f7c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8013f6c:	4b05      	ldr	r3, [pc, #20]	; (8013f84 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8013f6e:	881b      	ldrh	r3, [r3, #0]
 8013f70:	4413      	add	r3, r2
 8013f72:	4298      	cmp	r0, r3
 8013f74:	bfac      	ite	ge
 8013f76:	2000      	movge	r0, #0
 8013f78:	2001      	movlt	r0, #1
 8013f7a:	4770      	bx	lr
 8013f7c:	2000      	movs	r0, #0
 8013f7e:	4770      	bx	lr
 8013f80:	24001efc 	.word	0x24001efc
 8013f84:	24001f00 	.word	0x24001f00

08013f88 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013f88:	b508      	push	{r3, lr}
 8013f8a:	4601      	mov	r1, r0
 8013f8c:	f7ff ffea 	bl	8013f64 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013f90:	b118      	cbz	r0, 8013f9a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013f92:	4b02      	ldr	r3, [pc, #8]	; (8013f9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013f94:	681b      	ldr	r3, [r3, #0]
 8013f96:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8013f9a:	bd08      	pop	{r3, pc}
 8013f9c:	24001ee0 	.word	0x24001ee0

08013fa0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013fa2:	4c24      	ldr	r4, [pc, #144]	; (8014034 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013fa4:	6823      	ldr	r3, [r4, #0]
 8013fa6:	2b00      	cmp	r3, #0
 8013fa8:	d042      	beq.n	8014030 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013faa:	4a23      	ldr	r2, [pc, #140]	; (8014038 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8013fac:	4d23      	ldr	r5, [pc, #140]	; (801403c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8013fae:	8811      	ldrh	r1, [r2, #0]
 8013fb0:	f8b5 c000 	ldrh.w	ip, [r5]
 8013fb4:	4822      	ldr	r0, [pc, #136]	; (8014040 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8013fb6:	4461      	add	r1, ip
 8013fb8:	1c4a      	adds	r2, r1, #1
 8013fba:	008f      	lsls	r7, r1, #2
 8013fbc:	f022 0201 	bic.w	r2, r2, #1
 8013fc0:	19de      	adds	r6, r3, r7
 8013fc2:	0412      	lsls	r2, r2, #16
 8013fc4:	6006      	str	r6, [r0, #0]
 8013fc6:	4e1f      	ldr	r6, [pc, #124]	; (8014044 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8013fc8:	0c12      	lsrs	r2, r2, #16
 8013fca:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8013fce:	19da      	adds	r2, r3, r7
 8013fd0:	6032      	str	r2, [r6, #0]
 8013fd2:	220e      	movs	r2, #14
 8013fd4:	fb02 f20c 	mul.w	r2, r2, ip
 8013fd8:	3203      	adds	r2, #3
 8013fda:	f022 0203 	bic.w	r2, r2, #3
 8013fde:	443a      	add	r2, r7
 8013fe0:	4f19      	ldr	r7, [pc, #100]	; (8014048 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8013fe2:	4413      	add	r3, r2
 8013fe4:	603b      	str	r3, [r7, #0]
 8013fe6:	2300      	movs	r3, #0
 8013fe8:	4f18      	ldr	r7, [pc, #96]	; (801404c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8013fea:	469c      	mov	ip, r3
 8013fec:	803b      	strh	r3, [r7, #0]
 8013fee:	4f18      	ldr	r7, [pc, #96]	; (8014050 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013ff0:	683f      	ldr	r7, [r7, #0]
 8013ff2:	1aba      	subs	r2, r7, r2
 8013ff4:	4f17      	ldr	r7, [pc, #92]	; (8014054 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8013ff6:	603a      	str	r2, [r7, #0]
 8013ff8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8013ffc:	4a16      	ldr	r2, [pc, #88]	; (8014058 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8013ffe:	8013      	strh	r3, [r2, #0]
 8014000:	428b      	cmp	r3, r1
 8014002:	d10d      	bne.n	8014020 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014004:	882d      	ldrh	r5, [r5, #0]
 8014006:	2300      	movs	r3, #0
 8014008:	6830      	ldr	r0, [r6, #0]
 801400a:	240e      	movs	r4, #14
 801400c:	429d      	cmp	r5, r3
 801400e:	d90f      	bls.n	8014030 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014010:	fb04 0203 	mla	r2, r4, r3, r0
 8014014:	3301      	adds	r3, #1
 8014016:	7b11      	ldrb	r1, [r2, #12]
 8014018:	f36f 1145 	bfc	r1, #5, #1
 801401c:	7311      	strb	r1, [r2, #12]
 801401e:	e7f5      	b.n	801400c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014020:	6822      	ldr	r2, [r4, #0]
 8014022:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014026:	6802      	ldr	r2, [r0, #0]
 8014028:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801402c:	3301      	adds	r3, #1
 801402e:	e7e7      	b.n	8014000 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014030:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014032:	bf00      	nop
 8014034:	24001ee0 	.word	0x24001ee0
 8014038:	24001efc 	.word	0x24001efc
 801403c:	24001f00 	.word	0x24001f00
 8014040:	24001ef4 	.word	0x24001ef4
 8014044:	24001ee4 	.word	0x24001ee4
 8014048:	24001eec 	.word	0x24001eec
 801404c:	24001efe 	.word	0x24001efe
 8014050:	24001ee8 	.word	0x24001ee8
 8014054:	24001ef8 	.word	0x24001ef8
 8014058:	24001ef0 	.word	0x24001ef0

0801405c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801405c:	4b06      	ldr	r3, [pc, #24]	; (8014078 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801405e:	681b      	ldr	r3, [r3, #0]
 8014060:	b943      	cbnz	r3, 8014074 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014062:	b139      	cbz	r1, 8014074 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014064:	4b05      	ldr	r3, [pc, #20]	; (801407c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014066:	801a      	strh	r2, [r3, #0]
 8014068:	4b05      	ldr	r3, [pc, #20]	; (8014080 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801406a:	6019      	str	r1, [r3, #0]
 801406c:	4b05      	ldr	r3, [pc, #20]	; (8014084 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801406e:	6018      	str	r0, [r3, #0]
 8014070:	f7ff bf96 	b.w	8013fa0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014074:	4770      	bx	lr
 8014076:	bf00      	nop
 8014078:	24001eec 	.word	0x24001eec
 801407c:	24001f00 	.word	0x24001f00
 8014080:	24001ee8 	.word	0x24001ee8
 8014084:	24001ee0 	.word	0x24001ee0

08014088 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014088:	b470      	push	{r4, r5, r6}
 801408a:	4c07      	ldr	r4, [pc, #28]	; (80140a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801408c:	4605      	mov	r5, r0
 801408e:	4610      	mov	r0, r2
 8014090:	9a03      	ldr	r2, [sp, #12]
 8014092:	6826      	ldr	r6, [r4, #0]
 8014094:	b936      	cbnz	r6, 80140a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014096:	6025      	str	r5, [r4, #0]
 8014098:	4c04      	ldr	r4, [pc, #16]	; (80140ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801409a:	8021      	strh	r1, [r4, #0]
 801409c:	4619      	mov	r1, r3
 801409e:	bc70      	pop	{r4, r5, r6}
 80140a0:	f7ff bfdc 	b.w	801405c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80140a4:	bc70      	pop	{r4, r5, r6}
 80140a6:	4770      	bx	lr
 80140a8:	24001f04 	.word	0x24001f04
 80140ac:	24001efc 	.word	0x24001efc

080140b0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80140b0:	4a12      	ldr	r2, [pc, #72]	; (80140fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80140b2:	8803      	ldrh	r3, [r0, #0]
 80140b4:	8812      	ldrh	r2, [r2, #0]
 80140b6:	4293      	cmp	r3, r2
 80140b8:	d207      	bcs.n	80140ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80140ba:	4a11      	ldr	r2, [pc, #68]	; (8014100 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80140bc:	2114      	movs	r1, #20
 80140be:	6812      	ldr	r2, [r2, #0]
 80140c0:	fb01 2303 	mla	r3, r1, r3, r2
 80140c4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80140c8:	4770      	bx	lr
 80140ca:	490e      	ldr	r1, [pc, #56]	; (8014104 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80140cc:	8809      	ldrh	r1, [r1, #0]
 80140ce:	4411      	add	r1, r2
 80140d0:	428b      	cmp	r3, r1
 80140d2:	da04      	bge.n	80140de <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80140d4:	1a9b      	subs	r3, r3, r2
 80140d6:	4a0c      	ldr	r2, [pc, #48]	; (8014108 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80140d8:	210e      	movs	r1, #14
 80140da:	6812      	ldr	r2, [r2, #0]
 80140dc:	e7f0      	b.n	80140c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80140de:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80140e2:	4293      	cmp	r3, r2
 80140e4:	d108      	bne.n	80140f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80140e6:	4b09      	ldr	r3, [pc, #36]	; (801410c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80140e8:	781b      	ldrb	r3, [r3, #0]
 80140ea:	b91b      	cbnz	r3, 80140f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80140ec:	4b08      	ldr	r3, [pc, #32]	; (8014110 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80140ee:	f9b3 0000 	ldrsh.w	r0, [r3]
 80140f2:	4770      	bx	lr
 80140f4:	4b07      	ldr	r3, [pc, #28]	; (8014114 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80140f6:	e7fa      	b.n	80140ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80140f8:	2000      	movs	r0, #0
 80140fa:	4770      	bx	lr
 80140fc:	24001efc 	.word	0x24001efc
 8014100:	24001f04 	.word	0x24001f04
 8014104:	24001f00 	.word	0x24001f00
 8014108:	24001ee4 	.word	0x24001ee4
 801410c:	24001e74 	.word	0x24001e74
 8014110:	24001e76 	.word	0x24001e76
 8014114:	24001e78 	.word	0x24001e78

08014118 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014118:	4a12      	ldr	r2, [pc, #72]	; (8014164 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801411a:	8803      	ldrh	r3, [r0, #0]
 801411c:	8812      	ldrh	r2, [r2, #0]
 801411e:	4293      	cmp	r3, r2
 8014120:	d207      	bcs.n	8014132 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014122:	4a11      	ldr	r2, [pc, #68]	; (8014168 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014124:	2114      	movs	r1, #20
 8014126:	6812      	ldr	r2, [r2, #0]
 8014128:	fb01 2303 	mla	r3, r1, r3, r2
 801412c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014130:	4770      	bx	lr
 8014132:	490e      	ldr	r1, [pc, #56]	; (801416c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014134:	8809      	ldrh	r1, [r1, #0]
 8014136:	4411      	add	r1, r2
 8014138:	428b      	cmp	r3, r1
 801413a:	da04      	bge.n	8014146 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801413c:	1a9b      	subs	r3, r3, r2
 801413e:	4a0c      	ldr	r2, [pc, #48]	; (8014170 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014140:	210e      	movs	r1, #14
 8014142:	6812      	ldr	r2, [r2, #0]
 8014144:	e7f0      	b.n	8014128 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014146:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801414a:	4293      	cmp	r3, r2
 801414c:	d108      	bne.n	8014160 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801414e:	4b09      	ldr	r3, [pc, #36]	; (8014174 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8014150:	781b      	ldrb	r3, [r3, #0]
 8014152:	b91b      	cbnz	r3, 801415c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014154:	4b08      	ldr	r3, [pc, #32]	; (8014178 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014156:	f9b3 0000 	ldrsh.w	r0, [r3]
 801415a:	4770      	bx	lr
 801415c:	4b07      	ldr	r3, [pc, #28]	; (801417c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801415e:	e7fa      	b.n	8014156 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8014160:	2000      	movs	r0, #0
 8014162:	4770      	bx	lr
 8014164:	24001efc 	.word	0x24001efc
 8014168:	24001f04 	.word	0x24001f04
 801416c:	24001f00 	.word	0x24001f00
 8014170:	24001ee4 	.word	0x24001ee4
 8014174:	24001e74 	.word	0x24001e74
 8014178:	24001e78 	.word	0x24001e78
 801417c:	24001e76 	.word	0x24001e76

08014180 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8014180:	4a1f      	ldr	r2, [pc, #124]	; (8014200 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8014182:	b510      	push	{r4, lr}
 8014184:	880b      	ldrh	r3, [r1, #0]
 8014186:	8812      	ldrh	r2, [r2, #0]
 8014188:	4293      	cmp	r3, r2
 801418a:	d213      	bcs.n	80141b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801418c:	4a1d      	ldr	r2, [pc, #116]	; (8014204 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801418e:	2114      	movs	r1, #20
 8014190:	6812      	ldr	r2, [r2, #0]
 8014192:	fb01 2303 	mla	r3, r1, r3, r2
 8014196:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801419a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801419e:	8a1a      	ldrh	r2, [r3, #16]
 80141a0:	8a5b      	ldrh	r3, [r3, #18]
 80141a2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80141a6:	8004      	strh	r4, [r0, #0]
 80141a8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80141ac:	8041      	strh	r1, [r0, #2]
 80141ae:	8082      	strh	r2, [r0, #4]
 80141b0:	80c3      	strh	r3, [r0, #6]
 80141b2:	e00e      	b.n	80141d2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80141b4:	4914      	ldr	r1, [pc, #80]	; (8014208 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80141b6:	8809      	ldrh	r1, [r1, #0]
 80141b8:	4411      	add	r1, r2
 80141ba:	428b      	cmp	r3, r1
 80141bc:	da0a      	bge.n	80141d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80141be:	1a9b      	subs	r3, r3, r2
 80141c0:	4a12      	ldr	r2, [pc, #72]	; (801420c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80141c2:	210e      	movs	r1, #14
 80141c4:	6812      	ldr	r2, [r2, #0]
 80141c6:	fb01 2303 	mla	r3, r1, r3, r2
 80141ca:	681a      	ldr	r2, [r3, #0]
 80141cc:	6002      	str	r2, [r0, #0]
 80141ce:	685a      	ldr	r2, [r3, #4]
 80141d0:	6042      	str	r2, [r0, #4]
 80141d2:	bd10      	pop	{r4, pc}
 80141d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80141d8:	4293      	cmp	r3, r2
 80141da:	d10b      	bne.n	80141f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80141dc:	4b0c      	ldr	r3, [pc, #48]	; (8014210 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80141de:	f9b3 1000 	ldrsh.w	r1, [r3]
 80141e2:	4b0c      	ldr	r3, [pc, #48]	; (8014214 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80141e4:	8081      	strh	r1, [r0, #4]
 80141e6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80141ea:	2300      	movs	r3, #0
 80141ec:	80c2      	strh	r2, [r0, #6]
 80141ee:	8003      	strh	r3, [r0, #0]
 80141f0:	8043      	strh	r3, [r0, #2]
 80141f2:	e7ee      	b.n	80141d2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80141f4:	2300      	movs	r3, #0
 80141f6:	8003      	strh	r3, [r0, #0]
 80141f8:	8043      	strh	r3, [r0, #2]
 80141fa:	8083      	strh	r3, [r0, #4]
 80141fc:	e7d8      	b.n	80141b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80141fe:	bf00      	nop
 8014200:	24001efc 	.word	0x24001efc
 8014204:	24001f04 	.word	0x24001f04
 8014208:	24001f00 	.word	0x24001f00
 801420c:	24001ee4 	.word	0x24001ee4
 8014210:	24001e70 	.word	0x24001e70
 8014214:	24001e72 	.word	0x24001e72

08014218 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014218:	4a17      	ldr	r2, [pc, #92]	; (8014278 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801421a:	8803      	ldrh	r3, [r0, #0]
 801421c:	8812      	ldrh	r2, [r2, #0]
 801421e:	4293      	cmp	r3, r2
 8014220:	d213      	bcs.n	801424a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014222:	4a16      	ldr	r2, [pc, #88]	; (801427c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014224:	2114      	movs	r1, #20
 8014226:	6812      	ldr	r2, [r2, #0]
 8014228:	fb01 2303 	mla	r3, r1, r3, r2
 801422c:	8a1a      	ldrh	r2, [r3, #16]
 801422e:	8919      	ldrh	r1, [r3, #8]
 8014230:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014234:	428a      	cmp	r2, r1
 8014236:	db1d      	blt.n	8014274 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014238:	8a58      	ldrh	r0, [r3, #18]
 801423a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801423e:	895b      	ldrh	r3, [r3, #10]
 8014240:	4298      	cmp	r0, r3
 8014242:	bfac      	ite	ge
 8014244:	2000      	movge	r0, #0
 8014246:	2001      	movlt	r0, #1
 8014248:	4770      	bx	lr
 801424a:	490d      	ldr	r1, [pc, #52]	; (8014280 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801424c:	8809      	ldrh	r1, [r1, #0]
 801424e:	4411      	add	r1, r2
 8014250:	428b      	cmp	r3, r1
 8014252:	da0d      	bge.n	8014270 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014254:	1a9b      	subs	r3, r3, r2
 8014256:	4a0b      	ldr	r2, [pc, #44]	; (8014284 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014258:	210e      	movs	r1, #14
 801425a:	6812      	ldr	r2, [r2, #0]
 801425c:	fb01 2303 	mla	r3, r1, r3, r2
 8014260:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014264:	891a      	ldrh	r2, [r3, #8]
 8014266:	4291      	cmp	r1, r2
 8014268:	db04      	blt.n	8014274 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801426a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801426e:	e7e6      	b.n	801423e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8014270:	2000      	movs	r0, #0
 8014272:	4770      	bx	lr
 8014274:	2001      	movs	r0, #1
 8014276:	4770      	bx	lr
 8014278:	24001efc 	.word	0x24001efc
 801427c:	24001f04 	.word	0x24001f04
 8014280:	24001f00 	.word	0x24001f00
 8014284:	24001ee4 	.word	0x24001ee4

08014288 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014288:	4a12      	ldr	r2, [pc, #72]	; (80142d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801428a:	8803      	ldrh	r3, [r0, #0]
 801428c:	8811      	ldrh	r1, [r2, #0]
 801428e:	428b      	cmp	r3, r1
 8014290:	d20b      	bcs.n	80142aa <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8014292:	4a11      	ldr	r2, [pc, #68]	; (80142d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014294:	6812      	ldr	r2, [r2, #0]
 8014296:	b112      	cbz	r2, 801429e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014298:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801429c:	b9c0      	cbnz	r0, 80142d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801429e:	4a0f      	ldr	r2, [pc, #60]	; (80142dc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80142a0:	6811      	ldr	r1, [r2, #0]
 80142a2:	2214      	movs	r2, #20
 80142a4:	4353      	muls	r3, r2
 80142a6:	58c8      	ldr	r0, [r1, r3]
 80142a8:	4770      	bx	lr
 80142aa:	4a0d      	ldr	r2, [pc, #52]	; (80142e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80142ac:	8812      	ldrh	r2, [r2, #0]
 80142ae:	440a      	add	r2, r1
 80142b0:	4293      	cmp	r3, r2
 80142b2:	da04      	bge.n	80142be <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80142b4:	4a08      	ldr	r2, [pc, #32]	; (80142d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80142b6:	6812      	ldr	r2, [r2, #0]
 80142b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80142bc:	4770      	bx	lr
 80142be:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80142c2:	4293      	cmp	r3, r2
 80142c4:	d103      	bne.n	80142ce <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80142c6:	4b07      	ldr	r3, [pc, #28]	; (80142e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80142c8:	681b      	ldr	r3, [r3, #0]
 80142ca:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80142cc:	4770      	bx	lr
 80142ce:	2000      	movs	r0, #0
 80142d0:	4770      	bx	lr
 80142d2:	bf00      	nop
 80142d4:	24001efc 	.word	0x24001efc
 80142d8:	24001ee0 	.word	0x24001ee0
 80142dc:	24001f04 	.word	0x24001f04
 80142e0:	24001f00 	.word	0x24001f00
 80142e4:	24001e7c 	.word	0x24001e7c

080142e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80142e8:	4b24      	ldr	r3, [pc, #144]	; (801437c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80142ea:	8802      	ldrh	r2, [r0, #0]
 80142ec:	8818      	ldrh	r0, [r3, #0]
 80142ee:	4282      	cmp	r2, r0
 80142f0:	d221      	bcs.n	8014336 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80142f2:	4b23      	ldr	r3, [pc, #140]	; (8014380 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80142f4:	6819      	ldr	r1, [r3, #0]
 80142f6:	2314      	movs	r3, #20
 80142f8:	fb03 1302 	mla	r3, r3, r2, r1
 80142fc:	6858      	ldr	r0, [r3, #4]
 80142fe:	2800      	cmp	r0, #0
 8014300:	d03a      	beq.n	8014378 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014302:	4920      	ldr	r1, [pc, #128]	; (8014384 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014304:	6809      	ldr	r1, [r1, #0]
 8014306:	2900      	cmp	r1, #0
 8014308:	d036      	beq.n	8014378 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801430a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801430e:	2900      	cmp	r1, #0
 8014310:	d032      	beq.n	8014378 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014312:	891a      	ldrh	r2, [r3, #8]
 8014314:	8958      	ldrh	r0, [r3, #10]
 8014316:	4350      	muls	r0, r2
 8014318:	7c5a      	ldrb	r2, [r3, #17]
 801431a:	7cdb      	ldrb	r3, [r3, #19]
 801431c:	0952      	lsrs	r2, r2, #5
 801431e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014322:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014326:	2b0b      	cmp	r3, #11
 8014328:	bf18      	it	ne
 801432a:	0040      	lslne	r0, r0, #1
 801432c:	3003      	adds	r0, #3
 801432e:	f020 0003 	bic.w	r0, r0, #3
 8014332:	4408      	add	r0, r1
 8014334:	4770      	bx	lr
 8014336:	4b14      	ldr	r3, [pc, #80]	; (8014388 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014338:	881b      	ldrh	r3, [r3, #0]
 801433a:	4403      	add	r3, r0
 801433c:	429a      	cmp	r2, r3
 801433e:	da1a      	bge.n	8014376 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014340:	4b12      	ldr	r3, [pc, #72]	; (801438c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014342:	1a10      	subs	r0, r2, r0
 8014344:	210e      	movs	r1, #14
 8014346:	681b      	ldr	r3, [r3, #0]
 8014348:	fb01 3000 	mla	r0, r1, r0, r3
 801434c:	7b03      	ldrb	r3, [r0, #12]
 801434e:	f003 031f 	and.w	r3, r3, #31
 8014352:	2b0b      	cmp	r3, #11
 8014354:	d10b      	bne.n	801436e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014356:	8903      	ldrh	r3, [r0, #8]
 8014358:	8940      	ldrh	r0, [r0, #10]
 801435a:	4358      	muls	r0, r3
 801435c:	4b09      	ldr	r3, [pc, #36]	; (8014384 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801435e:	3003      	adds	r0, #3
 8014360:	6819      	ldr	r1, [r3, #0]
 8014362:	f020 0303 	bic.w	r3, r0, #3
 8014366:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801436a:	4418      	add	r0, r3
 801436c:	4770      	bx	lr
 801436e:	2b0d      	cmp	r3, #13
 8014370:	d101      	bne.n	8014376 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014372:	300d      	adds	r0, #13
 8014374:	4770      	bx	lr
 8014376:	2000      	movs	r0, #0
 8014378:	4770      	bx	lr
 801437a:	bf00      	nop
 801437c:	24001efc 	.word	0x24001efc
 8014380:	24001f04 	.word	0x24001f04
 8014384:	24001ee0 	.word	0x24001ee0
 8014388:	24001f00 	.word	0x24001f00
 801438c:	24001ee4 	.word	0x24001ee4

08014390 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8014390:	4a17      	ldr	r2, [pc, #92]	; (80143f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8014392:	b510      	push	{r4, lr}
 8014394:	8803      	ldrh	r3, [r0, #0]
 8014396:	8812      	ldrh	r2, [r2, #0]
 8014398:	4293      	cmp	r3, r2
 801439a:	d20c      	bcs.n	80143b6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801439c:	4a15      	ldr	r2, [pc, #84]	; (80143f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801439e:	2114      	movs	r1, #20
 80143a0:	6812      	ldr	r2, [r2, #0]
 80143a2:	fb01 2303 	mla	r3, r1, r3, r2
 80143a6:	7c58      	ldrb	r0, [r3, #17]
 80143a8:	0942      	lsrs	r2, r0, #5
 80143aa:	7cd8      	ldrb	r0, [r3, #19]
 80143ac:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80143b0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80143b4:	bd10      	pop	{r4, pc}
 80143b6:	4910      	ldr	r1, [pc, #64]	; (80143f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80143b8:	8809      	ldrh	r1, [r1, #0]
 80143ba:	4411      	add	r1, r2
 80143bc:	428b      	cmp	r3, r1
 80143be:	da09      	bge.n	80143d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80143c0:	1a9b      	subs	r3, r3, r2
 80143c2:	4a0e      	ldr	r2, [pc, #56]	; (80143fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80143c4:	210e      	movs	r1, #14
 80143c6:	6812      	ldr	r2, [r2, #0]
 80143c8:	fb01 2303 	mla	r3, r1, r3, r2
 80143cc:	7b18      	ldrb	r0, [r3, #12]
 80143ce:	f000 001f 	and.w	r0, r0, #31
 80143d2:	e7ef      	b.n	80143b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80143d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80143d8:	4293      	cmp	r3, r2
 80143da:	d106      	bne.n	80143ea <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80143dc:	f7f6 fb28 	bl	800aa30 <_ZN8touchgfx3HAL3lcdEv>
 80143e0:	6803      	ldr	r3, [r0, #0]
 80143e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80143e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80143e8:	4718      	bx	r3
 80143ea:	2000      	movs	r0, #0
 80143ec:	e7e2      	b.n	80143b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80143ee:	bf00      	nop
 80143f0:	24001efc 	.word	0x24001efc
 80143f4:	24001f04 	.word	0x24001f04
 80143f8:	24001f00 	.word	0x24001f00
 80143fc:	24001ee4 	.word	0x24001ee4

08014400 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014400:	2010      	movs	r0, #16
 8014402:	4770      	bx	lr

08014404 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014404:	2000      	movs	r0, #0
 8014406:	4770      	bx	lr

08014408 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014408:	4b02      	ldr	r3, [pc, #8]	; (8014414 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801440a:	8818      	ldrh	r0, [r3, #0]
 801440c:	0040      	lsls	r0, r0, #1
 801440e:	b280      	uxth	r0, r0
 8014410:	4770      	bx	lr
 8014412:	bf00      	nop
 8014414:	24001e76 	.word	0x24001e76

08014418 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014418:	2bff      	cmp	r3, #255	; 0xff
 801441a:	d050      	beq.n	80144be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801441c:	2a0b      	cmp	r2, #11
 801441e:	d04a      	beq.n	80144b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014420:	d80e      	bhi.n	8014440 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014422:	2a03      	cmp	r2, #3
 8014424:	d03f      	beq.n	80144a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014426:	d804      	bhi.n	8014432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014428:	2a01      	cmp	r2, #1
 801442a:	d03e      	beq.n	80144aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801442c:	d93f      	bls.n	80144ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801442e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014430:	4770      	bx	lr
 8014432:	2a09      	cmp	r2, #9
 8014434:	d03f      	beq.n	80144b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014436:	d83c      	bhi.n	80144b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014438:	2a08      	cmp	r2, #8
 801443a:	d03a      	beq.n	80144b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801443c:	2000      	movs	r0, #0
 801443e:	4770      	bx	lr
 8014440:	2a2f      	cmp	r2, #47	; 0x2f
 8014442:	d024      	beq.n	801448e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014444:	d80d      	bhi.n	8014462 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014446:	2a2d      	cmp	r2, #45	; 0x2d
 8014448:	d014      	beq.n	8014474 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801444a:	d826      	bhi.n	801449a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801444c:	2a2c      	cmp	r2, #44	; 0x2c
 801444e:	d1f5      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014450:	684b      	ldr	r3, [r1, #4]
 8014452:	781b      	ldrb	r3, [r3, #0]
 8014454:	2b01      	cmp	r3, #1
 8014456:	d018      	beq.n	801448a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014458:	d323      	bcc.n	80144a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801445a:	2b02      	cmp	r3, #2
 801445c:	d1ee      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801445e:	6880      	ldr	r0, [r0, #8]
 8014460:	4770      	bx	lr
 8014462:	2a31      	cmp	r2, #49	; 0x31
 8014464:	d004      	beq.n	8014470 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014466:	d328      	bcc.n	80144ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014468:	2a32      	cmp	r2, #50	; 0x32
 801446a:	d026      	beq.n	80144ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801446c:	2a33      	cmp	r2, #51	; 0x33
 801446e:	d1e5      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014470:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8014472:	4770      	bx	lr
 8014474:	684b      	ldr	r3, [r1, #4]
 8014476:	781b      	ldrb	r3, [r3, #0]
 8014478:	2b01      	cmp	r3, #1
 801447a:	d004      	beq.n	8014486 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801447c:	d30b      	bcc.n	8014496 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801447e:	2b02      	cmp	r3, #2
 8014480:	d1dc      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014482:	6900      	ldr	r0, [r0, #16]
 8014484:	4770      	bx	lr
 8014486:	6a00      	ldr	r0, [r0, #32]
 8014488:	4770      	bx	lr
 801448a:	6980      	ldr	r0, [r0, #24]
 801448c:	4770      	bx	lr
 801448e:	684b      	ldr	r3, [r1, #4]
 8014490:	781b      	ldrb	r3, [r3, #0]
 8014492:	2b00      	cmp	r3, #0
 8014494:	d1d2      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014496:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014498:	4770      	bx	lr
 801449a:	684b      	ldr	r3, [r1, #4]
 801449c:	781b      	ldrb	r3, [r3, #0]
 801449e:	2b00      	cmp	r3, #0
 80144a0:	d1cc      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80144a2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80144a4:	4770      	bx	lr
 80144a6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80144a8:	4770      	bx	lr
 80144aa:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80144ac:	4770      	bx	lr
 80144ae:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80144b0:	4770      	bx	lr
 80144b2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80144b4:	4770      	bx	lr
 80144b6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80144b8:	4770      	bx	lr
 80144ba:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80144bc:	4770      	bx	lr
 80144be:	2a0b      	cmp	r2, #11
 80144c0:	d049      	beq.n	8014556 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80144c2:	d80e      	bhi.n	80144e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80144c4:	2a03      	cmp	r2, #3
 80144c6:	d040      	beq.n	801454a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80144c8:	d804      	bhi.n	80144d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80144ca:	2a01      	cmp	r2, #1
 80144cc:	d03f      	beq.n	801454e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80144ce:	d940      	bls.n	8014552 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80144d0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80144d2:	4770      	bx	lr
 80144d4:	2a09      	cmp	r2, #9
 80144d6:	d03e      	beq.n	8014556 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80144d8:	d801      	bhi.n	80144de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80144da:	2a08      	cmp	r2, #8
 80144dc:	d1ae      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80144de:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80144e0:	4770      	bx	lr
 80144e2:	2a2f      	cmp	r2, #47	; 0x2f
 80144e4:	d024      	beq.n	8014530 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80144e6:	d80d      	bhi.n	8014504 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80144e8:	2a2d      	cmp	r2, #45	; 0x2d
 80144ea:	d014      	beq.n	8014516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80144ec:	d826      	bhi.n	801453c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80144ee:	2a2c      	cmp	r2, #44	; 0x2c
 80144f0:	d1a4      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80144f2:	684b      	ldr	r3, [r1, #4]
 80144f4:	781b      	ldrb	r3, [r3, #0]
 80144f6:	2b01      	cmp	r3, #1
 80144f8:	d018      	beq.n	801452c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80144fa:	d324      	bcc.n	8014546 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80144fc:	2b02      	cmp	r3, #2
 80144fe:	d19d      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014500:	68c0      	ldr	r0, [r0, #12]
 8014502:	4770      	bx	lr
 8014504:	2a31      	cmp	r2, #49	; 0x31
 8014506:	d004      	beq.n	8014512 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014508:	d327      	bcc.n	801455a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801450a:	2a32      	cmp	r2, #50	; 0x32
 801450c:	d025      	beq.n	801455a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801450e:	2a33      	cmp	r2, #51	; 0x33
 8014510:	d194      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014512:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014514:	4770      	bx	lr
 8014516:	684b      	ldr	r3, [r1, #4]
 8014518:	781b      	ldrb	r3, [r3, #0]
 801451a:	2b01      	cmp	r3, #1
 801451c:	d004      	beq.n	8014528 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801451e:	d30b      	bcc.n	8014538 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014520:	2b02      	cmp	r3, #2
 8014522:	d18b      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014524:	6940      	ldr	r0, [r0, #20]
 8014526:	4770      	bx	lr
 8014528:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801452a:	4770      	bx	lr
 801452c:	69c0      	ldr	r0, [r0, #28]
 801452e:	4770      	bx	lr
 8014530:	684b      	ldr	r3, [r1, #4]
 8014532:	781b      	ldrb	r3, [r3, #0]
 8014534:	2b00      	cmp	r3, #0
 8014536:	d181      	bne.n	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014538:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801453a:	4770      	bx	lr
 801453c:	684b      	ldr	r3, [r1, #4]
 801453e:	781b      	ldrb	r3, [r3, #0]
 8014540:	2b00      	cmp	r3, #0
 8014542:	f47f af7b 	bne.w	801443c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014546:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014548:	4770      	bx	lr
 801454a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801454c:	4770      	bx	lr
 801454e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014550:	4770      	bx	lr
 8014552:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014554:	4770      	bx	lr
 8014556:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014558:	4770      	bx	lr
 801455a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801455c:	4770      	bx	lr

0801455e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801455e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014562:	b087      	sub	sp, #28
 8014564:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014566:	9205      	str	r2, [sp, #20]
 8014568:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801456c:	9101      	str	r1, [sp, #4]
 801456e:	9202      	str	r2, [sp, #8]
 8014570:	6841      	ldr	r1, [r0, #4]
 8014572:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014576:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801457a:	fb01 2404 	mla	r4, r1, r4, r2
 801457e:	6802      	ldr	r2, [r0, #0]
 8014580:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014584:	f8de 2000 	ldr.w	r2, [lr]
 8014588:	9203      	str	r2, [sp, #12]
 801458a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801458e:	3204      	adds	r2, #4
 8014590:	9204      	str	r2, [sp, #16]
 8014592:	9a02      	ldr	r2, [sp, #8]
 8014594:	43d6      	mvns	r6, r2
 8014596:	b2f6      	uxtb	r6, r6
 8014598:	9a01      	ldr	r2, [sp, #4]
 801459a:	2a00      	cmp	r2, #0
 801459c:	dc03      	bgt.n	80145a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801459e:	9a05      	ldr	r2, [sp, #20]
 80145a0:	2a00      	cmp	r2, #0
 80145a2:	f340 8129 	ble.w	80147f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80145a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80145a8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80145ac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80145b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80145b2:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80145b6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80145ba:	2b00      	cmp	r3, #0
 80145bc:	dd0e      	ble.n	80145dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80145be:	1408      	asrs	r0, r1, #16
 80145c0:	d405      	bmi.n	80145ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80145c2:	4560      	cmp	r0, ip
 80145c4:	da03      	bge.n	80145ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80145c6:	1410      	asrs	r0, r2, #16
 80145c8:	d401      	bmi.n	80145ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80145ca:	42b8      	cmp	r0, r7
 80145cc:	db07      	blt.n	80145de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80145ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80145d0:	3b01      	subs	r3, #1
 80145d2:	3402      	adds	r4, #2
 80145d4:	4401      	add	r1, r0
 80145d6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80145d8:	4402      	add	r2, r0
 80145da:	e7ee      	b.n	80145ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80145dc:	d071      	beq.n	80146c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80145de:	1e58      	subs	r0, r3, #1
 80145e0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80145e2:	fb05 1500 	mla	r5, r5, r0, r1
 80145e6:	142d      	asrs	r5, r5, #16
 80145e8:	d45f      	bmi.n	80146aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80145ea:	4565      	cmp	r5, ip
 80145ec:	da5d      	bge.n	80146aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80145ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80145f0:	fb05 2000 	mla	r0, r5, r0, r2
 80145f4:	1400      	asrs	r0, r0, #16
 80145f6:	d458      	bmi.n	80146aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80145f8:	42b8      	cmp	r0, r7
 80145fa:	da56      	bge.n	80146aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80145fc:	4699      	mov	r9, r3
 80145fe:	46a2      	mov	sl, r4
 8014600:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014604:	f1b9 0f00 	cmp.w	r9, #0
 8014608:	dd57      	ble.n	80146ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801460a:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801460e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014612:	9803      	ldr	r0, [sp, #12]
 8014614:	140d      	asrs	r5, r1, #16
 8014616:	f109 39ff 	add.w	r9, r9, #4294967295
 801461a:	fb07 000c 	mla	r0, r7, ip, r0
 801461e:	5d40      	ldrb	r0, [r0, r5]
 8014620:	9d04      	ldr	r5, [sp, #16]
 8014622:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014626:	f8ba 5000 	ldrh.w	r5, [sl]
 801462a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801462e:	122f      	asrs	r7, r5, #8
 8014630:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014634:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014638:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801463c:	00ed      	lsls	r5, r5, #3
 801463e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014642:	fb17 f706 	smulbb	r7, r7, r6
 8014646:	b2ed      	uxtb	r5, r5
 8014648:	fb18 f806 	smulbb	r8, r8, r6
 801464c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014650:	10c7      	asrs	r7, r0, #3
 8014652:	fb15 f506 	smulbb	r5, r5, r6
 8014656:	00c0      	lsls	r0, r0, #3
 8014658:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801465c:	fa1f fc8c 	uxth.w	ip, ip
 8014660:	b2c0      	uxtb	r0, r0
 8014662:	fb07 870b 	mla	r7, r7, fp, r8
 8014666:	fb00 500b 	mla	r0, r0, fp, r5
 801466a:	f10c 0501 	add.w	r5, ip, #1
 801466e:	b2bf      	uxth	r7, r7
 8014670:	b280      	uxth	r0, r0
 8014672:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014676:	f107 0801 	add.w	r8, r7, #1
 801467a:	1c45      	adds	r5, r0, #1
 801467c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014680:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014684:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014688:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801468a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801468e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014692:	4401      	add	r1, r0
 8014694:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014698:	9814      	ldr	r0, [sp, #80]	; 0x50
 801469a:	ea45 0c0c 	orr.w	ip, r5, ip
 801469e:	4402      	add	r2, r0
 80146a0:	ea4c 0c08 	orr.w	ip, ip, r8
 80146a4:	f82a cb02 	strh.w	ip, [sl], #2
 80146a8:	e7ac      	b.n	8014604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80146aa:	f04f 0800 	mov.w	r8, #0
 80146ae:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80146b2:	eb03 0008 	add.w	r0, r3, r8
 80146b6:	2800      	cmp	r0, #0
 80146b8:	dc41      	bgt.n	801473e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80146ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80146be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80146c2:	9b01      	ldr	r3, [sp, #4]
 80146c4:	2b00      	cmp	r3, #0
 80146c6:	f340 8097 	ble.w	80147f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80146ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80146ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80146d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80146d8:	eef0 6a62 	vmov.f32	s13, s5
 80146dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80146e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80146e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146e8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80146ec:	eef0 6a43 	vmov.f32	s13, s6
 80146f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146f4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80146f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80146fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014700:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014704:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014708:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801470c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014710:	ee12 2a90 	vmov	r2, s5
 8014714:	eef0 2a47 	vmov.f32	s5, s14
 8014718:	fb92 f3f3 	sdiv	r3, r2, r3
 801471c:	ee13 2a10 	vmov	r2, s6
 8014720:	9313      	str	r3, [sp, #76]	; 0x4c
 8014722:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014724:	eeb0 3a67 	vmov.f32	s6, s15
 8014728:	fb92 f3f3 	sdiv	r3, r2, r3
 801472c:	9314      	str	r3, [sp, #80]	; 0x50
 801472e:	9b01      	ldr	r3, [sp, #4]
 8014730:	9a05      	ldr	r2, [sp, #20]
 8014732:	3b01      	subs	r3, #1
 8014734:	9301      	str	r3, [sp, #4]
 8014736:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014738:	bf08      	it	eq
 801473a:	4613      	moveq	r3, r2
 801473c:	e72c      	b.n	8014598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801473e:	140f      	asrs	r7, r1, #16
 8014740:	d453      	bmi.n	80147ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014742:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014746:	42bd      	cmp	r5, r7
 8014748:	dd4f      	ble.n	80147ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801474a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801474e:	d44c      	bmi.n	80147ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014750:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014754:	4560      	cmp	r0, ip
 8014756:	dd48      	ble.n	80147ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014758:	9803      	ldr	r0, [sp, #12]
 801475a:	b22d      	sxth	r5, r5
 801475c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014760:	5de8      	ldrb	r0, [r5, r7]
 8014762:	9d04      	ldr	r5, [sp, #16]
 8014764:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014768:	f06f 0501 	mvn.w	r5, #1
 801476c:	fb05 fb08 	mul.w	fp, r5, r8
 8014770:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014774:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014778:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801477c:	122f      	asrs	r7, r5, #8
 801477e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014782:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014786:	00ed      	lsls	r5, r5, #3
 8014788:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801478c:	fb17 f706 	smulbb	r7, r7, r6
 8014790:	b2ed      	uxtb	r5, r5
 8014792:	fb19 f906 	smulbb	r9, r9, r6
 8014796:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801479a:	10c7      	asrs	r7, r0, #3
 801479c:	fb15 f506 	smulbb	r5, r5, r6
 80147a0:	00c0      	lsls	r0, r0, #3
 80147a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80147a6:	fa1f fc8c 	uxth.w	ip, ip
 80147aa:	b2c0      	uxtb	r0, r0
 80147ac:	fb07 970a 	mla	r7, r7, sl, r9
 80147b0:	fb00 500a 	mla	r0, r0, sl, r5
 80147b4:	f10c 0501 	add.w	r5, ip, #1
 80147b8:	b2bf      	uxth	r7, r7
 80147ba:	b280      	uxth	r0, r0
 80147bc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80147c0:	f107 0901 	add.w	r9, r7, #1
 80147c4:	1c45      	adds	r5, r0, #1
 80147c6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80147ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80147ce:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80147d2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80147d6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80147da:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80147de:	ea45 0c0c 	orr.w	ip, r5, ip
 80147e2:	ea4c 0c09 	orr.w	ip, ip, r9
 80147e6:	f824 c00b 	strh.w	ip, [r4, fp]
 80147ea:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80147ec:	f108 38ff 	add.w	r8, r8, #4294967295
 80147f0:	4401      	add	r1, r0
 80147f2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80147f4:	4402      	add	r2, r0
 80147f6:	e75c      	b.n	80146b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80147f8:	b007      	add	sp, #28
 80147fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080147fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80147fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014802:	b085      	sub	sp, #20
 8014804:	4693      	mov	fp, r2
 8014806:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801480a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801480c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801480e:	6870      	ldr	r0, [r6, #4]
 8014810:	9100      	str	r1, [sp, #0]
 8014812:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014816:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801481a:	fb00 2404 	mla	r4, r0, r4, r2
 801481e:	6832      	ldr	r2, [r6, #0]
 8014820:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014824:	682a      	ldr	r2, [r5, #0]
 8014826:	9201      	str	r2, [sp, #4]
 8014828:	686a      	ldr	r2, [r5, #4]
 801482a:	3204      	adds	r2, #4
 801482c:	9202      	str	r2, [sp, #8]
 801482e:	9a00      	ldr	r2, [sp, #0]
 8014830:	2a00      	cmp	r2, #0
 8014832:	dc03      	bgt.n	801483c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014834:	f1bb 0f00 	cmp.w	fp, #0
 8014838:	f340 80a0 	ble.w	801497c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801483c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801483e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014842:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014846:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014848:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801484c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014850:	2b00      	cmp	r3, #0
 8014852:	dd0c      	ble.n	801486e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014854:	1406      	asrs	r6, r0, #16
 8014856:	d405      	bmi.n	8014864 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014858:	454e      	cmp	r6, r9
 801485a:	da03      	bge.n	8014864 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801485c:	1416      	asrs	r6, r2, #16
 801485e:	d401      	bmi.n	8014864 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014860:	4546      	cmp	r6, r8
 8014862:	db05      	blt.n	8014870 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014864:	4470      	add	r0, lr
 8014866:	4462      	add	r2, ip
 8014868:	3b01      	subs	r3, #1
 801486a:	3402      	adds	r4, #2
 801486c:	e7f0      	b.n	8014850 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801486e:	d00f      	beq.n	8014890 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014870:	1e5e      	subs	r6, r3, #1
 8014872:	fb0e 0706 	mla	r7, lr, r6, r0
 8014876:	143f      	asrs	r7, r7, #16
 8014878:	d541      	bpl.n	80148fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801487a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801487e:	4698      	mov	r8, r3
 8014880:	9603      	str	r6, [sp, #12]
 8014882:	f1b8 0f00 	cmp.w	r8, #0
 8014886:	dc59      	bgt.n	801493c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014888:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801488c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014890:	9b00      	ldr	r3, [sp, #0]
 8014892:	2b00      	cmp	r3, #0
 8014894:	dd72      	ble.n	801497c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014896:	ee30 0a04 	vadd.f32	s0, s0, s8
 801489a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801489c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80148a0:	eeb0 6a62 	vmov.f32	s12, s5
 80148a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80148a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80148ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148b0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80148b4:	eeb0 6a43 	vmov.f32	s12, s6
 80148b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148bc:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80148c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80148c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80148c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80148cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80148d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80148d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80148d8:	ee12 2a90 	vmov	r2, s5
 80148dc:	eef0 2a47 	vmov.f32	s5, s14
 80148e0:	fb92 fef3 	sdiv	lr, r2, r3
 80148e4:	ee13 2a10 	vmov	r2, s6
 80148e8:	eeb0 3a67 	vmov.f32	s6, s15
 80148ec:	fb92 fcf3 	sdiv	ip, r2, r3
 80148f0:	9b00      	ldr	r3, [sp, #0]
 80148f2:	3b01      	subs	r3, #1
 80148f4:	9300      	str	r3, [sp, #0]
 80148f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148f8:	bf08      	it	eq
 80148fa:	465b      	moveq	r3, fp
 80148fc:	e797      	b.n	801482e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80148fe:	454f      	cmp	r7, r9
 8014900:	dabb      	bge.n	801487a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014902:	fb0c 2606 	mla	r6, ip, r6, r2
 8014906:	1436      	asrs	r6, r6, #16
 8014908:	d4b7      	bmi.n	801487a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801490a:	4546      	cmp	r6, r8
 801490c:	dab5      	bge.n	801487a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801490e:	461e      	mov	r6, r3
 8014910:	46a0      	mov	r8, r4
 8014912:	2e00      	cmp	r6, #0
 8014914:	ddb8      	ble.n	8014888 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014916:	1417      	asrs	r7, r2, #16
 8014918:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801491c:	9901      	ldr	r1, [sp, #4]
 801491e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014922:	4462      	add	r2, ip
 8014924:	4470      	add	r0, lr
 8014926:	fb0a 1707 	mla	r7, sl, r7, r1
 801492a:	9902      	ldr	r1, [sp, #8]
 801492c:	3e01      	subs	r6, #1
 801492e:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014932:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014936:	f828 7b02 	strh.w	r7, [r8], #2
 801493a:	e7ea      	b.n	8014912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801493c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014940:	d417      	bmi.n	8014972 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014942:	68ae      	ldr	r6, [r5, #8]
 8014944:	454e      	cmp	r6, r9
 8014946:	dd14      	ble.n	8014972 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014948:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801494c:	d411      	bmi.n	8014972 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801494e:	68ef      	ldr	r7, [r5, #12]
 8014950:	4557      	cmp	r7, sl
 8014952:	dd0e      	ble.n	8014972 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014954:	9f01      	ldr	r7, [sp, #4]
 8014956:	b236      	sxth	r6, r6
 8014958:	f06f 0101 	mvn.w	r1, #1
 801495c:	fb0a 7606 	mla	r6, sl, r6, r7
 8014960:	9f02      	ldr	r7, [sp, #8]
 8014962:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014966:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801496a:	fb01 f608 	mul.w	r6, r1, r8
 801496e:	9903      	ldr	r1, [sp, #12]
 8014970:	538f      	strh	r7, [r1, r6]
 8014972:	4470      	add	r0, lr
 8014974:	4462      	add	r2, ip
 8014976:	f108 38ff 	add.w	r8, r8, #4294967295
 801497a:	e782      	b.n	8014882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801497c:	b005      	add	sp, #20
 801497e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014982 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014982:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014986:	b087      	sub	sp, #28
 8014988:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801498a:	9205      	str	r2, [sp, #20]
 801498c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014990:	9102      	str	r1, [sp, #8]
 8014992:	9203      	str	r2, [sp, #12]
 8014994:	6861      	ldr	r1, [r4, #4]
 8014996:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801499a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801499e:	fb01 2000 	mla	r0, r1, r0, r2
 80149a2:	6822      	ldr	r2, [r4, #0]
 80149a4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80149a8:	9200      	str	r2, [sp, #0]
 80149aa:	f8dc 2000 	ldr.w	r2, [ip]
 80149ae:	9204      	str	r2, [sp, #16]
 80149b0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80149b4:	3204      	adds	r2, #4
 80149b6:	9201      	str	r2, [sp, #4]
 80149b8:	9a03      	ldr	r2, [sp, #12]
 80149ba:	43d5      	mvns	r5, r2
 80149bc:	b2ed      	uxtb	r5, r5
 80149be:	9a02      	ldr	r2, [sp, #8]
 80149c0:	2a00      	cmp	r2, #0
 80149c2:	dc03      	bgt.n	80149cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80149c4:	9a05      	ldr	r2, [sp, #20]
 80149c6:	2a00      	cmp	r2, #0
 80149c8:	f340 812c 	ble.w	8014c24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80149cc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80149ce:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80149d2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80149d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80149d8:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80149dc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80149e0:	2b00      	cmp	r3, #0
 80149e2:	dd10      	ble.n	8014a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80149e4:	140c      	asrs	r4, r1, #16
 80149e6:	d405      	bmi.n	80149f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149e8:	4574      	cmp	r4, lr
 80149ea:	da03      	bge.n	80149f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149ec:	1414      	asrs	r4, r2, #16
 80149ee:	d401      	bmi.n	80149f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149f0:	42bc      	cmp	r4, r7
 80149f2:	db09      	blt.n	8014a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80149f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80149f6:	3b01      	subs	r3, #1
 80149f8:	9800      	ldr	r0, [sp, #0]
 80149fa:	4421      	add	r1, r4
 80149fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80149fe:	3002      	adds	r0, #2
 8014a00:	4422      	add	r2, r4
 8014a02:	9000      	str	r0, [sp, #0]
 8014a04:	e7ec      	b.n	80149e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014a06:	d071      	beq.n	8014aec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014a08:	1e5c      	subs	r4, r3, #1
 8014a0a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014a0c:	fb06 1604 	mla	r6, r6, r4, r1
 8014a10:	1436      	asrs	r6, r6, #16
 8014a12:	d45d      	bmi.n	8014ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014a14:	4576      	cmp	r6, lr
 8014a16:	da5b      	bge.n	8014ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014a18:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014a1a:	fb06 2404 	mla	r4, r6, r4, r2
 8014a1e:	1424      	asrs	r4, r4, #16
 8014a20:	d456      	bmi.n	8014ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014a22:	42bc      	cmp	r4, r7
 8014a24:	da54      	bge.n	8014ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014a26:	4698      	mov	r8, r3
 8014a28:	f8dd 9000 	ldr.w	r9, [sp]
 8014a2c:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014a30:	f1b8 0f00 	cmp.w	r8, #0
 8014a34:	dd54      	ble.n	8014ae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014a36:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014a3a:	1414      	asrs	r4, r2, #16
 8014a3c:	9804      	ldr	r0, [sp, #16]
 8014a3e:	140e      	asrs	r6, r1, #16
 8014a40:	f108 38ff 	add.w	r8, r8, #4294967295
 8014a44:	fb07 0404 	mla	r4, r7, r4, r0
 8014a48:	9801      	ldr	r0, [sp, #4]
 8014a4a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014a4e:	f8b9 4000 	ldrh.w	r4, [r9]
 8014a52:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014a56:	1227      	asrs	r7, r4, #8
 8014a58:	eb00 0b0e 	add.w	fp, r0, lr
 8014a5c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014a60:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014a64:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014a66:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014a6a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014a6e:	4401      	add	r1, r0
 8014a70:	fb16 f60a 	smulbb	r6, r6, sl
 8014a74:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014a76:	fb1b fb0a 	smulbb	fp, fp, sl
 8014a7a:	fb07 6705 	mla	r7, r7, r5, r6
 8014a7e:	10e6      	asrs	r6, r4, #3
 8014a80:	00e4      	lsls	r4, r4, #3
 8014a82:	4402      	add	r2, r0
 8014a84:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014a88:	b2bf      	uxth	r7, r7
 8014a8a:	b2e4      	uxtb	r4, r4
 8014a8c:	fb06 b605 	mla	r6, r6, r5, fp
 8014a90:	fb14 f405 	smulbb	r4, r4, r5
 8014a94:	b2b6      	uxth	r6, r6
 8014a96:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014a9a:	1c7c      	adds	r4, r7, #1
 8014a9c:	f106 0b01 	add.w	fp, r6, #1
 8014aa0:	fa1f fe8e 	uxth.w	lr, lr
 8014aa4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014aa8:	f10e 0401 	add.w	r4, lr, #1
 8014aac:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014ab0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014ab4:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014ab8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014abc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014ac0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014ac4:	4327      	orrs	r7, r4
 8014ac6:	ea47 070b 	orr.w	r7, r7, fp
 8014aca:	f829 7b02 	strh.w	r7, [r9], #2
 8014ace:	e7af      	b.n	8014a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014ad0:	f04f 0e00 	mov.w	lr, #0
 8014ad4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014ad8:	eb03 040e 	add.w	r4, r3, lr
 8014adc:	2c00      	cmp	r4, #0
 8014ade:	dc43      	bgt.n	8014b68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014ae0:	9a00      	ldr	r2, [sp, #0]
 8014ae2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ae6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014aea:	9300      	str	r3, [sp, #0]
 8014aec:	9b02      	ldr	r3, [sp, #8]
 8014aee:	2b00      	cmp	r3, #0
 8014af0:	f340 8098 	ble.w	8014c24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014af4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014af8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014afa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014afe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014b02:	eef0 6a62 	vmov.f32	s13, s5
 8014b06:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014b0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014b0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b12:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014b16:	eef0 6a43 	vmov.f32	s13, s6
 8014b1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b1e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014b22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014b26:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014b2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b3a:	ee12 2a90 	vmov	r2, s5
 8014b3e:	eef0 2a47 	vmov.f32	s5, s14
 8014b42:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b46:	ee13 2a10 	vmov	r2, s6
 8014b4a:	9313      	str	r3, [sp, #76]	; 0x4c
 8014b4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b4e:	eeb0 3a67 	vmov.f32	s6, s15
 8014b52:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b56:	9314      	str	r3, [sp, #80]	; 0x50
 8014b58:	9b02      	ldr	r3, [sp, #8]
 8014b5a:	9a05      	ldr	r2, [sp, #20]
 8014b5c:	3b01      	subs	r3, #1
 8014b5e:	9302      	str	r3, [sp, #8]
 8014b60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b62:	bf08      	it	eq
 8014b64:	4613      	moveq	r3, r2
 8014b66:	e72a      	b.n	80149be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014b68:	140f      	asrs	r7, r1, #16
 8014b6a:	d454      	bmi.n	8014c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014b6c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014b70:	42be      	cmp	r6, r7
 8014b72:	dd50      	ble.n	8014c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014b74:	ea5f 4822 	movs.w	r8, r2, asr #16
 8014b78:	d44d      	bmi.n	8014c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014b7a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014b7e:	4544      	cmp	r4, r8
 8014b80:	dd49      	ble.n	8014c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014b82:	9c04      	ldr	r4, [sp, #16]
 8014b84:	b236      	sxth	r6, r6
 8014b86:	f06f 0001 	mvn.w	r0, #1
 8014b8a:	fb08 4606 	mla	r6, r8, r6, r4
 8014b8e:	9c01      	ldr	r4, [sp, #4]
 8014b90:	fb00 fa0e 	mul.w	sl, r0, lr
 8014b94:	9800      	ldr	r0, [sp, #0]
 8014b96:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014b9a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014b9e:	eb04 0b08 	add.w	fp, r4, r8
 8014ba2:	f830 400a 	ldrh.w	r4, [r0, sl]
 8014ba6:	9801      	ldr	r0, [sp, #4]
 8014ba8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014bac:	1227      	asrs	r7, r4, #8
 8014bae:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014bb2:	fb16 f609 	smulbb	r6, r6, r9
 8014bb6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014bba:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014bbe:	fb1b fb09 	smulbb	fp, fp, r9
 8014bc2:	fb07 6705 	mla	r7, r7, r5, r6
 8014bc6:	10e6      	asrs	r6, r4, #3
 8014bc8:	00e4      	lsls	r4, r4, #3
 8014bca:	9800      	ldr	r0, [sp, #0]
 8014bcc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014bd0:	b2bf      	uxth	r7, r7
 8014bd2:	b2e4      	uxtb	r4, r4
 8014bd4:	fb06 b605 	mla	r6, r6, r5, fp
 8014bd8:	fb14 f405 	smulbb	r4, r4, r5
 8014bdc:	b2b6      	uxth	r6, r6
 8014bde:	fb08 4809 	mla	r8, r8, r9, r4
 8014be2:	1c7c      	adds	r4, r7, #1
 8014be4:	f106 0b01 	add.w	fp, r6, #1
 8014be8:	fa1f f888 	uxth.w	r8, r8
 8014bec:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014bf0:	f108 0401 	add.w	r4, r8, #1
 8014bf4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014bf8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014bfc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014c00:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014c04:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014c08:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014c0c:	4327      	orrs	r7, r4
 8014c0e:	ea47 070b 	orr.w	r7, r7, fp
 8014c12:	f820 700a 	strh.w	r7, [r0, sl]
 8014c16:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014c18:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014c1c:	4401      	add	r1, r0
 8014c1e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014c20:	4402      	add	r2, r0
 8014c22:	e759      	b.n	8014ad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014c24:	b007      	add	sp, #28
 8014c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c30:	b085      	sub	sp, #20
 8014c32:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014c36:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014c38:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014c3a:	9203      	str	r2, [sp, #12]
 8014c3c:	6870      	ldr	r0, [r6, #4]
 8014c3e:	686f      	ldr	r7, [r5, #4]
 8014c40:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8014c44:	3704      	adds	r7, #4
 8014c46:	9101      	str	r1, [sp, #4]
 8014c48:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014c4c:	fb00 2404 	mla	r4, r0, r4, r2
 8014c50:	6832      	ldr	r2, [r6, #0]
 8014c52:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c56:	682a      	ldr	r2, [r5, #0]
 8014c58:	9202      	str	r2, [sp, #8]
 8014c5a:	9a01      	ldr	r2, [sp, #4]
 8014c5c:	2a00      	cmp	r2, #0
 8014c5e:	dc03      	bgt.n	8014c68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014c60:	9a03      	ldr	r2, [sp, #12]
 8014c62:	2a00      	cmp	r2, #0
 8014c64:	f340 80cc 	ble.w	8014e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014c68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014c6a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014c6e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014c72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014c74:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014c78:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014c7c:	2b00      	cmp	r3, #0
 8014c7e:	dd0d      	ble.n	8014c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c80:	1406      	asrs	r6, r0, #16
 8014c82:	d405      	bmi.n	8014c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014c84:	454e      	cmp	r6, r9
 8014c86:	da03      	bge.n	8014c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014c88:	1416      	asrs	r6, r2, #16
 8014c8a:	d401      	bmi.n	8014c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014c8c:	4546      	cmp	r6, r8
 8014c8e:	db06      	blt.n	8014c9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c90:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8014c92:	4460      	add	r0, ip
 8014c94:	3b01      	subs	r3, #1
 8014c96:	3402      	adds	r4, #2
 8014c98:	4432      	add	r2, r6
 8014c9a:	e7ef      	b.n	8014c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8014c9c:	d00f      	beq.n	8014cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014c9e:	1e5e      	subs	r6, r3, #1
 8014ca0:	fb0c 0e06 	mla	lr, ip, r6, r0
 8014ca4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8014ca8:	d543      	bpl.n	8014d32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8014caa:	4698      	mov	r8, r3
 8014cac:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8014cb0:	f1b8 0f00 	cmp.w	r8, #0
 8014cb4:	dc71      	bgt.n	8014d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8014cb6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014cbe:	9b01      	ldr	r3, [sp, #4]
 8014cc0:	2b00      	cmp	r3, #0
 8014cc2:	f340 809d 	ble.w	8014e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014cc6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014cca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ccc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cd0:	eeb0 6a62 	vmov.f32	s12, s5
 8014cd4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014cd8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cdc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ce0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014ce4:	eeb0 6a43 	vmov.f32	s12, s6
 8014ce8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014cec:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014cf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cf4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cf8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014cfc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d08:	ee12 2a90 	vmov	r2, s5
 8014d0c:	eef0 2a47 	vmov.f32	s5, s14
 8014d10:	fb92 fcf3 	sdiv	ip, r2, r3
 8014d14:	ee13 2a10 	vmov	r2, s6
 8014d18:	eeb0 3a67 	vmov.f32	s6, s15
 8014d1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d20:	9312      	str	r3, [sp, #72]	; 0x48
 8014d22:	9b01      	ldr	r3, [sp, #4]
 8014d24:	9a03      	ldr	r2, [sp, #12]
 8014d26:	3b01      	subs	r3, #1
 8014d28:	9301      	str	r3, [sp, #4]
 8014d2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d2c:	bf08      	it	eq
 8014d2e:	4613      	moveq	r3, r2
 8014d30:	e793      	b.n	8014c5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8014d32:	45ce      	cmp	lr, r9
 8014d34:	dab9      	bge.n	8014caa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014d36:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014d38:	fb01 2606 	mla	r6, r1, r6, r2
 8014d3c:	1436      	asrs	r6, r6, #16
 8014d3e:	d4b4      	bmi.n	8014caa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014d40:	4546      	cmp	r6, r8
 8014d42:	dab2      	bge.n	8014caa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014d44:	4698      	mov	r8, r3
 8014d46:	46a2      	mov	sl, r4
 8014d48:	f1b8 0f00 	cmp.w	r8, #0
 8014d4c:	ddb3      	ble.n	8014cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014d4e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014d52:	1416      	asrs	r6, r2, #16
 8014d54:	9902      	ldr	r1, [sp, #8]
 8014d56:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014d5a:	f108 38ff 	add.w	r8, r8, #4294967295
 8014d5e:	4460      	add	r0, ip
 8014d60:	fb09 1606 	mla	r6, r9, r6, r1
 8014d64:	4928      	ldr	r1, [pc, #160]	; (8014e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014d66:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014d6a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014d6e:	eb07 0b0e 	add.w	fp, r7, lr
 8014d72:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8014d76:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8014d7a:	00f6      	lsls	r6, r6, #3
 8014d7c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014d80:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014d82:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014d86:	440a      	add	r2, r1
 8014d88:	ea49 0606 	orr.w	r6, r9, r6
 8014d8c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8014d90:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014d94:	f82a 6b02 	strh.w	r6, [sl], #2
 8014d98:	e7d6      	b.n	8014d48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014d9a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014d9e:	d429      	bmi.n	8014df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014da0:	68ae      	ldr	r6, [r5, #8]
 8014da2:	454e      	cmp	r6, r9
 8014da4:	dd26      	ble.n	8014df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014da6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8014daa:	d423      	bmi.n	8014df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014dac:	68e9      	ldr	r1, [r5, #12]
 8014dae:	4559      	cmp	r1, fp
 8014db0:	dd20      	ble.n	8014df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014db2:	fa0f fe86 	sxth.w	lr, r6
 8014db6:	9902      	ldr	r1, [sp, #8]
 8014db8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014dbc:	f06f 0101 	mvn.w	r1, #1
 8014dc0:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014dc4:	fb01 f908 	mul.w	r9, r1, r8
 8014dc8:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8014dcc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014dd0:	eb07 060e 	add.w	r6, r7, lr
 8014dd4:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014dd8:	7876      	ldrb	r6, [r6, #1]
 8014dda:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014dde:	00f6      	lsls	r6, r6, #3
 8014de0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014de4:	ea4b 0606 	orr.w	r6, fp, r6
 8014de8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014dec:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014df0:	f82a 6009 	strh.w	r6, [sl, r9]
 8014df4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014df6:	4460      	add	r0, ip
 8014df8:	f108 38ff 	add.w	r8, r8, #4294967295
 8014dfc:	440a      	add	r2, r1
 8014dfe:	e757      	b.n	8014cb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014e00:	b005      	add	sp, #20
 8014e02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e06:	bf00      	nop
 8014e08:	fffff800 	.word	0xfffff800

08014e0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e10:	b087      	sub	sp, #28
 8014e12:	468b      	mov	fp, r1
 8014e14:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e18:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014e1a:	9204      	str	r2, [sp, #16]
 8014e1c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014e20:	6841      	ldr	r1, [r0, #4]
 8014e22:	9205      	str	r2, [sp, #20]
 8014e24:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014e28:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014e2c:	fb01 2404 	mla	r4, r1, r4, r2
 8014e30:	6802      	ldr	r2, [r0, #0]
 8014e32:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e36:	f8dc 2000 	ldr.w	r2, [ip]
 8014e3a:	9201      	str	r2, [sp, #4]
 8014e3c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014e40:	3204      	adds	r2, #4
 8014e42:	9202      	str	r2, [sp, #8]
 8014e44:	f1bb 0f00 	cmp.w	fp, #0
 8014e48:	dc03      	bgt.n	8014e52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014e4a:	9a04      	ldr	r2, [sp, #16]
 8014e4c:	2a00      	cmp	r2, #0
 8014e4e:	f340 8138 	ble.w	80150c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014e52:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014e54:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014e58:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014e5c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014e5e:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014e62:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014e66:	2b00      	cmp	r3, #0
 8014e68:	dd0e      	ble.n	8014e88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e6a:	1402      	asrs	r2, r0, #16
 8014e6c:	d405      	bmi.n	8014e7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014e6e:	42ba      	cmp	r2, r7
 8014e70:	da03      	bge.n	8014e7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014e72:	140a      	asrs	r2, r1, #16
 8014e74:	d401      	bmi.n	8014e7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014e76:	42b2      	cmp	r2, r6
 8014e78:	db07      	blt.n	8014e8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014e7a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014e7c:	3b01      	subs	r3, #1
 8014e7e:	3402      	adds	r4, #2
 8014e80:	4410      	add	r0, r2
 8014e82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014e84:	4411      	add	r1, r2
 8014e86:	e7ee      	b.n	8014e66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014e88:	d019      	beq.n	8014ebe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014e8a:	1e5a      	subs	r2, r3, #1
 8014e8c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014e8e:	fb05 0502 	mla	r5, r5, r2, r0
 8014e92:	142d      	asrs	r5, r5, #16
 8014e94:	d409      	bmi.n	8014eaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014e96:	42bd      	cmp	r5, r7
 8014e98:	da07      	bge.n	8014eaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014e9a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014e9c:	fb05 1202 	mla	r2, r5, r2, r1
 8014ea0:	1412      	asrs	r2, r2, #16
 8014ea2:	d402      	bmi.n	8014eaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014ea4:	42b2      	cmp	r2, r6
 8014ea6:	f2c0 80ac 	blt.w	8015002 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8014eaa:	f04f 0e00 	mov.w	lr, #0
 8014eae:	eb03 020e 	add.w	r2, r3, lr
 8014eb2:	2a00      	cmp	r2, #0
 8014eb4:	dc3e      	bgt.n	8014f34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014eb6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014eba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ebe:	f1bb 0f00 	cmp.w	fp, #0
 8014ec2:	f340 80fe 	ble.w	80150c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014ec6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014eca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ecc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014ed0:	f1bb 0b01 	subs.w	fp, fp, #1
 8014ed4:	eeb0 6a62 	vmov.f32	s12, s5
 8014ed8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014edc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ee0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ee4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014ee8:	eeb0 6a43 	vmov.f32	s12, s6
 8014eec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ef0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014ef4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ef8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014efc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f0c:	ee12 2a90 	vmov	r2, s5
 8014f10:	eef0 2a47 	vmov.f32	s5, s14
 8014f14:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f18:	ee13 2a10 	vmov	r2, s6
 8014f1c:	9313      	str	r3, [sp, #76]	; 0x4c
 8014f1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f20:	eeb0 3a67 	vmov.f32	s6, s15
 8014f24:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f28:	9a04      	ldr	r2, [sp, #16]
 8014f2a:	9314      	str	r3, [sp, #80]	; 0x50
 8014f2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f2e:	bf08      	it	eq
 8014f30:	4613      	moveq	r3, r2
 8014f32:	e787      	b.n	8014e44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014f34:	1406      	asrs	r6, r0, #16
 8014f36:	d45d      	bmi.n	8014ff4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014f38:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014f3c:	42b5      	cmp	r5, r6
 8014f3e:	dd59      	ble.n	8014ff4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014f40:	140f      	asrs	r7, r1, #16
 8014f42:	d457      	bmi.n	8014ff4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014f44:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014f48:	42ba      	cmp	r2, r7
 8014f4a:	dd53      	ble.n	8014ff4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014f4c:	9a01      	ldr	r2, [sp, #4]
 8014f4e:	b22d      	sxth	r5, r5
 8014f50:	fb07 2505 	mla	r5, r7, r5, r2
 8014f54:	5daa      	ldrb	r2, [r5, r6]
 8014f56:	9d02      	ldr	r5, [sp, #8]
 8014f58:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014f5c:	0e2e      	lsrs	r6, r5, #24
 8014f5e:	d049      	beq.n	8014ff4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014f60:	f06f 0201 	mvn.w	r2, #1
 8014f64:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014f68:	fb02 f20e 	mul.w	r2, r2, lr
 8014f6c:	f834 8002 	ldrh.w	r8, [r4, r2]
 8014f70:	9203      	str	r2, [sp, #12]
 8014f72:	9a05      	ldr	r2, [sp, #20]
 8014f74:	ea4f 2728 	mov.w	r7, r8, asr #8
 8014f78:	4356      	muls	r6, r2
 8014f7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014f7e:	1c72      	adds	r2, r6, #1
 8014f80:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014f84:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014f88:	b2ed      	uxtb	r5, r5
 8014f8a:	1212      	asrs	r2, r2, #8
 8014f8c:	fa1f f982 	uxth.w	r9, r2
 8014f90:	43d2      	mvns	r2, r2
 8014f92:	fb16 f609 	smulbb	r6, r6, r9
 8014f96:	b2d2      	uxtb	r2, r2
 8014f98:	fb15 f509 	smulbb	r5, r5, r9
 8014f9c:	fb07 6702 	mla	r7, r7, r2, r6
 8014fa0:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014fa4:	fb1a fa09 	smulbb	sl, sl, r9
 8014fa8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014fac:	b2bf      	uxth	r7, r7
 8014fae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014fb2:	fa5f f888 	uxtb.w	r8, r8
 8014fb6:	fb06 a602 	mla	r6, r6, r2, sl
 8014fba:	fb08 5502 	mla	r5, r8, r2, r5
 8014fbe:	1c7a      	adds	r2, r7, #1
 8014fc0:	b2b6      	uxth	r6, r6
 8014fc2:	b2ad      	uxth	r5, r5
 8014fc4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014fc8:	9a03      	ldr	r2, [sp, #12]
 8014fca:	f105 0a01 	add.w	sl, r5, #1
 8014fce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014fd2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014fd6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014fda:	ea4a 0707 	orr.w	r7, sl, r7
 8014fde:	f106 0a01 	add.w	sl, r6, #1
 8014fe2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014fe6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014fea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014fee:	ea47 070a 	orr.w	r7, r7, sl
 8014ff2:	52a7      	strh	r7, [r4, r2]
 8014ff4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014ff6:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014ffa:	4410      	add	r0, r2
 8014ffc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014ffe:	4411      	add	r1, r2
 8015000:	e755      	b.n	8014eae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015002:	f04f 0800 	mov.w	r8, #0
 8015006:	eba3 0208 	sub.w	r2, r3, r8
 801500a:	2a00      	cmp	r2, #0
 801500c:	f77f af53 	ble.w	8014eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015010:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015014:	140a      	asrs	r2, r1, #16
 8015016:	9f01      	ldr	r7, [sp, #4]
 8015018:	1405      	asrs	r5, r0, #16
 801501a:	fb06 7202 	mla	r2, r6, r2, r7
 801501e:	5d52      	ldrb	r2, [r2, r5]
 8015020:	9d02      	ldr	r5, [sp, #8]
 8015022:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015026:	0e2e      	lsrs	r6, r5, #24
 8015028:	d044      	beq.n	80150b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801502a:	9a05      	ldr	r2, [sp, #20]
 801502c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015030:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015034:	4356      	muls	r6, r2
 8015036:	ea4f 272e 	mov.w	r7, lr, asr #8
 801503a:	1c72      	adds	r2, r6, #1
 801503c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015040:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015044:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015048:	b2ed      	uxtb	r5, r5
 801504a:	1212      	asrs	r2, r2, #8
 801504c:	fa1f f982 	uxth.w	r9, r2
 8015050:	43d2      	mvns	r2, r2
 8015052:	fb16 f609 	smulbb	r6, r6, r9
 8015056:	b2d2      	uxtb	r2, r2
 8015058:	fb15 f509 	smulbb	r5, r5, r9
 801505c:	fb07 6702 	mla	r7, r7, r2, r6
 8015060:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015064:	fb1a fa09 	smulbb	sl, sl, r9
 8015068:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801506c:	b2bf      	uxth	r7, r7
 801506e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015072:	fa5f fe8e 	uxtb.w	lr, lr
 8015076:	fb06 a602 	mla	r6, r6, r2, sl
 801507a:	fb0e 5502 	mla	r5, lr, r2, r5
 801507e:	1c7a      	adds	r2, r7, #1
 8015080:	b2b6      	uxth	r6, r6
 8015082:	b2ad      	uxth	r5, r5
 8015084:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015088:	f105 0a01 	add.w	sl, r5, #1
 801508c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015090:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015094:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015098:	ea4a 0707 	orr.w	r7, sl, r7
 801509c:	f106 0a01 	add.w	sl, r6, #1
 80150a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80150a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80150a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80150ac:	ea47 070a 	orr.w	r7, r7, sl
 80150b0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80150b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80150b6:	f108 0801 	add.w	r8, r8, #1
 80150ba:	4410      	add	r0, r2
 80150bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80150be:	4411      	add	r1, r2
 80150c0:	e7a1      	b.n	8015006 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80150c2:	b007      	add	sp, #28
 80150c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080150c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80150c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150cc:	b085      	sub	sp, #20
 80150ce:	468b      	mov	fp, r1
 80150d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80150d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80150d6:	9203      	str	r2, [sp, #12]
 80150d8:	6841      	ldr	r1, [r0, #4]
 80150da:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80150de:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80150e2:	fb01 2404 	mla	r4, r1, r4, r2
 80150e6:	6802      	ldr	r2, [r0, #0]
 80150e8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80150ec:	f8de 2000 	ldr.w	r2, [lr]
 80150f0:	9200      	str	r2, [sp, #0]
 80150f2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80150f6:	3204      	adds	r2, #4
 80150f8:	9201      	str	r2, [sp, #4]
 80150fa:	f1bb 0f00 	cmp.w	fp, #0
 80150fe:	dc03      	bgt.n	8015108 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015100:	9a03      	ldr	r2, [sp, #12]
 8015102:	2a00      	cmp	r2, #0
 8015104:	f340 8153 	ble.w	80153ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015108:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801510a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801510e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015112:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015114:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015118:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801511c:	2b00      	cmp	r3, #0
 801511e:	dd0e      	ble.n	801513e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015120:	1408      	asrs	r0, r1, #16
 8015122:	d405      	bmi.n	8015130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015124:	42b8      	cmp	r0, r7
 8015126:	da03      	bge.n	8015130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015128:	1410      	asrs	r0, r2, #16
 801512a:	d401      	bmi.n	8015130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801512c:	42b0      	cmp	r0, r6
 801512e:	db07      	blt.n	8015140 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015130:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015132:	3b01      	subs	r3, #1
 8015134:	3402      	adds	r4, #2
 8015136:	4401      	add	r1, r0
 8015138:	9812      	ldr	r0, [sp, #72]	; 0x48
 801513a:	4402      	add	r2, r0
 801513c:	e7ee      	b.n	801511c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801513e:	d017      	beq.n	8015170 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015140:	1e58      	subs	r0, r3, #1
 8015142:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015144:	fb05 1500 	mla	r5, r5, r0, r1
 8015148:	142d      	asrs	r5, r5, #16
 801514a:	d409      	bmi.n	8015160 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801514c:	42bd      	cmp	r5, r7
 801514e:	da07      	bge.n	8015160 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015150:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015152:	fb05 2000 	mla	r0, r5, r0, r2
 8015156:	1400      	asrs	r0, r0, #16
 8015158:	d402      	bmi.n	8015160 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801515a:	42b0      	cmp	r0, r6
 801515c:	f2c0 80bc 	blt.w	80152d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015160:	2600      	movs	r6, #0
 8015162:	1998      	adds	r0, r3, r6
 8015164:	2800      	cmp	r0, #0
 8015166:	dc3e      	bgt.n	80151e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015168:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801516c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015170:	f1bb 0f00 	cmp.w	fp, #0
 8015174:	f340 811b 	ble.w	80153ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015178:	ee30 0a04 	vadd.f32	s0, s0, s8
 801517c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801517e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015182:	f1bb 0b01 	subs.w	fp, fp, #1
 8015186:	eeb0 6a62 	vmov.f32	s12, s5
 801518a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801518e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015192:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015196:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801519a:	eeb0 6a43 	vmov.f32	s12, s6
 801519e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80151a2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80151a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80151aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80151ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80151b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80151b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80151ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80151be:	ee12 2a90 	vmov	r2, s5
 80151c2:	eef0 2a47 	vmov.f32	s5, s14
 80151c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80151ca:	ee13 2a10 	vmov	r2, s6
 80151ce:	9311      	str	r3, [sp, #68]	; 0x44
 80151d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151d2:	eeb0 3a67 	vmov.f32	s6, s15
 80151d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80151da:	9a03      	ldr	r2, [sp, #12]
 80151dc:	9312      	str	r3, [sp, #72]	; 0x48
 80151de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151e0:	bf08      	it	eq
 80151e2:	4613      	moveq	r3, r2
 80151e4:	e789      	b.n	80150fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80151e6:	140f      	asrs	r7, r1, #16
 80151e8:	d426      	bmi.n	8015238 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80151ea:	f8de 5008 	ldr.w	r5, [lr, #8]
 80151ee:	42bd      	cmp	r5, r7
 80151f0:	dd22      	ble.n	8015238 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80151f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80151f6:	d41f      	bmi.n	8015238 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80151f8:	f8de 000c 	ldr.w	r0, [lr, #12]
 80151fc:	4560      	cmp	r0, ip
 80151fe:	dd1b      	ble.n	8015238 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015200:	9800      	ldr	r0, [sp, #0]
 8015202:	b22d      	sxth	r5, r5
 8015204:	fb0c 0505 	mla	r5, ip, r5, r0
 8015208:	5de8      	ldrb	r0, [r5, r7]
 801520a:	9d01      	ldr	r5, [sp, #4]
 801520c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015210:	0e07      	lsrs	r7, r0, #24
 8015212:	2fff      	cmp	r7, #255	; 0xff
 8015214:	d116      	bne.n	8015244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015216:	f06f 0501 	mvn.w	r5, #1
 801521a:	fb05 f706 	mul.w	r7, r5, r6
 801521e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015222:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015226:	0945      	lsrs	r5, r0, #5
 8015228:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801522c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015230:	ea4c 0505 	orr.w	r5, ip, r5
 8015234:	4305      	orrs	r5, r0
 8015236:	53e5      	strh	r5, [r4, r7]
 8015238:	9811      	ldr	r0, [sp, #68]	; 0x44
 801523a:	3e01      	subs	r6, #1
 801523c:	4401      	add	r1, r0
 801523e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015240:	4402      	add	r2, r0
 8015242:	e78e      	b.n	8015162 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015244:	b2fd      	uxtb	r5, r7
 8015246:	2f00      	cmp	r7, #0
 8015248:	d0f6      	beq.n	8015238 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801524a:	f06f 0701 	mvn.w	r7, #1
 801524e:	fa1f f985 	uxth.w	r9, r5
 8015252:	43ed      	mvns	r5, r5
 8015254:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015258:	4377      	muls	r7, r6
 801525a:	fb1a fa09 	smulbb	sl, sl, r9
 801525e:	b2ed      	uxtb	r5, r5
 8015260:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015264:	9702      	str	r7, [sp, #8]
 8015266:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801526a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801526e:	fb17 f709 	smulbb	r7, r7, r9
 8015272:	b2c0      	uxtb	r0, r0
 8015274:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015278:	fb10 f009 	smulbb	r0, r0, r9
 801527c:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015280:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8015284:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015288:	fa1f fc8c 	uxth.w	ip, ip
 801528c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015290:	fa5f f888 	uxtb.w	r8, r8
 8015294:	fb07 a705 	mla	r7, r7, r5, sl
 8015298:	fb08 0005 	mla	r0, r8, r5, r0
 801529c:	f10c 0501 	add.w	r5, ip, #1
 80152a0:	b2bf      	uxth	r7, r7
 80152a2:	b280      	uxth	r0, r0
 80152a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80152a8:	f100 0a01 	add.w	sl, r0, #1
 80152ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80152b0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80152b4:	9802      	ldr	r0, [sp, #8]
 80152b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80152ba:	ea4a 0c0c 	orr.w	ip, sl, ip
 80152be:	f107 0a01 	add.w	sl, r7, #1
 80152c2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80152c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80152ca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80152ce:	ea4c 0c0a 	orr.w	ip, ip, sl
 80152d2:	f824 c000 	strh.w	ip, [r4, r0]
 80152d6:	e7af      	b.n	8015238 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80152d8:	f04f 0800 	mov.w	r8, #0
 80152dc:	eba3 0008 	sub.w	r0, r3, r8
 80152e0:	2800      	cmp	r0, #0
 80152e2:	f77f af41 	ble.w	8015168 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80152e6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80152ea:	1410      	asrs	r0, r2, #16
 80152ec:	9f00      	ldr	r7, [sp, #0]
 80152ee:	140d      	asrs	r5, r1, #16
 80152f0:	fb06 7000 	mla	r0, r6, r0, r7
 80152f4:	5d40      	ldrb	r0, [r0, r5]
 80152f6:	9d01      	ldr	r5, [sp, #4]
 80152f8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80152fc:	0e2e      	lsrs	r6, r5, #24
 80152fe:	2eff      	cmp	r6, #255	; 0xff
 8015300:	d112      	bne.n	8015328 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015302:	482c      	ldr	r0, [pc, #176]	; (80153b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015304:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015308:	0968      	lsrs	r0, r5, #5
 801530a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801530e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015312:	4330      	orrs	r0, r6
 8015314:	4328      	orrs	r0, r5
 8015316:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801531a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801531c:	f108 0801 	add.w	r8, r8, #1
 8015320:	4401      	add	r1, r0
 8015322:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015324:	4402      	add	r2, r0
 8015326:	e7d9      	b.n	80152dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015328:	b2f0      	uxtb	r0, r6
 801532a:	2e00      	cmp	r6, #0
 801532c:	d0f5      	beq.n	801531a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801532e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015332:	fa1f f980 	uxth.w	r9, r0
 8015336:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801533a:	43c0      	mvns	r0, r0
 801533c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015340:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015344:	fb16 f609 	smulbb	r6, r6, r9
 8015348:	b2c0      	uxtb	r0, r0
 801534a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801534e:	b2ed      	uxtb	r5, r5
 8015350:	fb1a fa09 	smulbb	sl, sl, r9
 8015354:	fb07 6700 	mla	r7, r7, r0, r6
 8015358:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801535c:	fb15 f509 	smulbb	r5, r5, r9
 8015360:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015364:	b2bf      	uxth	r7, r7
 8015366:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801536a:	fa5f fc8c 	uxtb.w	ip, ip
 801536e:	fb06 a600 	mla	r6, r6, r0, sl
 8015372:	fb0c 5500 	mla	r5, ip, r0, r5
 8015376:	1c78      	adds	r0, r7, #1
 8015378:	b2b6      	uxth	r6, r6
 801537a:	b2ad      	uxth	r5, r5
 801537c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015380:	f105 0a01 	add.w	sl, r5, #1
 8015384:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015388:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801538c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015390:	ea4a 0707 	orr.w	r7, sl, r7
 8015394:	f106 0a01 	add.w	sl, r6, #1
 8015398:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801539c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80153a0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80153a4:	ea47 070a 	orr.w	r7, r7, sl
 80153a8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80153ac:	e7b5      	b.n	801531a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80153ae:	b005      	add	sp, #20
 80153b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153b4:	fffff800 	.word	0xfffff800

080153b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80153b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153bc:	b087      	sub	sp, #28
 80153be:	468b      	mov	fp, r1
 80153c0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80153c4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80153c6:	9204      	str	r2, [sp, #16]
 80153c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80153cc:	6861      	ldr	r1, [r4, #4]
 80153ce:	9205      	str	r2, [sp, #20]
 80153d0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80153d4:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80153d8:	fb01 2000 	mla	r0, r1, r0, r2
 80153dc:	6822      	ldr	r2, [r4, #0]
 80153de:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80153e2:	f8de 2000 	ldr.w	r2, [lr]
 80153e6:	9201      	str	r2, [sp, #4]
 80153e8:	f8de 2004 	ldr.w	r2, [lr, #4]
 80153ec:	9202      	str	r2, [sp, #8]
 80153ee:	f1bb 0f00 	cmp.w	fp, #0
 80153f2:	dc03      	bgt.n	80153fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80153f4:	9a04      	ldr	r2, [sp, #16]
 80153f6:	2a00      	cmp	r2, #0
 80153f8:	f340 8142 	ble.w	8015680 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80153fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80153fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015402:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015406:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015408:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801540c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015410:	2b00      	cmp	r3, #0
 8015412:	dd0e      	ble.n	8015432 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015414:	140c      	asrs	r4, r1, #16
 8015416:	d405      	bmi.n	8015424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015418:	42bc      	cmp	r4, r7
 801541a:	da03      	bge.n	8015424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801541c:	1414      	asrs	r4, r2, #16
 801541e:	d401      	bmi.n	8015424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015420:	42b4      	cmp	r4, r6
 8015422:	db07      	blt.n	8015434 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015424:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015426:	3b01      	subs	r3, #1
 8015428:	3002      	adds	r0, #2
 801542a:	4421      	add	r1, r4
 801542c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801542e:	4422      	add	r2, r4
 8015430:	e7ee      	b.n	8015410 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015432:	d019      	beq.n	8015468 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015434:	1e5c      	subs	r4, r3, #1
 8015436:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015438:	fb05 1504 	mla	r5, r5, r4, r1
 801543c:	142d      	asrs	r5, r5, #16
 801543e:	d409      	bmi.n	8015454 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015440:	42bd      	cmp	r5, r7
 8015442:	da07      	bge.n	8015454 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015444:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015446:	fb05 2404 	mla	r4, r5, r4, r2
 801544a:	1424      	asrs	r4, r4, #16
 801544c:	d402      	bmi.n	8015454 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801544e:	42b4      	cmp	r4, r6
 8015450:	f2c0 80b1 	blt.w	80155b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015454:	f04f 0800 	mov.w	r8, #0
 8015458:	eb03 0408 	add.w	r4, r3, r8
 801545c:	2c00      	cmp	r4, #0
 801545e:	dc3e      	bgt.n	80154de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015460:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015464:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015468:	f1bb 0f00 	cmp.w	fp, #0
 801546c:	f340 8108 	ble.w	8015680 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015470:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015474:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015476:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801547a:	f1bb 0b01 	subs.w	fp, fp, #1
 801547e:	eeb0 6a62 	vmov.f32	s12, s5
 8015482:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015486:	ee31 1a05 	vadd.f32	s2, s2, s10
 801548a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801548e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015492:	eeb0 6a43 	vmov.f32	s12, s6
 8015496:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801549a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801549e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80154a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80154a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80154aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80154ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80154b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80154b6:	ee12 2a90 	vmov	r2, s5
 80154ba:	eef0 2a47 	vmov.f32	s5, s14
 80154be:	fb92 f3f3 	sdiv	r3, r2, r3
 80154c2:	ee13 2a10 	vmov	r2, s6
 80154c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80154c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80154ca:	eeb0 3a67 	vmov.f32	s6, s15
 80154ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80154d2:	9a04      	ldr	r2, [sp, #16]
 80154d4:	9314      	str	r3, [sp, #80]	; 0x50
 80154d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80154d8:	bf08      	it	eq
 80154da:	4613      	moveq	r3, r2
 80154dc:	e787      	b.n	80153ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80154de:	140e      	asrs	r6, r1, #16
 80154e0:	d462      	bmi.n	80155a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80154e2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80154e6:	42b5      	cmp	r5, r6
 80154e8:	dd5e      	ble.n	80155a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80154ea:	1417      	asrs	r7, r2, #16
 80154ec:	d45c      	bmi.n	80155a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80154ee:	f8de 400c 	ldr.w	r4, [lr, #12]
 80154f2:	42bc      	cmp	r4, r7
 80154f4:	dd58      	ble.n	80155a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80154f6:	b22d      	sxth	r5, r5
 80154f8:	9c02      	ldr	r4, [sp, #8]
 80154fa:	fb07 6505 	mla	r5, r7, r5, r6
 80154fe:	5d66      	ldrb	r6, [r4, r5]
 8015500:	2e00      	cmp	r6, #0
 8015502:	d051      	beq.n	80155a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015504:	9c01      	ldr	r4, [sp, #4]
 8015506:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801550a:	f06f 0401 	mvn.w	r4, #1
 801550e:	fb04 f408 	mul.w	r4, r4, r8
 8015512:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015516:	5b05      	ldrh	r5, [r0, r4]
 8015518:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801551c:	9403      	str	r4, [sp, #12]
 801551e:	9c05      	ldr	r4, [sp, #20]
 8015520:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015524:	4366      	muls	r6, r4
 8015526:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801552a:	1c74      	adds	r4, r6, #1
 801552c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015530:	122e      	asrs	r6, r5, #8
 8015532:	1224      	asrs	r4, r4, #8
 8015534:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015538:	00ed      	lsls	r5, r5, #3
 801553a:	b2a7      	uxth	r7, r4
 801553c:	43e4      	mvns	r4, r4
 801553e:	b2ed      	uxtb	r5, r5
 8015540:	b2e4      	uxtb	r4, r4
 8015542:	fb16 f604 	smulbb	r6, r6, r4
 8015546:	fb15 f504 	smulbb	r5, r5, r4
 801554a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801554e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015552:	fb1a fa04 	smulbb	sl, sl, r4
 8015556:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801555a:	fa1f fc8c 	uxth.w	ip, ip
 801555e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015562:	fa5f f989 	uxtb.w	r9, r9
 8015566:	fb06 a607 	mla	r6, r6, r7, sl
 801556a:	f10c 0401 	add.w	r4, ip, #1
 801556e:	fb09 5507 	mla	r5, r9, r7, r5
 8015572:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015576:	9c03      	ldr	r4, [sp, #12]
 8015578:	b2ad      	uxth	r5, r5
 801557a:	b2b6      	uxth	r6, r6
 801557c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015580:	f105 0a01 	add.w	sl, r5, #1
 8015584:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015588:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801558c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015590:	f106 0a01 	add.w	sl, r6, #1
 8015594:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015598:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801559c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80155a0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80155a4:	f820 c004 	strh.w	ip, [r0, r4]
 80155a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80155aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80155ae:	4421      	add	r1, r4
 80155b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80155b2:	4422      	add	r2, r4
 80155b4:	e750      	b.n	8015458 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80155b6:	f04f 0900 	mov.w	r9, #0
 80155ba:	eba3 0409 	sub.w	r4, r3, r9
 80155be:	2c00      	cmp	r4, #0
 80155c0:	f77f af4e 	ble.w	8015460 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80155c4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80155c8:	140d      	asrs	r5, r1, #16
 80155ca:	1414      	asrs	r4, r2, #16
 80155cc:	fb06 5404 	mla	r4, r6, r4, r5
 80155d0:	9d02      	ldr	r5, [sp, #8]
 80155d2:	5d2e      	ldrb	r6, [r5, r4]
 80155d4:	2e00      	cmp	r6, #0
 80155d6:	d04c      	beq.n	8015672 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80155d8:	9d01      	ldr	r5, [sp, #4]
 80155da:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80155de:	9c05      	ldr	r4, [sp, #20]
 80155e0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80155e4:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80155e8:	4366      	muls	r6, r4
 80155ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80155ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80155f2:	1c74      	adds	r4, r6, #1
 80155f4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80155f8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80155fc:	122e      	asrs	r6, r5, #8
 80155fe:	1224      	asrs	r4, r4, #8
 8015600:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015604:	00ed      	lsls	r5, r5, #3
 8015606:	b2a7      	uxth	r7, r4
 8015608:	43e4      	mvns	r4, r4
 801560a:	b2ed      	uxtb	r5, r5
 801560c:	b2e4      	uxtb	r4, r4
 801560e:	fb16 f604 	smulbb	r6, r6, r4
 8015612:	fb15 f504 	smulbb	r5, r5, r4
 8015616:	fb0c 6c07 	mla	ip, ip, r7, r6
 801561a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801561e:	fb1a fa04 	smulbb	sl, sl, r4
 8015622:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015626:	fa1f fc8c 	uxth.w	ip, ip
 801562a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801562e:	fa5f f888 	uxtb.w	r8, r8
 8015632:	fb06 a607 	mla	r6, r6, r7, sl
 8015636:	f10c 0401 	add.w	r4, ip, #1
 801563a:	fb08 5507 	mla	r5, r8, r7, r5
 801563e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015642:	b2ad      	uxth	r5, r5
 8015644:	b2b6      	uxth	r6, r6
 8015646:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801564a:	f105 0a01 	add.w	sl, r5, #1
 801564e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015652:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015656:	ea4a 0c0c 	orr.w	ip, sl, ip
 801565a:	f106 0a01 	add.w	sl, r6, #1
 801565e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015662:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015666:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801566a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801566e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015672:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015674:	f109 0901 	add.w	r9, r9, #1
 8015678:	4421      	add	r1, r4
 801567a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801567c:	4422      	add	r2, r4
 801567e:	e79c      	b.n	80155ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015680:	b007      	add	sp, #28
 8015682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015686 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015686:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801568a:	b085      	sub	sp, #20
 801568c:	468b      	mov	fp, r1
 801568e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015692:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015694:	9203      	str	r2, [sp, #12]
 8015696:	6861      	ldr	r1, [r4, #4]
 8015698:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801569c:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80156a0:	fb01 2000 	mla	r0, r1, r0, r2
 80156a4:	6822      	ldr	r2, [r4, #0]
 80156a6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80156aa:	f8d8 2000 	ldr.w	r2, [r8]
 80156ae:	9200      	str	r2, [sp, #0]
 80156b0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80156b4:	9201      	str	r2, [sp, #4]
 80156b6:	f1bb 0f00 	cmp.w	fp, #0
 80156ba:	dc03      	bgt.n	80156c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80156bc:	9a03      	ldr	r2, [sp, #12]
 80156be:	2a00      	cmp	r2, #0
 80156c0:	f340 8146 	ble.w	8015950 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80156c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80156c6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80156ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80156ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80156d0:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80156d4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80156d8:	2b00      	cmp	r3, #0
 80156da:	dd0e      	ble.n	80156fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80156dc:	140c      	asrs	r4, r1, #16
 80156de:	d405      	bmi.n	80156ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80156e0:	42bc      	cmp	r4, r7
 80156e2:	da03      	bge.n	80156ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80156e4:	1414      	asrs	r4, r2, #16
 80156e6:	d401      	bmi.n	80156ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80156e8:	42b4      	cmp	r4, r6
 80156ea:	db07      	blt.n	80156fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80156ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80156ee:	3b01      	subs	r3, #1
 80156f0:	3002      	adds	r0, #2
 80156f2:	4421      	add	r1, r4
 80156f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80156f6:	4422      	add	r2, r4
 80156f8:	e7ee      	b.n	80156d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80156fa:	d017      	beq.n	801572c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80156fc:	1e5c      	subs	r4, r3, #1
 80156fe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015700:	fb05 1504 	mla	r5, r5, r4, r1
 8015704:	142d      	asrs	r5, r5, #16
 8015706:	d409      	bmi.n	801571c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015708:	42bd      	cmp	r5, r7
 801570a:	da07      	bge.n	801571c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801570c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801570e:	fb05 2404 	mla	r4, r5, r4, r2
 8015712:	1424      	asrs	r4, r4, #16
 8015714:	d402      	bmi.n	801571c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015716:	42b4      	cmp	r4, r6
 8015718:	f2c0 80b3 	blt.w	8015882 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801571c:	2600      	movs	r6, #0
 801571e:	199c      	adds	r4, r3, r6
 8015720:	2c00      	cmp	r4, #0
 8015722:	dc3e      	bgt.n	80157a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015724:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015728:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801572c:	f1bb 0f00 	cmp.w	fp, #0
 8015730:	f340 810e 	ble.w	8015950 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015734:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015738:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801573a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801573e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015742:	eeb0 6a62 	vmov.f32	s12, s5
 8015746:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801574a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801574e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015752:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015756:	eeb0 6a43 	vmov.f32	s12, s6
 801575a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801575e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015762:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015766:	ee61 7a27 	vmul.f32	s15, s2, s15
 801576a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801576e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015772:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015776:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801577a:	ee12 2a90 	vmov	r2, s5
 801577e:	eef0 2a47 	vmov.f32	s5, s14
 8015782:	fb92 f3f3 	sdiv	r3, r2, r3
 8015786:	ee13 2a10 	vmov	r2, s6
 801578a:	9311      	str	r3, [sp, #68]	; 0x44
 801578c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801578e:	eeb0 3a67 	vmov.f32	s6, s15
 8015792:	fb92 f3f3 	sdiv	r3, r2, r3
 8015796:	9a03      	ldr	r2, [sp, #12]
 8015798:	9312      	str	r3, [sp, #72]	; 0x48
 801579a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801579c:	bf08      	it	eq
 801579e:	4613      	moveq	r3, r2
 80157a0:	e789      	b.n	80156b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80157a2:	140f      	asrs	r7, r1, #16
 80157a4:	d418      	bmi.n	80157d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80157a6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80157aa:	42bd      	cmp	r5, r7
 80157ac:	dd14      	ble.n	80157d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80157ae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80157b2:	d411      	bmi.n	80157d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80157b4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80157b8:	4564      	cmp	r4, ip
 80157ba:	dd0d      	ble.n	80157d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80157bc:	b22d      	sxth	r5, r5
 80157be:	9c01      	ldr	r4, [sp, #4]
 80157c0:	fb0c 7505 	mla	r5, ip, r5, r7
 80157c4:	5d64      	ldrb	r4, [r4, r5]
 80157c6:	2cff      	cmp	r4, #255	; 0xff
 80157c8:	d10c      	bne.n	80157e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80157ca:	9c00      	ldr	r4, [sp, #0]
 80157cc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80157d0:	f06f 0401 	mvn.w	r4, #1
 80157d4:	4374      	muls	r4, r6
 80157d6:	5305      	strh	r5, [r0, r4]
 80157d8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80157da:	3e01      	subs	r6, #1
 80157dc:	4421      	add	r1, r4
 80157de:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80157e0:	4422      	add	r2, r4
 80157e2:	e79c      	b.n	801571e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80157e4:	2c00      	cmp	r4, #0
 80157e6:	d0f7      	beq.n	80157d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80157e8:	9f00      	ldr	r7, [sp, #0]
 80157ea:	fa1f fc84 	uxth.w	ip, r4
 80157ee:	43e4      	mvns	r4, r4
 80157f0:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80157f4:	f06f 0501 	mvn.w	r5, #1
 80157f8:	b2e4      	uxtb	r4, r4
 80157fa:	4375      	muls	r5, r6
 80157fc:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015800:	9502      	str	r5, [sp, #8]
 8015802:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015806:	5b45      	ldrh	r5, [r0, r5]
 8015808:	122f      	asrs	r7, r5, #8
 801580a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801580e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015812:	00ed      	lsls	r5, r5, #3
 8015814:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015818:	fb17 f704 	smulbb	r7, r7, r4
 801581c:	b2ed      	uxtb	r5, r5
 801581e:	fb1a fa04 	smulbb	sl, sl, r4
 8015822:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015826:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801582a:	fb15 f504 	smulbb	r5, r5, r4
 801582e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015832:	fa1f fe8e 	uxth.w	lr, lr
 8015836:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801583a:	fa5f f989 	uxtb.w	r9, r9
 801583e:	fb07 a70c 	mla	r7, r7, ip, sl
 8015842:	f10e 0401 	add.w	r4, lr, #1
 8015846:	fb09 550c 	mla	r5, r9, ip, r5
 801584a:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801584e:	9c02      	ldr	r4, [sp, #8]
 8015850:	b2ad      	uxth	r5, r5
 8015852:	b2bf      	uxth	r7, r7
 8015854:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015858:	f105 0a01 	add.w	sl, r5, #1
 801585c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015860:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015864:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015868:	f107 0a01 	add.w	sl, r7, #1
 801586c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015870:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015874:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015878:	ea4e 0e0a 	orr.w	lr, lr, sl
 801587c:	f820 e004 	strh.w	lr, [r0, r4]
 8015880:	e7aa      	b.n	80157d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015882:	f04f 0900 	mov.w	r9, #0
 8015886:	eba3 0409 	sub.w	r4, r3, r9
 801588a:	2c00      	cmp	r4, #0
 801588c:	f77f af4a 	ble.w	8015724 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015890:	1414      	asrs	r4, r2, #16
 8015892:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015896:	140d      	asrs	r5, r1, #16
 8015898:	fb06 5504 	mla	r5, r6, r4, r5
 801589c:	9c01      	ldr	r4, [sp, #4]
 801589e:	5d64      	ldrb	r4, [r4, r5]
 80158a0:	2cff      	cmp	r4, #255	; 0xff
 80158a2:	d10b      	bne.n	80158bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80158a4:	9c00      	ldr	r4, [sp, #0]
 80158a6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80158aa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80158ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80158b0:	f109 0901 	add.w	r9, r9, #1
 80158b4:	4421      	add	r1, r4
 80158b6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80158b8:	4422      	add	r2, r4
 80158ba:	e7e4      	b.n	8015886 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80158bc:	2c00      	cmp	r4, #0
 80158be:	d0f6      	beq.n	80158ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80158c0:	9e00      	ldr	r6, [sp, #0]
 80158c2:	b2a7      	uxth	r7, r4
 80158c4:	43e4      	mvns	r4, r4
 80158c6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80158ca:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80158ce:	b2e4      	uxtb	r4, r4
 80158d0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80158d4:	122e      	asrs	r6, r5, #8
 80158d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80158da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80158de:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80158e2:	00ed      	lsls	r5, r5, #3
 80158e4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80158e8:	fb16 f604 	smulbb	r6, r6, r4
 80158ec:	b2ed      	uxtb	r5, r5
 80158ee:	fb1a fa04 	smulbb	sl, sl, r4
 80158f2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80158f6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80158fa:	fb15 f504 	smulbb	r5, r5, r4
 80158fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015902:	fa1f fc8c 	uxth.w	ip, ip
 8015906:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801590a:	fa5f fe8e 	uxtb.w	lr, lr
 801590e:	fb06 a607 	mla	r6, r6, r7, sl
 8015912:	f10c 0401 	add.w	r4, ip, #1
 8015916:	fb0e 5507 	mla	r5, lr, r7, r5
 801591a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801591e:	b2ad      	uxth	r5, r5
 8015920:	b2b6      	uxth	r6, r6
 8015922:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015926:	f105 0a01 	add.w	sl, r5, #1
 801592a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801592e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015932:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015936:	f106 0a01 	add.w	sl, r6, #1
 801593a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801593e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015942:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015946:	ea4c 0c0a 	orr.w	ip, ip, sl
 801594a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801594e:	e7ae      	b.n	80158ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015950:	b005      	add	sp, #20
 8015952:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015956 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015956:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801595a:	b085      	sub	sp, #20
 801595c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801595e:	9203      	str	r2, [sp, #12]
 8015960:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015964:	9100      	str	r1, [sp, #0]
 8015966:	9201      	str	r2, [sp, #4]
 8015968:	6841      	ldr	r1, [r0, #4]
 801596a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801596e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015972:	fb01 2404 	mla	r4, r1, r4, r2
 8015976:	6802      	ldr	r2, [r0, #0]
 8015978:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801597c:	f8de 2000 	ldr.w	r2, [lr]
 8015980:	9202      	str	r2, [sp, #8]
 8015982:	9a01      	ldr	r2, [sp, #4]
 8015984:	43d6      	mvns	r6, r2
 8015986:	b2f6      	uxtb	r6, r6
 8015988:	9a00      	ldr	r2, [sp, #0]
 801598a:	2a00      	cmp	r2, #0
 801598c:	dc03      	bgt.n	8015996 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801598e:	9a03      	ldr	r2, [sp, #12]
 8015990:	2a00      	cmp	r2, #0
 8015992:	f340 8124 	ble.w	8015bde <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015996:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015998:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801599c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80159a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80159a2:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80159a6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80159aa:	2b00      	cmp	r3, #0
 80159ac:	dd0e      	ble.n	80159cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80159ae:	1408      	asrs	r0, r1, #16
 80159b0:	d405      	bmi.n	80159be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80159b2:	4560      	cmp	r0, ip
 80159b4:	da03      	bge.n	80159be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80159b6:	1410      	asrs	r0, r2, #16
 80159b8:	d401      	bmi.n	80159be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80159ba:	42b8      	cmp	r0, r7
 80159bc:	db07      	blt.n	80159ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80159be:	9811      	ldr	r0, [sp, #68]	; 0x44
 80159c0:	3b01      	subs	r3, #1
 80159c2:	3402      	adds	r4, #2
 80159c4:	4401      	add	r1, r0
 80159c6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80159c8:	4402      	add	r2, r0
 80159ca:	e7ee      	b.n	80159aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80159cc:	d06e      	beq.n	8015aac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80159ce:	1e58      	subs	r0, r3, #1
 80159d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80159d2:	fb05 1500 	mla	r5, r5, r0, r1
 80159d6:	142d      	asrs	r5, r5, #16
 80159d8:	d45c      	bmi.n	8015a94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80159da:	4565      	cmp	r5, ip
 80159dc:	da5a      	bge.n	8015a94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80159de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80159e0:	fb05 2000 	mla	r0, r5, r0, r2
 80159e4:	1400      	asrs	r0, r0, #16
 80159e6:	d455      	bmi.n	8015a94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80159e8:	42b8      	cmp	r0, r7
 80159ea:	da53      	bge.n	8015a94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80159ec:	4699      	mov	r9, r3
 80159ee:	46a2      	mov	sl, r4
 80159f0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80159f4:	f1b9 0f00 	cmp.w	r9, #0
 80159f8:	dd54      	ble.n	8015aa4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80159fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80159fe:	140d      	asrs	r5, r1, #16
 8015a00:	1410      	asrs	r0, r2, #16
 8015a02:	f109 39ff 	add.w	r9, r9, #4294967295
 8015a06:	fb07 5000 	mla	r0, r7, r0, r5
 8015a0a:	9d02      	ldr	r5, [sp, #8]
 8015a0c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015a10:	f8ba 5000 	ldrh.w	r5, [sl]
 8015a14:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015a18:	122f      	asrs	r7, r5, #8
 8015a1a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015a1e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015a26:	00ed      	lsls	r5, r5, #3
 8015a28:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015a2c:	fb17 f706 	smulbb	r7, r7, r6
 8015a30:	b2ed      	uxtb	r5, r5
 8015a32:	fb18 f806 	smulbb	r8, r8, r6
 8015a36:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015a3a:	10c7      	asrs	r7, r0, #3
 8015a3c:	fb15 f506 	smulbb	r5, r5, r6
 8015a40:	00c0      	lsls	r0, r0, #3
 8015a42:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015a46:	fa1f fc8c 	uxth.w	ip, ip
 8015a4a:	b2c0      	uxtb	r0, r0
 8015a4c:	fb07 870b 	mla	r7, r7, fp, r8
 8015a50:	fb00 500b 	mla	r0, r0, fp, r5
 8015a54:	f10c 0501 	add.w	r5, ip, #1
 8015a58:	b2bf      	uxth	r7, r7
 8015a5a:	b280      	uxth	r0, r0
 8015a5c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015a60:	f107 0801 	add.w	r8, r7, #1
 8015a64:	1c45      	adds	r5, r0, #1
 8015a66:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015a6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015a6e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015a72:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015a74:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015a78:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015a7c:	4401      	add	r1, r0
 8015a7e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015a82:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015a84:	ea45 0c0c 	orr.w	ip, r5, ip
 8015a88:	4402      	add	r2, r0
 8015a8a:	ea4c 0c08 	orr.w	ip, ip, r8
 8015a8e:	f82a cb02 	strh.w	ip, [sl], #2
 8015a92:	e7af      	b.n	80159f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015a94:	f04f 0800 	mov.w	r8, #0
 8015a98:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015a9c:	eb03 0008 	add.w	r0, r3, r8
 8015aa0:	2800      	cmp	r0, #0
 8015aa2:	dc41      	bgt.n	8015b28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015aa4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015aa8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015aac:	9b00      	ldr	r3, [sp, #0]
 8015aae:	2b00      	cmp	r3, #0
 8015ab0:	f340 8095 	ble.w	8015bde <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015ab4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015ab8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015aba:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015abe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ac2:	eef0 6a62 	vmov.f32	s13, s5
 8015ac6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015aca:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ace:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ad2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015ad6:	eef0 6a43 	vmov.f32	s13, s6
 8015ada:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ade:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015ae2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ae6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015aea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015aee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015af2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015af6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015afa:	ee12 2a90 	vmov	r2, s5
 8015afe:	eef0 2a47 	vmov.f32	s5, s14
 8015b02:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b06:	ee13 2a10 	vmov	r2, s6
 8015b0a:	9311      	str	r3, [sp, #68]	; 0x44
 8015b0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b0e:	eeb0 3a67 	vmov.f32	s6, s15
 8015b12:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b16:	9312      	str	r3, [sp, #72]	; 0x48
 8015b18:	9b00      	ldr	r3, [sp, #0]
 8015b1a:	9a03      	ldr	r2, [sp, #12]
 8015b1c:	3b01      	subs	r3, #1
 8015b1e:	9300      	str	r3, [sp, #0]
 8015b20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b22:	bf08      	it	eq
 8015b24:	4613      	moveq	r3, r2
 8015b26:	e72f      	b.n	8015988 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015b28:	140f      	asrs	r7, r1, #16
 8015b2a:	d451      	bmi.n	8015bd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015b2c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015b30:	42bd      	cmp	r5, r7
 8015b32:	dd4d      	ble.n	8015bd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015b34:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015b38:	d44a      	bmi.n	8015bd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015b3a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015b3e:	4560      	cmp	r0, ip
 8015b40:	dd46      	ble.n	8015bd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015b42:	b22d      	sxth	r5, r5
 8015b44:	9802      	ldr	r0, [sp, #8]
 8015b46:	fb0c 7505 	mla	r5, ip, r5, r7
 8015b4a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015b4e:	f06f 0501 	mvn.w	r5, #1
 8015b52:	fb05 fb08 	mul.w	fp, r5, r8
 8015b56:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015b5a:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015b5e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b62:	122f      	asrs	r7, r5, #8
 8015b64:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015b68:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015b6c:	00ed      	lsls	r5, r5, #3
 8015b6e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015b72:	fb17 f706 	smulbb	r7, r7, r6
 8015b76:	b2ed      	uxtb	r5, r5
 8015b78:	fb19 f906 	smulbb	r9, r9, r6
 8015b7c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015b80:	10c7      	asrs	r7, r0, #3
 8015b82:	fb15 f506 	smulbb	r5, r5, r6
 8015b86:	00c0      	lsls	r0, r0, #3
 8015b88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015b8c:	fa1f fc8c 	uxth.w	ip, ip
 8015b90:	b2c0      	uxtb	r0, r0
 8015b92:	fb07 970a 	mla	r7, r7, sl, r9
 8015b96:	fb00 500a 	mla	r0, r0, sl, r5
 8015b9a:	f10c 0501 	add.w	r5, ip, #1
 8015b9e:	b2bf      	uxth	r7, r7
 8015ba0:	b280      	uxth	r0, r0
 8015ba2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015ba6:	f107 0901 	add.w	r9, r7, #1
 8015baa:	1c45      	adds	r5, r0, #1
 8015bac:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015bb0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015bb4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015bb8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015bbc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015bc0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015bc4:	ea45 0c0c 	orr.w	ip, r5, ip
 8015bc8:	ea4c 0c09 	orr.w	ip, ip, r9
 8015bcc:	f824 c00b 	strh.w	ip, [r4, fp]
 8015bd0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015bd2:	f108 38ff 	add.w	r8, r8, #4294967295
 8015bd6:	4401      	add	r1, r0
 8015bd8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015bda:	4402      	add	r2, r0
 8015bdc:	e75e      	b.n	8015a9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015bde:	b005      	add	sp, #20
 8015be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015be4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015be8:	b085      	sub	sp, #20
 8015bea:	4693      	mov	fp, r2
 8015bec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015bf0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015bf2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015bf4:	6870      	ldr	r0, [r6, #4]
 8015bf6:	9101      	str	r1, [sp, #4]
 8015bf8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015bfc:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8015c00:	fb00 2404 	mla	r4, r0, r4, r2
 8015c04:	6832      	ldr	r2, [r6, #0]
 8015c06:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015c0a:	682a      	ldr	r2, [r5, #0]
 8015c0c:	9202      	str	r2, [sp, #8]
 8015c0e:	9a01      	ldr	r2, [sp, #4]
 8015c10:	2a00      	cmp	r2, #0
 8015c12:	dc03      	bgt.n	8015c1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015c14:	f1bb 0f00 	cmp.w	fp, #0
 8015c18:	f340 809a 	ble.w	8015d50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015c1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015c1e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015c22:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015c26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015c28:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015c2c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015c30:	2b00      	cmp	r3, #0
 8015c32:	dd0c      	ble.n	8015c4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015c34:	1406      	asrs	r6, r0, #16
 8015c36:	d405      	bmi.n	8015c44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015c38:	454e      	cmp	r6, r9
 8015c3a:	da03      	bge.n	8015c44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015c3c:	1416      	asrs	r6, r2, #16
 8015c3e:	d401      	bmi.n	8015c44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015c40:	4546      	cmp	r6, r8
 8015c42:	db05      	blt.n	8015c50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015c44:	4470      	add	r0, lr
 8015c46:	4462      	add	r2, ip
 8015c48:	3b01      	subs	r3, #1
 8015c4a:	3402      	adds	r4, #2
 8015c4c:	e7f0      	b.n	8015c30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015c4e:	d00f      	beq.n	8015c70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015c50:	1e5e      	subs	r6, r3, #1
 8015c52:	fb0e 0706 	mla	r7, lr, r6, r0
 8015c56:	143f      	asrs	r7, r7, #16
 8015c58:	d541      	bpl.n	8015cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8015c5a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8015c5e:	4698      	mov	r8, r3
 8015c60:	9603      	str	r6, [sp, #12]
 8015c62:	f1b8 0f00 	cmp.w	r8, #0
 8015c66:	dc56      	bgt.n	8015d16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8015c68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015c70:	9b01      	ldr	r3, [sp, #4]
 8015c72:	2b00      	cmp	r3, #0
 8015c74:	dd6c      	ble.n	8015d50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015c76:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015c7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015c80:	eeb0 6a62 	vmov.f32	s12, s5
 8015c84:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015c88:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015c8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c90:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015c94:	eeb0 6a43 	vmov.f32	s12, s6
 8015c98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c9c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015ca0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ca4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ca8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015cac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015cb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015cb4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015cb8:	ee12 2a90 	vmov	r2, s5
 8015cbc:	eef0 2a47 	vmov.f32	s5, s14
 8015cc0:	fb92 fef3 	sdiv	lr, r2, r3
 8015cc4:	ee13 2a10 	vmov	r2, s6
 8015cc8:	eeb0 3a67 	vmov.f32	s6, s15
 8015ccc:	fb92 fcf3 	sdiv	ip, r2, r3
 8015cd0:	9b01      	ldr	r3, [sp, #4]
 8015cd2:	3b01      	subs	r3, #1
 8015cd4:	9301      	str	r3, [sp, #4]
 8015cd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cd8:	bf08      	it	eq
 8015cda:	465b      	moveq	r3, fp
 8015cdc:	e797      	b.n	8015c0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015cde:	454f      	cmp	r7, r9
 8015ce0:	dabb      	bge.n	8015c5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015ce2:	fb0c 2606 	mla	r6, ip, r6, r2
 8015ce6:	1436      	asrs	r6, r6, #16
 8015ce8:	d4b7      	bmi.n	8015c5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015cea:	4546      	cmp	r6, r8
 8015cec:	dab5      	bge.n	8015c5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015cee:	461e      	mov	r6, r3
 8015cf0:	46a0      	mov	r8, r4
 8015cf2:	2e00      	cmp	r6, #0
 8015cf4:	ddb8      	ble.n	8015c68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015cf6:	1417      	asrs	r7, r2, #16
 8015cf8:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015cfc:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015d00:	9902      	ldr	r1, [sp, #8]
 8015d02:	4470      	add	r0, lr
 8015d04:	4462      	add	r2, ip
 8015d06:	fb0a 9707 	mla	r7, sl, r7, r9
 8015d0a:	3e01      	subs	r6, #1
 8015d0c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015d10:	f828 7b02 	strh.w	r7, [r8], #2
 8015d14:	e7ed      	b.n	8015cf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8015d16:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015d1a:	d414      	bmi.n	8015d46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015d1c:	68ae      	ldr	r6, [r5, #8]
 8015d1e:	454e      	cmp	r6, r9
 8015d20:	dd11      	ble.n	8015d46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015d22:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015d26:	d40e      	bmi.n	8015d46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015d28:	68ef      	ldr	r7, [r5, #12]
 8015d2a:	4557      	cmp	r7, sl
 8015d2c:	dd0b      	ble.n	8015d46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015d2e:	b236      	sxth	r6, r6
 8015d30:	f06f 0101 	mvn.w	r1, #1
 8015d34:	9f02      	ldr	r7, [sp, #8]
 8015d36:	fb0a 9606 	mla	r6, sl, r6, r9
 8015d3a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015d3e:	fb01 f608 	mul.w	r6, r1, r8
 8015d42:	9903      	ldr	r1, [sp, #12]
 8015d44:	538f      	strh	r7, [r1, r6]
 8015d46:	4470      	add	r0, lr
 8015d48:	4462      	add	r2, ip
 8015d4a:	f108 38ff 	add.w	r8, r8, #4294967295
 8015d4e:	e788      	b.n	8015c62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015d50:	b005      	add	sp, #20
 8015d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015d56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d5a:	b087      	sub	sp, #28
 8015d5c:	468b      	mov	fp, r1
 8015d5e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015d62:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015d64:	9203      	str	r2, [sp, #12]
 8015d66:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015d6a:	6841      	ldr	r1, [r0, #4]
 8015d6c:	9204      	str	r2, [sp, #16]
 8015d6e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8015d72:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8015d76:	fb01 2505 	mla	r5, r1, r5, r2
 8015d7a:	6802      	ldr	r2, [r0, #0]
 8015d7c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015d80:	f8d9 2000 	ldr.w	r2, [r9]
 8015d84:	9201      	str	r2, [sp, #4]
 8015d86:	f1bb 0f00 	cmp.w	fp, #0
 8015d8a:	dc03      	bgt.n	8015d94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015d8c:	9a03      	ldr	r2, [sp, #12]
 8015d8e:	2a00      	cmp	r2, #0
 8015d90:	f340 8158 	ble.w	8016044 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8015d94:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015d96:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015d9a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015d9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015da0:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015da4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015da8:	2b00      	cmp	r3, #0
 8015daa:	dd0e      	ble.n	8015dca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015dac:	1402      	asrs	r2, r0, #16
 8015dae:	d405      	bmi.n	8015dbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015db0:	42ba      	cmp	r2, r7
 8015db2:	da03      	bge.n	8015dbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015db4:	140a      	asrs	r2, r1, #16
 8015db6:	d401      	bmi.n	8015dbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015db8:	42b2      	cmp	r2, r6
 8015dba:	db07      	blt.n	8015dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015dbc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015dbe:	3b01      	subs	r3, #1
 8015dc0:	3502      	adds	r5, #2
 8015dc2:	4410      	add	r0, r2
 8015dc4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015dc6:	4411      	add	r1, r2
 8015dc8:	e7ee      	b.n	8015da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015dca:	d017      	beq.n	8015dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015dcc:	1e5a      	subs	r2, r3, #1
 8015dce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015dd0:	fb04 0402 	mla	r4, r4, r2, r0
 8015dd4:	1424      	asrs	r4, r4, #16
 8015dd6:	d409      	bmi.n	8015dec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015dd8:	42bc      	cmp	r4, r7
 8015dda:	da07      	bge.n	8015dec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015ddc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015dde:	fb04 1202 	mla	r2, r4, r2, r1
 8015de2:	1412      	asrs	r2, r2, #16
 8015de4:	d402      	bmi.n	8015dec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015de6:	42b2      	cmp	r2, r6
 8015de8:	f2c0 80bf 	blt.w	8015f6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015dec:	2700      	movs	r7, #0
 8015dee:	19da      	adds	r2, r3, r7
 8015df0:	2a00      	cmp	r2, #0
 8015df2:	dc3e      	bgt.n	8015e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015df4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015df8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015dfc:	f1bb 0f00 	cmp.w	fp, #0
 8015e00:	f340 8120 	ble.w	8016044 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8015e04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e0e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015e12:	eeb0 6a62 	vmov.f32	s12, s5
 8015e16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015e1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e22:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015e26:	eeb0 6a43 	vmov.f32	s12, s6
 8015e2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e2e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015e32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015e4a:	ee12 2a90 	vmov	r2, s5
 8015e4e:	eef0 2a47 	vmov.f32	s5, s14
 8015e52:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e56:	ee13 2a10 	vmov	r2, s6
 8015e5a:	9313      	str	r3, [sp, #76]	; 0x4c
 8015e5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e5e:	eeb0 3a67 	vmov.f32	s6, s15
 8015e62:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e66:	9a03      	ldr	r2, [sp, #12]
 8015e68:	9314      	str	r3, [sp, #80]	; 0x50
 8015e6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e6c:	bf08      	it	eq
 8015e6e:	4613      	moveq	r3, r2
 8015e70:	e789      	b.n	8015d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015e72:	1406      	asrs	r6, r0, #16
 8015e74:	d42d      	bmi.n	8015ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015e76:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8015e7a:	42b4      	cmp	r4, r6
 8015e7c:	dd29      	ble.n	8015ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015e7e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8015e82:	d426      	bmi.n	8015ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015e84:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015e88:	4562      	cmp	r2, ip
 8015e8a:	dd22      	ble.n	8015ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015e8c:	b224      	sxth	r4, r4
 8015e8e:	9a01      	ldr	r2, [sp, #4]
 8015e90:	fb0c 6404 	mla	r4, ip, r4, r6
 8015e94:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8015e98:	0e22      	lsrs	r2, r4, #24
 8015e9a:	d01a      	beq.n	8015ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015e9c:	9e04      	ldr	r6, [sp, #16]
 8015e9e:	4372      	muls	r2, r6
 8015ea0:	1c56      	adds	r6, r2, #1
 8015ea2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015ea6:	0a26      	lsrs	r6, r4, #8
 8015ea8:	1212      	asrs	r2, r2, #8
 8015eaa:	9605      	str	r6, [sp, #20]
 8015eac:	2aff      	cmp	r2, #255	; 0xff
 8015eae:	d116      	bne.n	8015ede <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8015eb0:	f06f 0201 	mvn.w	r2, #1
 8015eb4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015eb8:	fb02 fc07 	mul.w	ip, r2, r7
 8015ebc:	0962      	lsrs	r2, r4, #5
 8015ebe:	f026 0607 	bic.w	r6, r6, #7
 8015ec2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015ec6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015eca:	4316      	orrs	r6, r2
 8015ecc:	4326      	orrs	r6, r4
 8015ece:	f825 600c 	strh.w	r6, [r5, ip]
 8015ed2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015ed4:	3f01      	subs	r7, #1
 8015ed6:	4410      	add	r0, r2
 8015ed8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015eda:	4411      	add	r1, r2
 8015edc:	e787      	b.n	8015dee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015ede:	f06f 0601 	mvn.w	r6, #1
 8015ee2:	fa1f fa82 	uxth.w	sl, r2
 8015ee6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8015eea:	43d2      	mvns	r2, r2
 8015eec:	437e      	muls	r6, r7
 8015eee:	b2e4      	uxtb	r4, r4
 8015ef0:	fb1c fc0a 	smulbb	ip, ip, sl
 8015ef4:	b2d2      	uxtb	r2, r2
 8015ef6:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015efa:	fb14 f40a 	smulbb	r4, r4, sl
 8015efe:	9602      	str	r6, [sp, #8]
 8015f00:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015f04:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015f08:	fb16 f60a 	smulbb	r6, r6, sl
 8015f0c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015f10:	fb0e ce02 	mla	lr, lr, r2, ip
 8015f14:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015f18:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015f1c:	fa1f fe8e 	uxth.w	lr, lr
 8015f20:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015f24:	fa5f f888 	uxtb.w	r8, r8
 8015f28:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015f2c:	fb08 4402 	mla	r4, r8, r2, r4
 8015f30:	f10e 0201 	add.w	r2, lr, #1
 8015f34:	fa1f fc8c 	uxth.w	ip, ip
 8015f38:	b2a4      	uxth	r4, r4
 8015f3a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015f3e:	9a02      	ldr	r2, [sp, #8]
 8015f40:	1c66      	adds	r6, r4, #1
 8015f42:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015f46:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015f4a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015f4e:	ea46 0e0e 	orr.w	lr, r6, lr
 8015f52:	f10c 0601 	add.w	r6, ip, #1
 8015f56:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015f5a:	0976      	lsrs	r6, r6, #5
 8015f5c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015f60:	ea4e 0e06 	orr.w	lr, lr, r6
 8015f64:	f825 e002 	strh.w	lr, [r5, r2]
 8015f68:	e7b3      	b.n	8015ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015f6a:	f04f 0800 	mov.w	r8, #0
 8015f6e:	eba3 0208 	sub.w	r2, r3, r8
 8015f72:	2a00      	cmp	r2, #0
 8015f74:	f77f af3e 	ble.w	8015df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015f78:	1404      	asrs	r4, r0, #16
 8015f7a:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8015f7e:	140a      	asrs	r2, r1, #16
 8015f80:	fb06 4202 	mla	r2, r6, r2, r4
 8015f84:	9c01      	ldr	r4, [sp, #4]
 8015f86:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8015f8a:	0e22      	lsrs	r2, r4, #24
 8015f8c:	d015      	beq.n	8015fba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8015f8e:	9e04      	ldr	r6, [sp, #16]
 8015f90:	4372      	muls	r2, r6
 8015f92:	1c56      	adds	r6, r2, #1
 8015f94:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015f98:	0a26      	lsrs	r6, r4, #8
 8015f9a:	1212      	asrs	r2, r2, #8
 8015f9c:	2aff      	cmp	r2, #255	; 0xff
 8015f9e:	d113      	bne.n	8015fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8015fa0:	0962      	lsrs	r2, r4, #5
 8015fa2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015fa6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015faa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015fae:	f026 0607 	bic.w	r6, r6, #7
 8015fb2:	4316      	orrs	r6, r2
 8015fb4:	4326      	orrs	r6, r4
 8015fb6:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8015fba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015fbc:	f108 0801 	add.w	r8, r8, #1
 8015fc0:	4410      	add	r0, r2
 8015fc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015fc4:	4411      	add	r1, r2
 8015fc6:	e7d2      	b.n	8015f6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8015fc8:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015fcc:	fa1f fa82 	uxth.w	sl, r2
 8015fd0:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015fd4:	43d2      	mvns	r2, r2
 8015fd6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015fda:	fb17 f70a 	smulbb	r7, r7, sl
 8015fde:	b2d2      	uxtb	r2, r2
 8015fe0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015fe4:	b2e4      	uxtb	r4, r4
 8015fe6:	b2f6      	uxtb	r6, r6
 8015fe8:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015fec:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015ff0:	fb14 f40a 	smulbb	r4, r4, sl
 8015ff4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015ff8:	fa1f fc8c 	uxth.w	ip, ip
 8015ffc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016000:	fb16 f60a 	smulbb	r6, r6, sl
 8016004:	fa5f fe8e 	uxtb.w	lr, lr
 8016008:	fb0e 4402 	mla	r4, lr, r2, r4
 801600c:	fb07 6702 	mla	r7, r7, r2, r6
 8016010:	f10c 0201 	add.w	r2, ip, #1
 8016014:	b2a4      	uxth	r4, r4
 8016016:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801601a:	1c66      	adds	r6, r4, #1
 801601c:	b2bf      	uxth	r7, r7
 801601e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016022:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016026:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801602a:	ea46 0c0c 	orr.w	ip, r6, ip
 801602e:	1c7e      	adds	r6, r7, #1
 8016030:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016034:	0976      	lsrs	r6, r6, #5
 8016036:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801603a:	ea4c 0c06 	orr.w	ip, ip, r6
 801603e:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016042:	e7ba      	b.n	8015fba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8016044:	b007      	add	sp, #28
 8016046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801604c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801604c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016050:	b085      	sub	sp, #20
 8016052:	468b      	mov	fp, r1
 8016054:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016058:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801605a:	9203      	str	r2, [sp, #12]
 801605c:	6841      	ldr	r1, [r0, #4]
 801605e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8016062:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016066:	fb01 2404 	mla	r4, r1, r4, r2
 801606a:	6802      	ldr	r2, [r0, #0]
 801606c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016070:	f8d8 2000 	ldr.w	r2, [r8]
 8016074:	9201      	str	r2, [sp, #4]
 8016076:	f1bb 0f00 	cmp.w	fp, #0
 801607a:	dc03      	bgt.n	8016084 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801607c:	9a03      	ldr	r2, [sp, #12]
 801607e:	2a00      	cmp	r2, #0
 8016080:	f340 814f 	ble.w	8016322 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016084:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016086:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801608a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801608e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016090:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8016094:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016098:	2b00      	cmp	r3, #0
 801609a:	dd0e      	ble.n	80160ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801609c:	1408      	asrs	r0, r1, #16
 801609e:	d405      	bmi.n	80160ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80160a0:	42b8      	cmp	r0, r7
 80160a2:	da03      	bge.n	80160ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80160a4:	1410      	asrs	r0, r2, #16
 80160a6:	d401      	bmi.n	80160ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80160a8:	42b0      	cmp	r0, r6
 80160aa:	db07      	blt.n	80160bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80160ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 80160ae:	3b01      	subs	r3, #1
 80160b0:	3402      	adds	r4, #2
 80160b2:	4401      	add	r1, r0
 80160b4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80160b6:	4402      	add	r2, r0
 80160b8:	e7ee      	b.n	8016098 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80160ba:	d017      	beq.n	80160ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80160bc:	1e58      	subs	r0, r3, #1
 80160be:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80160c0:	fb05 1500 	mla	r5, r5, r0, r1
 80160c4:	142d      	asrs	r5, r5, #16
 80160c6:	d409      	bmi.n	80160dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80160c8:	42bd      	cmp	r5, r7
 80160ca:	da07      	bge.n	80160dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80160cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80160ce:	fb05 2000 	mla	r0, r5, r0, r2
 80160d2:	1400      	asrs	r0, r0, #16
 80160d4:	d402      	bmi.n	80160dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80160d6:	42b0      	cmp	r0, r6
 80160d8:	f2c0 80ba 	blt.w	8016250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80160dc:	2600      	movs	r6, #0
 80160de:	1998      	adds	r0, r3, r6
 80160e0:	2800      	cmp	r0, #0
 80160e2:	dc3e      	bgt.n	8016162 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80160e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80160e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80160ec:	f1bb 0f00 	cmp.w	fp, #0
 80160f0:	f340 8117 	ble.w	8016322 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80160f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80160f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80160fe:	f1bb 0b01 	subs.w	fp, fp, #1
 8016102:	eeb0 6a62 	vmov.f32	s12, s5
 8016106:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801610a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801610e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016112:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016116:	eeb0 6a43 	vmov.f32	s12, s6
 801611a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801611e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016122:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016126:	ee61 7a27 	vmul.f32	s15, s2, s15
 801612a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801612e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016132:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016136:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801613a:	ee12 2a90 	vmov	r2, s5
 801613e:	eef0 2a47 	vmov.f32	s5, s14
 8016142:	fb92 f3f3 	sdiv	r3, r2, r3
 8016146:	ee13 2a10 	vmov	r2, s6
 801614a:	9311      	str	r3, [sp, #68]	; 0x44
 801614c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801614e:	eeb0 3a67 	vmov.f32	s6, s15
 8016152:	fb92 f3f3 	sdiv	r3, r2, r3
 8016156:	9a03      	ldr	r2, [sp, #12]
 8016158:	9312      	str	r3, [sp, #72]	; 0x48
 801615a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801615c:	bf08      	it	eq
 801615e:	4613      	moveq	r3, r2
 8016160:	e789      	b.n	8016076 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016162:	140f      	asrs	r7, r1, #16
 8016164:	d424      	bmi.n	80161b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016166:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801616a:	42bd      	cmp	r5, r7
 801616c:	dd20      	ble.n	80161b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801616e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016172:	d41d      	bmi.n	80161b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016174:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016178:	4560      	cmp	r0, ip
 801617a:	dd19      	ble.n	80161b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801617c:	b22d      	sxth	r5, r5
 801617e:	9801      	ldr	r0, [sp, #4]
 8016180:	fb0c 7505 	mla	r5, ip, r5, r7
 8016184:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8016188:	0e07      	lsrs	r7, r0, #24
 801618a:	2fff      	cmp	r7, #255	; 0xff
 801618c:	d116      	bne.n	80161bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801618e:	f06f 0501 	mvn.w	r5, #1
 8016192:	fb05 f706 	mul.w	r7, r5, r6
 8016196:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801619a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801619e:	0945      	lsrs	r5, r0, #5
 80161a0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80161a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80161a8:	ea4c 0505 	orr.w	r5, ip, r5
 80161ac:	4305      	orrs	r5, r0
 80161ae:	53e5      	strh	r5, [r4, r7]
 80161b0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80161b2:	3e01      	subs	r6, #1
 80161b4:	4401      	add	r1, r0
 80161b6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80161b8:	4402      	add	r2, r0
 80161ba:	e790      	b.n	80160de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80161bc:	b2fd      	uxtb	r5, r7
 80161be:	2f00      	cmp	r7, #0
 80161c0:	d0f6      	beq.n	80161b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80161c2:	f06f 0701 	mvn.w	r7, #1
 80161c6:	fa1f f985 	uxth.w	r9, r5
 80161ca:	43ed      	mvns	r5, r5
 80161cc:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80161d0:	4377      	muls	r7, r6
 80161d2:	fb1a fa09 	smulbb	sl, sl, r9
 80161d6:	b2ed      	uxtb	r5, r5
 80161d8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80161dc:	9702      	str	r7, [sp, #8]
 80161de:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80161e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80161e6:	fb17 f709 	smulbb	r7, r7, r9
 80161ea:	b2c0      	uxtb	r0, r0
 80161ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80161f0:	fb10 f009 	smulbb	r0, r0, r9
 80161f4:	fb0c 7c05 	mla	ip, ip, r5, r7
 80161f8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80161fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016200:	fa1f fc8c 	uxth.w	ip, ip
 8016204:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016208:	fa5f fe8e 	uxtb.w	lr, lr
 801620c:	fb07 a705 	mla	r7, r7, r5, sl
 8016210:	fb0e 0005 	mla	r0, lr, r5, r0
 8016214:	f10c 0501 	add.w	r5, ip, #1
 8016218:	b2bf      	uxth	r7, r7
 801621a:	b280      	uxth	r0, r0
 801621c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016220:	f100 0a01 	add.w	sl, r0, #1
 8016224:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016228:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801622c:	9802      	ldr	r0, [sp, #8]
 801622e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016232:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016236:	f107 0a01 	add.w	sl, r7, #1
 801623a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801623e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016242:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016246:	ea4c 0c0a 	orr.w	ip, ip, sl
 801624a:	f824 c000 	strh.w	ip, [r4, r0]
 801624e:	e7af      	b.n	80161b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016250:	f04f 0e00 	mov.w	lr, #0
 8016254:	eba3 000e 	sub.w	r0, r3, lr
 8016258:	2800      	cmp	r0, #0
 801625a:	f77f af43 	ble.w	80160e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801625e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016262:	140d      	asrs	r5, r1, #16
 8016264:	1410      	asrs	r0, r2, #16
 8016266:	fb06 5000 	mla	r0, r6, r0, r5
 801626a:	9d01      	ldr	r5, [sp, #4]
 801626c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016270:	0e2e      	lsrs	r6, r5, #24
 8016272:	2eff      	cmp	r6, #255	; 0xff
 8016274:	d112      	bne.n	801629c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016276:	482c      	ldr	r0, [pc, #176]	; (8016328 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016278:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801627c:	0968      	lsrs	r0, r5, #5
 801627e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016282:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016286:	4330      	orrs	r0, r6
 8016288:	4328      	orrs	r0, r5
 801628a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801628e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016290:	f10e 0e01 	add.w	lr, lr, #1
 8016294:	4401      	add	r1, r0
 8016296:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016298:	4402      	add	r2, r0
 801629a:	e7db      	b.n	8016254 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801629c:	b2f0      	uxtb	r0, r6
 801629e:	2e00      	cmp	r6, #0
 80162a0:	d0f5      	beq.n	801628e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80162a2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80162a6:	fa1f f980 	uxth.w	r9, r0
 80162aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80162ae:	43c0      	mvns	r0, r0
 80162b0:	ea4f 272c 	mov.w	r7, ip, asr #8
 80162b4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80162b8:	fb16 f609 	smulbb	r6, r6, r9
 80162bc:	b2c0      	uxtb	r0, r0
 80162be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80162c2:	b2ed      	uxtb	r5, r5
 80162c4:	fb1a fa09 	smulbb	sl, sl, r9
 80162c8:	fb07 6700 	mla	r7, r7, r0, r6
 80162cc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80162d0:	fb15 f509 	smulbb	r5, r5, r9
 80162d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80162d8:	b2bf      	uxth	r7, r7
 80162da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80162de:	fa5f fc8c 	uxtb.w	ip, ip
 80162e2:	fb06 a600 	mla	r6, r6, r0, sl
 80162e6:	fb0c 5500 	mla	r5, ip, r0, r5
 80162ea:	1c78      	adds	r0, r7, #1
 80162ec:	b2b6      	uxth	r6, r6
 80162ee:	b2ad      	uxth	r5, r5
 80162f0:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80162f4:	f105 0a01 	add.w	sl, r5, #1
 80162f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80162fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016300:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016304:	ea4a 0707 	orr.w	r7, sl, r7
 8016308:	f106 0a01 	add.w	sl, r6, #1
 801630c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016310:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016314:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016318:	ea47 070a 	orr.w	r7, r7, sl
 801631c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016320:	e7b5      	b.n	801628e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016322:	b005      	add	sp, #20
 8016324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016328:	fffff800 	.word	0xfffff800

0801632c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801632c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016330:	b087      	sub	sp, #28
 8016332:	468b      	mov	fp, r1
 8016334:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016338:	9815      	ldr	r0, [sp, #84]	; 0x54
 801633a:	9203      	str	r2, [sp, #12]
 801633c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016340:	6841      	ldr	r1, [r0, #4]
 8016342:	9204      	str	r2, [sp, #16]
 8016344:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016348:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801634c:	fb01 2404 	mla	r4, r1, r4, r2
 8016350:	6802      	ldr	r2, [r0, #0]
 8016352:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016356:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801635a:	3201      	adds	r2, #1
 801635c:	f022 0201 	bic.w	r2, r2, #1
 8016360:	9200      	str	r2, [sp, #0]
 8016362:	f8d9 2000 	ldr.w	r2, [r9]
 8016366:	9201      	str	r2, [sp, #4]
 8016368:	f1bb 0f00 	cmp.w	fp, #0
 801636c:	dc03      	bgt.n	8016376 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801636e:	9a03      	ldr	r2, [sp, #12]
 8016370:	2a00      	cmp	r2, #0
 8016372:	f340 816a 	ble.w	801664a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8016376:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016378:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801637c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016380:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016382:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016386:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801638a:	2b00      	cmp	r3, #0
 801638c:	dd0e      	ble.n	80163ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801638e:	1402      	asrs	r2, r0, #16
 8016390:	d405      	bmi.n	801639e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016392:	42ba      	cmp	r2, r7
 8016394:	da03      	bge.n	801639e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016396:	140a      	asrs	r2, r1, #16
 8016398:	d401      	bmi.n	801639e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801639a:	42b2      	cmp	r2, r6
 801639c:	db07      	blt.n	80163ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801639e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80163a0:	3b01      	subs	r3, #1
 80163a2:	3402      	adds	r4, #2
 80163a4:	4410      	add	r0, r2
 80163a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80163a8:	4411      	add	r1, r2
 80163aa:	e7ee      	b.n	801638a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80163ac:	d017      	beq.n	80163de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80163ae:	1e5a      	subs	r2, r3, #1
 80163b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80163b2:	fb05 0502 	mla	r5, r5, r2, r0
 80163b6:	142d      	asrs	r5, r5, #16
 80163b8:	d409      	bmi.n	80163ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80163ba:	42bd      	cmp	r5, r7
 80163bc:	da07      	bge.n	80163ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80163be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80163c0:	fb05 1202 	mla	r2, r5, r2, r1
 80163c4:	1412      	asrs	r2, r2, #16
 80163c6:	d402      	bmi.n	80163ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80163c8:	42b2      	cmp	r2, r6
 80163ca:	f2c0 80c8 	blt.w	801655e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80163ce:	2700      	movs	r7, #0
 80163d0:	19da      	adds	r2, r3, r7
 80163d2:	2a00      	cmp	r2, #0
 80163d4:	dc3e      	bgt.n	8016454 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80163d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80163da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80163de:	f1bb 0f00 	cmp.w	fp, #0
 80163e2:	f340 8132 	ble.w	801664a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80163e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80163ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80163ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80163f0:	f1bb 0b01 	subs.w	fp, fp, #1
 80163f4:	eeb0 6a62 	vmov.f32	s12, s5
 80163f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80163fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016400:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016404:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016408:	eeb0 6a43 	vmov.f32	s12, s6
 801640c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016410:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016414:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016418:	ee61 7a27 	vmul.f32	s15, s2, s15
 801641c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016420:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016424:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016428:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801642c:	ee12 2a90 	vmov	r2, s5
 8016430:	eef0 2a47 	vmov.f32	s5, s14
 8016434:	fb92 f3f3 	sdiv	r3, r2, r3
 8016438:	ee13 2a10 	vmov	r2, s6
 801643c:	9313      	str	r3, [sp, #76]	; 0x4c
 801643e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016440:	eeb0 3a67 	vmov.f32	s6, s15
 8016444:	fb92 f3f3 	sdiv	r3, r2, r3
 8016448:	9a03      	ldr	r2, [sp, #12]
 801644a:	9314      	str	r3, [sp, #80]	; 0x50
 801644c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801644e:	bf08      	it	eq
 8016450:	4613      	moveq	r3, r2
 8016452:	e789      	b.n	8016368 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016454:	1405      	asrs	r5, r0, #16
 8016456:	d436      	bmi.n	80164c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8016458:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801645c:	42aa      	cmp	r2, r5
 801645e:	dd32      	ble.n	80164c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8016460:	140e      	asrs	r6, r1, #16
 8016462:	d430      	bmi.n	80164c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8016464:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016468:	42b2      	cmp	r2, r6
 801646a:	dd2c      	ble.n	80164c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801646c:	9a00      	ldr	r2, [sp, #0]
 801646e:	fb06 5502 	mla	r5, r6, r2, r5
 8016472:	9e01      	ldr	r6, [sp, #4]
 8016474:	086a      	lsrs	r2, r5, #1
 8016476:	5cb2      	ldrb	r2, [r6, r2]
 8016478:	07ee      	lsls	r6, r5, #31
 801647a:	bf54      	ite	pl
 801647c:	f002 020f 	andpl.w	r2, r2, #15
 8016480:	1112      	asrmi	r2, r2, #4
 8016482:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016486:	b2d2      	uxtb	r2, r2
 8016488:	b1ea      	cbz	r2, 80164c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801648a:	9d04      	ldr	r5, [sp, #16]
 801648c:	436a      	muls	r2, r5
 801648e:	1c55      	adds	r5, r2, #1
 8016490:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016494:	4d6e      	ldr	r5, [pc, #440]	; (8016650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016496:	1212      	asrs	r2, r2, #8
 8016498:	682d      	ldr	r5, [r5, #0]
 801649a:	2aff      	cmp	r2, #255	; 0xff
 801649c:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80164a0:	9605      	str	r6, [sp, #20]
 80164a2:	d116      	bne.n	80164d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80164a4:	f06f 0201 	mvn.w	r2, #1
 80164a8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80164ac:	fb02 fc07 	mul.w	ip, r2, r7
 80164b0:	096a      	lsrs	r2, r5, #5
 80164b2:	f026 0607 	bic.w	r6, r6, #7
 80164b6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80164ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80164be:	4316      	orrs	r6, r2
 80164c0:	432e      	orrs	r6, r5
 80164c2:	f824 600c 	strh.w	r6, [r4, ip]
 80164c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80164c8:	3f01      	subs	r7, #1
 80164ca:	4410      	add	r0, r2
 80164cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80164ce:	4411      	add	r1, r2
 80164d0:	e77e      	b.n	80163d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80164d2:	f06f 0601 	mvn.w	r6, #1
 80164d6:	fa1f fa82 	uxth.w	sl, r2
 80164da:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80164de:	43d2      	mvns	r2, r2
 80164e0:	437e      	muls	r6, r7
 80164e2:	b2ed      	uxtb	r5, r5
 80164e4:	fb1c fc0a 	smulbb	ip, ip, sl
 80164e8:	b2d2      	uxtb	r2, r2
 80164ea:	f834 8006 	ldrh.w	r8, [r4, r6]
 80164ee:	fb15 f50a 	smulbb	r5, r5, sl
 80164f2:	9602      	str	r6, [sp, #8]
 80164f4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80164f8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80164fc:	fb16 f60a 	smulbb	r6, r6, sl
 8016500:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016504:	fb0e ce02 	mla	lr, lr, r2, ip
 8016508:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801650c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016510:	fa1f fe8e 	uxth.w	lr, lr
 8016514:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016518:	fa5f f888 	uxtb.w	r8, r8
 801651c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016520:	fb08 5502 	mla	r5, r8, r2, r5
 8016524:	f10e 0201 	add.w	r2, lr, #1
 8016528:	fa1f fc8c 	uxth.w	ip, ip
 801652c:	b2ad      	uxth	r5, r5
 801652e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016532:	9a02      	ldr	r2, [sp, #8]
 8016534:	1c6e      	adds	r6, r5, #1
 8016536:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801653a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801653e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016542:	ea46 0e0e 	orr.w	lr, r6, lr
 8016546:	f10c 0601 	add.w	r6, ip, #1
 801654a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801654e:	0976      	lsrs	r6, r6, #5
 8016550:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016554:	ea4e 0e06 	orr.w	lr, lr, r6
 8016558:	f824 e002 	strh.w	lr, [r4, r2]
 801655c:	e7b3      	b.n	80164c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801655e:	f04f 0800 	mov.w	r8, #0
 8016562:	eba3 0208 	sub.w	r2, r3, r8
 8016566:	2a00      	cmp	r2, #0
 8016568:	f77f af35 	ble.w	80163d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801656c:	1402      	asrs	r2, r0, #16
 801656e:	9e00      	ldr	r6, [sp, #0]
 8016570:	140d      	asrs	r5, r1, #16
 8016572:	fb06 2505 	mla	r5, r6, r5, r2
 8016576:	9e01      	ldr	r6, [sp, #4]
 8016578:	086a      	lsrs	r2, r5, #1
 801657a:	07ed      	lsls	r5, r5, #31
 801657c:	5cb2      	ldrb	r2, [r6, r2]
 801657e:	bf54      	ite	pl
 8016580:	f002 020f 	andpl.w	r2, r2, #15
 8016584:	1112      	asrmi	r2, r2, #4
 8016586:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801658a:	b2d2      	uxtb	r2, r2
 801658c:	b1c2      	cbz	r2, 80165c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801658e:	9d04      	ldr	r5, [sp, #16]
 8016590:	436a      	muls	r2, r5
 8016592:	1c55      	adds	r5, r2, #1
 8016594:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016598:	4d2d      	ldr	r5, [pc, #180]	; (8016650 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801659a:	1212      	asrs	r2, r2, #8
 801659c:	682e      	ldr	r6, [r5, #0]
 801659e:	2aff      	cmp	r2, #255	; 0xff
 80165a0:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80165a4:	d113      	bne.n	80165ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80165a6:	0972      	lsrs	r2, r6, #5
 80165a8:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80165ac:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80165b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80165b4:	f025 0507 	bic.w	r5, r5, #7
 80165b8:	4315      	orrs	r5, r2
 80165ba:	4335      	orrs	r5, r6
 80165bc:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80165c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80165c2:	f108 0801 	add.w	r8, r8, #1
 80165c6:	4410      	add	r0, r2
 80165c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80165ca:	4411      	add	r1, r2
 80165cc:	e7c9      	b.n	8016562 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80165ce:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80165d2:	fa1f fa82 	uxth.w	sl, r2
 80165d6:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80165da:	43d2      	mvns	r2, r2
 80165dc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80165e0:	fb17 f70a 	smulbb	r7, r7, sl
 80165e4:	b2d2      	uxtb	r2, r2
 80165e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80165ea:	b2f6      	uxtb	r6, r6
 80165ec:	b2ed      	uxtb	r5, r5
 80165ee:	fb0c 7c02 	mla	ip, ip, r2, r7
 80165f2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80165f6:	fb16 f60a 	smulbb	r6, r6, sl
 80165fa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80165fe:	fa1f fc8c 	uxth.w	ip, ip
 8016602:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016606:	fb15 f50a 	smulbb	r5, r5, sl
 801660a:	fa5f fe8e 	uxtb.w	lr, lr
 801660e:	fb0e 6602 	mla	r6, lr, r2, r6
 8016612:	fb07 5702 	mla	r7, r7, r2, r5
 8016616:	f10c 0201 	add.w	r2, ip, #1
 801661a:	b2b6      	uxth	r6, r6
 801661c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016620:	1c75      	adds	r5, r6, #1
 8016622:	b2bf      	uxth	r7, r7
 8016624:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016628:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801662c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016630:	ea45 0c0c 	orr.w	ip, r5, ip
 8016634:	1c7d      	adds	r5, r7, #1
 8016636:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801663a:	096d      	lsrs	r5, r5, #5
 801663c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016640:	ea4c 0c05 	orr.w	ip, ip, r5
 8016644:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016648:	e7ba      	b.n	80165c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801664a:	b007      	add	sp, #28
 801664c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016650:	24001e84 	.word	0x24001e84

08016654 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016658:	b087      	sub	sp, #28
 801665a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801665e:	f8df 8308 	ldr.w	r8, [pc, #776]	; 8016968 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016662:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016664:	9101      	str	r1, [sp, #4]
 8016666:	9205      	str	r2, [sp, #20]
 8016668:	6841      	ldr	r1, [r0, #4]
 801666a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801666e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016672:	fb01 2404 	mla	r4, r1, r4, r2
 8016676:	6802      	ldr	r2, [r0, #0]
 8016678:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801667c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016680:	3201      	adds	r2, #1
 8016682:	f022 0201 	bic.w	r2, r2, #1
 8016686:	9202      	str	r2, [sp, #8]
 8016688:	f8db 2000 	ldr.w	r2, [fp]
 801668c:	9203      	str	r2, [sp, #12]
 801668e:	9a01      	ldr	r2, [sp, #4]
 8016690:	2a00      	cmp	r2, #0
 8016692:	dc03      	bgt.n	801669c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016694:	9a05      	ldr	r2, [sp, #20]
 8016696:	2a00      	cmp	r2, #0
 8016698:	f340 8162 	ble.w	8016960 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801669c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801669e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80166a2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80166a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80166a8:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80166ac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80166b0:	2b00      	cmp	r3, #0
 80166b2:	dd0e      	ble.n	80166d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80166b4:	1402      	asrs	r2, r0, #16
 80166b6:	d405      	bmi.n	80166c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80166b8:	42ba      	cmp	r2, r7
 80166ba:	da03      	bge.n	80166c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80166bc:	140a      	asrs	r2, r1, #16
 80166be:	d401      	bmi.n	80166c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80166c0:	42b2      	cmp	r2, r6
 80166c2:	db07      	blt.n	80166d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80166c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80166c6:	3b01      	subs	r3, #1
 80166c8:	3402      	adds	r4, #2
 80166ca:	4410      	add	r0, r2
 80166cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80166ce:	4411      	add	r1, r2
 80166d0:	e7ee      	b.n	80166b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80166d2:	d017      	beq.n	8016704 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80166d4:	1e5a      	subs	r2, r3, #1
 80166d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80166d8:	fb05 0502 	mla	r5, r5, r2, r0
 80166dc:	142d      	asrs	r5, r5, #16
 80166de:	d409      	bmi.n	80166f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80166e0:	42bd      	cmp	r5, r7
 80166e2:	da07      	bge.n	80166f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80166e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80166e6:	fb05 1202 	mla	r2, r5, r2, r1
 80166ea:	1412      	asrs	r2, r2, #16
 80166ec:	d402      	bmi.n	80166f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80166ee:	42b2      	cmp	r2, r6
 80166f0:	f2c0 80c3 	blt.w	801687a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80166f4:	2500      	movs	r5, #0
 80166f6:	195a      	adds	r2, r3, r5
 80166f8:	2a00      	cmp	r2, #0
 80166fa:	dc3f      	bgt.n	801677c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80166fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016700:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016704:	9b01      	ldr	r3, [sp, #4]
 8016706:	2b00      	cmp	r3, #0
 8016708:	f340 812a 	ble.w	8016960 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801670c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016710:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016712:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016716:	eeb0 6a62 	vmov.f32	s12, s5
 801671a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801671e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016722:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016726:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801672a:	eeb0 6a43 	vmov.f32	s12, s6
 801672e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016732:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016736:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801673a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801673e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016742:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016746:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801674a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801674e:	ee12 2a90 	vmov	r2, s5
 8016752:	eef0 2a47 	vmov.f32	s5, s14
 8016756:	fb92 f3f3 	sdiv	r3, r2, r3
 801675a:	ee13 2a10 	vmov	r2, s6
 801675e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016760:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016762:	eeb0 3a67 	vmov.f32	s6, s15
 8016766:	fb92 f3f3 	sdiv	r3, r2, r3
 801676a:	9314      	str	r3, [sp, #80]	; 0x50
 801676c:	9b01      	ldr	r3, [sp, #4]
 801676e:	9a05      	ldr	r2, [sp, #20]
 8016770:	3b01      	subs	r3, #1
 8016772:	9301      	str	r3, [sp, #4]
 8016774:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016776:	bf08      	it	eq
 8016778:	4613      	moveq	r3, r2
 801677a:	e788      	b.n	801668e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801677c:	1406      	asrs	r6, r0, #16
 801677e:	d42c      	bmi.n	80167da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016780:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016784:	42b2      	cmp	r2, r6
 8016786:	dd28      	ble.n	80167da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016788:	140f      	asrs	r7, r1, #16
 801678a:	d426      	bmi.n	80167da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801678c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016790:	42ba      	cmp	r2, r7
 8016792:	dd22      	ble.n	80167da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016794:	9a02      	ldr	r2, [sp, #8]
 8016796:	fb07 6602 	mla	r6, r7, r2, r6
 801679a:	9f03      	ldr	r7, [sp, #12]
 801679c:	0872      	lsrs	r2, r6, #1
 801679e:	07f6      	lsls	r6, r6, #31
 80167a0:	5cba      	ldrb	r2, [r7, r2]
 80167a2:	bf54      	ite	pl
 80167a4:	f002 020f 	andpl.w	r2, r2, #15
 80167a8:	1112      	asrmi	r2, r2, #4
 80167aa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80167ae:	b2d2      	uxtb	r2, r2
 80167b0:	2aff      	cmp	r2, #255	; 0xff
 80167b2:	d118      	bne.n	80167e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80167b4:	f06f 0601 	mvn.w	r6, #1
 80167b8:	f8d8 2000 	ldr.w	r2, [r8]
 80167bc:	fb06 f705 	mul.w	r7, r6, r5
 80167c0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80167c4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80167c8:	0956      	lsrs	r6, r2, #5
 80167ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80167ce:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80167d2:	ea4c 0606 	orr.w	r6, ip, r6
 80167d6:	4316      	orrs	r6, r2
 80167d8:	53e6      	strh	r6, [r4, r7]
 80167da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167dc:	3d01      	subs	r5, #1
 80167de:	4410      	add	r0, r2
 80167e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167e2:	4411      	add	r1, r2
 80167e4:	e787      	b.n	80166f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80167e6:	2a00      	cmp	r2, #0
 80167e8:	d0f7      	beq.n	80167da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80167ea:	f06f 0601 	mvn.w	r6, #1
 80167ee:	f8d8 c000 	ldr.w	ip, [r8]
 80167f2:	fa1f f982 	uxth.w	r9, r2
 80167f6:	43d2      	mvns	r2, r2
 80167f8:	436e      	muls	r6, r5
 80167fa:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80167fe:	b2d2      	uxtb	r2, r2
 8016800:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016804:	fb1a fa09 	smulbb	sl, sl, r9
 8016808:	9604      	str	r6, [sp, #16]
 801680a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801680e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016812:	fb16 f609 	smulbb	r6, r6, r9
 8016816:	fa5f fc8c 	uxtb.w	ip, ip
 801681a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801681e:	fb1c fc09 	smulbb	ip, ip, r9
 8016822:	fb07 6702 	mla	r7, r7, r2, r6
 8016826:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801682a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801682e:	b2bf      	uxth	r7, r7
 8016830:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016834:	fa5f fe8e 	uxtb.w	lr, lr
 8016838:	fb06 a602 	mla	r6, r6, r2, sl
 801683c:	fb0e cc02 	mla	ip, lr, r2, ip
 8016840:	1c7a      	adds	r2, r7, #1
 8016842:	b2b6      	uxth	r6, r6
 8016844:	fa1f fc8c 	uxth.w	ip, ip
 8016848:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801684c:	9a04      	ldr	r2, [sp, #16]
 801684e:	f10c 0a01 	add.w	sl, ip, #1
 8016852:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016856:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801685a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801685e:	ea4a 0707 	orr.w	r7, sl, r7
 8016862:	f106 0a01 	add.w	sl, r6, #1
 8016866:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801686a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801686e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016872:	ea47 070a 	orr.w	r7, r7, sl
 8016876:	52a7      	strh	r7, [r4, r2]
 8016878:	e7af      	b.n	80167da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801687a:	f04f 0e00 	mov.w	lr, #0
 801687e:	eba3 020e 	sub.w	r2, r3, lr
 8016882:	2a00      	cmp	r2, #0
 8016884:	f77f af3a 	ble.w	80166fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016888:	1402      	asrs	r2, r0, #16
 801688a:	9e02      	ldr	r6, [sp, #8]
 801688c:	140d      	asrs	r5, r1, #16
 801688e:	fb06 2505 	mla	r5, r6, r5, r2
 8016892:	9e03      	ldr	r6, [sp, #12]
 8016894:	086a      	lsrs	r2, r5, #1
 8016896:	07ed      	lsls	r5, r5, #31
 8016898:	5cb2      	ldrb	r2, [r6, r2]
 801689a:	bf54      	ite	pl
 801689c:	f002 020f 	andpl.w	r2, r2, #15
 80168a0:	1112      	asrmi	r2, r2, #4
 80168a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80168a6:	b2d2      	uxtb	r2, r2
 80168a8:	2aff      	cmp	r2, #255	; 0xff
 80168aa:	d115      	bne.n	80168d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80168ac:	f8d8 5000 	ldr.w	r5, [r8]
 80168b0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80168b4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80168b8:	096a      	lsrs	r2, r5, #5
 80168ba:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80168be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80168c2:	4332      	orrs	r2, r6
 80168c4:	432a      	orrs	r2, r5
 80168c6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80168ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168cc:	f10e 0e01 	add.w	lr, lr, #1
 80168d0:	4410      	add	r0, r2
 80168d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168d4:	4411      	add	r1, r2
 80168d6:	e7d2      	b.n	801687e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80168d8:	2a00      	cmp	r2, #0
 80168da:	d0f6      	beq.n	80168ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80168dc:	f8d8 7000 	ldr.w	r7, [r8]
 80168e0:	fa1f f982 	uxth.w	r9, r2
 80168e4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80168e8:	43d2      	mvns	r2, r2
 80168ea:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80168ee:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80168f2:	ea4f 262c 	mov.w	r6, ip, asr #8
 80168f6:	fb15 f509 	smulbb	r5, r5, r9
 80168fa:	b2d2      	uxtb	r2, r2
 80168fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016900:	b2ff      	uxtb	r7, r7
 8016902:	fb1a fa09 	smulbb	sl, sl, r9
 8016906:	fb06 5602 	mla	r6, r6, r2, r5
 801690a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801690e:	fb17 f709 	smulbb	r7, r7, r9
 8016912:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016916:	b2b6      	uxth	r6, r6
 8016918:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801691c:	fa5f fc8c 	uxtb.w	ip, ip
 8016920:	fb05 a502 	mla	r5, r5, r2, sl
 8016924:	fb0c 7702 	mla	r7, ip, r2, r7
 8016928:	1c72      	adds	r2, r6, #1
 801692a:	b2ad      	uxth	r5, r5
 801692c:	b2bf      	uxth	r7, r7
 801692e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016932:	f107 0a01 	add.w	sl, r7, #1
 8016936:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801693a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801693e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016942:	ea4a 0606 	orr.w	r6, sl, r6
 8016946:	f105 0a01 	add.w	sl, r5, #1
 801694a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801694e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016952:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016956:	ea46 060a 	orr.w	r6, r6, sl
 801695a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801695e:	e7b4      	b.n	80168ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016960:	b007      	add	sp, #28
 8016962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016966:	bf00      	nop
 8016968:	24001e84 	.word	0x24001e84

0801696c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801696c:	4770      	bx	lr

0801696e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801696e:	4770      	bx	lr

08016970 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8016970:	4770      	bx	lr

08016972 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016972:	4770      	bx	lr

08016974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016974:	4770      	bx	lr

08016976 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016976:	4770      	bx	lr

08016978 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016978:	4770      	bx	lr

0801697a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801697a:	4770      	bx	lr

0801697c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801697c:	4770      	bx	lr

0801697e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801697e:	4770      	bx	lr

08016980 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016980:	4770      	bx	lr

08016982 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016982:	4770      	bx	lr

08016984 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016984:	4770      	bx	lr

08016986 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016986:	4770      	bx	lr

08016988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016988:	4770      	bx	lr

0801698a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801698a:	4770      	bx	lr

0801698c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801698c:	4770      	bx	lr

0801698e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801698e:	4770      	bx	lr

08016990 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016990:	4770      	bx	lr

08016992 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016992:	4770      	bx	lr

08016994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016994:	4770      	bx	lr

08016996 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016996:	4770      	bx	lr

08016998 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016998:	4770      	bx	lr

0801699a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801699a:	4770      	bx	lr

0801699c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801699c:	4770      	bx	lr

0801699e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801699e:	4770      	bx	lr

080169a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80169a0:	4770      	bx	lr

080169a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80169a2:	4770      	bx	lr

080169a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80169a4:	4770      	bx	lr

080169a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80169a6:	4770      	bx	lr

080169a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80169a8:	4770      	bx	lr

080169aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80169aa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80169ae:	b088      	sub	sp, #32
 80169b0:	4606      	mov	r6, r0
 80169b2:	4688      	mov	r8, r1
 80169b4:	4691      	mov	r9, r2
 80169b6:	ac08      	add	r4, sp, #32
 80169b8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80169bc:	4620      	mov	r0, r4
 80169be:	f7fd fc63 	bl	8014288 <_ZNK8touchgfx6Bitmap7getDataEv>
 80169c2:	6833      	ldr	r3, [r6, #0]
 80169c4:	4605      	mov	r5, r0
 80169c6:	4620      	mov	r0, r4
 80169c8:	699f      	ldr	r7, [r3, #24]
 80169ca:	f7fd fb71 	bl	80140b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80169ce:	4682      	mov	sl, r0
 80169d0:	4620      	mov	r0, r4
 80169d2:	f7fd fba1 	bl	8014118 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80169d6:	9500      	str	r5, [sp, #0]
 80169d8:	464b      	mov	r3, r9
 80169da:	4642      	mov	r2, r8
 80169dc:	4631      	mov	r1, r6
 80169de:	e9cd a001 	strd	sl, r0, [sp, #4]
 80169e2:	a806      	add	r0, sp, #24
 80169e4:	47b8      	blx	r7
 80169e6:	4628      	mov	r0, r5
 80169e8:	b008      	add	sp, #32
 80169ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080169f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80169f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80169f4:	2300      	movs	r3, #0
 80169f6:	9300      	str	r3, [sp, #0]
 80169f8:	4b3d      	ldr	r3, [pc, #244]	; (8016af0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80169fa:	781b      	ldrb	r3, [r3, #0]
 80169fc:	2b00      	cmp	r3, #0
 80169fe:	d137      	bne.n	8016a70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016a00:	4a3c      	ldr	r2, [pc, #240]	; (8016af4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016a02:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016a06:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016a0a:	2b00      	cmp	r3, #0
 8016a0c:	d132      	bne.n	8016a74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016a0e:	4b3a      	ldr	r3, [pc, #232]	; (8016af8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016a10:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a14:	ac02      	add	r4, sp, #8
 8016a16:	6808      	ldr	r0, [r1, #0]
 8016a18:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016a1c:	ab02      	add	r3, sp, #8
 8016a1e:	6849      	ldr	r1, [r1, #4]
 8016a20:	4d36      	ldr	r5, [pc, #216]	; (8016afc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016a22:	c303      	stmia	r3!, {r0, r1}
 8016a24:	4669      	mov	r1, sp
 8016a26:	4620      	mov	r0, r4
 8016a28:	f7fa fd00 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a2c:	4668      	mov	r0, sp
 8016a2e:	f7fa fcd5 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a32:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016a36:	f8bd 2000 	ldrh.w	r2, [sp]
 8016a3a:	462f      	mov	r7, r5
 8016a3c:	6828      	ldr	r0, [r5, #0]
 8016a3e:	4413      	add	r3, r2
 8016a40:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016a44:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016a48:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016a4c:	4413      	add	r3, r2
 8016a4e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016a52:	6803      	ldr	r3, [r0, #0]
 8016a54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016a56:	4798      	blx	r3
 8016a58:	f010 0f01 	tst.w	r0, #1
 8016a5c:	d00c      	beq.n	8016a78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016a5e:	6828      	ldr	r0, [r5, #0]
 8016a60:	6803      	ldr	r3, [r0, #0]
 8016a62:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016a66:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016a68:	4798      	blx	r3
 8016a6a:	b004      	add	sp, #16
 8016a6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016a70:	4a21      	ldr	r2, [pc, #132]	; (8016af8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016a72:	e7c6      	b.n	8016a02 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016a74:	4b1f      	ldr	r3, [pc, #124]	; (8016af4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016a76:	e7cb      	b.n	8016a10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016a78:	6838      	ldr	r0, [r7, #0]
 8016a7a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016a7e:	6803      	ldr	r3, [r0, #0]
 8016a80:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016a84:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016a88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016a8a:	4798      	blx	r3
 8016a8c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016a90:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016a94:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016a98:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016a9c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016aa0:	6838      	ldr	r0, [r7, #0]
 8016aa2:	6803      	ldr	r3, [r0, #0]
 8016aa4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016aa6:	4798      	blx	r3
 8016aa8:	4a12      	ldr	r2, [pc, #72]	; (8016af4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016aaa:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016aae:	8813      	ldrh	r3, [r2, #0]
 8016ab0:	4691      	mov	r9, r2
 8016ab2:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016ab6:	435d      	muls	r5, r3
 8016ab8:	fb03 1404 	mla	r4, r3, r4, r1
 8016abc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016ac0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016ac4:	6838      	ldr	r0, [r7, #0]
 8016ac6:	42ac      	cmp	r4, r5
 8016ac8:	6803      	ldr	r3, [r0, #0]
 8016aca:	d20e      	bcs.n	8016aea <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016acc:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016ad0:	4632      	mov	r2, r6
 8016ad2:	4643      	mov	r3, r8
 8016ad4:	4621      	mov	r1, r4
 8016ad6:	47d0      	blx	sl
 8016ad8:	f8b9 3000 	ldrh.w	r3, [r9]
 8016adc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016ae0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016ae4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016ae8:	e7ec      	b.n	8016ac4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016aea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016aec:	4798      	blx	r3
 8016aee:	e7bc      	b.n	8016a6a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016af0:	24001e74 	.word	0x24001e74
 8016af4:	24001e76 	.word	0x24001e76
 8016af8:	24001e78 	.word	0x24001e78
 8016afc:	24001e7c 	.word	0x24001e7c

08016b00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b04:	b08b      	sub	sp, #44	; 0x2c
 8016b06:	460f      	mov	r7, r1
 8016b08:	4616      	mov	r6, r2
 8016b0a:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016b0e:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016b12:	f1bb 0f00 	cmp.w	fp, #0
 8016b16:	d04a      	beq.n	8016bae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016b18:	6810      	ldr	r0, [r2, #0]
 8016b1a:	ad06      	add	r5, sp, #24
 8016b1c:	6851      	ldr	r1, [r2, #4]
 8016b1e:	c503      	stmia	r5!, {r0, r1}
 8016b20:	6818      	ldr	r0, [r3, #0]
 8016b22:	ad08      	add	r5, sp, #32
 8016b24:	6859      	ldr	r1, [r3, #4]
 8016b26:	c503      	stmia	r5!, {r0, r1}
 8016b28:	a806      	add	r0, sp, #24
 8016b2a:	f7fa fc57 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016b2e:	4631      	mov	r1, r6
 8016b30:	a808      	add	r0, sp, #32
 8016b32:	f7fa fc7b 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016b36:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016b3a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016b3e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016b42:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016b46:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016b4a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016b4e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016b52:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016b56:	4f5f      	ldr	r7, [pc, #380]	; (8016cd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016b58:	440a      	add	r2, r1
 8016b5a:	6838      	ldr	r0, [r7, #0]
 8016b5c:	46b9      	mov	r9, r7
 8016b5e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016b62:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016b66:	4413      	add	r3, r2
 8016b68:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016b6c:	6803      	ldr	r3, [r0, #0]
 8016b6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016b70:	4798      	blx	r3
 8016b72:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016b76:	d11d      	bne.n	8016bb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8016b78:	b9fc      	cbnz	r4, 8016bba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016b7a:	f010 0f01 	tst.w	r0, #1
 8016b7e:	d01c      	beq.n	8016bba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016b80:	f8d9 0000 	ldr.w	r0, [r9]
 8016b84:	2700      	movs	r7, #0
 8016b86:	b2ad      	uxth	r5, r5
 8016b88:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016b8c:	6801      	ldr	r1, [r0, #0]
 8016b8e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016b92:	f8cd b00c 	str.w	fp, [sp, #12]
 8016b96:	9501      	str	r5, [sp, #4]
 8016b98:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016b9c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016ba0:	9402      	str	r4, [sp, #8]
 8016ba2:	fa1f f488 	uxth.w	r4, r8
 8016ba6:	9400      	str	r4, [sp, #0]
 8016ba8:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8016baa:	4631      	mov	r1, r6
 8016bac:	47a0      	blx	r4
 8016bae:	b00b      	add	sp, #44	; 0x2c
 8016bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016bb4:	f010 0f04 	tst.w	r0, #4
 8016bb8:	e7e1      	b.n	8016b7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8016bba:	f8d9 0000 	ldr.w	r0, [r9]
 8016bbe:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016bc2:	6803      	ldr	r3, [r0, #0]
 8016bc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016bc6:	4798      	blx	r3
 8016bc8:	4b43      	ldr	r3, [pc, #268]	; (8016cd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8016bca:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016bce:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016bd2:	881a      	ldrh	r2, [r3, #0]
 8016bd4:	469a      	mov	sl, r3
 8016bd6:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016bda:	fb05 f502 	mul.w	r5, r5, r2
 8016bde:	fb02 1404 	mla	r4, r2, r4, r1
 8016be2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016be6:	d059      	beq.n	8016c9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016be8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016bec:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016bf0:	fa1f f28b 	uxth.w	r2, fp
 8016bf4:	469e      	mov	lr, r3
 8016bf6:	fa1f f989 	uxth.w	r9, r9
 8016bfa:	42ac      	cmp	r4, r5
 8016bfc:	d264      	bcs.n	8016cc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016bfe:	eb04 0a07 	add.w	sl, r4, r7
 8016c02:	4554      	cmp	r4, sl
 8016c04:	d23d      	bcs.n	8016c82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8016c06:	8821      	ldrh	r1, [r4, #0]
 8016c08:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016c0c:	1208      	asrs	r0, r1, #8
 8016c0e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016c12:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016c16:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8016c1a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016c1e:	00c9      	lsls	r1, r1, #3
 8016c20:	fb10 f009 	smulbb	r0, r0, r9
 8016c24:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016c28:	b2c9      	uxtb	r1, r1
 8016c2a:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016c2e:	10d8      	asrs	r0, r3, #3
 8016c30:	fb1b fb09 	smulbb	fp, fp, r9
 8016c34:	00db      	lsls	r3, r3, #3
 8016c36:	fa1f fc8c 	uxth.w	ip, ip
 8016c3a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016c3e:	fb11 f109 	smulbb	r1, r1, r9
 8016c42:	b2db      	uxtb	r3, r3
 8016c44:	fb00 b002 	mla	r0, r0, r2, fp
 8016c48:	f10c 0b01 	add.w	fp, ip, #1
 8016c4c:	fb03 1302 	mla	r3, r3, r2, r1
 8016c50:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8016c54:	b29b      	uxth	r3, r3
 8016c56:	b280      	uxth	r0, r0
 8016c58:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016c5c:	f103 0c01 	add.w	ip, r3, #1
 8016c60:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016c64:	1c43      	adds	r3, r0, #1
 8016c66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016c6a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016c6e:	0940      	lsrs	r0, r0, #5
 8016c70:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016c74:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016c78:	ea4c 0c00 	orr.w	ip, ip, r0
 8016c7c:	f824 cb02 	strh.w	ip, [r4], #2
 8016c80:	e7bf      	b.n	8016c02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8016c82:	f8be 3000 	ldrh.w	r3, [lr]
 8016c86:	eba3 0308 	sub.w	r3, r3, r8
 8016c8a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016c8e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016c92:	eba3 0308 	sub.w	r3, r3, r8
 8016c96:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016c9a:	e7ae      	b.n	8016bfa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8016c9c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016ca0:	f8d9 0000 	ldr.w	r0, [r9]
 8016ca4:	42ac      	cmp	r4, r5
 8016ca6:	6803      	ldr	r3, [r0, #0]
 8016ca8:	d20e      	bcs.n	8016cc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8016caa:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8016cae:	4632      	mov	r2, r6
 8016cb0:	463b      	mov	r3, r7
 8016cb2:	4621      	mov	r1, r4
 8016cb4:	47c0      	blx	r8
 8016cb6:	f8ba 3000 	ldrh.w	r3, [sl]
 8016cba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016cbe:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016cc2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016cc6:	e7eb      	b.n	8016ca0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8016cc8:	4b02      	ldr	r3, [pc, #8]	; (8016cd4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016cca:	6818      	ldr	r0, [r3, #0]
 8016ccc:	6803      	ldr	r3, [r0, #0]
 8016cce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016cd0:	4798      	blx	r3
 8016cd2:	e76c      	b.n	8016bae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016cd4:	24001e7c 	.word	0x24001e7c
 8016cd8:	24001e76 	.word	0x24001e76

08016cdc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8016cdc:	b510      	push	{r4, lr}
 8016cde:	4604      	mov	r4, r0
 8016ce0:	2104      	movs	r1, #4
 8016ce2:	f00a fe2c 	bl	802193e <_ZdlPvj>
 8016ce6:	4620      	mov	r0, r4
 8016ce8:	bd10      	pop	{r4, pc}

08016cea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8016cea:	b510      	push	{r4, lr}
 8016cec:	4604      	mov	r4, r0
 8016cee:	2104      	movs	r1, #4
 8016cf0:	f00a fe25 	bl	802193e <_ZdlPvj>
 8016cf4:	4620      	mov	r0, r4
 8016cf6:	bd10      	pop	{r4, pc}

08016cf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8016cf8:	b510      	push	{r4, lr}
 8016cfa:	4604      	mov	r4, r0
 8016cfc:	f640 0144 	movw	r1, #2116	; 0x844
 8016d00:	f00a fe1d 	bl	802193e <_ZdlPvj>
 8016d04:	4620      	mov	r0, r4
 8016d06:	bd10      	pop	{r4, pc}

08016d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016d08:	b510      	push	{r4, lr}
 8016d0a:	4604      	mov	r4, r0
 8016d0c:	2104      	movs	r1, #4
 8016d0e:	f00a fe16 	bl	802193e <_ZdlPvj>
 8016d12:	4620      	mov	r0, r4
 8016d14:	bd10      	pop	{r4, pc}

08016d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016d16:	b510      	push	{r4, lr}
 8016d18:	4604      	mov	r4, r0
 8016d1a:	2104      	movs	r1, #4
 8016d1c:	f00a fe0f 	bl	802193e <_ZdlPvj>
 8016d20:	4620      	mov	r0, r4
 8016d22:	bd10      	pop	{r4, pc}

08016d24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016d24:	b510      	push	{r4, lr}
 8016d26:	4604      	mov	r4, r0
 8016d28:	2104      	movs	r1, #4
 8016d2a:	f00a fe08 	bl	802193e <_ZdlPvj>
 8016d2e:	4620      	mov	r0, r4
 8016d30:	bd10      	pop	{r4, pc}

08016d32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016d32:	b510      	push	{r4, lr}
 8016d34:	4604      	mov	r4, r0
 8016d36:	2104      	movs	r1, #4
 8016d38:	f00a fe01 	bl	802193e <_ZdlPvj>
 8016d3c:	4620      	mov	r0, r4
 8016d3e:	bd10      	pop	{r4, pc}

08016d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016d40:	b510      	push	{r4, lr}
 8016d42:	4604      	mov	r4, r0
 8016d44:	2104      	movs	r1, #4
 8016d46:	f00a fdfa 	bl	802193e <_ZdlPvj>
 8016d4a:	4620      	mov	r0, r4
 8016d4c:	bd10      	pop	{r4, pc}

08016d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016d4e:	b510      	push	{r4, lr}
 8016d50:	4604      	mov	r4, r0
 8016d52:	2104      	movs	r1, #4
 8016d54:	f00a fdf3 	bl	802193e <_ZdlPvj>
 8016d58:	4620      	mov	r0, r4
 8016d5a:	bd10      	pop	{r4, pc}

08016d5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016d5c:	b510      	push	{r4, lr}
 8016d5e:	4604      	mov	r4, r0
 8016d60:	2104      	movs	r1, #4
 8016d62:	f00a fdec 	bl	802193e <_ZdlPvj>
 8016d66:	4620      	mov	r0, r4
 8016d68:	bd10      	pop	{r4, pc}

08016d6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016d6a:	b510      	push	{r4, lr}
 8016d6c:	4604      	mov	r4, r0
 8016d6e:	2104      	movs	r1, #4
 8016d70:	f00a fde5 	bl	802193e <_ZdlPvj>
 8016d74:	4620      	mov	r0, r4
 8016d76:	bd10      	pop	{r4, pc}

08016d78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016d78:	b510      	push	{r4, lr}
 8016d7a:	4604      	mov	r4, r0
 8016d7c:	2104      	movs	r1, #4
 8016d7e:	f00a fdde 	bl	802193e <_ZdlPvj>
 8016d82:	4620      	mov	r0, r4
 8016d84:	bd10      	pop	{r4, pc}

08016d86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016d86:	b510      	push	{r4, lr}
 8016d88:	4604      	mov	r4, r0
 8016d8a:	2104      	movs	r1, #4
 8016d8c:	f00a fdd7 	bl	802193e <_ZdlPvj>
 8016d90:	4620      	mov	r0, r4
 8016d92:	bd10      	pop	{r4, pc}

08016d94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016d94:	b510      	push	{r4, lr}
 8016d96:	4604      	mov	r4, r0
 8016d98:	2104      	movs	r1, #4
 8016d9a:	f00a fdd0 	bl	802193e <_ZdlPvj>
 8016d9e:	4620      	mov	r0, r4
 8016da0:	bd10      	pop	{r4, pc}

08016da2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016da2:	b510      	push	{r4, lr}
 8016da4:	4604      	mov	r4, r0
 8016da6:	2104      	movs	r1, #4
 8016da8:	f00a fdc9 	bl	802193e <_ZdlPvj>
 8016dac:	4620      	mov	r0, r4
 8016dae:	bd10      	pop	{r4, pc}

08016db0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016db0:	b510      	push	{r4, lr}
 8016db2:	4604      	mov	r4, r0
 8016db4:	2104      	movs	r1, #4
 8016db6:	f00a fdc2 	bl	802193e <_ZdlPvj>
 8016dba:	4620      	mov	r0, r4
 8016dbc:	bd10      	pop	{r4, pc}

08016dbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016dbe:	b510      	push	{r4, lr}
 8016dc0:	4604      	mov	r4, r0
 8016dc2:	2104      	movs	r1, #4
 8016dc4:	f00a fdbb 	bl	802193e <_ZdlPvj>
 8016dc8:	4620      	mov	r0, r4
 8016dca:	bd10      	pop	{r4, pc}

08016dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016dcc:	b510      	push	{r4, lr}
 8016dce:	4604      	mov	r4, r0
 8016dd0:	2104      	movs	r1, #4
 8016dd2:	f00a fdb4 	bl	802193e <_ZdlPvj>
 8016dd6:	4620      	mov	r0, r4
 8016dd8:	bd10      	pop	{r4, pc}

08016dda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016dda:	b510      	push	{r4, lr}
 8016ddc:	4604      	mov	r4, r0
 8016dde:	2104      	movs	r1, #4
 8016de0:	f00a fdad 	bl	802193e <_ZdlPvj>
 8016de4:	4620      	mov	r0, r4
 8016de6:	bd10      	pop	{r4, pc}

08016de8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016de8:	b510      	push	{r4, lr}
 8016dea:	4604      	mov	r4, r0
 8016dec:	2104      	movs	r1, #4
 8016dee:	f00a fda6 	bl	802193e <_ZdlPvj>
 8016df2:	4620      	mov	r0, r4
 8016df4:	bd10      	pop	{r4, pc}

08016df6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016df6:	b510      	push	{r4, lr}
 8016df8:	4604      	mov	r4, r0
 8016dfa:	2104      	movs	r1, #4
 8016dfc:	f00a fd9f 	bl	802193e <_ZdlPvj>
 8016e00:	4620      	mov	r0, r4
 8016e02:	bd10      	pop	{r4, pc}

08016e04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016e04:	b510      	push	{r4, lr}
 8016e06:	4604      	mov	r4, r0
 8016e08:	2104      	movs	r1, #4
 8016e0a:	f00a fd98 	bl	802193e <_ZdlPvj>
 8016e0e:	4620      	mov	r0, r4
 8016e10:	bd10      	pop	{r4, pc}

08016e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016e12:	b510      	push	{r4, lr}
 8016e14:	4604      	mov	r4, r0
 8016e16:	2104      	movs	r1, #4
 8016e18:	f00a fd91 	bl	802193e <_ZdlPvj>
 8016e1c:	4620      	mov	r0, r4
 8016e1e:	bd10      	pop	{r4, pc}

08016e20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016e20:	b510      	push	{r4, lr}
 8016e22:	4604      	mov	r4, r0
 8016e24:	2104      	movs	r1, #4
 8016e26:	f00a fd8a 	bl	802193e <_ZdlPvj>
 8016e2a:	4620      	mov	r0, r4
 8016e2c:	bd10      	pop	{r4, pc}

08016e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016e2e:	b510      	push	{r4, lr}
 8016e30:	4604      	mov	r4, r0
 8016e32:	2104      	movs	r1, #4
 8016e34:	f00a fd83 	bl	802193e <_ZdlPvj>
 8016e38:	4620      	mov	r0, r4
 8016e3a:	bd10      	pop	{r4, pc}

08016e3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016e3c:	b510      	push	{r4, lr}
 8016e3e:	4604      	mov	r4, r0
 8016e40:	2104      	movs	r1, #4
 8016e42:	f00a fd7c 	bl	802193e <_ZdlPvj>
 8016e46:	4620      	mov	r0, r4
 8016e48:	bd10      	pop	{r4, pc}

08016e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016e4a:	b510      	push	{r4, lr}
 8016e4c:	4604      	mov	r4, r0
 8016e4e:	2104      	movs	r1, #4
 8016e50:	f00a fd75 	bl	802193e <_ZdlPvj>
 8016e54:	4620      	mov	r0, r4
 8016e56:	bd10      	pop	{r4, pc}

08016e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016e58:	b510      	push	{r4, lr}
 8016e5a:	4604      	mov	r4, r0
 8016e5c:	2104      	movs	r1, #4
 8016e5e:	f00a fd6e 	bl	802193e <_ZdlPvj>
 8016e62:	4620      	mov	r0, r4
 8016e64:	bd10      	pop	{r4, pc}

08016e66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016e66:	b510      	push	{r4, lr}
 8016e68:	4604      	mov	r4, r0
 8016e6a:	2104      	movs	r1, #4
 8016e6c:	f00a fd67 	bl	802193e <_ZdlPvj>
 8016e70:	4620      	mov	r0, r4
 8016e72:	bd10      	pop	{r4, pc}

08016e74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8016e74:	b510      	push	{r4, lr}
 8016e76:	4604      	mov	r4, r0
 8016e78:	2104      	movs	r1, #4
 8016e7a:	f00a fd60 	bl	802193e <_ZdlPvj>
 8016e7e:	4620      	mov	r0, r4
 8016e80:	bd10      	pop	{r4, pc}

08016e82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8016e82:	b510      	push	{r4, lr}
 8016e84:	4604      	mov	r4, r0
 8016e86:	2104      	movs	r1, #4
 8016e88:	f00a fd59 	bl	802193e <_ZdlPvj>
 8016e8c:	4620      	mov	r0, r4
 8016e8e:	bd10      	pop	{r4, pc}

08016e90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e94:	b08f      	sub	sp, #60	; 0x3c
 8016e96:	461c      	mov	r4, r3
 8016e98:	9205      	str	r2, [sp, #20]
 8016e9a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016e9e:	9100      	str	r1, [sp, #0]
 8016ea0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016ea2:	9201      	str	r2, [sp, #4]
 8016ea4:	2a00      	cmp	r2, #0
 8016ea6:	f000 8116 	beq.w	80170d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8016eaa:	6820      	ldr	r0, [r4, #0]
 8016eac:	aa0a      	add	r2, sp, #40	; 0x28
 8016eae:	6861      	ldr	r1, [r4, #4]
 8016eb0:	c203      	stmia	r2!, {r0, r1}
 8016eb2:	6818      	ldr	r0, [r3, #0]
 8016eb4:	aa0c      	add	r2, sp, #48	; 0x30
 8016eb6:	6859      	ldr	r1, [r3, #4]
 8016eb8:	c203      	stmia	r2!, {r0, r1}
 8016eba:	a80a      	add	r0, sp, #40	; 0x28
 8016ebc:	f7fa fa8e 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016ec0:	4621      	mov	r1, r4
 8016ec2:	a80c      	add	r0, sp, #48	; 0x30
 8016ec4:	f7fa fab2 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016ec8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8016ecc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8016ed0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8016ed4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8016ed8:	bfdb      	ittet	le
 8016eda:	b2b3      	uxthle	r3, r6
 8016edc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8016ee0:	2301      	movgt	r3, #1
 8016ee2:	fb92 f3f3 	sdivle	r3, r2, r3
 8016ee6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8016eea:	441d      	add	r5, r3
 8016eec:	fb92 f1f3 	sdiv	r1, r2, r3
 8016ef0:	fa1f fc81 	uxth.w	ip, r1
 8016ef4:	3d01      	subs	r5, #1
 8016ef6:	fb0c 2413 	mls	r4, ip, r3, r2
 8016efa:	4661      	mov	r1, ip
 8016efc:	fb14 f406 	smulbb	r4, r4, r6
 8016f00:	4404      	add	r4, r0
 8016f02:	fb95 f5f3 	sdiv	r5, r5, r3
 8016f06:	b2a4      	uxth	r4, r4
 8016f08:	b131      	cbz	r1, 8016f18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8016f0a:	9b05      	ldr	r3, [sp, #20]
 8016f0c:	9900      	ldr	r1, [sp, #0]
 8016f0e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016f12:	ba1b      	rev	r3, r3
 8016f14:	4419      	add	r1, r3
 8016f16:	9100      	str	r1, [sp, #0]
 8016f18:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016f1c:	b2ad      	uxth	r5, r5
 8016f1e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8016f22:	4418      	add	r0, r3
 8016f24:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8016f28:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8016f2c:	00ad      	lsls	r5, r5, #2
 8016f2e:	441a      	add	r2, r3
 8016f30:	4b6a      	ldr	r3, [pc, #424]	; (80170dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016f32:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8016f36:	6818      	ldr	r0, [r3, #0]
 8016f38:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8016f3c:	6803      	ldr	r3, [r0, #0]
 8016f3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016f40:	4798      	blx	r3
 8016f42:	4967      	ldr	r1, [pc, #412]	; (80170e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8016f44:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8016f48:	2c00      	cmp	r4, #0
 8016f4a:	880b      	ldrh	r3, [r1, #0]
 8016f4c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8016f50:	bf0c      	ite	eq
 8016f52:	46c6      	moveq	lr, r8
 8016f54:	f04f 0e00 	movne.w	lr, #0
 8016f58:	9109      	str	r1, [sp, #36]	; 0x24
 8016f5a:	fb03 c202 	mla	r2, r3, r2, ip
 8016f5e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016f62:	4373      	muls	r3, r6
 8016f64:	fa1f fe8e 	uxth.w	lr, lr
 8016f68:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016f6c:	9103      	str	r1, [sp, #12]
 8016f6e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016f72:	9306      	str	r3, [sp, #24]
 8016f74:	1d2b      	adds	r3, r5, #4
 8016f76:	9307      	str	r3, [sp, #28]
 8016f78:	9b01      	ldr	r3, [sp, #4]
 8016f7a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8016f7e:	2300      	movs	r3, #0
 8016f80:	b292      	uxth	r2, r2
 8016f82:	9302      	str	r3, [sp, #8]
 8016f84:	9204      	str	r2, [sp, #16]
 8016f86:	9a06      	ldr	r2, [sp, #24]
 8016f88:	4282      	cmp	r2, r0
 8016f8a:	f240 809f 	bls.w	80170cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8016f8e:	b963      	cbnz	r3, 8016faa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8016f90:	9b00      	ldr	r3, [sp, #0]
 8016f92:	781a      	ldrb	r2, [r3, #0]
 8016f94:	0993      	lsrs	r3, r2, #6
 8016f96:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8016f9a:	9202      	str	r2, [sp, #8]
 8016f9c:	1e5a      	subs	r2, r3, #1
 8016f9e:	2a02      	cmp	r2, #2
 8016fa0:	d815      	bhi.n	8016fce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8016fa2:	9a00      	ldr	r2, [sp, #0]
 8016fa4:	b29b      	uxth	r3, r3
 8016fa6:	3201      	adds	r2, #1
 8016fa8:	9200      	str	r2, [sp, #0]
 8016faa:	b1b4      	cbz	r4, 8016fda <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8016fac:	429c      	cmp	r4, r3
 8016fae:	bf91      	iteee	ls
 8016fb0:	1b1c      	subls	r4, r3, r4
 8016fb2:	1ae4      	subhi	r4, r4, r3
 8016fb4:	4671      	movhi	r1, lr
 8016fb6:	f04f 0a00 	movhi.w	sl, #0
 8016fba:	bf9b      	ittet	ls
 8016fbc:	fa1f fa84 	uxthls.w	sl, r4
 8016fc0:	2400      	movls	r4, #0
 8016fc2:	b2a4      	uxthhi	r4, r4
 8016fc4:	fa1f f188 	uxthls.w	r1, r8
 8016fc8:	4653      	mov	r3, sl
 8016fca:	468e      	mov	lr, r1
 8016fcc:	e7db      	b.n	8016f86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8016fce:	9a00      	ldr	r2, [sp, #0]
 8016fd0:	9b00      	ldr	r3, [sp, #0]
 8016fd2:	3202      	adds	r2, #2
 8016fd4:	785b      	ldrb	r3, [r3, #1]
 8016fd6:	9200      	str	r2, [sp, #0]
 8016fd8:	e7e7      	b.n	8016faa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8016fda:	2202      	movs	r2, #2
 8016fdc:	9907      	ldr	r1, [sp, #28]
 8016fde:	4573      	cmp	r3, lr
 8016fe0:	4615      	mov	r5, r2
 8016fe2:	9a02      	ldr	r2, [sp, #8]
 8016fe4:	bf24      	itt	cs
 8016fe6:	eba3 0a0e 	subcs.w	sl, r3, lr
 8016fea:	46f1      	movcs	r9, lr
 8016fec:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016ff0:	9905      	ldr	r1, [sp, #20]
 8016ff2:	bf34      	ite	cc
 8016ff4:	4699      	movcc	r9, r3
 8016ff6:	fa1f fa8a 	uxthcs.w	sl, sl
 8016ffa:	f831 c002 	ldrh.w	ip, [r1, r2]
 8016ffe:	bf38      	it	cc
 8017000:	ebae 0103 	subcc.w	r1, lr, r3
 8017004:	9a01      	ldr	r2, [sp, #4]
 8017006:	bf2e      	itee	cs
 8017008:	4621      	movcs	r1, r4
 801700a:	b289      	uxthcc	r1, r1
 801700c:	46a2      	movcc	sl, r4
 801700e:	2aff      	cmp	r2, #255	; 0xff
 8017010:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017014:	d105      	bne.n	8017022 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8017016:	4481      	add	r9, r0
 8017018:	4581      	cmp	r9, r0
 801701a:	d045      	beq.n	80170a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801701c:	f820 cb02 	strh.w	ip, [r0], #2
 8017020:	e7fa      	b.n	8017018 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8017022:	ea4f 222c 	mov.w	r2, ip, asr #8
 8017026:	9d03      	ldr	r5, [sp, #12]
 8017028:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801702c:	4481      	add	r9, r0
 801702e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017032:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017036:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801703a:	fa5f fc8c 	uxtb.w	ip, ip
 801703e:	436a      	muls	r2, r5
 8017040:	fb0b fb05 	mul.w	fp, fp, r5
 8017044:	fb0c fc05 	mul.w	ip, ip, r5
 8017048:	9208      	str	r2, [sp, #32]
 801704a:	4581      	cmp	r9, r0
 801704c:	d02c      	beq.n	80170a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801704e:	8802      	ldrh	r2, [r0, #0]
 8017050:	9d04      	ldr	r5, [sp, #16]
 8017052:	1216      	asrs	r6, r2, #8
 8017054:	9f04      	ldr	r7, [sp, #16]
 8017056:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801705a:	fb16 f605 	smulbb	r6, r6, r5
 801705e:	9d08      	ldr	r5, [sp, #32]
 8017060:	442e      	add	r6, r5
 8017062:	10d5      	asrs	r5, r2, #3
 8017064:	00d2      	lsls	r2, r2, #3
 8017066:	b2b6      	uxth	r6, r6
 8017068:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801706c:	b2d2      	uxtb	r2, r2
 801706e:	fb15 f507 	smulbb	r5, r5, r7
 8017072:	fb12 f207 	smulbb	r2, r2, r7
 8017076:	1c77      	adds	r7, r6, #1
 8017078:	445d      	add	r5, fp
 801707a:	4462      	add	r2, ip
 801707c:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8017080:	b2ad      	uxth	r5, r5
 8017082:	b292      	uxth	r2, r2
 8017084:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017088:	1c57      	adds	r7, r2, #1
 801708a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801708e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017092:	4316      	orrs	r6, r2
 8017094:	1c6a      	adds	r2, r5, #1
 8017096:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801709a:	096d      	lsrs	r5, r5, #5
 801709c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80170a0:	432e      	orrs	r6, r5
 80170a2:	f820 6b02 	strh.w	r6, [r0], #2
 80170a6:	e7d0      	b.n	801704a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 80170a8:	4573      	cmp	r3, lr
 80170aa:	d38d      	bcc.n	8016fc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80170ac:	fa1f f188 	uxth.w	r1, r8
 80170b0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80170b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80170b6:	1a64      	subs	r4, r4, r1
 80170b8:	881b      	ldrh	r3, [r3, #0]
 80170ba:	b2a4      	uxth	r4, r4
 80170bc:	eba3 0308 	sub.w	r3, r3, r8
 80170c0:	2c00      	cmp	r4, #0
 80170c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80170c6:	bf18      	it	ne
 80170c8:	2100      	movne	r1, #0
 80170ca:	e77d      	b.n	8016fc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80170cc:	4b03      	ldr	r3, [pc, #12]	; (80170dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80170ce:	6818      	ldr	r0, [r3, #0]
 80170d0:	6803      	ldr	r3, [r0, #0]
 80170d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80170d4:	4798      	blx	r3
 80170d6:	b00f      	add	sp, #60	; 0x3c
 80170d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170dc:	24001e7c 	.word	0x24001e7c
 80170e0:	24001e76 	.word	0x24001e76

080170e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80170e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170e8:	b09f      	sub	sp, #124	; 0x7c
 80170ea:	461d      	mov	r5, r3
 80170ec:	4604      	mov	r4, r0
 80170ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80170f0:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 80170f4:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 80170f8:	9209      	str	r2, [sp, #36]	; 0x24
 80170fa:	2a00      	cmp	r2, #0
 80170fc:	f000 81ed 	beq.w	80174da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8017100:	6828      	ldr	r0, [r5, #0]
 8017102:	aa1a      	add	r2, sp, #104	; 0x68
 8017104:	6869      	ldr	r1, [r5, #4]
 8017106:	c203      	stmia	r2!, {r0, r1}
 8017108:	6818      	ldr	r0, [r3, #0]
 801710a:	aa1c      	add	r2, sp, #112	; 0x70
 801710c:	6859      	ldr	r1, [r3, #4]
 801710e:	c203      	stmia	r2!, {r0, r1}
 8017110:	a81a      	add	r0, sp, #104	; 0x68
 8017112:	f7fa f963 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017116:	4629      	mov	r1, r5
 8017118:	a81c      	add	r0, sp, #112	; 0x70
 801711a:	f7fa f987 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801711e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8017122:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8017126:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801712a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801712e:	bfdb      	ittet	le
 8017130:	b29a      	uxthle	r2, r3
 8017132:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8017136:	2201      	movgt	r2, #1
 8017138:	fb91 f2f2 	sdivle	r2, r1, r2
 801713c:	9202      	str	r2, [sp, #8]
 801713e:	9802      	ldr	r0, [sp, #8]
 8017140:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8017144:	9902      	ldr	r1, [sp, #8]
 8017146:	fb92 f0f0 	sdiv	r0, r2, r0
 801714a:	b280      	uxth	r0, r0
 801714c:	4488      	add	r8, r1
 801714e:	9010      	str	r0, [sp, #64]	; 0x40
 8017150:	f108 38ff 	add.w	r8, r8, #4294967295
 8017154:	9802      	ldr	r0, [sp, #8]
 8017156:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017158:	fb05 2510 	mls	r5, r5, r0, r2
 801715c:	fb98 f8f1 	sdiv	r8, r8, r1
 8017160:	fb15 f503 	smulbb	r5, r5, r3
 8017164:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8017168:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801716c:	f108 0801 	add.w	r8, r8, #1
 8017170:	440d      	add	r5, r1
 8017172:	4419      	add	r1, r3
 8017174:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8017178:	fa1f f888 	uxth.w	r8, r8
 801717c:	441a      	add	r2, r3
 801717e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8017182:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8017186:	b2ad      	uxth	r5, r5
 8017188:	9304      	str	r3, [sp, #16]
 801718a:	4b94      	ldr	r3, [pc, #592]	; (80173dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801718c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8017190:	6818      	ldr	r0, [r3, #0]
 8017192:	6803      	ldr	r3, [r0, #0]
 8017194:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017196:	4798      	blx	r3
 8017198:	4b91      	ldr	r3, [pc, #580]	; (80173e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801719a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801719e:	2d00      	cmp	r5, #0
 80171a0:	881a      	ldrh	r2, [r3, #0]
 80171a2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80171a6:	fb02 f606 	mul.w	r6, r2, r6
 80171aa:	fb02 7101 	mla	r1, r2, r1, r7
 80171ae:	9318      	str	r3, [sp, #96]	; 0x60
 80171b0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80171b4:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 80171b8:	f04f 0100 	mov.w	r1, #0
 80171bc:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 80171c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80171c2:	4b88      	ldr	r3, [pc, #544]	; (80173e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 80171c4:	920a      	str	r2, [sp, #40]	; 0x28
 80171c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80171c8:	eba3 0304 	sub.w	r3, r3, r4
 80171cc:	910d      	str	r1, [sp, #52]	; 0x34
 80171ce:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 80171d2:	9319      	str	r3, [sp, #100]	; 0x64
 80171d4:	f108 0204 	add.w	r2, r8, #4
 80171d8:	9211      	str	r2, [sp, #68]	; 0x44
 80171da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80171dc:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 80171e0:	9215      	str	r2, [sp, #84]	; 0x54
 80171e2:	9a04      	ldr	r2, [sp, #16]
 80171e4:	bf18      	it	ne
 80171e6:	2200      	movne	r2, #0
 80171e8:	b292      	uxth	r2, r2
 80171ea:	9910      	ldr	r1, [sp, #64]	; 0x40
 80171ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80171ee:	fa11 f383 	uxtah	r3, r1, r3
 80171f2:	9914      	ldr	r1, [sp, #80]	; 0x50
 80171f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80171f8:	3304      	adds	r3, #4
 80171fa:	9306      	str	r3, [sp, #24]
 80171fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80171fe:	4283      	cmp	r3, r0
 8017200:	f240 8166 	bls.w	80174d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8017204:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8017208:	f04f 0a01 	mov.w	sl, #1
 801720c:	9902      	ldr	r1, [sp, #8]
 801720e:	9e06      	ldr	r6, [sp, #24]
 8017210:	46d3      	mov	fp, sl
 8017212:	4657      	mov	r7, sl
 8017214:	7836      	ldrb	r6, [r6, #0]
 8017216:	fbb5 f3f3 	udiv	r3, r5, r3
 801721a:	1acb      	subs	r3, r1, r3
 801721c:	9612      	str	r6, [sp, #72]	; 0x48
 801721e:	3601      	adds	r6, #1
 8017220:	b29b      	uxth	r3, r3
 8017222:	9605      	str	r6, [sp, #20]
 8017224:	9316      	str	r3, [sp, #88]	; 0x58
 8017226:	9b06      	ldr	r3, [sp, #24]
 8017228:	7859      	ldrb	r1, [r3, #1]
 801722a:	789b      	ldrb	r3, [r3, #2]
 801722c:	021b      	lsls	r3, r3, #8
 801722e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8017232:	9906      	ldr	r1, [sp, #24]
 8017234:	78c9      	ldrb	r1, [r1, #3]
 8017236:	430b      	orrs	r3, r1
 8017238:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801723a:	4419      	add	r1, r3
 801723c:	1c4e      	adds	r6, r1, #1
 801723e:	7849      	ldrb	r1, [r1, #1]
 8017240:	9603      	str	r6, [sp, #12]
 8017242:	0209      	lsls	r1, r1, #8
 8017244:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017246:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801724a:	5cf3      	ldrb	r3, [r6, r3]
 801724c:	4319      	orrs	r1, r3
 801724e:	b28b      	uxth	r3, r1
 8017250:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8017254:	930c      	str	r3, [sp, #48]	; 0x30
 8017256:	2300      	movs	r3, #0
 8017258:	9307      	str	r3, [sp, #28]
 801725a:	469c      	mov	ip, r3
 801725c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8017260:	930e      	str	r3, [sp, #56]	; 0x38
 8017262:	2d00      	cmp	r5, #0
 8017264:	d07e      	beq.n	8017364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 8017266:	42af      	cmp	r7, r5
 8017268:	d26e      	bcs.n	8017348 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 801726a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801726c:	1bed      	subs	r5, r5, r7
 801726e:	9201      	str	r2, [sp, #4]
 8017270:	4283      	cmp	r3, r0
 8017272:	b2ad      	uxth	r5, r5
 8017274:	d802      	bhi.n	801727c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8017276:	e073      	b.n	8017360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8017278:	2b00      	cmp	r3, #0
 801727a:	d15f      	bne.n	801733c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 801727c:	9b03      	ldr	r3, [sp, #12]
 801727e:	f1cb 0207 	rsb	r2, fp, #7
 8017282:	785b      	ldrb	r3, [r3, #1]
 8017284:	4093      	lsls	r3, r2
 8017286:	005b      	lsls	r3, r3, #1
 8017288:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801728c:	9b03      	ldr	r3, [sp, #12]
 801728e:	781b      	ldrb	r3, [r3, #0]
 8017290:	fa43 f30b 	asr.w	r3, r3, fp
 8017294:	b2db      	uxtb	r3, r3
 8017296:	4313      	orrs	r3, r2
 8017298:	f10b 0201 	add.w	r2, fp, #1
 801729c:	fa5f fb82 	uxtb.w	fp, r2
 80172a0:	9a03      	ldr	r2, [sp, #12]
 80172a2:	b29f      	uxth	r7, r3
 80172a4:	f1bb 0f08 	cmp.w	fp, #8
 80172a8:	bf13      	iteet	ne
 80172aa:	3201      	addne	r2, #1
 80172ac:	3202      	addeq	r2, #2
 80172ae:	f04f 0b00 	moveq.w	fp, #0
 80172b2:	9203      	strne	r2, [sp, #12]
 80172b4:	bf08      	it	eq
 80172b6:	9203      	streq	r2, [sp, #12]
 80172b8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80172ba:	42ba      	cmp	r2, r7
 80172bc:	d309      	bcc.n	80172d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 80172be:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 80172c2:	2301      	movs	r3, #1
 80172c4:	9a05      	ldr	r2, [sp, #20]
 80172c6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80172ca:	d30e      	bcc.n	80172ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80172cc:	469a      	mov	sl, r3
 80172ce:	2600      	movs	r6, #0
 80172d0:	e035      	b.n	801733e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 80172d2:	9b05      	ldr	r3, [sp, #20]
 80172d4:	429f      	cmp	r7, r3
 80172d6:	d318      	bcc.n	801730a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 80172d8:	eb04 030a 	add.w	r3, r4, sl
 80172dc:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 80172e0:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 80172e4:	f10a 0301 	add.w	r3, sl, #1
 80172e8:	b29b      	uxth	r3, r3
 80172ea:	9a05      	ldr	r2, [sp, #20]
 80172ec:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 80172f0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80172f4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80172f6:	7116      	strb	r6, [r2, #4]
 80172f8:	f10a 0601 	add.w	r6, sl, #1
 80172fc:	80d1      	strh	r1, [r2, #6]
 80172fe:	7156      	strb	r6, [r2, #5]
 8017300:	9a05      	ldr	r2, [sp, #20]
 8017302:	3201      	adds	r2, #1
 8017304:	b292      	uxth	r2, r2
 8017306:	9205      	str	r2, [sp, #20]
 8017308:	e7e0      	b.n	80172cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801730a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801730e:	463a      	mov	r2, r7
 8017310:	795b      	ldrb	r3, [r3, #5]
 8017312:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8017316:	4426      	add	r6, r4
 8017318:	9919      	ldr	r1, [sp, #100]	; 0x64
 801731a:	eb01 0c06 	add.w	ip, r1, r6
 801731e:	f1bc 0f00 	cmp.w	ip, #0
 8017322:	dd07      	ble.n	8017334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8017324:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017328:	f892 c004 	ldrb.w	ip, [r2, #4]
 801732c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8017330:	88d2      	ldrh	r2, [r2, #6]
 8017332:	e7f1      	b.n	8017318 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8017334:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8017338:	b29b      	uxth	r3, r3
 801733a:	e7c3      	b.n	80172c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 801733c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801733e:	970c      	str	r7, [sp, #48]	; 0x30
 8017340:	46b4      	mov	ip, r6
 8017342:	9a01      	ldr	r2, [sp, #4]
 8017344:	461f      	mov	r7, r3
 8017346:	e78c      	b.n	8017262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 8017348:	1b7b      	subs	r3, r7, r5
 801734a:	eb0c 0605 	add.w	r6, ip, r5
 801734e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017352:	b29b      	uxth	r3, r3
 8017354:	b2b6      	uxth	r6, r6
 8017356:	9201      	str	r2, [sp, #4]
 8017358:	2500      	movs	r5, #0
 801735a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801735c:	4282      	cmp	r2, r0
 801735e:	d88b      	bhi.n	8017278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8017360:	9a01      	ldr	r2, [sp, #4]
 8017362:	e74b      	b.n	80171fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8017364:	4297      	cmp	r7, r2
 8017366:	d332      	bcc.n	80173ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 8017368:	1abb      	subs	r3, r7, r2
 801736a:	9208      	str	r2, [sp, #32]
 801736c:	9501      	str	r5, [sp, #4]
 801736e:	b29b      	uxth	r3, r3
 8017370:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017372:	29ff      	cmp	r1, #255	; 0xff
 8017374:	9908      	ldr	r1, [sp, #32]
 8017376:	eb0c 0601 	add.w	r6, ip, r1
 801737a:	d135      	bne.n	80173e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801737c:	f1a0 0e02 	sub.w	lr, r0, #2
 8017380:	b2b6      	uxth	r6, r6
 8017382:	45b4      	cmp	ip, r6
 8017384:	f040 808c 	bne.w	80174a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8017388:	9908      	ldr	r1, [sp, #32]
 801738a:	4297      	cmp	r7, r2
 801738c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017390:	d3e2      	bcc.n	8017358 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 8017392:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017394:	9904      	ldr	r1, [sp, #16]
 8017396:	8812      	ldrh	r2, [r2, #0]
 8017398:	1a52      	subs	r2, r2, r1
 801739a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801739c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80173a0:	9a07      	ldr	r2, [sp, #28]
 80173a2:	3201      	adds	r2, #1
 80173a4:	428a      	cmp	r2, r1
 80173a6:	9207      	str	r2, [sp, #28]
 80173a8:	f040 8087 	bne.w	80174ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 80173ac:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 80173b0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 80173b4:	9b04      	ldr	r3, [sp, #16]
 80173b6:	1bed      	subs	r5, r5, r7
 80173b8:	b2ad      	uxth	r5, r5
 80173ba:	2d00      	cmp	r5, #0
 80173bc:	bf08      	it	eq
 80173be:	461a      	moveq	r2, r3
 80173c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80173c2:	bf18      	it	ne
 80173c4:	2200      	movne	r2, #0
 80173c6:	3301      	adds	r3, #1
 80173c8:	b292      	uxth	r2, r2
 80173ca:	930d      	str	r3, [sp, #52]	; 0x34
 80173cc:	e70d      	b.n	80171ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 80173ce:	1bd1      	subs	r1, r2, r7
 80173d0:	9708      	str	r7, [sp, #32]
 80173d2:	b28b      	uxth	r3, r1
 80173d4:	9301      	str	r3, [sp, #4]
 80173d6:	462b      	mov	r3, r5
 80173d8:	e7ca      	b.n	8017370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 80173da:	bf00      	nop
 80173dc:	24001e7c 	.word	0x24001e7c
 80173e0:	24001e76 	.word	0x24001e76
 80173e4:	fffff7fb 	.word	0xfffff7fb
 80173e8:	b2b6      	uxth	r6, r6
 80173ea:	900b      	str	r0, [sp, #44]	; 0x2c
 80173ec:	45b4      	cmp	ip, r6
 80173ee:	d0cb      	beq.n	8017388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 80173f0:	f10c 0101 	add.w	r1, ip, #1
 80173f4:	44a4      	add	ip, r4
 80173f6:	9117      	str	r1, [sp, #92]	; 0x5c
 80173f8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 80173fc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80173fe:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8017402:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8017404:	ea4f 2825 	mov.w	r8, r5, asr #8
 8017408:	f8b1 c000 	ldrh.w	ip, [r1]
 801740c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801740e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017412:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8017416:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801741a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801741e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017422:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017426:	fb1e fe01 	smulbb	lr, lr, r1
 801742a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801742c:	fa5f fc8c 	uxtb.w	ip, ip
 8017430:	fb08 e801 	mla	r8, r8, r1, lr
 8017434:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8017438:	990e      	ldr	r1, [sp, #56]	; 0x38
 801743a:	00ed      	lsls	r5, r5, #3
 801743c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017440:	fa1f f888 	uxth.w	r8, r8
 8017444:	fb19 f901 	smulbb	r9, r9, r1
 8017448:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801744a:	b2ed      	uxtb	r5, r5
 801744c:	fb0e 9e01 	mla	lr, lr, r1, r9
 8017450:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017452:	fb1c fc01 	smulbb	ip, ip, r1
 8017456:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8017458:	fa1f fe8e 	uxth.w	lr, lr
 801745c:	fb05 c501 	mla	r5, r5, r1, ip
 8017460:	f108 0c01 	add.w	ip, r8, #1
 8017464:	f10e 0901 	add.w	r9, lr, #1
 8017468:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801746a:	b2ad      	uxth	r5, r5
 801746c:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8017470:	f105 0c01 	add.w	ip, r5, #1
 8017474:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8017478:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801747c:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8017480:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017484:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017488:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801748c:	ea4c 0808 	orr.w	r8, ip, r8
 8017490:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 8017494:	ea48 0809 	orr.w	r8, r8, r9
 8017498:	f821 8b02 	strh.w	r8, [r1], #2
 801749c:	910b      	str	r1, [sp, #44]	; 0x2c
 801749e:	e7a5      	b.n	80173ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 80174a0:	f10c 0801 	add.w	r8, ip, #1
 80174a4:	44a4      	add	ip, r4
 80174a6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80174a8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 80174ac:	fa1f fc88 	uxth.w	ip, r8
 80174b0:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80174b4:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80174b8:	e763      	b.n	8017382 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 80174ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80174be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80174c2:	1aad      	subs	r5, r5, r2
 80174c4:	b2ad      	uxth	r5, r5
 80174c6:	2d00      	cmp	r5, #0
 80174c8:	bf18      	it	ne
 80174ca:	2200      	movne	r2, #0
 80174cc:	9201      	str	r2, [sp, #4]
 80174ce:	e744      	b.n	801735a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 80174d0:	4b03      	ldr	r3, [pc, #12]	; (80174e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 80174d2:	6818      	ldr	r0, [r3, #0]
 80174d4:	6803      	ldr	r3, [r0, #0]
 80174d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80174d8:	4798      	blx	r3
 80174da:	b01f      	add	sp, #124	; 0x7c
 80174dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174e0:	24001e7c 	.word	0x24001e7c

080174e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80174e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174e8:	b08f      	sub	sp, #60	; 0x3c
 80174ea:	461c      	mov	r4, r3
 80174ec:	460f      	mov	r7, r1
 80174ee:	9203      	str	r2, [sp, #12]
 80174f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80174f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80174f6:	9202      	str	r2, [sp, #8]
 80174f8:	2a00      	cmp	r2, #0
 80174fa:	f000 8128 	beq.w	801774e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 80174fe:	6820      	ldr	r0, [r4, #0]
 8017500:	aa0a      	add	r2, sp, #40	; 0x28
 8017502:	6861      	ldr	r1, [r4, #4]
 8017504:	c203      	stmia	r2!, {r0, r1}
 8017506:	6818      	ldr	r0, [r3, #0]
 8017508:	aa0c      	add	r2, sp, #48	; 0x30
 801750a:	6859      	ldr	r1, [r3, #4]
 801750c:	c203      	stmia	r2!, {r0, r1}
 801750e:	a80a      	add	r0, sp, #40	; 0x28
 8017510:	f7f9 ff64 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017514:	4621      	mov	r1, r4
 8017516:	a80c      	add	r0, sp, #48	; 0x30
 8017518:	f7f9 ff88 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801751c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017520:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8017524:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8017528:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801752c:	bfdb      	ittet	le
 801752e:	b2b3      	uxthle	r3, r6
 8017530:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8017534:	2301      	movgt	r3, #1
 8017536:	fb92 f3f3 	sdivle	r3, r2, r3
 801753a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801753e:	441d      	add	r5, r3
 8017540:	fb92 f1f3 	sdiv	r1, r2, r3
 8017544:	fa1f fc81 	uxth.w	ip, r1
 8017548:	3d01      	subs	r5, #1
 801754a:	fb0c 2413 	mls	r4, ip, r3, r2
 801754e:	4661      	mov	r1, ip
 8017550:	fb14 f406 	smulbb	r4, r4, r6
 8017554:	4404      	add	r4, r0
 8017556:	fb95 f5f3 	sdiv	r5, r5, r3
 801755a:	b2a4      	uxth	r4, r4
 801755c:	b121      	cbz	r1, 8017568 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 801755e:	9b03      	ldr	r3, [sp, #12]
 8017560:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8017564:	ba1b      	rev	r3, r3
 8017566:	441f      	add	r7, r3
 8017568:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801756c:	b2ad      	uxth	r5, r5
 801756e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8017572:	4418      	add	r0, r3
 8017574:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8017578:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801757c:	00ad      	lsls	r5, r5, #2
 801757e:	441a      	add	r2, r3
 8017580:	4b74      	ldr	r3, [pc, #464]	; (8017754 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8017582:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8017586:	6818      	ldr	r0, [r3, #0]
 8017588:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801758c:	6803      	ldr	r3, [r0, #0]
 801758e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017590:	4798      	blx	r3
 8017592:	4a71      	ldr	r2, [pc, #452]	; (8017758 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8017594:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8017598:	2c00      	cmp	r4, #0
 801759a:	8813      	ldrh	r3, [r2, #0]
 801759c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80175a0:	bf0c      	ite	eq
 80175a2:	46c8      	moveq	r8, r9
 80175a4:	f04f 0800 	movne.w	r8, #0
 80175a8:	9209      	str	r2, [sp, #36]	; 0x24
 80175aa:	fb03 c101 	mla	r1, r3, r1, ip
 80175ae:	4373      	muls	r3, r6
 80175b0:	fa1f f888 	uxth.w	r8, r8
 80175b4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80175b8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80175bc:	9304      	str	r3, [sp, #16]
 80175be:	1d2b      	adds	r3, r5, #4
 80175c0:	9305      	str	r3, [sp, #20]
 80175c2:	2300      	movs	r3, #0
 80175c4:	9301      	str	r3, [sp, #4]
 80175c6:	9a04      	ldr	r2, [sp, #16]
 80175c8:	4282      	cmp	r2, r0
 80175ca:	f240 80bb 	bls.w	8017744 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80175ce:	b95b      	cbnz	r3, 80175e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 80175d0:	783a      	ldrb	r2, [r7, #0]
 80175d2:	0993      	lsrs	r3, r2, #6
 80175d4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80175d8:	9201      	str	r2, [sp, #4]
 80175da:	1e5a      	subs	r2, r3, #1
 80175dc:	2a02      	cmp	r2, #2
 80175de:	bf8d      	iteet	hi
 80175e0:	787b      	ldrbhi	r3, [r7, #1]
 80175e2:	3701      	addls	r7, #1
 80175e4:	b29b      	uxthls	r3, r3
 80175e6:	3702      	addhi	r7, #2
 80175e8:	b184      	cbz	r4, 801760c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 80175ea:	429c      	cmp	r4, r3
 80175ec:	bf91      	iteee	ls
 80175ee:	1b1c      	subls	r4, r3, r4
 80175f0:	1ae4      	subhi	r4, r4, r3
 80175f2:	46c4      	movhi	ip, r8
 80175f4:	f04f 0a00 	movhi.w	sl, #0
 80175f8:	bf9b      	ittet	ls
 80175fa:	fa1f fa84 	uxthls.w	sl, r4
 80175fe:	2400      	movls	r4, #0
 8017600:	b2a4      	uxthhi	r4, r4
 8017602:	fa1f fc89 	uxthls.w	ip, r9
 8017606:	4653      	mov	r3, sl
 8017608:	46e0      	mov	r8, ip
 801760a:	e7dc      	b.n	80175c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 801760c:	2204      	movs	r2, #4
 801760e:	9905      	ldr	r1, [sp, #20]
 8017610:	4543      	cmp	r3, r8
 8017612:	4615      	mov	r5, r2
 8017614:	9a01      	ldr	r2, [sp, #4]
 8017616:	bf24      	itt	cs
 8017618:	eba3 0a08 	subcs.w	sl, r3, r8
 801761c:	46c6      	movcs	lr, r8
 801761e:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017622:	9903      	ldr	r1, [sp, #12]
 8017624:	bf3c      	itt	cc
 8017626:	eba8 0c03 	subcc.w	ip, r8, r3
 801762a:	469e      	movcc	lr, r3
 801762c:	588a      	ldr	r2, [r1, r2]
 801762e:	bf26      	itte	cs
 8017630:	fa1f fa8a 	uxthcs.w	sl, sl
 8017634:	46a4      	movcs	ip, r4
 8017636:	fa1f fc8c 	uxthcc.w	ip, ip
 801763a:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801763e:	bf38      	it	cc
 8017640:	46a2      	movcc	sl, r4
 8017642:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8017646:	2900      	cmp	r1, #0
 8017648:	d066      	beq.n	8017718 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801764a:	29ff      	cmp	r1, #255	; 0xff
 801764c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8017650:	d114      	bne.n	801767c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8017652:	9d02      	ldr	r5, [sp, #8]
 8017654:	2dff      	cmp	r5, #255	; 0xff
 8017656:	d111      	bne.n	801767c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8017658:	0951      	lsrs	r1, r2, #5
 801765a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801765e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017662:	4486      	add	lr, r0
 8017664:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017668:	f026 0607 	bic.w	r6, r6, #7
 801766c:	430e      	orrs	r6, r1
 801766e:	4316      	orrs	r6, r2
 8017670:	b2b6      	uxth	r6, r6
 8017672:	4586      	cmp	lr, r0
 8017674:	d051      	beq.n	801771a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017676:	f820 6b02 	strh.w	r6, [r0], #2
 801767a:	e7fa      	b.n	8017672 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801767c:	9d02      	ldr	r5, [sp, #8]
 801767e:	b2f6      	uxtb	r6, r6
 8017680:	4486      	add	lr, r0
 8017682:	4369      	muls	r1, r5
 8017684:	1c4d      	adds	r5, r1, #1
 8017686:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801768a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801768e:	b2d2      	uxtb	r2, r2
 8017690:	122d      	asrs	r5, r5, #8
 8017692:	ea6f 0b05 	mvn.w	fp, r5
 8017696:	b2ad      	uxth	r5, r5
 8017698:	fb11 f105 	smulbb	r1, r1, r5
 801769c:	fa5f fb8b 	uxtb.w	fp, fp
 80176a0:	fb16 f605 	smulbb	r6, r6, r5
 80176a4:	fb12 f205 	smulbb	r2, r2, r5
 80176a8:	b289      	uxth	r1, r1
 80176aa:	b2b6      	uxth	r6, r6
 80176ac:	b292      	uxth	r2, r2
 80176ae:	9106      	str	r1, [sp, #24]
 80176b0:	9607      	str	r6, [sp, #28]
 80176b2:	9208      	str	r2, [sp, #32]
 80176b4:	4586      	cmp	lr, r0
 80176b6:	d030      	beq.n	801771a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80176b8:	8802      	ldrh	r2, [r0, #0]
 80176ba:	9906      	ldr	r1, [sp, #24]
 80176bc:	1216      	asrs	r6, r2, #8
 80176be:	10d5      	asrs	r5, r2, #3
 80176c0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80176c4:	00d2      	lsls	r2, r2, #3
 80176c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80176ca:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80176ce:	b2d2      	uxtb	r2, r2
 80176d0:	fb06 160b 	mla	r6, r6, fp, r1
 80176d4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80176d8:	9907      	ldr	r1, [sp, #28]
 80176da:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80176de:	b2b6      	uxth	r6, r6
 80176e0:	fb05 150b 	mla	r5, r5, fp, r1
 80176e4:	9908      	ldr	r1, [sp, #32]
 80176e6:	fb02 120b 	mla	r2, r2, fp, r1
 80176ea:	1c71      	adds	r1, r6, #1
 80176ec:	b2ad      	uxth	r5, r5
 80176ee:	b292      	uxth	r2, r2
 80176f0:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 80176f4:	1c51      	adds	r1, r2, #1
 80176f6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80176fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80176fe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017702:	4316      	orrs	r6, r2
 8017704:	1c6a      	adds	r2, r5, #1
 8017706:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801770a:	096d      	lsrs	r5, r5, #5
 801770c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017710:	432e      	orrs	r6, r5
 8017712:	f820 6b02 	strh.w	r6, [r0], #2
 8017716:	e7cd      	b.n	80176b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8017718:	4470      	add	r0, lr
 801771a:	4543      	cmp	r3, r8
 801771c:	f4ff af73 	bcc.w	8017606 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8017720:	fa1f fc89 	uxth.w	ip, r9
 8017724:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8017728:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801772a:	eba4 040c 	sub.w	r4, r4, ip
 801772e:	881b      	ldrh	r3, [r3, #0]
 8017730:	b2a4      	uxth	r4, r4
 8017732:	eba3 0309 	sub.w	r3, r3, r9
 8017736:	2c00      	cmp	r4, #0
 8017738:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801773c:	bf18      	it	ne
 801773e:	f04f 0c00 	movne.w	ip, #0
 8017742:	e760      	b.n	8017606 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8017744:	4b03      	ldr	r3, [pc, #12]	; (8017754 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8017746:	6818      	ldr	r0, [r3, #0]
 8017748:	6803      	ldr	r3, [r0, #0]
 801774a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801774c:	4798      	blx	r3
 801774e:	b00f      	add	sp, #60	; 0x3c
 8017750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017754:	24001e7c 	.word	0x24001e7c
 8017758:	24001e76 	.word	0x24001e76

0801775c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801775c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017760:	b093      	sub	sp, #76	; 0x4c
 8017762:	461c      	mov	r4, r3
 8017764:	9205      	str	r2, [sp, #20]
 8017766:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801776a:	9101      	str	r1, [sp, #4]
 801776c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801776e:	9202      	str	r2, [sp, #8]
 8017770:	2a00      	cmp	r2, #0
 8017772:	f000 812e 	beq.w	80179d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8017776:	6820      	ldr	r0, [r4, #0]
 8017778:	aa0e      	add	r2, sp, #56	; 0x38
 801777a:	6861      	ldr	r1, [r4, #4]
 801777c:	c203      	stmia	r2!, {r0, r1}
 801777e:	6818      	ldr	r0, [r3, #0]
 8017780:	aa10      	add	r2, sp, #64	; 0x40
 8017782:	6859      	ldr	r1, [r3, #4]
 8017784:	c203      	stmia	r2!, {r0, r1}
 8017786:	a80e      	add	r0, sp, #56	; 0x38
 8017788:	f7f9 fe28 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801778c:	4621      	mov	r1, r4
 801778e:	a810      	add	r0, sp, #64	; 0x40
 8017790:	f7f9 fe4c 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017794:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017798:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801779c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80177a0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80177a4:	bfdb      	ittet	le
 80177a6:	b2b3      	uxthle	r3, r6
 80177a8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 80177ac:	2301      	movgt	r3, #1
 80177ae:	fb92 f3f3 	sdivle	r3, r2, r3
 80177b2:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80177b6:	441d      	add	r5, r3
 80177b8:	fb92 f1f3 	sdiv	r1, r2, r3
 80177bc:	fa1f fc81 	uxth.w	ip, r1
 80177c0:	3d01      	subs	r5, #1
 80177c2:	fb0c 2413 	mls	r4, ip, r3, r2
 80177c6:	4661      	mov	r1, ip
 80177c8:	fb14 f406 	smulbb	r4, r4, r6
 80177cc:	4404      	add	r4, r0
 80177ce:	fb95 f5f3 	sdiv	r5, r5, r3
 80177d2:	b2a4      	uxth	r4, r4
 80177d4:	b131      	cbz	r1, 80177e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 80177d6:	9b05      	ldr	r3, [sp, #20]
 80177d8:	9901      	ldr	r1, [sp, #4]
 80177da:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80177de:	ba1b      	rev	r3, r3
 80177e0:	4419      	add	r1, r3
 80177e2:	9101      	str	r1, [sp, #4]
 80177e4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80177e8:	b2ad      	uxth	r5, r5
 80177ea:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80177ee:	4418      	add	r0, r3
 80177f0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 80177f4:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 80177f8:	00ad      	lsls	r5, r5, #2
 80177fa:	441a      	add	r2, r3
 80177fc:	4b76      	ldr	r3, [pc, #472]	; (80179d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80177fe:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 8017802:	6818      	ldr	r0, [r3, #0]
 8017804:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8017808:	6803      	ldr	r3, [r0, #0]
 801780a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801780c:	4798      	blx	r3
 801780e:	4973      	ldr	r1, [pc, #460]	; (80179dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8017810:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 8017814:	2c00      	cmp	r4, #0
 8017816:	880b      	ldrh	r3, [r1, #0]
 8017818:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801781c:	910d      	str	r1, [sp, #52]	; 0x34
 801781e:	fb03 c202 	mla	r2, r3, r2, ip
 8017822:	bf08      	it	eq
 8017824:	46dc      	moveq	ip, fp
 8017826:	fb03 f306 	mul.w	r3, r3, r6
 801782a:	bf18      	it	ne
 801782c:	f04f 0c00 	movne.w	ip, #0
 8017830:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017834:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017838:	fa1f fc8c 	uxth.w	ip, ip
 801783c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017840:	9106      	str	r1, [sp, #24]
 8017842:	9308      	str	r3, [sp, #32]
 8017844:	1d2b      	adds	r3, r5, #4
 8017846:	9309      	str	r3, [sp, #36]	; 0x24
 8017848:	9b02      	ldr	r3, [sp, #8]
 801784a:	43da      	mvns	r2, r3
 801784c:	2300      	movs	r3, #0
 801784e:	b2d2      	uxtb	r2, r2
 8017850:	9303      	str	r3, [sp, #12]
 8017852:	9207      	str	r2, [sp, #28]
 8017854:	9a08      	ldr	r2, [sp, #32]
 8017856:	4282      	cmp	r2, r0
 8017858:	f240 80b6 	bls.w	80179c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 801785c:	b963      	cbnz	r3, 8017878 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801785e:	9b01      	ldr	r3, [sp, #4]
 8017860:	781a      	ldrb	r2, [r3, #0]
 8017862:	0993      	lsrs	r3, r2, #6
 8017864:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8017868:	9203      	str	r2, [sp, #12]
 801786a:	1e5a      	subs	r2, r3, #1
 801786c:	2a02      	cmp	r2, #2
 801786e:	d815      	bhi.n	801789c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8017870:	9a01      	ldr	r2, [sp, #4]
 8017872:	b29b      	uxth	r3, r3
 8017874:	3201      	adds	r2, #1
 8017876:	9201      	str	r2, [sp, #4]
 8017878:	b1b4      	cbz	r4, 80178a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801787a:	429c      	cmp	r4, r3
 801787c:	bf91      	iteee	ls
 801787e:	1b1c      	subls	r4, r3, r4
 8017880:	1ae4      	subhi	r4, r4, r3
 8017882:	4666      	movhi	r6, ip
 8017884:	f04f 0800 	movhi.w	r8, #0
 8017888:	bf9b      	ittet	ls
 801788a:	fa1f f884 	uxthls.w	r8, r4
 801788e:	2400      	movls	r4, #0
 8017890:	b2a4      	uxthhi	r4, r4
 8017892:	fa1f f68b 	uxthls.w	r6, fp
 8017896:	4643      	mov	r3, r8
 8017898:	46b4      	mov	ip, r6
 801789a:	e7db      	b.n	8017854 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 801789c:	9a01      	ldr	r2, [sp, #4]
 801789e:	9b01      	ldr	r3, [sp, #4]
 80178a0:	3202      	adds	r2, #2
 80178a2:	785b      	ldrb	r3, [r3, #1]
 80178a4:	9201      	str	r2, [sp, #4]
 80178a6:	e7e7      	b.n	8017878 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80178a8:	2203      	movs	r2, #3
 80178aa:	9909      	ldr	r1, [sp, #36]	; 0x24
 80178ac:	4563      	cmp	r3, ip
 80178ae:	4615      	mov	r5, r2
 80178b0:	9a03      	ldr	r2, [sp, #12]
 80178b2:	bf2c      	ite	cs
 80178b4:	eba3 080c 	subcs.w	r8, r3, ip
 80178b8:	ebac 0603 	subcc.w	r6, ip, r3
 80178bc:	fb15 1202 	smlabb	r2, r5, r2, r1
 80178c0:	9905      	ldr	r1, [sp, #20]
 80178c2:	bf24      	itt	cs
 80178c4:	fa1f f888 	uxthcs.w	r8, r8
 80178c8:	46e1      	movcs	r9, ip
 80178ca:	eb01 0502 	add.w	r5, r1, r2
 80178ce:	9902      	ldr	r1, [sp, #8]
 80178d0:	bf2f      	iteee	cs
 80178d2:	4626      	movcs	r6, r4
 80178d4:	b2b6      	uxthcc	r6, r6
 80178d6:	4699      	movcc	r9, r3
 80178d8:	46a0      	movcc	r8, r4
 80178da:	29ff      	cmp	r1, #255	; 0xff
 80178dc:	d04a      	beq.n	8017974 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80178de:	9f06      	ldr	r7, [sp, #24]
 80178e0:	46ca      	mov	sl, r9
 80178e2:	78a9      	ldrb	r1, [r5, #2]
 80178e4:	9004      	str	r0, [sp, #16]
 80178e6:	4379      	muls	r1, r7
 80178e8:	910a      	str	r1, [sp, #40]	; 0x28
 80178ea:	7869      	ldrb	r1, [r5, #1]
 80178ec:	4379      	muls	r1, r7
 80178ee:	910b      	str	r1, [sp, #44]	; 0x2c
 80178f0:	9905      	ldr	r1, [sp, #20]
 80178f2:	5c8a      	ldrb	r2, [r1, r2]
 80178f4:	437a      	muls	r2, r7
 80178f6:	920c      	str	r2, [sp, #48]	; 0x30
 80178f8:	f1ba 0f00 	cmp.w	sl, #0
 80178fc:	d03d      	beq.n	801797a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80178fe:	9a04      	ldr	r2, [sp, #16]
 8017900:	f10a 3aff 	add.w	sl, sl, #4294967295
 8017904:	9f07      	ldr	r7, [sp, #28]
 8017906:	8812      	ldrh	r2, [r2, #0]
 8017908:	fa1f fa8a 	uxth.w	sl, sl
 801790c:	46be      	mov	lr, r7
 801790e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017910:	1215      	asrs	r5, r2, #8
 8017912:	10d1      	asrs	r1, r2, #3
 8017914:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017918:	00d2      	lsls	r2, r2, #3
 801791a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801791e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017922:	b2d2      	uxtb	r2, r2
 8017924:	fb05 750e 	mla	r5, r5, lr, r7
 8017928:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801792c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801792e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017932:	b2ad      	uxth	r5, r5
 8017934:	fb01 710e 	mla	r1, r1, lr, r7
 8017938:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801793a:	fb02 720e 	mla	r2, r2, lr, r7
 801793e:	f105 0e01 	add.w	lr, r5, #1
 8017942:	b289      	uxth	r1, r1
 8017944:	b292      	uxth	r2, r2
 8017946:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801794a:	f102 0e01 	add.w	lr, r2, #1
 801794e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017952:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8017956:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801795a:	4315      	orrs	r5, r2
 801795c:	1c4a      	adds	r2, r1, #1
 801795e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017962:	9a04      	ldr	r2, [sp, #16]
 8017964:	0949      	lsrs	r1, r1, #5
 8017966:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801796a:	430d      	orrs	r5, r1
 801796c:	f822 5b02 	strh.w	r5, [r2], #2
 8017970:	9204      	str	r2, [sp, #16]
 8017972:	e7c1      	b.n	80178f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8017974:	4649      	mov	r1, r9
 8017976:	4686      	mov	lr, r0
 8017978:	b999      	cbnz	r1, 80179a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801797a:	4563      	cmp	r3, ip
 801797c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8017980:	d389      	bcc.n	8017896 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8017982:	fa1f f68b 	uxth.w	r6, fp
 8017986:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801798a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801798c:	1ba4      	subs	r4, r4, r6
 801798e:	881b      	ldrh	r3, [r3, #0]
 8017990:	b2a4      	uxth	r4, r4
 8017992:	eba3 030b 	sub.w	r3, r3, fp
 8017996:	2c00      	cmp	r4, #0
 8017998:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801799c:	bf18      	it	ne
 801799e:	2600      	movne	r6, #0
 80179a0:	e779      	b.n	8017896 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 80179a2:	78aa      	ldrb	r2, [r5, #2]
 80179a4:	3901      	subs	r1, #1
 80179a6:	4f0e      	ldr	r7, [pc, #56]	; (80179e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 80179a8:	b289      	uxth	r1, r1
 80179aa:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80179ae:	786a      	ldrb	r2, [r5, #1]
 80179b0:	00d2      	lsls	r2, r2, #3
 80179b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80179b6:	ea4a 0202 	orr.w	r2, sl, r2
 80179ba:	f895 a000 	ldrb.w	sl, [r5]
 80179be:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80179c2:	f82e 2b02 	strh.w	r2, [lr], #2
 80179c6:	e7d7      	b.n	8017978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 80179c8:	4b03      	ldr	r3, [pc, #12]	; (80179d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80179ca:	6818      	ldr	r0, [r3, #0]
 80179cc:	6803      	ldr	r3, [r0, #0]
 80179ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179d0:	4798      	blx	r3
 80179d2:	b013      	add	sp, #76	; 0x4c
 80179d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179d8:	24001e7c 	.word	0x24001e7c
 80179dc:	24001e76 	.word	0x24001e76
 80179e0:	fffff800 	.word	0xfffff800

080179e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80179e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179e8:	b09d      	sub	sp, #116	; 0x74
 80179ea:	461c      	mov	r4, r3
 80179ec:	4683      	mov	fp, r0
 80179ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80179f0:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 80179f4:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 80179f8:	920e      	str	r2, [sp, #56]	; 0x38
 80179fa:	2a00      	cmp	r2, #0
 80179fc:	f000 81e4 	beq.w	8017dc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8017a00:	6820      	ldr	r0, [r4, #0]
 8017a02:	aa18      	add	r2, sp, #96	; 0x60
 8017a04:	6861      	ldr	r1, [r4, #4]
 8017a06:	c203      	stmia	r2!, {r0, r1}
 8017a08:	6818      	ldr	r0, [r3, #0]
 8017a0a:	aa1a      	add	r2, sp, #104	; 0x68
 8017a0c:	6859      	ldr	r1, [r3, #4]
 8017a0e:	c203      	stmia	r2!, {r0, r1}
 8017a10:	a818      	add	r0, sp, #96	; 0x60
 8017a12:	f7f9 fce3 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a16:	4621      	mov	r1, r4
 8017a18:	a81a      	add	r0, sp, #104	; 0x68
 8017a1a:	f7f9 fd07 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a1e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8017a22:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 8017a26:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8017a2a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8017a2e:	bfdb      	ittet	le
 8017a30:	b29a      	uxthle	r2, r3
 8017a32:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8017a36:	2201      	movgt	r2, #1
 8017a38:	fb91 f2f2 	sdivle	r2, r1, r2
 8017a3c:	9202      	str	r2, [sp, #8]
 8017a3e:	9802      	ldr	r0, [sp, #8]
 8017a40:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8017a44:	9902      	ldr	r1, [sp, #8]
 8017a46:	fb92 f0f0 	sdiv	r0, r2, r0
 8017a4a:	b280      	uxth	r0, r0
 8017a4c:	440c      	add	r4, r1
 8017a4e:	900f      	str	r0, [sp, #60]	; 0x3c
 8017a50:	3c01      	subs	r4, #1
 8017a52:	9802      	ldr	r0, [sp, #8]
 8017a54:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8017a56:	fb05 2510 	mls	r5, r5, r0, r2
 8017a5a:	fb94 f4f1 	sdiv	r4, r4, r1
 8017a5e:	fb15 f503 	smulbb	r5, r5, r3
 8017a62:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 8017a66:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 8017a6a:	3401      	adds	r4, #1
 8017a6c:	440d      	add	r5, r1
 8017a6e:	4419      	add	r1, r3
 8017a70:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8017a74:	b2a4      	uxth	r4, r4
 8017a76:	441a      	add	r2, r3
 8017a78:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8017a7c:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 8017a80:	00a4      	lsls	r4, r4, #2
 8017a82:	9306      	str	r3, [sp, #24]
 8017a84:	b2ad      	uxth	r5, r5
 8017a86:	4bb3      	ldr	r3, [pc, #716]	; (8017d54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8017a88:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 8017a8c:	6818      	ldr	r0, [r3, #0]
 8017a8e:	6803      	ldr	r3, [r0, #0]
 8017a90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a92:	4798      	blx	r3
 8017a94:	4bb0      	ldr	r3, [pc, #704]	; (8017d58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8017a96:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 8017a9a:	2d00      	cmp	r5, #0
 8017a9c:	881a      	ldrh	r2, [r3, #0]
 8017a9e:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 8017aa2:	fb02 f606 	mul.w	r6, r2, r6
 8017aa6:	fb02 7101 	mla	r1, r2, r1, r7
 8017aaa:	9316      	str	r3, [sp, #88]	; 0x58
 8017aac:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8017ab0:	4baa      	ldr	r3, [pc, #680]	; (8017d5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8017ab2:	bf18      	it	ne
 8017ab4:	2100      	movne	r1, #0
 8017ab6:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8017aba:	eba3 030b 	sub.w	r3, r3, fp
 8017abe:	920a      	str	r2, [sp, #40]	; 0x28
 8017ac0:	f104 0204 	add.w	r2, r4, #4
 8017ac4:	9317      	str	r3, [sp, #92]	; 0x5c
 8017ac6:	9213      	str	r2, [sp, #76]	; 0x4c
 8017ac8:	9a06      	ldr	r2, [sp, #24]
 8017aca:	bf08      	it	eq
 8017acc:	4611      	moveq	r1, r2
 8017ace:	2200      	movs	r2, #0
 8017ad0:	b289      	uxth	r1, r1
 8017ad2:	920d      	str	r2, [sp, #52]	; 0x34
 8017ad4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017ad6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ad8:	fa12 f383 	uxtah	r3, r2, r3
 8017adc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017ade:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017ae2:	3304      	adds	r3, #4
 8017ae4:	9308      	str	r3, [sp, #32]
 8017ae6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017ae8:	4543      	cmp	r3, r8
 8017aea:	f240 8168 	bls.w	8017dbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8017aee:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8017af2:	f04f 0e01 	mov.w	lr, #1
 8017af6:	9a02      	ldr	r2, [sp, #8]
 8017af8:	9808      	ldr	r0, [sp, #32]
 8017afa:	fbb5 f3f3 	udiv	r3, r5, r3
 8017afe:	1ad3      	subs	r3, r2, r3
 8017b00:	7800      	ldrb	r0, [r0, #0]
 8017b02:	b29b      	uxth	r3, r3
 8017b04:	9010      	str	r0, [sp, #64]	; 0x40
 8017b06:	3001      	adds	r0, #1
 8017b08:	9314      	str	r3, [sp, #80]	; 0x50
 8017b0a:	9b08      	ldr	r3, [sp, #32]
 8017b0c:	9007      	str	r0, [sp, #28]
 8017b0e:	785a      	ldrb	r2, [r3, #1]
 8017b10:	789b      	ldrb	r3, [r3, #2]
 8017b12:	021b      	lsls	r3, r3, #8
 8017b14:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017b18:	9a08      	ldr	r2, [sp, #32]
 8017b1a:	78d2      	ldrb	r2, [r2, #3]
 8017b1c:	4313      	orrs	r3, r2
 8017b1e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017b20:	441a      	add	r2, r3
 8017b22:	1c50      	adds	r0, r2, #1
 8017b24:	7852      	ldrb	r2, [r2, #1]
 8017b26:	9005      	str	r0, [sp, #20]
 8017b28:	0212      	lsls	r2, r2, #8
 8017b2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017b2c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8017b30:	5cc3      	ldrb	r3, [r0, r3]
 8017b32:	431a      	orrs	r2, r3
 8017b34:	b293      	uxth	r3, r2
 8017b36:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 8017b3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8017b3c:	2300      	movs	r3, #0
 8017b3e:	9309      	str	r3, [sp, #36]	; 0x24
 8017b40:	2301      	movs	r3, #1
 8017b42:	9301      	str	r3, [sp, #4]
 8017b44:	9304      	str	r3, [sp, #16]
 8017b46:	2300      	movs	r3, #0
 8017b48:	9303      	str	r3, [sp, #12]
 8017b4a:	2d00      	cmp	r5, #0
 8017b4c:	d07d      	beq.n	8017c4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8017b4e:	45ae      	cmp	lr, r5
 8017b50:	d26c      	bcs.n	8017c2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8017b52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017b54:	eba5 050e 	sub.w	r5, r5, lr
 8017b58:	460c      	mov	r4, r1
 8017b5a:	4543      	cmp	r3, r8
 8017b5c:	b2ad      	uxth	r5, r5
 8017b5e:	d802      	bhi.n	8017b66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8017b60:	e071      	b.n	8017c46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8017b62:	2b00      	cmp	r3, #0
 8017b64:	d15d      	bne.n	8017c22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8017b66:	9b05      	ldr	r3, [sp, #20]
 8017b68:	9a04      	ldr	r2, [sp, #16]
 8017b6a:	785b      	ldrb	r3, [r3, #1]
 8017b6c:	f1c2 0207 	rsb	r2, r2, #7
 8017b70:	9904      	ldr	r1, [sp, #16]
 8017b72:	4093      	lsls	r3, r2
 8017b74:	005b      	lsls	r3, r3, #1
 8017b76:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8017b7a:	9b05      	ldr	r3, [sp, #20]
 8017b7c:	781b      	ldrb	r3, [r3, #0]
 8017b7e:	410b      	asrs	r3, r1
 8017b80:	3101      	adds	r1, #1
 8017b82:	b2c9      	uxtb	r1, r1
 8017b84:	b2db      	uxtb	r3, r3
 8017b86:	2908      	cmp	r1, #8
 8017b88:	9104      	str	r1, [sp, #16]
 8017b8a:	9905      	ldr	r1, [sp, #20]
 8017b8c:	ea43 0302 	orr.w	r3, r3, r2
 8017b90:	bf0c      	ite	eq
 8017b92:	3102      	addeq	r1, #2
 8017b94:	3101      	addne	r1, #1
 8017b96:	b29a      	uxth	r2, r3
 8017b98:	bf05      	ittet	eq
 8017b9a:	9105      	streq	r1, [sp, #20]
 8017b9c:	2100      	moveq	r1, #0
 8017b9e:	9105      	strne	r1, [sp, #20]
 8017ba0:	9104      	streq	r1, [sp, #16]
 8017ba2:	9910      	ldr	r1, [sp, #64]	; 0x40
 8017ba4:	4291      	cmp	r1, r2
 8017ba6:	d30a      	bcc.n	8017bbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8017ba8:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8017bac:	2301      	movs	r3, #1
 8017bae:	9907      	ldr	r1, [sp, #28]
 8017bb0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8017bb4:	d30f      	bcc.n	8017bd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8017bb6:	2100      	movs	r1, #0
 8017bb8:	9301      	str	r3, [sp, #4]
 8017bba:	9103      	str	r1, [sp, #12]
 8017bbc:	e032      	b.n	8017c24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017bbe:	9b07      	ldr	r3, [sp, #28]
 8017bc0:	429a      	cmp	r2, r3
 8017bc2:	d318      	bcc.n	8017bf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8017bc4:	9b01      	ldr	r3, [sp, #4]
 8017bc6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8017bca:	445b      	add	r3, fp
 8017bcc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8017bd0:	9b01      	ldr	r3, [sp, #4]
 8017bd2:	3301      	adds	r3, #1
 8017bd4:	b29b      	uxth	r3, r3
 8017bd6:	9907      	ldr	r1, [sp, #28]
 8017bd8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8017bdc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017be0:	7108      	strb	r0, [r1, #4]
 8017be2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017be4:	80c8      	strh	r0, [r1, #6]
 8017be6:	9801      	ldr	r0, [sp, #4]
 8017be8:	3001      	adds	r0, #1
 8017bea:	7148      	strb	r0, [r1, #5]
 8017bec:	9907      	ldr	r1, [sp, #28]
 8017bee:	3101      	adds	r1, #1
 8017bf0:	b289      	uxth	r1, r1
 8017bf2:	9107      	str	r1, [sp, #28]
 8017bf4:	e7df      	b.n	8017bb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8017bf6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8017bfa:	4611      	mov	r1, r2
 8017bfc:	795b      	ldrb	r3, [r3, #5]
 8017bfe:	f603 0004 	addw	r0, r3, #2052	; 0x804
 8017c02:	4458      	add	r0, fp
 8017c04:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8017c06:	4406      	add	r6, r0
 8017c08:	2e00      	cmp	r6, #0
 8017c0a:	dd06      	ble.n	8017c1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017c0c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017c10:	790e      	ldrb	r6, [r1, #4]
 8017c12:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8017c16:	88c9      	ldrh	r1, [r1, #6]
 8017c18:	e7f4      	b.n	8017c04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8017c1a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8017c1e:	b29b      	uxth	r3, r3
 8017c20:	e7c5      	b.n	8017bae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8017c22:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017c24:	4621      	mov	r1, r4
 8017c26:	920b      	str	r2, [sp, #44]	; 0x2c
 8017c28:	469e      	mov	lr, r3
 8017c2a:	e78e      	b.n	8017b4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8017c2c:	9a03      	ldr	r2, [sp, #12]
 8017c2e:	ebae 0305 	sub.w	r3, lr, r5
 8017c32:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017c36:	442a      	add	r2, r5
 8017c38:	b29b      	uxth	r3, r3
 8017c3a:	b292      	uxth	r2, r2
 8017c3c:	9203      	str	r2, [sp, #12]
 8017c3e:	2500      	movs	r5, #0
 8017c40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017c42:	4542      	cmp	r2, r8
 8017c44:	d88d      	bhi.n	8017b62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8017c46:	4621      	mov	r1, r4
 8017c48:	e74d      	b.n	8017ae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8017c4a:	458e      	cmp	lr, r1
 8017c4c:	f04f 0900 	mov.w	r9, #0
 8017c50:	bf2b      	itete	cs
 8017c52:	ebae 0301 	subcs.w	r3, lr, r1
 8017c56:	eba1 040e 	subcc.w	r4, r1, lr
 8017c5a:	462c      	movcs	r4, r5
 8017c5c:	462b      	movcc	r3, r5
 8017c5e:	bf27      	ittee	cs
 8017c60:	b29b      	uxthcs	r3, r3
 8017c62:	910c      	strcs	r1, [sp, #48]	; 0x30
 8017c64:	b2a4      	uxthcc	r4, r4
 8017c66:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 8017c6a:	9a03      	ldr	r2, [sp, #12]
 8017c6c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8017c6e:	444a      	add	r2, r9
 8017c70:	4548      	cmp	r0, r9
 8017c72:	b292      	uxth	r2, r2
 8017c74:	d074      	beq.n	8017d60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8017c76:	2004      	movs	r0, #4
 8017c78:	445a      	add	r2, fp
 8017c7a:	4605      	mov	r5, r0
 8017c7c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8017c80:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017c82:	fb15 0202 	smlabb	r2, r5, r2, r0
 8017c86:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017c88:	5880      	ldr	r0, [r0, r2]
 8017c8a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8017c8e:	d014      	beq.n	8017cba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8017c90:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017c94:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8017c98:	d112      	bne.n	8017cc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8017c9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017c9c:	2aff      	cmp	r2, #255	; 0xff
 8017c9e:	d10f      	bne.n	8017cc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8017ca0:	0942      	lsrs	r2, r0, #5
 8017ca2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8017ca6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017caa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017cae:	f025 0507 	bic.w	r5, r5, #7
 8017cb2:	4315      	orrs	r5, r2
 8017cb4:	4305      	orrs	r5, r0
 8017cb6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8017cba:	f109 0901 	add.w	r9, r9, #1
 8017cbe:	e7d4      	b.n	8017c6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8017cc0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8017cc4:	b2ed      	uxtb	r5, r5
 8017cc6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017cca:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017cce:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8017cd2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017cd6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8017cda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017cde:	9215      	str	r2, [sp, #84]	; 0x54
 8017ce0:	fa5f fc8c 	uxtb.w	ip, ip
 8017ce4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017ce6:	b2c0      	uxtb	r0, r0
 8017ce8:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017cec:	fb02 fa0a 	mul.w	sl, r2, sl
 8017cf0:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017cf4:	f10a 0201 	add.w	r2, sl, #1
 8017cf8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8017cfc:	1212      	asrs	r2, r2, #8
 8017cfe:	fa1f fa82 	uxth.w	sl, r2
 8017d02:	43d2      	mvns	r2, r2
 8017d04:	fb16 f60a 	smulbb	r6, r6, sl
 8017d08:	b2d2      	uxtb	r2, r2
 8017d0a:	fb10 f00a 	smulbb	r0, r0, sl
 8017d0e:	fb07 6702 	mla	r7, r7, r2, r6
 8017d12:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8017d14:	fb0c 0002 	mla	r0, ip, r2, r0
 8017d18:	fb15 f50a 	smulbb	r5, r5, sl
 8017d1c:	b2bf      	uxth	r7, r7
 8017d1e:	b280      	uxth	r0, r0
 8017d20:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017d24:	fb06 5602 	mla	r6, r6, r2, r5
 8017d28:	1c7a      	adds	r2, r7, #1
 8017d2a:	1c45      	adds	r5, r0, #1
 8017d2c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017d30:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017d34:	b2b6      	uxth	r6, r6
 8017d36:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017d3a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017d3e:	432f      	orrs	r7, r5
 8017d40:	1c75      	adds	r5, r6, #1
 8017d42:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017d46:	096d      	lsrs	r5, r5, #5
 8017d48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017d4c:	432f      	orrs	r7, r5
 8017d4e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8017d52:	e7b2      	b.n	8017cba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8017d54:	24001e7c 	.word	0x24001e7c
 8017d58:	24001e76 	.word	0x24001e76
 8017d5c:	fffff7fb 	.word	0xfffff7fb
 8017d60:	9203      	str	r2, [sp, #12]
 8017d62:	458e      	cmp	lr, r1
 8017d64:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017d66:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017d6a:	f4ff af68 	bcc.w	8017c3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017d6e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017d70:	9906      	ldr	r1, [sp, #24]
 8017d72:	8812      	ldrh	r2, [r2, #0]
 8017d74:	1a52      	subs	r2, r2, r1
 8017d76:	9914      	ldr	r1, [sp, #80]	; 0x50
 8017d78:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017d7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017d7e:	3201      	adds	r2, #1
 8017d80:	428a      	cmp	r2, r1
 8017d82:	9209      	str	r2, [sp, #36]	; 0x24
 8017d84:	d111      	bne.n	8017daa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8017d86:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8017d8a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8017d8e:	9b06      	ldr	r3, [sp, #24]
 8017d90:	eba5 0509 	sub.w	r5, r5, r9
 8017d94:	b2ad      	uxth	r5, r5
 8017d96:	2d00      	cmp	r5, #0
 8017d98:	bf08      	it	eq
 8017d9a:	4619      	moveq	r1, r3
 8017d9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d9e:	bf18      	it	ne
 8017da0:	2100      	movne	r1, #0
 8017da2:	3301      	adds	r3, #1
 8017da4:	b289      	uxth	r1, r1
 8017da6:	930d      	str	r3, [sp, #52]	; 0x34
 8017da8:	e694      	b.n	8017ad4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8017daa:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017dae:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017db2:	1b2d      	subs	r5, r5, r4
 8017db4:	b2ad      	uxth	r5, r5
 8017db6:	2d00      	cmp	r5, #0
 8017db8:	bf18      	it	ne
 8017dba:	2400      	movne	r4, #0
 8017dbc:	e740      	b.n	8017c40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8017dbe:	4b04      	ldr	r3, [pc, #16]	; (8017dd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8017dc0:	6818      	ldr	r0, [r3, #0]
 8017dc2:	6803      	ldr	r3, [r0, #0]
 8017dc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017dc6:	4798      	blx	r3
 8017dc8:	b01d      	add	sp, #116	; 0x74
 8017dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017dce:	bf00      	nop
 8017dd0:	24001e7c 	.word	0x24001e7c

08017dd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dd8:	b09f      	sub	sp, #124	; 0x7c
 8017dda:	461d      	mov	r5, r3
 8017ddc:	4604      	mov	r4, r0
 8017dde:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017de0:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8017de4:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8017de8:	920a      	str	r2, [sp, #40]	; 0x28
 8017dea:	2a00      	cmp	r2, #0
 8017dec:	f000 81fe 	beq.w	80181ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8017df0:	6828      	ldr	r0, [r5, #0]
 8017df2:	aa1a      	add	r2, sp, #104	; 0x68
 8017df4:	6869      	ldr	r1, [r5, #4]
 8017df6:	c203      	stmia	r2!, {r0, r1}
 8017df8:	6818      	ldr	r0, [r3, #0]
 8017dfa:	aa1c      	add	r2, sp, #112	; 0x70
 8017dfc:	6859      	ldr	r1, [r3, #4]
 8017dfe:	c203      	stmia	r2!, {r0, r1}
 8017e00:	a81a      	add	r0, sp, #104	; 0x68
 8017e02:	f7f9 faeb 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e06:	4629      	mov	r1, r5
 8017e08:	a81c      	add	r0, sp, #112	; 0x70
 8017e0a:	f7f9 fb0f 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e0e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8017e12:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8017e16:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8017e1a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8017e1e:	bfdb      	ittet	le
 8017e20:	b29a      	uxthle	r2, r3
 8017e22:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8017e26:	2201      	movgt	r2, #1
 8017e28:	fb91 f2f2 	sdivle	r2, r1, r2
 8017e2c:	9201      	str	r2, [sp, #4]
 8017e2e:	9801      	ldr	r0, [sp, #4]
 8017e30:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8017e34:	9901      	ldr	r1, [sp, #4]
 8017e36:	fb92 f0f0 	sdiv	r0, r2, r0
 8017e3a:	b280      	uxth	r0, r0
 8017e3c:	440e      	add	r6, r1
 8017e3e:	9010      	str	r0, [sp, #64]	; 0x40
 8017e40:	3e01      	subs	r6, #1
 8017e42:	9801      	ldr	r0, [sp, #4]
 8017e44:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017e46:	fb05 2510 	mls	r5, r5, r0, r2
 8017e4a:	fb96 f6f1 	sdiv	r6, r6, r1
 8017e4e:	fb15 f503 	smulbb	r5, r5, r3
 8017e52:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8017e56:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8017e5a:	3601      	adds	r6, #1
 8017e5c:	440d      	add	r5, r1
 8017e5e:	4419      	add	r1, r3
 8017e60:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8017e64:	b2b6      	uxth	r6, r6
 8017e66:	441a      	add	r2, r3
 8017e68:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8017e6c:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8017e70:	b2ad      	uxth	r5, r5
 8017e72:	9304      	str	r3, [sp, #16]
 8017e74:	4b96      	ldr	r3, [pc, #600]	; (80180d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017e76:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8017e7a:	6818      	ldr	r0, [r3, #0]
 8017e7c:	6803      	ldr	r3, [r0, #0]
 8017e7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e80:	4798      	blx	r3
 8017e82:	4b94      	ldr	r3, [pc, #592]	; (80180d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8017e84:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8017e88:	2d00      	cmp	r5, #0
 8017e8a:	881a      	ldrh	r2, [r3, #0]
 8017e8c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8017e90:	fb02 f707 	mul.w	r7, r2, r7
 8017e94:	fb02 c101 	mla	r1, r2, r1, ip
 8017e98:	9318      	str	r3, [sp, #96]	; 0x60
 8017e9a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8017e9e:	4b8e      	ldr	r3, [pc, #568]	; (80180d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8017ea0:	bf18      	it	ne
 8017ea2:	2100      	movne	r1, #0
 8017ea4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017ea8:	eba3 0304 	sub.w	r3, r3, r4
 8017eac:	920b      	str	r2, [sp, #44]	; 0x2c
 8017eae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017eb0:	9319      	str	r3, [sp, #100]	; 0x64
 8017eb2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8017eb6:	f106 0204 	add.w	r2, r6, #4
 8017eba:	9206      	str	r2, [sp, #24]
 8017ebc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017ebe:	ea6f 0202 	mvn.w	r2, r2
 8017ec2:	b2d2      	uxtb	r2, r2
 8017ec4:	9215      	str	r2, [sp, #84]	; 0x54
 8017ec6:	9a04      	ldr	r2, [sp, #16]
 8017ec8:	bf08      	it	eq
 8017eca:	4611      	moveq	r1, r2
 8017ecc:	2200      	movs	r2, #0
 8017ece:	b289      	uxth	r1, r1
 8017ed0:	920d      	str	r2, [sp, #52]	; 0x34
 8017ed2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017ed4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ed6:	fa12 f383 	uxtah	r3, r2, r3
 8017eda:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017edc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017ee0:	3304      	adds	r3, #4
 8017ee2:	9307      	str	r3, [sp, #28]
 8017ee4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017ee6:	455b      	cmp	r3, fp
 8017ee8:	f240 817b 	bls.w	80181e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8017eec:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8017ef0:	f04f 0801 	mov.w	r8, #1
 8017ef4:	9a01      	ldr	r2, [sp, #4]
 8017ef6:	9807      	ldr	r0, [sp, #28]
 8017ef8:	46c4      	mov	ip, r8
 8017efa:	f8cd 8008 	str.w	r8, [sp, #8]
 8017efe:	7800      	ldrb	r0, [r0, #0]
 8017f00:	fbb5 f3f3 	udiv	r3, r5, r3
 8017f04:	1ad3      	subs	r3, r2, r3
 8017f06:	9011      	str	r0, [sp, #68]	; 0x44
 8017f08:	3001      	adds	r0, #1
 8017f0a:	b29b      	uxth	r3, r3
 8017f0c:	9005      	str	r0, [sp, #20]
 8017f0e:	9316      	str	r3, [sp, #88]	; 0x58
 8017f10:	9b07      	ldr	r3, [sp, #28]
 8017f12:	785a      	ldrb	r2, [r3, #1]
 8017f14:	789b      	ldrb	r3, [r3, #2]
 8017f16:	021b      	lsls	r3, r3, #8
 8017f18:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017f1c:	9a07      	ldr	r2, [sp, #28]
 8017f1e:	78d2      	ldrb	r2, [r2, #3]
 8017f20:	4313      	orrs	r3, r2
 8017f22:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017f24:	441a      	add	r2, r3
 8017f26:	1c50      	adds	r0, r2, #1
 8017f28:	7852      	ldrb	r2, [r2, #1]
 8017f2a:	9003      	str	r0, [sp, #12]
 8017f2c:	0212      	lsls	r2, r2, #8
 8017f2e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017f30:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8017f34:	5cc3      	ldrb	r3, [r0, r3]
 8017f36:	431a      	orrs	r2, r3
 8017f38:	b293      	uxth	r3, r2
 8017f3a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8017f3e:	930c      	str	r3, [sp, #48]	; 0x30
 8017f40:	2300      	movs	r3, #0
 8017f42:	9308      	str	r3, [sp, #32]
 8017f44:	461a      	mov	r2, r3
 8017f46:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8017f4a:	930e      	str	r3, [sp, #56]	; 0x38
 8017f4c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8017f50:	930f      	str	r3, [sp, #60]	; 0x3c
 8017f52:	2d00      	cmp	r5, #0
 8017f54:	d07d      	beq.n	8018052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 8017f56:	45ac      	cmp	ip, r5
 8017f58:	d26d      	bcs.n	8018036 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 8017f5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f5c:	eba5 050c 	sub.w	r5, r5, ip
 8017f60:	4608      	mov	r0, r1
 8017f62:	455b      	cmp	r3, fp
 8017f64:	b2ad      	uxth	r5, r5
 8017f66:	d802      	bhi.n	8017f6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8017f68:	e071      	b.n	801804e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 8017f6a:	2b00      	cmp	r3, #0
 8017f6c:	d15d      	bne.n	801802a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8017f6e:	9b03      	ldr	r3, [sp, #12]
 8017f70:	9a02      	ldr	r2, [sp, #8]
 8017f72:	785b      	ldrb	r3, [r3, #1]
 8017f74:	f1c2 0207 	rsb	r2, r2, #7
 8017f78:	9902      	ldr	r1, [sp, #8]
 8017f7a:	4093      	lsls	r3, r2
 8017f7c:	005b      	lsls	r3, r3, #1
 8017f7e:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8017f82:	9b03      	ldr	r3, [sp, #12]
 8017f84:	781b      	ldrb	r3, [r3, #0]
 8017f86:	410b      	asrs	r3, r1
 8017f88:	3101      	adds	r1, #1
 8017f8a:	b2c9      	uxtb	r1, r1
 8017f8c:	b2db      	uxtb	r3, r3
 8017f8e:	2908      	cmp	r1, #8
 8017f90:	9102      	str	r1, [sp, #8]
 8017f92:	9903      	ldr	r1, [sp, #12]
 8017f94:	ea43 0302 	orr.w	r3, r3, r2
 8017f98:	bf0c      	ite	eq
 8017f9a:	3102      	addeq	r1, #2
 8017f9c:	3101      	addne	r1, #1
 8017f9e:	b29a      	uxth	r2, r3
 8017fa0:	bf05      	ittet	eq
 8017fa2:	9103      	streq	r1, [sp, #12]
 8017fa4:	2100      	moveq	r1, #0
 8017fa6:	9103      	strne	r1, [sp, #12]
 8017fa8:	9102      	streq	r1, [sp, #8]
 8017faa:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017fac:	4291      	cmp	r1, r2
 8017fae:	d30a      	bcc.n	8017fc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8017fb0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8017fb4:	2301      	movs	r3, #1
 8017fb6:	9905      	ldr	r1, [sp, #20]
 8017fb8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8017fbc:	d30f      	bcc.n	8017fde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8017fbe:	2100      	movs	r1, #0
 8017fc0:	4698      	mov	r8, r3
 8017fc2:	9100      	str	r1, [sp, #0]
 8017fc4:	e032      	b.n	801802c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8017fc6:	9b05      	ldr	r3, [sp, #20]
 8017fc8:	429a      	cmp	r2, r3
 8017fca:	d318      	bcc.n	8017ffe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8017fcc:	eb04 0308 	add.w	r3, r4, r8
 8017fd0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8017fd4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8017fd8:	f108 0301 	add.w	r3, r8, #1
 8017fdc:	b29b      	uxth	r3, r3
 8017fde:	9905      	ldr	r1, [sp, #20]
 8017fe0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8017fe4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017fe8:	710e      	strb	r6, [r1, #4]
 8017fea:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8017fec:	80ce      	strh	r6, [r1, #6]
 8017fee:	f108 0601 	add.w	r6, r8, #1
 8017ff2:	714e      	strb	r6, [r1, #5]
 8017ff4:	9905      	ldr	r1, [sp, #20]
 8017ff6:	3101      	adds	r1, #1
 8017ff8:	b289      	uxth	r1, r1
 8017ffa:	9105      	str	r1, [sp, #20]
 8017ffc:	e7df      	b.n	8017fbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017ffe:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8018002:	4611      	mov	r1, r2
 8018004:	795b      	ldrb	r3, [r3, #5]
 8018006:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801800a:	4426      	add	r6, r4
 801800c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801800e:	4437      	add	r7, r6
 8018010:	2f00      	cmp	r7, #0
 8018012:	dd06      	ble.n	8018022 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8018014:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8018018:	790f      	ldrb	r7, [r1, #4]
 801801a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801801e:	88c9      	ldrh	r1, [r1, #6]
 8018020:	e7f4      	b.n	801800c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8018022:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8018026:	b29b      	uxth	r3, r3
 8018028:	e7c5      	b.n	8017fb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801802a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801802c:	920c      	str	r2, [sp, #48]	; 0x30
 801802e:	4601      	mov	r1, r0
 8018030:	9a00      	ldr	r2, [sp, #0]
 8018032:	469c      	mov	ip, r3
 8018034:	e78d      	b.n	8017f52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8018036:	ebac 0305 	sub.w	r3, ip, r5
 801803a:	1957      	adds	r7, r2, r5
 801803c:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8018040:	b2ba      	uxth	r2, r7
 8018042:	b29b      	uxth	r3, r3
 8018044:	9200      	str	r2, [sp, #0]
 8018046:	2500      	movs	r5, #0
 8018048:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801804a:	455a      	cmp	r2, fp
 801804c:	d88d      	bhi.n	8017f6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801804e:	4601      	mov	r1, r0
 8018050:	e748      	b.n	8017ee4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8018052:	458c      	cmp	ip, r1
 8018054:	bf27      	ittee	cs
 8018056:	ebac 0301 	subcs.w	r3, ip, r1
 801805a:	4628      	movcs	r0, r5
 801805c:	eba1 000c 	subcc.w	r0, r1, ip
 8018060:	462b      	movcc	r3, r5
 8018062:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018064:	bf27      	ittee	cs
 8018066:	b29b      	uxthcs	r3, r3
 8018068:	9109      	strcs	r1, [sp, #36]	; 0x24
 801806a:	b280      	uxthcc	r0, r0
 801806c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8018070:	2dff      	cmp	r5, #255	; 0xff
 8018072:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018074:	eb02 0705 	add.w	r7, r2, r5
 8018078:	b2bd      	uxth	r5, r7
 801807a:	9500      	str	r5, [sp, #0]
 801807c:	d12e      	bne.n	80180dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 801807e:	465e      	mov	r6, fp
 8018080:	9d00      	ldr	r5, [sp, #0]
 8018082:	42aa      	cmp	r2, r5
 8018084:	f040 8083 	bne.w	801818e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8018088:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801808a:	458c      	cmp	ip, r1
 801808c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8018090:	d3d9      	bcc.n	8018046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8018092:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018094:	9904      	ldr	r1, [sp, #16]
 8018096:	8812      	ldrh	r2, [r2, #0]
 8018098:	1a52      	subs	r2, r2, r1
 801809a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801809c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80180a0:	9a08      	ldr	r2, [sp, #32]
 80180a2:	3201      	adds	r2, #1
 80180a4:	428a      	cmp	r2, r1
 80180a6:	9208      	str	r2, [sp, #32]
 80180a8:	f040 8091 	bne.w	80181ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 80180ac:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 80180b0:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 80180b4:	9b04      	ldr	r3, [sp, #16]
 80180b6:	eba5 050c 	sub.w	r5, r5, ip
 80180ba:	b2ad      	uxth	r5, r5
 80180bc:	2d00      	cmp	r5, #0
 80180be:	bf08      	it	eq
 80180c0:	4619      	moveq	r1, r3
 80180c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80180c4:	bf18      	it	ne
 80180c6:	2100      	movne	r1, #0
 80180c8:	3301      	adds	r3, #1
 80180ca:	b289      	uxth	r1, r1
 80180cc:	930d      	str	r3, [sp, #52]	; 0x34
 80180ce:	e700      	b.n	8017ed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 80180d0:	24001e7c 	.word	0x24001e7c
 80180d4:	24001e76 	.word	0x24001e76
 80180d8:	fffff7fb 	.word	0xfffff7fb
 80180dc:	46d9      	mov	r9, fp
 80180de:	9d00      	ldr	r5, [sp, #0]
 80180e0:	42aa      	cmp	r2, r5
 80180e2:	d0d1      	beq.n	8018088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 80180e4:	1c55      	adds	r5, r2, #1
 80180e6:	4422      	add	r2, r4
 80180e8:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 80180ec:	9a06      	ldr	r2, [sp, #24]
 80180ee:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80180f2:	9517      	str	r5, [sp, #92]	; 0x5c
 80180f4:	4472      	add	r2, lr
 80180f6:	9212      	str	r2, [sp, #72]	; 0x48
 80180f8:	f8b9 2000 	ldrh.w	r2, [r9]
 80180fc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80180fe:	1216      	asrs	r6, r2, #8
 8018100:	f897 a002 	ldrb.w	sl, [r7, #2]
 8018104:	10d5      	asrs	r5, r2, #3
 8018106:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018108:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801810c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018110:	00d2      	lsls	r2, r2, #3
 8018112:	fb1a fa07 	smulbb	sl, sl, r7
 8018116:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801811a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801811c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018120:	b2d2      	uxtb	r2, r2
 8018122:	fb06 a607 	mla	r6, r6, r7, sl
 8018126:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8018128:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801812c:	f897 a001 	ldrb.w	sl, [r7, #1]
 8018130:	b2b6      	uxth	r6, r6
 8018132:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018134:	fb1a fa07 	smulbb	sl, sl, r7
 8018138:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801813a:	fb05 a507 	mla	r5, r5, r7, sl
 801813e:	9f06      	ldr	r7, [sp, #24]
 8018140:	f106 0a01 	add.w	sl, r6, #1
 8018144:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018148:	b2ad      	uxth	r5, r5
 801814a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801814c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018150:	f105 0a01 	add.w	sl, r5, #1
 8018154:	fb1e fe07 	smulbb	lr, lr, r7
 8018158:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801815a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801815e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8018162:	fb02 e207 	mla	r2, r2, r7, lr
 8018166:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801816a:	b292      	uxth	r2, r2
 801816c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018170:	f102 0e01 	add.w	lr, r2, #1
 8018174:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8018178:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801817c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018180:	ea4e 0606 	orr.w	r6, lr, r6
 8018184:	ea46 060a 	orr.w	r6, r6, sl
 8018188:	f829 6b02 	strh.w	r6, [r9], #2
 801818c:	e7a7      	b.n	80180de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801818e:	f102 0e01 	add.w	lr, r2, #1
 8018192:	4422      	add	r2, r4
 8018194:	9f06      	ldr	r7, [sp, #24]
 8018196:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801819a:	9a06      	ldr	r2, [sp, #24]
 801819c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80181a0:	eb02 0a05 	add.w	sl, r2, r5
 80181a4:	4a13      	ldr	r2, [pc, #76]	; (80181f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 80181a6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80181aa:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80181ae:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80181b2:	00d2      	lsls	r2, r2, #3
 80181b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80181b8:	ea49 0202 	orr.w	r2, r9, r2
 80181bc:	f817 9005 	ldrb.w	r9, [r7, r5]
 80181c0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80181c4:	f826 2b02 	strh.w	r2, [r6], #2
 80181c8:	fa1f f28e 	uxth.w	r2, lr
 80181cc:	e758      	b.n	8018080 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 80181ce:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80181d2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80181d6:	1a2d      	subs	r5, r5, r0
 80181d8:	b2ad      	uxth	r5, r5
 80181da:	2d00      	cmp	r5, #0
 80181dc:	bf18      	it	ne
 80181de:	2000      	movne	r0, #0
 80181e0:	e732      	b.n	8018048 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 80181e2:	4b05      	ldr	r3, [pc, #20]	; (80181f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 80181e4:	6818      	ldr	r0, [r3, #0]
 80181e6:	6803      	ldr	r3, [r0, #0]
 80181e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80181ea:	4798      	blx	r3
 80181ec:	b01f      	add	sp, #124	; 0x7c
 80181ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181f2:	bf00      	nop
 80181f4:	fffff800 	.word	0xfffff800
 80181f8:	24001e7c 	.word	0x24001e7c

080181fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80181fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018200:	b091      	sub	sp, #68	; 0x44
 8018202:	469b      	mov	fp, r3
 8018204:	4616      	mov	r6, r2
 8018206:	f9b3 2000 	ldrsh.w	r2, [r3]
 801820a:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801820e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018212:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8018216:	4604      	mov	r4, r0
 8018218:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801821c:	4640      	mov	r0, r8
 801821e:	460d      	mov	r5, r1
 8018220:	4659      	mov	r1, fp
 8018222:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018226:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801822a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801822e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8018232:	f7f6 f97f 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 8018236:	4631      	mov	r1, r6
 8018238:	4640      	mov	r0, r8
 801823a:	f7f6 f97b 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 801823e:	4b74      	ldr	r3, [pc, #464]	; (8018410 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8018240:	8818      	ldrh	r0, [r3, #0]
 8018242:	4b74      	ldr	r3, [pc, #464]	; (8018414 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8018244:	b202      	sxth	r2, r0
 8018246:	8819      	ldrh	r1, [r3, #0]
 8018248:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801824c:	b20e      	sxth	r6, r1
 801824e:	2b00      	cmp	r3, #0
 8018250:	da07      	bge.n	8018262 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8018252:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8018256:	4463      	add	r3, ip
 8018258:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801825c:	2300      	movs	r3, #0
 801825e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8018262:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8018266:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801826a:	1ad2      	subs	r2, r2, r3
 801826c:	4594      	cmp	ip, r2
 801826e:	bfc4      	itt	gt
 8018270:	1ac2      	subgt	r2, r0, r3
 8018272:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8018276:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801827a:	2a00      	cmp	r2, #0
 801827c:	da07      	bge.n	801828e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801827e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8018282:	4462      	add	r2, ip
 8018284:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8018288:	2200      	movs	r2, #0
 801828a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801828e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8018292:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8018296:	eba6 060a 	sub.w	r6, r6, sl
 801829a:	42b2      	cmp	r2, r6
 801829c:	bfc4      	itt	gt
 801829e:	eba1 020a 	subgt.w	r2, r1, sl
 80182a2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80182a6:	4a5c      	ldr	r2, [pc, #368]	; (8018418 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80182a8:	7812      	ldrb	r2, [r2, #0]
 80182aa:	b9a2      	cbnz	r2, 80182d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80182ac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80182b0:	4286      	cmp	r6, r0
 80182b2:	4640      	mov	r0, r8
 80182b4:	9303      	str	r3, [sp, #12]
 80182b6:	bf14      	ite	ne
 80182b8:	2600      	movne	r6, #0
 80182ba:	2601      	moveq	r6, #1
 80182bc:	f7f6 f97d 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 80182c0:	9b03      	ldr	r3, [sp, #12]
 80182c2:	b160      	cbz	r0, 80182de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80182c4:	2300      	movs	r3, #0
 80182c6:	8023      	strh	r3, [r4, #0]
 80182c8:	8063      	strh	r3, [r4, #2]
 80182ca:	80a3      	strh	r3, [r4, #4]
 80182cc:	4620      	mov	r0, r4
 80182ce:	80e3      	strh	r3, [r4, #6]
 80182d0:	b011      	add	sp, #68	; 0x44
 80182d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182d6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80182da:	428e      	cmp	r6, r1
 80182dc:	e7e9      	b.n	80182b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80182de:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80182e2:	a90e      	add	r1, sp, #56	; 0x38
 80182e4:	900e      	str	r0, [sp, #56]	; 0x38
 80182e6:	a80c      	add	r0, sp, #48	; 0x30
 80182e8:	9205      	str	r2, [sp, #20]
 80182ea:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80182ee:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80182f2:	9206      	str	r2, [sp, #24]
 80182f4:	f8bb 2000 	ldrh.w	r2, [fp]
 80182f8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80182fc:	1a9b      	subs	r3, r3, r2
 80182fe:	b21b      	sxth	r3, r3
 8018300:	9303      	str	r3, [sp, #12]
 8018302:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018306:	f8df b118 	ldr.w	fp, [pc, #280]	; 8018420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801830a:	ebaa 0a03 	sub.w	sl, sl, r3
 801830e:	fa0f f38a 	sxth.w	r3, sl
 8018312:	9304      	str	r3, [sp, #16]
 8018314:	9b03      	ldr	r3, [sp, #12]
 8018316:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801831a:	9b04      	ldr	r3, [sp, #16]
 801831c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018320:	9b05      	ldr	r3, [sp, #20]
 8018322:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8018326:	9b06      	ldr	r3, [sp, #24]
 8018328:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801832c:	f7f9 f87e 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018330:	4640      	mov	r0, r8
 8018332:	f7f9 f853 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018336:	a80e      	add	r0, sp, #56	; 0x38
 8018338:	f7f9 f850 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801833c:	4b37      	ldr	r3, [pc, #220]	; (801841c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801833e:	4628      	mov	r0, r5
 8018340:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8018344:	881b      	ldrh	r3, [r3, #0]
 8018346:	9307      	str	r3, [sp, #28]
 8018348:	682b      	ldr	r3, [r5, #0]
 801834a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801834c:	4798      	blx	r3
 801834e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8018352:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8018356:	4681      	mov	r9, r0
 8018358:	f8db 0000 	ldr.w	r0, [fp]
 801835c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8018360:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8018362:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018366:	6803      	ldr	r3, [r0, #0]
 8018368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801836a:	4798      	blx	r3
 801836c:	4607      	mov	r7, r0
 801836e:	f8db 0000 	ldr.w	r0, [fp]
 8018372:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8018376:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801837a:	6803      	ldr	r3, [r0, #0]
 801837c:	9109      	str	r1, [sp, #36]	; 0x24
 801837e:	9208      	str	r2, [sp, #32]
 8018380:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018382:	4798      	blx	r3
 8018384:	f010 0f01 	tst.w	r0, #1
 8018388:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801838c:	d012      	beq.n	80183b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801838e:	f8db 0000 	ldr.w	r0, [fp]
 8018392:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8018396:	6803      	ldr	r3, [r0, #0]
 8018398:	9200      	str	r2, [sp, #0]
 801839a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801839c:	462b      	mov	r3, r5
 801839e:	e898 0006 	ldmia.w	r8, {r1, r2}
 80183a2:	47b0      	blx	r6
 80183a4:	9b03      	ldr	r3, [sp, #12]
 80183a6:	8023      	strh	r3, [r4, #0]
 80183a8:	9b04      	ldr	r3, [sp, #16]
 80183aa:	8063      	strh	r3, [r4, #2]
 80183ac:	9b05      	ldr	r3, [sp, #20]
 80183ae:	80a3      	strh	r3, [r4, #4]
 80183b0:	9b06      	ldr	r3, [sp, #24]
 80183b2:	e78b      	b.n	80182cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80183b4:	fb09 f202 	mul.w	r2, r9, r2
 80183b8:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 80183bc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80183c0:	440f      	add	r7, r1
 80183c2:	b166      	cbz	r6, 80183de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80183c4:	9a07      	ldr	r2, [sp, #28]
 80183c6:	4592      	cmp	sl, r2
 80183c8:	d109      	bne.n	80183de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80183ca:	f8db 0000 	ldr.w	r0, [fp]
 80183ce:	fb09 f303 	mul.w	r3, r9, r3
 80183d2:	4629      	mov	r1, r5
 80183d4:	6802      	ldr	r2, [r0, #0]
 80183d6:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80183d8:	463a      	mov	r2, r7
 80183da:	47b0      	blx	r6
 80183dc:	e7e2      	b.n	80183a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80183de:	fb0a f303 	mul.w	r3, sl, r3
 80183e2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80183e6:	f8df b038 	ldr.w	fp, [pc, #56]	; 8018420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80183ea:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80183ee:	4545      	cmp	r5, r8
 80183f0:	d2d8      	bcs.n	80183a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80183f2:	f8db 0000 	ldr.w	r0, [fp]
 80183f6:	4629      	mov	r1, r5
 80183f8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80183fc:	4435      	add	r5, r6
 80183fe:	6802      	ldr	r2, [r0, #0]
 8018400:	005b      	lsls	r3, r3, #1
 8018402:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8018406:	463a      	mov	r2, r7
 8018408:	47d0      	blx	sl
 801840a:	444f      	add	r7, r9
 801840c:	e7ef      	b.n	80183ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801840e:	bf00      	nop
 8018410:	24001e70 	.word	0x24001e70
 8018414:	24001e72 	.word	0x24001e72
 8018418:	24001e74 	.word	0x24001e74
 801841c:	24001e76 	.word	0x24001e76
 8018420:	24001e7c 	.word	0x24001e7c

08018424 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8018424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018426:	4606      	mov	r6, r0
 8018428:	b087      	sub	sp, #28
 801842a:	460c      	mov	r4, r1
 801842c:	4617      	mov	r7, r2
 801842e:	461d      	mov	r5, r3
 8018430:	b333      	cbz	r3, 8018480 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018432:	4608      	mov	r0, r1
 8018434:	f7f6 f8c1 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 8018438:	bb10      	cbnz	r0, 8018480 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801843a:	6820      	ldr	r0, [r4, #0]
 801843c:	ab04      	add	r3, sp, #16
 801843e:	6861      	ldr	r1, [r4, #4]
 8018440:	4c1b      	ldr	r4, [pc, #108]	; (80184b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8018442:	c303      	stmia	r3!, {r0, r1}
 8018444:	a804      	add	r0, sp, #16
 8018446:	f7f8 ffc9 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801844a:	6820      	ldr	r0, [r4, #0]
 801844c:	6803      	ldr	r3, [r0, #0]
 801844e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018450:	4798      	blx	r3
 8018452:	2dff      	cmp	r5, #255	; 0xff
 8018454:	d016      	beq.n	8018484 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8018456:	f010 0f08 	tst.w	r0, #8
 801845a:	6820      	ldr	r0, [r4, #0]
 801845c:	d015      	beq.n	801848a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801845e:	2400      	movs	r4, #0
 8018460:	6801      	ldr	r1, [r0, #0]
 8018462:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018466:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801846a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801846e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8018472:	9401      	str	r4, [sp, #4]
 8018474:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8018478:	9400      	str	r4, [sp, #0]
 801847a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801847c:	4639      	mov	r1, r7
 801847e:	47a0      	blx	r4
 8018480:	b007      	add	sp, #28
 8018482:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018484:	f010 0f02 	tst.w	r0, #2
 8018488:	e7e7      	b.n	801845a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801848a:	6803      	ldr	r3, [r0, #0]
 801848c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801848e:	4798      	blx	r3
 8018490:	4b08      	ldr	r3, [pc, #32]	; (80184b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8018492:	4601      	mov	r1, r0
 8018494:	4630      	mov	r0, r6
 8018496:	881a      	ldrh	r2, [r3, #0]
 8018498:	6833      	ldr	r3, [r6, #0]
 801849a:	e9cd 7500 	strd	r7, r5, [sp]
 801849e:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80184a0:	ab04      	add	r3, sp, #16
 80184a2:	47a8      	blx	r5
 80184a4:	6820      	ldr	r0, [r4, #0]
 80184a6:	6803      	ldr	r3, [r0, #0]
 80184a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80184aa:	4798      	blx	r3
 80184ac:	e7e8      	b.n	8018480 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80184ae:	bf00      	nop
 80184b0:	24001e7c 	.word	0x24001e7c
 80184b4:	24001e76 	.word	0x24001e76

080184b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80184b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80184bc:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80184c0:	4688      	mov	r8, r1
 80184c2:	4614      	mov	r4, r2
 80184c4:	461d      	mov	r5, r3
 80184c6:	9e08      	ldr	r6, [sp, #32]
 80184c8:	2f00      	cmp	r7, #0
 80184ca:	f000 80ab 	beq.w	8018624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80184ce:	4618      	mov	r0, r3
 80184d0:	f7f6 f873 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 80184d4:	2800      	cmp	r0, #0
 80184d6:	f040 80a5 	bne.w	8018624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80184da:	f9b5 1000 	ldrsh.w	r1, [r5]
 80184de:	2fff      	cmp	r7, #255	; 0xff
 80184e0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80184e4:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80184e8:	fb04 1303 	mla	r3, r4, r3, r1
 80184ec:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80184f0:	eba4 0200 	sub.w	r2, r4, r0
 80184f4:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80184f8:	fb04 f505 	mul.w	r5, r4, r5
 80184fc:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8018500:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8018504:	d04a      	beq.n	801859c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8018506:	b2bc      	uxth	r4, r7
 8018508:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801850c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8018510:	fa5f f788 	uxtb.w	r7, r8
 8018514:	b2f3      	uxtb	r3, r6
 8018516:	0040      	lsls	r0, r0, #1
 8018518:	fb0e fe04 	mul.w	lr, lr, r4
 801851c:	4367      	muls	r7, r4
 801851e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8018522:	4363      	muls	r3, r4
 8018524:	fa1f fc8c 	uxth.w	ip, ip
 8018528:	42a9      	cmp	r1, r5
 801852a:	d27b      	bcs.n	8018624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801852c:	eb01 0900 	add.w	r9, r1, r0
 8018530:	4549      	cmp	r1, r9
 8018532:	d231      	bcs.n	8018598 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8018534:	880a      	ldrh	r2, [r1, #0]
 8018536:	1214      	asrs	r4, r2, #8
 8018538:	10d6      	asrs	r6, r2, #3
 801853a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801853e:	00d2      	lsls	r2, r2, #3
 8018540:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018544:	b2d2      	uxtb	r2, r2
 8018546:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801854a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801854e:	fb14 f40c 	smulbb	r4, r4, ip
 8018552:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018556:	fb12 f20c 	smulbb	r2, r2, ip
 801855a:	fb16 f60c 	smulbb	r6, r6, ip
 801855e:	4474      	add	r4, lr
 8018560:	441a      	add	r2, r3
 8018562:	b2a4      	uxth	r4, r4
 8018564:	443e      	add	r6, r7
 8018566:	b292      	uxth	r2, r2
 8018568:	f104 0a01 	add.w	sl, r4, #1
 801856c:	b2b6      	uxth	r6, r6
 801856e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018572:	f102 0a01 	add.w	sl, r2, #1
 8018576:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801857a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801857e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018582:	4322      	orrs	r2, r4
 8018584:	1c74      	adds	r4, r6, #1
 8018586:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801858a:	0976      	lsrs	r6, r6, #5
 801858c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018590:	4332      	orrs	r2, r6
 8018592:	f821 2b02 	strh.w	r2, [r1], #2
 8018596:	e7cb      	b.n	8018530 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8018598:	4441      	add	r1, r8
 801859a:	e7c5      	b.n	8018528 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801859c:	0973      	lsrs	r3, r6, #5
 801859e:	4f22      	ldr	r7, [pc, #136]	; (8018628 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 80185a0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80185a4:	ea08 0707 	and.w	r7, r8, r7
 80185a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80185ac:	433b      	orrs	r3, r7
 80185ae:	07e7      	lsls	r7, r4, #31
 80185b0:	ea43 0306 	orr.w	r3, r3, r6
 80185b4:	b29b      	uxth	r3, r3
 80185b6:	d50b      	bpl.n	80185d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 80185b8:	0040      	lsls	r0, r0, #1
 80185ba:	0052      	lsls	r2, r2, #1
 80185bc:	42a9      	cmp	r1, r5
 80185be:	d231      	bcs.n	8018624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80185c0:	180c      	adds	r4, r1, r0
 80185c2:	42a1      	cmp	r1, r4
 80185c4:	d202      	bcs.n	80185cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80185c6:	f821 3b02 	strh.w	r3, [r1], #2
 80185ca:	e7fa      	b.n	80185c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 80185cc:	4411      	add	r1, r2
 80185ce:	e7f5      	b.n	80185bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 80185d0:	078e      	lsls	r6, r1, #30
 80185d2:	d008      	beq.n	80185e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 80185d4:	0066      	lsls	r6, r4, #1
 80185d6:	460a      	mov	r2, r1
 80185d8:	42aa      	cmp	r2, r5
 80185da:	d202      	bcs.n	80185e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80185dc:	8013      	strh	r3, [r2, #0]
 80185de:	4432      	add	r2, r6
 80185e0:	e7fa      	b.n	80185d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 80185e2:	3102      	adds	r1, #2
 80185e4:	3801      	subs	r0, #1
 80185e6:	07c2      	lsls	r2, r0, #31
 80185e8:	d50b      	bpl.n	8018602 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 80185ea:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80185ee:	0066      	lsls	r6, r4, #1
 80185f0:	3a01      	subs	r2, #1
 80185f2:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80185f6:	42aa      	cmp	r2, r5
 80185f8:	d202      	bcs.n	8018600 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 80185fa:	8013      	strh	r3, [r2, #0]
 80185fc:	4432      	add	r2, r6
 80185fe:	e7fa      	b.n	80185f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8018600:	3801      	subs	r0, #1
 8018602:	b178      	cbz	r0, 8018624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8018604:	1040      	asrs	r0, r0, #1
 8018606:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801860a:	0080      	lsls	r0, r0, #2
 801860c:	0064      	lsls	r4, r4, #1
 801860e:	42a9      	cmp	r1, r5
 8018610:	d208      	bcs.n	8018624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8018612:	180e      	adds	r6, r1, r0
 8018614:	460a      	mov	r2, r1
 8018616:	42b2      	cmp	r2, r6
 8018618:	d202      	bcs.n	8018620 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801861a:	f842 3b04 	str.w	r3, [r2], #4
 801861e:	e7fa      	b.n	8018616 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 8018620:	4421      	add	r1, r4
 8018622:	e7f4      	b.n	801860e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8018624:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018628:	00fff800 	.word	0x00fff800

0801862c <_ZN8touchgfx8LCD16bppC1Ev>:
 801862c:	2200      	movs	r2, #0
 801862e:	4912      	ldr	r1, [pc, #72]	; (8018678 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8018630:	6042      	str	r2, [r0, #4]
 8018632:	6001      	str	r1, [r0, #0]
 8018634:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8018638:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801863c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8018640:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8018644:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8018648:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801864c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8018650:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8018654:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8018658:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801865c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8018660:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8018664:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8018668:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801866c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 8018670:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8018674:	4770      	bx	lr
 8018676:	bf00      	nop
 8018678:	0802488c 	.word	0x0802488c

0801867c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801867c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018680:	b08d      	sub	sp, #52	; 0x34
 8018682:	460d      	mov	r5, r1
 8018684:	4604      	mov	r4, r0
 8018686:	4699      	mov	r9, r3
 8018688:	6808      	ldr	r0, [r1, #0]
 801868a:	ab08      	add	r3, sp, #32
 801868c:	6849      	ldr	r1, [r1, #4]
 801868e:	c303      	stmia	r3!, {r0, r1}
 8018690:	6810      	ldr	r0, [r2, #0]
 8018692:	ab0a      	add	r3, sp, #40	; 0x28
 8018694:	6851      	ldr	r1, [r2, #4]
 8018696:	c303      	stmia	r3!, {r0, r1}
 8018698:	a808      	add	r0, sp, #32
 801869a:	f7f8 fe9f 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801869e:	4629      	mov	r1, r5
 80186a0:	a80a      	add	r0, sp, #40	; 0x28
 80186a2:	4d67      	ldr	r5, [pc, #412]	; (8018840 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80186a4:	f7f8 fec2 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80186a8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80186ac:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80186b0:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80186b4:	6828      	ldr	r0, [r5, #0]
 80186b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80186ba:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80186be:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80186c2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80186c6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80186ca:	440a      	add	r2, r1
 80186cc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80186d0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80186d4:	4413      	add	r3, r2
 80186d6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80186da:	6803      	ldr	r3, [r0, #0]
 80186dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80186de:	4798      	blx	r3
 80186e0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80186e4:	d119      	bne.n	801871a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80186e6:	f010 0f20 	tst.w	r0, #32
 80186ea:	6828      	ldr	r0, [r5, #0]
 80186ec:	d018      	beq.n	8018720 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80186ee:	2500      	movs	r5, #0
 80186f0:	6801      	ldr	r1, [r0, #0]
 80186f2:	b2b6      	uxth	r6, r6
 80186f4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80186f8:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80186fc:	9601      	str	r6, [sp, #4]
 80186fe:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8018702:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8018706:	9502      	str	r5, [sp, #8]
 8018708:	fa1f f588 	uxth.w	r5, r8
 801870c:	9500      	str	r5, [sp, #0]
 801870e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8018710:	4621      	mov	r1, r4
 8018712:	47a8      	blx	r5
 8018714:	b00d      	add	sp, #52	; 0x34
 8018716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801871a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801871e:	e7e4      	b.n	80186ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8018720:	6803      	ldr	r3, [r0, #0]
 8018722:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018724:	4798      	blx	r3
 8018726:	4947      	ldr	r1, [pc, #284]	; (8018844 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8018728:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801872c:	880b      	ldrh	r3, [r1, #0]
 801872e:	468a      	mov	sl, r1
 8018730:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8018734:	fb03 5202 	mla	r2, r3, r2, r5
 8018738:	4373      	muls	r3, r6
 801873a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801873e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018742:	9307      	str	r3, [sp, #28]
 8018744:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018748:	9306      	str	r3, [sp, #24]
 801874a:	9b07      	ldr	r3, [sp, #28]
 801874c:	4298      	cmp	r0, r3
 801874e:	d270      	bcs.n	8018832 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8018750:	9b06      	ldr	r3, [sp, #24]
 8018752:	4621      	mov	r1, r4
 8018754:	eb00 0b03 	add.w	fp, r0, r3
 8018758:	4558      	cmp	r0, fp
 801875a:	d25d      	bcs.n	8018818 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801875c:	f851 4b04 	ldr.w	r4, [r1], #4
 8018760:	0e23      	lsrs	r3, r4, #24
 8018762:	d014      	beq.n	801878e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018764:	2bff      	cmp	r3, #255	; 0xff
 8018766:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801876a:	d112      	bne.n	8018792 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801876c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018770:	d10f      	bne.n	8018792 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018772:	0963      	lsrs	r3, r4, #5
 8018774:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8018778:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801877c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018780:	f02c 0c07 	bic.w	ip, ip, #7
 8018784:	ea43 0c0c 	orr.w	ip, r3, ip
 8018788:	ea4c 0404 	orr.w	r4, ip, r4
 801878c:	8004      	strh	r4, [r0, #0]
 801878e:	3002      	adds	r0, #2
 8018790:	e7e2      	b.n	8018758 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8018792:	fb09 f303 	mul.w	r3, r9, r3
 8018796:	8807      	ldrh	r7, [r0, #0]
 8018798:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801879c:	fa5f fc8c 	uxtb.w	ip, ip
 80187a0:	1c5a      	adds	r2, r3, #1
 80187a2:	123e      	asrs	r6, r7, #8
 80187a4:	10fd      	asrs	r5, r7, #3
 80187a6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80187aa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80187ae:	00ff      	lsls	r7, r7, #3
 80187b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80187b4:	1212      	asrs	r2, r2, #8
 80187b6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80187ba:	b293      	uxth	r3, r2
 80187bc:	43d2      	mvns	r2, r2
 80187be:	b2ff      	uxtb	r7, r7
 80187c0:	fb1e fe03 	smulbb	lr, lr, r3
 80187c4:	b2d2      	uxtb	r2, r2
 80187c6:	fb1c fc03 	smulbb	ip, ip, r3
 80187ca:	b2e4      	uxtb	r4, r4
 80187cc:	fb06 e602 	mla	r6, r6, r2, lr
 80187d0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80187d4:	fb14 f403 	smulbb	r4, r4, r3
 80187d8:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80187dc:	b2b6      	uxth	r6, r6
 80187de:	fb05 c502 	mla	r5, r5, r2, ip
 80187e2:	fb07 4702 	mla	r7, r7, r2, r4
 80187e6:	f106 0e01 	add.w	lr, r6, #1
 80187ea:	b2ad      	uxth	r5, r5
 80187ec:	b2bf      	uxth	r7, r7
 80187ee:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80187f2:	f105 0c01 	add.w	ip, r5, #1
 80187f6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 80187fa:	1c7e      	adds	r6, r7, #1
 80187fc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018800:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018804:	096d      	lsrs	r5, r5, #5
 8018806:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801880a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801880e:	ea46 060e 	orr.w	r6, r6, lr
 8018812:	432e      	orrs	r6, r5
 8018814:	8006      	strh	r6, [r0, #0]
 8018816:	e7ba      	b.n	801878e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018818:	f8ba 3000 	ldrh.w	r3, [sl]
 801881c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8018820:	eba3 0308 	sub.w	r3, r3, r8
 8018824:	eba4 0408 	sub.w	r4, r4, r8
 8018828:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801882c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8018830:	e78b      	b.n	801874a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8018832:	4b03      	ldr	r3, [pc, #12]	; (8018840 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018834:	6818      	ldr	r0, [r3, #0]
 8018836:	6803      	ldr	r3, [r0, #0]
 8018838:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801883a:	4798      	blx	r3
 801883c:	e76a      	b.n	8018714 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801883e:	bf00      	nop
 8018840:	24001e7c 	.word	0x24001e7c
 8018844:	24001e76 	.word	0x24001e76

08018848 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8018848:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801884c:	b085      	sub	sp, #20
 801884e:	6810      	ldr	r0, [r2, #0]
 8018850:	460c      	mov	r4, r1
 8018852:	6851      	ldr	r1, [r2, #4]
 8018854:	466d      	mov	r5, sp
 8018856:	4616      	mov	r6, r2
 8018858:	c503      	stmia	r5!, {r0, r1}
 801885a:	6818      	ldr	r0, [r3, #0]
 801885c:	6859      	ldr	r1, [r3, #4]
 801885e:	c503      	stmia	r5!, {r0, r1}
 8018860:	4668      	mov	r0, sp
 8018862:	4d2e      	ldr	r5, [pc, #184]	; (801891c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8018864:	f7f8 fdba 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018868:	4631      	mov	r1, r6
 801886a:	a802      	add	r0, sp, #8
 801886c:	4e2c      	ldr	r6, [pc, #176]	; (8018920 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801886e:	f7f8 fddd 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018872:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8018876:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801887a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801887e:	6828      	ldr	r0, [r5, #0]
 8018880:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018884:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8018888:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801888c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018890:	f8bd 1000 	ldrh.w	r1, [sp]
 8018894:	440a      	add	r2, r1
 8018896:	f8ad 2008 	strh.w	r2, [sp, #8]
 801889a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801889e:	4413      	add	r3, r2
 80188a0:	f8ad 300a 	strh.w	r3, [sp, #10]
 80188a4:	6803      	ldr	r3, [r0, #0]
 80188a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80188a8:	4798      	blx	r3
 80188aa:	8833      	ldrh	r3, [r6, #0]
 80188ac:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80188b0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80188b4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80188b8:	f8df e068 	ldr.w	lr, [pc, #104]	; 8018924 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80188bc:	fb03 1202 	mla	r2, r3, r2, r1
 80188c0:	fb08 f303 	mul.w	r3, r8, r3
 80188c4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80188c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80188cc:	4298      	cmp	r0, r3
 80188ce:	d21d      	bcs.n	801890c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80188d0:	eb00 080c 	add.w	r8, r0, ip
 80188d4:	4540      	cmp	r0, r8
 80188d6:	d20f      	bcs.n	80188f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80188d8:	f854 1b04 	ldr.w	r1, [r4], #4
 80188dc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80188e0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80188e4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80188e8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80188ec:	ea42 0209 	orr.w	r2, r2, r9
 80188f0:	430a      	orrs	r2, r1
 80188f2:	f820 2b02 	strh.w	r2, [r0], #2
 80188f6:	e7ed      	b.n	80188d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80188f8:	8832      	ldrh	r2, [r6, #0]
 80188fa:	1bd2      	subs	r2, r2, r7
 80188fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018900:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8018904:	1bd2      	subs	r2, r2, r7
 8018906:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801890a:	e7df      	b.n	80188cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801890c:	6828      	ldr	r0, [r5, #0]
 801890e:	6803      	ldr	r3, [r0, #0]
 8018910:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018912:	4798      	blx	r3
 8018914:	b005      	add	sp, #20
 8018916:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801891a:	bf00      	nop
 801891c:	24001e7c 	.word	0x24001e7c
 8018920:	24001e76 	.word	0x24001e76
 8018924:	fffff800 	.word	0xfffff800

08018928 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8018928:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801892c:	b08e      	sub	sp, #56	; 0x38
 801892e:	460e      	mov	r6, r1
 8018930:	4604      	mov	r4, r0
 8018932:	461d      	mov	r5, r3
 8018934:	6808      	ldr	r0, [r1, #0]
 8018936:	ab0a      	add	r3, sp, #40	; 0x28
 8018938:	6849      	ldr	r1, [r1, #4]
 801893a:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 8018b10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801893e:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 8018b14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8018942:	c303      	stmia	r3!, {r0, r1}
 8018944:	6810      	ldr	r0, [r2, #0]
 8018946:	ab0c      	add	r3, sp, #48	; 0x30
 8018948:	6851      	ldr	r1, [r2, #4]
 801894a:	c303      	stmia	r3!, {r0, r1}
 801894c:	a80a      	add	r0, sp, #40	; 0x28
 801894e:	f7f8 fd45 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018952:	4631      	mov	r1, r6
 8018954:	a80c      	add	r0, sp, #48	; 0x30
 8018956:	f7f8 fd69 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801895a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801895e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018962:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018966:	f8d8 0000 	ldr.w	r0, [r8]
 801896a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801896e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8018972:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8018976:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801897a:	440c      	add	r4, r1
 801897c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8018980:	440a      	add	r2, r1
 8018982:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8018986:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801898a:	4413      	add	r3, r2
 801898c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018990:	6803      	ldr	r3, [r0, #0]
 8018992:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018994:	4798      	blx	r3
 8018996:	2dff      	cmp	r5, #255	; 0xff
 8018998:	d124      	bne.n	80189e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801899a:	f010 0f01 	tst.w	r0, #1
 801899e:	f8d8 0000 	ldr.w	r0, [r8]
 80189a2:	d022      	beq.n	80189ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80189a4:	2100      	movs	r1, #0
 80189a6:	f04f 0e01 	mov.w	lr, #1
 80189aa:	f8d0 c000 	ldr.w	ip, [r0]
 80189ae:	b2b6      	uxth	r6, r6
 80189b0:	f8cd e018 	str.w	lr, [sp, #24]
 80189b4:	b2bf      	uxth	r7, r7
 80189b6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80189ba:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80189be:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80189c2:	f8b9 e000 	ldrh.w	lr, [r9]
 80189c6:	9503      	str	r5, [sp, #12]
 80189c8:	9601      	str	r6, [sp, #4]
 80189ca:	9700      	str	r7, [sp, #0]
 80189cc:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80189d0:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80189d4:	9102      	str	r1, [sp, #8]
 80189d6:	4621      	mov	r1, r4
 80189d8:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80189dc:	47a8      	blx	r5
 80189de:	b00e      	add	sp, #56	; 0x38
 80189e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80189e4:	f010 0f04 	tst.w	r0, #4
 80189e8:	e7d9      	b.n	801899e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80189ea:	6803      	ldr	r3, [r0, #0]
 80189ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80189ee:	4798      	blx	r3
 80189f0:	f8b9 3000 	ldrh.w	r3, [r9]
 80189f4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80189f8:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80189fc:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8018a00:	435e      	muls	r6, r3
 8018a02:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8018a06:	2dff      	cmp	r5, #255	; 0xff
 8018a08:	fb03 1202 	mla	r2, r3, r2, r1
 8018a0c:	ebac 0c07 	sub.w	ip, ip, r7
 8018a10:	eba3 0707 	sub.w	r7, r3, r7
 8018a14:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018a18:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018a1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018a20:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8018a24:	d049      	beq.n	8018aba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8018a26:	43eb      	mvns	r3, r5
 8018a28:	fa1f f985 	uxth.w	r9, r5
 8018a2c:	b2db      	uxtb	r3, r3
 8018a2e:	42b0      	cmp	r0, r6
 8018a30:	d266      	bcs.n	8018b00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018a32:	eb00 0a0e 	add.w	sl, r0, lr
 8018a36:	4550      	cmp	r0, sl
 8018a38:	4621      	mov	r1, r4
 8018a3a:	f104 0403 	add.w	r4, r4, #3
 8018a3e:	d25b      	bcs.n	8018af8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8018a40:	8802      	ldrh	r2, [r0, #0]
 8018a42:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018a46:	ea4f 2822 	mov.w	r8, r2, asr #8
 8018a4a:	fb11 f109 	smulbb	r1, r1, r9
 8018a4e:	10d5      	asrs	r5, r2, #3
 8018a50:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8018a54:	00d2      	lsls	r2, r2, #3
 8018a56:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018a5a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8018a5e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018a62:	fb08 1803 	mla	r8, r8, r3, r1
 8018a66:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8018a6a:	b2d2      	uxtb	r2, r2
 8018a6c:	fb11 f109 	smulbb	r1, r1, r9
 8018a70:	fa1f f888 	uxth.w	r8, r8
 8018a74:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018a78:	fb05 1503 	mla	r5, r5, r3, r1
 8018a7c:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018a80:	fb11 f109 	smulbb	r1, r1, r9
 8018a84:	b2ad      	uxth	r5, r5
 8018a86:	fb02 1203 	mla	r2, r2, r3, r1
 8018a8a:	f108 0101 	add.w	r1, r8, #1
 8018a8e:	b292      	uxth	r2, r2
 8018a90:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8018a94:	1c51      	adds	r1, r2, #1
 8018a96:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8018a9a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018a9e:	1c69      	adds	r1, r5, #1
 8018aa0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018aa4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018aa8:	096d      	lsrs	r5, r5, #5
 8018aaa:	ea42 0208 	orr.w	r2, r2, r8
 8018aae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018ab2:	432a      	orrs	r2, r5
 8018ab4:	f820 2b02 	strh.w	r2, [r0], #2
 8018ab8:	e7bd      	b.n	8018a36 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8018aba:	4a14      	ldr	r2, [pc, #80]	; (8018b0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8018abc:	42b0      	cmp	r0, r6
 8018abe:	d21f      	bcs.n	8018b00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018ac0:	eb00 050e 	add.w	r5, r0, lr
 8018ac4:	42a8      	cmp	r0, r5
 8018ac6:	4621      	mov	r1, r4
 8018ac8:	f104 0403 	add.w	r4, r4, #3
 8018acc:	d210      	bcs.n	8018af0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8018ace:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8018ad2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018ad6:	00db      	lsls	r3, r3, #3
 8018ad8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018adc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018ae0:	430b      	orrs	r3, r1
 8018ae2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018ae6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018aea:	f820 3b02 	strh.w	r3, [r0], #2
 8018aee:	e7e9      	b.n	8018ac4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018af0:	4438      	add	r0, r7
 8018af2:	eb01 040c 	add.w	r4, r1, ip
 8018af6:	e7e1      	b.n	8018abc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018af8:	4438      	add	r0, r7
 8018afa:	eb01 040c 	add.w	r4, r1, ip
 8018afe:	e796      	b.n	8018a2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8018b00:	4b03      	ldr	r3, [pc, #12]	; (8018b10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8018b02:	6818      	ldr	r0, [r3, #0]
 8018b04:	6803      	ldr	r3, [r0, #0]
 8018b06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018b08:	4798      	blx	r3
 8018b0a:	e768      	b.n	80189de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018b0c:	fffff800 	.word	0xfffff800
 8018b10:	24001e7c 	.word	0x24001e7c
 8018b14:	24001e76 	.word	0x24001e76

08018b18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018b18:	b4f0      	push	{r4, r5, r6, r7}
 8018b1a:	4616      	mov	r6, r2
 8018b1c:	461c      	mov	r4, r3
 8018b1e:	460d      	mov	r5, r1
 8018b20:	9a04      	ldr	r2, [sp, #16]
 8018b22:	2e01      	cmp	r6, #1
 8018b24:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018b28:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8018b2c:	d012      	beq.n	8018b54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8018b2e:	d303      	bcc.n	8018b38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018b30:	2e02      	cmp	r6, #2
 8018b32:	d00a      	beq.n	8018b4a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018b34:	bcf0      	pop	{r4, r5, r6, r7}
 8018b36:	4770      	bx	lr
 8018b38:	6805      	ldr	r5, [r0, #0]
 8018b3a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8018b3e:	68ed      	ldr	r5, [r5, #12]
 8018b40:	4613      	mov	r3, r2
 8018b42:	4622      	mov	r2, r4
 8018b44:	46ac      	mov	ip, r5
 8018b46:	bcf0      	pop	{r4, r5, r6, r7}
 8018b48:	4760      	bx	ip
 8018b4a:	4621      	mov	r1, r4
 8018b4c:	4628      	mov	r0, r5
 8018b4e:	bcf0      	pop	{r4, r5, r6, r7}
 8018b50:	f7ff bd94 	b.w	801867c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018b54:	4621      	mov	r1, r4
 8018b56:	4628      	mov	r0, r5
 8018b58:	bcf0      	pop	{r4, r5, r6, r7}
 8018b5a:	f7ff bee5 	b.w	8018928 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018b60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b64:	b093      	sub	sp, #76	; 0x4c
 8018b66:	4681      	mov	r9, r0
 8018b68:	4688      	mov	r8, r1
 8018b6a:	6810      	ldr	r0, [r2, #0]
 8018b6c:	6851      	ldr	r1, [r2, #4]
 8018b6e:	ac0e      	add	r4, sp, #56	; 0x38
 8018b70:	4616      	mov	r6, r2
 8018b72:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8018b76:	4f6b      	ldr	r7, [pc, #428]	; (8018d24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018b78:	c403      	stmia	r4!, {r0, r1}
 8018b7a:	6818      	ldr	r0, [r3, #0]
 8018b7c:	ac10      	add	r4, sp, #64	; 0x40
 8018b7e:	6859      	ldr	r1, [r3, #4]
 8018b80:	c403      	stmia	r4!, {r0, r1}
 8018b82:	a80e      	add	r0, sp, #56	; 0x38
 8018b84:	f7f8 fc2a 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018b88:	4631      	mov	r1, r6
 8018b8a:	a810      	add	r0, sp, #64	; 0x40
 8018b8c:	4e66      	ldr	r6, [pc, #408]	; (8018d28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018b8e:	f7f8 fc4d 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018b92:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8018b96:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8018b9a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8018b9e:	6830      	ldr	r0, [r6, #0]
 8018ba0:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018ba4:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8018ba8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8018bac:	4489      	add	r9, r1
 8018bae:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8018bb2:	440a      	add	r2, r1
 8018bb4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8018bb8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018bbc:	4413      	add	r3, r2
 8018bbe:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018bc2:	6803      	ldr	r3, [r0, #0]
 8018bc4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018bc6:	4798      	blx	r3
 8018bc8:	f010 0f80 	tst.w	r0, #128	; 0x80
 8018bcc:	6830      	ldr	r0, [r6, #0]
 8018bce:	d01d      	beq.n	8018c0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018bd0:	2200      	movs	r2, #0
 8018bd2:	6801      	ldr	r1, [r0, #0]
 8018bd4:	b2a4      	uxth	r4, r4
 8018bd6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8018bda:	b2ad      	uxth	r5, r5
 8018bdc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018be0:	220b      	movs	r2, #11
 8018be2:	9207      	str	r2, [sp, #28]
 8018be4:	883a      	ldrh	r2, [r7, #0]
 8018be6:	9502      	str	r5, [sp, #8]
 8018be8:	9206      	str	r2, [sp, #24]
 8018bea:	2201      	movs	r2, #1
 8018bec:	9401      	str	r4, [sp, #4]
 8018bee:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018bf2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8018bf6:	9203      	str	r2, [sp, #12]
 8018bf8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8018bfc:	9200      	str	r2, [sp, #0]
 8018bfe:	4642      	mov	r2, r8
 8018c00:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8018c02:	4649      	mov	r1, r9
 8018c04:	47a0      	blx	r4
 8018c06:	b013      	add	sp, #76	; 0x4c
 8018c08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c0c:	6803      	ldr	r3, [r0, #0]
 8018c0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018c10:	4798      	blx	r3
 8018c12:	883b      	ldrh	r3, [r7, #0]
 8018c14:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8018c18:	f04f 0e04 	mov.w	lr, #4
 8018c1c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8018c20:	435d      	muls	r5, r3
 8018c22:	fb03 1202 	mla	r2, r3, r2, r1
 8018c26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018c2a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8018c2e:	920c      	str	r2, [sp, #48]	; 0x30
 8018c30:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8018c34:	1b12      	subs	r2, r2, r4
 8018c36:	920d      	str	r2, [sp, #52]	; 0x34
 8018c38:	0062      	lsls	r2, r4, #1
 8018c3a:	1b1c      	subs	r4, r3, r4
 8018c3c:	920a      	str	r2, [sp, #40]	; 0x28
 8018c3e:	0063      	lsls	r3, r4, #1
 8018c40:	930b      	str	r3, [sp, #44]	; 0x2c
 8018c42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018c44:	4298      	cmp	r0, r3
 8018c46:	d266      	bcs.n	8018d16 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018c48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c4a:	eb00 0b03 	add.w	fp, r0, r3
 8018c4e:	4558      	cmp	r0, fp
 8018c50:	d25c      	bcs.n	8018d0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018c52:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018c56:	fb1e e303 	smlabb	r3, lr, r3, lr
 8018c5a:	f858 2003 	ldr.w	r2, [r8, r3]
 8018c5e:	0e11      	lsrs	r1, r2, #24
 8018c60:	d012      	beq.n	8018c88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018c62:	29ff      	cmp	r1, #255	; 0xff
 8018c64:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018c68:	d110      	bne.n	8018c8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018c6a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018c6e:	d10d      	bne.n	8018c8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018c70:	0953      	lsrs	r3, r2, #5
 8018c72:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8018c76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018c7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018c7e:	f027 0707 	bic.w	r7, r7, #7
 8018c82:	431f      	orrs	r7, r3
 8018c84:	433a      	orrs	r2, r7
 8018c86:	8002      	strh	r2, [r0, #0]
 8018c88:	3002      	adds	r0, #2
 8018c8a:	e7e0      	b.n	8018c4e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018c8c:	fb0a f101 	mul.w	r1, sl, r1
 8018c90:	8806      	ldrh	r6, [r0, #0]
 8018c92:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018c96:	b2d2      	uxtb	r2, r2
 8018c98:	1c4b      	adds	r3, r1, #1
 8018c9a:	1235      	asrs	r5, r6, #8
 8018c9c:	10f4      	asrs	r4, r6, #3
 8018c9e:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018ca2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018ca6:	00f6      	lsls	r6, r6, #3
 8018ca8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8018cac:	121b      	asrs	r3, r3, #8
 8018cae:	b2f6      	uxtb	r6, r6
 8018cb0:	b299      	uxth	r1, r3
 8018cb2:	43db      	mvns	r3, r3
 8018cb4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018cb8:	fb1c fc01 	smulbb	ip, ip, r1
 8018cbc:	b2db      	uxtb	r3, r3
 8018cbe:	fb12 f201 	smulbb	r2, r2, r1
 8018cc2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018cc6:	fb05 c503 	mla	r5, r5, r3, ip
 8018cca:	b2ff      	uxtb	r7, r7
 8018ccc:	fb06 2203 	mla	r2, r6, r3, r2
 8018cd0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018cd4:	fb17 f701 	smulbb	r7, r7, r1
 8018cd8:	b2ad      	uxth	r5, r5
 8018cda:	b292      	uxth	r2, r2
 8018cdc:	fb04 7403 	mla	r4, r4, r3, r7
 8018ce0:	f105 0c01 	add.w	ip, r5, #1
 8018ce4:	1c57      	adds	r7, r2, #1
 8018ce6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018cea:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018cee:	b2a4      	uxth	r4, r4
 8018cf0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018cf4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018cf8:	433d      	orrs	r5, r7
 8018cfa:	1c67      	adds	r7, r4, #1
 8018cfc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8018d00:	0964      	lsrs	r4, r4, #5
 8018d02:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8018d06:	4325      	orrs	r5, r4
 8018d08:	8005      	strh	r5, [r0, #0]
 8018d0a:	e7bd      	b.n	8018c88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018d0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018d0e:	4418      	add	r0, r3
 8018d10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018d12:	4499      	add	r9, r3
 8018d14:	e795      	b.n	8018c42 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8018d16:	4b04      	ldr	r3, [pc, #16]	; (8018d28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018d18:	6818      	ldr	r0, [r3, #0]
 8018d1a:	6803      	ldr	r3, [r0, #0]
 8018d1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018d1e:	4798      	blx	r3
 8018d20:	e771      	b.n	8018c06 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8018d22:	bf00      	nop
 8018d24:	24001e76 	.word	0x24001e76
 8018d28:	24001e7c 	.word	0x24001e7c

08018d2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8018d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d30:	b087      	sub	sp, #28
 8018d32:	4680      	mov	r8, r0
 8018d34:	460d      	mov	r5, r1
 8018d36:	4614      	mov	r4, r2
 8018d38:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8018d3c:	2e00      	cmp	r6, #0
 8018d3e:	f000 80b9 	beq.w	8018eb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018d42:	6810      	ldr	r0, [r2, #0]
 8018d44:	af02      	add	r7, sp, #8
 8018d46:	6851      	ldr	r1, [r2, #4]
 8018d48:	c703      	stmia	r7!, {r0, r1}
 8018d4a:	6818      	ldr	r0, [r3, #0]
 8018d4c:	af04      	add	r7, sp, #16
 8018d4e:	6859      	ldr	r1, [r3, #4]
 8018d50:	c703      	stmia	r7!, {r0, r1}
 8018d52:	a802      	add	r0, sp, #8
 8018d54:	f7f8 fb42 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018d58:	4621      	mov	r1, r4
 8018d5a:	a804      	add	r0, sp, #16
 8018d5c:	f7f8 fb66 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018d60:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018d64:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018d68:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018d6c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018d70:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018d74:	eb08 0401 	add.w	r4, r8, r1
 8018d78:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018d7c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018d80:	440a      	add	r2, r1
 8018d82:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018d86:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018d8a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018d8e:	4413      	add	r3, r2
 8018d90:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018d94:	4b49      	ldr	r3, [pc, #292]	; (8018ebc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018d96:	6818      	ldr	r0, [r3, #0]
 8018d98:	6803      	ldr	r3, [r0, #0]
 8018d9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018d9c:	4798      	blx	r3
 8018d9e:	4b48      	ldr	r3, [pc, #288]	; (8018ec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018da0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018da4:	2eff      	cmp	r6, #255	; 0xff
 8018da6:	881a      	ldrh	r2, [r3, #0]
 8018da8:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018dac:	fb02 c101 	mla	r1, r2, r1, ip
 8018db0:	fb02 f207 	mul.w	r2, r2, r7
 8018db4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018db8:	f105 0104 	add.w	r1, r5, #4
 8018dbc:	461d      	mov	r5, r3
 8018dbe:	d05a      	beq.n	8018e76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018dc0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8018dc4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018dc8:	b2b6      	uxth	r6, r6
 8018dca:	9301      	str	r3, [sp, #4]
 8018dcc:	fa1f fe8e 	uxth.w	lr, lr
 8018dd0:	4282      	cmp	r2, r0
 8018dd2:	d96a      	bls.n	8018eaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018dd4:	eb00 0b0a 	add.w	fp, r0, sl
 8018dd8:	4583      	cmp	fp, r0
 8018dda:	d940      	bls.n	8018e5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018ddc:	8805      	ldrh	r5, [r0, #0]
 8018dde:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018de2:	122f      	asrs	r7, r5, #8
 8018de4:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018de8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018dec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018df0:	00ed      	lsls	r5, r5, #3
 8018df2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018df6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018dfa:	fb17 f70e 	smulbb	r7, r7, lr
 8018dfe:	b2ed      	uxtb	r5, r5
 8018e00:	fb19 f90e 	smulbb	r9, r9, lr
 8018e04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018e08:	fb15 f50e 	smulbb	r5, r5, lr
 8018e0c:	fb0c 7c06 	mla	ip, ip, r6, r7
 8018e10:	10df      	asrs	r7, r3, #3
 8018e12:	00db      	lsls	r3, r3, #3
 8018e14:	fa1f fc8c 	uxth.w	ip, ip
 8018e18:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018e1c:	b2db      	uxtb	r3, r3
 8018e1e:	fb07 9706 	mla	r7, r7, r6, r9
 8018e22:	f10c 0901 	add.w	r9, ip, #1
 8018e26:	fb03 5306 	mla	r3, r3, r6, r5
 8018e2a:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018e2e:	b29b      	uxth	r3, r3
 8018e30:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8018e34:	b2bf      	uxth	r7, r7
 8018e36:	f103 0c01 	add.w	ip, r3, #1
 8018e3a:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018e3e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018e42:	ea4c 0c09 	orr.w	ip, ip, r9
 8018e46:	f107 0901 	add.w	r9, r7, #1
 8018e4a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018e4e:	097f      	lsrs	r7, r7, #5
 8018e50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018e54:	ea4c 0c07 	orr.w	ip, ip, r7
 8018e58:	f820 cb02 	strh.w	ip, [r0], #2
 8018e5c:	e7bc      	b.n	8018dd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018e5e:	9b01      	ldr	r3, [sp, #4]
 8018e60:	881b      	ldrh	r3, [r3, #0]
 8018e62:	eba3 0308 	sub.w	r3, r3, r8
 8018e66:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018e6a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018e6e:	eba3 0308 	sub.w	r3, r3, r8
 8018e72:	441c      	add	r4, r3
 8018e74:	e7ac      	b.n	8018dd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018e76:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018e7a:	4282      	cmp	r2, r0
 8018e7c:	d915      	bls.n	8018eaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018e7e:	eb00 060a 	add.w	r6, r0, sl
 8018e82:	4286      	cmp	r6, r0
 8018e84:	d906      	bls.n	8018e94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018e86:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018e8a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018e8e:	f820 3b02 	strh.w	r3, [r0], #2
 8018e92:	e7f6      	b.n	8018e82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018e94:	882b      	ldrh	r3, [r5, #0]
 8018e96:	eba3 0308 	sub.w	r3, r3, r8
 8018e9a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018e9e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018ea2:	eba3 0308 	sub.w	r3, r3, r8
 8018ea6:	441c      	add	r4, r3
 8018ea8:	e7e7      	b.n	8018e7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018eaa:	4b04      	ldr	r3, [pc, #16]	; (8018ebc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018eac:	6818      	ldr	r0, [r3, #0]
 8018eae:	6803      	ldr	r3, [r0, #0]
 8018eb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018eb2:	4798      	blx	r3
 8018eb4:	b007      	add	sp, #28
 8018eb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018eba:	bf00      	nop
 8018ebc:	24001e7c 	.word	0x24001e7c
 8018ec0:	24001e76 	.word	0x24001e76

08018ec4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ec8:	b091      	sub	sp, #68	; 0x44
 8018eca:	4680      	mov	r8, r0
 8018ecc:	460f      	mov	r7, r1
 8018ece:	4614      	mov	r4, r2
 8018ed0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8018ed4:	2d00      	cmp	r5, #0
 8018ed6:	d051      	beq.n	8018f7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018ed8:	6810      	ldr	r0, [r2, #0]
 8018eda:	ae0c      	add	r6, sp, #48	; 0x30
 8018edc:	6851      	ldr	r1, [r2, #4]
 8018ede:	f8df 9200 	ldr.w	r9, [pc, #512]	; 80190e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018ee2:	c603      	stmia	r6!, {r0, r1}
 8018ee4:	6818      	ldr	r0, [r3, #0]
 8018ee6:	ae0e      	add	r6, sp, #56	; 0x38
 8018ee8:	6859      	ldr	r1, [r3, #4]
 8018eea:	c603      	stmia	r6!, {r0, r1}
 8018eec:	a80c      	add	r0, sp, #48	; 0x30
 8018eee:	f7f8 fa75 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018ef2:	4621      	mov	r1, r4
 8018ef4:	a80e      	add	r0, sp, #56	; 0x38
 8018ef6:	f7f8 fa99 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018efa:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8018efe:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018f02:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018f06:	f8d9 0000 	ldr.w	r0, [r9]
 8018f0a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018f0e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8018f12:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8018f16:	eb08 0401 	add.w	r4, r8, r1
 8018f1a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8018f1e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80190e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018f22:	440a      	add	r2, r1
 8018f24:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8018f28:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8018f2c:	4413      	add	r3, r2
 8018f2e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8018f32:	6803      	ldr	r3, [r0, #0]
 8018f34:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018f36:	4798      	blx	r3
 8018f38:	f010 0f80 	tst.w	r0, #128	; 0x80
 8018f3c:	f8d9 0000 	ldr.w	r0, [r9]
 8018f40:	d01f      	beq.n	8018f82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018f42:	2200      	movs	r2, #0
 8018f44:	6801      	ldr	r1, [r0, #0]
 8018f46:	b2b6      	uxth	r6, r6
 8018f48:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018f4c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018f50:	220b      	movs	r2, #11
 8018f52:	9207      	str	r2, [sp, #28]
 8018f54:	f8b8 2000 	ldrh.w	r2, [r8]
 8018f58:	9601      	str	r6, [sp, #4]
 8018f5a:	9206      	str	r2, [sp, #24]
 8018f5c:	2201      	movs	r2, #1
 8018f5e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018f62:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8018f66:	9203      	str	r2, [sp, #12]
 8018f68:	fa1f f28a 	uxth.w	r2, sl
 8018f6c:	9202      	str	r2, [sp, #8]
 8018f6e:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018f72:	9200      	str	r2, [sp, #0]
 8018f74:	463a      	mov	r2, r7
 8018f76:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8018f78:	4621      	mov	r1, r4
 8018f7a:	47a8      	blx	r5
 8018f7c:	b011      	add	sp, #68	; 0x44
 8018f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f82:	6803      	ldr	r3, [r0, #0]
 8018f84:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018f88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018f8a:	4798      	blx	r3
 8018f8c:	f8b8 2000 	ldrh.w	r2, [r8]
 8018f90:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018f94:	2dff      	cmp	r5, #255	; 0xff
 8018f96:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8018f9a:	fb0a fa02 	mul.w	sl, sl, r2
 8018f9e:	fb02 1303 	mla	r3, r2, r3, r1
 8018fa2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018fa6:	d062      	beq.n	801906e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018fa8:	ea6f 0c05 	mvn.w	ip, r5
 8018fac:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018fb0:	b2ad      	uxth	r5, r5
 8018fb2:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018fb6:	fa5f fc8c 	uxtb.w	ip, ip
 8018fba:	930a      	str	r3, [sp, #40]	; 0x28
 8018fbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018fbe:	4298      	cmp	r0, r3
 8018fc0:	f080 8085 	bcs.w	80190ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018fc4:	eb00 0b09 	add.w	fp, r0, r9
 8018fc8:	4558      	cmp	r0, fp
 8018fca:	d246      	bcs.n	801905a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018fcc:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018fd0:	2303      	movs	r3, #3
 8018fd2:	2204      	movs	r2, #4
 8018fd4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018fd8:	8803      	ldrh	r3, [r0, #0]
 8018fda:	eb07 0a0e 	add.w	sl, r7, lr
 8018fde:	1219      	asrs	r1, r3, #8
 8018fe0:	10da      	asrs	r2, r3, #3
 8018fe2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018fe6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8018fea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018fee:	00db      	lsls	r3, r3, #3
 8018ff0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018ff4:	fb18 f805 	smulbb	r8, r8, r5
 8018ff8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018ffc:	fb1e fe05 	smulbb	lr, lr, r5
 8019000:	b2db      	uxtb	r3, r3
 8019002:	fb01 810c 	mla	r1, r1, ip, r8
 8019006:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801900a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801900e:	fb18 f805 	smulbb	r8, r8, r5
 8019012:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8019016:	b289      	uxth	r1, r1
 8019018:	fb02 820c 	mla	r2, r2, ip, r8
 801901c:	fb03 e30c 	mla	r3, r3, ip, lr
 8019020:	f101 0801 	add.w	r8, r1, #1
 8019024:	b292      	uxth	r2, r2
 8019026:	b29b      	uxth	r3, r3
 8019028:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801902c:	f102 0801 	add.w	r8, r2, #1
 8019030:	f103 0e01 	add.w	lr, r3, #1
 8019034:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8019038:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801903c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8019040:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019044:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019048:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801904c:	ea4e 0101 	orr.w	r1, lr, r1
 8019050:	ea41 0108 	orr.w	r1, r1, r8
 8019054:	f820 1b02 	strh.w	r1, [r0], #2
 8019058:	e7b6      	b.n	8018fc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801905a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801905c:	881b      	ldrh	r3, [r3, #0]
 801905e:	1b9b      	subs	r3, r3, r6
 8019060:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019064:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8019068:	1b9b      	subs	r3, r3, r6
 801906a:	441c      	add	r4, r3
 801906c:	e7a6      	b.n	8018fbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801906e:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8019072:	2203      	movs	r2, #3
 8019074:	2504      	movs	r5, #4
 8019076:	4919      	ldr	r1, [pc, #100]	; (80190dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8019078:	4550      	cmp	r0, sl
 801907a:	d228      	bcs.n	80190ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801907c:	eb00 0c09 	add.w	ip, r0, r9
 8019080:	4560      	cmp	r0, ip
 8019082:	4623      	mov	r3, r4
 8019084:	d219      	bcs.n	80190ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8019086:	f893 e000 	ldrb.w	lr, [r3]
 801908a:	3401      	adds	r4, #1
 801908c:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8019090:	eb07 0b0e 	add.w	fp, r7, lr
 8019094:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019098:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801909c:	f89b b001 	ldrb.w	fp, [fp, #1]
 80190a0:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80190a4:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80190a8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80190ac:	ea43 030b 	orr.w	r3, r3, fp
 80190b0:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80190b4:	f820 3b02 	strh.w	r3, [r0], #2
 80190b8:	e7e2      	b.n	8019080 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80190ba:	f8b8 3000 	ldrh.w	r3, [r8]
 80190be:	1b9b      	subs	r3, r3, r6
 80190c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80190c4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80190c8:	1b9b      	subs	r3, r3, r6
 80190ca:	441c      	add	r4, r3
 80190cc:	e7d4      	b.n	8019078 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80190ce:	4b04      	ldr	r3, [pc, #16]	; (80190e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80190d0:	6818      	ldr	r0, [r3, #0]
 80190d2:	6803      	ldr	r3, [r0, #0]
 80190d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80190d6:	4798      	blx	r3
 80190d8:	e750      	b.n	8018f7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80190da:	bf00      	nop
 80190dc:	fffff800 	.word	0xfffff800
 80190e0:	24001e7c 	.word	0x24001e7c
 80190e4:	24001e76 	.word	0x24001e76

080190e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80190e8:	b4f0      	push	{r4, r5, r6, r7}
 80190ea:	460c      	mov	r4, r1
 80190ec:	4611      	mov	r1, r2
 80190ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80190f2:	461a      	mov	r2, r3
 80190f4:	780f      	ldrb	r7, [r1, #0]
 80190f6:	9b04      	ldr	r3, [sp, #16]
 80190f8:	2f01      	cmp	r7, #1
 80190fa:	784e      	ldrb	r6, [r1, #1]
 80190fc:	d036      	beq.n	801916c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 80190fe:	d31e      	bcc.n	801913e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8019100:	2f02      	cmp	r7, #2
 8019102:	d14a      	bne.n	801919a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8019104:	2e03      	cmp	r6, #3
 8019106:	d848      	bhi.n	801919a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8019108:	e8df f006 	tbb	[pc, r6]
 801910c:	16140702 	.word	0x16140702
 8019110:	9504      	str	r5, [sp, #16]
 8019112:	4620      	mov	r0, r4
 8019114:	bcf0      	pop	{r4, r5, r6, r7}
 8019116:	f7ff be09 	b.w	8018d2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801911a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801911c:	2800      	cmp	r0, #0
 801911e:	d03c      	beq.n	801919a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8019120:	6806      	ldr	r6, [r0, #0]
 8019122:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8019126:	68b5      	ldr	r5, [r6, #8]
 8019128:	4613      	mov	r3, r2
 801912a:	46ac      	mov	ip, r5
 801912c:	460a      	mov	r2, r1
 801912e:	4621      	mov	r1, r4
 8019130:	bcf0      	pop	{r4, r5, r6, r7}
 8019132:	4760      	bx	ip
 8019134:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8019136:	e7f1      	b.n	801911c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8019138:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801913c:	e7ee      	b.n	801911c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801913e:	2e03      	cmp	r6, #3
 8019140:	d82b      	bhi.n	801919a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8019142:	e8df f006 	tbb	[pc, r6]
 8019146:	0702      	.short	0x0702
 8019148:	100e      	.short	0x100e
 801914a:	9504      	str	r5, [sp, #16]
 801914c:	4620      	mov	r0, r4
 801914e:	bcf0      	pop	{r4, r5, r6, r7}
 8019150:	f7ff bd06 	b.w	8018b60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8019154:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8019156:	b300      	cbz	r0, 801919a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8019158:	6806      	ldr	r6, [r0, #0]
 801915a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801915e:	68f5      	ldr	r5, [r6, #12]
 8019160:	e7e2      	b.n	8019128 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019162:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8019164:	e7f7      	b.n	8019156 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8019166:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801916a:	e7f4      	b.n	8019156 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801916c:	2e03      	cmp	r6, #3
 801916e:	d814      	bhi.n	801919a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8019170:	e8df f006 	tbb	[pc, r6]
 8019174:	100e0702 	.word	0x100e0702
 8019178:	9504      	str	r5, [sp, #16]
 801917a:	4620      	mov	r0, r4
 801917c:	bcf0      	pop	{r4, r5, r6, r7}
 801917e:	f7ff bea1 	b.w	8018ec4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8019182:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8019184:	b148      	cbz	r0, 801919a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8019186:	6806      	ldr	r6, [r0, #0]
 8019188:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801918c:	6935      	ldr	r5, [r6, #16]
 801918e:	e7cb      	b.n	8019128 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019190:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8019192:	e7f7      	b.n	8019184 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8019194:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8019198:	e7f4      	b.n	8019184 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801919a:	bcf0      	pop	{r4, r5, r6, r7}
 801919c:	4770      	bx	lr
	...

080191a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80191a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191a4:	b087      	sub	sp, #28
 80191a6:	4604      	mov	r4, r0
 80191a8:	460e      	mov	r6, r1
 80191aa:	6810      	ldr	r0, [r2, #0]
 80191ac:	6851      	ldr	r1, [r2, #4]
 80191ae:	ad02      	add	r5, sp, #8
 80191b0:	4617      	mov	r7, r2
 80191b2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80191b6:	f8df 9230 	ldr.w	r9, [pc, #560]	; 80193e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80191ba:	c503      	stmia	r5!, {r0, r1}
 80191bc:	6818      	ldr	r0, [r3, #0]
 80191be:	ad04      	add	r5, sp, #16
 80191c0:	6859      	ldr	r1, [r3, #4]
 80191c2:	c503      	stmia	r5!, {r0, r1}
 80191c4:	a802      	add	r0, sp, #8
 80191c6:	f7f8 f909 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80191ca:	4639      	mov	r1, r7
 80191cc:	a804      	add	r0, sp, #16
 80191ce:	f7f8 f92d 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80191d2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80191d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80191da:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80191de:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80191e2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80191e6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80191ea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80191ee:	440e      	add	r6, r1
 80191f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80191f4:	440a      	add	r2, r1
 80191f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80191fa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80191fe:	4413      	add	r3, r2
 8019200:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019204:	4b77      	ldr	r3, [pc, #476]	; (80193e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8019206:	6818      	ldr	r0, [r3, #0]
 8019208:	6803      	ldr	r3, [r0, #0]
 801920a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801920c:	4798      	blx	r3
 801920e:	f8b9 b000 	ldrh.w	fp, [r9]
 8019212:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019216:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801921a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801921e:	fb05 f50b 	mul.w	r5, r5, fp
 8019222:	fb0b 2303 	mla	r3, fp, r3, r2
 8019226:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801922a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801922e:	9300      	str	r3, [sp, #0]
 8019230:	d069      	beq.n	8019306 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8019232:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8019236:	4558      	cmp	r0, fp
 8019238:	f080 80cc 	bcs.w	80193d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801923c:	9b00      	ldr	r3, [sp, #0]
 801923e:	4631      	mov	r1, r6
 8019240:	18c3      	adds	r3, r0, r3
 8019242:	9301      	str	r3, [sp, #4]
 8019244:	9b01      	ldr	r3, [sp, #4]
 8019246:	4298      	cmp	r0, r3
 8019248:	d24f      	bcs.n	80192ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801924a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801924e:	2a00      	cmp	r2, #0
 8019250:	d048      	beq.n	80192e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019252:	fb0a f202 	mul.w	r2, sl, r2
 8019256:	1c53      	adds	r3, r2, #1
 8019258:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801925c:	121b      	asrs	r3, r3, #8
 801925e:	d041      	beq.n	80192e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019260:	8802      	ldrh	r2, [r0, #0]
 8019262:	b29e      	uxth	r6, r3
 8019264:	f8b4 c000 	ldrh.w	ip, [r4]
 8019268:	43db      	mvns	r3, r3
 801926a:	1215      	asrs	r5, r2, #8
 801926c:	b2db      	uxtb	r3, r3
 801926e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019272:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019276:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801927a:	fb15 f503 	smulbb	r5, r5, r3
 801927e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019282:	00d2      	lsls	r2, r2, #3
 8019284:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019288:	fb07 5706 	mla	r7, r7, r6, r5
 801928c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019290:	b2d2      	uxtb	r2, r2
 8019292:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019296:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801929a:	fb1e fe03 	smulbb	lr, lr, r3
 801929e:	b2bf      	uxth	r7, r7
 80192a0:	fb12 f203 	smulbb	r2, r2, r3
 80192a4:	fa5f fc8c 	uxtb.w	ip, ip
 80192a8:	fb05 e506 	mla	r5, r5, r6, lr
 80192ac:	f107 0e01 	add.w	lr, r7, #1
 80192b0:	fb0c 2c06 	mla	ip, ip, r6, r2
 80192b4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80192b8:	fa1f fc8c 	uxth.w	ip, ip
 80192bc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80192c0:	b2ad      	uxth	r5, r5
 80192c2:	f10c 0701 	add.w	r7, ip, #1
 80192c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80192ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80192ce:	ea47 070e 	orr.w	r7, r7, lr
 80192d2:	f105 0e01 	add.w	lr, r5, #1
 80192d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80192da:	096d      	lsrs	r5, r5, #5
 80192dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80192e0:	432f      	orrs	r7, r5
 80192e2:	8007      	strh	r7, [r0, #0]
 80192e4:	3002      	adds	r0, #2
 80192e6:	3402      	adds	r4, #2
 80192e8:	e7ac      	b.n	8019244 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80192ea:	f8b9 3000 	ldrh.w	r3, [r9]
 80192ee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80192f2:	eba3 0308 	sub.w	r3, r3, r8
 80192f6:	eba6 0608 	sub.w	r6, r6, r8
 80192fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80192fe:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8019302:	440e      	add	r6, r1
 8019304:	e797      	b.n	8019236 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8019306:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801930a:	42a8      	cmp	r0, r5
 801930c:	d262      	bcs.n	80193d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801930e:	9b00      	ldr	r3, [sp, #0]
 8019310:	4631      	mov	r1, r6
 8019312:	eb00 0b03 	add.w	fp, r0, r3
 8019316:	4558      	cmp	r0, fp
 8019318:	d24e      	bcs.n	80193b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801931a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801931e:	b12b      	cbz	r3, 801932c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019320:	2bff      	cmp	r3, #255	; 0xff
 8019322:	f8b4 e000 	ldrh.w	lr, [r4]
 8019326:	d104      	bne.n	8019332 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8019328:	f8a0 e000 	strh.w	lr, [r0]
 801932c:	3002      	adds	r0, #2
 801932e:	3402      	adds	r4, #2
 8019330:	e7f1      	b.n	8019316 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8019332:	8802      	ldrh	r2, [r0, #0]
 8019334:	b29f      	uxth	r7, r3
 8019336:	43db      	mvns	r3, r3
 8019338:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801933c:	1216      	asrs	r6, r2, #8
 801933e:	b2db      	uxtb	r3, r3
 8019340:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019344:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019348:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801934c:	00d2      	lsls	r2, r2, #3
 801934e:	fb16 f603 	smulbb	r6, r6, r3
 8019352:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019356:	b2d2      	uxtb	r2, r2
 8019358:	fb0c 6c07 	mla	ip, ip, r7, r6
 801935c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019360:	fb1a fa03 	smulbb	sl, sl, r3
 8019364:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019368:	fa1f fc8c 	uxth.w	ip, ip
 801936c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019370:	fb12 f303 	smulbb	r3, r2, r3
 8019374:	fa5f fe8e 	uxtb.w	lr, lr
 8019378:	fb06 a607 	mla	r6, r6, r7, sl
 801937c:	f10c 0201 	add.w	r2, ip, #1
 8019380:	fb0e 3307 	mla	r3, lr, r7, r3
 8019384:	b2b6      	uxth	r6, r6
 8019386:	b29b      	uxth	r3, r3
 8019388:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801938c:	f106 0a01 	add.w	sl, r6, #1
 8019390:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8019394:	f103 0c01 	add.w	ip, r3, #1
 8019398:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801939c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80193a0:	0976      	lsrs	r6, r6, #5
 80193a2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80193a6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80193aa:	ea4c 0c02 	orr.w	ip, ip, r2
 80193ae:	ea4c 0c06 	orr.w	ip, ip, r6
 80193b2:	f8a0 c000 	strh.w	ip, [r0]
 80193b6:	e7b9      	b.n	801932c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80193b8:	f8b9 3000 	ldrh.w	r3, [r9]
 80193bc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80193c0:	eba3 0308 	sub.w	r3, r3, r8
 80193c4:	eba6 0608 	sub.w	r6, r6, r8
 80193c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80193cc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80193d0:	440e      	add	r6, r1
 80193d2:	e79a      	b.n	801930a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80193d4:	4b03      	ldr	r3, [pc, #12]	; (80193e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80193d6:	6818      	ldr	r0, [r3, #0]
 80193d8:	6803      	ldr	r3, [r0, #0]
 80193da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80193dc:	4798      	blx	r3
 80193de:	b007      	add	sp, #28
 80193e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193e4:	24001e7c 	.word	0x24001e7c
 80193e8:	24001e76 	.word	0x24001e76

080193ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80193ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193f0:	b089      	sub	sp, #36	; 0x24
 80193f2:	4682      	mov	sl, r0
 80193f4:	460f      	mov	r7, r1
 80193f6:	4691      	mov	r9, r2
 80193f8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80193fc:	4698      	mov	r8, r3
 80193fe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019400:	2e00      	cmp	r6, #0
 8019402:	d03d      	beq.n	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8019404:	4608      	mov	r0, r1
 8019406:	f7fa fe53 	bl	80140b0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801940a:	4605      	mov	r5, r0
 801940c:	4638      	mov	r0, r7
 801940e:	f7fa fe83 	bl	8014118 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019412:	f8ad 000e 	strh.w	r0, [sp, #14]
 8019416:	4638      	mov	r0, r7
 8019418:	f8ad 9008 	strh.w	r9, [sp, #8]
 801941c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019420:	f8ad 800a 	strh.w	r8, [sp, #10]
 8019424:	f7fa ff30 	bl	8014288 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019428:	4605      	mov	r5, r0
 801942a:	4638      	mov	r0, r7
 801942c:	f7fa ff5c 	bl	80142e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8019430:	4681      	mov	r9, r0
 8019432:	4638      	mov	r0, r7
 8019434:	f7fa ffac 	bl	8014390 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019438:	280b      	cmp	r0, #11
 801943a:	d821      	bhi.n	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801943c:	e8df f000 	tbb	[pc, r0]
 8019440:	2006aebe 	.word	0x2006aebe
 8019444:	20202020 	.word	0x20202020
 8019448:	b5202020 	.word	0xb5202020
 801944c:	4bb0      	ldr	r3, [pc, #704]	; (8019710 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801944e:	6818      	ldr	r0, [r3, #0]
 8019450:	6803      	ldr	r3, [r0, #0]
 8019452:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019454:	4798      	blx	r3
 8019456:	2eff      	cmp	r6, #255	; 0xff
 8019458:	d101      	bne.n	801945e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801945a:	0683      	lsls	r3, r0, #26
 801945c:	d506      	bpl.n	801946c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801945e:	4633      	mov	r3, r6
 8019460:	4622      	mov	r2, r4
 8019462:	a902      	add	r1, sp, #8
 8019464:	4628      	mov	r0, r5
 8019466:	f7ff f909 	bl	801867c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801946a:	e009      	b.n	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801946c:	4638      	mov	r0, r7
 801946e:	f7fa fed3 	bl	8014218 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019472:	b940      	cbnz	r0, 8019486 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8019474:	4623      	mov	r3, r4
 8019476:	aa02      	add	r2, sp, #8
 8019478:	4629      	mov	r1, r5
 801947a:	4650      	mov	r0, sl
 801947c:	f7ff f9e4 	bl	8018848 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8019480:	b009      	add	sp, #36	; 0x24
 8019482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019486:	f10d 0818 	add.w	r8, sp, #24
 801948a:	4639      	mov	r1, r7
 801948c:	af04      	add	r7, sp, #16
 801948e:	4640      	mov	r0, r8
 8019490:	f7fa fe76 	bl	8014180 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019494:	e898 0003 	ldmia.w	r8, {r0, r1}
 8019498:	e887 0003 	stmia.w	r7, {r0, r1}
 801949c:	4638      	mov	r0, r7
 801949e:	4621      	mov	r1, r4
 80194a0:	f7f5 f848 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 80194a4:	4638      	mov	r0, r7
 80194a6:	f7f5 f888 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 80194aa:	2800      	cmp	r0, #0
 80194ac:	d1d7      	bne.n	801945e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80194ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80194b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80194b6:	4293      	cmp	r3, r2
 80194b8:	dd12      	ble.n	80194e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80194ba:	1a9b      	subs	r3, r3, r2
 80194bc:	f9b4 0000 	ldrsh.w	r0, [r4]
 80194c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80194c4:	f8ad 0018 	strh.w	r0, [sp, #24]
 80194c8:	4628      	mov	r0, r5
 80194ca:	f8ad 201a 	strh.w	r2, [sp, #26]
 80194ce:	4642      	mov	r2, r8
 80194d0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80194d4:	a902      	add	r1, sp, #8
 80194d6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80194da:	4633      	mov	r3, r6
 80194dc:	f7ff f8ce 	bl	801867c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80194e0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80194e4:	f9b4 2000 	ldrsh.w	r2, [r4]
 80194e8:	4293      	cmp	r3, r2
 80194ea:	dd12      	ble.n	8019512 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 80194ec:	1a9b      	subs	r3, r3, r2
 80194ee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80194f2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80194f6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80194fa:	4642      	mov	r2, r8
 80194fc:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019500:	4628      	mov	r0, r5
 8019502:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019506:	23ff      	movs	r3, #255	; 0xff
 8019508:	f8ad 101e 	strh.w	r1, [sp, #30]
 801950c:	a902      	add	r1, sp, #8
 801950e:	f7ff f8b5 	bl	801867c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019512:	463b      	mov	r3, r7
 8019514:	aa02      	add	r2, sp, #8
 8019516:	4629      	mov	r1, r5
 8019518:	4650      	mov	r0, sl
 801951a:	f7ff f995 	bl	8018848 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801951e:	88a2      	ldrh	r2, [r4, #4]
 8019520:	8823      	ldrh	r3, [r4, #0]
 8019522:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019526:	4413      	add	r3, r2
 8019528:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801952c:	440a      	add	r2, r1
 801952e:	b29b      	uxth	r3, r3
 8019530:	b292      	uxth	r2, r2
 8019532:	b218      	sxth	r0, r3
 8019534:	b211      	sxth	r1, r2
 8019536:	4288      	cmp	r0, r1
 8019538:	dd12      	ble.n	8019560 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801953a:	1a9b      	subs	r3, r3, r2
 801953c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019540:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8019544:	4642      	mov	r2, r8
 8019546:	f8ad 1018 	strh.w	r1, [sp, #24]
 801954a:	a902      	add	r1, sp, #8
 801954c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019550:	23ff      	movs	r3, #255	; 0xff
 8019552:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019556:	4628      	mov	r0, r5
 8019558:	f8ad 601a 	strh.w	r6, [sp, #26]
 801955c:	f7ff f88e 	bl	801867c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019560:	88e2      	ldrh	r2, [r4, #6]
 8019562:	8863      	ldrh	r3, [r4, #2]
 8019564:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019568:	4413      	add	r3, r2
 801956a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801956e:	440a      	add	r2, r1
 8019570:	b29b      	uxth	r3, r3
 8019572:	b292      	uxth	r2, r2
 8019574:	b218      	sxth	r0, r3
 8019576:	b211      	sxth	r1, r2
 8019578:	4288      	cmp	r0, r1
 801957a:	dd81      	ble.n	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801957c:	1a9b      	subs	r3, r3, r2
 801957e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8019582:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019586:	4642      	mov	r2, r8
 8019588:	f8ad 301e 	strh.w	r3, [sp, #30]
 801958c:	23ff      	movs	r3, #255	; 0xff
 801958e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8019592:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019596:	f8ad 001c 	strh.w	r0, [sp, #28]
 801959a:	e762      	b.n	8019462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801959c:	4633      	mov	r3, r6
 801959e:	4622      	mov	r2, r4
 80195a0:	a902      	add	r1, sp, #8
 80195a2:	4628      	mov	r0, r5
 80195a4:	f7ff f9c0 	bl	8018928 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80195a8:	e76a      	b.n	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80195aa:	e9cd 4600 	strd	r4, r6, [sp]
 80195ae:	ab02      	add	r3, sp, #8
 80195b0:	464a      	mov	r2, r9
 80195b2:	4629      	mov	r1, r5
 80195b4:	4650      	mov	r0, sl
 80195b6:	f7ff fd97 	bl	80190e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80195ba:	e761      	b.n	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80195bc:	4638      	mov	r0, r7
 80195be:	f7fa fe2b 	bl	8014218 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80195c2:	b950      	cbnz	r0, 80195da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80195c4:	f8da 3000 	ldr.w	r3, [sl]
 80195c8:	aa02      	add	r2, sp, #8
 80195ca:	4629      	mov	r1, r5
 80195cc:	e9cd 6000 	strd	r6, r0, [sp]
 80195d0:	4650      	mov	r0, sl
 80195d2:	68de      	ldr	r6, [r3, #12]
 80195d4:	4623      	mov	r3, r4
 80195d6:	47b0      	blx	r6
 80195d8:	e752      	b.n	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80195da:	f10d 0818 	add.w	r8, sp, #24
 80195de:	4639      	mov	r1, r7
 80195e0:	af04      	add	r7, sp, #16
 80195e2:	4640      	mov	r0, r8
 80195e4:	f7fa fdcc 	bl	8014180 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80195e8:	e898 0003 	ldmia.w	r8, {r0, r1}
 80195ec:	e887 0003 	stmia.w	r7, {r0, r1}
 80195f0:	4638      	mov	r0, r7
 80195f2:	4621      	mov	r1, r4
 80195f4:	f7f4 ff9e 	bl	800e534 <_ZN8touchgfx4RectaNERKS0_>
 80195f8:	4638      	mov	r0, r7
 80195fa:	f7f4 ffde 	bl	800e5ba <_ZNK8touchgfx4Rect7isEmptyEv>
 80195fe:	b138      	cbz	r0, 8019610 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8019600:	4623      	mov	r3, r4
 8019602:	9600      	str	r6, [sp, #0]
 8019604:	aa02      	add	r2, sp, #8
 8019606:	4649      	mov	r1, r9
 8019608:	4628      	mov	r0, r5
 801960a:	f7ff fdc9 	bl	80191a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801960e:	e737      	b.n	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8019610:	f8da 3000 	ldr.w	r3, [sl]
 8019614:	aa02      	add	r2, sp, #8
 8019616:	4629      	mov	r1, r5
 8019618:	e9cd 6000 	strd	r6, r0, [sp]
 801961c:	4650      	mov	r0, sl
 801961e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8019622:	463b      	mov	r3, r7
 8019624:	47d8      	blx	fp
 8019626:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801962a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801962e:	4293      	cmp	r3, r2
 8019630:	dd13      	ble.n	801965a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8019632:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019636:	1a9b      	subs	r3, r3, r2
 8019638:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801963c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019640:	4628      	mov	r0, r5
 8019642:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019646:	aa02      	add	r2, sp, #8
 8019648:	f8ad 101c 	strh.w	r1, [sp, #28]
 801964c:	4649      	mov	r1, r9
 801964e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019652:	4643      	mov	r3, r8
 8019654:	9600      	str	r6, [sp, #0]
 8019656:	f7ff fda3 	bl	80191a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801965a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801965e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019662:	4293      	cmp	r3, r2
 8019664:	dd13      	ble.n	801968e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8019666:	1a9b      	subs	r3, r3, r2
 8019668:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801966c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019670:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019674:	aa02      	add	r2, sp, #8
 8019676:	f8ad 001a 	strh.w	r0, [sp, #26]
 801967a:	4628      	mov	r0, r5
 801967c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019680:	4643      	mov	r3, r8
 8019682:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019686:	4649      	mov	r1, r9
 8019688:	9600      	str	r6, [sp, #0]
 801968a:	f7ff fd89 	bl	80191a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801968e:	88a2      	ldrh	r2, [r4, #4]
 8019690:	8823      	ldrh	r3, [r4, #0]
 8019692:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019696:	4413      	add	r3, r2
 8019698:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801969c:	440a      	add	r2, r1
 801969e:	b29b      	uxth	r3, r3
 80196a0:	b292      	uxth	r2, r2
 80196a2:	b218      	sxth	r0, r3
 80196a4:	b211      	sxth	r1, r2
 80196a6:	4288      	cmp	r0, r1
 80196a8:	dd13      	ble.n	80196d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80196aa:	1a9b      	subs	r3, r3, r2
 80196ac:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80196b0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80196b4:	aa02      	add	r2, sp, #8
 80196b6:	f8ad 1018 	strh.w	r1, [sp, #24]
 80196ba:	4649      	mov	r1, r9
 80196bc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80196c0:	4643      	mov	r3, r8
 80196c2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80196c6:	4628      	mov	r0, r5
 80196c8:	9600      	str	r6, [sp, #0]
 80196ca:	f8ad 701a 	strh.w	r7, [sp, #26]
 80196ce:	f7ff fd67 	bl	80191a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80196d2:	88e2      	ldrh	r2, [r4, #6]
 80196d4:	8863      	ldrh	r3, [r4, #2]
 80196d6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80196da:	4413      	add	r3, r2
 80196dc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80196e0:	440a      	add	r2, r1
 80196e2:	b29b      	uxth	r3, r3
 80196e4:	b292      	uxth	r2, r2
 80196e6:	b218      	sxth	r0, r3
 80196e8:	b211      	sxth	r1, r2
 80196ea:	4288      	cmp	r0, r1
 80196ec:	f77f aec8 	ble.w	8019480 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80196f0:	f9b4 7000 	ldrsh.w	r7, [r4]
 80196f4:	1a9b      	subs	r3, r3, r2
 80196f6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80196fa:	f8ad 301e 	strh.w	r3, [sp, #30]
 80196fe:	4643      	mov	r3, r8
 8019700:	f8ad 7018 	strh.w	r7, [sp, #24]
 8019704:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019708:	f8ad 001c 	strh.w	r0, [sp, #28]
 801970c:	9600      	str	r6, [sp, #0]
 801970e:	e779      	b.n	8019604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8019710:	24001e7c 	.word	0x24001e7c

08019714 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8019714:	b180      	cbz	r0, 8019738 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8019716:	2903      	cmp	r1, #3
 8019718:	d81c      	bhi.n	8019754 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801971a:	e8df f001 	tbb	[pc, r1]
 801971e:	1d02      	.short	0x1d02
 8019720:	1f08      	.short	0x1f08
 8019722:	4b10      	ldr	r3, [pc, #64]	; (8019764 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019724:	8818      	ldrh	r0, [r3, #0]
 8019726:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801972a:	4240      	negs	r0, r0
 801972c:	4770      	bx	lr
 801972e:	4b0d      	ldr	r3, [pc, #52]	; (8019764 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019730:	8818      	ldrh	r0, [r3, #0]
 8019732:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019736:	4770      	bx	lr
 8019738:	2903      	cmp	r1, #3
 801973a:	d80b      	bhi.n	8019754 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801973c:	a301      	add	r3, pc, #4	; (adr r3, 8019744 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801973e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019742:	bf00      	nop
 8019744:	08019759 	.word	0x08019759
 8019748:	0801972f 	.word	0x0801972f
 801974c:	0801975d 	.word	0x0801975d
 8019750:	08019723 	.word	0x08019723
 8019754:	2000      	movs	r0, #0
 8019756:	4770      	bx	lr
 8019758:	2001      	movs	r0, #1
 801975a:	4770      	bx	lr
 801975c:	f04f 30ff 	mov.w	r0, #4294967295
 8019760:	4770      	bx	lr
 8019762:	bf00      	nop
 8019764:	24001e76 	.word	0x24001e76

08019768 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8019768:	b180      	cbz	r0, 801978c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801976a:	2903      	cmp	r1, #3
 801976c:	d81c      	bhi.n	80197a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801976e:	e8df f001 	tbb	[pc, r1]
 8019772:	021d      	.short	0x021d
 8019774:	071f      	.short	0x071f
 8019776:	4b10      	ldr	r3, [pc, #64]	; (80197b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019778:	8818      	ldrh	r0, [r3, #0]
 801977a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801977e:	4770      	bx	lr
 8019780:	4b0d      	ldr	r3, [pc, #52]	; (80197b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019782:	8818      	ldrh	r0, [r3, #0]
 8019784:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019788:	4240      	negs	r0, r0
 801978a:	4770      	bx	lr
 801978c:	2903      	cmp	r1, #3
 801978e:	d80b      	bhi.n	80197a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8019790:	a301      	add	r3, pc, #4	; (adr r3, 8019798 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8019792:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019796:	bf00      	nop
 8019798:	08019777 	.word	0x08019777
 801979c:	080197b1 	.word	0x080197b1
 80197a0:	08019781 	.word	0x08019781
 80197a4:	080197ad 	.word	0x080197ad
 80197a8:	2000      	movs	r0, #0
 80197aa:	4770      	bx	lr
 80197ac:	2001      	movs	r0, #1
 80197ae:	4770      	bx	lr
 80197b0:	f04f 30ff 	mov.w	r0, #4294967295
 80197b4:	4770      	bx	lr
 80197b6:	bf00      	nop
 80197b8:	24001e76 	.word	0x24001e76

080197bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80197bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197c0:	b099      	sub	sp, #100	; 0x64
 80197c2:	910b      	str	r1, [sp, #44]	; 0x2c
 80197c4:	a914      	add	r1, sp, #80	; 0x50
 80197c6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80197ca:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80197ce:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80197d2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80197d6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80197da:	e881 000c 	stmia.w	r1, {r2, r3}
 80197de:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80197e2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80197e6:	9309      	str	r3, [sp, #36]	; 0x24
 80197e8:	f891 900d 	ldrb.w	r9, [r1, #13]
 80197ec:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80197f0:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80197f4:	9310      	str	r3, [sp, #64]	; 0x40
 80197f6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80197fa:	930c      	str	r3, [sp, #48]	; 0x30
 80197fc:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8019800:	798f      	ldrb	r7, [r1, #6]
 8019802:	431f      	orrs	r7, r3
 8019804:	f000 8195 	beq.w	8019b32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019808:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801980c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8019810:	f891 9007 	ldrb.w	r9, [r1, #7]
 8019814:	ea59 0903 	orrs.w	r9, r9, r3
 8019818:	f000 818b 	beq.w	8019b32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801981c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8019820:	b29b      	uxth	r3, r3
 8019822:	2d00      	cmp	r5, #0
 8019824:	f000 812e 	beq.w	8019a84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8019828:	1aed      	subs	r5, r5, r3
 801982a:	b2ad      	uxth	r5, r5
 801982c:	042b      	lsls	r3, r5, #16
 801982e:	d502      	bpl.n	8019836 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8019830:	1b64      	subs	r4, r4, r5
 8019832:	2500      	movs	r5, #0
 8019834:	b224      	sxth	r4, r4
 8019836:	f9b2 1000 	ldrsh.w	r1, [r2]
 801983a:	a814      	add	r0, sp, #80	; 0x50
 801983c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8019840:	428c      	cmp	r4, r1
 8019842:	b28b      	uxth	r3, r1
 8019844:	bfbf      	itttt	lt
 8019846:	18ed      	addlt	r5, r5, r3
 8019848:	1b2c      	sublt	r4, r5, r4
 801984a:	b2a5      	uxthlt	r5, r4
 801984c:	460c      	movlt	r4, r1
 801984e:	8891      	ldrh	r1, [r2, #4]
 8019850:	440b      	add	r3, r1
 8019852:	4621      	mov	r1, r4
 8019854:	b21b      	sxth	r3, r3
 8019856:	930f      	str	r3, [sp, #60]	; 0x3c
 8019858:	88d3      	ldrh	r3, [r2, #6]
 801985a:	8852      	ldrh	r2, [r2, #2]
 801985c:	4413      	add	r3, r2
 801985e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019860:	b21b      	sxth	r3, r3
 8019862:	930d      	str	r3, [sp, #52]	; 0x34
 8019864:	4bbd      	ldr	r3, [pc, #756]	; (8019b5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8019866:	f893 b000 	ldrb.w	fp, [r3]
 801986a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801986e:	f1dc 0300 	rsbs	r3, ip, #0
 8019872:	eb43 030c 	adc.w	r3, r3, ip
 8019876:	930e      	str	r3, [sp, #56]	; 0x38
 8019878:	4653      	mov	r3, sl
 801987a:	f7f7 fc24 	bl	80110c6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801987e:	4621      	mov	r1, r4
 8019880:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8019884:	4653      	mov	r3, sl
 8019886:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019888:	a814      	add	r0, sp, #80	; 0x50
 801988a:	f7f7 fc39 	bl	8011100 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801988e:	a918      	add	r1, sp, #96	; 0x60
 8019890:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8019894:	a817      	add	r0, sp, #92	; 0x5c
 8019896:	f7f7 fd5f 	bl	8011358 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801989a:	f1ba 0f00 	cmp.w	sl, #0
 801989e:	f040 80f4 	bne.w	8019a8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80198a2:	f1bb 0f01 	cmp.w	fp, #1
 80198a6:	f040 80f8 	bne.w	8019a9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80198aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80198ac:	2b00      	cmp	r3, #0
 80198ae:	f040 8145 	bne.w	8019b3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80198b2:	b2ba      	uxth	r2, r7
 80198b4:	b905      	cbnz	r5, 80198b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80198b6:	b16e      	cbz	r6, 80198d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80198b8:	fb06 5302 	mla	r3, r6, r2, r5
 80198bc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80198be:	4631      	mov	r1, r6
 80198c0:	fb08 f303 	mul.w	r3, r8, r3
 80198c4:	f003 0607 	and.w	r6, r3, #7
 80198c8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80198cc:	9328      	str	r3, [sp, #160]	; 0xa0
 80198ce:	eba9 0301 	sub.w	r3, r9, r1
 80198d2:	930a      	str	r3, [sp, #40]	; 0x28
 80198d4:	4651      	mov	r1, sl
 80198d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80198d8:	f7ff ff1c 	bl	8019714 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80198dc:	4681      	mov	r9, r0
 80198de:	980e      	ldr	r0, [sp, #56]	; 0x38
 80198e0:	f7ff ff42 	bl	8019768 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80198e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80198e6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80198e8:	4683      	mov	fp, r0
 80198ea:	eba3 0a01 	sub.w	sl, r3, r1
 80198ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80198f0:	459a      	cmp	sl, r3
 80198f2:	bfa8      	it	ge
 80198f4:	469a      	movge	sl, r3
 80198f6:	f1ba 0f00 	cmp.w	sl, #0
 80198fa:	f340 811a 	ble.w	8019b32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80198fe:	1b64      	subs	r4, r4, r5
 8019900:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019902:	1b1c      	subs	r4, r3, r4
 8019904:	42bc      	cmp	r4, r7
 8019906:	bfd4      	ite	le
 8019908:	ebc5 0504 	rsble	r5, r5, r4
 801990c:	ebc5 0507 	rsbgt	r5, r5, r7
 8019910:	2d00      	cmp	r5, #0
 8019912:	f340 810e 	ble.w	8019b32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019916:	1b52      	subs	r2, r2, r5
 8019918:	fb08 f302 	mul.w	r3, r8, r2
 801991c:	930f      	str	r3, [sp, #60]	; 0x3c
 801991e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019920:	2b00      	cmp	r3, #0
 8019922:	f040 8116 	bne.w	8019b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8019926:	4b8e      	ldr	r3, [pc, #568]	; (8019b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8019928:	6818      	ldr	r0, [r3, #0]
 801992a:	6803      	ldr	r3, [r0, #0]
 801992c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801992e:	4798      	blx	r3
 8019930:	2301      	movs	r3, #1
 8019932:	4a8c      	ldr	r2, [pc, #560]	; (8019b64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8019934:	fa03 f308 	lsl.w	r3, r3, r8
 8019938:	8811      	ldrh	r1, [r2, #0]
 801993a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801993e:	3b01      	subs	r3, #1
 8019940:	b2db      	uxtb	r3, r3
 8019942:	930e      	str	r3, [sp, #56]	; 0x38
 8019944:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8019948:	fb01 2303 	mla	r3, r1, r3, r2
 801994c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019950:	930a      	str	r3, [sp, #40]	; 0x28
 8019952:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019954:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8019958:	9313      	str	r3, [sp, #76]	; 0x4c
 801995a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801995c:	0a19      	lsrs	r1, r3, #8
 801995e:	b2cb      	uxtb	r3, r1
 8019960:	9312      	str	r3, [sp, #72]	; 0x48
 8019962:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019964:	b2db      	uxtb	r3, r3
 8019966:	9311      	str	r3, [sp, #68]	; 0x44
 8019968:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801996a:	095a      	lsrs	r2, r3, #5
 801996c:	4b7e      	ldr	r3, [pc, #504]	; (8019b68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801996e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019972:	400b      	ands	r3, r1
 8019974:	4313      	orrs	r3, r2
 8019976:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019978:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801997c:	4313      	orrs	r3, r2
 801997e:	b29b      	uxth	r3, r3
 8019980:	9310      	str	r3, [sp, #64]	; 0x40
 8019982:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019984:	781a      	ldrb	r2, [r3, #0]
 8019986:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801998a:	fb05 b919 	mls	r9, r5, r9, fp
 801998e:	4132      	asrs	r2, r6
 8019990:	fb03 fb05 	mul.w	fp, r3, r5
 8019994:	930d      	str	r3, [sp, #52]	; 0x34
 8019996:	b2d2      	uxtb	r2, r2
 8019998:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801999c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80199a0:	f0c0 80f5 	bcc.w	8019b8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80199a4:	46ae      	mov	lr, r5
 80199a6:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80199aa:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80199ae:	f0c0 80dd 	bcc.w	8019b6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80199b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199b4:	4013      	ands	r3, r2
 80199b6:	d055      	beq.n	8019a64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80199b8:	20ff      	movs	r0, #255	; 0xff
 80199ba:	990e      	ldr	r1, [sp, #56]	; 0x38
 80199bc:	fb90 f1f1 	sdiv	r1, r0, r1
 80199c0:	434b      	muls	r3, r1
 80199c2:	2bfe      	cmp	r3, #254	; 0xfe
 80199c4:	dd03      	ble.n	80199ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80199c6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80199c8:	4281      	cmp	r1, r0
 80199ca:	f000 80c4 	beq.w	8019b56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 80199ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 80199d0:	f8bc 4000 	ldrh.w	r4, [ip]
 80199d4:	fb11 f303 	smulbb	r3, r1, r3
 80199d8:	1220      	asrs	r0, r4, #8
 80199da:	b29b      	uxth	r3, r3
 80199dc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80199e0:	1c59      	adds	r1, r3, #1
 80199e2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80199e6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80199ea:	10e1      	asrs	r1, r4, #3
 80199ec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80199f0:	00e4      	lsls	r4, r4, #3
 80199f2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80199f6:	b29f      	uxth	r7, r3
 80199f8:	43db      	mvns	r3, r3
 80199fa:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80199fe:	b2db      	uxtb	r3, r3
 8019a00:	b2e4      	uxtb	r4, r4
 8019a02:	9309      	str	r3, [sp, #36]	; 0x24
 8019a04:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019a06:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019a0a:	fb13 f907 	smulbb	r9, r3, r7
 8019a0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a10:	fb00 9003 	mla	r0, r0, r3, r9
 8019a14:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019a16:	fb13 f907 	smulbb	r9, r3, r7
 8019a1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a1c:	b280      	uxth	r0, r0
 8019a1e:	fb01 9103 	mla	r1, r1, r3, r9
 8019a22:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019a24:	fb13 f707 	smulbb	r7, r3, r7
 8019a28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a2a:	b289      	uxth	r1, r1
 8019a2c:	fb04 7403 	mla	r4, r4, r3, r7
 8019a30:	1c43      	adds	r3, r0, #1
 8019a32:	b2a4      	uxth	r4, r4
 8019a34:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019a38:	f104 0901 	add.w	r9, r4, #1
 8019a3c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019a40:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8019a44:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8019a48:	ea49 0000 	orr.w	r0, r9, r0
 8019a4c:	f101 0901 	add.w	r9, r1, #1
 8019a50:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8019a54:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019a58:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019a5c:	ea40 0009 	orr.w	r0, r0, r9
 8019a60:	f8ac 0000 	strh.w	r0, [ip]
 8019a64:	4446      	add	r6, r8
 8019a66:	b2b6      	uxth	r6, r6
 8019a68:	2e07      	cmp	r6, #7
 8019a6a:	bf89      	itett	hi
 8019a6c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8019a6e:	fa42 f208 	asrls.w	r2, r2, r8
 8019a72:	2600      	movhi	r6, #0
 8019a74:	785a      	ldrbhi	r2, [r3, #1]
 8019a76:	bf8a      	itet	hi
 8019a78:	3301      	addhi	r3, #1
 8019a7a:	b2d2      	uxtbls	r2, r2
 8019a7c:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8019a7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019a80:	449c      	add	ip, r3
 8019a82:	e792      	b.n	80199aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8019a84:	441c      	add	r4, r3
 8019a86:	b224      	sxth	r4, r4
 8019a88:	e6d5      	b.n	8019836 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8019a8a:	f1ba 0f01 	cmp.w	sl, #1
 8019a8e:	f47f af0c 	bne.w	80198aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019a92:	f1bb 0f01 	cmp.w	fp, #1
 8019a96:	f47f af08 	bne.w	80198aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019a9a:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 8019b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 8019a9e:	f8db 0000 	ldr.w	r0, [fp]
 8019aa2:	6803      	ldr	r3, [r0, #0]
 8019aa4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019aa6:	4798      	blx	r3
 8019aa8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8019aac:	465a      	mov	r2, fp
 8019aae:	d006      	beq.n	8019abe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8019ab0:	f1b8 0f04 	cmp.w	r8, #4
 8019ab4:	d140      	bne.n	8019b38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8019ab6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ab8:	3300      	adds	r3, #0
 8019aba:	bf18      	it	ne
 8019abc:	2301      	movne	r3, #1
 8019abe:	0580      	lsls	r0, r0, #22
 8019ac0:	d56e      	bpl.n	8019ba0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8019ac2:	f1b8 0f08 	cmp.w	r8, #8
 8019ac6:	d16b      	bne.n	8019ba0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8019ac8:	2b00      	cmp	r3, #0
 8019aca:	bf0c      	ite	eq
 8019acc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8019ad0:	f44f 7180 	movne.w	r1, #256	; 0x100
 8019ad4:	2d00      	cmp	r5, #0
 8019ad6:	f47f aee8 	bne.w	80198aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019ada:	2e00      	cmp	r6, #0
 8019adc:	f47f aee5 	bne.w	80198aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019ae0:	19e3      	adds	r3, r4, r7
 8019ae2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019ae4:	4283      	cmp	r3, r0
 8019ae6:	f73f aee0 	bgt.w	80198aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019aea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019aec:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019aee:	444b      	add	r3, r9
 8019af0:	4283      	cmp	r3, r0
 8019af2:	f73f aeda 	bgt.w	80198aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019af6:	b2bf      	uxth	r7, r7
 8019af8:	f1b8 0f08 	cmp.w	r8, #8
 8019afc:	6810      	ldr	r0, [r2, #0]
 8019afe:	f04f 0500 	mov.w	r5, #0
 8019b02:	bf18      	it	ne
 8019b04:	3701      	addne	r7, #1
 8019b06:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8019b0a:	6804      	ldr	r4, [r0, #0]
 8019b0c:	bf18      	it	ne
 8019b0e:	f027 0701 	bicne.w	r7, r7, #1
 8019b12:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8019b16:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019b1a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019b1c:	bf18      	it	ne
 8019b1e:	b2bf      	uxthne	r7, r7
 8019b20:	9104      	str	r1, [sp, #16]
 8019b22:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019b24:	e9cd 7900 	strd	r7, r9, [sp]
 8019b28:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8019b2c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019b2e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8019b30:	47a0      	blx	r4
 8019b32:	b019      	add	sp, #100	; 0x64
 8019b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b38:	2300      	movs	r3, #0
 8019b3a:	e7c0      	b.n	8019abe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8019b3c:	2208      	movs	r2, #8
 8019b3e:	fb92 f3f8 	sdiv	r3, r2, r8
 8019b42:	1e5a      	subs	r2, r3, #1
 8019b44:	443a      	add	r2, r7
 8019b46:	fb92 f2f3 	sdiv	r2, r2, r3
 8019b4a:	fb12 f203 	smulbb	r2, r2, r3
 8019b4e:	b292      	uxth	r2, r2
 8019b50:	e6b0      	b.n	80198b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8019b52:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019b54:	e6ec      	b.n	8019930 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8019b56:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019b58:	e782      	b.n	8019a60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8019b5a:	bf00      	nop
 8019b5c:	24001e74 	.word	0x24001e74
 8019b60:	24001e7c 	.word	0x24001e7c
 8019b64:	24001e76 	.word	0x24001e76
 8019b68:	00fff800 	.word	0x00fff800
 8019b6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019b6e:	b153      	cbz	r3, 8019b86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8019b70:	441e      	add	r6, r3
 8019b72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019b74:	b2b6      	uxth	r6, r6
 8019b76:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8019b7a:	f006 0607 	and.w	r6, r6, #7
 8019b7e:	781a      	ldrb	r2, [r3, #0]
 8019b80:	9328      	str	r3, [sp, #160]	; 0xa0
 8019b82:	4132      	asrs	r2, r6
 8019b84:	b2d2      	uxtb	r2, r2
 8019b86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b88:	445b      	add	r3, fp
 8019b8a:	930a      	str	r3, [sp, #40]	; 0x28
 8019b8c:	e706      	b.n	801999c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8019b8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019b90:	2b00      	cmp	r3, #0
 8019b92:	d1ce      	bne.n	8019b32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019b94:	4b05      	ldr	r3, [pc, #20]	; (8019bac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8019b96:	6818      	ldr	r0, [r3, #0]
 8019b98:	6803      	ldr	r3, [r0, #0]
 8019b9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019b9c:	4798      	blx	r3
 8019b9e:	e7c8      	b.n	8019b32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019ba0:	2b00      	cmp	r3, #0
 8019ba2:	f43f ae82 	beq.w	80198aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019ba6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8019baa:	e793      	b.n	8019ad4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019bac:	24001e7c 	.word	0x24001e7c

08019bb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019bb0:	b538      	push	{r3, r4, r5, lr}
 8019bb2:	4c15      	ldr	r4, [pc, #84]	; (8019c08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8019bb4:	4605      	mov	r5, r0
 8019bb6:	7823      	ldrb	r3, [r4, #0]
 8019bb8:	f3bf 8f5b 	dmb	ish
 8019bbc:	07da      	lsls	r2, r3, #31
 8019bbe:	d40b      	bmi.n	8019bd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019bc0:	4620      	mov	r0, r4
 8019bc2:	f007 febe 	bl	8021942 <__cxa_guard_acquire>
 8019bc6:	b138      	cbz	r0, 8019bd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019bc8:	4620      	mov	r0, r4
 8019bca:	f007 fec6 	bl	802195a <__cxa_guard_release>
 8019bce:	4a0f      	ldr	r2, [pc, #60]	; (8019c0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019bd0:	490f      	ldr	r1, [pc, #60]	; (8019c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8019bd2:	4810      	ldr	r0, [pc, #64]	; (8019c14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019bd4:	f007 feae 	bl	8021934 <__aeabi_atexit>
 8019bd8:	4c0f      	ldr	r4, [pc, #60]	; (8019c18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8019bda:	7823      	ldrb	r3, [r4, #0]
 8019bdc:	f3bf 8f5b 	dmb	ish
 8019be0:	07db      	lsls	r3, r3, #31
 8019be2:	d40b      	bmi.n	8019bfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019be4:	4620      	mov	r0, r4
 8019be6:	f007 feac 	bl	8021942 <__cxa_guard_acquire>
 8019bea:	b138      	cbz	r0, 8019bfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019bec:	4620      	mov	r0, r4
 8019bee:	f007 feb4 	bl	802195a <__cxa_guard_release>
 8019bf2:	4a06      	ldr	r2, [pc, #24]	; (8019c0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019bf4:	4909      	ldr	r1, [pc, #36]	; (8019c1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8019bf6:	480a      	ldr	r0, [pc, #40]	; (8019c20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019bf8:	f007 fe9c 	bl	8021934 <__aeabi_atexit>
 8019bfc:	4b05      	ldr	r3, [pc, #20]	; (8019c14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019bfe:	612b      	str	r3, [r5, #16]
 8019c00:	4b07      	ldr	r3, [pc, #28]	; (8019c20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019c02:	616b      	str	r3, [r5, #20]
 8019c04:	bd38      	pop	{r3, r4, r5, pc}
 8019c06:	bf00      	nop
 8019c08:	24001f54 	.word	0x24001f54
 8019c0c:	24000000 	.word	0x24000000
 8019c10:	080169a5 	.word	0x080169a5
 8019c14:	24000064 	.word	0x24000064
 8019c18:	24001f58 	.word	0x24001f58
 8019c1c:	080169a3 	.word	0x080169a3
 8019c20:	24000068 	.word	0x24000068

08019c24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019c24:	b538      	push	{r3, r4, r5, lr}
 8019c26:	4c15      	ldr	r4, [pc, #84]	; (8019c7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019c28:	4605      	mov	r5, r0
 8019c2a:	7823      	ldrb	r3, [r4, #0]
 8019c2c:	f3bf 8f5b 	dmb	ish
 8019c30:	07da      	lsls	r2, r3, #31
 8019c32:	d40b      	bmi.n	8019c4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019c34:	4620      	mov	r0, r4
 8019c36:	f007 fe84 	bl	8021942 <__cxa_guard_acquire>
 8019c3a:	b138      	cbz	r0, 8019c4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019c3c:	4620      	mov	r0, r4
 8019c3e:	f007 fe8c 	bl	802195a <__cxa_guard_release>
 8019c42:	4a0f      	ldr	r2, [pc, #60]	; (8019c80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019c44:	490f      	ldr	r1, [pc, #60]	; (8019c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019c46:	4810      	ldr	r0, [pc, #64]	; (8019c88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019c48:	f007 fe74 	bl	8021934 <__aeabi_atexit>
 8019c4c:	4c0f      	ldr	r4, [pc, #60]	; (8019c8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8019c4e:	7823      	ldrb	r3, [r4, #0]
 8019c50:	f3bf 8f5b 	dmb	ish
 8019c54:	07db      	lsls	r3, r3, #31
 8019c56:	d40b      	bmi.n	8019c70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019c58:	4620      	mov	r0, r4
 8019c5a:	f007 fe72 	bl	8021942 <__cxa_guard_acquire>
 8019c5e:	b138      	cbz	r0, 8019c70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019c60:	4620      	mov	r0, r4
 8019c62:	f007 fe7a 	bl	802195a <__cxa_guard_release>
 8019c66:	4a06      	ldr	r2, [pc, #24]	; (8019c80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019c68:	4909      	ldr	r1, [pc, #36]	; (8019c90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8019c6a:	480a      	ldr	r0, [pc, #40]	; (8019c94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019c6c:	f007 fe62 	bl	8021934 <__aeabi_atexit>
 8019c70:	4b05      	ldr	r3, [pc, #20]	; (8019c88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019c72:	60ab      	str	r3, [r5, #8]
 8019c74:	4b07      	ldr	r3, [pc, #28]	; (8019c94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019c76:	60eb      	str	r3, [r5, #12]
 8019c78:	bd38      	pop	{r3, r4, r5, pc}
 8019c7a:	bf00      	nop
 8019c7c:	24001f2c 	.word	0x24001f2c
 8019c80:	24000000 	.word	0x24000000
 8019c84:	080169a9 	.word	0x080169a9
 8019c88:	2400003c 	.word	0x2400003c
 8019c8c:	24001f30 	.word	0x24001f30
 8019c90:	080169a7 	.word	0x080169a7
 8019c94:	24000040 	.word	0x24000040

08019c98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019c98:	b510      	push	{r4, lr}
 8019c9a:	4604      	mov	r4, r0
 8019c9c:	f7ff ff88 	bl	8019bb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019ca0:	4620      	mov	r0, r4
 8019ca2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019ca6:	f7ff bfbd 	b.w	8019c24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08019cac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8019cac:	b538      	push	{r3, r4, r5, lr}
 8019cae:	4c15      	ldr	r4, [pc, #84]	; (8019d04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019cb0:	4605      	mov	r5, r0
 8019cb2:	7823      	ldrb	r3, [r4, #0]
 8019cb4:	f3bf 8f5b 	dmb	ish
 8019cb8:	07da      	lsls	r2, r3, #31
 8019cba:	d40b      	bmi.n	8019cd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019cbc:	4620      	mov	r0, r4
 8019cbe:	f007 fe40 	bl	8021942 <__cxa_guard_acquire>
 8019cc2:	b138      	cbz	r0, 8019cd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019cc4:	4620      	mov	r0, r4
 8019cc6:	f007 fe48 	bl	802195a <__cxa_guard_release>
 8019cca:	4a0f      	ldr	r2, [pc, #60]	; (8019d08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019ccc:	490f      	ldr	r1, [pc, #60]	; (8019d0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019cce:	4810      	ldr	r0, [pc, #64]	; (8019d10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019cd0:	f007 fe30 	bl	8021934 <__aeabi_atexit>
 8019cd4:	4c0f      	ldr	r4, [pc, #60]	; (8019d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8019cd6:	7823      	ldrb	r3, [r4, #0]
 8019cd8:	f3bf 8f5b 	dmb	ish
 8019cdc:	07db      	lsls	r3, r3, #31
 8019cde:	d40b      	bmi.n	8019cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019ce0:	4620      	mov	r0, r4
 8019ce2:	f007 fe2e 	bl	8021942 <__cxa_guard_acquire>
 8019ce6:	b138      	cbz	r0, 8019cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019ce8:	4620      	mov	r0, r4
 8019cea:	f007 fe36 	bl	802195a <__cxa_guard_release>
 8019cee:	4a06      	ldr	r2, [pc, #24]	; (8019d08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019cf0:	4909      	ldr	r1, [pc, #36]	; (8019d18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8019cf2:	480a      	ldr	r0, [pc, #40]	; (8019d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019cf4:	f007 fe1e 	bl	8021934 <__aeabi_atexit>
 8019cf8:	4b05      	ldr	r3, [pc, #20]	; (8019d10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019cfa:	622b      	str	r3, [r5, #32]
 8019cfc:	4b07      	ldr	r3, [pc, #28]	; (8019d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019cfe:	626b      	str	r3, [r5, #36]	; 0x24
 8019d00:	bd38      	pop	{r3, r4, r5, pc}
 8019d02:	bf00      	nop
 8019d04:	24001f5c 	.word	0x24001f5c
 8019d08:	24000000 	.word	0x24000000
 8019d0c:	0801699d 	.word	0x0801699d
 8019d10:	2400006c 	.word	0x2400006c
 8019d14:	24001f60 	.word	0x24001f60
 8019d18:	0801699b 	.word	0x0801699b
 8019d1c:	24000070 	.word	0x24000070

08019d20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019d20:	b538      	push	{r3, r4, r5, lr}
 8019d22:	4c15      	ldr	r4, [pc, #84]	; (8019d78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019d24:	4605      	mov	r5, r0
 8019d26:	7823      	ldrb	r3, [r4, #0]
 8019d28:	f3bf 8f5b 	dmb	ish
 8019d2c:	07da      	lsls	r2, r3, #31
 8019d2e:	d40b      	bmi.n	8019d48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019d30:	4620      	mov	r0, r4
 8019d32:	f007 fe06 	bl	8021942 <__cxa_guard_acquire>
 8019d36:	b138      	cbz	r0, 8019d48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019d38:	4620      	mov	r0, r4
 8019d3a:	f007 fe0e 	bl	802195a <__cxa_guard_release>
 8019d3e:	4a0f      	ldr	r2, [pc, #60]	; (8019d7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019d40:	490f      	ldr	r1, [pc, #60]	; (8019d80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019d42:	4810      	ldr	r0, [pc, #64]	; (8019d84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019d44:	f007 fdf6 	bl	8021934 <__aeabi_atexit>
 8019d48:	4c0f      	ldr	r4, [pc, #60]	; (8019d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8019d4a:	7823      	ldrb	r3, [r4, #0]
 8019d4c:	f3bf 8f5b 	dmb	ish
 8019d50:	07db      	lsls	r3, r3, #31
 8019d52:	d40b      	bmi.n	8019d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019d54:	4620      	mov	r0, r4
 8019d56:	f007 fdf4 	bl	8021942 <__cxa_guard_acquire>
 8019d5a:	b138      	cbz	r0, 8019d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019d5c:	4620      	mov	r0, r4
 8019d5e:	f007 fdfc 	bl	802195a <__cxa_guard_release>
 8019d62:	4a06      	ldr	r2, [pc, #24]	; (8019d7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019d64:	4909      	ldr	r1, [pc, #36]	; (8019d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019d66:	480a      	ldr	r0, [pc, #40]	; (8019d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019d68:	f007 fde4 	bl	8021934 <__aeabi_atexit>
 8019d6c:	4b05      	ldr	r3, [pc, #20]	; (8019d84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019d6e:	61ab      	str	r3, [r5, #24]
 8019d70:	4b07      	ldr	r3, [pc, #28]	; (8019d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019d72:	61eb      	str	r3, [r5, #28]
 8019d74:	bd38      	pop	{r3, r4, r5, pc}
 8019d76:	bf00      	nop
 8019d78:	24001f34 	.word	0x24001f34
 8019d7c:	24000000 	.word	0x24000000
 8019d80:	080169a1 	.word	0x080169a1
 8019d84:	24000044 	.word	0x24000044
 8019d88:	24001f38 	.word	0x24001f38
 8019d8c:	0801699f 	.word	0x0801699f
 8019d90:	24000048 	.word	0x24000048

08019d94 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019d94:	b510      	push	{r4, lr}
 8019d96:	4604      	mov	r4, r0
 8019d98:	f7ff ff88 	bl	8019cac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019d9c:	4620      	mov	r0, r4
 8019d9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019da2:	f7ff bfbd 	b.w	8019d20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019da8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019da8:	b538      	push	{r3, r4, r5, lr}
 8019daa:	4c15      	ldr	r4, [pc, #84]	; (8019e00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019dac:	4605      	mov	r5, r0
 8019dae:	7823      	ldrb	r3, [r4, #0]
 8019db0:	f3bf 8f5b 	dmb	ish
 8019db4:	07da      	lsls	r2, r3, #31
 8019db6:	d40b      	bmi.n	8019dd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019db8:	4620      	mov	r0, r4
 8019dba:	f007 fdc2 	bl	8021942 <__cxa_guard_acquire>
 8019dbe:	b138      	cbz	r0, 8019dd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019dc0:	4620      	mov	r0, r4
 8019dc2:	f007 fdca 	bl	802195a <__cxa_guard_release>
 8019dc6:	4a0f      	ldr	r2, [pc, #60]	; (8019e04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019dc8:	490f      	ldr	r1, [pc, #60]	; (8019e08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019dca:	4810      	ldr	r0, [pc, #64]	; (8019e0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019dcc:	f007 fdb2 	bl	8021934 <__aeabi_atexit>
 8019dd0:	4c0f      	ldr	r4, [pc, #60]	; (8019e10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8019dd2:	7823      	ldrb	r3, [r4, #0]
 8019dd4:	f3bf 8f5b 	dmb	ish
 8019dd8:	07db      	lsls	r3, r3, #31
 8019dda:	d40b      	bmi.n	8019df4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019ddc:	4620      	mov	r0, r4
 8019dde:	f007 fdb0 	bl	8021942 <__cxa_guard_acquire>
 8019de2:	b138      	cbz	r0, 8019df4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019de4:	4620      	mov	r0, r4
 8019de6:	f007 fdb8 	bl	802195a <__cxa_guard_release>
 8019dea:	4a06      	ldr	r2, [pc, #24]	; (8019e04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019dec:	4909      	ldr	r1, [pc, #36]	; (8019e14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8019dee:	480a      	ldr	r0, [pc, #40]	; (8019e18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019df0:	f007 fda0 	bl	8021934 <__aeabi_atexit>
 8019df4:	4b05      	ldr	r3, [pc, #20]	; (8019e0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019df6:	632b      	str	r3, [r5, #48]	; 0x30
 8019df8:	4b07      	ldr	r3, [pc, #28]	; (8019e18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019dfa:	636b      	str	r3, [r5, #52]	; 0x34
 8019dfc:	bd38      	pop	{r3, r4, r5, pc}
 8019dfe:	bf00      	nop
 8019e00:	24001f6c 	.word	0x24001f6c
 8019e04:	24000000 	.word	0x24000000
 8019e08:	08016995 	.word	0x08016995
 8019e0c:	2400007c 	.word	0x2400007c
 8019e10:	24001f70 	.word	0x24001f70
 8019e14:	08016993 	.word	0x08016993
 8019e18:	24000080 	.word	0x24000080

08019e1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8019e1c:	b538      	push	{r3, r4, r5, lr}
 8019e1e:	4c15      	ldr	r4, [pc, #84]	; (8019e74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019e20:	4605      	mov	r5, r0
 8019e22:	7823      	ldrb	r3, [r4, #0]
 8019e24:	f3bf 8f5b 	dmb	ish
 8019e28:	07da      	lsls	r2, r3, #31
 8019e2a:	d40b      	bmi.n	8019e44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019e2c:	4620      	mov	r0, r4
 8019e2e:	f007 fd88 	bl	8021942 <__cxa_guard_acquire>
 8019e32:	b138      	cbz	r0, 8019e44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019e34:	4620      	mov	r0, r4
 8019e36:	f007 fd90 	bl	802195a <__cxa_guard_release>
 8019e3a:	4a0f      	ldr	r2, [pc, #60]	; (8019e78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019e3c:	490f      	ldr	r1, [pc, #60]	; (8019e7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019e3e:	4810      	ldr	r0, [pc, #64]	; (8019e80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019e40:	f007 fd78 	bl	8021934 <__aeabi_atexit>
 8019e44:	4c0f      	ldr	r4, [pc, #60]	; (8019e84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019e46:	7823      	ldrb	r3, [r4, #0]
 8019e48:	f3bf 8f5b 	dmb	ish
 8019e4c:	07db      	lsls	r3, r3, #31
 8019e4e:	d40b      	bmi.n	8019e68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019e50:	4620      	mov	r0, r4
 8019e52:	f007 fd76 	bl	8021942 <__cxa_guard_acquire>
 8019e56:	b138      	cbz	r0, 8019e68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019e58:	4620      	mov	r0, r4
 8019e5a:	f007 fd7e 	bl	802195a <__cxa_guard_release>
 8019e5e:	4a06      	ldr	r2, [pc, #24]	; (8019e78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019e60:	4909      	ldr	r1, [pc, #36]	; (8019e88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019e62:	480a      	ldr	r0, [pc, #40]	; (8019e8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019e64:	f007 fd66 	bl	8021934 <__aeabi_atexit>
 8019e68:	4b05      	ldr	r3, [pc, #20]	; (8019e80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019e6a:	62ab      	str	r3, [r5, #40]	; 0x28
 8019e6c:	4b07      	ldr	r3, [pc, #28]	; (8019e8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019e6e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8019e70:	bd38      	pop	{r3, r4, r5, pc}
 8019e72:	bf00      	nop
 8019e74:	24001f3c 	.word	0x24001f3c
 8019e78:	24000000 	.word	0x24000000
 8019e7c:	08016999 	.word	0x08016999
 8019e80:	2400004c 	.word	0x2400004c
 8019e84:	24001f40 	.word	0x24001f40
 8019e88:	08016997 	.word	0x08016997
 8019e8c:	24000050 	.word	0x24000050

08019e90 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019e90:	b510      	push	{r4, lr}
 8019e92:	4604      	mov	r4, r0
 8019e94:	f7ff ff88 	bl	8019da8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019e98:	4620      	mov	r0, r4
 8019e9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019e9e:	f7ff bfbd 	b.w	8019e1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019ea4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019ea4:	b538      	push	{r3, r4, r5, lr}
 8019ea6:	4c15      	ldr	r4, [pc, #84]	; (8019efc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019ea8:	4605      	mov	r5, r0
 8019eaa:	7823      	ldrb	r3, [r4, #0]
 8019eac:	f3bf 8f5b 	dmb	ish
 8019eb0:	07da      	lsls	r2, r3, #31
 8019eb2:	d40b      	bmi.n	8019ecc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019eb4:	4620      	mov	r0, r4
 8019eb6:	f007 fd44 	bl	8021942 <__cxa_guard_acquire>
 8019eba:	b138      	cbz	r0, 8019ecc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019ebc:	4620      	mov	r0, r4
 8019ebe:	f007 fd4c 	bl	802195a <__cxa_guard_release>
 8019ec2:	4a0f      	ldr	r2, [pc, #60]	; (8019f00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019ec4:	490f      	ldr	r1, [pc, #60]	; (8019f04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019ec6:	4810      	ldr	r0, [pc, #64]	; (8019f08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019ec8:	f007 fd34 	bl	8021934 <__aeabi_atexit>
 8019ecc:	4c0f      	ldr	r4, [pc, #60]	; (8019f0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8019ece:	7823      	ldrb	r3, [r4, #0]
 8019ed0:	f3bf 8f5b 	dmb	ish
 8019ed4:	07db      	lsls	r3, r3, #31
 8019ed6:	d40b      	bmi.n	8019ef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019ed8:	4620      	mov	r0, r4
 8019eda:	f007 fd32 	bl	8021942 <__cxa_guard_acquire>
 8019ede:	b138      	cbz	r0, 8019ef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019ee0:	4620      	mov	r0, r4
 8019ee2:	f007 fd3a 	bl	802195a <__cxa_guard_release>
 8019ee6:	4a06      	ldr	r2, [pc, #24]	; (8019f00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019ee8:	4909      	ldr	r1, [pc, #36]	; (8019f10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019eea:	480a      	ldr	r0, [pc, #40]	; (8019f14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019eec:	f007 fd22 	bl	8021934 <__aeabi_atexit>
 8019ef0:	4b05      	ldr	r3, [pc, #20]	; (8019f08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019ef2:	652b      	str	r3, [r5, #80]	; 0x50
 8019ef4:	4b07      	ldr	r3, [pc, #28]	; (8019f14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019ef6:	656b      	str	r3, [r5, #84]	; 0x54
 8019ef8:	bd38      	pop	{r3, r4, r5, pc}
 8019efa:	bf00      	nop
 8019efc:	24001f74 	.word	0x24001f74
 8019f00:	24000000 	.word	0x24000000
 8019f04:	08016985 	.word	0x08016985
 8019f08:	24000084 	.word	0x24000084
 8019f0c:	24001f78 	.word	0x24001f78
 8019f10:	08016983 	.word	0x08016983
 8019f14:	24000088 	.word	0x24000088

08019f18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019f18:	b538      	push	{r3, r4, r5, lr}
 8019f1a:	4c15      	ldr	r4, [pc, #84]	; (8019f70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019f1c:	4605      	mov	r5, r0
 8019f1e:	7823      	ldrb	r3, [r4, #0]
 8019f20:	f3bf 8f5b 	dmb	ish
 8019f24:	07da      	lsls	r2, r3, #31
 8019f26:	d40b      	bmi.n	8019f40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019f28:	4620      	mov	r0, r4
 8019f2a:	f007 fd0a 	bl	8021942 <__cxa_guard_acquire>
 8019f2e:	b138      	cbz	r0, 8019f40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019f30:	4620      	mov	r0, r4
 8019f32:	f007 fd12 	bl	802195a <__cxa_guard_release>
 8019f36:	4a0f      	ldr	r2, [pc, #60]	; (8019f74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019f38:	490f      	ldr	r1, [pc, #60]	; (8019f78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8019f3a:	4810      	ldr	r0, [pc, #64]	; (8019f7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019f3c:	f007 fcfa 	bl	8021934 <__aeabi_atexit>
 8019f40:	4c0f      	ldr	r4, [pc, #60]	; (8019f80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019f42:	7823      	ldrb	r3, [r4, #0]
 8019f44:	f3bf 8f5b 	dmb	ish
 8019f48:	07db      	lsls	r3, r3, #31
 8019f4a:	d40b      	bmi.n	8019f64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019f4c:	4620      	mov	r0, r4
 8019f4e:	f007 fcf8 	bl	8021942 <__cxa_guard_acquire>
 8019f52:	b138      	cbz	r0, 8019f64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019f54:	4620      	mov	r0, r4
 8019f56:	f007 fd00 	bl	802195a <__cxa_guard_release>
 8019f5a:	4a06      	ldr	r2, [pc, #24]	; (8019f74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019f5c:	4909      	ldr	r1, [pc, #36]	; (8019f84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019f5e:	480a      	ldr	r0, [pc, #40]	; (8019f88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019f60:	f007 fce8 	bl	8021934 <__aeabi_atexit>
 8019f64:	4b05      	ldr	r3, [pc, #20]	; (8019f7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019f66:	64ab      	str	r3, [r5, #72]	; 0x48
 8019f68:	4b07      	ldr	r3, [pc, #28]	; (8019f88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019f6a:	64eb      	str	r3, [r5, #76]	; 0x4c
 8019f6c:	bd38      	pop	{r3, r4, r5, pc}
 8019f6e:	bf00      	nop
 8019f70:	24001f7c 	.word	0x24001f7c
 8019f74:	24000000 	.word	0x24000000
 8019f78:	08016989 	.word	0x08016989
 8019f7c:	2400008c 	.word	0x2400008c
 8019f80:	24001f80 	.word	0x24001f80
 8019f84:	08016987 	.word	0x08016987
 8019f88:	24000090 	.word	0x24000090

08019f8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019f8c:	b538      	push	{r3, r4, r5, lr}
 8019f8e:	4c15      	ldr	r4, [pc, #84]	; (8019fe4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019f90:	4605      	mov	r5, r0
 8019f92:	7823      	ldrb	r3, [r4, #0]
 8019f94:	f3bf 8f5b 	dmb	ish
 8019f98:	07da      	lsls	r2, r3, #31
 8019f9a:	d40b      	bmi.n	8019fb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019f9c:	4620      	mov	r0, r4
 8019f9e:	f007 fcd0 	bl	8021942 <__cxa_guard_acquire>
 8019fa2:	b138      	cbz	r0, 8019fb4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019fa4:	4620      	mov	r0, r4
 8019fa6:	f007 fcd8 	bl	802195a <__cxa_guard_release>
 8019faa:	4a0f      	ldr	r2, [pc, #60]	; (8019fe8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019fac:	490f      	ldr	r1, [pc, #60]	; (8019fec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019fae:	4810      	ldr	r0, [pc, #64]	; (8019ff0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019fb0:	f007 fcc0 	bl	8021934 <__aeabi_atexit>
 8019fb4:	4c0f      	ldr	r4, [pc, #60]	; (8019ff4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8019fb6:	7823      	ldrb	r3, [r4, #0]
 8019fb8:	f3bf 8f5b 	dmb	ish
 8019fbc:	07db      	lsls	r3, r3, #31
 8019fbe:	d40b      	bmi.n	8019fd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019fc0:	4620      	mov	r0, r4
 8019fc2:	f007 fcbe 	bl	8021942 <__cxa_guard_acquire>
 8019fc6:	b138      	cbz	r0, 8019fd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019fc8:	4620      	mov	r0, r4
 8019fca:	f007 fcc6 	bl	802195a <__cxa_guard_release>
 8019fce:	4a06      	ldr	r2, [pc, #24]	; (8019fe8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019fd0:	4909      	ldr	r1, [pc, #36]	; (8019ff8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019fd2:	480a      	ldr	r0, [pc, #40]	; (8019ffc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019fd4:	f007 fcae 	bl	8021934 <__aeabi_atexit>
 8019fd8:	4b05      	ldr	r3, [pc, #20]	; (8019ff0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019fda:	642b      	str	r3, [r5, #64]	; 0x40
 8019fdc:	4b07      	ldr	r3, [pc, #28]	; (8019ffc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019fde:	646b      	str	r3, [r5, #68]	; 0x44
 8019fe0:	bd38      	pop	{r3, r4, r5, pc}
 8019fe2:	bf00      	nop
 8019fe4:	24001f44 	.word	0x24001f44
 8019fe8:	24000000 	.word	0x24000000
 8019fec:	0801698d 	.word	0x0801698d
 8019ff0:	24000054 	.word	0x24000054
 8019ff4:	24001f48 	.word	0x24001f48
 8019ff8:	0801698b 	.word	0x0801698b
 8019ffc:	24000058 	.word	0x24000058

0801a000 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801a000:	b538      	push	{r3, r4, r5, lr}
 801a002:	4c15      	ldr	r4, [pc, #84]	; (801a058 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801a004:	4605      	mov	r5, r0
 801a006:	7823      	ldrb	r3, [r4, #0]
 801a008:	f3bf 8f5b 	dmb	ish
 801a00c:	07da      	lsls	r2, r3, #31
 801a00e:	d40b      	bmi.n	801a028 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a010:	4620      	mov	r0, r4
 801a012:	f007 fc96 	bl	8021942 <__cxa_guard_acquire>
 801a016:	b138      	cbz	r0, 801a028 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a018:	4620      	mov	r0, r4
 801a01a:	f007 fc9e 	bl	802195a <__cxa_guard_release>
 801a01e:	4a0f      	ldr	r2, [pc, #60]	; (801a05c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a020:	490f      	ldr	r1, [pc, #60]	; (801a060 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801a022:	4810      	ldr	r0, [pc, #64]	; (801a064 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a024:	f007 fc86 	bl	8021934 <__aeabi_atexit>
 801a028:	4c0f      	ldr	r4, [pc, #60]	; (801a068 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801a02a:	7823      	ldrb	r3, [r4, #0]
 801a02c:	f3bf 8f5b 	dmb	ish
 801a030:	07db      	lsls	r3, r3, #31
 801a032:	d40b      	bmi.n	801a04c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a034:	4620      	mov	r0, r4
 801a036:	f007 fc84 	bl	8021942 <__cxa_guard_acquire>
 801a03a:	b138      	cbz	r0, 801a04c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a03c:	4620      	mov	r0, r4
 801a03e:	f007 fc8c 	bl	802195a <__cxa_guard_release>
 801a042:	4a06      	ldr	r2, [pc, #24]	; (801a05c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a044:	4909      	ldr	r1, [pc, #36]	; (801a06c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801a046:	480a      	ldr	r0, [pc, #40]	; (801a070 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a048:	f007 fc74 	bl	8021934 <__aeabi_atexit>
 801a04c:	4b05      	ldr	r3, [pc, #20]	; (801a064 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a04e:	63ab      	str	r3, [r5, #56]	; 0x38
 801a050:	4b07      	ldr	r3, [pc, #28]	; (801a070 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a052:	63eb      	str	r3, [r5, #60]	; 0x3c
 801a054:	bd38      	pop	{r3, r4, r5, pc}
 801a056:	bf00      	nop
 801a058:	24001f64 	.word	0x24001f64
 801a05c:	24000000 	.word	0x24000000
 801a060:	08016991 	.word	0x08016991
 801a064:	24000074 	.word	0x24000074
 801a068:	24001f68 	.word	0x24001f68
 801a06c:	0801698f 	.word	0x0801698f
 801a070:	24000078 	.word	0x24000078

0801a074 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801a074:	b510      	push	{r4, lr}
 801a076:	4604      	mov	r4, r0
 801a078:	f7ff ff14 	bl	8019ea4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801a07c:	4620      	mov	r0, r4
 801a07e:	f7ff ff85 	bl	8019f8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801a082:	4620      	mov	r0, r4
 801a084:	f7ff ff48 	bl	8019f18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801a088:	4620      	mov	r0, r4
 801a08a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a08e:	f7ff bfb7 	b.w	801a000 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801a094 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801a094:	b538      	push	{r3, r4, r5, lr}
 801a096:	4c15      	ldr	r4, [pc, #84]	; (801a0ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801a098:	4605      	mov	r5, r0
 801a09a:	7823      	ldrb	r3, [r4, #0]
 801a09c:	f3bf 8f5b 	dmb	ish
 801a0a0:	07da      	lsls	r2, r3, #31
 801a0a2:	d40b      	bmi.n	801a0bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a0a4:	4620      	mov	r0, r4
 801a0a6:	f007 fc4c 	bl	8021942 <__cxa_guard_acquire>
 801a0aa:	b138      	cbz	r0, 801a0bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a0ac:	4620      	mov	r0, r4
 801a0ae:	f007 fc54 	bl	802195a <__cxa_guard_release>
 801a0b2:	4a0f      	ldr	r2, [pc, #60]	; (801a0f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a0b4:	490f      	ldr	r1, [pc, #60]	; (801a0f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801a0b6:	4810      	ldr	r0, [pc, #64]	; (801a0f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a0b8:	f007 fc3c 	bl	8021934 <__aeabi_atexit>
 801a0bc:	4c0f      	ldr	r4, [pc, #60]	; (801a0fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801a0be:	7823      	ldrb	r3, [r4, #0]
 801a0c0:	f3bf 8f5b 	dmb	ish
 801a0c4:	07db      	lsls	r3, r3, #31
 801a0c6:	d40b      	bmi.n	801a0e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a0c8:	4620      	mov	r0, r4
 801a0ca:	f007 fc3a 	bl	8021942 <__cxa_guard_acquire>
 801a0ce:	b138      	cbz	r0, 801a0e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a0d0:	4620      	mov	r0, r4
 801a0d2:	f007 fc42 	bl	802195a <__cxa_guard_release>
 801a0d6:	4a06      	ldr	r2, [pc, #24]	; (801a0f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a0d8:	4909      	ldr	r1, [pc, #36]	; (801a100 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801a0da:	480a      	ldr	r0, [pc, #40]	; (801a104 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a0dc:	f007 fc2a 	bl	8021934 <__aeabi_atexit>
 801a0e0:	4b05      	ldr	r3, [pc, #20]	; (801a0f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a0e2:	662b      	str	r3, [r5, #96]	; 0x60
 801a0e4:	4b07      	ldr	r3, [pc, #28]	; (801a104 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a0e6:	666b      	str	r3, [r5, #100]	; 0x64
 801a0e8:	bd38      	pop	{r3, r4, r5, pc}
 801a0ea:	bf00      	nop
 801a0ec:	24001f4c 	.word	0x24001f4c
 801a0f0:	24000000 	.word	0x24000000
 801a0f4:	0801697d 	.word	0x0801697d
 801a0f8:	2400005c 	.word	0x2400005c
 801a0fc:	24001f50 	.word	0x24001f50
 801a100:	0801697b 	.word	0x0801697b
 801a104:	24000060 	.word	0x24000060

0801a108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801a108:	b538      	push	{r3, r4, r5, lr}
 801a10a:	4c15      	ldr	r4, [pc, #84]	; (801a160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801a10c:	4605      	mov	r5, r0
 801a10e:	7823      	ldrb	r3, [r4, #0]
 801a110:	f3bf 8f5b 	dmb	ish
 801a114:	07da      	lsls	r2, r3, #31
 801a116:	d40b      	bmi.n	801a130 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a118:	4620      	mov	r0, r4
 801a11a:	f007 fc12 	bl	8021942 <__cxa_guard_acquire>
 801a11e:	b138      	cbz	r0, 801a130 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a120:	4620      	mov	r0, r4
 801a122:	f007 fc1a 	bl	802195a <__cxa_guard_release>
 801a126:	4a0f      	ldr	r2, [pc, #60]	; (801a164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a128:	490f      	ldr	r1, [pc, #60]	; (801a168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801a12a:	4810      	ldr	r0, [pc, #64]	; (801a16c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a12c:	f007 fc02 	bl	8021934 <__aeabi_atexit>
 801a130:	4c0f      	ldr	r4, [pc, #60]	; (801a170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801a132:	7823      	ldrb	r3, [r4, #0]
 801a134:	f3bf 8f5b 	dmb	ish
 801a138:	07db      	lsls	r3, r3, #31
 801a13a:	d40b      	bmi.n	801a154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a13c:	4620      	mov	r0, r4
 801a13e:	f007 fc00 	bl	8021942 <__cxa_guard_acquire>
 801a142:	b138      	cbz	r0, 801a154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a144:	4620      	mov	r0, r4
 801a146:	f007 fc08 	bl	802195a <__cxa_guard_release>
 801a14a:	4a06      	ldr	r2, [pc, #24]	; (801a164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a14c:	4909      	ldr	r1, [pc, #36]	; (801a174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801a14e:	480a      	ldr	r0, [pc, #40]	; (801a178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a150:	f007 fbf0 	bl	8021934 <__aeabi_atexit>
 801a154:	4b05      	ldr	r3, [pc, #20]	; (801a16c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a156:	65ab      	str	r3, [r5, #88]	; 0x58
 801a158:	4b07      	ldr	r3, [pc, #28]	; (801a178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a15a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801a15c:	bd38      	pop	{r3, r4, r5, pc}
 801a15e:	bf00      	nop
 801a160:	24001f24 	.word	0x24001f24
 801a164:	24000000 	.word	0x24000000
 801a168:	08016981 	.word	0x08016981
 801a16c:	24000034 	.word	0x24000034
 801a170:	24001f28 	.word	0x24001f28
 801a174:	0801697f 	.word	0x0801697f
 801a178:	24000038 	.word	0x24000038

0801a17c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801a17c:	b510      	push	{r4, lr}
 801a17e:	4604      	mov	r4, r0
 801a180:	f7ff ff88 	bl	801a094 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801a184:	4620      	mov	r0, r4
 801a186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a18a:	f7ff bfbd 	b.w	801a108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801a190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801a190:	b538      	push	{r3, r4, r5, lr}
 801a192:	4c15      	ldr	r4, [pc, #84]	; (801a1e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801a194:	4605      	mov	r5, r0
 801a196:	7823      	ldrb	r3, [r4, #0]
 801a198:	f3bf 8f5b 	dmb	ish
 801a19c:	07da      	lsls	r2, r3, #31
 801a19e:	d40b      	bmi.n	801a1b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a1a0:	4620      	mov	r0, r4
 801a1a2:	f007 fbce 	bl	8021942 <__cxa_guard_acquire>
 801a1a6:	b138      	cbz	r0, 801a1b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a1a8:	4620      	mov	r0, r4
 801a1aa:	f007 fbd6 	bl	802195a <__cxa_guard_release>
 801a1ae:	4a0f      	ldr	r2, [pc, #60]	; (801a1ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a1b0:	490f      	ldr	r1, [pc, #60]	; (801a1f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801a1b2:	4810      	ldr	r0, [pc, #64]	; (801a1f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a1b4:	f007 fbbe 	bl	8021934 <__aeabi_atexit>
 801a1b8:	4c0f      	ldr	r4, [pc, #60]	; (801a1f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801a1ba:	7823      	ldrb	r3, [r4, #0]
 801a1bc:	f3bf 8f5b 	dmb	ish
 801a1c0:	07db      	lsls	r3, r3, #31
 801a1c2:	d40b      	bmi.n	801a1dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a1c4:	4620      	mov	r0, r4
 801a1c6:	f007 fbbc 	bl	8021942 <__cxa_guard_acquire>
 801a1ca:	b138      	cbz	r0, 801a1dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a1cc:	4620      	mov	r0, r4
 801a1ce:	f007 fbc4 	bl	802195a <__cxa_guard_release>
 801a1d2:	4a06      	ldr	r2, [pc, #24]	; (801a1ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a1d4:	4909      	ldr	r1, [pc, #36]	; (801a1fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801a1d6:	480a      	ldr	r0, [pc, #40]	; (801a200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a1d8:	f007 fbac 	bl	8021934 <__aeabi_atexit>
 801a1dc:	4b05      	ldr	r3, [pc, #20]	; (801a1f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a1de:	672b      	str	r3, [r5, #112]	; 0x70
 801a1e0:	4b07      	ldr	r3, [pc, #28]	; (801a200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a1e2:	676b      	str	r3, [r5, #116]	; 0x74
 801a1e4:	bd38      	pop	{r3, r4, r5, pc}
 801a1e6:	bf00      	nop
 801a1e8:	24001f1c 	.word	0x24001f1c
 801a1ec:	24000000 	.word	0x24000000
 801a1f0:	08016975 	.word	0x08016975
 801a1f4:	2400002c 	.word	0x2400002c
 801a1f8:	24001f20 	.word	0x24001f20
 801a1fc:	08016973 	.word	0x08016973
 801a200:	24000030 	.word	0x24000030

0801a204 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801a204:	b538      	push	{r3, r4, r5, lr}
 801a206:	4c15      	ldr	r4, [pc, #84]	; (801a25c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801a208:	4605      	mov	r5, r0
 801a20a:	7823      	ldrb	r3, [r4, #0]
 801a20c:	f3bf 8f5b 	dmb	ish
 801a210:	07da      	lsls	r2, r3, #31
 801a212:	d40b      	bmi.n	801a22c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801a214:	4620      	mov	r0, r4
 801a216:	f007 fb94 	bl	8021942 <__cxa_guard_acquire>
 801a21a:	b138      	cbz	r0, 801a22c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801a21c:	4620      	mov	r0, r4
 801a21e:	f007 fb9c 	bl	802195a <__cxa_guard_release>
 801a222:	4a0f      	ldr	r2, [pc, #60]	; (801a260 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a224:	490f      	ldr	r1, [pc, #60]	; (801a264 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801a226:	4810      	ldr	r0, [pc, #64]	; (801a268 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a228:	f007 fb84 	bl	8021934 <__aeabi_atexit>
 801a22c:	4c0f      	ldr	r4, [pc, #60]	; (801a26c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801a22e:	7823      	ldrb	r3, [r4, #0]
 801a230:	f3bf 8f5b 	dmb	ish
 801a234:	07db      	lsls	r3, r3, #31
 801a236:	d40b      	bmi.n	801a250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801a238:	4620      	mov	r0, r4
 801a23a:	f007 fb82 	bl	8021942 <__cxa_guard_acquire>
 801a23e:	b138      	cbz	r0, 801a250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801a240:	4620      	mov	r0, r4
 801a242:	f007 fb8a 	bl	802195a <__cxa_guard_release>
 801a246:	4a06      	ldr	r2, [pc, #24]	; (801a260 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a248:	4909      	ldr	r1, [pc, #36]	; (801a270 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801a24a:	480a      	ldr	r0, [pc, #40]	; (801a274 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801a24c:	f007 fb72 	bl	8021934 <__aeabi_atexit>
 801a250:	4b05      	ldr	r3, [pc, #20]	; (801a268 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a252:	66ab      	str	r3, [r5, #104]	; 0x68
 801a254:	4b07      	ldr	r3, [pc, #28]	; (801a274 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801a256:	66eb      	str	r3, [r5, #108]	; 0x6c
 801a258:	bd38      	pop	{r3, r4, r5, pc}
 801a25a:	bf00      	nop
 801a25c:	24001f14 	.word	0x24001f14
 801a260:	24000000 	.word	0x24000000
 801a264:	08016979 	.word	0x08016979
 801a268:	24000024 	.word	0x24000024
 801a26c:	24001f18 	.word	0x24001f18
 801a270:	08016977 	.word	0x08016977
 801a274:	24000028 	.word	0x24000028

0801a278 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801a278:	b510      	push	{r4, lr}
 801a27a:	4604      	mov	r4, r0
 801a27c:	f7ff ff88 	bl	801a190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801a280:	4620      	mov	r0, r4
 801a282:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a286:	f7ff bfbd 	b.w	801a204 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801a28a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801a28a:	b510      	push	{r4, lr}
 801a28c:	4604      	mov	r4, r0
 801a28e:	f7ff fff3 	bl	801a278 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801a292:	4620      	mov	r0, r4
 801a294:	f7ff ff72 	bl	801a17c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801a298:	4620      	mov	r0, r4
 801a29a:	f7ff fdf9 	bl	8019e90 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801a29e:	4620      	mov	r0, r4
 801a2a0:	f7ff fcfa 	bl	8019c98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801a2a4:	4620      	mov	r0, r4
 801a2a6:	f7ff fd75 	bl	8019d94 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801a2aa:	4620      	mov	r0, r4
 801a2ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a2b0:	f7ff bee0 	b.w	801a074 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801a2b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801a2b4:	b538      	push	{r3, r4, r5, lr}
 801a2b6:	4c0b      	ldr	r4, [pc, #44]	; (801a2e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801a2b8:	4605      	mov	r5, r0
 801a2ba:	7823      	ldrb	r3, [r4, #0]
 801a2bc:	f3bf 8f5b 	dmb	ish
 801a2c0:	07db      	lsls	r3, r3, #31
 801a2c2:	d40b      	bmi.n	801a2dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801a2c4:	4620      	mov	r0, r4
 801a2c6:	f007 fb3c 	bl	8021942 <__cxa_guard_acquire>
 801a2ca:	b138      	cbz	r0, 801a2dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801a2cc:	4620      	mov	r0, r4
 801a2ce:	f007 fb44 	bl	802195a <__cxa_guard_release>
 801a2d2:	4a05      	ldr	r2, [pc, #20]	; (801a2e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801a2d4:	4905      	ldr	r1, [pc, #20]	; (801a2ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801a2d6:	4806      	ldr	r0, [pc, #24]	; (801a2f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801a2d8:	f007 fb2c 	bl	8021934 <__aeabi_atexit>
 801a2dc:	4b04      	ldr	r3, [pc, #16]	; (801a2f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801a2de:	67ab      	str	r3, [r5, #120]	; 0x78
 801a2e0:	bd38      	pop	{r3, r4, r5, pc}
 801a2e2:	bf00      	nop
 801a2e4:	24001f08 	.word	0x24001f08
 801a2e8:	24000000 	.word	0x24000000
 801a2ec:	08016971 	.word	0x08016971
 801a2f0:	2400001c 	.word	0x2400001c

0801a2f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801a2f4:	b538      	push	{r3, r4, r5, lr}
 801a2f6:	4c0b      	ldr	r4, [pc, #44]	; (801a324 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801a2f8:	4605      	mov	r5, r0
 801a2fa:	7823      	ldrb	r3, [r4, #0]
 801a2fc:	f3bf 8f5b 	dmb	ish
 801a300:	07db      	lsls	r3, r3, #31
 801a302:	d40b      	bmi.n	801a31c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801a304:	4620      	mov	r0, r4
 801a306:	f007 fb1c 	bl	8021942 <__cxa_guard_acquire>
 801a30a:	b138      	cbz	r0, 801a31c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801a30c:	4620      	mov	r0, r4
 801a30e:	f007 fb24 	bl	802195a <__cxa_guard_release>
 801a312:	4a05      	ldr	r2, [pc, #20]	; (801a328 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801a314:	4905      	ldr	r1, [pc, #20]	; (801a32c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801a316:	4806      	ldr	r0, [pc, #24]	; (801a330 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a318:	f007 fb0c 	bl	8021934 <__aeabi_atexit>
 801a31c:	4b04      	ldr	r3, [pc, #16]	; (801a330 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a31e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801a320:	bd38      	pop	{r3, r4, r5, pc}
 801a322:	bf00      	nop
 801a324:	24001f0c 	.word	0x24001f0c
 801a328:	24000000 	.word	0x24000000
 801a32c:	0801696f 	.word	0x0801696f
 801a330:	24000020 	.word	0x24000020

0801a334 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801a334:	b570      	push	{r4, r5, r6, lr}
 801a336:	4d0d      	ldr	r5, [pc, #52]	; (801a36c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801a338:	4606      	mov	r6, r0
 801a33a:	4c0d      	ldr	r4, [pc, #52]	; (801a370 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801a33c:	782b      	ldrb	r3, [r5, #0]
 801a33e:	f3bf 8f5b 	dmb	ish
 801a342:	f013 0f01 	tst.w	r3, #1
 801a346:	d10d      	bne.n	801a364 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801a348:	4628      	mov	r0, r5
 801a34a:	f007 fafa 	bl	8021942 <__cxa_guard_acquire>
 801a34e:	b148      	cbz	r0, 801a364 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801a350:	4b08      	ldr	r3, [pc, #32]	; (801a374 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801a352:	4628      	mov	r0, r5
 801a354:	6023      	str	r3, [r4, #0]
 801a356:	f007 fb00 	bl	802195a <__cxa_guard_release>
 801a35a:	4a07      	ldr	r2, [pc, #28]	; (801a378 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801a35c:	4620      	mov	r0, r4
 801a35e:	4907      	ldr	r1, [pc, #28]	; (801a37c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801a360:	f007 fae8 	bl	8021934 <__aeabi_atexit>
 801a364:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801a368:	bd70      	pop	{r4, r5, r6, pc}
 801a36a:	bf00      	nop
 801a36c:	24001f10 	.word	0x24001f10
 801a370:	24001f84 	.word	0x24001f84
 801a374:	08024640 	.word	0x08024640
 801a378:	24000000 	.word	0x24000000
 801a37c:	0801696d 	.word	0x0801696d

0801a380 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801a380:	b510      	push	{r4, lr}
 801a382:	4604      	mov	r4, r0
 801a384:	f7ff ff96 	bl	801a2b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801a388:	4620      	mov	r0, r4
 801a38a:	f7ff ffb3 	bl	801a2f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801a38e:	4620      	mov	r0, r4
 801a390:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a394:	f7ff bfce 	b.w	801a334 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801a398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801a398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a39c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801a3a0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801a3a4:	2d00      	cmp	r5, #0
 801a3a6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801a3aa:	fb05 4c0e 	mla	ip, r5, lr, r4
 801a3ae:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801a3b2:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801a3b6:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801a3ba:	eb02 0a0c 	add.w	sl, r2, ip
 801a3be:	8808      	ldrh	r0, [r1, #0]
 801a3c0:	f2c0 80b0 	blt.w	801a524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a3c4:	45ab      	cmp	fp, r5
 801a3c6:	f340 80ad 	ble.w	801a524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a3ca:	2c00      	cmp	r4, #0
 801a3cc:	f2c0 80a8 	blt.w	801a520 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a3d0:	45a6      	cmp	lr, r4
 801a3d2:	f340 80a5 	ble.w	801a520 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a3d6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801a3da:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801a3de:	1c62      	adds	r2, r4, #1
 801a3e0:	f100 80a3 	bmi.w	801a52a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a3e4:	4596      	cmp	lr, r2
 801a3e6:	f340 80a0 	ble.w	801a52a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a3ea:	f1b9 0f00 	cmp.w	r9, #0
 801a3ee:	f000 809c 	beq.w	801a52a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a3f2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a3f6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a3fa:	3501      	adds	r5, #1
 801a3fc:	f100 8099 	bmi.w	801a532 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a400:	45ab      	cmp	fp, r5
 801a402:	f340 8096 	ble.w	801a532 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a406:	2f00      	cmp	r7, #0
 801a408:	f000 8093 	beq.w	801a532 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a40c:	2c00      	cmp	r4, #0
 801a40e:	f2c0 808e 	blt.w	801a52e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a412:	45a6      	cmp	lr, r4
 801a414:	f340 808b 	ble.w	801a52e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a418:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801a41c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801a420:	3401      	adds	r4, #1
 801a422:	f100 8089 	bmi.w	801a538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a426:	45a6      	cmp	lr, r4
 801a428:	f340 8086 	ble.w	801a538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a42c:	f1b9 0f00 	cmp.w	r9, #0
 801a430:	f000 8082 	beq.w	801a538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a434:	44d6      	add	lr, sl
 801a436:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a43a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801a43e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a442:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801a446:	fb19 fe07 	smulbb	lr, r9, r7
 801a44a:	f1c7 0210 	rsb	r2, r7, #16
 801a44e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a452:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a456:	eba2 0209 	sub.w	r2, r2, r9
 801a45a:	ea44 0808 	orr.w	r8, r4, r8
 801a45e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a462:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a466:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a46a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a46e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a472:	ea44 0c0c 	orr.w	ip, r4, ip
 801a476:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a47a:	fb04 f40c 	mul.w	r4, r4, ip
 801a47e:	fb02 4808 	mla	r8, r2, r8, r4
 801a482:	041a      	lsls	r2, r3, #16
 801a484:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a488:	b2b4      	uxth	r4, r6
 801a48a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a48e:	43f6      	mvns	r6, r6
 801a490:	4313      	orrs	r3, r2
 801a492:	042a      	lsls	r2, r5, #16
 801a494:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a498:	b2f6      	uxtb	r6, r6
 801a49a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a49e:	fb0e 8303 	mla	r3, lr, r3, r8
 801a4a2:	432a      	orrs	r2, r5
 801a4a4:	fb07 3202 	mla	r2, r7, r2, r3
 801a4a8:	10c7      	asrs	r7, r0, #3
 801a4aa:	0d53      	lsrs	r3, r2, #21
 801a4ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a4b0:	0952      	lsrs	r2, r2, #5
 801a4b2:	fb17 f706 	smulbb	r7, r7, r6
 801a4b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a4ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a4be:	431a      	orrs	r2, r3
 801a4c0:	b293      	uxth	r3, r2
 801a4c2:	1202      	asrs	r2, r0, #8
 801a4c4:	121d      	asrs	r5, r3, #8
 801a4c6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a4ca:	00c0      	lsls	r0, r0, #3
 801a4cc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a4d0:	fb12 f206 	smulbb	r2, r2, r6
 801a4d4:	b2c0      	uxtb	r0, r0
 801a4d6:	fb05 2504 	mla	r5, r5, r4, r2
 801a4da:	10da      	asrs	r2, r3, #3
 801a4dc:	fb10 f006 	smulbb	r0, r0, r6
 801a4e0:	00db      	lsls	r3, r3, #3
 801a4e2:	b2ad      	uxth	r5, r5
 801a4e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a4e8:	b2db      	uxtb	r3, r3
 801a4ea:	fb02 7204 	mla	r2, r2, r4, r7
 801a4ee:	fb03 0004 	mla	r0, r3, r4, r0
 801a4f2:	1c6b      	adds	r3, r5, #1
 801a4f4:	b292      	uxth	r2, r2
 801a4f6:	b280      	uxth	r0, r0
 801a4f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a4fc:	1c43      	adds	r3, r0, #1
 801a4fe:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a502:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a506:	1c50      	adds	r0, r2, #1
 801a508:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a50c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a510:	0952      	lsrs	r2, r2, #5
 801a512:	432b      	orrs	r3, r5
 801a514:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a518:	4313      	orrs	r3, r2
 801a51a:	800b      	strh	r3, [r1, #0]
 801a51c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a520:	4680      	mov	r8, r0
 801a522:	e75c      	b.n	801a3de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801a524:	4684      	mov	ip, r0
 801a526:	4680      	mov	r8, r0
 801a528:	e767      	b.n	801a3fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a52a:	4684      	mov	ip, r0
 801a52c:	e765      	b.n	801a3fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a52e:	4605      	mov	r5, r0
 801a530:	e776      	b.n	801a420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801a532:	4603      	mov	r3, r0
 801a534:	4605      	mov	r5, r0
 801a536:	e782      	b.n	801a43e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801a538:	4603      	mov	r3, r0
 801a53a:	e780      	b.n	801a43e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801a53c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a53c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a540:	b099      	sub	sp, #100	; 0x64
 801a542:	9215      	str	r2, [sp, #84]	; 0x54
 801a544:	9309      	str	r3, [sp, #36]	; 0x24
 801a546:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801a548:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801a54c:	9016      	str	r0, [sp, #88]	; 0x58
 801a54e:	930d      	str	r3, [sp, #52]	; 0x34
 801a550:	6850      	ldr	r0, [r2, #4]
 801a552:	910c      	str	r1, [sp, #48]	; 0x30
 801a554:	6812      	ldr	r2, [r2, #0]
 801a556:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801a55a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801a55e:	fb00 1303 	mla	r3, r0, r3, r1
 801a562:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801a566:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a568:	681b      	ldr	r3, [r3, #0]
 801a56a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a56c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a56e:	685e      	ldr	r6, [r3, #4]
 801a570:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a572:	3604      	adds	r6, #4
 801a574:	43db      	mvns	r3, r3
 801a576:	b2db      	uxtb	r3, r3
 801a578:	930a      	str	r3, [sp, #40]	; 0x28
 801a57a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a57c:	2b00      	cmp	r3, #0
 801a57e:	dc03      	bgt.n	801a588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a580:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801a582:	2b00      	cmp	r3, #0
 801a584:	f340 8225 	ble.w	801a9d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a588:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a58a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a58e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a592:	1e48      	subs	r0, r1, #1
 801a594:	1e57      	subs	r7, r2, #1
 801a596:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a598:	2b00      	cmp	r3, #0
 801a59a:	f340 80e3 	ble.w	801a764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a59e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801a5a2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a5a6:	d406      	bmi.n	801a5b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a5a8:	4584      	cmp	ip, r0
 801a5aa:	da04      	bge.n	801a5b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a5ac:	2b00      	cmp	r3, #0
 801a5ae:	db02      	blt.n	801a5b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a5b0:	42bb      	cmp	r3, r7
 801a5b2:	f2c0 80d8 	blt.w	801a766 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a5b6:	f11c 0c01 	adds.w	ip, ip, #1
 801a5ba:	f100 80c9 	bmi.w	801a750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a5be:	4561      	cmp	r1, ip
 801a5c0:	f2c0 80c6 	blt.w	801a750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a5c4:	3301      	adds	r3, #1
 801a5c6:	f100 80c3 	bmi.w	801a750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a5ca:	429a      	cmp	r2, r3
 801a5cc:	f2c0 80c0 	blt.w	801a750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a5d0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a5d4:	4647      	mov	r7, r8
 801a5d6:	f1bb 0f00 	cmp.w	fp, #0
 801a5da:	f340 80e3 	ble.w	801a7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801a5de:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801a5e0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a5e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a5e6:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801a5ea:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a5ee:	ea5f 422a 	movs.w	r2, sl, asr #16
 801a5f2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a5f6:	689b      	ldr	r3, [r3, #8]
 801a5f8:	f100 8121 	bmi.w	801a83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a5fc:	f103 39ff 	add.w	r9, r3, #4294967295
 801a600:	454a      	cmp	r2, r9
 801a602:	f280 811c 	bge.w	801a83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a606:	f1bc 0f00 	cmp.w	ip, #0
 801a60a:	f2c0 8118 	blt.w	801a83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a60e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801a612:	45cc      	cmp	ip, r9
 801a614:	f280 8113 	bge.w	801a83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a618:	b21b      	sxth	r3, r3
 801a61a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a61c:	fb0c 2203 	mla	r2, ip, r3, r2
 801a620:	eb04 0902 	add.w	r9, r4, r2
 801a624:	5ca2      	ldrb	r2, [r4, r2]
 801a626:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801a62a:	2800      	cmp	r0, #0
 801a62c:	f000 80fe 	beq.w	801a82c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a630:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a634:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801a638:	9211      	str	r2, [sp, #68]	; 0x44
 801a63a:	b151      	cbz	r1, 801a652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a63c:	eb09 0203 	add.w	r2, r9, r3
 801a640:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a644:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a648:	930f      	str	r3, [sp, #60]	; 0x3c
 801a64a:	7853      	ldrb	r3, [r2, #1]
 801a64c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a650:	9312      	str	r3, [sp, #72]	; 0x48
 801a652:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a654:	fb10 f201 	smulbb	r2, r0, r1
 801a658:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a65a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a65e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a662:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801a666:	10d2      	asrs	r2, r2, #3
 801a668:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a66c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801a670:	ea4c 0c03 	orr.w	ip, ip, r3
 801a674:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a676:	041b      	lsls	r3, r3, #16
 801a678:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a67c:	4323      	orrs	r3, r4
 801a67e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a680:	4353      	muls	r3, r2
 801a682:	fb09 330c 	mla	r3, r9, ip, r3
 801a686:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a68a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a68e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a692:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a696:	f1c1 0c10 	rsb	ip, r1, #16
 801a69a:	ebac 0c00 	sub.w	ip, ip, r0
 801a69e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a6a2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a6a6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a6aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a6ac:	0418      	lsls	r0, r3, #16
 801a6ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a6b2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a6b6:	4318      	orrs	r0, r3
 801a6b8:	fb02 c200 	mla	r2, r2, r0, ip
 801a6bc:	8838      	ldrh	r0, [r7, #0]
 801a6be:	0d53      	lsrs	r3, r2, #21
 801a6c0:	0952      	lsrs	r2, r2, #5
 801a6c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a6c6:	1201      	asrs	r1, r0, #8
 801a6c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a6cc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a6d0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a6d4:	00c0      	lsls	r0, r0, #3
 801a6d6:	431a      	orrs	r2, r3
 801a6d8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801a6dc:	fb11 f104 	smulbb	r1, r1, r4
 801a6e0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a6e4:	b292      	uxth	r2, r2
 801a6e6:	fb1e fe04 	smulbb	lr, lr, r4
 801a6ea:	b2c0      	uxtb	r0, r0
 801a6ec:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a6f0:	fb10 f004 	smulbb	r0, r0, r4
 801a6f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a6f8:	fb0c 1c03 	mla	ip, ip, r3, r1
 801a6fc:	10d1      	asrs	r1, r2, #3
 801a6fe:	00d2      	lsls	r2, r2, #3
 801a700:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a704:	fa1f fc8c 	uxth.w	ip, ip
 801a708:	b2d2      	uxtb	r2, r2
 801a70a:	fb01 e103 	mla	r1, r1, r3, lr
 801a70e:	fb02 0303 	mla	r3, r2, r3, r0
 801a712:	b289      	uxth	r1, r1
 801a714:	b29a      	uxth	r2, r3
 801a716:	f10c 0301 	add.w	r3, ip, #1
 801a71a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a71e:	1c53      	adds	r3, r2, #1
 801a720:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a724:	1c4a      	adds	r2, r1, #1
 801a726:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a72a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a72e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a732:	0949      	lsrs	r1, r1, #5
 801a734:	ea43 030c 	orr.w	r3, r3, ip
 801a738:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a73c:	430b      	orrs	r3, r1
 801a73e:	803b      	strh	r3, [r7, #0]
 801a740:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a742:	3702      	adds	r7, #2
 801a744:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a748:	449a      	add	sl, r3
 801a74a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a74c:	441d      	add	r5, r3
 801a74e:	e742      	b.n	801a5d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a750:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a752:	f108 0802 	add.w	r8, r8, #2
 801a756:	449a      	add	sl, r3
 801a758:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a75a:	441d      	add	r5, r3
 801a75c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a75e:	3b01      	subs	r3, #1
 801a760:	9309      	str	r3, [sp, #36]	; 0x24
 801a762:	e718      	b.n	801a596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a764:	d023      	beq.n	801a7ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a766:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a768:	9825      	ldr	r0, [sp, #148]	; 0x94
 801a76a:	3b01      	subs	r3, #1
 801a76c:	fb00 a003 	mla	r0, r0, r3, sl
 801a770:	1400      	asrs	r0, r0, #16
 801a772:	f53f af2d 	bmi.w	801a5d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a776:	3901      	subs	r1, #1
 801a778:	4288      	cmp	r0, r1
 801a77a:	f6bf af29 	bge.w	801a5d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a77e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801a780:	fb01 5303 	mla	r3, r1, r3, r5
 801a784:	141b      	asrs	r3, r3, #16
 801a786:	f53f af23 	bmi.w	801a5d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a78a:	3a01      	subs	r2, #1
 801a78c:	4293      	cmp	r3, r2
 801a78e:	f6bf af1f 	bge.w	801a5d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a792:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801a796:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801a79a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801a79e:	f1be 0f00 	cmp.w	lr, #0
 801a7a2:	dc6c      	bgt.n	801a87e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a7a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7a6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a7aa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a7ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a7b0:	2b00      	cmp	r3, #0
 801a7b2:	f340 810e 	ble.w	801a9d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a7b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a7ba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a7bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7c4:	eef0 6a62 	vmov.f32	s13, s5
 801a7c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a7cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7d4:	ee16 aa90 	vmov	sl, s13
 801a7d8:	eef0 6a43 	vmov.f32	s13, s6
 801a7dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7e0:	ee16 5a90 	vmov	r5, s13
 801a7e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a7f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7fc:	ee12 2a90 	vmov	r2, s5
 801a800:	eef0 2a47 	vmov.f32	s5, s14
 801a804:	fb92 f3f3 	sdiv	r3, r2, r3
 801a808:	ee13 2a10 	vmov	r2, s6
 801a80c:	9325      	str	r3, [sp, #148]	; 0x94
 801a80e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a810:	eeb0 3a67 	vmov.f32	s6, s15
 801a814:	fb92 f3f3 	sdiv	r3, r2, r3
 801a818:	9326      	str	r3, [sp, #152]	; 0x98
 801a81a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a81c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801a81e:	3b01      	subs	r3, #1
 801a820:	930c      	str	r3, [sp, #48]	; 0x30
 801a822:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a824:	bf08      	it	eq
 801a826:	4613      	moveq	r3, r2
 801a828:	9309      	str	r3, [sp, #36]	; 0x24
 801a82a:	e6a6      	b.n	801a57a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a82c:	2900      	cmp	r1, #0
 801a82e:	f43f af10 	beq.w	801a652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a832:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a836:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a83a:	930f      	str	r3, [sp, #60]	; 0x3c
 801a83c:	e709      	b.n	801a652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a83e:	f112 0901 	adds.w	r9, r2, #1
 801a842:	f53f af7d 	bmi.w	801a740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a846:	454b      	cmp	r3, r9
 801a848:	f6ff af7a 	blt.w	801a740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a84c:	f11c 0901 	adds.w	r9, ip, #1
 801a850:	f53f af76 	bmi.w	801a740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a854:	45ce      	cmp	lr, r9
 801a856:	f6ff af73 	blt.w	801a740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a85a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a85c:	b21b      	sxth	r3, r3
 801a85e:	9202      	str	r2, [sp, #8]
 801a860:	fa0f f28e 	sxth.w	r2, lr
 801a864:	9300      	str	r3, [sp, #0]
 801a866:	4633      	mov	r3, r6
 801a868:	9201      	str	r2, [sp, #4]
 801a86a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a86c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a870:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a874:	4639      	mov	r1, r7
 801a876:	9816      	ldr	r0, [sp, #88]	; 0x58
 801a878:	f7ff fd8e 	bl	801a398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a87c:	e760      	b.n	801a740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a87e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a880:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a884:	1429      	asrs	r1, r5, #16
 801a886:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a888:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a88c:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a890:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a894:	fb03 2101 	mla	r1, r3, r1, r2
 801a898:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a89a:	440a      	add	r2, r1
 801a89c:	5c61      	ldrb	r1, [r4, r1]
 801a89e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a8a2:	f1bc 0f00 	cmp.w	ip, #0
 801a8a6:	f000 808c 	beq.w	801a9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a8aa:	7857      	ldrb	r7, [r2, #1]
 801a8ac:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a8b0:	9413      	str	r4, [sp, #76]	; 0x4c
 801a8b2:	b140      	cbz	r0, 801a8c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a8b4:	18d7      	adds	r7, r2, r3
 801a8b6:	5cd3      	ldrb	r3, [r2, r3]
 801a8b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a8bc:	9310      	str	r3, [sp, #64]	; 0x40
 801a8be:	787b      	ldrb	r3, [r7, #1]
 801a8c0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a8c4:	9314      	str	r3, [sp, #80]	; 0x50
 801a8c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a8c8:	fb1c f200 	smulbb	r2, ip, r0
 801a8cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a8ce:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a8d2:	041f      	lsls	r7, r3, #16
 801a8d4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a8d8:	10d2      	asrs	r2, r2, #3
 801a8da:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801a8de:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801a8e2:	431f      	orrs	r7, r3
 801a8e4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a8e8:	9317      	str	r3, [sp, #92]	; 0x5c
 801a8ea:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a8ec:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a8ee:	041b      	lsls	r3, r3, #16
 801a8f0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a8f4:	ea43 030b 	orr.w	r3, r3, fp
 801a8f8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a8fc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a900:	4353      	muls	r3, r2
 801a902:	fb04 3707 	mla	r7, r4, r7, r3
 801a906:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801a90a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a90c:	ea43 0b01 	orr.w	fp, r3, r1
 801a910:	f1c0 0110 	rsb	r1, r0, #16
 801a914:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a916:	eba1 0c0c 	sub.w	ip, r1, ip
 801a91a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a91e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a922:	fb0c 770b 	mla	r7, ip, fp, r7
 801a926:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a92a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801a92e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a932:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a936:	fb02 770c 	mla	r7, r2, ip, r7
 801a93a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a93c:	0d79      	lsrs	r1, r7, #21
 801a93e:	8812      	ldrh	r2, [r2, #0]
 801a940:	097f      	lsrs	r7, r7, #5
 801a942:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a946:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a94a:	430f      	orrs	r7, r1
 801a94c:	1211      	asrs	r1, r2, #8
 801a94e:	b2bb      	uxth	r3, r7
 801a950:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a954:	10d7      	asrs	r7, r2, #3
 801a956:	fb11 f104 	smulbb	r1, r1, r4
 801a95a:	1218      	asrs	r0, r3, #8
 801a95c:	00d2      	lsls	r2, r2, #3
 801a95e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a962:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a966:	fb17 f704 	smulbb	r7, r7, r4
 801a96a:	b2d2      	uxtb	r2, r2
 801a96c:	fb00 1009 	mla	r0, r0, r9, r1
 801a970:	10d9      	asrs	r1, r3, #3
 801a972:	fb12 f204 	smulbb	r2, r2, r4
 801a976:	00db      	lsls	r3, r3, #3
 801a978:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a97c:	b280      	uxth	r0, r0
 801a97e:	b2db      	uxtb	r3, r3
 801a980:	fb01 7109 	mla	r1, r1, r9, r7
 801a984:	fb03 2309 	mla	r3, r3, r9, r2
 801a988:	1c42      	adds	r2, r0, #1
 801a98a:	b289      	uxth	r1, r1
 801a98c:	b29b      	uxth	r3, r3
 801a98e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a992:	1c4f      	adds	r7, r1, #1
 801a994:	1c5a      	adds	r2, r3, #1
 801a996:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a99a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a99e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a9a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a9a4:	0949      	lsrs	r1, r1, #5
 801a9a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a9aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a9ae:	4310      	orrs	r0, r2
 801a9b0:	4308      	orrs	r0, r1
 801a9b2:	f823 0b02 	strh.w	r0, [r3], #2
 801a9b6:	930e      	str	r3, [sp, #56]	; 0x38
 801a9b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a9ba:	449a      	add	sl, r3
 801a9bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a9be:	441d      	add	r5, r3
 801a9c0:	e6ed      	b.n	801a79e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a9c2:	2800      	cmp	r0, #0
 801a9c4:	f43f af7f 	beq.w	801a8c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a9c8:	5cd3      	ldrb	r3, [r2, r3]
 801a9ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a9ce:	9310      	str	r3, [sp, #64]	; 0x40
 801a9d0:	e779      	b.n	801a8c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a9d2:	b019      	add	sp, #100	; 0x64
 801a9d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a9d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a9d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a9dc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801a9e0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a9e4:	f1b8 0f00 	cmp.w	r8, #0
 801a9e8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801a9ec:	fb08 470e 	mla	r7, r8, lr, r4
 801a9f0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a9f4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801a9f8:	eb02 0907 	add.w	r9, r2, r7
 801a9fc:	8808      	ldrh	r0, [r1, #0]
 801a9fe:	db67      	blt.n	801aad0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801aa00:	45c2      	cmp	sl, r8
 801aa02:	dd65      	ble.n	801aad0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801aa04:	2c00      	cmp	r4, #0
 801aa06:	db61      	blt.n	801aacc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801aa08:	45a6      	cmp	lr, r4
 801aa0a:	dd5f      	ble.n	801aacc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801aa0c:	5dd2      	ldrb	r2, [r2, r7]
 801aa0e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801aa12:	1c62      	adds	r2, r4, #1
 801aa14:	d45f      	bmi.n	801aad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa16:	4596      	cmp	lr, r2
 801aa18:	dd5d      	ble.n	801aad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa1a:	2d00      	cmp	r5, #0
 801aa1c:	d05b      	beq.n	801aad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aa1e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801aa22:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801aa26:	f118 0801 	adds.w	r8, r8, #1
 801aa2a:	d458      	bmi.n	801aade <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aa2c:	45c2      	cmp	sl, r8
 801aa2e:	dd56      	ble.n	801aade <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aa30:	2e00      	cmp	r6, #0
 801aa32:	d054      	beq.n	801aade <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aa34:	2c00      	cmp	r4, #0
 801aa36:	db50      	blt.n	801aada <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801aa38:	45a6      	cmp	lr, r4
 801aa3a:	dd4e      	ble.n	801aada <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801aa3c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801aa40:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801aa44:	3401      	adds	r4, #1
 801aa46:	d407      	bmi.n	801aa58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aa48:	45a6      	cmp	lr, r4
 801aa4a:	dd05      	ble.n	801aa58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aa4c:	b125      	cbz	r5, 801aa58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801aa4e:	44ce      	add	lr, r9
 801aa50:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801aa54:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801aa58:	fb15 f406 	smulbb	r4, r5, r6
 801aa5c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801aa60:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801aa64:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801aa68:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801aa6c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801aa70:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801aa74:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801aa78:	ea43 0c0c 	orr.w	ip, r3, ip
 801aa7c:	f1c6 0310 	rsb	r3, r6, #16
 801aa80:	ea4e 0707 	orr.w	r7, lr, r7
 801aa84:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801aa88:	1b5b      	subs	r3, r3, r5
 801aa8a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801aa8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801aa92:	437d      	muls	r5, r7
 801aa94:	fb03 5c0c 	mla	ip, r3, ip, r5
 801aa98:	0403      	lsls	r3, r0, #16
 801aa9a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801aa9e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801aaa2:	4318      	orrs	r0, r3
 801aaa4:	0413      	lsls	r3, r2, #16
 801aaa6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801aaaa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801aaae:	fb04 c000 	mla	r0, r4, r0, ip
 801aab2:	4313      	orrs	r3, r2
 801aab4:	fb06 0003 	mla	r0, r6, r3, r0
 801aab8:	0d43      	lsrs	r3, r0, #21
 801aaba:	0940      	lsrs	r0, r0, #5
 801aabc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aac0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801aac4:	4318      	orrs	r0, r3
 801aac6:	8008      	strh	r0, [r1, #0]
 801aac8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aacc:	4684      	mov	ip, r0
 801aace:	e7a0      	b.n	801aa12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801aad0:	4607      	mov	r7, r0
 801aad2:	4684      	mov	ip, r0
 801aad4:	e7a7      	b.n	801aa26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801aad6:	4607      	mov	r7, r0
 801aad8:	e7a5      	b.n	801aa26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801aada:	4602      	mov	r2, r0
 801aadc:	e7b2      	b.n	801aa44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801aade:	4602      	mov	r2, r0
 801aae0:	e7ba      	b.n	801aa58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801aae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aae2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aae6:	b093      	sub	sp, #76	; 0x4c
 801aae8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aaec:	920f      	str	r2, [sp, #60]	; 0x3c
 801aaee:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801aaf0:	9010      	str	r0, [sp, #64]	; 0x40
 801aaf2:	9108      	str	r1, [sp, #32]
 801aaf4:	6850      	ldr	r0, [r2, #4]
 801aaf6:	9306      	str	r3, [sp, #24]
 801aaf8:	6812      	ldr	r2, [r2, #0]
 801aafa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801aafe:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ab02:	fb00 1303 	mla	r3, r0, r3, r1
 801ab06:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ab0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ab0c:	681b      	ldr	r3, [r3, #0]
 801ab0e:	9307      	str	r3, [sp, #28]
 801ab10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ab12:	685f      	ldr	r7, [r3, #4]
 801ab14:	3704      	adds	r7, #4
 801ab16:	9b08      	ldr	r3, [sp, #32]
 801ab18:	2b00      	cmp	r3, #0
 801ab1a:	dc03      	bgt.n	801ab24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ab1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ab1e:	2b00      	cmp	r3, #0
 801ab20:	f340 81b2 	ble.w	801ae88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ab24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ab26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ab2a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ab2e:	1e48      	subs	r0, r1, #1
 801ab30:	f102 3cff 	add.w	ip, r2, #4294967295
 801ab34:	9b06      	ldr	r3, [sp, #24]
 801ab36:	2b00      	cmp	r3, #0
 801ab38:	f340 80a9 	ble.w	801ac8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ab3c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ab40:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ab44:	d406      	bmi.n	801ab54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ab46:	4586      	cmp	lr, r0
 801ab48:	da04      	bge.n	801ab54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ab4a:	2b00      	cmp	r3, #0
 801ab4c:	db02      	blt.n	801ab54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ab4e:	4563      	cmp	r3, ip
 801ab50:	f2c0 809e 	blt.w	801ac90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ab54:	f11e 0e01 	adds.w	lr, lr, #1
 801ab58:	f100 808f 	bmi.w	801ac7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab5c:	4571      	cmp	r1, lr
 801ab5e:	f2c0 808c 	blt.w	801ac7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab62:	3301      	adds	r3, #1
 801ab64:	f100 8089 	bmi.w	801ac7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab68:	429a      	cmp	r2, r3
 801ab6a:	f2c0 8086 	blt.w	801ac7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab6e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ab72:	46c8      	mov	r8, r9
 801ab74:	f1bb 0f00 	cmp.w	fp, #0
 801ab78:	f340 80a6 	ble.w	801acc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ab7c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801ab7e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ab82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ab84:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ab88:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ab8c:	1422      	asrs	r2, r4, #16
 801ab8e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ab92:	689b      	ldr	r3, [r3, #8]
 801ab94:	f100 80e3 	bmi.w	801ad5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ab98:	f103 3aff 	add.w	sl, r3, #4294967295
 801ab9c:	4552      	cmp	r2, sl
 801ab9e:	f280 80de 	bge.w	801ad5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801aba2:	f1bc 0f00 	cmp.w	ip, #0
 801aba6:	f2c0 80da 	blt.w	801ad5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801abaa:	f10e 3aff 	add.w	sl, lr, #4294967295
 801abae:	45d4      	cmp	ip, sl
 801abb0:	f280 80d5 	bge.w	801ad5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801abb4:	b21b      	sxth	r3, r3
 801abb6:	9d07      	ldr	r5, [sp, #28]
 801abb8:	fb0c 2203 	mla	r2, ip, r3, r2
 801abbc:	eb05 0a02 	add.w	sl, r5, r2
 801abc0:	5caa      	ldrb	r2, [r5, r2]
 801abc2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801abc6:	2800      	cmp	r0, #0
 801abc8:	f000 80c0 	beq.w	801ad4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801abcc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801abd0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801abd4:	920b      	str	r2, [sp, #44]	; 0x2c
 801abd6:	b151      	cbz	r1, 801abee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801abd8:	eb0a 0203 	add.w	r2, sl, r3
 801abdc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801abe0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801abe4:	9309      	str	r3, [sp, #36]	; 0x24
 801abe6:	7853      	ldrb	r3, [r2, #1]
 801abe8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801abec:	930c      	str	r3, [sp, #48]	; 0x30
 801abee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801abf0:	fb10 f201 	smulbb	r2, r0, r1
 801abf4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801abf6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801abfa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801abfe:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ac02:	10d2      	asrs	r2, r2, #3
 801ac04:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ac08:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ac0c:	ea4c 0c03 	orr.w	ip, ip, r3
 801ac10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ac12:	041b      	lsls	r3, r3, #16
 801ac14:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ac18:	432b      	orrs	r3, r5
 801ac1a:	4353      	muls	r3, r2
 801ac1c:	fb0a 330c 	mla	r3, sl, ip, r3
 801ac20:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ac24:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ac28:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ac2c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ac30:	f1c1 0c10 	rsb	ip, r1, #16
 801ac34:	ebac 0c00 	sub.w	ip, ip, r0
 801ac38:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ac3c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ac40:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ac44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac46:	0418      	lsls	r0, r3, #16
 801ac48:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ac4c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ac50:	4318      	orrs	r0, r3
 801ac52:	fb02 c200 	mla	r2, r2, r0, ip
 801ac56:	0d53      	lsrs	r3, r2, #21
 801ac58:	0952      	lsrs	r2, r2, #5
 801ac5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ac5e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ac62:	431a      	orrs	r2, r3
 801ac64:	f8a8 2000 	strh.w	r2, [r8]
 801ac68:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ac6a:	f108 0802 	add.w	r8, r8, #2
 801ac6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ac72:	441c      	add	r4, r3
 801ac74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ac76:	441e      	add	r6, r3
 801ac78:	e77c      	b.n	801ab74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac7a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ac7c:	f109 0902 	add.w	r9, r9, #2
 801ac80:	441c      	add	r4, r3
 801ac82:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ac84:	441e      	add	r6, r3
 801ac86:	9b06      	ldr	r3, [sp, #24]
 801ac88:	3b01      	subs	r3, #1
 801ac8a:	9306      	str	r3, [sp, #24]
 801ac8c:	e752      	b.n	801ab34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ac8e:	d020      	beq.n	801acd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ac90:	9b06      	ldr	r3, [sp, #24]
 801ac92:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ac94:	3b01      	subs	r3, #1
 801ac96:	fb00 4003 	mla	r0, r0, r3, r4
 801ac9a:	1400      	asrs	r0, r0, #16
 801ac9c:	f53f af67 	bmi.w	801ab6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801aca0:	3901      	subs	r1, #1
 801aca2:	4288      	cmp	r0, r1
 801aca4:	f6bf af63 	bge.w	801ab6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801aca8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801acaa:	fb01 6303 	mla	r3, r1, r3, r6
 801acae:	141b      	asrs	r3, r3, #16
 801acb0:	f53f af5d 	bmi.w	801ab6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801acb4:	3a01      	subs	r2, #1
 801acb6:	4293      	cmp	r3, r2
 801acb8:	f6bf af59 	bge.w	801ab6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801acbc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801acc0:	46ca      	mov	sl, r9
 801acc2:	f1b8 0f00 	cmp.w	r8, #0
 801acc6:	dc67      	bgt.n	801ad98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801acc8:	9b06      	ldr	r3, [sp, #24]
 801acca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801acce:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801acd2:	9b08      	ldr	r3, [sp, #32]
 801acd4:	2b00      	cmp	r3, #0
 801acd6:	f340 80d7 	ble.w	801ae88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801acda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acde:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ace0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ace4:	eeb0 6a62 	vmov.f32	s12, s5
 801ace8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801acec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801acf0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801acf4:	ee16 4a10 	vmov	r4, s12
 801acf8:	eeb0 6a43 	vmov.f32	s12, s6
 801acfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad00:	ee16 6a10 	vmov	r6, s12
 801ad04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad08:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad1c:	ee12 2a90 	vmov	r2, s5
 801ad20:	eef0 2a47 	vmov.f32	s5, s14
 801ad24:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad28:	ee13 2a10 	vmov	r2, s6
 801ad2c:	931f      	str	r3, [sp, #124]	; 0x7c
 801ad2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ad30:	eeb0 3a67 	vmov.f32	s6, s15
 801ad34:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad38:	9320      	str	r3, [sp, #128]	; 0x80
 801ad3a:	9b08      	ldr	r3, [sp, #32]
 801ad3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ad3e:	3b01      	subs	r3, #1
 801ad40:	9308      	str	r3, [sp, #32]
 801ad42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ad44:	bf08      	it	eq
 801ad46:	4613      	moveq	r3, r2
 801ad48:	9306      	str	r3, [sp, #24]
 801ad4a:	e6e4      	b.n	801ab16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ad4c:	2900      	cmp	r1, #0
 801ad4e:	f43f af4e 	beq.w	801abee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ad52:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ad56:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ad5a:	9309      	str	r3, [sp, #36]	; 0x24
 801ad5c:	e747      	b.n	801abee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ad5e:	f112 0a01 	adds.w	sl, r2, #1
 801ad62:	d481      	bmi.n	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad64:	4553      	cmp	r3, sl
 801ad66:	f6ff af7f 	blt.w	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad6a:	f11c 0a01 	adds.w	sl, ip, #1
 801ad6e:	f53f af7b 	bmi.w	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad72:	45d6      	cmp	lr, sl
 801ad74:	f6ff af78 	blt.w	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad78:	b21b      	sxth	r3, r3
 801ad7a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ad7e:	fa0f f28e 	sxth.w	r2, lr
 801ad82:	9300      	str	r3, [sp, #0]
 801ad84:	463b      	mov	r3, r7
 801ad86:	9201      	str	r2, [sp, #4]
 801ad88:	9a07      	ldr	r2, [sp, #28]
 801ad8a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801ad8e:	4641      	mov	r1, r8
 801ad90:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ad92:	f7ff fe21 	bl	801a9d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ad96:	e767      	b.n	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ad9a:	1422      	asrs	r2, r4, #16
 801ad9c:	1431      	asrs	r1, r6, #16
 801ad9e:	9d07      	ldr	r5, [sp, #28]
 801ada0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ada4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ada8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801adac:	fb03 2101 	mla	r1, r3, r1, r2
 801adb0:	9a07      	ldr	r2, [sp, #28]
 801adb2:	440a      	add	r2, r1
 801adb4:	5c69      	ldrb	r1, [r5, r1]
 801adb6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801adba:	f1be 0f00 	cmp.w	lr, #0
 801adbe:	d05c      	beq.n	801ae7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801adc0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801adc4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801adc8:	950d      	str	r5, [sp, #52]	; 0x34
 801adca:	b150      	cbz	r0, 801ade2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801adcc:	eb02 0c03 	add.w	ip, r2, r3
 801add0:	5cd3      	ldrb	r3, [r2, r3]
 801add2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801add6:	930a      	str	r3, [sp, #40]	; 0x28
 801add8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801addc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ade0:	930e      	str	r3, [sp, #56]	; 0x38
 801ade2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ade4:	fb1e f200 	smulbb	r2, lr, r0
 801ade8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801adea:	f108 38ff 	add.w	r8, r8, #4294967295
 801adee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801adf2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801adf6:	10d2      	asrs	r2, r2, #3
 801adf8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801adfc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ae00:	ea4c 0c03 	orr.w	ip, ip, r3
 801ae04:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ae08:	9311      	str	r3, [sp, #68]	; 0x44
 801ae0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ae0e:	041b      	lsls	r3, r3, #16
 801ae10:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ae14:	ea43 030b 	orr.w	r3, r3, fp
 801ae18:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ae1c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ae20:	4353      	muls	r3, r2
 801ae22:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ae26:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ae2a:	ea43 0b01 	orr.w	fp, r3, r1
 801ae2e:	f1c0 0110 	rsb	r1, r0, #16
 801ae32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ae34:	eba1 0e0e 	sub.w	lr, r1, lr
 801ae38:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ae3c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ae40:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ae44:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ae48:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801ae4c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ae50:	ea4b 0e0e 	orr.w	lr, fp, lr
 801ae54:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ae58:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ae5c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ae60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ae64:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ae68:	ea43 0c0c 	orr.w	ip, r3, ip
 801ae6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ae6e:	441c      	add	r4, r3
 801ae70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ae72:	f82a cb02 	strh.w	ip, [sl], #2
 801ae76:	441e      	add	r6, r3
 801ae78:	e723      	b.n	801acc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ae7a:	2800      	cmp	r0, #0
 801ae7c:	d0b1      	beq.n	801ade2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ae7e:	5cd3      	ldrb	r3, [r2, r3]
 801ae80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ae84:	930a      	str	r3, [sp, #40]	; 0x28
 801ae86:	e7ac      	b.n	801ade2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ae88:	b013      	add	sp, #76	; 0x4c
 801ae8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801ae8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae92:	880d      	ldrh	r5, [r1, #0]
 801ae94:	b087      	sub	sp, #28
 801ae96:	10ef      	asrs	r7, r5, #3
 801ae98:	9103      	str	r1, [sp, #12]
 801ae9a:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801ae9e:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801aea2:	00ed      	lsls	r5, r5, #3
 801aea4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aea8:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801aeac:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801aeb0:	b2ed      	uxtb	r5, r5
 801aeb2:	9701      	str	r7, [sp, #4]
 801aeb4:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801aeb8:	9502      	str	r5, [sp, #8]
 801aeba:	9d01      	ldr	r5, [sp, #4]
 801aebc:	9902      	ldr	r1, [sp, #8]
 801aebe:	022d      	lsls	r5, r5, #8
 801aec0:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801aec4:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801aec8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801aecc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801aed0:	430d      	orrs	r5, r1
 801aed2:	fb06 0709 	mla	r7, r6, r9, r0
 801aed6:	2e00      	cmp	r6, #0
 801aed8:	9505      	str	r5, [sp, #20]
 801aeda:	eb02 0c07 	add.w	ip, r2, r7
 801aede:	f2c0 80b6 	blt.w	801b04e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801aee2:	45b3      	cmp	fp, r6
 801aee4:	f340 80b3 	ble.w	801b04e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801aee8:	2800      	cmp	r0, #0
 801aeea:	f2c0 80ae 	blt.w	801b04a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801aeee:	4581      	cmp	r9, r0
 801aef0:	f340 80ab 	ble.w	801b04a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801aef4:	5dd7      	ldrb	r7, [r2, r7]
 801aef6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801aefa:	441f      	add	r7, r3
 801aefc:	1c42      	adds	r2, r0, #1
 801aefe:	f100 80a9 	bmi.w	801b054 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af02:	4591      	cmp	r9, r2
 801af04:	f340 80a6 	ble.w	801b054 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af08:	2c00      	cmp	r4, #0
 801af0a:	f000 80a3 	beq.w	801b054 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801af0e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801af12:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801af16:	441d      	add	r5, r3
 801af18:	3601      	adds	r6, #1
 801af1a:	f100 809f 	bmi.w	801b05c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801af1e:	45b3      	cmp	fp, r6
 801af20:	f340 809c 	ble.w	801b05c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801af24:	f1be 0f00 	cmp.w	lr, #0
 801af28:	f000 8098 	beq.w	801b05c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801af2c:	2800      	cmp	r0, #0
 801af2e:	f2c0 8093 	blt.w	801b058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801af32:	4581      	cmp	r9, r0
 801af34:	f340 8090 	ble.w	801b058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801af38:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801af3c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801af40:	441e      	add	r6, r3
 801af42:	3001      	adds	r0, #1
 801af44:	f100 808d 	bmi.w	801b062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801af48:	4581      	cmp	r9, r0
 801af4a:	f340 808a 	ble.w	801b062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801af4e:	2c00      	cmp	r4, #0
 801af50:	f000 8087 	beq.w	801b062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801af54:	44e1      	add	r9, ip
 801af56:	f899 2001 	ldrb.w	r2, [r9, #1]
 801af5a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801af5e:	4413      	add	r3, r2
 801af60:	b2a4      	uxth	r4, r4
 801af62:	f897 c002 	ldrb.w	ip, [r7, #2]
 801af66:	fa1f fe8e 	uxth.w	lr, lr
 801af6a:	9901      	ldr	r1, [sp, #4]
 801af6c:	fb04 fb0e 	mul.w	fp, r4, lr
 801af70:	0124      	lsls	r4, r4, #4
 801af72:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801af76:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801af7a:	eba4 040b 	sub.w	r4, r4, fp
 801af7e:	fa1f f08e 	uxth.w	r0, lr
 801af82:	b2a2      	uxth	r2, r4
 801af84:	78ac      	ldrb	r4, [r5, #2]
 801af86:	eba9 0900 	sub.w	r9, r9, r0
 801af8a:	fa1f fe88 	uxth.w	lr, r8
 801af8e:	4354      	muls	r4, r2
 801af90:	ea6f 0808 	mvn.w	r8, r8
 801af94:	fa1f f989 	uxth.w	r9, r9
 801af98:	fa5f f888 	uxtb.w	r8, r8
 801af9c:	fb09 440c 	mla	r4, r9, ip, r4
 801afa0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801afa4:	fb1a fa08 	smulbb	sl, sl, r8
 801afa8:	fb00 440c 	mla	r4, r0, ip, r4
 801afac:	f893 c002 	ldrb.w	ip, [r3, #2]
 801afb0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801afb4:	787c      	ldrb	r4, [r7, #1]
 801afb6:	783f      	ldrb	r7, [r7, #0]
 801afb8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801afbc:	fb0c ac0e 	mla	ip, ip, lr, sl
 801afc0:	f895 a001 	ldrb.w	sl, [r5, #1]
 801afc4:	782d      	ldrb	r5, [r5, #0]
 801afc6:	fb02 fa0a 	mul.w	sl, r2, sl
 801afca:	fa1f fc8c 	uxth.w	ip, ip
 801afce:	436a      	muls	r2, r5
 801afd0:	7835      	ldrb	r5, [r6, #0]
 801afd2:	fb09 aa04 	mla	sl, r9, r4, sl
 801afd6:	7874      	ldrb	r4, [r6, #1]
 801afd8:	fb09 2207 	mla	r2, r9, r7, r2
 801afdc:	fb00 aa04 	mla	sl, r0, r4, sl
 801afe0:	785c      	ldrb	r4, [r3, #1]
 801afe2:	fb00 2005 	mla	r0, r0, r5, r2
 801afe6:	781b      	ldrb	r3, [r3, #0]
 801afe8:	fb0b a404 	mla	r4, fp, r4, sl
 801afec:	fb11 fa08 	smulbb	sl, r1, r8
 801aff0:	fb0b 0b03 	mla	fp, fp, r3, r0
 801aff4:	9b02      	ldr	r3, [sp, #8]
 801aff6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801affa:	fb13 f808 	smulbb	r8, r3, r8
 801affe:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801b002:	fb04 a40e 	mla	r4, r4, lr, sl
 801b006:	f10c 0301 	add.w	r3, ip, #1
 801b00a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801b00e:	b2a4      	uxth	r4, r4
 801b010:	fa1f fe8e 	uxth.w	lr, lr
 801b014:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b018:	f104 0a01 	add.w	sl, r4, #1
 801b01c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801b020:	f10e 0c01 	add.w	ip, lr, #1
 801b024:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b028:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b02c:	0964      	lsrs	r4, r4, #5
 801b02e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b032:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801b036:	ea4c 0c03 	orr.w	ip, ip, r3
 801b03a:	9b03      	ldr	r3, [sp, #12]
 801b03c:	ea4c 0c04 	orr.w	ip, ip, r4
 801b040:	f8a3 c000 	strh.w	ip, [r3]
 801b044:	b007      	add	sp, #28
 801b046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b04a:	af05      	add	r7, sp, #20
 801b04c:	e756      	b.n	801aefc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801b04e:	ad05      	add	r5, sp, #20
 801b050:	462f      	mov	r7, r5
 801b052:	e761      	b.n	801af18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b054:	ad05      	add	r5, sp, #20
 801b056:	e75f      	b.n	801af18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b058:	ae05      	add	r6, sp, #20
 801b05a:	e772      	b.n	801af42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801b05c:	ab05      	add	r3, sp, #20
 801b05e:	461e      	mov	r6, r3
 801b060:	e77e      	b.n	801af60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801b062:	ab05      	add	r3, sp, #20
 801b064:	e77c      	b.n	801af60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801b066 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b066:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b06a:	b095      	sub	sp, #84	; 0x54
 801b06c:	9212      	str	r2, [sp, #72]	; 0x48
 801b06e:	9309      	str	r3, [sp, #36]	; 0x24
 801b070:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801b072:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801b076:	9013      	str	r0, [sp, #76]	; 0x4c
 801b078:	930f      	str	r3, [sp, #60]	; 0x3c
 801b07a:	6850      	ldr	r0, [r2, #4]
 801b07c:	910e      	str	r1, [sp, #56]	; 0x38
 801b07e:	6812      	ldr	r2, [r2, #0]
 801b080:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801b084:	fb00 1303 	mla	r3, r0, r3, r1
 801b088:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b08c:	930a      	str	r3, [sp, #40]	; 0x28
 801b08e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b090:	681b      	ldr	r3, [r3, #0]
 801b092:	930d      	str	r3, [sp, #52]	; 0x34
 801b094:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b096:	685c      	ldr	r4, [r3, #4]
 801b098:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b09a:	3404      	adds	r4, #4
 801b09c:	43db      	mvns	r3, r3
 801b09e:	b2db      	uxtb	r3, r3
 801b0a0:	930b      	str	r3, [sp, #44]	; 0x2c
 801b0a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b0a4:	2b00      	cmp	r3, #0
 801b0a6:	dc03      	bgt.n	801b0b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b0a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b0aa:	2b00      	cmp	r3, #0
 801b0ac:	f340 8255 	ble.w	801b55a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b0b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b0b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b0b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b0ba:	1e48      	subs	r0, r1, #1
 801b0bc:	1e55      	subs	r5, r2, #1
 801b0be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0c0:	2b00      	cmp	r3, #0
 801b0c2:	f340 80f9 	ble.w	801b2b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b0c6:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801b0c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b0ca:	1436      	asrs	r6, r6, #16
 801b0cc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b0d0:	d406      	bmi.n	801b0e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b0d2:	4286      	cmp	r6, r0
 801b0d4:	da04      	bge.n	801b0e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b0d6:	2b00      	cmp	r3, #0
 801b0d8:	db02      	blt.n	801b0e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b0da:	42ab      	cmp	r3, r5
 801b0dc:	f2c0 80ed 	blt.w	801b2ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801b0e0:	3601      	adds	r6, #1
 801b0e2:	f100 80da 	bmi.w	801b29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b0e6:	42b1      	cmp	r1, r6
 801b0e8:	f2c0 80d7 	blt.w	801b29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b0ec:	3301      	adds	r3, #1
 801b0ee:	f100 80d4 	bmi.w	801b29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b0f2:	429a      	cmp	r2, r3
 801b0f4:	f2c0 80d1 	blt.w	801b29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b0f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0fa:	9311      	str	r3, [sp, #68]	; 0x44
 801b0fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b0fe:	930c      	str	r3, [sp, #48]	; 0x30
 801b100:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b102:	2b00      	cmp	r3, #0
 801b104:	f340 80fa 	ble.w	801b2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801b108:	9826      	ldr	r0, [sp, #152]	; 0x98
 801b10a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b10c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b10e:	68c6      	ldr	r6, [r0, #12]
 801b110:	141d      	asrs	r5, r3, #16
 801b112:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801b114:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b118:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b11a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801b11c:	1400      	asrs	r0, r0, #16
 801b11e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b122:	6892      	ldr	r2, [r2, #8]
 801b124:	f100 813e 	bmi.w	801b3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b128:	1e57      	subs	r7, r2, #1
 801b12a:	42b8      	cmp	r0, r7
 801b12c:	f280 813a 	bge.w	801b3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b130:	2d00      	cmp	r5, #0
 801b132:	f2c0 8137 	blt.w	801b3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b136:	1e77      	subs	r7, r6, #1
 801b138:	42bd      	cmp	r5, r7
 801b13a:	f280 8133 	bge.w	801b3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b13e:	b212      	sxth	r2, r2
 801b140:	fb05 0002 	mla	r0, r5, r2, r0
 801b144:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b146:	f815 a000 	ldrb.w	sl, [r5, r0]
 801b14a:	182e      	adds	r6, r5, r0
 801b14c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801b150:	eb04 050a 	add.w	r5, r4, sl
 801b154:	2b00      	cmp	r3, #0
 801b156:	f000 8117 	beq.w	801b388 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801b15a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801b15e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801b162:	44a4      	add	ip, r4
 801b164:	2900      	cmp	r1, #0
 801b166:	f000 8117 	beq.w	801b398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801b16a:	18b0      	adds	r0, r6, r2
 801b16c:	5cb2      	ldrb	r2, [r6, r2]
 801b16e:	7840      	ldrb	r0, [r0, #1]
 801b170:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b174:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b178:	4422      	add	r2, r4
 801b17a:	4420      	add	r0, r4
 801b17c:	b29b      	uxth	r3, r3
 801b17e:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801b182:	b289      	uxth	r1, r1
 801b184:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b188:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801b18a:	fb03 f901 	mul.w	r9, r3, r1
 801b18e:	011b      	lsls	r3, r3, #4
 801b190:	f8b6 e000 	ldrh.w	lr, [r6]
 801b194:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b198:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801b19c:	eba3 0309 	sub.w	r3, r3, r9
 801b1a0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801b1a4:	b289      	uxth	r1, r1
 801b1a6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801b1aa:	b29b      	uxth	r3, r3
 801b1ac:	eba8 0801 	sub.w	r8, r8, r1
 801b1b0:	435f      	muls	r7, r3
 801b1b2:	fa1f f888 	uxth.w	r8, r8
 801b1b6:	9310      	str	r3, [sp, #64]	; 0x40
 801b1b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b1ba:	fb08 770b 	mla	r7, r8, fp, r7
 801b1be:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b1c2:	fb01 770b 	mla	r7, r1, fp, r7
 801b1c6:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b1ca:	fb09 770b 	mla	r7, r9, fp, r7
 801b1ce:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801b1d2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801b1d6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b1da:	fb1b fb03 	smulbb	fp, fp, r3
 801b1de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b1e0:	fb07 b706 	mla	r7, r7, r6, fp
 801b1e4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b1e8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b1ec:	f89c c000 	ldrb.w	ip, [ip]
 801b1f0:	b2bf      	uxth	r7, r7
 801b1f2:	435d      	muls	r5, r3
 801b1f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b1f6:	fb08 550b 	mla	r5, r8, fp, r5
 801b1fa:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b1fe:	fb01 550b 	mla	r5, r1, fp, r5
 801b202:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b206:	fb09 550b 	mla	r5, r9, fp, r5
 801b20a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801b20e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b212:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b216:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b21a:	fa5f fe8e 	uxtb.w	lr, lr
 801b21e:	fb1b fb03 	smulbb	fp, fp, r3
 801b222:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b224:	fb03 f30c 	mul.w	r3, r3, ip
 801b228:	f892 c000 	ldrb.w	ip, [r2]
 801b22c:	fb05 b506 	mla	r5, r5, r6, fp
 801b230:	fb08 330a 	mla	r3, r8, sl, r3
 801b234:	b2ad      	uxth	r5, r5
 801b236:	fb01 330c 	mla	r3, r1, ip, r3
 801b23a:	f890 c000 	ldrb.w	ip, [r0]
 801b23e:	f105 0b01 	add.w	fp, r5, #1
 801b242:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b246:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b248:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b24c:	fb1e fe03 	smulbb	lr, lr, r3
 801b250:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b254:	1c7b      	adds	r3, r7, #1
 801b256:	096d      	lsrs	r5, r5, #5
 801b258:	fb0c e606 	mla	r6, ip, r6, lr
 801b25c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801b260:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b264:	b2b6      	uxth	r6, r6
 801b266:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801b26a:	1c77      	adds	r7, r6, #1
 801b26c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801b270:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b274:	431f      	orrs	r7, r3
 801b276:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b278:	433d      	orrs	r5, r7
 801b27a:	801d      	strh	r5, [r3, #0]
 801b27c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b27e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b280:	3302      	adds	r3, #2
 801b282:	930c      	str	r3, [sp, #48]	; 0x30
 801b284:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b286:	4413      	add	r3, r2
 801b288:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b28a:	931f      	str	r3, [sp, #124]	; 0x7c
 801b28c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b28e:	4413      	add	r3, r2
 801b290:	9320      	str	r3, [sp, #128]	; 0x80
 801b292:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b294:	3b01      	subs	r3, #1
 801b296:	9311      	str	r3, [sp, #68]	; 0x44
 801b298:	e732      	b.n	801b100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b29a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b29c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801b29e:	4433      	add	r3, r6
 801b2a0:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801b2a2:	931f      	str	r3, [sp, #124]	; 0x7c
 801b2a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b2a6:	4433      	add	r3, r6
 801b2a8:	9320      	str	r3, [sp, #128]	; 0x80
 801b2aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2ac:	3b01      	subs	r3, #1
 801b2ae:	9309      	str	r3, [sp, #36]	; 0x24
 801b2b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b2b2:	3302      	adds	r3, #2
 801b2b4:	930a      	str	r3, [sp, #40]	; 0x28
 801b2b6:	e702      	b.n	801b0be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b2b8:	d027      	beq.n	801b30a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801b2ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2bc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801b2be:	3b01      	subs	r3, #1
 801b2c0:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801b2c2:	fb00 5003 	mla	r0, r0, r3, r5
 801b2c6:	1400      	asrs	r0, r0, #16
 801b2c8:	f53f af16 	bmi.w	801b0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b2cc:	3901      	subs	r1, #1
 801b2ce:	4288      	cmp	r0, r1
 801b2d0:	f6bf af12 	bge.w	801b0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b2d4:	9922      	ldr	r1, [sp, #136]	; 0x88
 801b2d6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b2d8:	fb01 0303 	mla	r3, r1, r3, r0
 801b2dc:	141b      	asrs	r3, r3, #16
 801b2de:	f53f af0b 	bmi.w	801b0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b2e2:	3a01      	subs	r2, #1
 801b2e4:	4293      	cmp	r3, r2
 801b2e6:	f6bf af07 	bge.w	801b0f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b2ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2ec:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801b2f0:	9311      	str	r3, [sp, #68]	; 0x44
 801b2f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b2f4:	930c      	str	r3, [sp, #48]	; 0x30
 801b2f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b2f8:	2b00      	cmp	r3, #0
 801b2fa:	dc70      	bgt.n	801b3de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801b2fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b300:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b304:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b308:	930a      	str	r3, [sp, #40]	; 0x28
 801b30a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b30c:	2b00      	cmp	r3, #0
 801b30e:	f340 8124 	ble.w	801b55a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b312:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b316:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b318:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b31c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b320:	eef0 6a62 	vmov.f32	s13, s5
 801b324:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b328:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b32c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b330:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801b334:	eef0 6a43 	vmov.f32	s13, s6
 801b338:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b33c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801b340:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b344:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b348:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b34c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b350:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b354:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b358:	ee12 2a90 	vmov	r2, s5
 801b35c:	eef0 2a47 	vmov.f32	s5, s14
 801b360:	fb92 f3f3 	sdiv	r3, r2, r3
 801b364:	ee13 2a10 	vmov	r2, s6
 801b368:	9321      	str	r3, [sp, #132]	; 0x84
 801b36a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b36c:	eeb0 3a67 	vmov.f32	s6, s15
 801b370:	fb92 f3f3 	sdiv	r3, r2, r3
 801b374:	9322      	str	r3, [sp, #136]	; 0x88
 801b376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b378:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b37a:	3b01      	subs	r3, #1
 801b37c:	930e      	str	r3, [sp, #56]	; 0x38
 801b37e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b380:	bf08      	it	eq
 801b382:	4613      	moveq	r3, r2
 801b384:	9309      	str	r3, [sp, #36]	; 0x24
 801b386:	e68c      	b.n	801b0a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b388:	b149      	cbz	r1, 801b39e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801b38a:	5cb2      	ldrb	r2, [r6, r2]
 801b38c:	4628      	mov	r0, r5
 801b38e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b392:	4422      	add	r2, r4
 801b394:	46ac      	mov	ip, r5
 801b396:	e6f1      	b.n	801b17c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b398:	4628      	mov	r0, r5
 801b39a:	462a      	mov	r2, r5
 801b39c:	e6ee      	b.n	801b17c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b39e:	4628      	mov	r0, r5
 801b3a0:	462a      	mov	r2, r5
 801b3a2:	e7f7      	b.n	801b394 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801b3a4:	1c47      	adds	r7, r0, #1
 801b3a6:	f53f af69 	bmi.w	801b27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b3aa:	42ba      	cmp	r2, r7
 801b3ac:	f6ff af66 	blt.w	801b27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b3b0:	1c6f      	adds	r7, r5, #1
 801b3b2:	f53f af63 	bmi.w	801b27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b3b6:	42be      	cmp	r6, r7
 801b3b8:	f6ff af60 	blt.w	801b27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b3bc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b3be:	b236      	sxth	r6, r6
 801b3c0:	b212      	sxth	r2, r2
 801b3c2:	9002      	str	r0, [sp, #8]
 801b3c4:	9601      	str	r6, [sp, #4]
 801b3c6:	9200      	str	r2, [sp, #0]
 801b3c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b3ca:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801b3ce:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801b3d2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801b3d6:	4623      	mov	r3, r4
 801b3d8:	f7ff fd59 	bl	801ae8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801b3dc:	e74e      	b.n	801b27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b3de:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b3e0:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b3e2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b3e6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801b3e8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801b3ea:	1400      	asrs	r0, r0, #16
 801b3ec:	142d      	asrs	r5, r5, #16
 801b3ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b3f0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b3f4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b3f8:	fb02 5000 	mla	r0, r2, r0, r5
 801b3fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b3fe:	f815 9000 	ldrb.w	r9, [r5, r0]
 801b402:	182e      	adds	r6, r5, r0
 801b404:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801b408:	eb04 0509 	add.w	r5, r4, r9
 801b40c:	2b00      	cmp	r3, #0
 801b40e:	f000 8096 	beq.w	801b53e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b412:	7877      	ldrb	r7, [r6, #1]
 801b414:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b418:	4427      	add	r7, r4
 801b41a:	2900      	cmp	r1, #0
 801b41c:	f000 8097 	beq.w	801b54e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801b420:	18b0      	adds	r0, r6, r2
 801b422:	5cb2      	ldrb	r2, [r6, r2]
 801b424:	7840      	ldrb	r0, [r0, #1]
 801b426:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b42a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b42e:	4422      	add	r2, r4
 801b430:	4420      	add	r0, r4
 801b432:	b29b      	uxth	r3, r3
 801b434:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801b436:	b289      	uxth	r1, r1
 801b438:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b43c:	f8b6 c000 	ldrh.w	ip, [r6]
 801b440:	fb03 f801 	mul.w	r8, r3, r1
 801b444:	011b      	lsls	r3, r3, #4
 801b446:	78be      	ldrb	r6, [r7, #2]
 801b448:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801b44c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b450:	eba3 0308 	sub.w	r3, r3, r8
 801b454:	f814 9009 	ldrb.w	r9, [r4, r9]
 801b458:	b289      	uxth	r1, r1
 801b45a:	b29b      	uxth	r3, r3
 801b45c:	ebae 0e01 	sub.w	lr, lr, r1
 801b460:	435e      	muls	r6, r3
 801b462:	fa1f fe8e 	uxth.w	lr, lr
 801b466:	9310      	str	r3, [sp, #64]	; 0x40
 801b468:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b46a:	fb0e 660b 	mla	r6, lr, fp, r6
 801b46e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b472:	fb01 660b 	mla	r6, r1, fp, r6
 801b476:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b47a:	fb08 660b 	mla	r6, r8, fp, r6
 801b47e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801b482:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801b486:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b48a:	fb1b fb03 	smulbb	fp, fp, r3
 801b48e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b490:	fb06 b60a 	mla	r6, r6, sl, fp
 801b494:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b498:	787d      	ldrb	r5, [r7, #1]
 801b49a:	783f      	ldrb	r7, [r7, #0]
 801b49c:	b2b6      	uxth	r6, r6
 801b49e:	435d      	muls	r5, r3
 801b4a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b4a2:	fb0e 550b 	mla	r5, lr, fp, r5
 801b4a6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b4aa:	fb01 550b 	mla	r5, r1, fp, r5
 801b4ae:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b4b2:	fb08 550b 	mla	r5, r8, fp, r5
 801b4b6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b4ba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b4be:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b4c2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b4c6:	fa5f fc8c 	uxtb.w	ip, ip
 801b4ca:	fb1b fb03 	smulbb	fp, fp, r3
 801b4ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b4d0:	437b      	muls	r3, r7
 801b4d2:	7817      	ldrb	r7, [r2, #0]
 801b4d4:	fb05 b50a 	mla	r5, r5, sl, fp
 801b4d8:	fb0e 3309 	mla	r3, lr, r9, r3
 801b4dc:	b2ad      	uxth	r5, r5
 801b4de:	fb01 3307 	mla	r3, r1, r7, r3
 801b4e2:	7807      	ldrb	r7, [r0, #0]
 801b4e4:	f105 0b01 	add.w	fp, r5, #1
 801b4e8:	fb08 3707 	mla	r7, r8, r7, r3
 801b4ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b4ee:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b4f2:	fb1c fc03 	smulbb	ip, ip, r3
 801b4f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b4fa:	1c73      	adds	r3, r6, #1
 801b4fc:	096d      	lsrs	r5, r5, #5
 801b4fe:	fb07 c70a 	mla	r7, r7, sl, ip
 801b502:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b506:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b50a:	b2bf      	uxth	r7, r7
 801b50c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b50e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b512:	1c7a      	adds	r2, r7, #1
 801b514:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801b518:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b51c:	4316      	orrs	r6, r2
 801b51e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b520:	432e      	orrs	r6, r5
 801b522:	f823 6b02 	strh.w	r6, [r3], #2
 801b526:	930c      	str	r3, [sp, #48]	; 0x30
 801b528:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b52a:	4413      	add	r3, r2
 801b52c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b52e:	931f      	str	r3, [sp, #124]	; 0x7c
 801b530:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b532:	4413      	add	r3, r2
 801b534:	9320      	str	r3, [sp, #128]	; 0x80
 801b536:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b538:	3b01      	subs	r3, #1
 801b53a:	9311      	str	r3, [sp, #68]	; 0x44
 801b53c:	e6db      	b.n	801b2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b53e:	b149      	cbz	r1, 801b554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801b540:	5cb2      	ldrb	r2, [r6, r2]
 801b542:	4628      	mov	r0, r5
 801b544:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b548:	4422      	add	r2, r4
 801b54a:	462f      	mov	r7, r5
 801b54c:	e771      	b.n	801b432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b54e:	4628      	mov	r0, r5
 801b550:	462a      	mov	r2, r5
 801b552:	e76e      	b.n	801b432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b554:	4628      	mov	r0, r5
 801b556:	462a      	mov	r2, r5
 801b558:	e7f7      	b.n	801b54a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b55a:	b015      	add	sp, #84	; 0x54
 801b55c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b560 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801b560:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b564:	880f      	ldrh	r7, [r1, #0]
 801b566:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801b56a:	023c      	lsls	r4, r7, #8
 801b56c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b570:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801b574:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801b578:	017c      	lsls	r4, r7, #5
 801b57a:	00ff      	lsls	r7, r7, #3
 801b57c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801b580:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801b584:	b2ff      	uxtb	r7, r7
 801b586:	ea4b 0404 	orr.w	r4, fp, r4
 801b58a:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801b58e:	4327      	orrs	r7, r4
 801b590:	fb05 ca0e 	mla	sl, r5, lr, ip
 801b594:	2d00      	cmp	r5, #0
 801b596:	9701      	str	r7, [sp, #4]
 801b598:	eb02 080a 	add.w	r8, r2, sl
 801b59c:	db7e      	blt.n	801b69c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b59e:	45a9      	cmp	r9, r5
 801b5a0:	dd7c      	ble.n	801b69c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b5a2:	f1bc 0f00 	cmp.w	ip, #0
 801b5a6:	db77      	blt.n	801b698 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b5a8:	45e6      	cmp	lr, ip
 801b5aa:	dd75      	ble.n	801b698 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b5ac:	f812 700a 	ldrb.w	r7, [r2, sl]
 801b5b0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b5b4:	441f      	add	r7, r3
 801b5b6:	f11c 0201 	adds.w	r2, ip, #1
 801b5ba:	d472      	bmi.n	801b6a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b5bc:	4596      	cmp	lr, r2
 801b5be:	dd70      	ble.n	801b6a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b5c0:	2800      	cmp	r0, #0
 801b5c2:	d06e      	beq.n	801b6a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b5c4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801b5c8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b5cc:	441c      	add	r4, r3
 801b5ce:	3501      	adds	r5, #1
 801b5d0:	d46b      	bmi.n	801b6aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b5d2:	45a9      	cmp	r9, r5
 801b5d4:	dd69      	ble.n	801b6aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b5d6:	2e00      	cmp	r6, #0
 801b5d8:	d067      	beq.n	801b6aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b5da:	f1bc 0f00 	cmp.w	ip, #0
 801b5de:	db62      	blt.n	801b6a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b5e0:	45e6      	cmp	lr, ip
 801b5e2:	dd60      	ble.n	801b6a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b5e4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801b5e8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b5ec:	441d      	add	r5, r3
 801b5ee:	f11c 0201 	adds.w	r2, ip, #1
 801b5f2:	d45d      	bmi.n	801b6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b5f4:	4596      	cmp	lr, r2
 801b5f6:	dd5b      	ble.n	801b6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b5f8:	2800      	cmp	r0, #0
 801b5fa:	d059      	beq.n	801b6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b5fc:	44c6      	add	lr, r8
 801b5fe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b602:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b606:	4413      	add	r3, r2
 801b608:	b280      	uxth	r0, r0
 801b60a:	f897 e002 	ldrb.w	lr, [r7, #2]
 801b60e:	b2b2      	uxth	r2, r6
 801b610:	f897 9000 	ldrb.w	r9, [r7]
 801b614:	787f      	ldrb	r7, [r7, #1]
 801b616:	fb00 f602 	mul.w	r6, r0, r2
 801b61a:	0100      	lsls	r0, r0, #4
 801b61c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801b620:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801b624:	1b80      	subs	r0, r0, r6
 801b626:	fa1f fc82 	uxth.w	ip, r2
 801b62a:	b282      	uxth	r2, r0
 801b62c:	78a0      	ldrb	r0, [r4, #2]
 801b62e:	eba8 080c 	sub.w	r8, r8, ip
 801b632:	4350      	muls	r0, r2
 801b634:	fa1f f888 	uxth.w	r8, r8
 801b638:	fb08 0e0e 	mla	lr, r8, lr, r0
 801b63c:	78a8      	ldrb	r0, [r5, #2]
 801b63e:	fb0c e000 	mla	r0, ip, r0, lr
 801b642:	f893 e002 	ldrb.w	lr, [r3, #2]
 801b646:	fb06 0e0e 	mla	lr, r6, lr, r0
 801b64a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801b64e:	f894 e000 	ldrb.w	lr, [r4]
 801b652:	fb02 fe0e 	mul.w	lr, r2, lr
 801b656:	fb08 e909 	mla	r9, r8, r9, lr
 801b65a:	f895 e000 	ldrb.w	lr, [r5]
 801b65e:	fb0c 990e 	mla	r9, ip, lr, r9
 801b662:	f893 e000 	ldrb.w	lr, [r3]
 801b666:	785b      	ldrb	r3, [r3, #1]
 801b668:	fb06 9e0e 	mla	lr, r6, lr, r9
 801b66c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b670:	ea4e 0e00 	orr.w	lr, lr, r0
 801b674:	7860      	ldrb	r0, [r4, #1]
 801b676:	4350      	muls	r0, r2
 801b678:	786a      	ldrb	r2, [r5, #1]
 801b67a:	fb08 0007 	mla	r0, r8, r7, r0
 801b67e:	fb0c 0202 	mla	r2, ip, r2, r0
 801b682:	fb06 2303 	mla	r3, r6, r3, r2
 801b686:	095b      	lsrs	r3, r3, #5
 801b688:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b68c:	ea4e 0303 	orr.w	r3, lr, r3
 801b690:	800b      	strh	r3, [r1, #0]
 801b692:	b003      	add	sp, #12
 801b694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b698:	af01      	add	r7, sp, #4
 801b69a:	e78c      	b.n	801b5b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801b69c:	ac01      	add	r4, sp, #4
 801b69e:	4627      	mov	r7, r4
 801b6a0:	e795      	b.n	801b5ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b6a2:	ac01      	add	r4, sp, #4
 801b6a4:	e793      	b.n	801b5ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b6a6:	ad01      	add	r5, sp, #4
 801b6a8:	e7a1      	b.n	801b5ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801b6aa:	ab01      	add	r3, sp, #4
 801b6ac:	461d      	mov	r5, r3
 801b6ae:	e7ab      	b.n	801b608 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801b6b0:	ab01      	add	r3, sp, #4
 801b6b2:	e7a9      	b.n	801b608 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801b6b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6b8:	b08f      	sub	sp, #60	; 0x3c
 801b6ba:	920c      	str	r2, [sp, #48]	; 0x30
 801b6bc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801b6be:	900d      	str	r0, [sp, #52]	; 0x34
 801b6c0:	910a      	str	r1, [sp, #40]	; 0x28
 801b6c2:	6850      	ldr	r0, [r2, #4]
 801b6c4:	9306      	str	r3, [sp, #24]
 801b6c6:	6812      	ldr	r2, [r2, #0]
 801b6c8:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801b6cc:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801b6d0:	fb00 1303 	mla	r3, r0, r3, r1
 801b6d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b6d8:	9307      	str	r3, [sp, #28]
 801b6da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b6dc:	681b      	ldr	r3, [r3, #0]
 801b6de:	9308      	str	r3, [sp, #32]
 801b6e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b6e2:	685c      	ldr	r4, [r3, #4]
 801b6e4:	3404      	adds	r4, #4
 801b6e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b6e8:	2b00      	cmp	r3, #0
 801b6ea:	dc03      	bgt.n	801b6f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b6ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b6ee:	2b00      	cmp	r3, #0
 801b6f0:	f340 81d5 	ble.w	801ba9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801b6f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b6f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b6fe:	1e48      	subs	r0, r1, #1
 801b700:	1e56      	subs	r6, r2, #1
 801b702:	9b06      	ldr	r3, [sp, #24]
 801b704:	2b00      	cmp	r3, #0
 801b706:	f340 80b6 	ble.w	801b876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801b70a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b70e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b712:	d406      	bmi.n	801b722 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b714:	4287      	cmp	r7, r0
 801b716:	da04      	bge.n	801b722 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b718:	2b00      	cmp	r3, #0
 801b71a:	db02      	blt.n	801b722 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b71c:	42b3      	cmp	r3, r6
 801b71e:	f2c0 80ab 	blt.w	801b878 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b722:	3701      	adds	r7, #1
 801b724:	f100 809c 	bmi.w	801b860 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b728:	42b9      	cmp	r1, r7
 801b72a:	f2c0 8099 	blt.w	801b860 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b72e:	3301      	adds	r3, #1
 801b730:	f100 8096 	bmi.w	801b860 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b734:	429a      	cmp	r2, r3
 801b736:	f2c0 8093 	blt.w	801b860 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b73a:	9b06      	ldr	r3, [sp, #24]
 801b73c:	930b      	str	r3, [sp, #44]	; 0x2c
 801b73e:	9b07      	ldr	r3, [sp, #28]
 801b740:	9309      	str	r3, [sp, #36]	; 0x24
 801b742:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b744:	2b00      	cmp	r3, #0
 801b746:	f340 80b4 	ble.w	801b8b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b74a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b74c:	142e      	asrs	r6, r5, #16
 801b74e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b750:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b754:	68c7      	ldr	r7, [r0, #12]
 801b756:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b75a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b75e:	6892      	ldr	r2, [r2, #8]
 801b760:	f100 80fb 	bmi.w	801b95a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b764:	f102 3cff 	add.w	ip, r2, #4294967295
 801b768:	4560      	cmp	r0, ip
 801b76a:	f280 80f6 	bge.w	801b95a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b76e:	2e00      	cmp	r6, #0
 801b770:	f2c0 80f3 	blt.w	801b95a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b774:	f107 3cff 	add.w	ip, r7, #4294967295
 801b778:	4566      	cmp	r6, ip
 801b77a:	f280 80ee 	bge.w	801b95a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801b77e:	b212      	sxth	r2, r2
 801b780:	fb06 0002 	mla	r0, r6, r2, r0
 801b784:	9e08      	ldr	r6, [sp, #32]
 801b786:	1837      	adds	r7, r6, r0
 801b788:	5c30      	ldrb	r0, [r6, r0]
 801b78a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b78e:	eb04 0c08 	add.w	ip, r4, r8
 801b792:	2b00      	cmp	r3, #0
 801b794:	f000 80d3 	beq.w	801b93e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801b798:	787e      	ldrb	r6, [r7, #1]
 801b79a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b79e:	4426      	add	r6, r4
 801b7a0:	2900      	cmp	r1, #0
 801b7a2:	f000 80d4 	beq.w	801b94e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801b7a6:	18b8      	adds	r0, r7, r2
 801b7a8:	5cba      	ldrb	r2, [r7, r2]
 801b7aa:	7840      	ldrb	r0, [r0, #1]
 801b7ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b7b0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b7b4:	4422      	add	r2, r4
 801b7b6:	4420      	add	r0, r4
 801b7b8:	b29b      	uxth	r3, r3
 801b7ba:	78b7      	ldrb	r7, [r6, #2]
 801b7bc:	b289      	uxth	r1, r1
 801b7be:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b7c2:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b7c6:	fb03 f901 	mul.w	r9, r3, r1
 801b7ca:	011b      	lsls	r3, r3, #4
 801b7cc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b7d0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b7d4:	eba3 0309 	sub.w	r3, r3, r9
 801b7d8:	b289      	uxth	r1, r1
 801b7da:	b29b      	uxth	r3, r3
 801b7dc:	ebae 0e01 	sub.w	lr, lr, r1
 801b7e0:	435f      	muls	r7, r3
 801b7e2:	fa1f fe8e 	uxth.w	lr, lr
 801b7e6:	fb0e 770a 	mla	r7, lr, sl, r7
 801b7ea:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b7ee:	fb01 770a 	mla	r7, r1, sl, r7
 801b7f2:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b7f6:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b7fa:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b7fe:	f896 8000 	ldrb.w	r8, [r6]
 801b802:	7876      	ldrb	r6, [r6, #1]
 801b804:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801b808:	fb03 f808 	mul.w	r8, r3, r8
 801b80c:	4373      	muls	r3, r6
 801b80e:	fb0e 8807 	mla	r8, lr, r7, r8
 801b812:	7817      	ldrb	r7, [r2, #0]
 801b814:	fb0e 330c 	mla	r3, lr, ip, r3
 801b818:	fb01 8807 	mla	r8, r1, r7, r8
 801b81c:	7807      	ldrb	r7, [r0, #0]
 801b81e:	fb09 8707 	mla	r7, r9, r7, r8
 801b822:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b826:	ea47 070a 	orr.w	r7, r7, sl
 801b82a:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b82e:	fb01 310a 	mla	r1, r1, sl, r3
 801b832:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b836:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b838:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b83c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b840:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b844:	ea47 070a 	orr.w	r7, r7, sl
 801b848:	801f      	strh	r7, [r3, #0]
 801b84a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b84c:	3302      	adds	r3, #2
 801b84e:	9309      	str	r3, [sp, #36]	; 0x24
 801b850:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b852:	449b      	add	fp, r3
 801b854:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b856:	441d      	add	r5, r3
 801b858:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b85a:	3b01      	subs	r3, #1
 801b85c:	930b      	str	r3, [sp, #44]	; 0x2c
 801b85e:	e770      	b.n	801b742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b860:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b862:	449b      	add	fp, r3
 801b864:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b866:	441d      	add	r5, r3
 801b868:	9b06      	ldr	r3, [sp, #24]
 801b86a:	3b01      	subs	r3, #1
 801b86c:	9306      	str	r3, [sp, #24]
 801b86e:	9b07      	ldr	r3, [sp, #28]
 801b870:	3302      	adds	r3, #2
 801b872:	9307      	str	r3, [sp, #28]
 801b874:	e745      	b.n	801b702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b876:	d023      	beq.n	801b8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801b878:	9b06      	ldr	r3, [sp, #24]
 801b87a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801b87c:	3b01      	subs	r3, #1
 801b87e:	fb00 b003 	mla	r0, r0, r3, fp
 801b882:	1400      	asrs	r0, r0, #16
 801b884:	f53f af59 	bmi.w	801b73a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b888:	3901      	subs	r1, #1
 801b88a:	4288      	cmp	r0, r1
 801b88c:	f6bf af55 	bge.w	801b73a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b890:	991c      	ldr	r1, [sp, #112]	; 0x70
 801b892:	fb01 5303 	mla	r3, r1, r3, r5
 801b896:	141b      	asrs	r3, r3, #16
 801b898:	f53f af4f 	bmi.w	801b73a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b89c:	3a01      	subs	r2, #1
 801b89e:	4293      	cmp	r3, r2
 801b8a0:	f6bf af4b 	bge.w	801b73a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b8a4:	9b06      	ldr	r3, [sp, #24]
 801b8a6:	9309      	str	r3, [sp, #36]	; 0x24
 801b8a8:	9b07      	ldr	r3, [sp, #28]
 801b8aa:	930b      	str	r3, [sp, #44]	; 0x2c
 801b8ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b8ae:	2b00      	cmp	r3, #0
 801b8b0:	dc70      	bgt.n	801b994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801b8b2:	9b06      	ldr	r3, [sp, #24]
 801b8b4:	9a07      	ldr	r2, [sp, #28]
 801b8b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b8ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b8be:	9307      	str	r3, [sp, #28]
 801b8c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b8c2:	2b00      	cmp	r3, #0
 801b8c4:	f340 80eb 	ble.w	801ba9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801b8c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b8cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b8ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b8d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b8d6:	eef0 6a62 	vmov.f32	s13, s5
 801b8da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b8de:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b8e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b8e6:	ee16 ba90 	vmov	fp, s13
 801b8ea:	eef0 6a43 	vmov.f32	s13, s6
 801b8ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b8f2:	ee16 5a90 	vmov	r5, s13
 801b8f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b8fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b8fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b902:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b906:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b90a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b90e:	ee12 2a90 	vmov	r2, s5
 801b912:	eef0 2a47 	vmov.f32	s5, s14
 801b916:	fb92 f3f3 	sdiv	r3, r2, r3
 801b91a:	ee13 2a10 	vmov	r2, s6
 801b91e:	931b      	str	r3, [sp, #108]	; 0x6c
 801b920:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b922:	eeb0 3a67 	vmov.f32	s6, s15
 801b926:	fb92 f3f3 	sdiv	r3, r2, r3
 801b92a:	931c      	str	r3, [sp, #112]	; 0x70
 801b92c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b92e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b930:	3b01      	subs	r3, #1
 801b932:	930a      	str	r3, [sp, #40]	; 0x28
 801b934:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b936:	bf08      	it	eq
 801b938:	4613      	moveq	r3, r2
 801b93a:	9306      	str	r3, [sp, #24]
 801b93c:	e6d3      	b.n	801b6e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b93e:	b149      	cbz	r1, 801b954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b940:	5cba      	ldrb	r2, [r7, r2]
 801b942:	4660      	mov	r0, ip
 801b944:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b948:	4422      	add	r2, r4
 801b94a:	4666      	mov	r6, ip
 801b94c:	e734      	b.n	801b7b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801b94e:	4660      	mov	r0, ip
 801b950:	4662      	mov	r2, ip
 801b952:	e731      	b.n	801b7b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801b954:	4660      	mov	r0, ip
 801b956:	4662      	mov	r2, ip
 801b958:	e7f7      	b.n	801b94a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801b95a:	f110 0c01 	adds.w	ip, r0, #1
 801b95e:	f53f af74 	bmi.w	801b84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b962:	4562      	cmp	r2, ip
 801b964:	f6ff af71 	blt.w	801b84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b968:	f116 0c01 	adds.w	ip, r6, #1
 801b96c:	f53f af6d 	bmi.w	801b84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b970:	4567      	cmp	r7, ip
 801b972:	f6ff af6a 	blt.w	801b84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b976:	b23f      	sxth	r7, r7
 801b978:	b212      	sxth	r2, r2
 801b97a:	9701      	str	r7, [sp, #4]
 801b97c:	9200      	str	r2, [sp, #0]
 801b97e:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b982:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b986:	4623      	mov	r3, r4
 801b988:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b98a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b98e:	f7ff fde7 	bl	801b560 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b992:	e75a      	b.n	801b84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b994:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b996:	ea4f 462b 	mov.w	r6, fp, asr #16
 801b99a:	1428      	asrs	r0, r5, #16
 801b99c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b9a0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b9a4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b9a8:	fb02 6000 	mla	r0, r2, r0, r6
 801b9ac:	9e08      	ldr	r6, [sp, #32]
 801b9ae:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b9b2:	1837      	adds	r7, r6, r0
 801b9b4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b9b8:	eb04 0c08 	add.w	ip, r4, r8
 801b9bc:	2b00      	cmp	r3, #0
 801b9be:	d060      	beq.n	801ba82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801b9c0:	787e      	ldrb	r6, [r7, #1]
 801b9c2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b9c6:	4426      	add	r6, r4
 801b9c8:	2900      	cmp	r1, #0
 801b9ca:	d062      	beq.n	801ba92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801b9cc:	18b8      	adds	r0, r7, r2
 801b9ce:	5cba      	ldrb	r2, [r7, r2]
 801b9d0:	7840      	ldrb	r0, [r0, #1]
 801b9d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b9d6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b9da:	4422      	add	r2, r4
 801b9dc:	4420      	add	r0, r4
 801b9de:	b29b      	uxth	r3, r3
 801b9e0:	78b7      	ldrb	r7, [r6, #2]
 801b9e2:	b289      	uxth	r1, r1
 801b9e4:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b9e8:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b9ec:	fb03 f901 	mul.w	r9, r3, r1
 801b9f0:	011b      	lsls	r3, r3, #4
 801b9f2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b9f6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b9fa:	eba3 0309 	sub.w	r3, r3, r9
 801b9fe:	b289      	uxth	r1, r1
 801ba00:	b29b      	uxth	r3, r3
 801ba02:	ebae 0e01 	sub.w	lr, lr, r1
 801ba06:	435f      	muls	r7, r3
 801ba08:	fa1f fe8e 	uxth.w	lr, lr
 801ba0c:	fb0e 770a 	mla	r7, lr, sl, r7
 801ba10:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ba14:	fb01 770a 	mla	r7, r1, sl, r7
 801ba18:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ba1c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ba20:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ba24:	f896 8000 	ldrb.w	r8, [r6]
 801ba28:	7876      	ldrb	r6, [r6, #1]
 801ba2a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ba2e:	fb03 f808 	mul.w	r8, r3, r8
 801ba32:	4373      	muls	r3, r6
 801ba34:	7856      	ldrb	r6, [r2, #1]
 801ba36:	fb0e 8807 	mla	r8, lr, r7, r8
 801ba3a:	7817      	ldrb	r7, [r2, #0]
 801ba3c:	fb0e 330c 	mla	r3, lr, ip, r3
 801ba40:	fb01 8807 	mla	r8, r1, r7, r8
 801ba44:	7807      	ldrb	r7, [r0, #0]
 801ba46:	fb01 3306 	mla	r3, r1, r6, r3
 801ba4a:	fb09 8707 	mla	r7, r9, r7, r8
 801ba4e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ba52:	ea47 070a 	orr.w	r7, r7, sl
 801ba56:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ba5a:	fb09 3a0a 	mla	sl, r9, sl, r3
 801ba5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ba60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ba64:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ba68:	ea47 070a 	orr.w	r7, r7, sl
 801ba6c:	f823 7b02 	strh.w	r7, [r3], #2
 801ba70:	930b      	str	r3, [sp, #44]	; 0x2c
 801ba72:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ba74:	449b      	add	fp, r3
 801ba76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ba78:	441d      	add	r5, r3
 801ba7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba7c:	3b01      	subs	r3, #1
 801ba7e:	9309      	str	r3, [sp, #36]	; 0x24
 801ba80:	e714      	b.n	801b8ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ba82:	b149      	cbz	r1, 801ba98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801ba84:	5cba      	ldrb	r2, [r7, r2]
 801ba86:	4660      	mov	r0, ip
 801ba88:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ba8c:	4422      	add	r2, r4
 801ba8e:	4666      	mov	r6, ip
 801ba90:	e7a5      	b.n	801b9de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801ba92:	4660      	mov	r0, ip
 801ba94:	4662      	mov	r2, ip
 801ba96:	e7a2      	b.n	801b9de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801ba98:	4660      	mov	r0, ip
 801ba9a:	4662      	mov	r2, ip
 801ba9c:	e7f7      	b.n	801ba8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801ba9e:	b00f      	add	sp, #60	; 0x3c
 801baa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801baa4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801baa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801baa8:	b085      	sub	sp, #20
 801baaa:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801baae:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801bab2:	9102      	str	r1, [sp, #8]
 801bab4:	2c00      	cmp	r4, #0
 801bab6:	fb04 710c 	mla	r1, r4, ip, r7
 801baba:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801babe:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801bac2:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801bac6:	eb02 0e01 	add.w	lr, r2, r1
 801baca:	f2c0 8122 	blt.w	801bd12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bace:	45a0      	cmp	r8, r4
 801bad0:	f340 811f 	ble.w	801bd12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bad4:	2f00      	cmp	r7, #0
 801bad6:	f2c0 811a 	blt.w	801bd0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bada:	45bc      	cmp	ip, r7
 801badc:	f340 8117 	ble.w	801bd0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bae0:	5c52      	ldrb	r2, [r2, r1]
 801bae2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801bae6:	1c7a      	adds	r2, r7, #1
 801bae8:	f100 8116 	bmi.w	801bd18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801baec:	4594      	cmp	ip, r2
 801baee:	f340 8113 	ble.w	801bd18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801baf2:	2e00      	cmp	r6, #0
 801baf4:	f000 8112 	beq.w	801bd1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801baf8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bafc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bb00:	3401      	adds	r4, #1
 801bb02:	f100 810f 	bmi.w	801bd24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bb06:	45a0      	cmp	r8, r4
 801bb08:	f340 810c 	ble.w	801bd24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bb0c:	2800      	cmp	r0, #0
 801bb0e:	f000 810c 	beq.w	801bd2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801bb12:	2f00      	cmp	r7, #0
 801bb14:	f2c0 8104 	blt.w	801bd20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bb18:	45bc      	cmp	ip, r7
 801bb1a:	f340 8101 	ble.w	801bd20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bb1e:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801bb22:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801bb26:	3701      	adds	r7, #1
 801bb28:	f100 8102 	bmi.w	801bd30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bb2c:	45bc      	cmp	ip, r7
 801bb2e:	f340 80ff 	ble.w	801bd30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bb32:	2e00      	cmp	r6, #0
 801bb34:	f000 80fe 	beq.w	801bd34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801bb38:	44f4      	add	ip, lr
 801bb3a:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801bb3e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801bb42:	b2b6      	uxth	r6, r6
 801bb44:	b280      	uxth	r0, r0
 801bb46:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801bb4a:	fb00 fe06 	mul.w	lr, r0, r6
 801bb4e:	0136      	lsls	r6, r6, #4
 801bb50:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801bb54:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801bb58:	eba6 070e 	sub.w	r7, r6, lr
 801bb5c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801bb60:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801bb64:	b280      	uxth	r0, r0
 801bb66:	b2bf      	uxth	r7, r7
 801bb68:	1a1b      	subs	r3, r3, r0
 801bb6a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801bb6e:	fb0a f607 	mul.w	r6, sl, r7
 801bb72:	b29b      	uxth	r3, r3
 801bb74:	fb0b 6603 	mla	r6, fp, r3, r6
 801bb78:	fb00 6609 	mla	r6, r0, r9, r6
 801bb7c:	fb0e 6608 	mla	r6, lr, r8, r6
 801bb80:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801bb84:	9600      	str	r6, [sp, #0]
 801bb86:	2e00      	cmp	r6, #0
 801bb88:	f000 80be 	beq.w	801bd08 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801bb8c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801bb90:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801bb94:	9e02      	ldr	r6, [sp, #8]
 801bb96:	fb0b fc0c 	mul.w	ip, fp, ip
 801bb9a:	fb0b f505 	mul.w	r5, fp, r5
 801bb9e:	8836      	ldrh	r6, [r6, #0]
 801bba0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801bba4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801bba8:	9501      	str	r5, [sp, #4]
 801bbaa:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801bbae:	44dc      	add	ip, fp
 801bbb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbb4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801bbb8:	9503      	str	r5, [sp, #12]
 801bbba:	9d01      	ldr	r5, [sp, #4]
 801bbbc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801bbc0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bbc4:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801bbc8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801bbcc:	fb0a fc0c 	mul.w	ip, sl, ip
 801bbd0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801bbd4:	fb0a fa01 	mul.w	sl, sl, r1
 801bbd8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801bbdc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801bbe0:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801bbe4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801bbe8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801bbec:	4465      	add	r5, ip
 801bbee:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bbf2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801bbf6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbfa:	fb09 fc0c 	mul.w	ip, r9, ip
 801bbfe:	0a2d      	lsrs	r5, r5, #8
 801bc00:	fb09 f904 	mul.w	r9, r9, r4
 801bc04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc08:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801bc0c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801bc10:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801bc14:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801bc18:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801bc1c:	437d      	muls	r5, r7
 801bc1e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801bc22:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801bc26:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bc2a:	4461      	add	r1, ip
 801bc2c:	fb08 f404 	mul.w	r4, r8, r4
 801bc30:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bc34:	fb08 f802 	mul.w	r8, r8, r2
 801bc38:	0a09      	lsrs	r1, r1, #8
 801bc3a:	0a22      	lsrs	r2, r4, #8
 801bc3c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801bc40:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801bc44:	fb07 f70a 	mul.w	r7, r7, sl
 801bc48:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bc4c:	4414      	add	r4, r2
 801bc4e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801bc52:	0a24      	lsrs	r4, r4, #8
 801bc54:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801bc58:	9a03      	ldr	r2, [sp, #12]
 801bc5a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801bc5e:	fb02 5503 	mla	r5, r2, r3, r5
 801bc62:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801bc66:	9a00      	ldr	r2, [sp, #0]
 801bc68:	fb04 540e 	mla	r4, r4, lr, r5
 801bc6c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801bc70:	1235      	asrs	r5, r6, #8
 801bc72:	fb01 4100 	mla	r1, r1, r0, r4
 801bc76:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bc7a:	0a09      	lsrs	r1, r1, #8
 801bc7c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801bc80:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801bc84:	fb03 7101 	mla	r1, r3, r1, r7
 801bc88:	fb0e 1e08 	mla	lr, lr, r8, r1
 801bc8c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801bc90:	fb00 e101 	mla	r1, r0, r1, lr
 801bc94:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801bc98:	b287      	uxth	r7, r0
 801bc9a:	0a09      	lsrs	r1, r1, #8
 801bc9c:	437a      	muls	r2, r7
 801bc9e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801bca2:	1c53      	adds	r3, r2, #1
 801bca4:	4321      	orrs	r1, r4
 801bca6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bcaa:	0c0a      	lsrs	r2, r1, #16
 801bcac:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801bcb0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801bcb4:	b2c8      	uxtb	r0, r1
 801bcb6:	fb12 f207 	smulbb	r2, r2, r7
 801bcba:	fb14 f407 	smulbb	r4, r4, r7
 801bcbe:	b2db      	uxtb	r3, r3
 801bcc0:	fb10 f007 	smulbb	r0, r0, r7
 801bcc4:	fb05 2503 	mla	r5, r5, r3, r2
 801bcc8:	10f2      	asrs	r2, r6, #3
 801bcca:	00f6      	lsls	r6, r6, #3
 801bccc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bcd0:	b2ad      	uxth	r5, r5
 801bcd2:	b2f6      	uxtb	r6, r6
 801bcd4:	fb02 4203 	mla	r2, r2, r3, r4
 801bcd8:	fb06 0303 	mla	r3, r6, r3, r0
 801bcdc:	b294      	uxth	r4, r2
 801bcde:	b299      	uxth	r1, r3
 801bce0:	1c6b      	adds	r3, r5, #1
 801bce2:	1c62      	adds	r2, r4, #1
 801bce4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bce8:	1c4b      	adds	r3, r1, #1
 801bcea:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801bcee:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bcf2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bcf6:	0952      	lsrs	r2, r2, #5
 801bcf8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bcfc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd00:	432b      	orrs	r3, r5
 801bd02:	4313      	orrs	r3, r2
 801bd04:	9a02      	ldr	r2, [sp, #8]
 801bd06:	8013      	strh	r3, [r2, #0]
 801bd08:	b005      	add	sp, #20
 801bd0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd0e:	2500      	movs	r5, #0
 801bd10:	e6e9      	b.n	801bae6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801bd12:	2100      	movs	r1, #0
 801bd14:	460d      	mov	r5, r1
 801bd16:	e6f3      	b.n	801bb00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd18:	2100      	movs	r1, #0
 801bd1a:	e6f1      	b.n	801bb00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd1c:	4631      	mov	r1, r6
 801bd1e:	e6ef      	b.n	801bb00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801bd20:	2400      	movs	r4, #0
 801bd22:	e700      	b.n	801bb26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801bd24:	2200      	movs	r2, #0
 801bd26:	4614      	mov	r4, r2
 801bd28:	e70b      	b.n	801bb42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bd2a:	4602      	mov	r2, r0
 801bd2c:	4604      	mov	r4, r0
 801bd2e:	e708      	b.n	801bb42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bd30:	2200      	movs	r2, #0
 801bd32:	e706      	b.n	801bb42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801bd34:	4632      	mov	r2, r6
 801bd36:	e704      	b.n	801bb42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801bd38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd3c:	b09f      	sub	sp, #124	; 0x7c
 801bd3e:	921b      	str	r2, [sp, #108]	; 0x6c
 801bd40:	9309      	str	r3, [sp, #36]	; 0x24
 801bd42:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801bd44:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801bd48:	901d      	str	r0, [sp, #116]	; 0x74
 801bd4a:	931c      	str	r3, [sp, #112]	; 0x70
 801bd4c:	6850      	ldr	r0, [r2, #4]
 801bd4e:	9119      	str	r1, [sp, #100]	; 0x64
 801bd50:	6812      	ldr	r2, [r2, #0]
 801bd52:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801bd54:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801bd58:	fb00 1303 	mla	r3, r0, r3, r1
 801bd5c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bd60:	930c      	str	r3, [sp, #48]	; 0x30
 801bd62:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bd64:	681b      	ldr	r3, [r3, #0]
 801bd66:	9312      	str	r3, [sp, #72]	; 0x48
 801bd68:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bd6a:	685e      	ldr	r6, [r3, #4]
 801bd6c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801bd70:	3604      	adds	r6, #4
 801bd72:	930d      	str	r3, [sp, #52]	; 0x34
 801bd74:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801bd76:	2b00      	cmp	r3, #0
 801bd78:	dc03      	bgt.n	801bd82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bd7a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801bd7c:	2b00      	cmp	r3, #0
 801bd7e:	f340 8387 	ble.w	801c490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801bd82:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bd84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bd88:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bd8c:	1e48      	subs	r0, r1, #1
 801bd8e:	1e57      	subs	r7, r2, #1
 801bd90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd92:	2b00      	cmp	r3, #0
 801bd94:	f340 8194 	ble.w	801c0c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801bd98:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801bd9a:	142b      	asrs	r3, r5, #16
 801bd9c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bda0:	d406      	bmi.n	801bdb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bda2:	4584      	cmp	ip, r0
 801bda4:	da04      	bge.n	801bdb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bda6:	2b00      	cmp	r3, #0
 801bda8:	db02      	blt.n	801bdb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bdaa:	42bb      	cmp	r3, r7
 801bdac:	f2c0 8189 	blt.w	801c0c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bdb0:	f11c 0c01 	adds.w	ip, ip, #1
 801bdb4:	f100 8177 	bmi.w	801c0a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bdb8:	4561      	cmp	r1, ip
 801bdba:	f2c0 8174 	blt.w	801c0a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bdbe:	3301      	adds	r3, #1
 801bdc0:	f100 8171 	bmi.w	801c0a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bdc4:	429a      	cmp	r2, r3
 801bdc6:	f2c0 816e 	blt.w	801c0a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bdca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bdcc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bdce:	931a      	str	r3, [sp, #104]	; 0x68
 801bdd0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801bdd2:	2b00      	cmp	r3, #0
 801bdd4:	f340 8193 	ble.w	801c0fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801bdd8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bdda:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801bdde:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801bde2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bde6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bde8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801bdec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bdee:	141b      	asrs	r3, r3, #16
 801bdf0:	f100 81d6 	bmi.w	801c1a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801bdf4:	f100 38ff 	add.w	r8, r0, #4294967295
 801bdf8:	4543      	cmp	r3, r8
 801bdfa:	f280 81d1 	bge.w	801c1a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801bdfe:	f1bc 0f00 	cmp.w	ip, #0
 801be02:	f2c0 81cd 	blt.w	801c1a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801be06:	f10e 38ff 	add.w	r8, lr, #4294967295
 801be0a:	45c4      	cmp	ip, r8
 801be0c:	f280 81c8 	bge.w	801c1a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801be10:	b200      	sxth	r0, r0
 801be12:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801be14:	fb0c 3300 	mla	r3, ip, r0, r3
 801be18:	eb04 0803 	add.w	r8, r4, r3
 801be1c:	5ce3      	ldrb	r3, [r4, r3]
 801be1e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801be22:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801be26:	2a00      	cmp	r2, #0
 801be28:	f000 81af 	beq.w	801c18a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801be2c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801be30:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801be34:	940e      	str	r4, [sp, #56]	; 0x38
 801be36:	0e24      	lsrs	r4, r4, #24
 801be38:	9415      	str	r4, [sp, #84]	; 0x54
 801be3a:	b179      	cbz	r1, 801be5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801be3c:	eb08 0c00 	add.w	ip, r8, r0
 801be40:	f818 0000 	ldrb.w	r0, [r8, r0]
 801be44:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801be48:	900a      	str	r0, [sp, #40]	; 0x28
 801be4a:	0e00      	lsrs	r0, r0, #24
 801be4c:	9013      	str	r0, [sp, #76]	; 0x4c
 801be4e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801be52:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801be56:	900f      	str	r0, [sp, #60]	; 0x3c
 801be58:	0e00      	lsrs	r0, r0, #24
 801be5a:	9016      	str	r0, [sp, #88]	; 0x58
 801be5c:	b292      	uxth	r2, r2
 801be5e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801be60:	b289      	uxth	r1, r1
 801be62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801be64:	fb02 f901 	mul.w	r9, r2, r1
 801be68:	0112      	lsls	r2, r2, #4
 801be6a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801be6e:	eba2 0809 	sub.w	r8, r2, r9
 801be72:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801be76:	b289      	uxth	r1, r1
 801be78:	fa1f f888 	uxth.w	r8, r8
 801be7c:	1a52      	subs	r2, r2, r1
 801be7e:	fb08 f000 	mul.w	r0, r8, r0
 801be82:	b292      	uxth	r2, r2
 801be84:	fb02 000e 	mla	r0, r2, lr, r0
 801be88:	fb01 0004 	mla	r0, r1, r4, r0
 801be8c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801be8e:	fb09 0004 	mla	r0, r9, r4, r0
 801be92:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801be96:	2800      	cmp	r0, #0
 801be98:	f000 80fa 	beq.w	801c090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801be9c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801bea0:	d01b      	beq.n	801beda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801bea2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bea6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801beaa:	fb0e fa0a 	mul.w	sl, lr, sl
 801beae:	fb0e fe03 	mul.w	lr, lr, r3
 801beb2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801beb6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801beba:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801bebe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bec2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bec6:	4453      	add	r3, sl
 801bec8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801becc:	0a1b      	lsrs	r3, r3, #8
 801bece:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bed2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bed6:	ea43 030c 	orr.w	r3, r3, ip
 801beda:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bedc:	2cff      	cmp	r4, #255	; 0xff
 801bede:	d021      	beq.n	801bf24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801bee0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bee2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bee6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bee8:	fb04 fb0b 	mul.w	fp, r4, fp
 801beec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801beee:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bef2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bef4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bef8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801befc:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bf04:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bf08:	44de      	add	lr, fp
 801bf0a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf16:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bf1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bf1e:	ea4e 040a 	orr.w	r4, lr, sl
 801bf22:	940e      	str	r4, [sp, #56]	; 0x38
 801bf24:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bf26:	2cff      	cmp	r4, #255	; 0xff
 801bf28:	d021      	beq.n	801bf6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bf2a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bf2c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bf30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bf32:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf36:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bf38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bf3c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bf3e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf42:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bf46:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bf4e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bf52:	44de      	add	lr, fp
 801bf54:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf58:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bf64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bf68:	ea4e 040a 	orr.w	r4, lr, sl
 801bf6c:	940a      	str	r4, [sp, #40]	; 0x28
 801bf6e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bf70:	2cff      	cmp	r4, #255	; 0xff
 801bf72:	d021      	beq.n	801bfb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801bf74:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bf76:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bf7a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bf7c:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf80:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bf82:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bf86:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bf88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf8c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bf90:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bf98:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bf9c:	44de      	add	lr, fp
 801bf9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bfa2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfa6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfaa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bfae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bfb2:	ea4e 040a 	orr.w	r4, lr, sl
 801bfb6:	940f      	str	r4, [sp, #60]	; 0x3c
 801bfb8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bfba:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801bfbe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bfc2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bfc6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bfc8:	fb08 fc0c 	mul.w	ip, r8, ip
 801bfcc:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bfd0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bfd4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bfd6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801bfda:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bfde:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bfe0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bfe4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801bfe8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bfea:	fb08 f80e 	mul.w	r8, r8, lr
 801bfee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bff2:	fb02 8303 	mla	r3, r2, r3, r8
 801bff6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bff8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bffc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c000:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c002:	fb01 330a 	mla	r3, r1, sl, r3
 801c006:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801c00a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c00c:	fb09 3901 	mla	r9, r9, r1, r3
 801c010:	883b      	ldrh	r3, [r7, #0]
 801c012:	4342      	muls	r2, r0
 801c014:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c018:	1c50      	adds	r0, r2, #1
 801c01a:	1219      	asrs	r1, r3, #8
 801c01c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801c020:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c024:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c028:	ea4c 0c09 	orr.w	ip, ip, r9
 801c02c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c030:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c034:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c038:	b2c0      	uxtb	r0, r0
 801c03a:	fb12 f204 	smulbb	r2, r2, r4
 801c03e:	fa5f fc8c 	uxtb.w	ip, ip
 801c042:	fb1e fe04 	smulbb	lr, lr, r4
 801c046:	fb01 2100 	mla	r1, r1, r0, r2
 801c04a:	10da      	asrs	r2, r3, #3
 801c04c:	fb1c fc04 	smulbb	ip, ip, r4
 801c050:	00db      	lsls	r3, r3, #3
 801c052:	b289      	uxth	r1, r1
 801c054:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c058:	b2db      	uxtb	r3, r3
 801c05a:	fb02 e200 	mla	r2, r2, r0, lr
 801c05e:	fb03 c300 	mla	r3, r3, r0, ip
 801c062:	b292      	uxth	r2, r2
 801c064:	fa1f fc83 	uxth.w	ip, r3
 801c068:	1c4b      	adds	r3, r1, #1
 801c06a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c06e:	f10c 0301 	add.w	r3, ip, #1
 801c072:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c076:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c07a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c07e:	430b      	orrs	r3, r1
 801c080:	1c51      	adds	r1, r2, #1
 801c082:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c086:	0952      	lsrs	r2, r2, #5
 801c088:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c08c:	4313      	orrs	r3, r2
 801c08e:	803b      	strh	r3, [r7, #0]
 801c090:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c092:	3702      	adds	r7, #2
 801c094:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c096:	441a      	add	r2, r3
 801c098:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c09a:	441d      	add	r5, r3
 801c09c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801c09e:	9229      	str	r2, [sp, #164]	; 0xa4
 801c0a0:	3b01      	subs	r3, #1
 801c0a2:	931a      	str	r3, [sp, #104]	; 0x68
 801c0a4:	e694      	b.n	801bdd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c0a6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c0a8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801c0aa:	441c      	add	r4, r3
 801c0ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c0ae:	441d      	add	r5, r3
 801c0b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c0b2:	9429      	str	r4, [sp, #164]	; 0xa4
 801c0b4:	3b01      	subs	r3, #1
 801c0b6:	9309      	str	r3, [sp, #36]	; 0x24
 801c0b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c0ba:	3302      	adds	r3, #2
 801c0bc:	930c      	str	r3, [sp, #48]	; 0x30
 801c0be:	e667      	b.n	801bd90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c0c0:	d024      	beq.n	801c10c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801c0c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c0c4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801c0c6:	3b01      	subs	r3, #1
 801c0c8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801c0ca:	fb00 4003 	mla	r0, r0, r3, r4
 801c0ce:	1400      	asrs	r0, r0, #16
 801c0d0:	f53f ae7b 	bmi.w	801bdca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c0d4:	3901      	subs	r1, #1
 801c0d6:	4288      	cmp	r0, r1
 801c0d8:	f6bf ae77 	bge.w	801bdca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c0dc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801c0de:	fb01 5303 	mla	r3, r1, r3, r5
 801c0e2:	141b      	asrs	r3, r3, #16
 801c0e4:	f53f ae71 	bmi.w	801bdca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c0e8:	3a01      	subs	r2, #1
 801c0ea:	4293      	cmp	r3, r2
 801c0ec:	f6bf ae6d 	bge.w	801bdca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c0f0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801c0f4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801c0f8:	f1bb 0f00 	cmp.w	fp, #0
 801c0fc:	dc70      	bgt.n	801c1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801c0fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c100:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c104:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c106:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c10a:	930c      	str	r3, [sp, #48]	; 0x30
 801c10c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801c10e:	2b00      	cmp	r3, #0
 801c110:	f340 81be 	ble.w	801c490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801c114:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c118:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c11a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c11e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c122:	eef0 6a62 	vmov.f32	s13, s5
 801c126:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c12a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c12e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c132:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801c136:	eef0 6a43 	vmov.f32	s13, s6
 801c13a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c13e:	ee16 5a90 	vmov	r5, s13
 801c142:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c146:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c14a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c14e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c152:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c156:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c15a:	ee12 2a90 	vmov	r2, s5
 801c15e:	eef0 2a47 	vmov.f32	s5, s14
 801c162:	fb92 f3f3 	sdiv	r3, r2, r3
 801c166:	ee13 2a10 	vmov	r2, s6
 801c16a:	932b      	str	r3, [sp, #172]	; 0xac
 801c16c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c16e:	eeb0 3a67 	vmov.f32	s6, s15
 801c172:	fb92 f3f3 	sdiv	r3, r2, r3
 801c176:	932c      	str	r3, [sp, #176]	; 0xb0
 801c178:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801c17a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801c17c:	3b01      	subs	r3, #1
 801c17e:	9319      	str	r3, [sp, #100]	; 0x64
 801c180:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c182:	bf08      	it	eq
 801c184:	4613      	moveq	r3, r2
 801c186:	9309      	str	r3, [sp, #36]	; 0x24
 801c188:	e5f4      	b.n	801bd74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c18a:	2900      	cmp	r1, #0
 801c18c:	f43f ae66 	beq.w	801be5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801c190:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c194:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c198:	900a      	str	r0, [sp, #40]	; 0x28
 801c19a:	0e00      	lsrs	r0, r0, #24
 801c19c:	9013      	str	r0, [sp, #76]	; 0x4c
 801c19e:	e65d      	b.n	801be5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801c1a0:	f113 0801 	adds.w	r8, r3, #1
 801c1a4:	f53f af74 	bmi.w	801c090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c1a8:	4540      	cmp	r0, r8
 801c1aa:	f6ff af71 	blt.w	801c090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c1ae:	f11c 0801 	adds.w	r8, ip, #1
 801c1b2:	f53f af6d 	bmi.w	801c090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c1b6:	45c6      	cmp	lr, r8
 801c1b8:	f6ff af6a 	blt.w	801c090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c1bc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801c1be:	b200      	sxth	r0, r0
 801c1c0:	9302      	str	r3, [sp, #8]
 801c1c2:	fa0f f38e 	sxth.w	r3, lr
 801c1c6:	9000      	str	r0, [sp, #0]
 801c1c8:	9301      	str	r3, [sp, #4]
 801c1ca:	4633      	mov	r3, r6
 801c1cc:	981d      	ldr	r0, [sp, #116]	; 0x74
 801c1ce:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c1d2:	e9cd c203 	strd	ip, r2, [sp, #12]
 801c1d6:	4639      	mov	r1, r7
 801c1d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c1da:	f7ff fc63 	bl	801baa4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801c1de:	e757      	b.n	801c090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c1e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c1e2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c1e6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801c1e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c1ec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c1ee:	1427      	asrs	r7, r4, #16
 801c1f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c1f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c1f6:	142b      	asrs	r3, r5, #16
 801c1f8:	fb01 7303 	mla	r3, r1, r3, r7
 801c1fc:	18e7      	adds	r7, r4, r3
 801c1fe:	5ce3      	ldrb	r3, [r4, r3]
 801c200:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c204:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c208:	2a00      	cmp	r2, #0
 801c20a:	f000 8137 	beq.w	801c47c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801c20e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c212:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c216:	9410      	str	r4, [sp, #64]	; 0x40
 801c218:	0e24      	lsrs	r4, r4, #24
 801c21a:	9417      	str	r4, [sp, #92]	; 0x5c
 801c21c:	b170      	cbz	r0, 801c23c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801c21e:	eb07 0e01 	add.w	lr, r7, r1
 801c222:	5c79      	ldrb	r1, [r7, r1]
 801c224:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c228:	910b      	str	r1, [sp, #44]	; 0x2c
 801c22a:	0e09      	lsrs	r1, r1, #24
 801c22c:	9114      	str	r1, [sp, #80]	; 0x50
 801c22e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c232:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c236:	9111      	str	r1, [sp, #68]	; 0x44
 801c238:	0e09      	lsrs	r1, r1, #24
 801c23a:	9118      	str	r1, [sp, #96]	; 0x60
 801c23c:	b292      	uxth	r2, r2
 801c23e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801c240:	b280      	uxth	r0, r0
 801c242:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c244:	fb02 f800 	mul.w	r8, r2, r0
 801c248:	0112      	lsls	r2, r2, #4
 801c24a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c24e:	eba2 0e08 	sub.w	lr, r2, r8
 801c252:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801c256:	b280      	uxth	r0, r0
 801c258:	fa1f fe8e 	uxth.w	lr, lr
 801c25c:	1a12      	subs	r2, r2, r0
 801c25e:	fb0e f101 	mul.w	r1, lr, r1
 801c262:	b292      	uxth	r2, r2
 801c264:	fb02 110c 	mla	r1, r2, ip, r1
 801c268:	fb00 1104 	mla	r1, r0, r4, r1
 801c26c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c26e:	fb08 1104 	mla	r1, r8, r4, r1
 801c272:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c276:	2900      	cmp	r1, #0
 801c278:	f000 80f5 	beq.w	801c466 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801c27c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c280:	d019      	beq.n	801c2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801c282:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c286:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c28a:	fb0c fa0a 	mul.w	sl, ip, sl
 801c28e:	fb0c fc03 	mul.w	ip, ip, r3
 801c292:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c296:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c29a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c29e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c2a2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c2a6:	4453      	add	r3, sl
 801c2a8:	0a3f      	lsrs	r7, r7, #8
 801c2aa:	0a1b      	lsrs	r3, r3, #8
 801c2ac:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c2b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c2b4:	433b      	orrs	r3, r7
 801c2b6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c2b8:	2cff      	cmp	r4, #255	; 0xff
 801c2ba:	d020      	beq.n	801c2fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801c2bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c2be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c2c2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c2c4:	4367      	muls	r7, r4
 801c2c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c2c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c2cc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c2d0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c2d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c2d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c2da:	fb04 fa0a 	mul.w	sl, r4, sl
 801c2de:	44bc      	add	ip, r7
 801c2e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c2e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c2e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c2ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c2f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c2f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c2f8:	ea4c 040a 	orr.w	r4, ip, sl
 801c2fc:	9410      	str	r4, [sp, #64]	; 0x40
 801c2fe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c300:	2cff      	cmp	r4, #255	; 0xff
 801c302:	d020      	beq.n	801c346 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801c304:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c306:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c30a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c30c:	4367      	muls	r7, r4
 801c30e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c310:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c314:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c318:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c31a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c31e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c322:	fb04 fa0a 	mul.w	sl, r4, sl
 801c326:	44bc      	add	ip, r7
 801c328:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c32c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c330:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c334:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c338:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c33c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c340:	ea4c 040a 	orr.w	r4, ip, sl
 801c344:	940b      	str	r4, [sp, #44]	; 0x2c
 801c346:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c348:	2cff      	cmp	r4, #255	; 0xff
 801c34a:	d020      	beq.n	801c38e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801c34c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c34e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c352:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c354:	4367      	muls	r7, r4
 801c356:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c358:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c35c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c360:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c362:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c366:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c36a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c36e:	44bc      	add	ip, r7
 801c370:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c374:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c378:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c37c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c380:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c384:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c388:	ea4c 040a 	orr.w	r4, ip, sl
 801c38c:	9411      	str	r4, [sp, #68]	; 0x44
 801c38e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c390:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c394:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c398:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c39c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c39e:	fb0e f707 	mul.w	r7, lr, r7
 801c3a2:	fb02 770c 	mla	r7, r2, ip, r7
 801c3a6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c3aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c3ac:	fb00 770c 	mla	r7, r0, ip, r7
 801c3b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c3b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c3b6:	fb08 770c 	mla	r7, r8, ip, r7
 801c3ba:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801c3be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c3c0:	fb0e fe0c 	mul.w	lr, lr, ip
 801c3c4:	0a3f      	lsrs	r7, r7, #8
 801c3c6:	fb02 e303 	mla	r3, r2, r3, lr
 801c3ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c3cc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c3d0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c3d4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c3d6:	fb00 330a 	mla	r3, r0, sl, r3
 801c3da:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801c3de:	f8b9 0000 	ldrh.w	r0, [r9]
 801c3e2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c3e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c3e8:	1202      	asrs	r2, r0, #8
 801c3ea:	434b      	muls	r3, r1
 801c3ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3f0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c3f4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c3f8:	1c59      	adds	r1, r3, #1
 801c3fa:	ea47 070c 	orr.w	r7, r7, ip
 801c3fe:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c402:	0c3b      	lsrs	r3, r7, #16
 801c404:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c408:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c40c:	b2ff      	uxtb	r7, r7
 801c40e:	fb13 f304 	smulbb	r3, r3, r4
 801c412:	b2c9      	uxtb	r1, r1
 801c414:	fb1c fc04 	smulbb	ip, ip, r4
 801c418:	fb02 3201 	mla	r2, r2, r1, r3
 801c41c:	10c3      	asrs	r3, r0, #3
 801c41e:	fb17 f704 	smulbb	r7, r7, r4
 801c422:	00c0      	lsls	r0, r0, #3
 801c424:	b292      	uxth	r2, r2
 801c426:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c42a:	b2c0      	uxtb	r0, r0
 801c42c:	fb03 c301 	mla	r3, r3, r1, ip
 801c430:	f102 0c01 	add.w	ip, r2, #1
 801c434:	fb00 7001 	mla	r0, r0, r1, r7
 801c438:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c43c:	b280      	uxth	r0, r0
 801c43e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801c442:	b29b      	uxth	r3, r3
 801c444:	1c42      	adds	r2, r0, #1
 801c446:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c44a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c44e:	ea42 020c 	orr.w	r2, r2, ip
 801c452:	f103 0c01 	add.w	ip, r3, #1
 801c456:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c45a:	095b      	lsrs	r3, r3, #5
 801c45c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c460:	431a      	orrs	r2, r3
 801c462:	f8a9 2000 	strh.w	r2, [r9]
 801c466:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c468:	f109 0902 	add.w	r9, r9, #2
 801c46c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c46e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c472:	441a      	add	r2, r3
 801c474:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c476:	9229      	str	r2, [sp, #164]	; 0xa4
 801c478:	441d      	add	r5, r3
 801c47a:	e63d      	b.n	801c0f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c47c:	2800      	cmp	r0, #0
 801c47e:	f43f aedd 	beq.w	801c23c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801c482:	5c79      	ldrb	r1, [r7, r1]
 801c484:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c488:	910b      	str	r1, [sp, #44]	; 0x2c
 801c48a:	0e09      	lsrs	r1, r1, #24
 801c48c:	9114      	str	r1, [sp, #80]	; 0x50
 801c48e:	e6d5      	b.n	801c23c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801c490:	b01f      	add	sp, #124	; 0x7c
 801c492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c496 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801c496:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c49a:	b089      	sub	sp, #36	; 0x24
 801c49c:	9101      	str	r1, [sp, #4]
 801c49e:	9801      	ldr	r0, [sp, #4]
 801c4a0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801c4a4:	8800      	ldrh	r0, [r0, #0]
 801c4a6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801c4aa:	1206      	asrs	r6, r0, #8
 801c4ac:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801c4b0:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801c4b4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c4b8:	9602      	str	r6, [sp, #8]
 801c4ba:	10c6      	asrs	r6, r0, #3
 801c4bc:	00c0      	lsls	r0, r0, #3
 801c4be:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c4c2:	b2c0      	uxtb	r0, r0
 801c4c4:	9603      	str	r6, [sp, #12]
 801c4c6:	9004      	str	r0, [sp, #16]
 801c4c8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801c4cc:	fb07 100c 	mla	r0, r7, ip, r1
 801c4d0:	2f00      	cmp	r7, #0
 801c4d2:	eb02 0e00 	add.w	lr, r2, r0
 801c4d6:	f2c0 810a 	blt.w	801c6ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c4da:	45b8      	cmp	r8, r7
 801c4dc:	f340 8107 	ble.w	801c6ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c4e0:	2900      	cmp	r1, #0
 801c4e2:	f2c0 8102 	blt.w	801c6ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c4e6:	458c      	cmp	ip, r1
 801c4e8:	f340 80ff 	ble.w	801c6ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c4ec:	5c12      	ldrb	r2, [r2, r0]
 801c4ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801c4f2:	1c4a      	adds	r2, r1, #1
 801c4f4:	f100 80fe 	bmi.w	801c6f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c4f8:	4594      	cmp	ip, r2
 801c4fa:	f340 80fb 	ble.w	801c6f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c4fe:	2d00      	cmp	r5, #0
 801c500:	f000 80fa 	beq.w	801c6f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801c504:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c508:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801c50c:	3701      	adds	r7, #1
 801c50e:	f100 80f7 	bmi.w	801c700 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c512:	45b8      	cmp	r8, r7
 801c514:	f340 80f4 	ble.w	801c700 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c518:	2c00      	cmp	r4, #0
 801c51a:	f000 80f4 	beq.w	801c706 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801c51e:	2900      	cmp	r1, #0
 801c520:	eb0e 020c 	add.w	r2, lr, ip
 801c524:	f2c0 80ea 	blt.w	801c6fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c528:	458c      	cmp	ip, r1
 801c52a:	f340 80e7 	ble.w	801c6fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c52e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801c532:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801c536:	3101      	adds	r1, #1
 801c538:	f100 80e8 	bmi.w	801c70c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c53c:	458c      	cmp	ip, r1
 801c53e:	f340 80e5 	ble.w	801c70c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c542:	2d00      	cmp	r5, #0
 801c544:	f000 80e4 	beq.w	801c710 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801c548:	7852      	ldrb	r2, [r2, #1]
 801c54a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801c54e:	0e0b      	lsrs	r3, r1, #24
 801c550:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801c554:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801c558:	9300      	str	r3, [sp, #0]
 801c55a:	b2a4      	uxth	r4, r4
 801c55c:	b2ab      	uxth	r3, r5
 801c55e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801c562:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801c566:	fb03 f904 	mul.w	r9, r3, r4
 801c56a:	011b      	lsls	r3, r3, #4
 801c56c:	fb0a f505 	mul.w	r5, sl, r5
 801c570:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801c574:	eba3 0e09 	sub.w	lr, r3, r9
 801c578:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801c57c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801c580:	0a28      	lsrs	r0, r5, #8
 801c582:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801c586:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c58a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801c58e:	fb0a f303 	mul.w	r3, sl, r3
 801c592:	fb08 f707 	mul.w	r7, r8, r7
 801c596:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801c59a:	4405      	add	r5, r0
 801c59c:	fb08 fc0c 	mul.w	ip, r8, ip
 801c5a0:	b2a4      	uxth	r4, r4
 801c5a2:	0a2d      	lsrs	r5, r5, #8
 801c5a4:	fa1f fe8e 	uxth.w	lr, lr
 801c5a8:	1b12      	subs	r2, r2, r4
 801c5aa:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801c5ae:	b292      	uxth	r2, r2
 801c5b0:	9005      	str	r0, [sp, #20]
 801c5b2:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801c5b6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c5ba:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801c5be:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c5c2:	0a1b      	lsrs	r3, r3, #8
 801c5c4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801c5c8:	9306      	str	r3, [sp, #24]
 801c5ca:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801c5ce:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c5d2:	4460      	add	r0, ip
 801c5d4:	fb0b f303 	mul.w	r3, fp, r3
 801c5d8:	fb0b f606 	mul.w	r6, fp, r6
 801c5dc:	0a00      	lsrs	r0, r0, #8
 801c5de:	0a1d      	lsrs	r5, r3, #8
 801c5e0:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801c5e4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801c5e8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c5ec:	441d      	add	r5, r3
 801c5ee:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801c5f2:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c5f6:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801c5fa:	0a2d      	lsrs	r5, r5, #8
 801c5fc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801c600:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801c604:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c608:	0a36      	lsrs	r6, r6, #8
 801c60a:	0a1b      	lsrs	r3, r3, #8
 801c60c:	fb05 f50e 	mul.w	r5, r5, lr
 801c610:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c614:	9307      	str	r3, [sp, #28]
 801c616:	0e0b      	lsrs	r3, r1, #24
 801c618:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801c61c:	fb0e f606 	mul.w	r6, lr, r6
 801c620:	435f      	muls	r7, r3
 801c622:	4359      	muls	r1, r3
 801c624:	9b05      	ldr	r3, [sp, #20]
 801c626:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c62a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c62e:	fb03 5502 	mla	r5, r3, r2, r5
 801c632:	9b06      	ldr	r3, [sp, #24]
 801c634:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c638:	fb0e fe0b 	mul.w	lr, lr, fp
 801c63c:	44bc      	add	ip, r7
 801c63e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801c642:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c646:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c64a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c64e:	0a09      	lsrs	r1, r1, #8
 801c650:	fb0c 5509 	mla	r5, ip, r9, r5
 801c654:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801c658:	fb00 5504 	mla	r5, r0, r4, r5
 801c65c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801c660:	9b07      	ldr	r3, [sp, #28]
 801c662:	fb02 6000 	mla	r0, r2, r0, r6
 801c666:	0a2d      	lsrs	r5, r5, #8
 801c668:	fb02 e20a 	mla	r2, r2, sl, lr
 801c66c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c670:	fb09 0001 	mla	r0, r9, r1, r0
 801c674:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c678:	fb04 0003 	mla	r0, r4, r3, r0
 801c67c:	9b00      	ldr	r3, [sp, #0]
 801c67e:	fb04 2408 	mla	r4, r4, r8, r2
 801c682:	9a04      	ldr	r2, [sp, #16]
 801c684:	0a00      	lsrs	r0, r0, #8
 801c686:	fb09 4903 	mla	r9, r9, r3, r4
 801c68a:	9b02      	ldr	r3, [sp, #8]
 801c68c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c690:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801c694:	4305      	orrs	r5, r0
 801c696:	fa5f f989 	uxtb.w	r9, r9
 801c69a:	fb03 f109 	mul.w	r1, r3, r9
 801c69e:	9b03      	ldr	r3, [sp, #12]
 801c6a0:	fb03 f309 	mul.w	r3, r3, r9
 801c6a4:	fb02 f909 	mul.w	r9, r2, r9
 801c6a8:	1c4a      	adds	r2, r1, #1
 801c6aa:	1c58      	adds	r0, r3, #1
 801c6ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c6b0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c6b4:	0c2a      	lsrs	r2, r5, #16
 801c6b6:	0a2b      	lsrs	r3, r5, #8
 801c6b8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801c6bc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c6c0:	0212      	lsls	r2, r2, #8
 801c6c2:	00db      	lsls	r3, r3, #3
 801c6c4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801c6c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6cc:	4313      	orrs	r3, r2
 801c6ce:	f109 0201 	add.w	r2, r9, #1
 801c6d2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801c6d6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801c6da:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c6de:	431d      	orrs	r5, r3
 801c6e0:	9b01      	ldr	r3, [sp, #4]
 801c6e2:	801d      	strh	r5, [r3, #0]
 801c6e4:	b009      	add	sp, #36	; 0x24
 801c6e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c6ea:	2000      	movs	r0, #0
 801c6ec:	e701      	b.n	801c4f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801c6ee:	2600      	movs	r6, #0
 801c6f0:	4630      	mov	r0, r6
 801c6f2:	e70b      	b.n	801c50c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c6f4:	2600      	movs	r6, #0
 801c6f6:	e709      	b.n	801c50c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c6f8:	462e      	mov	r6, r5
 801c6fa:	e707      	b.n	801c50c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c6fc:	2700      	movs	r7, #0
 801c6fe:	e71a      	b.n	801c536 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c700:	2100      	movs	r1, #0
 801c702:	460f      	mov	r7, r1
 801c704:	e723      	b.n	801c54e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c706:	4621      	mov	r1, r4
 801c708:	4627      	mov	r7, r4
 801c70a:	e720      	b.n	801c54e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c70c:	2100      	movs	r1, #0
 801c70e:	e71e      	b.n	801c54e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c710:	4629      	mov	r1, r5
 801c712:	e71c      	b.n	801c54e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801c714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c718:	b09b      	sub	sp, #108	; 0x6c
 801c71a:	9218      	str	r2, [sp, #96]	; 0x60
 801c71c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c71e:	9019      	str	r0, [sp, #100]	; 0x64
 801c720:	9116      	str	r1, [sp, #88]	; 0x58
 801c722:	6850      	ldr	r0, [r2, #4]
 801c724:	9307      	str	r3, [sp, #28]
 801c726:	6812      	ldr	r2, [r2, #0]
 801c728:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801c72a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801c72e:	fb00 1303 	mla	r3, r0, r3, r1
 801c732:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c736:	930a      	str	r3, [sp, #40]	; 0x28
 801c738:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c73a:	681b      	ldr	r3, [r3, #0]
 801c73c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c73e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c740:	685e      	ldr	r6, [r3, #4]
 801c742:	3604      	adds	r6, #4
 801c744:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c746:	2b00      	cmp	r3, #0
 801c748:	dc03      	bgt.n	801c752 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c74a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c74c:	2b00      	cmp	r3, #0
 801c74e:	f340 8373 	ble.w	801ce38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c752:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c754:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c758:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c75c:	1e48      	subs	r0, r1, #1
 801c75e:	1e57      	subs	r7, r2, #1
 801c760:	9b07      	ldr	r3, [sp, #28]
 801c762:	2b00      	cmp	r3, #0
 801c764:	f340 818f 	ble.w	801ca86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c768:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c76a:	142b      	asrs	r3, r5, #16
 801c76c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c770:	d406      	bmi.n	801c780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c772:	4584      	cmp	ip, r0
 801c774:	da04      	bge.n	801c780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c776:	2b00      	cmp	r3, #0
 801c778:	db02      	blt.n	801c780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c77a:	42bb      	cmp	r3, r7
 801c77c:	f2c0 8184 	blt.w	801ca88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c780:	f11c 0c01 	adds.w	ip, ip, #1
 801c784:	f100 8172 	bmi.w	801ca6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c788:	4561      	cmp	r1, ip
 801c78a:	f2c0 816f 	blt.w	801ca6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c78e:	3301      	adds	r3, #1
 801c790:	f100 816c 	bmi.w	801ca6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c794:	429a      	cmp	r2, r3
 801c796:	f2c0 8169 	blt.w	801ca6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c79a:	9b07      	ldr	r3, [sp, #28]
 801c79c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c79e:	9317      	str	r3, [sp, #92]	; 0x5c
 801c7a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c7a2:	2b00      	cmp	r3, #0
 801c7a4:	f340 818e 	ble.w	801cac4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801c7a8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c7aa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c7ae:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c7b2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c7b6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c7b8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c7bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c7be:	141b      	asrs	r3, r3, #16
 801c7c0:	f100 81d1 	bmi.w	801cb66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c7c4:	f101 38ff 	add.w	r8, r1, #4294967295
 801c7c8:	4543      	cmp	r3, r8
 801c7ca:	f280 81cc 	bge.w	801cb66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c7ce:	f1bc 0f00 	cmp.w	ip, #0
 801c7d2:	f2c0 81c8 	blt.w	801cb66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c7d6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c7da:	45c4      	cmp	ip, r8
 801c7dc:	f280 81c3 	bge.w	801cb66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c7e0:	b209      	sxth	r1, r1
 801c7e2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c7e4:	fb0c 3301 	mla	r3, ip, r1, r3
 801c7e8:	eb04 0803 	add.w	r8, r4, r3
 801c7ec:	5ce3      	ldrb	r3, [r4, r3]
 801c7ee:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c7f2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c7f6:	2a00      	cmp	r2, #0
 801c7f8:	f000 81aa 	beq.w	801cb50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801c7fc:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c800:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c804:	940b      	str	r4, [sp, #44]	; 0x2c
 801c806:	0e24      	lsrs	r4, r4, #24
 801c808:	9412      	str	r4, [sp, #72]	; 0x48
 801c80a:	b178      	cbz	r0, 801c82c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801c80c:	eb08 0c01 	add.w	ip, r8, r1
 801c810:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c814:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c818:	9108      	str	r1, [sp, #32]
 801c81a:	0e09      	lsrs	r1, r1, #24
 801c81c:	9110      	str	r1, [sp, #64]	; 0x40
 801c81e:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c822:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c826:	910c      	str	r1, [sp, #48]	; 0x30
 801c828:	0e09      	lsrs	r1, r1, #24
 801c82a:	9113      	str	r1, [sp, #76]	; 0x4c
 801c82c:	b292      	uxth	r2, r2
 801c82e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c830:	b280      	uxth	r0, r0
 801c832:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c834:	fb02 f900 	mul.w	r9, r2, r0
 801c838:	0112      	lsls	r2, r2, #4
 801c83a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c83e:	eba2 0809 	sub.w	r8, r2, r9
 801c842:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801c846:	b280      	uxth	r0, r0
 801c848:	fa1f f888 	uxth.w	r8, r8
 801c84c:	1a12      	subs	r2, r2, r0
 801c84e:	fb08 f101 	mul.w	r1, r8, r1
 801c852:	b292      	uxth	r2, r2
 801c854:	fb02 110e 	mla	r1, r2, lr, r1
 801c858:	fb00 1104 	mla	r1, r0, r4, r1
 801c85c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c85e:	fb09 1104 	mla	r1, r9, r4, r1
 801c862:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c866:	2900      	cmp	r1, #0
 801c868:	f000 80f5 	beq.w	801ca56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c86c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c870:	d01b      	beq.n	801c8aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c872:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c876:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c87a:	fb0e fa0a 	mul.w	sl, lr, sl
 801c87e:	fb0e fe03 	mul.w	lr, lr, r3
 801c882:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c886:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c88a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c88e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c892:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c896:	4453      	add	r3, sl
 801c898:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c89c:	0a1b      	lsrs	r3, r3, #8
 801c89e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c8a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c8a6:	ea43 030c 	orr.w	r3, r3, ip
 801c8aa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c8ac:	2cff      	cmp	r4, #255	; 0xff
 801c8ae:	d021      	beq.n	801c8f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c8b0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c8b2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c8b6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c8b8:	fb04 fb0b 	mul.w	fp, r4, fp
 801c8bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c8be:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c8c2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c8c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c8c8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c8cc:	fb04 fa0a 	mul.w	sl, r4, sl
 801c8d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c8d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c8d8:	44de      	add	lr, fp
 801c8da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c8de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c8e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c8e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c8ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c8ee:	ea4e 040a 	orr.w	r4, lr, sl
 801c8f2:	940b      	str	r4, [sp, #44]	; 0x2c
 801c8f4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c8f6:	2cff      	cmp	r4, #255	; 0xff
 801c8f8:	d021      	beq.n	801c93e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c8fa:	9c08      	ldr	r4, [sp, #32]
 801c8fc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c900:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c902:	fb04 fb0b 	mul.w	fp, r4, fp
 801c906:	9c08      	ldr	r4, [sp, #32]
 801c908:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c90c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c90e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c912:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c916:	fb04 fa0a 	mul.w	sl, r4, sl
 801c91a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c91e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c922:	44de      	add	lr, fp
 801c924:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c928:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c92c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c930:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c934:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c938:	ea4e 040a 	orr.w	r4, lr, sl
 801c93c:	9408      	str	r4, [sp, #32]
 801c93e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c940:	2cff      	cmp	r4, #255	; 0xff
 801c942:	d021      	beq.n	801c988 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c944:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c946:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c94a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c94c:	fb04 fb0b 	mul.w	fp, r4, fp
 801c950:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c952:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c956:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c958:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c95c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c960:	fb04 fa0a 	mul.w	sl, r4, sl
 801c964:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c968:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c96c:	44de      	add	lr, fp
 801c96e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c972:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c976:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c97a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c97e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c982:	ea4e 040a 	orr.w	r4, lr, sl
 801c986:	940c      	str	r4, [sp, #48]	; 0x30
 801c988:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c98a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801c98e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c992:	43c9      	mvns	r1, r1
 801c994:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c998:	9c08      	ldr	r4, [sp, #32]
 801c99a:	fb08 fc0c 	mul.w	ip, r8, ip
 801c99e:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c9a2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c9a6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c9a8:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c9ac:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c9b0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c9b2:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c9b6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c9ba:	fb08 f80e 	mul.w	r8, r8, lr
 801c9be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c9c2:	fa5f fe81 	uxtb.w	lr, r1
 801c9c6:	fb02 8303 	mla	r3, r2, r3, r8
 801c9ca:	9a08      	ldr	r2, [sp, #32]
 801c9cc:	f8b7 8000 	ldrh.w	r8, [r7]
 801c9d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c9d4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c9d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c9da:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c9de:	fb00 330a 	mla	r3, r0, sl, r3
 801c9e2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801c9e6:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c9ea:	fb09 3900 	mla	r9, r9, r0, r3
 801c9ee:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c9f2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c9f6:	b2c9      	uxtb	r1, r1
 801c9f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c9fc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ca00:	fb02 f20e 	mul.w	r2, r2, lr
 801ca04:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ca08:	fb00 f00e 	mul.w	r0, r0, lr
 801ca0c:	1c53      	adds	r3, r2, #1
 801ca0e:	fb01 f10e 	mul.w	r1, r1, lr
 801ca12:	ea4c 0c09 	orr.w	ip, ip, r9
 801ca16:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ca1a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ca1e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ca22:	4a60      	ldr	r2, [pc, #384]	; (801cba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ca24:	b2db      	uxtb	r3, r3
 801ca26:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ca2a:	1c43      	adds	r3, r0, #1
 801ca2c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ca30:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ca34:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ca38:	00db      	lsls	r3, r3, #3
 801ca3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca3e:	4313      	orrs	r3, r2
 801ca40:	1c4a      	adds	r2, r1, #1
 801ca42:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ca46:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ca4a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ca4e:	ea4c 0c03 	orr.w	ip, ip, r3
 801ca52:	f8a7 c000 	strh.w	ip, [r7]
 801ca56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ca58:	3702      	adds	r7, #2
 801ca5a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ca5c:	441a      	add	r2, r3
 801ca5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca60:	441d      	add	r5, r3
 801ca62:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ca64:	9225      	str	r2, [sp, #148]	; 0x94
 801ca66:	3b01      	subs	r3, #1
 801ca68:	9317      	str	r3, [sp, #92]	; 0x5c
 801ca6a:	e699      	b.n	801c7a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ca6c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ca6e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801ca70:	441c      	add	r4, r3
 801ca72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca74:	441d      	add	r5, r3
 801ca76:	9b07      	ldr	r3, [sp, #28]
 801ca78:	9425      	str	r4, [sp, #148]	; 0x94
 801ca7a:	3b01      	subs	r3, #1
 801ca7c:	9307      	str	r3, [sp, #28]
 801ca7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca80:	3302      	adds	r3, #2
 801ca82:	930a      	str	r3, [sp, #40]	; 0x28
 801ca84:	e66c      	b.n	801c760 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ca86:	d024      	beq.n	801cad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801ca88:	9b07      	ldr	r3, [sp, #28]
 801ca8a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ca8c:	3b01      	subs	r3, #1
 801ca8e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801ca90:	fb00 4003 	mla	r0, r0, r3, r4
 801ca94:	1400      	asrs	r0, r0, #16
 801ca96:	f53f ae80 	bmi.w	801c79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ca9a:	3901      	subs	r1, #1
 801ca9c:	4288      	cmp	r0, r1
 801ca9e:	f6bf ae7c 	bge.w	801c79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801caa2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801caa4:	fb01 5303 	mla	r3, r1, r3, r5
 801caa8:	141b      	asrs	r3, r3, #16
 801caaa:	f53f ae76 	bmi.w	801c79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801caae:	3a01      	subs	r2, #1
 801cab0:	4293      	cmp	r3, r2
 801cab2:	f6bf ae72 	bge.w	801c79a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cab6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801caba:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801cabe:	f1bb 0f00 	cmp.w	fp, #0
 801cac2:	dc71      	bgt.n	801cba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cac4:	9b07      	ldr	r3, [sp, #28]
 801cac6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801caca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cacc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cad0:	930a      	str	r3, [sp, #40]	; 0x28
 801cad2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801cad4:	2b00      	cmp	r3, #0
 801cad6:	f340 81af 	ble.w	801ce38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801cada:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cade:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cae0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cae4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cae8:	eef0 6a62 	vmov.f32	s13, s5
 801caec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801caf0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801caf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801caf8:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801cafc:	eef0 6a43 	vmov.f32	s13, s6
 801cb00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb04:	ee16 5a90 	vmov	r5, s13
 801cb08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb10:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb20:	ee12 2a90 	vmov	r2, s5
 801cb24:	eef0 2a47 	vmov.f32	s5, s14
 801cb28:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb2c:	ee13 2a10 	vmov	r2, s6
 801cb30:	9327      	str	r3, [sp, #156]	; 0x9c
 801cb32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb34:	eeb0 3a67 	vmov.f32	s6, s15
 801cb38:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb3c:	9328      	str	r3, [sp, #160]	; 0xa0
 801cb3e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801cb40:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801cb42:	3b01      	subs	r3, #1
 801cb44:	9316      	str	r3, [sp, #88]	; 0x58
 801cb46:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb48:	bf08      	it	eq
 801cb4a:	4613      	moveq	r3, r2
 801cb4c:	9307      	str	r3, [sp, #28]
 801cb4e:	e5f9      	b.n	801c744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cb50:	2800      	cmp	r0, #0
 801cb52:	f43f ae6b 	beq.w	801c82c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801cb56:	f818 1001 	ldrb.w	r1, [r8, r1]
 801cb5a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cb5e:	9108      	str	r1, [sp, #32]
 801cb60:	0e09      	lsrs	r1, r1, #24
 801cb62:	9110      	str	r1, [sp, #64]	; 0x40
 801cb64:	e662      	b.n	801c82c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801cb66:	f113 0801 	adds.w	r8, r3, #1
 801cb6a:	f53f af74 	bmi.w	801ca56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cb6e:	4541      	cmp	r1, r8
 801cb70:	f6ff af71 	blt.w	801ca56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cb74:	f11c 0801 	adds.w	r8, ip, #1
 801cb78:	f53f af6d 	bmi.w	801ca56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cb7c:	45c6      	cmp	lr, r8
 801cb7e:	f6ff af6a 	blt.w	801ca56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cb82:	b209      	sxth	r1, r1
 801cb84:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801cb88:	fa0f f38e 	sxth.w	r3, lr
 801cb8c:	9100      	str	r1, [sp, #0]
 801cb8e:	4639      	mov	r1, r7
 801cb90:	9301      	str	r3, [sp, #4]
 801cb92:	4633      	mov	r3, r6
 801cb94:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801cb98:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cb9a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801cb9c:	f7ff fc7b 	bl	801c496 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801cba0:	e759      	b.n	801ca56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cba2:	bf00      	nop
 801cba4:	fffff800 	.word	0xfffff800
 801cba8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801cbaa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801cbae:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801cbb0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cbb4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cbb6:	1427      	asrs	r7, r4, #16
 801cbb8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801cbba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cbbe:	142b      	asrs	r3, r5, #16
 801cbc0:	fb01 7303 	mla	r3, r1, r3, r7
 801cbc4:	18e7      	adds	r7, r4, r3
 801cbc6:	5ce3      	ldrb	r3, [r4, r3]
 801cbc8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801cbcc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801cbd0:	2a00      	cmp	r2, #0
 801cbd2:	f000 8127 	beq.w	801ce24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cbd6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801cbda:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801cbde:	940d      	str	r4, [sp, #52]	; 0x34
 801cbe0:	0e24      	lsrs	r4, r4, #24
 801cbe2:	9414      	str	r4, [sp, #80]	; 0x50
 801cbe4:	b170      	cbz	r0, 801cc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cbe6:	eb07 0e01 	add.w	lr, r7, r1
 801cbea:	5c79      	ldrb	r1, [r7, r1]
 801cbec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cbf0:	9109      	str	r1, [sp, #36]	; 0x24
 801cbf2:	0e09      	lsrs	r1, r1, #24
 801cbf4:	9111      	str	r1, [sp, #68]	; 0x44
 801cbf6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801cbfa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cbfe:	910e      	str	r1, [sp, #56]	; 0x38
 801cc00:	0e09      	lsrs	r1, r1, #24
 801cc02:	9115      	str	r1, [sp, #84]	; 0x54
 801cc04:	b292      	uxth	r2, r2
 801cc06:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801cc08:	b280      	uxth	r0, r0
 801cc0a:	fb02 f800 	mul.w	r8, r2, r0
 801cc0e:	0112      	lsls	r2, r2, #4
 801cc10:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801cc14:	eba2 0e08 	sub.w	lr, r2, r8
 801cc18:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801cc1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cc1e:	b280      	uxth	r0, r0
 801cc20:	fa1f fe8e 	uxth.w	lr, lr
 801cc24:	1a09      	subs	r1, r1, r0
 801cc26:	fb0e f202 	mul.w	r2, lr, r2
 801cc2a:	b289      	uxth	r1, r1
 801cc2c:	fb01 220c 	mla	r2, r1, ip, r2
 801cc30:	fb00 2204 	mla	r2, r0, r4, r2
 801cc34:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cc36:	fb08 2204 	mla	r2, r8, r4, r2
 801cc3a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801cc3e:	2a00      	cmp	r2, #0
 801cc40:	f000 80e5 	beq.w	801ce0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801cc44:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801cc48:	d019      	beq.n	801cc7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801cc4a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801cc4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cc52:	fb0c fa0a 	mul.w	sl, ip, sl
 801cc56:	fb0c fc03 	mul.w	ip, ip, r3
 801cc5a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801cc5e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801cc62:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801cc66:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801cc6a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801cc6e:	4453      	add	r3, sl
 801cc70:	0a3f      	lsrs	r7, r7, #8
 801cc72:	0a1b      	lsrs	r3, r3, #8
 801cc74:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801cc78:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801cc7c:	433b      	orrs	r3, r7
 801cc7e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cc80:	2cff      	cmp	r4, #255	; 0xff
 801cc82:	d020      	beq.n	801ccc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801cc84:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cc86:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801cc8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cc8c:	4367      	muls	r7, r4
 801cc8e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cc90:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cc94:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801cc98:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cc9a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801cc9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801cca2:	fb04 fa0a 	mul.w	sl, r4, sl
 801cca6:	44bc      	add	ip, r7
 801cca8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ccac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ccb0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ccb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ccb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ccbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ccc0:	ea4c 040a 	orr.w	r4, ip, sl
 801ccc4:	940d      	str	r4, [sp, #52]	; 0x34
 801ccc6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ccc8:	2cff      	cmp	r4, #255	; 0xff
 801ccca:	d020      	beq.n	801cd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801cccc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ccce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ccd2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ccd4:	4367      	muls	r7, r4
 801ccd6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ccd8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ccdc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801cce0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801cce2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801cce6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ccea:	fb04 fa0a 	mul.w	sl, r4, sl
 801ccee:	44bc      	add	ip, r7
 801ccf0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ccf4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ccf8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ccfc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801cd00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cd08:	ea4c 040a 	orr.w	r4, ip, sl
 801cd0c:	9409      	str	r4, [sp, #36]	; 0x24
 801cd0e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cd10:	2cff      	cmp	r4, #255	; 0xff
 801cd12:	d020      	beq.n	801cd56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801cd14:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cd16:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801cd1a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cd1c:	4367      	muls	r7, r4
 801cd1e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cd20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cd24:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801cd28:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cd2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801cd2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801cd32:	fb04 fa0a 	mul.w	sl, r4, sl
 801cd36:	44bc      	add	ip, r7
 801cd38:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801cd3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd40:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cd44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801cd48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd4c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cd50:	ea4c 040a 	orr.w	r4, ip, sl
 801cd54:	940e      	str	r4, [sp, #56]	; 0x38
 801cd56:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cd58:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801cd5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cd60:	43d2      	mvns	r2, r2
 801cd62:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801cd66:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801cd68:	b2d2      	uxtb	r2, r2
 801cd6a:	fb0e f707 	mul.w	r7, lr, r7
 801cd6e:	fb01 770c 	mla	r7, r1, ip, r7
 801cd72:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801cd76:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cd78:	fb00 770c 	mla	r7, r0, ip, r7
 801cd7c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801cd80:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cd82:	fb08 770c 	mla	r7, r8, ip, r7
 801cd86:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801cd8a:	fb0e fe0c 	mul.w	lr, lr, ip
 801cd8e:	0a3f      	lsrs	r7, r7, #8
 801cd90:	fb01 e303 	mla	r3, r1, r3, lr
 801cd94:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cd96:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801cd9a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801cd9e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cda0:	fb00 330a 	mla	r3, r0, sl, r3
 801cda4:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801cda8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801cdac:	f8b9 3000 	ldrh.w	r3, [r9]
 801cdb0:	1218      	asrs	r0, r3, #8
 801cdb2:	10d9      	asrs	r1, r3, #3
 801cdb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cdb8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cdbc:	00db      	lsls	r3, r3, #3
 801cdbe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cdc2:	4350      	muls	r0, r2
 801cdc4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801cdc8:	b2db      	uxtb	r3, r3
 801cdca:	4351      	muls	r1, r2
 801cdcc:	ea47 070c 	orr.w	r7, r7, ip
 801cdd0:	4353      	muls	r3, r2
 801cdd2:	1c42      	adds	r2, r0, #1
 801cdd4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cdd8:	0c3a      	lsrs	r2, r7, #16
 801cdda:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cdde:	4a18      	ldr	r2, [pc, #96]	; (801ce40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801cde0:	b2c0      	uxtb	r0, r0
 801cde2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801cde6:	1c4a      	adds	r2, r1, #1
 801cde8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cdec:	0a3a      	lsrs	r2, r7, #8
 801cdee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cdf2:	00c9      	lsls	r1, r1, #3
 801cdf4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cdf8:	4301      	orrs	r1, r0
 801cdfa:	1c58      	adds	r0, r3, #1
 801cdfc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ce00:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ce04:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801ce08:	4308      	orrs	r0, r1
 801ce0a:	f8a9 0000 	strh.w	r0, [r9]
 801ce0e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ce10:	f109 0902 	add.w	r9, r9, #2
 801ce14:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ce16:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ce1a:	441a      	add	r2, r3
 801ce1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ce1e:	9225      	str	r2, [sp, #148]	; 0x94
 801ce20:	441d      	add	r5, r3
 801ce22:	e64c      	b.n	801cabe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ce24:	2800      	cmp	r0, #0
 801ce26:	f43f aeed 	beq.w	801cc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ce2a:	5c79      	ldrb	r1, [r7, r1]
 801ce2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ce30:	9109      	str	r1, [sp, #36]	; 0x24
 801ce32:	0e09      	lsrs	r1, r1, #24
 801ce34:	9111      	str	r1, [sp, #68]	; 0x44
 801ce36:	e6e5      	b.n	801cc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ce38:	b01b      	add	sp, #108	; 0x6c
 801ce3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce3e:	bf00      	nop
 801ce40:	fffff800 	.word	0xfffff800

0801ce44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801ce44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce48:	b085      	sub	sp, #20
 801ce4a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ce4e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ce52:	2800      	cmp	r0, #0
 801ce54:	9103      	str	r1, [sp, #12]
 801ce56:	fb00 7406 	mla	r4, r0, r6, r7
 801ce5a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801ce5e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ce62:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801ce66:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ce6a:	eb03 0904 	add.w	r9, r3, r4
 801ce6e:	9501      	str	r5, [sp, #4]
 801ce70:	f2c0 8150 	blt.w	801d114 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ce74:	4583      	cmp	fp, r0
 801ce76:	f340 814d 	ble.w	801d114 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ce7a:	2f00      	cmp	r7, #0
 801ce7c:	f2c0 8146 	blt.w	801d10c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ce80:	42be      	cmp	r6, r7
 801ce82:	f340 8143 	ble.w	801d10c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ce86:	f813 c004 	ldrb.w	ip, [r3, r4]
 801ce8a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801ce8e:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801ce92:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ce96:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801ce9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce9e:	4355      	muls	r5, r2
 801cea0:	fb0c f203 	mul.w	r2, ip, r3
 801cea4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cea8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801ceac:	441d      	add	r5, r3
 801ceae:	f102 0320 	add.w	r3, r2, #32
 801ceb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ceb6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801ceba:	0a1b      	lsrs	r3, r3, #8
 801cebc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cec0:	431c      	orrs	r4, r3
 801cec2:	1c7b      	adds	r3, r7, #1
 801cec4:	f100 812b 	bmi.w	801d11e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cec8:	429e      	cmp	r6, r3
 801ceca:	f340 8128 	ble.w	801d11e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cece:	2900      	cmp	r1, #0
 801ced0:	f000 8128 	beq.w	801d124 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801ced4:	9a01      	ldr	r2, [sp, #4]
 801ced6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ceda:	8855      	ldrh	r5, [r2, #2]
 801cedc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cee0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801cee4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cee8:	fb08 f802 	mul.w	r8, r8, r2
 801ceec:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801cef0:	435d      	muls	r5, r3
 801cef2:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cef6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cefa:	44d0      	add	r8, sl
 801cefc:	f105 0a20 	add.w	sl, r5, #32
 801cf00:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801cf04:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801cf08:	0a2d      	lsrs	r5, r5, #8
 801cf0a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cf0e:	432a      	orrs	r2, r5
 801cf10:	3001      	adds	r0, #1
 801cf12:	f100 810d 	bmi.w	801d130 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801cf16:	4583      	cmp	fp, r0
 801cf18:	f340 810a 	ble.w	801d130 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801cf1c:	f1be 0f00 	cmp.w	lr, #0
 801cf20:	f000 810b 	beq.w	801d13a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801cf24:	2f00      	cmp	r7, #0
 801cf26:	f2c0 8100 	blt.w	801d12a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801cf2a:	42be      	cmp	r6, r7
 801cf2c:	f340 80fd 	ble.w	801d12a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801cf30:	9801      	ldr	r0, [sp, #4]
 801cf32:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801cf36:	f819 5006 	ldrb.w	r5, [r9, r6]
 801cf3a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801cf3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cf42:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801cf46:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cf4a:	fb0a fa00 	mul.w	sl, sl, r0
 801cf4e:	fb05 f808 	mul.w	r8, r5, r8
 801cf52:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801cf56:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801cf5a:	4482      	add	sl, r0
 801cf5c:	f108 0020 	add.w	r0, r8, #32
 801cf60:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cf64:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801cf68:	0a00      	lsrs	r0, r0, #8
 801cf6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf6e:	ea4b 0b00 	orr.w	fp, fp, r0
 801cf72:	3701      	adds	r7, #1
 801cf74:	f100 80e6 	bmi.w	801d144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801cf78:	42be      	cmp	r6, r7
 801cf7a:	f340 80e3 	ble.w	801d144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801cf7e:	2900      	cmp	r1, #0
 801cf80:	f000 80e3 	beq.w	801d14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801cf84:	3601      	adds	r6, #1
 801cf86:	9801      	ldr	r0, [sp, #4]
 801cf88:	f819 7006 	ldrb.w	r7, [r9, r6]
 801cf8c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801cf90:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801cf94:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801cf98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf9c:	fb09 f906 	mul.w	r9, r9, r6
 801cfa0:	fb07 f800 	mul.w	r8, r7, r0
 801cfa4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801cfa8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801cfac:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801cfb0:	44d1      	add	r9, sl
 801cfb2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801cfb6:	f108 0020 	add.w	r0, r8, #32
 801cfba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cfbe:	0a00      	lsrs	r0, r0, #8
 801cfc0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cfc4:	4330      	orrs	r0, r6
 801cfc6:	b28e      	uxth	r6, r1
 801cfc8:	fa1f f98e 	uxth.w	r9, lr
 801cfcc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801cfd0:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801cfd4:	fb06 f809 	mul.w	r8, r6, r9
 801cfd8:	0136      	lsls	r6, r6, #4
 801cfda:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cfde:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801cfe2:	9601      	str	r6, [sp, #4]
 801cfe4:	ea4a 0404 	orr.w	r4, sl, r4
 801cfe8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cfec:	fa1f f689 	uxth.w	r6, r9
 801cff0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cff4:	fb11 f90e 	smulbb	r9, r1, lr
 801cff8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cffc:	9602      	str	r6, [sp, #8]
 801cffe:	4626      	mov	r6, r4
 801d000:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d004:	f1ce 0410 	rsb	r4, lr, #16
 801d008:	ea4a 0202 	orr.w	r2, sl, r2
 801d00c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d010:	1a64      	subs	r4, r4, r1
 801d012:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d016:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d01a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d01e:	434a      	muls	r2, r1
 801d020:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d024:	ea4a 0000 	orr.w	r0, sl, r0
 801d028:	9903      	ldr	r1, [sp, #12]
 801d02a:	fb04 2406 	mla	r4, r4, r6, r2
 801d02e:	9e02      	ldr	r6, [sp, #8]
 801d030:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d034:	fb09 4200 	mla	r2, r9, r0, r4
 801d038:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d03c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d040:	8808      	ldrh	r0, [r1, #0]
 801d042:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d046:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801d04a:	ea44 0b0b 	orr.w	fp, r4, fp
 801d04e:	9c01      	ldr	r4, [sp, #4]
 801d050:	b289      	uxth	r1, r1
 801d052:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801d056:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d05a:	1ba4      	subs	r4, r4, r6
 801d05c:	9e01      	ldr	r6, [sp, #4]
 801d05e:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d062:	eba6 0608 	sub.w	r6, r6, r8
 801d066:	b2a4      	uxth	r4, r4
 801d068:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d06c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d070:	b2b6      	uxth	r6, r6
 801d072:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d076:	4373      	muls	r3, r6
 801d078:	ea42 0e0e 	orr.w	lr, r2, lr
 801d07c:	fb0c 3304 	mla	r3, ip, r4, r3
 801d080:	9c02      	ldr	r4, [sp, #8]
 801d082:	fa1f f28e 	uxth.w	r2, lr
 801d086:	fb04 3505 	mla	r5, r4, r5, r3
 801d08a:	10d4      	asrs	r4, r2, #3
 801d08c:	fb08 5707 	mla	r7, r8, r7, r5
 801d090:	1215      	asrs	r5, r2, #8
 801d092:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d096:	00d2      	lsls	r2, r2, #3
 801d098:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d09c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d0a0:	b2d2      	uxtb	r2, r2
 801d0a2:	434f      	muls	r7, r1
 801d0a4:	1c7b      	adds	r3, r7, #1
 801d0a6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d0aa:	1203      	asrs	r3, r0, #8
 801d0ac:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801d0b0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d0b4:	b2ff      	uxtb	r7, r7
 801d0b6:	fb13 f307 	smulbb	r3, r3, r7
 801d0ba:	fb05 3501 	mla	r5, r5, r1, r3
 801d0be:	10c3      	asrs	r3, r0, #3
 801d0c0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d0c4:	b2ad      	uxth	r5, r5
 801d0c6:	fb13 f307 	smulbb	r3, r3, r7
 801d0ca:	fb04 3401 	mla	r4, r4, r1, r3
 801d0ce:	00c3      	lsls	r3, r0, #3
 801d0d0:	b2db      	uxtb	r3, r3
 801d0d2:	b2a4      	uxth	r4, r4
 801d0d4:	fb13 f307 	smulbb	r3, r3, r7
 801d0d8:	fb02 3101 	mla	r1, r2, r1, r3
 801d0dc:	1c6b      	adds	r3, r5, #1
 801d0de:	1c62      	adds	r2, r4, #1
 801d0e0:	b289      	uxth	r1, r1
 801d0e2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d0e6:	1c4b      	adds	r3, r1, #1
 801d0e8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d0ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d0f0:	9a03      	ldr	r2, [sp, #12]
 801d0f2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d0f6:	0964      	lsrs	r4, r4, #5
 801d0f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d0fc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d100:	432b      	orrs	r3, r5
 801d102:	4323      	orrs	r3, r4
 801d104:	8013      	strh	r3, [r2, #0]
 801d106:	b005      	add	sp, #20
 801d108:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d10c:	f04f 0c00 	mov.w	ip, #0
 801d110:	4664      	mov	r4, ip
 801d112:	e6d6      	b.n	801cec2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801d114:	2300      	movs	r3, #0
 801d116:	469c      	mov	ip, r3
 801d118:	461a      	mov	r2, r3
 801d11a:	461c      	mov	r4, r3
 801d11c:	e6f8      	b.n	801cf10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d11e:	2300      	movs	r3, #0
 801d120:	461a      	mov	r2, r3
 801d122:	e6f5      	b.n	801cf10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d124:	460b      	mov	r3, r1
 801d126:	460a      	mov	r2, r1
 801d128:	e6f2      	b.n	801cf10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d12a:	2500      	movs	r5, #0
 801d12c:	46ab      	mov	fp, r5
 801d12e:	e720      	b.n	801cf72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801d130:	2700      	movs	r7, #0
 801d132:	463d      	mov	r5, r7
 801d134:	4638      	mov	r0, r7
 801d136:	46bb      	mov	fp, r7
 801d138:	e745      	b.n	801cfc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d13a:	4677      	mov	r7, lr
 801d13c:	4675      	mov	r5, lr
 801d13e:	4670      	mov	r0, lr
 801d140:	46f3      	mov	fp, lr
 801d142:	e740      	b.n	801cfc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d144:	2700      	movs	r7, #0
 801d146:	4638      	mov	r0, r7
 801d148:	e73d      	b.n	801cfc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d14a:	460f      	mov	r7, r1
 801d14c:	4608      	mov	r0, r1
 801d14e:	e73a      	b.n	801cfc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801d150 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d154:	b097      	sub	sp, #92	; 0x5c
 801d156:	9214      	str	r2, [sp, #80]	; 0x50
 801d158:	9308      	str	r3, [sp, #32]
 801d15a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801d15c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801d160:	9015      	str	r0, [sp, #84]	; 0x54
 801d162:	9312      	str	r3, [sp, #72]	; 0x48
 801d164:	6850      	ldr	r0, [r2, #4]
 801d166:	9111      	str	r1, [sp, #68]	; 0x44
 801d168:	6812      	ldr	r2, [r2, #0]
 801d16a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801d16e:	fb00 1303 	mla	r3, r0, r3, r1
 801d172:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d176:	9309      	str	r3, [sp, #36]	; 0x24
 801d178:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d17a:	681b      	ldr	r3, [r3, #0]
 801d17c:	930b      	str	r3, [sp, #44]	; 0x2c
 801d17e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d180:	685b      	ldr	r3, [r3, #4]
 801d182:	930c      	str	r3, [sp, #48]	; 0x30
 801d184:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801d188:	930a      	str	r3, [sp, #40]	; 0x28
 801d18a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d18c:	2b00      	cmp	r3, #0
 801d18e:	dc03      	bgt.n	801d198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d190:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801d192:	2b00      	cmp	r3, #0
 801d194:	f340 83cd 	ble.w	801d932 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801d198:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d19a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d19e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d1a2:	1e48      	subs	r0, r1, #1
 801d1a4:	1e55      	subs	r5, r2, #1
 801d1a6:	9b08      	ldr	r3, [sp, #32]
 801d1a8:	2b00      	cmp	r3, #0
 801d1aa:	f340 81a5 	ble.w	801d4f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801d1ae:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801d1b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d1b2:	1436      	asrs	r6, r6, #16
 801d1b4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d1b8:	d406      	bmi.n	801d1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d1ba:	4286      	cmp	r6, r0
 801d1bc:	da04      	bge.n	801d1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d1be:	2b00      	cmp	r3, #0
 801d1c0:	db02      	blt.n	801d1c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d1c2:	42ab      	cmp	r3, r5
 801d1c4:	f2c0 8199 	blt.w	801d4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801d1c8:	3601      	adds	r6, #1
 801d1ca:	f100 8186 	bmi.w	801d4da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d1ce:	42b1      	cmp	r1, r6
 801d1d0:	f2c0 8183 	blt.w	801d4da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d1d4:	3301      	adds	r3, #1
 801d1d6:	f100 8180 	bmi.w	801d4da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d1da:	429a      	cmp	r2, r3
 801d1dc:	f2c0 817d 	blt.w	801d4da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d1e0:	9b08      	ldr	r3, [sp, #32]
 801d1e2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d1e6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d1e8:	9313      	str	r3, [sp, #76]	; 0x4c
 801d1ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d1ec:	2b00      	cmp	r3, #0
 801d1ee:	f340 81a6 	ble.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801d1f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d1f4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801d1f6:	1418      	asrs	r0, r3, #16
 801d1f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d1fa:	142d      	asrs	r5, r5, #16
 801d1fc:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d200:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d202:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d206:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d208:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d20c:	f100 81fa 	bmi.w	801d604 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801d210:	f102 3eff 	add.w	lr, r2, #4294967295
 801d214:	4575      	cmp	r5, lr
 801d216:	f280 81f5 	bge.w	801d604 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801d21a:	2800      	cmp	r0, #0
 801d21c:	f2c0 81f2 	blt.w	801d604 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801d220:	f103 3eff 	add.w	lr, r3, #4294967295
 801d224:	4570      	cmp	r0, lr
 801d226:	f280 81ed 	bge.w	801d604 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801d22a:	b212      	sxth	r2, r2
 801d22c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d22e:	fa1f fe81 	uxth.w	lr, r1
 801d232:	fb00 5002 	mla	r0, r0, r2, r5
 801d236:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d23a:	eb03 0a00 	add.w	sl, r3, r0
 801d23e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d242:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801d246:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d24a:	b29b      	uxth	r3, r3
 801d24c:	f1bc 0f00 	cmp.w	ip, #0
 801d250:	f000 81bb 	beq.w	801d5ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801d254:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d258:	eb0a 0b02 	add.w	fp, sl, r2
 801d25c:	fa1f fa8c 	uxth.w	sl, ip
 801d260:	940d      	str	r4, [sp, #52]	; 0x34
 801d262:	fb0a fe0e 	mul.w	lr, sl, lr
 801d266:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d26a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d26e:	eba5 050e 	sub.w	r5, r5, lr
 801d272:	940e      	str	r4, [sp, #56]	; 0x38
 801d274:	fa1f fa8a 	uxth.w	sl, sl
 801d278:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d27a:	b2ad      	uxth	r5, r5
 801d27c:	eba3 030a 	sub.w	r3, r3, sl
 801d280:	fb08 f505 	mul.w	r5, r8, r5
 801d284:	b29b      	uxth	r3, r3
 801d286:	fb09 5303 	mla	r3, r9, r3, r5
 801d28a:	fb0a 3304 	mla	r3, sl, r4, r3
 801d28e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d290:	fb0e 3304 	mla	r3, lr, r4, r3
 801d294:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d298:	2b00      	cmp	r3, #0
 801d29a:	f000 8111 	beq.w	801d4c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d29e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d2a0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d2a4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d2a8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d2ac:	f000 8192 	beq.w	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801d2b0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d2b4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d2b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2bc:	fb0a fe0e 	mul.w	lr, sl, lr
 801d2c0:	fb09 f000 	mul.w	r0, r9, r0
 801d2c4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d2c8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d2cc:	f100 0b20 	add.w	fp, r0, #32
 801d2d0:	44ce      	add	lr, r9
 801d2d2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d2d6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d2da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d2de:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d2e2:	ea4e 0909 	orr.w	r9, lr, r9
 801d2e6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d2ea:	8868      	ldrh	r0, [r5, #2]
 801d2ec:	d019      	beq.n	801d322 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d2ee:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d2f2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d2f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2fa:	fb0a fe0e 	mul.w	lr, sl, lr
 801d2fe:	fb08 f800 	mul.w	r8, r8, r0
 801d302:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d306:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d30a:	f108 0b20 	add.w	fp, r8, #32
 801d30e:	4486      	add	lr, r0
 801d310:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d314:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d318:	0a00      	lsrs	r0, r0, #8
 801d31a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d31e:	ea4e 0000 	orr.w	r0, lr, r0
 801d322:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d326:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d32a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d32e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d332:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d336:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d33a:	ea4e 0909 	orr.w	r9, lr, r9
 801d33e:	ea4a 0000 	orr.w	r0, sl, r0
 801d342:	f1bc 0f00 	cmp.w	ip, #0
 801d346:	f000 8147 	beq.w	801d5d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801d34a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801d34e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d350:	3a01      	subs	r2, #1
 801d352:	2cff      	cmp	r4, #255	; 0xff
 801d354:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801d358:	f102 0202 	add.w	r2, r2, #2
 801d35c:	eb05 0e02 	add.w	lr, r5, r2
 801d360:	5aaa      	ldrh	r2, [r5, r2]
 801d362:	d018      	beq.n	801d396 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801d364:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801d368:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d36c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d370:	fb04 fa02 	mul.w	sl, r4, r2
 801d374:	fb08 f805 	mul.w	r8, r8, r5
 801d378:	f10a 0520 	add.w	r5, sl, #32
 801d37c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d380:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d384:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d388:	4442      	add	r2, r8
 801d38a:	0a2d      	lsrs	r5, r5, #8
 801d38c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d390:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d394:	432a      	orrs	r2, r5
 801d396:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d398:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d39c:	2cff      	cmp	r4, #255	; 0xff
 801d39e:	d01a      	beq.n	801d3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801d3a0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801d3a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3a8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d3ac:	fb04 fa05 	mul.w	sl, r4, r5
 801d3b0:	fb08 f80e 	mul.w	r8, r8, lr
 801d3b4:	f10a 0e20 	add.w	lr, sl, #32
 801d3b8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d3bc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d3c0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d3c4:	4445      	add	r5, r8
 801d3c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d3ca:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d3ce:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801d3d2:	ea45 050e 	orr.w	r5, r5, lr
 801d3d6:	fb1c fe01 	smulbb	lr, ip, r1
 801d3da:	f1cc 0810 	rsb	r8, ip, #16
 801d3de:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d3e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d3e6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d3ea:	eba8 0801 	sub.w	r8, r8, r1
 801d3ee:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d3f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d3f6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d3fa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d3fe:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d402:	ea4a 0202 	orr.w	r2, sl, r2
 801d406:	4341      	muls	r1, r0
 801d408:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d40c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d410:	fb09 1108 	mla	r1, r9, r8, r1
 801d414:	ea4b 0505 	orr.w	r5, fp, r5
 801d418:	fb0c 1102 	mla	r1, ip, r2, r1
 801d41c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d420:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d424:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d428:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d42c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d430:	ea42 0e0e 	orr.w	lr, r2, lr
 801d434:	fa1f f28e 	uxth.w	r2, lr
 801d438:	2bff      	cmp	r3, #255	; 0xff
 801d43a:	d103      	bne.n	801d444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801d43c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d43e:	29ff      	cmp	r1, #255	; 0xff
 801d440:	f000 80de 	beq.w	801d600 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d444:	990a      	ldr	r1, [sp, #40]	; 0x28
 801d446:	1215      	asrs	r5, r2, #8
 801d448:	8838      	ldrh	r0, [r7, #0]
 801d44a:	434b      	muls	r3, r1
 801d44c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d450:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d452:	f103 0c01 	add.w	ip, r3, #1
 801d456:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801d45a:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d45e:	fa5f fc83 	uxtb.w	ip, r3
 801d462:	1203      	asrs	r3, r0, #8
 801d464:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d468:	fb13 f30c 	smulbb	r3, r3, ip
 801d46c:	fb05 3501 	mla	r5, r5, r1, r3
 801d470:	10c3      	asrs	r3, r0, #3
 801d472:	10d1      	asrs	r1, r2, #3
 801d474:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d478:	00d2      	lsls	r2, r2, #3
 801d47a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d47e:	b2ad      	uxth	r5, r5
 801d480:	fb13 f30c 	smulbb	r3, r3, ip
 801d484:	b2d2      	uxtb	r2, r2
 801d486:	fb01 3104 	mla	r1, r1, r4, r3
 801d48a:	00c3      	lsls	r3, r0, #3
 801d48c:	b2db      	uxtb	r3, r3
 801d48e:	b289      	uxth	r1, r1
 801d490:	fb13 f30c 	smulbb	r3, r3, ip
 801d494:	fb02 3304 	mla	r3, r2, r4, r3
 801d498:	b29a      	uxth	r2, r3
 801d49a:	1c6b      	adds	r3, r5, #1
 801d49c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d4a0:	1c53      	adds	r3, r2, #1
 801d4a2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d4a6:	1c4a      	adds	r2, r1, #1
 801d4a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d4ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d4b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d4b4:	0949      	lsrs	r1, r1, #5
 801d4b6:	432b      	orrs	r3, r5
 801d4b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d4bc:	430b      	orrs	r3, r1
 801d4be:	803b      	strh	r3, [r7, #0]
 801d4c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d4c2:	3702      	adds	r7, #2
 801d4c4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801d4c6:	4413      	add	r3, r2
 801d4c8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801d4ca:	9321      	str	r3, [sp, #132]	; 0x84
 801d4cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d4ce:	441a      	add	r2, r3
 801d4d0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d4d2:	3b01      	subs	r3, #1
 801d4d4:	9222      	str	r2, [sp, #136]	; 0x88
 801d4d6:	9313      	str	r3, [sp, #76]	; 0x4c
 801d4d8:	e687      	b.n	801d1ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d4da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d4dc:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801d4de:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801d4e0:	4433      	add	r3, r6
 801d4e2:	9321      	str	r3, [sp, #132]	; 0x84
 801d4e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d4e6:	441c      	add	r4, r3
 801d4e8:	9b08      	ldr	r3, [sp, #32]
 801d4ea:	3b01      	subs	r3, #1
 801d4ec:	9422      	str	r4, [sp, #136]	; 0x88
 801d4ee:	9308      	str	r3, [sp, #32]
 801d4f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d4f2:	3302      	adds	r3, #2
 801d4f4:	9309      	str	r3, [sp, #36]	; 0x24
 801d4f6:	e656      	b.n	801d1a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801d4f8:	d028      	beq.n	801d54c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801d4fa:	9b08      	ldr	r3, [sp, #32]
 801d4fc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801d4fe:	3b01      	subs	r3, #1
 801d500:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801d502:	fb00 5003 	mla	r0, r0, r3, r5
 801d506:	1400      	asrs	r0, r0, #16
 801d508:	f53f ae6a 	bmi.w	801d1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d50c:	3901      	subs	r1, #1
 801d50e:	4288      	cmp	r0, r1
 801d510:	f6bf ae66 	bge.w	801d1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d514:	9924      	ldr	r1, [sp, #144]	; 0x90
 801d516:	9822      	ldr	r0, [sp, #136]	; 0x88
 801d518:	fb01 0303 	mla	r3, r1, r3, r0
 801d51c:	141b      	asrs	r3, r3, #16
 801d51e:	f53f ae5f 	bmi.w	801d1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d522:	3a01      	subs	r2, #1
 801d524:	4293      	cmp	r3, r2
 801d526:	f6bf ae5b 	bge.w	801d1e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d52a:	9b08      	ldr	r3, [sp, #32]
 801d52c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d530:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801d534:	9313      	str	r3, [sp, #76]	; 0x4c
 801d536:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d538:	2b00      	cmp	r3, #0
 801d53a:	f300 8082 	bgt.w	801d642 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801d53e:	9b08      	ldr	r3, [sp, #32]
 801d540:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d544:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d546:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d54a:	9309      	str	r3, [sp, #36]	; 0x24
 801d54c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d54e:	2b00      	cmp	r3, #0
 801d550:	f340 81ef 	ble.w	801d932 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801d554:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d558:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d55a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d55e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d562:	eef0 6a62 	vmov.f32	s13, s5
 801d566:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d56a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d56e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d572:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801d576:	eef0 6a43 	vmov.f32	s13, s6
 801d57a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d57e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801d582:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d586:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d58a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d58e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d592:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d596:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d59a:	ee12 2a90 	vmov	r2, s5
 801d59e:	eef0 2a47 	vmov.f32	s5, s14
 801d5a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d5a6:	ee13 2a10 	vmov	r2, s6
 801d5aa:	9323      	str	r3, [sp, #140]	; 0x8c
 801d5ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d5ae:	eeb0 3a67 	vmov.f32	s6, s15
 801d5b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d5b6:	9324      	str	r3, [sp, #144]	; 0x90
 801d5b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d5ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d5bc:	3b01      	subs	r3, #1
 801d5be:	9311      	str	r3, [sp, #68]	; 0x44
 801d5c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d5c2:	bf08      	it	eq
 801d5c4:	4613      	moveq	r3, r2
 801d5c6:	9308      	str	r3, [sp, #32]
 801d5c8:	e5df      	b.n	801d18a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d5ca:	fb08 f505 	mul.w	r5, r8, r5
 801d5ce:	fb09 5303 	mla	r3, r9, r3, r5
 801d5d2:	e65f      	b.n	801d294 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801d5d4:	4681      	mov	r9, r0
 801d5d6:	e686      	b.n	801d2e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d5d8:	f1c1 0210 	rsb	r2, r1, #16
 801d5dc:	4341      	muls	r1, r0
 801d5de:	fb09 1902 	mla	r9, r9, r2, r1
 801d5e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d5e6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d5ea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d5ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d5f2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d5f6:	ea42 0909 	orr.w	r9, r2, r9
 801d5fa:	fa1f f289 	uxth.w	r2, r9
 801d5fe:	e71b      	b.n	801d438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801d600:	803a      	strh	r2, [r7, #0]
 801d602:	e75d      	b.n	801d4c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d604:	f115 0e01 	adds.w	lr, r5, #1
 801d608:	f53f af5a 	bmi.w	801d4c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d60c:	4572      	cmp	r2, lr
 801d60e:	f6ff af57 	blt.w	801d4c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d612:	f110 0e01 	adds.w	lr, r0, #1
 801d616:	f53f af53 	bmi.w	801d4c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d61a:	4573      	cmp	r3, lr
 801d61c:	f6ff af50 	blt.w	801d4c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d620:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d622:	b21b      	sxth	r3, r3
 801d624:	b212      	sxth	r2, r2
 801d626:	9502      	str	r5, [sp, #8]
 801d628:	9301      	str	r3, [sp, #4]
 801d62a:	9200      	str	r2, [sp, #0]
 801d62c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801d630:	e9cd c405 	strd	ip, r4, [sp, #20]
 801d634:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801d638:	4639      	mov	r1, r7
 801d63a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d63c:	f7ff fc02 	bl	801ce44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801d640:	e73e      	b.n	801d4c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d642:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d644:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d648:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d64a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d64e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d650:	fa1f fc82 	uxth.w	ip, r2
 801d654:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d658:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d65a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d65e:	141f      	asrs	r7, r3, #16
 801d660:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d662:	141b      	asrs	r3, r3, #16
 801d664:	fb01 3707 	mla	r7, r1, r7, r3
 801d668:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d66a:	eb03 0a07 	add.w	sl, r3, r7
 801d66e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d672:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d676:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d67a:	b29b      	uxth	r3, r3
 801d67c:	2d00      	cmp	r5, #0
 801d67e:	f000 813d 	beq.w	801d8fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801d682:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d686:	eb0a 0b01 	add.w	fp, sl, r1
 801d68a:	fa1f fa85 	uxth.w	sl, r5
 801d68e:	940f      	str	r4, [sp, #60]	; 0x3c
 801d690:	fb0a fc0c 	mul.w	ip, sl, ip
 801d694:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d698:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d69c:	eba0 000c 	sub.w	r0, r0, ip
 801d6a0:	9410      	str	r4, [sp, #64]	; 0x40
 801d6a2:	fa1f fa8a 	uxth.w	sl, sl
 801d6a6:	b280      	uxth	r0, r0
 801d6a8:	eba3 030a 	sub.w	r3, r3, sl
 801d6ac:	fb08 f000 	mul.w	r0, r8, r0
 801d6b0:	b29b      	uxth	r3, r3
 801d6b2:	fb09 0303 	mla	r3, r9, r3, r0
 801d6b6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d6b8:	fb0a 3300 	mla	r3, sl, r0, r3
 801d6bc:	fb0c 3304 	mla	r3, ip, r4, r3
 801d6c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d6c4:	2b00      	cmp	r3, #0
 801d6c6:	f000 810b 	beq.w	801d8e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801d6ca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d6cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d6d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d6d2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d6d6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d6da:	f000 8114 	beq.w	801d906 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d6de:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d6e2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d6e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d6ea:	fb0a fc0c 	mul.w	ip, sl, ip
 801d6ee:	fb09 f707 	mul.w	r7, r9, r7
 801d6f2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d6f6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d6fa:	f107 0b20 	add.w	fp, r7, #32
 801d6fe:	44cc      	add	ip, r9
 801d700:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d704:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d708:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d70c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d710:	ea4c 0909 	orr.w	r9, ip, r9
 801d714:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d718:	8847      	ldrh	r7, [r0, #2]
 801d71a:	d019      	beq.n	801d750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801d71c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d720:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d724:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d728:	fb0a fc0c 	mul.w	ip, sl, ip
 801d72c:	fb08 f807 	mul.w	r8, r8, r7
 801d730:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d734:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d738:	f108 0b20 	add.w	fp, r8, #32
 801d73c:	44bc      	add	ip, r7
 801d73e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d742:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d746:	0a3f      	lsrs	r7, r7, #8
 801d748:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d74c:	ea4c 0707 	orr.w	r7, ip, r7
 801d750:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d754:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d758:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d75c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d760:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d764:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d768:	ea4c 0909 	orr.w	r9, ip, r9
 801d76c:	ea4a 0707 	orr.w	r7, sl, r7
 801d770:	2d00      	cmp	r5, #0
 801d772:	f000 80ca 	beq.w	801d90a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801d776:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d77a:	3901      	subs	r1, #1
 801d77c:	0049      	lsls	r1, r1, #1
 801d77e:	3102      	adds	r1, #2
 801d780:	eb00 0c01 	add.w	ip, r0, r1
 801d784:	5a41      	ldrh	r1, [r0, r1]
 801d786:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d788:	28ff      	cmp	r0, #255	; 0xff
 801d78a:	d019      	beq.n	801d7c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801d78c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d790:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d792:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d796:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d79a:	fb04 fa01 	mul.w	sl, r4, r1
 801d79e:	fb08 f800 	mul.w	r8, r8, r0
 801d7a2:	f10a 0020 	add.w	r0, sl, #32
 801d7a6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d7aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d7ae:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d7b2:	4441      	add	r1, r8
 801d7b4:	0a00      	lsrs	r0, r0, #8
 801d7b6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d7ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7be:	4301      	orrs	r1, r0
 801d7c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d7c2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d7c6:	2cff      	cmp	r4, #255	; 0xff
 801d7c8:	d01a      	beq.n	801d800 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801d7ca:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d7ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7d2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d7d6:	fb04 fa00 	mul.w	sl, r4, r0
 801d7da:	fb08 f80c 	mul.w	r8, r8, ip
 801d7de:	f10a 0c20 	add.w	ip, sl, #32
 801d7e2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d7e6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d7ea:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d7ee:	4440      	add	r0, r8
 801d7f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d7f4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d7f8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d7fc:	ea40 000c 	orr.w	r0, r0, ip
 801d800:	fb15 fc02 	smulbb	ip, r5, r2
 801d804:	f1c5 0810 	rsb	r8, r5, #16
 801d808:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d80c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d810:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d814:	eba8 0802 	sub.w	r8, r8, r2
 801d818:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d81c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d820:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d824:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d828:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d82c:	ea4a 0101 	orr.w	r1, sl, r1
 801d830:	437a      	muls	r2, r7
 801d832:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d836:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d83a:	fb09 2208 	mla	r2, r9, r8, r2
 801d83e:	ea4b 0000 	orr.w	r0, fp, r0
 801d842:	fb05 2201 	mla	r2, r5, r1, r2
 801d846:	fb0c 2200 	mla	r2, ip, r0, r2
 801d84a:	0d57      	lsrs	r7, r2, #21
 801d84c:	0952      	lsrs	r2, r2, #5
 801d84e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d852:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d856:	433a      	orrs	r2, r7
 801d858:	2bff      	cmp	r3, #255	; 0xff
 801d85a:	b292      	uxth	r2, r2
 801d85c:	d102      	bne.n	801d864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d85e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d860:	29ff      	cmp	r1, #255	; 0xff
 801d862:	d063      	beq.n	801d92c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801d864:	980a      	ldr	r0, [sp, #40]	; 0x28
 801d866:	1215      	asrs	r5, r2, #8
 801d868:	f8be 1000 	ldrh.w	r1, [lr]
 801d86c:	4343      	muls	r3, r0
 801d86e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d870:	10cf      	asrs	r7, r1, #3
 801d872:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d876:	1c58      	adds	r0, r3, #1
 801d878:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d87c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d880:	1208      	asrs	r0, r1, #8
 801d882:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d886:	00c9      	lsls	r1, r1, #3
 801d888:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d88c:	b2db      	uxtb	r3, r3
 801d88e:	b2c9      	uxtb	r1, r1
 801d890:	fb10 f003 	smulbb	r0, r0, r3
 801d894:	fb11 f103 	smulbb	r1, r1, r3
 801d898:	fb05 0504 	mla	r5, r5, r4, r0
 801d89c:	10d0      	asrs	r0, r2, #3
 801d89e:	fb17 f703 	smulbb	r7, r7, r3
 801d8a2:	00d2      	lsls	r2, r2, #3
 801d8a4:	b2ad      	uxth	r5, r5
 801d8a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d8aa:	b2d2      	uxtb	r2, r2
 801d8ac:	fb00 7004 	mla	r0, r0, r4, r7
 801d8b0:	1c6b      	adds	r3, r5, #1
 801d8b2:	fb02 1204 	mla	r2, r2, r4, r1
 801d8b6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d8ba:	b292      	uxth	r2, r2
 801d8bc:	b280      	uxth	r0, r0
 801d8be:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d8c2:	1c57      	adds	r7, r2, #1
 801d8c4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d8c8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d8cc:	433d      	orrs	r5, r7
 801d8ce:	1c47      	adds	r7, r0, #1
 801d8d0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d8d4:	097f      	lsrs	r7, r7, #5
 801d8d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d8da:	433d      	orrs	r5, r7
 801d8dc:	f8ae 5000 	strh.w	r5, [lr]
 801d8e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d8e2:	f10e 0e02 	add.w	lr, lr, #2
 801d8e6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801d8e8:	4413      	add	r3, r2
 801d8ea:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801d8ec:	9321      	str	r3, [sp, #132]	; 0x84
 801d8ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d8f0:	441a      	add	r2, r3
 801d8f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d8f4:	3b01      	subs	r3, #1
 801d8f6:	9222      	str	r2, [sp, #136]	; 0x88
 801d8f8:	9313      	str	r3, [sp, #76]	; 0x4c
 801d8fa:	e61c      	b.n	801d536 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801d8fc:	fb08 f000 	mul.w	r0, r8, r0
 801d900:	fb09 0303 	mla	r3, r9, r3, r0
 801d904:	e6dc      	b.n	801d6c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801d906:	46b9      	mov	r9, r7
 801d908:	e704      	b.n	801d714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801d90a:	f1c2 0110 	rsb	r1, r2, #16
 801d90e:	437a      	muls	r2, r7
 801d910:	fb09 2901 	mla	r9, r9, r1, r2
 801d914:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d918:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d91c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d920:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d924:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d928:	4302      	orrs	r2, r0
 801d92a:	e795      	b.n	801d858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801d92c:	f8ae 2000 	strh.w	r2, [lr]
 801d930:	e7d6      	b.n	801d8e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801d932:	b017      	add	sp, #92	; 0x5c
 801d934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d93c:	b085      	sub	sp, #20
 801d93e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801d942:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801d946:	2800      	cmp	r0, #0
 801d948:	9103      	str	r1, [sp, #12]
 801d94a:	fb00 7406 	mla	r4, r0, r6, r7
 801d94e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801d952:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801d956:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d95a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801d95e:	eb02 0904 	add.w	r9, r2, r4
 801d962:	9501      	str	r5, [sp, #4]
 801d964:	f2c0 8141 	blt.w	801dbea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d968:	4583      	cmp	fp, r0
 801d96a:	f340 813e 	ble.w	801dbea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d96e:	2f00      	cmp	r7, #0
 801d970:	f2c0 8137 	blt.w	801dbe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d974:	42be      	cmp	r6, r7
 801d976:	f340 8134 	ble.w	801dbe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d97a:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d97e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d982:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801d986:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d98a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801d98e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d992:	4355      	muls	r5, r2
 801d994:	fb0c f203 	mul.w	r2, ip, r3
 801d998:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d99c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801d9a0:	441d      	add	r5, r3
 801d9a2:	f102 0320 	add.w	r3, r2, #32
 801d9a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d9aa:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d9ae:	0a1b      	lsrs	r3, r3, #8
 801d9b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d9b4:	431c      	orrs	r4, r3
 801d9b6:	1c7b      	adds	r3, r7, #1
 801d9b8:	f100 811c 	bmi.w	801dbf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d9bc:	429e      	cmp	r6, r3
 801d9be:	f340 8119 	ble.w	801dbf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d9c2:	2900      	cmp	r1, #0
 801d9c4:	f000 8119 	beq.w	801dbfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d9c8:	9a01      	ldr	r2, [sp, #4]
 801d9ca:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d9ce:	8855      	ldrh	r5, [r2, #2]
 801d9d0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d9d4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801d9d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d9dc:	fb08 f802 	mul.w	r8, r8, r2
 801d9e0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801d9e4:	435d      	muls	r5, r3
 801d9e6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d9ea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d9ee:	44d0      	add	r8, sl
 801d9f0:	f105 0a20 	add.w	sl, r5, #32
 801d9f4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d9f8:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d9fc:	0a2d      	lsrs	r5, r5, #8
 801d9fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801da02:	432a      	orrs	r2, r5
 801da04:	3001      	adds	r0, #1
 801da06:	f100 80fe 	bmi.w	801dc06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801da0a:	4583      	cmp	fp, r0
 801da0c:	f340 80fb 	ble.w	801dc06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801da10:	f1be 0f00 	cmp.w	lr, #0
 801da14:	f000 80fc 	beq.w	801dc10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801da18:	2f00      	cmp	r7, #0
 801da1a:	f2c0 80f1 	blt.w	801dc00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801da1e:	42be      	cmp	r6, r7
 801da20:	f340 80ee 	ble.w	801dc00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801da24:	9801      	ldr	r0, [sp, #4]
 801da26:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801da2a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801da2e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801da32:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801da36:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801da3a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801da3e:	fb0a fa00 	mul.w	sl, sl, r0
 801da42:	fb05 f808 	mul.w	r8, r5, r8
 801da46:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801da4a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801da4e:	4482      	add	sl, r0
 801da50:	f108 0020 	add.w	r0, r8, #32
 801da54:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801da58:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801da5c:	0a00      	lsrs	r0, r0, #8
 801da5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801da62:	ea4b 0b00 	orr.w	fp, fp, r0
 801da66:	3701      	adds	r7, #1
 801da68:	f100 80d7 	bmi.w	801dc1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801da6c:	42be      	cmp	r6, r7
 801da6e:	f340 80d4 	ble.w	801dc1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801da72:	2900      	cmp	r1, #0
 801da74:	f000 80d4 	beq.w	801dc20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801da78:	3601      	adds	r6, #1
 801da7a:	9801      	ldr	r0, [sp, #4]
 801da7c:	f819 7006 	ldrb.w	r7, [r9, r6]
 801da80:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801da84:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801da88:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801da8c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801da90:	fb09 f906 	mul.w	r9, r9, r6
 801da94:	fb07 f800 	mul.w	r8, r7, r0
 801da98:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801da9c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801daa0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801daa4:	44d1      	add	r9, sl
 801daa6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801daaa:	f108 0020 	add.w	r0, r8, #32
 801daae:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801dab2:	0a00      	lsrs	r0, r0, #8
 801dab4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dab8:	4330      	orrs	r0, r6
 801daba:	b28e      	uxth	r6, r1
 801dabc:	fa1f f98e 	uxth.w	r9, lr
 801dac0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801dac4:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801dac8:	fb06 f809 	mul.w	r8, r6, r9
 801dacc:	0136      	lsls	r6, r6, #4
 801dace:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dad2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801dad6:	9601      	str	r6, [sp, #4]
 801dad8:	ea4a 0404 	orr.w	r4, sl, r4
 801dadc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801dae0:	fa1f f689 	uxth.w	r6, r9
 801dae4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dae8:	fb11 f90e 	smulbb	r9, r1, lr
 801daec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801daf0:	9602      	str	r6, [sp, #8]
 801daf2:	4626      	mov	r6, r4
 801daf4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801daf8:	f1ce 0410 	rsb	r4, lr, #16
 801dafc:	ea4a 0202 	orr.w	r2, sl, r2
 801db00:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801db04:	1a64      	subs	r4, r4, r1
 801db06:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801db0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801db0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801db12:	434a      	muls	r2, r1
 801db14:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801db18:	ea4a 0000 	orr.w	r0, sl, r0
 801db1c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801db20:	fb04 2406 	mla	r4, r4, r6, r2
 801db24:	9903      	ldr	r1, [sp, #12]
 801db26:	fb09 4200 	mla	r2, r9, r0, r4
 801db2a:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801db2e:	9801      	ldr	r0, [sp, #4]
 801db30:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801db34:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801db38:	8809      	ldrh	r1, [r1, #0]
 801db3a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801db3e:	ea44 0b0b 	orr.w	fp, r4, fp
 801db42:	9c02      	ldr	r4, [sp, #8]
 801db44:	1b00      	subs	r0, r0, r4
 801db46:	9c01      	ldr	r4, [sp, #4]
 801db48:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801db4c:	eba4 0608 	sub.w	r6, r4, r8
 801db50:	b280      	uxth	r0, r0
 801db52:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801db56:	b2b6      	uxth	r6, r6
 801db58:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801db5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db60:	4373      	muls	r3, r6
 801db62:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801db66:	fb0c 3300 	mla	r3, ip, r0, r3
 801db6a:	9802      	ldr	r0, [sp, #8]
 801db6c:	ea42 0e0e 	orr.w	lr, r2, lr
 801db70:	fb00 3505 	mla	r5, r0, r5, r3
 801db74:	120b      	asrs	r3, r1, #8
 801db76:	10c8      	asrs	r0, r1, #3
 801db78:	fb08 5707 	mla	r7, r8, r7, r5
 801db7c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801db80:	00c9      	lsls	r1, r1, #3
 801db82:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801db86:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801db8a:	fa1f f28e 	uxth.w	r2, lr
 801db8e:	b2c9      	uxtb	r1, r1
 801db90:	b2ff      	uxtb	r7, r7
 801db92:	437b      	muls	r3, r7
 801db94:	4378      	muls	r0, r7
 801db96:	434f      	muls	r7, r1
 801db98:	1c59      	adds	r1, r3, #1
 801db9a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801db9e:	1213      	asrs	r3, r2, #8
 801dba0:	f023 0307 	bic.w	r3, r3, #7
 801dba4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dba8:	1c41      	adds	r1, r0, #1
 801dbaa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801dbae:	10d1      	asrs	r1, r2, #3
 801dbb0:	021b      	lsls	r3, r3, #8
 801dbb2:	f021 0103 	bic.w	r1, r1, #3
 801dbb6:	00d2      	lsls	r2, r2, #3
 801dbb8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801dbbc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801dbc0:	00c9      	lsls	r1, r1, #3
 801dbc2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dbc6:	430b      	orrs	r3, r1
 801dbc8:	1c79      	adds	r1, r7, #1
 801dbca:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801dbce:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801dbd2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dbd6:	431a      	orrs	r2, r3
 801dbd8:	9b03      	ldr	r3, [sp, #12]
 801dbda:	801a      	strh	r2, [r3, #0]
 801dbdc:	b005      	add	sp, #20
 801dbde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dbe2:	f04f 0c00 	mov.w	ip, #0
 801dbe6:	4664      	mov	r4, ip
 801dbe8:	e6e5      	b.n	801d9b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801dbea:	2300      	movs	r3, #0
 801dbec:	469c      	mov	ip, r3
 801dbee:	461a      	mov	r2, r3
 801dbf0:	461c      	mov	r4, r3
 801dbf2:	e707      	b.n	801da04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dbf4:	2300      	movs	r3, #0
 801dbf6:	461a      	mov	r2, r3
 801dbf8:	e704      	b.n	801da04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dbfa:	460b      	mov	r3, r1
 801dbfc:	460a      	mov	r2, r1
 801dbfe:	e701      	b.n	801da04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dc00:	2500      	movs	r5, #0
 801dc02:	46ab      	mov	fp, r5
 801dc04:	e72f      	b.n	801da66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801dc06:	2700      	movs	r7, #0
 801dc08:	463d      	mov	r5, r7
 801dc0a:	4638      	mov	r0, r7
 801dc0c:	46bb      	mov	fp, r7
 801dc0e:	e754      	b.n	801daba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc10:	4677      	mov	r7, lr
 801dc12:	4675      	mov	r5, lr
 801dc14:	4670      	mov	r0, lr
 801dc16:	46f3      	mov	fp, lr
 801dc18:	e74f      	b.n	801daba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc1a:	2700      	movs	r7, #0
 801dc1c:	4638      	mov	r0, r7
 801dc1e:	e74c      	b.n	801daba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dc20:	460f      	mov	r7, r1
 801dc22:	4608      	mov	r0, r1
 801dc24:	e749      	b.n	801daba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801dc28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc2c:	b093      	sub	sp, #76	; 0x4c
 801dc2e:	9210      	str	r2, [sp, #64]	; 0x40
 801dc30:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801dc32:	9011      	str	r0, [sp, #68]	; 0x44
 801dc34:	910e      	str	r1, [sp, #56]	; 0x38
 801dc36:	6850      	ldr	r0, [r2, #4]
 801dc38:	9306      	str	r3, [sp, #24]
 801dc3a:	6812      	ldr	r2, [r2, #0]
 801dc3c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801dc40:	fb00 1303 	mla	r3, r0, r3, r1
 801dc44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dc48:	9307      	str	r3, [sp, #28]
 801dc4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc4c:	681b      	ldr	r3, [r3, #0]
 801dc4e:	9308      	str	r3, [sp, #32]
 801dc50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc52:	685b      	ldr	r3, [r3, #4]
 801dc54:	9309      	str	r3, [sp, #36]	; 0x24
 801dc56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc58:	2b00      	cmp	r3, #0
 801dc5a:	dc03      	bgt.n	801dc64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801dc5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dc5e:	2b00      	cmp	r3, #0
 801dc60:	f340 83b6 	ble.w	801e3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801dc64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc6e:	1e48      	subs	r0, r1, #1
 801dc70:	1e55      	subs	r5, r2, #1
 801dc72:	9b06      	ldr	r3, [sp, #24]
 801dc74:	2b00      	cmp	r3, #0
 801dc76:	f340 8165 	ble.w	801df44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801dc7a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801dc7c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801dc7e:	1436      	asrs	r6, r6, #16
 801dc80:	ea4f 4323 	mov.w	r3, r3, asr #16
 801dc84:	d406      	bmi.n	801dc94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc86:	4286      	cmp	r6, r0
 801dc88:	da04      	bge.n	801dc94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc8a:	2b00      	cmp	r3, #0
 801dc8c:	db02      	blt.n	801dc94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc8e:	42ab      	cmp	r3, r5
 801dc90:	f2c0 8159 	blt.w	801df46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801dc94:	3601      	adds	r6, #1
 801dc96:	f100 8146 	bmi.w	801df26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801dc9a:	42b1      	cmp	r1, r6
 801dc9c:	f2c0 8143 	blt.w	801df26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801dca0:	3301      	adds	r3, #1
 801dca2:	f100 8140 	bmi.w	801df26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801dca6:	429a      	cmp	r2, r3
 801dca8:	f2c0 813d 	blt.w	801df26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801dcac:	9b06      	ldr	r3, [sp, #24]
 801dcae:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801dcb2:	9f07      	ldr	r7, [sp, #28]
 801dcb4:	930f      	str	r3, [sp, #60]	; 0x3c
 801dcb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dcb8:	2b00      	cmp	r3, #0
 801dcba:	f340 8166 	ble.w	801df8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dcbe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801dcc0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801dcc2:	1418      	asrs	r0, r3, #16
 801dcc4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801dcc6:	142d      	asrs	r5, r5, #16
 801dcc8:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801dccc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801dcce:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801dcd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dcd4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801dcd8:	f100 81f0 	bmi.w	801e0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801dcdc:	f102 3eff 	add.w	lr, r2, #4294967295
 801dce0:	4575      	cmp	r5, lr
 801dce2:	f280 81eb 	bge.w	801e0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801dce6:	2800      	cmp	r0, #0
 801dce8:	f2c0 81e8 	blt.w	801e0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801dcec:	f103 3eff 	add.w	lr, r3, #4294967295
 801dcf0:	4570      	cmp	r0, lr
 801dcf2:	f280 81e3 	bge.w	801e0bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801dcf6:	b212      	sxth	r2, r2
 801dcf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dcfa:	fa1f fe81 	uxth.w	lr, r1
 801dcfe:	fb00 5002 	mla	r0, r0, r2, r5
 801dd02:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801dd06:	eb03 0a00 	add.w	sl, r3, r0
 801dd0a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801dd0e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801dd12:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801dd16:	b29b      	uxth	r3, r3
 801dd18:	f1bc 0f00 	cmp.w	ip, #0
 801dd1c:	f000 817b 	beq.w	801e016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801dd20:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801dd24:	eb0a 0b02 	add.w	fp, sl, r2
 801dd28:	fa1f fa8c 	uxth.w	sl, ip
 801dd2c:	940a      	str	r4, [sp, #40]	; 0x28
 801dd2e:	fb0a fe0e 	mul.w	lr, sl, lr
 801dd32:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801dd36:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801dd3a:	eba5 050e 	sub.w	r5, r5, lr
 801dd3e:	940b      	str	r4, [sp, #44]	; 0x2c
 801dd40:	fa1f fa8a 	uxth.w	sl, sl
 801dd44:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801dd46:	b2ad      	uxth	r5, r5
 801dd48:	eba3 030a 	sub.w	r3, r3, sl
 801dd4c:	fb08 f505 	mul.w	r5, r8, r5
 801dd50:	b29b      	uxth	r3, r3
 801dd52:	fb09 5303 	mla	r3, r9, r3, r5
 801dd56:	fb0a 3304 	mla	r3, sl, r4, r3
 801dd5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801dd5c:	fb0e 3304 	mla	r3, lr, r4, r3
 801dd60:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dd64:	2b00      	cmp	r3, #0
 801dd66:	f000 80d1 	beq.w	801df0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801dd6a:	9c08      	ldr	r4, [sp, #32]
 801dd6c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dd70:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801dd74:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801dd78:	f000 8152 	beq.w	801e020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801dd7c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801dd80:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801dd84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dd88:	fb0a fe0e 	mul.w	lr, sl, lr
 801dd8c:	fb09 f000 	mul.w	r0, r9, r0
 801dd90:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801dd94:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801dd98:	f100 0b20 	add.w	fp, r0, #32
 801dd9c:	44ce      	add	lr, r9
 801dd9e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801dda2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801dda6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ddaa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ddae:	ea4e 0909 	orr.w	r9, lr, r9
 801ddb2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ddb6:	8868      	ldrh	r0, [r5, #2]
 801ddb8:	d019      	beq.n	801ddee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ddba:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ddbe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ddc2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ddc6:	fb0a fe0e 	mul.w	lr, sl, lr
 801ddca:	fb08 f800 	mul.w	r8, r8, r0
 801ddce:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ddd2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ddd6:	f108 0b20 	add.w	fp, r8, #32
 801ddda:	4486      	add	lr, r0
 801dddc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801dde0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801dde4:	0a00      	lsrs	r0, r0, #8
 801dde6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ddea:	ea4e 0000 	orr.w	r0, lr, r0
 801ddee:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ddf2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ddf6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ddfa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ddfe:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801de02:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801de06:	ea4e 0909 	orr.w	r9, lr, r9
 801de0a:	ea4a 0000 	orr.w	r0, sl, r0
 801de0e:	f1bc 0f00 	cmp.w	ip, #0
 801de12:	f000 8107 	beq.w	801e024 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801de16:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801de1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801de1c:	3a01      	subs	r2, #1
 801de1e:	2cff      	cmp	r4, #255	; 0xff
 801de20:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801de24:	f102 0202 	add.w	r2, r2, #2
 801de28:	eb05 0e02 	add.w	lr, r5, r2
 801de2c:	5aaa      	ldrh	r2, [r5, r2]
 801de2e:	d018      	beq.n	801de62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801de30:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801de34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de38:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801de3c:	fb04 fa02 	mul.w	sl, r4, r2
 801de40:	fb08 f805 	mul.w	r8, r8, r5
 801de44:	f10a 0520 	add.w	r5, sl, #32
 801de48:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801de4c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801de50:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801de54:	4442      	add	r2, r8
 801de56:	0a2d      	lsrs	r5, r5, #8
 801de58:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801de5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801de60:	432a      	orrs	r2, r5
 801de62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801de64:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801de68:	2cff      	cmp	r4, #255	; 0xff
 801de6a:	d01a      	beq.n	801dea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801de6c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801de70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801de74:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801de78:	fb04 fa05 	mul.w	sl, r4, r5
 801de7c:	fb08 f80e 	mul.w	r8, r8, lr
 801de80:	f10a 0e20 	add.w	lr, sl, #32
 801de84:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801de88:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801de8c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801de90:	4445      	add	r5, r8
 801de92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801de96:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801de9a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801de9e:	ea45 050e 	orr.w	r5, r5, lr
 801dea2:	fb1c fe01 	smulbb	lr, ip, r1
 801dea6:	f1cc 0810 	rsb	r8, ip, #16
 801deaa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801deae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801deb2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801deb6:	eba8 0801 	sub.w	r8, r8, r1
 801deba:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801debe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dec2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801dec6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801deca:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801dece:	ea4a 0202 	orr.w	r2, sl, r2
 801ded2:	4341      	muls	r1, r0
 801ded4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ded8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dedc:	fb09 1108 	mla	r1, r9, r8, r1
 801dee0:	ea4b 0505 	orr.w	r5, fp, r5
 801dee4:	fb0c 1102 	mla	r1, ip, r2, r1
 801dee8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801deec:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801def0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801def4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801def8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801defc:	ea42 0e0e 	orr.w	lr, r2, lr
 801df00:	fa1f f28e 	uxth.w	r2, lr
 801df04:	2bff      	cmp	r3, #255	; 0xff
 801df06:	f040 80a1 	bne.w	801e04c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801df0a:	803a      	strh	r2, [r7, #0]
 801df0c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801df0e:	3702      	adds	r7, #2
 801df10:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801df12:	4413      	add	r3, r2
 801df14:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801df16:	931d      	str	r3, [sp, #116]	; 0x74
 801df18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801df1a:	441a      	add	r2, r3
 801df1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801df1e:	3b01      	subs	r3, #1
 801df20:	921e      	str	r2, [sp, #120]	; 0x78
 801df22:	930f      	str	r3, [sp, #60]	; 0x3c
 801df24:	e6c7      	b.n	801dcb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801df26:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801df28:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801df2a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801df2c:	4433      	add	r3, r6
 801df2e:	931d      	str	r3, [sp, #116]	; 0x74
 801df30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801df32:	441c      	add	r4, r3
 801df34:	9b06      	ldr	r3, [sp, #24]
 801df36:	3b01      	subs	r3, #1
 801df38:	941e      	str	r4, [sp, #120]	; 0x78
 801df3a:	9306      	str	r3, [sp, #24]
 801df3c:	9b07      	ldr	r3, [sp, #28]
 801df3e:	3302      	adds	r3, #2
 801df40:	9307      	str	r3, [sp, #28]
 801df42:	e696      	b.n	801dc72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801df44:	d028      	beq.n	801df98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801df46:	9b06      	ldr	r3, [sp, #24]
 801df48:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801df4a:	3b01      	subs	r3, #1
 801df4c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801df4e:	fb00 5003 	mla	r0, r0, r3, r5
 801df52:	1400      	asrs	r0, r0, #16
 801df54:	f53f aeaa 	bmi.w	801dcac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801df58:	3901      	subs	r1, #1
 801df5a:	4288      	cmp	r0, r1
 801df5c:	f6bf aea6 	bge.w	801dcac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801df60:	9920      	ldr	r1, [sp, #128]	; 0x80
 801df62:	981e      	ldr	r0, [sp, #120]	; 0x78
 801df64:	fb01 0303 	mla	r3, r1, r3, r0
 801df68:	141b      	asrs	r3, r3, #16
 801df6a:	f53f ae9f 	bmi.w	801dcac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801df6e:	3a01      	subs	r2, #1
 801df70:	4293      	cmp	r3, r2
 801df72:	f6bf ae9b 	bge.w	801dcac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801df76:	9b06      	ldr	r3, [sp, #24]
 801df78:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801df7c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801df80:	930f      	str	r3, [sp, #60]	; 0x3c
 801df82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801df84:	2b00      	cmp	r3, #0
 801df86:	f300 80b6 	bgt.w	801e0f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801df8a:	9b06      	ldr	r3, [sp, #24]
 801df8c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801df90:	9b07      	ldr	r3, [sp, #28]
 801df92:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801df96:	9307      	str	r3, [sp, #28]
 801df98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df9a:	2b00      	cmp	r3, #0
 801df9c:	f340 8218 	ble.w	801e3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801dfa0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dfa4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dfa6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dfaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dfae:	eef0 6a62 	vmov.f32	s13, s5
 801dfb2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dfb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dfba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dfbe:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801dfc2:	eef0 6a43 	vmov.f32	s13, s6
 801dfc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dfca:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801dfce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dfd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dfd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dfda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dfde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dfe2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dfe6:	ee12 2a90 	vmov	r2, s5
 801dfea:	eef0 2a47 	vmov.f32	s5, s14
 801dfee:	fb92 f3f3 	sdiv	r3, r2, r3
 801dff2:	ee13 2a10 	vmov	r2, s6
 801dff6:	931f      	str	r3, [sp, #124]	; 0x7c
 801dff8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dffa:	eeb0 3a67 	vmov.f32	s6, s15
 801dffe:	fb92 f3f3 	sdiv	r3, r2, r3
 801e002:	9320      	str	r3, [sp, #128]	; 0x80
 801e004:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e006:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e008:	3b01      	subs	r3, #1
 801e00a:	930e      	str	r3, [sp, #56]	; 0x38
 801e00c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e00e:	bf08      	it	eq
 801e010:	4613      	moveq	r3, r2
 801e012:	9306      	str	r3, [sp, #24]
 801e014:	e61f      	b.n	801dc56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801e016:	fb08 f505 	mul.w	r5, r8, r5
 801e01a:	fb09 5303 	mla	r3, r9, r3, r5
 801e01e:	e69f      	b.n	801dd60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801e020:	4681      	mov	r9, r0
 801e022:	e6c6      	b.n	801ddb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801e024:	f1c1 0210 	rsb	r2, r1, #16
 801e028:	4341      	muls	r1, r0
 801e02a:	fb09 1902 	mla	r9, r9, r2, r1
 801e02e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e032:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e036:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e03a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e03e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e042:	ea42 0909 	orr.w	r9, r2, r9
 801e046:	fa1f f289 	uxth.w	r2, r9
 801e04a:	e75b      	b.n	801df04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801e04c:	f8b7 c000 	ldrh.w	ip, [r7]
 801e050:	43db      	mvns	r3, r3
 801e052:	ea4f 202c 	mov.w	r0, ip, asr #8
 801e056:	fa5f fe83 	uxtb.w	lr, r3
 801e05a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e05e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e062:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801e066:	fb00 f00e 	mul.w	r0, r0, lr
 801e06a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e06e:	b2db      	uxtb	r3, r3
 801e070:	1c41      	adds	r1, r0, #1
 801e072:	fb05 f50e 	mul.w	r5, r5, lr
 801e076:	fb03 f30e 	mul.w	r3, r3, lr
 801e07a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e07e:	1211      	asrs	r1, r2, #8
 801e080:	f021 0107 	bic.w	r1, r1, #7
 801e084:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e088:	48d3      	ldr	r0, [pc, #844]	; (801e3d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801e08a:	b2c9      	uxtb	r1, r1
 801e08c:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801e090:	1c69      	adds	r1, r5, #1
 801e092:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e096:	10d1      	asrs	r1, r2, #3
 801e098:	00d2      	lsls	r2, r2, #3
 801e09a:	f021 0103 	bic.w	r1, r1, #3
 801e09e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e0a2:	00c9      	lsls	r1, r1, #3
 801e0a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e0a8:	4301      	orrs	r1, r0
 801e0aa:	1c58      	adds	r0, r3, #1
 801e0ac:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e0b0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e0b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e0b8:	430a      	orrs	r2, r1
 801e0ba:	e726      	b.n	801df0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801e0bc:	f115 0e01 	adds.w	lr, r5, #1
 801e0c0:	f53f af24 	bmi.w	801df0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801e0c4:	4572      	cmp	r2, lr
 801e0c6:	f6ff af21 	blt.w	801df0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801e0ca:	f110 0e01 	adds.w	lr, r0, #1
 801e0ce:	f53f af1d 	bmi.w	801df0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801e0d2:	4573      	cmp	r3, lr
 801e0d4:	f6ff af1a 	blt.w	801df0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801e0d8:	b21b      	sxth	r3, r3
 801e0da:	b212      	sxth	r2, r2
 801e0dc:	9301      	str	r3, [sp, #4]
 801e0de:	9200      	str	r2, [sp, #0]
 801e0e0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801e0e4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801e0e8:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801e0ec:	4639      	mov	r1, r7
 801e0ee:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e0f0:	f7ff fc22 	bl	801d938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801e0f4:	e70a      	b.n	801df0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801e0f6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e0f8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e0fc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e0fe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e102:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e104:	fa1f fc82 	uxth.w	ip, r2
 801e108:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e10c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e10e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e112:	141f      	asrs	r7, r3, #16
 801e114:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e116:	141b      	asrs	r3, r3, #16
 801e118:	fb01 3707 	mla	r7, r1, r7, r3
 801e11c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e11e:	eb03 0a07 	add.w	sl, r3, r7
 801e122:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e126:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e12a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e12e:	b29b      	uxth	r3, r3
 801e130:	2d00      	cmp	r5, #0
 801e132:	f000 80fe 	beq.w	801e332 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801e136:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e13a:	eb0a 0b01 	add.w	fp, sl, r1
 801e13e:	fa1f fa85 	uxth.w	sl, r5
 801e142:	940c      	str	r4, [sp, #48]	; 0x30
 801e144:	fb0a fc0c 	mul.w	ip, sl, ip
 801e148:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e14c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e150:	eba0 000c 	sub.w	r0, r0, ip
 801e154:	940d      	str	r4, [sp, #52]	; 0x34
 801e156:	fa1f fa8a 	uxth.w	sl, sl
 801e15a:	b280      	uxth	r0, r0
 801e15c:	eba3 030a 	sub.w	r3, r3, sl
 801e160:	fb08 f000 	mul.w	r0, r8, r0
 801e164:	b29b      	uxth	r3, r3
 801e166:	fb09 0303 	mla	r3, r9, r3, r0
 801e16a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e16c:	fb0a 3300 	mla	r3, sl, r0, r3
 801e170:	fb0c 3304 	mla	r3, ip, r4, r3
 801e174:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e178:	2b00      	cmp	r3, #0
 801e17a:	f000 80cc 	beq.w	801e316 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801e17e:	9808      	ldr	r0, [sp, #32]
 801e180:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e184:	9c08      	ldr	r4, [sp, #32]
 801e186:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e18a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e18e:	f000 80d5 	beq.w	801e33c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801e192:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801e196:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e19a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e19e:	fb0a fc0c 	mul.w	ip, sl, ip
 801e1a2:	fb09 f707 	mul.w	r7, r9, r7
 801e1a6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e1aa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801e1ae:	f107 0b20 	add.w	fp, r7, #32
 801e1b2:	44cc      	add	ip, r9
 801e1b4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e1b8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e1bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e1c0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e1c4:	ea4c 0909 	orr.w	r9, ip, r9
 801e1c8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801e1cc:	8847      	ldrh	r7, [r0, #2]
 801e1ce:	d019      	beq.n	801e204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801e1d0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801e1d4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e1d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e1dc:	fb0a fc0c 	mul.w	ip, sl, ip
 801e1e0:	fb08 f807 	mul.w	r8, r8, r7
 801e1e4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e1e8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801e1ec:	f108 0b20 	add.w	fp, r8, #32
 801e1f0:	44bc      	add	ip, r7
 801e1f2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e1f6:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e1fa:	0a3f      	lsrs	r7, r7, #8
 801e1fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e200:	ea4c 0707 	orr.w	r7, ip, r7
 801e204:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e208:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e20c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e210:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e214:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e218:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e21c:	ea4c 0909 	orr.w	r9, ip, r9
 801e220:	ea4a 0707 	orr.w	r7, sl, r7
 801e224:	2d00      	cmp	r5, #0
 801e226:	f000 808b 	beq.w	801e340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801e22a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801e22e:	3901      	subs	r1, #1
 801e230:	0049      	lsls	r1, r1, #1
 801e232:	3102      	adds	r1, #2
 801e234:	eb00 0c01 	add.w	ip, r0, r1
 801e238:	5a41      	ldrh	r1, [r0, r1]
 801e23a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e23c:	28ff      	cmp	r0, #255	; 0xff
 801e23e:	d019      	beq.n	801e274 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801e240:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801e244:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e246:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e24a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e24e:	fb04 fa01 	mul.w	sl, r4, r1
 801e252:	fb08 f800 	mul.w	r8, r8, r0
 801e256:	f10a 0020 	add.w	r0, sl, #32
 801e25a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e25e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e262:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e266:	4441      	add	r1, r8
 801e268:	0a00      	lsrs	r0, r0, #8
 801e26a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e26e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e272:	4301      	orrs	r1, r0
 801e274:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e276:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e27a:	2cff      	cmp	r4, #255	; 0xff
 801e27c:	d01a      	beq.n	801e2b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801e27e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801e282:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e286:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e28a:	fb04 fa00 	mul.w	sl, r4, r0
 801e28e:	fb08 f80c 	mul.w	r8, r8, ip
 801e292:	f10a 0c20 	add.w	ip, sl, #32
 801e296:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e29a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e29e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e2a2:	4440      	add	r0, r8
 801e2a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2a8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e2ac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e2b0:	ea40 000c 	orr.w	r0, r0, ip
 801e2b4:	fb15 fc02 	smulbb	ip, r5, r2
 801e2b8:	f1c5 0810 	rsb	r8, r5, #16
 801e2bc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e2c0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e2c4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e2c8:	eba8 0802 	sub.w	r8, r8, r2
 801e2cc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e2d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e2d4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e2d8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e2dc:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e2e0:	ea4a 0101 	orr.w	r1, sl, r1
 801e2e4:	437a      	muls	r2, r7
 801e2e6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e2ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e2ee:	fb09 2208 	mla	r2, r9, r8, r2
 801e2f2:	ea4b 0000 	orr.w	r0, fp, r0
 801e2f6:	fb05 2201 	mla	r2, r5, r1, r2
 801e2fa:	fb0c 2200 	mla	r2, ip, r0, r2
 801e2fe:	0d57      	lsrs	r7, r2, #21
 801e300:	0952      	lsrs	r2, r2, #5
 801e302:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e306:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e30a:	433a      	orrs	r2, r7
 801e30c:	2bff      	cmp	r3, #255	; 0xff
 801e30e:	b292      	uxth	r2, r2
 801e310:	d127      	bne.n	801e362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801e312:	f8ae 2000 	strh.w	r2, [lr]
 801e316:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e318:	f10e 0e02 	add.w	lr, lr, #2
 801e31c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801e31e:	4413      	add	r3, r2
 801e320:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801e322:	931d      	str	r3, [sp, #116]	; 0x74
 801e324:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e326:	441a      	add	r2, r3
 801e328:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e32a:	3b01      	subs	r3, #1
 801e32c:	921e      	str	r2, [sp, #120]	; 0x78
 801e32e:	930f      	str	r3, [sp, #60]	; 0x3c
 801e330:	e627      	b.n	801df82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e332:	fb08 f000 	mul.w	r0, r8, r0
 801e336:	fb09 0303 	mla	r3, r9, r3, r0
 801e33a:	e71b      	b.n	801e174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801e33c:	46b9      	mov	r9, r7
 801e33e:	e743      	b.n	801e1c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801e340:	f1c2 0110 	rsb	r1, r2, #16
 801e344:	437a      	muls	r2, r7
 801e346:	fb09 2901 	mla	r9, r9, r1, r2
 801e34a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e34e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e352:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e356:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e35a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e35e:	4302      	orrs	r2, r0
 801e360:	e7d4      	b.n	801e30c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801e362:	f8be 7000 	ldrh.w	r7, [lr]
 801e366:	43db      	mvns	r3, r3
 801e368:	4c1b      	ldr	r4, [pc, #108]	; (801e3d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801e36a:	1238      	asrs	r0, r7, #8
 801e36c:	fa5f fc83 	uxtb.w	ip, r3
 801e370:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e374:	10fd      	asrs	r5, r7, #3
 801e376:	00fb      	lsls	r3, r7, #3
 801e378:	fb00 f00c 	mul.w	r0, r0, ip
 801e37c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e380:	b2db      	uxtb	r3, r3
 801e382:	fb05 f10c 	mul.w	r1, r5, ip
 801e386:	1c45      	adds	r5, r0, #1
 801e388:	fb03 f30c 	mul.w	r3, r3, ip
 801e38c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e390:	1215      	asrs	r5, r2, #8
 801e392:	f025 0507 	bic.w	r5, r5, #7
 801e396:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e39a:	1c4d      	adds	r5, r1, #1
 801e39c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801e3a0:	10d1      	asrs	r1, r2, #3
 801e3a2:	b2c0      	uxtb	r0, r0
 801e3a4:	f021 0103 	bic.w	r1, r1, #3
 801e3a8:	00d2      	lsls	r2, r2, #3
 801e3aa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801e3ae:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e3b2:	00c9      	lsls	r1, r1, #3
 801e3b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e3b8:	4308      	orrs	r0, r1
 801e3ba:	1c59      	adds	r1, r3, #1
 801e3bc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e3c0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e3c4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801e3c8:	4318      	orrs	r0, r3
 801e3ca:	f8ae 0000 	strh.w	r0, [lr]
 801e3ce:	e7a2      	b.n	801e316 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801e3d0:	b013      	add	sp, #76	; 0x4c
 801e3d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3d6:	bf00      	nop
 801e3d8:	fffff800 	.word	0xfffff800

0801e3dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801e3dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e3e0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801e3e4:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801e3e8:	fb05 4c03 	mla	ip, r5, r3, r4
 801e3ec:	2d00      	cmp	r5, #0
 801e3ee:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801e3f2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801e3f6:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801e3fa:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801e3fe:	8808      	ldrh	r0, [r1, #0]
 801e400:	f2c0 80a7 	blt.w	801e552 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e404:	45aa      	cmp	sl, r5
 801e406:	f340 80a4 	ble.w	801e552 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e40a:	2c00      	cmp	r4, #0
 801e40c:	f2c0 809f 	blt.w	801e54e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e410:	42a3      	cmp	r3, r4
 801e412:	f340 809c 	ble.w	801e54e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e416:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801e41a:	1c62      	adds	r2, r4, #1
 801e41c:	f100 809c 	bmi.w	801e558 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e420:	4293      	cmp	r3, r2
 801e422:	f340 8099 	ble.w	801e558 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e426:	f1b9 0f00 	cmp.w	r9, #0
 801e42a:	f000 8095 	beq.w	801e558 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e42e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801e432:	3501      	adds	r5, #1
 801e434:	f100 8094 	bmi.w	801e560 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e438:	45aa      	cmp	sl, r5
 801e43a:	f340 8091 	ble.w	801e560 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e43e:	2f00      	cmp	r7, #0
 801e440:	f000 808e 	beq.w	801e560 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e444:	2c00      	cmp	r4, #0
 801e446:	f2c0 8089 	blt.w	801e55c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e44a:	42a3      	cmp	r3, r4
 801e44c:	f340 8086 	ble.w	801e55c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e450:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801e454:	3401      	adds	r4, #1
 801e456:	f100 8086 	bmi.w	801e566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e45a:	42a3      	cmp	r3, r4
 801e45c:	f340 8083 	ble.w	801e566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e460:	f1b9 0f00 	cmp.w	r9, #0
 801e464:	d07f      	beq.n	801e566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e466:	3301      	adds	r3, #1
 801e468:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801e46c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e470:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e474:	fb19 fe07 	smulbb	lr, r9, r7
 801e478:	f1c7 0210 	rsb	r2, r7, #16
 801e47c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e480:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e484:	eba2 0209 	sub.w	r2, r2, r9
 801e488:	ea44 0808 	orr.w	r8, r4, r8
 801e48c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e490:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e494:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e498:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e49c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e4a0:	ea44 0c0c 	orr.w	ip, r4, ip
 801e4a4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e4a8:	fb04 f40c 	mul.w	r4, r4, ip
 801e4ac:	fb02 4808 	mla	r8, r2, r8, r4
 801e4b0:	041a      	lsls	r2, r3, #16
 801e4b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e4b6:	b2b4      	uxth	r4, r6
 801e4b8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e4bc:	43f6      	mvns	r6, r6
 801e4be:	4313      	orrs	r3, r2
 801e4c0:	042a      	lsls	r2, r5, #16
 801e4c2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e4c6:	b2f6      	uxtb	r6, r6
 801e4c8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e4cc:	fb0e 8303 	mla	r3, lr, r3, r8
 801e4d0:	432a      	orrs	r2, r5
 801e4d2:	fb07 3202 	mla	r2, r7, r2, r3
 801e4d6:	10c7      	asrs	r7, r0, #3
 801e4d8:	0d53      	lsrs	r3, r2, #21
 801e4da:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e4de:	0952      	lsrs	r2, r2, #5
 801e4e0:	fb17 f706 	smulbb	r7, r7, r6
 801e4e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e4e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e4ec:	431a      	orrs	r2, r3
 801e4ee:	b293      	uxth	r3, r2
 801e4f0:	1202      	asrs	r2, r0, #8
 801e4f2:	121d      	asrs	r5, r3, #8
 801e4f4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e4f8:	00c0      	lsls	r0, r0, #3
 801e4fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e4fe:	fb12 f206 	smulbb	r2, r2, r6
 801e502:	b2c0      	uxtb	r0, r0
 801e504:	fb05 2504 	mla	r5, r5, r4, r2
 801e508:	10da      	asrs	r2, r3, #3
 801e50a:	fb10 f006 	smulbb	r0, r0, r6
 801e50e:	00db      	lsls	r3, r3, #3
 801e510:	b2ad      	uxth	r5, r5
 801e512:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e516:	b2db      	uxtb	r3, r3
 801e518:	fb02 7204 	mla	r2, r2, r4, r7
 801e51c:	fb03 0004 	mla	r0, r3, r4, r0
 801e520:	1c6b      	adds	r3, r5, #1
 801e522:	b292      	uxth	r2, r2
 801e524:	b280      	uxth	r0, r0
 801e526:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e52a:	1c43      	adds	r3, r0, #1
 801e52c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e530:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e534:	1c50      	adds	r0, r2, #1
 801e536:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e53a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e53e:	0952      	lsrs	r2, r2, #5
 801e540:	432b      	orrs	r3, r5
 801e542:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e546:	4313      	orrs	r3, r2
 801e548:	800b      	strh	r3, [r1, #0]
 801e54a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e54e:	4680      	mov	r8, r0
 801e550:	e763      	b.n	801e41a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801e552:	4684      	mov	ip, r0
 801e554:	4680      	mov	r8, r0
 801e556:	e76c      	b.n	801e432 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e558:	4684      	mov	ip, r0
 801e55a:	e76a      	b.n	801e432 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e55c:	4605      	mov	r5, r0
 801e55e:	e779      	b.n	801e454 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801e560:	4603      	mov	r3, r0
 801e562:	4605      	mov	r5, r0
 801e564:	e782      	b.n	801e46c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801e566:	4603      	mov	r3, r0
 801e568:	e780      	b.n	801e46c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801e56a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e56a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e56e:	b093      	sub	sp, #76	; 0x4c
 801e570:	461d      	mov	r5, r3
 801e572:	9210      	str	r2, [sp, #64]	; 0x40
 801e574:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e576:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801e57a:	910a      	str	r1, [sp, #40]	; 0x28
 801e57c:	920b      	str	r2, [sp, #44]	; 0x2c
 801e57e:	6859      	ldr	r1, [r3, #4]
 801e580:	681b      	ldr	r3, [r3, #0]
 801e582:	9011      	str	r0, [sp, #68]	; 0x44
 801e584:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801e588:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801e58c:	fb01 2707 	mla	r7, r1, r7, r2
 801e590:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801e594:	9307      	str	r3, [sp, #28]
 801e596:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e598:	681b      	ldr	r3, [r3, #0]
 801e59a:	9309      	str	r3, [sp, #36]	; 0x24
 801e59c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e59e:	43db      	mvns	r3, r3
 801e5a0:	b2db      	uxtb	r3, r3
 801e5a2:	9308      	str	r3, [sp, #32]
 801e5a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e5a6:	2b00      	cmp	r3, #0
 801e5a8:	dc03      	bgt.n	801e5b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e5aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5ac:	2b00      	cmp	r3, #0
 801e5ae:	f340 8205 	ble.w	801e9bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e5b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e5b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e5b8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e5bc:	1e48      	subs	r0, r1, #1
 801e5be:	f102 3cff 	add.w	ip, r2, #4294967295
 801e5c2:	2d00      	cmp	r5, #0
 801e5c4:	f340 80da 	ble.w	801e77c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801e5c8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e5cc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e5d0:	d406      	bmi.n	801e5e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e5d2:	4586      	cmp	lr, r0
 801e5d4:	da04      	bge.n	801e5e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e5d6:	2b00      	cmp	r3, #0
 801e5d8:	db02      	blt.n	801e5e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e5da:	4563      	cmp	r3, ip
 801e5dc:	f2c0 80cf 	blt.w	801e77e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e5e0:	f11e 0e01 	adds.w	lr, lr, #1
 801e5e4:	f100 80c1 	bmi.w	801e76a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e5e8:	4571      	cmp	r1, lr
 801e5ea:	f2c0 80be 	blt.w	801e76a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e5ee:	3301      	adds	r3, #1
 801e5f0:	f100 80bb 	bmi.w	801e76a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e5f4:	429a      	cmp	r2, r3
 801e5f6:	f2c0 80b8 	blt.w	801e76a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e5fa:	46a9      	mov	r9, r5
 801e5fc:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801e600:	f1b9 0f00 	cmp.w	r9, #0
 801e604:	f340 80d8 	ble.w	801e7b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801e608:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e60a:	1421      	asrs	r1, r4, #16
 801e60c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e610:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e614:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e618:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e61c:	f100 8112 	bmi.w	801e844 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801e620:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e624:	4551      	cmp	r1, sl
 801e626:	f280 810d 	bge.w	801e844 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801e62a:	2800      	cmp	r0, #0
 801e62c:	f2c0 810a 	blt.w	801e844 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801e630:	f103 3aff 	add.w	sl, r3, #4294967295
 801e634:	4550      	cmp	r0, sl
 801e636:	f280 8105 	bge.w	801e844 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801e63a:	fa0f f38e 	sxth.w	r3, lr
 801e63e:	fb00 1103 	mla	r1, r0, r3, r1
 801e642:	9809      	ldr	r0, [sp, #36]	; 0x24
 801e644:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801e648:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801e64c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801e650:	f1bc 0f00 	cmp.w	ip, #0
 801e654:	d007      	beq.n	801e666 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801e656:	005b      	lsls	r3, r3, #1
 801e658:	eb0a 0003 	add.w	r0, sl, r3
 801e65c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801e660:	930c      	str	r3, [sp, #48]	; 0x30
 801e662:	8843      	ldrh	r3, [r0, #2]
 801e664:	930d      	str	r3, [sp, #52]	; 0x34
 801e666:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801e66a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e66e:	fb12 f30c 	smulbb	r3, r2, ip
 801e672:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e676:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e67a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e67e:	10db      	asrs	r3, r3, #3
 801e680:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e684:	ea40 000e 	orr.w	r0, r0, lr
 801e688:	f1cc 0e10 	rsb	lr, ip, #16
 801e68c:	ea4a 0101 	orr.w	r1, sl, r1
 801e690:	9f08      	ldr	r7, [sp, #32]
 801e692:	ebae 0e02 	sub.w	lr, lr, r2
 801e696:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e69a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e69e:	4351      	muls	r1, r2
 801e6a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e6a2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e6a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e6a8:	0410      	lsls	r0, r2, #16
 801e6aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e6ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e6b2:	4310      	orrs	r0, r2
 801e6b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e6b6:	0412      	lsls	r2, r2, #16
 801e6b8:	fb03 e000 	mla	r0, r3, r0, lr
 801e6bc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801e6c0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e6c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e6c8:	ea42 020e 	orr.w	r2, r2, lr
 801e6cc:	fb03 0302 	mla	r3, r3, r2, r0
 801e6d0:	f8b8 0000 	ldrh.w	r0, [r8]
 801e6d4:	0d5a      	lsrs	r2, r3, #21
 801e6d6:	095b      	lsrs	r3, r3, #5
 801e6d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e6dc:	1201      	asrs	r1, r0, #8
 801e6de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e6e2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e6e6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e6ea:	00c0      	lsls	r0, r0, #3
 801e6ec:	4313      	orrs	r3, r2
 801e6ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801e6f2:	fb11 f107 	smulbb	r1, r1, r7
 801e6f6:	b2c0      	uxtb	r0, r0
 801e6f8:	b29b      	uxth	r3, r3
 801e6fa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e6fe:	fb10 f007 	smulbb	r0, r0, r7
 801e702:	fb1e fe07 	smulbb	lr, lr, r7
 801e706:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e70a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e70e:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e712:	10d9      	asrs	r1, r3, #3
 801e714:	00db      	lsls	r3, r3, #3
 801e716:	fa1f fc8c 	uxth.w	ip, ip
 801e71a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e71e:	b2db      	uxtb	r3, r3
 801e720:	fb01 e102 	mla	r1, r1, r2, lr
 801e724:	fb03 0302 	mla	r3, r3, r2, r0
 801e728:	b289      	uxth	r1, r1
 801e72a:	b29a      	uxth	r2, r3
 801e72c:	f10c 0301 	add.w	r3, ip, #1
 801e730:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e734:	1c53      	adds	r3, r2, #1
 801e736:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e73a:	1c4a      	adds	r2, r1, #1
 801e73c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e740:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e744:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e748:	0949      	lsrs	r1, r1, #5
 801e74a:	ea43 030c 	orr.w	r3, r3, ip
 801e74e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e752:	430b      	orrs	r3, r1
 801e754:	f8a8 3000 	strh.w	r3, [r8]
 801e758:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e75a:	f108 0802 	add.w	r8, r8, #2
 801e75e:	f109 39ff 	add.w	r9, r9, #4294967295
 801e762:	441c      	add	r4, r3
 801e764:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e766:	441e      	add	r6, r3
 801e768:	e74a      	b.n	801e600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e76a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e76c:	3d01      	subs	r5, #1
 801e76e:	441c      	add	r4, r3
 801e770:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e772:	441e      	add	r6, r3
 801e774:	9b07      	ldr	r3, [sp, #28]
 801e776:	3302      	adds	r3, #2
 801e778:	9307      	str	r3, [sp, #28]
 801e77a:	e722      	b.n	801e5c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e77c:	d022      	beq.n	801e7c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e77e:	1e6b      	subs	r3, r5, #1
 801e780:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e782:	fb00 4003 	mla	r0, r0, r3, r4
 801e786:	1400      	asrs	r0, r0, #16
 801e788:	f53f af37 	bmi.w	801e5fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e78c:	3901      	subs	r1, #1
 801e78e:	4288      	cmp	r0, r1
 801e790:	f6bf af33 	bge.w	801e5fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e794:	9920      	ldr	r1, [sp, #128]	; 0x80
 801e796:	fb01 6303 	mla	r3, r1, r3, r6
 801e79a:	141b      	asrs	r3, r3, #16
 801e79c:	f53f af2d 	bmi.w	801e5fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e7a0:	3a01      	subs	r2, #1
 801e7a2:	4293      	cmp	r3, r2
 801e7a4:	f6bf af29 	bge.w	801e5fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e7a8:	46a8      	mov	r8, r5
 801e7aa:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e7ae:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801e7b2:	f1b8 0f00 	cmp.w	r8, #0
 801e7b6:	dc60      	bgt.n	801e87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801e7b8:	9b07      	ldr	r3, [sp, #28]
 801e7ba:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e7be:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e7c2:	9307      	str	r3, [sp, #28]
 801e7c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e7c6:	2b00      	cmp	r3, #0
 801e7c8:	f340 80f8 	ble.w	801e9bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e7cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e7d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e7d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e7d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e7da:	eef0 6a62 	vmov.f32	s13, s5
 801e7de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e7e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e7e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7ea:	ee16 4a90 	vmov	r4, s13
 801e7ee:	eef0 6a43 	vmov.f32	s13, s6
 801e7f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7f6:	ee16 6a90 	vmov	r6, s13
 801e7fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e7fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e802:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e806:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e80a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e80e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e812:	ee12 2a90 	vmov	r2, s5
 801e816:	eef0 2a47 	vmov.f32	s5, s14
 801e81a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e81e:	ee13 2a10 	vmov	r2, s6
 801e822:	931f      	str	r3, [sp, #124]	; 0x7c
 801e824:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e826:	eeb0 3a67 	vmov.f32	s6, s15
 801e82a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e82e:	9320      	str	r3, [sp, #128]	; 0x80
 801e830:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e832:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e834:	3b01      	subs	r3, #1
 801e836:	930a      	str	r3, [sp, #40]	; 0x28
 801e838:	bf08      	it	eq
 801e83a:	4615      	moveq	r5, r2
 801e83c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e83e:	bf18      	it	ne
 801e840:	461d      	movne	r5, r3
 801e842:	e6af      	b.n	801e5a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e844:	f111 0a01 	adds.w	sl, r1, #1
 801e848:	d486      	bmi.n	801e758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e84a:	45d6      	cmp	lr, sl
 801e84c:	db84      	blt.n	801e758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e84e:	f110 0a01 	adds.w	sl, r0, #1
 801e852:	d481      	bmi.n	801e758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e854:	4553      	cmp	r3, sl
 801e856:	f6ff af7f 	blt.w	801e758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e85a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801e85c:	b21b      	sxth	r3, r3
 801e85e:	9101      	str	r1, [sp, #4]
 801e860:	4641      	mov	r1, r8
 801e862:	9300      	str	r3, [sp, #0]
 801e864:	fa0f f38e 	sxth.w	r3, lr
 801e868:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e86c:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e870:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e872:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e874:	f7ff fdb2 	bl	801e3dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e878:	e76e      	b.n	801e758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e87a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e87c:	1430      	asrs	r0, r6, #16
 801e87e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801e880:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e884:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e888:	1423      	asrs	r3, r4, #16
 801e88a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e88e:	fb01 3000 	mla	r0, r1, r0, r3
 801e892:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e894:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e898:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e89c:	8858      	ldrh	r0, [r3, #2]
 801e89e:	f1be 0f00 	cmp.w	lr, #0
 801e8a2:	d00b      	beq.n	801e8bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801e8a4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801e8a8:	3901      	subs	r1, #1
 801e8aa:	0049      	lsls	r1, r1, #1
 801e8ac:	3102      	adds	r1, #2
 801e8ae:	eb03 0b01 	add.w	fp, r3, r1
 801e8b2:	5a5b      	ldrh	r3, [r3, r1]
 801e8b4:	930e      	str	r3, [sp, #56]	; 0x38
 801e8b6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e8ba:	930f      	str	r3, [sp, #60]	; 0x3c
 801e8bc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e8c0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e8c4:	fb12 f30e 	smulbb	r3, r2, lr
 801e8c8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e8cc:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801e8d0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e8d4:	10db      	asrs	r3, r3, #3
 801e8d6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e8da:	ea41 010c 	orr.w	r1, r1, ip
 801e8de:	f1ce 0c10 	rsb	ip, lr, #16
 801e8e2:	ea4b 0000 	orr.w	r0, fp, r0
 801e8e6:	9f08      	ldr	r7, [sp, #32]
 801e8e8:	ebac 0c02 	sub.w	ip, ip, r2
 801e8ec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e8f0:	f108 38ff 	add.w	r8, r8, #4294967295
 801e8f4:	4350      	muls	r0, r2
 801e8f6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e8fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e8fc:	fb0c 0c01 	mla	ip, ip, r1, r0
 801e900:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e902:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e906:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801e90a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e90c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e910:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e914:	0412      	lsls	r2, r2, #16
 801e916:	ea4b 0101 	orr.w	r1, fp, r1
 801e91a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e91e:	fb03 c101 	mla	r1, r3, r1, ip
 801e922:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e926:	4302      	orrs	r2, r0
 801e928:	fb03 1202 	mla	r2, r3, r2, r1
 801e92c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e930:	0952      	lsrs	r2, r2, #5
 801e932:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e936:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801e93a:	f8b9 2000 	ldrh.w	r2, [r9]
 801e93e:	ea4b 0303 	orr.w	r3, fp, r3
 801e942:	1211      	asrs	r1, r2, #8
 801e944:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e948:	b29b      	uxth	r3, r3
 801e94a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e94e:	00d2      	lsls	r2, r2, #3
 801e950:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e954:	fb11 f107 	smulbb	r1, r1, r7
 801e958:	1218      	asrs	r0, r3, #8
 801e95a:	fb1c fc07 	smulbb	ip, ip, r7
 801e95e:	b2d2      	uxtb	r2, r2
 801e960:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e964:	fb12 f207 	smulbb	r2, r2, r7
 801e968:	fb00 100a 	mla	r0, r0, sl, r1
 801e96c:	10d9      	asrs	r1, r3, #3
 801e96e:	00db      	lsls	r3, r3, #3
 801e970:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e974:	b280      	uxth	r0, r0
 801e976:	b2db      	uxtb	r3, r3
 801e978:	fb01 c10a 	mla	r1, r1, sl, ip
 801e97c:	fb03 230a 	mla	r3, r3, sl, r2
 801e980:	1c42      	adds	r2, r0, #1
 801e982:	b289      	uxth	r1, r1
 801e984:	b29b      	uxth	r3, r3
 801e986:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e98a:	f101 0c01 	add.w	ip, r1, #1
 801e98e:	1c5a      	adds	r2, r3, #1
 801e990:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e994:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e998:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e99c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e99e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e9a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e9a6:	441c      	add	r4, r3
 801e9a8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e9ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e9ae:	4310      	orrs	r0, r2
 801e9b0:	441e      	add	r6, r3
 801e9b2:	ea40 000c 	orr.w	r0, r0, ip
 801e9b6:	f829 0b02 	strh.w	r0, [r9], #2
 801e9ba:	e6fa      	b.n	801e7b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e9bc:	b013      	add	sp, #76	; 0x4c
 801e9be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e9c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e9c2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e9c6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e9ca:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e9ce:	fb0e 4703 	mla	r7, lr, r3, r4
 801e9d2:	f1be 0f00 	cmp.w	lr, #0
 801e9d6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801e9da:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801e9de:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e9e2:	8808      	ldrh	r0, [r1, #0]
 801e9e4:	db60      	blt.n	801eaa8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e9e6:	45f1      	cmp	r9, lr
 801e9e8:	dd5e      	ble.n	801eaa8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e9ea:	2c00      	cmp	r4, #0
 801e9ec:	db5a      	blt.n	801eaa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e9ee:	42a3      	cmp	r3, r4
 801e9f0:	dd58      	ble.n	801eaa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e9f2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e9f6:	1c62      	adds	r2, r4, #1
 801e9f8:	d459      	bmi.n	801eaae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e9fa:	4293      	cmp	r3, r2
 801e9fc:	dd57      	ble.n	801eaae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e9fe:	2d00      	cmp	r5, #0
 801ea00:	d055      	beq.n	801eaae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ea02:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801ea06:	f11e 0e01 	adds.w	lr, lr, #1
 801ea0a:	d454      	bmi.n	801eab6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea0c:	45f1      	cmp	r9, lr
 801ea0e:	dd52      	ble.n	801eab6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea10:	2e00      	cmp	r6, #0
 801ea12:	d050      	beq.n	801eab6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ea14:	2c00      	cmp	r4, #0
 801ea16:	db4c      	blt.n	801eab2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ea18:	42a3      	cmp	r3, r4
 801ea1a:	dd4a      	ble.n	801eab2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ea1c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801ea20:	3401      	adds	r4, #1
 801ea22:	d405      	bmi.n	801ea30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea24:	42a3      	cmp	r3, r4
 801ea26:	dd03      	ble.n	801ea30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea28:	b115      	cbz	r5, 801ea30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ea2a:	3301      	adds	r3, #1
 801ea2c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801ea30:	fb15 f406 	smulbb	r4, r5, r6
 801ea34:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ea38:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ea3c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ea40:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea44:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ea48:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ea4c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ea50:	ea43 0c0c 	orr.w	ip, r3, ip
 801ea54:	f1c6 0310 	rsb	r3, r6, #16
 801ea58:	ea4e 0707 	orr.w	r7, lr, r7
 801ea5c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ea60:	1b5b      	subs	r3, r3, r5
 801ea62:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ea66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ea6a:	437d      	muls	r5, r7
 801ea6c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ea70:	0403      	lsls	r3, r0, #16
 801ea72:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ea76:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea7a:	4318      	orrs	r0, r3
 801ea7c:	0413      	lsls	r3, r2, #16
 801ea7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ea82:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea86:	fb04 c000 	mla	r0, r4, r0, ip
 801ea8a:	4313      	orrs	r3, r2
 801ea8c:	fb06 0003 	mla	r0, r6, r3, r0
 801ea90:	0d43      	lsrs	r3, r0, #21
 801ea92:	0940      	lsrs	r0, r0, #5
 801ea94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea98:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ea9c:	4318      	orrs	r0, r3
 801ea9e:	8008      	strh	r0, [r1, #0]
 801eaa0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801eaa4:	4684      	mov	ip, r0
 801eaa6:	e7a6      	b.n	801e9f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801eaa8:	4607      	mov	r7, r0
 801eaaa:	4684      	mov	ip, r0
 801eaac:	e7ab      	b.n	801ea06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801eaae:	4607      	mov	r7, r0
 801eab0:	e7a9      	b.n	801ea06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801eab2:	4602      	mov	r2, r0
 801eab4:	e7b4      	b.n	801ea20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801eab6:	4602      	mov	r2, r0
 801eab8:	e7ba      	b.n	801ea30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801eaba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eaba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eabe:	b08f      	sub	sp, #60	; 0x3c
 801eac0:	461d      	mov	r5, r3
 801eac2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801eac4:	9107      	str	r1, [sp, #28]
 801eac6:	920c      	str	r2, [sp, #48]	; 0x30
 801eac8:	6859      	ldr	r1, [r3, #4]
 801eaca:	681b      	ldr	r3, [r3, #0]
 801eacc:	900d      	str	r0, [sp, #52]	; 0x34
 801eace:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801ead2:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801ead6:	fb01 2707 	mla	r7, r1, r7, r2
 801eada:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801eade:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eae0:	f8d3 8000 	ldr.w	r8, [r3]
 801eae4:	9b07      	ldr	r3, [sp, #28]
 801eae6:	2b00      	cmp	r3, #0
 801eae8:	dc03      	bgt.n	801eaf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801eaea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eaec:	2b00      	cmp	r3, #0
 801eaee:	f340 8182 	ble.w	801edf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801eaf2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eaf4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eaf8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eafc:	1e48      	subs	r0, r1, #1
 801eafe:	f102 3cff 	add.w	ip, r2, #4294967295
 801eb02:	2d00      	cmp	r5, #0
 801eb04:	f340 809b 	ble.w	801ec3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801eb08:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801eb0c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eb10:	d406      	bmi.n	801eb20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb12:	4586      	cmp	lr, r0
 801eb14:	da04      	bge.n	801eb20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb16:	2b00      	cmp	r3, #0
 801eb18:	db02      	blt.n	801eb20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eb1a:	4563      	cmp	r3, ip
 801eb1c:	f2c0 8090 	blt.w	801ec40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb20:	f11e 0e01 	adds.w	lr, lr, #1
 801eb24:	f100 8084 	bmi.w	801ec30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb28:	4571      	cmp	r1, lr
 801eb2a:	f2c0 8081 	blt.w	801ec30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb2e:	3301      	adds	r3, #1
 801eb30:	d47e      	bmi.n	801ec30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb32:	429a      	cmp	r2, r3
 801eb34:	db7c      	blt.n	801ec30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801eb36:	46aa      	mov	sl, r5
 801eb38:	46b9      	mov	r9, r7
 801eb3a:	f1ba 0f00 	cmp.w	sl, #0
 801eb3e:	f340 8099 	ble.w	801ec74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801eb42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eb44:	1421      	asrs	r1, r4, #16
 801eb46:	ea4f 4026 	mov.w	r0, r6, asr #16
 801eb4a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eb4e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801eb52:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801eb56:	f100 80d1 	bmi.w	801ecfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eb5a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801eb5e:	4559      	cmp	r1, fp
 801eb60:	f280 80cc 	bge.w	801ecfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eb64:	2800      	cmp	r0, #0
 801eb66:	f2c0 80c9 	blt.w	801ecfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eb6a:	f103 3bff 	add.w	fp, r3, #4294967295
 801eb6e:	4558      	cmp	r0, fp
 801eb70:	f280 80c4 	bge.w	801ecfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801eb74:	fa0f fe8e 	sxth.w	lr, lr
 801eb78:	fb00 110e 	mla	r1, r0, lr, r1
 801eb7c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801eb80:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801eb84:	8841      	ldrh	r1, [r0, #2]
 801eb86:	f1bc 0f00 	cmp.w	ip, #0
 801eb8a:	d00b      	beq.n	801eba4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801eb8c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801eb90:	3b01      	subs	r3, #1
 801eb92:	005b      	lsls	r3, r3, #1
 801eb94:	3302      	adds	r3, #2
 801eb96:	eb00 0e03 	add.w	lr, r0, r3
 801eb9a:	5ac3      	ldrh	r3, [r0, r3]
 801eb9c:	9308      	str	r3, [sp, #32]
 801eb9e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801eba2:	9309      	str	r3, [sp, #36]	; 0x24
 801eba4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801eba8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ebac:	fb12 f30c 	smulbb	r3, r2, ip
 801ebb0:	f1cc 0e10 	rsb	lr, ip, #16
 801ebb4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ebb8:	10db      	asrs	r3, r3, #3
 801ebba:	ebae 0e02 	sub.w	lr, lr, r2
 801ebbe:	ea40 000b 	orr.w	r0, r0, fp
 801ebc2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ebc6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ebca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ebce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ebd2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801ebd6:	ea4b 0101 	orr.w	r1, fp, r1
 801ebda:	4351      	muls	r1, r2
 801ebdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ebde:	fb0e 1e00 	mla	lr, lr, r0, r1
 801ebe2:	0410      	lsls	r0, r2, #16
 801ebe4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ebe8:	9908      	ldr	r1, [sp, #32]
 801ebea:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ebee:	4310      	orrs	r0, r2
 801ebf0:	9a08      	ldr	r2, [sp, #32]
 801ebf2:	0412      	lsls	r2, r2, #16
 801ebf4:	fb03 e000 	mla	r0, r3, r0, lr
 801ebf8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801ebfc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ec00:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ec04:	ea42 020e 	orr.w	r2, r2, lr
 801ec08:	fb03 0302 	mla	r3, r3, r2, r0
 801ec0c:	0d5a      	lsrs	r2, r3, #21
 801ec0e:	095b      	lsrs	r3, r3, #5
 801ec10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec14:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ec18:	4313      	orrs	r3, r2
 801ec1a:	f8a9 3000 	strh.w	r3, [r9]
 801ec1e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ec20:	f109 0902 	add.w	r9, r9, #2
 801ec24:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ec28:	441c      	add	r4, r3
 801ec2a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ec2c:	441e      	add	r6, r3
 801ec2e:	e784      	b.n	801eb3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ec30:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ec32:	3d01      	subs	r5, #1
 801ec34:	3702      	adds	r7, #2
 801ec36:	441c      	add	r4, r3
 801ec38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ec3a:	441e      	add	r6, r3
 801ec3c:	e761      	b.n	801eb02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ec3e:	d01d      	beq.n	801ec7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801ec40:	1e6b      	subs	r3, r5, #1
 801ec42:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ec44:	fb00 4003 	mla	r0, r0, r3, r4
 801ec48:	1400      	asrs	r0, r0, #16
 801ec4a:	f53f af74 	bmi.w	801eb36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ec4e:	3901      	subs	r1, #1
 801ec50:	4288      	cmp	r0, r1
 801ec52:	f6bf af70 	bge.w	801eb36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ec56:	991c      	ldr	r1, [sp, #112]	; 0x70
 801ec58:	fb01 6303 	mla	r3, r1, r3, r6
 801ec5c:	141b      	asrs	r3, r3, #16
 801ec5e:	f53f af6a 	bmi.w	801eb36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ec62:	3a01      	subs	r2, #1
 801ec64:	4293      	cmp	r3, r2
 801ec66:	f6bf af66 	bge.w	801eb36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ec6a:	46a9      	mov	r9, r5
 801ec6c:	46ba      	mov	sl, r7
 801ec6e:	f1b9 0f00 	cmp.w	r9, #0
 801ec72:	dc5b      	bgt.n	801ed2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ec74:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ec78:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ec7c:	9b07      	ldr	r3, [sp, #28]
 801ec7e:	2b00      	cmp	r3, #0
 801ec80:	f340 80b9 	ble.w	801edf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801ec84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ec88:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ec8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ec8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ec92:	eef0 6a62 	vmov.f32	s13, s5
 801ec96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ec9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ec9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eca2:	ee16 4a90 	vmov	r4, s13
 801eca6:	eef0 6a43 	vmov.f32	s13, s6
 801ecaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ecae:	ee16 6a90 	vmov	r6, s13
 801ecb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ecb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ecba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ecbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ecc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ecc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ecca:	ee12 2a90 	vmov	r2, s5
 801ecce:	eef0 2a47 	vmov.f32	s5, s14
 801ecd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecd6:	ee13 2a10 	vmov	r2, s6
 801ecda:	931b      	str	r3, [sp, #108]	; 0x6c
 801ecdc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ecde:	eeb0 3a67 	vmov.f32	s6, s15
 801ece2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ece6:	931c      	str	r3, [sp, #112]	; 0x70
 801ece8:	9b07      	ldr	r3, [sp, #28]
 801ecea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ecec:	3b01      	subs	r3, #1
 801ecee:	9307      	str	r3, [sp, #28]
 801ecf0:	bf08      	it	eq
 801ecf2:	4615      	moveq	r5, r2
 801ecf4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ecf6:	bf18      	it	ne
 801ecf8:	461d      	movne	r5, r3
 801ecfa:	e6f3      	b.n	801eae4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ecfc:	f111 0b01 	adds.w	fp, r1, #1
 801ed00:	d48d      	bmi.n	801ec1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed02:	45de      	cmp	lr, fp
 801ed04:	db8b      	blt.n	801ec1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed06:	f110 0b01 	adds.w	fp, r0, #1
 801ed0a:	d488      	bmi.n	801ec1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed0c:	455b      	cmp	r3, fp
 801ed0e:	db86      	blt.n	801ec1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed10:	b21b      	sxth	r3, r3
 801ed12:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ed16:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ed1a:	9300      	str	r3, [sp, #0]
 801ed1c:	4642      	mov	r2, r8
 801ed1e:	fa0f f38e 	sxth.w	r3, lr
 801ed22:	4649      	mov	r1, r9
 801ed24:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ed26:	f7ff fe4c 	bl	801e9c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ed2a:	e778      	b.n	801ec1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ed2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ed2e:	1420      	asrs	r0, r4, #16
 801ed30:	1431      	asrs	r1, r6, #16
 801ed32:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ed36:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ed3a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ed3e:	fb03 0101 	mla	r1, r3, r1, r0
 801ed42:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ed46:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801ed4a:	8841      	ldrh	r1, [r0, #2]
 801ed4c:	f1be 0f00 	cmp.w	lr, #0
 801ed50:	d00b      	beq.n	801ed6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801ed52:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801ed56:	3b01      	subs	r3, #1
 801ed58:	005b      	lsls	r3, r3, #1
 801ed5a:	3302      	adds	r3, #2
 801ed5c:	eb00 0b03 	add.w	fp, r0, r3
 801ed60:	5ac3      	ldrh	r3, [r0, r3]
 801ed62:	930a      	str	r3, [sp, #40]	; 0x28
 801ed64:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ed68:	930b      	str	r3, [sp, #44]	; 0x2c
 801ed6a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801ed6e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ed72:	fb12 f30e 	smulbb	r3, r2, lr
 801ed76:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ed7a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ed7e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ed82:	10db      	asrs	r3, r3, #3
 801ed84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ed88:	ea40 000c 	orr.w	r0, r0, ip
 801ed8c:	f1ce 0c10 	rsb	ip, lr, #16
 801ed90:	ea4b 0101 	orr.w	r1, fp, r1
 801ed94:	f109 39ff 	add.w	r9, r9, #4294967295
 801ed98:	ebac 0c02 	sub.w	ip, ip, r2
 801ed9c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801eda0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801eda4:	4351      	muls	r1, r2
 801eda6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801eda8:	fb0c 1c00 	mla	ip, ip, r0, r1
 801edac:	990a      	ldr	r1, [sp, #40]	; 0x28
 801edae:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801edb2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801edb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801edb8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801edbc:	0412      	lsls	r2, r2, #16
 801edbe:	ea4b 0000 	orr.w	r0, fp, r0
 801edc2:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801edc6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801edca:	fb03 c000 	mla	r0, r3, r0, ip
 801edce:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801edd2:	ea42 0b0b 	orr.w	fp, r2, fp
 801edd6:	fb03 000b 	mla	r0, r3, fp, r0
 801edda:	0d43      	lsrs	r3, r0, #21
 801eddc:	0940      	lsrs	r0, r0, #5
 801edde:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ede2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ede6:	4318      	orrs	r0, r3
 801ede8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801edea:	441c      	add	r4, r3
 801edec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801edee:	f82a 0b02 	strh.w	r0, [sl], #2
 801edf2:	441e      	add	r6, r3
 801edf4:	e73b      	b.n	801ec6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801edf6:	b00f      	add	sp, #60	; 0x3c
 801edf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801edfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801edfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee00:	b085      	sub	sp, #20
 801ee02:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801ee06:	9102      	str	r1, [sp, #8]
 801ee08:	2c00      	cmp	r4, #0
 801ee0a:	fb04 7103 	mla	r1, r4, r3, r7
 801ee0e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801ee12:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801ee16:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ee1a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801ee1e:	f2c0 811b 	blt.w	801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ee22:	45a6      	cmp	lr, r4
 801ee24:	f340 8118 	ble.w	801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ee28:	2f00      	cmp	r7, #0
 801ee2a:	f2c0 8113 	blt.w	801f054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ee2e:	42bb      	cmp	r3, r7
 801ee30:	f340 8110 	ble.w	801f054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ee34:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ee38:	1c7a      	adds	r2, r7, #1
 801ee3a:	f100 8110 	bmi.w	801f05e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ee3e:	4293      	cmp	r3, r2
 801ee40:	f340 810d 	ble.w	801f05e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ee44:	2e00      	cmp	r6, #0
 801ee46:	f000 810c 	beq.w	801f062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801ee4a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ee4e:	3401      	adds	r4, #1
 801ee50:	f100 810b 	bmi.w	801f06a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ee54:	45a6      	cmp	lr, r4
 801ee56:	f340 8108 	ble.w	801f06a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ee5a:	2800      	cmp	r0, #0
 801ee5c:	f000 8108 	beq.w	801f070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801ee60:	2f00      	cmp	r7, #0
 801ee62:	f2c0 8100 	blt.w	801f066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ee66:	42bb      	cmp	r3, r7
 801ee68:	f340 80fd 	ble.w	801f066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ee6c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ee70:	3701      	adds	r7, #1
 801ee72:	f100 8100 	bmi.w	801f076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ee76:	42bb      	cmp	r3, r7
 801ee78:	f340 80fd 	ble.w	801f076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ee7c:	2e00      	cmp	r6, #0
 801ee7e:	f000 80fc 	beq.w	801f07a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801ee82:	3301      	adds	r3, #1
 801ee84:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801ee88:	b2b6      	uxth	r6, r6
 801ee8a:	b280      	uxth	r0, r0
 801ee8c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ee90:	fb00 fe06 	mul.w	lr, r0, r6
 801ee94:	0136      	lsls	r6, r6, #4
 801ee96:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ee9a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ee9e:	eba6 070e 	sub.w	r7, r6, lr
 801eea2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801eea6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801eeaa:	b280      	uxth	r0, r0
 801eeac:	b2bf      	uxth	r7, r7
 801eeae:	1a1b      	subs	r3, r3, r0
 801eeb0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801eeb4:	fb0a f607 	mul.w	r6, sl, r7
 801eeb8:	b29b      	uxth	r3, r3
 801eeba:	fb0b 6603 	mla	r6, fp, r3, r6
 801eebe:	fb00 6609 	mla	r6, r0, r9, r6
 801eec2:	fb0e 6608 	mla	r6, lr, r8, r6
 801eec6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801eeca:	9600      	str	r6, [sp, #0]
 801eecc:	2e00      	cmp	r6, #0
 801eece:	f000 80be 	beq.w	801f04e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801eed2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eed6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801eeda:	9e02      	ldr	r6, [sp, #8]
 801eedc:	fb0b fc0c 	mul.w	ip, fp, ip
 801eee0:	fb0b f505 	mul.w	r5, fp, r5
 801eee4:	8836      	ldrh	r6, [r6, #0]
 801eee6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801eeea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801eeee:	9501      	str	r5, [sp, #4]
 801eef0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801eef4:	44dc      	add	ip, fp
 801eef6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eefa:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801eefe:	9503      	str	r5, [sp, #12]
 801ef00:	9d01      	ldr	r5, [sp, #4]
 801ef02:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ef06:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ef0a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ef0e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ef12:	fb0a fc0c 	mul.w	ip, sl, ip
 801ef16:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ef1a:	fb0a fa01 	mul.w	sl, sl, r1
 801ef1e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ef22:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ef26:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ef2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ef2e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ef32:	4465      	add	r5, ip
 801ef34:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ef38:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ef3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef40:	fb09 fc0c 	mul.w	ip, r9, ip
 801ef44:	0a2d      	lsrs	r5, r5, #8
 801ef46:	fb09 f904 	mul.w	r9, r9, r4
 801ef4a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef4e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ef52:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ef56:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ef5a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ef5e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ef62:	437d      	muls	r5, r7
 801ef64:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ef68:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ef6c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ef70:	4461      	add	r1, ip
 801ef72:	fb08 f404 	mul.w	r4, r8, r4
 801ef76:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ef7a:	fb08 f802 	mul.w	r8, r8, r2
 801ef7e:	0a09      	lsrs	r1, r1, #8
 801ef80:	0a22      	lsrs	r2, r4, #8
 801ef82:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ef86:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ef8a:	fb07 f70a 	mul.w	r7, r7, sl
 801ef8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ef92:	4414      	add	r4, r2
 801ef94:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ef98:	0a24      	lsrs	r4, r4, #8
 801ef9a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ef9e:	9a03      	ldr	r2, [sp, #12]
 801efa0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801efa4:	fb02 5503 	mla	r5, r2, r3, r5
 801efa8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801efac:	9a00      	ldr	r2, [sp, #0]
 801efae:	fb04 540e 	mla	r4, r4, lr, r5
 801efb2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801efb6:	1235      	asrs	r5, r6, #8
 801efb8:	fb01 4100 	mla	r1, r1, r0, r4
 801efbc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801efc0:	0a09      	lsrs	r1, r1, #8
 801efc2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801efc6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801efca:	fb03 7101 	mla	r1, r3, r1, r7
 801efce:	fb0e 1e08 	mla	lr, lr, r8, r1
 801efd2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801efd6:	fb00 e101 	mla	r1, r0, r1, lr
 801efda:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801efde:	b287      	uxth	r7, r0
 801efe0:	0a09      	lsrs	r1, r1, #8
 801efe2:	437a      	muls	r2, r7
 801efe4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801efe8:	1c53      	adds	r3, r2, #1
 801efea:	4321      	orrs	r1, r4
 801efec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eff0:	0c0a      	lsrs	r2, r1, #16
 801eff2:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801eff6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801effa:	b2c8      	uxtb	r0, r1
 801effc:	fb12 f207 	smulbb	r2, r2, r7
 801f000:	fb14 f407 	smulbb	r4, r4, r7
 801f004:	b2db      	uxtb	r3, r3
 801f006:	fb10 f007 	smulbb	r0, r0, r7
 801f00a:	fb05 2503 	mla	r5, r5, r3, r2
 801f00e:	10f2      	asrs	r2, r6, #3
 801f010:	00f6      	lsls	r6, r6, #3
 801f012:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f016:	b2ad      	uxth	r5, r5
 801f018:	b2f6      	uxtb	r6, r6
 801f01a:	fb02 4203 	mla	r2, r2, r3, r4
 801f01e:	fb06 0303 	mla	r3, r6, r3, r0
 801f022:	b294      	uxth	r4, r2
 801f024:	b299      	uxth	r1, r3
 801f026:	1c6b      	adds	r3, r5, #1
 801f028:	1c62      	adds	r2, r4, #1
 801f02a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f02e:	1c4b      	adds	r3, r1, #1
 801f030:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801f034:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f038:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f03c:	0952      	lsrs	r2, r2, #5
 801f03e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f042:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f046:	432b      	orrs	r3, r5
 801f048:	4313      	orrs	r3, r2
 801f04a:	9a02      	ldr	r2, [sp, #8]
 801f04c:	8013      	strh	r3, [r2, #0]
 801f04e:	b005      	add	sp, #20
 801f050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f054:	2500      	movs	r5, #0
 801f056:	e6ef      	b.n	801ee38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801f058:	2100      	movs	r1, #0
 801f05a:	460d      	mov	r5, r1
 801f05c:	e6f7      	b.n	801ee4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f05e:	2100      	movs	r1, #0
 801f060:	e6f5      	b.n	801ee4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f062:	4631      	mov	r1, r6
 801f064:	e6f3      	b.n	801ee4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f066:	2400      	movs	r4, #0
 801f068:	e702      	b.n	801ee70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801f06a:	2200      	movs	r2, #0
 801f06c:	4614      	mov	r4, r2
 801f06e:	e70b      	b.n	801ee88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f070:	4602      	mov	r2, r0
 801f072:	4604      	mov	r4, r0
 801f074:	e708      	b.n	801ee88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f076:	2200      	movs	r2, #0
 801f078:	e706      	b.n	801ee88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f07a:	4632      	mov	r2, r6
 801f07c:	e704      	b.n	801ee88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801f07e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f07e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f082:	b09d      	sub	sp, #116	; 0x74
 801f084:	9219      	str	r2, [sp, #100]	; 0x64
 801f086:	9307      	str	r3, [sp, #28]
 801f088:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801f08a:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801f08e:	901b      	str	r0, [sp, #108]	; 0x6c
 801f090:	931a      	str	r3, [sp, #104]	; 0x68
 801f092:	6850      	ldr	r0, [r2, #4]
 801f094:	9117      	str	r1, [sp, #92]	; 0x5c
 801f096:	6812      	ldr	r2, [r2, #0]
 801f098:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801f09c:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801f0a0:	fb00 1303 	mla	r3, r0, r3, r1
 801f0a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f0a8:	930a      	str	r3, [sp, #40]	; 0x28
 801f0aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f0ac:	681b      	ldr	r3, [r3, #0]
 801f0ae:	9310      	str	r3, [sp, #64]	; 0x40
 801f0b0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f0b4:	930b      	str	r3, [sp, #44]	; 0x2c
 801f0b6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f0b8:	2b00      	cmp	r3, #0
 801f0ba:	dc03      	bgt.n	801f0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f0bc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f0be:	2b00      	cmp	r3, #0
 801f0c0:	f340 8375 	ble.w	801f7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f0c4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f0c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f0ce:	1e48      	subs	r0, r1, #1
 801f0d0:	1e57      	subs	r7, r2, #1
 801f0d2:	9b07      	ldr	r3, [sp, #28]
 801f0d4:	2b00      	cmp	r3, #0
 801f0d6:	f340 818e 	ble.w	801f3f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f0da:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f0de:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f0e2:	d406      	bmi.n	801f0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f0e4:	4584      	cmp	ip, r0
 801f0e6:	da04      	bge.n	801f0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f0e8:	2b00      	cmp	r3, #0
 801f0ea:	db02      	blt.n	801f0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f0ec:	42bb      	cmp	r3, r7
 801f0ee:	f2c0 8183 	blt.w	801f3f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801f0f2:	f11c 0c01 	adds.w	ip, ip, #1
 801f0f6:	f100 8173 	bmi.w	801f3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f0fa:	4561      	cmp	r1, ip
 801f0fc:	f2c0 8170 	blt.w	801f3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f100:	3301      	adds	r3, #1
 801f102:	f100 816d 	bmi.w	801f3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f106:	429a      	cmp	r2, r3
 801f108:	f2c0 816a 	blt.w	801f3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f10c:	9b07      	ldr	r3, [sp, #28]
 801f10e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f110:	9318      	str	r3, [sp, #96]	; 0x60
 801f112:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f114:	2b00      	cmp	r3, #0
 801f116:	f340 818c 	ble.w	801f432 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801f11a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801f11c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f120:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f122:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f126:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f12a:	1422      	asrs	r2, r4, #16
 801f12c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f130:	689b      	ldr	r3, [r3, #8]
 801f132:	f100 81cd 	bmi.w	801f4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f136:	f103 38ff 	add.w	r8, r3, #4294967295
 801f13a:	4542      	cmp	r2, r8
 801f13c:	f280 81c8 	bge.w	801f4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f140:	f1bc 0f00 	cmp.w	ip, #0
 801f144:	f2c0 81c4 	blt.w	801f4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f148:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f14c:	45c4      	cmp	ip, r8
 801f14e:	f280 81bf 	bge.w	801f4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f152:	b21b      	sxth	r3, r3
 801f154:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f156:	fb0c 2203 	mla	r2, ip, r3, r2
 801f15a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f15e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f162:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f166:	2800      	cmp	r0, #0
 801f168:	f000 81a9 	beq.w	801f4be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801f16c:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f170:	950c      	str	r5, [sp, #48]	; 0x30
 801f172:	0e2d      	lsrs	r5, r5, #24
 801f174:	9513      	str	r5, [sp, #76]	; 0x4c
 801f176:	b181      	cbz	r1, 801f19a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f178:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801f17c:	3b01      	subs	r3, #1
 801f17e:	009b      	lsls	r3, r3, #2
 801f180:	3304      	adds	r3, #4
 801f182:	eb08 0c03 	add.w	ip, r8, r3
 801f186:	f858 3003 	ldr.w	r3, [r8, r3]
 801f18a:	9308      	str	r3, [sp, #32]
 801f18c:	0e1b      	lsrs	r3, r3, #24
 801f18e:	9311      	str	r3, [sp, #68]	; 0x44
 801f190:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f194:	930d      	str	r3, [sp, #52]	; 0x34
 801f196:	0e1b      	lsrs	r3, r3, #24
 801f198:	9314      	str	r3, [sp, #80]	; 0x50
 801f19a:	b280      	uxth	r0, r0
 801f19c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f19e:	b289      	uxth	r1, r1
 801f1a0:	fb00 f901 	mul.w	r9, r0, r1
 801f1a4:	0100      	lsls	r0, r0, #4
 801f1a6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f1aa:	eba0 0809 	sub.w	r8, r0, r9
 801f1ae:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801f1b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f1b4:	b289      	uxth	r1, r1
 801f1b6:	fa1f f888 	uxth.w	r8, r8
 801f1ba:	1a5b      	subs	r3, r3, r1
 801f1bc:	fb08 f000 	mul.w	r0, r8, r0
 801f1c0:	b29b      	uxth	r3, r3
 801f1c2:	fb03 000e 	mla	r0, r3, lr, r0
 801f1c6:	fb01 0005 	mla	r0, r1, r5, r0
 801f1ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f1cc:	fb09 0005 	mla	r0, r9, r5, r0
 801f1d0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801f1d4:	2800      	cmp	r0, #0
 801f1d6:	f000 80fa 	beq.w	801f3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f1da:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f1de:	d01b      	beq.n	801f218 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801f1e0:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801f1e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f1e8:	fb0e fa0a 	mul.w	sl, lr, sl
 801f1ec:	fb0e fe02 	mul.w	lr, lr, r2
 801f1f0:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f1f4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f1f8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f1fc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f200:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f204:	4452      	add	r2, sl
 801f206:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f20a:	0a12      	lsrs	r2, r2, #8
 801f20c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f210:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f214:	ea42 020c 	orr.w	r2, r2, ip
 801f218:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f21a:	2dff      	cmp	r5, #255	; 0xff
 801f21c:	d021      	beq.n	801f262 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801f21e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f220:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f224:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f226:	fb05 fb0b 	mul.w	fp, r5, fp
 801f22a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f22c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f230:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f232:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f236:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f23a:	fb05 fa0a 	mul.w	sl, r5, sl
 801f23e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f242:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f246:	44de      	add	lr, fp
 801f248:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f24c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f250:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f254:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f258:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f25c:	ea4e 050a 	orr.w	r5, lr, sl
 801f260:	950c      	str	r5, [sp, #48]	; 0x30
 801f262:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f264:	2dff      	cmp	r5, #255	; 0xff
 801f266:	d021      	beq.n	801f2ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f268:	9d08      	ldr	r5, [sp, #32]
 801f26a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f26e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f270:	fb05 fb0b 	mul.w	fp, r5, fp
 801f274:	9d08      	ldr	r5, [sp, #32]
 801f276:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f27a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f27c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f280:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f284:	fb05 fa0a 	mul.w	sl, r5, sl
 801f288:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f28c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f290:	44de      	add	lr, fp
 801f292:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f296:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f29a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f29e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f2a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f2a6:	ea4e 050a 	orr.w	r5, lr, sl
 801f2aa:	9508      	str	r5, [sp, #32]
 801f2ac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f2ae:	2dff      	cmp	r5, #255	; 0xff
 801f2b0:	d021      	beq.n	801f2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801f2b2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f2b4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f2b8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f2ba:	fb05 fb0b 	mul.w	fp, r5, fp
 801f2be:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f2c0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f2c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f2c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f2ca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f2ce:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f2d6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f2da:	44de      	add	lr, fp
 801f2dc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f2e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f2e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f2ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f2f0:	ea4e 050a 	orr.w	r5, lr, sl
 801f2f4:	950d      	str	r5, [sp, #52]	; 0x34
 801f2f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f2f8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801f2fc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f300:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f304:	9d08      	ldr	r5, [sp, #32]
 801f306:	fb08 fc0c 	mul.w	ip, r8, ip
 801f30a:	fb03 cc0e 	mla	ip, r3, lr, ip
 801f30e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f312:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f314:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f318:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f31c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f31e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f322:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f326:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f328:	fb08 f80e 	mul.w	r8, r8, lr
 801f32c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f330:	fb03 8202 	mla	r2, r3, r2, r8
 801f334:	9b08      	ldr	r3, [sp, #32]
 801f336:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f33a:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801f33e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f340:	fb01 220a 	mla	r2, r1, sl, r2
 801f344:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801f348:	883b      	ldrh	r3, [r7, #0]
 801f34a:	fb09 2901 	mla	r9, r9, r1, r2
 801f34e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f350:	1219      	asrs	r1, r3, #8
 801f352:	4342      	muls	r2, r0
 801f354:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f358:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f35c:	1c50      	adds	r0, r2, #1
 801f35e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f362:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f366:	ea4c 0c09 	orr.w	ip, ip, r9
 801f36a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f36e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f372:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f376:	fa5f fc8c 	uxtb.w	ip, ip
 801f37a:	fb12 f205 	smulbb	r2, r2, r5
 801f37e:	b2c0      	uxtb	r0, r0
 801f380:	fb1c fc05 	smulbb	ip, ip, r5
 801f384:	fb01 2100 	mla	r1, r1, r0, r2
 801f388:	10da      	asrs	r2, r3, #3
 801f38a:	fb1e fe05 	smulbb	lr, lr, r5
 801f38e:	00db      	lsls	r3, r3, #3
 801f390:	b289      	uxth	r1, r1
 801f392:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f396:	b2db      	uxtb	r3, r3
 801f398:	fb02 e200 	mla	r2, r2, r0, lr
 801f39c:	fb03 c300 	mla	r3, r3, r0, ip
 801f3a0:	b292      	uxth	r2, r2
 801f3a2:	fa1f fc83 	uxth.w	ip, r3
 801f3a6:	1c4b      	adds	r3, r1, #1
 801f3a8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f3ac:	f10c 0301 	add.w	r3, ip, #1
 801f3b0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f3b4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f3b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f3bc:	430b      	orrs	r3, r1
 801f3be:	1c51      	adds	r1, r2, #1
 801f3c0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f3c4:	0952      	lsrs	r2, r2, #5
 801f3c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f3ca:	4313      	orrs	r3, r2
 801f3cc:	803b      	strh	r3, [r7, #0]
 801f3ce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f3d0:	3702      	adds	r7, #2
 801f3d2:	441c      	add	r4, r3
 801f3d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f3d6:	441e      	add	r6, r3
 801f3d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f3da:	3b01      	subs	r3, #1
 801f3dc:	9318      	str	r3, [sp, #96]	; 0x60
 801f3de:	e698      	b.n	801f112 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f3e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f3e2:	441c      	add	r4, r3
 801f3e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f3e6:	441e      	add	r6, r3
 801f3e8:	9b07      	ldr	r3, [sp, #28]
 801f3ea:	3b01      	subs	r3, #1
 801f3ec:	9307      	str	r3, [sp, #28]
 801f3ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f3f0:	3302      	adds	r3, #2
 801f3f2:	930a      	str	r3, [sp, #40]	; 0x28
 801f3f4:	e66d      	b.n	801f0d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f3f6:	d023      	beq.n	801f440 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f3f8:	9b07      	ldr	r3, [sp, #28]
 801f3fa:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801f3fc:	3b01      	subs	r3, #1
 801f3fe:	fb00 4003 	mla	r0, r0, r3, r4
 801f402:	1400      	asrs	r0, r0, #16
 801f404:	f53f ae82 	bmi.w	801f10c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f408:	3901      	subs	r1, #1
 801f40a:	4288      	cmp	r0, r1
 801f40c:	f6bf ae7e 	bge.w	801f10c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f410:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f412:	fb01 6303 	mla	r3, r1, r3, r6
 801f416:	141b      	asrs	r3, r3, #16
 801f418:	f53f ae78 	bmi.w	801f10c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f41c:	3a01      	subs	r2, #1
 801f41e:	4293      	cmp	r3, r2
 801f420:	f6bf ae74 	bge.w	801f10c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f424:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f428:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801f42c:	f1bb 0f00 	cmp.w	fp, #0
 801f430:	dc6c      	bgt.n	801f50c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f432:	9b07      	ldr	r3, [sp, #28]
 801f434:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f438:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f43a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f43e:	930a      	str	r3, [sp, #40]	; 0x28
 801f440:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f442:	2b00      	cmp	r3, #0
 801f444:	f340 81b3 	ble.w	801f7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f448:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f44c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f44e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f452:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f456:	eef0 6a62 	vmov.f32	s13, s5
 801f45a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f45e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f462:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f466:	ee16 4a90 	vmov	r4, s13
 801f46a:	eef0 6a43 	vmov.f32	s13, s6
 801f46e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f472:	ee16 6a90 	vmov	r6, s13
 801f476:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f47a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f47e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f482:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f486:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f48a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f48e:	ee12 2a90 	vmov	r2, s5
 801f492:	eef0 2a47 	vmov.f32	s5, s14
 801f496:	fb92 f3f3 	sdiv	r3, r2, r3
 801f49a:	ee13 2a10 	vmov	r2, s6
 801f49e:	9329      	str	r3, [sp, #164]	; 0xa4
 801f4a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f4a2:	eeb0 3a67 	vmov.f32	s6, s15
 801f4a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4aa:	932a      	str	r3, [sp, #168]	; 0xa8
 801f4ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f4ae:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801f4b0:	3b01      	subs	r3, #1
 801f4b2:	9317      	str	r3, [sp, #92]	; 0x5c
 801f4b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f4b6:	bf08      	it	eq
 801f4b8:	4613      	moveq	r3, r2
 801f4ba:	9307      	str	r3, [sp, #28]
 801f4bc:	e5fb      	b.n	801f0b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f4be:	2900      	cmp	r1, #0
 801f4c0:	f43f ae6b 	beq.w	801f19a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f4c4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f4c8:	9308      	str	r3, [sp, #32]
 801f4ca:	0e1b      	lsrs	r3, r3, #24
 801f4cc:	9311      	str	r3, [sp, #68]	; 0x44
 801f4ce:	e664      	b.n	801f19a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f4d0:	f112 0801 	adds.w	r8, r2, #1
 801f4d4:	f53f af7b 	bmi.w	801f3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f4d8:	4543      	cmp	r3, r8
 801f4da:	f6ff af78 	blt.w	801f3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f4de:	f11c 0801 	adds.w	r8, ip, #1
 801f4e2:	f53f af74 	bmi.w	801f3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f4e6:	45c6      	cmp	lr, r8
 801f4e8:	f6ff af71 	blt.w	801f3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f4ec:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801f4ee:	b21b      	sxth	r3, r3
 801f4f0:	9201      	str	r2, [sp, #4]
 801f4f2:	fa0f f28e 	sxth.w	r2, lr
 801f4f6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801f4fa:	e9cd c002 	strd	ip, r0, [sp, #8]
 801f4fe:	9200      	str	r2, [sp, #0]
 801f500:	4639      	mov	r1, r7
 801f502:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f504:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f506:	f7ff fc79 	bl	801edfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801f50a:	e760      	b.n	801f3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f50c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f50e:	1427      	asrs	r7, r4, #16
 801f510:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f512:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f516:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f51a:	1433      	asrs	r3, r6, #16
 801f51c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f520:	fb01 7303 	mla	r3, r1, r3, r7
 801f524:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801f528:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f52c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f530:	2a00      	cmp	r2, #0
 801f532:	f000 8133 	beq.w	801f79c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801f536:	687d      	ldr	r5, [r7, #4]
 801f538:	950e      	str	r5, [sp, #56]	; 0x38
 801f53a:	0e2d      	lsrs	r5, r5, #24
 801f53c:	9515      	str	r5, [sp, #84]	; 0x54
 801f53e:	b178      	cbz	r0, 801f560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f540:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801f544:	3901      	subs	r1, #1
 801f546:	0089      	lsls	r1, r1, #2
 801f548:	3104      	adds	r1, #4
 801f54a:	eb07 0e01 	add.w	lr, r7, r1
 801f54e:	5879      	ldr	r1, [r7, r1]
 801f550:	9109      	str	r1, [sp, #36]	; 0x24
 801f552:	0e09      	lsrs	r1, r1, #24
 801f554:	9112      	str	r1, [sp, #72]	; 0x48
 801f556:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f55a:	910f      	str	r1, [sp, #60]	; 0x3c
 801f55c:	0e09      	lsrs	r1, r1, #24
 801f55e:	9116      	str	r1, [sp, #88]	; 0x58
 801f560:	b292      	uxth	r2, r2
 801f562:	9915      	ldr	r1, [sp, #84]	; 0x54
 801f564:	b280      	uxth	r0, r0
 801f566:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f568:	fb02 f800 	mul.w	r8, r2, r0
 801f56c:	0112      	lsls	r2, r2, #4
 801f56e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f572:	eba2 0e08 	sub.w	lr, r2, r8
 801f576:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f57a:	b280      	uxth	r0, r0
 801f57c:	fa1f fe8e 	uxth.w	lr, lr
 801f580:	1a12      	subs	r2, r2, r0
 801f582:	fb0e f101 	mul.w	r1, lr, r1
 801f586:	b292      	uxth	r2, r2
 801f588:	fb02 110c 	mla	r1, r2, ip, r1
 801f58c:	fb00 1105 	mla	r1, r0, r5, r1
 801f590:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f592:	fb08 1105 	mla	r1, r8, r5, r1
 801f596:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f59a:	2900      	cmp	r1, #0
 801f59c:	f000 80f5 	beq.w	801f78a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801f5a0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f5a4:	d019      	beq.n	801f5da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801f5a6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f5aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f5ae:	fb0c fa0a 	mul.w	sl, ip, sl
 801f5b2:	fb0c fc03 	mul.w	ip, ip, r3
 801f5b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f5ba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f5be:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f5c2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f5c6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f5ca:	4453      	add	r3, sl
 801f5cc:	0a3f      	lsrs	r7, r7, #8
 801f5ce:	0a1b      	lsrs	r3, r3, #8
 801f5d0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f5d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f5d8:	433b      	orrs	r3, r7
 801f5da:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f5dc:	2dff      	cmp	r5, #255	; 0xff
 801f5de:	d020      	beq.n	801f622 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801f5e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f5e2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f5e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f5e8:	436f      	muls	r7, r5
 801f5ea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f5ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f5f0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f5f4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f5f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f5fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f5fe:	fb05 fa0a 	mul.w	sl, r5, sl
 801f602:	44bc      	add	ip, r7
 801f604:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f608:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f60c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f610:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f614:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f618:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f61c:	ea4c 050a 	orr.w	r5, ip, sl
 801f620:	950e      	str	r5, [sp, #56]	; 0x38
 801f622:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f624:	2dff      	cmp	r5, #255	; 0xff
 801f626:	d020      	beq.n	801f66a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801f628:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f62a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f62e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f630:	436f      	muls	r7, r5
 801f632:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f634:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f638:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f63c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f63e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f642:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f646:	fb05 fa0a 	mul.w	sl, r5, sl
 801f64a:	44bc      	add	ip, r7
 801f64c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f650:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f654:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f658:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f65c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f660:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f664:	ea4c 050a 	orr.w	r5, ip, sl
 801f668:	9509      	str	r5, [sp, #36]	; 0x24
 801f66a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f66c:	2dff      	cmp	r5, #255	; 0xff
 801f66e:	d020      	beq.n	801f6b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801f670:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f672:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f676:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f678:	436f      	muls	r7, r5
 801f67a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f67c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f680:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f684:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f686:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f68a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f68e:	fb05 fa0a 	mul.w	sl, r5, sl
 801f692:	44bc      	add	ip, r7
 801f694:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f698:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f69c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f6a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f6a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f6a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f6ac:	ea4c 050a 	orr.w	r5, ip, sl
 801f6b0:	950f      	str	r5, [sp, #60]	; 0x3c
 801f6b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f6b4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f6b8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f6bc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f6c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f6c2:	fb0e f707 	mul.w	r7, lr, r7
 801f6c6:	fb02 770c 	mla	r7, r2, ip, r7
 801f6ca:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f6ce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f6d0:	fb00 770c 	mla	r7, r0, ip, r7
 801f6d4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f6d8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f6da:	fb08 770c 	mla	r7, r8, ip, r7
 801f6de:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f6e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f6e4:	fb0e fe0c 	mul.w	lr, lr, ip
 801f6e8:	0a3f      	lsrs	r7, r7, #8
 801f6ea:	fb02 e303 	mla	r3, r2, r3, lr
 801f6ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f6f0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f6f4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f6f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f6fa:	fb00 330a 	mla	r3, r0, sl, r3
 801f6fe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801f702:	f8b9 0000 	ldrh.w	r0, [r9]
 801f706:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f70a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f70c:	1202      	asrs	r2, r0, #8
 801f70e:	4359      	muls	r1, r3
 801f710:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f714:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f718:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f71c:	1c4b      	adds	r3, r1, #1
 801f71e:	ea47 070c 	orr.w	r7, r7, ip
 801f722:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f726:	0c3b      	lsrs	r3, r7, #16
 801f728:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f72c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f730:	b2ff      	uxtb	r7, r7
 801f732:	fb13 f305 	smulbb	r3, r3, r5
 801f736:	b2c9      	uxtb	r1, r1
 801f738:	fb17 f705 	smulbb	r7, r7, r5
 801f73c:	fb02 3201 	mla	r2, r2, r1, r3
 801f740:	10c3      	asrs	r3, r0, #3
 801f742:	fb1c fc05 	smulbb	ip, ip, r5
 801f746:	00c0      	lsls	r0, r0, #3
 801f748:	b292      	uxth	r2, r2
 801f74a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f74e:	b2c0      	uxtb	r0, r0
 801f750:	fb03 c301 	mla	r3, r3, r1, ip
 801f754:	fb00 7001 	mla	r0, r0, r1, r7
 801f758:	1c51      	adds	r1, r2, #1
 801f75a:	b29b      	uxth	r3, r3
 801f75c:	b280      	uxth	r0, r0
 801f75e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f762:	f100 0c01 	add.w	ip, r0, #1
 801f766:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f76a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f76e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f772:	ea4c 0202 	orr.w	r2, ip, r2
 801f776:	f103 0c01 	add.w	ip, r3, #1
 801f77a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f77e:	095b      	lsrs	r3, r3, #5
 801f780:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f784:	431a      	orrs	r2, r3
 801f786:	f8a9 2000 	strh.w	r2, [r9]
 801f78a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f78c:	f109 0902 	add.w	r9, r9, #2
 801f790:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f794:	441c      	add	r4, r3
 801f796:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f798:	441e      	add	r6, r3
 801f79a:	e647      	b.n	801f42c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f79c:	2800      	cmp	r0, #0
 801f79e:	f43f aedf 	beq.w	801f560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f7a2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f7a6:	9109      	str	r1, [sp, #36]	; 0x24
 801f7a8:	0e09      	lsrs	r1, r1, #24
 801f7aa:	9112      	str	r1, [sp, #72]	; 0x48
 801f7ac:	e6d8      	b.n	801f560 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f7ae:	b01d      	add	sp, #116	; 0x74
 801f7b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f7b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7b8:	b085      	sub	sp, #20
 801f7ba:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801f7be:	9102      	str	r1, [sp, #8]
 801f7c0:	2c00      	cmp	r4, #0
 801f7c2:	fb04 7103 	mla	r1, r4, r3, r7
 801f7c6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801f7ca:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f7ce:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f7d2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801f7d6:	f2c0 810c 	blt.w	801f9f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f7da:	45a6      	cmp	lr, r4
 801f7dc:	f340 8109 	ble.w	801f9f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f7e0:	2f00      	cmp	r7, #0
 801f7e2:	f2c0 8104 	blt.w	801f9ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f7e6:	42bb      	cmp	r3, r7
 801f7e8:	f340 8101 	ble.w	801f9ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f7ec:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f7f0:	1c7a      	adds	r2, r7, #1
 801f7f2:	f100 8101 	bmi.w	801f9f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f7f6:	4293      	cmp	r3, r2
 801f7f8:	f340 80fe 	ble.w	801f9f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f7fc:	2e00      	cmp	r6, #0
 801f7fe:	f000 80fd 	beq.w	801f9fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f802:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f806:	3401      	adds	r4, #1
 801f808:	f100 80fc 	bmi.w	801fa04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f80c:	45a6      	cmp	lr, r4
 801f80e:	f340 80f9 	ble.w	801fa04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f812:	2800      	cmp	r0, #0
 801f814:	f000 80f9 	beq.w	801fa0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f818:	2f00      	cmp	r7, #0
 801f81a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f81e:	f2c0 80ef 	blt.w	801fa00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f822:	42bb      	cmp	r3, r7
 801f824:	f340 80ec 	ble.w	801fa00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f828:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f82c:	3701      	adds	r7, #1
 801f82e:	f100 80ef 	bmi.w	801fa10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f832:	42bb      	cmp	r3, r7
 801f834:	f340 80ec 	ble.w	801fa10 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f838:	2e00      	cmp	r6, #0
 801f83a:	f000 80eb 	beq.w	801fa14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f83e:	6852      	ldr	r2, [r2, #4]
 801f840:	b2b6      	uxth	r6, r6
 801f842:	b280      	uxth	r0, r0
 801f844:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f848:	fb00 fe06 	mul.w	lr, r0, r6
 801f84c:	0136      	lsls	r6, r6, #4
 801f84e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f852:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f856:	eba6 070e 	sub.w	r7, r6, lr
 801f85a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801f85e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f862:	b280      	uxth	r0, r0
 801f864:	b2bf      	uxth	r7, r7
 801f866:	1a1b      	subs	r3, r3, r0
 801f868:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f86c:	fb07 f60a 	mul.w	r6, r7, sl
 801f870:	b29b      	uxth	r3, r3
 801f872:	fb0b 6603 	mla	r6, fp, r3, r6
 801f876:	fb00 6609 	mla	r6, r0, r9, r6
 801f87a:	fb0e 6608 	mla	r6, lr, r8, r6
 801f87e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f882:	9600      	str	r6, [sp, #0]
 801f884:	2e00      	cmp	r6, #0
 801f886:	f000 80af 	beq.w	801f9e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f88a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f88e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801f892:	9e02      	ldr	r6, [sp, #8]
 801f894:	fb0b fc0c 	mul.w	ip, fp, ip
 801f898:	fb0b f505 	mul.w	r5, fp, r5
 801f89c:	8836      	ldrh	r6, [r6, #0]
 801f89e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f8a2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f8a6:	9501      	str	r5, [sp, #4]
 801f8a8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801f8ac:	44dc      	add	ip, fp
 801f8ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f8b2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801f8b6:	9503      	str	r5, [sp, #12]
 801f8b8:	9d01      	ldr	r5, [sp, #4]
 801f8ba:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801f8be:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f8c2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801f8c6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f8ca:	fb0a fc0c 	mul.w	ip, sl, ip
 801f8ce:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f8d2:	fb0a fa01 	mul.w	sl, sl, r1
 801f8d6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f8da:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f8de:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801f8e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f8e6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f8ea:	4465      	add	r5, ip
 801f8ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f8f0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801f8f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f8f8:	fb09 fc0c 	mul.w	ip, r9, ip
 801f8fc:	0a2d      	lsrs	r5, r5, #8
 801f8fe:	fb09 f904 	mul.w	r9, r9, r4
 801f902:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f906:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f90a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f90e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801f912:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f916:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f91a:	437d      	muls	r5, r7
 801f91c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f920:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801f924:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f928:	4461      	add	r1, ip
 801f92a:	fb08 f404 	mul.w	r4, r8, r4
 801f92e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f932:	fb08 f802 	mul.w	r8, r8, r2
 801f936:	0a09      	lsrs	r1, r1, #8
 801f938:	0a22      	lsrs	r2, r4, #8
 801f93a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801f93e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f942:	fb07 f70a 	mul.w	r7, r7, sl
 801f946:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f94a:	4414      	add	r4, r2
 801f94c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801f950:	0a24      	lsrs	r4, r4, #8
 801f952:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f956:	9a03      	ldr	r2, [sp, #12]
 801f958:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801f95c:	fb02 5503 	mla	r5, r2, r3, r5
 801f960:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f964:	fb04 540e 	mla	r4, r4, lr, r5
 801f968:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801f96c:	fb01 4100 	mla	r1, r1, r0, r4
 801f970:	0a09      	lsrs	r1, r1, #8
 801f972:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801f976:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801f97a:	fb03 7101 	mla	r1, r3, r1, r7
 801f97e:	9b00      	ldr	r3, [sp, #0]
 801f980:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f984:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801f988:	43da      	mvns	r2, r3
 801f98a:	1233      	asrs	r3, r6, #8
 801f98c:	fb00 e101 	mla	r1, r0, r1, lr
 801f990:	10f0      	asrs	r0, r6, #3
 801f992:	b2d2      	uxtb	r2, r2
 801f994:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801f998:	0a09      	lsrs	r1, r1, #8
 801f99a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f99e:	00f6      	lsls	r6, r6, #3
 801f9a0:	4353      	muls	r3, r2
 801f9a2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f9a6:	4350      	muls	r0, r2
 801f9a8:	b2f6      	uxtb	r6, r6
 801f9aa:	4321      	orrs	r1, r4
 801f9ac:	4356      	muls	r6, r2
 801f9ae:	1c5a      	adds	r2, r3, #1
 801f9b0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f9b4:	0c0b      	lsrs	r3, r1, #16
 801f9b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9ba:	1c42      	adds	r2, r0, #1
 801f9bc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f9c0:	0a0a      	lsrs	r2, r1, #8
 801f9c2:	021b      	lsls	r3, r3, #8
 801f9c4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f9c8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801f9cc:	00d2      	lsls	r2, r2, #3
 801f9ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f9d2:	4313      	orrs	r3, r2
 801f9d4:	1c72      	adds	r2, r6, #1
 801f9d6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f9da:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f9de:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f9e2:	4319      	orrs	r1, r3
 801f9e4:	9b02      	ldr	r3, [sp, #8]
 801f9e6:	8019      	strh	r1, [r3, #0]
 801f9e8:	b005      	add	sp, #20
 801f9ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f9ee:	2500      	movs	r5, #0
 801f9f0:	e6fe      	b.n	801f7f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f9f2:	2100      	movs	r1, #0
 801f9f4:	460d      	mov	r5, r1
 801f9f6:	e706      	b.n	801f806 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f9f8:	2100      	movs	r1, #0
 801f9fa:	e704      	b.n	801f806 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f9fc:	4631      	mov	r1, r6
 801f9fe:	e702      	b.n	801f806 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fa00:	2400      	movs	r4, #0
 801fa02:	e713      	b.n	801f82c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801fa04:	2200      	movs	r2, #0
 801fa06:	4614      	mov	r4, r2
 801fa08:	e71a      	b.n	801f840 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa0a:	4602      	mov	r2, r0
 801fa0c:	4604      	mov	r4, r0
 801fa0e:	e717      	b.n	801f840 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa10:	2200      	movs	r2, #0
 801fa12:	e715      	b.n	801f840 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fa14:	4632      	mov	r2, r6
 801fa16:	e713      	b.n	801f840 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801fa18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa1c:	b09b      	sub	sp, #108	; 0x6c
 801fa1e:	9218      	str	r2, [sp, #96]	; 0x60
 801fa20:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801fa22:	9019      	str	r0, [sp, #100]	; 0x64
 801fa24:	9116      	str	r1, [sp, #88]	; 0x58
 801fa26:	6850      	ldr	r0, [r2, #4]
 801fa28:	9307      	str	r3, [sp, #28]
 801fa2a:	6812      	ldr	r2, [r2, #0]
 801fa2c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801fa30:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801fa34:	fb00 1303 	mla	r3, r0, r3, r1
 801fa38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fa3c:	930a      	str	r3, [sp, #40]	; 0x28
 801fa3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fa40:	681b      	ldr	r3, [r3, #0]
 801fa42:	930f      	str	r3, [sp, #60]	; 0x3c
 801fa44:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fa46:	2b00      	cmp	r3, #0
 801fa48:	dc03      	bgt.n	801fa52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fa4a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fa4c:	2b00      	cmp	r3, #0
 801fa4e:	f340 8387 	ble.w	8020160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801fa52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fa54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa58:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa5c:	1e48      	subs	r0, r1, #1
 801fa5e:	1e57      	subs	r7, r2, #1
 801fa60:	9b07      	ldr	r3, [sp, #28]
 801fa62:	2b00      	cmp	r3, #0
 801fa64:	f340 8166 	ble.w	801fd34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801fa68:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fa6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fa70:	d406      	bmi.n	801fa80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fa72:	4584      	cmp	ip, r0
 801fa74:	da04      	bge.n	801fa80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fa76:	2b00      	cmp	r3, #0
 801fa78:	db02      	blt.n	801fa80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fa7a:	42bb      	cmp	r3, r7
 801fa7c:	f2c0 815b 	blt.w	801fd36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801fa80:	f11c 0c01 	adds.w	ip, ip, #1
 801fa84:	f100 814b 	bmi.w	801fd1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fa88:	4561      	cmp	r1, ip
 801fa8a:	f2c0 8148 	blt.w	801fd1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fa8e:	3301      	adds	r3, #1
 801fa90:	f100 8145 	bmi.w	801fd1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fa94:	429a      	cmp	r2, r3
 801fa96:	f2c0 8142 	blt.w	801fd1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fa9a:	9b07      	ldr	r3, [sp, #28]
 801fa9c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fa9e:	9317      	str	r3, [sp, #92]	; 0x5c
 801faa0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801faa2:	2b00      	cmp	r3, #0
 801faa4:	f340 8165 	ble.w	801fd72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801faa8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801faaa:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801faae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fab0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fab4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fab8:	1422      	asrs	r2, r4, #16
 801faba:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fabe:	689b      	ldr	r3, [r3, #8]
 801fac0:	f100 81d5 	bmi.w	801fe6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fac4:	f103 38ff 	add.w	r8, r3, #4294967295
 801fac8:	4542      	cmp	r2, r8
 801faca:	f280 81d0 	bge.w	801fe6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801face:	f1bc 0f00 	cmp.w	ip, #0
 801fad2:	f2c0 81cc 	blt.w	801fe6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fad6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fada:	45c4      	cmp	ip, r8
 801fadc:	f280 81c7 	bge.w	801fe6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fae0:	b21b      	sxth	r3, r3
 801fae2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fae4:	fb0c 2203 	mla	r2, ip, r3, r2
 801fae8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801faec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801faf0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801faf4:	2900      	cmp	r1, #0
 801faf6:	f000 8182 	beq.w	801fdfe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fafa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801fafe:	950b      	str	r5, [sp, #44]	; 0x2c
 801fb00:	0e2d      	lsrs	r5, r5, #24
 801fb02:	9512      	str	r5, [sp, #72]	; 0x48
 801fb04:	b180      	cbz	r0, 801fb28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fb06:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801fb0a:	3b01      	subs	r3, #1
 801fb0c:	009b      	lsls	r3, r3, #2
 801fb0e:	3304      	adds	r3, #4
 801fb10:	eb08 0c03 	add.w	ip, r8, r3
 801fb14:	f858 3003 	ldr.w	r3, [r8, r3]
 801fb18:	9308      	str	r3, [sp, #32]
 801fb1a:	0e1b      	lsrs	r3, r3, #24
 801fb1c:	9310      	str	r3, [sp, #64]	; 0x40
 801fb1e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801fb22:	930c      	str	r3, [sp, #48]	; 0x30
 801fb24:	0e1b      	lsrs	r3, r3, #24
 801fb26:	9313      	str	r3, [sp, #76]	; 0x4c
 801fb28:	b289      	uxth	r1, r1
 801fb2a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fb2c:	b280      	uxth	r0, r0
 801fb2e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801fb30:	fb01 f900 	mul.w	r9, r1, r0
 801fb34:	0109      	lsls	r1, r1, #4
 801fb36:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801fb3a:	eba1 0809 	sub.w	r8, r1, r9
 801fb3e:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801fb42:	b280      	uxth	r0, r0
 801fb44:	fa1f f888 	uxth.w	r8, r8
 801fb48:	1a09      	subs	r1, r1, r0
 801fb4a:	fb08 f303 	mul.w	r3, r8, r3
 801fb4e:	b289      	uxth	r1, r1
 801fb50:	fb01 330e 	mla	r3, r1, lr, r3
 801fb54:	fb00 3305 	mla	r3, r0, r5, r3
 801fb58:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801fb5a:	fb09 3305 	mla	r3, r9, r5, r3
 801fb5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb62:	2b00      	cmp	r3, #0
 801fb64:	f000 80d2 	beq.w	801fd0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fb68:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801fb6c:	d01b      	beq.n	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801fb6e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801fb72:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fb76:	fb0e fa0a 	mul.w	sl, lr, sl
 801fb7a:	fb0e fe02 	mul.w	lr, lr, r2
 801fb7e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801fb82:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fb86:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801fb8a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fb8e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fb92:	4452      	add	r2, sl
 801fb94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fb98:	0a12      	lsrs	r2, r2, #8
 801fb9a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fb9e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fba2:	ea42 020c 	orr.w	r2, r2, ip
 801fba6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fba8:	2dff      	cmp	r5, #255	; 0xff
 801fbaa:	d021      	beq.n	801fbf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801fbac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801fbae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801fbb2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fbb4:	fb05 fb0b 	mul.w	fp, r5, fp
 801fbb8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801fbba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801fbbe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fbc0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fbc4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fbc8:	fb05 fa0a 	mul.w	sl, r5, sl
 801fbcc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fbd0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fbd4:	44de      	add	lr, fp
 801fbd6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fbda:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fbde:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fbe2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fbe6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fbea:	ea4e 050a 	orr.w	r5, lr, sl
 801fbee:	950b      	str	r5, [sp, #44]	; 0x2c
 801fbf0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801fbf2:	2dff      	cmp	r5, #255	; 0xff
 801fbf4:	d021      	beq.n	801fc3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fbf6:	9d08      	ldr	r5, [sp, #32]
 801fbf8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801fbfc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801fbfe:	fb05 fb0b 	mul.w	fp, r5, fp
 801fc02:	9d08      	ldr	r5, [sp, #32]
 801fc04:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801fc08:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801fc0a:	fb05 fa0e 	mul.w	sl, r5, lr
 801fc0e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fc12:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fc16:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fc1a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fc1e:	44de      	add	lr, fp
 801fc20:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc24:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fc28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fc30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fc34:	ea4e 050a 	orr.w	r5, lr, sl
 801fc38:	9508      	str	r5, [sp, #32]
 801fc3a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801fc3c:	2dff      	cmp	r5, #255	; 0xff
 801fc3e:	d021      	beq.n	801fc84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801fc40:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fc42:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801fc46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801fc48:	fb05 fb0b 	mul.w	fp, r5, fp
 801fc4c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fc4e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801fc52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801fc54:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fc58:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fc5c:	fb05 fa0a 	mul.w	sl, r5, sl
 801fc60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fc64:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fc68:	44de      	add	lr, fp
 801fc6a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fc6e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fc72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fc7a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fc7e:	ea4e 050a 	orr.w	r5, lr, sl
 801fc82:	950c      	str	r5, [sp, #48]	; 0x30
 801fc84:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801fc86:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801fc8a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fc8e:	2bff      	cmp	r3, #255	; 0xff
 801fc90:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fc94:	9d08      	ldr	r5, [sp, #32]
 801fc96:	fb08 fc0c 	mul.w	ip, r8, ip
 801fc9a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fc9e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801fca2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fca4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801fca8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801fcac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801fcae:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fcb2:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801fcb6:	fb08 f80e 	mul.w	r8, r8, lr
 801fcba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fcbe:	fb01 8202 	mla	r2, r1, r2, r8
 801fcc2:	9908      	ldr	r1, [sp, #32]
 801fcc4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fcc8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801fccc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fcce:	fb00 220a 	mla	r2, r0, sl, r2
 801fcd2:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801fcd6:	fb09 2900 	mla	r9, r9, r0, r2
 801fcda:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fcde:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801fce2:	ea4c 0c09 	orr.w	ip, ip, r9
 801fce6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801fcea:	f040 8091 	bne.w	801fe10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801fcee:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801fcf2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801fcf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fcfa:	f022 0207 	bic.w	r2, r2, #7
 801fcfe:	431a      	orrs	r2, r3
 801fd00:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801fd04:	ea4c 0c02 	orr.w	ip, ip, r2
 801fd08:	f8a7 c000 	strh.w	ip, [r7]
 801fd0c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fd0e:	3702      	adds	r7, #2
 801fd10:	441c      	add	r4, r3
 801fd12:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fd14:	441e      	add	r6, r3
 801fd16:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801fd18:	3b01      	subs	r3, #1
 801fd1a:	9317      	str	r3, [sp, #92]	; 0x5c
 801fd1c:	e6c0      	b.n	801faa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fd1e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fd20:	441c      	add	r4, r3
 801fd22:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fd24:	441e      	add	r6, r3
 801fd26:	9b07      	ldr	r3, [sp, #28]
 801fd28:	3b01      	subs	r3, #1
 801fd2a:	9307      	str	r3, [sp, #28]
 801fd2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd2e:	3302      	adds	r3, #2
 801fd30:	930a      	str	r3, [sp, #40]	; 0x28
 801fd32:	e695      	b.n	801fa60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fd34:	d024      	beq.n	801fd80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fd36:	9b07      	ldr	r3, [sp, #28]
 801fd38:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801fd3a:	3b01      	subs	r3, #1
 801fd3c:	fb00 4003 	mla	r0, r0, r3, r4
 801fd40:	1400      	asrs	r0, r0, #16
 801fd42:	f53f aeaa 	bmi.w	801fa9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fd46:	3901      	subs	r1, #1
 801fd48:	4288      	cmp	r0, r1
 801fd4a:	f6bf aea6 	bge.w	801fa9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fd4e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fd50:	fb01 6303 	mla	r3, r1, r3, r6
 801fd54:	141b      	asrs	r3, r3, #16
 801fd56:	f53f aea0 	bmi.w	801fa9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fd5a:	3a01      	subs	r2, #1
 801fd5c:	4293      	cmp	r3, r2
 801fd5e:	f6bf ae9c 	bge.w	801fa9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fd62:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fd66:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801fd6a:	f1bb 0f00 	cmp.w	fp, #0
 801fd6e:	f300 809a 	bgt.w	801fea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801fd72:	9b07      	ldr	r3, [sp, #28]
 801fd74:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fd78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd7a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fd7e:	930a      	str	r3, [sp, #40]	; 0x28
 801fd80:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fd82:	2b00      	cmp	r3, #0
 801fd84:	f340 81ec 	ble.w	8020160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801fd88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fd8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fd8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fd92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fd96:	eef0 6a62 	vmov.f32	s13, s5
 801fd9a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fd9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fda2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fda6:	ee16 4a90 	vmov	r4, s13
 801fdaa:	eef0 6a43 	vmov.f32	s13, s6
 801fdae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdb2:	ee16 6a90 	vmov	r6, s13
 801fdb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fdba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fdbe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fdc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fdc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fdca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fdce:	ee12 2a90 	vmov	r2, s5
 801fdd2:	eef0 2a47 	vmov.f32	s5, s14
 801fdd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdda:	ee13 2a10 	vmov	r2, s6
 801fdde:	9327      	str	r3, [sp, #156]	; 0x9c
 801fde0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fde2:	eeb0 3a67 	vmov.f32	s6, s15
 801fde6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdea:	9328      	str	r3, [sp, #160]	; 0xa0
 801fdec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fdee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801fdf0:	3b01      	subs	r3, #1
 801fdf2:	9316      	str	r3, [sp, #88]	; 0x58
 801fdf4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fdf6:	bf08      	it	eq
 801fdf8:	4613      	moveq	r3, r2
 801fdfa:	9307      	str	r3, [sp, #28]
 801fdfc:	e622      	b.n	801fa44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801fdfe:	2800      	cmp	r0, #0
 801fe00:	f43f ae92 	beq.w	801fb28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fe04:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801fe08:	9308      	str	r3, [sp, #32]
 801fe0a:	0e1b      	lsrs	r3, r3, #24
 801fe0c:	9310      	str	r3, [sp, #64]	; 0x40
 801fe0e:	e68b      	b.n	801fb28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fe10:	8839      	ldrh	r1, [r7, #0]
 801fe12:	43db      	mvns	r3, r3
 801fe14:	4dd4      	ldr	r5, [pc, #848]	; (8020168 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801fe16:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801fe1a:	fa5f f883 	uxtb.w	r8, r3
 801fe1e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801fe22:	10c8      	asrs	r0, r1, #3
 801fe24:	00cb      	lsls	r3, r1, #3
 801fe26:	fb0e fe08 	mul.w	lr, lr, r8
 801fe2a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fe2e:	b2db      	uxtb	r3, r3
 801fe30:	f10e 0101 	add.w	r1, lr, #1
 801fe34:	fb00 f008 	mul.w	r0, r0, r8
 801fe38:	fb03 f308 	mul.w	r3, r3, r8
 801fe3c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801fe40:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801fe44:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801fe48:	f100 0e01 	add.w	lr, r0, #1
 801fe4c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801fe50:	b2c9      	uxtb	r1, r1
 801fe52:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801fe56:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801fe5a:	00d2      	lsls	r2, r2, #3
 801fe5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe60:	430a      	orrs	r2, r1
 801fe62:	1c59      	adds	r1, r3, #1
 801fe64:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fe68:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801fe6c:	e748      	b.n	801fd00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801fe6e:	f112 0801 	adds.w	r8, r2, #1
 801fe72:	f53f af4b 	bmi.w	801fd0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fe76:	4543      	cmp	r3, r8
 801fe78:	f6ff af48 	blt.w	801fd0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fe7c:	f11c 0801 	adds.w	r8, ip, #1
 801fe80:	f53f af44 	bmi.w	801fd0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fe84:	45c6      	cmp	lr, r8
 801fe86:	f6ff af41 	blt.w	801fd0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fe8a:	b21b      	sxth	r3, r3
 801fe8c:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801fe90:	fa0f f28e 	sxth.w	r2, lr
 801fe94:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801fe98:	9200      	str	r2, [sp, #0]
 801fe9a:	4639      	mov	r1, r7
 801fe9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fe9e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801fea0:	f7ff fc88 	bl	801f7b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801fea4:	e732      	b.n	801fd0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fea6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fea8:	1421      	asrs	r1, r4, #16
 801feaa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801feac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801feb0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801feb4:	1433      	asrs	r3, r6, #16
 801feb6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801feba:	fb07 1303 	mla	r3, r7, r3, r1
 801febe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fec0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801fec4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801fec8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801fecc:	2a00      	cmp	r2, #0
 801fece:	f000 8108 	beq.w	80200e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801fed2:	684d      	ldr	r5, [r1, #4]
 801fed4:	950d      	str	r5, [sp, #52]	; 0x34
 801fed6:	0e2d      	lsrs	r5, r5, #24
 801fed8:	9514      	str	r5, [sp, #80]	; 0x50
 801feda:	b178      	cbz	r0, 801fefc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fedc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801fee0:	3f01      	subs	r7, #1
 801fee2:	00bf      	lsls	r7, r7, #2
 801fee4:	3704      	adds	r7, #4
 801fee6:	eb01 0e07 	add.w	lr, r1, r7
 801feea:	59c9      	ldr	r1, [r1, r7]
 801feec:	9109      	str	r1, [sp, #36]	; 0x24
 801feee:	0e09      	lsrs	r1, r1, #24
 801fef0:	9111      	str	r1, [sp, #68]	; 0x44
 801fef2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801fef6:	910e      	str	r1, [sp, #56]	; 0x38
 801fef8:	0e09      	lsrs	r1, r1, #24
 801fefa:	9115      	str	r1, [sp, #84]	; 0x54
 801fefc:	b292      	uxth	r2, r2
 801fefe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ff00:	b280      	uxth	r0, r0
 801ff02:	fb02 f900 	mul.w	r9, r2, r0
 801ff06:	0112      	lsls	r2, r2, #4
 801ff08:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ff0c:	eba2 0e09 	sub.w	lr, r2, r9
 801ff10:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ff14:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ff16:	b280      	uxth	r0, r0
 801ff18:	fa1f fe8e 	uxth.w	lr, lr
 801ff1c:	1a09      	subs	r1, r1, r0
 801ff1e:	fb0e f202 	mul.w	r2, lr, r2
 801ff22:	b289      	uxth	r1, r1
 801ff24:	fb01 220c 	mla	r2, r1, ip, r2
 801ff28:	fb00 2205 	mla	r2, r0, r5, r2
 801ff2c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ff2e:	fb09 2205 	mla	r2, r9, r5, r2
 801ff32:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ff36:	2a00      	cmp	r2, #0
 801ff38:	f000 80ca 	beq.w	80200d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801ff3c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ff40:	d019      	beq.n	801ff76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ff42:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ff46:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ff4a:	fb0c fa0a 	mul.w	sl, ip, sl
 801ff4e:	fb0c fc03 	mul.w	ip, ip, r3
 801ff52:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ff56:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ff5a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ff5e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ff62:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ff66:	4453      	add	r3, sl
 801ff68:	0a3f      	lsrs	r7, r7, #8
 801ff6a:	0a1b      	lsrs	r3, r3, #8
 801ff6c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ff70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ff74:	433b      	orrs	r3, r7
 801ff76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ff78:	2dff      	cmp	r5, #255	; 0xff
 801ff7a:	d020      	beq.n	801ffbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ff7c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ff7e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ff82:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ff84:	436f      	muls	r7, r5
 801ff86:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ff88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ff8c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ff90:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ff92:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ff96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ff9a:	fb05 fa0a 	mul.w	sl, r5, sl
 801ff9e:	44bc      	add	ip, r7
 801ffa0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ffa4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ffa8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ffac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ffb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ffb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ffb8:	ea4c 050a 	orr.w	r5, ip, sl
 801ffbc:	950d      	str	r5, [sp, #52]	; 0x34
 801ffbe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ffc0:	2dff      	cmp	r5, #255	; 0xff
 801ffc2:	d020      	beq.n	8020006 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801ffc4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ffc6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ffca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ffcc:	436f      	muls	r7, r5
 801ffce:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ffd0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ffd4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ffd6:	fb05 fa0c 	mul.w	sl, r5, ip
 801ffda:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ffde:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ffe2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ffe6:	44bc      	add	ip, r7
 801ffe8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ffec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fff0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fff4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fff8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fffc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020000:	ea4c 050a 	orr.w	r5, ip, sl
 8020004:	9509      	str	r5, [sp, #36]	; 0x24
 8020006:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020008:	2dff      	cmp	r5, #255	; 0xff
 802000a:	d020      	beq.n	802004e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802000c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802000e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020012:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020014:	436f      	muls	r7, r5
 8020016:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020018:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802001c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020020:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020022:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020026:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802002a:	fb05 fa0a 	mul.w	sl, r5, sl
 802002e:	44bc      	add	ip, r7
 8020030:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020034:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020038:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802003c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020040:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020044:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020048:	ea4c 050a 	orr.w	r5, ip, sl
 802004c:	950e      	str	r5, [sp, #56]	; 0x38
 802004e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020050:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020054:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020058:	2aff      	cmp	r2, #255	; 0xff
 802005a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802005e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020060:	fb0e f707 	mul.w	r7, lr, r7
 8020064:	fb01 770c 	mla	r7, r1, ip, r7
 8020068:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802006c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802006e:	fb00 770c 	mla	r7, r0, ip, r7
 8020072:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020076:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020078:	fb09 770c 	mla	r7, r9, ip, r7
 802007c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8020080:	fb0e fe0c 	mul.w	lr, lr, ip
 8020084:	ea4f 2717 	mov.w	r7, r7, lsr #8
 8020088:	fb01 e303 	mla	r3, r1, r3, lr
 802008c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802008e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020092:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020096:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020098:	fb00 330a 	mla	r3, r0, sl, r3
 802009c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80200a0:	fb09 3c0c 	mla	ip, r9, ip, r3
 80200a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80200a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80200ac:	ea47 070c 	orr.w	r7, r7, ip
 80200b0:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80200b4:	d11e      	bne.n	80200f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 80200b6:	097a      	lsrs	r2, r7, #5
 80200b8:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80200bc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80200c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80200c4:	f023 0307 	bic.w	r3, r3, #7
 80200c8:	4313      	orrs	r3, r2
 80200ca:	431f      	orrs	r7, r3
 80200cc:	f8a8 7000 	strh.w	r7, [r8]
 80200d0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80200d2:	f108 0802 	add.w	r8, r8, #2
 80200d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80200da:	441c      	add	r4, r3
 80200dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80200de:	441e      	add	r6, r3
 80200e0:	e643      	b.n	801fd6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80200e2:	2800      	cmp	r0, #0
 80200e4:	f43f af0a 	beq.w	801fefc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80200e8:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80200ec:	9109      	str	r1, [sp, #36]	; 0x24
 80200ee:	0e09      	lsrs	r1, r1, #24
 80200f0:	9111      	str	r1, [sp, #68]	; 0x44
 80200f2:	e703      	b.n	801fefc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80200f4:	f8b8 1000 	ldrh.w	r1, [r8]
 80200f8:	43d2      	mvns	r2, r2
 80200fa:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80200fe:	fa5f fe82 	uxtb.w	lr, r2
 8020102:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020106:	10c8      	asrs	r0, r1, #3
 8020108:	00ca      	lsls	r2, r1, #3
 802010a:	fb0c fc0e 	mul.w	ip, ip, lr
 802010e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020112:	b2d2      	uxtb	r2, r2
 8020114:	f10c 0101 	add.w	r1, ip, #1
 8020118:	fb00 f00e 	mul.w	r0, r0, lr
 802011c:	fb02 f20e 	mul.w	r2, r2, lr
 8020120:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020124:	0c39      	lsrs	r1, r7, #16
 8020126:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802012a:	490f      	ldr	r1, [pc, #60]	; (8020168 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 802012c:	fa5f fc8c 	uxtb.w	ip, ip
 8020130:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8020134:	1c41      	adds	r1, r0, #1
 8020136:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802013a:	1c51      	adds	r1, r2, #1
 802013c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020140:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020144:	00c0      	lsls	r0, r0, #3
 8020146:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802014a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802014e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020152:	ea4c 0c00 	orr.w	ip, ip, r0
 8020156:	ea47 0c0c 	orr.w	ip, r7, ip
 802015a:	f8a8 c000 	strh.w	ip, [r8]
 802015e:	e7b7      	b.n	80200d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8020160:	b01b      	add	sp, #108	; 0x6c
 8020162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020166:	bf00      	nop
 8020168:	fffff800 	.word	0xfffff800

0802016c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802016c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020170:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8020174:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8020178:	2d00      	cmp	r5, #0
 802017a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802017e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8020182:	fb05 0e03 	mla	lr, r5, r3, r0
 8020186:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802018a:	f2c0 808c 	blt.w	80202a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802018e:	45a9      	cmp	r9, r5
 8020190:	f340 8089 	ble.w	80202a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8020194:	2800      	cmp	r0, #0
 8020196:	f2c0 8084 	blt.w	80202a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802019a:	4580      	cmp	r8, r0
 802019c:	f340 8081 	ble.w	80202a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80201a0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80201a4:	f01e 0f01 	tst.w	lr, #1
 80201a8:	5d16      	ldrb	r6, [r2, r4]
 80201aa:	bf0c      	ite	eq
 80201ac:	f006 060f 	andeq.w	r6, r6, #15
 80201b0:	1136      	asrne	r6, r6, #4
 80201b2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80201b6:	b2f6      	uxtb	r6, r6
 80201b8:	1c44      	adds	r4, r0, #1
 80201ba:	d477      	bmi.n	80202ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80201bc:	45a0      	cmp	r8, r4
 80201be:	dd75      	ble.n	80202ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80201c0:	2f00      	cmp	r7, #0
 80201c2:	d075      	beq.n	80202b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80201c4:	f10e 0a01 	add.w	sl, lr, #1
 80201c8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80201cc:	f01a 0f01 	tst.w	sl, #1
 80201d0:	5d14      	ldrb	r4, [r2, r4]
 80201d2:	bf0c      	ite	eq
 80201d4:	f004 040f 	andeq.w	r4, r4, #15
 80201d8:	1124      	asrne	r4, r4, #4
 80201da:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80201de:	b2e4      	uxtb	r4, r4
 80201e0:	3501      	adds	r5, #1
 80201e2:	d469      	bmi.n	80202b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80201e4:	45a9      	cmp	r9, r5
 80201e6:	dd67      	ble.n	80202b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80201e8:	f1bc 0f00 	cmp.w	ip, #0
 80201ec:	d067      	beq.n	80202be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80201ee:	2800      	cmp	r0, #0
 80201f0:	db60      	blt.n	80202b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80201f2:	4580      	cmp	r8, r0
 80201f4:	dd5e      	ble.n	80202b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80201f6:	eb03 090e 	add.w	r9, r3, lr
 80201fa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80201fe:	f019 0f01 	tst.w	r9, #1
 8020202:	5d55      	ldrb	r5, [r2, r5]
 8020204:	bf0c      	ite	eq
 8020206:	f005 050f 	andeq.w	r5, r5, #15
 802020a:	112d      	asrne	r5, r5, #4
 802020c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020210:	b2ed      	uxtb	r5, r5
 8020212:	3001      	adds	r0, #1
 8020214:	d456      	bmi.n	80202c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020216:	4580      	cmp	r8, r0
 8020218:	dd54      	ble.n	80202c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802021a:	2f00      	cmp	r7, #0
 802021c:	d054      	beq.n	80202c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802021e:	3301      	adds	r3, #1
 8020220:	449e      	add	lr, r3
 8020222:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020226:	f01e 0f01 	tst.w	lr, #1
 802022a:	5cd0      	ldrb	r0, [r2, r3]
 802022c:	bf0c      	ite	eq
 802022e:	f000 000f 	andeq.w	r0, r0, #15
 8020232:	1100      	asrne	r0, r0, #4
 8020234:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020238:	b2c3      	uxtb	r3, r0
 802023a:	b2ba      	uxth	r2, r7
 802023c:	fa1f fc8c 	uxth.w	ip, ip
 8020240:	fb02 f00c 	mul.w	r0, r2, ip
 8020244:	0112      	lsls	r2, r2, #4
 8020246:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802024a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802024e:	1a12      	subs	r2, r2, r0
 8020250:	fa1f fc8c 	uxth.w	ip, ip
 8020254:	b292      	uxth	r2, r2
 8020256:	eba7 070c 	sub.w	r7, r7, ip
 802025a:	4362      	muls	r2, r4
 802025c:	b2bf      	uxth	r7, r7
 802025e:	fb06 2207 	mla	r2, r6, r7, r2
 8020262:	fb0c 2505 	mla	r5, ip, r5, r2
 8020266:	fb00 5303 	mla	r3, r0, r3, r5
 802026a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802026e:	b1b3      	cbz	r3, 802029e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8020270:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8020274:	435a      	muls	r2, r3
 8020276:	1c53      	adds	r3, r2, #1
 8020278:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802027c:	4a2d      	ldr	r2, [pc, #180]	; (8020334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802027e:	121b      	asrs	r3, r3, #8
 8020280:	6812      	ldr	r2, [r2, #0]
 8020282:	2bff      	cmp	r3, #255	; 0xff
 8020284:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8020288:	d120      	bne.n	80202cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802028a:	0950      	lsrs	r0, r2, #5
 802028c:	4b2a      	ldr	r3, [pc, #168]	; (8020338 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802028e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020292:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020296:	4033      	ands	r3, r6
 8020298:	4318      	orrs	r0, r3
 802029a:	4302      	orrs	r2, r0
 802029c:	800a      	strh	r2, [r1, #0]
 802029e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80202a2:	2600      	movs	r6, #0
 80202a4:	e788      	b.n	80201b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80202a6:	2400      	movs	r4, #0
 80202a8:	4626      	mov	r6, r4
 80202aa:	e799      	b.n	80201e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80202ac:	2400      	movs	r4, #0
 80202ae:	e797      	b.n	80201e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80202b0:	463c      	mov	r4, r7
 80202b2:	e795      	b.n	80201e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80202b4:	2500      	movs	r5, #0
 80202b6:	e7ac      	b.n	8020212 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80202b8:	2300      	movs	r3, #0
 80202ba:	461d      	mov	r5, r3
 80202bc:	e7bd      	b.n	802023a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80202be:	4663      	mov	r3, ip
 80202c0:	4665      	mov	r5, ip
 80202c2:	e7ba      	b.n	802023a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80202c4:	2300      	movs	r3, #0
 80202c6:	e7b8      	b.n	802023a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80202c8:	463b      	mov	r3, r7
 80202ca:	e7b6      	b.n	802023a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80202cc:	880d      	ldrh	r5, [r1, #0]
 80202ce:	b29f      	uxth	r7, r3
 80202d0:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80202d4:	43db      	mvns	r3, r3
 80202d6:	122c      	asrs	r4, r5, #8
 80202d8:	fb10 f007 	smulbb	r0, r0, r7
 80202dc:	b2db      	uxtb	r3, r3
 80202de:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80202e2:	b2f6      	uxtb	r6, r6
 80202e4:	b2d2      	uxtb	r2, r2
 80202e6:	fb04 0403 	mla	r4, r4, r3, r0
 80202ea:	10e8      	asrs	r0, r5, #3
 80202ec:	fb12 f207 	smulbb	r2, r2, r7
 80202f0:	00ed      	lsls	r5, r5, #3
 80202f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80202f6:	b2a4      	uxth	r4, r4
 80202f8:	fb16 f607 	smulbb	r6, r6, r7
 80202fc:	b2ed      	uxtb	r5, r5
 80202fe:	fb00 6603 	mla	r6, r0, r3, r6
 8020302:	fb05 2303 	mla	r3, r5, r3, r2
 8020306:	b2b0      	uxth	r0, r6
 8020308:	b29a      	uxth	r2, r3
 802030a:	1c63      	adds	r3, r4, #1
 802030c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020310:	1c53      	adds	r3, r2, #1
 8020312:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020316:	1c42      	adds	r2, r0, #1
 8020318:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802031c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020320:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020324:	0940      	lsrs	r0, r0, #5
 8020326:	4323      	orrs	r3, r4
 8020328:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802032c:	4303      	orrs	r3, r0
 802032e:	800b      	strh	r3, [r1, #0]
 8020330:	e7b5      	b.n	802029e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8020332:	bf00      	nop
 8020334:	24001e84 	.word	0x24001e84
 8020338:	00fff800 	.word	0x00fff800

0802033c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802033c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020340:	b097      	sub	sp, #92	; 0x5c
 8020342:	9214      	str	r2, [sp, #80]	; 0x50
 8020344:	9309      	str	r3, [sp, #36]	; 0x24
 8020346:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020348:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802034c:	9015      	str	r0, [sp, #84]	; 0x54
 802034e:	910d      	str	r1, [sp, #52]	; 0x34
 8020350:	6850      	ldr	r0, [r2, #4]
 8020352:	930f      	str	r3, [sp, #60]	; 0x3c
 8020354:	6812      	ldr	r2, [r2, #0]
 8020356:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802035a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802035e:	fb00 1303 	mla	r3, r0, r3, r1
 8020362:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020366:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020368:	689b      	ldr	r3, [r3, #8]
 802036a:	3301      	adds	r3, #1
 802036c:	f023 0301 	bic.w	r3, r3, #1
 8020370:	930a      	str	r3, [sp, #40]	; 0x28
 8020372:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020374:	681f      	ldr	r7, [r3, #0]
 8020376:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020378:	2b00      	cmp	r3, #0
 802037a:	dc03      	bgt.n	8020384 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802037c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802037e:	2b00      	cmp	r3, #0
 8020380:	f340 8289 	ble.w	8020896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 8020384:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020386:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802038a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802038e:	1e48      	subs	r0, r1, #1
 8020390:	f102 3cff 	add.w	ip, r2, #4294967295
 8020394:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020396:	2b00      	cmp	r3, #0
 8020398:	f340 80c5 	ble.w	8020526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802039c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80203a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80203a4:	d406      	bmi.n	80203b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80203a6:	4586      	cmp	lr, r0
 80203a8:	da04      	bge.n	80203b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80203aa:	2b00      	cmp	r3, #0
 80203ac:	db02      	blt.n	80203b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80203ae:	4563      	cmp	r3, ip
 80203b0:	f2c0 80ba 	blt.w	8020528 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80203b4:	f11e 0e01 	adds.w	lr, lr, #1
 80203b8:	f100 80ab 	bmi.w	8020512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80203bc:	4571      	cmp	r1, lr
 80203be:	f2c0 80a8 	blt.w	8020512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80203c2:	3301      	adds	r3, #1
 80203c4:	f100 80a5 	bmi.w	8020512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80203c8:	429a      	cmp	r2, r3
 80203ca:	f2c0 80a2 	blt.w	8020512 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 80203ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203d0:	46c8      	mov	r8, r9
 80203d2:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80203d6:	930e      	str	r3, [sp, #56]	; 0x38
 80203d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80203da:	2b00      	cmp	r3, #0
 80203dc:	f340 80c4 	ble.w	8020568 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80203e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80203e2:	1430      	asrs	r0, r6, #16
 80203e4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80203e8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80203ec:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80203f0:	1423      	asrs	r3, r4, #16
 80203f2:	f100 814f 	bmi.w	8020694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80203f6:	f10c 3bff 	add.w	fp, ip, #4294967295
 80203fa:	455b      	cmp	r3, fp
 80203fc:	f280 814a 	bge.w	8020694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020400:	2800      	cmp	r0, #0
 8020402:	f2c0 8147 	blt.w	8020694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020406:	f10e 3bff 	add.w	fp, lr, #4294967295
 802040a:	4558      	cmp	r0, fp
 802040c:	f280 8142 	bge.w	8020694 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020410:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8020412:	fb00 3305 	mla	r3, r0, r5, r3
 8020416:	0858      	lsrs	r0, r3, #1
 8020418:	07dd      	lsls	r5, r3, #31
 802041a:	f817 c000 	ldrb.w	ip, [r7, r0]
 802041e:	bf54      	ite	pl
 8020420:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020424:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020428:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802042c:	fa5f fc8c 	uxtb.w	ip, ip
 8020430:	2a00      	cmp	r2, #0
 8020432:	f000 80dd 	beq.w	80205f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8020436:	1c58      	adds	r0, r3, #1
 8020438:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802043c:	07c0      	lsls	r0, r0, #31
 802043e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020442:	bf54      	ite	pl
 8020444:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020448:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802044c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020450:	fa5f f08e 	uxtb.w	r0, lr
 8020454:	9010      	str	r0, [sp, #64]	; 0x40
 8020456:	b1d9      	cbz	r1, 8020490 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8020458:	4453      	add	r3, sl
 802045a:	0858      	lsrs	r0, r3, #1
 802045c:	07dd      	lsls	r5, r3, #31
 802045e:	f103 0301 	add.w	r3, r3, #1
 8020462:	5c38      	ldrb	r0, [r7, r0]
 8020464:	bf54      	ite	pl
 8020466:	f000 000f 	andpl.w	r0, r0, #15
 802046a:	1100      	asrmi	r0, r0, #4
 802046c:	07dd      	lsls	r5, r3, #31
 802046e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020472:	b2c0      	uxtb	r0, r0
 8020474:	900b      	str	r0, [sp, #44]	; 0x2c
 8020476:	ea4f 0053 	mov.w	r0, r3, lsr #1
 802047a:	f817 e000 	ldrb.w	lr, [r7, r0]
 802047e:	bf54      	ite	pl
 8020480:	f00e 030f 	andpl.w	r3, lr, #15
 8020484:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8020488:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802048c:	b2db      	uxtb	r3, r3
 802048e:	9311      	str	r3, [sp, #68]	; 0x44
 8020490:	b292      	uxth	r2, r2
 8020492:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020494:	b289      	uxth	r1, r1
 8020496:	fb02 f301 	mul.w	r3, r2, r1
 802049a:	0112      	lsls	r2, r2, #4
 802049c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80204a0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80204a4:	1ad2      	subs	r2, r2, r3
 80204a6:	b289      	uxth	r1, r1
 80204a8:	b292      	uxth	r2, r2
 80204aa:	1a40      	subs	r0, r0, r1
 80204ac:	436a      	muls	r2, r5
 80204ae:	b280      	uxth	r0, r0
 80204b0:	fb0c 2c00 	mla	ip, ip, r0, r2
 80204b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80204b6:	fb01 c102 	mla	r1, r1, r2, ip
 80204ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80204bc:	fb03 1302 	mla	r3, r3, r2, r1
 80204c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80204c4:	b1db      	cbz	r3, 80204fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80204c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80204c8:	4353      	muls	r3, r2
 80204ca:	1c5a      	adds	r2, r3, #1
 80204cc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80204d0:	4ac6      	ldr	r2, [pc, #792]	; (80207ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 80204d2:	121b      	asrs	r3, r3, #8
 80204d4:	6812      	ldr	r2, [r2, #0]
 80204d6:	2bff      	cmp	r3, #255	; 0xff
 80204d8:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80204dc:	f040 8099 	bne.w	8020612 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80204e0:	0953      	lsrs	r3, r2, #5
 80204e2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80204e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80204ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80204ee:	f02c 0c07 	bic.w	ip, ip, #7
 80204f2:	ea43 0c0c 	orr.w	ip, r3, ip
 80204f6:	ea4c 0202 	orr.w	r2, ip, r2
 80204fa:	f8a8 2000 	strh.w	r2, [r8]
 80204fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8020500:	f108 0802 	add.w	r8, r8, #2
 8020504:	441c      	add	r4, r3
 8020506:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020508:	441e      	add	r6, r3
 802050a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802050c:	3b01      	subs	r3, #1
 802050e:	930e      	str	r3, [sp, #56]	; 0x38
 8020510:	e762      	b.n	80203d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020512:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8020514:	f109 0902 	add.w	r9, r9, #2
 8020518:	441c      	add	r4, r3
 802051a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802051c:	441e      	add	r6, r3
 802051e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020520:	3b01      	subs	r3, #1
 8020522:	9309      	str	r3, [sp, #36]	; 0x24
 8020524:	e736      	b.n	8020394 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020526:	d024      	beq.n	8020572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8020528:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802052a:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802052c:	3b01      	subs	r3, #1
 802052e:	fb00 4003 	mla	r0, r0, r3, r4
 8020532:	1400      	asrs	r0, r0, #16
 8020534:	f53f af4b 	bmi.w	80203ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020538:	3901      	subs	r1, #1
 802053a:	4288      	cmp	r0, r1
 802053c:	f6bf af47 	bge.w	80203ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020540:	9924      	ldr	r1, [sp, #144]	; 0x90
 8020542:	fb01 6303 	mla	r3, r1, r3, r6
 8020546:	141b      	asrs	r3, r3, #16
 8020548:	f53f af41 	bmi.w	80203ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802054c:	3a01      	subs	r2, #1
 802054e:	4293      	cmp	r3, r2
 8020550:	f6bf af3d 	bge.w	80203ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020554:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8020558:	46c8      	mov	r8, r9
 802055a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802055e:	930e      	str	r3, [sp, #56]	; 0x38
 8020560:	f1bb 0f00 	cmp.w	fp, #0
 8020564:	f300 80b7 	bgt.w	80206d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8020568:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802056a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802056e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020572:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020574:	2b00      	cmp	r3, #0
 8020576:	f340 818e 	ble.w	8020896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 802057a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802057e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020580:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020584:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020588:	eef0 6a62 	vmov.f32	s13, s5
 802058c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020590:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020594:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020598:	ee16 4a90 	vmov	r4, s13
 802059c:	eef0 6a43 	vmov.f32	s13, s6
 80205a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205a4:	ee16 6a90 	vmov	r6, s13
 80205a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80205ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80205b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80205b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80205b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80205bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80205c0:	ee12 2a90 	vmov	r2, s5
 80205c4:	eef0 2a47 	vmov.f32	s5, s14
 80205c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80205cc:	ee13 2a10 	vmov	r2, s6
 80205d0:	9323      	str	r3, [sp, #140]	; 0x8c
 80205d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205d4:	eeb0 3a67 	vmov.f32	s6, s15
 80205d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80205dc:	9324      	str	r3, [sp, #144]	; 0x90
 80205de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80205e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80205e2:	3b01      	subs	r3, #1
 80205e4:	930d      	str	r3, [sp, #52]	; 0x34
 80205e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205e8:	bf08      	it	eq
 80205ea:	4613      	moveq	r3, r2
 80205ec:	9309      	str	r3, [sp, #36]	; 0x24
 80205ee:	e6c2      	b.n	8020376 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80205f0:	2900      	cmp	r1, #0
 80205f2:	f43f af4d 	beq.w	8020490 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80205f6:	eb0a 0003 	add.w	r0, sl, r3
 80205fa:	0843      	lsrs	r3, r0, #1
 80205fc:	07c0      	lsls	r0, r0, #31
 80205fe:	5cfb      	ldrb	r3, [r7, r3]
 8020600:	bf54      	ite	pl
 8020602:	f003 030f 	andpl.w	r3, r3, #15
 8020606:	111b      	asrmi	r3, r3, #4
 8020608:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802060c:	b2db      	uxtb	r3, r3
 802060e:	930b      	str	r3, [sp, #44]	; 0x2c
 8020610:	e73e      	b.n	8020490 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8020612:	f8b8 e000 	ldrh.w	lr, [r8]
 8020616:	fa1f fb83 	uxth.w	fp, r3
 802061a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802061e:	43db      	mvns	r3, r3
 8020620:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020624:	fb11 f10b 	smulbb	r1, r1, fp
 8020628:	b2db      	uxtb	r3, r3
 802062a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802062e:	fa5f fc8c 	uxtb.w	ip, ip
 8020632:	b2d2      	uxtb	r2, r2
 8020634:	fb00 1003 	mla	r0, r0, r3, r1
 8020638:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802063c:	fb1c fc0b 	smulbb	ip, ip, fp
 8020640:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020644:	b280      	uxth	r0, r0
 8020646:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802064a:	fb12 fb0b 	smulbb	fp, r2, fp
 802064e:	fa5f fe8e 	uxtb.w	lr, lr
 8020652:	fb01 cc03 	mla	ip, r1, r3, ip
 8020656:	fb0e bb03 	mla	fp, lr, r3, fp
 802065a:	1c43      	adds	r3, r0, #1
 802065c:	fa1f fc8c 	uxth.w	ip, ip
 8020660:	fa1f fb8b 	uxth.w	fp, fp
 8020664:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020668:	f10c 0101 	add.w	r1, ip, #1
 802066c:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8020670:	f10b 0001 	add.w	r0, fp, #1
 8020674:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020678:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802067c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020680:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020684:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020688:	4318      	orrs	r0, r3
 802068a:	ea40 000c 	orr.w	r0, r0, ip
 802068e:	f8a8 0000 	strh.w	r0, [r8]
 8020692:	e734      	b.n	80204fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8020694:	f113 0b01 	adds.w	fp, r3, #1
 8020698:	f53f af31 	bmi.w	80204fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802069c:	45dc      	cmp	ip, fp
 802069e:	f6ff af2e 	blt.w	80204fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80206a2:	f110 0b01 	adds.w	fp, r0, #1
 80206a6:	f53f af2a 	bmi.w	80204fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80206aa:	45de      	cmp	lr, fp
 80206ac:	f6ff af27 	blt.w	80204fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80206b0:	9302      	str	r3, [sp, #8]
 80206b2:	fa0f f38e 	sxth.w	r3, lr
 80206b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80206b8:	9301      	str	r3, [sp, #4]
 80206ba:	fa0f f38c 	sxth.w	r3, ip
 80206be:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80206c2:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80206c6:	9300      	str	r3, [sp, #0]
 80206c8:	463a      	mov	r2, r7
 80206ca:	4653      	mov	r3, sl
 80206cc:	4641      	mov	r1, r8
 80206ce:	9815      	ldr	r0, [sp, #84]	; 0x54
 80206d0:	f7ff fd4c 	bl	802016c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80206d4:	e713      	b.n	80204fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80206d6:	1422      	asrs	r2, r4, #16
 80206d8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80206da:	1433      	asrs	r3, r6, #16
 80206dc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80206e0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80206e4:	fb05 2303 	mla	r3, r5, r3, r2
 80206e8:	085a      	lsrs	r2, r3, #1
 80206ea:	07dd      	lsls	r5, r3, #31
 80206ec:	5cba      	ldrb	r2, [r7, r2]
 80206ee:	bf54      	ite	pl
 80206f0:	f002 020f 	andpl.w	r2, r2, #15
 80206f4:	1112      	asrmi	r2, r2, #4
 80206f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80206fa:	b2d2      	uxtb	r2, r2
 80206fc:	2900      	cmp	r1, #0
 80206fe:	d077      	beq.n	80207f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8020700:	f103 0e01 	add.w	lr, r3, #1
 8020704:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8020708:	f01e 0f01 	tst.w	lr, #1
 802070c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020710:	bf0c      	ite	eq
 8020712:	f00c 0c0f 	andeq.w	ip, ip, #15
 8020716:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802071a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802071e:	fa5f f58c 	uxtb.w	r5, ip
 8020722:	9512      	str	r5, [sp, #72]	; 0x48
 8020724:	b308      	cbz	r0, 802076a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8020726:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020728:	442b      	add	r3, r5
 802072a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802072e:	07dd      	lsls	r5, r3, #31
 8020730:	f103 0301 	add.w	r3, r3, #1
 8020734:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020738:	bf54      	ite	pl
 802073a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802073e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020742:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020746:	fa5f f58c 	uxtb.w	r5, ip
 802074a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802074e:	950c      	str	r5, [sp, #48]	; 0x30
 8020750:	07dd      	lsls	r5, r3, #31
 8020752:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020756:	bf54      	ite	pl
 8020758:	f00c 0c0f 	andpl.w	ip, ip, #15
 802075c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020760:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020764:	fa5f f38c 	uxtb.w	r3, ip
 8020768:	9313      	str	r3, [sp, #76]	; 0x4c
 802076a:	b289      	uxth	r1, r1
 802076c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802076e:	b280      	uxth	r0, r0
 8020770:	fb01 f300 	mul.w	r3, r1, r0
 8020774:	0109      	lsls	r1, r1, #4
 8020776:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802077a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802077e:	1ac9      	subs	r1, r1, r3
 8020780:	b280      	uxth	r0, r0
 8020782:	b289      	uxth	r1, r1
 8020784:	ebac 0c00 	sub.w	ip, ip, r0
 8020788:	4369      	muls	r1, r5
 802078a:	fa1f fc8c 	uxth.w	ip, ip
 802078e:	fb02 120c 	mla	r2, r2, ip, r1
 8020792:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020794:	fb00 2001 	mla	r0, r0, r1, r2
 8020798:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802079a:	fb03 0302 	mla	r3, r3, r2, r0
 802079e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80207a2:	b1d3      	cbz	r3, 80207da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80207a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80207a6:	4353      	muls	r3, r2
 80207a8:	1c5a      	adds	r2, r3, #1
 80207aa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80207ae:	4a0f      	ldr	r2, [pc, #60]	; (80207ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 80207b0:	121b      	asrs	r3, r3, #8
 80207b2:	6812      	ldr	r2, [r2, #0]
 80207b4:	2bff      	cmp	r3, #255	; 0xff
 80207b6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80207ba:	d12d      	bne.n	8020818 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 80207bc:	0953      	lsrs	r3, r2, #5
 80207be:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80207c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80207c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80207ca:	f02c 0c07 	bic.w	ip, ip, #7
 80207ce:	ea43 0c0c 	orr.w	ip, r3, ip
 80207d2:	ea4c 0202 	orr.w	r2, ip, r2
 80207d6:	f8a8 2000 	strh.w	r2, [r8]
 80207da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80207dc:	f108 0802 	add.w	r8, r8, #2
 80207e0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80207e4:	441c      	add	r4, r3
 80207e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80207e8:	441e      	add	r6, r3
 80207ea:	e6b9      	b.n	8020560 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80207ec:	24001e84 	.word	0x24001e84
 80207f0:	2800      	cmp	r0, #0
 80207f2:	d0ba      	beq.n	802076a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80207f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80207f6:	442b      	add	r3, r5
 80207f8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80207fc:	07db      	lsls	r3, r3, #31
 80207fe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020802:	bf54      	ite	pl
 8020804:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020808:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802080c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020810:	fa5f f38c 	uxtb.w	r3, ip
 8020814:	930c      	str	r3, [sp, #48]	; 0x30
 8020816:	e7a8      	b.n	802076a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8020818:	f8b8 e000 	ldrh.w	lr, [r8]
 802081c:	fa1f fa83 	uxth.w	sl, r3
 8020820:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020824:	43db      	mvns	r3, r3
 8020826:	ea4f 202e 	mov.w	r0, lr, asr #8
 802082a:	fb11 f10a 	smulbb	r1, r1, sl
 802082e:	b2db      	uxtb	r3, r3
 8020830:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020834:	b2d2      	uxtb	r2, r2
 8020836:	fa5f fc8c 	uxtb.w	ip, ip
 802083a:	fb00 1003 	mla	r0, r0, r3, r1
 802083e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020842:	fb12 f20a 	smulbb	r2, r2, sl
 8020846:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802084a:	b280      	uxth	r0, r0
 802084c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020850:	fb1c fc0a 	smulbb	ip, ip, sl
 8020854:	fa5f fe8e 	uxtb.w	lr, lr
 8020858:	fb0e 2203 	mla	r2, lr, r3, r2
 802085c:	fb01 cc03 	mla	ip, r1, r3, ip
 8020860:	1c43      	adds	r3, r0, #1
 8020862:	b292      	uxth	r2, r2
 8020864:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020868:	1c51      	adds	r1, r2, #1
 802086a:	fa1f fc8c 	uxth.w	ip, ip
 802086e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020872:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8020876:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802087a:	4308      	orrs	r0, r1
 802087c:	f10c 0101 	add.w	r1, ip, #1
 8020880:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020884:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020888:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802088c:	ea40 000c 	orr.w	r0, r0, ip
 8020890:	f8a8 0000 	strh.w	r0, [r8]
 8020894:	e7a1      	b.n	80207da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8020896:	b017      	add	sp, #92	; 0x5c
 8020898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802089c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802089c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80208a0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80208a4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80208a8:	2d00      	cmp	r5, #0
 80208aa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80208ae:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80208b2:	fb05 0e03 	mla	lr, r5, r3, r0
 80208b6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80208ba:	f2c0 80b0 	blt.w	8020a1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80208be:	45a9      	cmp	r9, r5
 80208c0:	f340 80ad 	ble.w	8020a1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80208c4:	2800      	cmp	r0, #0
 80208c6:	f2c0 80a8 	blt.w	8020a1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80208ca:	4580      	cmp	r8, r0
 80208cc:	f340 80a5 	ble.w	8020a1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80208d0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80208d4:	f01e 0f01 	tst.w	lr, #1
 80208d8:	5d16      	ldrb	r6, [r2, r4]
 80208da:	bf0c      	ite	eq
 80208dc:	f006 060f 	andeq.w	r6, r6, #15
 80208e0:	1136      	asrne	r6, r6, #4
 80208e2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80208e6:	b2f6      	uxtb	r6, r6
 80208e8:	1c44      	adds	r4, r0, #1
 80208ea:	f100 809b 	bmi.w	8020a24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80208ee:	45a0      	cmp	r8, r4
 80208f0:	f340 8098 	ble.w	8020a24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80208f4:	2f00      	cmp	r7, #0
 80208f6:	f000 8097 	beq.w	8020a28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80208fa:	f10e 0a01 	add.w	sl, lr, #1
 80208fe:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020902:	f01a 0f01 	tst.w	sl, #1
 8020906:	5d14      	ldrb	r4, [r2, r4]
 8020908:	bf0c      	ite	eq
 802090a:	f004 040f 	andeq.w	r4, r4, #15
 802090e:	1124      	asrne	r4, r4, #4
 8020910:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020914:	b2e4      	uxtb	r4, r4
 8020916:	3501      	adds	r5, #1
 8020918:	f100 808a 	bmi.w	8020a30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802091c:	45a9      	cmp	r9, r5
 802091e:	f340 8087 	ble.w	8020a30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020922:	f1bc 0f00 	cmp.w	ip, #0
 8020926:	f000 8086 	beq.w	8020a36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802092a:	2800      	cmp	r0, #0
 802092c:	db7e      	blt.n	8020a2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802092e:	4580      	cmp	r8, r0
 8020930:	dd7c      	ble.n	8020a2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020932:	eb03 090e 	add.w	r9, r3, lr
 8020936:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802093a:	f019 0f01 	tst.w	r9, #1
 802093e:	5d55      	ldrb	r5, [r2, r5]
 8020940:	bf0c      	ite	eq
 8020942:	f005 050f 	andeq.w	r5, r5, #15
 8020946:	112d      	asrne	r5, r5, #4
 8020948:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802094c:	b2ed      	uxtb	r5, r5
 802094e:	3001      	adds	r0, #1
 8020950:	d474      	bmi.n	8020a3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020952:	4580      	cmp	r8, r0
 8020954:	dd72      	ble.n	8020a3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020956:	2f00      	cmp	r7, #0
 8020958:	d072      	beq.n	8020a40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802095a:	3301      	adds	r3, #1
 802095c:	449e      	add	lr, r3
 802095e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020962:	f01e 0f01 	tst.w	lr, #1
 8020966:	5cd0      	ldrb	r0, [r2, r3]
 8020968:	bf0c      	ite	eq
 802096a:	f000 000f 	andeq.w	r0, r0, #15
 802096e:	1100      	asrne	r0, r0, #4
 8020970:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020974:	b2c3      	uxtb	r3, r0
 8020976:	b2ba      	uxth	r2, r7
 8020978:	fa1f fc8c 	uxth.w	ip, ip
 802097c:	fb02 f00c 	mul.w	r0, r2, ip
 8020980:	0112      	lsls	r2, r2, #4
 8020982:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020986:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802098a:	1a12      	subs	r2, r2, r0
 802098c:	fa1f fc8c 	uxth.w	ip, ip
 8020990:	b292      	uxth	r2, r2
 8020992:	eba7 070c 	sub.w	r7, r7, ip
 8020996:	4362      	muls	r2, r4
 8020998:	b2bf      	uxth	r7, r7
 802099a:	fb06 2207 	mla	r2, r6, r7, r2
 802099e:	fb0c 2505 	mla	r5, ip, r5, r2
 80209a2:	fb00 5303 	mla	r3, r0, r3, r5
 80209a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80209aa:	b3a3      	cbz	r3, 8020a16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80209ac:	4a25      	ldr	r2, [pc, #148]	; (8020a44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80209ae:	880e      	ldrh	r6, [r1, #0]
 80209b0:	6815      	ldr	r5, [r2, #0]
 80209b2:	b29a      	uxth	r2, r3
 80209b4:	1234      	asrs	r4, r6, #8
 80209b6:	43db      	mvns	r3, r3
 80209b8:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80209bc:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80209c0:	b2db      	uxtb	r3, r3
 80209c2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80209c6:	fb10 f002 	smulbb	r0, r0, r2
 80209ca:	b2ed      	uxtb	r5, r5
 80209cc:	fb17 f702 	smulbb	r7, r7, r2
 80209d0:	fb04 0403 	mla	r4, r4, r3, r0
 80209d4:	10f0      	asrs	r0, r6, #3
 80209d6:	fb15 f202 	smulbb	r2, r5, r2
 80209da:	00f6      	lsls	r6, r6, #3
 80209dc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80209e0:	b2a4      	uxth	r4, r4
 80209e2:	b2f6      	uxtb	r6, r6
 80209e4:	fb00 7003 	mla	r0, r0, r3, r7
 80209e8:	fb06 2303 	mla	r3, r6, r3, r2
 80209ec:	b280      	uxth	r0, r0
 80209ee:	b29a      	uxth	r2, r3
 80209f0:	1c63      	adds	r3, r4, #1
 80209f2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80209f6:	1c53      	adds	r3, r2, #1
 80209f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80209fc:	1c42      	adds	r2, r0, #1
 80209fe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020a02:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020a06:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020a0a:	0940      	lsrs	r0, r0, #5
 8020a0c:	4323      	orrs	r3, r4
 8020a0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020a12:	4303      	orrs	r3, r0
 8020a14:	800b      	strh	r3, [r1, #0]
 8020a16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a1a:	2600      	movs	r6, #0
 8020a1c:	e764      	b.n	80208e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8020a1e:	2400      	movs	r4, #0
 8020a20:	4626      	mov	r6, r4
 8020a22:	e778      	b.n	8020916 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a24:	2400      	movs	r4, #0
 8020a26:	e776      	b.n	8020916 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a28:	463c      	mov	r4, r7
 8020a2a:	e774      	b.n	8020916 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020a2c:	2500      	movs	r5, #0
 8020a2e:	e78e      	b.n	802094e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020a30:	2300      	movs	r3, #0
 8020a32:	461d      	mov	r5, r3
 8020a34:	e79f      	b.n	8020976 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a36:	4663      	mov	r3, ip
 8020a38:	4665      	mov	r5, ip
 8020a3a:	e79c      	b.n	8020976 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a3c:	2300      	movs	r3, #0
 8020a3e:	e79a      	b.n	8020976 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a40:	463b      	mov	r3, r7
 8020a42:	e798      	b.n	8020976 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020a44:	24001e84 	.word	0x24001e84

08020a48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a4c:	b093      	sub	sp, #76	; 0x4c
 8020a4e:	461d      	mov	r5, r3
 8020a50:	920c      	str	r2, [sp, #48]	; 0x30
 8020a52:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020a54:	9011      	str	r0, [sp, #68]	; 0x44
 8020a56:	9107      	str	r1, [sp, #28]
 8020a58:	6850      	ldr	r0, [r2, #4]
 8020a5a:	6812      	ldr	r2, [r2, #0]
 8020a5c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020a60:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020a64:	fb00 1303 	mla	r3, r0, r3, r1
 8020a68:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020a6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020a6e:	689b      	ldr	r3, [r3, #8]
 8020a70:	3301      	adds	r3, #1
 8020a72:	f023 0301 	bic.w	r3, r3, #1
 8020a76:	9306      	str	r3, [sp, #24]
 8020a78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020a7a:	681f      	ldr	r7, [r3, #0]
 8020a7c:	9b07      	ldr	r3, [sp, #28]
 8020a7e:	2b00      	cmp	r3, #0
 8020a80:	dc03      	bgt.n	8020a8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020a82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020a84:	2b00      	cmp	r3, #0
 8020a86:	f340 8267 	ble.w	8020f58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020a8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020a8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a94:	1e48      	subs	r0, r1, #1
 8020a96:	f102 3cff 	add.w	ip, r2, #4294967295
 8020a9a:	2d00      	cmp	r5, #0
 8020a9c:	f340 80b7 	ble.w	8020c0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020aa0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020aa4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020aa8:	d406      	bmi.n	8020ab8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020aaa:	4586      	cmp	lr, r0
 8020aac:	da04      	bge.n	8020ab8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020aae:	2b00      	cmp	r3, #0
 8020ab0:	db02      	blt.n	8020ab8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020ab2:	4563      	cmp	r3, ip
 8020ab4:	f2c0 80ac 	blt.w	8020c10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020ab8:	f11e 0e01 	adds.w	lr, lr, #1
 8020abc:	f100 809f 	bmi.w	8020bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020ac0:	4571      	cmp	r1, lr
 8020ac2:	f2c0 809c 	blt.w	8020bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020ac6:	3301      	adds	r3, #1
 8020ac8:	f100 8099 	bmi.w	8020bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020acc:	429a      	cmp	r2, r3
 8020ace:	f2c0 8096 	blt.w	8020bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020ad2:	46c8      	mov	r8, r9
 8020ad4:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020ad8:	9509      	str	r5, [sp, #36]	; 0x24
 8020ada:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020adc:	2b00      	cmp	r3, #0
 8020ade:	f340 80b5 	ble.w	8020c4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020ae2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020ae6:	1430      	asrs	r0, r6, #16
 8020ae8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020aec:	9308      	str	r3, [sp, #32]
 8020aee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020af0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8020af4:	1423      	asrs	r3, r4, #16
 8020af6:	f100 813f 	bmi.w	8020d78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020afa:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020afe:	455b      	cmp	r3, fp
 8020b00:	f280 813a 	bge.w	8020d78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b04:	2800      	cmp	r0, #0
 8020b06:	f2c0 8137 	blt.w	8020d78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b0a:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020b0e:	4558      	cmp	r0, fp
 8020b10:	f280 8132 	bge.w	8020d78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020b14:	9a06      	ldr	r2, [sp, #24]
 8020b16:	fb00 3302 	mla	r3, r0, r2, r3
 8020b1a:	0858      	lsrs	r0, r3, #1
 8020b1c:	07da      	lsls	r2, r3, #31
 8020b1e:	9a08      	ldr	r2, [sp, #32]
 8020b20:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020b24:	bf54      	ite	pl
 8020b26:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020b2a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020b2e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020b32:	fa5f fc8c 	uxtb.w	ip, ip
 8020b36:	2a00      	cmp	r2, #0
 8020b38:	f000 80cc 	beq.w	8020cd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020b3c:	1c58      	adds	r0, r3, #1
 8020b3e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020b42:	07c0      	lsls	r0, r0, #31
 8020b44:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020b48:	bf54      	ite	pl
 8020b4a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020b4e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020b52:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020b56:	fa5f fe8e 	uxtb.w	lr, lr
 8020b5a:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8020b5e:	b1b9      	cbz	r1, 8020b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020b60:	4453      	add	r3, sl
 8020b62:	0858      	lsrs	r0, r3, #1
 8020b64:	07da      	lsls	r2, r3, #31
 8020b66:	5c38      	ldrb	r0, [r7, r0]
 8020b68:	bf54      	ite	pl
 8020b6a:	f000 000f 	andpl.w	r0, r0, #15
 8020b6e:	1100      	asrmi	r0, r0, #4
 8020b70:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020b74:	b2c0      	uxtb	r0, r0
 8020b76:	900a      	str	r0, [sp, #40]	; 0x28
 8020b78:	1c58      	adds	r0, r3, #1
 8020b7a:	0843      	lsrs	r3, r0, #1
 8020b7c:	07c2      	lsls	r2, r0, #31
 8020b7e:	5cfb      	ldrb	r3, [r7, r3]
 8020b80:	bf54      	ite	pl
 8020b82:	f003 030f 	andpl.w	r3, r3, #15
 8020b86:	111b      	asrmi	r3, r3, #4
 8020b88:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020b8c:	b2db      	uxtb	r3, r3
 8020b8e:	930e      	str	r3, [sp, #56]	; 0x38
 8020b90:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8020b94:	b289      	uxth	r1, r1
 8020b96:	fb02 f301 	mul.w	r3, r2, r1
 8020b9a:	0112      	lsls	r2, r2, #4
 8020b9c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020ba0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8020ba4:	1ad2      	subs	r2, r2, r3
 8020ba6:	b289      	uxth	r1, r1
 8020ba8:	b292      	uxth	r2, r2
 8020baa:	1a40      	subs	r0, r0, r1
 8020bac:	fa1f fe80 	uxth.w	lr, r0
 8020bb0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020bb2:	4342      	muls	r2, r0
 8020bb4:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8020bb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020bba:	fb01 c102 	mla	r1, r1, r2, ip
 8020bbe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020bc0:	fb03 1302 	mla	r3, r3, r2, r1
 8020bc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020bc8:	2bff      	cmp	r3, #255	; 0xff
 8020bca:	f040 8094 	bne.w	8020cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8020bce:	4bbf      	ldr	r3, [pc, #764]	; (8020ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020bd0:	681a      	ldr	r2, [r3, #0]
 8020bd2:	4bbf      	ldr	r3, [pc, #764]	; (8020ed0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020bd4:	0951      	lsrs	r1, r2, #5
 8020bd6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020bda:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020bde:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020be2:	430b      	orrs	r3, r1
 8020be4:	4313      	orrs	r3, r2
 8020be6:	f8a8 3000 	strh.w	r3, [r8]
 8020bea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020bec:	f108 0802 	add.w	r8, r8, #2
 8020bf0:	441c      	add	r4, r3
 8020bf2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020bf4:	441e      	add	r6, r3
 8020bf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020bf8:	3b01      	subs	r3, #1
 8020bfa:	9309      	str	r3, [sp, #36]	; 0x24
 8020bfc:	e76d      	b.n	8020ada <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020bfe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020c00:	3d01      	subs	r5, #1
 8020c02:	f109 0902 	add.w	r9, r9, #2
 8020c06:	441c      	add	r4, r3
 8020c08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c0a:	441e      	add	r6, r3
 8020c0c:	e745      	b.n	8020a9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020c0e:	d021      	beq.n	8020c54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8020c10:	1e6b      	subs	r3, r5, #1
 8020c12:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020c14:	fb00 4003 	mla	r0, r0, r3, r4
 8020c18:	1400      	asrs	r0, r0, #16
 8020c1a:	f53f af5a 	bmi.w	8020ad2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c1e:	3901      	subs	r1, #1
 8020c20:	4288      	cmp	r0, r1
 8020c22:	f6bf af56 	bge.w	8020ad2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c26:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020c28:	fb01 6303 	mla	r3, r1, r3, r6
 8020c2c:	141b      	asrs	r3, r3, #16
 8020c2e:	f53f af50 	bmi.w	8020ad2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c32:	3a01      	subs	r2, #1
 8020c34:	4293      	cmp	r3, r2
 8020c36:	f6bf af4c 	bge.w	8020ad2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020c3a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020c3e:	46a8      	mov	r8, r5
 8020c40:	46ce      	mov	lr, r9
 8020c42:	9308      	str	r3, [sp, #32]
 8020c44:	f1b8 0f00 	cmp.w	r8, #0
 8020c48:	f300 80b6 	bgt.w	8020db8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020c4c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020c50:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020c54:	9b07      	ldr	r3, [sp, #28]
 8020c56:	2b00      	cmp	r3, #0
 8020c58:	f340 817e 	ble.w	8020f58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020c5c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c60:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020c62:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c6a:	eef0 6a62 	vmov.f32	s13, s5
 8020c6e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c7a:	ee16 4a90 	vmov	r4, s13
 8020c7e:	eef0 6a43 	vmov.f32	s13, s6
 8020c82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c86:	ee16 6a90 	vmov	r6, s13
 8020c8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020c92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020c96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020c9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020c9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020ca2:	ee12 2a90 	vmov	r2, s5
 8020ca6:	eef0 2a47 	vmov.f32	s5, s14
 8020caa:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cae:	ee13 2a10 	vmov	r2, s6
 8020cb2:	931f      	str	r3, [sp, #124]	; 0x7c
 8020cb4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020cb6:	eeb0 3a67 	vmov.f32	s6, s15
 8020cba:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cbe:	9320      	str	r3, [sp, #128]	; 0x80
 8020cc0:	9b07      	ldr	r3, [sp, #28]
 8020cc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020cc4:	3b01      	subs	r3, #1
 8020cc6:	9307      	str	r3, [sp, #28]
 8020cc8:	bf08      	it	eq
 8020cca:	4615      	moveq	r5, r2
 8020ccc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020cce:	bf18      	it	ne
 8020cd0:	461d      	movne	r5, r3
 8020cd2:	e6d3      	b.n	8020a7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020cd4:	2900      	cmp	r1, #0
 8020cd6:	f43f af5b 	beq.w	8020b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020cda:	eb0a 0003 	add.w	r0, sl, r3
 8020cde:	0843      	lsrs	r3, r0, #1
 8020ce0:	07c0      	lsls	r0, r0, #31
 8020ce2:	5cfb      	ldrb	r3, [r7, r3]
 8020ce4:	bf54      	ite	pl
 8020ce6:	f003 030f 	andpl.w	r3, r3, #15
 8020cea:	111b      	asrmi	r3, r3, #4
 8020cec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020cf0:	b2db      	uxtb	r3, r3
 8020cf2:	930a      	str	r3, [sp, #40]	; 0x28
 8020cf4:	e74c      	b.n	8020b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020cf6:	2b00      	cmp	r3, #0
 8020cf8:	f43f af77 	beq.w	8020bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020cfc:	4a73      	ldr	r2, [pc, #460]	; (8020ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020cfe:	fa1f fe83 	uxth.w	lr, r3
 8020d02:	f8b8 c000 	ldrh.w	ip, [r8]
 8020d06:	43db      	mvns	r3, r3
 8020d08:	6810      	ldr	r0, [r2, #0]
 8020d0a:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020d0e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020d12:	b2db      	uxtb	r3, r3
 8020d14:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020d18:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020d1c:	fb12 f20e 	smulbb	r2, r2, lr
 8020d20:	b2c0      	uxtb	r0, r0
 8020d22:	fb1b fb0e 	smulbb	fp, fp, lr
 8020d26:	fb01 2103 	mla	r1, r1, r3, r2
 8020d2a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020d2e:	fb10 fe0e 	smulbb	lr, r0, lr
 8020d32:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020d36:	b289      	uxth	r1, r1
 8020d38:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020d3c:	fa5f fc8c 	uxtb.w	ip, ip
 8020d40:	fb02 b203 	mla	r2, r2, r3, fp
 8020d44:	1c48      	adds	r0, r1, #1
 8020d46:	fb0c e303 	mla	r3, ip, r3, lr
 8020d4a:	b292      	uxth	r2, r2
 8020d4c:	b29b      	uxth	r3, r3
 8020d4e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020d52:	f102 0b01 	add.w	fp, r2, #1
 8020d56:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8020d5a:	1c59      	adds	r1, r3, #1
 8020d5c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020d60:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020d64:	0952      	lsrs	r2, r2, #5
 8020d66:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020d6a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020d6e:	4301      	orrs	r1, r0
 8020d70:	4311      	orrs	r1, r2
 8020d72:	f8a8 1000 	strh.w	r1, [r8]
 8020d76:	e738      	b.n	8020bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020d78:	f113 0b01 	adds.w	fp, r3, #1
 8020d7c:	f53f af35 	bmi.w	8020bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020d80:	45dc      	cmp	ip, fp
 8020d82:	f6ff af32 	blt.w	8020bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020d86:	f110 0b01 	adds.w	fp, r0, #1
 8020d8a:	f53f af2e 	bmi.w	8020bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020d8e:	45de      	cmp	lr, fp
 8020d90:	f6ff af2b 	blt.w	8020bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020d94:	9302      	str	r3, [sp, #8]
 8020d96:	fa0f f38e 	sxth.w	r3, lr
 8020d9a:	9a08      	ldr	r2, [sp, #32]
 8020d9c:	9301      	str	r3, [sp, #4]
 8020d9e:	fa0f f38c 	sxth.w	r3, ip
 8020da2:	9105      	str	r1, [sp, #20]
 8020da4:	4641      	mov	r1, r8
 8020da6:	9300      	str	r3, [sp, #0]
 8020da8:	4653      	mov	r3, sl
 8020daa:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020dae:	463a      	mov	r2, r7
 8020db0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020db2:	f7ff fd73 	bl	802089c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8020db6:	e718      	b.n	8020bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020db8:	1422      	asrs	r2, r4, #16
 8020dba:	9906      	ldr	r1, [sp, #24]
 8020dbc:	1433      	asrs	r3, r6, #16
 8020dbe:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020dc2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020dc6:	fb01 2303 	mla	r3, r1, r3, r2
 8020dca:	085a      	lsrs	r2, r3, #1
 8020dcc:	07d9      	lsls	r1, r3, #31
 8020dce:	5cba      	ldrb	r2, [r7, r2]
 8020dd0:	bf54      	ite	pl
 8020dd2:	f002 020f 	andpl.w	r2, r2, #15
 8020dd6:	1112      	asrmi	r2, r2, #4
 8020dd8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020ddc:	b2d2      	uxtb	r2, r2
 8020dde:	2800      	cmp	r0, #0
 8020de0:	d063      	beq.n	8020eaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8020de2:	f103 0a01 	add.w	sl, r3, #1
 8020de6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8020dea:	f01a 0f01 	tst.w	sl, #1
 8020dee:	5c79      	ldrb	r1, [r7, r1]
 8020df0:	bf0c      	ite	eq
 8020df2:	f001 010f 	andeq.w	r1, r1, #15
 8020df6:	1109      	asrne	r1, r1, #4
 8020df8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020dfc:	b2c9      	uxtb	r1, r1
 8020dfe:	910f      	str	r1, [sp, #60]	; 0x3c
 8020e00:	f1bc 0f00 	cmp.w	ip, #0
 8020e04:	d01a      	beq.n	8020e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020e06:	9908      	ldr	r1, [sp, #32]
 8020e08:	440b      	add	r3, r1
 8020e0a:	0859      	lsrs	r1, r3, #1
 8020e0c:	f013 0f01 	tst.w	r3, #1
 8020e10:	f103 0301 	add.w	r3, r3, #1
 8020e14:	5c79      	ldrb	r1, [r7, r1]
 8020e16:	bf0c      	ite	eq
 8020e18:	f001 010f 	andeq.w	r1, r1, #15
 8020e1c:	1109      	asrne	r1, r1, #4
 8020e1e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020e22:	b2c9      	uxtb	r1, r1
 8020e24:	910b      	str	r1, [sp, #44]	; 0x2c
 8020e26:	0859      	lsrs	r1, r3, #1
 8020e28:	07db      	lsls	r3, r3, #31
 8020e2a:	5c79      	ldrb	r1, [r7, r1]
 8020e2c:	bf54      	ite	pl
 8020e2e:	f001 010f 	andpl.w	r1, r1, #15
 8020e32:	1109      	asrmi	r1, r1, #4
 8020e34:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020e38:	b2c9      	uxtb	r1, r1
 8020e3a:	9110      	str	r1, [sp, #64]	; 0x40
 8020e3c:	b280      	uxth	r0, r0
 8020e3e:	fa1f fc8c 	uxth.w	ip, ip
 8020e42:	fb00 f30c 	mul.w	r3, r0, ip
 8020e46:	0100      	lsls	r0, r0, #4
 8020e48:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020e4c:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8020e50:	1ac0      	subs	r0, r0, r3
 8020e52:	fa1f fc8c 	uxth.w	ip, ip
 8020e56:	b280      	uxth	r0, r0
 8020e58:	eba1 010c 	sub.w	r1, r1, ip
 8020e5c:	fa1f fa81 	uxth.w	sl, r1
 8020e60:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8020e62:	4348      	muls	r0, r1
 8020e64:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8020e66:	fb02 020a 	mla	r2, r2, sl, r0
 8020e6a:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020e6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020e70:	fb03 c302 	mla	r3, r3, r2, ip
 8020e74:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020e78:	2bff      	cmp	r3, #255	; 0xff
 8020e7a:	d12b      	bne.n	8020ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020e7c:	4b13      	ldr	r3, [pc, #76]	; (8020ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020e7e:	681a      	ldr	r2, [r3, #0]
 8020e80:	4b13      	ldr	r3, [pc, #76]	; (8020ed0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020e82:	0951      	lsrs	r1, r2, #5
 8020e84:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020e88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020e8c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020e90:	430b      	orrs	r3, r1
 8020e92:	4313      	orrs	r3, r2
 8020e94:	f8ae 3000 	strh.w	r3, [lr]
 8020e98:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020e9a:	f10e 0e02 	add.w	lr, lr, #2
 8020e9e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020ea2:	441c      	add	r4, r3
 8020ea4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020ea6:	441e      	add	r6, r3
 8020ea8:	e6cc      	b.n	8020c44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8020eaa:	f1bc 0f00 	cmp.w	ip, #0
 8020eae:	d0c5      	beq.n	8020e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020eb0:	9908      	ldr	r1, [sp, #32]
 8020eb2:	440b      	add	r3, r1
 8020eb4:	0859      	lsrs	r1, r3, #1
 8020eb6:	07db      	lsls	r3, r3, #31
 8020eb8:	5c79      	ldrb	r1, [r7, r1]
 8020eba:	bf54      	ite	pl
 8020ebc:	f001 010f 	andpl.w	r1, r1, #15
 8020ec0:	1109      	asrmi	r1, r1, #4
 8020ec2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020ec6:	b2c9      	uxtb	r1, r1
 8020ec8:	910b      	str	r1, [sp, #44]	; 0x2c
 8020eca:	e7b7      	b.n	8020e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020ecc:	24001e84 	.word	0x24001e84
 8020ed0:	fffff800 	.word	0xfffff800
 8020ed4:	2b00      	cmp	r3, #0
 8020ed6:	d0df      	beq.n	8020e98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8020ed8:	4a21      	ldr	r2, [pc, #132]	; (8020f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020eda:	fa1f fa83 	uxth.w	sl, r3
 8020ede:	f8be c000 	ldrh.w	ip, [lr]
 8020ee2:	43db      	mvns	r3, r3
 8020ee4:	6810      	ldr	r0, [r2, #0]
 8020ee6:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020eea:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020eee:	b2db      	uxtb	r3, r3
 8020ef0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020ef4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020ef8:	fb12 f20a 	smulbb	r2, r2, sl
 8020efc:	b2c0      	uxtb	r0, r0
 8020efe:	fb1b fb0a 	smulbb	fp, fp, sl
 8020f02:	fb01 2103 	mla	r1, r1, r3, r2
 8020f06:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020f0a:	fb10 f00a 	smulbb	r0, r0, sl
 8020f0e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020f12:	b289      	uxth	r1, r1
 8020f14:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020f18:	fa5f fc8c 	uxtb.w	ip, ip
 8020f1c:	fb02 b203 	mla	r2, r2, r3, fp
 8020f20:	fb0c 0003 	mla	r0, ip, r3, r0
 8020f24:	1c4b      	adds	r3, r1, #1
 8020f26:	b292      	uxth	r2, r2
 8020f28:	b280      	uxth	r0, r0
 8020f2a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020f2e:	f100 0b01 	add.w	fp, r0, #1
 8020f32:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020f36:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020f3a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020f3e:	ea4b 0101 	orr.w	r1, fp, r1
 8020f42:	f102 0b01 	add.w	fp, r2, #1
 8020f46:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020f4a:	0952      	lsrs	r2, r2, #5
 8020f4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020f50:	4311      	orrs	r1, r2
 8020f52:	f8ae 1000 	strh.w	r1, [lr]
 8020f56:	e79f      	b.n	8020e98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8020f58:	b013      	add	sp, #76	; 0x4c
 8020f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f5e:	bf00      	nop
 8020f60:	24001e84 	.word	0x24001e84

08020f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8020f64:	b570      	push	{r4, r5, r6, lr}
 8020f66:	1208      	asrs	r0, r1, #8
 8020f68:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8020f6c:	b29e      	uxth	r6, r3
 8020f6e:	1213      	asrs	r3, r2, #8
 8020f70:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020f74:	10cc      	asrs	r4, r1, #3
 8020f76:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020f7a:	00c9      	lsls	r1, r1, #3
 8020f7c:	fb10 f006 	smulbb	r0, r0, r6
 8020f80:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020f84:	fb13 f305 	smulbb	r3, r3, r5
 8020f88:	fb14 f406 	smulbb	r4, r4, r6
 8020f8c:	4418      	add	r0, r3
 8020f8e:	10d3      	asrs	r3, r2, #3
 8020f90:	00d2      	lsls	r2, r2, #3
 8020f92:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020f96:	b280      	uxth	r0, r0
 8020f98:	b2d2      	uxtb	r2, r2
 8020f9a:	fb13 f305 	smulbb	r3, r3, r5
 8020f9e:	fb12 f205 	smulbb	r2, r2, r5
 8020fa2:	441c      	add	r4, r3
 8020fa4:	b2cb      	uxtb	r3, r1
 8020fa6:	fb13 f306 	smulbb	r3, r3, r6
 8020faa:	b2a4      	uxth	r4, r4
 8020fac:	4413      	add	r3, r2
 8020fae:	1c42      	adds	r2, r0, #1
 8020fb0:	b29b      	uxth	r3, r3
 8020fb2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020fb6:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8020fba:	1c58      	adds	r0, r3, #1
 8020fbc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020fc0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020fc4:	4310      	orrs	r0, r2
 8020fc6:	1c62      	adds	r2, r4, #1
 8020fc8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020fcc:	0964      	lsrs	r4, r4, #5
 8020fce:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020fd2:	4320      	orrs	r0, r4
 8020fd4:	bd70      	pop	{r4, r5, r6, pc}
	...

08020fd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8020fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fdc:	b08f      	sub	sp, #60	; 0x3c
 8020fde:	461c      	mov	r4, r3
 8020fe0:	460d      	mov	r5, r1
 8020fe2:	4616      	mov	r6, r2
 8020fe4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8020fe8:	9004      	str	r0, [sp, #16]
 8020fea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020fec:	2f00      	cmp	r7, #0
 8020fee:	f000 80f6 	beq.w	80211de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8020ff2:	6820      	ldr	r0, [r4, #0]
 8020ff4:	aa0a      	add	r2, sp, #40	; 0x28
 8020ff6:	6861      	ldr	r1, [r4, #4]
 8020ff8:	f04f 0802 	mov.w	r8, #2
 8020ffc:	3604      	adds	r6, #4
 8020ffe:	c203      	stmia	r2!, {r0, r1}
 8021000:	6818      	ldr	r0, [r3, #0]
 8021002:	aa0c      	add	r2, sp, #48	; 0x30
 8021004:	6859      	ldr	r1, [r3, #4]
 8021006:	c203      	stmia	r2!, {r0, r1}
 8021008:	a80a      	add	r0, sp, #40	; 0x28
 802100a:	f7f0 f9e7 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802100e:	4621      	mov	r1, r4
 8021010:	a80c      	add	r0, sp, #48	; 0x30
 8021012:	f7f0 fa0b 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021016:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802101a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802101e:	f002 0301 	and.w	r3, r2, #1
 8021022:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021026:	9306      	str	r3, [sp, #24]
 8021028:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802102c:	f003 0101 	and.w	r1, r3, #1
 8021030:	9105      	str	r1, [sp, #20]
 8021032:	9805      	ldr	r0, [sp, #20]
 8021034:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8021038:	4403      	add	r3, r0
 802103a:	fb01 2303 	mla	r3, r1, r3, r2
 802103e:	fb93 f3f8 	sdiv	r3, r3, r8
 8021042:	441d      	add	r5, r3
 8021044:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8021048:	441a      	add	r2, r3
 802104a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802104e:	4419      	add	r1, r3
 8021050:	4b64      	ldr	r3, [pc, #400]	; (80211e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8021052:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8021056:	6818      	ldr	r0, [r3, #0]
 8021058:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802105c:	6803      	ldr	r3, [r0, #0]
 802105e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021060:	4798      	blx	r3
 8021062:	4a61      	ldr	r2, [pc, #388]	; (80211e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8021064:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8021068:	2fff      	cmp	r7, #255	; 0xff
 802106a:	8813      	ldrh	r3, [r2, #0]
 802106c:	4611      	mov	r1, r2
 802106e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8021072:	fb03 fb0b 	mul.w	fp, r3, fp
 8021076:	fb03 a404 	mla	r4, r3, r4, sl
 802107a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802107e:	d06b      	beq.n	8021158 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8021080:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8021084:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8021088:	9303      	str	r3, [sp, #12]
 802108a:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802108e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021092:	9b07      	ldr	r3, [sp, #28]
 8021094:	42a3      	cmp	r3, r4
 8021096:	f240 809d 	bls.w	80211d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802109a:	9b06      	ldr	r3, [sp, #24]
 802109c:	2b00      	cmp	r3, #0
 802109e:	d039      	beq.n	8021114 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 80210a0:	782b      	ldrb	r3, [r5, #0]
 80210a2:	f105 0801 	add.w	r8, r5, #1
 80210a6:	f109 3bff 	add.w	fp, r9, #4294967295
 80210aa:	8822      	ldrh	r2, [r4, #0]
 80210ac:	f003 030f 	and.w	r3, r3, #15
 80210b0:	9804      	ldr	r0, [sp, #16]
 80210b2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80210b6:	9b03      	ldr	r3, [sp, #12]
 80210b8:	9300      	str	r3, [sp, #0]
 80210ba:	463b      	mov	r3, r7
 80210bc:	f7ff ff52 	bl	8020f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80210c0:	f824 0b02 	strh.w	r0, [r4], #2
 80210c4:	f1bb 0f01 	cmp.w	fp, #1
 80210c8:	46a2      	mov	sl, r4
 80210ca:	f104 0404 	add.w	r4, r4, #4
 80210ce:	dd24      	ble.n	802111a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 80210d0:	f898 3000 	ldrb.w	r3, [r8]
 80210d4:	f1ab 0b02 	sub.w	fp, fp, #2
 80210d8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80210dc:	091b      	lsrs	r3, r3, #4
 80210de:	9804      	ldr	r0, [sp, #16]
 80210e0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80210e4:	9b03      	ldr	r3, [sp, #12]
 80210e6:	9300      	str	r3, [sp, #0]
 80210e8:	463b      	mov	r3, r7
 80210ea:	f7ff ff3b 	bl	8020f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80210ee:	f824 0c04 	strh.w	r0, [r4, #-4]
 80210f2:	f818 3b01 	ldrb.w	r3, [r8], #1
 80210f6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80210fa:	f003 030f 	and.w	r3, r3, #15
 80210fe:	9804      	ldr	r0, [sp, #16]
 8021100:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021104:	9b03      	ldr	r3, [sp, #12]
 8021106:	9300      	str	r3, [sp, #0]
 8021108:	463b      	mov	r3, r7
 802110a:	f7ff ff2b 	bl	8020f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802110e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021112:	e7d7      	b.n	80210c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8021114:	46a8      	mov	r8, r5
 8021116:	46cb      	mov	fp, r9
 8021118:	e7d4      	b.n	80210c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 802111a:	d10e      	bne.n	802113a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 802111c:	f898 3000 	ldrb.w	r3, [r8]
 8021120:	f8ba 2000 	ldrh.w	r2, [sl]
 8021124:	091b      	lsrs	r3, r3, #4
 8021126:	9804      	ldr	r0, [sp, #16]
 8021128:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802112c:	9b03      	ldr	r3, [sp, #12]
 802112e:	9300      	str	r3, [sp, #0]
 8021130:	463b      	mov	r3, r7
 8021132:	f7ff ff17 	bl	8020f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021136:	f82a 0b02 	strh.w	r0, [sl], #2
 802113a:	9b08      	ldr	r3, [sp, #32]
 802113c:	9a05      	ldr	r2, [sp, #20]
 802113e:	881c      	ldrh	r4, [r3, #0]
 8021140:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8021144:	eba4 0409 	sub.w	r4, r4, r9
 8021148:	4413      	add	r3, r2
 802114a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802114c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8021150:	fb93 f3f2 	sdiv	r3, r3, r2
 8021154:	441d      	add	r5, r3
 8021156:	e79c      	b.n	8021092 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 8021158:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802115c:	45a3      	cmp	fp, r4
 802115e:	d939      	bls.n	80211d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8021160:	9b06      	ldr	r3, [sp, #24]
 8021162:	b1fb      	cbz	r3, 80211a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8021164:	782b      	ldrb	r3, [r5, #0]
 8021166:	1c6a      	adds	r2, r5, #1
 8021168:	f109 30ff 	add.w	r0, r9, #4294967295
 802116c:	3402      	adds	r4, #2
 802116e:	f003 030f 	and.w	r3, r3, #15
 8021172:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021176:	f824 3c02 	strh.w	r3, [r4, #-2]
 802117a:	2801      	cmp	r0, #1
 802117c:	4623      	mov	r3, r4
 802117e:	f104 0404 	add.w	r4, r4, #4
 8021182:	dd12      	ble.n	80211aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8021184:	7813      	ldrb	r3, [r2, #0]
 8021186:	3802      	subs	r0, #2
 8021188:	091b      	lsrs	r3, r3, #4
 802118a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802118e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8021192:	f812 3b01 	ldrb.w	r3, [r2], #1
 8021196:	f003 030f 	and.w	r3, r3, #15
 802119a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802119e:	f824 3c02 	strh.w	r3, [r4, #-2]
 80211a2:	e7ea      	b.n	802117a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80211a4:	462a      	mov	r2, r5
 80211a6:	4648      	mov	r0, r9
 80211a8:	e7e7      	b.n	802117a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80211aa:	d106      	bne.n	80211ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80211ac:	7812      	ldrb	r2, [r2, #0]
 80211ae:	3302      	adds	r3, #2
 80211b0:	0912      	lsrs	r2, r2, #4
 80211b2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80211b6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80211ba:	880c      	ldrh	r4, [r1, #0]
 80211bc:	9a05      	ldr	r2, [sp, #20]
 80211be:	eba4 0409 	sub.w	r4, r4, r9
 80211c2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80211c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80211ca:	4413      	add	r3, r2
 80211cc:	fb93 f3f8 	sdiv	r3, r3, r8
 80211d0:	441d      	add	r5, r3
 80211d2:	e7c3      	b.n	802115c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 80211d4:	4b03      	ldr	r3, [pc, #12]	; (80211e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80211d6:	6818      	ldr	r0, [r3, #0]
 80211d8:	6803      	ldr	r3, [r0, #0]
 80211da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80211dc:	4798      	blx	r3
 80211de:	b00f      	add	sp, #60	; 0x3c
 80211e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211e4:	24001e7c 	.word	0x24001e7c
 80211e8:	24001e76 	.word	0x24001e76

080211ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80211ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80211ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80211f2:	0a0f      	lsrs	r7, r1, #8
 80211f4:	2dff      	cmp	r5, #255	; 0xff
 80211f6:	d10c      	bne.n	8021212 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80211f8:	2bff      	cmp	r3, #255	; 0xff
 80211fa:	d10a      	bne.n	8021212 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80211fc:	0948      	lsrs	r0, r1, #5
 80211fe:	4b25      	ldr	r3, [pc, #148]	; (8021294 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8021200:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021204:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021208:	403b      	ands	r3, r7
 802120a:	4318      	orrs	r0, r3
 802120c:	4308      	orrs	r0, r1
 802120e:	b280      	uxth	r0, r0
 8021210:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021212:	fb15 f503 	smulbb	r5, r5, r3
 8021216:	1214      	asrs	r4, r2, #8
 8021218:	10d6      	asrs	r6, r2, #3
 802121a:	b2ab      	uxth	r3, r5
 802121c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8021220:	00d0      	lsls	r0, r2, #3
 8021222:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8021226:	1c5d      	adds	r5, r3, #1
 8021228:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802122c:	b2c0      	uxtb	r0, r0
 802122e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021232:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8021236:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802123a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802123e:	fa1f fc85 	uxth.w	ip, r5
 8021242:	43ed      	mvns	r5, r5
 8021244:	fb12 f20c 	smulbb	r2, r2, ip
 8021248:	b2eb      	uxtb	r3, r5
 802124a:	b2fd      	uxtb	r5, r7
 802124c:	fb04 2403 	mla	r4, r4, r3, r2
 8021250:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8021254:	fb15 f50c 	smulbb	r5, r5, ip
 8021258:	b2c8      	uxtb	r0, r1
 802125a:	b2a4      	uxth	r4, r4
 802125c:	fb10 f00c 	smulbb	r0, r0, ip
 8021260:	fb06 5503 	mla	r5, r6, r3, r5
 8021264:	fb02 0003 	mla	r0, r2, r3, r0
 8021268:	b2ad      	uxth	r5, r5
 802126a:	b283      	uxth	r3, r0
 802126c:	1c60      	adds	r0, r4, #1
 802126e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8021272:	1c58      	adds	r0, r3, #1
 8021274:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021278:	1c6b      	adds	r3, r5, #1
 802127a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802127e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021282:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021286:	096d      	lsrs	r5, r5, #5
 8021288:	4320      	orrs	r0, r4
 802128a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802128e:	4328      	orrs	r0, r5
 8021290:	e7be      	b.n	8021210 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 8021292:	bf00      	nop
 8021294:	00fff800 	.word	0x00fff800

08021298 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8021298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802129c:	461c      	mov	r4, r3
 802129e:	b08d      	sub	sp, #52	; 0x34
 80212a0:	460d      	mov	r5, r1
 80212a2:	4616      	mov	r6, r2
 80212a4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80212a6:	4680      	mov	r8, r0
 80212a8:	6861      	ldr	r1, [r4, #4]
 80212aa:	aa08      	add	r2, sp, #32
 80212ac:	6820      	ldr	r0, [r4, #0]
 80212ae:	f04f 0a02 	mov.w	sl, #2
 80212b2:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80212b6:	3604      	adds	r6, #4
 80212b8:	c203      	stmia	r2!, {r0, r1}
 80212ba:	6818      	ldr	r0, [r3, #0]
 80212bc:	aa0a      	add	r2, sp, #40	; 0x28
 80212be:	6859      	ldr	r1, [r3, #4]
 80212c0:	c203      	stmia	r2!, {r0, r1}
 80212c2:	a808      	add	r0, sp, #32
 80212c4:	f7f0 f88a 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80212c8:	4621      	mov	r1, r4
 80212ca:	a80a      	add	r0, sp, #40	; 0x28
 80212cc:	f7f0 f8ae 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80212d0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80212d4:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80212d8:	f002 0301 	and.w	r3, r2, #1
 80212dc:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80212e0:	9303      	str	r3, [sp, #12]
 80212e2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80212e6:	f003 0101 	and.w	r1, r3, #1
 80212ea:	9102      	str	r1, [sp, #8]
 80212ec:	9802      	ldr	r0, [sp, #8]
 80212ee:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80212f2:	4403      	add	r3, r0
 80212f4:	fb01 2303 	mla	r3, r1, r3, r2
 80212f8:	fb93 f3fa 	sdiv	r3, r3, sl
 80212fc:	441d      	add	r5, r3
 80212fe:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8021302:	441a      	add	r2, r3
 8021304:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8021308:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802130c:	4419      	add	r1, r3
 802130e:	4a3e      	ldr	r2, [pc, #248]	; (8021408 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8021310:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8021314:	6810      	ldr	r0, [r2, #0]
 8021316:	9205      	str	r2, [sp, #20]
 8021318:	6803      	ldr	r3, [r0, #0]
 802131a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802131c:	4798      	blx	r3
 802131e:	4b3b      	ldr	r3, [pc, #236]	; (802140c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8021320:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8021324:	8819      	ldrh	r1, [r3, #0]
 8021326:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802132a:	434f      	muls	r7, r1
 802132c:	fb01 c404 	mla	r4, r1, r4, ip
 8021330:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021334:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8021338:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802133c:	9204      	str	r2, [sp, #16]
 802133e:	9b04      	ldr	r3, [sp, #16]
 8021340:	429c      	cmp	r4, r3
 8021342:	d258      	bcs.n	80213f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8021344:	9b03      	ldr	r3, [sp, #12]
 8021346:	2b00      	cmp	r3, #0
 8021348:	d034      	beq.n	80213b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802134a:	782b      	ldrb	r3, [r5, #0]
 802134c:	1c6f      	adds	r7, r5, #1
 802134e:	f003 030f 	and.w	r3, r3, #15
 8021352:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021356:	0e0b      	lsrs	r3, r1, #24
 8021358:	d006      	beq.n	8021368 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802135a:	8822      	ldrh	r2, [r4, #0]
 802135c:	4640      	mov	r0, r8
 802135e:	9300      	str	r3, [sp, #0]
 8021360:	464b      	mov	r3, r9
 8021362:	f7ff ff43 	bl	80211ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021366:	8020      	strh	r0, [r4, #0]
 8021368:	3402      	adds	r4, #2
 802136a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802136e:	f1ba 0f01 	cmp.w	sl, #1
 8021372:	dd22      	ble.n	80213ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8021374:	783b      	ldrb	r3, [r7, #0]
 8021376:	091b      	lsrs	r3, r3, #4
 8021378:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802137c:	0e0b      	lsrs	r3, r1, #24
 802137e:	d006      	beq.n	802138e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8021380:	8822      	ldrh	r2, [r4, #0]
 8021382:	4640      	mov	r0, r8
 8021384:	9300      	str	r3, [sp, #0]
 8021386:	464b      	mov	r3, r9
 8021388:	f7ff ff30 	bl	80211ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802138c:	8020      	strh	r0, [r4, #0]
 802138e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8021392:	f003 030f 	and.w	r3, r3, #15
 8021396:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802139a:	0e0b      	lsrs	r3, r1, #24
 802139c:	d006      	beq.n	80213ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802139e:	8862      	ldrh	r2, [r4, #2]
 80213a0:	4640      	mov	r0, r8
 80213a2:	9300      	str	r3, [sp, #0]
 80213a4:	464b      	mov	r3, r9
 80213a6:	f7ff ff21 	bl	80211ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80213aa:	8060      	strh	r0, [r4, #2]
 80213ac:	3404      	adds	r4, #4
 80213ae:	f1aa 0a02 	sub.w	sl, sl, #2
 80213b2:	e7dc      	b.n	802136e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80213b4:	462f      	mov	r7, r5
 80213b6:	46da      	mov	sl, fp
 80213b8:	e7d9      	b.n	802136e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80213ba:	d10d      	bne.n	80213d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80213bc:	783b      	ldrb	r3, [r7, #0]
 80213be:	091b      	lsrs	r3, r3, #4
 80213c0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80213c4:	0e0b      	lsrs	r3, r1, #24
 80213c6:	d006      	beq.n	80213d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80213c8:	8822      	ldrh	r2, [r4, #0]
 80213ca:	4640      	mov	r0, r8
 80213cc:	9300      	str	r3, [sp, #0]
 80213ce:	464b      	mov	r3, r9
 80213d0:	f7ff ff0c 	bl	80211ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80213d4:	8020      	strh	r0, [r4, #0]
 80213d6:	3402      	adds	r4, #2
 80213d8:	9b06      	ldr	r3, [sp, #24]
 80213da:	9a02      	ldr	r2, [sp, #8]
 80213dc:	881b      	ldrh	r3, [r3, #0]
 80213de:	eba3 030b 	sub.w	r3, r3, fp
 80213e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80213e6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80213ea:	4413      	add	r3, r2
 80213ec:	9a07      	ldr	r2, [sp, #28]
 80213ee:	fb93 f3f2 	sdiv	r3, r3, r2
 80213f2:	441d      	add	r5, r3
 80213f4:	e7a3      	b.n	802133e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80213f6:	9b05      	ldr	r3, [sp, #20]
 80213f8:	6818      	ldr	r0, [r3, #0]
 80213fa:	6803      	ldr	r3, [r0, #0]
 80213fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80213fe:	4798      	blx	r3
 8021400:	b00d      	add	sp, #52	; 0x34
 8021402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021406:	bf00      	nop
 8021408:	24001e7c 	.word	0x24001e7c
 802140c:	24001e76 	.word	0x24001e76

08021410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8021410:	b570      	push	{r4, r5, r6, lr}
 8021412:	1214      	asrs	r4, r2, #8
 8021414:	788d      	ldrb	r5, [r1, #2]
 8021416:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802141a:	10d0      	asrs	r0, r2, #3
 802141c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8021420:	00d2      	lsls	r2, r2, #3
 8021422:	fb15 f503 	smulbb	r5, r5, r3
 8021426:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802142a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802142e:	b2d2      	uxtb	r2, r2
 8021430:	fb04 5506 	mla	r5, r4, r6, r5
 8021434:	784c      	ldrb	r4, [r1, #1]
 8021436:	7809      	ldrb	r1, [r1, #0]
 8021438:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802143c:	fb14 f403 	smulbb	r4, r4, r3
 8021440:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8021444:	fb11 f303 	smulbb	r3, r1, r3
 8021448:	b2ad      	uxth	r5, r5
 802144a:	fb00 4406 	mla	r4, r0, r6, r4
 802144e:	fb02 3306 	mla	r3, r2, r6, r3
 8021452:	1c68      	adds	r0, r5, #1
 8021454:	b2a4      	uxth	r4, r4
 8021456:	b29b      	uxth	r3, r3
 8021458:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802145c:	1c62      	adds	r2, r4, #1
 802145e:	1c58      	adds	r0, r3, #1
 8021460:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021464:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021468:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802146c:	0964      	lsrs	r4, r4, #5
 802146e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021472:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021476:	4328      	orrs	r0, r5
 8021478:	4320      	orrs	r0, r4
 802147a:	bd70      	pop	{r4, r5, r6, pc}

0802147c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802147c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021480:	b08f      	sub	sp, #60	; 0x3c
 8021482:	461c      	mov	r4, r3
 8021484:	4682      	mov	sl, r0
 8021486:	460e      	mov	r6, r1
 8021488:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802148c:	4615      	mov	r5, r2
 802148e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021490:	2f00      	cmp	r7, #0
 8021492:	f000 8141 	beq.w	8021718 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 8021496:	6820      	ldr	r0, [r4, #0]
 8021498:	aa0a      	add	r2, sp, #40	; 0x28
 802149a:	6861      	ldr	r1, [r4, #4]
 802149c:	f04f 0802 	mov.w	r8, #2
 80214a0:	3504      	adds	r5, #4
 80214a2:	c203      	stmia	r2!, {r0, r1}
 80214a4:	6818      	ldr	r0, [r3, #0]
 80214a6:	aa0c      	add	r2, sp, #48	; 0x30
 80214a8:	6859      	ldr	r1, [r3, #4]
 80214aa:	c203      	stmia	r2!, {r0, r1}
 80214ac:	a80a      	add	r0, sp, #40	; 0x28
 80214ae:	f7ef ff95 	bl	80113dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80214b2:	4621      	mov	r1, r4
 80214b4:	a80c      	add	r0, sp, #48	; 0x30
 80214b6:	f7ef ffb9 	bl	801142c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80214ba:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80214be:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80214c2:	f002 0301 	and.w	r3, r2, #1
 80214c6:	9306      	str	r3, [sp, #24]
 80214c8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80214cc:	f003 0101 	and.w	r1, r3, #1
 80214d0:	9105      	str	r1, [sp, #20]
 80214d2:	9805      	ldr	r0, [sp, #20]
 80214d4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80214d8:	4403      	add	r3, r0
 80214da:	fb01 2303 	mla	r3, r1, r3, r2
 80214de:	fb93 f3f8 	sdiv	r3, r3, r8
 80214e2:	441e      	add	r6, r3
 80214e4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80214e8:	441a      	add	r2, r3
 80214ea:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80214ee:	4419      	add	r1, r3
 80214f0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80214f4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80214f8:	9303      	str	r3, [sp, #12]
 80214fa:	4b89      	ldr	r3, [pc, #548]	; (8021720 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80214fc:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8021500:	6818      	ldr	r0, [r3, #0]
 8021502:	6803      	ldr	r3, [r0, #0]
 8021504:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021506:	4798      	blx	r3
 8021508:	4a86      	ldr	r2, [pc, #536]	; (8021724 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802150a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802150e:	2fff      	cmp	r7, #255	; 0xff
 8021510:	8813      	ldrh	r3, [r2, #0]
 8021512:	4694      	mov	ip, r2
 8021514:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8021518:	fb03 9404 	mla	r4, r3, r4, r9
 802151c:	fb03 f30b 	mul.w	r3, r3, fp
 8021520:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021524:	d071      	beq.n	802160a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 8021526:	43f9      	mvns	r1, r7
 8021528:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802152c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8021530:	b2c9      	uxtb	r1, r1
 8021532:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021536:	9104      	str	r1, [sp, #16]
 8021538:	9b07      	ldr	r3, [sp, #28]
 802153a:	42a3      	cmp	r3, r4
 802153c:	f240 80e7 	bls.w	802170e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8021540:	9b06      	ldr	r3, [sp, #24]
 8021542:	2b00      	cmp	r3, #0
 8021544:	d03d      	beq.n	80215c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8021546:	7831      	ldrb	r1, [r6, #0]
 8021548:	4650      	mov	r0, sl
 802154a:	9b04      	ldr	r3, [sp, #16]
 802154c:	f106 0801 	add.w	r8, r6, #1
 8021550:	f001 010f 	and.w	r1, r1, #15
 8021554:	8822      	ldrh	r2, [r4, #0]
 8021556:	9300      	str	r3, [sp, #0]
 8021558:	463b      	mov	r3, r7
 802155a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802155e:	4429      	add	r1, r5
 8021560:	f7ff ff56 	bl	8021410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021564:	9b03      	ldr	r3, [sp, #12]
 8021566:	f824 0b02 	strh.w	r0, [r4], #2
 802156a:	f103 3bff 	add.w	fp, r3, #4294967295
 802156e:	f1bb 0f01 	cmp.w	fp, #1
 8021572:	46a1      	mov	r9, r4
 8021574:	f104 0404 	add.w	r4, r4, #4
 8021578:	dd27      	ble.n	80215ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 802157a:	f898 1000 	ldrb.w	r1, [r8]
 802157e:	4650      	mov	r0, sl
 8021580:	9b04      	ldr	r3, [sp, #16]
 8021582:	f1ab 0b02 	sub.w	fp, fp, #2
 8021586:	0909      	lsrs	r1, r1, #4
 8021588:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802158c:	9300      	str	r3, [sp, #0]
 802158e:	463b      	mov	r3, r7
 8021590:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021594:	4429      	add	r1, r5
 8021596:	f7ff ff3b 	bl	8021410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802159a:	f824 0c04 	strh.w	r0, [r4, #-4]
 802159e:	f818 1b01 	ldrb.w	r1, [r8], #1
 80215a2:	4650      	mov	r0, sl
 80215a4:	9b04      	ldr	r3, [sp, #16]
 80215a6:	f001 010f 	and.w	r1, r1, #15
 80215aa:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80215ae:	9300      	str	r3, [sp, #0]
 80215b0:	463b      	mov	r3, r7
 80215b2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80215b6:	4429      	add	r1, r5
 80215b8:	f7ff ff2a 	bl	8021410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80215bc:	f824 0c02 	strh.w	r0, [r4, #-2]
 80215c0:	e7d5      	b.n	802156e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80215c2:	46b0      	mov	r8, r6
 80215c4:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80215c8:	e7d1      	b.n	802156e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80215ca:	d10f      	bne.n	80215ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 80215cc:	f898 1000 	ldrb.w	r1, [r8]
 80215d0:	4650      	mov	r0, sl
 80215d2:	9b04      	ldr	r3, [sp, #16]
 80215d4:	0909      	lsrs	r1, r1, #4
 80215d6:	f8b9 2000 	ldrh.w	r2, [r9]
 80215da:	9300      	str	r3, [sp, #0]
 80215dc:	463b      	mov	r3, r7
 80215de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80215e2:	4429      	add	r1, r5
 80215e4:	f7ff ff14 	bl	8021410 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80215e8:	f829 0b02 	strh.w	r0, [r9], #2
 80215ec:	9b08      	ldr	r3, [sp, #32]
 80215ee:	9a05      	ldr	r2, [sp, #20]
 80215f0:	881c      	ldrh	r4, [r3, #0]
 80215f2:	9b03      	ldr	r3, [sp, #12]
 80215f4:	1ae4      	subs	r4, r4, r3
 80215f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80215fa:	4413      	add	r3, r2
 80215fc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80215fe:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021602:	fb93 f3f2 	sdiv	r3, r3, r2
 8021606:	441e      	add	r6, r3
 8021608:	e796      	b.n	8021538 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 802160a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802160e:	4f46      	ldr	r7, [pc, #280]	; (8021728 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8021610:	42a3      	cmp	r3, r4
 8021612:	d97c      	bls.n	802170e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8021614:	9a06      	ldr	r2, [sp, #24]
 8021616:	2a00      	cmp	r2, #0
 8021618:	d054      	beq.n	80216c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 802161a:	7830      	ldrb	r0, [r6, #0]
 802161c:	1c71      	adds	r1, r6, #1
 802161e:	f000 000f 	and.w	r0, r0, #15
 8021622:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021626:	eb05 0e00 	add.w	lr, r5, r0
 802162a:	5c28      	ldrb	r0, [r5, r0]
 802162c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8021630:	f89e e001 	ldrb.w	lr, [lr, #1]
 8021634:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8021638:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802163c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021640:	ea42 020e 	orr.w	r2, r2, lr
 8021644:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8021648:	f824 2b02 	strh.w	r2, [r4], #2
 802164c:	9a03      	ldr	r2, [sp, #12]
 802164e:	f102 3eff 	add.w	lr, r2, #4294967295
 8021652:	f1be 0f01 	cmp.w	lr, #1
 8021656:	4620      	mov	r0, r4
 8021658:	f104 0404 	add.w	r4, r4, #4
 802165c:	dd36      	ble.n	80216cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 802165e:	7808      	ldrb	r0, [r1, #0]
 8021660:	f1ae 0e02 	sub.w	lr, lr, #2
 8021664:	0900      	lsrs	r0, r0, #4
 8021666:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802166a:	eb05 0a00 	add.w	sl, r5, r0
 802166e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021672:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8021676:	00d2      	lsls	r2, r2, #3
 8021678:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802167c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021680:	ea49 0202 	orr.w	r2, r9, r2
 8021684:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021688:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802168c:	f824 2c04 	strh.w	r2, [r4, #-4]
 8021690:	f811 0b01 	ldrb.w	r0, [r1], #1
 8021694:	f000 000f 	and.w	r0, r0, #15
 8021698:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802169c:	eb05 0a00 	add.w	sl, r5, r0
 80216a0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80216a4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80216a8:	00d2      	lsls	r2, r2, #3
 80216aa:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80216ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80216b2:	ea49 0202 	orr.w	r2, r9, r2
 80216b6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80216ba:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80216be:	f824 2c02 	strh.w	r2, [r4, #-2]
 80216c2:	e7c6      	b.n	8021652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80216c4:	4631      	mov	r1, r6
 80216c6:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80216ca:	e7c2      	b.n	8021652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80216cc:	d111      	bne.n	80216f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 80216ce:	7809      	ldrb	r1, [r1, #0]
 80216d0:	0909      	lsrs	r1, r1, #4
 80216d2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80216d6:	186c      	adds	r4, r5, r1
 80216d8:	5c69      	ldrb	r1, [r5, r1]
 80216da:	78a2      	ldrb	r2, [r4, #2]
 80216dc:	7864      	ldrb	r4, [r4, #1]
 80216de:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80216e2:	00e4      	lsls	r4, r4, #3
 80216e4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80216e8:	4322      	orrs	r2, r4
 80216ea:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80216ee:	f820 2b02 	strh.w	r2, [r0], #2
 80216f2:	9a03      	ldr	r2, [sp, #12]
 80216f4:	f8bc 4000 	ldrh.w	r4, [ip]
 80216f8:	9905      	ldr	r1, [sp, #20]
 80216fa:	1aa4      	subs	r4, r4, r2
 80216fc:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8021700:	440a      	add	r2, r1
 8021702:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021706:	fb92 f2f8 	sdiv	r2, r2, r8
 802170a:	4416      	add	r6, r2
 802170c:	e780      	b.n	8021610 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 802170e:	4b04      	ldr	r3, [pc, #16]	; (8021720 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021710:	6818      	ldr	r0, [r3, #0]
 8021712:	6803      	ldr	r3, [r0, #0]
 8021714:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021716:	4798      	blx	r3
 8021718:	b00f      	add	sp, #60	; 0x3c
 802171a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802171e:	bf00      	nop
 8021720:	24001e7c 	.word	0x24001e7c
 8021724:	24001e76 	.word	0x24001e76
 8021728:	fffff800 	.word	0xfffff800

0802172c <CRC_Lock>:
 802172c:	4a20      	ldr	r2, [pc, #128]	; (80217b0 <CRC_Lock+0x84>)
 802172e:	b530      	push	{r4, r5, lr}
 8021730:	6813      	ldr	r3, [r2, #0]
 8021732:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8021736:	f24c 2540 	movw	r5, #49728	; 0xc240
 802173a:	f023 0301 	bic.w	r3, r3, #1
 802173e:	6013      	str	r3, [r2, #0]
 8021740:	4b1c      	ldr	r3, [pc, #112]	; (80217b4 <CRC_Lock+0x88>)
 8021742:	681a      	ldr	r2, [r3, #0]
 8021744:	4022      	ands	r2, r4
 8021746:	42aa      	cmp	r2, r5
 8021748:	d005      	beq.n	8021756 <CRC_Lock+0x2a>
 802174a:	681b      	ldr	r3, [r3, #0]
 802174c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8021750:	4023      	ands	r3, r4
 8021752:	4293      	cmp	r3, r2
 8021754:	d124      	bne.n	80217a0 <CRC_Lock+0x74>
 8021756:	4b18      	ldr	r3, [pc, #96]	; (80217b8 <CRC_Lock+0x8c>)
 8021758:	681b      	ldr	r3, [r3, #0]
 802175a:	bb0b      	cbnz	r3, 80217a0 <CRC_Lock+0x74>
 802175c:	4b17      	ldr	r3, [pc, #92]	; (80217bc <CRC_Lock+0x90>)
 802175e:	681a      	ldr	r2, [r3, #0]
 8021760:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021764:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8021768:	d00d      	beq.n	8021786 <CRC_Lock+0x5a>
 802176a:	681a      	ldr	r2, [r3, #0]
 802176c:	f240 4483 	movw	r4, #1155	; 0x483
 8021770:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021774:	42a2      	cmp	r2, r4
 8021776:	d006      	beq.n	8021786 <CRC_Lock+0x5a>
 8021778:	681b      	ldr	r3, [r3, #0]
 802177a:	f240 4285 	movw	r2, #1157	; 0x485
 802177e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8021782:	4293      	cmp	r3, r2
 8021784:	d10c      	bne.n	80217a0 <CRC_Lock+0x74>
 8021786:	4b0e      	ldr	r3, [pc, #56]	; (80217c0 <CRC_Lock+0x94>)
 8021788:	2201      	movs	r2, #1
 802178a:	601a      	str	r2, [r3, #0]
 802178c:	681a      	ldr	r2, [r3, #0]
 802178e:	2a00      	cmp	r2, #0
 8021790:	d1fc      	bne.n	802178c <CRC_Lock+0x60>
 8021792:	4b0c      	ldr	r3, [pc, #48]	; (80217c4 <CRC_Lock+0x98>)
 8021794:	6018      	str	r0, [r3, #0]
 8021796:	6818      	ldr	r0, [r3, #0]
 8021798:	1a43      	subs	r3, r0, r1
 802179a:	4258      	negs	r0, r3
 802179c:	4158      	adcs	r0, r3
 802179e:	bd30      	pop	{r4, r5, pc}
 80217a0:	4b09      	ldr	r3, [pc, #36]	; (80217c8 <CRC_Lock+0x9c>)
 80217a2:	2201      	movs	r2, #1
 80217a4:	601a      	str	r2, [r3, #0]
 80217a6:	681a      	ldr	r2, [r3, #0]
 80217a8:	2a00      	cmp	r2, #0
 80217aa:	d1fc      	bne.n	80217a6 <CRC_Lock+0x7a>
 80217ac:	4b07      	ldr	r3, [pc, #28]	; (80217cc <CRC_Lock+0xa0>)
 80217ae:	e7f1      	b.n	8021794 <CRC_Lock+0x68>
 80217b0:	e0002000 	.word	0xe0002000
 80217b4:	e000ed00 	.word	0xe000ed00
 80217b8:	e0042000 	.word	0xe0042000
 80217bc:	5c001000 	.word	0x5c001000
 80217c0:	58024c08 	.word	0x58024c08
 80217c4:	58024c00 	.word	0x58024c00
 80217c8:	40023008 	.word	0x40023008
 80217cc:	40023000 	.word	0x40023000

080217d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80217d0:	6101      	str	r1, [r0, #16]
 80217d2:	4770      	bx	lr

080217d4 <_ZN8touchgfx8Gestures4tickEv>:
 80217d4:	7b83      	ldrb	r3, [r0, #14]
 80217d6:	b14b      	cbz	r3, 80217ec <_ZN8touchgfx8Gestures4tickEv+0x18>
 80217d8:	8903      	ldrh	r3, [r0, #8]
 80217da:	3301      	adds	r3, #1
 80217dc:	b29b      	uxth	r3, r3
 80217de:	2b07      	cmp	r3, #7
 80217e0:	8103      	strh	r3, [r0, #8]
 80217e2:	bf81      	itttt	hi
 80217e4:	2300      	movhi	r3, #0
 80217e6:	8143      	strhhi	r3, [r0, #10]
 80217e8:	8183      	strhhi	r3, [r0, #12]
 80217ea:	7383      	strbhi	r3, [r0, #14]
 80217ec:	4770      	bx	lr
	...

080217f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80217f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80217f4:	4698      	mov	r8, r3
 80217f6:	8883      	ldrh	r3, [r0, #4]
 80217f8:	4604      	mov	r4, r0
 80217fa:	4617      	mov	r7, r2
 80217fc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8021800:	eba8 0303 	sub.w	r3, r8, r3
 8021804:	4a19      	ldr	r2, [pc, #100]	; (802186c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8021806:	460e      	mov	r6, r1
 8021808:	b21b      	sxth	r3, r3
 802180a:	88c1      	ldrh	r1, [r0, #6]
 802180c:	9200      	str	r2, [sp, #0]
 802180e:	2000      	movs	r0, #0
 8021810:	2b00      	cmp	r3, #0
 8021812:	8aa2      	ldrh	r2, [r4, #20]
 8021814:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8021818:	bfb8      	it	lt
 802181a:	425b      	neglt	r3, r3
 802181c:	f88d 0004 	strb.w	r0, [sp, #4]
 8021820:	f8ad 1008 	strh.w	r1, [sp, #8]
 8021824:	b21b      	sxth	r3, r3
 8021826:	f8ad 800a 	strh.w	r8, [sp, #10]
 802182a:	f8ad 500c 	strh.w	r5, [sp, #12]
 802182e:	4293      	cmp	r3, r2
 8021830:	dc07      	bgt.n	8021842 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8021832:	1a69      	subs	r1, r5, r1
 8021834:	b209      	sxth	r1, r1
 8021836:	2900      	cmp	r1, #0
 8021838:	bfb8      	it	lt
 802183a:	4249      	neglt	r1, r1
 802183c:	b209      	sxth	r1, r1
 802183e:	428a      	cmp	r2, r1
 8021840:	da10      	bge.n	8021864 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8021842:	6920      	ldr	r0, [r4, #16]
 8021844:	4669      	mov	r1, sp
 8021846:	eba8 0606 	sub.w	r6, r8, r6
 802184a:	1bef      	subs	r7, r5, r7
 802184c:	6803      	ldr	r3, [r0, #0]
 802184e:	685b      	ldr	r3, [r3, #4]
 8021850:	4798      	blx	r3
 8021852:	2300      	movs	r3, #0
 8021854:	2001      	movs	r0, #1
 8021856:	8166      	strh	r6, [r4, #10]
 8021858:	8123      	strh	r3, [r4, #8]
 802185a:	81a7      	strh	r7, [r4, #12]
 802185c:	f8a4 8004 	strh.w	r8, [r4, #4]
 8021860:	80e5      	strh	r5, [r4, #6]
 8021862:	73a0      	strb	r0, [r4, #14]
 8021864:	b004      	add	sp, #16
 8021866:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802186a:	bf00      	nop
 802186c:	080245ac 	.word	0x080245ac

08021870 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8021870:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021872:	461e      	mov	r6, r3
 8021874:	1e4b      	subs	r3, r1, #1
 8021876:	b085      	sub	sp, #20
 8021878:	4604      	mov	r4, r0
 802187a:	2b01      	cmp	r3, #1
 802187c:	460d      	mov	r5, r1
 802187e:	4617      	mov	r7, r2
 8021880:	d84b      	bhi.n	802191a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8021882:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8021886:	1cd3      	adds	r3, r2, #3
 8021888:	b29b      	uxth	r3, r3
 802188a:	2b06      	cmp	r3, #6
 802188c:	d916      	bls.n	80218bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802188e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8021930 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021892:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021896:	f8cd c004 	str.w	ip, [sp, #4]
 802189a:	f04f 0c00 	mov.w	ip, #0
 802189e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80218a2:	6900      	ldr	r0, [r0, #16]
 80218a4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80218a8:	a901      	add	r1, sp, #4
 80218aa:	f88d c008 	strb.w	ip, [sp, #8]
 80218ae:	f8ad 200a 	strh.w	r2, [sp, #10]
 80218b2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80218b6:	6803      	ldr	r3, [r0, #0]
 80218b8:	689b      	ldr	r3, [r3, #8]
 80218ba:	4798      	blx	r3
 80218bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80218c0:	1cd3      	adds	r3, r2, #3
 80218c2:	b29b      	uxth	r3, r3
 80218c4:	2b06      	cmp	r3, #6
 80218c6:	d916      	bls.n	80218f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80218c8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8021930 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80218cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80218d0:	f8cd c004 	str.w	ip, [sp, #4]
 80218d4:	f04f 0c01 	mov.w	ip, #1
 80218d8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80218dc:	6920      	ldr	r0, [r4, #16]
 80218de:	f8ad 100c 	strh.w	r1, [sp, #12]
 80218e2:	a901      	add	r1, sp, #4
 80218e4:	f88d c008 	strb.w	ip, [sp, #8]
 80218e8:	f8ad 200a 	strh.w	r2, [sp, #10]
 80218ec:	f8ad 300e 	strh.w	r3, [sp, #14]
 80218f0:	6803      	ldr	r3, [r0, #0]
 80218f2:	689b      	ldr	r3, [r3, #8]
 80218f4:	4798      	blx	r3
 80218f6:	4b0d      	ldr	r3, [pc, #52]	; (802192c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80218f8:	a901      	add	r1, sp, #4
 80218fa:	6920      	ldr	r0, [r4, #16]
 80218fc:	9301      	str	r3, [sp, #4]
 80218fe:	2300      	movs	r3, #0
 8021900:	f88d 5008 	strb.w	r5, [sp, #8]
 8021904:	f8ad 700a 	strh.w	r7, [sp, #10]
 8021908:	f8ad 600c 	strh.w	r6, [sp, #12]
 802190c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021910:	6803      	ldr	r3, [r0, #0]
 8021912:	681b      	ldr	r3, [r3, #0]
 8021914:	4798      	blx	r3
 8021916:	b005      	add	sp, #20
 8021918:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802191a:	2900      	cmp	r1, #0
 802191c:	d1eb      	bne.n	80218f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802191e:	80a2      	strh	r2, [r4, #4]
 8021920:	80c6      	strh	r6, [r0, #6]
 8021922:	60a1      	str	r1, [r4, #8]
 8021924:	81a1      	strh	r1, [r4, #12]
 8021926:	73a1      	strb	r1, [r4, #14]
 8021928:	e7e5      	b.n	80218f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802192a:	bf00      	nop
 802192c:	08024598 	.word	0x08024598
 8021930:	080245c0 	.word	0x080245c0

08021934 <__aeabi_atexit>:
 8021934:	460b      	mov	r3, r1
 8021936:	4601      	mov	r1, r0
 8021938:	4618      	mov	r0, r3
 802193a:	f000 b90f 	b.w	8021b5c <__cxa_atexit>

0802193e <_ZdlPvj>:
 802193e:	f000 b812 	b.w	8021966 <_ZdlPv>

08021942 <__cxa_guard_acquire>:
 8021942:	6803      	ldr	r3, [r0, #0]
 8021944:	07db      	lsls	r3, r3, #31
 8021946:	d406      	bmi.n	8021956 <__cxa_guard_acquire+0x14>
 8021948:	7843      	ldrb	r3, [r0, #1]
 802194a:	b103      	cbz	r3, 802194e <__cxa_guard_acquire+0xc>
 802194c:	deff      	udf	#255	; 0xff
 802194e:	2301      	movs	r3, #1
 8021950:	7043      	strb	r3, [r0, #1]
 8021952:	4618      	mov	r0, r3
 8021954:	4770      	bx	lr
 8021956:	2000      	movs	r0, #0
 8021958:	4770      	bx	lr

0802195a <__cxa_guard_release>:
 802195a:	2301      	movs	r3, #1
 802195c:	6003      	str	r3, [r0, #0]
 802195e:	4770      	bx	lr

08021960 <__cxa_pure_virtual>:
 8021960:	b508      	push	{r3, lr}
 8021962:	f000 f80f 	bl	8021984 <_ZSt9terminatev>

08021966 <_ZdlPv>:
 8021966:	f000 b845 	b.w	80219f4 <free>

0802196a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802196a:	b508      	push	{r3, lr}
 802196c:	4780      	blx	r0
 802196e:	f000 f80e 	bl	802198e <abort>
	...

08021974 <_ZSt13get_terminatev>:
 8021974:	4b02      	ldr	r3, [pc, #8]	; (8021980 <_ZSt13get_terminatev+0xc>)
 8021976:	6818      	ldr	r0, [r3, #0]
 8021978:	f3bf 8f5b 	dmb	ish
 802197c:	4770      	bx	lr
 802197e:	bf00      	nop
 8021980:	24000094 	.word	0x24000094

08021984 <_ZSt9terminatev>:
 8021984:	b508      	push	{r3, lr}
 8021986:	f7ff fff5 	bl	8021974 <_ZSt13get_terminatev>
 802198a:	f7ff ffee 	bl	802196a <_ZN10__cxxabiv111__terminateEPFvvE>

0802198e <abort>:
 802198e:	b508      	push	{r3, lr}
 8021990:	2006      	movs	r0, #6
 8021992:	f000 fa39 	bl	8021e08 <raise>
 8021996:	2001      	movs	r0, #1
 8021998:	f7df fccc 	bl	8001334 <_exit>

0802199c <__assert_func>:
 802199c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802199e:	4614      	mov	r4, r2
 80219a0:	461a      	mov	r2, r3
 80219a2:	4b09      	ldr	r3, [pc, #36]	; (80219c8 <__assert_func+0x2c>)
 80219a4:	681b      	ldr	r3, [r3, #0]
 80219a6:	4605      	mov	r5, r0
 80219a8:	68d8      	ldr	r0, [r3, #12]
 80219aa:	b14c      	cbz	r4, 80219c0 <__assert_func+0x24>
 80219ac:	4b07      	ldr	r3, [pc, #28]	; (80219cc <__assert_func+0x30>)
 80219ae:	9100      	str	r1, [sp, #0]
 80219b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80219b4:	4906      	ldr	r1, [pc, #24]	; (80219d0 <__assert_func+0x34>)
 80219b6:	462b      	mov	r3, r5
 80219b8:	f000 f982 	bl	8021cc0 <fiprintf>
 80219bc:	f7ff ffe7 	bl	802198e <abort>
 80219c0:	4b04      	ldr	r3, [pc, #16]	; (80219d4 <__assert_func+0x38>)
 80219c2:	461c      	mov	r4, r3
 80219c4:	e7f3      	b.n	80219ae <__assert_func+0x12>
 80219c6:	bf00      	nop
 80219c8:	240000f0 	.word	0x240000f0
 80219cc:	080248dc 	.word	0x080248dc
 80219d0:	080248e9 	.word	0x080248e9
 80219d4:	08024917 	.word	0x08024917

080219d8 <atexit>:
 80219d8:	2300      	movs	r3, #0
 80219da:	4601      	mov	r1, r0
 80219dc:	461a      	mov	r2, r3
 80219de:	4618      	mov	r0, r3
 80219e0:	f000 bac0 	b.w	8021f64 <__register_exitproc>

080219e4 <malloc>:
 80219e4:	4b02      	ldr	r3, [pc, #8]	; (80219f0 <malloc+0xc>)
 80219e6:	4601      	mov	r1, r0
 80219e8:	6818      	ldr	r0, [r3, #0]
 80219ea:	f000 b82b 	b.w	8021a44 <_malloc_r>
 80219ee:	bf00      	nop
 80219f0:	240000f0 	.word	0x240000f0

080219f4 <free>:
 80219f4:	4b02      	ldr	r3, [pc, #8]	; (8021a00 <free+0xc>)
 80219f6:	4601      	mov	r1, r0
 80219f8:	6818      	ldr	r0, [r3, #0]
 80219fa:	f000 bb11 	b.w	8022020 <_free_r>
 80219fe:	bf00      	nop
 8021a00:	240000f0 	.word	0x240000f0

08021a04 <sbrk_aligned>:
 8021a04:	b570      	push	{r4, r5, r6, lr}
 8021a06:	4e0e      	ldr	r6, [pc, #56]	; (8021a40 <sbrk_aligned+0x3c>)
 8021a08:	460c      	mov	r4, r1
 8021a0a:	6831      	ldr	r1, [r6, #0]
 8021a0c:	4605      	mov	r5, r0
 8021a0e:	b911      	cbnz	r1, 8021a16 <sbrk_aligned+0x12>
 8021a10:	f000 fa4a 	bl	8021ea8 <_sbrk_r>
 8021a14:	6030      	str	r0, [r6, #0]
 8021a16:	4621      	mov	r1, r4
 8021a18:	4628      	mov	r0, r5
 8021a1a:	f000 fa45 	bl	8021ea8 <_sbrk_r>
 8021a1e:	1c43      	adds	r3, r0, #1
 8021a20:	d00a      	beq.n	8021a38 <sbrk_aligned+0x34>
 8021a22:	1cc4      	adds	r4, r0, #3
 8021a24:	f024 0403 	bic.w	r4, r4, #3
 8021a28:	42a0      	cmp	r0, r4
 8021a2a:	d007      	beq.n	8021a3c <sbrk_aligned+0x38>
 8021a2c:	1a21      	subs	r1, r4, r0
 8021a2e:	4628      	mov	r0, r5
 8021a30:	f000 fa3a 	bl	8021ea8 <_sbrk_r>
 8021a34:	3001      	adds	r0, #1
 8021a36:	d101      	bne.n	8021a3c <sbrk_aligned+0x38>
 8021a38:	f04f 34ff 	mov.w	r4, #4294967295
 8021a3c:	4620      	mov	r0, r4
 8021a3e:	bd70      	pop	{r4, r5, r6, pc}
 8021a40:	240027cc 	.word	0x240027cc

08021a44 <_malloc_r>:
 8021a44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021a48:	1ccd      	adds	r5, r1, #3
 8021a4a:	f025 0503 	bic.w	r5, r5, #3
 8021a4e:	3508      	adds	r5, #8
 8021a50:	2d0c      	cmp	r5, #12
 8021a52:	bf38      	it	cc
 8021a54:	250c      	movcc	r5, #12
 8021a56:	2d00      	cmp	r5, #0
 8021a58:	4607      	mov	r7, r0
 8021a5a:	db01      	blt.n	8021a60 <_malloc_r+0x1c>
 8021a5c:	42a9      	cmp	r1, r5
 8021a5e:	d905      	bls.n	8021a6c <_malloc_r+0x28>
 8021a60:	230c      	movs	r3, #12
 8021a62:	603b      	str	r3, [r7, #0]
 8021a64:	2600      	movs	r6, #0
 8021a66:	4630      	mov	r0, r6
 8021a68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021a6c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8021b40 <_malloc_r+0xfc>
 8021a70:	f000 f868 	bl	8021b44 <__malloc_lock>
 8021a74:	f8d8 3000 	ldr.w	r3, [r8]
 8021a78:	461c      	mov	r4, r3
 8021a7a:	bb5c      	cbnz	r4, 8021ad4 <_malloc_r+0x90>
 8021a7c:	4629      	mov	r1, r5
 8021a7e:	4638      	mov	r0, r7
 8021a80:	f7ff ffc0 	bl	8021a04 <sbrk_aligned>
 8021a84:	1c43      	adds	r3, r0, #1
 8021a86:	4604      	mov	r4, r0
 8021a88:	d155      	bne.n	8021b36 <_malloc_r+0xf2>
 8021a8a:	f8d8 4000 	ldr.w	r4, [r8]
 8021a8e:	4626      	mov	r6, r4
 8021a90:	2e00      	cmp	r6, #0
 8021a92:	d145      	bne.n	8021b20 <_malloc_r+0xdc>
 8021a94:	2c00      	cmp	r4, #0
 8021a96:	d048      	beq.n	8021b2a <_malloc_r+0xe6>
 8021a98:	6823      	ldr	r3, [r4, #0]
 8021a9a:	4631      	mov	r1, r6
 8021a9c:	4638      	mov	r0, r7
 8021a9e:	eb04 0903 	add.w	r9, r4, r3
 8021aa2:	f000 fa01 	bl	8021ea8 <_sbrk_r>
 8021aa6:	4581      	cmp	r9, r0
 8021aa8:	d13f      	bne.n	8021b2a <_malloc_r+0xe6>
 8021aaa:	6821      	ldr	r1, [r4, #0]
 8021aac:	1a6d      	subs	r5, r5, r1
 8021aae:	4629      	mov	r1, r5
 8021ab0:	4638      	mov	r0, r7
 8021ab2:	f7ff ffa7 	bl	8021a04 <sbrk_aligned>
 8021ab6:	3001      	adds	r0, #1
 8021ab8:	d037      	beq.n	8021b2a <_malloc_r+0xe6>
 8021aba:	6823      	ldr	r3, [r4, #0]
 8021abc:	442b      	add	r3, r5
 8021abe:	6023      	str	r3, [r4, #0]
 8021ac0:	f8d8 3000 	ldr.w	r3, [r8]
 8021ac4:	2b00      	cmp	r3, #0
 8021ac6:	d038      	beq.n	8021b3a <_malloc_r+0xf6>
 8021ac8:	685a      	ldr	r2, [r3, #4]
 8021aca:	42a2      	cmp	r2, r4
 8021acc:	d12b      	bne.n	8021b26 <_malloc_r+0xe2>
 8021ace:	2200      	movs	r2, #0
 8021ad0:	605a      	str	r2, [r3, #4]
 8021ad2:	e00f      	b.n	8021af4 <_malloc_r+0xb0>
 8021ad4:	6822      	ldr	r2, [r4, #0]
 8021ad6:	1b52      	subs	r2, r2, r5
 8021ad8:	d41f      	bmi.n	8021b1a <_malloc_r+0xd6>
 8021ada:	2a0b      	cmp	r2, #11
 8021adc:	d917      	bls.n	8021b0e <_malloc_r+0xca>
 8021ade:	1961      	adds	r1, r4, r5
 8021ae0:	42a3      	cmp	r3, r4
 8021ae2:	6025      	str	r5, [r4, #0]
 8021ae4:	bf18      	it	ne
 8021ae6:	6059      	strne	r1, [r3, #4]
 8021ae8:	6863      	ldr	r3, [r4, #4]
 8021aea:	bf08      	it	eq
 8021aec:	f8c8 1000 	streq.w	r1, [r8]
 8021af0:	5162      	str	r2, [r4, r5]
 8021af2:	604b      	str	r3, [r1, #4]
 8021af4:	4638      	mov	r0, r7
 8021af6:	f104 060b 	add.w	r6, r4, #11
 8021afa:	f000 f829 	bl	8021b50 <__malloc_unlock>
 8021afe:	f026 0607 	bic.w	r6, r6, #7
 8021b02:	1d23      	adds	r3, r4, #4
 8021b04:	1af2      	subs	r2, r6, r3
 8021b06:	d0ae      	beq.n	8021a66 <_malloc_r+0x22>
 8021b08:	1b9b      	subs	r3, r3, r6
 8021b0a:	50a3      	str	r3, [r4, r2]
 8021b0c:	e7ab      	b.n	8021a66 <_malloc_r+0x22>
 8021b0e:	42a3      	cmp	r3, r4
 8021b10:	6862      	ldr	r2, [r4, #4]
 8021b12:	d1dd      	bne.n	8021ad0 <_malloc_r+0x8c>
 8021b14:	f8c8 2000 	str.w	r2, [r8]
 8021b18:	e7ec      	b.n	8021af4 <_malloc_r+0xb0>
 8021b1a:	4623      	mov	r3, r4
 8021b1c:	6864      	ldr	r4, [r4, #4]
 8021b1e:	e7ac      	b.n	8021a7a <_malloc_r+0x36>
 8021b20:	4634      	mov	r4, r6
 8021b22:	6876      	ldr	r6, [r6, #4]
 8021b24:	e7b4      	b.n	8021a90 <_malloc_r+0x4c>
 8021b26:	4613      	mov	r3, r2
 8021b28:	e7cc      	b.n	8021ac4 <_malloc_r+0x80>
 8021b2a:	230c      	movs	r3, #12
 8021b2c:	603b      	str	r3, [r7, #0]
 8021b2e:	4638      	mov	r0, r7
 8021b30:	f000 f80e 	bl	8021b50 <__malloc_unlock>
 8021b34:	e797      	b.n	8021a66 <_malloc_r+0x22>
 8021b36:	6025      	str	r5, [r4, #0]
 8021b38:	e7dc      	b.n	8021af4 <_malloc_r+0xb0>
 8021b3a:	605b      	str	r3, [r3, #4]
 8021b3c:	deff      	udf	#255	; 0xff
 8021b3e:	bf00      	nop
 8021b40:	240027c8 	.word	0x240027c8

08021b44 <__malloc_lock>:
 8021b44:	4801      	ldr	r0, [pc, #4]	; (8021b4c <__malloc_lock+0x8>)
 8021b46:	f000 b9fc 	b.w	8021f42 <__retarget_lock_acquire_recursive>
 8021b4a:	bf00      	nop
 8021b4c:	24002911 	.word	0x24002911

08021b50 <__malloc_unlock>:
 8021b50:	4801      	ldr	r0, [pc, #4]	; (8021b58 <__malloc_unlock+0x8>)
 8021b52:	f000 b9f7 	b.w	8021f44 <__retarget_lock_release_recursive>
 8021b56:	bf00      	nop
 8021b58:	24002911 	.word	0x24002911

08021b5c <__cxa_atexit>:
 8021b5c:	b510      	push	{r4, lr}
 8021b5e:	4c05      	ldr	r4, [pc, #20]	; (8021b74 <__cxa_atexit+0x18>)
 8021b60:	4613      	mov	r3, r2
 8021b62:	b12c      	cbz	r4, 8021b70 <__cxa_atexit+0x14>
 8021b64:	460a      	mov	r2, r1
 8021b66:	4601      	mov	r1, r0
 8021b68:	2002      	movs	r0, #2
 8021b6a:	f000 f9fb 	bl	8021f64 <__register_exitproc>
 8021b6e:	bd10      	pop	{r4, pc}
 8021b70:	4620      	mov	r0, r4
 8021b72:	e7fc      	b.n	8021b6e <__cxa_atexit+0x12>
 8021b74:	08021f65 	.word	0x08021f65

08021b78 <std>:
 8021b78:	2300      	movs	r3, #0
 8021b7a:	b510      	push	{r4, lr}
 8021b7c:	4604      	mov	r4, r0
 8021b7e:	e9c0 3300 	strd	r3, r3, [r0]
 8021b82:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8021b86:	6083      	str	r3, [r0, #8]
 8021b88:	8181      	strh	r1, [r0, #12]
 8021b8a:	6643      	str	r3, [r0, #100]	; 0x64
 8021b8c:	81c2      	strh	r2, [r0, #14]
 8021b8e:	6183      	str	r3, [r0, #24]
 8021b90:	4619      	mov	r1, r3
 8021b92:	2208      	movs	r2, #8
 8021b94:	305c      	adds	r0, #92	; 0x5c
 8021b96:	f000 f906 	bl	8021da6 <memset>
 8021b9a:	4b0d      	ldr	r3, [pc, #52]	; (8021bd0 <std+0x58>)
 8021b9c:	6263      	str	r3, [r4, #36]	; 0x24
 8021b9e:	4b0d      	ldr	r3, [pc, #52]	; (8021bd4 <std+0x5c>)
 8021ba0:	62a3      	str	r3, [r4, #40]	; 0x28
 8021ba2:	4b0d      	ldr	r3, [pc, #52]	; (8021bd8 <std+0x60>)
 8021ba4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8021ba6:	4b0d      	ldr	r3, [pc, #52]	; (8021bdc <std+0x64>)
 8021ba8:	6323      	str	r3, [r4, #48]	; 0x30
 8021baa:	4b0d      	ldr	r3, [pc, #52]	; (8021be0 <std+0x68>)
 8021bac:	6224      	str	r4, [r4, #32]
 8021bae:	429c      	cmp	r4, r3
 8021bb0:	d006      	beq.n	8021bc0 <std+0x48>
 8021bb2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8021bb6:	4294      	cmp	r4, r2
 8021bb8:	d002      	beq.n	8021bc0 <std+0x48>
 8021bba:	33d0      	adds	r3, #208	; 0xd0
 8021bbc:	429c      	cmp	r4, r3
 8021bbe:	d105      	bne.n	8021bcc <std+0x54>
 8021bc0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8021bc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021bc8:	f000 b9ba 	b.w	8021f40 <__retarget_lock_init_recursive>
 8021bcc:	bd10      	pop	{r4, pc}
 8021bce:	bf00      	nop
 8021bd0:	08021d21 	.word	0x08021d21
 8021bd4:	08021d43 	.word	0x08021d43
 8021bd8:	08021d7b 	.word	0x08021d7b
 8021bdc:	08021d9f 	.word	0x08021d9f
 8021be0:	240027d0 	.word	0x240027d0

08021be4 <stdio_exit_handler>:
 8021be4:	4a02      	ldr	r2, [pc, #8]	; (8021bf0 <stdio_exit_handler+0xc>)
 8021be6:	4903      	ldr	r1, [pc, #12]	; (8021bf4 <stdio_exit_handler+0x10>)
 8021be8:	4803      	ldr	r0, [pc, #12]	; (8021bf8 <stdio_exit_handler+0x14>)
 8021bea:	f000 b87b 	b.w	8021ce4 <_fwalk_sglue>
 8021bee:	bf00      	nop
 8021bf0:	24000098 	.word	0x24000098
 8021bf4:	0802276d 	.word	0x0802276d
 8021bf8:	240000a4 	.word	0x240000a4

08021bfc <cleanup_stdio>:
 8021bfc:	6841      	ldr	r1, [r0, #4]
 8021bfe:	4b0c      	ldr	r3, [pc, #48]	; (8021c30 <cleanup_stdio+0x34>)
 8021c00:	4299      	cmp	r1, r3
 8021c02:	b510      	push	{r4, lr}
 8021c04:	4604      	mov	r4, r0
 8021c06:	d001      	beq.n	8021c0c <cleanup_stdio+0x10>
 8021c08:	f000 fdb0 	bl	802276c <_fflush_r>
 8021c0c:	68a1      	ldr	r1, [r4, #8]
 8021c0e:	4b09      	ldr	r3, [pc, #36]	; (8021c34 <cleanup_stdio+0x38>)
 8021c10:	4299      	cmp	r1, r3
 8021c12:	d002      	beq.n	8021c1a <cleanup_stdio+0x1e>
 8021c14:	4620      	mov	r0, r4
 8021c16:	f000 fda9 	bl	802276c <_fflush_r>
 8021c1a:	68e1      	ldr	r1, [r4, #12]
 8021c1c:	4b06      	ldr	r3, [pc, #24]	; (8021c38 <cleanup_stdio+0x3c>)
 8021c1e:	4299      	cmp	r1, r3
 8021c20:	d004      	beq.n	8021c2c <cleanup_stdio+0x30>
 8021c22:	4620      	mov	r0, r4
 8021c24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021c28:	f000 bda0 	b.w	802276c <_fflush_r>
 8021c2c:	bd10      	pop	{r4, pc}
 8021c2e:	bf00      	nop
 8021c30:	240027d0 	.word	0x240027d0
 8021c34:	24002838 	.word	0x24002838
 8021c38:	240028a0 	.word	0x240028a0

08021c3c <global_stdio_init.part.0>:
 8021c3c:	b510      	push	{r4, lr}
 8021c3e:	4b0b      	ldr	r3, [pc, #44]	; (8021c6c <global_stdio_init.part.0+0x30>)
 8021c40:	4c0b      	ldr	r4, [pc, #44]	; (8021c70 <global_stdio_init.part.0+0x34>)
 8021c42:	4a0c      	ldr	r2, [pc, #48]	; (8021c74 <global_stdio_init.part.0+0x38>)
 8021c44:	601a      	str	r2, [r3, #0]
 8021c46:	4620      	mov	r0, r4
 8021c48:	2200      	movs	r2, #0
 8021c4a:	2104      	movs	r1, #4
 8021c4c:	f7ff ff94 	bl	8021b78 <std>
 8021c50:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8021c54:	2201      	movs	r2, #1
 8021c56:	2109      	movs	r1, #9
 8021c58:	f7ff ff8e 	bl	8021b78 <std>
 8021c5c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8021c60:	2202      	movs	r2, #2
 8021c62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021c66:	2112      	movs	r1, #18
 8021c68:	f7ff bf86 	b.w	8021b78 <std>
 8021c6c:	24002908 	.word	0x24002908
 8021c70:	240027d0 	.word	0x240027d0
 8021c74:	08021be5 	.word	0x08021be5

08021c78 <__sfp_lock_acquire>:
 8021c78:	4801      	ldr	r0, [pc, #4]	; (8021c80 <__sfp_lock_acquire+0x8>)
 8021c7a:	f000 b962 	b.w	8021f42 <__retarget_lock_acquire_recursive>
 8021c7e:	bf00      	nop
 8021c80:	24002912 	.word	0x24002912

08021c84 <__sfp_lock_release>:
 8021c84:	4801      	ldr	r0, [pc, #4]	; (8021c8c <__sfp_lock_release+0x8>)
 8021c86:	f000 b95d 	b.w	8021f44 <__retarget_lock_release_recursive>
 8021c8a:	bf00      	nop
 8021c8c:	24002912 	.word	0x24002912

08021c90 <__sinit>:
 8021c90:	b510      	push	{r4, lr}
 8021c92:	4604      	mov	r4, r0
 8021c94:	f7ff fff0 	bl	8021c78 <__sfp_lock_acquire>
 8021c98:	6a23      	ldr	r3, [r4, #32]
 8021c9a:	b11b      	cbz	r3, 8021ca4 <__sinit+0x14>
 8021c9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021ca0:	f7ff bff0 	b.w	8021c84 <__sfp_lock_release>
 8021ca4:	4b04      	ldr	r3, [pc, #16]	; (8021cb8 <__sinit+0x28>)
 8021ca6:	6223      	str	r3, [r4, #32]
 8021ca8:	4b04      	ldr	r3, [pc, #16]	; (8021cbc <__sinit+0x2c>)
 8021caa:	681b      	ldr	r3, [r3, #0]
 8021cac:	2b00      	cmp	r3, #0
 8021cae:	d1f5      	bne.n	8021c9c <__sinit+0xc>
 8021cb0:	f7ff ffc4 	bl	8021c3c <global_stdio_init.part.0>
 8021cb4:	e7f2      	b.n	8021c9c <__sinit+0xc>
 8021cb6:	bf00      	nop
 8021cb8:	08021bfd 	.word	0x08021bfd
 8021cbc:	24002908 	.word	0x24002908

08021cc0 <fiprintf>:
 8021cc0:	b40e      	push	{r1, r2, r3}
 8021cc2:	b503      	push	{r0, r1, lr}
 8021cc4:	4601      	mov	r1, r0
 8021cc6:	ab03      	add	r3, sp, #12
 8021cc8:	4805      	ldr	r0, [pc, #20]	; (8021ce0 <fiprintf+0x20>)
 8021cca:	f853 2b04 	ldr.w	r2, [r3], #4
 8021cce:	6800      	ldr	r0, [r0, #0]
 8021cd0:	9301      	str	r3, [sp, #4]
 8021cd2:	f000 fa1b 	bl	802210c <_vfiprintf_r>
 8021cd6:	b002      	add	sp, #8
 8021cd8:	f85d eb04 	ldr.w	lr, [sp], #4
 8021cdc:	b003      	add	sp, #12
 8021cde:	4770      	bx	lr
 8021ce0:	240000f0 	.word	0x240000f0

08021ce4 <_fwalk_sglue>:
 8021ce4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021ce8:	4607      	mov	r7, r0
 8021cea:	4688      	mov	r8, r1
 8021cec:	4614      	mov	r4, r2
 8021cee:	2600      	movs	r6, #0
 8021cf0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8021cf4:	f1b9 0901 	subs.w	r9, r9, #1
 8021cf8:	d505      	bpl.n	8021d06 <_fwalk_sglue+0x22>
 8021cfa:	6824      	ldr	r4, [r4, #0]
 8021cfc:	2c00      	cmp	r4, #0
 8021cfe:	d1f7      	bne.n	8021cf0 <_fwalk_sglue+0xc>
 8021d00:	4630      	mov	r0, r6
 8021d02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021d06:	89ab      	ldrh	r3, [r5, #12]
 8021d08:	2b01      	cmp	r3, #1
 8021d0a:	d907      	bls.n	8021d1c <_fwalk_sglue+0x38>
 8021d0c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8021d10:	3301      	adds	r3, #1
 8021d12:	d003      	beq.n	8021d1c <_fwalk_sglue+0x38>
 8021d14:	4629      	mov	r1, r5
 8021d16:	4638      	mov	r0, r7
 8021d18:	47c0      	blx	r8
 8021d1a:	4306      	orrs	r6, r0
 8021d1c:	3568      	adds	r5, #104	; 0x68
 8021d1e:	e7e9      	b.n	8021cf4 <_fwalk_sglue+0x10>

08021d20 <__sread>:
 8021d20:	b510      	push	{r4, lr}
 8021d22:	460c      	mov	r4, r1
 8021d24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021d28:	f000 f898 	bl	8021e5c <_read_r>
 8021d2c:	2800      	cmp	r0, #0
 8021d2e:	bfab      	itete	ge
 8021d30:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021d32:	89a3      	ldrhlt	r3, [r4, #12]
 8021d34:	181b      	addge	r3, r3, r0
 8021d36:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8021d3a:	bfac      	ite	ge
 8021d3c:	6563      	strge	r3, [r4, #84]	; 0x54
 8021d3e:	81a3      	strhlt	r3, [r4, #12]
 8021d40:	bd10      	pop	{r4, pc}

08021d42 <__swrite>:
 8021d42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021d46:	461f      	mov	r7, r3
 8021d48:	898b      	ldrh	r3, [r1, #12]
 8021d4a:	05db      	lsls	r3, r3, #23
 8021d4c:	4605      	mov	r5, r0
 8021d4e:	460c      	mov	r4, r1
 8021d50:	4616      	mov	r6, r2
 8021d52:	d505      	bpl.n	8021d60 <__swrite+0x1e>
 8021d54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021d58:	2302      	movs	r3, #2
 8021d5a:	2200      	movs	r2, #0
 8021d5c:	f000 f86c 	bl	8021e38 <_lseek_r>
 8021d60:	89a3      	ldrh	r3, [r4, #12]
 8021d62:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021d66:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8021d6a:	81a3      	strh	r3, [r4, #12]
 8021d6c:	4632      	mov	r2, r6
 8021d6e:	463b      	mov	r3, r7
 8021d70:	4628      	mov	r0, r5
 8021d72:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021d76:	f000 b8a7 	b.w	8021ec8 <_write_r>

08021d7a <__sseek>:
 8021d7a:	b510      	push	{r4, lr}
 8021d7c:	460c      	mov	r4, r1
 8021d7e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021d82:	f000 f859 	bl	8021e38 <_lseek_r>
 8021d86:	1c43      	adds	r3, r0, #1
 8021d88:	89a3      	ldrh	r3, [r4, #12]
 8021d8a:	bf15      	itete	ne
 8021d8c:	6560      	strne	r0, [r4, #84]	; 0x54
 8021d8e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8021d92:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8021d96:	81a3      	strheq	r3, [r4, #12]
 8021d98:	bf18      	it	ne
 8021d9a:	81a3      	strhne	r3, [r4, #12]
 8021d9c:	bd10      	pop	{r4, pc}

08021d9e <__sclose>:
 8021d9e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021da2:	f000 b839 	b.w	8021e18 <_close_r>

08021da6 <memset>:
 8021da6:	4402      	add	r2, r0
 8021da8:	4603      	mov	r3, r0
 8021daa:	4293      	cmp	r3, r2
 8021dac:	d100      	bne.n	8021db0 <memset+0xa>
 8021dae:	4770      	bx	lr
 8021db0:	f803 1b01 	strb.w	r1, [r3], #1
 8021db4:	e7f9      	b.n	8021daa <memset+0x4>

08021db6 <_raise_r>:
 8021db6:	291f      	cmp	r1, #31
 8021db8:	b538      	push	{r3, r4, r5, lr}
 8021dba:	4604      	mov	r4, r0
 8021dbc:	460d      	mov	r5, r1
 8021dbe:	d904      	bls.n	8021dca <_raise_r+0x14>
 8021dc0:	2316      	movs	r3, #22
 8021dc2:	6003      	str	r3, [r0, #0]
 8021dc4:	f04f 30ff 	mov.w	r0, #4294967295
 8021dc8:	bd38      	pop	{r3, r4, r5, pc}
 8021dca:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8021dcc:	b112      	cbz	r2, 8021dd4 <_raise_r+0x1e>
 8021dce:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021dd2:	b94b      	cbnz	r3, 8021de8 <_raise_r+0x32>
 8021dd4:	4620      	mov	r0, r4
 8021dd6:	f000 f865 	bl	8021ea4 <_getpid_r>
 8021dda:	462a      	mov	r2, r5
 8021ddc:	4601      	mov	r1, r0
 8021dde:	4620      	mov	r0, r4
 8021de0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021de4:	f000 b84c 	b.w	8021e80 <_kill_r>
 8021de8:	2b01      	cmp	r3, #1
 8021dea:	d00a      	beq.n	8021e02 <_raise_r+0x4c>
 8021dec:	1c59      	adds	r1, r3, #1
 8021dee:	d103      	bne.n	8021df8 <_raise_r+0x42>
 8021df0:	2316      	movs	r3, #22
 8021df2:	6003      	str	r3, [r0, #0]
 8021df4:	2001      	movs	r0, #1
 8021df6:	e7e7      	b.n	8021dc8 <_raise_r+0x12>
 8021df8:	2400      	movs	r4, #0
 8021dfa:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021dfe:	4628      	mov	r0, r5
 8021e00:	4798      	blx	r3
 8021e02:	2000      	movs	r0, #0
 8021e04:	e7e0      	b.n	8021dc8 <_raise_r+0x12>
	...

08021e08 <raise>:
 8021e08:	4b02      	ldr	r3, [pc, #8]	; (8021e14 <raise+0xc>)
 8021e0a:	4601      	mov	r1, r0
 8021e0c:	6818      	ldr	r0, [r3, #0]
 8021e0e:	f7ff bfd2 	b.w	8021db6 <_raise_r>
 8021e12:	bf00      	nop
 8021e14:	240000f0 	.word	0x240000f0

08021e18 <_close_r>:
 8021e18:	b538      	push	{r3, r4, r5, lr}
 8021e1a:	4d06      	ldr	r5, [pc, #24]	; (8021e34 <_close_r+0x1c>)
 8021e1c:	2300      	movs	r3, #0
 8021e1e:	4604      	mov	r4, r0
 8021e20:	4608      	mov	r0, r1
 8021e22:	602b      	str	r3, [r5, #0]
 8021e24:	f7df fac9 	bl	80013ba <_close>
 8021e28:	1c43      	adds	r3, r0, #1
 8021e2a:	d102      	bne.n	8021e32 <_close_r+0x1a>
 8021e2c:	682b      	ldr	r3, [r5, #0]
 8021e2e:	b103      	cbz	r3, 8021e32 <_close_r+0x1a>
 8021e30:	6023      	str	r3, [r4, #0]
 8021e32:	bd38      	pop	{r3, r4, r5, pc}
 8021e34:	2400290c 	.word	0x2400290c

08021e38 <_lseek_r>:
 8021e38:	b538      	push	{r3, r4, r5, lr}
 8021e3a:	4d07      	ldr	r5, [pc, #28]	; (8021e58 <_lseek_r+0x20>)
 8021e3c:	4604      	mov	r4, r0
 8021e3e:	4608      	mov	r0, r1
 8021e40:	4611      	mov	r1, r2
 8021e42:	2200      	movs	r2, #0
 8021e44:	602a      	str	r2, [r5, #0]
 8021e46:	461a      	mov	r2, r3
 8021e48:	f7df fade 	bl	8001408 <_lseek>
 8021e4c:	1c43      	adds	r3, r0, #1
 8021e4e:	d102      	bne.n	8021e56 <_lseek_r+0x1e>
 8021e50:	682b      	ldr	r3, [r5, #0]
 8021e52:	b103      	cbz	r3, 8021e56 <_lseek_r+0x1e>
 8021e54:	6023      	str	r3, [r4, #0]
 8021e56:	bd38      	pop	{r3, r4, r5, pc}
 8021e58:	2400290c 	.word	0x2400290c

08021e5c <_read_r>:
 8021e5c:	b538      	push	{r3, r4, r5, lr}
 8021e5e:	4d07      	ldr	r5, [pc, #28]	; (8021e7c <_read_r+0x20>)
 8021e60:	4604      	mov	r4, r0
 8021e62:	4608      	mov	r0, r1
 8021e64:	4611      	mov	r1, r2
 8021e66:	2200      	movs	r2, #0
 8021e68:	602a      	str	r2, [r5, #0]
 8021e6a:	461a      	mov	r2, r3
 8021e6c:	f7df fa6c 	bl	8001348 <_read>
 8021e70:	1c43      	adds	r3, r0, #1
 8021e72:	d102      	bne.n	8021e7a <_read_r+0x1e>
 8021e74:	682b      	ldr	r3, [r5, #0]
 8021e76:	b103      	cbz	r3, 8021e7a <_read_r+0x1e>
 8021e78:	6023      	str	r3, [r4, #0]
 8021e7a:	bd38      	pop	{r3, r4, r5, pc}
 8021e7c:	2400290c 	.word	0x2400290c

08021e80 <_kill_r>:
 8021e80:	b538      	push	{r3, r4, r5, lr}
 8021e82:	4d07      	ldr	r5, [pc, #28]	; (8021ea0 <_kill_r+0x20>)
 8021e84:	2300      	movs	r3, #0
 8021e86:	4604      	mov	r4, r0
 8021e88:	4608      	mov	r0, r1
 8021e8a:	4611      	mov	r1, r2
 8021e8c:	602b      	str	r3, [r5, #0]
 8021e8e:	f7df fa41 	bl	8001314 <_kill>
 8021e92:	1c43      	adds	r3, r0, #1
 8021e94:	d102      	bne.n	8021e9c <_kill_r+0x1c>
 8021e96:	682b      	ldr	r3, [r5, #0]
 8021e98:	b103      	cbz	r3, 8021e9c <_kill_r+0x1c>
 8021e9a:	6023      	str	r3, [r4, #0]
 8021e9c:	bd38      	pop	{r3, r4, r5, pc}
 8021e9e:	bf00      	nop
 8021ea0:	2400290c 	.word	0x2400290c

08021ea4 <_getpid_r>:
 8021ea4:	f7df ba2e 	b.w	8001304 <_getpid>

08021ea8 <_sbrk_r>:
 8021ea8:	b538      	push	{r3, r4, r5, lr}
 8021eaa:	4d06      	ldr	r5, [pc, #24]	; (8021ec4 <_sbrk_r+0x1c>)
 8021eac:	2300      	movs	r3, #0
 8021eae:	4604      	mov	r4, r0
 8021eb0:	4608      	mov	r0, r1
 8021eb2:	602b      	str	r3, [r5, #0]
 8021eb4:	f7df fab6 	bl	8001424 <_sbrk>
 8021eb8:	1c43      	adds	r3, r0, #1
 8021eba:	d102      	bne.n	8021ec2 <_sbrk_r+0x1a>
 8021ebc:	682b      	ldr	r3, [r5, #0]
 8021ebe:	b103      	cbz	r3, 8021ec2 <_sbrk_r+0x1a>
 8021ec0:	6023      	str	r3, [r4, #0]
 8021ec2:	bd38      	pop	{r3, r4, r5, pc}
 8021ec4:	2400290c 	.word	0x2400290c

08021ec8 <_write_r>:
 8021ec8:	b538      	push	{r3, r4, r5, lr}
 8021eca:	4d07      	ldr	r5, [pc, #28]	; (8021ee8 <_write_r+0x20>)
 8021ecc:	4604      	mov	r4, r0
 8021ece:	4608      	mov	r0, r1
 8021ed0:	4611      	mov	r1, r2
 8021ed2:	2200      	movs	r2, #0
 8021ed4:	602a      	str	r2, [r5, #0]
 8021ed6:	461a      	mov	r2, r3
 8021ed8:	f7df fa53 	bl	8001382 <_write>
 8021edc:	1c43      	adds	r3, r0, #1
 8021ede:	d102      	bne.n	8021ee6 <_write_r+0x1e>
 8021ee0:	682b      	ldr	r3, [r5, #0]
 8021ee2:	b103      	cbz	r3, 8021ee6 <_write_r+0x1e>
 8021ee4:	6023      	str	r3, [r4, #0]
 8021ee6:	bd38      	pop	{r3, r4, r5, pc}
 8021ee8:	2400290c 	.word	0x2400290c

08021eec <__errno>:
 8021eec:	4b01      	ldr	r3, [pc, #4]	; (8021ef4 <__errno+0x8>)
 8021eee:	6818      	ldr	r0, [r3, #0]
 8021ef0:	4770      	bx	lr
 8021ef2:	bf00      	nop
 8021ef4:	240000f0 	.word	0x240000f0

08021ef8 <__libc_init_array>:
 8021ef8:	b570      	push	{r4, r5, r6, lr}
 8021efa:	4d0d      	ldr	r5, [pc, #52]	; (8021f30 <__libc_init_array+0x38>)
 8021efc:	4c0d      	ldr	r4, [pc, #52]	; (8021f34 <__libc_init_array+0x3c>)
 8021efe:	1b64      	subs	r4, r4, r5
 8021f00:	10a4      	asrs	r4, r4, #2
 8021f02:	2600      	movs	r6, #0
 8021f04:	42a6      	cmp	r6, r4
 8021f06:	d109      	bne.n	8021f1c <__libc_init_array+0x24>
 8021f08:	4d0b      	ldr	r5, [pc, #44]	; (8021f38 <__libc_init_array+0x40>)
 8021f0a:	4c0c      	ldr	r4, [pc, #48]	; (8021f3c <__libc_init_array+0x44>)
 8021f0c:	f000 fd70 	bl	80229f0 <_init>
 8021f10:	1b64      	subs	r4, r4, r5
 8021f12:	10a4      	asrs	r4, r4, #2
 8021f14:	2600      	movs	r6, #0
 8021f16:	42a6      	cmp	r6, r4
 8021f18:	d105      	bne.n	8021f26 <__libc_init_array+0x2e>
 8021f1a:	bd70      	pop	{r4, r5, r6, pc}
 8021f1c:	f855 3b04 	ldr.w	r3, [r5], #4
 8021f20:	4798      	blx	r3
 8021f22:	3601      	adds	r6, #1
 8021f24:	e7ee      	b.n	8021f04 <__libc_init_array+0xc>
 8021f26:	f855 3b04 	ldr.w	r3, [r5], #4
 8021f2a:	4798      	blx	r3
 8021f2c:	3601      	adds	r6, #1
 8021f2e:	e7f2      	b.n	8021f16 <__libc_init_array+0x1e>
 8021f30:	08024ce0 	.word	0x08024ce0
 8021f34:	08024ce0 	.word	0x08024ce0
 8021f38:	08024ce0 	.word	0x08024ce0
 8021f3c:	08024cf8 	.word	0x08024cf8

08021f40 <__retarget_lock_init_recursive>:
 8021f40:	4770      	bx	lr

08021f42 <__retarget_lock_acquire_recursive>:
 8021f42:	4770      	bx	lr

08021f44 <__retarget_lock_release_recursive>:
 8021f44:	4770      	bx	lr

08021f46 <memcpy>:
 8021f46:	440a      	add	r2, r1
 8021f48:	4291      	cmp	r1, r2
 8021f4a:	f100 33ff 	add.w	r3, r0, #4294967295
 8021f4e:	d100      	bne.n	8021f52 <memcpy+0xc>
 8021f50:	4770      	bx	lr
 8021f52:	b510      	push	{r4, lr}
 8021f54:	f811 4b01 	ldrb.w	r4, [r1], #1
 8021f58:	f803 4f01 	strb.w	r4, [r3, #1]!
 8021f5c:	4291      	cmp	r1, r2
 8021f5e:	d1f9      	bne.n	8021f54 <memcpy+0xe>
 8021f60:	bd10      	pop	{r4, pc}
	...

08021f64 <__register_exitproc>:
 8021f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021f68:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802201c <__register_exitproc+0xb8>
 8021f6c:	4606      	mov	r6, r0
 8021f6e:	f8d8 0000 	ldr.w	r0, [r8]
 8021f72:	461f      	mov	r7, r3
 8021f74:	460d      	mov	r5, r1
 8021f76:	4691      	mov	r9, r2
 8021f78:	f7ff ffe3 	bl	8021f42 <__retarget_lock_acquire_recursive>
 8021f7c:	4b23      	ldr	r3, [pc, #140]	; (802200c <__register_exitproc+0xa8>)
 8021f7e:	681c      	ldr	r4, [r3, #0]
 8021f80:	b934      	cbnz	r4, 8021f90 <__register_exitproc+0x2c>
 8021f82:	4c23      	ldr	r4, [pc, #140]	; (8022010 <__register_exitproc+0xac>)
 8021f84:	601c      	str	r4, [r3, #0]
 8021f86:	4b23      	ldr	r3, [pc, #140]	; (8022014 <__register_exitproc+0xb0>)
 8021f88:	b113      	cbz	r3, 8021f90 <__register_exitproc+0x2c>
 8021f8a:	681b      	ldr	r3, [r3, #0]
 8021f8c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8021f90:	6863      	ldr	r3, [r4, #4]
 8021f92:	2b1f      	cmp	r3, #31
 8021f94:	dd07      	ble.n	8021fa6 <__register_exitproc+0x42>
 8021f96:	f8d8 0000 	ldr.w	r0, [r8]
 8021f9a:	f7ff ffd3 	bl	8021f44 <__retarget_lock_release_recursive>
 8021f9e:	f04f 30ff 	mov.w	r0, #4294967295
 8021fa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021fa6:	b32e      	cbz	r6, 8021ff4 <__register_exitproc+0x90>
 8021fa8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021fac:	b968      	cbnz	r0, 8021fca <__register_exitproc+0x66>
 8021fae:	4b1a      	ldr	r3, [pc, #104]	; (8022018 <__register_exitproc+0xb4>)
 8021fb0:	2b00      	cmp	r3, #0
 8021fb2:	d0f0      	beq.n	8021f96 <__register_exitproc+0x32>
 8021fb4:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021fb8:	f7ff fd14 	bl	80219e4 <malloc>
 8021fbc:	2800      	cmp	r0, #0
 8021fbe:	d0ea      	beq.n	8021f96 <__register_exitproc+0x32>
 8021fc0:	2300      	movs	r3, #0
 8021fc2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8021fc6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8021fca:	6863      	ldr	r3, [r4, #4]
 8021fcc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021fd0:	2201      	movs	r2, #1
 8021fd2:	409a      	lsls	r2, r3
 8021fd4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021fd8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021fdc:	4313      	orrs	r3, r2
 8021fde:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021fe2:	2e02      	cmp	r6, #2
 8021fe4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8021fe8:	bf02      	ittt	eq
 8021fea:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021fee:	4313      	orreq	r3, r2
 8021ff0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021ff4:	6863      	ldr	r3, [r4, #4]
 8021ff6:	f8d8 0000 	ldr.w	r0, [r8]
 8021ffa:	1c5a      	adds	r2, r3, #1
 8021ffc:	3302      	adds	r3, #2
 8021ffe:	6062      	str	r2, [r4, #4]
 8022000:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8022004:	f7ff ff9e 	bl	8021f44 <__retarget_lock_release_recursive>
 8022008:	2000      	movs	r0, #0
 802200a:	e7ca      	b.n	8021fa2 <__register_exitproc+0x3e>
 802200c:	240029a0 	.word	0x240029a0
 8022010:	24002914 	.word	0x24002914
 8022014:	08024918 	.word	0x08024918
 8022018:	080219e5 	.word	0x080219e5
 802201c:	240000f4 	.word	0x240000f4

08022020 <_free_r>:
 8022020:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8022022:	2900      	cmp	r1, #0
 8022024:	d044      	beq.n	80220b0 <_free_r+0x90>
 8022026:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802202a:	9001      	str	r0, [sp, #4]
 802202c:	2b00      	cmp	r3, #0
 802202e:	f1a1 0404 	sub.w	r4, r1, #4
 8022032:	bfb8      	it	lt
 8022034:	18e4      	addlt	r4, r4, r3
 8022036:	f7ff fd85 	bl	8021b44 <__malloc_lock>
 802203a:	4a1e      	ldr	r2, [pc, #120]	; (80220b4 <_free_r+0x94>)
 802203c:	9801      	ldr	r0, [sp, #4]
 802203e:	6813      	ldr	r3, [r2, #0]
 8022040:	b933      	cbnz	r3, 8022050 <_free_r+0x30>
 8022042:	6063      	str	r3, [r4, #4]
 8022044:	6014      	str	r4, [r2, #0]
 8022046:	b003      	add	sp, #12
 8022048:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802204c:	f7ff bd80 	b.w	8021b50 <__malloc_unlock>
 8022050:	42a3      	cmp	r3, r4
 8022052:	d908      	bls.n	8022066 <_free_r+0x46>
 8022054:	6825      	ldr	r5, [r4, #0]
 8022056:	1961      	adds	r1, r4, r5
 8022058:	428b      	cmp	r3, r1
 802205a:	bf01      	itttt	eq
 802205c:	6819      	ldreq	r1, [r3, #0]
 802205e:	685b      	ldreq	r3, [r3, #4]
 8022060:	1949      	addeq	r1, r1, r5
 8022062:	6021      	streq	r1, [r4, #0]
 8022064:	e7ed      	b.n	8022042 <_free_r+0x22>
 8022066:	461a      	mov	r2, r3
 8022068:	685b      	ldr	r3, [r3, #4]
 802206a:	b10b      	cbz	r3, 8022070 <_free_r+0x50>
 802206c:	42a3      	cmp	r3, r4
 802206e:	d9fa      	bls.n	8022066 <_free_r+0x46>
 8022070:	6811      	ldr	r1, [r2, #0]
 8022072:	1855      	adds	r5, r2, r1
 8022074:	42a5      	cmp	r5, r4
 8022076:	d10b      	bne.n	8022090 <_free_r+0x70>
 8022078:	6824      	ldr	r4, [r4, #0]
 802207a:	4421      	add	r1, r4
 802207c:	1854      	adds	r4, r2, r1
 802207e:	42a3      	cmp	r3, r4
 8022080:	6011      	str	r1, [r2, #0]
 8022082:	d1e0      	bne.n	8022046 <_free_r+0x26>
 8022084:	681c      	ldr	r4, [r3, #0]
 8022086:	685b      	ldr	r3, [r3, #4]
 8022088:	6053      	str	r3, [r2, #4]
 802208a:	440c      	add	r4, r1
 802208c:	6014      	str	r4, [r2, #0]
 802208e:	e7da      	b.n	8022046 <_free_r+0x26>
 8022090:	d902      	bls.n	8022098 <_free_r+0x78>
 8022092:	230c      	movs	r3, #12
 8022094:	6003      	str	r3, [r0, #0]
 8022096:	e7d6      	b.n	8022046 <_free_r+0x26>
 8022098:	6825      	ldr	r5, [r4, #0]
 802209a:	1961      	adds	r1, r4, r5
 802209c:	428b      	cmp	r3, r1
 802209e:	bf04      	itt	eq
 80220a0:	6819      	ldreq	r1, [r3, #0]
 80220a2:	685b      	ldreq	r3, [r3, #4]
 80220a4:	6063      	str	r3, [r4, #4]
 80220a6:	bf04      	itt	eq
 80220a8:	1949      	addeq	r1, r1, r5
 80220aa:	6021      	streq	r1, [r4, #0]
 80220ac:	6054      	str	r4, [r2, #4]
 80220ae:	e7ca      	b.n	8022046 <_free_r+0x26>
 80220b0:	b003      	add	sp, #12
 80220b2:	bd30      	pop	{r4, r5, pc}
 80220b4:	240027c8 	.word	0x240027c8

080220b8 <__sfputc_r>:
 80220b8:	6893      	ldr	r3, [r2, #8]
 80220ba:	3b01      	subs	r3, #1
 80220bc:	2b00      	cmp	r3, #0
 80220be:	b410      	push	{r4}
 80220c0:	6093      	str	r3, [r2, #8]
 80220c2:	da08      	bge.n	80220d6 <__sfputc_r+0x1e>
 80220c4:	6994      	ldr	r4, [r2, #24]
 80220c6:	42a3      	cmp	r3, r4
 80220c8:	db01      	blt.n	80220ce <__sfputc_r+0x16>
 80220ca:	290a      	cmp	r1, #10
 80220cc:	d103      	bne.n	80220d6 <__sfputc_r+0x1e>
 80220ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80220d2:	f000 bb73 	b.w	80227bc <__swbuf_r>
 80220d6:	6813      	ldr	r3, [r2, #0]
 80220d8:	1c58      	adds	r0, r3, #1
 80220da:	6010      	str	r0, [r2, #0]
 80220dc:	7019      	strb	r1, [r3, #0]
 80220de:	4608      	mov	r0, r1
 80220e0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80220e4:	4770      	bx	lr

080220e6 <__sfputs_r>:
 80220e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80220e8:	4606      	mov	r6, r0
 80220ea:	460f      	mov	r7, r1
 80220ec:	4614      	mov	r4, r2
 80220ee:	18d5      	adds	r5, r2, r3
 80220f0:	42ac      	cmp	r4, r5
 80220f2:	d101      	bne.n	80220f8 <__sfputs_r+0x12>
 80220f4:	2000      	movs	r0, #0
 80220f6:	e007      	b.n	8022108 <__sfputs_r+0x22>
 80220f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80220fc:	463a      	mov	r2, r7
 80220fe:	4630      	mov	r0, r6
 8022100:	f7ff ffda 	bl	80220b8 <__sfputc_r>
 8022104:	1c43      	adds	r3, r0, #1
 8022106:	d1f3      	bne.n	80220f0 <__sfputs_r+0xa>
 8022108:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802210c <_vfiprintf_r>:
 802210c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022110:	460d      	mov	r5, r1
 8022112:	b09d      	sub	sp, #116	; 0x74
 8022114:	4614      	mov	r4, r2
 8022116:	4698      	mov	r8, r3
 8022118:	4606      	mov	r6, r0
 802211a:	b118      	cbz	r0, 8022124 <_vfiprintf_r+0x18>
 802211c:	6a03      	ldr	r3, [r0, #32]
 802211e:	b90b      	cbnz	r3, 8022124 <_vfiprintf_r+0x18>
 8022120:	f7ff fdb6 	bl	8021c90 <__sinit>
 8022124:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8022126:	07d9      	lsls	r1, r3, #31
 8022128:	d405      	bmi.n	8022136 <_vfiprintf_r+0x2a>
 802212a:	89ab      	ldrh	r3, [r5, #12]
 802212c:	059a      	lsls	r2, r3, #22
 802212e:	d402      	bmi.n	8022136 <_vfiprintf_r+0x2a>
 8022130:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8022132:	f7ff ff06 	bl	8021f42 <__retarget_lock_acquire_recursive>
 8022136:	89ab      	ldrh	r3, [r5, #12]
 8022138:	071b      	lsls	r3, r3, #28
 802213a:	d501      	bpl.n	8022140 <_vfiprintf_r+0x34>
 802213c:	692b      	ldr	r3, [r5, #16]
 802213e:	b99b      	cbnz	r3, 8022168 <_vfiprintf_r+0x5c>
 8022140:	4629      	mov	r1, r5
 8022142:	4630      	mov	r0, r6
 8022144:	f000 fb78 	bl	8022838 <__swsetup_r>
 8022148:	b170      	cbz	r0, 8022168 <_vfiprintf_r+0x5c>
 802214a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802214c:	07dc      	lsls	r4, r3, #31
 802214e:	d504      	bpl.n	802215a <_vfiprintf_r+0x4e>
 8022150:	f04f 30ff 	mov.w	r0, #4294967295
 8022154:	b01d      	add	sp, #116	; 0x74
 8022156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802215a:	89ab      	ldrh	r3, [r5, #12]
 802215c:	0598      	lsls	r0, r3, #22
 802215e:	d4f7      	bmi.n	8022150 <_vfiprintf_r+0x44>
 8022160:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8022162:	f7ff feef 	bl	8021f44 <__retarget_lock_release_recursive>
 8022166:	e7f3      	b.n	8022150 <_vfiprintf_r+0x44>
 8022168:	2300      	movs	r3, #0
 802216a:	9309      	str	r3, [sp, #36]	; 0x24
 802216c:	2320      	movs	r3, #32
 802216e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8022172:	f8cd 800c 	str.w	r8, [sp, #12]
 8022176:	2330      	movs	r3, #48	; 0x30
 8022178:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802232c <_vfiprintf_r+0x220>
 802217c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8022180:	f04f 0901 	mov.w	r9, #1
 8022184:	4623      	mov	r3, r4
 8022186:	469a      	mov	sl, r3
 8022188:	f813 2b01 	ldrb.w	r2, [r3], #1
 802218c:	b10a      	cbz	r2, 8022192 <_vfiprintf_r+0x86>
 802218e:	2a25      	cmp	r2, #37	; 0x25
 8022190:	d1f9      	bne.n	8022186 <_vfiprintf_r+0x7a>
 8022192:	ebba 0b04 	subs.w	fp, sl, r4
 8022196:	d00b      	beq.n	80221b0 <_vfiprintf_r+0xa4>
 8022198:	465b      	mov	r3, fp
 802219a:	4622      	mov	r2, r4
 802219c:	4629      	mov	r1, r5
 802219e:	4630      	mov	r0, r6
 80221a0:	f7ff ffa1 	bl	80220e6 <__sfputs_r>
 80221a4:	3001      	adds	r0, #1
 80221a6:	f000 80a9 	beq.w	80222fc <_vfiprintf_r+0x1f0>
 80221aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80221ac:	445a      	add	r2, fp
 80221ae:	9209      	str	r2, [sp, #36]	; 0x24
 80221b0:	f89a 3000 	ldrb.w	r3, [sl]
 80221b4:	2b00      	cmp	r3, #0
 80221b6:	f000 80a1 	beq.w	80222fc <_vfiprintf_r+0x1f0>
 80221ba:	2300      	movs	r3, #0
 80221bc:	f04f 32ff 	mov.w	r2, #4294967295
 80221c0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80221c4:	f10a 0a01 	add.w	sl, sl, #1
 80221c8:	9304      	str	r3, [sp, #16]
 80221ca:	9307      	str	r3, [sp, #28]
 80221cc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80221d0:	931a      	str	r3, [sp, #104]	; 0x68
 80221d2:	4654      	mov	r4, sl
 80221d4:	2205      	movs	r2, #5
 80221d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80221da:	4854      	ldr	r0, [pc, #336]	; (802232c <_vfiprintf_r+0x220>)
 80221dc:	f7de f898 	bl	8000310 <memchr>
 80221e0:	9a04      	ldr	r2, [sp, #16]
 80221e2:	b9d8      	cbnz	r0, 802221c <_vfiprintf_r+0x110>
 80221e4:	06d1      	lsls	r1, r2, #27
 80221e6:	bf44      	itt	mi
 80221e8:	2320      	movmi	r3, #32
 80221ea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80221ee:	0713      	lsls	r3, r2, #28
 80221f0:	bf44      	itt	mi
 80221f2:	232b      	movmi	r3, #43	; 0x2b
 80221f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80221f8:	f89a 3000 	ldrb.w	r3, [sl]
 80221fc:	2b2a      	cmp	r3, #42	; 0x2a
 80221fe:	d015      	beq.n	802222c <_vfiprintf_r+0x120>
 8022200:	9a07      	ldr	r2, [sp, #28]
 8022202:	4654      	mov	r4, sl
 8022204:	2000      	movs	r0, #0
 8022206:	f04f 0c0a 	mov.w	ip, #10
 802220a:	4621      	mov	r1, r4
 802220c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8022210:	3b30      	subs	r3, #48	; 0x30
 8022212:	2b09      	cmp	r3, #9
 8022214:	d94d      	bls.n	80222b2 <_vfiprintf_r+0x1a6>
 8022216:	b1b0      	cbz	r0, 8022246 <_vfiprintf_r+0x13a>
 8022218:	9207      	str	r2, [sp, #28]
 802221a:	e014      	b.n	8022246 <_vfiprintf_r+0x13a>
 802221c:	eba0 0308 	sub.w	r3, r0, r8
 8022220:	fa09 f303 	lsl.w	r3, r9, r3
 8022224:	4313      	orrs	r3, r2
 8022226:	9304      	str	r3, [sp, #16]
 8022228:	46a2      	mov	sl, r4
 802222a:	e7d2      	b.n	80221d2 <_vfiprintf_r+0xc6>
 802222c:	9b03      	ldr	r3, [sp, #12]
 802222e:	1d19      	adds	r1, r3, #4
 8022230:	681b      	ldr	r3, [r3, #0]
 8022232:	9103      	str	r1, [sp, #12]
 8022234:	2b00      	cmp	r3, #0
 8022236:	bfbb      	ittet	lt
 8022238:	425b      	neglt	r3, r3
 802223a:	f042 0202 	orrlt.w	r2, r2, #2
 802223e:	9307      	strge	r3, [sp, #28]
 8022240:	9307      	strlt	r3, [sp, #28]
 8022242:	bfb8      	it	lt
 8022244:	9204      	strlt	r2, [sp, #16]
 8022246:	7823      	ldrb	r3, [r4, #0]
 8022248:	2b2e      	cmp	r3, #46	; 0x2e
 802224a:	d10c      	bne.n	8022266 <_vfiprintf_r+0x15a>
 802224c:	7863      	ldrb	r3, [r4, #1]
 802224e:	2b2a      	cmp	r3, #42	; 0x2a
 8022250:	d134      	bne.n	80222bc <_vfiprintf_r+0x1b0>
 8022252:	9b03      	ldr	r3, [sp, #12]
 8022254:	1d1a      	adds	r2, r3, #4
 8022256:	681b      	ldr	r3, [r3, #0]
 8022258:	9203      	str	r2, [sp, #12]
 802225a:	2b00      	cmp	r3, #0
 802225c:	bfb8      	it	lt
 802225e:	f04f 33ff 	movlt.w	r3, #4294967295
 8022262:	3402      	adds	r4, #2
 8022264:	9305      	str	r3, [sp, #20]
 8022266:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802233c <_vfiprintf_r+0x230>
 802226a:	7821      	ldrb	r1, [r4, #0]
 802226c:	2203      	movs	r2, #3
 802226e:	4650      	mov	r0, sl
 8022270:	f7de f84e 	bl	8000310 <memchr>
 8022274:	b138      	cbz	r0, 8022286 <_vfiprintf_r+0x17a>
 8022276:	9b04      	ldr	r3, [sp, #16]
 8022278:	eba0 000a 	sub.w	r0, r0, sl
 802227c:	2240      	movs	r2, #64	; 0x40
 802227e:	4082      	lsls	r2, r0
 8022280:	4313      	orrs	r3, r2
 8022282:	3401      	adds	r4, #1
 8022284:	9304      	str	r3, [sp, #16]
 8022286:	f814 1b01 	ldrb.w	r1, [r4], #1
 802228a:	4829      	ldr	r0, [pc, #164]	; (8022330 <_vfiprintf_r+0x224>)
 802228c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8022290:	2206      	movs	r2, #6
 8022292:	f7de f83d 	bl	8000310 <memchr>
 8022296:	2800      	cmp	r0, #0
 8022298:	d03f      	beq.n	802231a <_vfiprintf_r+0x20e>
 802229a:	4b26      	ldr	r3, [pc, #152]	; (8022334 <_vfiprintf_r+0x228>)
 802229c:	bb1b      	cbnz	r3, 80222e6 <_vfiprintf_r+0x1da>
 802229e:	9b03      	ldr	r3, [sp, #12]
 80222a0:	3307      	adds	r3, #7
 80222a2:	f023 0307 	bic.w	r3, r3, #7
 80222a6:	3308      	adds	r3, #8
 80222a8:	9303      	str	r3, [sp, #12]
 80222aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80222ac:	443b      	add	r3, r7
 80222ae:	9309      	str	r3, [sp, #36]	; 0x24
 80222b0:	e768      	b.n	8022184 <_vfiprintf_r+0x78>
 80222b2:	fb0c 3202 	mla	r2, ip, r2, r3
 80222b6:	460c      	mov	r4, r1
 80222b8:	2001      	movs	r0, #1
 80222ba:	e7a6      	b.n	802220a <_vfiprintf_r+0xfe>
 80222bc:	2300      	movs	r3, #0
 80222be:	3401      	adds	r4, #1
 80222c0:	9305      	str	r3, [sp, #20]
 80222c2:	4619      	mov	r1, r3
 80222c4:	f04f 0c0a 	mov.w	ip, #10
 80222c8:	4620      	mov	r0, r4
 80222ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 80222ce:	3a30      	subs	r2, #48	; 0x30
 80222d0:	2a09      	cmp	r2, #9
 80222d2:	d903      	bls.n	80222dc <_vfiprintf_r+0x1d0>
 80222d4:	2b00      	cmp	r3, #0
 80222d6:	d0c6      	beq.n	8022266 <_vfiprintf_r+0x15a>
 80222d8:	9105      	str	r1, [sp, #20]
 80222da:	e7c4      	b.n	8022266 <_vfiprintf_r+0x15a>
 80222dc:	fb0c 2101 	mla	r1, ip, r1, r2
 80222e0:	4604      	mov	r4, r0
 80222e2:	2301      	movs	r3, #1
 80222e4:	e7f0      	b.n	80222c8 <_vfiprintf_r+0x1bc>
 80222e6:	ab03      	add	r3, sp, #12
 80222e8:	9300      	str	r3, [sp, #0]
 80222ea:	462a      	mov	r2, r5
 80222ec:	4b12      	ldr	r3, [pc, #72]	; (8022338 <_vfiprintf_r+0x22c>)
 80222ee:	a904      	add	r1, sp, #16
 80222f0:	4630      	mov	r0, r6
 80222f2:	f3af 8000 	nop.w
 80222f6:	4607      	mov	r7, r0
 80222f8:	1c78      	adds	r0, r7, #1
 80222fa:	d1d6      	bne.n	80222aa <_vfiprintf_r+0x19e>
 80222fc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80222fe:	07d9      	lsls	r1, r3, #31
 8022300:	d405      	bmi.n	802230e <_vfiprintf_r+0x202>
 8022302:	89ab      	ldrh	r3, [r5, #12]
 8022304:	059a      	lsls	r2, r3, #22
 8022306:	d402      	bmi.n	802230e <_vfiprintf_r+0x202>
 8022308:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802230a:	f7ff fe1b 	bl	8021f44 <__retarget_lock_release_recursive>
 802230e:	89ab      	ldrh	r3, [r5, #12]
 8022310:	065b      	lsls	r3, r3, #25
 8022312:	f53f af1d 	bmi.w	8022150 <_vfiprintf_r+0x44>
 8022316:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022318:	e71c      	b.n	8022154 <_vfiprintf_r+0x48>
 802231a:	ab03      	add	r3, sp, #12
 802231c:	9300      	str	r3, [sp, #0]
 802231e:	462a      	mov	r2, r5
 8022320:	4b05      	ldr	r3, [pc, #20]	; (8022338 <_vfiprintf_r+0x22c>)
 8022322:	a904      	add	r1, sp, #16
 8022324:	4630      	mov	r0, r6
 8022326:	f000 f879 	bl	802241c <_printf_i>
 802232a:	e7e4      	b.n	80222f6 <_vfiprintf_r+0x1ea>
 802232c:	0802491c 	.word	0x0802491c
 8022330:	08024926 	.word	0x08024926
 8022334:	00000000 	.word	0x00000000
 8022338:	080220e7 	.word	0x080220e7
 802233c:	08024922 	.word	0x08024922

08022340 <_printf_common>:
 8022340:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022344:	4616      	mov	r6, r2
 8022346:	4699      	mov	r9, r3
 8022348:	688a      	ldr	r2, [r1, #8]
 802234a:	690b      	ldr	r3, [r1, #16]
 802234c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8022350:	4293      	cmp	r3, r2
 8022352:	bfb8      	it	lt
 8022354:	4613      	movlt	r3, r2
 8022356:	6033      	str	r3, [r6, #0]
 8022358:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802235c:	4607      	mov	r7, r0
 802235e:	460c      	mov	r4, r1
 8022360:	b10a      	cbz	r2, 8022366 <_printf_common+0x26>
 8022362:	3301      	adds	r3, #1
 8022364:	6033      	str	r3, [r6, #0]
 8022366:	6823      	ldr	r3, [r4, #0]
 8022368:	0699      	lsls	r1, r3, #26
 802236a:	bf42      	ittt	mi
 802236c:	6833      	ldrmi	r3, [r6, #0]
 802236e:	3302      	addmi	r3, #2
 8022370:	6033      	strmi	r3, [r6, #0]
 8022372:	6825      	ldr	r5, [r4, #0]
 8022374:	f015 0506 	ands.w	r5, r5, #6
 8022378:	d106      	bne.n	8022388 <_printf_common+0x48>
 802237a:	f104 0a19 	add.w	sl, r4, #25
 802237e:	68e3      	ldr	r3, [r4, #12]
 8022380:	6832      	ldr	r2, [r6, #0]
 8022382:	1a9b      	subs	r3, r3, r2
 8022384:	42ab      	cmp	r3, r5
 8022386:	dc26      	bgt.n	80223d6 <_printf_common+0x96>
 8022388:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802238c:	1e13      	subs	r3, r2, #0
 802238e:	6822      	ldr	r2, [r4, #0]
 8022390:	bf18      	it	ne
 8022392:	2301      	movne	r3, #1
 8022394:	0692      	lsls	r2, r2, #26
 8022396:	d42b      	bmi.n	80223f0 <_printf_common+0xb0>
 8022398:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802239c:	4649      	mov	r1, r9
 802239e:	4638      	mov	r0, r7
 80223a0:	47c0      	blx	r8
 80223a2:	3001      	adds	r0, #1
 80223a4:	d01e      	beq.n	80223e4 <_printf_common+0xa4>
 80223a6:	6823      	ldr	r3, [r4, #0]
 80223a8:	6922      	ldr	r2, [r4, #16]
 80223aa:	f003 0306 	and.w	r3, r3, #6
 80223ae:	2b04      	cmp	r3, #4
 80223b0:	bf02      	ittt	eq
 80223b2:	68e5      	ldreq	r5, [r4, #12]
 80223b4:	6833      	ldreq	r3, [r6, #0]
 80223b6:	1aed      	subeq	r5, r5, r3
 80223b8:	68a3      	ldr	r3, [r4, #8]
 80223ba:	bf0c      	ite	eq
 80223bc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80223c0:	2500      	movne	r5, #0
 80223c2:	4293      	cmp	r3, r2
 80223c4:	bfc4      	itt	gt
 80223c6:	1a9b      	subgt	r3, r3, r2
 80223c8:	18ed      	addgt	r5, r5, r3
 80223ca:	2600      	movs	r6, #0
 80223cc:	341a      	adds	r4, #26
 80223ce:	42b5      	cmp	r5, r6
 80223d0:	d11a      	bne.n	8022408 <_printf_common+0xc8>
 80223d2:	2000      	movs	r0, #0
 80223d4:	e008      	b.n	80223e8 <_printf_common+0xa8>
 80223d6:	2301      	movs	r3, #1
 80223d8:	4652      	mov	r2, sl
 80223da:	4649      	mov	r1, r9
 80223dc:	4638      	mov	r0, r7
 80223de:	47c0      	blx	r8
 80223e0:	3001      	adds	r0, #1
 80223e2:	d103      	bne.n	80223ec <_printf_common+0xac>
 80223e4:	f04f 30ff 	mov.w	r0, #4294967295
 80223e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80223ec:	3501      	adds	r5, #1
 80223ee:	e7c6      	b.n	802237e <_printf_common+0x3e>
 80223f0:	18e1      	adds	r1, r4, r3
 80223f2:	1c5a      	adds	r2, r3, #1
 80223f4:	2030      	movs	r0, #48	; 0x30
 80223f6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80223fa:	4422      	add	r2, r4
 80223fc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8022400:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8022404:	3302      	adds	r3, #2
 8022406:	e7c7      	b.n	8022398 <_printf_common+0x58>
 8022408:	2301      	movs	r3, #1
 802240a:	4622      	mov	r2, r4
 802240c:	4649      	mov	r1, r9
 802240e:	4638      	mov	r0, r7
 8022410:	47c0      	blx	r8
 8022412:	3001      	adds	r0, #1
 8022414:	d0e6      	beq.n	80223e4 <_printf_common+0xa4>
 8022416:	3601      	adds	r6, #1
 8022418:	e7d9      	b.n	80223ce <_printf_common+0x8e>
	...

0802241c <_printf_i>:
 802241c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8022420:	7e0f      	ldrb	r7, [r1, #24]
 8022422:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022424:	2f78      	cmp	r7, #120	; 0x78
 8022426:	4691      	mov	r9, r2
 8022428:	4680      	mov	r8, r0
 802242a:	460c      	mov	r4, r1
 802242c:	469a      	mov	sl, r3
 802242e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8022432:	d807      	bhi.n	8022444 <_printf_i+0x28>
 8022434:	2f62      	cmp	r7, #98	; 0x62
 8022436:	d80a      	bhi.n	802244e <_printf_i+0x32>
 8022438:	2f00      	cmp	r7, #0
 802243a:	f000 80d4 	beq.w	80225e6 <_printf_i+0x1ca>
 802243e:	2f58      	cmp	r7, #88	; 0x58
 8022440:	f000 80c0 	beq.w	80225c4 <_printf_i+0x1a8>
 8022444:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8022448:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802244c:	e03a      	b.n	80224c4 <_printf_i+0xa8>
 802244e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8022452:	2b15      	cmp	r3, #21
 8022454:	d8f6      	bhi.n	8022444 <_printf_i+0x28>
 8022456:	a101      	add	r1, pc, #4	; (adr r1, 802245c <_printf_i+0x40>)
 8022458:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802245c:	080224b5 	.word	0x080224b5
 8022460:	080224c9 	.word	0x080224c9
 8022464:	08022445 	.word	0x08022445
 8022468:	08022445 	.word	0x08022445
 802246c:	08022445 	.word	0x08022445
 8022470:	08022445 	.word	0x08022445
 8022474:	080224c9 	.word	0x080224c9
 8022478:	08022445 	.word	0x08022445
 802247c:	08022445 	.word	0x08022445
 8022480:	08022445 	.word	0x08022445
 8022484:	08022445 	.word	0x08022445
 8022488:	080225cd 	.word	0x080225cd
 802248c:	080224f5 	.word	0x080224f5
 8022490:	08022587 	.word	0x08022587
 8022494:	08022445 	.word	0x08022445
 8022498:	08022445 	.word	0x08022445
 802249c:	080225ef 	.word	0x080225ef
 80224a0:	08022445 	.word	0x08022445
 80224a4:	080224f5 	.word	0x080224f5
 80224a8:	08022445 	.word	0x08022445
 80224ac:	08022445 	.word	0x08022445
 80224b0:	0802258f 	.word	0x0802258f
 80224b4:	682b      	ldr	r3, [r5, #0]
 80224b6:	1d1a      	adds	r2, r3, #4
 80224b8:	681b      	ldr	r3, [r3, #0]
 80224ba:	602a      	str	r2, [r5, #0]
 80224bc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80224c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80224c4:	2301      	movs	r3, #1
 80224c6:	e09f      	b.n	8022608 <_printf_i+0x1ec>
 80224c8:	6820      	ldr	r0, [r4, #0]
 80224ca:	682b      	ldr	r3, [r5, #0]
 80224cc:	0607      	lsls	r7, r0, #24
 80224ce:	f103 0104 	add.w	r1, r3, #4
 80224d2:	6029      	str	r1, [r5, #0]
 80224d4:	d501      	bpl.n	80224da <_printf_i+0xbe>
 80224d6:	681e      	ldr	r6, [r3, #0]
 80224d8:	e003      	b.n	80224e2 <_printf_i+0xc6>
 80224da:	0646      	lsls	r6, r0, #25
 80224dc:	d5fb      	bpl.n	80224d6 <_printf_i+0xba>
 80224de:	f9b3 6000 	ldrsh.w	r6, [r3]
 80224e2:	2e00      	cmp	r6, #0
 80224e4:	da03      	bge.n	80224ee <_printf_i+0xd2>
 80224e6:	232d      	movs	r3, #45	; 0x2d
 80224e8:	4276      	negs	r6, r6
 80224ea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80224ee:	485a      	ldr	r0, [pc, #360]	; (8022658 <_printf_i+0x23c>)
 80224f0:	230a      	movs	r3, #10
 80224f2:	e012      	b.n	802251a <_printf_i+0xfe>
 80224f4:	682b      	ldr	r3, [r5, #0]
 80224f6:	6820      	ldr	r0, [r4, #0]
 80224f8:	1d19      	adds	r1, r3, #4
 80224fa:	6029      	str	r1, [r5, #0]
 80224fc:	0605      	lsls	r5, r0, #24
 80224fe:	d501      	bpl.n	8022504 <_printf_i+0xe8>
 8022500:	681e      	ldr	r6, [r3, #0]
 8022502:	e002      	b.n	802250a <_printf_i+0xee>
 8022504:	0641      	lsls	r1, r0, #25
 8022506:	d5fb      	bpl.n	8022500 <_printf_i+0xe4>
 8022508:	881e      	ldrh	r6, [r3, #0]
 802250a:	4853      	ldr	r0, [pc, #332]	; (8022658 <_printf_i+0x23c>)
 802250c:	2f6f      	cmp	r7, #111	; 0x6f
 802250e:	bf0c      	ite	eq
 8022510:	2308      	moveq	r3, #8
 8022512:	230a      	movne	r3, #10
 8022514:	2100      	movs	r1, #0
 8022516:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802251a:	6865      	ldr	r5, [r4, #4]
 802251c:	60a5      	str	r5, [r4, #8]
 802251e:	2d00      	cmp	r5, #0
 8022520:	bfa2      	ittt	ge
 8022522:	6821      	ldrge	r1, [r4, #0]
 8022524:	f021 0104 	bicge.w	r1, r1, #4
 8022528:	6021      	strge	r1, [r4, #0]
 802252a:	b90e      	cbnz	r6, 8022530 <_printf_i+0x114>
 802252c:	2d00      	cmp	r5, #0
 802252e:	d04b      	beq.n	80225c8 <_printf_i+0x1ac>
 8022530:	4615      	mov	r5, r2
 8022532:	fbb6 f1f3 	udiv	r1, r6, r3
 8022536:	fb03 6711 	mls	r7, r3, r1, r6
 802253a:	5dc7      	ldrb	r7, [r0, r7]
 802253c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8022540:	4637      	mov	r7, r6
 8022542:	42bb      	cmp	r3, r7
 8022544:	460e      	mov	r6, r1
 8022546:	d9f4      	bls.n	8022532 <_printf_i+0x116>
 8022548:	2b08      	cmp	r3, #8
 802254a:	d10b      	bne.n	8022564 <_printf_i+0x148>
 802254c:	6823      	ldr	r3, [r4, #0]
 802254e:	07de      	lsls	r6, r3, #31
 8022550:	d508      	bpl.n	8022564 <_printf_i+0x148>
 8022552:	6923      	ldr	r3, [r4, #16]
 8022554:	6861      	ldr	r1, [r4, #4]
 8022556:	4299      	cmp	r1, r3
 8022558:	bfde      	ittt	le
 802255a:	2330      	movle	r3, #48	; 0x30
 802255c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8022560:	f105 35ff 	addle.w	r5, r5, #4294967295
 8022564:	1b52      	subs	r2, r2, r5
 8022566:	6122      	str	r2, [r4, #16]
 8022568:	f8cd a000 	str.w	sl, [sp]
 802256c:	464b      	mov	r3, r9
 802256e:	aa03      	add	r2, sp, #12
 8022570:	4621      	mov	r1, r4
 8022572:	4640      	mov	r0, r8
 8022574:	f7ff fee4 	bl	8022340 <_printf_common>
 8022578:	3001      	adds	r0, #1
 802257a:	d14a      	bne.n	8022612 <_printf_i+0x1f6>
 802257c:	f04f 30ff 	mov.w	r0, #4294967295
 8022580:	b004      	add	sp, #16
 8022582:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022586:	6823      	ldr	r3, [r4, #0]
 8022588:	f043 0320 	orr.w	r3, r3, #32
 802258c:	6023      	str	r3, [r4, #0]
 802258e:	4833      	ldr	r0, [pc, #204]	; (802265c <_printf_i+0x240>)
 8022590:	2778      	movs	r7, #120	; 0x78
 8022592:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8022596:	6823      	ldr	r3, [r4, #0]
 8022598:	6829      	ldr	r1, [r5, #0]
 802259a:	061f      	lsls	r7, r3, #24
 802259c:	f851 6b04 	ldr.w	r6, [r1], #4
 80225a0:	d402      	bmi.n	80225a8 <_printf_i+0x18c>
 80225a2:	065f      	lsls	r7, r3, #25
 80225a4:	bf48      	it	mi
 80225a6:	b2b6      	uxthmi	r6, r6
 80225a8:	07df      	lsls	r7, r3, #31
 80225aa:	bf48      	it	mi
 80225ac:	f043 0320 	orrmi.w	r3, r3, #32
 80225b0:	6029      	str	r1, [r5, #0]
 80225b2:	bf48      	it	mi
 80225b4:	6023      	strmi	r3, [r4, #0]
 80225b6:	b91e      	cbnz	r6, 80225c0 <_printf_i+0x1a4>
 80225b8:	6823      	ldr	r3, [r4, #0]
 80225ba:	f023 0320 	bic.w	r3, r3, #32
 80225be:	6023      	str	r3, [r4, #0]
 80225c0:	2310      	movs	r3, #16
 80225c2:	e7a7      	b.n	8022514 <_printf_i+0xf8>
 80225c4:	4824      	ldr	r0, [pc, #144]	; (8022658 <_printf_i+0x23c>)
 80225c6:	e7e4      	b.n	8022592 <_printf_i+0x176>
 80225c8:	4615      	mov	r5, r2
 80225ca:	e7bd      	b.n	8022548 <_printf_i+0x12c>
 80225cc:	682b      	ldr	r3, [r5, #0]
 80225ce:	6826      	ldr	r6, [r4, #0]
 80225d0:	6961      	ldr	r1, [r4, #20]
 80225d2:	1d18      	adds	r0, r3, #4
 80225d4:	6028      	str	r0, [r5, #0]
 80225d6:	0635      	lsls	r5, r6, #24
 80225d8:	681b      	ldr	r3, [r3, #0]
 80225da:	d501      	bpl.n	80225e0 <_printf_i+0x1c4>
 80225dc:	6019      	str	r1, [r3, #0]
 80225de:	e002      	b.n	80225e6 <_printf_i+0x1ca>
 80225e0:	0670      	lsls	r0, r6, #25
 80225e2:	d5fb      	bpl.n	80225dc <_printf_i+0x1c0>
 80225e4:	8019      	strh	r1, [r3, #0]
 80225e6:	2300      	movs	r3, #0
 80225e8:	6123      	str	r3, [r4, #16]
 80225ea:	4615      	mov	r5, r2
 80225ec:	e7bc      	b.n	8022568 <_printf_i+0x14c>
 80225ee:	682b      	ldr	r3, [r5, #0]
 80225f0:	1d1a      	adds	r2, r3, #4
 80225f2:	602a      	str	r2, [r5, #0]
 80225f4:	681d      	ldr	r5, [r3, #0]
 80225f6:	6862      	ldr	r2, [r4, #4]
 80225f8:	2100      	movs	r1, #0
 80225fa:	4628      	mov	r0, r5
 80225fc:	f7dd fe88 	bl	8000310 <memchr>
 8022600:	b108      	cbz	r0, 8022606 <_printf_i+0x1ea>
 8022602:	1b40      	subs	r0, r0, r5
 8022604:	6060      	str	r0, [r4, #4]
 8022606:	6863      	ldr	r3, [r4, #4]
 8022608:	6123      	str	r3, [r4, #16]
 802260a:	2300      	movs	r3, #0
 802260c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8022610:	e7aa      	b.n	8022568 <_printf_i+0x14c>
 8022612:	6923      	ldr	r3, [r4, #16]
 8022614:	462a      	mov	r2, r5
 8022616:	4649      	mov	r1, r9
 8022618:	4640      	mov	r0, r8
 802261a:	47d0      	blx	sl
 802261c:	3001      	adds	r0, #1
 802261e:	d0ad      	beq.n	802257c <_printf_i+0x160>
 8022620:	6823      	ldr	r3, [r4, #0]
 8022622:	079b      	lsls	r3, r3, #30
 8022624:	d413      	bmi.n	802264e <_printf_i+0x232>
 8022626:	68e0      	ldr	r0, [r4, #12]
 8022628:	9b03      	ldr	r3, [sp, #12]
 802262a:	4298      	cmp	r0, r3
 802262c:	bfb8      	it	lt
 802262e:	4618      	movlt	r0, r3
 8022630:	e7a6      	b.n	8022580 <_printf_i+0x164>
 8022632:	2301      	movs	r3, #1
 8022634:	4632      	mov	r2, r6
 8022636:	4649      	mov	r1, r9
 8022638:	4640      	mov	r0, r8
 802263a:	47d0      	blx	sl
 802263c:	3001      	adds	r0, #1
 802263e:	d09d      	beq.n	802257c <_printf_i+0x160>
 8022640:	3501      	adds	r5, #1
 8022642:	68e3      	ldr	r3, [r4, #12]
 8022644:	9903      	ldr	r1, [sp, #12]
 8022646:	1a5b      	subs	r3, r3, r1
 8022648:	42ab      	cmp	r3, r5
 802264a:	dcf2      	bgt.n	8022632 <_printf_i+0x216>
 802264c:	e7eb      	b.n	8022626 <_printf_i+0x20a>
 802264e:	2500      	movs	r5, #0
 8022650:	f104 0619 	add.w	r6, r4, #25
 8022654:	e7f5      	b.n	8022642 <_printf_i+0x226>
 8022656:	bf00      	nop
 8022658:	0802492d 	.word	0x0802492d
 802265c:	0802493e 	.word	0x0802493e

08022660 <__sflush_r>:
 8022660:	898a      	ldrh	r2, [r1, #12]
 8022662:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022666:	4605      	mov	r5, r0
 8022668:	0710      	lsls	r0, r2, #28
 802266a:	460c      	mov	r4, r1
 802266c:	d458      	bmi.n	8022720 <__sflush_r+0xc0>
 802266e:	684b      	ldr	r3, [r1, #4]
 8022670:	2b00      	cmp	r3, #0
 8022672:	dc05      	bgt.n	8022680 <__sflush_r+0x20>
 8022674:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8022676:	2b00      	cmp	r3, #0
 8022678:	dc02      	bgt.n	8022680 <__sflush_r+0x20>
 802267a:	2000      	movs	r0, #0
 802267c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022680:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8022682:	2e00      	cmp	r6, #0
 8022684:	d0f9      	beq.n	802267a <__sflush_r+0x1a>
 8022686:	2300      	movs	r3, #0
 8022688:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802268c:	682f      	ldr	r7, [r5, #0]
 802268e:	6a21      	ldr	r1, [r4, #32]
 8022690:	602b      	str	r3, [r5, #0]
 8022692:	d032      	beq.n	80226fa <__sflush_r+0x9a>
 8022694:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8022696:	89a3      	ldrh	r3, [r4, #12]
 8022698:	075a      	lsls	r2, r3, #29
 802269a:	d505      	bpl.n	80226a8 <__sflush_r+0x48>
 802269c:	6863      	ldr	r3, [r4, #4]
 802269e:	1ac0      	subs	r0, r0, r3
 80226a0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80226a2:	b10b      	cbz	r3, 80226a8 <__sflush_r+0x48>
 80226a4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80226a6:	1ac0      	subs	r0, r0, r3
 80226a8:	2300      	movs	r3, #0
 80226aa:	4602      	mov	r2, r0
 80226ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80226ae:	6a21      	ldr	r1, [r4, #32]
 80226b0:	4628      	mov	r0, r5
 80226b2:	47b0      	blx	r6
 80226b4:	1c43      	adds	r3, r0, #1
 80226b6:	89a3      	ldrh	r3, [r4, #12]
 80226b8:	d106      	bne.n	80226c8 <__sflush_r+0x68>
 80226ba:	6829      	ldr	r1, [r5, #0]
 80226bc:	291d      	cmp	r1, #29
 80226be:	d82b      	bhi.n	8022718 <__sflush_r+0xb8>
 80226c0:	4a29      	ldr	r2, [pc, #164]	; (8022768 <__sflush_r+0x108>)
 80226c2:	410a      	asrs	r2, r1
 80226c4:	07d6      	lsls	r6, r2, #31
 80226c6:	d427      	bmi.n	8022718 <__sflush_r+0xb8>
 80226c8:	2200      	movs	r2, #0
 80226ca:	6062      	str	r2, [r4, #4]
 80226cc:	04d9      	lsls	r1, r3, #19
 80226ce:	6922      	ldr	r2, [r4, #16]
 80226d0:	6022      	str	r2, [r4, #0]
 80226d2:	d504      	bpl.n	80226de <__sflush_r+0x7e>
 80226d4:	1c42      	adds	r2, r0, #1
 80226d6:	d101      	bne.n	80226dc <__sflush_r+0x7c>
 80226d8:	682b      	ldr	r3, [r5, #0]
 80226da:	b903      	cbnz	r3, 80226de <__sflush_r+0x7e>
 80226dc:	6560      	str	r0, [r4, #84]	; 0x54
 80226de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80226e0:	602f      	str	r7, [r5, #0]
 80226e2:	2900      	cmp	r1, #0
 80226e4:	d0c9      	beq.n	802267a <__sflush_r+0x1a>
 80226e6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80226ea:	4299      	cmp	r1, r3
 80226ec:	d002      	beq.n	80226f4 <__sflush_r+0x94>
 80226ee:	4628      	mov	r0, r5
 80226f0:	f7ff fc96 	bl	8022020 <_free_r>
 80226f4:	2000      	movs	r0, #0
 80226f6:	6360      	str	r0, [r4, #52]	; 0x34
 80226f8:	e7c0      	b.n	802267c <__sflush_r+0x1c>
 80226fa:	2301      	movs	r3, #1
 80226fc:	4628      	mov	r0, r5
 80226fe:	47b0      	blx	r6
 8022700:	1c41      	adds	r1, r0, #1
 8022702:	d1c8      	bne.n	8022696 <__sflush_r+0x36>
 8022704:	682b      	ldr	r3, [r5, #0]
 8022706:	2b00      	cmp	r3, #0
 8022708:	d0c5      	beq.n	8022696 <__sflush_r+0x36>
 802270a:	2b1d      	cmp	r3, #29
 802270c:	d001      	beq.n	8022712 <__sflush_r+0xb2>
 802270e:	2b16      	cmp	r3, #22
 8022710:	d101      	bne.n	8022716 <__sflush_r+0xb6>
 8022712:	602f      	str	r7, [r5, #0]
 8022714:	e7b1      	b.n	802267a <__sflush_r+0x1a>
 8022716:	89a3      	ldrh	r3, [r4, #12]
 8022718:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802271c:	81a3      	strh	r3, [r4, #12]
 802271e:	e7ad      	b.n	802267c <__sflush_r+0x1c>
 8022720:	690f      	ldr	r7, [r1, #16]
 8022722:	2f00      	cmp	r7, #0
 8022724:	d0a9      	beq.n	802267a <__sflush_r+0x1a>
 8022726:	0793      	lsls	r3, r2, #30
 8022728:	680e      	ldr	r6, [r1, #0]
 802272a:	bf08      	it	eq
 802272c:	694b      	ldreq	r3, [r1, #20]
 802272e:	600f      	str	r7, [r1, #0]
 8022730:	bf18      	it	ne
 8022732:	2300      	movne	r3, #0
 8022734:	eba6 0807 	sub.w	r8, r6, r7
 8022738:	608b      	str	r3, [r1, #8]
 802273a:	f1b8 0f00 	cmp.w	r8, #0
 802273e:	dd9c      	ble.n	802267a <__sflush_r+0x1a>
 8022740:	6a21      	ldr	r1, [r4, #32]
 8022742:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8022744:	4643      	mov	r3, r8
 8022746:	463a      	mov	r2, r7
 8022748:	4628      	mov	r0, r5
 802274a:	47b0      	blx	r6
 802274c:	2800      	cmp	r0, #0
 802274e:	dc06      	bgt.n	802275e <__sflush_r+0xfe>
 8022750:	89a3      	ldrh	r3, [r4, #12]
 8022752:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8022756:	81a3      	strh	r3, [r4, #12]
 8022758:	f04f 30ff 	mov.w	r0, #4294967295
 802275c:	e78e      	b.n	802267c <__sflush_r+0x1c>
 802275e:	4407      	add	r7, r0
 8022760:	eba8 0800 	sub.w	r8, r8, r0
 8022764:	e7e9      	b.n	802273a <__sflush_r+0xda>
 8022766:	bf00      	nop
 8022768:	dfbffffe 	.word	0xdfbffffe

0802276c <_fflush_r>:
 802276c:	b538      	push	{r3, r4, r5, lr}
 802276e:	690b      	ldr	r3, [r1, #16]
 8022770:	4605      	mov	r5, r0
 8022772:	460c      	mov	r4, r1
 8022774:	b913      	cbnz	r3, 802277c <_fflush_r+0x10>
 8022776:	2500      	movs	r5, #0
 8022778:	4628      	mov	r0, r5
 802277a:	bd38      	pop	{r3, r4, r5, pc}
 802277c:	b118      	cbz	r0, 8022786 <_fflush_r+0x1a>
 802277e:	6a03      	ldr	r3, [r0, #32]
 8022780:	b90b      	cbnz	r3, 8022786 <_fflush_r+0x1a>
 8022782:	f7ff fa85 	bl	8021c90 <__sinit>
 8022786:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802278a:	2b00      	cmp	r3, #0
 802278c:	d0f3      	beq.n	8022776 <_fflush_r+0xa>
 802278e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8022790:	07d0      	lsls	r0, r2, #31
 8022792:	d404      	bmi.n	802279e <_fflush_r+0x32>
 8022794:	0599      	lsls	r1, r3, #22
 8022796:	d402      	bmi.n	802279e <_fflush_r+0x32>
 8022798:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802279a:	f7ff fbd2 	bl	8021f42 <__retarget_lock_acquire_recursive>
 802279e:	4628      	mov	r0, r5
 80227a0:	4621      	mov	r1, r4
 80227a2:	f7ff ff5d 	bl	8022660 <__sflush_r>
 80227a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80227a8:	07da      	lsls	r2, r3, #31
 80227aa:	4605      	mov	r5, r0
 80227ac:	d4e4      	bmi.n	8022778 <_fflush_r+0xc>
 80227ae:	89a3      	ldrh	r3, [r4, #12]
 80227b0:	059b      	lsls	r3, r3, #22
 80227b2:	d4e1      	bmi.n	8022778 <_fflush_r+0xc>
 80227b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80227b6:	f7ff fbc5 	bl	8021f44 <__retarget_lock_release_recursive>
 80227ba:	e7dd      	b.n	8022778 <_fflush_r+0xc>

080227bc <__swbuf_r>:
 80227bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80227be:	460e      	mov	r6, r1
 80227c0:	4614      	mov	r4, r2
 80227c2:	4605      	mov	r5, r0
 80227c4:	b118      	cbz	r0, 80227ce <__swbuf_r+0x12>
 80227c6:	6a03      	ldr	r3, [r0, #32]
 80227c8:	b90b      	cbnz	r3, 80227ce <__swbuf_r+0x12>
 80227ca:	f7ff fa61 	bl	8021c90 <__sinit>
 80227ce:	69a3      	ldr	r3, [r4, #24]
 80227d0:	60a3      	str	r3, [r4, #8]
 80227d2:	89a3      	ldrh	r3, [r4, #12]
 80227d4:	071a      	lsls	r2, r3, #28
 80227d6:	d525      	bpl.n	8022824 <__swbuf_r+0x68>
 80227d8:	6923      	ldr	r3, [r4, #16]
 80227da:	b31b      	cbz	r3, 8022824 <__swbuf_r+0x68>
 80227dc:	6823      	ldr	r3, [r4, #0]
 80227de:	6922      	ldr	r2, [r4, #16]
 80227e0:	1a98      	subs	r0, r3, r2
 80227e2:	6963      	ldr	r3, [r4, #20]
 80227e4:	b2f6      	uxtb	r6, r6
 80227e6:	4283      	cmp	r3, r0
 80227e8:	4637      	mov	r7, r6
 80227ea:	dc04      	bgt.n	80227f6 <__swbuf_r+0x3a>
 80227ec:	4621      	mov	r1, r4
 80227ee:	4628      	mov	r0, r5
 80227f0:	f7ff ffbc 	bl	802276c <_fflush_r>
 80227f4:	b9e0      	cbnz	r0, 8022830 <__swbuf_r+0x74>
 80227f6:	68a3      	ldr	r3, [r4, #8]
 80227f8:	3b01      	subs	r3, #1
 80227fa:	60a3      	str	r3, [r4, #8]
 80227fc:	6823      	ldr	r3, [r4, #0]
 80227fe:	1c5a      	adds	r2, r3, #1
 8022800:	6022      	str	r2, [r4, #0]
 8022802:	701e      	strb	r6, [r3, #0]
 8022804:	6962      	ldr	r2, [r4, #20]
 8022806:	1c43      	adds	r3, r0, #1
 8022808:	429a      	cmp	r2, r3
 802280a:	d004      	beq.n	8022816 <__swbuf_r+0x5a>
 802280c:	89a3      	ldrh	r3, [r4, #12]
 802280e:	07db      	lsls	r3, r3, #31
 8022810:	d506      	bpl.n	8022820 <__swbuf_r+0x64>
 8022812:	2e0a      	cmp	r6, #10
 8022814:	d104      	bne.n	8022820 <__swbuf_r+0x64>
 8022816:	4621      	mov	r1, r4
 8022818:	4628      	mov	r0, r5
 802281a:	f7ff ffa7 	bl	802276c <_fflush_r>
 802281e:	b938      	cbnz	r0, 8022830 <__swbuf_r+0x74>
 8022820:	4638      	mov	r0, r7
 8022822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022824:	4621      	mov	r1, r4
 8022826:	4628      	mov	r0, r5
 8022828:	f000 f806 	bl	8022838 <__swsetup_r>
 802282c:	2800      	cmp	r0, #0
 802282e:	d0d5      	beq.n	80227dc <__swbuf_r+0x20>
 8022830:	f04f 37ff 	mov.w	r7, #4294967295
 8022834:	e7f4      	b.n	8022820 <__swbuf_r+0x64>
	...

08022838 <__swsetup_r>:
 8022838:	b538      	push	{r3, r4, r5, lr}
 802283a:	4b2a      	ldr	r3, [pc, #168]	; (80228e4 <__swsetup_r+0xac>)
 802283c:	4605      	mov	r5, r0
 802283e:	6818      	ldr	r0, [r3, #0]
 8022840:	460c      	mov	r4, r1
 8022842:	b118      	cbz	r0, 802284c <__swsetup_r+0x14>
 8022844:	6a03      	ldr	r3, [r0, #32]
 8022846:	b90b      	cbnz	r3, 802284c <__swsetup_r+0x14>
 8022848:	f7ff fa22 	bl	8021c90 <__sinit>
 802284c:	89a3      	ldrh	r3, [r4, #12]
 802284e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022852:	0718      	lsls	r0, r3, #28
 8022854:	d422      	bmi.n	802289c <__swsetup_r+0x64>
 8022856:	06d9      	lsls	r1, r3, #27
 8022858:	d407      	bmi.n	802286a <__swsetup_r+0x32>
 802285a:	2309      	movs	r3, #9
 802285c:	602b      	str	r3, [r5, #0]
 802285e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8022862:	81a3      	strh	r3, [r4, #12]
 8022864:	f04f 30ff 	mov.w	r0, #4294967295
 8022868:	e034      	b.n	80228d4 <__swsetup_r+0x9c>
 802286a:	0758      	lsls	r0, r3, #29
 802286c:	d512      	bpl.n	8022894 <__swsetup_r+0x5c>
 802286e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8022870:	b141      	cbz	r1, 8022884 <__swsetup_r+0x4c>
 8022872:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8022876:	4299      	cmp	r1, r3
 8022878:	d002      	beq.n	8022880 <__swsetup_r+0x48>
 802287a:	4628      	mov	r0, r5
 802287c:	f7ff fbd0 	bl	8022020 <_free_r>
 8022880:	2300      	movs	r3, #0
 8022882:	6363      	str	r3, [r4, #52]	; 0x34
 8022884:	89a3      	ldrh	r3, [r4, #12]
 8022886:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802288a:	81a3      	strh	r3, [r4, #12]
 802288c:	2300      	movs	r3, #0
 802288e:	6063      	str	r3, [r4, #4]
 8022890:	6923      	ldr	r3, [r4, #16]
 8022892:	6023      	str	r3, [r4, #0]
 8022894:	89a3      	ldrh	r3, [r4, #12]
 8022896:	f043 0308 	orr.w	r3, r3, #8
 802289a:	81a3      	strh	r3, [r4, #12]
 802289c:	6923      	ldr	r3, [r4, #16]
 802289e:	b94b      	cbnz	r3, 80228b4 <__swsetup_r+0x7c>
 80228a0:	89a3      	ldrh	r3, [r4, #12]
 80228a2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80228a6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80228aa:	d003      	beq.n	80228b4 <__swsetup_r+0x7c>
 80228ac:	4621      	mov	r1, r4
 80228ae:	4628      	mov	r0, r5
 80228b0:	f000 f840 	bl	8022934 <__smakebuf_r>
 80228b4:	89a0      	ldrh	r0, [r4, #12]
 80228b6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80228ba:	f010 0301 	ands.w	r3, r0, #1
 80228be:	d00a      	beq.n	80228d6 <__swsetup_r+0x9e>
 80228c0:	2300      	movs	r3, #0
 80228c2:	60a3      	str	r3, [r4, #8]
 80228c4:	6963      	ldr	r3, [r4, #20]
 80228c6:	425b      	negs	r3, r3
 80228c8:	61a3      	str	r3, [r4, #24]
 80228ca:	6923      	ldr	r3, [r4, #16]
 80228cc:	b943      	cbnz	r3, 80228e0 <__swsetup_r+0xa8>
 80228ce:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80228d2:	d1c4      	bne.n	802285e <__swsetup_r+0x26>
 80228d4:	bd38      	pop	{r3, r4, r5, pc}
 80228d6:	0781      	lsls	r1, r0, #30
 80228d8:	bf58      	it	pl
 80228da:	6963      	ldrpl	r3, [r4, #20]
 80228dc:	60a3      	str	r3, [r4, #8]
 80228de:	e7f4      	b.n	80228ca <__swsetup_r+0x92>
 80228e0:	2000      	movs	r0, #0
 80228e2:	e7f7      	b.n	80228d4 <__swsetup_r+0x9c>
 80228e4:	240000f0 	.word	0x240000f0

080228e8 <__swhatbuf_r>:
 80228e8:	b570      	push	{r4, r5, r6, lr}
 80228ea:	460c      	mov	r4, r1
 80228ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80228f0:	2900      	cmp	r1, #0
 80228f2:	b096      	sub	sp, #88	; 0x58
 80228f4:	4615      	mov	r5, r2
 80228f6:	461e      	mov	r6, r3
 80228f8:	da0d      	bge.n	8022916 <__swhatbuf_r+0x2e>
 80228fa:	89a3      	ldrh	r3, [r4, #12]
 80228fc:	f013 0f80 	tst.w	r3, #128	; 0x80
 8022900:	f04f 0100 	mov.w	r1, #0
 8022904:	bf0c      	ite	eq
 8022906:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802290a:	2340      	movne	r3, #64	; 0x40
 802290c:	2000      	movs	r0, #0
 802290e:	6031      	str	r1, [r6, #0]
 8022910:	602b      	str	r3, [r5, #0]
 8022912:	b016      	add	sp, #88	; 0x58
 8022914:	bd70      	pop	{r4, r5, r6, pc}
 8022916:	466a      	mov	r2, sp
 8022918:	f000 f848 	bl	80229ac <_fstat_r>
 802291c:	2800      	cmp	r0, #0
 802291e:	dbec      	blt.n	80228fa <__swhatbuf_r+0x12>
 8022920:	9901      	ldr	r1, [sp, #4]
 8022922:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8022926:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802292a:	4259      	negs	r1, r3
 802292c:	4159      	adcs	r1, r3
 802292e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8022932:	e7eb      	b.n	802290c <__swhatbuf_r+0x24>

08022934 <__smakebuf_r>:
 8022934:	898b      	ldrh	r3, [r1, #12]
 8022936:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8022938:	079d      	lsls	r5, r3, #30
 802293a:	4606      	mov	r6, r0
 802293c:	460c      	mov	r4, r1
 802293e:	d507      	bpl.n	8022950 <__smakebuf_r+0x1c>
 8022940:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8022944:	6023      	str	r3, [r4, #0]
 8022946:	6123      	str	r3, [r4, #16]
 8022948:	2301      	movs	r3, #1
 802294a:	6163      	str	r3, [r4, #20]
 802294c:	b002      	add	sp, #8
 802294e:	bd70      	pop	{r4, r5, r6, pc}
 8022950:	ab01      	add	r3, sp, #4
 8022952:	466a      	mov	r2, sp
 8022954:	f7ff ffc8 	bl	80228e8 <__swhatbuf_r>
 8022958:	9900      	ldr	r1, [sp, #0]
 802295a:	4605      	mov	r5, r0
 802295c:	4630      	mov	r0, r6
 802295e:	f7ff f871 	bl	8021a44 <_malloc_r>
 8022962:	b948      	cbnz	r0, 8022978 <__smakebuf_r+0x44>
 8022964:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022968:	059a      	lsls	r2, r3, #22
 802296a:	d4ef      	bmi.n	802294c <__smakebuf_r+0x18>
 802296c:	f023 0303 	bic.w	r3, r3, #3
 8022970:	f043 0302 	orr.w	r3, r3, #2
 8022974:	81a3      	strh	r3, [r4, #12]
 8022976:	e7e3      	b.n	8022940 <__smakebuf_r+0xc>
 8022978:	89a3      	ldrh	r3, [r4, #12]
 802297a:	6020      	str	r0, [r4, #0]
 802297c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8022980:	81a3      	strh	r3, [r4, #12]
 8022982:	9b00      	ldr	r3, [sp, #0]
 8022984:	6163      	str	r3, [r4, #20]
 8022986:	9b01      	ldr	r3, [sp, #4]
 8022988:	6120      	str	r0, [r4, #16]
 802298a:	b15b      	cbz	r3, 80229a4 <__smakebuf_r+0x70>
 802298c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022990:	4630      	mov	r0, r6
 8022992:	f000 f81d 	bl	80229d0 <_isatty_r>
 8022996:	b128      	cbz	r0, 80229a4 <__smakebuf_r+0x70>
 8022998:	89a3      	ldrh	r3, [r4, #12]
 802299a:	f023 0303 	bic.w	r3, r3, #3
 802299e:	f043 0301 	orr.w	r3, r3, #1
 80229a2:	81a3      	strh	r3, [r4, #12]
 80229a4:	89a3      	ldrh	r3, [r4, #12]
 80229a6:	431d      	orrs	r5, r3
 80229a8:	81a5      	strh	r5, [r4, #12]
 80229aa:	e7cf      	b.n	802294c <__smakebuf_r+0x18>

080229ac <_fstat_r>:
 80229ac:	b538      	push	{r3, r4, r5, lr}
 80229ae:	4d07      	ldr	r5, [pc, #28]	; (80229cc <_fstat_r+0x20>)
 80229b0:	2300      	movs	r3, #0
 80229b2:	4604      	mov	r4, r0
 80229b4:	4608      	mov	r0, r1
 80229b6:	4611      	mov	r1, r2
 80229b8:	602b      	str	r3, [r5, #0]
 80229ba:	f7de fd0a 	bl	80013d2 <_fstat>
 80229be:	1c43      	adds	r3, r0, #1
 80229c0:	d102      	bne.n	80229c8 <_fstat_r+0x1c>
 80229c2:	682b      	ldr	r3, [r5, #0]
 80229c4:	b103      	cbz	r3, 80229c8 <_fstat_r+0x1c>
 80229c6:	6023      	str	r3, [r4, #0]
 80229c8:	bd38      	pop	{r3, r4, r5, pc}
 80229ca:	bf00      	nop
 80229cc:	2400290c 	.word	0x2400290c

080229d0 <_isatty_r>:
 80229d0:	b538      	push	{r3, r4, r5, lr}
 80229d2:	4d06      	ldr	r5, [pc, #24]	; (80229ec <_isatty_r+0x1c>)
 80229d4:	2300      	movs	r3, #0
 80229d6:	4604      	mov	r4, r0
 80229d8:	4608      	mov	r0, r1
 80229da:	602b      	str	r3, [r5, #0]
 80229dc:	f7de fd09 	bl	80013f2 <_isatty>
 80229e0:	1c43      	adds	r3, r0, #1
 80229e2:	d102      	bne.n	80229ea <_isatty_r+0x1a>
 80229e4:	682b      	ldr	r3, [r5, #0]
 80229e6:	b103      	cbz	r3, 80229ea <_isatty_r+0x1a>
 80229e8:	6023      	str	r3, [r4, #0]
 80229ea:	bd38      	pop	{r3, r4, r5, pc}
 80229ec:	2400290c 	.word	0x2400290c

080229f0 <_init>:
 80229f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80229f2:	bf00      	nop
 80229f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80229f6:	bc08      	pop	{r3}
 80229f8:	469e      	mov	lr, r3
 80229fa:	4770      	bx	lr

080229fc <_fini>:
 80229fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80229fe:	bf00      	nop
 8022a00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022a02:	bc08      	pop	{r3}
 8022a04:	469e      	mov	lr, r3
 8022a06:	4770      	bx	lr
