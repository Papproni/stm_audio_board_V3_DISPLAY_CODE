
stm_audio_board_v3_display.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00023888  080002d0  080002d0  000102d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001f48  08023b58  08023b58  00033b58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000356  08025aa0  08025aa0  00035aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08025df8  08025df8  00035df8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000020  08025e10  08025e10  00035e10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .init_array   00000018  08025e30  08025e30  00035e30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   0000000c  08025e48  08025e48  00035e48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000f8  24000000  08025e54  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002a10  240000f8  08025f4c  000400f8  2**2
                  ALLOC
 10 ._user_heap_stack 00006000  24002b08  08025f4c  00042b08  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000400f8  2**0
                  CONTENTS, READONLY
 12 .comment      000000c2  00000000  00000000  00040126  2**0
                  CONTENTS, READONLY
 13 .debug_info   000721dc  00000000  00000000  000401e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000dc94  00000000  00000000  000b23c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00002618  00000000  00000000  000c0058  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00001bf2  00000000  00000000  000c2670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0003ce18  00000000  00000000  000c4262  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0002fa40  00000000  00000000  0010107a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00171114  00000000  00000000  00130aba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000a89c  00000000  00000000  002a1bd0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007a  00000000  00000000  002ac46c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	; (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	; (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	; (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	240000f8 	.word	0x240000f8
 80002ec:	00000000 	.word	0x00000000
 80002f0:	08023b40 	.word	0x08023b40

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	; (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	; (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	; (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	240000fc 	.word	0x240000fc
 800030c:	08023b40 	.word	0x08023b40

08000310 <memchr>:
 8000310:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000314:	2a10      	cmp	r2, #16
 8000316:	db2b      	blt.n	8000370 <memchr+0x60>
 8000318:	f010 0f07 	tst.w	r0, #7
 800031c:	d008      	beq.n	8000330 <memchr+0x20>
 800031e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000322:	3a01      	subs	r2, #1
 8000324:	428b      	cmp	r3, r1
 8000326:	d02d      	beq.n	8000384 <memchr+0x74>
 8000328:	f010 0f07 	tst.w	r0, #7
 800032c:	b342      	cbz	r2, 8000380 <memchr+0x70>
 800032e:	d1f6      	bne.n	800031e <memchr+0xe>
 8000330:	b4f0      	push	{r4, r5, r6, r7}
 8000332:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000336:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800033a:	f022 0407 	bic.w	r4, r2, #7
 800033e:	f07f 0700 	mvns.w	r7, #0
 8000342:	2300      	movs	r3, #0
 8000344:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000348:	3c08      	subs	r4, #8
 800034a:	ea85 0501 	eor.w	r5, r5, r1
 800034e:	ea86 0601 	eor.w	r6, r6, r1
 8000352:	fa85 f547 	uadd8	r5, r5, r7
 8000356:	faa3 f587 	sel	r5, r3, r7
 800035a:	fa86 f647 	uadd8	r6, r6, r7
 800035e:	faa5 f687 	sel	r6, r5, r7
 8000362:	b98e      	cbnz	r6, 8000388 <memchr+0x78>
 8000364:	d1ee      	bne.n	8000344 <memchr+0x34>
 8000366:	bcf0      	pop	{r4, r5, r6, r7}
 8000368:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800036c:	f002 0207 	and.w	r2, r2, #7
 8000370:	b132      	cbz	r2, 8000380 <memchr+0x70>
 8000372:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000376:	3a01      	subs	r2, #1
 8000378:	ea83 0301 	eor.w	r3, r3, r1
 800037c:	b113      	cbz	r3, 8000384 <memchr+0x74>
 800037e:	d1f8      	bne.n	8000372 <memchr+0x62>
 8000380:	2000      	movs	r0, #0
 8000382:	4770      	bx	lr
 8000384:	3801      	subs	r0, #1
 8000386:	4770      	bx	lr
 8000388:	2d00      	cmp	r5, #0
 800038a:	bf06      	itte	eq
 800038c:	4635      	moveq	r5, r6
 800038e:	3803      	subeq	r0, #3
 8000390:	3807      	subne	r0, #7
 8000392:	f015 0f01 	tst.w	r5, #1
 8000396:	d107      	bne.n	80003a8 <memchr+0x98>
 8000398:	3001      	adds	r0, #1
 800039a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800039e:	bf02      	ittt	eq
 80003a0:	3001      	addeq	r0, #1
 80003a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80003a6:	3001      	addeq	r0, #1
 80003a8:	bcf0      	pop	{r4, r5, r6, r7}
 80003aa:	3801      	subs	r0, #1
 80003ac:	4770      	bx	lr
 80003ae:	bf00      	nop

080003b0 <ILI9341_Init>:
static void DC_H(void);
static void LED_H(void);

// Initialization
void ILI9341_Init(void)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	af00      	add	r7, sp, #0
	ILI9341_Reset();
 80003b4:	f000 f99d 	bl	80006f2 <ILI9341_Reset>
	ILI9341_SoftReset();
 80003b8:	f000 f9ae 	bl	8000718 <ILI9341_SoftReset>

	/* Power Control A */
	LCD_WR_REG(0xCB);
 80003bc:	20cb      	movs	r0, #203	; 0xcb
 80003be:	f000 f9c5 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 80003c2:	2039      	movs	r0, #57	; 0x39
 80003c4:	f000 f9dc 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 80003c8:	202c      	movs	r0, #44	; 0x2c
 80003ca:	f000 f9d9 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80003ce:	2000      	movs	r0, #0
 80003d0:	f000 f9d6 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 80003d4:	2034      	movs	r0, #52	; 0x34
 80003d6:	f000 f9d3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 80003da:	2002      	movs	r0, #2
 80003dc:	f000 f9d0 	bl	8000780 <LCD_WR_DATA>
	/* Power Control B */
	LCD_WR_REG(0xCF);
 80003e0:	20cf      	movs	r0, #207	; 0xcf
 80003e2:	f000 f9b3 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80003e6:	2000      	movs	r0, #0
 80003e8:	f000 f9ca 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 80003ec:	20c1      	movs	r0, #193	; 0xc1
 80003ee:	f000 f9c7 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x30);
 80003f2:	2030      	movs	r0, #48	; 0x30
 80003f4:	f000 f9c4 	bl	8000780 <LCD_WR_DATA>
	/* Driver timing control A */
	LCD_WR_REG(0xE8);
 80003f8:	20e8      	movs	r0, #232	; 0xe8
 80003fa:	f000 f9a7 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 80003fe:	2085      	movs	r0, #133	; 0x85
 8000400:	f000 f9be 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f9bb 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x78);
 800040a:	2078      	movs	r0, #120	; 0x78
 800040c:	f000 f9b8 	bl	8000780 <LCD_WR_DATA>
	/* Driver timing control B */
	LCD_WR_REG(0xEA);
 8000410:	20ea      	movs	r0, #234	; 0xea
 8000412:	f000 f99b 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8000416:	2000      	movs	r0, #0
 8000418:	f000 f9b2 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800041c:	2000      	movs	r0, #0
 800041e:	f000 f9af 	bl	8000780 <LCD_WR_DATA>
	/* Power on Sequence control */
	LCD_WR_REG(0xED);
 8000422:	20ed      	movs	r0, #237	; 0xed
 8000424:	f000 f992 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 8000428:	2064      	movs	r0, #100	; 0x64
 800042a:	f000 f9a9 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 800042e:	2003      	movs	r0, #3
 8000430:	f000 f9a6 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x12);
 8000434:	2012      	movs	r0, #18
 8000436:	f000 f9a3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x81);
 800043a:	2081      	movs	r0, #129	; 0x81
 800043c:	f000 f9a0 	bl	8000780 <LCD_WR_DATA>
	/* Pump ratio control */
	LCD_WR_REG(0xF7);
 8000440:	20f7      	movs	r0, #247	; 0xf7
 8000442:	f000 f983 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 8000446:	2020      	movs	r0, #32
 8000448:	f000 f99a 	bl	8000780 <LCD_WR_DATA>
	/* Power Control 1 */
	LCD_WR_REG(0xC0);
 800044c:	20c0      	movs	r0, #192	; 0xc0
 800044e:	f000 f97d 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 8000452:	2010      	movs	r0, #16
 8000454:	f000 f994 	bl	8000780 <LCD_WR_DATA>
	/* Power Control 2 */
	LCD_WR_REG(0xC1);
 8000458:	20c1      	movs	r0, #193	; 0xc1
 800045a:	f000 f977 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 800045e:	2010      	movs	r0, #16
 8000460:	f000 f98e 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 1 */
	LCD_WR_REG(0xC5);
 8000464:	20c5      	movs	r0, #197	; 0xc5
 8000466:	f000 f971 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x3E);
 800046a:	203e      	movs	r0, #62	; 0x3e
 800046c:	f000 f988 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 8000470:	2028      	movs	r0, #40	; 0x28
 8000472:	f000 f985 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0xC7);
 8000476:	20c7      	movs	r0, #199	; 0xc7
 8000478:	f000 f968 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x86);
 800047c:	2086      	movs	r0, #134	; 0x86
 800047e:	f000 f97f 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0x36);
 8000482:	2036      	movs	r0, #54	; 0x36
 8000484:	f000 f962 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x48);
 8000488:	2048      	movs	r0, #72	; 0x48
 800048a:	f000 f979 	bl	8000780 <LCD_WR_DATA>
	/* Pixel Format Set */
	LCD_WR_REG(0x3A);
 800048e:	203a      	movs	r0, #58	; 0x3a
 8000490:	f000 f95c 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x55);    //16bit
 8000494:	2055      	movs	r0, #85	; 0x55
 8000496:	f000 f973 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 800049a:	20b1      	movs	r0, #177	; 0xb1
 800049c:	f000 f956 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80004a0:	2000      	movs	r0, #0
 80004a2:	f000 f96d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x18);
 80004a6:	2018      	movs	r0, #24
 80004a8:	f000 f96a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x20); // Little Endian
#endif
	/* Display Function Control */
	LCD_WR_REG(0xB6);
 80004ac:	20b6      	movs	r0, #182	; 0xb6
 80004ae:	f000 f94d 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x08);
 80004b2:	2008      	movs	r0, #8
 80004b4:	f000 f964 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x82);
 80004b8:	2082      	movs	r0, #130	; 0x82
 80004ba:	f000 f961 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x27);
 80004be:	2027      	movs	r0, #39	; 0x27
 80004c0:	f000 f95e 	bl	8000780 <LCD_WR_DATA>
	/* 3GAMMA FUNCTION DISABLE */
	LCD_WR_REG(0xF2);
 80004c4:	20f2      	movs	r0, #242	; 0xf2
 80004c6:	f000 f941 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80004ca:	2000      	movs	r0, #0
 80004cc:	f000 f958 	bl	8000780 <LCD_WR_DATA>
	/* GAMMA CURVE SELECTED */
	LCD_WR_REG(0x26); //Gamma set
 80004d0:	2026      	movs	r0, #38	; 0x26
 80004d2:	f000 f93b 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x01); 	//Gamma Curve (G2.2)
 80004d6:	2001      	movs	r0, #1
 80004d8:	f000 f952 	bl	8000780 <LCD_WR_DATA>
	//Positive Gamma  Correction
	LCD_WR_REG(0xE0);
 80004dc:	20e0      	movs	r0, #224	; 0xe0
 80004de:	f000 f935 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 80004e2:	200f      	movs	r0, #15
 80004e4:	f000 f94c 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 80004e8:	2031      	movs	r0, #49	; 0x31
 80004ea:	f000 f949 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 80004ee:	202b      	movs	r0, #43	; 0x2b
 80004f0:	f000 f946 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 80004f4:	200c      	movs	r0, #12
 80004f6:	f000 f943 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 80004fa:	200e      	movs	r0, #14
 80004fc:	f000 f940 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000500:	2008      	movs	r0, #8
 8000502:	f000 f93d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x4E);
 8000506:	204e      	movs	r0, #78	; 0x4e
 8000508:	f000 f93a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xF1);
 800050c:	20f1      	movs	r0, #241	; 0xf1
 800050e:	f000 f937 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x37);
 8000512:	2037      	movs	r0, #55	; 0x37
 8000514:	f000 f934 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8000518:	2007      	movs	r0, #7
 800051a:	f000 f931 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 800051e:	2010      	movs	r0, #16
 8000520:	f000 f92e 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000524:	2003      	movs	r0, #3
 8000526:	f000 f92b 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 800052a:	200e      	movs	r0, #14
 800052c:	f000 f928 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x09);
 8000530:	2009      	movs	r0, #9
 8000532:	f000 f925 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000536:	2000      	movs	r0, #0
 8000538:	f000 f922 	bl	8000780 <LCD_WR_DATA>
	//Negative Gamma  Correction
	LCD_WR_REG(0xE1);
 800053c:	20e1      	movs	r0, #225	; 0xe1
 800053e:	f000 f905 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8000542:	2000      	movs	r0, #0
 8000544:	f000 f91c 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8000548:	200e      	movs	r0, #14
 800054a:	f000 f919 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x14);
 800054e:	2014      	movs	r0, #20
 8000550:	f000 f916 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000554:	2003      	movs	r0, #3
 8000556:	f000 f913 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 800055a:	2011      	movs	r0, #17
 800055c:	f000 f910 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8000560:	2007      	movs	r0, #7
 8000562:	f000 f90d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8000566:	2031      	movs	r0, #49	; 0x31
 8000568:	f000 f90a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 800056c:	20c1      	movs	r0, #193	; 0xc1
 800056e:	f000 f907 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x48);
 8000572:	2048      	movs	r0, #72	; 0x48
 8000574:	f000 f904 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000578:	2008      	movs	r0, #8
 800057a:	f000 f901 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 800057e:	200f      	movs	r0, #15
 8000580:	f000 f8fe 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 8000584:	200c      	movs	r0, #12
 8000586:	f000 f8fb 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 800058a:	2031      	movs	r0, #49	; 0x31
 800058c:	f000 f8f8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x36);
 8000590:	2036      	movs	r0, #54	; 0x36
 8000592:	f000 f8f5 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8000596:	200f      	movs	r0, #15
 8000598:	f000 f8f2 	bl	8000780 <LCD_WR_DATA>
	//EXIT SLEEP
	LCD_WR_REG(0x11);
 800059c:	2011      	movs	r0, #17
 800059e:	f000 f8d5 	bl	800074c <LCD_WR_REG>

	HAL_Delay(120);
 80005a2:	2078      	movs	r0, #120	; 0x78
 80005a4:	f001 fa80 	bl	8001aa8 <HAL_Delay>

	//TURN ON DISPLAY
	LCD_WR_REG(0x29);
 80005a8:	2029      	movs	r0, #41	; 0x29
 80005aa:	f000 f8cf 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x2C);
 80005ae:	202c      	movs	r0, #44	; 0x2c
 80005b0:	f000 f8e6 	bl	8000780 <LCD_WR_DATA>

	LCD_direction(ROTATE_270);
 80005b4:	2003      	movs	r0, #3
 80005b6:	f000 f8fd 	bl	80007b4 <LCD_direction>

}
 80005ba:	bf00      	nop
 80005bc:	bd80      	pop	{r7, pc}

080005be <ILI9341_SetWindow>:

void ILI9341_SetWindow(uint16_t start_x, uint16_t start_y, uint16_t end_x, uint16_t end_y)
{
 80005be:	b590      	push	{r4, r7, lr}
 80005c0:	b083      	sub	sp, #12
 80005c2:	af00      	add	r7, sp, #0
 80005c4:	4604      	mov	r4, r0
 80005c6:	4608      	mov	r0, r1
 80005c8:	4611      	mov	r1, r2
 80005ca:	461a      	mov	r2, r3
 80005cc:	4623      	mov	r3, r4
 80005ce:	80fb      	strh	r3, [r7, #6]
 80005d0:	4603      	mov	r3, r0
 80005d2:	80bb      	strh	r3, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	807b      	strh	r3, [r7, #2]
 80005d8:	4613      	mov	r3, r2
 80005da:	803b      	strh	r3, [r7, #0]
	// Set Window
	LCD_WR_REG(0x2a);
 80005dc:	202a      	movs	r0, #42	; 0x2a
 80005de:	f000 f8b5 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(start_x >> 8);
 80005e2:	88fb      	ldrh	r3, [r7, #6]
 80005e4:	0a1b      	lsrs	r3, r3, #8
 80005e6:	b29b      	uxth	r3, r3
 80005e8:	b2db      	uxtb	r3, r3
 80005ea:	4618      	mov	r0, r3
 80005ec:	f000 f8c8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_x);
 80005f0:	88fb      	ldrh	r3, [r7, #6]
 80005f2:	b2db      	uxtb	r3, r3
 80005f4:	4618      	mov	r0, r3
 80005f6:	f000 f8c3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(end_x >> 8);
 80005fa:	887b      	ldrh	r3, [r7, #2]
 80005fc:	0a1b      	lsrs	r3, r3, #8
 80005fe:	b29b      	uxth	r3, r3
 8000600:	b2db      	uxtb	r3, r3
 8000602:	4618      	mov	r0, r3
 8000604:	f000 f8bc 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_x);
 8000608:	887b      	ldrh	r3, [r7, #2]
 800060a:	b2db      	uxtb	r3, r3
 800060c:	4618      	mov	r0, r3
 800060e:	f000 f8b7 	bl	8000780 <LCD_WR_DATA>

	LCD_WR_REG(0x2b);
 8000612:	202b      	movs	r0, #43	; 0x2b
 8000614:	f000 f89a 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(start_y >> 8);
 8000618:	88bb      	ldrh	r3, [r7, #4]
 800061a:	0a1b      	lsrs	r3, r3, #8
 800061c:	b29b      	uxth	r3, r3
 800061e:	b2db      	uxtb	r3, r3
 8000620:	4618      	mov	r0, r3
 8000622:	f000 f8ad 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_y);
 8000626:	88bb      	ldrh	r3, [r7, #4]
 8000628:	b2db      	uxtb	r3, r3
 800062a:	4618      	mov	r0, r3
 800062c:	f000 f8a8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(end_y >> 8);
 8000630:	883b      	ldrh	r3, [r7, #0]
 8000632:	0a1b      	lsrs	r3, r3, #8
 8000634:	b29b      	uxth	r3, r3
 8000636:	b2db      	uxtb	r3, r3
 8000638:	4618      	mov	r0, r3
 800063a:	f000 f8a1 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_y);
 800063e:	883b      	ldrh	r3, [r7, #0]
 8000640:	b2db      	uxtb	r3, r3
 8000642:	4618      	mov	r0, r3
 8000644:	f000 f89c 	bl	8000780 <LCD_WR_DATA>

}
 8000648:	bf00      	nop
 800064a:	370c      	adds	r7, #12
 800064c:	46bd      	mov	sp, r7
 800064e:	bd90      	pop	{r4, r7, pc}

08000650 <ConvHL>:
		Error_Handler();
	}
}

static void ConvHL(uint8_t *s, int32_t l)
{
 8000650:	b480      	push	{r7}
 8000652:	b085      	sub	sp, #20
 8000654:	af00      	add	r7, sp, #0
 8000656:	6078      	str	r0, [r7, #4]
 8000658:	6039      	str	r1, [r7, #0]
	uint8_t v;
	while (l > 0) {
 800065a:	e010      	b.n	800067e <ConvHL+0x2e>
		v = *(s+1);
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	785b      	ldrb	r3, [r3, #1]
 8000660:	73fb      	strb	r3, [r7, #15]
		*(s+1) = *s;
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	3301      	adds	r3, #1
 8000666:	687a      	ldr	r2, [r7, #4]
 8000668:	7812      	ldrb	r2, [r2, #0]
 800066a:	701a      	strb	r2, [r3, #0]
		*s = v;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	7bfa      	ldrb	r2, [r7, #15]
 8000670:	701a      	strb	r2, [r3, #0]
		s += 2;
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	3302      	adds	r3, #2
 8000676:	607b      	str	r3, [r7, #4]
		l -= 2;
 8000678:	683b      	ldr	r3, [r7, #0]
 800067a:	3b02      	subs	r3, #2
 800067c:	603b      	str	r3, [r7, #0]
	while (l > 0) {
 800067e:	683b      	ldr	r3, [r7, #0]
 8000680:	2b00      	cmp	r3, #0
 8000682:	dceb      	bgt.n	800065c <ConvHL+0xc>
	}
}
 8000684:	bf00      	nop
 8000686:	bf00      	nop
 8000688:	3714      	adds	r7, #20
 800068a:	46bd      	mov	sp, r7
 800068c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000690:	4770      	bx	lr
	...

08000694 <ILI9341_DrawBitmap>:

// Call this function after ILI9341_SetWindow
// This function is non blocked
// The variable for Callback is open. User should set by himself
void ILI9341_DrawBitmap(uint16_t w, uint16_t h, uint8_t *s)
{
 8000694:	b580      	push	{r7, lr}
 8000696:	b082      	sub	sp, #8
 8000698:	af00      	add	r7, sp, #0
 800069a:	4603      	mov	r3, r0
 800069c:	603a      	str	r2, [r7, #0]
 800069e:	80fb      	strh	r3, [r7, #6]
 80006a0:	460b      	mov	r3, r1
 80006a2:	80bb      	strh	r3, [r7, #4]
	// Enable to access GRAM
	LCD_WR_REG(0x2c);
 80006a4:	202c      	movs	r0, #44	; 0x2c
 80006a6:	f000 f851 	bl	800074c <LCD_WR_REG>

	DC_H();
 80006aa:	f000 f8e7 	bl	800087c <DC_H>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
	ConvHL(s, (int32_t)w*h*2);
 80006ae:	88fb      	ldrh	r3, [r7, #6]
 80006b0:	88ba      	ldrh	r2, [r7, #4]
 80006b2:	fb02 f303 	mul.w	r3, r2, r3
 80006b6:	005b      	lsls	r3, r3, #1
 80006b8:	4619      	mov	r1, r3
 80006ba:	6838      	ldr	r0, [r7, #0]
 80006bc:	f7ff ffc8 	bl	8000650 <ConvHL>
	HAL_SPI_Transmit_DMA(&hspi5, (uint8_t*)s, w * h *2);
 80006c0:	88fa      	ldrh	r2, [r7, #6]
 80006c2:	88bb      	ldrh	r3, [r7, #4]
 80006c4:	fb12 f303 	smulbb	r3, r2, r3
 80006c8:	b29b      	uxth	r3, r3
 80006ca:	005b      	lsls	r3, r3, #1
 80006cc:	b29b      	uxth	r3, r3
 80006ce:	461a      	mov	r2, r3
 80006d0:	6839      	ldr	r1, [r7, #0]
 80006d2:	4803      	ldr	r0, [pc, #12]	; (80006e0 <ILI9341_DrawBitmap+0x4c>)
 80006d4:	f00a f992 	bl	800a9fc <HAL_SPI_Transmit_DMA>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 80006d8:	bf00      	nop
 80006da:	3708      	adds	r7, #8
 80006dc:	46bd      	mov	sp, r7
 80006de:	bd80      	pop	{r7, pc}
 80006e0:	2400028c 	.word	0x2400028c

080006e4 <ILI9341_EndOfDrawBitmap>:

// User should call it at callback
void ILI9341_EndOfDrawBitmap(void)
{
 80006e4:	b480      	push	{r7}
 80006e6:	af00      	add	r7, sp, #0
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 80006e8:	bf00      	nop
 80006ea:	46bd      	mov	sp, r7
 80006ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f0:	4770      	bx	lr

080006f2 <ILI9341_Reset>:

void ILI9341_Reset(void)
{
 80006f2:	b580      	push	{r7, lr}
 80006f4:	af00      	add	r7, sp, #0
	RESET_L();
 80006f6:	f000 f891 	bl	800081c <RESET_L>
	HAL_Delay(100);
 80006fa:	2064      	movs	r0, #100	; 0x64
 80006fc:	f001 f9d4 	bl	8001aa8 <HAL_Delay>
	RESET_H();
 8000700:	f000 f898 	bl	8000834 <RESET_H>
	HAL_Delay(100);
 8000704:	2064      	movs	r0, #100	; 0x64
 8000706:	f001 f9cf 	bl	8001aa8 <HAL_Delay>
	CS_L();
 800070a:	f000 f89f 	bl	800084c <CS_L>
	LED_H();
 800070e:	f000 f8c1 	bl	8000894 <LED_H>
}
 8000712:	bf00      	nop
 8000714:	bd80      	pop	{r7, pc}
	...

08000718 <ILI9341_SoftReset>:

void ILI9341_SoftReset(void)
{
 8000718:	b580      	push	{r7, lr}
 800071a:	b082      	sub	sp, #8
 800071c:	af00      	add	r7, sp, #0
	uint8_t cmd;
	cmd = 0x01; //Software reset
 800071e:	2301      	movs	r3, #1
 8000720:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8000722:	f000 f89f 	bl	8000864 <DC_L>
	if (HAL_SPI_Transmit(&hspi5, &cmd, 1, 1000) != HAL_OK) {
 8000726:	1df9      	adds	r1, r7, #7
 8000728:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800072c:	2201      	movs	r2, #1
 800072e:	4806      	ldr	r0, [pc, #24]	; (8000748 <ILI9341_SoftReset+0x30>)
 8000730:	f009 ff76 	bl	800a620 <HAL_SPI_Transmit>
 8000734:	4603      	mov	r3, r0
 8000736:	2b00      	cmp	r3, #0
 8000738:	d001      	beq.n	800073e <ILI9341_SoftReset+0x26>
		Error_Handler();
 800073a:	f000 fbe5 	bl	8000f08 <Error_Handler>
	}

}
 800073e:	bf00      	nop
 8000740:	3708      	adds	r7, #8
 8000742:	46bd      	mov	sp, r7
 8000744:	bd80      	pop	{r7, pc}
 8000746:	bf00      	nop
 8000748:	2400028c 	.word	0x2400028c

0800074c <LCD_WR_REG>:


void LCD_WR_REG(uint8_t data)
{
 800074c:	b580      	push	{r7, lr}
 800074e:	b082      	sub	sp, #8
 8000750:	af00      	add	r7, sp, #0
 8000752:	4603      	mov	r3, r0
 8000754:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8000756:	f000 f885 	bl	8000864 <DC_L>
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 800075a:	1df9      	adds	r1, r7, #7
 800075c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000760:	2201      	movs	r2, #1
 8000762:	4806      	ldr	r0, [pc, #24]	; (800077c <LCD_WR_REG+0x30>)
 8000764:	f009 ff5c 	bl	800a620 <HAL_SPI_Transmit>
 8000768:	4603      	mov	r3, r0
 800076a:	2b00      	cmp	r3, #0
 800076c:	d001      	beq.n	8000772 <LCD_WR_REG+0x26>
		Error_Handler();
 800076e:	f000 fbcb 	bl	8000f08 <Error_Handler>
	}
}
 8000772:	bf00      	nop
 8000774:	3708      	adds	r7, #8
 8000776:	46bd      	mov	sp, r7
 8000778:	bd80      	pop	{r7, pc}
 800077a:	bf00      	nop
 800077c:	2400028c 	.word	0x2400028c

08000780 <LCD_WR_DATA>:

static void LCD_WR_DATA(uint8_t data)
{
 8000780:	b580      	push	{r7, lr}
 8000782:	b082      	sub	sp, #8
 8000784:	af00      	add	r7, sp, #0
 8000786:	4603      	mov	r3, r0
 8000788:	71fb      	strb	r3, [r7, #7]
	DC_H();
 800078a:	f000 f877 	bl	800087c <DC_H>
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 800078e:	1df9      	adds	r1, r7, #7
 8000790:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000794:	2201      	movs	r2, #1
 8000796:	4806      	ldr	r0, [pc, #24]	; (80007b0 <LCD_WR_DATA+0x30>)
 8000798:	f009 ff42 	bl	800a620 <HAL_SPI_Transmit>
 800079c:	4603      	mov	r3, r0
 800079e:	2b00      	cmp	r3, #0
 80007a0:	d001      	beq.n	80007a6 <LCD_WR_DATA+0x26>
		Error_Handler();
 80007a2:	f000 fbb1 	bl	8000f08 <Error_Handler>
	}
}
 80007a6:	bf00      	nop
 80007a8:	3708      	adds	r7, #8
 80007aa:	46bd      	mov	sp, r7
 80007ac:	bd80      	pop	{r7, pc}
 80007ae:	bf00      	nop
 80007b0:	2400028c 	.word	0x2400028c

080007b4 <LCD_direction>:
	spiDmaTransferComplete = 1;
}
*/

static void LCD_direction(LCD_Horizontal_t direction)
{
 80007b4:	b580      	push	{r7, lr}
 80007b6:	b082      	sub	sp, #8
 80007b8:	af00      	add	r7, sp, #0
 80007ba:	4603      	mov	r3, r0
 80007bc:	71fb      	strb	r3, [r7, #7]
	switch (direction) {
 80007be:	79fb      	ldrb	r3, [r7, #7]
 80007c0:	2b03      	cmp	r3, #3
 80007c2:	d827      	bhi.n	8000814 <LCD_direction+0x60>
 80007c4:	a201      	add	r2, pc, #4	; (adr r2, 80007cc <LCD_direction+0x18>)
 80007c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007ca:	bf00      	nop
 80007cc:	080007dd 	.word	0x080007dd
 80007d0:	080007eb 	.word	0x080007eb
 80007d4:	080007f9 	.word	0x080007f9
 80007d8:	08000807 	.word	0x08000807
	case ROTATE_0:
		LCD_WR_REG(0x36);
 80007dc:	2036      	movs	r0, #54	; 0x36
 80007de:	f7ff ffb5 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x48);
 80007e2:	2048      	movs	r0, #72	; 0x48
 80007e4:	f7ff ffcc 	bl	8000780 <LCD_WR_DATA>
		break;
 80007e8:	e014      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_90:
		LCD_WR_REG(0x36);
 80007ea:	2036      	movs	r0, #54	; 0x36
 80007ec:	f7ff ffae 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x28);
 80007f0:	2028      	movs	r0, #40	; 0x28
 80007f2:	f7ff ffc5 	bl	8000780 <LCD_WR_DATA>
		break;
 80007f6:	e00d      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_180:
		LCD_WR_REG(0x36);
 80007f8:	2036      	movs	r0, #54	; 0x36
 80007fa:	f7ff ffa7 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x88);
 80007fe:	2088      	movs	r0, #136	; 0x88
 8000800:	f7ff ffbe 	bl	8000780 <LCD_WR_DATA>
		break;
 8000804:	e006      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_270:
		LCD_WR_REG(0x36);
 8000806:	2036      	movs	r0, #54	; 0x36
 8000808:	f7ff ffa0 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0xE8);
 800080c:	20e8      	movs	r0, #232	; 0xe8
 800080e:	f7ff ffb7 	bl	8000780 <LCD_WR_DATA>
		break;
 8000812:	bf00      	nop
	}
}
 8000814:	bf00      	nop
 8000816:	3708      	adds	r7, #8
 8000818:	46bd      	mov	sp, r7
 800081a:	bd80      	pop	{r7, pc}

0800081c <RESET_L>:

static void RESET_L(void)
{
 800081c:	b580      	push	{r7, lr}
 800081e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 8000820:	2200      	movs	r2, #0
 8000822:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000826:	4802      	ldr	r0, [pc, #8]	; (8000830 <RESET_L+0x14>)
 8000828:	f005 fba6 	bl	8005f78 <HAL_GPIO_WritePin>
}
 800082c:	bf00      	nop
 800082e:	bd80      	pop	{r7, pc}
 8000830:	58021800 	.word	0x58021800

08000834 <RESET_H>:

static void RESET_H(void)
{
 8000834:	b580      	push	{r7, lr}
 8000836:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_SET);
 8000838:	2201      	movs	r2, #1
 800083a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800083e:	4802      	ldr	r0, [pc, #8]	; (8000848 <RESET_H+0x14>)
 8000840:	f005 fb9a 	bl	8005f78 <HAL_GPIO_WritePin>
}
 8000844:	bf00      	nop
 8000846:	bd80      	pop	{r7, pc}
 8000848:	58021800 	.word	0x58021800

0800084c <CS_L>:

static void CS_L(void)
{
 800084c:	b580      	push	{r7, lr}
 800084e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SPI5_NSS_GPIO_Port, SPI5_NSS_Pin, GPIO_PIN_RESET);
 8000850:	2200      	movs	r2, #0
 8000852:	2140      	movs	r1, #64	; 0x40
 8000854:	4802      	ldr	r0, [pc, #8]	; (8000860 <CS_L+0x14>)
 8000856:	f005 fb8f 	bl	8005f78 <HAL_GPIO_WritePin>
}
 800085a:	bf00      	nop
 800085c:	bd80      	pop	{r7, pc}
 800085e:	bf00      	nop
 8000860:	58021400 	.word	0x58021400

08000864 <DC_L>:

static void DC_L(void)
{
 8000864:	b580      	push	{r7, lr}
 8000866:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_RESET);
 8000868:	2200      	movs	r2, #0
 800086a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800086e:	4802      	ldr	r0, [pc, #8]	; (8000878 <DC_L+0x14>)
 8000870:	f005 fb82 	bl	8005f78 <HAL_GPIO_WritePin>
}
 8000874:	bf00      	nop
 8000876:	bd80      	pop	{r7, pc}
 8000878:	58020800 	.word	0x58020800

0800087c <DC_H>:

static void DC_H(void)
{
 800087c:	b580      	push	{r7, lr}
 800087e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_SET);
 8000880:	2201      	movs	r2, #1
 8000882:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000886:	4802      	ldr	r0, [pc, #8]	; (8000890 <DC_H+0x14>)
 8000888:	f005 fb76 	bl	8005f78 <HAL_GPIO_WritePin>
}
 800088c:	bf00      	nop
 800088e:	bd80      	pop	{r7, pc}
 8000890:	58020800 	.word	0x58020800

08000894 <LED_H>:

static void LED_H(void)
{
 8000894:	b480      	push	{r7}
 8000896:	af00      	add	r7, sp, #0
	//HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
}
 8000898:	bf00      	nop
 800089a:	46bd      	mov	sp, r7
 800089c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a0:	4770      	bx	lr

080008a2 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008a2:	b580      	push	{r7, lr}
 80008a4:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80008a6:	f001 f86d 	bl	8001984 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008aa:	f000 f81d 	bl	80008e8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80008ae:	f000 fa4f 	bl	8000d50 <MX_GPIO_Init>
  MX_DMA_Init();
 80008b2:	f000 fa2d 	bl	8000d10 <MX_DMA_Init>
  MX_SPI1_Init();
 80008b6:	f000 f97f 	bl	8000bb8 <MX_SPI1_Init>
  MX_SPI5_Init();
 80008ba:	f000 f9d3 	bl	8000c64 <MX_SPI5_Init>
  MX_CRC_Init();
 80008be:	f000 f8fb 	bl	8000ab8 <MX_CRC_Init>
  MX_ADC1_Init();
 80008c2:	f000 f881 	bl	80009c8 <MX_ADC1_Init>
  MX_OCTOSPI1_Init();
 80008c6:	f000 f919 	bl	8000afc <MX_OCTOSPI1_Init>
  MX_TouchGFX_Init();
 80008ca:	f00a fd30 	bl	800b32e <MX_TouchGFX_Init>
//	  uint8_t cmd = 0x01;
//	  HAL_SPI_Transmit(&hspi5, &cmd, 1, 1000);
//  }


  ILI9341_Init();
 80008ce:	f7ff fd6f 	bl	80003b0 <ILI9341_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  MX_TouchGFX_Process();
 80008d2:	f00a fd34 	bl	800b33e <MX_TouchGFX_Process>
	  HAL_Delay(1);
 80008d6:	2001      	movs	r0, #1
 80008d8:	f001 f8e6 	bl	8001aa8 <HAL_Delay>
	  touchgfxSignalVSync();
 80008dc:	f00e fa8d 	bl	800edfa <touchgfxSignalVSync>
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80008e0:	f00a fd2d 	bl	800b33e <MX_TouchGFX_Process>
  {
 80008e4:	e7f5      	b.n	80008d2 <main+0x30>
	...

080008e8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80008e8:	b580      	push	{r7, lr}
 80008ea:	b09c      	sub	sp, #112	; 0x70
 80008ec:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80008ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80008f2:	224c      	movs	r2, #76	; 0x4c
 80008f4:	2100      	movs	r1, #0
 80008f6:	4618      	mov	r0, r3
 80008f8:	f022 fafd 	bl	8022ef6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80008fc:	1d3b      	adds	r3, r7, #4
 80008fe:	2220      	movs	r2, #32
 8000900:	2100      	movs	r1, #0
 8000902:	4618      	mov	r0, r3
 8000904:	f022 faf7 	bl	8022ef6 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8000908:	2002      	movs	r0, #2
 800090a:	f006 f9f5 	bl	8006cf8 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 800090e:	2300      	movs	r3, #0
 8000910:	603b      	str	r3, [r7, #0]
 8000912:	4b2c      	ldr	r3, [pc, #176]	; (80009c4 <SystemClock_Config+0xdc>)
 8000914:	699b      	ldr	r3, [r3, #24]
 8000916:	4a2b      	ldr	r2, [pc, #172]	; (80009c4 <SystemClock_Config+0xdc>)
 8000918:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800091c:	6193      	str	r3, [r2, #24]
 800091e:	4b29      	ldr	r3, [pc, #164]	; (80009c4 <SystemClock_Config+0xdc>)
 8000920:	699b      	ldr	r3, [r3, #24]
 8000922:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000926:	603b      	str	r3, [r7, #0]
 8000928:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 800092a:	bf00      	nop
 800092c:	4b25      	ldr	r3, [pc, #148]	; (80009c4 <SystemClock_Config+0xdc>)
 800092e:	699b      	ldr	r3, [r3, #24]
 8000930:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000934:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000938:	d1f8      	bne.n	800092c <SystemClock_Config+0x44>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800093a:	2302      	movs	r3, #2
 800093c:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 800093e:	2301      	movs	r3, #1
 8000940:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSICalibrationValue = 64;
 8000942:	2340      	movs	r3, #64	; 0x40
 8000944:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000946:	2302      	movs	r3, #2
 8000948:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800094a:	2300      	movs	r3, #0
 800094c:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 4;
 800094e:	2304      	movs	r3, #4
 8000950:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 34;
 8000952:	2322      	movs	r3, #34	; 0x22
 8000954:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 1;
 8000956:	2301      	movs	r3, #1
 8000958:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800095a:	2302      	movs	r3, #2
 800095c:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 800095e:	2302      	movs	r3, #2
 8000960:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 8000962:	230c      	movs	r3, #12
 8000964:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000966:	2300      	movs	r3, #0
 8000968:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 800096a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800096e:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000970:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000974:	4618      	mov	r0, r3
 8000976:	f006 f9f9 	bl	8006d6c <HAL_RCC_OscConfig>
 800097a:	4603      	mov	r3, r0
 800097c:	2b00      	cmp	r3, #0
 800097e:	d001      	beq.n	8000984 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000980:	f000 fac2 	bl	8000f08 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000984:	233f      	movs	r3, #63	; 0x3f
 8000986:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000988:	2303      	movs	r3, #3
 800098a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 800098c:	2300      	movs	r3, #0
 800098e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000990:	2308      	movs	r3, #8
 8000992:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000994:	2340      	movs	r3, #64	; 0x40
 8000996:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8000998:	2340      	movs	r3, #64	; 0x40
 800099a:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 800099c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009a0:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 80009a2:	2340      	movs	r3, #64	; 0x40
 80009a4:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80009a6:	1d3b      	adds	r3, r7, #4
 80009a8:	2103      	movs	r1, #3
 80009aa:	4618      	mov	r0, r3
 80009ac:	f006 fdb8 	bl	8007520 <HAL_RCC_ClockConfig>
 80009b0:	4603      	mov	r3, r0
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d001      	beq.n	80009ba <SystemClock_Config+0xd2>
  {
    Error_Handler();
 80009b6:	f000 faa7 	bl	8000f08 <Error_Handler>
  }
}
 80009ba:	bf00      	nop
 80009bc:	3770      	adds	r7, #112	; 0x70
 80009be:	46bd      	mov	sp, r7
 80009c0:	bd80      	pop	{r7, pc}
 80009c2:	bf00      	nop
 80009c4:	58024800 	.word	0x58024800

080009c8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80009c8:	b580      	push	{r7, lr}
 80009ca:	b08c      	sub	sp, #48	; 0x30
 80009cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 80009ce:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80009d2:	2200      	movs	r2, #0
 80009d4:	601a      	str	r2, [r3, #0]
 80009d6:	605a      	str	r2, [r3, #4]
 80009d8:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 80009da:	463b      	mov	r3, r7
 80009dc:	2224      	movs	r2, #36	; 0x24
 80009de:	2100      	movs	r1, #0
 80009e0:	4618      	mov	r0, r3
 80009e2:	f022 fa88 	bl	8022ef6 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80009e6:	4b31      	ldr	r3, [pc, #196]	; (8000aac <MX_ADC1_Init+0xe4>)
 80009e8:	4a31      	ldr	r2, [pc, #196]	; (8000ab0 <MX_ADC1_Init+0xe8>)
 80009ea:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 80009ec:	4b2f      	ldr	r3, [pc, #188]	; (8000aac <MX_ADC1_Init+0xe4>)
 80009ee:	2200      	movs	r2, #0
 80009f0:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 80009f2:	4b2e      	ldr	r3, [pc, #184]	; (8000aac <MX_ADC1_Init+0xe4>)
 80009f4:	2200      	movs	r2, #0
 80009f6:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80009f8:	4b2c      	ldr	r3, [pc, #176]	; (8000aac <MX_ADC1_Init+0xe4>)
 80009fa:	2200      	movs	r2, #0
 80009fc:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80009fe:	4b2b      	ldr	r3, [pc, #172]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a00:	2204      	movs	r2, #4
 8000a02:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000a04:	4b29      	ldr	r3, [pc, #164]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a06:	2200      	movs	r2, #0
 8000a08:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000a0a:	4b28      	ldr	r3, [pc, #160]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a0c:	2200      	movs	r2, #0
 8000a0e:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 8000a10:	4b26      	ldr	r3, [pc, #152]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a12:	2201      	movs	r2, #1
 8000a14:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000a16:	4b25      	ldr	r3, [pc, #148]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a18:	2200      	movs	r2, #0
 8000a1a:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000a1e:	4b23      	ldr	r3, [pc, #140]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a20:	2200      	movs	r2, #0
 8000a22:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000a24:	4b21      	ldr	r3, [pc, #132]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a26:	2200      	movs	r2, #0
 8000a28:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 8000a2a:	4b20      	ldr	r3, [pc, #128]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a2c:	2200      	movs	r2, #0
 8000a2e:	631a      	str	r2, [r3, #48]	; 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000a30:	4b1e      	ldr	r3, [pc, #120]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a32:	2200      	movs	r2, #0
 8000a34:	63da      	str	r2, [r3, #60]	; 0x3c
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000a36:	4b1d      	ldr	r3, [pc, #116]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a38:	2200      	movs	r2, #0
 8000a3a:	641a      	str	r2, [r3, #64]	; 0x40
  hadc1.Init.OversamplingMode = DISABLE;
 8000a3c:	4b1b      	ldr	r3, [pc, #108]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a3e:	2200      	movs	r2, #0
 8000a40:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000a44:	4819      	ldr	r0, [pc, #100]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a46:	f001 fa99 	bl	8001f7c <HAL_ADC_Init>
 8000a4a:	4603      	mov	r3, r0
 8000a4c:	2b00      	cmp	r3, #0
 8000a4e:	d001      	beq.n	8000a54 <MX_ADC1_Init+0x8c>
  {
    Error_Handler();
 8000a50:	f000 fa5a 	bl	8000f08 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000a54:	2300      	movs	r3, #0
 8000a56:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000a58:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a5c:	4619      	mov	r1, r3
 8000a5e:	4813      	ldr	r0, [pc, #76]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a60:	f002 fad8 	bl	8003014 <HAL_ADCEx_MultiModeConfigChannel>
 8000a64:	4603      	mov	r3, r0
 8000a66:	2b00      	cmp	r3, #0
 8000a68:	d001      	beq.n	8000a6e <MX_ADC1_Init+0xa6>
  {
    Error_Handler();
 8000a6a:	f000 fa4d 	bl	8000f08 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000a6e:	4b11      	ldr	r3, [pc, #68]	; (8000ab4 <MX_ADC1_Init+0xec>)
 8000a70:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000a72:	2306      	movs	r3, #6
 8000a74:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000a76:	2300      	movs	r3, #0
 8000a78:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000a7a:	f240 73ff 	movw	r3, #2047	; 0x7ff
 8000a7e:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000a80:	2304      	movs	r3, #4
 8000a82:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000a84:	2300      	movs	r3, #0
 8000a86:	617b      	str	r3, [r7, #20]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000a88:	2300      	movs	r3, #0
 8000a8a:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000a8e:	463b      	mov	r3, r7
 8000a90:	4619      	mov	r1, r3
 8000a92:	4806      	ldr	r0, [pc, #24]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a94:	f001 fc7a 	bl	800238c <HAL_ADC_ConfigChannel>
 8000a98:	4603      	mov	r3, r0
 8000a9a:	2b00      	cmp	r3, #0
 8000a9c:	d001      	beq.n	8000aa2 <MX_ADC1_Init+0xda>
  {
    Error_Handler();
 8000a9e:	f000 fa33 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000aa2:	bf00      	nop
 8000aa4:	3730      	adds	r7, #48	; 0x30
 8000aa6:	46bd      	mov	sp, r7
 8000aa8:	bd80      	pop	{r7, pc}
 8000aaa:	bf00      	nop
 8000aac:	24000114 	.word	0x24000114
 8000ab0:	40022000 	.word	0x40022000
 8000ab4:	0c900008 	.word	0x0c900008

08000ab8 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000abc:	4b0d      	ldr	r3, [pc, #52]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000abe:	4a0e      	ldr	r2, [pc, #56]	; (8000af8 <MX_CRC_Init+0x40>)
 8000ac0:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000ac2:	4b0c      	ldr	r3, [pc, #48]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000ac4:	2200      	movs	r2, #0
 8000ac6:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8000ac8:	4b0a      	ldr	r3, [pc, #40]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000aca:	2200      	movs	r2, #0
 8000acc:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000ace:	4b09      	ldr	r3, [pc, #36]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000ad6:	2200      	movs	r2, #0
 8000ad8:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000ada:	4b06      	ldr	r3, [pc, #24]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000adc:	2201      	movs	r2, #1
 8000ade:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000ae0:	4804      	ldr	r0, [pc, #16]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000ae2:	f002 fc89 	bl	80033f8 <HAL_CRC_Init>
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	2b00      	cmp	r3, #0
 8000aea:	d001      	beq.n	8000af0 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8000aec:	f000 fa0c 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000af0:	bf00      	nop
 8000af2:	bd80      	pop	{r7, pc}
 8000af4:	24000184 	.word	0x24000184
 8000af8:	58024c00 	.word	0x58024c00

08000afc <MX_OCTOSPI1_Init>:
  * @brief OCTOSPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_OCTOSPI1_Init(void)
{
 8000afc:	b580      	push	{r7, lr}
 8000afe:	b086      	sub	sp, #24
 8000b00:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN OCTOSPI1_Init 0 */

  /* USER CODE END OCTOSPI1_Init 0 */

  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000b02:	463b      	mov	r3, r7
 8000b04:	2200      	movs	r2, #0
 8000b06:	601a      	str	r2, [r3, #0]
 8000b08:	605a      	str	r2, [r3, #4]
 8000b0a:	609a      	str	r2, [r3, #8]
 8000b0c:	60da      	str	r2, [r3, #12]
 8000b0e:	611a      	str	r2, [r3, #16]
 8000b10:	615a      	str	r2, [r3, #20]

  /* USER CODE BEGIN OCTOSPI1_Init 1 */

  /* USER CODE END OCTOSPI1_Init 1 */
  /* OCTOSPI1 parameter configuration*/
  hospi1.Instance = OCTOSPI1;
 8000b12:	4b27      	ldr	r3, [pc, #156]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b14:	4a27      	ldr	r2, [pc, #156]	; (8000bb4 <MX_OCTOSPI1_Init+0xb8>)
 8000b16:	601a      	str	r2, [r3, #0]
  hospi1.Init.FifoThreshold = 1;
 8000b18:	4b25      	ldr	r3, [pc, #148]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b1a:	2201      	movs	r2, #1
 8000b1c:	605a      	str	r2, [r3, #4]
  hospi1.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 8000b1e:	4b24      	ldr	r3, [pc, #144]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b20:	2200      	movs	r2, #0
 8000b22:	609a      	str	r2, [r3, #8]
  hospi1.Init.MemoryType = HAL_OSPI_MEMTYPE_MICRON;
 8000b24:	4b22      	ldr	r3, [pc, #136]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b26:	2200      	movs	r2, #0
 8000b28:	60da      	str	r2, [r3, #12]
  hospi1.Init.DeviceSize = 32;
 8000b2a:	4b21      	ldr	r3, [pc, #132]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b2c:	2220      	movs	r2, #32
 8000b2e:	611a      	str	r2, [r3, #16]
  hospi1.Init.ChipSelectHighTime = 1;
 8000b30:	4b1f      	ldr	r3, [pc, #124]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b32:	2201      	movs	r2, #1
 8000b34:	615a      	str	r2, [r3, #20]
  hospi1.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 8000b36:	4b1e      	ldr	r3, [pc, #120]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b38:	2200      	movs	r2, #0
 8000b3a:	619a      	str	r2, [r3, #24]
  hospi1.Init.ClockMode = HAL_OSPI_CLOCK_MODE_0;
 8000b3c:	4b1c      	ldr	r3, [pc, #112]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b3e:	2200      	movs	r2, #0
 8000b40:	61da      	str	r2, [r3, #28]
  hospi1.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8000b42:	4b1b      	ldr	r3, [pc, #108]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b44:	2200      	movs	r2, #0
 8000b46:	621a      	str	r2, [r3, #32]
  hospi1.Init.ClockPrescaler = 1;
 8000b48:	4b19      	ldr	r3, [pc, #100]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b4a:	2201      	movs	r2, #1
 8000b4c:	625a      	str	r2, [r3, #36]	; 0x24
  hospi1.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8000b4e:	4b18      	ldr	r3, [pc, #96]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b50:	2200      	movs	r2, #0
 8000b52:	629a      	str	r2, [r3, #40]	; 0x28
  hospi1.Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 8000b54:	4b16      	ldr	r3, [pc, #88]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b56:	2200      	movs	r2, #0
 8000b58:	62da      	str	r2, [r3, #44]	; 0x2c
  hospi1.Init.ChipSelectBoundary = 0;
 8000b5a:	4b15      	ldr	r3, [pc, #84]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b5c:	2200      	movs	r2, #0
 8000b5e:	631a      	str	r2, [r3, #48]	; 0x30
  hospi1.Init.DelayBlockBypass = HAL_OSPI_DELAY_BLOCK_BYPASSED;
 8000b60:	4b13      	ldr	r3, [pc, #76]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b62:	2208      	movs	r2, #8
 8000b64:	635a      	str	r2, [r3, #52]	; 0x34
  hospi1.Init.MaxTran = 0;
 8000b66:	4b12      	ldr	r3, [pc, #72]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b68:	2200      	movs	r2, #0
 8000b6a:	639a      	str	r2, [r3, #56]	; 0x38
  hospi1.Init.Refresh = 0;
 8000b6c:	4b10      	ldr	r3, [pc, #64]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b6e:	2200      	movs	r2, #0
 8000b70:	63da      	str	r2, [r3, #60]	; 0x3c
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 8000b72:	480f      	ldr	r0, [pc, #60]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b74:	f005 fa1a 	bl	8005fac <HAL_OSPI_Init>
 8000b78:	4603      	mov	r3, r0
 8000b7a:	2b00      	cmp	r3, #0
 8000b7c:	d001      	beq.n	8000b82 <MX_OCTOSPI1_Init+0x86>
  {
    Error_Handler();
 8000b7e:	f000 f9c3 	bl	8000f08 <Error_Handler>
  }
  sOspiManagerCfg.ClkPort = 1;
 8000b82:	2301      	movs	r3, #1
 8000b84:	603b      	str	r3, [r7, #0]
  sOspiManagerCfg.NCSPort = 1;
 8000b86:	2301      	movs	r3, #1
 8000b88:	60bb      	str	r3, [r7, #8]
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000b8a:	f04f 1301 	mov.w	r3, #65537	; 0x10001
 8000b8e:	60fb      	str	r3, [r7, #12]
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000b90:	463b      	mov	r3, r7
 8000b92:	f241 3288 	movw	r2, #5000	; 0x1388
 8000b96:	4619      	mov	r1, r3
 8000b98:	4805      	ldr	r0, [pc, #20]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b9a:	f005 fad3 	bl	8006144 <HAL_OSPIM_Config>
 8000b9e:	4603      	mov	r3, r0
 8000ba0:	2b00      	cmp	r3, #0
 8000ba2:	d001      	beq.n	8000ba8 <MX_OCTOSPI1_Init+0xac>
  {
    Error_Handler();
 8000ba4:	f000 f9b0 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN OCTOSPI1_Init 2 */

  /* USER CODE END OCTOSPI1_Init 2 */

}
 8000ba8:	bf00      	nop
 8000baa:	3718      	adds	r7, #24
 8000bac:	46bd      	mov	sp, r7
 8000bae:	bd80      	pop	{r7, pc}
 8000bb0:	240001a8 	.word	0x240001a8
 8000bb4:	52005000 	.word	0x52005000

08000bb8 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000bbc:	4b27      	ldr	r3, [pc, #156]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bbe:	4a28      	ldr	r2, [pc, #160]	; (8000c60 <MX_SPI1_Init+0xa8>)
 8000bc0:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000bc2:	4b26      	ldr	r3, [pc, #152]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bc4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000bc8:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000bca:	4b24      	ldr	r3, [pc, #144]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bcc:	2200      	movs	r2, #0
 8000bce:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 8000bd0:	4b22      	ldr	r3, [pc, #136]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bd2:	2203      	movs	r2, #3
 8000bd4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000bd6:	4b21      	ldr	r3, [pc, #132]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bd8:	2200      	movs	r2, #0
 8000bda:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000bdc:	4b1f      	ldr	r3, [pc, #124]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bde:	2200      	movs	r2, #0
 8000be0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 8000be2:	4b1e      	ldr	r3, [pc, #120]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000be4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8000be8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000bea:	4b1c      	ldr	r3, [pc, #112]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bec:	2200      	movs	r2, #0
 8000bee:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000bf0:	4b1a      	ldr	r3, [pc, #104]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bf2:	2200      	movs	r2, #0
 8000bf4:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000bf6:	4b19      	ldr	r3, [pc, #100]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bf8:	2200      	movs	r2, #0
 8000bfa:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000bfc:	4b17      	ldr	r3, [pc, #92]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bfe:	2200      	movs	r2, #0
 8000c00:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 0x0;
 8000c02:	4b16      	ldr	r3, [pc, #88]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c04:	2200      	movs	r2, #0
 8000c06:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000c08:	4b14      	ldr	r3, [pc, #80]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c0a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000c0e:	635a      	str	r2, [r3, #52]	; 0x34
  hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000c10:	4b12      	ldr	r3, [pc, #72]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c12:	2200      	movs	r2, #0
 8000c14:	639a      	str	r2, [r3, #56]	; 0x38
  hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000c16:	4b11      	ldr	r3, [pc, #68]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c18:	2200      	movs	r2, #0
 8000c1a:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000c1c:	4b0f      	ldr	r3, [pc, #60]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c1e:	2200      	movs	r2, #0
 8000c20:	641a      	str	r2, [r3, #64]	; 0x40
  hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000c22:	4b0e      	ldr	r3, [pc, #56]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c24:	2200      	movs	r2, #0
 8000c26:	645a      	str	r2, [r3, #68]	; 0x44
  hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000c28:	4b0c      	ldr	r3, [pc, #48]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	649a      	str	r2, [r3, #72]	; 0x48
  hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000c2e:	4b0b      	ldr	r3, [pc, #44]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c30:	2200      	movs	r2, #0
 8000c32:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000c34:	4b09      	ldr	r3, [pc, #36]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c36:	2200      	movs	r2, #0
 8000c38:	651a      	str	r2, [r3, #80]	; 0x50
  hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000c3a:	4b08      	ldr	r3, [pc, #32]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c3c:	2200      	movs	r2, #0
 8000c3e:	655a      	str	r2, [r3, #84]	; 0x54
  hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000c40:	4b06      	ldr	r3, [pc, #24]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c42:	2200      	movs	r2, #0
 8000c44:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000c46:	4805      	ldr	r0, [pc, #20]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c48:	f009 fbc6 	bl	800a3d8 <HAL_SPI_Init>
 8000c4c:	4603      	mov	r3, r0
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	d001      	beq.n	8000c56 <MX_SPI1_Init+0x9e>
  {
    Error_Handler();
 8000c52:	f000 f959 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000c56:	bf00      	nop
 8000c58:	bd80      	pop	{r7, pc}
 8000c5a:	bf00      	nop
 8000c5c:	24000204 	.word	0x24000204
 8000c60:	40013000 	.word	0x40013000

08000c64 <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 8000c64:	b580      	push	{r7, lr}
 8000c66:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 8000c68:	4b27      	ldr	r3, [pc, #156]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c6a:	4a28      	ldr	r2, [pc, #160]	; (8000d0c <MX_SPI5_Init+0xa8>)
 8000c6c:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000c6e:	4b26      	ldr	r3, [pc, #152]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c70:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000c74:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 8000c76:	4b24      	ldr	r3, [pc, #144]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c78:	2200      	movs	r2, #0
 8000c7a:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000c7c:	4b22      	ldr	r3, [pc, #136]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c7e:	2207      	movs	r2, #7
 8000c80:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000c82:	4b21      	ldr	r3, [pc, #132]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c84:	2200      	movs	r2, #0
 8000c86:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000c88:	4b1f      	ldr	r3, [pc, #124]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 8000c8e:	4b1e      	ldr	r3, [pc, #120]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c90:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000c94:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8000c96:	4b1c      	ldr	r3, [pc, #112]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c98:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000c9c:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000c9e:	4b1a      	ldr	r3, [pc, #104]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000ca4:	4b18      	ldr	r3, [pc, #96]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000ca6:	2200      	movs	r2, #0
 8000ca8:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000caa:	4b17      	ldr	r3, [pc, #92]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cac:	2200      	movs	r2, #0
 8000cae:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 0x0;
 8000cb0:	4b15      	ldr	r3, [pc, #84]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi5.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000cb6:	4b14      	ldr	r3, [pc, #80]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cb8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000cbc:	635a      	str	r2, [r3, #52]	; 0x34
  hspi5.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000cbe:	4b12      	ldr	r3, [pc, #72]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cc0:	2200      	movs	r2, #0
 8000cc2:	639a      	str	r2, [r3, #56]	; 0x38
  hspi5.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000cc4:	4b10      	ldr	r3, [pc, #64]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi5.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000cca:	4b0f      	ldr	r3, [pc, #60]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	641a      	str	r2, [r3, #64]	; 0x40
  hspi5.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000cd0:	4b0d      	ldr	r3, [pc, #52]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	645a      	str	r2, [r3, #68]	; 0x44
  hspi5.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000cd6:	4b0c      	ldr	r3, [pc, #48]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cd8:	2200      	movs	r2, #0
 8000cda:	649a      	str	r2, [r3, #72]	; 0x48
  hspi5.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000cdc:	4b0a      	ldr	r3, [pc, #40]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cde:	2200      	movs	r2, #0
 8000ce0:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi5.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000ce2:	4b09      	ldr	r3, [pc, #36]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000ce4:	2200      	movs	r2, #0
 8000ce6:	651a      	str	r2, [r3, #80]	; 0x50
  hspi5.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000ce8:	4b07      	ldr	r3, [pc, #28]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cea:	2200      	movs	r2, #0
 8000cec:	655a      	str	r2, [r3, #84]	; 0x54
  hspi5.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000cee:	4b06      	ldr	r3, [pc, #24]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cf0:	2200      	movs	r2, #0
 8000cf2:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000cf4:	4804      	ldr	r0, [pc, #16]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cf6:	f009 fb6f 	bl	800a3d8 <HAL_SPI_Init>
 8000cfa:	4603      	mov	r3, r0
 8000cfc:	2b00      	cmp	r3, #0
 8000cfe:	d001      	beq.n	8000d04 <MX_SPI5_Init+0xa0>
  {
    Error_Handler();
 8000d00:	f000 f902 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */

  /* USER CODE END SPI5_Init 2 */

}
 8000d04:	bf00      	nop
 8000d06:	bd80      	pop	{r7, pc}
 8000d08:	2400028c 	.word	0x2400028c
 8000d0c:	40015000 	.word	0x40015000

08000d10 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000d10:	b580      	push	{r7, lr}
 8000d12:	b082      	sub	sp, #8
 8000d14:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000d16:	4b0d      	ldr	r3, [pc, #52]	; (8000d4c <MX_DMA_Init+0x3c>)
 8000d18:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000d1c:	4a0b      	ldr	r2, [pc, #44]	; (8000d4c <MX_DMA_Init+0x3c>)
 8000d1e:	f043 0301 	orr.w	r3, r3, #1
 8000d22:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000d26:	4b09      	ldr	r3, [pc, #36]	; (8000d4c <MX_DMA_Init+0x3c>)
 8000d28:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000d2c:	f003 0301 	and.w	r3, r3, #1
 8000d30:	607b      	str	r3, [r7, #4]
 8000d32:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8000d34:	2200      	movs	r2, #0
 8000d36:	2100      	movs	r1, #0
 8000d38:	200b      	movs	r0, #11
 8000d3a:	f002 fb28 	bl	800338e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8000d3e:	200b      	movs	r0, #11
 8000d40:	f002 fb3f 	bl	80033c2 <HAL_NVIC_EnableIRQ>

}
 8000d44:	bf00      	nop
 8000d46:	3708      	adds	r7, #8
 8000d48:	46bd      	mov	sp, r7
 8000d4a:	bd80      	pop	{r7, pc}
 8000d4c:	58024400 	.word	0x58024400

08000d50 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000d50:	b580      	push	{r7, lr}
 8000d52:	b08e      	sub	sp, #56	; 0x38
 8000d54:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d56:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000d5a:	2200      	movs	r2, #0
 8000d5c:	601a      	str	r2, [r3, #0]
 8000d5e:	605a      	str	r2, [r3, #4]
 8000d60:	609a      	str	r2, [r3, #8]
 8000d62:	60da      	str	r2, [r3, #12]
 8000d64:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000d66:	4b63      	ldr	r3, [pc, #396]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d68:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d6c:	4a61      	ldr	r2, [pc, #388]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d6e:	f043 0310 	orr.w	r3, r3, #16
 8000d72:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d76:	4b5f      	ldr	r3, [pc, #380]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d78:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d7c:	f003 0310 	and.w	r3, r3, #16
 8000d80:	623b      	str	r3, [r7, #32]
 8000d82:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d84:	4b5b      	ldr	r3, [pc, #364]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d86:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d8a:	4a5a      	ldr	r2, [pc, #360]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d8c:	f043 0304 	orr.w	r3, r3, #4
 8000d90:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d94:	4b57      	ldr	r3, [pc, #348]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d96:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d9a:	f003 0304 	and.w	r3, r3, #4
 8000d9e:	61fb      	str	r3, [r7, #28]
 8000da0:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000da2:	4b54      	ldr	r3, [pc, #336]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000da4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000da8:	4a52      	ldr	r2, [pc, #328]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000daa:	f043 0320 	orr.w	r3, r3, #32
 8000dae:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000db2:	4b50      	ldr	r3, [pc, #320]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000db4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000db8:	f003 0320 	and.w	r3, r3, #32
 8000dbc:	61bb      	str	r3, [r7, #24]
 8000dbe:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000dc0:	4b4c      	ldr	r3, [pc, #304]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000dc2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000dc6:	4a4b      	ldr	r2, [pc, #300]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000dc8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000dcc:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000dd0:	4b48      	ldr	r3, [pc, #288]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000dd2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000dd6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000dda:	617b      	str	r3, [r7, #20]
 8000ddc:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000dde:	4b45      	ldr	r3, [pc, #276]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000de0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000de4:	4a43      	ldr	r2, [pc, #268]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000de6:	f043 0301 	orr.w	r3, r3, #1
 8000dea:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000dee:	4b41      	ldr	r3, [pc, #260]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000df0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000df4:	f003 0301 	and.w	r3, r3, #1
 8000df8:	613b      	str	r3, [r7, #16]
 8000dfa:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000dfc:	4b3d      	ldr	r3, [pc, #244]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000dfe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e02:	4a3c      	ldr	r2, [pc, #240]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e04:	f043 0302 	orr.w	r3, r3, #2
 8000e08:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e0c:	4b39      	ldr	r3, [pc, #228]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e0e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e12:	f003 0302 	and.w	r3, r3, #2
 8000e16:	60fb      	str	r3, [r7, #12]
 8000e18:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000e1a:	4b36      	ldr	r3, [pc, #216]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e1c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e20:	4a34      	ldr	r2, [pc, #208]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e22:	f043 0308 	orr.w	r3, r3, #8
 8000e26:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e2a:	4b32      	ldr	r3, [pc, #200]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e2c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e30:	f003 0308 	and.w	r3, r3, #8
 8000e34:	60bb      	str	r3, [r7, #8]
 8000e36:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e38:	4b2e      	ldr	r3, [pc, #184]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e3a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e3e:	4a2d      	ldr	r2, [pc, #180]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e40:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e44:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e48:	4b2a      	ldr	r3, [pc, #168]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e4a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e4e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000e52:	607b      	str	r3, [r7, #4]
 8000e54:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_OK_GPIO_Port, LED_OK_Pin, GPIO_PIN_SET);
 8000e56:	2201      	movs	r2, #1
 8000e58:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000e5c:	4826      	ldr	r0, [pc, #152]	; (8000ef8 <MX_GPIO_Init+0x1a8>)
 8000e5e:	f005 f88b 	bl	8005f78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ILI9341_CS_GPIO_Port, ILI9341_CS_Pin, GPIO_PIN_SET);
 8000e62:	2201      	movs	r2, #1
 8000e64:	2140      	movs	r1, #64	; 0x40
 8000e66:	4825      	ldr	r0, [pc, #148]	; (8000efc <MX_GPIO_Init+0x1ac>)
 8000e68:	f005 f886 	bl	8005f78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ILI9341_RESET_GPIO_Port, ILI9341_RESET_Pin, GPIO_PIN_SET);
 8000e6c:	2201      	movs	r2, #1
 8000e6e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e72:	4823      	ldr	r0, [pc, #140]	; (8000f00 <MX_GPIO_Init+0x1b0>)
 8000e74:	f005 f880 	bl	8005f78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_OK_Pin */
  GPIO_InitStruct.Pin = LED_OK_Pin;
 8000e78:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000e7c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e7e:	2301      	movs	r3, #1
 8000e80:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e82:	2300      	movs	r3, #0
 8000e84:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e86:	2300      	movs	r3, #0
 8000e88:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(LED_OK_GPIO_Port, &GPIO_InitStruct);
 8000e8a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e8e:	4619      	mov	r1, r3
 8000e90:	4819      	ldr	r0, [pc, #100]	; (8000ef8 <MX_GPIO_Init+0x1a8>)
 8000e92:	f004 fec9 	bl	8005c28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_CS_Pin */
  GPIO_InitStruct.Pin = ILI9341_CS_Pin;
 8000e96:	2340      	movs	r3, #64	; 0x40
 8000e98:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e9a:	2301      	movs	r3, #1
 8000e9c:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e9e:	2301      	movs	r3, #1
 8000ea0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ea2:	2303      	movs	r3, #3
 8000ea4:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(ILI9341_CS_GPIO_Port, &GPIO_InitStruct);
 8000ea6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000eaa:	4619      	mov	r1, r3
 8000eac:	4813      	ldr	r0, [pc, #76]	; (8000efc <MX_GPIO_Init+0x1ac>)
 8000eae:	f004 febb 	bl	8005c28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_TOUCH_IQR_Pin */
  GPIO_InitStruct.Pin = ILI9341_TOUCH_IQR_Pin;
 8000eb2:	2340      	movs	r3, #64	; 0x40
 8000eb4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000eb6:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8000eba:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(ILI9341_TOUCH_IQR_GPIO_Port, &GPIO_InitStruct);
 8000ec0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000ec4:	4619      	mov	r1, r3
 8000ec6:	480f      	ldr	r0, [pc, #60]	; (8000f04 <MX_GPIO_Init+0x1b4>)
 8000ec8:	f004 feae 	bl	8005c28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_RESET_Pin */
  GPIO_InitStruct.Pin = ILI9341_RESET_Pin;
 8000ecc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ed0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000ed6:	2301      	movs	r3, #1
 8000ed8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000eda:	2303      	movs	r3, #3
 8000edc:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(ILI9341_RESET_GPIO_Port, &GPIO_InitStruct);
 8000ede:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000ee2:	4619      	mov	r1, r3
 8000ee4:	4806      	ldr	r0, [pc, #24]	; (8000f00 <MX_GPIO_Init+0x1b0>)
 8000ee6:	f004 fe9f 	bl	8005c28 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000eea:	bf00      	nop
 8000eec:	3738      	adds	r7, #56	; 0x38
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	bd80      	pop	{r7, pc}
 8000ef2:	bf00      	nop
 8000ef4:	58024400 	.word	0x58024400
 8000ef8:	58020800 	.word	0x58020800
 8000efc:	58021400 	.word	0x58021400
 8000f00:	58021800 	.word	0x58021800
 8000f04:	58020c00 	.word	0x58020c00

08000f08 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000f08:	b480      	push	{r7}
 8000f0a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000f0c:	b672      	cpsid	i
}
 8000f0e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000f10:	e7fe      	b.n	8000f10 <Error_Handler+0x8>
	...

08000f14 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000f14:	b480      	push	{r7}
 8000f16:	b083      	sub	sp, #12
 8000f18:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f1a:	4b0a      	ldr	r3, [pc, #40]	; (8000f44 <HAL_MspInit+0x30>)
 8000f1c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000f20:	4a08      	ldr	r2, [pc, #32]	; (8000f44 <HAL_MspInit+0x30>)
 8000f22:	f043 0302 	orr.w	r3, r3, #2
 8000f26:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8000f2a:	4b06      	ldr	r3, [pc, #24]	; (8000f44 <HAL_MspInit+0x30>)
 8000f2c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000f30:	f003 0302 	and.w	r3, r3, #2
 8000f34:	607b      	str	r3, [r7, #4]
 8000f36:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000f38:	bf00      	nop
 8000f3a:	370c      	adds	r7, #12
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f42:	4770      	bx	lr
 8000f44:	58024400 	.word	0x58024400

08000f48 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000f48:	b580      	push	{r7, lr}
 8000f4a:	b0bc      	sub	sp, #240	; 0xf0
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f50:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000f54:	2200      	movs	r2, #0
 8000f56:	601a      	str	r2, [r3, #0]
 8000f58:	605a      	str	r2, [r3, #4]
 8000f5a:	609a      	str	r2, [r3, #8]
 8000f5c:	60da      	str	r2, [r3, #12]
 8000f5e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000f60:	f107 0320 	add.w	r3, r7, #32
 8000f64:	22b8      	movs	r2, #184	; 0xb8
 8000f66:	2100      	movs	r1, #0
 8000f68:	4618      	mov	r0, r3
 8000f6a:	f021 ffc4 	bl	8022ef6 <memset>
  if(hadc->Instance==ADC1)
 8000f6e:	687b      	ldr	r3, [r7, #4]
 8000f70:	681b      	ldr	r3, [r3, #0]
 8000f72:	4a59      	ldr	r2, [pc, #356]	; (80010d8 <HAL_ADC_MspInit+0x190>)
 8000f74:	4293      	cmp	r3, r2
 8000f76:	f040 80ab 	bne.w	80010d0 <HAL_ADC_MspInit+0x188>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8000f7a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8000f7e:	f04f 0300 	mov.w	r3, #0
 8000f82:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.PLL2.PLL2M = 4;
 8000f86:	2304      	movs	r3, #4
 8000f88:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.PLL2.PLL2N = 12;
 8000f8a:	230c      	movs	r3, #12
 8000f8c:	62fb      	str	r3, [r7, #44]	; 0x2c
    PeriphClkInitStruct.PLL2.PLL2P = 2;
 8000f8e:	2302      	movs	r3, #2
 8000f90:	633b      	str	r3, [r7, #48]	; 0x30
    PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8000f92:	2302      	movs	r3, #2
 8000f94:	637b      	str	r3, [r7, #52]	; 0x34
    PeriphClkInitStruct.PLL2.PLL2R = 2;
 8000f96:	2302      	movs	r3, #2
 8000f98:	63bb      	str	r3, [r7, #56]	; 0x38
    PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 8000f9a:	23c0      	movs	r3, #192	; 0xc0
 8000f9c:	63fb      	str	r3, [r7, #60]	; 0x3c
    PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	643b      	str	r3, [r7, #64]	; 0x40
    PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8000fa2:	2300      	movs	r3, #0
 8000fa4:	647b      	str	r3, [r7, #68]	; 0x44
    PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000fac:	f107 0320 	add.w	r3, r7, #32
 8000fb0:	4618      	mov	r0, r3
 8000fb2:	f006 fe2b 	bl	8007c0c <HAL_RCCEx_PeriphCLKConfig>
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d001      	beq.n	8000fc0 <HAL_ADC_MspInit+0x78>
    {
      Error_Handler();
 8000fbc:	f7ff ffa4 	bl	8000f08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 8000fc0:	4b46      	ldr	r3, [pc, #280]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fc2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000fc6:	4a45      	ldr	r2, [pc, #276]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fc8:	f043 0320 	orr.w	r3, r3, #32
 8000fcc:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000fd0:	4b42      	ldr	r3, [pc, #264]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fd2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000fd6:	f003 0320 	and.w	r3, r3, #32
 8000fda:	61fb      	str	r3, [r7, #28]
 8000fdc:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000fde:	4b3f      	ldr	r3, [pc, #252]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fe0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000fe4:	4a3d      	ldr	r2, [pc, #244]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fe6:	f043 0301 	orr.w	r3, r3, #1
 8000fea:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000fee:	4b3b      	ldr	r3, [pc, #236]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000ff0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ff4:	f003 0301 	and.w	r3, r3, #1
 8000ff8:	61bb      	str	r3, [r7, #24]
 8000ffa:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ffc:	4b37      	ldr	r3, [pc, #220]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000ffe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001002:	4a36      	ldr	r2, [pc, #216]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8001004:	f043 0304 	orr.w	r3, r3, #4
 8001008:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800100c:	4b33      	ldr	r3, [pc, #204]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800100e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001012:	f003 0304 	and.w	r3, r3, #4
 8001016:	617b      	str	r3, [r7, #20]
 8001018:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800101a:	4b30      	ldr	r3, [pc, #192]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800101c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001020:	4a2e      	ldr	r2, [pc, #184]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8001022:	f043 0302 	orr.w	r3, r3, #2
 8001026:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800102a:	4b2c      	ldr	r3, [pc, #176]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800102c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001030:	f003 0302 	and.w	r3, r3, #2
 8001034:	613b      	str	r3, [r7, #16]
 8001036:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001038:	4b28      	ldr	r3, [pc, #160]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800103a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800103e:	4a27      	ldr	r2, [pc, #156]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8001040:	f043 0320 	orr.w	r3, r3, #32
 8001044:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001048:	4b24      	ldr	r3, [pc, #144]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800104a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800104e:	f003 0320 	and.w	r3, r3, #32
 8001052:	60fb      	str	r3, [r7, #12]
 8001054:	68fb      	ldr	r3, [r7, #12]
    PC4     ------> ADC1_INP4
    PB1     ------> ADC1_INP5
    PF11     ------> ADC1_INP2
    PF12     ------> ADC1_INP6
    */
    GPIO_InitStruct.Pin = POT1_Pin|POT2_Pin;
 8001056:	23c0      	movs	r3, #192	; 0xc0
 8001058:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800105c:	2303      	movs	r3, #3
 800105e:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001062:	2300      	movs	r3, #0
 8001064:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001068:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800106c:	4619      	mov	r1, r3
 800106e:	481c      	ldr	r0, [pc, #112]	; (80010e0 <HAL_ADC_MspInit+0x198>)
 8001070:	f004 fdda 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT4_Pin;
 8001074:	2310      	movs	r3, #16
 8001076:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800107a:	2303      	movs	r3, #3
 800107c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001080:	2300      	movs	r3, #0
 8001082:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(POT4_GPIO_Port, &GPIO_InitStruct);
 8001086:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800108a:	4619      	mov	r1, r3
 800108c:	4815      	ldr	r0, [pc, #84]	; (80010e4 <HAL_ADC_MspInit+0x19c>)
 800108e:	f004 fdcb 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT3_Pin;
 8001092:	2302      	movs	r3, #2
 8001094:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001098:	2303      	movs	r3, #3
 800109a:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800109e:	2300      	movs	r3, #0
 80010a0:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(POT3_GPIO_Port, &GPIO_InitStruct);
 80010a4:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80010a8:	4619      	mov	r1, r3
 80010aa:	480f      	ldr	r0, [pc, #60]	; (80010e8 <HAL_ADC_MspInit+0x1a0>)
 80010ac:	f004 fdbc 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT5_Pin|POT6_Pin;
 80010b0:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80010b4:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010b8:	2303      	movs	r3, #3
 80010ba:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010be:	2300      	movs	r3, #0
 80010c0:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010c4:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80010c8:	4619      	mov	r1, r3
 80010ca:	4808      	ldr	r0, [pc, #32]	; (80010ec <HAL_ADC_MspInit+0x1a4>)
 80010cc:	f004 fdac 	bl	8005c28 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80010d0:	bf00      	nop
 80010d2:	37f0      	adds	r7, #240	; 0xf0
 80010d4:	46bd      	mov	sp, r7
 80010d6:	bd80      	pop	{r7, pc}
 80010d8:	40022000 	.word	0x40022000
 80010dc:	58024400 	.word	0x58024400
 80010e0:	58020000 	.word	0x58020000
 80010e4:	58020800 	.word	0x58020800
 80010e8:	58020400 	.word	0x58020400
 80010ec:	58021400 	.word	0x58021400

080010f0 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 80010f0:	b480      	push	{r7}
 80010f2:	b085      	sub	sp, #20
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 80010f8:	687b      	ldr	r3, [r7, #4]
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	4a0b      	ldr	r2, [pc, #44]	; (800112c <HAL_CRC_MspInit+0x3c>)
 80010fe:	4293      	cmp	r3, r2
 8001100:	d10e      	bne.n	8001120 <HAL_CRC_MspInit+0x30>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001102:	4b0b      	ldr	r3, [pc, #44]	; (8001130 <HAL_CRC_MspInit+0x40>)
 8001104:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001108:	4a09      	ldr	r2, [pc, #36]	; (8001130 <HAL_CRC_MspInit+0x40>)
 800110a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800110e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001112:	4b07      	ldr	r3, [pc, #28]	; (8001130 <HAL_CRC_MspInit+0x40>)
 8001114:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001118:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800111c:	60fb      	str	r3, [r7, #12]
 800111e:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001120:	bf00      	nop
 8001122:	3714      	adds	r7, #20
 8001124:	46bd      	mov	sp, r7
 8001126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800112a:	4770      	bx	lr
 800112c:	58024c00 	.word	0x58024c00
 8001130:	58024400 	.word	0x58024400

08001134 <HAL_OSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspInit(OSPI_HandleTypeDef* hospi)
{
 8001134:	b580      	push	{r7, lr}
 8001136:	b0be      	sub	sp, #248	; 0xf8
 8001138:	af00      	add	r7, sp, #0
 800113a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800113c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001140:	2200      	movs	r2, #0
 8001142:	601a      	str	r2, [r3, #0]
 8001144:	605a      	str	r2, [r3, #4]
 8001146:	609a      	str	r2, [r3, #8]
 8001148:	60da      	str	r2, [r3, #12]
 800114a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800114c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001150:	22b8      	movs	r2, #184	; 0xb8
 8001152:	2100      	movs	r1, #0
 8001154:	4618      	mov	r0, r3
 8001156:	f021 fece 	bl	8022ef6 <memset>
  if(hospi->Instance==OCTOSPI1)
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	4a81      	ldr	r2, [pc, #516]	; (8001364 <HAL_OSPI_MspInit+0x230>)
 8001160:	4293      	cmp	r3, r2
 8001162:	f040 80fb 	bne.w	800135c <HAL_OSPI_MspInit+0x228>

  /* USER CODE END OCTOSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 8001166:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800116a:	f04f 0300 	mov.w	r3, #0
 800116e:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_D1HCLK;
 8001172:	2300      	movs	r3, #0
 8001174:	677b      	str	r3, [r7, #116]	; 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001176:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800117a:	4618      	mov	r0, r3
 800117c:	f006 fd46 	bl	8007c0c <HAL_RCCEx_PeriphCLKConfig>
 8001180:	4603      	mov	r3, r0
 8001182:	2b00      	cmp	r3, #0
 8001184:	d001      	beq.n	800118a <HAL_OSPI_MspInit+0x56>
    {
      Error_Handler();
 8001186:	f7ff febf 	bl	8000f08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 800118a:	4b77      	ldr	r3, [pc, #476]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 800118c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8001190:	4a75      	ldr	r2, [pc, #468]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001192:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001196:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 800119a:	4b73      	ldr	r3, [pc, #460]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 800119c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011a0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80011a4:	627b      	str	r3, [r7, #36]	; 0x24
 80011a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    __HAL_RCC_OSPI1_CLK_ENABLE();
 80011a8:	4b6f      	ldr	r3, [pc, #444]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011aa:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011ae:	4a6e      	ldr	r2, [pc, #440]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011b0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80011b4:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 80011b8:	4b6b      	ldr	r3, [pc, #428]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011ba:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011be:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80011c2:	623b      	str	r3, [r7, #32]
 80011c4:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 80011c6:	4b68      	ldr	r3, [pc, #416]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011c8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011cc:	4a66      	ldr	r2, [pc, #408]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011ce:	f043 0310 	orr.w	r3, r3, #16
 80011d2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011d6:	4b64      	ldr	r3, [pc, #400]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011d8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011dc:	f003 0310 	and.w	r3, r3, #16
 80011e0:	61fb      	str	r3, [r7, #28]
 80011e2:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80011e4:	4b60      	ldr	r3, [pc, #384]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011ea:	4a5f      	ldr	r2, [pc, #380]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011ec:	f043 0320 	orr.w	r3, r3, #32
 80011f0:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011f4:	4b5c      	ldr	r3, [pc, #368]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011f6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011fa:	f003 0320 	and.w	r3, r3, #32
 80011fe:	61bb      	str	r3, [r7, #24]
 8001200:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001202:	4b59      	ldr	r3, [pc, #356]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001204:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001208:	4a57      	ldr	r2, [pc, #348]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 800120a:	f043 0304 	orr.w	r3, r3, #4
 800120e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001212:	4b55      	ldr	r3, [pc, #340]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001214:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001218:	f003 0304 	and.w	r3, r3, #4
 800121c:	617b      	str	r3, [r7, #20]
 800121e:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001220:	4b51      	ldr	r3, [pc, #324]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001222:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001226:	4a50      	ldr	r2, [pc, #320]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001228:	f043 0301 	orr.w	r3, r3, #1
 800122c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001230:	4b4d      	ldr	r3, [pc, #308]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001232:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001236:	f003 0301 	and.w	r3, r3, #1
 800123a:	613b      	str	r3, [r7, #16]
 800123c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800123e:	4b4a      	ldr	r3, [pc, #296]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001240:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001244:	4a48      	ldr	r2, [pc, #288]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001246:	f043 0302 	orr.w	r3, r3, #2
 800124a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800124e:	4b46      	ldr	r3, [pc, #280]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001250:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001254:	f003 0302 	and.w	r3, r3, #2
 8001258:	60fb      	str	r3, [r7, #12]
 800125a:	68fb      	ldr	r3, [r7, #12]
    PC3_C     ------> OCTOSPIM_P1_IO0
    PA1     ------> OCTOSPIM_P1_IO3
    PB0     ------> OCTOSPIM_P1_IO1
    PE11     ------> OCTOSPIM_P1_NCS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800125c:	2304      	movs	r3, #4
 800125e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001262:	2302      	movs	r3, #2
 8001264:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001268:	2300      	movs	r3, #0
 800126a:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800126e:	2303      	movs	r3, #3
 8001270:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001274:	2309      	movs	r3, #9
 8001276:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800127a:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800127e:	4619      	mov	r1, r3
 8001280:	483a      	ldr	r0, [pc, #232]	; (800136c <HAL_OSPI_MspInit+0x238>)
 8001282:	f004 fcd1 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001286:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800128a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800128e:	2302      	movs	r3, #2
 8001290:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001294:	2300      	movs	r3, #0
 8001296:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800129a:	2303      	movs	r3, #3
 800129c:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80012a0:	2309      	movs	r3, #9
 80012a2:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80012a6:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80012aa:	4619      	mov	r1, r3
 80012ac:	4830      	ldr	r0, [pc, #192]	; (8001370 <HAL_OSPI_MspInit+0x23c>)
 80012ae:	f004 fcbb 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80012b2:	2308      	movs	r3, #8
 80012b4:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012b8:	2302      	movs	r3, #2
 80012ba:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012be:	2300      	movs	r3, #0
 80012c0:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012c4:	2303      	movs	r3, #3
 80012c6:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80012ca:	2309      	movs	r3, #9
 80012cc:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012d0:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80012d4:	4619      	mov	r1, r3
 80012d6:	4827      	ldr	r0, [pc, #156]	; (8001374 <HAL_OSPI_MspInit+0x240>)
 80012d8:	f004 fca6 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_1;
 80012dc:	2302      	movs	r3, #2
 80012de:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012e2:	2302      	movs	r3, #2
 80012e4:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012e8:	2300      	movs	r3, #0
 80012ea:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012ee:	2303      	movs	r3, #3
 80012f0:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80012f4:	2309      	movs	r3, #9
 80012f6:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012fa:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80012fe:	4619      	mov	r1, r3
 8001300:	481d      	ldr	r0, [pc, #116]	; (8001378 <HAL_OSPI_MspInit+0x244>)
 8001302:	f004 fc91 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001306:	2301      	movs	r3, #1
 8001308:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800130c:	2302      	movs	r3, #2
 800130e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001312:	2300      	movs	r3, #0
 8001314:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001318:	2303      	movs	r3, #3
 800131a:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF4_OCTOSPIM_P1;
 800131e:	2304      	movs	r3, #4
 8001320:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001324:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001328:	4619      	mov	r1, r3
 800132a:	4814      	ldr	r0, [pc, #80]	; (800137c <HAL_OSPI_MspInit+0x248>)
 800132c:	f004 fc7c 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001330:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001334:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001338:	2302      	movs	r3, #2
 800133a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800133e:	2300      	movs	r3, #0
 8001340:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001344:	2303      	movs	r3, #3
 8001346:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF11_OCTOSPIM_P1;
 800134a:	230b      	movs	r3, #11
 800134c:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001350:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001354:	4619      	mov	r1, r3
 8001356:	4805      	ldr	r0, [pc, #20]	; (800136c <HAL_OSPI_MspInit+0x238>)
 8001358:	f004 fc66 	bl	8005c28 <HAL_GPIO_Init>
  /* USER CODE BEGIN OCTOSPI1_MspInit 1 */

  /* USER CODE END OCTOSPI1_MspInit 1 */
  }

}
 800135c:	bf00      	nop
 800135e:	37f8      	adds	r7, #248	; 0xf8
 8001360:	46bd      	mov	sp, r7
 8001362:	bd80      	pop	{r7, pc}
 8001364:	52005000 	.word	0x52005000
 8001368:	58024400 	.word	0x58024400
 800136c:	58021000 	.word	0x58021000
 8001370:	58021400 	.word	0x58021400
 8001374:	58020800 	.word	0x58020800
 8001378:	58020000 	.word	0x58020000
 800137c:	58020400 	.word	0x58020400

08001380 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001380:	b580      	push	{r7, lr}
 8001382:	b0bc      	sub	sp, #240	; 0xf0
 8001384:	af00      	add	r7, sp, #0
 8001386:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001388:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800138c:	2200      	movs	r2, #0
 800138e:	601a      	str	r2, [r3, #0]
 8001390:	605a      	str	r2, [r3, #4]
 8001392:	609a      	str	r2, [r3, #8]
 8001394:	60da      	str	r2, [r3, #12]
 8001396:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001398:	f107 0320 	add.w	r3, r7, #32
 800139c:	22b8      	movs	r2, #184	; 0xb8
 800139e:	2100      	movs	r1, #0
 80013a0:	4618      	mov	r0, r3
 80013a2:	f021 fda8 	bl	8022ef6 <memset>
  if(hspi->Instance==SPI1)
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	681b      	ldr	r3, [r3, #0]
 80013aa:	4a9a      	ldr	r2, [pc, #616]	; (8001614 <HAL_SPI_MspInit+0x294>)
 80013ac:	4293      	cmp	r3, r2
 80013ae:	f040 80a1 	bne.w	80014f4 <HAL_SPI_MspInit+0x174>

  /* USER CODE END SPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI1;
 80013b2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80013b6:	f04f 0300 	mov.w	r3, #0
 80013ba:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.PLL3.PLL3M = 32;
 80013be:	2320      	movs	r3, #32
 80013c0:	64bb      	str	r3, [r7, #72]	; 0x48
    PeriphClkInitStruct.PLL3.PLL3N = 129;
 80013c2:	2381      	movs	r3, #129	; 0x81
 80013c4:	64fb      	str	r3, [r7, #76]	; 0x4c
    PeriphClkInitStruct.PLL3.PLL3P = 30;
 80013c6:	231e      	movs	r3, #30
 80013c8:	653b      	str	r3, [r7, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 80013ca:	2302      	movs	r3, #2
 80013cc:	657b      	str	r3, [r7, #84]	; 0x54
    PeriphClkInitStruct.PLL3.PLL3R = 2;
 80013ce:	2302      	movs	r3, #2
 80013d0:	65bb      	str	r3, [r7, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_1;
 80013d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013d6:	65fb      	str	r3, [r7, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
 80013d8:	2300      	movs	r3, #0
 80013da:	663b      	str	r3, [r7, #96]	; 0x60
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 80013dc:	2300      	movs	r3, #0
 80013de:	667b      	str	r3, [r7, #100]	; 0x64
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL3;
 80013e0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80013e4:	67fb      	str	r3, [r7, #124]	; 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013e6:	f107 0320 	add.w	r3, r7, #32
 80013ea:	4618      	mov	r0, r3
 80013ec:	f006 fc0e 	bl	8007c0c <HAL_RCCEx_PeriphCLKConfig>
 80013f0:	4603      	mov	r3, r0
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d001      	beq.n	80013fa <HAL_SPI_MspInit+0x7a>
    {
      Error_Handler();
 80013f6:	f7ff fd87 	bl	8000f08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80013fa:	4b87      	ldr	r3, [pc, #540]	; (8001618 <HAL_SPI_MspInit+0x298>)
 80013fc:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8001400:	4a85      	ldr	r2, [pc, #532]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001402:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001406:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 800140a:	4b83      	ldr	r3, [pc, #524]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800140c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8001410:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001414:	61fb      	str	r3, [r7, #28]
 8001416:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001418:	4b7f      	ldr	r3, [pc, #508]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800141a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800141e:	4a7e      	ldr	r2, [pc, #504]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001420:	f043 0301 	orr.w	r3, r3, #1
 8001424:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001428:	4b7b      	ldr	r3, [pc, #492]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800142a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800142e:	f003 0301 	and.w	r3, r3, #1
 8001432:	61bb      	str	r3, [r7, #24]
 8001434:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001436:	4b78      	ldr	r3, [pc, #480]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001438:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800143c:	4a76      	ldr	r2, [pc, #472]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800143e:	f043 0308 	orr.w	r3, r3, #8
 8001442:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001446:	4b74      	ldr	r3, [pc, #464]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001448:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800144c:	f003 0308 	and.w	r3, r3, #8
 8001450:	617b      	str	r3, [r7, #20]
 8001452:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001454:	4b70      	ldr	r3, [pc, #448]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001456:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800145a:	4a6f      	ldr	r2, [pc, #444]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800145c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001460:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001464:	4b6c      	ldr	r3, [pc, #432]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001466:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800146a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800146e:	613b      	str	r3, [r7, #16]
 8001470:	693b      	ldr	r3, [r7, #16]
    PA4     ------> SPI1_NSS
    PA5     ------> SPI1_SCK
    PD7     ------> SPI1_MOSI
    PG9     ------> SPI1_MISO
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8001472:	2330      	movs	r3, #48	; 0x30
 8001474:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001478:	2302      	movs	r3, #2
 800147a:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800147e:	2300      	movs	r3, #0
 8001480:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001484:	2300      	movs	r3, #0
 8001486:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800148a:	2305      	movs	r3, #5
 800148c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001490:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001494:	4619      	mov	r1, r3
 8001496:	4861      	ldr	r0, [pc, #388]	; (800161c <HAL_SPI_MspInit+0x29c>)
 8001498:	f004 fbc6 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 800149c:	2380      	movs	r3, #128	; 0x80
 800149e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014a2:	2302      	movs	r3, #2
 80014a4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014a8:	2300      	movs	r3, #0
 80014aa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014ae:	2300      	movs	r3, #0
 80014b0:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80014b4:	2305      	movs	r3, #5
 80014b6:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014ba:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80014be:	4619      	mov	r1, r3
 80014c0:	4857      	ldr	r0, [pc, #348]	; (8001620 <HAL_SPI_MspInit+0x2a0>)
 80014c2:	f004 fbb1 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80014c6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80014ca:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014ce:	2302      	movs	r3, #2
 80014d0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014d4:	2300      	movs	r3, #0
 80014d6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014da:	2300      	movs	r3, #0
 80014dc:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80014e0:	2305      	movs	r3, #5
 80014e2:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80014e6:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80014ea:	4619      	mov	r1, r3
 80014ec:	484d      	ldr	r0, [pc, #308]	; (8001624 <HAL_SPI_MspInit+0x2a4>)
 80014ee:	f004 fb9b 	bl	8005c28 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80014f2:	e08b      	b.n	800160c <HAL_SPI_MspInit+0x28c>
  else if(hspi->Instance==SPI5)
 80014f4:	687b      	ldr	r3, [r7, #4]
 80014f6:	681b      	ldr	r3, [r3, #0]
 80014f8:	4a4b      	ldr	r2, [pc, #300]	; (8001628 <HAL_SPI_MspInit+0x2a8>)
 80014fa:	4293      	cmp	r3, r2
 80014fc:	f040 8086 	bne.w	800160c <HAL_SPI_MspInit+0x28c>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI5;
 8001500:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001504:	f04f 0300 	mov.w	r3, #0
 8001508:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_HSI;
 800150c:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8001510:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001514:	f107 0320 	add.w	r3, r7, #32
 8001518:	4618      	mov	r0, r3
 800151a:	f006 fb77 	bl	8007c0c <HAL_RCCEx_PeriphCLKConfig>
 800151e:	4603      	mov	r3, r0
 8001520:	2b00      	cmp	r3, #0
 8001522:	d001      	beq.n	8001528 <HAL_SPI_MspInit+0x1a8>
      Error_Handler();
 8001524:	f7ff fcf0 	bl	8000f08 <Error_Handler>
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001528:	4b3b      	ldr	r3, [pc, #236]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800152a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800152e:	4a3a      	ldr	r2, [pc, #232]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001530:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001534:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8001538:	4b37      	ldr	r3, [pc, #220]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800153a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800153e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001542:	60fb      	str	r3, [r7, #12]
 8001544:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001546:	4b34      	ldr	r3, [pc, #208]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001548:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800154c:	4a32      	ldr	r2, [pc, #200]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800154e:	f043 0320 	orr.w	r3, r3, #32
 8001552:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001556:	4b30      	ldr	r3, [pc, #192]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001558:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800155c:	f003 0320 	and.w	r3, r3, #32
 8001560:	60bb      	str	r3, [r7, #8]
 8001562:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001564:	f44f 7360 	mov.w	r3, #896	; 0x380
 8001568:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800156c:	2302      	movs	r3, #2
 800156e:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001572:	2300      	movs	r3, #0
 8001574:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001578:	2300      	movs	r3, #0
 800157a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800157e:	2305      	movs	r3, #5
 8001580:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001584:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001588:	4619      	mov	r1, r3
 800158a:	4828      	ldr	r0, [pc, #160]	; (800162c <HAL_SPI_MspInit+0x2ac>)
 800158c:	f004 fb4c 	bl	8005c28 <HAL_GPIO_Init>
    hdma_spi5_tx.Instance = DMA1_Stream0;
 8001590:	4b27      	ldr	r3, [pc, #156]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 8001592:	4a28      	ldr	r2, [pc, #160]	; (8001634 <HAL_SPI_MspInit+0x2b4>)
 8001594:	601a      	str	r2, [r3, #0]
    hdma_spi5_tx.Init.Request = DMA_REQUEST_SPI5_TX;
 8001596:	4b26      	ldr	r3, [pc, #152]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 8001598:	2256      	movs	r2, #86	; 0x56
 800159a:	605a      	str	r2, [r3, #4]
    hdma_spi5_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800159c:	4b24      	ldr	r3, [pc, #144]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 800159e:	2240      	movs	r2, #64	; 0x40
 80015a0:	609a      	str	r2, [r3, #8]
    hdma_spi5_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80015a2:	4b23      	ldr	r3, [pc, #140]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015a4:	2200      	movs	r2, #0
 80015a6:	60da      	str	r2, [r3, #12]
    hdma_spi5_tx.Init.MemInc = DMA_MINC_ENABLE;
 80015a8:	4b21      	ldr	r3, [pc, #132]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015aa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80015ae:	611a      	str	r2, [r3, #16]
    hdma_spi5_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80015b0:	4b1f      	ldr	r3, [pc, #124]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015b2:	2200      	movs	r2, #0
 80015b4:	615a      	str	r2, [r3, #20]
    hdma_spi5_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80015b6:	4b1e      	ldr	r3, [pc, #120]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015b8:	2200      	movs	r2, #0
 80015ba:	619a      	str	r2, [r3, #24]
    hdma_spi5_tx.Init.Mode = DMA_NORMAL;
 80015bc:	4b1c      	ldr	r3, [pc, #112]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015be:	2200      	movs	r2, #0
 80015c0:	61da      	str	r2, [r3, #28]
    hdma_spi5_tx.Init.Priority = DMA_PRIORITY_LOW;
 80015c2:	4b1b      	ldr	r3, [pc, #108]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015c4:	2200      	movs	r2, #0
 80015c6:	621a      	str	r2, [r3, #32]
    hdma_spi5_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 80015c8:	4b19      	ldr	r3, [pc, #100]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015ca:	2204      	movs	r2, #4
 80015cc:	625a      	str	r2, [r3, #36]	; 0x24
    hdma_spi5_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 80015ce:	4b18      	ldr	r3, [pc, #96]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015d0:	2203      	movs	r2, #3
 80015d2:	629a      	str	r2, [r3, #40]	; 0x28
    hdma_spi5_tx.Init.MemBurst = DMA_MBURST_SINGLE;
 80015d4:	4b16      	ldr	r3, [pc, #88]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015d6:	2200      	movs	r2, #0
 80015d8:	62da      	str	r2, [r3, #44]	; 0x2c
    hdma_spi5_tx.Init.PeriphBurst = DMA_PBURST_SINGLE;
 80015da:	4b15      	ldr	r3, [pc, #84]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015dc:	2200      	movs	r2, #0
 80015de:	631a      	str	r2, [r3, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_spi5_tx) != HAL_OK)
 80015e0:	4813      	ldr	r0, [pc, #76]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015e2:	f001 fffb 	bl	80035dc <HAL_DMA_Init>
 80015e6:	4603      	mov	r3, r0
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d001      	beq.n	80015f0 <HAL_SPI_MspInit+0x270>
      Error_Handler();
 80015ec:	f7ff fc8c 	bl	8000f08 <Error_Handler>
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi5_tx);
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	4a0f      	ldr	r2, [pc, #60]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015f4:	679a      	str	r2, [r3, #120]	; 0x78
 80015f6:	4a0e      	ldr	r2, [pc, #56]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_NVIC_SetPriority(SPI5_IRQn, 0, 0);
 80015fc:	2200      	movs	r2, #0
 80015fe:	2100      	movs	r1, #0
 8001600:	2055      	movs	r0, #85	; 0x55
 8001602:	f001 fec4 	bl	800338e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI5_IRQn);
 8001606:	2055      	movs	r0, #85	; 0x55
 8001608:	f001 fedb 	bl	80033c2 <HAL_NVIC_EnableIRQ>
}
 800160c:	bf00      	nop
 800160e:	37f0      	adds	r7, #240	; 0xf0
 8001610:	46bd      	mov	sp, r7
 8001612:	bd80      	pop	{r7, pc}
 8001614:	40013000 	.word	0x40013000
 8001618:	58024400 	.word	0x58024400
 800161c:	58020000 	.word	0x58020000
 8001620:	58020c00 	.word	0x58020c00
 8001624:	58021800 	.word	0x58021800
 8001628:	40015000 	.word	0x40015000
 800162c:	58021400 	.word	0x58021400
 8001630:	24000314 	.word	0x24000314
 8001634:	40020010 	.word	0x40020010

08001638 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001638:	b480      	push	{r7}
 800163a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800163c:	e7fe      	b.n	800163c <NMI_Handler+0x4>

0800163e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800163e:	b480      	push	{r7}
 8001640:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001642:	e7fe      	b.n	8001642 <HardFault_Handler+0x4>

08001644 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001644:	b480      	push	{r7}
 8001646:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001648:	e7fe      	b.n	8001648 <MemManage_Handler+0x4>

0800164a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800164a:	b480      	push	{r7}
 800164c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800164e:	e7fe      	b.n	800164e <BusFault_Handler+0x4>

08001650 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001650:	b480      	push	{r7}
 8001652:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001654:	e7fe      	b.n	8001654 <UsageFault_Handler+0x4>

08001656 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001656:	b480      	push	{r7}
 8001658:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800165a:	bf00      	nop
 800165c:	46bd      	mov	sp, r7
 800165e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001662:	4770      	bx	lr

08001664 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001664:	b480      	push	{r7}
 8001666:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001668:	bf00      	nop
 800166a:	46bd      	mov	sp, r7
 800166c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001670:	4770      	bx	lr

08001672 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001672:	b480      	push	{r7}
 8001674:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001676:	bf00      	nop
 8001678:	46bd      	mov	sp, r7
 800167a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800167e:	4770      	bx	lr

08001680 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001680:	b580      	push	{r7, lr}
 8001682:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001684:	f000 f9f0 	bl	8001a68 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001688:	bf00      	nop
 800168a:	bd80      	pop	{r7, pc}

0800168c <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 800168c:	b580      	push	{r7, lr}
 800168e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi5_tx);
 8001690:	4802      	ldr	r0, [pc, #8]	; (800169c <DMA1_Stream0_IRQHandler+0x10>)
 8001692:	f002 ffab 	bl	80045ec <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 8001696:	bf00      	nop
 8001698:	bd80      	pop	{r7, pc}
 800169a:	bf00      	nop
 800169c:	24000314 	.word	0x24000314

080016a0 <SPI5_IRQHandler>:

/**
  * @brief This function handles SPI5 global interrupt.
  */
void SPI5_IRQHandler(void)
{
 80016a0:	b580      	push	{r7, lr}
 80016a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI5_IRQn 0 */

  /* USER CODE END SPI5_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi5);
 80016a4:	4802      	ldr	r0, [pc, #8]	; (80016b0 <SPI5_IRQHandler+0x10>)
 80016a6:	f009 faeb 	bl	800ac80 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI5_IRQn 1 */

  /* USER CODE END SPI5_IRQn 1 */
}
 80016aa:	bf00      	nop
 80016ac:	bd80      	pop	{r7, pc}
 80016ae:	bf00      	nop
 80016b0:	2400028c 	.word	0x2400028c

080016b4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80016b4:	b480      	push	{r7}
 80016b6:	af00      	add	r7, sp, #0
  return 1;
 80016b8:	2301      	movs	r3, #1
}
 80016ba:	4618      	mov	r0, r3
 80016bc:	46bd      	mov	sp, r7
 80016be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016c2:	4770      	bx	lr

080016c4 <_kill>:

int _kill(int pid, int sig)
{
 80016c4:	b580      	push	{r7, lr}
 80016c6:	b082      	sub	sp, #8
 80016c8:	af00      	add	r7, sp, #0
 80016ca:	6078      	str	r0, [r7, #4]
 80016cc:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80016ce:	f021 fcb5 	bl	802303c <__errno>
 80016d2:	4603      	mov	r3, r0
 80016d4:	2216      	movs	r2, #22
 80016d6:	601a      	str	r2, [r3, #0]
  return -1;
 80016d8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80016dc:	4618      	mov	r0, r3
 80016de:	3708      	adds	r7, #8
 80016e0:	46bd      	mov	sp, r7
 80016e2:	bd80      	pop	{r7, pc}

080016e4 <_exit>:

void _exit (int status)
{
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b082      	sub	sp, #8
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80016ec:	f04f 31ff 	mov.w	r1, #4294967295
 80016f0:	6878      	ldr	r0, [r7, #4]
 80016f2:	f7ff ffe7 	bl	80016c4 <_kill>
  while (1) {}    /* Make sure we hang here */
 80016f6:	e7fe      	b.n	80016f6 <_exit+0x12>

080016f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80016f8:	b580      	push	{r7, lr}
 80016fa:	b086      	sub	sp, #24
 80016fc:	af00      	add	r7, sp, #0
 80016fe:	60f8      	str	r0, [r7, #12]
 8001700:	60b9      	str	r1, [r7, #8]
 8001702:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001704:	2300      	movs	r3, #0
 8001706:	617b      	str	r3, [r7, #20]
 8001708:	e00a      	b.n	8001720 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800170a:	f3af 8000 	nop.w
 800170e:	4601      	mov	r1, r0
 8001710:	68bb      	ldr	r3, [r7, #8]
 8001712:	1c5a      	adds	r2, r3, #1
 8001714:	60ba      	str	r2, [r7, #8]
 8001716:	b2ca      	uxtb	r2, r1
 8001718:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800171a:	697b      	ldr	r3, [r7, #20]
 800171c:	3301      	adds	r3, #1
 800171e:	617b      	str	r3, [r7, #20]
 8001720:	697a      	ldr	r2, [r7, #20]
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	429a      	cmp	r2, r3
 8001726:	dbf0      	blt.n	800170a <_read+0x12>
  }

  return len;
 8001728:	687b      	ldr	r3, [r7, #4]
}
 800172a:	4618      	mov	r0, r3
 800172c:	3718      	adds	r7, #24
 800172e:	46bd      	mov	sp, r7
 8001730:	bd80      	pop	{r7, pc}

08001732 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001732:	b580      	push	{r7, lr}
 8001734:	b086      	sub	sp, #24
 8001736:	af00      	add	r7, sp, #0
 8001738:	60f8      	str	r0, [r7, #12]
 800173a:	60b9      	str	r1, [r7, #8]
 800173c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800173e:	2300      	movs	r3, #0
 8001740:	617b      	str	r3, [r7, #20]
 8001742:	e009      	b.n	8001758 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001744:	68bb      	ldr	r3, [r7, #8]
 8001746:	1c5a      	adds	r2, r3, #1
 8001748:	60ba      	str	r2, [r7, #8]
 800174a:	781b      	ldrb	r3, [r3, #0]
 800174c:	4618      	mov	r0, r3
 800174e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001752:	697b      	ldr	r3, [r7, #20]
 8001754:	3301      	adds	r3, #1
 8001756:	617b      	str	r3, [r7, #20]
 8001758:	697a      	ldr	r2, [r7, #20]
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	429a      	cmp	r2, r3
 800175e:	dbf1      	blt.n	8001744 <_write+0x12>
  }
  return len;
 8001760:	687b      	ldr	r3, [r7, #4]
}
 8001762:	4618      	mov	r0, r3
 8001764:	3718      	adds	r7, #24
 8001766:	46bd      	mov	sp, r7
 8001768:	bd80      	pop	{r7, pc}

0800176a <_close>:

int _close(int file)
{
 800176a:	b480      	push	{r7}
 800176c:	b083      	sub	sp, #12
 800176e:	af00      	add	r7, sp, #0
 8001770:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001772:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001776:	4618      	mov	r0, r3
 8001778:	370c      	adds	r7, #12
 800177a:	46bd      	mov	sp, r7
 800177c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001780:	4770      	bx	lr

08001782 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001782:	b480      	push	{r7}
 8001784:	b083      	sub	sp, #12
 8001786:	af00      	add	r7, sp, #0
 8001788:	6078      	str	r0, [r7, #4]
 800178a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800178c:	683b      	ldr	r3, [r7, #0]
 800178e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001792:	605a      	str	r2, [r3, #4]
  return 0;
 8001794:	2300      	movs	r3, #0
}
 8001796:	4618      	mov	r0, r3
 8001798:	370c      	adds	r7, #12
 800179a:	46bd      	mov	sp, r7
 800179c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a0:	4770      	bx	lr

080017a2 <_isatty>:

int _isatty(int file)
{
 80017a2:	b480      	push	{r7}
 80017a4:	b083      	sub	sp, #12
 80017a6:	af00      	add	r7, sp, #0
 80017a8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80017aa:	2301      	movs	r3, #1
}
 80017ac:	4618      	mov	r0, r3
 80017ae:	370c      	adds	r7, #12
 80017b0:	46bd      	mov	sp, r7
 80017b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017b6:	4770      	bx	lr

080017b8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80017b8:	b480      	push	{r7}
 80017ba:	b085      	sub	sp, #20
 80017bc:	af00      	add	r7, sp, #0
 80017be:	60f8      	str	r0, [r7, #12]
 80017c0:	60b9      	str	r1, [r7, #8]
 80017c2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80017c4:	2300      	movs	r3, #0
}
 80017c6:	4618      	mov	r0, r3
 80017c8:	3714      	adds	r7, #20
 80017ca:	46bd      	mov	sp, r7
 80017cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017d0:	4770      	bx	lr
	...

080017d4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80017d4:	b580      	push	{r7, lr}
 80017d6:	b086      	sub	sp, #24
 80017d8:	af00      	add	r7, sp, #0
 80017da:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80017dc:	4a14      	ldr	r2, [pc, #80]	; (8001830 <_sbrk+0x5c>)
 80017de:	4b15      	ldr	r3, [pc, #84]	; (8001834 <_sbrk+0x60>)
 80017e0:	1ad3      	subs	r3, r2, r3
 80017e2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80017e4:	697b      	ldr	r3, [r7, #20]
 80017e6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80017e8:	4b13      	ldr	r3, [pc, #76]	; (8001838 <_sbrk+0x64>)
 80017ea:	681b      	ldr	r3, [r3, #0]
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	d102      	bne.n	80017f6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80017f0:	4b11      	ldr	r3, [pc, #68]	; (8001838 <_sbrk+0x64>)
 80017f2:	4a12      	ldr	r2, [pc, #72]	; (800183c <_sbrk+0x68>)
 80017f4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80017f6:	4b10      	ldr	r3, [pc, #64]	; (8001838 <_sbrk+0x64>)
 80017f8:	681a      	ldr	r2, [r3, #0]
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	4413      	add	r3, r2
 80017fe:	693a      	ldr	r2, [r7, #16]
 8001800:	429a      	cmp	r2, r3
 8001802:	d207      	bcs.n	8001814 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001804:	f021 fc1a 	bl	802303c <__errno>
 8001808:	4603      	mov	r3, r0
 800180a:	220c      	movs	r2, #12
 800180c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800180e:	f04f 33ff 	mov.w	r3, #4294967295
 8001812:	e009      	b.n	8001828 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001814:	4b08      	ldr	r3, [pc, #32]	; (8001838 <_sbrk+0x64>)
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800181a:	4b07      	ldr	r3, [pc, #28]	; (8001838 <_sbrk+0x64>)
 800181c:	681a      	ldr	r2, [r3, #0]
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	4413      	add	r3, r2
 8001822:	4a05      	ldr	r2, [pc, #20]	; (8001838 <_sbrk+0x64>)
 8001824:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001826:	68fb      	ldr	r3, [r7, #12]
}
 8001828:	4618      	mov	r0, r3
 800182a:	3718      	adds	r7, #24
 800182c:	46bd      	mov	sp, r7
 800182e:	bd80      	pop	{r7, pc}
 8001830:	24050000 	.word	0x24050000
 8001834:	00004000 	.word	0x00004000
 8001838:	2400038c 	.word	0x2400038c
 800183c:	24002b08 	.word	0x24002b08

08001840 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001840:	b480      	push	{r7}
 8001842:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8001844:	4b32      	ldr	r3, [pc, #200]	; (8001910 <SystemInit+0xd0>)
 8001846:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800184a:	4a31      	ldr	r2, [pc, #196]	; (8001910 <SystemInit+0xd0>)
 800184c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001850:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8001854:	4b2f      	ldr	r3, [pc, #188]	; (8001914 <SystemInit+0xd4>)
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	f003 030f 	and.w	r3, r3, #15
 800185c:	2b06      	cmp	r3, #6
 800185e:	d807      	bhi.n	8001870 <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8001860:	4b2c      	ldr	r3, [pc, #176]	; (8001914 <SystemInit+0xd4>)
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	f023 030f 	bic.w	r3, r3, #15
 8001868:	4a2a      	ldr	r2, [pc, #168]	; (8001914 <SystemInit+0xd4>)
 800186a:	f043 0307 	orr.w	r3, r3, #7
 800186e:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 8001870:	4b29      	ldr	r3, [pc, #164]	; (8001918 <SystemInit+0xd8>)
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	4a28      	ldr	r2, [pc, #160]	; (8001918 <SystemInit+0xd8>)
 8001876:	f043 0301 	orr.w	r3, r3, #1
 800187a:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800187c:	4b26      	ldr	r3, [pc, #152]	; (8001918 <SystemInit+0xd8>)
 800187e:	2200      	movs	r2, #0
 8001880:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 8001882:	4b25      	ldr	r3, [pc, #148]	; (8001918 <SystemInit+0xd8>)
 8001884:	681a      	ldr	r2, [r3, #0]
 8001886:	4924      	ldr	r1, [pc, #144]	; (8001918 <SystemInit+0xd8>)
 8001888:	4b24      	ldr	r3, [pc, #144]	; (800191c <SystemInit+0xdc>)
 800188a:	4013      	ands	r3, r2
 800188c:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 800188e:	4b21      	ldr	r3, [pc, #132]	; (8001914 <SystemInit+0xd4>)
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	f003 0308 	and.w	r3, r3, #8
 8001896:	2b00      	cmp	r3, #0
 8001898:	d007      	beq.n	80018aa <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 800189a:	4b1e      	ldr	r3, [pc, #120]	; (8001914 <SystemInit+0xd4>)
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	f023 030f 	bic.w	r3, r3, #15
 80018a2:	4a1c      	ldr	r2, [pc, #112]	; (8001914 <SystemInit+0xd4>)
 80018a4:	f043 0307 	orr.w	r3, r3, #7
 80018a8:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 80018aa:	4b1b      	ldr	r3, [pc, #108]	; (8001918 <SystemInit+0xd8>)
 80018ac:	2200      	movs	r2, #0
 80018ae:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 80018b0:	4b19      	ldr	r3, [pc, #100]	; (8001918 <SystemInit+0xd8>)
 80018b2:	2200      	movs	r2, #0
 80018b4:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 80018b6:	4b18      	ldr	r3, [pc, #96]	; (8001918 <SystemInit+0xd8>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 80018bc:	4b16      	ldr	r3, [pc, #88]	; (8001918 <SystemInit+0xd8>)
 80018be:	4a18      	ldr	r2, [pc, #96]	; (8001920 <SystemInit+0xe0>)
 80018c0:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 80018c2:	4b15      	ldr	r3, [pc, #84]	; (8001918 <SystemInit+0xd8>)
 80018c4:	4a17      	ldr	r2, [pc, #92]	; (8001924 <SystemInit+0xe4>)
 80018c6:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 80018c8:	4b13      	ldr	r3, [pc, #76]	; (8001918 <SystemInit+0xd8>)
 80018ca:	4a17      	ldr	r2, [pc, #92]	; (8001928 <SystemInit+0xe8>)
 80018cc:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80018ce:	4b12      	ldr	r3, [pc, #72]	; (8001918 <SystemInit+0xd8>)
 80018d0:	2200      	movs	r2, #0
 80018d2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 80018d4:	4b10      	ldr	r3, [pc, #64]	; (8001918 <SystemInit+0xd8>)
 80018d6:	4a14      	ldr	r2, [pc, #80]	; (8001928 <SystemInit+0xe8>)
 80018d8:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 80018da:	4b0f      	ldr	r3, [pc, #60]	; (8001918 <SystemInit+0xd8>)
 80018dc:	2200      	movs	r2, #0
 80018de:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 80018e0:	4b0d      	ldr	r3, [pc, #52]	; (8001918 <SystemInit+0xd8>)
 80018e2:	4a11      	ldr	r2, [pc, #68]	; (8001928 <SystemInit+0xe8>)
 80018e4:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 80018e6:	4b0c      	ldr	r3, [pc, #48]	; (8001918 <SystemInit+0xd8>)
 80018e8:	2200      	movs	r2, #0
 80018ea:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 80018ec:	4b0a      	ldr	r3, [pc, #40]	; (8001918 <SystemInit+0xd8>)
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	4a09      	ldr	r2, [pc, #36]	; (8001918 <SystemInit+0xd8>)
 80018f2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018f6:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 80018f8:	4b07      	ldr	r3, [pc, #28]	; (8001918 <SystemInit+0xd8>)
 80018fa:	2200      	movs	r2, #0
 80018fc:	661a      	str	r2, [r3, #96]	; 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 80018fe:	4b0b      	ldr	r3, [pc, #44]	; (800192c <SystemInit+0xec>)
 8001900:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8001904:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8001906:	bf00      	nop
 8001908:	46bd      	mov	sp, r7
 800190a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800190e:	4770      	bx	lr
 8001910:	e000ed00 	.word	0xe000ed00
 8001914:	52002000 	.word	0x52002000
 8001918:	58024400 	.word	0x58024400
 800191c:	eaf6ed7f 	.word	0xeaf6ed7f
 8001920:	02020200 	.word	0x02020200
 8001924:	01ff0000 	.word	0x01ff0000
 8001928:	01010280 	.word	0x01010280
 800192c:	52004000 	.word	0x52004000

08001930 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8001930:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001968 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8001934:	f7ff ff84 	bl	8001840 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001938:	480c      	ldr	r0, [pc, #48]	; (800196c <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800193a:	490d      	ldr	r1, [pc, #52]	; (8001970 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 800193c:	4a0d      	ldr	r2, [pc, #52]	; (8001974 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800193e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001940:	e002      	b.n	8001948 <LoopCopyDataInit>

08001942 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001942:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001944:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001946:	3304      	adds	r3, #4

08001948 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001948:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800194a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800194c:	d3f9      	bcc.n	8001942 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800194e:	4a0a      	ldr	r2, [pc, #40]	; (8001978 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001950:	4c0a      	ldr	r4, [pc, #40]	; (800197c <LoopFillZerobss+0x22>)
  movs r3, #0
 8001952:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001954:	e001      	b.n	800195a <LoopFillZerobss>

08001956 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001956:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001958:	3204      	adds	r2, #4

0800195a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800195a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800195c:	d3fb      	bcc.n	8001956 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800195e:	f021 fb73 	bl	8023048 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001962:	f7fe ff9e 	bl	80008a2 <main>
  bx  lr
 8001966:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001968:	24050000 	.word	0x24050000
  ldr r0, =_sdata
 800196c:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8001970:	240000f8 	.word	0x240000f8
  ldr r2, =_sidata
 8001974:	08025e54 	.word	0x08025e54
  ldr r2, =_sbss
 8001978:	240000f8 	.word	0x240000f8
  ldr r4, =_ebss
 800197c:	24002b08 	.word	0x24002b08

08001980 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001980:	e7fe      	b.n	8001980 <ADC3_IRQHandler>
	...

08001984 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001984:	b580      	push	{r7, lr}
 8001986:	b082      	sub	sp, #8
 8001988:	af00      	add	r7, sp, #0
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800198a:	2003      	movs	r0, #3
 800198c:	f001 fcf4 	bl	8003378 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8001990:	f005 ff7c 	bl	800788c <HAL_RCC_GetSysClockFreq>
 8001994:	4602      	mov	r2, r0
 8001996:	4b15      	ldr	r3, [pc, #84]	; (80019ec <HAL_Init+0x68>)
 8001998:	699b      	ldr	r3, [r3, #24]
 800199a:	0a1b      	lsrs	r3, r3, #8
 800199c:	f003 030f 	and.w	r3, r3, #15
 80019a0:	4913      	ldr	r1, [pc, #76]	; (80019f0 <HAL_Init+0x6c>)
 80019a2:	5ccb      	ldrb	r3, [r1, r3]
 80019a4:	f003 031f 	and.w	r3, r3, #31
 80019a8:	fa22 f303 	lsr.w	r3, r2, r3
 80019ac:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80019ae:	4b0f      	ldr	r3, [pc, #60]	; (80019ec <HAL_Init+0x68>)
 80019b0:	699b      	ldr	r3, [r3, #24]
 80019b2:	f003 030f 	and.w	r3, r3, #15
 80019b6:	4a0e      	ldr	r2, [pc, #56]	; (80019f0 <HAL_Init+0x6c>)
 80019b8:	5cd3      	ldrb	r3, [r2, r3]
 80019ba:	f003 031f 	and.w	r3, r3, #31
 80019be:	687a      	ldr	r2, [r7, #4]
 80019c0:	fa22 f303 	lsr.w	r3, r2, r3
 80019c4:	4a0b      	ldr	r2, [pc, #44]	; (80019f4 <HAL_Init+0x70>)
 80019c6:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80019c8:	4a0b      	ldr	r2, [pc, #44]	; (80019f8 <HAL_Init+0x74>)
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80019ce:	200f      	movs	r0, #15
 80019d0:	f000 f814 	bl	80019fc <HAL_InitTick>
 80019d4:	4603      	mov	r3, r0
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	d001      	beq.n	80019de <HAL_Init+0x5a>
  {
    return HAL_ERROR;
 80019da:	2301      	movs	r3, #1
 80019dc:	e002      	b.n	80019e4 <HAL_Init+0x60>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80019de:	f7ff fa99 	bl	8000f14 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80019e2:	2300      	movs	r3, #0
}
 80019e4:	4618      	mov	r0, r3
 80019e6:	3708      	adds	r7, #8
 80019e8:	46bd      	mov	sp, r7
 80019ea:	bd80      	pop	{r7, pc}
 80019ec:	58024400 	.word	0x58024400
 80019f0:	08024ac8 	.word	0x08024ac8
 80019f4:	24000008 	.word	0x24000008
 80019f8:	24000004 	.word	0x24000004

080019fc <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80019fc:	b580      	push	{r7, lr}
 80019fe:	b082      	sub	sp, #8
 8001a00:	af00      	add	r7, sp, #0
 8001a02:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 8001a04:	4b15      	ldr	r3, [pc, #84]	; (8001a5c <HAL_InitTick+0x60>)
 8001a06:	781b      	ldrb	r3, [r3, #0]
 8001a08:	2b00      	cmp	r3, #0
 8001a0a:	d101      	bne.n	8001a10 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 8001a0c:	2301      	movs	r3, #1
 8001a0e:	e021      	b.n	8001a54 <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8001a10:	4b13      	ldr	r3, [pc, #76]	; (8001a60 <HAL_InitTick+0x64>)
 8001a12:	681a      	ldr	r2, [r3, #0]
 8001a14:	4b11      	ldr	r3, [pc, #68]	; (8001a5c <HAL_InitTick+0x60>)
 8001a16:	781b      	ldrb	r3, [r3, #0]
 8001a18:	4619      	mov	r1, r3
 8001a1a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001a1e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001a22:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a26:	4618      	mov	r0, r3
 8001a28:	f001 fcd9 	bl	80033de <HAL_SYSTICK_Config>
 8001a2c:	4603      	mov	r3, r0
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	d001      	beq.n	8001a36 <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 8001a32:	2301      	movs	r3, #1
 8001a34:	e00e      	b.n	8001a54 <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	2b0f      	cmp	r3, #15
 8001a3a:	d80a      	bhi.n	8001a52 <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001a3c:	2200      	movs	r2, #0
 8001a3e:	6879      	ldr	r1, [r7, #4]
 8001a40:	f04f 30ff 	mov.w	r0, #4294967295
 8001a44:	f001 fca3 	bl	800338e <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001a48:	4a06      	ldr	r2, [pc, #24]	; (8001a64 <HAL_InitTick+0x68>)
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8001a4e:	2300      	movs	r3, #0
 8001a50:	e000      	b.n	8001a54 <HAL_InitTick+0x58>
    return HAL_ERROR;
 8001a52:	2301      	movs	r3, #1
}
 8001a54:	4618      	mov	r0, r3
 8001a56:	3708      	adds	r7, #8
 8001a58:	46bd      	mov	sp, r7
 8001a5a:	bd80      	pop	{r7, pc}
 8001a5c:	24000010 	.word	0x24000010
 8001a60:	24000004 	.word	0x24000004
 8001a64:	2400000c 	.word	0x2400000c

08001a68 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001a68:	b480      	push	{r7}
 8001a6a:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8001a6c:	4b06      	ldr	r3, [pc, #24]	; (8001a88 <HAL_IncTick+0x20>)
 8001a6e:	781b      	ldrb	r3, [r3, #0]
 8001a70:	461a      	mov	r2, r3
 8001a72:	4b06      	ldr	r3, [pc, #24]	; (8001a8c <HAL_IncTick+0x24>)
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	4413      	add	r3, r2
 8001a78:	4a04      	ldr	r2, [pc, #16]	; (8001a8c <HAL_IncTick+0x24>)
 8001a7a:	6013      	str	r3, [r2, #0]
}
 8001a7c:	bf00      	nop
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a84:	4770      	bx	lr
 8001a86:	bf00      	nop
 8001a88:	24000010 	.word	0x24000010
 8001a8c:	24000390 	.word	0x24000390

08001a90 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001a90:	b480      	push	{r7}
 8001a92:	af00      	add	r7, sp, #0
  return uwTick;
 8001a94:	4b03      	ldr	r3, [pc, #12]	; (8001aa4 <HAL_GetTick+0x14>)
 8001a96:	681b      	ldr	r3, [r3, #0]
}
 8001a98:	4618      	mov	r0, r3
 8001a9a:	46bd      	mov	sp, r7
 8001a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aa0:	4770      	bx	lr
 8001aa2:	bf00      	nop
 8001aa4:	24000390 	.word	0x24000390

08001aa8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001aa8:	b580      	push	{r7, lr}
 8001aaa:	b084      	sub	sp, #16
 8001aac:	af00      	add	r7, sp, #0
 8001aae:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001ab0:	f7ff ffee 	bl	8001a90 <HAL_GetTick>
 8001ab4:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001aba:	68fb      	ldr	r3, [r7, #12]
 8001abc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001ac0:	d005      	beq.n	8001ace <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001ac2:	4b0a      	ldr	r3, [pc, #40]	; (8001aec <HAL_Delay+0x44>)
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	461a      	mov	r2, r3
 8001ac8:	68fb      	ldr	r3, [r7, #12]
 8001aca:	4413      	add	r3, r2
 8001acc:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8001ace:	bf00      	nop
 8001ad0:	f7ff ffde 	bl	8001a90 <HAL_GetTick>
 8001ad4:	4602      	mov	r2, r0
 8001ad6:	68bb      	ldr	r3, [r7, #8]
 8001ad8:	1ad3      	subs	r3, r2, r3
 8001ada:	68fa      	ldr	r2, [r7, #12]
 8001adc:	429a      	cmp	r2, r3
 8001ade:	d8f7      	bhi.n	8001ad0 <HAL_Delay+0x28>
  {
  }
}
 8001ae0:	bf00      	nop
 8001ae2:	bf00      	nop
 8001ae4:	3710      	adds	r7, #16
 8001ae6:	46bd      	mov	sp, r7
 8001ae8:	bd80      	pop	{r7, pc}
 8001aea:	bf00      	nop
 8001aec:	24000010 	.word	0x24000010

08001af0 <LL_ADC_SetCommonClock>:
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
{
 8001af0:	b480      	push	{r7}
 8001af2:	b083      	sub	sp, #12
 8001af4:	af00      	add	r7, sp, #0
 8001af6:	6078      	str	r0, [r7, #4]
 8001af8:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
 8001afa:	687b      	ldr	r3, [r7, #4]
 8001afc:	689b      	ldr	r3, [r3, #8]
 8001afe:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8001b02:	683b      	ldr	r3, [r7, #0]
 8001b04:	431a      	orrs	r2, r3
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	609a      	str	r2, [r3, #8]
}
 8001b0a:	bf00      	nop
 8001b0c:	370c      	adds	r7, #12
 8001b0e:	46bd      	mov	sp, r7
 8001b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b14:	4770      	bx	lr

08001b16 <LL_ADC_SetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t PathInternal)
{
 8001b16:	b480      	push	{r7}
 8001b18:	b083      	sub	sp, #12
 8001b1a:	af00      	add	r7, sp, #0
 8001b1c:	6078      	str	r0, [r7, #4]
 8001b1e:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	689b      	ldr	r3, [r3, #8]
 8001b24:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8001b28:	683b      	ldr	r3, [r7, #0]
 8001b2a:	431a      	orrs	r2, r3
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	609a      	str	r2, [r3, #8]
}
 8001b30:	bf00      	nop
 8001b32:	370c      	adds	r7, #12
 8001b34:	46bd      	mov	sp, r7
 8001b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b3a:	4770      	bx	lr

08001b3c <LL_ADC_GetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  */
__STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
{
 8001b3c:	b480      	push	{r7}
 8001b3e:	b083      	sub	sp, #12
 8001b40:	af00      	add	r7, sp, #0
 8001b42:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	689b      	ldr	r3, [r3, #8]
 8001b48:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
}
 8001b4c:	4618      	mov	r0, r3
 8001b4e:	370c      	adds	r7, #12
 8001b50:	46bd      	mov	sp, r7
 8001b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b56:	4770      	bx	lr

08001b58 <LL_ADC_SetOffset>:
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32_t OffsetLevel)
{
 8001b58:	b480      	push	{r7}
 8001b5a:	b087      	sub	sp, #28
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	60f8      	str	r0, [r7, #12]
 8001b60:	60b9      	str	r1, [r7, #8]
 8001b62:	607a      	str	r2, [r7, #4]
 8001b64:	603b      	str	r3, [r7, #0]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001b66:	68fb      	ldr	r3, [r7, #12]
 8001b68:	3360      	adds	r3, #96	; 0x60
 8001b6a:	461a      	mov	r2, r3
 8001b6c:	68bb      	ldr	r3, [r7, #8]
 8001b6e:	009b      	lsls	r3, r3, #2
 8001b70:	4413      	add	r3, r2
 8001b72:	617b      	str	r3, [r7, #20]
#if defined(ADC_VER_V5_V90)
  if (ADCx == ADC3)
 8001b74:	68fb      	ldr	r3, [r7, #12]
 8001b76:	4a10      	ldr	r2, [pc, #64]	; (8001bb8 <LL_ADC_SetOffset+0x60>)
 8001b78:	4293      	cmp	r3, r2
 8001b7a:	d10b      	bne.n	8001b94 <LL_ADC_SetOffset+0x3c>
  {
    MODIFY_REG(*preg,
 8001b7c:	697b      	ldr	r3, [r7, #20]
 8001b7e:	681b      	ldr	r3, [r3, #0]
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8001b86:	683b      	ldr	r3, [r7, #0]
 8001b88:	4313      	orrs	r3, r2
 8001b8a:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8001b8e:	697b      	ldr	r3, [r7, #20]
 8001b90:	601a      	str	r2, [r3, #0]
  {
    MODIFY_REG(*preg,
               ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
               (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
  }
}
 8001b92:	e00b      	b.n	8001bac <LL_ADC_SetOffset+0x54>
    MODIFY_REG(*preg,
 8001b94:	697b      	ldr	r3, [r7, #20]
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	f003 4200 	and.w	r2, r3, #2147483648	; 0x80000000
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	f003 41f8 	and.w	r1, r3, #2080374784	; 0x7c000000
 8001ba2:	683b      	ldr	r3, [r7, #0]
 8001ba4:	430b      	orrs	r3, r1
 8001ba6:	431a      	orrs	r2, r3
 8001ba8:	697b      	ldr	r3, [r7, #20]
 8001baa:	601a      	str	r2, [r3, #0]
}
 8001bac:	bf00      	nop
 8001bae:	371c      	adds	r7, #28
 8001bb0:	46bd      	mov	sp, r7
 8001bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb6:	4770      	bx	lr
 8001bb8:	58026000 	.word	0x58026000

08001bbc <LL_ADC_GetOffsetChannel>:
  *         (1, 2) For ADC channel read back from ADC register,
  *                comparison with internal channel parameter to be done
  *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
  */
__STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
{
 8001bbc:	b480      	push	{r7}
 8001bbe:	b085      	sub	sp, #20
 8001bc0:	af00      	add	r7, sp, #0
 8001bc2:	6078      	str	r0, [r7, #4]
 8001bc4:	6039      	str	r1, [r7, #0]
  const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	3360      	adds	r3, #96	; 0x60
 8001bca:	461a      	mov	r2, r3
 8001bcc:	683b      	ldr	r3, [r7, #0]
 8001bce:	009b      	lsls	r3, r3, #2
 8001bd0:	4413      	add	r3, r2
 8001bd2:	60fb      	str	r3, [r7, #12]

  return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
 8001bd4:	68fb      	ldr	r3, [r7, #12]
 8001bd6:	681b      	ldr	r3, [r3, #0]
 8001bd8:	f003 43f8 	and.w	r3, r3, #2080374784	; 0x7c000000
}
 8001bdc:	4618      	mov	r0, r3
 8001bde:	3714      	adds	r7, #20
 8001be0:	46bd      	mov	sp, r7
 8001be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001be6:	4770      	bx	lr

08001be8 <LL_ADC_SetDataRightShift>:
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthShift)
{
 8001be8:	b480      	push	{r7}
 8001bea:	b085      	sub	sp, #20
 8001bec:	af00      	add	r7, sp, #0
 8001bee:	60f8      	str	r0, [r7, #12]
 8001bf0:	60b9      	str	r1, [r7, #8]
 8001bf2:	607a      	str	r2, [r7, #4]
  MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RSHIFT4), RigthShift << (Offsety & 0x1FUL));
 8001bf4:	68fb      	ldr	r3, [r7, #12]
 8001bf6:	691b      	ldr	r3, [r3, #16]
 8001bf8:	f423 42f0 	bic.w	r2, r3, #30720	; 0x7800
 8001bfc:	68bb      	ldr	r3, [r7, #8]
 8001bfe:	f003 031f 	and.w	r3, r3, #31
 8001c02:	6879      	ldr	r1, [r7, #4]
 8001c04:	fa01 f303 	lsl.w	r3, r1, r3
 8001c08:	431a      	orrs	r2, r3
 8001c0a:	68fb      	ldr	r3, [r7, #12]
 8001c0c:	611a      	str	r2, [r3, #16]
}
 8001c0e:	bf00      	nop
 8001c10:	3714      	adds	r7, #20
 8001c12:	46bd      	mov	sp, r7
 8001c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c18:	4770      	bx	lr
	...

08001c1c <LL_ADC_SetOffsetSignedSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSignedSaturation)
{
 8001c1c:	b480      	push	{r7}
 8001c1e:	b087      	sub	sp, #28
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	60f8      	str	r0, [r7, #12]
 8001c24:	60b9      	str	r1, [r7, #8]
 8001c26:	607a      	str	r2, [r7, #4]
#if defined(ADC_VER_V5_V90)
  if (ADCx == ADC3)
 8001c28:	68fb      	ldr	r3, [r7, #12]
 8001c2a:	4a0c      	ldr	r2, [pc, #48]	; (8001c5c <LL_ADC_SetOffsetSignedSaturation+0x40>)
 8001c2c:	4293      	cmp	r3, r2
 8001c2e:	d00e      	beq.n	8001c4e <LL_ADC_SetOffsetSignedSaturation+0x32>
    /* Function not available on this instance */
  }
  else
#endif  /* ADC_VER_V5_V90 */
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	3360      	adds	r3, #96	; 0x60
 8001c34:	461a      	mov	r2, r3
 8001c36:	68bb      	ldr	r3, [r7, #8]
 8001c38:	009b      	lsls	r3, r3, #2
 8001c3a:	4413      	add	r3, r2
 8001c3c:	617b      	str	r3, [r7, #20]
    MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 8001c3e:	697b      	ldr	r3, [r7, #20]
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	431a      	orrs	r2, r3
 8001c4a:	697b      	ldr	r3, [r7, #20]
 8001c4c:	601a      	str	r2, [r3, #0]
  }
}
 8001c4e:	bf00      	nop
 8001c50:	371c      	adds	r7, #28
 8001c52:	46bd      	mov	sp, r7
 8001c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c58:	4770      	bx	lr
 8001c5a:	bf00      	nop
 8001c5c:	58026000 	.word	0x58026000

08001c60 <LL_ADC_SetOffsetSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSaturation)
{
 8001c60:	b480      	push	{r7}
 8001c62:	b087      	sub	sp, #28
 8001c64:	af00      	add	r7, sp, #0
 8001c66:	60f8      	str	r0, [r7, #12]
 8001c68:	60b9      	str	r1, [r7, #8]
 8001c6a:	607a      	str	r2, [r7, #4]
  if (ADCx == ADC3)
 8001c6c:	68fb      	ldr	r3, [r7, #12]
 8001c6e:	4a0c      	ldr	r2, [pc, #48]	; (8001ca0 <LL_ADC_SetOffsetSaturation+0x40>)
 8001c70:	4293      	cmp	r3, r2
 8001c72:	d10e      	bne.n	8001c92 <LL_ADC_SetOffsetSaturation+0x32>
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001c74:	68fb      	ldr	r3, [r7, #12]
 8001c76:	3360      	adds	r3, #96	; 0x60
 8001c78:	461a      	mov	r2, r3
 8001c7a:	68bb      	ldr	r3, [r7, #8]
 8001c7c:	009b      	lsls	r3, r3, #2
 8001c7e:	4413      	add	r3, r2
 8001c80:	617b      	str	r3, [r7, #20]

    MODIFY_REG(*preg,
 8001c82:	697b      	ldr	r3, [r7, #20]
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	431a      	orrs	r2, r3
 8001c8e:	697b      	ldr	r3, [r7, #20]
 8001c90:	601a      	str	r2, [r3, #0]
               ADC3_OFR1_SATEN,
               OffsetSaturation);
  }
}
 8001c92:	bf00      	nop
 8001c94:	371c      	adds	r7, #28
 8001c96:	46bd      	mov	sp, r7
 8001c98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c9c:	4770      	bx	lr
 8001c9e:	bf00      	nop
 8001ca0:	58026000 	.word	0x58026000

08001ca4 <LL_ADC_SetOffsetSign>:
  *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
  *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
{
 8001ca4:	b480      	push	{r7}
 8001ca6:	b087      	sub	sp, #28
 8001ca8:	af00      	add	r7, sp, #0
 8001caa:	60f8      	str	r0, [r7, #12]
 8001cac:	60b9      	str	r1, [r7, #8]
 8001cae:	607a      	str	r2, [r7, #4]
  if (ADCx == ADC3)
 8001cb0:	68fb      	ldr	r3, [r7, #12]
 8001cb2:	4a0c      	ldr	r2, [pc, #48]	; (8001ce4 <LL_ADC_SetOffsetSign+0x40>)
 8001cb4:	4293      	cmp	r3, r2
 8001cb6:	d10e      	bne.n	8001cd6 <LL_ADC_SetOffsetSign+0x32>
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001cb8:	68fb      	ldr	r3, [r7, #12]
 8001cba:	3360      	adds	r3, #96	; 0x60
 8001cbc:	461a      	mov	r2, r3
 8001cbe:	68bb      	ldr	r3, [r7, #8]
 8001cc0:	009b      	lsls	r3, r3, #2
 8001cc2:	4413      	add	r3, r2
 8001cc4:	617b      	str	r3, [r7, #20]

    MODIFY_REG(*preg,
 8001cc6:	697b      	ldr	r3, [r7, #20]
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	431a      	orrs	r2, r3
 8001cd2:	697b      	ldr	r3, [r7, #20]
 8001cd4:	601a      	str	r2, [r3, #0]
               ADC3_OFR1_OFFSETPOS,
               OffsetSign);
  }
}
 8001cd6:	bf00      	nop
 8001cd8:	371c      	adds	r7, #28
 8001cda:	46bd      	mov	sp, r7
 8001cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce0:	4770      	bx	lr
 8001ce2:	bf00      	nop
 8001ce4:	58026000 	.word	0x58026000

08001ce8 <LL_ADC_SetOffsetState>:
  *         @arg @ref LL_ADC_OFFSET_DISABLE
  *         @arg @ref LL_ADC_OFFSET_ENABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetState)
{
 8001ce8:	b480      	push	{r7}
 8001cea:	b087      	sub	sp, #28
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	60f8      	str	r0, [r7, #12]
 8001cf0:	60b9      	str	r1, [r7, #8]
 8001cf2:	607a      	str	r2, [r7, #4]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001cf4:	68fb      	ldr	r3, [r7, #12]
 8001cf6:	3360      	adds	r3, #96	; 0x60
 8001cf8:	461a      	mov	r2, r3
 8001cfa:	68bb      	ldr	r3, [r7, #8]
 8001cfc:	009b      	lsls	r3, r3, #2
 8001cfe:	4413      	add	r3, r2
 8001d00:	617b      	str	r3, [r7, #20]
  if (ADCx == ADC3)
 8001d02:	68fb      	ldr	r3, [r7, #12]
 8001d04:	4a0c      	ldr	r2, [pc, #48]	; (8001d38 <LL_ADC_SetOffsetState+0x50>)
 8001d06:	4293      	cmp	r3, r2
 8001d08:	d108      	bne.n	8001d1c <LL_ADC_SetOffsetState+0x34>
  {
    MODIFY_REG(*preg,
 8001d0a:	697b      	ldr	r3, [r7, #20]
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	431a      	orrs	r2, r3
 8001d16:	697b      	ldr	r3, [r7, #20]
 8001d18:	601a      	str	r2, [r3, #0]
  {
    MODIFY_REG(*preg,
               ADC_OFR1_SSATE,
               OffsetState);
  }
}
 8001d1a:	e007      	b.n	8001d2c <LL_ADC_SetOffsetState+0x44>
    MODIFY_REG(*preg,
 8001d1c:	697b      	ldr	r3, [r7, #20]
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	431a      	orrs	r2, r3
 8001d28:	697b      	ldr	r3, [r7, #20]
 8001d2a:	601a      	str	r2, [r3, #0]
}
 8001d2c:	bf00      	nop
 8001d2e:	371c      	adds	r7, #28
 8001d30:	46bd      	mov	sp, r7
 8001d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d36:	4770      	bx	lr
 8001d38:	58026000 	.word	0x58026000

08001d3c <LL_ADC_REG_SetSequencerRanks>:
  *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to 8 Ms/s)).
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channel)
{
 8001d3c:	b480      	push	{r7}
 8001d3e:	b087      	sub	sp, #28
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	60f8      	str	r0, [r7, #12]
 8001d44:	60b9      	str	r1, [r7, #8]
 8001d46:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "Channel" with bits position          */
  /* in register and register position depending on parameter "Rank".         */
  /* Parameters "Rank" and "Channel" are used with masks because containing   */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGOFFSET_POS));
 8001d48:	68fb      	ldr	r3, [r7, #12]
 8001d4a:	3330      	adds	r3, #48	; 0x30
 8001d4c:	461a      	mov	r2, r3
 8001d4e:	68bb      	ldr	r3, [r7, #8]
 8001d50:	0a1b      	lsrs	r3, r3, #8
 8001d52:	009b      	lsls	r3, r3, #2
 8001d54:	f003 030c 	and.w	r3, r3, #12
 8001d58:	4413      	add	r3, r2
 8001d5a:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001d5c:	697b      	ldr	r3, [r7, #20]
 8001d5e:	681a      	ldr	r2, [r3, #0]
 8001d60:	68bb      	ldr	r3, [r7, #8]
 8001d62:	f003 031f 	and.w	r3, r3, #31
 8001d66:	211f      	movs	r1, #31
 8001d68:	fa01 f303 	lsl.w	r3, r1, r3
 8001d6c:	43db      	mvns	r3, r3
 8001d6e:	401a      	ands	r2, r3
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	0e9b      	lsrs	r3, r3, #26
 8001d74:	f003 011f 	and.w	r1, r3, #31
 8001d78:	68bb      	ldr	r3, [r7, #8]
 8001d7a:	f003 031f 	and.w	r3, r3, #31
 8001d7e:	fa01 f303 	lsl.w	r3, r1, r3
 8001d82:	431a      	orrs	r2, r3
 8001d84:	697b      	ldr	r3, [r7, #20]
 8001d86:	601a      	str	r2, [r3, #0]
             ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
             ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
}
 8001d88:	bf00      	nop
 8001d8a:	371c      	adds	r7, #28
 8001d8c:	46bd      	mov	sp, r7
 8001d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d92:	4770      	bx	lr

08001d94 <LL_ADC_SetChannelSamplingTime>:
  *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
  *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SamplingTime)
{
 8001d94:	b480      	push	{r7}
 8001d96:	b087      	sub	sp, #28
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	60f8      	str	r0, [r7, #12]
 8001d9c:	60b9      	str	r1, [r7, #8]
 8001d9e:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "SamplingTime" with bits position     */
  /* in register and register position depending on parameter "Channel".      */
  /* Parameter "Channel" is used with masks because containing                */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
 8001da0:	68fb      	ldr	r3, [r7, #12]
 8001da2:	3314      	adds	r3, #20
 8001da4:	461a      	mov	r2, r3
 8001da6:	68bb      	ldr	r3, [r7, #8]
 8001da8:	0e5b      	lsrs	r3, r3, #25
 8001daa:	009b      	lsls	r3, r3, #2
 8001dac:	f003 0304 	and.w	r3, r3, #4
 8001db0:	4413      	add	r3, r2
 8001db2:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001db4:	697b      	ldr	r3, [r7, #20]
 8001db6:	681a      	ldr	r2, [r3, #0]
 8001db8:	68bb      	ldr	r3, [r7, #8]
 8001dba:	0d1b      	lsrs	r3, r3, #20
 8001dbc:	f003 031f 	and.w	r3, r3, #31
 8001dc0:	2107      	movs	r1, #7
 8001dc2:	fa01 f303 	lsl.w	r3, r1, r3
 8001dc6:	43db      	mvns	r3, r3
 8001dc8:	401a      	ands	r2, r3
 8001dca:	68bb      	ldr	r3, [r7, #8]
 8001dcc:	0d1b      	lsrs	r3, r3, #20
 8001dce:	f003 031f 	and.w	r3, r3, #31
 8001dd2:	6879      	ldr	r1, [r7, #4]
 8001dd4:	fa01 f303 	lsl.w	r3, r1, r3
 8001dd8:	431a      	orrs	r2, r3
 8001dda:	697b      	ldr	r3, [r7, #20]
 8001ddc:	601a      	str	r2, [r3, #0]
             ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS),
             SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS));
}
 8001dde:	bf00      	nop
 8001de0:	371c      	adds	r7, #28
 8001de2:	46bd      	mov	sp, r7
 8001de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001de8:	4770      	bx	lr
	...

08001dec <LL_ADC_SetChannelSingleDiff>:
  *         @arg @ref LL_ADC_SINGLE_ENDED
  *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SingleDiff)
{
 8001dec:	b480      	push	{r7}
 8001dee:	b085      	sub	sp, #20
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	60f8      	str	r0, [r7, #12]
 8001df4:	60b9      	str	r1, [r7, #8]
 8001df6:	607a      	str	r2, [r7, #4]
#if defined(ADC_VER_V5_V90)
  /* Bits of channels in single or differential mode are set only for         */
  /* differential mode (for single mode, mask of bits allowed to be set is    */
  /* shifted out of range of bits of channels in single or differential mode. */
  if (ADCx == ADC3)
 8001df8:	68fb      	ldr	r3, [r7, #12]
 8001dfa:	4a1a      	ldr	r2, [pc, #104]	; (8001e64 <LL_ADC_SetChannelSingleDiff+0x78>)
 8001dfc:	4293      	cmp	r3, r2
 8001dfe:	d115      	bne.n	8001e2c <LL_ADC_SetChannelSingleDiff+0x40>
  {
    MODIFY_REG(ADCx->LTR2_DIFSEL,
 8001e00:	68fb      	ldr	r3, [r7, #12]
 8001e02:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 8001e06:	68bb      	ldr	r3, [r7, #8]
 8001e08:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001e0c:	43db      	mvns	r3, r3
 8001e0e:	401a      	ands	r2, r3
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	f003 0318 	and.w	r3, r3, #24
 8001e16:	4914      	ldr	r1, [pc, #80]	; (8001e68 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8001e18:	40d9      	lsrs	r1, r3
 8001e1a:	68bb      	ldr	r3, [r7, #8]
 8001e1c:	400b      	ands	r3, r1
 8001e1e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001e22:	431a      	orrs	r2, r3
 8001e24:	68fb      	ldr	r3, [r7, #12]
 8001e26:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  /* shifted out of range of bits of channels in single or differential mode. */
  MODIFY_REG(ADCx->DIFSEL,
             Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
             (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
#endif /* ADC_VER_V5_V90 */
}
 8001e2a:	e014      	b.n	8001e56 <LL_ADC_SetChannelSingleDiff+0x6a>
    MODIFY_REG(ADCx->DIFSEL_RES12,
 8001e2c:	68fb      	ldr	r3, [r7, #12]
 8001e2e:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 8001e32:	68bb      	ldr	r3, [r7, #8]
 8001e34:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001e38:	43db      	mvns	r3, r3
 8001e3a:	401a      	ands	r2, r3
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	f003 0318 	and.w	r3, r3, #24
 8001e42:	4909      	ldr	r1, [pc, #36]	; (8001e68 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8001e44:	40d9      	lsrs	r1, r3
 8001e46:	68bb      	ldr	r3, [r7, #8]
 8001e48:	400b      	ands	r3, r1
 8001e4a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001e4e:	431a      	orrs	r2, r3
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
}
 8001e56:	bf00      	nop
 8001e58:	3714      	adds	r7, #20
 8001e5a:	46bd      	mov	sp, r7
 8001e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e60:	4770      	bx	lr
 8001e62:	bf00      	nop
 8001e64:	58026000 	.word	0x58026000
 8001e68:	000fffff 	.word	0x000fffff

08001e6c <LL_ADC_DisableDeepPowerDown>:
  * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
{
 8001e6c:	b480      	push	{r7}
 8001e6e:	b083      	sub	sp, #12
 8001e70:	af00      	add	r7, sp, #0
 8001e72:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	689a      	ldr	r2, [r3, #8]
 8001e78:	4b04      	ldr	r3, [pc, #16]	; (8001e8c <LL_ADC_DisableDeepPowerDown+0x20>)
 8001e7a:	4013      	ands	r3, r2
 8001e7c:	687a      	ldr	r2, [r7, #4]
 8001e7e:	6093      	str	r3, [r2, #8]
}
 8001e80:	bf00      	nop
 8001e82:	370c      	adds	r7, #12
 8001e84:	46bd      	mov	sp, r7
 8001e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e8a:	4770      	bx	lr
 8001e8c:	5fffffc0 	.word	0x5fffffc0

08001e90 <LL_ADC_IsDeepPowerDownEnabled>:
  * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
  * @param  ADCx ADC instance
  * @retval 0: deep power down is disabled, 1: deep power down is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
{
 8001e90:	b480      	push	{r7}
 8001e92:	b083      	sub	sp, #12
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	689b      	ldr	r3, [r3, #8]
 8001e9c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8001ea0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8001ea4:	d101      	bne.n	8001eaa <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8001ea6:	2301      	movs	r3, #1
 8001ea8:	e000      	b.n	8001eac <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8001eaa:	2300      	movs	r3, #0
}
 8001eac:	4618      	mov	r0, r3
 8001eae:	370c      	adds	r7, #12
 8001eb0:	46bd      	mov	sp, r7
 8001eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eb6:	4770      	bx	lr

08001eb8 <LL_ADC_EnableInternalRegulator>:
  * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
{
 8001eb8:	b480      	push	{r7}
 8001eba:	b083      	sub	sp, #12
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	689a      	ldr	r2, [r3, #8]
 8001ec4:	4b05      	ldr	r3, [pc, #20]	; (8001edc <LL_ADC_EnableInternalRegulator+0x24>)
 8001ec6:	4013      	ands	r3, r2
 8001ec8:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	609a      	str	r2, [r3, #8]
             ADC_CR_BITS_PROPERTY_RS,
             ADC_CR_ADVREGEN);
}
 8001ed0:	bf00      	nop
 8001ed2:	370c      	adds	r7, #12
 8001ed4:	46bd      	mov	sp, r7
 8001ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eda:	4770      	bx	lr
 8001edc:	6fffffc0 	.word	0x6fffffc0

08001ee0 <LL_ADC_IsInternalRegulatorEnabled>:
  * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
  * @param  ADCx ADC instance
  * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
{
 8001ee0:	b480      	push	{r7}
 8001ee2:	b083      	sub	sp, #12
 8001ee4:	af00      	add	r7, sp, #0
 8001ee6:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	689b      	ldr	r3, [r3, #8]
 8001eec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ef0:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8001ef4:	d101      	bne.n	8001efa <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8001ef6:	2301      	movs	r3, #1
 8001ef8:	e000      	b.n	8001efc <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8001efa:	2300      	movs	r3, #0
}
 8001efc:	4618      	mov	r0, r3
 8001efe:	370c      	adds	r7, #12
 8001f00:	46bd      	mov	sp, r7
 8001f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f06:	4770      	bx	lr

08001f08 <LL_ADC_IsEnabled>:
  * @rmtoll CR       ADEN           LL_ADC_IsEnabled
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
{
 8001f08:	b480      	push	{r7}
 8001f0a:	b083      	sub	sp, #12
 8001f0c:	af00      	add	r7, sp, #0
 8001f0e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	689b      	ldr	r3, [r3, #8]
 8001f14:	f003 0301 	and.w	r3, r3, #1
 8001f18:	2b01      	cmp	r3, #1
 8001f1a:	d101      	bne.n	8001f20 <LL_ADC_IsEnabled+0x18>
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	e000      	b.n	8001f22 <LL_ADC_IsEnabled+0x1a>
 8001f20:	2300      	movs	r3, #0
}
 8001f22:	4618      	mov	r0, r3
 8001f24:	370c      	adds	r7, #12
 8001f26:	46bd      	mov	sp, r7
 8001f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f2c:	4770      	bx	lr

08001f2e <LL_ADC_REG_IsConversionOngoing>:
  * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group regular.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8001f2e:	b480      	push	{r7}
 8001f30:	b083      	sub	sp, #12
 8001f32:	af00      	add	r7, sp, #0
 8001f34:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	689b      	ldr	r3, [r3, #8]
 8001f3a:	f003 0304 	and.w	r3, r3, #4
 8001f3e:	2b04      	cmp	r3, #4
 8001f40:	d101      	bne.n	8001f46 <LL_ADC_REG_IsConversionOngoing+0x18>
 8001f42:	2301      	movs	r3, #1
 8001f44:	e000      	b.n	8001f48 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8001f46:	2300      	movs	r3, #0
}
 8001f48:	4618      	mov	r0, r3
 8001f4a:	370c      	adds	r7, #12
 8001f4c:	46bd      	mov	sp, r7
 8001f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f52:	4770      	bx	lr

08001f54 <LL_ADC_INJ_IsConversionOngoing>:
  * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group injected.
  */
__STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8001f54:	b480      	push	{r7}
 8001f56:	b083      	sub	sp, #12
 8001f58:	af00      	add	r7, sp, #0
 8001f5a:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	689b      	ldr	r3, [r3, #8]
 8001f60:	f003 0308 	and.w	r3, r3, #8
 8001f64:	2b08      	cmp	r3, #8
 8001f66:	d101      	bne.n	8001f6c <LL_ADC_INJ_IsConversionOngoing+0x18>
 8001f68:	2301      	movs	r3, #1
 8001f6a:	e000      	b.n	8001f6e <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8001f6c:	2300      	movs	r3, #0
}
 8001f6e:	4618      	mov	r0, r3
 8001f70:	370c      	adds	r7, #12
 8001f72:	46bd      	mov	sp, r7
 8001f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f78:	4770      	bx	lr
	...

08001f7c <HAL_ADC_Init>:
  *         without  disabling the other ADCs.
  * @param hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8001f7c:	b590      	push	{r4, r7, lr}
 8001f7e:	b089      	sub	sp, #36	; 0x24
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8001f84:	2300      	movs	r3, #0
 8001f86:	77fb      	strb	r3, [r7, #31]
  uint32_t tmpCFGR;
  uint32_t tmp_adc_reg_is_conversion_on_going;
  __IO uint32_t wait_loop_index = 0UL;
 8001f88:	2300      	movs	r3, #0
 8001f8a:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_adc_is_conversion_on_going_regular;
  uint32_t tmp_adc_is_conversion_on_going_injected;

  /* Check ADC handle */
  if (hadc == NULL)
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d101      	bne.n	8001f96 <HAL_ADC_Init+0x1a>
  {
    return HAL_ERROR;
 8001f92:	2301      	movs	r3, #1
 8001f94:	e1ee      	b.n	8002374 <HAL_ADC_Init+0x3f8>
  assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));

  if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	691b      	ldr	r3, [r3, #16]
 8001f9a:	2b00      	cmp	r3, #0
  /* DISCEN and CONT bits cannot be set at the same time */
  assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == ENABLE)));

  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  if (hadc->State == HAL_ADC_STATE_RESET)
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d109      	bne.n	8001fb8 <HAL_ADC_Init+0x3c>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8001fa4:	6878      	ldr	r0, [r7, #4]
 8001fa6:	f7fe ffcf 	bl	8000f48 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	2200      	movs	r2, #0
 8001fae:	665a      	str	r2, [r3, #100]	; 0x64

    /* Initialize Lock */
    hadc->Lock = HAL_UNLOCKED;
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	2200      	movs	r2, #0
 8001fb4:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  }

  /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
  if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	4618      	mov	r0, r3
 8001fbe:	f7ff ff67 	bl	8001e90 <LL_ADC_IsDeepPowerDownEnabled>
 8001fc2:	4603      	mov	r3, r0
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d004      	beq.n	8001fd2 <HAL_ADC_Init+0x56>
  {
    /* Disable ADC deep power down mode */
    LL_ADC_DisableDeepPowerDown(hadc->Instance);
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	4618      	mov	r0, r3
 8001fce:	f7ff ff4d 	bl	8001e6c <LL_ADC_DisableDeepPowerDown>
    /* System was in deep power down mode, calibration must
     be relaunched or a previously saved calibration factor
     re-applied once the ADC voltage regulator is enabled */
  }

  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	681b      	ldr	r3, [r3, #0]
 8001fd6:	4618      	mov	r0, r3
 8001fd8:	f7ff ff82 	bl	8001ee0 <LL_ADC_IsInternalRegulatorEnabled>
 8001fdc:	4603      	mov	r3, r0
 8001fde:	2b00      	cmp	r3, #0
 8001fe0:	d114      	bne.n	800200c <HAL_ADC_Init+0x90>
  {
    /* Enable ADC internal voltage regulator */
    LL_ADC_EnableInternalRegulator(hadc->Instance);
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	4618      	mov	r0, r3
 8001fe8:	f7ff ff66 	bl	8001eb8 <LL_ADC_EnableInternalRegulator>

    /* Note: Variable divided by 2 to compensate partially              */
    /*       CPU processing cycles, scaling in us split to not          */
    /*       exceed 32 bits register capacity and handle low frequency. */
    wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 8001fec:	4b8e      	ldr	r3, [pc, #568]	; (8002228 <HAL_ADC_Init+0x2ac>)
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	099b      	lsrs	r3, r3, #6
 8001ff2:	4a8e      	ldr	r2, [pc, #568]	; (800222c <HAL_ADC_Init+0x2b0>)
 8001ff4:	fba2 2303 	umull	r2, r3, r2, r3
 8001ff8:	099b      	lsrs	r3, r3, #6
 8001ffa:	3301      	adds	r3, #1
 8001ffc:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 8001ffe:	e002      	b.n	8002006 <HAL_ADC_Init+0x8a>
    {
      wait_loop_index--;
 8002000:	68bb      	ldr	r3, [r7, #8]
 8002002:	3b01      	subs	r3, #1
 8002004:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 8002006:	68bb      	ldr	r3, [r7, #8]
 8002008:	2b00      	cmp	r3, #0
 800200a:	d1f9      	bne.n	8002000 <HAL_ADC_Init+0x84>
  }

  /* Verification that ADC voltage regulator is correctly enabled, whether    */
  /* or not ADC is coming from state reset (if any potential problem of       */
  /* clocking, voltage regulator would not be enabled).                       */
  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	4618      	mov	r0, r3
 8002012:	f7ff ff65 	bl	8001ee0 <LL_ADC_IsInternalRegulatorEnabled>
 8002016:	4603      	mov	r3, r0
 8002018:	2b00      	cmp	r3, #0
 800201a:	d10d      	bne.n	8002038 <HAL_ADC_Init+0xbc>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002020:	f043 0210 	orr.w	r2, r3, #16
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	661a      	str	r2, [r3, #96]	; 0x60

    /* Set ADC error code to ADC peripheral internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800202c:	f043 0201 	orr.w	r2, r3, #1
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	665a      	str	r2, [r3, #100]	; 0x64

    tmp_hal_status = HAL_ERROR;
 8002034:	2301      	movs	r3, #1
 8002036:	77fb      	strb	r3, [r7, #31]

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed and if there is no conversion on going on regular    */
  /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
  /* called to update a parameter on the fly).                                */
  tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	4618      	mov	r0, r3
 800203e:	f7ff ff76 	bl	8001f2e <LL_ADC_REG_IsConversionOngoing>
 8002042:	6178      	str	r0, [r7, #20]

  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002048:	f003 0310 	and.w	r3, r3, #16
 800204c:	2b00      	cmp	r3, #0
 800204e:	f040 8188 	bne.w	8002362 <HAL_ADC_Init+0x3e6>
      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 8002052:	697b      	ldr	r3, [r7, #20]
 8002054:	2b00      	cmp	r3, #0
 8002056:	f040 8184 	bne.w	8002362 <HAL_ADC_Init+0x3e6>
     )
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800205e:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 8002062:	f043 0202 	orr.w	r2, r3, #2
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	661a      	str	r2, [r3, #96]	; 0x60
    /* Configuration of common ADC parameters                                 */

    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - clock configuration                                                 */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	4618      	mov	r0, r3
 8002070:	f7ff ff4a 	bl	8001f08 <LL_ADC_IsEnabled>
 8002074:	4603      	mov	r3, r0
 8002076:	2b00      	cmp	r3, #0
 8002078:	d136      	bne.n	80020e8 <HAL_ADC_Init+0x16c>
    {
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	4a6c      	ldr	r2, [pc, #432]	; (8002230 <HAL_ADC_Init+0x2b4>)
 8002080:	4293      	cmp	r3, r2
 8002082:	d004      	beq.n	800208e <HAL_ADC_Init+0x112>
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	4a6a      	ldr	r2, [pc, #424]	; (8002234 <HAL_ADC_Init+0x2b8>)
 800208a:	4293      	cmp	r3, r2
 800208c:	d10e      	bne.n	80020ac <HAL_ADC_Init+0x130>
 800208e:	4868      	ldr	r0, [pc, #416]	; (8002230 <HAL_ADC_Init+0x2b4>)
 8002090:	f7ff ff3a 	bl	8001f08 <LL_ADC_IsEnabled>
 8002094:	4604      	mov	r4, r0
 8002096:	4867      	ldr	r0, [pc, #412]	; (8002234 <HAL_ADC_Init+0x2b8>)
 8002098:	f7ff ff36 	bl	8001f08 <LL_ADC_IsEnabled>
 800209c:	4603      	mov	r3, r0
 800209e:	4323      	orrs	r3, r4
 80020a0:	2b00      	cmp	r3, #0
 80020a2:	bf0c      	ite	eq
 80020a4:	2301      	moveq	r3, #1
 80020a6:	2300      	movne	r3, #0
 80020a8:	b2db      	uxtb	r3, r3
 80020aa:	e008      	b.n	80020be <HAL_ADC_Init+0x142>
 80020ac:	4862      	ldr	r0, [pc, #392]	; (8002238 <HAL_ADC_Init+0x2bc>)
 80020ae:	f7ff ff2b 	bl	8001f08 <LL_ADC_IsEnabled>
 80020b2:	4603      	mov	r3, r0
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	bf0c      	ite	eq
 80020b8:	2301      	moveq	r3, #1
 80020ba:	2300      	movne	r3, #0
 80020bc:	b2db      	uxtb	r3, r3
 80020be:	2b00      	cmp	r3, #0
 80020c0:	d012      	beq.n	80020e8 <HAL_ADC_Init+0x16c>
        /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
        /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
        /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
        /*     (set into HAL_ADC_ConfigChannel() or                             */
        /*     HAL_ADCEx_InjectedConfigChannel() )                              */
        LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	4a5a      	ldr	r2, [pc, #360]	; (8002230 <HAL_ADC_Init+0x2b4>)
 80020c8:	4293      	cmp	r3, r2
 80020ca:	d004      	beq.n	80020d6 <HAL_ADC_Init+0x15a>
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	4a58      	ldr	r2, [pc, #352]	; (8002234 <HAL_ADC_Init+0x2b8>)
 80020d2:	4293      	cmp	r3, r2
 80020d4:	d101      	bne.n	80020da <HAL_ADC_Init+0x15e>
 80020d6:	4a59      	ldr	r2, [pc, #356]	; (800223c <HAL_ADC_Init+0x2c0>)
 80020d8:	e000      	b.n	80020dc <HAL_ADC_Init+0x160>
 80020da:	4a59      	ldr	r2, [pc, #356]	; (8002240 <HAL_ADC_Init+0x2c4>)
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	685b      	ldr	r3, [r3, #4]
 80020e0:	4619      	mov	r1, r3
 80020e2:	4610      	mov	r0, r2
 80020e4:	f7ff fd04 	bl	8001af0 <LL_ADC_SetCommonClock>
                hadc->Init.Overrun                                                    |
                hadc->Init.Resolution                                                 |
                ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));

#elif defined(ADC_VER_V5_V90)
    if (hadc->Instance == ADC3)
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	681b      	ldr	r3, [r3, #0]
 80020ec:	4a52      	ldr	r2, [pc, #328]	; (8002238 <HAL_ADC_Init+0x2bc>)
 80020ee:	4293      	cmp	r3, r2
 80020f0:	d129      	bne.n	8002146 <HAL_ADC_Init+0x1ca>
    {
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	7e5b      	ldrb	r3, [r3, #25]
 80020f6:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                     |
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 80020fc:	431a      	orrs	r2, r3
                  hadc->Init.DataAlign                                                   |
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	68db      	ldr	r3, [r3, #12]
                  hadc->Init.Overrun                                                     |
 8002102:	431a      	orrs	r2, r3
                  ((__LL_ADC12_RESOLUTION_TO_ADC3(hadc->Init.Resolution)  & (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)) << 1UL)                                                   |
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	689b      	ldr	r3, [r3, #8]
 8002108:	2b08      	cmp	r3, #8
 800210a:	d013      	beq.n	8002134 <HAL_ADC_Init+0x1b8>
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	689b      	ldr	r3, [r3, #8]
 8002110:	2b0c      	cmp	r3, #12
 8002112:	d00d      	beq.n	8002130 <HAL_ADC_Init+0x1b4>
 8002114:	687b      	ldr	r3, [r7, #4]
 8002116:	689b      	ldr	r3, [r3, #8]
 8002118:	2b1c      	cmp	r3, #28
 800211a:	d007      	beq.n	800212c <HAL_ADC_Init+0x1b0>
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	689b      	ldr	r3, [r3, #8]
 8002120:	2b18      	cmp	r3, #24
 8002122:	d101      	bne.n	8002128 <HAL_ADC_Init+0x1ac>
 8002124:	2318      	movs	r3, #24
 8002126:	e006      	b.n	8002136 <HAL_ADC_Init+0x1ba>
 8002128:	2300      	movs	r3, #0
 800212a:	e004      	b.n	8002136 <HAL_ADC_Init+0x1ba>
 800212c:	2310      	movs	r3, #16
 800212e:	e002      	b.n	8002136 <HAL_ADC_Init+0x1ba>
 8002130:	2308      	movs	r3, #8
 8002132:	e000      	b.n	8002136 <HAL_ADC_Init+0x1ba>
 8002134:	2300      	movs	r3, #0
                  hadc->Init.DataAlign                                                   |
 8002136:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800213e:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 8002140:	4313      	orrs	r3, r2
 8002142:	61bb      	str	r3, [r7, #24]
 8002144:	e00e      	b.n	8002164 <HAL_ADC_Init+0x1e8>
    }
    else
    {
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	7e5b      	ldrb	r3, [r3, #25]
 800214a:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                    |
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002150:	431a      	orrs	r2, r3
                  hadc->Init.Resolution                                                 |
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	689b      	ldr	r3, [r3, #8]
                  hadc->Init.Overrun                                                    |
 8002156:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800215e:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002160:	4313      	orrs	r3, r2
 8002162:	61bb      	str	r3, [r7, #24]
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
    }

#endif /* ADC_VER_V5_3 */

    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	f893 3020 	ldrb.w	r3, [r3, #32]
 800216a:	2b01      	cmp	r3, #1
 800216c:	d106      	bne.n	800217c <HAL_ADC_Init+0x200>
    {
      tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002172:	3b01      	subs	r3, #1
 8002174:	045b      	lsls	r3, r3, #17
 8002176:	69ba      	ldr	r2, [r7, #24]
 8002178:	4313      	orrs	r3, r2
 800217a:	61bb      	str	r3, [r7, #24]
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002180:	2b00      	cmp	r3, #0
 8002182:	d009      	beq.n	8002198 <HAL_ADC_Init+0x21c>
    {
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002188:	f403 7278 	and.w	r2, r3, #992	; 0x3e0
                  | hadc->Init.ExternalTrigConvEdge
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002190:	4313      	orrs	r3, r2
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8002192:	69ba      	ldr	r2, [r7, #24]
 8002194:	4313      	orrs	r3, r2
 8002196:	61bb      	str	r3, [r7, #24]
                 );
    }


#if defined(ADC_VER_V5_V90)
    if (hadc->Instance == ADC3)
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	4a26      	ldr	r2, [pc, #152]	; (8002238 <HAL_ADC_Init+0x2bc>)
 800219e:	4293      	cmp	r3, r2
 80021a0:	d115      	bne.n	80021ce <HAL_ADC_Init+0x252>
    {
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC3_CFGR_FIELDS_1, tmpCFGR);
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	68da      	ldr	r2, [r3, #12]
 80021a8:	4b26      	ldr	r3, [pc, #152]	; (8002244 <HAL_ADC_Init+0x2c8>)
 80021aa:	4013      	ands	r3, r2
 80021ac:	687a      	ldr	r2, [r7, #4]
 80021ae:	6812      	ldr	r2, [r2, #0]
 80021b0:	69b9      	ldr	r1, [r7, #24]
 80021b2:	430b      	orrs	r3, r1
 80021b4:	60d3      	str	r3, [r2, #12]
      /* Configuration of sampling mode */
      MODIFY_REG(hadc->Instance->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	691b      	ldr	r3, [r3, #16]
 80021bc:	f023 6140 	bic.w	r1, r3, #201326592	; 0xc000000
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	430a      	orrs	r2, r1
 80021ca:	611a      	str	r2, [r3, #16]
 80021cc:	e009      	b.n	80021e2 <HAL_ADC_Init+0x266>
    }
    else
    {
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	68da      	ldr	r2, [r3, #12]
 80021d4:	4b1c      	ldr	r3, [pc, #112]	; (8002248 <HAL_ADC_Init+0x2cc>)
 80021d6:	4013      	ands	r3, r2
 80021d8:	687a      	ldr	r2, [r7, #4]
 80021da:	6812      	ldr	r2, [r2, #0]
 80021dc:	69b9      	ldr	r1, [r7, #24]
 80021de:	430b      	orrs	r3, r1
 80021e0:	60d3      	str	r3, [r2, #12]
    /* Parameters that can be updated when ADC is disabled or enabled without */
    /* conversion on going on regular and injected groups:                    */
    /*  - Conversion data management      Init.ConversionDataManagement       */
    /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
    /*  - Oversampling parameters         Init.Oversampling                   */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	4618      	mov	r0, r3
 80021e8:	f7ff fea1 	bl	8001f2e <LL_ADC_REG_IsConversionOngoing>
 80021ec:	6138      	str	r0, [r7, #16]
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	681b      	ldr	r3, [r3, #0]
 80021f2:	4618      	mov	r0, r3
 80021f4:	f7ff feae 	bl	8001f54 <LL_ADC_INJ_IsConversionOngoing>
 80021f8:	60f8      	str	r0, [r7, #12]
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 80021fa:	693b      	ldr	r3, [r7, #16]
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	f040 808e 	bne.w	800231e <HAL_ADC_Init+0x3a2>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 8002202:	68fb      	ldr	r3, [r7, #12]
 8002204:	2b00      	cmp	r3, #0
 8002206:	f040 808a 	bne.w	800231e <HAL_ADC_Init+0x3a2>
       )
    {
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance == ADC3)
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	4a0a      	ldr	r2, [pc, #40]	; (8002238 <HAL_ADC_Init+0x2bc>)
 8002210:	4293      	cmp	r3, r2
 8002212:	d11b      	bne.n	800224c <HAL_ADC_Init+0x2d0>
      {
        tmpCFGR = (
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	7e1b      	ldrb	r3, [r3, #24]
 8002218:	039a      	lsls	r2, r3, #14
                    ADC3_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002220:	005b      	lsls	r3, r3, #1
        tmpCFGR = (
 8002222:	4313      	orrs	r3, r2
 8002224:	61bb      	str	r3, [r7, #24]
 8002226:	e018      	b.n	800225a <HAL_ADC_Init+0x2de>
 8002228:	24000004 	.word	0x24000004
 800222c:	053e2d63 	.word	0x053e2d63
 8002230:	40022000 	.word	0x40022000
 8002234:	40022100 	.word	0x40022100
 8002238:	58026000 	.word	0x58026000
 800223c:	40022300 	.word	0x40022300
 8002240:	58026300 	.word	0x58026300
 8002244:	fff04007 	.word	0xfff04007
 8002248:	fff0c003 	.word	0xfff0c003
      }
      else
      {
        tmpCFGR = (
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	7e1b      	ldrb	r3, [r3, #24]
 8002250:	039a      	lsls	r2, r3, #14
                    ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        tmpCFGR = (
 8002256:	4313      	orrs	r3, r2
 8002258:	61bb      	str	r3, [r7, #24]
      tmpCFGR = (
                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
#endif

      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	681b      	ldr	r3, [r3, #0]
 800225e:	68da      	ldr	r2, [r3, #12]
 8002260:	4b46      	ldr	r3, [pc, #280]	; (800237c <HAL_ADC_Init+0x400>)
 8002262:	4013      	ands	r3, r2
 8002264:	687a      	ldr	r2, [r7, #4]
 8002266:	6812      	ldr	r2, [r2, #0]
 8002268:	69b9      	ldr	r1, [r7, #24]
 800226a:	430b      	orrs	r3, r1
 800226c:	60d3      	str	r3, [r2, #12]

      if (hadc->Init.OversamplingMode == ENABLE)
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8002274:	2b01      	cmp	r3, #1
 8002276:	d137      	bne.n	80022e8 <HAL_ADC_Init+0x36c>
#endif
        assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
        assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
        assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));

        if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800227c:	2b00      	cmp	r3, #0
          /* Multi trigger is not applicable to software-triggered conversions */
          assert_param((hadc->Init.Oversampling.TriggeredMode == ADC_TRIGGEREDMODE_SINGLE_TRIGGER));
        }

#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	4a3f      	ldr	r2, [pc, #252]	; (8002380 <HAL_ADC_Init+0x404>)
 8002284:	4293      	cmp	r3, r2
 8002286:	d116      	bne.n	80022b6 <HAL_ADC_Init+0x33a>
          /* Configuration of Oversampler:                                      */
          /*  - Oversampling Ratio                                              */
          /*  - Right bit shift                                                 */
          /*  - Triggered mode                                                  */
          /*  - Oversampling mode (continued/resumed)                           */
          MODIFY_REG(hadc->Instance->CFGR2,
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	691a      	ldr	r2, [r3, #16]
 800228e:	4b3d      	ldr	r3, [pc, #244]	; (8002384 <HAL_ADC_Init+0x408>)
 8002290:	4013      	ands	r3, r2
 8002292:	687a      	ldr	r2, [r7, #4]
 8002294:	6c91      	ldr	r1, [r2, #72]	; 0x48
 8002296:	687a      	ldr	r2, [r7, #4]
 8002298:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800229a:	4311      	orrs	r1, r2
 800229c:	687a      	ldr	r2, [r7, #4]
 800229e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80022a0:	4311      	orrs	r1, r2
 80022a2:	687a      	ldr	r2, [r7, #4]
 80022a4:	6d52      	ldr	r2, [r2, #84]	; 0x54
 80022a6:	430a      	orrs	r2, r1
 80022a8:	431a      	orrs	r2, r3
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	f042 0201 	orr.w	r2, r2, #1
 80022b2:	611a      	str	r2, [r3, #16]
 80022b4:	e020      	b.n	80022f8 <HAL_ADC_Init+0x37c>
          /*  - Oversampling Ratio                                               */
          /*  - Right bit shift                                                  */
          /*  - Left bit shift                                                   */
          /*  - Triggered mode                                                   */
          /*  - Oversampling mode (continued/resumed)                            */
          MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	691a      	ldr	r2, [r3, #16]
 80022bc:	4b32      	ldr	r3, [pc, #200]	; (8002388 <HAL_ADC_Init+0x40c>)
 80022be:	4013      	ands	r3, r2
 80022c0:	687a      	ldr	r2, [r7, #4]
 80022c2:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80022c4:	3a01      	subs	r2, #1
 80022c6:	0411      	lsls	r1, r2, #16
 80022c8:	687a      	ldr	r2, [r7, #4]
 80022ca:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 80022cc:	4311      	orrs	r1, r2
 80022ce:	687a      	ldr	r2, [r7, #4]
 80022d0:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80022d2:	4311      	orrs	r1, r2
 80022d4:	687a      	ldr	r2, [r7, #4]
 80022d6:	6d52      	ldr	r2, [r2, #84]	; 0x54
 80022d8:	430a      	orrs	r2, r1
 80022da:	431a      	orrs	r2, r3
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	f042 0201 	orr.w	r2, r2, #1
 80022e4:	611a      	str	r2, [r3, #16]
 80022e6:	e007      	b.n	80022f8 <HAL_ADC_Init+0x37c>

      }
      else
      {
        /* Disable ADC oversampling scope on ADC group regular */
        CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	691a      	ldr	r2, [r3, #16]
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	f022 0201 	bic.w	r2, r2, #1
 80022f6:	611a      	str	r2, [r3, #16]
      }

      /* Set the LeftShift parameter: it is applied to the final result with or without oversampling */
      MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	691b      	ldr	r3, [r3, #16]
 80022fe:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	430a      	orrs	r2, r1
 800230c:	611a      	str	r2, [r3, #16]
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance != ADC3)
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4a1b      	ldr	r2, [pc, #108]	; (8002380 <HAL_ADC_Init+0x404>)
 8002314:	4293      	cmp	r3, r2
 8002316:	d002      	beq.n	800231e <HAL_ADC_Init+0x3a2>
      {
        /* Configure the BOOST Mode */
        ADC_ConfigureBoostMode(hadc);
 8002318:	6878      	ldr	r0, [r7, #4]
 800231a:	f000 fd67 	bl	8002dec <ADC_ConfigureBoostMode>
    /*   Note: Scan mode is not present by hardware on this device, but       */
    /*   emulated by software for alignment over all STM32 devices.           */
    /* - if scan mode is enabled, regular channels sequence length is set to  */
    /*   parameter "NbrOfConversion".                                         */

    if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	691b      	ldr	r3, [r3, #16]
 8002322:	2b01      	cmp	r3, #1
 8002324:	d10c      	bne.n	8002340 <HAL_ADC_Init+0x3c4>
    {
      /* Set number of ranks in regular group sequencer */
      MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800232c:	f023 010f 	bic.w	r1, r3, #15
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	69db      	ldr	r3, [r3, #28]
 8002334:	1e5a      	subs	r2, r3, #1
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	430a      	orrs	r2, r1
 800233c:	631a      	str	r2, [r3, #48]	; 0x30
 800233e:	e007      	b.n	8002350 <HAL_ADC_Init+0x3d4>
    }
    else
    {
      CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	f022 020f 	bic.w	r2, r2, #15
 800234e:	631a      	str	r2, [r3, #48]	; 0x30
    }

    /* Initialize the ADC state */
    /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
    ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002354:	f023 0303 	bic.w	r3, r3, #3
 8002358:	f043 0201 	orr.w	r2, r3, #1
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	661a      	str	r2, [r3, #96]	; 0x60
 8002360:	e007      	b.n	8002372 <HAL_ADC_Init+0x3f6>
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002362:	687b      	ldr	r3, [r7, #4]
 8002364:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002366:	f043 0210 	orr.w	r2, r3, #16
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 800236e:	2301      	movs	r3, #1
 8002370:	77fb      	strb	r3, [r7, #31]
  }

  /* Return function status */
  return tmp_hal_status;
 8002372:	7ffb      	ldrb	r3, [r7, #31]
}
 8002374:	4618      	mov	r0, r3
 8002376:	3724      	adds	r7, #36	; 0x24
 8002378:	46bd      	mov	sp, r7
 800237a:	bd90      	pop	{r4, r7, pc}
 800237c:	ffffbffc 	.word	0xffffbffc
 8002380:	58026000 	.word	0x58026000
 8002384:	fc00f81f 	.word	0xfc00f81f
 8002388:	fc00f81e 	.word	0xfc00f81e

0800238c <HAL_ADC_ConfigChannel>:
  * @param hadc ADC handle
  * @param sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 800238c:	b590      	push	{r4, r7, lr}
 800238e:	b0b9      	sub	sp, #228	; 0xe4
 8002390:	af00      	add	r7, sp, #0
 8002392:	6078      	str	r0, [r7, #4]
 8002394:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002396:	2300      	movs	r3, #0
 8002398:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
  uint32_t tmpOffsetShifted;
  uint32_t tmp_config_internal_channel;
  __IO uint32_t wait_loop_index = 0;
 800239c:	2300      	movs	r3, #0
 800239e:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
  assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
  /* Check offset range according to oversampling setting */
  if (hadc->Init.OversamplingMode == ENABLE)
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80023a6:	2b01      	cmp	r3, #1
  /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
     ignored (considered as reset) */
  assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENABLE)));

  /* Verification of channel number */
  if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
 80023a8:	683b      	ldr	r3, [r7, #0]
 80023aa:	68db      	ldr	r3, [r3, #12]
 80023ac:	4aab      	ldr	r2, [pc, #684]	; (800265c <HAL_ADC_ConfigChannel+0x2d0>)
 80023ae:	4293      	cmp	r3, r2
    }
#endif
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80023b6:	2b01      	cmp	r3, #1
 80023b8:	d102      	bne.n	80023c0 <HAL_ADC_ConfigChannel+0x34>
 80023ba:	2302      	movs	r3, #2
 80023bc:	f000 bcfe 	b.w	8002dbc <HAL_ADC_ConfigChannel+0xa30>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	2201      	movs	r2, #1
 80023c4:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel rank                                                          */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	4618      	mov	r0, r3
 80023ce:	f7ff fdae 	bl	8001f2e <LL_ADC_REG_IsConversionOngoing>
 80023d2:	4603      	mov	r3, r0
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	f040 84e2 	bne.w	8002d9e <HAL_ADC_ConfigChannel+0xa12>
  {
    if (!(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel)))
 80023da:	683b      	ldr	r3, [r7, #0]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	2b00      	cmp	r3, #0
 80023e0:	db38      	blt.n	8002454 <HAL_ADC_ConfigChannel+0xc8>
    {
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance != ADC3)
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	4a9e      	ldr	r2, [pc, #632]	; (8002660 <HAL_ADC_ConfigChannel+0x2d4>)
 80023e8:	4293      	cmp	r3, r2
 80023ea:	d033      	beq.n	8002454 <HAL_ADC_ConfigChannel+0xc8>
      {
        /* ADC channels preselection */
        hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
 80023ec:	683b      	ldr	r3, [r7, #0]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80023f4:	2b00      	cmp	r3, #0
 80023f6:	d108      	bne.n	800240a <HAL_ADC_ConfigChannel+0x7e>
 80023f8:	683b      	ldr	r3, [r7, #0]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	0e9b      	lsrs	r3, r3, #26
 80023fe:	f003 031f 	and.w	r3, r3, #31
 8002402:	2201      	movs	r2, #1
 8002404:	fa02 f303 	lsl.w	r3, r2, r3
 8002408:	e01d      	b.n	8002446 <HAL_ADC_ConfigChannel+0xba>
 800240a:	683b      	ldr	r3, [r7, #0]
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002412:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002416:	fa93 f3a3 	rbit	r3, r3
 800241a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 800241e:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8002422:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 8002426:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800242a:	2b00      	cmp	r3, #0
 800242c:	d101      	bne.n	8002432 <HAL_ADC_ConfigChannel+0xa6>
  {
    return 32U;
 800242e:	2320      	movs	r3, #32
 8002430:	e004      	b.n	800243c <HAL_ADC_ConfigChannel+0xb0>
  }
  return __builtin_clz(value);
 8002432:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8002436:	fab3 f383 	clz	r3, r3
 800243a:	b2db      	uxtb	r3, r3
 800243c:	f003 031f 	and.w	r3, r3, #31
 8002440:	2201      	movs	r2, #1
 8002442:	fa02 f303 	lsl.w	r3, r2, r3
 8002446:	687a      	ldr	r2, [r7, #4]
 8002448:	6812      	ldr	r2, [r2, #0]
 800244a:	69d1      	ldr	r1, [r2, #28]
 800244c:	687a      	ldr	r2, [r7, #4]
 800244e:	6812      	ldr	r2, [r2, #0]
 8002450:	430b      	orrs	r3, r1
 8002452:	61d3      	str	r3, [r2, #28]
      hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
#endif /* ADC_VER_V5_V90 */
    }

    /* Set ADC group regular sequence: channel on the selected scan sequence rank */
    LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	6818      	ldr	r0, [r3, #0]
 8002458:	683b      	ldr	r3, [r7, #0]
 800245a:	6859      	ldr	r1, [r3, #4]
 800245c:	683b      	ldr	r3, [r7, #0]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	461a      	mov	r2, r3
 8002462:	f7ff fc6b 	bl	8001d3c <LL_ADC_REG_SetSequencerRanks>
    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated when ADC is disabled or enabled without   */
    /* conversion on going on regular group:                                    */
    /*  - Channel sampling time                                                 */
    /*  - Channel offset                                                        */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	4618      	mov	r0, r3
 800246c:	f7ff fd5f 	bl	8001f2e <LL_ADC_REG_IsConversionOngoing>
 8002470:	f8c7 00d4 	str.w	r0, [r7, #212]	; 0xd4
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	4618      	mov	r0, r3
 800247a:	f7ff fd6b 	bl	8001f54 <LL_ADC_INJ_IsConversionOngoing>
 800247e:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 8002482:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8002486:	2b00      	cmp	r3, #0
 8002488:	f040 8270 	bne.w	800296c <HAL_ADC_ConfigChannel+0x5e0>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 800248c:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 8002490:	2b00      	cmp	r3, #0
 8002492:	f040 826b 	bne.w	800296c <HAL_ADC_ConfigChannel+0x5e0>
       )
    {
      /* Set sampling time of the selected ADC channel */
      LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	6818      	ldr	r0, [r3, #0]
 800249a:	683b      	ldr	r3, [r7, #0]
 800249c:	6819      	ldr	r1, [r3, #0]
 800249e:	683b      	ldr	r3, [r7, #0]
 80024a0:	689b      	ldr	r3, [r3, #8]
 80024a2:	461a      	mov	r2, r3
 80024a4:	f7ff fc76 	bl	8001d94 <LL_ADC_SetChannelSamplingTime>
      /* Configure the offset: offset enable/disable, channel, offset value */

      /* Shift the offset with respect to the selected ADC resolution. */
      /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance == ADC3)
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	4a6c      	ldr	r2, [pc, #432]	; (8002660 <HAL_ADC_ConfigChannel+0x2d4>)
 80024ae:	4293      	cmp	r3, r2
 80024b0:	d10d      	bne.n	80024ce <HAL_ADC_ConfigChannel+0x142>
      {
        tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 80024b2:	683b      	ldr	r3, [r7, #0]
 80024b4:	695a      	ldr	r2, [r3, #20]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	68db      	ldr	r3, [r3, #12]
 80024bc:	08db      	lsrs	r3, r3, #3
 80024be:	f003 0303 	and.w	r3, r3, #3
 80024c2:	005b      	lsls	r3, r3, #1
 80024c4:	fa02 f303 	lsl.w	r3, r2, r3
 80024c8:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80024cc:	e032      	b.n	8002534 <HAL_ADC_ConfigChannel+0x1a8>
      }
      else
#endif /* ADC_VER_V5_V90 */
      {
        tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 80024ce:	4b65      	ldr	r3, [pc, #404]	; (8002664 <HAL_ADC_ConfigChannel+0x2d8>)
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 80024d6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80024da:	d10b      	bne.n	80024f4 <HAL_ADC_ConfigChannel+0x168>
 80024dc:	683b      	ldr	r3, [r7, #0]
 80024de:	695a      	ldr	r2, [r3, #20]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	68db      	ldr	r3, [r3, #12]
 80024e6:	089b      	lsrs	r3, r3, #2
 80024e8:	f003 0307 	and.w	r3, r3, #7
 80024ec:	005b      	lsls	r3, r3, #1
 80024ee:	fa02 f303 	lsl.w	r3, r2, r3
 80024f2:	e01d      	b.n	8002530 <HAL_ADC_ConfigChannel+0x1a4>
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	68db      	ldr	r3, [r3, #12]
 80024fa:	f003 0310 	and.w	r3, r3, #16
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d10b      	bne.n	800251a <HAL_ADC_ConfigChannel+0x18e>
 8002502:	683b      	ldr	r3, [r7, #0]
 8002504:	695a      	ldr	r2, [r3, #20]
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	68db      	ldr	r3, [r3, #12]
 800250c:	089b      	lsrs	r3, r3, #2
 800250e:	f003 0307 	and.w	r3, r3, #7
 8002512:	005b      	lsls	r3, r3, #1
 8002514:	fa02 f303 	lsl.w	r3, r2, r3
 8002518:	e00a      	b.n	8002530 <HAL_ADC_ConfigChannel+0x1a4>
 800251a:	683b      	ldr	r3, [r7, #0]
 800251c:	695a      	ldr	r2, [r3, #20]
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	68db      	ldr	r3, [r3, #12]
 8002524:	089b      	lsrs	r3, r3, #2
 8002526:	f003 0304 	and.w	r3, r3, #4
 800252a:	005b      	lsls	r3, r3, #1
 800252c:	fa02 f303 	lsl.w	r3, r2, r3
 8002530:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
      }
      
      if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
 8002534:	683b      	ldr	r3, [r7, #0]
 8002536:	691b      	ldr	r3, [r3, #16]
 8002538:	2b04      	cmp	r3, #4
 800253a:	d048      	beq.n	80025ce <HAL_ADC_ConfigChannel+0x242>
      {
        /* Set ADC selected offset number */
        LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted);
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	6818      	ldr	r0, [r3, #0]
 8002540:	683b      	ldr	r3, [r7, #0]
 8002542:	6919      	ldr	r1, [r3, #16]
 8002544:	683b      	ldr	r3, [r7, #0]
 8002546:	681a      	ldr	r2, [r3, #0]
 8002548:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800254c:	f7ff fb04 	bl	8001b58 <LL_ADC_SetOffset>

#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	4a42      	ldr	r2, [pc, #264]	; (8002660 <HAL_ADC_ConfigChannel+0x2d4>)
 8002556:	4293      	cmp	r3, r2
 8002558:	d119      	bne.n	800258e <HAL_ADC_ConfigChannel+0x202>
        {
          assert_param(IS_ADC3_OFFSET_SIGN(sConfig->OffsetSign));
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
          /* Set ADC selected offset sign & saturation */
          LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	6818      	ldr	r0, [r3, #0]
 800255e:	683b      	ldr	r3, [r7, #0]
 8002560:	6919      	ldr	r1, [r3, #16]
 8002562:	683b      	ldr	r3, [r7, #0]
 8002564:	69db      	ldr	r3, [r3, #28]
 8002566:	461a      	mov	r2, r3
 8002568:	f7ff fb9c 	bl	8001ca4 <LL_ADC_SetOffsetSign>
          LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturation == ENABLE) ? LL_ADC_OFFSET_SATURATION_ENABLE : LL_ADC_OFFSET_SATURATION_DISABLE);
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	6818      	ldr	r0, [r3, #0]
 8002570:	683b      	ldr	r3, [r7, #0]
 8002572:	6919      	ldr	r1, [r3, #16]
 8002574:	683b      	ldr	r3, [r7, #0]
 8002576:	f893 3020 	ldrb.w	r3, [r3, #32]
 800257a:	2b01      	cmp	r3, #1
 800257c:	d102      	bne.n	8002584 <HAL_ADC_ConfigChannel+0x1f8>
 800257e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002582:	e000      	b.n	8002586 <HAL_ADC_ConfigChannel+0x1fa>
 8002584:	2300      	movs	r3, #0
 8002586:	461a      	mov	r2, r3
 8002588:	f7ff fb6a 	bl	8001c60 <LL_ADC_SetOffsetSaturation>
 800258c:	e1ee      	b.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
        else
#endif /* ADC_VER_V5_V90 */
        {
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSignedSaturation));
          /* Set ADC selected offset signed saturation */
          LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSignedSaturation == ENABLE) ? LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE : LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE);
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	6818      	ldr	r0, [r3, #0]
 8002592:	683b      	ldr	r3, [r7, #0]
 8002594:	6919      	ldr	r1, [r3, #16]
 8002596:	683b      	ldr	r3, [r7, #0]
 8002598:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800259c:	2b01      	cmp	r3, #1
 800259e:	d102      	bne.n	80025a6 <HAL_ADC_ConfigChannel+0x21a>
 80025a0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80025a4:	e000      	b.n	80025a8 <HAL_ADC_ConfigChannel+0x21c>
 80025a6:	2300      	movs	r3, #0
 80025a8:	461a      	mov	r2, r3
 80025aa:	f7ff fb37 	bl	8001c1c <LL_ADC_SetOffsetSignedSaturation>

          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetRightShift));
          /* Set ADC selected offset right shift */
          LL_ADC_SetDataRightShift(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetRightShift == ENABLE) ? LL_ADC_OFFSET_RSHIFT_ENABLE : LL_ADC_OFFSET_RSHIFT_DISABLE);
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	6818      	ldr	r0, [r3, #0]
 80025b2:	683b      	ldr	r3, [r7, #0]
 80025b4:	6919      	ldr	r1, [r3, #16]
 80025b6:	683b      	ldr	r3, [r7, #0]
 80025b8:	7e1b      	ldrb	r3, [r3, #24]
 80025ba:	2b01      	cmp	r3, #1
 80025bc:	d102      	bne.n	80025c4 <HAL_ADC_ConfigChannel+0x238>
 80025be:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80025c2:	e000      	b.n	80025c6 <HAL_ADC_ConfigChannel+0x23a>
 80025c4:	2300      	movs	r3, #0
 80025c6:	461a      	mov	r2, r3
 80025c8:	f7ff fb0e 	bl	8001be8 <LL_ADC_SetDataRightShift>
 80025cc:	e1ce      	b.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
      {
        /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is enabled.
          If this is the case, offset OFRx is disabled since
          sConfig->OffsetNumber = ADC_OFFSET_NONE. */
#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	4a23      	ldr	r2, [pc, #140]	; (8002660 <HAL_ADC_ConfigChannel+0x2d4>)
 80025d4:	4293      	cmp	r3, r2
 80025d6:	f040 8181 	bne.w	80028dc <HAL_ADC_ConfigChannel+0x550>
        {
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	2100      	movs	r1, #0
 80025e0:	4618      	mov	r0, r3
 80025e2:	f7ff faeb 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80025e6:	4603      	mov	r3, r0
 80025e8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d10a      	bne.n	8002606 <HAL_ADC_ConfigChannel+0x27a>
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	2100      	movs	r1, #0
 80025f6:	4618      	mov	r0, r3
 80025f8:	f7ff fae0 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80025fc:	4603      	mov	r3, r0
 80025fe:	0e9b      	lsrs	r3, r3, #26
 8002600:	f003 021f 	and.w	r2, r3, #31
 8002604:	e01e      	b.n	8002644 <HAL_ADC_ConfigChannel+0x2b8>
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	2100      	movs	r1, #0
 800260c:	4618      	mov	r0, r3
 800260e:	f7ff fad5 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 8002612:	4603      	mov	r3, r0
 8002614:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002618:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800261c:	fa93 f3a3 	rbit	r3, r3
 8002620:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  return result;
 8002624:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8002628:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  if (value == 0U)
 800262c:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 8002630:	2b00      	cmp	r3, #0
 8002632:	d101      	bne.n	8002638 <HAL_ADC_ConfigChannel+0x2ac>
    return 32U;
 8002634:	2320      	movs	r3, #32
 8002636:	e004      	b.n	8002642 <HAL_ADC_ConfigChannel+0x2b6>
  return __builtin_clz(value);
 8002638:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800263c:	fab3 f383 	clz	r3, r3
 8002640:	b2db      	uxtb	r3, r3
 8002642:	461a      	mov	r2, r3
 8002644:	683b      	ldr	r3, [r7, #0]
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800264c:	2b00      	cmp	r3, #0
 800264e:	d10b      	bne.n	8002668 <HAL_ADC_ConfigChannel+0x2dc>
 8002650:	683b      	ldr	r3, [r7, #0]
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	0e9b      	lsrs	r3, r3, #26
 8002656:	f003 031f 	and.w	r3, r3, #31
 800265a:	e01e      	b.n	800269a <HAL_ADC_ConfigChannel+0x30e>
 800265c:	47ff0000 	.word	0x47ff0000
 8002660:	58026000 	.word	0x58026000
 8002664:	5c001000 	.word	0x5c001000
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002670:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002674:	fa93 f3a3 	rbit	r3, r3
 8002678:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
  return result;
 800267c:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8002680:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  if (value == 0U)
 8002684:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8002688:	2b00      	cmp	r3, #0
 800268a:	d101      	bne.n	8002690 <HAL_ADC_ConfigChannel+0x304>
    return 32U;
 800268c:	2320      	movs	r3, #32
 800268e:	e004      	b.n	800269a <HAL_ADC_ConfigChannel+0x30e>
  return __builtin_clz(value);
 8002690:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8002694:	fab3 f383 	clz	r3, r3
 8002698:	b2db      	uxtb	r3, r3
 800269a:	429a      	cmp	r2, r3
 800269c:	d106      	bne.n	80026ac <HAL_ADC_ConfigChannel+0x320>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	2200      	movs	r2, #0
 80026a4:	2100      	movs	r1, #0
 80026a6:	4618      	mov	r0, r3
 80026a8:	f7ff fb1e 	bl	8001ce8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	2101      	movs	r1, #1
 80026b2:	4618      	mov	r0, r3
 80026b4:	f7ff fa82 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80026b8:	4603      	mov	r3, r0
 80026ba:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80026be:	2b00      	cmp	r3, #0
 80026c0:	d10a      	bne.n	80026d8 <HAL_ADC_ConfigChannel+0x34c>
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	2101      	movs	r1, #1
 80026c8:	4618      	mov	r0, r3
 80026ca:	f7ff fa77 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80026ce:	4603      	mov	r3, r0
 80026d0:	0e9b      	lsrs	r3, r3, #26
 80026d2:	f003 021f 	and.w	r2, r3, #31
 80026d6:	e01e      	b.n	8002716 <HAL_ADC_ConfigChannel+0x38a>
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	2101      	movs	r1, #1
 80026de:	4618      	mov	r0, r3
 80026e0:	f7ff fa6c 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80026e4:	4603      	mov	r3, r0
 80026e6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80026ea:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80026ee:	fa93 f3a3 	rbit	r3, r3
 80026f2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  return result;
 80026f6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80026fa:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  if (value == 0U)
 80026fe:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8002702:	2b00      	cmp	r3, #0
 8002704:	d101      	bne.n	800270a <HAL_ADC_ConfigChannel+0x37e>
    return 32U;
 8002706:	2320      	movs	r3, #32
 8002708:	e004      	b.n	8002714 <HAL_ADC_ConfigChannel+0x388>
  return __builtin_clz(value);
 800270a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800270e:	fab3 f383 	clz	r3, r3
 8002712:	b2db      	uxtb	r3, r3
 8002714:	461a      	mov	r2, r3
 8002716:	683b      	ldr	r3, [r7, #0]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800271e:	2b00      	cmp	r3, #0
 8002720:	d105      	bne.n	800272e <HAL_ADC_ConfigChannel+0x3a2>
 8002722:	683b      	ldr	r3, [r7, #0]
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	0e9b      	lsrs	r3, r3, #26
 8002728:	f003 031f 	and.w	r3, r3, #31
 800272c:	e018      	b.n	8002760 <HAL_ADC_ConfigChannel+0x3d4>
 800272e:	683b      	ldr	r3, [r7, #0]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002736:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800273a:	fa93 f3a3 	rbit	r3, r3
 800273e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  return result;
 8002742:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002746:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  if (value == 0U)
 800274a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800274e:	2b00      	cmp	r3, #0
 8002750:	d101      	bne.n	8002756 <HAL_ADC_ConfigChannel+0x3ca>
    return 32U;
 8002752:	2320      	movs	r3, #32
 8002754:	e004      	b.n	8002760 <HAL_ADC_ConfigChannel+0x3d4>
  return __builtin_clz(value);
 8002756:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800275a:	fab3 f383 	clz	r3, r3
 800275e:	b2db      	uxtb	r3, r3
 8002760:	429a      	cmp	r2, r3
 8002762:	d106      	bne.n	8002772 <HAL_ADC_ConfigChannel+0x3e6>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	2200      	movs	r2, #0
 800276a:	2101      	movs	r1, #1
 800276c:	4618      	mov	r0, r3
 800276e:	f7ff fabb 	bl	8001ce8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	2102      	movs	r1, #2
 8002778:	4618      	mov	r0, r3
 800277a:	f7ff fa1f 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 800277e:	4603      	mov	r3, r0
 8002780:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002784:	2b00      	cmp	r3, #0
 8002786:	d10a      	bne.n	800279e <HAL_ADC_ConfigChannel+0x412>
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	2102      	movs	r1, #2
 800278e:	4618      	mov	r0, r3
 8002790:	f7ff fa14 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 8002794:	4603      	mov	r3, r0
 8002796:	0e9b      	lsrs	r3, r3, #26
 8002798:	f003 021f 	and.w	r2, r3, #31
 800279c:	e01e      	b.n	80027dc <HAL_ADC_ConfigChannel+0x450>
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	2102      	movs	r1, #2
 80027a4:	4618      	mov	r0, r3
 80027a6:	f7ff fa09 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80027aa:	4603      	mov	r3, r0
 80027ac:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80027b0:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80027b4:	fa93 f3a3 	rbit	r3, r3
 80027b8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  return result;
 80027bc:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80027c0:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  if (value == 0U)
 80027c4:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80027c8:	2b00      	cmp	r3, #0
 80027ca:	d101      	bne.n	80027d0 <HAL_ADC_ConfigChannel+0x444>
    return 32U;
 80027cc:	2320      	movs	r3, #32
 80027ce:	e004      	b.n	80027da <HAL_ADC_ConfigChannel+0x44e>
  return __builtin_clz(value);
 80027d0:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80027d4:	fab3 f383 	clz	r3, r3
 80027d8:	b2db      	uxtb	r3, r3
 80027da:	461a      	mov	r2, r3
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80027e4:	2b00      	cmp	r3, #0
 80027e6:	d105      	bne.n	80027f4 <HAL_ADC_ConfigChannel+0x468>
 80027e8:	683b      	ldr	r3, [r7, #0]
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	0e9b      	lsrs	r3, r3, #26
 80027ee:	f003 031f 	and.w	r3, r3, #31
 80027f2:	e014      	b.n	800281e <HAL_ADC_ConfigChannel+0x492>
 80027f4:	683b      	ldr	r3, [r7, #0]
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	67fb      	str	r3, [r7, #124]	; 0x7c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80027fa:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80027fc:	fa93 f3a3 	rbit	r3, r3
 8002800:	67bb      	str	r3, [r7, #120]	; 0x78
  return result;
 8002802:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002804:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
  if (value == 0U)
 8002808:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800280c:	2b00      	cmp	r3, #0
 800280e:	d101      	bne.n	8002814 <HAL_ADC_ConfigChannel+0x488>
    return 32U;
 8002810:	2320      	movs	r3, #32
 8002812:	e004      	b.n	800281e <HAL_ADC_ConfigChannel+0x492>
  return __builtin_clz(value);
 8002814:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002818:	fab3 f383 	clz	r3, r3
 800281c:	b2db      	uxtb	r3, r3
 800281e:	429a      	cmp	r2, r3
 8002820:	d106      	bne.n	8002830 <HAL_ADC_ConfigChannel+0x4a4>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	2200      	movs	r2, #0
 8002828:	2102      	movs	r1, #2
 800282a:	4618      	mov	r0, r3
 800282c:	f7ff fa5c 	bl	8001ce8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	2103      	movs	r1, #3
 8002836:	4618      	mov	r0, r3
 8002838:	f7ff f9c0 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 800283c:	4603      	mov	r3, r0
 800283e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002842:	2b00      	cmp	r3, #0
 8002844:	d10a      	bne.n	800285c <HAL_ADC_ConfigChannel+0x4d0>
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	2103      	movs	r1, #3
 800284c:	4618      	mov	r0, r3
 800284e:	f7ff f9b5 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 8002852:	4603      	mov	r3, r0
 8002854:	0e9b      	lsrs	r3, r3, #26
 8002856:	f003 021f 	and.w	r2, r3, #31
 800285a:	e017      	b.n	800288c <HAL_ADC_ConfigChannel+0x500>
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	2103      	movs	r1, #3
 8002862:	4618      	mov	r0, r3
 8002864:	f7ff f9aa 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 8002868:	4603      	mov	r3, r0
 800286a:	673b      	str	r3, [r7, #112]	; 0x70
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800286c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800286e:	fa93 f3a3 	rbit	r3, r3
 8002872:	66fb      	str	r3, [r7, #108]	; 0x6c
  return result;
 8002874:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002876:	677b      	str	r3, [r7, #116]	; 0x74
  if (value == 0U)
 8002878:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800287a:	2b00      	cmp	r3, #0
 800287c:	d101      	bne.n	8002882 <HAL_ADC_ConfigChannel+0x4f6>
    return 32U;
 800287e:	2320      	movs	r3, #32
 8002880:	e003      	b.n	800288a <HAL_ADC_ConfigChannel+0x4fe>
  return __builtin_clz(value);
 8002882:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002884:	fab3 f383 	clz	r3, r3
 8002888:	b2db      	uxtb	r3, r3
 800288a:	461a      	mov	r2, r3
 800288c:	683b      	ldr	r3, [r7, #0]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002894:	2b00      	cmp	r3, #0
 8002896:	d105      	bne.n	80028a4 <HAL_ADC_ConfigChannel+0x518>
 8002898:	683b      	ldr	r3, [r7, #0]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	0e9b      	lsrs	r3, r3, #26
 800289e:	f003 031f 	and.w	r3, r3, #31
 80028a2:	e011      	b.n	80028c8 <HAL_ADC_ConfigChannel+0x53c>
 80028a4:	683b      	ldr	r3, [r7, #0]
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	667b      	str	r3, [r7, #100]	; 0x64
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80028aa:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80028ac:	fa93 f3a3 	rbit	r3, r3
 80028b0:	663b      	str	r3, [r7, #96]	; 0x60
  return result;
 80028b2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80028b4:	66bb      	str	r3, [r7, #104]	; 0x68
  if (value == 0U)
 80028b6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80028b8:	2b00      	cmp	r3, #0
 80028ba:	d101      	bne.n	80028c0 <HAL_ADC_ConfigChannel+0x534>
    return 32U;
 80028bc:	2320      	movs	r3, #32
 80028be:	e003      	b.n	80028c8 <HAL_ADC_ConfigChannel+0x53c>
  return __builtin_clz(value);
 80028c0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80028c2:	fab3 f383 	clz	r3, r3
 80028c6:	b2db      	uxtb	r3, r3
 80028c8:	429a      	cmp	r2, r3
 80028ca:	d14f      	bne.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	2200      	movs	r2, #0
 80028d2:	2103      	movs	r1, #3
 80028d4:	4618      	mov	r0, r3
 80028d6:	f7ff fa07 	bl	8001ce8 <LL_ADC_SetOffsetState>
 80028da:	e047      	b.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
          }
        }
        else
#endif /* ADC_VER_V5_V90 */
        {
          if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80028e2:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 80028e6:	683b      	ldr	r3, [r7, #0]
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	069b      	lsls	r3, r3, #26
 80028ec:	429a      	cmp	r2, r3
 80028ee:	d107      	bne.n	8002900 <HAL_ADC_ConfigChannel+0x574>
          {
            CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 80028fe:	661a      	str	r2, [r3, #96]	; 0x60
          }
          if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	681b      	ldr	r3, [r3, #0]
 8002904:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002906:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 800290a:	683b      	ldr	r3, [r7, #0]
 800290c:	681b      	ldr	r3, [r3, #0]
 800290e:	069b      	lsls	r3, r3, #26
 8002910:	429a      	cmp	r2, r3
 8002912:	d107      	bne.n	8002924 <HAL_ADC_ConfigChannel+0x598>
          {
            CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002922:	665a      	str	r2, [r3, #100]	; 0x64
          }
          if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800292a:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 800292e:	683b      	ldr	r3, [r7, #0]
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	069b      	lsls	r3, r3, #26
 8002934:	429a      	cmp	r2, r3
 8002936:	d107      	bne.n	8002948 <HAL_ADC_ConfigChannel+0x5bc>
          {
            CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	681b      	ldr	r3, [r3, #0]
 8002942:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002946:	669a      	str	r2, [r3, #104]	; 0x68
          }
          if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800294e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002952:	683b      	ldr	r3, [r7, #0]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	069b      	lsls	r3, r3, #26
 8002958:	429a      	cmp	r2, r3
 800295a:	d107      	bne.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
          {
            CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 800296a:	66da      	str	r2, [r3, #108]	; 0x6c

    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated only when ADC is disabled:                */
    /*  - Single or differential mode                                           */
    /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	4618      	mov	r0, r3
 8002972:	f7ff fac9 	bl	8001f08 <LL_ADC_IsEnabled>
 8002976:	4603      	mov	r3, r0
 8002978:	2b00      	cmp	r3, #0
 800297a:	f040 8219 	bne.w	8002db0 <HAL_ADC_ConfigChannel+0xa24>
    {
      /* Set mode single-ended or differential input of the selected ADC channel */
      LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	6818      	ldr	r0, [r3, #0]
 8002982:	683b      	ldr	r3, [r7, #0]
 8002984:	6819      	ldr	r1, [r3, #0]
 8002986:	683b      	ldr	r3, [r7, #0]
 8002988:	68db      	ldr	r3, [r3, #12]
 800298a:	461a      	mov	r2, r3
 800298c:	f7ff fa2e 	bl	8001dec <LL_ADC_SetChannelSingleDiff>

      /* Configuration of differential mode */
      if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
 8002990:	683b      	ldr	r3, [r7, #0]
 8002992:	68db      	ldr	r3, [r3, #12]
 8002994:	4aa1      	ldr	r2, [pc, #644]	; (8002c1c <HAL_ADC_ConfigChannel+0x890>)
 8002996:	4293      	cmp	r3, r2
 8002998:	f040 812e 	bne.w	8002bf8 <HAL_ADC_ConfigChannel+0x86c>
      {
        /* Set sampling time of the selected ADC channel */
        /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range */
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	6818      	ldr	r0, [r3, #0]
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 80029a0:	683b      	ldr	r3, [r7, #0]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d10b      	bne.n	80029c4 <HAL_ADC_ConfigChannel+0x638>
 80029ac:	683b      	ldr	r3, [r7, #0]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	0e9b      	lsrs	r3, r3, #26
 80029b2:	3301      	adds	r3, #1
 80029b4:	f003 031f 	and.w	r3, r3, #31
 80029b8:	2b09      	cmp	r3, #9
 80029ba:	bf94      	ite	ls
 80029bc:	2301      	movls	r3, #1
 80029be:	2300      	movhi	r3, #0
 80029c0:	b2db      	uxtb	r3, r3
 80029c2:	e019      	b.n	80029f8 <HAL_ADC_ConfigChannel+0x66c>
 80029c4:	683b      	ldr	r3, [r7, #0]
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	65bb      	str	r3, [r7, #88]	; 0x58
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80029ca:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80029cc:	fa93 f3a3 	rbit	r3, r3
 80029d0:	657b      	str	r3, [r7, #84]	; 0x54
  return result;
 80029d2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80029d4:	65fb      	str	r3, [r7, #92]	; 0x5c
  if (value == 0U)
 80029d6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d101      	bne.n	80029e0 <HAL_ADC_ConfigChannel+0x654>
    return 32U;
 80029dc:	2320      	movs	r3, #32
 80029de:	e003      	b.n	80029e8 <HAL_ADC_ConfigChannel+0x65c>
  return __builtin_clz(value);
 80029e0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80029e2:	fab3 f383 	clz	r3, r3
 80029e6:	b2db      	uxtb	r3, r3
 80029e8:	3301      	adds	r3, #1
 80029ea:	f003 031f 	and.w	r3, r3, #31
 80029ee:	2b09      	cmp	r3, #9
 80029f0:	bf94      	ite	ls
 80029f2:	2301      	movls	r3, #1
 80029f4:	2300      	movhi	r3, #0
 80029f6:	b2db      	uxtb	r3, r3
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	d079      	beq.n	8002af0 <HAL_ADC_ConfigChannel+0x764>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 80029fc:	683b      	ldr	r3, [r7, #0]
 80029fe:	681b      	ldr	r3, [r3, #0]
 8002a00:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a04:	2b00      	cmp	r3, #0
 8002a06:	d107      	bne.n	8002a18 <HAL_ADC_ConfigChannel+0x68c>
 8002a08:	683b      	ldr	r3, [r7, #0]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	0e9b      	lsrs	r3, r3, #26
 8002a0e:	3301      	adds	r3, #1
 8002a10:	069b      	lsls	r3, r3, #26
 8002a12:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002a16:	e015      	b.n	8002a44 <HAL_ADC_ConfigChannel+0x6b8>
 8002a18:	683b      	ldr	r3, [r7, #0]
 8002a1a:	681b      	ldr	r3, [r3, #0]
 8002a1c:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002a1e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002a20:	fa93 f3a3 	rbit	r3, r3
 8002a24:	64bb      	str	r3, [r7, #72]	; 0x48
  return result;
 8002a26:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002a28:	653b      	str	r3, [r7, #80]	; 0x50
  if (value == 0U)
 8002a2a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	d101      	bne.n	8002a34 <HAL_ADC_ConfigChannel+0x6a8>
    return 32U;
 8002a30:	2320      	movs	r3, #32
 8002a32:	e003      	b.n	8002a3c <HAL_ADC_ConfigChannel+0x6b0>
  return __builtin_clz(value);
 8002a34:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002a36:	fab3 f383 	clz	r3, r3
 8002a3a:	b2db      	uxtb	r3, r3
 8002a3c:	3301      	adds	r3, #1
 8002a3e:	069b      	lsls	r3, r3, #26
 8002a40:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002a44:	683b      	ldr	r3, [r7, #0]
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d109      	bne.n	8002a64 <HAL_ADC_ConfigChannel+0x6d8>
 8002a50:	683b      	ldr	r3, [r7, #0]
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	0e9b      	lsrs	r3, r3, #26
 8002a56:	3301      	adds	r3, #1
 8002a58:	f003 031f 	and.w	r3, r3, #31
 8002a5c:	2101      	movs	r1, #1
 8002a5e:	fa01 f303 	lsl.w	r3, r1, r3
 8002a62:	e017      	b.n	8002a94 <HAL_ADC_ConfigChannel+0x708>
 8002a64:	683b      	ldr	r3, [r7, #0]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	643b      	str	r3, [r7, #64]	; 0x40
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002a6a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002a6c:	fa93 f3a3 	rbit	r3, r3
 8002a70:	63fb      	str	r3, [r7, #60]	; 0x3c
  return result;
 8002a72:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002a74:	647b      	str	r3, [r7, #68]	; 0x44
  if (value == 0U)
 8002a76:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002a78:	2b00      	cmp	r3, #0
 8002a7a:	d101      	bne.n	8002a80 <HAL_ADC_ConfigChannel+0x6f4>
    return 32U;
 8002a7c:	2320      	movs	r3, #32
 8002a7e:	e003      	b.n	8002a88 <HAL_ADC_ConfigChannel+0x6fc>
  return __builtin_clz(value);
 8002a80:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002a82:	fab3 f383 	clz	r3, r3
 8002a86:	b2db      	uxtb	r3, r3
 8002a88:	3301      	adds	r3, #1
 8002a8a:	f003 031f 	and.w	r3, r3, #31
 8002a8e:	2101      	movs	r1, #1
 8002a90:	fa01 f303 	lsl.w	r3, r1, r3
 8002a94:	ea42 0103 	orr.w	r1, r2, r3
 8002a98:	683b      	ldr	r3, [r7, #0]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d10a      	bne.n	8002aba <HAL_ADC_ConfigChannel+0x72e>
 8002aa4:	683b      	ldr	r3, [r7, #0]
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	0e9b      	lsrs	r3, r3, #26
 8002aaa:	3301      	adds	r3, #1
 8002aac:	f003 021f 	and.w	r2, r3, #31
 8002ab0:	4613      	mov	r3, r2
 8002ab2:	005b      	lsls	r3, r3, #1
 8002ab4:	4413      	add	r3, r2
 8002ab6:	051b      	lsls	r3, r3, #20
 8002ab8:	e018      	b.n	8002aec <HAL_ADC_ConfigChannel+0x760>
 8002aba:	683b      	ldr	r3, [r7, #0]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002ac0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002ac2:	fa93 f3a3 	rbit	r3, r3
 8002ac6:	633b      	str	r3, [r7, #48]	; 0x30
  return result;
 8002ac8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002aca:	63bb      	str	r3, [r7, #56]	; 0x38
  if (value == 0U)
 8002acc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002ace:	2b00      	cmp	r3, #0
 8002ad0:	d101      	bne.n	8002ad6 <HAL_ADC_ConfigChannel+0x74a>
    return 32U;
 8002ad2:	2320      	movs	r3, #32
 8002ad4:	e003      	b.n	8002ade <HAL_ADC_ConfigChannel+0x752>
  return __builtin_clz(value);
 8002ad6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002ad8:	fab3 f383 	clz	r3, r3
 8002adc:	b2db      	uxtb	r3, r3
 8002ade:	3301      	adds	r3, #1
 8002ae0:	f003 021f 	and.w	r2, r3, #31
 8002ae4:	4613      	mov	r3, r2
 8002ae6:	005b      	lsls	r3, r3, #1
 8002ae8:	4413      	add	r3, r2
 8002aea:	051b      	lsls	r3, r3, #20
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002aec:	430b      	orrs	r3, r1
 8002aee:	e07e      	b.n	8002bee <HAL_ADC_ConfigChannel+0x862>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002af0:	683b      	ldr	r3, [r7, #0]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	d107      	bne.n	8002b0c <HAL_ADC_ConfigChannel+0x780>
 8002afc:	683b      	ldr	r3, [r7, #0]
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	0e9b      	lsrs	r3, r3, #26
 8002b02:	3301      	adds	r3, #1
 8002b04:	069b      	lsls	r3, r3, #26
 8002b06:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002b0a:	e015      	b.n	8002b38 <HAL_ADC_ConfigChannel+0x7ac>
 8002b0c:	683b      	ldr	r3, [r7, #0]
 8002b0e:	681b      	ldr	r3, [r3, #0]
 8002b10:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b12:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002b14:	fa93 f3a3 	rbit	r3, r3
 8002b18:	627b      	str	r3, [r7, #36]	; 0x24
  return result;
 8002b1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b1c:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (value == 0U)
 8002b1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002b20:	2b00      	cmp	r3, #0
 8002b22:	d101      	bne.n	8002b28 <HAL_ADC_ConfigChannel+0x79c>
    return 32U;
 8002b24:	2320      	movs	r3, #32
 8002b26:	e003      	b.n	8002b30 <HAL_ADC_ConfigChannel+0x7a4>
  return __builtin_clz(value);
 8002b28:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002b2a:	fab3 f383 	clz	r3, r3
 8002b2e:	b2db      	uxtb	r3, r3
 8002b30:	3301      	adds	r3, #1
 8002b32:	069b      	lsls	r3, r3, #26
 8002b34:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002b38:	683b      	ldr	r3, [r7, #0]
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b40:	2b00      	cmp	r3, #0
 8002b42:	d109      	bne.n	8002b58 <HAL_ADC_ConfigChannel+0x7cc>
 8002b44:	683b      	ldr	r3, [r7, #0]
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	0e9b      	lsrs	r3, r3, #26
 8002b4a:	3301      	adds	r3, #1
 8002b4c:	f003 031f 	and.w	r3, r3, #31
 8002b50:	2101      	movs	r1, #1
 8002b52:	fa01 f303 	lsl.w	r3, r1, r3
 8002b56:	e017      	b.n	8002b88 <HAL_ADC_ConfigChannel+0x7fc>
 8002b58:	683b      	ldr	r3, [r7, #0]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b5e:	69fb      	ldr	r3, [r7, #28]
 8002b60:	fa93 f3a3 	rbit	r3, r3
 8002b64:	61bb      	str	r3, [r7, #24]
  return result;
 8002b66:	69bb      	ldr	r3, [r7, #24]
 8002b68:	623b      	str	r3, [r7, #32]
  if (value == 0U)
 8002b6a:	6a3b      	ldr	r3, [r7, #32]
 8002b6c:	2b00      	cmp	r3, #0
 8002b6e:	d101      	bne.n	8002b74 <HAL_ADC_ConfigChannel+0x7e8>
    return 32U;
 8002b70:	2320      	movs	r3, #32
 8002b72:	e003      	b.n	8002b7c <HAL_ADC_ConfigChannel+0x7f0>
  return __builtin_clz(value);
 8002b74:	6a3b      	ldr	r3, [r7, #32]
 8002b76:	fab3 f383 	clz	r3, r3
 8002b7a:	b2db      	uxtb	r3, r3
 8002b7c:	3301      	adds	r3, #1
 8002b7e:	f003 031f 	and.w	r3, r3, #31
 8002b82:	2101      	movs	r1, #1
 8002b84:	fa01 f303 	lsl.w	r3, r1, r3
 8002b88:	ea42 0103 	orr.w	r1, r2, r3
 8002b8c:	683b      	ldr	r3, [r7, #0]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d10d      	bne.n	8002bb4 <HAL_ADC_ConfigChannel+0x828>
 8002b98:	683b      	ldr	r3, [r7, #0]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	0e9b      	lsrs	r3, r3, #26
 8002b9e:	3301      	adds	r3, #1
 8002ba0:	f003 021f 	and.w	r2, r3, #31
 8002ba4:	4613      	mov	r3, r2
 8002ba6:	005b      	lsls	r3, r3, #1
 8002ba8:	4413      	add	r3, r2
 8002baa:	3b1e      	subs	r3, #30
 8002bac:	051b      	lsls	r3, r3, #20
 8002bae:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002bb2:	e01b      	b.n	8002bec <HAL_ADC_ConfigChannel+0x860>
 8002bb4:	683b      	ldr	r3, [r7, #0]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	613b      	str	r3, [r7, #16]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002bba:	693b      	ldr	r3, [r7, #16]
 8002bbc:	fa93 f3a3 	rbit	r3, r3
 8002bc0:	60fb      	str	r3, [r7, #12]
  return result;
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	617b      	str	r3, [r7, #20]
  if (value == 0U)
 8002bc6:	697b      	ldr	r3, [r7, #20]
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d101      	bne.n	8002bd0 <HAL_ADC_ConfigChannel+0x844>
    return 32U;
 8002bcc:	2320      	movs	r3, #32
 8002bce:	e003      	b.n	8002bd8 <HAL_ADC_ConfigChannel+0x84c>
  return __builtin_clz(value);
 8002bd0:	697b      	ldr	r3, [r7, #20]
 8002bd2:	fab3 f383 	clz	r3, r3
 8002bd6:	b2db      	uxtb	r3, r3
 8002bd8:	3301      	adds	r3, #1
 8002bda:	f003 021f 	and.w	r2, r3, #31
 8002bde:	4613      	mov	r3, r2
 8002be0:	005b      	lsls	r3, r3, #1
 8002be2:	4413      	add	r3, r2
 8002be4:	3b1e      	subs	r3, #30
 8002be6:	051b      	lsls	r3, r3, #20
 8002be8:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002bec:	430b      	orrs	r3, r1
 8002bee:	683a      	ldr	r2, [r7, #0]
 8002bf0:	6892      	ldr	r2, [r2, #8]
 8002bf2:	4619      	mov	r1, r3
 8002bf4:	f7ff f8ce 	bl	8001d94 <LL_ADC_SetChannelSamplingTime>
      /* If internal channel selected, enable dedicated internal buffers and    */
      /* paths.                                                                 */
      /* Note: these internal measurement paths can be disabled using           */
      /* HAL_ADC_DeInit().                                                      */

      if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002bf8:	683b      	ldr	r3, [r7, #0]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	2b00      	cmp	r3, #0
 8002bfe:	f280 80d7 	bge.w	8002db0 <HAL_ADC_ConfigChannel+0xa24>
      {
        /* Configuration of common ADC parameters                                 */

        tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	4a06      	ldr	r2, [pc, #24]	; (8002c20 <HAL_ADC_ConfigChannel+0x894>)
 8002c08:	4293      	cmp	r3, r2
 8002c0a:	d004      	beq.n	8002c16 <HAL_ADC_ConfigChannel+0x88a>
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	4a04      	ldr	r2, [pc, #16]	; (8002c24 <HAL_ADC_ConfigChannel+0x898>)
 8002c12:	4293      	cmp	r3, r2
 8002c14:	d10a      	bne.n	8002c2c <HAL_ADC_ConfigChannel+0x8a0>
 8002c16:	4b04      	ldr	r3, [pc, #16]	; (8002c28 <HAL_ADC_ConfigChannel+0x89c>)
 8002c18:	e009      	b.n	8002c2e <HAL_ADC_ConfigChannel+0x8a2>
 8002c1a:	bf00      	nop
 8002c1c:	47ff0000 	.word	0x47ff0000
 8002c20:	40022000 	.word	0x40022000
 8002c24:	40022100 	.word	0x40022100
 8002c28:	40022300 	.word	0x40022300
 8002c2c:	4b65      	ldr	r3, [pc, #404]	; (8002dc4 <HAL_ADC_ConfigChannel+0xa38>)
 8002c2e:	4618      	mov	r0, r3
 8002c30:	f7fe ff84 	bl	8001b3c <LL_ADC_GetCommonPathInternalCh>
 8002c34:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc

        /* Software is allowed to change common parameters only when all ADCs   */
        /* of the common group are disabled.                                    */
        if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4a62      	ldr	r2, [pc, #392]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002c3e:	4293      	cmp	r3, r2
 8002c40:	d004      	beq.n	8002c4c <HAL_ADC_ConfigChannel+0x8c0>
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	681b      	ldr	r3, [r3, #0]
 8002c46:	4a61      	ldr	r2, [pc, #388]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002c48:	4293      	cmp	r3, r2
 8002c4a:	d10e      	bne.n	8002c6a <HAL_ADC_ConfigChannel+0x8de>
 8002c4c:	485e      	ldr	r0, [pc, #376]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002c4e:	f7ff f95b 	bl	8001f08 <LL_ADC_IsEnabled>
 8002c52:	4604      	mov	r4, r0
 8002c54:	485d      	ldr	r0, [pc, #372]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002c56:	f7ff f957 	bl	8001f08 <LL_ADC_IsEnabled>
 8002c5a:	4603      	mov	r3, r0
 8002c5c:	4323      	orrs	r3, r4
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	bf0c      	ite	eq
 8002c62:	2301      	moveq	r3, #1
 8002c64:	2300      	movne	r3, #0
 8002c66:	b2db      	uxtb	r3, r3
 8002c68:	e008      	b.n	8002c7c <HAL_ADC_ConfigChannel+0x8f0>
 8002c6a:	4859      	ldr	r0, [pc, #356]	; (8002dd0 <HAL_ADC_ConfigChannel+0xa44>)
 8002c6c:	f7ff f94c 	bl	8001f08 <LL_ADC_IsEnabled>
 8002c70:	4603      	mov	r3, r0
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	bf0c      	ite	eq
 8002c76:	2301      	moveq	r3, #1
 8002c78:	2300      	movne	r3, #0
 8002c7a:	b2db      	uxtb	r3, r3
 8002c7c:	2b00      	cmp	r3, #0
 8002c7e:	f000 8084 	beq.w	8002d8a <HAL_ADC_ConfigChannel+0x9fe>
        {
          /* If the requested internal measurement path has already been enabled, */
          /* bypass the configuration processing.                                 */
          if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 8002c82:	683b      	ldr	r3, [r7, #0]
 8002c84:	681b      	ldr	r3, [r3, #0]
 8002c86:	4a53      	ldr	r2, [pc, #332]	; (8002dd4 <HAL_ADC_ConfigChannel+0xa48>)
 8002c88:	4293      	cmp	r3, r2
 8002c8a:	d132      	bne.n	8002cf2 <HAL_ADC_ConfigChannel+0x966>
 8002c8c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002c90:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d12c      	bne.n	8002cf2 <HAL_ADC_ConfigChannel+0x966>
          {
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4a4c      	ldr	r2, [pc, #304]	; (8002dd0 <HAL_ADC_ConfigChannel+0xa44>)
 8002c9e:	4293      	cmp	r3, r2
 8002ca0:	f040 8086 	bne.w	8002db0 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channel);
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	4a47      	ldr	r2, [pc, #284]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002caa:	4293      	cmp	r3, r2
 8002cac:	d004      	beq.n	8002cb8 <HAL_ADC_ConfigChannel+0x92c>
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	4a46      	ldr	r2, [pc, #280]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002cb4:	4293      	cmp	r3, r2
 8002cb6:	d101      	bne.n	8002cbc <HAL_ADC_ConfigChannel+0x930>
 8002cb8:	4a47      	ldr	r2, [pc, #284]	; (8002dd8 <HAL_ADC_ConfigChannel+0xa4c>)
 8002cba:	e000      	b.n	8002cbe <HAL_ADC_ConfigChannel+0x932>
 8002cbc:	4a41      	ldr	r2, [pc, #260]	; (8002dc4 <HAL_ADC_ConfigChannel+0xa38>)
 8002cbe:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002cc2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002cc6:	4619      	mov	r1, r3
 8002cc8:	4610      	mov	r0, r2
 8002cca:	f7fe ff24 	bl	8001b16 <LL_ADC_SetCommonPathInternalCh>
              /* Delay for temperature sensor stabilization time */
              /* Wait loop initialization and execution */
              /* Note: Variable divided by 2 to compensate partially              */
              /*       CPU processing cycles, scaling in us split to not          */
              /*       exceed 32 bits register capacity and handle low frequency. */
              wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 8002cce:	4b43      	ldr	r3, [pc, #268]	; (8002ddc <HAL_ADC_ConfigChannel+0xa50>)
 8002cd0:	681b      	ldr	r3, [r3, #0]
 8002cd2:	099b      	lsrs	r3, r3, #6
 8002cd4:	4a42      	ldr	r2, [pc, #264]	; (8002de0 <HAL_ADC_ConfigChannel+0xa54>)
 8002cd6:	fba2 2303 	umull	r2, r3, r2, r3
 8002cda:	099b      	lsrs	r3, r3, #6
 8002cdc:	3301      	adds	r3, #1
 8002cde:	005b      	lsls	r3, r3, #1
 8002ce0:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 8002ce2:	e002      	b.n	8002cea <HAL_ADC_ConfigChannel+0x95e>
              {
                wait_loop_index--;
 8002ce4:	68bb      	ldr	r3, [r7, #8]
 8002ce6:	3b01      	subs	r3, #1
 8002ce8:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 8002cea:	68bb      	ldr	r3, [r7, #8]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d1f9      	bne.n	8002ce4 <HAL_ADC_ConfigChannel+0x958>
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8002cf0:	e05e      	b.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
              }
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 8002cf2:	683b      	ldr	r3, [r7, #0]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	4a3b      	ldr	r2, [pc, #236]	; (8002de4 <HAL_ADC_ConfigChannel+0xa58>)
 8002cf8:	4293      	cmp	r3, r2
 8002cfa:	d120      	bne.n	8002d3e <HAL_ADC_ConfigChannel+0x9b2>
 8002cfc:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002d00:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002d04:	2b00      	cmp	r3, #0
 8002d06:	d11a      	bne.n	8002d3e <HAL_ADC_ConfigChannel+0x9b2>
          {
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	4a30      	ldr	r2, [pc, #192]	; (8002dd0 <HAL_ADC_ConfigChannel+0xa44>)
 8002d0e:	4293      	cmp	r3, r2
 8002d10:	d14e      	bne.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	4a2c      	ldr	r2, [pc, #176]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002d18:	4293      	cmp	r3, r2
 8002d1a:	d004      	beq.n	8002d26 <HAL_ADC_ConfigChannel+0x99a>
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	4a2a      	ldr	r2, [pc, #168]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002d22:	4293      	cmp	r3, r2
 8002d24:	d101      	bne.n	8002d2a <HAL_ADC_ConfigChannel+0x99e>
 8002d26:	4a2c      	ldr	r2, [pc, #176]	; (8002dd8 <HAL_ADC_ConfigChannel+0xa4c>)
 8002d28:	e000      	b.n	8002d2c <HAL_ADC_ConfigChannel+0x9a0>
 8002d2a:	4a26      	ldr	r2, [pc, #152]	; (8002dc4 <HAL_ADC_ConfigChannel+0xa38>)
 8002d2c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002d30:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002d34:	4619      	mov	r1, r3
 8002d36:	4610      	mov	r0, r2
 8002d38:	f7fe feed 	bl	8001b16 <LL_ADC_SetCommonPathInternalCh>
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8002d3c:	e038      	b.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 8002d3e:	683b      	ldr	r3, [r7, #0]
 8002d40:	681b      	ldr	r3, [r3, #0]
 8002d42:	4a29      	ldr	r2, [pc, #164]	; (8002de8 <HAL_ADC_ConfigChannel+0xa5c>)
 8002d44:	4293      	cmp	r3, r2
 8002d46:	d133      	bne.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
 8002d48:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002d4c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002d50:	2b00      	cmp	r3, #0
 8002d52:	d12d      	bne.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
          {
            if (ADC_VREFINT_INSTANCE(hadc))
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	4a1d      	ldr	r2, [pc, #116]	; (8002dd0 <HAL_ADC_ConfigChannel+0xa44>)
 8002d5a:	4293      	cmp	r3, r2
 8002d5c:	d128      	bne.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	4a19      	ldr	r2, [pc, #100]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002d64:	4293      	cmp	r3, r2
 8002d66:	d004      	beq.n	8002d72 <HAL_ADC_ConfigChannel+0x9e6>
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	681b      	ldr	r3, [r3, #0]
 8002d6c:	4a17      	ldr	r2, [pc, #92]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002d6e:	4293      	cmp	r3, r2
 8002d70:	d101      	bne.n	8002d76 <HAL_ADC_ConfigChannel+0x9ea>
 8002d72:	4a19      	ldr	r2, [pc, #100]	; (8002dd8 <HAL_ADC_ConfigChannel+0xa4c>)
 8002d74:	e000      	b.n	8002d78 <HAL_ADC_ConfigChannel+0x9ec>
 8002d76:	4a13      	ldr	r2, [pc, #76]	; (8002dc4 <HAL_ADC_ConfigChannel+0xa38>)
 8002d78:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002d7c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002d80:	4619      	mov	r1, r3
 8002d82:	4610      	mov	r0, r2
 8002d84:	f7fe fec7 	bl	8001b16 <LL_ADC_SetCommonPathInternalCh>
 8002d88:	e012      	b.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
        /* enabled and other ADC of the common group are enabled, internal      */
        /* measurement paths cannot be enabled.                                 */
        else
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002d8e:	f043 0220 	orr.w	r2, r3, #32
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	661a      	str	r2, [r3, #96]	; 0x60

          tmp_hal_status = HAL_ERROR;
 8002d96:	2301      	movs	r3, #1
 8002d98:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002d9c:	e008      	b.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
  /* channel could be done on neither of the channel configuration structure  */
  /* parameters.                                                              */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002da2:	f043 0220 	orr.w	r2, r3, #32
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 8002daa:	2301      	movs	r3, #1
 8002dac:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	2200      	movs	r2, #0
 8002db4:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Return function status */
  return tmp_hal_status;
 8002db8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
}
 8002dbc:	4618      	mov	r0, r3
 8002dbe:	37e4      	adds	r7, #228	; 0xe4
 8002dc0:	46bd      	mov	sp, r7
 8002dc2:	bd90      	pop	{r4, r7, pc}
 8002dc4:	58026300 	.word	0x58026300
 8002dc8:	40022000 	.word	0x40022000
 8002dcc:	40022100 	.word	0x40022100
 8002dd0:	58026000 	.word	0x58026000
 8002dd4:	c7520000 	.word	0xc7520000
 8002dd8:	40022300 	.word	0x40022300
 8002ddc:	24000004 	.word	0x24000004
 8002de0:	053e2d63 	.word	0x053e2d63
 8002de4:	c3210000 	.word	0xc3210000
 8002de8:	cb840000 	.word	0xcb840000

08002dec <ADC_ConfigureBoostMode>:
  *         stopped.
  * @param  hadc ADC handle
  * @retval None.
  */
void ADC_ConfigureBoostMode(ADC_HandleTypeDef *hadc)
{
 8002dec:	b580      	push	{r7, lr}
 8002dee:	b084      	sub	sp, #16
 8002df0:	af00      	add	r7, sp, #0
 8002df2:	6078      	str	r0, [r7, #4]
  uint32_t freq;
  if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	4a6c      	ldr	r2, [pc, #432]	; (8002fac <ADC_ConfigureBoostMode+0x1c0>)
 8002dfa:	4293      	cmp	r3, r2
 8002dfc:	d004      	beq.n	8002e08 <ADC_ConfigureBoostMode+0x1c>
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	4a6b      	ldr	r2, [pc, #428]	; (8002fb0 <ADC_ConfigureBoostMode+0x1c4>)
 8002e04:	4293      	cmp	r3, r2
 8002e06:	d109      	bne.n	8002e1c <ADC_ConfigureBoostMode+0x30>
 8002e08:	4b6a      	ldr	r3, [pc, #424]	; (8002fb4 <ADC_ConfigureBoostMode+0x1c8>)
 8002e0a:	689b      	ldr	r3, [r3, #8]
 8002e0c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	bf14      	ite	ne
 8002e14:	2301      	movne	r3, #1
 8002e16:	2300      	moveq	r3, #0
 8002e18:	b2db      	uxtb	r3, r3
 8002e1a:	e008      	b.n	8002e2e <ADC_ConfigureBoostMode+0x42>
 8002e1c:	4b66      	ldr	r3, [pc, #408]	; (8002fb8 <ADC_ConfigureBoostMode+0x1cc>)
 8002e1e:	689b      	ldr	r3, [r3, #8]
 8002e20:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	bf14      	ite	ne
 8002e28:	2301      	movne	r3, #1
 8002e2a:	2300      	moveq	r3, #0
 8002e2c:	b2db      	uxtb	r3, r3
 8002e2e:	2b00      	cmp	r3, #0
 8002e30:	d01c      	beq.n	8002e6c <ADC_ConfigureBoostMode+0x80>
  {
    freq = HAL_RCC_GetHCLKFreq();
 8002e32:	f004 fea5 	bl	8007b80 <HAL_RCC_GetHCLKFreq>
 8002e36:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	685b      	ldr	r3, [r3, #4]
 8002e3c:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002e40:	d010      	beq.n	8002e64 <ADC_ConfigureBoostMode+0x78>
 8002e42:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002e46:	d873      	bhi.n	8002f30 <ADC_ConfigureBoostMode+0x144>
 8002e48:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002e4c:	d002      	beq.n	8002e54 <ADC_ConfigureBoostMode+0x68>
 8002e4e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8002e52:	d16d      	bne.n	8002f30 <ADC_ConfigureBoostMode+0x144>
    {
      case ADC_CLOCK_SYNC_PCLK_DIV1:
      case ADC_CLOCK_SYNC_PCLK_DIV2:
        freq /= (hadc->Init.ClockPrescaler >> ADC_CCR_CKMODE_Pos);
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	685b      	ldr	r3, [r3, #4]
 8002e58:	0c1b      	lsrs	r3, r3, #16
 8002e5a:	68fa      	ldr	r2, [r7, #12]
 8002e5c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e60:	60fb      	str	r3, [r7, #12]
        break;
 8002e62:	e068      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_SYNC_PCLK_DIV4:
        freq /= 4UL;
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	089b      	lsrs	r3, r3, #2
 8002e68:	60fb      	str	r3, [r7, #12]
        break;
 8002e6a:	e064      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
        break;
    }
  }
  else
  {
    freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
 8002e6c:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8002e70:	f04f 0100 	mov.w	r1, #0
 8002e74:	f006 f86a 	bl	8008f4c <HAL_RCCEx_GetPeriphCLKFreq>
 8002e78:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	685b      	ldr	r3, [r3, #4]
 8002e7e:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 8002e82:	d051      	beq.n	8002f28 <ADC_ConfigureBoostMode+0x13c>
 8002e84:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 8002e88:	d854      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002e8a:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 8002e8e:	d047      	beq.n	8002f20 <ADC_ConfigureBoostMode+0x134>
 8002e90:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 8002e94:	d84e      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002e96:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 8002e9a:	d03d      	beq.n	8002f18 <ADC_ConfigureBoostMode+0x12c>
 8002e9c:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 8002ea0:	d848      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002ea2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8002ea6:	d033      	beq.n	8002f10 <ADC_ConfigureBoostMode+0x124>
 8002ea8:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8002eac:	d842      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002eae:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8002eb2:	d029      	beq.n	8002f08 <ADC_ConfigureBoostMode+0x11c>
 8002eb4:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8002eb8:	d83c      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002eba:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 8002ebe:	d01a      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ec0:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 8002ec4:	d836      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002ec6:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8002eca:	d014      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ecc:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8002ed0:	d830      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002ed2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002ed6:	d00e      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ed8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002edc:	d82a      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002ede:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8002ee2:	d008      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ee4:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8002ee8:	d824      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002eea:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8002eee:	d002      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ef0:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 8002ef4:	d11e      	bne.n	8002f34 <ADC_ConfigureBoostMode+0x148>
      case ADC_CLOCK_ASYNC_DIV4:
      case ADC_CLOCK_ASYNC_DIV6:
      case ADC_CLOCK_ASYNC_DIV8:
      case ADC_CLOCK_ASYNC_DIV10:
      case ADC_CLOCK_ASYNC_DIV12:
        freq /= ((hadc->Init.ClockPrescaler >> ADC_CCR_PRESC_Pos) << 1UL);
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	685b      	ldr	r3, [r3, #4]
 8002efa:	0c9b      	lsrs	r3, r3, #18
 8002efc:	005b      	lsls	r3, r3, #1
 8002efe:	68fa      	ldr	r2, [r7, #12]
 8002f00:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f04:	60fb      	str	r3, [r7, #12]
        break;
 8002f06:	e016      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV16:
        freq /= 16UL;
 8002f08:	68fb      	ldr	r3, [r7, #12]
 8002f0a:	091b      	lsrs	r3, r3, #4
 8002f0c:	60fb      	str	r3, [r7, #12]
        break;
 8002f0e:	e012      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV32:
        freq /= 32UL;
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	095b      	lsrs	r3, r3, #5
 8002f14:	60fb      	str	r3, [r7, #12]
        break;
 8002f16:	e00e      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV64:
        freq /= 64UL;
 8002f18:	68fb      	ldr	r3, [r7, #12]
 8002f1a:	099b      	lsrs	r3, r3, #6
 8002f1c:	60fb      	str	r3, [r7, #12]
        break;
 8002f1e:	e00a      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV128:
        freq /= 128UL;
 8002f20:	68fb      	ldr	r3, [r7, #12]
 8002f22:	09db      	lsrs	r3, r3, #7
 8002f24:	60fb      	str	r3, [r7, #12]
        break;
 8002f26:	e006      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV256:
        freq /= 256UL;
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	0a1b      	lsrs	r3, r3, #8
 8002f2c:	60fb      	str	r3, [r7, #12]
        break;
 8002f2e:	e002      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
        break;
 8002f30:	bf00      	nop
 8002f32:	e000      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      default:
        break;
 8002f34:	bf00      	nop
    }
  }

#if defined(ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
  freq /= 2U;
 8002f36:	68fb      	ldr	r3, [r7, #12]
 8002f38:	085b      	lsrs	r3, r3, #1
 8002f3a:	60fb      	str	r3, [r7, #12]
  if (freq <= 6250000UL)
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	4a1f      	ldr	r2, [pc, #124]	; (8002fbc <ADC_ConfigureBoostMode+0x1d0>)
 8002f40:	4293      	cmp	r3, r2
 8002f42:	d808      	bhi.n	8002f56 <ADC_ConfigureBoostMode+0x16a>
  {
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	689a      	ldr	r2, [r3, #8]
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8002f52:	609a      	str	r2, [r3, #8]
    {
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
    }
  }
#endif /* ADC_VER_V5_3 */
}
 8002f54:	e025      	b.n	8002fa2 <ADC_ConfigureBoostMode+0x1b6>
  else if (freq <= 12500000UL)
 8002f56:	68fb      	ldr	r3, [r7, #12]
 8002f58:	4a19      	ldr	r2, [pc, #100]	; (8002fc0 <ADC_ConfigureBoostMode+0x1d4>)
 8002f5a:	4293      	cmp	r3, r2
 8002f5c:	d80a      	bhi.n	8002f74 <ADC_ConfigureBoostMode+0x188>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	689b      	ldr	r3, [r3, #8]
 8002f64:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002f70:	609a      	str	r2, [r3, #8]
}
 8002f72:	e016      	b.n	8002fa2 <ADC_ConfigureBoostMode+0x1b6>
  else if (freq <= 25000000UL)
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	4a13      	ldr	r2, [pc, #76]	; (8002fc4 <ADC_ConfigureBoostMode+0x1d8>)
 8002f78:	4293      	cmp	r3, r2
 8002f7a:	d80a      	bhi.n	8002f92 <ADC_ConfigureBoostMode+0x1a6>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	681b      	ldr	r3, [r3, #0]
 8002f80:	689b      	ldr	r3, [r3, #8]
 8002f82:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002f8e:	609a      	str	r2, [r3, #8]
}
 8002f90:	e007      	b.n	8002fa2 <ADC_ConfigureBoostMode+0x1b6>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	689a      	ldr	r2, [r3, #8]
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	681b      	ldr	r3, [r3, #0]
 8002f9c:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8002fa0:	609a      	str	r2, [r3, #8]
}
 8002fa2:	bf00      	nop
 8002fa4:	3710      	adds	r7, #16
 8002fa6:	46bd      	mov	sp, r7
 8002fa8:	bd80      	pop	{r7, pc}
 8002faa:	bf00      	nop
 8002fac:	40022000 	.word	0x40022000
 8002fb0:	40022100 	.word	0x40022100
 8002fb4:	40022300 	.word	0x40022300
 8002fb8:	58026300 	.word	0x58026300
 8002fbc:	005f5e10 	.word	0x005f5e10
 8002fc0:	00bebc20 	.word	0x00bebc20
 8002fc4:	017d7840 	.word	0x017d7840

08002fc8 <LL_ADC_IsEnabled>:
{
 8002fc8:	b480      	push	{r7}
 8002fca:	b083      	sub	sp, #12
 8002fcc:	af00      	add	r7, sp, #0
 8002fce:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	689b      	ldr	r3, [r3, #8]
 8002fd4:	f003 0301 	and.w	r3, r3, #1
 8002fd8:	2b01      	cmp	r3, #1
 8002fda:	d101      	bne.n	8002fe0 <LL_ADC_IsEnabled+0x18>
 8002fdc:	2301      	movs	r3, #1
 8002fde:	e000      	b.n	8002fe2 <LL_ADC_IsEnabled+0x1a>
 8002fe0:	2300      	movs	r3, #0
}
 8002fe2:	4618      	mov	r0, r3
 8002fe4:	370c      	adds	r7, #12
 8002fe6:	46bd      	mov	sp, r7
 8002fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fec:	4770      	bx	lr

08002fee <LL_ADC_REG_IsConversionOngoing>:
{
 8002fee:	b480      	push	{r7}
 8002ff0:	b083      	sub	sp, #12
 8002ff2:	af00      	add	r7, sp, #0
 8002ff4:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	f003 0304 	and.w	r3, r3, #4
 8002ffe:	2b04      	cmp	r3, #4
 8003000:	d101      	bne.n	8003006 <LL_ADC_REG_IsConversionOngoing+0x18>
 8003002:	2301      	movs	r3, #1
 8003004:	e000      	b.n	8003008 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003006:	2300      	movs	r3, #0
}
 8003008:	4618      	mov	r0, r3
 800300a:	370c      	adds	r7, #12
 800300c:	46bd      	mov	sp, r7
 800300e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003012:	4770      	bx	lr

08003014 <HAL_ADCEx_MultiModeConfigChannel>:
  * @param hadc Master ADC handle
  * @param multimode Structure of ADC multimode configuration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *multimode)
{
 8003014:	b590      	push	{r4, r7, lr}
 8003016:	b0a3      	sub	sp, #140	; 0x8c
 8003018:	af00      	add	r7, sp, #0
 800301a:	6078      	str	r0, [r7, #4]
 800301c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 800301e:	2300      	movs	r3, #0
 8003020:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
    assert_param(IS_ADC_DUAL_DATA_MODE(multimode->DualModeData));
    assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 800302a:	2b01      	cmp	r3, #1
 800302c:	d101      	bne.n	8003032 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 800302e:	2302      	movs	r3, #2
 8003030:	e0c1      	b.n	80031b6 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	2201      	movs	r2, #1
 8003036:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  tmphadcSlave.State = HAL_ADC_STATE_RESET;
 800303a:	2300      	movs	r3, #0
 800303c:	66fb      	str	r3, [r7, #108]	; 0x6c
  tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 800303e:	2300      	movs	r3, #0
 8003040:	673b      	str	r3, [r7, #112]	; 0x70

  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	4a5e      	ldr	r2, [pc, #376]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003048:	4293      	cmp	r3, r2
 800304a:	d102      	bne.n	8003052 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 800304c:	4b5d      	ldr	r3, [pc, #372]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800304e:	60fb      	str	r3, [r7, #12]
 8003050:	e001      	b.n	8003056 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8003052:	2300      	movs	r3, #0
 8003054:	60fb      	str	r3, [r7, #12]

  if (tmphadcSlave.Instance == NULL)
 8003056:	68fb      	ldr	r3, [r7, #12]
 8003058:	2b00      	cmp	r3, #0
 800305a:	d10b      	bne.n	8003074 <HAL_ADCEx_MultiModeConfigChannel+0x60>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003060:	f043 0220 	orr.w	r2, r3, #32
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	661a      	str	r2, [r3, #96]	; 0x60

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	2200      	movs	r2, #0
 800306c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    return HAL_ERROR;
 8003070:	2301      	movs	r3, #1
 8003072:	e0a0      	b.n	80031b6 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>

  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Multimode DATA Format configuration                                   */
  tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	4618      	mov	r0, r3
 8003078:	f7ff ffb9 	bl	8002fee <LL_ADC_REG_IsConversionOngoing>
 800307c:	f8c7 0080 	str.w	r0, [r7, #128]	; 0x80
  if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	681b      	ldr	r3, [r3, #0]
 8003084:	4618      	mov	r0, r3
 8003086:	f7ff ffb2 	bl	8002fee <LL_ADC_REG_IsConversionOngoing>
 800308a:	4603      	mov	r3, r0
 800308c:	2b00      	cmp	r3, #0
 800308e:	f040 8081 	bne.w	8003194 <HAL_ADCEx_MultiModeConfigChannel+0x180>
      && (tmphadcSlave_conversion_on_going == 0UL))
 8003092:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8003096:	2b00      	cmp	r3, #0
 8003098:	d17c      	bne.n	8003194 <HAL_ADCEx_MultiModeConfigChannel+0x180>
  {
    /* Pointer to the common control register */
    tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	4a48      	ldr	r2, [pc, #288]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80030a0:	4293      	cmp	r3, r2
 80030a2:	d004      	beq.n	80030ae <HAL_ADCEx_MultiModeConfigChannel+0x9a>
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	4a46      	ldr	r2, [pc, #280]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80030aa:	4293      	cmp	r3, r2
 80030ac:	d101      	bne.n	80030b2 <HAL_ADCEx_MultiModeConfigChannel+0x9e>
 80030ae:	4b46      	ldr	r3, [pc, #280]	; (80031c8 <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 80030b0:	e000      	b.n	80030b4 <HAL_ADCEx_MultiModeConfigChannel+0xa0>
 80030b2:	4b46      	ldr	r3, [pc, #280]	; (80031cc <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 80030b4:	67fb      	str	r3, [r7, #124]	; 0x7c

    /* If multimode is selected, configure all multimode parameters.          */
    /* Otherwise, reset multimode parameters (can be used in case of          */
    /* transition from multimode to independent mode).                        */
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	d039      	beq.n	8003132 <HAL_ADCEx_MultiModeConfigChannel+0x11e>
    {
      MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DAMDF, multimode->DualModeData);
 80030be:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80030c0:	689b      	ldr	r3, [r3, #8]
 80030c2:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80030c6:	683b      	ldr	r3, [r7, #0]
 80030c8:	685b      	ldr	r3, [r3, #4]
 80030ca:	431a      	orrs	r2, r3
 80030cc:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80030ce:	609a      	str	r2, [r3, #8]
      /*      from 1 to 8 clock cycles for 12 bits                              */
      /*      from 1 to 6 clock cycles for 10 and 8 bits                        */
      /*    If a higher delay is selected, it will be clipped to maximum delay  */
      /*    range                                                               */

      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	4a3a      	ldr	r2, [pc, #232]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80030d6:	4293      	cmp	r3, r2
 80030d8:	d004      	beq.n	80030e4 <HAL_ADCEx_MultiModeConfigChannel+0xd0>
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	4a39      	ldr	r2, [pc, #228]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80030e0:	4293      	cmp	r3, r2
 80030e2:	d10e      	bne.n	8003102 <HAL_ADCEx_MultiModeConfigChannel+0xee>
 80030e4:	4836      	ldr	r0, [pc, #216]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80030e6:	f7ff ff6f 	bl	8002fc8 <LL_ADC_IsEnabled>
 80030ea:	4604      	mov	r4, r0
 80030ec:	4835      	ldr	r0, [pc, #212]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80030ee:	f7ff ff6b 	bl	8002fc8 <LL_ADC_IsEnabled>
 80030f2:	4603      	mov	r3, r0
 80030f4:	4323      	orrs	r3, r4
 80030f6:	2b00      	cmp	r3, #0
 80030f8:	bf0c      	ite	eq
 80030fa:	2301      	moveq	r3, #1
 80030fc:	2300      	movne	r3, #0
 80030fe:	b2db      	uxtb	r3, r3
 8003100:	e008      	b.n	8003114 <HAL_ADCEx_MultiModeConfigChannel+0x100>
 8003102:	4833      	ldr	r0, [pc, #204]	; (80031d0 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 8003104:	f7ff ff60 	bl	8002fc8 <LL_ADC_IsEnabled>
 8003108:	4603      	mov	r3, r0
 800310a:	2b00      	cmp	r3, #0
 800310c:	bf0c      	ite	eq
 800310e:	2301      	moveq	r3, #1
 8003110:	2300      	movne	r3, #0
 8003112:	b2db      	uxtb	r3, r3
 8003114:	2b00      	cmp	r3, #0
 8003116:	d047      	beq.n	80031a8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
      {
        MODIFY_REG(tmpADC_Common->CCR,
 8003118:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800311a:	689a      	ldr	r2, [r3, #8]
 800311c:	4b2d      	ldr	r3, [pc, #180]	; (80031d4 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 800311e:	4013      	ands	r3, r2
 8003120:	683a      	ldr	r2, [r7, #0]
 8003122:	6811      	ldr	r1, [r2, #0]
 8003124:	683a      	ldr	r2, [r7, #0]
 8003126:	6892      	ldr	r2, [r2, #8]
 8003128:	430a      	orrs	r2, r1
 800312a:	431a      	orrs	r2, r3
 800312c:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800312e:	609a      	str	r2, [r3, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003130:	e03a      	b.n	80031a8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
                  );
      }
    }
    else /* ADC_MODE_INDEPENDENT */
    {
      CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF);
 8003132:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8003134:	689b      	ldr	r3, [r3, #8]
 8003136:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 800313a:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800313c:	609a      	str	r2, [r3, #8]

      /* Parameters that can be updated only when ADC is disabled:                */
      /*  - Multimode mode selection                                              */
      /*  - Multimode delay                                                       */
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	4a1f      	ldr	r2, [pc, #124]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003144:	4293      	cmp	r3, r2
 8003146:	d004      	beq.n	8003152 <HAL_ADCEx_MultiModeConfigChannel+0x13e>
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	4a1d      	ldr	r2, [pc, #116]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800314e:	4293      	cmp	r3, r2
 8003150:	d10e      	bne.n	8003170 <HAL_ADCEx_MultiModeConfigChannel+0x15c>
 8003152:	481b      	ldr	r0, [pc, #108]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003154:	f7ff ff38 	bl	8002fc8 <LL_ADC_IsEnabled>
 8003158:	4604      	mov	r4, r0
 800315a:	481a      	ldr	r0, [pc, #104]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800315c:	f7ff ff34 	bl	8002fc8 <LL_ADC_IsEnabled>
 8003160:	4603      	mov	r3, r0
 8003162:	4323      	orrs	r3, r4
 8003164:	2b00      	cmp	r3, #0
 8003166:	bf0c      	ite	eq
 8003168:	2301      	moveq	r3, #1
 800316a:	2300      	movne	r3, #0
 800316c:	b2db      	uxtb	r3, r3
 800316e:	e008      	b.n	8003182 <HAL_ADCEx_MultiModeConfigChannel+0x16e>
 8003170:	4817      	ldr	r0, [pc, #92]	; (80031d0 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 8003172:	f7ff ff29 	bl	8002fc8 <LL_ADC_IsEnabled>
 8003176:	4603      	mov	r3, r0
 8003178:	2b00      	cmp	r3, #0
 800317a:	bf0c      	ite	eq
 800317c:	2301      	moveq	r3, #1
 800317e:	2300      	movne	r3, #0
 8003180:	b2db      	uxtb	r3, r3
 8003182:	2b00      	cmp	r3, #0
 8003184:	d010      	beq.n	80031a8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
      {
        CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 8003186:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8003188:	689a      	ldr	r2, [r3, #8]
 800318a:	4b12      	ldr	r3, [pc, #72]	; (80031d4 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 800318c:	4013      	ands	r3, r2
 800318e:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8003190:	6093      	str	r3, [r2, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003192:	e009      	b.n	80031a8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
  /* If one of the ADC sharing the same common group is enabled, no update    */
  /* could be done on neither of the multimode structure parameters.          */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003198:	f043 0220 	orr.w	r2, r3, #32
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 80031a0:	2301      	movs	r3, #1
 80031a2:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 80031a6:	e000      	b.n	80031aa <HAL_ADCEx_MultiModeConfigChannel+0x196>
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 80031a8:	bf00      	nop
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	2200      	movs	r2, #0
 80031ae:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Return function status */
  return tmp_hal_status;
 80031b2:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
}
 80031b6:	4618      	mov	r0, r3
 80031b8:	378c      	adds	r7, #140	; 0x8c
 80031ba:	46bd      	mov	sp, r7
 80031bc:	bd90      	pop	{r4, r7, pc}
 80031be:	bf00      	nop
 80031c0:	40022000 	.word	0x40022000
 80031c4:	40022100 	.word	0x40022100
 80031c8:	40022300 	.word	0x40022300
 80031cc:	58026300 	.word	0x58026300
 80031d0:	58026000 	.word	0x58026000
 80031d4:	fffff0e0 	.word	0xfffff0e0

080031d8 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80031d8:	b480      	push	{r7}
 80031da:	b085      	sub	sp, #20
 80031dc:	af00      	add	r7, sp, #0
 80031de:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	f003 0307 	and.w	r3, r3, #7
 80031e6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80031e8:	4b0b      	ldr	r3, [pc, #44]	; (8003218 <__NVIC_SetPriorityGrouping+0x40>)
 80031ea:	68db      	ldr	r3, [r3, #12]
 80031ec:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80031ee:	68ba      	ldr	r2, [r7, #8]
 80031f0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80031f4:	4013      	ands	r3, r2
 80031f6:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80031fc:	68bb      	ldr	r3, [r7, #8]
 80031fe:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8003200:	4b06      	ldr	r3, [pc, #24]	; (800321c <__NVIC_SetPriorityGrouping+0x44>)
 8003202:	4313      	orrs	r3, r2
 8003204:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003206:	4a04      	ldr	r2, [pc, #16]	; (8003218 <__NVIC_SetPriorityGrouping+0x40>)
 8003208:	68bb      	ldr	r3, [r7, #8]
 800320a:	60d3      	str	r3, [r2, #12]
}
 800320c:	bf00      	nop
 800320e:	3714      	adds	r7, #20
 8003210:	46bd      	mov	sp, r7
 8003212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003216:	4770      	bx	lr
 8003218:	e000ed00 	.word	0xe000ed00
 800321c:	05fa0000 	.word	0x05fa0000

08003220 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003220:	b480      	push	{r7}
 8003222:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003224:	4b04      	ldr	r3, [pc, #16]	; (8003238 <__NVIC_GetPriorityGrouping+0x18>)
 8003226:	68db      	ldr	r3, [r3, #12]
 8003228:	0a1b      	lsrs	r3, r3, #8
 800322a:	f003 0307 	and.w	r3, r3, #7
}
 800322e:	4618      	mov	r0, r3
 8003230:	46bd      	mov	sp, r7
 8003232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003236:	4770      	bx	lr
 8003238:	e000ed00 	.word	0xe000ed00

0800323c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800323c:	b480      	push	{r7}
 800323e:	b083      	sub	sp, #12
 8003240:	af00      	add	r7, sp, #0
 8003242:	4603      	mov	r3, r0
 8003244:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8003246:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800324a:	2b00      	cmp	r3, #0
 800324c:	db0b      	blt.n	8003266 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800324e:	88fb      	ldrh	r3, [r7, #6]
 8003250:	f003 021f 	and.w	r2, r3, #31
 8003254:	4907      	ldr	r1, [pc, #28]	; (8003274 <__NVIC_EnableIRQ+0x38>)
 8003256:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800325a:	095b      	lsrs	r3, r3, #5
 800325c:	2001      	movs	r0, #1
 800325e:	fa00 f202 	lsl.w	r2, r0, r2
 8003262:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8003266:	bf00      	nop
 8003268:	370c      	adds	r7, #12
 800326a:	46bd      	mov	sp, r7
 800326c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003270:	4770      	bx	lr
 8003272:	bf00      	nop
 8003274:	e000e100 	.word	0xe000e100

08003278 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003278:	b480      	push	{r7}
 800327a:	b083      	sub	sp, #12
 800327c:	af00      	add	r7, sp, #0
 800327e:	4603      	mov	r3, r0
 8003280:	6039      	str	r1, [r7, #0]
 8003282:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8003284:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003288:	2b00      	cmp	r3, #0
 800328a:	db0a      	blt.n	80032a2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800328c:	683b      	ldr	r3, [r7, #0]
 800328e:	b2da      	uxtb	r2, r3
 8003290:	490c      	ldr	r1, [pc, #48]	; (80032c4 <__NVIC_SetPriority+0x4c>)
 8003292:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003296:	0112      	lsls	r2, r2, #4
 8003298:	b2d2      	uxtb	r2, r2
 800329a:	440b      	add	r3, r1
 800329c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80032a0:	e00a      	b.n	80032b8 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80032a2:	683b      	ldr	r3, [r7, #0]
 80032a4:	b2da      	uxtb	r2, r3
 80032a6:	4908      	ldr	r1, [pc, #32]	; (80032c8 <__NVIC_SetPriority+0x50>)
 80032a8:	88fb      	ldrh	r3, [r7, #6]
 80032aa:	f003 030f 	and.w	r3, r3, #15
 80032ae:	3b04      	subs	r3, #4
 80032b0:	0112      	lsls	r2, r2, #4
 80032b2:	b2d2      	uxtb	r2, r2
 80032b4:	440b      	add	r3, r1
 80032b6:	761a      	strb	r2, [r3, #24]
}
 80032b8:	bf00      	nop
 80032ba:	370c      	adds	r7, #12
 80032bc:	46bd      	mov	sp, r7
 80032be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032c2:	4770      	bx	lr
 80032c4:	e000e100 	.word	0xe000e100
 80032c8:	e000ed00 	.word	0xe000ed00

080032cc <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80032cc:	b480      	push	{r7}
 80032ce:	b089      	sub	sp, #36	; 0x24
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	60f8      	str	r0, [r7, #12]
 80032d4:	60b9      	str	r1, [r7, #8]
 80032d6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80032d8:	68fb      	ldr	r3, [r7, #12]
 80032da:	f003 0307 	and.w	r3, r3, #7
 80032de:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80032e0:	69fb      	ldr	r3, [r7, #28]
 80032e2:	f1c3 0307 	rsb	r3, r3, #7
 80032e6:	2b04      	cmp	r3, #4
 80032e8:	bf28      	it	cs
 80032ea:	2304      	movcs	r3, #4
 80032ec:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80032ee:	69fb      	ldr	r3, [r7, #28]
 80032f0:	3304      	adds	r3, #4
 80032f2:	2b06      	cmp	r3, #6
 80032f4:	d902      	bls.n	80032fc <NVIC_EncodePriority+0x30>
 80032f6:	69fb      	ldr	r3, [r7, #28]
 80032f8:	3b03      	subs	r3, #3
 80032fa:	e000      	b.n	80032fe <NVIC_EncodePriority+0x32>
 80032fc:	2300      	movs	r3, #0
 80032fe:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003300:	f04f 32ff 	mov.w	r2, #4294967295
 8003304:	69bb      	ldr	r3, [r7, #24]
 8003306:	fa02 f303 	lsl.w	r3, r2, r3
 800330a:	43da      	mvns	r2, r3
 800330c:	68bb      	ldr	r3, [r7, #8]
 800330e:	401a      	ands	r2, r3
 8003310:	697b      	ldr	r3, [r7, #20]
 8003312:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003314:	f04f 31ff 	mov.w	r1, #4294967295
 8003318:	697b      	ldr	r3, [r7, #20]
 800331a:	fa01 f303 	lsl.w	r3, r1, r3
 800331e:	43d9      	mvns	r1, r3
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003324:	4313      	orrs	r3, r2
         );
}
 8003326:	4618      	mov	r0, r3
 8003328:	3724      	adds	r7, #36	; 0x24
 800332a:	46bd      	mov	sp, r7
 800332c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003330:	4770      	bx	lr
	...

08003334 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003334:	b580      	push	{r7, lr}
 8003336:	b082      	sub	sp, #8
 8003338:	af00      	add	r7, sp, #0
 800333a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	3b01      	subs	r3, #1
 8003340:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003344:	d301      	bcc.n	800334a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003346:	2301      	movs	r3, #1
 8003348:	e00f      	b.n	800336a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800334a:	4a0a      	ldr	r2, [pc, #40]	; (8003374 <SysTick_Config+0x40>)
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	3b01      	subs	r3, #1
 8003350:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003352:	210f      	movs	r1, #15
 8003354:	f04f 30ff 	mov.w	r0, #4294967295
 8003358:	f7ff ff8e 	bl	8003278 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800335c:	4b05      	ldr	r3, [pc, #20]	; (8003374 <SysTick_Config+0x40>)
 800335e:	2200      	movs	r2, #0
 8003360:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003362:	4b04      	ldr	r3, [pc, #16]	; (8003374 <SysTick_Config+0x40>)
 8003364:	2207      	movs	r2, #7
 8003366:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003368:	2300      	movs	r3, #0
}
 800336a:	4618      	mov	r0, r3
 800336c:	3708      	adds	r7, #8
 800336e:	46bd      	mov	sp, r7
 8003370:	bd80      	pop	{r7, pc}
 8003372:	bf00      	nop
 8003374:	e000e010 	.word	0xe000e010

08003378 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003378:	b580      	push	{r7, lr}
 800337a:	b082      	sub	sp, #8
 800337c:	af00      	add	r7, sp, #0
 800337e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003380:	6878      	ldr	r0, [r7, #4]
 8003382:	f7ff ff29 	bl	80031d8 <__NVIC_SetPriorityGrouping>
}
 8003386:	bf00      	nop
 8003388:	3708      	adds	r7, #8
 800338a:	46bd      	mov	sp, r7
 800338c:	bd80      	pop	{r7, pc}

0800338e <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800338e:	b580      	push	{r7, lr}
 8003390:	b086      	sub	sp, #24
 8003392:	af00      	add	r7, sp, #0
 8003394:	4603      	mov	r3, r0
 8003396:	60b9      	str	r1, [r7, #8]
 8003398:	607a      	str	r2, [r7, #4]
 800339a:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 800339c:	f7ff ff40 	bl	8003220 <__NVIC_GetPriorityGrouping>
 80033a0:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80033a2:	687a      	ldr	r2, [r7, #4]
 80033a4:	68b9      	ldr	r1, [r7, #8]
 80033a6:	6978      	ldr	r0, [r7, #20]
 80033a8:	f7ff ff90 	bl	80032cc <NVIC_EncodePriority>
 80033ac:	4602      	mov	r2, r0
 80033ae:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80033b2:	4611      	mov	r1, r2
 80033b4:	4618      	mov	r0, r3
 80033b6:	f7ff ff5f 	bl	8003278 <__NVIC_SetPriority>
}
 80033ba:	bf00      	nop
 80033bc:	3718      	adds	r7, #24
 80033be:	46bd      	mov	sp, r7
 80033c0:	bd80      	pop	{r7, pc}

080033c2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80033c2:	b580      	push	{r7, lr}
 80033c4:	b082      	sub	sp, #8
 80033c6:	af00      	add	r7, sp, #0
 80033c8:	4603      	mov	r3, r0
 80033ca:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80033cc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80033d0:	4618      	mov	r0, r3
 80033d2:	f7ff ff33 	bl	800323c <__NVIC_EnableIRQ>
}
 80033d6:	bf00      	nop
 80033d8:	3708      	adds	r7, #8
 80033da:	46bd      	mov	sp, r7
 80033dc:	bd80      	pop	{r7, pc}

080033de <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80033de:	b580      	push	{r7, lr}
 80033e0:	b082      	sub	sp, #8
 80033e2:	af00      	add	r7, sp, #0
 80033e4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80033e6:	6878      	ldr	r0, [r7, #4]
 80033e8:	f7ff ffa4 	bl	8003334 <SysTick_Config>
 80033ec:	4603      	mov	r3, r0
}
 80033ee:	4618      	mov	r0, r3
 80033f0:	3708      	adds	r7, #8
 80033f2:	46bd      	mov	sp, r7
 80033f4:	bd80      	pop	{r7, pc}
	...

080033f8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80033f8:	b580      	push	{r7, lr}
 80033fa:	b082      	sub	sp, #8
 80033fc:	af00      	add	r7, sp, #0
 80033fe:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	2b00      	cmp	r3, #0
 8003404:	d101      	bne.n	800340a <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003406:	2301      	movs	r3, #1
 8003408:	e054      	b.n	80034b4 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	7f5b      	ldrb	r3, [r3, #29]
 800340e:	b2db      	uxtb	r3, r3
 8003410:	2b00      	cmp	r3, #0
 8003412:	d105      	bne.n	8003420 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	2200      	movs	r2, #0
 8003418:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800341a:	6878      	ldr	r0, [r7, #4]
 800341c:	f7fd fe68 	bl	80010f0 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	2202      	movs	r2, #2
 8003424:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	791b      	ldrb	r3, [r3, #4]
 800342a:	2b00      	cmp	r3, #0
 800342c:	d10c      	bne.n	8003448 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	4a22      	ldr	r2, [pc, #136]	; (80034bc <HAL_CRC_Init+0xc4>)
 8003434:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	689a      	ldr	r2, [r3, #8]
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	f022 0218 	bic.w	r2, r2, #24
 8003444:	609a      	str	r2, [r3, #8]
 8003446:	e00c      	b.n	8003462 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	6899      	ldr	r1, [r3, #8]
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	68db      	ldr	r3, [r3, #12]
 8003450:	461a      	mov	r2, r3
 8003452:	6878      	ldr	r0, [r7, #4]
 8003454:	f000 f834 	bl	80034c0 <HAL_CRCEx_Polynomial_Set>
 8003458:	4603      	mov	r3, r0
 800345a:	2b00      	cmp	r3, #0
 800345c:	d001      	beq.n	8003462 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800345e:	2301      	movs	r3, #1
 8003460:	e028      	b.n	80034b4 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	795b      	ldrb	r3, [r3, #5]
 8003466:	2b00      	cmp	r3, #0
 8003468:	d105      	bne.n	8003476 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	f04f 32ff 	mov.w	r2, #4294967295
 8003472:	611a      	str	r2, [r3, #16]
 8003474:	e004      	b.n	8003480 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	687a      	ldr	r2, [r7, #4]
 800347c:	6912      	ldr	r2, [r2, #16]
 800347e:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	689b      	ldr	r3, [r3, #8]
 8003486:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	695a      	ldr	r2, [r3, #20]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	430a      	orrs	r2, r1
 8003494:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	689b      	ldr	r3, [r3, #8]
 800349c:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	699a      	ldr	r2, [r3, #24]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	430a      	orrs	r2, r1
 80034aa:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	2201      	movs	r2, #1
 80034b0:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 80034b2:	2300      	movs	r3, #0
}
 80034b4:	4618      	mov	r0, r3
 80034b6:	3708      	adds	r7, #8
 80034b8:	46bd      	mov	sp, r7
 80034ba:	bd80      	pop	{r7, pc}
 80034bc:	04c11db7 	.word	0x04c11db7

080034c0 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80034c0:	b480      	push	{r7}
 80034c2:	b087      	sub	sp, #28
 80034c4:	af00      	add	r7, sp, #0
 80034c6:	60f8      	str	r0, [r7, #12]
 80034c8:	60b9      	str	r1, [r7, #8]
 80034ca:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80034cc:	2300      	movs	r3, #0
 80034ce:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80034d0:	231f      	movs	r3, #31
 80034d2:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 80034d4:	68bb      	ldr	r3, [r7, #8]
 80034d6:	f003 0301 	and.w	r3, r3, #1
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d102      	bne.n	80034e4 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 80034de:	2301      	movs	r3, #1
 80034e0:	75fb      	strb	r3, [r7, #23]
 80034e2:	e063      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80034e4:	bf00      	nop
 80034e6:	693b      	ldr	r3, [r7, #16]
 80034e8:	1e5a      	subs	r2, r3, #1
 80034ea:	613a      	str	r2, [r7, #16]
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d009      	beq.n	8003504 <HAL_CRCEx_Polynomial_Set+0x44>
 80034f0:	693b      	ldr	r3, [r7, #16]
 80034f2:	f003 031f 	and.w	r3, r3, #31
 80034f6:	68ba      	ldr	r2, [r7, #8]
 80034f8:	fa22 f303 	lsr.w	r3, r2, r3
 80034fc:	f003 0301 	and.w	r3, r3, #1
 8003500:	2b00      	cmp	r3, #0
 8003502:	d0f0      	beq.n	80034e6 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	2b18      	cmp	r3, #24
 8003508:	d846      	bhi.n	8003598 <HAL_CRCEx_Polynomial_Set+0xd8>
 800350a:	a201      	add	r2, pc, #4	; (adr r2, 8003510 <HAL_CRCEx_Polynomial_Set+0x50>)
 800350c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003510:	0800359f 	.word	0x0800359f
 8003514:	08003599 	.word	0x08003599
 8003518:	08003599 	.word	0x08003599
 800351c:	08003599 	.word	0x08003599
 8003520:	08003599 	.word	0x08003599
 8003524:	08003599 	.word	0x08003599
 8003528:	08003599 	.word	0x08003599
 800352c:	08003599 	.word	0x08003599
 8003530:	0800358d 	.word	0x0800358d
 8003534:	08003599 	.word	0x08003599
 8003538:	08003599 	.word	0x08003599
 800353c:	08003599 	.word	0x08003599
 8003540:	08003599 	.word	0x08003599
 8003544:	08003599 	.word	0x08003599
 8003548:	08003599 	.word	0x08003599
 800354c:	08003599 	.word	0x08003599
 8003550:	08003581 	.word	0x08003581
 8003554:	08003599 	.word	0x08003599
 8003558:	08003599 	.word	0x08003599
 800355c:	08003599 	.word	0x08003599
 8003560:	08003599 	.word	0x08003599
 8003564:	08003599 	.word	0x08003599
 8003568:	08003599 	.word	0x08003599
 800356c:	08003599 	.word	0x08003599
 8003570:	08003575 	.word	0x08003575
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8003574:	693b      	ldr	r3, [r7, #16]
 8003576:	2b06      	cmp	r3, #6
 8003578:	d913      	bls.n	80035a2 <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 800357a:	2301      	movs	r3, #1
 800357c:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800357e:	e010      	b.n	80035a2 <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8003580:	693b      	ldr	r3, [r7, #16]
 8003582:	2b07      	cmp	r3, #7
 8003584:	d90f      	bls.n	80035a6 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8003586:	2301      	movs	r3, #1
 8003588:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800358a:	e00c      	b.n	80035a6 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 800358c:	693b      	ldr	r3, [r7, #16]
 800358e:	2b0f      	cmp	r3, #15
 8003590:	d90b      	bls.n	80035aa <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 8003592:	2301      	movs	r3, #1
 8003594:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8003596:	e008      	b.n	80035aa <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8003598:	2301      	movs	r3, #1
 800359a:	75fb      	strb	r3, [r7, #23]
        break;
 800359c:	e006      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800359e:	bf00      	nop
 80035a0:	e004      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035a2:	bf00      	nop
 80035a4:	e002      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035a6:	bf00      	nop
 80035a8:	e000      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035aa:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 80035ac:	7dfb      	ldrb	r3, [r7, #23]
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d10d      	bne.n	80035ce <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 80035b2:	68fb      	ldr	r3, [r7, #12]
 80035b4:	681b      	ldr	r3, [r3, #0]
 80035b6:	68ba      	ldr	r2, [r7, #8]
 80035b8:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	689b      	ldr	r3, [r3, #8]
 80035c0:	f023 0118 	bic.w	r1, r3, #24
 80035c4:	68fb      	ldr	r3, [r7, #12]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	687a      	ldr	r2, [r7, #4]
 80035ca:	430a      	orrs	r2, r1
 80035cc:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 80035ce:	7dfb      	ldrb	r3, [r7, #23]
}
 80035d0:	4618      	mov	r0, r3
 80035d2:	371c      	adds	r7, #28
 80035d4:	46bd      	mov	sp, r7
 80035d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035da:	4770      	bx	lr

080035dc <HAL_DMA_Init>:
  * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80035dc:	b580      	push	{r7, lr}
 80035de:	b086      	sub	sp, #24
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	6078      	str	r0, [r7, #4]
  uint32_t registerValue;
  uint32_t tickstart = HAL_GetTick();
 80035e4:	f7fe fa54 	bl	8001a90 <HAL_GetTick>
 80035e8:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d101      	bne.n	80035f4 <HAL_DMA_Init+0x18>
  {
    return HAL_ERROR;
 80035f0:	2301      	movs	r3, #1
 80035f2:	e312      	b.n	8003c1a <HAL_DMA_Init+0x63e>
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	4a66      	ldr	r2, [pc, #408]	; (8003794 <HAL_DMA_Init+0x1b8>)
 80035fa:	4293      	cmp	r3, r2
 80035fc:	d04a      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	4a65      	ldr	r2, [pc, #404]	; (8003798 <HAL_DMA_Init+0x1bc>)
 8003604:	4293      	cmp	r3, r2
 8003606:	d045      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	4a63      	ldr	r2, [pc, #396]	; (800379c <HAL_DMA_Init+0x1c0>)
 800360e:	4293      	cmp	r3, r2
 8003610:	d040      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	4a62      	ldr	r2, [pc, #392]	; (80037a0 <HAL_DMA_Init+0x1c4>)
 8003618:	4293      	cmp	r3, r2
 800361a:	d03b      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	681b      	ldr	r3, [r3, #0]
 8003620:	4a60      	ldr	r2, [pc, #384]	; (80037a4 <HAL_DMA_Init+0x1c8>)
 8003622:	4293      	cmp	r3, r2
 8003624:	d036      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	4a5f      	ldr	r2, [pc, #380]	; (80037a8 <HAL_DMA_Init+0x1cc>)
 800362c:	4293      	cmp	r3, r2
 800362e:	d031      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	4a5d      	ldr	r2, [pc, #372]	; (80037ac <HAL_DMA_Init+0x1d0>)
 8003636:	4293      	cmp	r3, r2
 8003638:	d02c      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	4a5c      	ldr	r2, [pc, #368]	; (80037b0 <HAL_DMA_Init+0x1d4>)
 8003640:	4293      	cmp	r3, r2
 8003642:	d027      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	4a5a      	ldr	r2, [pc, #360]	; (80037b4 <HAL_DMA_Init+0x1d8>)
 800364a:	4293      	cmp	r3, r2
 800364c:	d022      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	4a59      	ldr	r2, [pc, #356]	; (80037b8 <HAL_DMA_Init+0x1dc>)
 8003654:	4293      	cmp	r3, r2
 8003656:	d01d      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	681b      	ldr	r3, [r3, #0]
 800365c:	4a57      	ldr	r2, [pc, #348]	; (80037bc <HAL_DMA_Init+0x1e0>)
 800365e:	4293      	cmp	r3, r2
 8003660:	d018      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	681b      	ldr	r3, [r3, #0]
 8003666:	4a56      	ldr	r2, [pc, #344]	; (80037c0 <HAL_DMA_Init+0x1e4>)
 8003668:	4293      	cmp	r3, r2
 800366a:	d013      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	4a54      	ldr	r2, [pc, #336]	; (80037c4 <HAL_DMA_Init+0x1e8>)
 8003672:	4293      	cmp	r3, r2
 8003674:	d00e      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	4a53      	ldr	r2, [pc, #332]	; (80037c8 <HAL_DMA_Init+0x1ec>)
 800367c:	4293      	cmp	r3, r2
 800367e:	d009      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	4a51      	ldr	r2, [pc, #324]	; (80037cc <HAL_DMA_Init+0x1f0>)
 8003686:	4293      	cmp	r3, r2
 8003688:	d004      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	4a50      	ldr	r2, [pc, #320]	; (80037d0 <HAL_DMA_Init+0x1f4>)
 8003690:	4293      	cmp	r3, r2
 8003692:	d101      	bne.n	8003698 <HAL_DMA_Init+0xbc>
 8003694:	2301      	movs	r3, #1
 8003696:	e000      	b.n	800369a <HAL_DMA_Init+0xbe>
 8003698:	2300      	movs	r3, #0
 800369a:	2b00      	cmp	r3, #0
 800369c:	f000 813c 	beq.w	8003918 <HAL_DMA_Init+0x33c>
      assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
      assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	2202      	movs	r2, #2
 80036a4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	2200      	movs	r2, #0
 80036ac:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	4a37      	ldr	r2, [pc, #220]	; (8003794 <HAL_DMA_Init+0x1b8>)
 80036b6:	4293      	cmp	r3, r2
 80036b8:	d04a      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	4a36      	ldr	r2, [pc, #216]	; (8003798 <HAL_DMA_Init+0x1bc>)
 80036c0:	4293      	cmp	r3, r2
 80036c2:	d045      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	4a34      	ldr	r2, [pc, #208]	; (800379c <HAL_DMA_Init+0x1c0>)
 80036ca:	4293      	cmp	r3, r2
 80036cc:	d040      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	4a33      	ldr	r2, [pc, #204]	; (80037a0 <HAL_DMA_Init+0x1c4>)
 80036d4:	4293      	cmp	r3, r2
 80036d6:	d03b      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	681b      	ldr	r3, [r3, #0]
 80036dc:	4a31      	ldr	r2, [pc, #196]	; (80037a4 <HAL_DMA_Init+0x1c8>)
 80036de:	4293      	cmp	r3, r2
 80036e0:	d036      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	4a30      	ldr	r2, [pc, #192]	; (80037a8 <HAL_DMA_Init+0x1cc>)
 80036e8:	4293      	cmp	r3, r2
 80036ea:	d031      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	4a2e      	ldr	r2, [pc, #184]	; (80037ac <HAL_DMA_Init+0x1d0>)
 80036f2:	4293      	cmp	r3, r2
 80036f4:	d02c      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	4a2d      	ldr	r2, [pc, #180]	; (80037b0 <HAL_DMA_Init+0x1d4>)
 80036fc:	4293      	cmp	r3, r2
 80036fe:	d027      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	4a2b      	ldr	r2, [pc, #172]	; (80037b4 <HAL_DMA_Init+0x1d8>)
 8003706:	4293      	cmp	r3, r2
 8003708:	d022      	beq.n	8003750 <HAL_DMA_Init+0x174>
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	4a2a      	ldr	r2, [pc, #168]	; (80037b8 <HAL_DMA_Init+0x1dc>)
 8003710:	4293      	cmp	r3, r2
 8003712:	d01d      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	4a28      	ldr	r2, [pc, #160]	; (80037bc <HAL_DMA_Init+0x1e0>)
 800371a:	4293      	cmp	r3, r2
 800371c:	d018      	beq.n	8003750 <HAL_DMA_Init+0x174>
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	681b      	ldr	r3, [r3, #0]
 8003722:	4a27      	ldr	r2, [pc, #156]	; (80037c0 <HAL_DMA_Init+0x1e4>)
 8003724:	4293      	cmp	r3, r2
 8003726:	d013      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	4a25      	ldr	r2, [pc, #148]	; (80037c4 <HAL_DMA_Init+0x1e8>)
 800372e:	4293      	cmp	r3, r2
 8003730:	d00e      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	4a24      	ldr	r2, [pc, #144]	; (80037c8 <HAL_DMA_Init+0x1ec>)
 8003738:	4293      	cmp	r3, r2
 800373a:	d009      	beq.n	8003750 <HAL_DMA_Init+0x174>
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	4a22      	ldr	r2, [pc, #136]	; (80037cc <HAL_DMA_Init+0x1f0>)
 8003742:	4293      	cmp	r3, r2
 8003744:	d004      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	4a21      	ldr	r2, [pc, #132]	; (80037d0 <HAL_DMA_Init+0x1f4>)
 800374c:	4293      	cmp	r3, r2
 800374e:	d108      	bne.n	8003762 <HAL_DMA_Init+0x186>
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	681a      	ldr	r2, [r3, #0]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	f022 0201 	bic.w	r2, r2, #1
 800375e:	601a      	str	r2, [r3, #0]
 8003760:	e007      	b.n	8003772 <HAL_DMA_Init+0x196>
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	681a      	ldr	r2, [r3, #0]
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	f022 0201 	bic.w	r2, r2, #1
 8003770:	601a      	str	r2, [r3, #0]

    /* Check if the DMA Stream is effectively disabled */
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8003772:	e02f      	b.n	80037d4 <HAL_DMA_Init+0x1f8>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003774:	f7fe f98c 	bl	8001a90 <HAL_GetTick>
 8003778:	4602      	mov	r2, r0
 800377a:	693b      	ldr	r3, [r7, #16]
 800377c:	1ad3      	subs	r3, r2, r3
 800377e:	2b05      	cmp	r3, #5
 8003780:	d928      	bls.n	80037d4 <HAL_DMA_Init+0x1f8>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	2220      	movs	r2, #32
 8003786:	655a      	str	r2, [r3, #84]	; 0x54

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_ERROR;
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	2203      	movs	r2, #3
 800378c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        return HAL_ERROR;
 8003790:	2301      	movs	r3, #1
 8003792:	e242      	b.n	8003c1a <HAL_DMA_Init+0x63e>
 8003794:	40020010 	.word	0x40020010
 8003798:	40020028 	.word	0x40020028
 800379c:	40020040 	.word	0x40020040
 80037a0:	40020058 	.word	0x40020058
 80037a4:	40020070 	.word	0x40020070
 80037a8:	40020088 	.word	0x40020088
 80037ac:	400200a0 	.word	0x400200a0
 80037b0:	400200b8 	.word	0x400200b8
 80037b4:	40020410 	.word	0x40020410
 80037b8:	40020428 	.word	0x40020428
 80037bc:	40020440 	.word	0x40020440
 80037c0:	40020458 	.word	0x40020458
 80037c4:	40020470 	.word	0x40020470
 80037c8:	40020488 	.word	0x40020488
 80037cc:	400204a0 	.word	0x400204a0
 80037d0:	400204b8 	.word	0x400204b8
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	f003 0301 	and.w	r3, r3, #1
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d1c8      	bne.n	8003774 <HAL_DMA_Init+0x198>
      }
    }

    /* Get the CR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->CR;
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	617b      	str	r3, [r7, #20]

    /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
    registerValue &= ((uint32_t)~(DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80037ea:	697a      	ldr	r2, [r7, #20]
 80037ec:	4b83      	ldr	r3, [pc, #524]	; (80039fc <HAL_DMA_Init+0x420>)
 80037ee:	4013      	ands	r3, r2
 80037f0:	617b      	str	r3, [r7, #20]
                        DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                        DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                        DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

    /* Prepare the DMA Stream configuration */
    registerValue |=  hdma->Init.Direction           |
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	689a      	ldr	r2, [r3, #8]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	68db      	ldr	r3, [r3, #12]
    registerValue |=  hdma->Init.Direction           |
 80037fa:	431a      	orrs	r2, r3
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	691b      	ldr	r3, [r3, #16]
 8003800:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	695b      	ldr	r3, [r3, #20]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003806:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	699b      	ldr	r3, [r3, #24]
 800380c:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	69db      	ldr	r3, [r3, #28]
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003812:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	6a1b      	ldr	r3, [r3, #32]
 8003818:	4313      	orrs	r3, r2
    registerValue |=  hdma->Init.Direction           |
 800381a:	697a      	ldr	r2, [r7, #20]
 800381c:	4313      	orrs	r3, r2
 800381e:	617b      	str	r3, [r7, #20]

    /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003824:	2b04      	cmp	r3, #4
 8003826:	d107      	bne.n	8003838 <HAL_DMA_Init+0x25c>
    {
      /* Get memory burst and peripheral burst */
      registerValue |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003830:	4313      	orrs	r3, r2
 8003832:	697a      	ldr	r2, [r7, #20]
 8003834:	4313      	orrs	r3, r2
 8003836:	617b      	str	r3, [r7, #20]
                                    lock when transferring data to/from USART/UART */
#if (STM32H7_DEV_ID == 0x450UL)
    if((DBGMCU->IDCODE & 0xFFFF0000U) >= 0x20000000U)
    {
#endif /* STM32H7_DEV_ID == 0x450UL */
      if(IS_DMA_UART_USART_REQUEST(hdma->Init.Request) != 0U)
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	685b      	ldr	r3, [r3, #4]
 800383c:	2b28      	cmp	r3, #40	; 0x28
 800383e:	d903      	bls.n	8003848 <HAL_DMA_Init+0x26c>
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	685b      	ldr	r3, [r3, #4]
 8003844:	2b2e      	cmp	r3, #46	; 0x2e
 8003846:	d91f      	bls.n	8003888 <HAL_DMA_Init+0x2ac>
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	685b      	ldr	r3, [r3, #4]
 800384c:	2b3e      	cmp	r3, #62	; 0x3e
 800384e:	d903      	bls.n	8003858 <HAL_DMA_Init+0x27c>
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	685b      	ldr	r3, [r3, #4]
 8003854:	2b42      	cmp	r3, #66	; 0x42
 8003856:	d917      	bls.n	8003888 <HAL_DMA_Init+0x2ac>
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	685b      	ldr	r3, [r3, #4]
 800385c:	2b46      	cmp	r3, #70	; 0x46
 800385e:	d903      	bls.n	8003868 <HAL_DMA_Init+0x28c>
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	685b      	ldr	r3, [r3, #4]
 8003864:	2b48      	cmp	r3, #72	; 0x48
 8003866:	d90f      	bls.n	8003888 <HAL_DMA_Init+0x2ac>
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	685b      	ldr	r3, [r3, #4]
 800386c:	2b4e      	cmp	r3, #78	; 0x4e
 800386e:	d903      	bls.n	8003878 <HAL_DMA_Init+0x29c>
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	685b      	ldr	r3, [r3, #4]
 8003874:	2b52      	cmp	r3, #82	; 0x52
 8003876:	d907      	bls.n	8003888 <HAL_DMA_Init+0x2ac>
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	685b      	ldr	r3, [r3, #4]
 800387c:	2b73      	cmp	r3, #115	; 0x73
 800387e:	d905      	bls.n	800388c <HAL_DMA_Init+0x2b0>
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	685b      	ldr	r3, [r3, #4]
 8003884:	2b77      	cmp	r3, #119	; 0x77
 8003886:	d801      	bhi.n	800388c <HAL_DMA_Init+0x2b0>
 8003888:	2301      	movs	r3, #1
 800388a:	e000      	b.n	800388e <HAL_DMA_Init+0x2b2>
 800388c:	2300      	movs	r3, #0
 800388e:	2b00      	cmp	r3, #0
 8003890:	d003      	beq.n	800389a <HAL_DMA_Init+0x2be>
      {
        registerValue |= DMA_SxCR_TRBUFF;
 8003892:	697b      	ldr	r3, [r7, #20]
 8003894:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003898:	617b      	str	r3, [r7, #20]
#if (STM32H7_DEV_ID == 0x450UL)
    }
#endif /* STM32H7_DEV_ID == 0x450UL */

    /* Write to DMA Stream CR register */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->CR = registerValue;
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	697a      	ldr	r2, [r7, #20]
 80038a0:	601a      	str	r2, [r3, #0]

    /* Get the FCR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR;
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	695b      	ldr	r3, [r3, #20]
 80038a8:	617b      	str	r3, [r7, #20]

    /* Clear Direct mode and FIFO threshold bits */
    registerValue &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80038aa:	697b      	ldr	r3, [r7, #20]
 80038ac:	f023 0307 	bic.w	r3, r3, #7
 80038b0:	617b      	str	r3, [r7, #20]

    /* Prepare the DMA Stream FIFO configuration */
    registerValue |= hdma->Init.FIFOMode;
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038b6:	697a      	ldr	r2, [r7, #20]
 80038b8:	4313      	orrs	r3, r2
 80038ba:	617b      	str	r3, [r7, #20]

    /* the FIFO threshold is not used when the FIFO mode is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038c0:	2b04      	cmp	r3, #4
 80038c2:	d117      	bne.n	80038f4 <HAL_DMA_Init+0x318>
    {
      /* Get the FIFO threshold */
      registerValue |= hdma->Init.FIFOThreshold;
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80038c8:	697a      	ldr	r2, [r7, #20]
 80038ca:	4313      	orrs	r3, r2
 80038cc:	617b      	str	r3, [r7, #20]

      /* Check compatibility between FIFO threshold level and size of the memory burst */
      /* for INCR4, INCR8, INCR16 */
      if(hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038d2:	2b00      	cmp	r3, #0
 80038d4:	d00e      	beq.n	80038f4 <HAL_DMA_Init+0x318>
      {
        if (DMA_CheckFifoParam(hdma) != HAL_OK)
 80038d6:	6878      	ldr	r0, [r7, #4]
 80038d8:	f002 f81c 	bl	8005914 <DMA_CheckFifoParam>
 80038dc:	4603      	mov	r3, r0
 80038de:	2b00      	cmp	r3, #0
 80038e0:	d008      	beq.n	80038f4 <HAL_DMA_Init+0x318>
        {
          /* Update error code */
          hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	2240      	movs	r2, #64	; 0x40
 80038e6:	655a      	str	r2, [r3, #84]	; 0x54

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	2201      	movs	r2, #1
 80038ec:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          return HAL_ERROR;
 80038f0:	2301      	movs	r3, #1
 80038f2:	e192      	b.n	8003c1a <HAL_DMA_Init+0x63e>
        }
      }
    }

    /* Write to DMA Stream FCR */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR = registerValue;
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	697a      	ldr	r2, [r7, #20]
 80038fa:	615a      	str	r2, [r3, #20]

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
       DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_dma = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80038fc:	6878      	ldr	r0, [r7, #4]
 80038fe:	f001 ff57 	bl	80057b0 <DMA_CalcBaseAndBitshift>
 8003902:	4603      	mov	r3, r0
 8003904:	60bb      	str	r3, [r7, #8]

    /* Clear all interrupt flags */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800390a:	f003 031f 	and.w	r3, r3, #31
 800390e:	223f      	movs	r2, #63	; 0x3f
 8003910:	409a      	lsls	r2, r3
 8003912:	68bb      	ldr	r3, [r7, #8]
 8003914:	609a      	str	r2, [r3, #8]
 8003916:	e0c8      	b.n	8003aaa <HAL_DMA_Init+0x4ce>
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	681b      	ldr	r3, [r3, #0]
 800391c:	4a38      	ldr	r2, [pc, #224]	; (8003a00 <HAL_DMA_Init+0x424>)
 800391e:	4293      	cmp	r3, r2
 8003920:	d022      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	4a37      	ldr	r2, [pc, #220]	; (8003a04 <HAL_DMA_Init+0x428>)
 8003928:	4293      	cmp	r3, r2
 800392a:	d01d      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	4a35      	ldr	r2, [pc, #212]	; (8003a08 <HAL_DMA_Init+0x42c>)
 8003932:	4293      	cmp	r3, r2
 8003934:	d018      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	4a34      	ldr	r2, [pc, #208]	; (8003a0c <HAL_DMA_Init+0x430>)
 800393c:	4293      	cmp	r3, r2
 800393e:	d013      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	4a32      	ldr	r2, [pc, #200]	; (8003a10 <HAL_DMA_Init+0x434>)
 8003946:	4293      	cmp	r3, r2
 8003948:	d00e      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	4a31      	ldr	r2, [pc, #196]	; (8003a14 <HAL_DMA_Init+0x438>)
 8003950:	4293      	cmp	r3, r2
 8003952:	d009      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	4a2f      	ldr	r2, [pc, #188]	; (8003a18 <HAL_DMA_Init+0x43c>)
 800395a:	4293      	cmp	r3, r2
 800395c:	d004      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	4a2e      	ldr	r2, [pc, #184]	; (8003a1c <HAL_DMA_Init+0x440>)
 8003964:	4293      	cmp	r3, r2
 8003966:	d101      	bne.n	800396c <HAL_DMA_Init+0x390>
 8003968:	2301      	movs	r3, #1
 800396a:	e000      	b.n	800396e <HAL_DMA_Init+0x392>
 800396c:	2300      	movs	r3, #0
 800396e:	2b00      	cmp	r3, #0
 8003970:	f000 8092 	beq.w	8003a98 <HAL_DMA_Init+0x4bc>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	4a21      	ldr	r2, [pc, #132]	; (8003a00 <HAL_DMA_Init+0x424>)
 800397a:	4293      	cmp	r3, r2
 800397c:	d021      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	681b      	ldr	r3, [r3, #0]
 8003982:	4a20      	ldr	r2, [pc, #128]	; (8003a04 <HAL_DMA_Init+0x428>)
 8003984:	4293      	cmp	r3, r2
 8003986:	d01c      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	681b      	ldr	r3, [r3, #0]
 800398c:	4a1e      	ldr	r2, [pc, #120]	; (8003a08 <HAL_DMA_Init+0x42c>)
 800398e:	4293      	cmp	r3, r2
 8003990:	d017      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	4a1d      	ldr	r2, [pc, #116]	; (8003a0c <HAL_DMA_Init+0x430>)
 8003998:	4293      	cmp	r3, r2
 800399a:	d012      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	681b      	ldr	r3, [r3, #0]
 80039a0:	4a1b      	ldr	r2, [pc, #108]	; (8003a10 <HAL_DMA_Init+0x434>)
 80039a2:	4293      	cmp	r3, r2
 80039a4:	d00d      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	4a1a      	ldr	r2, [pc, #104]	; (8003a14 <HAL_DMA_Init+0x438>)
 80039ac:	4293      	cmp	r3, r2
 80039ae:	d008      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	4a18      	ldr	r2, [pc, #96]	; (8003a18 <HAL_DMA_Init+0x43c>)
 80039b6:	4293      	cmp	r3, r2
 80039b8:	d003      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	4a17      	ldr	r2, [pc, #92]	; (8003a1c <HAL_DMA_Init+0x440>)
 80039c0:	4293      	cmp	r3, r2
      /* Check the request parameter */
      assert_param(IS_BDMA_REQUEST(hdma->Init.Request));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	2202      	movs	r2, #2
 80039c6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	2200      	movs	r2, #0
 80039ce:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Get the CR register value */
    registerValue = ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR;
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	617b      	str	r3, [r7, #20]

    /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, MEM2MEM, DBM and CT bits */
    registerValue &= ((uint32_t)~(BDMA_CCR_PL    | BDMA_CCR_MSIZE   | BDMA_CCR_PSIZE  | \
 80039da:	697a      	ldr	r2, [r7, #20]
 80039dc:	4b10      	ldr	r3, [pc, #64]	; (8003a20 <HAL_DMA_Init+0x444>)
 80039de:	4013      	ands	r3, r2
 80039e0:	617b      	str	r3, [r7, #20]
                                  BDMA_CCR_MINC  | BDMA_CCR_PINC    | BDMA_CCR_CIRC   | \
                                  BDMA_CCR_DIR   | BDMA_CCR_MEM2MEM | BDMA_CCR_DBM    | \
                                  BDMA_CCR_CT));

    /* Prepare the DMA Channel configuration */
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	689b      	ldr	r3, [r3, #8]
 80039e6:	2b40      	cmp	r3, #64	; 0x40
 80039e8:	d01c      	beq.n	8003a24 <HAL_DMA_Init+0x448>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	689b      	ldr	r3, [r3, #8]
 80039ee:	2b80      	cmp	r3, #128	; 0x80
 80039f0:	d102      	bne.n	80039f8 <HAL_DMA_Init+0x41c>
 80039f2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80039f6:	e016      	b.n	8003a26 <HAL_DMA_Init+0x44a>
 80039f8:	2300      	movs	r3, #0
 80039fa:	e014      	b.n	8003a26 <HAL_DMA_Init+0x44a>
 80039fc:	fe10803f 	.word	0xfe10803f
 8003a00:	58025408 	.word	0x58025408
 8003a04:	5802541c 	.word	0x5802541c
 8003a08:	58025430 	.word	0x58025430
 8003a0c:	58025444 	.word	0x58025444
 8003a10:	58025458 	.word	0x58025458
 8003a14:	5802546c 	.word	0x5802546c
 8003a18:	58025480 	.word	0x58025480
 8003a1c:	58025494 	.word	0x58025494
 8003a20:	fffe000f 	.word	0xfffe000f
 8003a24:	2310      	movs	r3, #16
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8003a26:	687a      	ldr	r2, [r7, #4]
 8003a28:	68d2      	ldr	r2, [r2, #12]
 8003a2a:	08d2      	lsrs	r2, r2, #3
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8003a2c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	691b      	ldr	r3, [r3, #16]
 8003a32:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8003a34:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	695b      	ldr	r3, [r3, #20]
 8003a3a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8003a3c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	699b      	ldr	r3, [r3, #24]
 8003a42:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8003a44:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	69db      	ldr	r3, [r3, #28]
 8003a4a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8003a4c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PRIORITY(hdma->Init.Priority);
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	6a1b      	ldr	r3, [r3, #32]
 8003a52:	091b      	lsrs	r3, r3, #4
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8003a54:	4313      	orrs	r3, r2
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8003a56:	697a      	ldr	r2, [r7, #20]
 8003a58:	4313      	orrs	r3, r2
 8003a5a:	617b      	str	r3, [r7, #20]

    /* Write to DMA Channel CR register */
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR = registerValue;
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	697a      	ldr	r2, [r7, #20]
 8003a62:	601a      	str	r2, [r3, #0]

    /* calculation of the channel index */
    hdma->StreamIndex = (((uint32_t)((uint32_t*)hdma->Instance) - (uint32_t)BDMA_Channel0) / ((uint32_t)BDMA_Channel1 - (uint32_t)BDMA_Channel0)) << 2U;
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	461a      	mov	r2, r3
 8003a6a:	4b6e      	ldr	r3, [pc, #440]	; (8003c24 <HAL_DMA_Init+0x648>)
 8003a6c:	4413      	add	r3, r2
 8003a6e:	4a6e      	ldr	r2, [pc, #440]	; (8003c28 <HAL_DMA_Init+0x64c>)
 8003a70:	fba2 2303 	umull	r2, r3, r2, r3
 8003a74:	091b      	lsrs	r3, r3, #4
 8003a76:	009a      	lsls	r2, r3, #2
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
    DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_bdma = (BDMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003a7c:	6878      	ldr	r0, [r7, #4]
 8003a7e:	f001 fe97 	bl	80057b0 <DMA_CalcBaseAndBitshift>
 8003a82:	4603      	mov	r3, r0
 8003a84:	60fb      	str	r3, [r7, #12]

    /* Clear all interrupt flags */
    regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a8a:	f003 031f 	and.w	r3, r3, #31
 8003a8e:	2201      	movs	r2, #1
 8003a90:	409a      	lsls	r2, r3
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	605a      	str	r2, [r3, #4]
 8003a96:	e008      	b.n	8003aaa <HAL_DMA_Init+0x4ce>
  }
  else
  {
    hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	2240      	movs	r2, #64	; 0x40
 8003a9c:	655a      	str	r2, [r3, #84]	; 0x54
    hdma->State     = HAL_DMA_STATE_ERROR;
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	2203      	movs	r2, #3
 8003aa2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    return HAL_ERROR;
 8003aa6:	2301      	movs	r3, #1
 8003aa8:	e0b7      	b.n	8003c1a <HAL_DMA_Init+0x63e>
  }

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	4a5f      	ldr	r2, [pc, #380]	; (8003c2c <HAL_DMA_Init+0x650>)
 8003ab0:	4293      	cmp	r3, r2
 8003ab2:	d072      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	4a5d      	ldr	r2, [pc, #372]	; (8003c30 <HAL_DMA_Init+0x654>)
 8003aba:	4293      	cmp	r3, r2
 8003abc:	d06d      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	4a5c      	ldr	r2, [pc, #368]	; (8003c34 <HAL_DMA_Init+0x658>)
 8003ac4:	4293      	cmp	r3, r2
 8003ac6:	d068      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	4a5a      	ldr	r2, [pc, #360]	; (8003c38 <HAL_DMA_Init+0x65c>)
 8003ace:	4293      	cmp	r3, r2
 8003ad0:	d063      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	4a59      	ldr	r2, [pc, #356]	; (8003c3c <HAL_DMA_Init+0x660>)
 8003ad8:	4293      	cmp	r3, r2
 8003ada:	d05e      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	4a57      	ldr	r2, [pc, #348]	; (8003c40 <HAL_DMA_Init+0x664>)
 8003ae2:	4293      	cmp	r3, r2
 8003ae4:	d059      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	4a56      	ldr	r2, [pc, #344]	; (8003c44 <HAL_DMA_Init+0x668>)
 8003aec:	4293      	cmp	r3, r2
 8003aee:	d054      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	4a54      	ldr	r2, [pc, #336]	; (8003c48 <HAL_DMA_Init+0x66c>)
 8003af6:	4293      	cmp	r3, r2
 8003af8:	d04f      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	4a53      	ldr	r2, [pc, #332]	; (8003c4c <HAL_DMA_Init+0x670>)
 8003b00:	4293      	cmp	r3, r2
 8003b02:	d04a      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	681b      	ldr	r3, [r3, #0]
 8003b08:	4a51      	ldr	r2, [pc, #324]	; (8003c50 <HAL_DMA_Init+0x674>)
 8003b0a:	4293      	cmp	r3, r2
 8003b0c:	d045      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	4a50      	ldr	r2, [pc, #320]	; (8003c54 <HAL_DMA_Init+0x678>)
 8003b14:	4293      	cmp	r3, r2
 8003b16:	d040      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	4a4e      	ldr	r2, [pc, #312]	; (8003c58 <HAL_DMA_Init+0x67c>)
 8003b1e:	4293      	cmp	r3, r2
 8003b20:	d03b      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	4a4d      	ldr	r2, [pc, #308]	; (8003c5c <HAL_DMA_Init+0x680>)
 8003b28:	4293      	cmp	r3, r2
 8003b2a:	d036      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	4a4b      	ldr	r2, [pc, #300]	; (8003c60 <HAL_DMA_Init+0x684>)
 8003b32:	4293      	cmp	r3, r2
 8003b34:	d031      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	4a4a      	ldr	r2, [pc, #296]	; (8003c64 <HAL_DMA_Init+0x688>)
 8003b3c:	4293      	cmp	r3, r2
 8003b3e:	d02c      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	681b      	ldr	r3, [r3, #0]
 8003b44:	4a48      	ldr	r2, [pc, #288]	; (8003c68 <HAL_DMA_Init+0x68c>)
 8003b46:	4293      	cmp	r3, r2
 8003b48:	d027      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	4a47      	ldr	r2, [pc, #284]	; (8003c6c <HAL_DMA_Init+0x690>)
 8003b50:	4293      	cmp	r3, r2
 8003b52:	d022      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	4a45      	ldr	r2, [pc, #276]	; (8003c70 <HAL_DMA_Init+0x694>)
 8003b5a:	4293      	cmp	r3, r2
 8003b5c:	d01d      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	4a44      	ldr	r2, [pc, #272]	; (8003c74 <HAL_DMA_Init+0x698>)
 8003b64:	4293      	cmp	r3, r2
 8003b66:	d018      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	681b      	ldr	r3, [r3, #0]
 8003b6c:	4a42      	ldr	r2, [pc, #264]	; (8003c78 <HAL_DMA_Init+0x69c>)
 8003b6e:	4293      	cmp	r3, r2
 8003b70:	d013      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	4a41      	ldr	r2, [pc, #260]	; (8003c7c <HAL_DMA_Init+0x6a0>)
 8003b78:	4293      	cmp	r3, r2
 8003b7a:	d00e      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	4a3f      	ldr	r2, [pc, #252]	; (8003c80 <HAL_DMA_Init+0x6a4>)
 8003b82:	4293      	cmp	r3, r2
 8003b84:	d009      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	4a3e      	ldr	r2, [pc, #248]	; (8003c84 <HAL_DMA_Init+0x6a8>)
 8003b8c:	4293      	cmp	r3, r2
 8003b8e:	d004      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	681b      	ldr	r3, [r3, #0]
 8003b94:	4a3c      	ldr	r2, [pc, #240]	; (8003c88 <HAL_DMA_Init+0x6ac>)
 8003b96:	4293      	cmp	r3, r2
 8003b98:	d101      	bne.n	8003b9e <HAL_DMA_Init+0x5c2>
 8003b9a:	2301      	movs	r3, #1
 8003b9c:	e000      	b.n	8003ba0 <HAL_DMA_Init+0x5c4>
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	2b00      	cmp	r3, #0
 8003ba2:	d032      	beq.n	8003c0a <HAL_DMA_Init+0x62e>
  {
    /* Initialize parameters for DMAMUX channel :
    DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
    */
    DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8003ba4:	6878      	ldr	r0, [r7, #4]
 8003ba6:	f001 ff31 	bl	8005a0c <DMA_CalcDMAMUXChannelBaseAndMask>

    if(hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	689b      	ldr	r3, [r3, #8]
 8003bae:	2b80      	cmp	r3, #128	; 0x80
 8003bb0:	d102      	bne.n	8003bb8 <HAL_DMA_Init+0x5dc>
    {
      /* if memory to memory force the request to 0*/
      hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	2200      	movs	r2, #0
 8003bb6:	605a      	str	r2, [r3, #4]
    }

    /* Set peripheral request  to DMAMUX channel */
    hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	685a      	ldr	r2, [r3, #4]
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003bc0:	b2d2      	uxtb	r2, r2
 8003bc2:	601a      	str	r2, [r3, #0]

    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003bc8:	687a      	ldr	r2, [r7, #4]
 8003bca:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8003bcc:	605a      	str	r2, [r3, #4]

    /* Initialize parameters for DMAMUX request generator :
    if the DMA request is DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR7
    */
    if((hdma->Init.Request >= DMA_REQUEST_GENERATOR0) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR7))
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	685b      	ldr	r3, [r3, #4]
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	d010      	beq.n	8003bf8 <HAL_DMA_Init+0x61c>
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	685b      	ldr	r3, [r3, #4]
 8003bda:	2b08      	cmp	r3, #8
 8003bdc:	d80c      	bhi.n	8003bf8 <HAL_DMA_Init+0x61c>
    {
      /* Initialize parameters for DMAMUX request generator :
      DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask */
      DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 8003bde:	6878      	ldr	r0, [r7, #4]
 8003be0:	f001 ffae 	bl	8005b40 <DMA_CalcDMAMUXRequestGenBaseAndMask>

      /* Reset the DMAMUX request generator register */
      hdma->DMAmuxRequestGen->RGCR = 0U;
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003be8:	2200      	movs	r2, #0
 8003bea:	601a      	str	r2, [r3, #0]

      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003bf0:	687a      	ldr	r2, [r7, #4]
 8003bf2:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8003bf4:	605a      	str	r2, [r3, #4]
 8003bf6:	e008      	b.n	8003c0a <HAL_DMA_Init+0x62e>
    }
    else
    {
      hdma->DMAmuxRequestGen = 0U;
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	2200      	movs	r2, #0
 8003bfc:	66da      	str	r2, [r3, #108]	; 0x6c
      hdma->DMAmuxRequestGenStatus = 0U;
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	2200      	movs	r2, #0
 8003c02:	671a      	str	r2, [r3, #112]	; 0x70
      hdma->DMAmuxRequestGenStatusMask = 0U;
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	2200      	movs	r2, #0
 8003c08:	675a      	str	r2, [r3, #116]	; 0x74
    }
  }

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	2200      	movs	r2, #0
 8003c0e:	655a      	str	r2, [r3, #84]	; 0x54

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	2201      	movs	r2, #1
 8003c14:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 8003c18:	2300      	movs	r3, #0
}
 8003c1a:	4618      	mov	r0, r3
 8003c1c:	3718      	adds	r7, #24
 8003c1e:	46bd      	mov	sp, r7
 8003c20:	bd80      	pop	{r7, pc}
 8003c22:	bf00      	nop
 8003c24:	a7fdabf8 	.word	0xa7fdabf8
 8003c28:	cccccccd 	.word	0xcccccccd
 8003c2c:	40020010 	.word	0x40020010
 8003c30:	40020028 	.word	0x40020028
 8003c34:	40020040 	.word	0x40020040
 8003c38:	40020058 	.word	0x40020058
 8003c3c:	40020070 	.word	0x40020070
 8003c40:	40020088 	.word	0x40020088
 8003c44:	400200a0 	.word	0x400200a0
 8003c48:	400200b8 	.word	0x400200b8
 8003c4c:	40020410 	.word	0x40020410
 8003c50:	40020428 	.word	0x40020428
 8003c54:	40020440 	.word	0x40020440
 8003c58:	40020458 	.word	0x40020458
 8003c5c:	40020470 	.word	0x40020470
 8003c60:	40020488 	.word	0x40020488
 8003c64:	400204a0 	.word	0x400204a0
 8003c68:	400204b8 	.word	0x400204b8
 8003c6c:	58025408 	.word	0x58025408
 8003c70:	5802541c 	.word	0x5802541c
 8003c74:	58025430 	.word	0x58025430
 8003c78:	58025444 	.word	0x58025444
 8003c7c:	58025458 	.word	0x58025458
 8003c80:	5802546c 	.word	0x5802546c
 8003c84:	58025480 	.word	0x58025480
 8003c88:	58025494 	.word	0x58025494

08003c8c <HAL_DMA_Start_IT>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	b086      	sub	sp, #24
 8003c90:	af00      	add	r7, sp, #0
 8003c92:	60f8      	str	r0, [r7, #12]
 8003c94:	60b9      	str	r1, [r7, #8]
 8003c96:	607a      	str	r2, [r7, #4]
 8003c98:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003c9a:	2300      	movs	r3, #0
 8003c9c:	75fb      	strb	r3, [r7, #23]

  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 8003c9e:	68fb      	ldr	r3, [r7, #12]
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d101      	bne.n	8003ca8 <HAL_DMA_Start_IT+0x1c>
  {
    return HAL_ERROR;
 8003ca4:	2301      	movs	r3, #1
 8003ca6:	e226      	b.n	80040f6 <HAL_DMA_Start_IT+0x46a>
  }

  /* Process locked */
  __HAL_LOCK(hdma);
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003cae:	2b01      	cmp	r3, #1
 8003cb0:	d101      	bne.n	8003cb6 <HAL_DMA_Start_IT+0x2a>
 8003cb2:	2302      	movs	r3, #2
 8003cb4:	e21f      	b.n	80040f6 <HAL_DMA_Start_IT+0x46a>
 8003cb6:	68fb      	ldr	r3, [r7, #12]
 8003cb8:	2201      	movs	r2, #1
 8003cba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  if(HAL_DMA_STATE_READY == hdma->State)
 8003cbe:	68fb      	ldr	r3, [r7, #12]
 8003cc0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003cc4:	b2db      	uxtb	r3, r3
 8003cc6:	2b01      	cmp	r3, #1
 8003cc8:	f040 820a 	bne.w	80040e0 <HAL_DMA_Start_IT+0x454>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003ccc:	68fb      	ldr	r3, [r7, #12]
 8003cce:	2202      	movs	r2, #2
 8003cd0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	655a      	str	r2, [r3, #84]	; 0x54

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	4a68      	ldr	r2, [pc, #416]	; (8003e80 <HAL_DMA_Start_IT+0x1f4>)
 8003ce0:	4293      	cmp	r3, r2
 8003ce2:	d04a      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003ce4:	68fb      	ldr	r3, [r7, #12]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	4a66      	ldr	r2, [pc, #408]	; (8003e84 <HAL_DMA_Start_IT+0x1f8>)
 8003cea:	4293      	cmp	r3, r2
 8003cec:	d045      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003cee:	68fb      	ldr	r3, [r7, #12]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	4a65      	ldr	r2, [pc, #404]	; (8003e88 <HAL_DMA_Start_IT+0x1fc>)
 8003cf4:	4293      	cmp	r3, r2
 8003cf6:	d040      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	4a63      	ldr	r2, [pc, #396]	; (8003e8c <HAL_DMA_Start_IT+0x200>)
 8003cfe:	4293      	cmp	r3, r2
 8003d00:	d03b      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	4a62      	ldr	r2, [pc, #392]	; (8003e90 <HAL_DMA_Start_IT+0x204>)
 8003d08:	4293      	cmp	r3, r2
 8003d0a:	d036      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	4a60      	ldr	r2, [pc, #384]	; (8003e94 <HAL_DMA_Start_IT+0x208>)
 8003d12:	4293      	cmp	r3, r2
 8003d14:	d031      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	4a5f      	ldr	r2, [pc, #380]	; (8003e98 <HAL_DMA_Start_IT+0x20c>)
 8003d1c:	4293      	cmp	r3, r2
 8003d1e:	d02c      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d20:	68fb      	ldr	r3, [r7, #12]
 8003d22:	681b      	ldr	r3, [r3, #0]
 8003d24:	4a5d      	ldr	r2, [pc, #372]	; (8003e9c <HAL_DMA_Start_IT+0x210>)
 8003d26:	4293      	cmp	r3, r2
 8003d28:	d027      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	4a5c      	ldr	r2, [pc, #368]	; (8003ea0 <HAL_DMA_Start_IT+0x214>)
 8003d30:	4293      	cmp	r3, r2
 8003d32:	d022      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	4a5a      	ldr	r2, [pc, #360]	; (8003ea4 <HAL_DMA_Start_IT+0x218>)
 8003d3a:	4293      	cmp	r3, r2
 8003d3c:	d01d      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d3e:	68fb      	ldr	r3, [r7, #12]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	4a59      	ldr	r2, [pc, #356]	; (8003ea8 <HAL_DMA_Start_IT+0x21c>)
 8003d44:	4293      	cmp	r3, r2
 8003d46:	d018      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d48:	68fb      	ldr	r3, [r7, #12]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	4a57      	ldr	r2, [pc, #348]	; (8003eac <HAL_DMA_Start_IT+0x220>)
 8003d4e:	4293      	cmp	r3, r2
 8003d50:	d013      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d52:	68fb      	ldr	r3, [r7, #12]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	4a56      	ldr	r2, [pc, #344]	; (8003eb0 <HAL_DMA_Start_IT+0x224>)
 8003d58:	4293      	cmp	r3, r2
 8003d5a:	d00e      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d5c:	68fb      	ldr	r3, [r7, #12]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	4a54      	ldr	r2, [pc, #336]	; (8003eb4 <HAL_DMA_Start_IT+0x228>)
 8003d62:	4293      	cmp	r3, r2
 8003d64:	d009      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	4a53      	ldr	r2, [pc, #332]	; (8003eb8 <HAL_DMA_Start_IT+0x22c>)
 8003d6c:	4293      	cmp	r3, r2
 8003d6e:	d004      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d70:	68fb      	ldr	r3, [r7, #12]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	4a51      	ldr	r2, [pc, #324]	; (8003ebc <HAL_DMA_Start_IT+0x230>)
 8003d76:	4293      	cmp	r3, r2
 8003d78:	d108      	bne.n	8003d8c <HAL_DMA_Start_IT+0x100>
 8003d7a:	68fb      	ldr	r3, [r7, #12]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	681a      	ldr	r2, [r3, #0]
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	f022 0201 	bic.w	r2, r2, #1
 8003d88:	601a      	str	r2, [r3, #0]
 8003d8a:	e007      	b.n	8003d9c <HAL_DMA_Start_IT+0x110>
 8003d8c:	68fb      	ldr	r3, [r7, #12]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	681a      	ldr	r2, [r3, #0]
 8003d92:	68fb      	ldr	r3, [r7, #12]
 8003d94:	681b      	ldr	r3, [r3, #0]
 8003d96:	f022 0201 	bic.w	r2, r2, #1
 8003d9a:	601a      	str	r2, [r3, #0]

    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8003d9c:	683b      	ldr	r3, [r7, #0]
 8003d9e:	687a      	ldr	r2, [r7, #4]
 8003da0:	68b9      	ldr	r1, [r7, #8]
 8003da2:	68f8      	ldr	r0, [r7, #12]
 8003da4:	f001 fb58 	bl	8005458 <DMA_SetConfig>

    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	4a34      	ldr	r2, [pc, #208]	; (8003e80 <HAL_DMA_Start_IT+0x1f4>)
 8003dae:	4293      	cmp	r3, r2
 8003db0:	d04a      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	4a33      	ldr	r2, [pc, #204]	; (8003e84 <HAL_DMA_Start_IT+0x1f8>)
 8003db8:	4293      	cmp	r3, r2
 8003dba:	d045      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dbc:	68fb      	ldr	r3, [r7, #12]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	4a31      	ldr	r2, [pc, #196]	; (8003e88 <HAL_DMA_Start_IT+0x1fc>)
 8003dc2:	4293      	cmp	r3, r2
 8003dc4:	d040      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	4a30      	ldr	r2, [pc, #192]	; (8003e8c <HAL_DMA_Start_IT+0x200>)
 8003dcc:	4293      	cmp	r3, r2
 8003dce:	d03b      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	681b      	ldr	r3, [r3, #0]
 8003dd4:	4a2e      	ldr	r2, [pc, #184]	; (8003e90 <HAL_DMA_Start_IT+0x204>)
 8003dd6:	4293      	cmp	r3, r2
 8003dd8:	d036      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	4a2d      	ldr	r2, [pc, #180]	; (8003e94 <HAL_DMA_Start_IT+0x208>)
 8003de0:	4293      	cmp	r3, r2
 8003de2:	d031      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003de4:	68fb      	ldr	r3, [r7, #12]
 8003de6:	681b      	ldr	r3, [r3, #0]
 8003de8:	4a2b      	ldr	r2, [pc, #172]	; (8003e98 <HAL_DMA_Start_IT+0x20c>)
 8003dea:	4293      	cmp	r3, r2
 8003dec:	d02c      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	4a2a      	ldr	r2, [pc, #168]	; (8003e9c <HAL_DMA_Start_IT+0x210>)
 8003df4:	4293      	cmp	r3, r2
 8003df6:	d027      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	4a28      	ldr	r2, [pc, #160]	; (8003ea0 <HAL_DMA_Start_IT+0x214>)
 8003dfe:	4293      	cmp	r3, r2
 8003e00:	d022      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e02:	68fb      	ldr	r3, [r7, #12]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	4a27      	ldr	r2, [pc, #156]	; (8003ea4 <HAL_DMA_Start_IT+0x218>)
 8003e08:	4293      	cmp	r3, r2
 8003e0a:	d01d      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	4a25      	ldr	r2, [pc, #148]	; (8003ea8 <HAL_DMA_Start_IT+0x21c>)
 8003e12:	4293      	cmp	r3, r2
 8003e14:	d018      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e16:	68fb      	ldr	r3, [r7, #12]
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	4a24      	ldr	r2, [pc, #144]	; (8003eac <HAL_DMA_Start_IT+0x220>)
 8003e1c:	4293      	cmp	r3, r2
 8003e1e:	d013      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	4a22      	ldr	r2, [pc, #136]	; (8003eb0 <HAL_DMA_Start_IT+0x224>)
 8003e26:	4293      	cmp	r3, r2
 8003e28:	d00e      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	4a21      	ldr	r2, [pc, #132]	; (8003eb4 <HAL_DMA_Start_IT+0x228>)
 8003e30:	4293      	cmp	r3, r2
 8003e32:	d009      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	4a1f      	ldr	r2, [pc, #124]	; (8003eb8 <HAL_DMA_Start_IT+0x22c>)
 8003e3a:	4293      	cmp	r3, r2
 8003e3c:	d004      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e3e:	68fb      	ldr	r3, [r7, #12]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	4a1e      	ldr	r2, [pc, #120]	; (8003ebc <HAL_DMA_Start_IT+0x230>)
 8003e44:	4293      	cmp	r3, r2
 8003e46:	d101      	bne.n	8003e4c <HAL_DMA_Start_IT+0x1c0>
 8003e48:	2301      	movs	r3, #1
 8003e4a:	e000      	b.n	8003e4e <HAL_DMA_Start_IT+0x1c2>
 8003e4c:	2300      	movs	r3, #0
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d036      	beq.n	8003ec0 <HAL_DMA_Start_IT+0x234>
    {
      /* Enable Common interrupts*/
      MODIFY_REG(((DMA_Stream_TypeDef   *)hdma->Instance)->CR, (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT), (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME));
 8003e52:	68fb      	ldr	r3, [r7, #12]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	f023 021e 	bic.w	r2, r3, #30
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	f042 0216 	orr.w	r2, r2, #22
 8003e64:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d03e      	beq.n	8003eec <HAL_DMA_Start_IT+0x260>
      {
        /* Enable Half Transfer IT if corresponding Callback is set */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  |= DMA_IT_HT;
 8003e6e:	68fb      	ldr	r3, [r7, #12]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	681a      	ldr	r2, [r3, #0]
 8003e74:	68fb      	ldr	r3, [r7, #12]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	f042 0208 	orr.w	r2, r2, #8
 8003e7c:	601a      	str	r2, [r3, #0]
 8003e7e:	e035      	b.n	8003eec <HAL_DMA_Start_IT+0x260>
 8003e80:	40020010 	.word	0x40020010
 8003e84:	40020028 	.word	0x40020028
 8003e88:	40020040 	.word	0x40020040
 8003e8c:	40020058 	.word	0x40020058
 8003e90:	40020070 	.word	0x40020070
 8003e94:	40020088 	.word	0x40020088
 8003e98:	400200a0 	.word	0x400200a0
 8003e9c:	400200b8 	.word	0x400200b8
 8003ea0:	40020410 	.word	0x40020410
 8003ea4:	40020428 	.word	0x40020428
 8003ea8:	40020440 	.word	0x40020440
 8003eac:	40020458 	.word	0x40020458
 8003eb0:	40020470 	.word	0x40020470
 8003eb4:	40020488 	.word	0x40020488
 8003eb8:	400204a0 	.word	0x400204a0
 8003ebc:	400204b8 	.word	0x400204b8
      }
    }
    else /* BDMA channel */
    {
      /* Enable Common interrupts */
      MODIFY_REG(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR, (BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE), (BDMA_CCR_TCIE | BDMA_CCR_TEIE));
 8003ec0:	68fb      	ldr	r3, [r7, #12]
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f023 020e 	bic.w	r2, r3, #14
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	f042 020a 	orr.w	r2, r2, #10
 8003ed2:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d007      	beq.n	8003eec <HAL_DMA_Start_IT+0x260>
      {
        /*Enable Half Transfer IT if corresponding Callback is set */
        ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  |= BDMA_CCR_HTIE;
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	681a      	ldr	r2, [r3, #0]
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	681b      	ldr	r3, [r3, #0]
 8003ee6:	f042 0204 	orr.w	r2, r2, #4
 8003eea:	601a      	str	r2, [r3, #0]
      }
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	4a83      	ldr	r2, [pc, #524]	; (8004100 <HAL_DMA_Start_IT+0x474>)
 8003ef2:	4293      	cmp	r3, r2
 8003ef4:	d072      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003ef6:	68fb      	ldr	r3, [r7, #12]
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	4a82      	ldr	r2, [pc, #520]	; (8004104 <HAL_DMA_Start_IT+0x478>)
 8003efc:	4293      	cmp	r3, r2
 8003efe:	d06d      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	4a80      	ldr	r2, [pc, #512]	; (8004108 <HAL_DMA_Start_IT+0x47c>)
 8003f06:	4293      	cmp	r3, r2
 8003f08:	d068      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f0a:	68fb      	ldr	r3, [r7, #12]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	4a7f      	ldr	r2, [pc, #508]	; (800410c <HAL_DMA_Start_IT+0x480>)
 8003f10:	4293      	cmp	r3, r2
 8003f12:	d063      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	4a7d      	ldr	r2, [pc, #500]	; (8004110 <HAL_DMA_Start_IT+0x484>)
 8003f1a:	4293      	cmp	r3, r2
 8003f1c:	d05e      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	4a7c      	ldr	r2, [pc, #496]	; (8004114 <HAL_DMA_Start_IT+0x488>)
 8003f24:	4293      	cmp	r3, r2
 8003f26:	d059      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	4a7a      	ldr	r2, [pc, #488]	; (8004118 <HAL_DMA_Start_IT+0x48c>)
 8003f2e:	4293      	cmp	r3, r2
 8003f30:	d054      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f32:	68fb      	ldr	r3, [r7, #12]
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	4a79      	ldr	r2, [pc, #484]	; (800411c <HAL_DMA_Start_IT+0x490>)
 8003f38:	4293      	cmp	r3, r2
 8003f3a:	d04f      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	681b      	ldr	r3, [r3, #0]
 8003f40:	4a77      	ldr	r2, [pc, #476]	; (8004120 <HAL_DMA_Start_IT+0x494>)
 8003f42:	4293      	cmp	r3, r2
 8003f44:	d04a      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	4a76      	ldr	r2, [pc, #472]	; (8004124 <HAL_DMA_Start_IT+0x498>)
 8003f4c:	4293      	cmp	r3, r2
 8003f4e:	d045      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	4a74      	ldr	r2, [pc, #464]	; (8004128 <HAL_DMA_Start_IT+0x49c>)
 8003f56:	4293      	cmp	r3, r2
 8003f58:	d040      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	681b      	ldr	r3, [r3, #0]
 8003f5e:	4a73      	ldr	r2, [pc, #460]	; (800412c <HAL_DMA_Start_IT+0x4a0>)
 8003f60:	4293      	cmp	r3, r2
 8003f62:	d03b      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f64:	68fb      	ldr	r3, [r7, #12]
 8003f66:	681b      	ldr	r3, [r3, #0]
 8003f68:	4a71      	ldr	r2, [pc, #452]	; (8004130 <HAL_DMA_Start_IT+0x4a4>)
 8003f6a:	4293      	cmp	r3, r2
 8003f6c:	d036      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f6e:	68fb      	ldr	r3, [r7, #12]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	4a70      	ldr	r2, [pc, #448]	; (8004134 <HAL_DMA_Start_IT+0x4a8>)
 8003f74:	4293      	cmp	r3, r2
 8003f76:	d031      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	4a6e      	ldr	r2, [pc, #440]	; (8004138 <HAL_DMA_Start_IT+0x4ac>)
 8003f7e:	4293      	cmp	r3, r2
 8003f80:	d02c      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f82:	68fb      	ldr	r3, [r7, #12]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4a6d      	ldr	r2, [pc, #436]	; (800413c <HAL_DMA_Start_IT+0x4b0>)
 8003f88:	4293      	cmp	r3, r2
 8003f8a:	d027      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	4a6b      	ldr	r2, [pc, #428]	; (8004140 <HAL_DMA_Start_IT+0x4b4>)
 8003f92:	4293      	cmp	r3, r2
 8003f94:	d022      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f96:	68fb      	ldr	r3, [r7, #12]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	4a6a      	ldr	r2, [pc, #424]	; (8004144 <HAL_DMA_Start_IT+0x4b8>)
 8003f9c:	4293      	cmp	r3, r2
 8003f9e:	d01d      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	4a68      	ldr	r2, [pc, #416]	; (8004148 <HAL_DMA_Start_IT+0x4bc>)
 8003fa6:	4293      	cmp	r3, r2
 8003fa8:	d018      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	4a67      	ldr	r2, [pc, #412]	; (800414c <HAL_DMA_Start_IT+0x4c0>)
 8003fb0:	4293      	cmp	r3, r2
 8003fb2:	d013      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	681b      	ldr	r3, [r3, #0]
 8003fb8:	4a65      	ldr	r2, [pc, #404]	; (8004150 <HAL_DMA_Start_IT+0x4c4>)
 8003fba:	4293      	cmp	r3, r2
 8003fbc:	d00e      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fbe:	68fb      	ldr	r3, [r7, #12]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	4a64      	ldr	r2, [pc, #400]	; (8004154 <HAL_DMA_Start_IT+0x4c8>)
 8003fc4:	4293      	cmp	r3, r2
 8003fc6:	d009      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	4a62      	ldr	r2, [pc, #392]	; (8004158 <HAL_DMA_Start_IT+0x4cc>)
 8003fce:	4293      	cmp	r3, r2
 8003fd0:	d004      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	4a61      	ldr	r2, [pc, #388]	; (800415c <HAL_DMA_Start_IT+0x4d0>)
 8003fd8:	4293      	cmp	r3, r2
 8003fda:	d101      	bne.n	8003fe0 <HAL_DMA_Start_IT+0x354>
 8003fdc:	2301      	movs	r3, #1
 8003fde:	e000      	b.n	8003fe2 <HAL_DMA_Start_IT+0x356>
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	2b00      	cmp	r3, #0
 8003fe4:	d01a      	beq.n	800401c <HAL_DMA_Start_IT+0x390>
    {
      /* Check if DMAMUX Synchronization is enabled */
      if((hdma->DMAmuxChannel->CCR & DMAMUX_CxCR_SE) != 0U)
 8003fe6:	68fb      	ldr	r3, [r7, #12]
 8003fe8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003ff0:	2b00      	cmp	r3, #0
 8003ff2:	d007      	beq.n	8004004 <HAL_DMA_Start_IT+0x378>
      {
        /* Enable DMAMUX sync overrun IT*/
        hdma->DMAmuxChannel->CCR |= DMAMUX_CxCR_SOIE;
 8003ff4:	68fb      	ldr	r3, [r7, #12]
 8003ff6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003ff8:	681a      	ldr	r2, [r3, #0]
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003ffe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004002:	601a      	str	r2, [r3, #0]
      }

      if(hdma->DMAmuxRequestGen != 0U)
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004008:	2b00      	cmp	r3, #0
 800400a:	d007      	beq.n	800401c <HAL_DMA_Start_IT+0x390>
      {
        /* if using DMAMUX request generator, enable the DMAMUX request generator overrun IT*/
        /* enable the request gen overrun IT */
        hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004010:	681a      	ldr	r2, [r3, #0]
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004016:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800401a:	601a      	str	r2, [r3, #0]
      }
    }

    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	4a37      	ldr	r2, [pc, #220]	; (8004100 <HAL_DMA_Start_IT+0x474>)
 8004022:	4293      	cmp	r3, r2
 8004024:	d04a      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004026:	68fb      	ldr	r3, [r7, #12]
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	4a36      	ldr	r2, [pc, #216]	; (8004104 <HAL_DMA_Start_IT+0x478>)
 800402c:	4293      	cmp	r3, r2
 800402e:	d045      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	4a34      	ldr	r2, [pc, #208]	; (8004108 <HAL_DMA_Start_IT+0x47c>)
 8004036:	4293      	cmp	r3, r2
 8004038:	d040      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	4a33      	ldr	r2, [pc, #204]	; (800410c <HAL_DMA_Start_IT+0x480>)
 8004040:	4293      	cmp	r3, r2
 8004042:	d03b      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	4a31      	ldr	r2, [pc, #196]	; (8004110 <HAL_DMA_Start_IT+0x484>)
 800404a:	4293      	cmp	r3, r2
 800404c:	d036      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	4a30      	ldr	r2, [pc, #192]	; (8004114 <HAL_DMA_Start_IT+0x488>)
 8004054:	4293      	cmp	r3, r2
 8004056:	d031      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004058:	68fb      	ldr	r3, [r7, #12]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	4a2e      	ldr	r2, [pc, #184]	; (8004118 <HAL_DMA_Start_IT+0x48c>)
 800405e:	4293      	cmp	r3, r2
 8004060:	d02c      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	4a2d      	ldr	r2, [pc, #180]	; (800411c <HAL_DMA_Start_IT+0x490>)
 8004068:	4293      	cmp	r3, r2
 800406a:	d027      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4a2b      	ldr	r2, [pc, #172]	; (8004120 <HAL_DMA_Start_IT+0x494>)
 8004072:	4293      	cmp	r3, r2
 8004074:	d022      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	4a2a      	ldr	r2, [pc, #168]	; (8004124 <HAL_DMA_Start_IT+0x498>)
 800407c:	4293      	cmp	r3, r2
 800407e:	d01d      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004080:	68fb      	ldr	r3, [r7, #12]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	4a28      	ldr	r2, [pc, #160]	; (8004128 <HAL_DMA_Start_IT+0x49c>)
 8004086:	4293      	cmp	r3, r2
 8004088:	d018      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800408a:	68fb      	ldr	r3, [r7, #12]
 800408c:	681b      	ldr	r3, [r3, #0]
 800408e:	4a27      	ldr	r2, [pc, #156]	; (800412c <HAL_DMA_Start_IT+0x4a0>)
 8004090:	4293      	cmp	r3, r2
 8004092:	d013      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	4a25      	ldr	r2, [pc, #148]	; (8004130 <HAL_DMA_Start_IT+0x4a4>)
 800409a:	4293      	cmp	r3, r2
 800409c:	d00e      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	681b      	ldr	r3, [r3, #0]
 80040a2:	4a24      	ldr	r2, [pc, #144]	; (8004134 <HAL_DMA_Start_IT+0x4a8>)
 80040a4:	4293      	cmp	r3, r2
 80040a6:	d009      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 80040a8:	68fb      	ldr	r3, [r7, #12]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	4a22      	ldr	r2, [pc, #136]	; (8004138 <HAL_DMA_Start_IT+0x4ac>)
 80040ae:	4293      	cmp	r3, r2
 80040b0:	d004      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 80040b2:	68fb      	ldr	r3, [r7, #12]
 80040b4:	681b      	ldr	r3, [r3, #0]
 80040b6:	4a21      	ldr	r2, [pc, #132]	; (800413c <HAL_DMA_Start_IT+0x4b0>)
 80040b8:	4293      	cmp	r3, r2
 80040ba:	d108      	bne.n	80040ce <HAL_DMA_Start_IT+0x442>
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	681a      	ldr	r2, [r3, #0]
 80040c2:	68fb      	ldr	r3, [r7, #12]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	f042 0201 	orr.w	r2, r2, #1
 80040ca:	601a      	str	r2, [r3, #0]
 80040cc:	e012      	b.n	80040f4 <HAL_DMA_Start_IT+0x468>
 80040ce:	68fb      	ldr	r3, [r7, #12]
 80040d0:	681b      	ldr	r3, [r3, #0]
 80040d2:	681a      	ldr	r2, [r3, #0]
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	f042 0201 	orr.w	r2, r2, #1
 80040dc:	601a      	str	r2, [r3, #0]
 80040de:	e009      	b.n	80040f4 <HAL_DMA_Start_IT+0x468>
  }
  else
  {
    /* Set the error code to busy */
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80040e0:	68fb      	ldr	r3, [r7, #12]
 80040e2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80040e6:	655a      	str	r2, [r3, #84]	; 0x54

    /* Process unlocked */
    __HAL_UNLOCK(hdma);
 80040e8:	68fb      	ldr	r3, [r7, #12]
 80040ea:	2200      	movs	r2, #0
 80040ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Return error status */
    status = HAL_ERROR;
 80040f0:	2301      	movs	r3, #1
 80040f2:	75fb      	strb	r3, [r7, #23]
  }

  return status;
 80040f4:	7dfb      	ldrb	r3, [r7, #23]
}
 80040f6:	4618      	mov	r0, r3
 80040f8:	3718      	adds	r7, #24
 80040fa:	46bd      	mov	sp, r7
 80040fc:	bd80      	pop	{r7, pc}
 80040fe:	bf00      	nop
 8004100:	40020010 	.word	0x40020010
 8004104:	40020028 	.word	0x40020028
 8004108:	40020040 	.word	0x40020040
 800410c:	40020058 	.word	0x40020058
 8004110:	40020070 	.word	0x40020070
 8004114:	40020088 	.word	0x40020088
 8004118:	400200a0 	.word	0x400200a0
 800411c:	400200b8 	.word	0x400200b8
 8004120:	40020410 	.word	0x40020410
 8004124:	40020428 	.word	0x40020428
 8004128:	40020440 	.word	0x40020440
 800412c:	40020458 	.word	0x40020458
 8004130:	40020470 	.word	0x40020470
 8004134:	40020488 	.word	0x40020488
 8004138:	400204a0 	.word	0x400204a0
 800413c:	400204b8 	.word	0x400204b8
 8004140:	58025408 	.word	0x58025408
 8004144:	5802541c 	.word	0x5802541c
 8004148:	58025430 	.word	0x58025430
 800414c:	58025444 	.word	0x58025444
 8004150:	58025458 	.word	0x58025458
 8004154:	5802546c 	.word	0x5802546c
 8004158:	58025480 	.word	0x58025480
 800415c:	58025494 	.word	0x58025494

08004160 <HAL_DMA_Abort_IT>:
  * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8004160:	b580      	push	{r7, lr}
 8004162:	b084      	sub	sp, #16
 8004164:	af00      	add	r7, sp, #0
 8004166:	6078      	str	r0, [r7, #4]
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	2b00      	cmp	r3, #0
 800416c:	d101      	bne.n	8004172 <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 800416e:	2301      	movs	r3, #1
 8004170:	e237      	b.n	80045e2 <HAL_DMA_Abort_IT+0x482>
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004178:	b2db      	uxtb	r3, r3
 800417a:	2b02      	cmp	r3, #2
 800417c:	d004      	beq.n	8004188 <HAL_DMA_Abort_IT+0x28>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	2280      	movs	r2, #128	; 0x80
 8004182:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8004184:	2301      	movs	r3, #1
 8004186:	e22c      	b.n	80045e2 <HAL_DMA_Abort_IT+0x482>
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	681b      	ldr	r3, [r3, #0]
 800418c:	4a5c      	ldr	r2, [pc, #368]	; (8004300 <HAL_DMA_Abort_IT+0x1a0>)
 800418e:	4293      	cmp	r3, r2
 8004190:	d04a      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	4a5b      	ldr	r2, [pc, #364]	; (8004304 <HAL_DMA_Abort_IT+0x1a4>)
 8004198:	4293      	cmp	r3, r2
 800419a:	d045      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	4a59      	ldr	r2, [pc, #356]	; (8004308 <HAL_DMA_Abort_IT+0x1a8>)
 80041a2:	4293      	cmp	r3, r2
 80041a4:	d040      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	4a58      	ldr	r2, [pc, #352]	; (800430c <HAL_DMA_Abort_IT+0x1ac>)
 80041ac:	4293      	cmp	r3, r2
 80041ae:	d03b      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	4a56      	ldr	r2, [pc, #344]	; (8004310 <HAL_DMA_Abort_IT+0x1b0>)
 80041b6:	4293      	cmp	r3, r2
 80041b8:	d036      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	4a55      	ldr	r2, [pc, #340]	; (8004314 <HAL_DMA_Abort_IT+0x1b4>)
 80041c0:	4293      	cmp	r3, r2
 80041c2:	d031      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	4a53      	ldr	r2, [pc, #332]	; (8004318 <HAL_DMA_Abort_IT+0x1b8>)
 80041ca:	4293      	cmp	r3, r2
 80041cc:	d02c      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	4a52      	ldr	r2, [pc, #328]	; (800431c <HAL_DMA_Abort_IT+0x1bc>)
 80041d4:	4293      	cmp	r3, r2
 80041d6:	d027      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	4a50      	ldr	r2, [pc, #320]	; (8004320 <HAL_DMA_Abort_IT+0x1c0>)
 80041de:	4293      	cmp	r3, r2
 80041e0:	d022      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	4a4f      	ldr	r2, [pc, #316]	; (8004324 <HAL_DMA_Abort_IT+0x1c4>)
 80041e8:	4293      	cmp	r3, r2
 80041ea:	d01d      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	4a4d      	ldr	r2, [pc, #308]	; (8004328 <HAL_DMA_Abort_IT+0x1c8>)
 80041f2:	4293      	cmp	r3, r2
 80041f4:	d018      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	4a4c      	ldr	r2, [pc, #304]	; (800432c <HAL_DMA_Abort_IT+0x1cc>)
 80041fc:	4293      	cmp	r3, r2
 80041fe:	d013      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	4a4a      	ldr	r2, [pc, #296]	; (8004330 <HAL_DMA_Abort_IT+0x1d0>)
 8004206:	4293      	cmp	r3, r2
 8004208:	d00e      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	4a49      	ldr	r2, [pc, #292]	; (8004334 <HAL_DMA_Abort_IT+0x1d4>)
 8004210:	4293      	cmp	r3, r2
 8004212:	d009      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	4a47      	ldr	r2, [pc, #284]	; (8004338 <HAL_DMA_Abort_IT+0x1d8>)
 800421a:	4293      	cmp	r3, r2
 800421c:	d004      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	4a46      	ldr	r2, [pc, #280]	; (800433c <HAL_DMA_Abort_IT+0x1dc>)
 8004224:	4293      	cmp	r3, r2
 8004226:	d101      	bne.n	800422c <HAL_DMA_Abort_IT+0xcc>
 8004228:	2301      	movs	r3, #1
 800422a:	e000      	b.n	800422e <HAL_DMA_Abort_IT+0xce>
 800422c:	2300      	movs	r3, #0
 800422e:	2b00      	cmp	r3, #0
 8004230:	f000 8086 	beq.w	8004340 <HAL_DMA_Abort_IT+0x1e0>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	2204      	movs	r2, #4
 8004238:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	4a2f      	ldr	r2, [pc, #188]	; (8004300 <HAL_DMA_Abort_IT+0x1a0>)
 8004242:	4293      	cmp	r3, r2
 8004244:	d04a      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	4a2e      	ldr	r2, [pc, #184]	; (8004304 <HAL_DMA_Abort_IT+0x1a4>)
 800424c:	4293      	cmp	r3, r2
 800424e:	d045      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	4a2c      	ldr	r2, [pc, #176]	; (8004308 <HAL_DMA_Abort_IT+0x1a8>)
 8004256:	4293      	cmp	r3, r2
 8004258:	d040      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	4a2b      	ldr	r2, [pc, #172]	; (800430c <HAL_DMA_Abort_IT+0x1ac>)
 8004260:	4293      	cmp	r3, r2
 8004262:	d03b      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	4a29      	ldr	r2, [pc, #164]	; (8004310 <HAL_DMA_Abort_IT+0x1b0>)
 800426a:	4293      	cmp	r3, r2
 800426c:	d036      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	4a28      	ldr	r2, [pc, #160]	; (8004314 <HAL_DMA_Abort_IT+0x1b4>)
 8004274:	4293      	cmp	r3, r2
 8004276:	d031      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	681b      	ldr	r3, [r3, #0]
 800427c:	4a26      	ldr	r2, [pc, #152]	; (8004318 <HAL_DMA_Abort_IT+0x1b8>)
 800427e:	4293      	cmp	r3, r2
 8004280:	d02c      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	4a25      	ldr	r2, [pc, #148]	; (800431c <HAL_DMA_Abort_IT+0x1bc>)
 8004288:	4293      	cmp	r3, r2
 800428a:	d027      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	4a23      	ldr	r2, [pc, #140]	; (8004320 <HAL_DMA_Abort_IT+0x1c0>)
 8004292:	4293      	cmp	r3, r2
 8004294:	d022      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	4a22      	ldr	r2, [pc, #136]	; (8004324 <HAL_DMA_Abort_IT+0x1c4>)
 800429c:	4293      	cmp	r3, r2
 800429e:	d01d      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	4a20      	ldr	r2, [pc, #128]	; (8004328 <HAL_DMA_Abort_IT+0x1c8>)
 80042a6:	4293      	cmp	r3, r2
 80042a8:	d018      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	4a1f      	ldr	r2, [pc, #124]	; (800432c <HAL_DMA_Abort_IT+0x1cc>)
 80042b0:	4293      	cmp	r3, r2
 80042b2:	d013      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	4a1d      	ldr	r2, [pc, #116]	; (8004330 <HAL_DMA_Abort_IT+0x1d0>)
 80042ba:	4293      	cmp	r3, r2
 80042bc:	d00e      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	4a1c      	ldr	r2, [pc, #112]	; (8004334 <HAL_DMA_Abort_IT+0x1d4>)
 80042c4:	4293      	cmp	r3, r2
 80042c6:	d009      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	4a1a      	ldr	r2, [pc, #104]	; (8004338 <HAL_DMA_Abort_IT+0x1d8>)
 80042ce:	4293      	cmp	r3, r2
 80042d0:	d004      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	4a19      	ldr	r2, [pc, #100]	; (800433c <HAL_DMA_Abort_IT+0x1dc>)
 80042d8:	4293      	cmp	r3, r2
 80042da:	d108      	bne.n	80042ee <HAL_DMA_Abort_IT+0x18e>
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	681a      	ldr	r2, [r3, #0]
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	681b      	ldr	r3, [r3, #0]
 80042e6:	f022 0201 	bic.w	r2, r2, #1
 80042ea:	601a      	str	r2, [r3, #0]
 80042ec:	e178      	b.n	80045e0 <HAL_DMA_Abort_IT+0x480>
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	681a      	ldr	r2, [r3, #0]
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	f022 0201 	bic.w	r2, r2, #1
 80042fc:	601a      	str	r2, [r3, #0]
 80042fe:	e16f      	b.n	80045e0 <HAL_DMA_Abort_IT+0x480>
 8004300:	40020010 	.word	0x40020010
 8004304:	40020028 	.word	0x40020028
 8004308:	40020040 	.word	0x40020040
 800430c:	40020058 	.word	0x40020058
 8004310:	40020070 	.word	0x40020070
 8004314:	40020088 	.word	0x40020088
 8004318:	400200a0 	.word	0x400200a0
 800431c:	400200b8 	.word	0x400200b8
 8004320:	40020410 	.word	0x40020410
 8004324:	40020428 	.word	0x40020428
 8004328:	40020440 	.word	0x40020440
 800432c:	40020458 	.word	0x40020458
 8004330:	40020470 	.word	0x40020470
 8004334:	40020488 	.word	0x40020488
 8004338:	400204a0 	.word	0x400204a0
 800433c:	400204b8 	.word	0x400204b8
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts  */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	681a      	ldr	r2, [r3, #0]
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	f022 020e 	bic.w	r2, r2, #14
 800434e:	601a      	str	r2, [r3, #0]

      /* Disable the channel */
      __HAL_DMA_DISABLE(hdma);
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	4a6c      	ldr	r2, [pc, #432]	; (8004508 <HAL_DMA_Abort_IT+0x3a8>)
 8004356:	4293      	cmp	r3, r2
 8004358:	d04a      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	4a6b      	ldr	r2, [pc, #428]	; (800450c <HAL_DMA_Abort_IT+0x3ac>)
 8004360:	4293      	cmp	r3, r2
 8004362:	d045      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	4a69      	ldr	r2, [pc, #420]	; (8004510 <HAL_DMA_Abort_IT+0x3b0>)
 800436a:	4293      	cmp	r3, r2
 800436c:	d040      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	4a68      	ldr	r2, [pc, #416]	; (8004514 <HAL_DMA_Abort_IT+0x3b4>)
 8004374:	4293      	cmp	r3, r2
 8004376:	d03b      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	4a66      	ldr	r2, [pc, #408]	; (8004518 <HAL_DMA_Abort_IT+0x3b8>)
 800437e:	4293      	cmp	r3, r2
 8004380:	d036      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	4a65      	ldr	r2, [pc, #404]	; (800451c <HAL_DMA_Abort_IT+0x3bc>)
 8004388:	4293      	cmp	r3, r2
 800438a:	d031      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	681b      	ldr	r3, [r3, #0]
 8004390:	4a63      	ldr	r2, [pc, #396]	; (8004520 <HAL_DMA_Abort_IT+0x3c0>)
 8004392:	4293      	cmp	r3, r2
 8004394:	d02c      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	4a62      	ldr	r2, [pc, #392]	; (8004524 <HAL_DMA_Abort_IT+0x3c4>)
 800439c:	4293      	cmp	r3, r2
 800439e:	d027      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	4a60      	ldr	r2, [pc, #384]	; (8004528 <HAL_DMA_Abort_IT+0x3c8>)
 80043a6:	4293      	cmp	r3, r2
 80043a8:	d022      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	4a5f      	ldr	r2, [pc, #380]	; (800452c <HAL_DMA_Abort_IT+0x3cc>)
 80043b0:	4293      	cmp	r3, r2
 80043b2:	d01d      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	4a5d      	ldr	r2, [pc, #372]	; (8004530 <HAL_DMA_Abort_IT+0x3d0>)
 80043ba:	4293      	cmp	r3, r2
 80043bc:	d018      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	4a5c      	ldr	r2, [pc, #368]	; (8004534 <HAL_DMA_Abort_IT+0x3d4>)
 80043c4:	4293      	cmp	r3, r2
 80043c6:	d013      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	681b      	ldr	r3, [r3, #0]
 80043cc:	4a5a      	ldr	r2, [pc, #360]	; (8004538 <HAL_DMA_Abort_IT+0x3d8>)
 80043ce:	4293      	cmp	r3, r2
 80043d0:	d00e      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	681b      	ldr	r3, [r3, #0]
 80043d6:	4a59      	ldr	r2, [pc, #356]	; (800453c <HAL_DMA_Abort_IT+0x3dc>)
 80043d8:	4293      	cmp	r3, r2
 80043da:	d009      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	4a57      	ldr	r2, [pc, #348]	; (8004540 <HAL_DMA_Abort_IT+0x3e0>)
 80043e2:	4293      	cmp	r3, r2
 80043e4:	d004      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	4a56      	ldr	r2, [pc, #344]	; (8004544 <HAL_DMA_Abort_IT+0x3e4>)
 80043ec:	4293      	cmp	r3, r2
 80043ee:	d108      	bne.n	8004402 <HAL_DMA_Abort_IT+0x2a2>
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	681a      	ldr	r2, [r3, #0]
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	f022 0201 	bic.w	r2, r2, #1
 80043fe:	601a      	str	r2, [r3, #0]
 8004400:	e007      	b.n	8004412 <HAL_DMA_Abort_IT+0x2b2>
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	681a      	ldr	r2, [r3, #0]
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	681b      	ldr	r3, [r3, #0]
 800440c:	f022 0201 	bic.w	r2, r2, #1
 8004410:	601a      	str	r2, [r3, #0]

      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	4a3c      	ldr	r2, [pc, #240]	; (8004508 <HAL_DMA_Abort_IT+0x3a8>)
 8004418:	4293      	cmp	r3, r2
 800441a:	d072      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	4a3a      	ldr	r2, [pc, #232]	; (800450c <HAL_DMA_Abort_IT+0x3ac>)
 8004422:	4293      	cmp	r3, r2
 8004424:	d06d      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	4a39      	ldr	r2, [pc, #228]	; (8004510 <HAL_DMA_Abort_IT+0x3b0>)
 800442c:	4293      	cmp	r3, r2
 800442e:	d068      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	4a37      	ldr	r2, [pc, #220]	; (8004514 <HAL_DMA_Abort_IT+0x3b4>)
 8004436:	4293      	cmp	r3, r2
 8004438:	d063      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	4a36      	ldr	r2, [pc, #216]	; (8004518 <HAL_DMA_Abort_IT+0x3b8>)
 8004440:	4293      	cmp	r3, r2
 8004442:	d05e      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	4a34      	ldr	r2, [pc, #208]	; (800451c <HAL_DMA_Abort_IT+0x3bc>)
 800444a:	4293      	cmp	r3, r2
 800444c:	d059      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	4a33      	ldr	r2, [pc, #204]	; (8004520 <HAL_DMA_Abort_IT+0x3c0>)
 8004454:	4293      	cmp	r3, r2
 8004456:	d054      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	4a31      	ldr	r2, [pc, #196]	; (8004524 <HAL_DMA_Abort_IT+0x3c4>)
 800445e:	4293      	cmp	r3, r2
 8004460:	d04f      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	4a30      	ldr	r2, [pc, #192]	; (8004528 <HAL_DMA_Abort_IT+0x3c8>)
 8004468:	4293      	cmp	r3, r2
 800446a:	d04a      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	4a2e      	ldr	r2, [pc, #184]	; (800452c <HAL_DMA_Abort_IT+0x3cc>)
 8004472:	4293      	cmp	r3, r2
 8004474:	d045      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	681b      	ldr	r3, [r3, #0]
 800447a:	4a2d      	ldr	r2, [pc, #180]	; (8004530 <HAL_DMA_Abort_IT+0x3d0>)
 800447c:	4293      	cmp	r3, r2
 800447e:	d040      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	4a2b      	ldr	r2, [pc, #172]	; (8004534 <HAL_DMA_Abort_IT+0x3d4>)
 8004486:	4293      	cmp	r3, r2
 8004488:	d03b      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	4a2a      	ldr	r2, [pc, #168]	; (8004538 <HAL_DMA_Abort_IT+0x3d8>)
 8004490:	4293      	cmp	r3, r2
 8004492:	d036      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	4a28      	ldr	r2, [pc, #160]	; (800453c <HAL_DMA_Abort_IT+0x3dc>)
 800449a:	4293      	cmp	r3, r2
 800449c:	d031      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	4a27      	ldr	r2, [pc, #156]	; (8004540 <HAL_DMA_Abort_IT+0x3e0>)
 80044a4:	4293      	cmp	r3, r2
 80044a6:	d02c      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	4a25      	ldr	r2, [pc, #148]	; (8004544 <HAL_DMA_Abort_IT+0x3e4>)
 80044ae:	4293      	cmp	r3, r2
 80044b0:	d027      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	4a24      	ldr	r2, [pc, #144]	; (8004548 <HAL_DMA_Abort_IT+0x3e8>)
 80044b8:	4293      	cmp	r3, r2
 80044ba:	d022      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	4a22      	ldr	r2, [pc, #136]	; (800454c <HAL_DMA_Abort_IT+0x3ec>)
 80044c2:	4293      	cmp	r3, r2
 80044c4:	d01d      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	4a21      	ldr	r2, [pc, #132]	; (8004550 <HAL_DMA_Abort_IT+0x3f0>)
 80044cc:	4293      	cmp	r3, r2
 80044ce:	d018      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	4a1f      	ldr	r2, [pc, #124]	; (8004554 <HAL_DMA_Abort_IT+0x3f4>)
 80044d6:	4293      	cmp	r3, r2
 80044d8:	d013      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	4a1e      	ldr	r2, [pc, #120]	; (8004558 <HAL_DMA_Abort_IT+0x3f8>)
 80044e0:	4293      	cmp	r3, r2
 80044e2:	d00e      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	4a1c      	ldr	r2, [pc, #112]	; (800455c <HAL_DMA_Abort_IT+0x3fc>)
 80044ea:	4293      	cmp	r3, r2
 80044ec:	d009      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	4a1b      	ldr	r2, [pc, #108]	; (8004560 <HAL_DMA_Abort_IT+0x400>)
 80044f4:	4293      	cmp	r3, r2
 80044f6:	d004      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	4a19      	ldr	r2, [pc, #100]	; (8004564 <HAL_DMA_Abort_IT+0x404>)
 80044fe:	4293      	cmp	r3, r2
 8004500:	d132      	bne.n	8004568 <HAL_DMA_Abort_IT+0x408>
 8004502:	2301      	movs	r3, #1
 8004504:	e031      	b.n	800456a <HAL_DMA_Abort_IT+0x40a>
 8004506:	bf00      	nop
 8004508:	40020010 	.word	0x40020010
 800450c:	40020028 	.word	0x40020028
 8004510:	40020040 	.word	0x40020040
 8004514:	40020058 	.word	0x40020058
 8004518:	40020070 	.word	0x40020070
 800451c:	40020088 	.word	0x40020088
 8004520:	400200a0 	.word	0x400200a0
 8004524:	400200b8 	.word	0x400200b8
 8004528:	40020410 	.word	0x40020410
 800452c:	40020428 	.word	0x40020428
 8004530:	40020440 	.word	0x40020440
 8004534:	40020458 	.word	0x40020458
 8004538:	40020470 	.word	0x40020470
 800453c:	40020488 	.word	0x40020488
 8004540:	400204a0 	.word	0x400204a0
 8004544:	400204b8 	.word	0x400204b8
 8004548:	58025408 	.word	0x58025408
 800454c:	5802541c 	.word	0x5802541c
 8004550:	58025430 	.word	0x58025430
 8004554:	58025444 	.word	0x58025444
 8004558:	58025458 	.word	0x58025458
 800455c:	5802546c 	.word	0x5802546c
 8004560:	58025480 	.word	0x58025480
 8004564:	58025494 	.word	0x58025494
 8004568:	2300      	movs	r3, #0
 800456a:	2b00      	cmp	r3, #0
 800456c:	d028      	beq.n	80045c0 <HAL_DMA_Abort_IT+0x460>
      {
        /* disable the DMAMUX sync overrun IT */
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004572:	681a      	ldr	r2, [r3, #0]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004578:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800457c:	601a      	str	r2, [r3, #0]

        /* Clear all flags */
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004582:	60fb      	str	r3, [r7, #12]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004588:	f003 031f 	and.w	r3, r3, #31
 800458c:	2201      	movs	r2, #1
 800458e:	409a      	lsls	r2, r3
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	605a      	str	r2, [r3, #4]

        /* Clear the DMAMUX synchro overrun flag */
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004598:	687a      	ldr	r2, [r7, #4]
 800459a:	6e92      	ldr	r2, [r2, #104]	; 0x68
 800459c:	605a      	str	r2, [r3, #4]

        if(hdma->DMAmuxRequestGen != 0U)
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	d00c      	beq.n	80045c0 <HAL_DMA_Abort_IT+0x460>
        {
          /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
          /* disable the request gen overrun IT */
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80045aa:	681a      	ldr	r2, [r3, #0]
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80045b0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80045b4:	601a      	str	r2, [r3, #0]

          /* Clear the DMAMUX request generator overrun flag */
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80045ba:	687a      	ldr	r2, [r7, #4]
 80045bc:	6f52      	ldr	r2, [r2, #116]	; 0x74
 80045be:	605a      	str	r2, [r3, #4]
        }
      }

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	2201      	movs	r2, #1
 80045c4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	2200      	movs	r2, #0
 80045cc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      /* Call User Abort callback */
      if(hdma->XferAbortCallback != NULL)
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d003      	beq.n	80045e0 <HAL_DMA_Abort_IT+0x480>
      {
        hdma->XferAbortCallback(hdma);
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80045dc:	6878      	ldr	r0, [r7, #4]
 80045de:	4798      	blx	r3
      }
    }
  }

  return HAL_OK;
 80045e0:	2300      	movs	r3, #0
}
 80045e2:	4618      	mov	r0, r3
 80045e4:	3710      	adds	r7, #16
 80045e6:	46bd      	mov	sp, r7
 80045e8:	bd80      	pop	{r7, pc}
 80045ea:	bf00      	nop

080045ec <HAL_DMA_IRQHandler>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80045ec:	b580      	push	{r7, lr}
 80045ee:	b08a      	sub	sp, #40	; 0x28
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr_dma, tmpisr_bdma;
  uint32_t ccr_reg;
  __IO uint32_t count = 0U;
 80045f4:	2300      	movs	r3, #0
 80045f6:	60fb      	str	r3, [r7, #12]
  uint32_t timeout = SystemCoreClock / 9600U;
 80045f8:	4b67      	ldr	r3, [pc, #412]	; (8004798 <HAL_DMA_IRQHandler+0x1ac>)
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	4a67      	ldr	r2, [pc, #412]	; (800479c <HAL_DMA_IRQHandler+0x1b0>)
 80045fe:	fba2 2303 	umull	r2, r3, r2, r3
 8004602:	0a9b      	lsrs	r3, r3, #10
 8004604:	627b      	str	r3, [r7, #36]	; 0x24

  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800460a:	623b      	str	r3, [r7, #32]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004610:	61fb      	str	r3, [r7, #28]

  tmpisr_dma  = regs_dma->ISR;
 8004612:	6a3b      	ldr	r3, [r7, #32]
 8004614:	681b      	ldr	r3, [r3, #0]
 8004616:	61bb      	str	r3, [r7, #24]
  tmpisr_bdma = regs_bdma->ISR;
 8004618:	69fb      	ldr	r3, [r7, #28]
 800461a:	681b      	ldr	r3, [r3, #0]
 800461c:	617b      	str	r3, [r7, #20]

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U)  /* DMA1 or DMA2 instance */
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	4a5f      	ldr	r2, [pc, #380]	; (80047a0 <HAL_DMA_IRQHandler+0x1b4>)
 8004624:	4293      	cmp	r3, r2
 8004626:	d04a      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	4a5d      	ldr	r2, [pc, #372]	; (80047a4 <HAL_DMA_IRQHandler+0x1b8>)
 800462e:	4293      	cmp	r3, r2
 8004630:	d045      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	4a5c      	ldr	r2, [pc, #368]	; (80047a8 <HAL_DMA_IRQHandler+0x1bc>)
 8004638:	4293      	cmp	r3, r2
 800463a:	d040      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	4a5a      	ldr	r2, [pc, #360]	; (80047ac <HAL_DMA_IRQHandler+0x1c0>)
 8004642:	4293      	cmp	r3, r2
 8004644:	d03b      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	4a59      	ldr	r2, [pc, #356]	; (80047b0 <HAL_DMA_IRQHandler+0x1c4>)
 800464c:	4293      	cmp	r3, r2
 800464e:	d036      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	4a57      	ldr	r2, [pc, #348]	; (80047b4 <HAL_DMA_IRQHandler+0x1c8>)
 8004656:	4293      	cmp	r3, r2
 8004658:	d031      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	4a56      	ldr	r2, [pc, #344]	; (80047b8 <HAL_DMA_IRQHandler+0x1cc>)
 8004660:	4293      	cmp	r3, r2
 8004662:	d02c      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	4a54      	ldr	r2, [pc, #336]	; (80047bc <HAL_DMA_IRQHandler+0x1d0>)
 800466a:	4293      	cmp	r3, r2
 800466c:	d027      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	4a53      	ldr	r2, [pc, #332]	; (80047c0 <HAL_DMA_IRQHandler+0x1d4>)
 8004674:	4293      	cmp	r3, r2
 8004676:	d022      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	4a51      	ldr	r2, [pc, #324]	; (80047c4 <HAL_DMA_IRQHandler+0x1d8>)
 800467e:	4293      	cmp	r3, r2
 8004680:	d01d      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	681b      	ldr	r3, [r3, #0]
 8004686:	4a50      	ldr	r2, [pc, #320]	; (80047c8 <HAL_DMA_IRQHandler+0x1dc>)
 8004688:	4293      	cmp	r3, r2
 800468a:	d018      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	4a4e      	ldr	r2, [pc, #312]	; (80047cc <HAL_DMA_IRQHandler+0x1e0>)
 8004692:	4293      	cmp	r3, r2
 8004694:	d013      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	4a4d      	ldr	r2, [pc, #308]	; (80047d0 <HAL_DMA_IRQHandler+0x1e4>)
 800469c:	4293      	cmp	r3, r2
 800469e:	d00e      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	4a4b      	ldr	r2, [pc, #300]	; (80047d4 <HAL_DMA_IRQHandler+0x1e8>)
 80046a6:	4293      	cmp	r3, r2
 80046a8:	d009      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	4a4a      	ldr	r2, [pc, #296]	; (80047d8 <HAL_DMA_IRQHandler+0x1ec>)
 80046b0:	4293      	cmp	r3, r2
 80046b2:	d004      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	4a48      	ldr	r2, [pc, #288]	; (80047dc <HAL_DMA_IRQHandler+0x1f0>)
 80046ba:	4293      	cmp	r3, r2
 80046bc:	d101      	bne.n	80046c2 <HAL_DMA_IRQHandler+0xd6>
 80046be:	2301      	movs	r3, #1
 80046c0:	e000      	b.n	80046c4 <HAL_DMA_IRQHandler+0xd8>
 80046c2:	2300      	movs	r3, #0
 80046c4:	2b00      	cmp	r3, #0
 80046c6:	f000 842b 	beq.w	8004f20 <HAL_DMA_IRQHandler+0x934>
  {
    /* Transfer Error Interrupt management ***************************************/
    if ((tmpisr_dma & (DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80046ce:	f003 031f 	and.w	r3, r3, #31
 80046d2:	2208      	movs	r2, #8
 80046d4:	409a      	lsls	r2, r3
 80046d6:	69bb      	ldr	r3, [r7, #24]
 80046d8:	4013      	ands	r3, r2
 80046da:	2b00      	cmp	r3, #0
 80046dc:	f000 80a2 	beq.w	8004824 <HAL_DMA_IRQHandler+0x238>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != 0U)
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	4a2e      	ldr	r2, [pc, #184]	; (80047a0 <HAL_DMA_IRQHandler+0x1b4>)
 80046e6:	4293      	cmp	r3, r2
 80046e8:	d04a      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 80046ea:	687b      	ldr	r3, [r7, #4]
 80046ec:	681b      	ldr	r3, [r3, #0]
 80046ee:	4a2d      	ldr	r2, [pc, #180]	; (80047a4 <HAL_DMA_IRQHandler+0x1b8>)
 80046f0:	4293      	cmp	r3, r2
 80046f2:	d045      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	4a2b      	ldr	r2, [pc, #172]	; (80047a8 <HAL_DMA_IRQHandler+0x1bc>)
 80046fa:	4293      	cmp	r3, r2
 80046fc:	d040      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	4a2a      	ldr	r2, [pc, #168]	; (80047ac <HAL_DMA_IRQHandler+0x1c0>)
 8004704:	4293      	cmp	r3, r2
 8004706:	d03b      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	4a28      	ldr	r2, [pc, #160]	; (80047b0 <HAL_DMA_IRQHandler+0x1c4>)
 800470e:	4293      	cmp	r3, r2
 8004710:	d036      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	4a27      	ldr	r2, [pc, #156]	; (80047b4 <HAL_DMA_IRQHandler+0x1c8>)
 8004718:	4293      	cmp	r3, r2
 800471a:	d031      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	4a25      	ldr	r2, [pc, #148]	; (80047b8 <HAL_DMA_IRQHandler+0x1cc>)
 8004722:	4293      	cmp	r3, r2
 8004724:	d02c      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	4a24      	ldr	r2, [pc, #144]	; (80047bc <HAL_DMA_IRQHandler+0x1d0>)
 800472c:	4293      	cmp	r3, r2
 800472e:	d027      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	4a22      	ldr	r2, [pc, #136]	; (80047c0 <HAL_DMA_IRQHandler+0x1d4>)
 8004736:	4293      	cmp	r3, r2
 8004738:	d022      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	681b      	ldr	r3, [r3, #0]
 800473e:	4a21      	ldr	r2, [pc, #132]	; (80047c4 <HAL_DMA_IRQHandler+0x1d8>)
 8004740:	4293      	cmp	r3, r2
 8004742:	d01d      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	4a1f      	ldr	r2, [pc, #124]	; (80047c8 <HAL_DMA_IRQHandler+0x1dc>)
 800474a:	4293      	cmp	r3, r2
 800474c:	d018      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	4a1e      	ldr	r2, [pc, #120]	; (80047cc <HAL_DMA_IRQHandler+0x1e0>)
 8004754:	4293      	cmp	r3, r2
 8004756:	d013      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	4a1c      	ldr	r2, [pc, #112]	; (80047d0 <HAL_DMA_IRQHandler+0x1e4>)
 800475e:	4293      	cmp	r3, r2
 8004760:	d00e      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	4a1b      	ldr	r2, [pc, #108]	; (80047d4 <HAL_DMA_IRQHandler+0x1e8>)
 8004768:	4293      	cmp	r3, r2
 800476a:	d009      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	4a19      	ldr	r2, [pc, #100]	; (80047d8 <HAL_DMA_IRQHandler+0x1ec>)
 8004772:	4293      	cmp	r3, r2
 8004774:	d004      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	4a18      	ldr	r2, [pc, #96]	; (80047dc <HAL_DMA_IRQHandler+0x1f0>)
 800477c:	4293      	cmp	r3, r2
 800477e:	d12f      	bne.n	80047e0 <HAL_DMA_IRQHandler+0x1f4>
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	f003 0304 	and.w	r3, r3, #4
 800478a:	2b00      	cmp	r3, #0
 800478c:	bf14      	ite	ne
 800478e:	2301      	movne	r3, #1
 8004790:	2300      	moveq	r3, #0
 8004792:	b2db      	uxtb	r3, r3
 8004794:	e02e      	b.n	80047f4 <HAL_DMA_IRQHandler+0x208>
 8004796:	bf00      	nop
 8004798:	24000004 	.word	0x24000004
 800479c:	1b4e81b5 	.word	0x1b4e81b5
 80047a0:	40020010 	.word	0x40020010
 80047a4:	40020028 	.word	0x40020028
 80047a8:	40020040 	.word	0x40020040
 80047ac:	40020058 	.word	0x40020058
 80047b0:	40020070 	.word	0x40020070
 80047b4:	40020088 	.word	0x40020088
 80047b8:	400200a0 	.word	0x400200a0
 80047bc:	400200b8 	.word	0x400200b8
 80047c0:	40020410 	.word	0x40020410
 80047c4:	40020428 	.word	0x40020428
 80047c8:	40020440 	.word	0x40020440
 80047cc:	40020458 	.word	0x40020458
 80047d0:	40020470 	.word	0x40020470
 80047d4:	40020488 	.word	0x40020488
 80047d8:	400204a0 	.word	0x400204a0
 80047dc:	400204b8 	.word	0x400204b8
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	681b      	ldr	r3, [r3, #0]
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	f003 0308 	and.w	r3, r3, #8
 80047ea:	2b00      	cmp	r3, #0
 80047ec:	bf14      	ite	ne
 80047ee:	2301      	movne	r3, #1
 80047f0:	2300      	moveq	r3, #0
 80047f2:	b2db      	uxtb	r3, r3
 80047f4:	2b00      	cmp	r3, #0
 80047f6:	d015      	beq.n	8004824 <HAL_DMA_IRQHandler+0x238>
      {
        /* Disable the transfer error interrupt */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TE);
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	681a      	ldr	r2, [r3, #0]
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	f022 0204 	bic.w	r2, r2, #4
 8004806:	601a      	str	r2, [r3, #0]

        /* Clear the transfer error flag */
        regs_dma->IFCR = DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800480c:	f003 031f 	and.w	r3, r3, #31
 8004810:	2208      	movs	r2, #8
 8004812:	409a      	lsls	r2, r3
 8004814:	6a3b      	ldr	r3, [r7, #32]
 8004816:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800481c:	f043 0201 	orr.w	r2, r3, #1
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* FIFO Error Interrupt management ******************************************/
    if ((tmpisr_dma & (DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004828:	f003 031f 	and.w	r3, r3, #31
 800482c:	69ba      	ldr	r2, [r7, #24]
 800482e:	fa22 f303 	lsr.w	r3, r2, r3
 8004832:	f003 0301 	and.w	r3, r3, #1
 8004836:	2b00      	cmp	r3, #0
 8004838:	d06e      	beq.n	8004918 <HAL_DMA_IRQHandler+0x32c>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != 0U)
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	4a69      	ldr	r2, [pc, #420]	; (80049e4 <HAL_DMA_IRQHandler+0x3f8>)
 8004840:	4293      	cmp	r3, r2
 8004842:	d04a      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	4a67      	ldr	r2, [pc, #412]	; (80049e8 <HAL_DMA_IRQHandler+0x3fc>)
 800484a:	4293      	cmp	r3, r2
 800484c:	d045      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	4a66      	ldr	r2, [pc, #408]	; (80049ec <HAL_DMA_IRQHandler+0x400>)
 8004854:	4293      	cmp	r3, r2
 8004856:	d040      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	4a64      	ldr	r2, [pc, #400]	; (80049f0 <HAL_DMA_IRQHandler+0x404>)
 800485e:	4293      	cmp	r3, r2
 8004860:	d03b      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	4a63      	ldr	r2, [pc, #396]	; (80049f4 <HAL_DMA_IRQHandler+0x408>)
 8004868:	4293      	cmp	r3, r2
 800486a:	d036      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	4a61      	ldr	r2, [pc, #388]	; (80049f8 <HAL_DMA_IRQHandler+0x40c>)
 8004872:	4293      	cmp	r3, r2
 8004874:	d031      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	4a60      	ldr	r2, [pc, #384]	; (80049fc <HAL_DMA_IRQHandler+0x410>)
 800487c:	4293      	cmp	r3, r2
 800487e:	d02c      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	4a5e      	ldr	r2, [pc, #376]	; (8004a00 <HAL_DMA_IRQHandler+0x414>)
 8004886:	4293      	cmp	r3, r2
 8004888:	d027      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	4a5d      	ldr	r2, [pc, #372]	; (8004a04 <HAL_DMA_IRQHandler+0x418>)
 8004890:	4293      	cmp	r3, r2
 8004892:	d022      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	4a5b      	ldr	r2, [pc, #364]	; (8004a08 <HAL_DMA_IRQHandler+0x41c>)
 800489a:	4293      	cmp	r3, r2
 800489c:	d01d      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	4a5a      	ldr	r2, [pc, #360]	; (8004a0c <HAL_DMA_IRQHandler+0x420>)
 80048a4:	4293      	cmp	r3, r2
 80048a6:	d018      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	4a58      	ldr	r2, [pc, #352]	; (8004a10 <HAL_DMA_IRQHandler+0x424>)
 80048ae:	4293      	cmp	r3, r2
 80048b0:	d013      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	4a57      	ldr	r2, [pc, #348]	; (8004a14 <HAL_DMA_IRQHandler+0x428>)
 80048b8:	4293      	cmp	r3, r2
 80048ba:	d00e      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	4a55      	ldr	r2, [pc, #340]	; (8004a18 <HAL_DMA_IRQHandler+0x42c>)
 80048c2:	4293      	cmp	r3, r2
 80048c4:	d009      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	4a54      	ldr	r2, [pc, #336]	; (8004a1c <HAL_DMA_IRQHandler+0x430>)
 80048cc:	4293      	cmp	r3, r2
 80048ce:	d004      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	4a52      	ldr	r2, [pc, #328]	; (8004a20 <HAL_DMA_IRQHandler+0x434>)
 80048d6:	4293      	cmp	r3, r2
 80048d8:	d10a      	bne.n	80048f0 <HAL_DMA_IRQHandler+0x304>
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	695b      	ldr	r3, [r3, #20]
 80048e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80048e4:	2b00      	cmp	r3, #0
 80048e6:	bf14      	ite	ne
 80048e8:	2301      	movne	r3, #1
 80048ea:	2300      	moveq	r3, #0
 80048ec:	b2db      	uxtb	r3, r3
 80048ee:	e003      	b.n	80048f8 <HAL_DMA_IRQHandler+0x30c>
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	2300      	movs	r3, #0
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d00d      	beq.n	8004918 <HAL_DMA_IRQHandler+0x32c>
      {
        /* Clear the FIFO error flag */
        regs_dma->IFCR = DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU);
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004900:	f003 031f 	and.w	r3, r3, #31
 8004904:	2201      	movs	r2, #1
 8004906:	409a      	lsls	r2, r3
 8004908:	6a3b      	ldr	r3, [r7, #32]
 800490a:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004910:	f043 0202 	orr.w	r2, r3, #2
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Direct Mode Error Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004918:	687b      	ldr	r3, [r7, #4]
 800491a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800491c:	f003 031f 	and.w	r3, r3, #31
 8004920:	2204      	movs	r2, #4
 8004922:	409a      	lsls	r2, r3
 8004924:	69bb      	ldr	r3, [r7, #24]
 8004926:	4013      	ands	r3, r2
 8004928:	2b00      	cmp	r3, #0
 800492a:	f000 808f 	beq.w	8004a4c <HAL_DMA_IRQHandler+0x460>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != 0U)
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	4a2c      	ldr	r2, [pc, #176]	; (80049e4 <HAL_DMA_IRQHandler+0x3f8>)
 8004934:	4293      	cmp	r3, r2
 8004936:	d04a      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	4a2a      	ldr	r2, [pc, #168]	; (80049e8 <HAL_DMA_IRQHandler+0x3fc>)
 800493e:	4293      	cmp	r3, r2
 8004940:	d045      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	4a29      	ldr	r2, [pc, #164]	; (80049ec <HAL_DMA_IRQHandler+0x400>)
 8004948:	4293      	cmp	r3, r2
 800494a:	d040      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	4a27      	ldr	r2, [pc, #156]	; (80049f0 <HAL_DMA_IRQHandler+0x404>)
 8004952:	4293      	cmp	r3, r2
 8004954:	d03b      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004956:	687b      	ldr	r3, [r7, #4]
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	4a26      	ldr	r2, [pc, #152]	; (80049f4 <HAL_DMA_IRQHandler+0x408>)
 800495c:	4293      	cmp	r3, r2
 800495e:	d036      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	4a24      	ldr	r2, [pc, #144]	; (80049f8 <HAL_DMA_IRQHandler+0x40c>)
 8004966:	4293      	cmp	r3, r2
 8004968:	d031      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	4a23      	ldr	r2, [pc, #140]	; (80049fc <HAL_DMA_IRQHandler+0x410>)
 8004970:	4293      	cmp	r3, r2
 8004972:	d02c      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	4a21      	ldr	r2, [pc, #132]	; (8004a00 <HAL_DMA_IRQHandler+0x414>)
 800497a:	4293      	cmp	r3, r2
 800497c:	d027      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	4a20      	ldr	r2, [pc, #128]	; (8004a04 <HAL_DMA_IRQHandler+0x418>)
 8004984:	4293      	cmp	r3, r2
 8004986:	d022      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	681b      	ldr	r3, [r3, #0]
 800498c:	4a1e      	ldr	r2, [pc, #120]	; (8004a08 <HAL_DMA_IRQHandler+0x41c>)
 800498e:	4293      	cmp	r3, r2
 8004990:	d01d      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	4a1d      	ldr	r2, [pc, #116]	; (8004a0c <HAL_DMA_IRQHandler+0x420>)
 8004998:	4293      	cmp	r3, r2
 800499a:	d018      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	4a1b      	ldr	r2, [pc, #108]	; (8004a10 <HAL_DMA_IRQHandler+0x424>)
 80049a2:	4293      	cmp	r3, r2
 80049a4:	d013      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 80049a6:	687b      	ldr	r3, [r7, #4]
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	4a1a      	ldr	r2, [pc, #104]	; (8004a14 <HAL_DMA_IRQHandler+0x428>)
 80049ac:	4293      	cmp	r3, r2
 80049ae:	d00e      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	4a18      	ldr	r2, [pc, #96]	; (8004a18 <HAL_DMA_IRQHandler+0x42c>)
 80049b6:	4293      	cmp	r3, r2
 80049b8:	d009      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	4a17      	ldr	r2, [pc, #92]	; (8004a1c <HAL_DMA_IRQHandler+0x430>)
 80049c0:	4293      	cmp	r3, r2
 80049c2:	d004      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	4a15      	ldr	r2, [pc, #84]	; (8004a20 <HAL_DMA_IRQHandler+0x434>)
 80049ca:	4293      	cmp	r3, r2
 80049cc:	d12a      	bne.n	8004a24 <HAL_DMA_IRQHandler+0x438>
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	681b      	ldr	r3, [r3, #0]
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	f003 0302 	and.w	r3, r3, #2
 80049d8:	2b00      	cmp	r3, #0
 80049da:	bf14      	ite	ne
 80049dc:	2301      	movne	r3, #1
 80049de:	2300      	moveq	r3, #0
 80049e0:	b2db      	uxtb	r3, r3
 80049e2:	e023      	b.n	8004a2c <HAL_DMA_IRQHandler+0x440>
 80049e4:	40020010 	.word	0x40020010
 80049e8:	40020028 	.word	0x40020028
 80049ec:	40020040 	.word	0x40020040
 80049f0:	40020058 	.word	0x40020058
 80049f4:	40020070 	.word	0x40020070
 80049f8:	40020088 	.word	0x40020088
 80049fc:	400200a0 	.word	0x400200a0
 8004a00:	400200b8 	.word	0x400200b8
 8004a04:	40020410 	.word	0x40020410
 8004a08:	40020428 	.word	0x40020428
 8004a0c:	40020440 	.word	0x40020440
 8004a10:	40020458 	.word	0x40020458
 8004a14:	40020470 	.word	0x40020470
 8004a18:	40020488 	.word	0x40020488
 8004a1c:	400204a0 	.word	0x400204a0
 8004a20:	400204b8 	.word	0x400204b8
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	2300      	movs	r3, #0
 8004a2c:	2b00      	cmp	r3, #0
 8004a2e:	d00d      	beq.n	8004a4c <HAL_DMA_IRQHandler+0x460>
      {
        /* Clear the direct mode error flag */
        regs_dma->IFCR = DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004a34:	f003 031f 	and.w	r3, r3, #31
 8004a38:	2204      	movs	r2, #4
 8004a3a:	409a      	lsls	r2, r3
 8004a3c:	6a3b      	ldr	r3, [r7, #32]
 8004a3e:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004a44:	f043 0204 	orr.w	r2, r3, #4
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Half Transfer Complete Interrupt management ******************************/
    if ((tmpisr_dma & (DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004a50:	f003 031f 	and.w	r3, r3, #31
 8004a54:	2210      	movs	r2, #16
 8004a56:	409a      	lsls	r2, r3
 8004a58:	69bb      	ldr	r3, [r7, #24]
 8004a5a:	4013      	ands	r3, r2
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	f000 80a6 	beq.w	8004bae <HAL_DMA_IRQHandler+0x5c2>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	4a85      	ldr	r2, [pc, #532]	; (8004c7c <HAL_DMA_IRQHandler+0x690>)
 8004a68:	4293      	cmp	r3, r2
 8004a6a:	d04a      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	4a83      	ldr	r2, [pc, #524]	; (8004c80 <HAL_DMA_IRQHandler+0x694>)
 8004a72:	4293      	cmp	r3, r2
 8004a74:	d045      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	681b      	ldr	r3, [r3, #0]
 8004a7a:	4a82      	ldr	r2, [pc, #520]	; (8004c84 <HAL_DMA_IRQHandler+0x698>)
 8004a7c:	4293      	cmp	r3, r2
 8004a7e:	d040      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	4a80      	ldr	r2, [pc, #512]	; (8004c88 <HAL_DMA_IRQHandler+0x69c>)
 8004a86:	4293      	cmp	r3, r2
 8004a88:	d03b      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	4a7f      	ldr	r2, [pc, #508]	; (8004c8c <HAL_DMA_IRQHandler+0x6a0>)
 8004a90:	4293      	cmp	r3, r2
 8004a92:	d036      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	4a7d      	ldr	r2, [pc, #500]	; (8004c90 <HAL_DMA_IRQHandler+0x6a4>)
 8004a9a:	4293      	cmp	r3, r2
 8004a9c:	d031      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	4a7c      	ldr	r2, [pc, #496]	; (8004c94 <HAL_DMA_IRQHandler+0x6a8>)
 8004aa4:	4293      	cmp	r3, r2
 8004aa6:	d02c      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	4a7a      	ldr	r2, [pc, #488]	; (8004c98 <HAL_DMA_IRQHandler+0x6ac>)
 8004aae:	4293      	cmp	r3, r2
 8004ab0:	d027      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	4a79      	ldr	r2, [pc, #484]	; (8004c9c <HAL_DMA_IRQHandler+0x6b0>)
 8004ab8:	4293      	cmp	r3, r2
 8004aba:	d022      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	4a77      	ldr	r2, [pc, #476]	; (8004ca0 <HAL_DMA_IRQHandler+0x6b4>)
 8004ac2:	4293      	cmp	r3, r2
 8004ac4:	d01d      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	681b      	ldr	r3, [r3, #0]
 8004aca:	4a76      	ldr	r2, [pc, #472]	; (8004ca4 <HAL_DMA_IRQHandler+0x6b8>)
 8004acc:	4293      	cmp	r3, r2
 8004ace:	d018      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	4a74      	ldr	r2, [pc, #464]	; (8004ca8 <HAL_DMA_IRQHandler+0x6bc>)
 8004ad6:	4293      	cmp	r3, r2
 8004ad8:	d013      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	4a73      	ldr	r2, [pc, #460]	; (8004cac <HAL_DMA_IRQHandler+0x6c0>)
 8004ae0:	4293      	cmp	r3, r2
 8004ae2:	d00e      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	4a71      	ldr	r2, [pc, #452]	; (8004cb0 <HAL_DMA_IRQHandler+0x6c4>)
 8004aea:	4293      	cmp	r3, r2
 8004aec:	d009      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	4a70      	ldr	r2, [pc, #448]	; (8004cb4 <HAL_DMA_IRQHandler+0x6c8>)
 8004af4:	4293      	cmp	r3, r2
 8004af6:	d004      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	681b      	ldr	r3, [r3, #0]
 8004afc:	4a6e      	ldr	r2, [pc, #440]	; (8004cb8 <HAL_DMA_IRQHandler+0x6cc>)
 8004afe:	4293      	cmp	r3, r2
 8004b00:	d10a      	bne.n	8004b18 <HAL_DMA_IRQHandler+0x52c>
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	681b      	ldr	r3, [r3, #0]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	f003 0308 	and.w	r3, r3, #8
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	bf14      	ite	ne
 8004b10:	2301      	movne	r3, #1
 8004b12:	2300      	moveq	r3, #0
 8004b14:	b2db      	uxtb	r3, r3
 8004b16:	e009      	b.n	8004b2c <HAL_DMA_IRQHandler+0x540>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	681b      	ldr	r3, [r3, #0]
 8004b1e:	f003 0304 	and.w	r3, r3, #4
 8004b22:	2b00      	cmp	r3, #0
 8004b24:	bf14      	ite	ne
 8004b26:	2301      	movne	r3, #1
 8004b28:	2300      	moveq	r3, #0
 8004b2a:	b2db      	uxtb	r3, r3
 8004b2c:	2b00      	cmp	r3, #0
 8004b2e:	d03e      	beq.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
      {
        /* Clear the half transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004b34:	f003 031f 	and.w	r3, r3, #31
 8004b38:	2210      	movs	r2, #16
 8004b3a:	409a      	lsls	r2, r3
 8004b3c:	6a3b      	ldr	r3, [r7, #32]
 8004b3e:	609a      	str	r2, [r3, #8]

        /* Multi_Buffering mode enabled */
        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	681b      	ldr	r3, [r3, #0]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	d018      	beq.n	8004b80 <HAL_DMA_IRQHandler+0x594>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	681b      	ldr	r3, [r3, #0]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d108      	bne.n	8004b6e <HAL_DMA_IRQHandler+0x582>
          {
            if(hdma->XferHalfCpltCallback != NULL)
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	d024      	beq.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferHalfCpltCallback(hdma);
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b68:	6878      	ldr	r0, [r7, #4]
 8004b6a:	4798      	blx	r3
 8004b6c:	e01f      	b.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferM1HalfCpltCallback != NULL)
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004b72:	2b00      	cmp	r3, #0
 8004b74:	d01b      	beq.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferM1HalfCpltCallback(hdma);
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004b7a:	6878      	ldr	r0, [r7, #4]
 8004b7c:	4798      	blx	r3
 8004b7e:	e016      	b.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
          }
        }
        else
        {
          /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	681b      	ldr	r3, [r3, #0]
 8004b84:	681b      	ldr	r3, [r3, #0]
 8004b86:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	d107      	bne.n	8004b9e <HAL_DMA_IRQHandler+0x5b2>
          {
            /* Disable the half transfer interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	681a      	ldr	r2, [r3, #0]
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	f022 0208 	bic.w	r2, r2, #8
 8004b9c:	601a      	str	r2, [r3, #0]
          }

          if(hdma->XferHalfCpltCallback != NULL)
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d003      	beq.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004baa:	6878      	ldr	r0, [r7, #4]
 8004bac:	4798      	blx	r3
          }
        }
      }
    }
    /* Transfer Complete Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004bb2:	f003 031f 	and.w	r3, r3, #31
 8004bb6:	2220      	movs	r2, #32
 8004bb8:	409a      	lsls	r2, r3
 8004bba:	69bb      	ldr	r3, [r7, #24]
 8004bbc:	4013      	ands	r3, r2
 8004bbe:	2b00      	cmp	r3, #0
 8004bc0:	f000 8110 	beq.w	8004de4 <HAL_DMA_IRQHandler+0x7f8>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	4a2c      	ldr	r2, [pc, #176]	; (8004c7c <HAL_DMA_IRQHandler+0x690>)
 8004bca:	4293      	cmp	r3, r2
 8004bcc:	d04a      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	4a2b      	ldr	r2, [pc, #172]	; (8004c80 <HAL_DMA_IRQHandler+0x694>)
 8004bd4:	4293      	cmp	r3, r2
 8004bd6:	d045      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	4a29      	ldr	r2, [pc, #164]	; (8004c84 <HAL_DMA_IRQHandler+0x698>)
 8004bde:	4293      	cmp	r3, r2
 8004be0:	d040      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	4a28      	ldr	r2, [pc, #160]	; (8004c88 <HAL_DMA_IRQHandler+0x69c>)
 8004be8:	4293      	cmp	r3, r2
 8004bea:	d03b      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	4a26      	ldr	r2, [pc, #152]	; (8004c8c <HAL_DMA_IRQHandler+0x6a0>)
 8004bf2:	4293      	cmp	r3, r2
 8004bf4:	d036      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004bf6:	687b      	ldr	r3, [r7, #4]
 8004bf8:	681b      	ldr	r3, [r3, #0]
 8004bfa:	4a25      	ldr	r2, [pc, #148]	; (8004c90 <HAL_DMA_IRQHandler+0x6a4>)
 8004bfc:	4293      	cmp	r3, r2
 8004bfe:	d031      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	4a23      	ldr	r2, [pc, #140]	; (8004c94 <HAL_DMA_IRQHandler+0x6a8>)
 8004c06:	4293      	cmp	r3, r2
 8004c08:	d02c      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	4a22      	ldr	r2, [pc, #136]	; (8004c98 <HAL_DMA_IRQHandler+0x6ac>)
 8004c10:	4293      	cmp	r3, r2
 8004c12:	d027      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4a20      	ldr	r2, [pc, #128]	; (8004c9c <HAL_DMA_IRQHandler+0x6b0>)
 8004c1a:	4293      	cmp	r3, r2
 8004c1c:	d022      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	4a1f      	ldr	r2, [pc, #124]	; (8004ca0 <HAL_DMA_IRQHandler+0x6b4>)
 8004c24:	4293      	cmp	r3, r2
 8004c26:	d01d      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	4a1d      	ldr	r2, [pc, #116]	; (8004ca4 <HAL_DMA_IRQHandler+0x6b8>)
 8004c2e:	4293      	cmp	r3, r2
 8004c30:	d018      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	4a1c      	ldr	r2, [pc, #112]	; (8004ca8 <HAL_DMA_IRQHandler+0x6bc>)
 8004c38:	4293      	cmp	r3, r2
 8004c3a:	d013      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	4a1a      	ldr	r2, [pc, #104]	; (8004cac <HAL_DMA_IRQHandler+0x6c0>)
 8004c42:	4293      	cmp	r3, r2
 8004c44:	d00e      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c46:	687b      	ldr	r3, [r7, #4]
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	4a19      	ldr	r2, [pc, #100]	; (8004cb0 <HAL_DMA_IRQHandler+0x6c4>)
 8004c4c:	4293      	cmp	r3, r2
 8004c4e:	d009      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	4a17      	ldr	r2, [pc, #92]	; (8004cb4 <HAL_DMA_IRQHandler+0x6c8>)
 8004c56:	4293      	cmp	r3, r2
 8004c58:	d004      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c5a:	687b      	ldr	r3, [r7, #4]
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	4a16      	ldr	r2, [pc, #88]	; (8004cb8 <HAL_DMA_IRQHandler+0x6cc>)
 8004c60:	4293      	cmp	r3, r2
 8004c62:	d12b      	bne.n	8004cbc <HAL_DMA_IRQHandler+0x6d0>
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	f003 0310 	and.w	r3, r3, #16
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	bf14      	ite	ne
 8004c72:	2301      	movne	r3, #1
 8004c74:	2300      	moveq	r3, #0
 8004c76:	b2db      	uxtb	r3, r3
 8004c78:	e02a      	b.n	8004cd0 <HAL_DMA_IRQHandler+0x6e4>
 8004c7a:	bf00      	nop
 8004c7c:	40020010 	.word	0x40020010
 8004c80:	40020028 	.word	0x40020028
 8004c84:	40020040 	.word	0x40020040
 8004c88:	40020058 	.word	0x40020058
 8004c8c:	40020070 	.word	0x40020070
 8004c90:	40020088 	.word	0x40020088
 8004c94:	400200a0 	.word	0x400200a0
 8004c98:	400200b8 	.word	0x400200b8
 8004c9c:	40020410 	.word	0x40020410
 8004ca0:	40020428 	.word	0x40020428
 8004ca4:	40020440 	.word	0x40020440
 8004ca8:	40020458 	.word	0x40020458
 8004cac:	40020470 	.word	0x40020470
 8004cb0:	40020488 	.word	0x40020488
 8004cb4:	400204a0 	.word	0x400204a0
 8004cb8:	400204b8 	.word	0x400204b8
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	f003 0302 	and.w	r3, r3, #2
 8004cc6:	2b00      	cmp	r3, #0
 8004cc8:	bf14      	ite	ne
 8004cca:	2301      	movne	r3, #1
 8004ccc:	2300      	moveq	r3, #0
 8004cce:	b2db      	uxtb	r3, r3
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	f000 8087 	beq.w	8004de4 <HAL_DMA_IRQHandler+0x7f8>
      {
        /* Clear the transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004cda:	f003 031f 	and.w	r3, r3, #31
 8004cde:	2220      	movs	r2, #32
 8004ce0:	409a      	lsls	r2, r3
 8004ce2:	6a3b      	ldr	r3, [r7, #32]
 8004ce4:	609a      	str	r2, [r3, #8]

        if(HAL_DMA_STATE_ABORT == hdma->State)
 8004ce6:	687b      	ldr	r3, [r7, #4]
 8004ce8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004cec:	b2db      	uxtb	r3, r3
 8004cee:	2b04      	cmp	r3, #4
 8004cf0:	d139      	bne.n	8004d66 <HAL_DMA_IRQHandler+0x77a>
        {
          /* Disable all the transfer interrupts */
          ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	681a      	ldr	r2, [r3, #0]
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	f022 0216 	bic.w	r2, r2, #22
 8004d00:	601a      	str	r2, [r3, #0]
          ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	695a      	ldr	r2, [r3, #20]
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004d10:	615a      	str	r2, [r3, #20]

          if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d103      	bne.n	8004d22 <HAL_DMA_IRQHandler+0x736>
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004d1e:	2b00      	cmp	r3, #0
 8004d20:	d007      	beq.n	8004d32 <HAL_DMA_IRQHandler+0x746>
          {
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	681b      	ldr	r3, [r3, #0]
 8004d26:	681a      	ldr	r2, [r3, #0]
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	f022 0208 	bic.w	r2, r2, #8
 8004d30:	601a      	str	r2, [r3, #0]
          }

          /* Clear all interrupt flags at correct offset within the register */
          regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004d36:	f003 031f 	and.w	r3, r3, #31
 8004d3a:	223f      	movs	r2, #63	; 0x3f
 8004d3c:	409a      	lsls	r2, r3
 8004d3e:	6a3b      	ldr	r3, [r7, #32]
 8004d40:	609a      	str	r2, [r3, #8]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	2201      	movs	r2, #1
 8004d46:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	2200      	movs	r2, #0
 8004d4e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

          if(hdma->XferAbortCallback != NULL)
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004d56:	2b00      	cmp	r3, #0
 8004d58:	f000 834a 	beq.w	80053f0 <HAL_DMA_IRQHandler+0xe04>
          {
            hdma->XferAbortCallback(hdma);
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004d60:	6878      	ldr	r0, [r7, #4]
 8004d62:	4798      	blx	r3
          }
          return;
 8004d64:	e344      	b.n	80053f0 <HAL_DMA_IRQHandler+0xe04>
        }

        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004d70:	2b00      	cmp	r3, #0
 8004d72:	d018      	beq.n	8004da6 <HAL_DMA_IRQHandler+0x7ba>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	681b      	ldr	r3, [r3, #0]
 8004d7a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	d108      	bne.n	8004d94 <HAL_DMA_IRQHandler+0x7a8>
          {
            if(hdma->XferM1CpltCallback != NULL)
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004d86:	2b00      	cmp	r3, #0
 8004d88:	d02c      	beq.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory1 */
              hdma->XferM1CpltCallback(hdma);
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004d8e:	6878      	ldr	r0, [r7, #4]
 8004d90:	4798      	blx	r3
 8004d92:	e027      	b.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferCpltCallback != NULL)
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004d98:	2b00      	cmp	r3, #0
 8004d9a:	d023      	beq.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory0 */
              hdma->XferCpltCallback(hdma);
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004da0:	6878      	ldr	r0, [r7, #4]
 8004da2:	4798      	blx	r3
 8004da4:	e01e      	b.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
          }
        }
        /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
        else
        {
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004db0:	2b00      	cmp	r3, #0
 8004db2:	d10f      	bne.n	8004dd4 <HAL_DMA_IRQHandler+0x7e8>
          {
            /* Disable the transfer complete interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC);
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	681a      	ldr	r2, [r3, #0]
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	f022 0210 	bic.w	r2, r2, #16
 8004dc2:	601a      	str	r2, [r3, #0]

            /* Change the DMA state */
            hdma->State = HAL_DMA_STATE_READY;
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	2201      	movs	r2, #1
 8004dc8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

            /* Process Unlocked */
            __HAL_UNLOCK(hdma);
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	2200      	movs	r2, #0
 8004dd0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          }

          if(hdma->XferCpltCallback != NULL)
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004dd8:	2b00      	cmp	r3, #0
 8004dda:	d003      	beq.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
          {
            /* Transfer complete callback */
            hdma->XferCpltCallback(hdma);
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004de0:	6878      	ldr	r0, [r7, #4]
 8004de2:	4798      	blx	r3
        }
      }
    }

    /* manage error case */
    if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004de8:	2b00      	cmp	r3, #0
 8004dea:	f000 8306 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
    {
      if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != 0U)
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004df2:	f003 0301 	and.w	r3, r3, #1
 8004df6:	2b00      	cmp	r3, #0
 8004df8:	f000 8088 	beq.w	8004f0c <HAL_DMA_IRQHandler+0x920>
      {
        hdma->State = HAL_DMA_STATE_ABORT;
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	2204      	movs	r2, #4
 8004e00:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Disable the stream */
        __HAL_DMA_DISABLE(hdma);
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	4a7a      	ldr	r2, [pc, #488]	; (8004ff4 <HAL_DMA_IRQHandler+0xa08>)
 8004e0a:	4293      	cmp	r3, r2
 8004e0c:	d04a      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	681b      	ldr	r3, [r3, #0]
 8004e12:	4a79      	ldr	r2, [pc, #484]	; (8004ff8 <HAL_DMA_IRQHandler+0xa0c>)
 8004e14:	4293      	cmp	r3, r2
 8004e16:	d045      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	681b      	ldr	r3, [r3, #0]
 8004e1c:	4a77      	ldr	r2, [pc, #476]	; (8004ffc <HAL_DMA_IRQHandler+0xa10>)
 8004e1e:	4293      	cmp	r3, r2
 8004e20:	d040      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	4a76      	ldr	r2, [pc, #472]	; (8005000 <HAL_DMA_IRQHandler+0xa14>)
 8004e28:	4293      	cmp	r3, r2
 8004e2a:	d03b      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	4a74      	ldr	r2, [pc, #464]	; (8005004 <HAL_DMA_IRQHandler+0xa18>)
 8004e32:	4293      	cmp	r3, r2
 8004e34:	d036      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	4a73      	ldr	r2, [pc, #460]	; (8005008 <HAL_DMA_IRQHandler+0xa1c>)
 8004e3c:	4293      	cmp	r3, r2
 8004e3e:	d031      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	4a71      	ldr	r2, [pc, #452]	; (800500c <HAL_DMA_IRQHandler+0xa20>)
 8004e46:	4293      	cmp	r3, r2
 8004e48:	d02c      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	4a70      	ldr	r2, [pc, #448]	; (8005010 <HAL_DMA_IRQHandler+0xa24>)
 8004e50:	4293      	cmp	r3, r2
 8004e52:	d027      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	4a6e      	ldr	r2, [pc, #440]	; (8005014 <HAL_DMA_IRQHandler+0xa28>)
 8004e5a:	4293      	cmp	r3, r2
 8004e5c:	d022      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	681b      	ldr	r3, [r3, #0]
 8004e62:	4a6d      	ldr	r2, [pc, #436]	; (8005018 <HAL_DMA_IRQHandler+0xa2c>)
 8004e64:	4293      	cmp	r3, r2
 8004e66:	d01d      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	4a6b      	ldr	r2, [pc, #428]	; (800501c <HAL_DMA_IRQHandler+0xa30>)
 8004e6e:	4293      	cmp	r3, r2
 8004e70:	d018      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	4a6a      	ldr	r2, [pc, #424]	; (8005020 <HAL_DMA_IRQHandler+0xa34>)
 8004e78:	4293      	cmp	r3, r2
 8004e7a:	d013      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	4a68      	ldr	r2, [pc, #416]	; (8005024 <HAL_DMA_IRQHandler+0xa38>)
 8004e82:	4293      	cmp	r3, r2
 8004e84:	d00e      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	4a67      	ldr	r2, [pc, #412]	; (8005028 <HAL_DMA_IRQHandler+0xa3c>)
 8004e8c:	4293      	cmp	r3, r2
 8004e8e:	d009      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	681b      	ldr	r3, [r3, #0]
 8004e94:	4a65      	ldr	r2, [pc, #404]	; (800502c <HAL_DMA_IRQHandler+0xa40>)
 8004e96:	4293      	cmp	r3, r2
 8004e98:	d004      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	4a64      	ldr	r2, [pc, #400]	; (8005030 <HAL_DMA_IRQHandler+0xa44>)
 8004ea0:	4293      	cmp	r3, r2
 8004ea2:	d108      	bne.n	8004eb6 <HAL_DMA_IRQHandler+0x8ca>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	681a      	ldr	r2, [r3, #0]
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	f022 0201 	bic.w	r2, r2, #1
 8004eb2:	601a      	str	r2, [r3, #0]
 8004eb4:	e007      	b.n	8004ec6 <HAL_DMA_IRQHandler+0x8da>
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	681b      	ldr	r3, [r3, #0]
 8004eba:	681a      	ldr	r2, [r3, #0]
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	681b      	ldr	r3, [r3, #0]
 8004ec0:	f022 0201 	bic.w	r2, r2, #1
 8004ec4:	601a      	str	r2, [r3, #0]

        do
        {
          if (++count > timeout)
 8004ec6:	68fb      	ldr	r3, [r7, #12]
 8004ec8:	3301      	adds	r3, #1
 8004eca:	60fb      	str	r3, [r7, #12]
 8004ecc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004ece:	429a      	cmp	r2, r3
 8004ed0:	d307      	bcc.n	8004ee2 <HAL_DMA_IRQHandler+0x8f6>
          {
            break;
          }
        }
        while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U);
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	681b      	ldr	r3, [r3, #0]
 8004ed8:	f003 0301 	and.w	r3, r3, #1
 8004edc:	2b00      	cmp	r3, #0
 8004ede:	d1f2      	bne.n	8004ec6 <HAL_DMA_IRQHandler+0x8da>
 8004ee0:	e000      	b.n	8004ee4 <HAL_DMA_IRQHandler+0x8f8>
            break;
 8004ee2:	bf00      	nop

        if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	681b      	ldr	r3, [r3, #0]
 8004eea:	f003 0301 	and.w	r3, r3, #1
 8004eee:	2b00      	cmp	r3, #0
 8004ef0:	d004      	beq.n	8004efc <HAL_DMA_IRQHandler+0x910>
        {
          /* Change the DMA state to error if DMA disable fails */
          hdma->State = HAL_DMA_STATE_ERROR;
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	2203      	movs	r2, #3
 8004ef6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004efa:	e003      	b.n	8004f04 <HAL_DMA_IRQHandler+0x918>
        }
        else
        {
          /* Change the DMA state to Ready if DMA disable success */
          hdma->State = HAL_DMA_STATE_READY;
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	2201      	movs	r2, #1
 8004f00:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        }

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	2200      	movs	r2, #0
 8004f08:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      }

      if(hdma->XferErrorCallback != NULL)
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004f10:	2b00      	cmp	r3, #0
 8004f12:	f000 8272 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 8004f16:	687b      	ldr	r3, [r7, #4]
 8004f18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004f1a:	6878      	ldr	r0, [r7, #4]
 8004f1c:	4798      	blx	r3
 8004f1e:	e26c      	b.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
      }
    }
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U)  /* BDMA instance(s) */
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	4a43      	ldr	r2, [pc, #268]	; (8005034 <HAL_DMA_IRQHandler+0xa48>)
 8004f26:	4293      	cmp	r3, r2
 8004f28:	d022      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	4a42      	ldr	r2, [pc, #264]	; (8005038 <HAL_DMA_IRQHandler+0xa4c>)
 8004f30:	4293      	cmp	r3, r2
 8004f32:	d01d      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	4a40      	ldr	r2, [pc, #256]	; (800503c <HAL_DMA_IRQHandler+0xa50>)
 8004f3a:	4293      	cmp	r3, r2
 8004f3c:	d018      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	4a3f      	ldr	r2, [pc, #252]	; (8005040 <HAL_DMA_IRQHandler+0xa54>)
 8004f44:	4293      	cmp	r3, r2
 8004f46:	d013      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	4a3d      	ldr	r2, [pc, #244]	; (8005044 <HAL_DMA_IRQHandler+0xa58>)
 8004f4e:	4293      	cmp	r3, r2
 8004f50:	d00e      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	4a3c      	ldr	r2, [pc, #240]	; (8005048 <HAL_DMA_IRQHandler+0xa5c>)
 8004f58:	4293      	cmp	r3, r2
 8004f5a:	d009      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	4a3a      	ldr	r2, [pc, #232]	; (800504c <HAL_DMA_IRQHandler+0xa60>)
 8004f62:	4293      	cmp	r3, r2
 8004f64:	d004      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	4a39      	ldr	r2, [pc, #228]	; (8005050 <HAL_DMA_IRQHandler+0xa64>)
 8004f6c:	4293      	cmp	r3, r2
 8004f6e:	d101      	bne.n	8004f74 <HAL_DMA_IRQHandler+0x988>
 8004f70:	2301      	movs	r3, #1
 8004f72:	e000      	b.n	8004f76 <HAL_DMA_IRQHandler+0x98a>
 8004f74:	2300      	movs	r3, #0
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	f000 823f 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
  {
    ccr_reg = (((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR);
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	613b      	str	r3, [r7, #16]

    /* Half Transfer Complete Interrupt management ******************************/
    if (((tmpisr_bdma & (BDMA_FLAG_HT0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_HTIE) != 0U))
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f88:	f003 031f 	and.w	r3, r3, #31
 8004f8c:	2204      	movs	r2, #4
 8004f8e:	409a      	lsls	r2, r3
 8004f90:	697b      	ldr	r3, [r7, #20]
 8004f92:	4013      	ands	r3, r2
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	f000 80cd 	beq.w	8005134 <HAL_DMA_IRQHandler+0xb48>
 8004f9a:	693b      	ldr	r3, [r7, #16]
 8004f9c:	f003 0304 	and.w	r3, r3, #4
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	f000 80c7 	beq.w	8005134 <HAL_DMA_IRQHandler+0xb48>
    {
      /* Clear the half transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_HTIF0 << (hdma->StreamIndex & 0x1FU));
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004faa:	f003 031f 	and.w	r3, r3, #31
 8004fae:	2204      	movs	r2, #4
 8004fb0:	409a      	lsls	r2, r3
 8004fb2:	69fb      	ldr	r3, [r7, #28]
 8004fb4:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004fb6:	693b      	ldr	r3, [r7, #16]
 8004fb8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	d049      	beq.n	8005054 <HAL_DMA_IRQHandler+0xa68>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 8004fc0:	693b      	ldr	r3, [r7, #16]
 8004fc2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004fc6:	2b00      	cmp	r3, #0
 8004fc8:	d109      	bne.n	8004fde <HAL_DMA_IRQHandler+0x9f2>
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004fce:	2b00      	cmp	r3, #0
 8004fd0:	f000 8210 	beq.w	80053f4 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 1 */
            hdma->XferM1HalfCpltCallback(hdma);
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004fd8:	6878      	ldr	r0, [r7, #4]
 8004fda:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004fdc:	e20a      	b.n	80053f4 <HAL_DMA_IRQHandler+0xe08>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fe2:	2b00      	cmp	r3, #0
 8004fe4:	f000 8206 	beq.w	80053f4 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 0 */
            hdma->XferHalfCpltCallback(hdma);
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fec:	6878      	ldr	r0, [r7, #4]
 8004fee:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004ff0:	e200      	b.n	80053f4 <HAL_DMA_IRQHandler+0xe08>
 8004ff2:	bf00      	nop
 8004ff4:	40020010 	.word	0x40020010
 8004ff8:	40020028 	.word	0x40020028
 8004ffc:	40020040 	.word	0x40020040
 8005000:	40020058 	.word	0x40020058
 8005004:	40020070 	.word	0x40020070
 8005008:	40020088 	.word	0x40020088
 800500c:	400200a0 	.word	0x400200a0
 8005010:	400200b8 	.word	0x400200b8
 8005014:	40020410 	.word	0x40020410
 8005018:	40020428 	.word	0x40020428
 800501c:	40020440 	.word	0x40020440
 8005020:	40020458 	.word	0x40020458
 8005024:	40020470 	.word	0x40020470
 8005028:	40020488 	.word	0x40020488
 800502c:	400204a0 	.word	0x400204a0
 8005030:	400204b8 	.word	0x400204b8
 8005034:	58025408 	.word	0x58025408
 8005038:	5802541c 	.word	0x5802541c
 800503c:	58025430 	.word	0x58025430
 8005040:	58025444 	.word	0x58025444
 8005044:	58025458 	.word	0x58025458
 8005048:	5802546c 	.word	0x5802546c
 800504c:	58025480 	.word	0x58025480
 8005050:	58025494 	.word	0x58025494
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 8005054:	693b      	ldr	r3, [r7, #16]
 8005056:	f003 0320 	and.w	r3, r3, #32
 800505a:	2b00      	cmp	r3, #0
 800505c:	d160      	bne.n	8005120 <HAL_DMA_IRQHandler+0xb34>
        {
          /* Disable the half transfer interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	4a7f      	ldr	r2, [pc, #508]	; (8005260 <HAL_DMA_IRQHandler+0xc74>)
 8005064:	4293      	cmp	r3, r2
 8005066:	d04a      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	4a7d      	ldr	r2, [pc, #500]	; (8005264 <HAL_DMA_IRQHandler+0xc78>)
 800506e:	4293      	cmp	r3, r2
 8005070:	d045      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	4a7c      	ldr	r2, [pc, #496]	; (8005268 <HAL_DMA_IRQHandler+0xc7c>)
 8005078:	4293      	cmp	r3, r2
 800507a:	d040      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	4a7a      	ldr	r2, [pc, #488]	; (800526c <HAL_DMA_IRQHandler+0xc80>)
 8005082:	4293      	cmp	r3, r2
 8005084:	d03b      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	4a79      	ldr	r2, [pc, #484]	; (8005270 <HAL_DMA_IRQHandler+0xc84>)
 800508c:	4293      	cmp	r3, r2
 800508e:	d036      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	4a77      	ldr	r2, [pc, #476]	; (8005274 <HAL_DMA_IRQHandler+0xc88>)
 8005096:	4293      	cmp	r3, r2
 8005098:	d031      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	4a76      	ldr	r2, [pc, #472]	; (8005278 <HAL_DMA_IRQHandler+0xc8c>)
 80050a0:	4293      	cmp	r3, r2
 80050a2:	d02c      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	4a74      	ldr	r2, [pc, #464]	; (800527c <HAL_DMA_IRQHandler+0xc90>)
 80050aa:	4293      	cmp	r3, r2
 80050ac:	d027      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	4a73      	ldr	r2, [pc, #460]	; (8005280 <HAL_DMA_IRQHandler+0xc94>)
 80050b4:	4293      	cmp	r3, r2
 80050b6:	d022      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	4a71      	ldr	r2, [pc, #452]	; (8005284 <HAL_DMA_IRQHandler+0xc98>)
 80050be:	4293      	cmp	r3, r2
 80050c0:	d01d      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	4a70      	ldr	r2, [pc, #448]	; (8005288 <HAL_DMA_IRQHandler+0xc9c>)
 80050c8:	4293      	cmp	r3, r2
 80050ca:	d018      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	4a6e      	ldr	r2, [pc, #440]	; (800528c <HAL_DMA_IRQHandler+0xca0>)
 80050d2:	4293      	cmp	r3, r2
 80050d4:	d013      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	4a6d      	ldr	r2, [pc, #436]	; (8005290 <HAL_DMA_IRQHandler+0xca4>)
 80050dc:	4293      	cmp	r3, r2
 80050de:	d00e      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	4a6b      	ldr	r2, [pc, #428]	; (8005294 <HAL_DMA_IRQHandler+0xca8>)
 80050e6:	4293      	cmp	r3, r2
 80050e8:	d009      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	4a6a      	ldr	r2, [pc, #424]	; (8005298 <HAL_DMA_IRQHandler+0xcac>)
 80050f0:	4293      	cmp	r3, r2
 80050f2:	d004      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050f4:	687b      	ldr	r3, [r7, #4]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	4a68      	ldr	r2, [pc, #416]	; (800529c <HAL_DMA_IRQHandler+0xcb0>)
 80050fa:	4293      	cmp	r3, r2
 80050fc:	d108      	bne.n	8005110 <HAL_DMA_IRQHandler+0xb24>
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	681a      	ldr	r2, [r3, #0]
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	f022 0208 	bic.w	r2, r2, #8
 800510c:	601a      	str	r2, [r3, #0]
 800510e:	e007      	b.n	8005120 <HAL_DMA_IRQHandler+0xb34>
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	681a      	ldr	r2, [r3, #0]
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	f022 0204 	bic.w	r2, r2, #4
 800511e:	601a      	str	r2, [r3, #0]
        }

        /* DMA peripheral state is not updated in Half Transfer */
        /* but in Transfer Complete case */

       if(hdma->XferHalfCpltCallback != NULL)
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005124:	2b00      	cmp	r3, #0
 8005126:	f000 8165 	beq.w	80053f4 <HAL_DMA_IRQHandler+0xe08>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800512e:	6878      	ldr	r0, [r7, #4]
 8005130:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005132:	e15f      	b.n	80053f4 <HAL_DMA_IRQHandler+0xe08>
        }
      }
    }

    /* Transfer Complete Interrupt management ***********************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TC0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TCIE) != 0U))
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005138:	f003 031f 	and.w	r3, r3, #31
 800513c:	2202      	movs	r2, #2
 800513e:	409a      	lsls	r2, r3
 8005140:	697b      	ldr	r3, [r7, #20]
 8005142:	4013      	ands	r3, r2
 8005144:	2b00      	cmp	r3, #0
 8005146:	f000 80c5 	beq.w	80052d4 <HAL_DMA_IRQHandler+0xce8>
 800514a:	693b      	ldr	r3, [r7, #16]
 800514c:	f003 0302 	and.w	r3, r3, #2
 8005150:	2b00      	cmp	r3, #0
 8005152:	f000 80bf 	beq.w	80052d4 <HAL_DMA_IRQHandler+0xce8>
    {
      /* Clear the transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_TCIF0) << (hdma->StreamIndex & 0x1FU);
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800515a:	f003 031f 	and.w	r3, r3, #31
 800515e:	2202      	movs	r2, #2
 8005160:	409a      	lsls	r2, r3
 8005162:	69fb      	ldr	r3, [r7, #28]
 8005164:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005166:	693b      	ldr	r3, [r7, #16]
 8005168:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800516c:	2b00      	cmp	r3, #0
 800516e:	d018      	beq.n	80051a2 <HAL_DMA_IRQHandler+0xbb6>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 8005170:	693b      	ldr	r3, [r7, #16]
 8005172:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005176:	2b00      	cmp	r3, #0
 8005178:	d109      	bne.n	800518e <HAL_DMA_IRQHandler+0xba2>
        {
          if(hdma->XferM1CpltCallback != NULL)
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800517e:	2b00      	cmp	r3, #0
 8005180:	f000 813a 	beq.w	80053f8 <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 1 */
            hdma->XferM1CpltCallback(hdma);
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005188:	6878      	ldr	r0, [r7, #4]
 800518a:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 800518c:	e134      	b.n	80053f8 <HAL_DMA_IRQHandler+0xe0c>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005192:	2b00      	cmp	r3, #0
 8005194:	f000 8130 	beq.w	80053f8 <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 0 */
            hdma->XferCpltCallback(hdma);
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800519c:	6878      	ldr	r0, [r7, #4]
 800519e:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80051a0:	e12a      	b.n	80053f8 <HAL_DMA_IRQHandler+0xe0c>
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 80051a2:	693b      	ldr	r3, [r7, #16]
 80051a4:	f003 0320 	and.w	r3, r3, #32
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	f040 8089 	bne.w	80052c0 <HAL_DMA_IRQHandler+0xcd4>
        {
          /* Disable the transfer complete and error interrupt, if the DMA mode is not CIRCULAR */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	681b      	ldr	r3, [r3, #0]
 80051b2:	4a2b      	ldr	r2, [pc, #172]	; (8005260 <HAL_DMA_IRQHandler+0xc74>)
 80051b4:	4293      	cmp	r3, r2
 80051b6:	d04a      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	4a29      	ldr	r2, [pc, #164]	; (8005264 <HAL_DMA_IRQHandler+0xc78>)
 80051be:	4293      	cmp	r3, r2
 80051c0:	d045      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	4a28      	ldr	r2, [pc, #160]	; (8005268 <HAL_DMA_IRQHandler+0xc7c>)
 80051c8:	4293      	cmp	r3, r2
 80051ca:	d040      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	681b      	ldr	r3, [r3, #0]
 80051d0:	4a26      	ldr	r2, [pc, #152]	; (800526c <HAL_DMA_IRQHandler+0xc80>)
 80051d2:	4293      	cmp	r3, r2
 80051d4:	d03b      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	4a25      	ldr	r2, [pc, #148]	; (8005270 <HAL_DMA_IRQHandler+0xc84>)
 80051dc:	4293      	cmp	r3, r2
 80051de:	d036      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	4a23      	ldr	r2, [pc, #140]	; (8005274 <HAL_DMA_IRQHandler+0xc88>)
 80051e6:	4293      	cmp	r3, r2
 80051e8:	d031      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051ea:	687b      	ldr	r3, [r7, #4]
 80051ec:	681b      	ldr	r3, [r3, #0]
 80051ee:	4a22      	ldr	r2, [pc, #136]	; (8005278 <HAL_DMA_IRQHandler+0xc8c>)
 80051f0:	4293      	cmp	r3, r2
 80051f2:	d02c      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	681b      	ldr	r3, [r3, #0]
 80051f8:	4a20      	ldr	r2, [pc, #128]	; (800527c <HAL_DMA_IRQHandler+0xc90>)
 80051fa:	4293      	cmp	r3, r2
 80051fc:	d027      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	4a1f      	ldr	r2, [pc, #124]	; (8005280 <HAL_DMA_IRQHandler+0xc94>)
 8005204:	4293      	cmp	r3, r2
 8005206:	d022      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	4a1d      	ldr	r2, [pc, #116]	; (8005284 <HAL_DMA_IRQHandler+0xc98>)
 800520e:	4293      	cmp	r3, r2
 8005210:	d01d      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	4a1c      	ldr	r2, [pc, #112]	; (8005288 <HAL_DMA_IRQHandler+0xc9c>)
 8005218:	4293      	cmp	r3, r2
 800521a:	d018      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	681b      	ldr	r3, [r3, #0]
 8005220:	4a1a      	ldr	r2, [pc, #104]	; (800528c <HAL_DMA_IRQHandler+0xca0>)
 8005222:	4293      	cmp	r3, r2
 8005224:	d013      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	681b      	ldr	r3, [r3, #0]
 800522a:	4a19      	ldr	r2, [pc, #100]	; (8005290 <HAL_DMA_IRQHandler+0xca4>)
 800522c:	4293      	cmp	r3, r2
 800522e:	d00e      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	4a17      	ldr	r2, [pc, #92]	; (8005294 <HAL_DMA_IRQHandler+0xca8>)
 8005236:	4293      	cmp	r3, r2
 8005238:	d009      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	681b      	ldr	r3, [r3, #0]
 800523e:	4a16      	ldr	r2, [pc, #88]	; (8005298 <HAL_DMA_IRQHandler+0xcac>)
 8005240:	4293      	cmp	r3, r2
 8005242:	d004      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	4a14      	ldr	r2, [pc, #80]	; (800529c <HAL_DMA_IRQHandler+0xcb0>)
 800524a:	4293      	cmp	r3, r2
 800524c:	d128      	bne.n	80052a0 <HAL_DMA_IRQHandler+0xcb4>
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	681a      	ldr	r2, [r3, #0]
 8005254:	687b      	ldr	r3, [r7, #4]
 8005256:	681b      	ldr	r3, [r3, #0]
 8005258:	f022 0214 	bic.w	r2, r2, #20
 800525c:	601a      	str	r2, [r3, #0]
 800525e:	e027      	b.n	80052b0 <HAL_DMA_IRQHandler+0xcc4>
 8005260:	40020010 	.word	0x40020010
 8005264:	40020028 	.word	0x40020028
 8005268:	40020040 	.word	0x40020040
 800526c:	40020058 	.word	0x40020058
 8005270:	40020070 	.word	0x40020070
 8005274:	40020088 	.word	0x40020088
 8005278:	400200a0 	.word	0x400200a0
 800527c:	400200b8 	.word	0x400200b8
 8005280:	40020410 	.word	0x40020410
 8005284:	40020428 	.word	0x40020428
 8005288:	40020440 	.word	0x40020440
 800528c:	40020458 	.word	0x40020458
 8005290:	40020470 	.word	0x40020470
 8005294:	40020488 	.word	0x40020488
 8005298:	400204a0 	.word	0x400204a0
 800529c:	400204b8 	.word	0x400204b8
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	681a      	ldr	r2, [r3, #0]
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	f022 020a 	bic.w	r2, r2, #10
 80052ae:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	2201      	movs	r2, #1
 80052b4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	2200      	movs	r2, #0
 80052bc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052c4:	2b00      	cmp	r3, #0
 80052c6:	f000 8097 	beq.w	80053f8 <HAL_DMA_IRQHandler+0xe0c>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052ce:	6878      	ldr	r0, [r7, #4]
 80052d0:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80052d2:	e091      	b.n	80053f8 <HAL_DMA_IRQHandler+0xe0c>
        }
      }
    }
    /* Transfer Error Interrupt management **************************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TE0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TEIE) != 0U))
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80052d8:	f003 031f 	and.w	r3, r3, #31
 80052dc:	2208      	movs	r2, #8
 80052de:	409a      	lsls	r2, r3
 80052e0:	697b      	ldr	r3, [r7, #20]
 80052e2:	4013      	ands	r3, r2
 80052e4:	2b00      	cmp	r3, #0
 80052e6:	f000 8088 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
 80052ea:	693b      	ldr	r3, [r7, #16]
 80052ec:	f003 0308 	and.w	r3, r3, #8
 80052f0:	2b00      	cmp	r3, #0
 80052f2:	f000 8082 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
    {
      /* When a DMA transfer error occurs */
      /* A hardware clear of its EN bits is performed */
      /* Disable ALL DMA IT */
      __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	4a41      	ldr	r2, [pc, #260]	; (8005400 <HAL_DMA_IRQHandler+0xe14>)
 80052fc:	4293      	cmp	r3, r2
 80052fe:	d04a      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	4a3f      	ldr	r2, [pc, #252]	; (8005404 <HAL_DMA_IRQHandler+0xe18>)
 8005306:	4293      	cmp	r3, r2
 8005308:	d045      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800530a:	687b      	ldr	r3, [r7, #4]
 800530c:	681b      	ldr	r3, [r3, #0]
 800530e:	4a3e      	ldr	r2, [pc, #248]	; (8005408 <HAL_DMA_IRQHandler+0xe1c>)
 8005310:	4293      	cmp	r3, r2
 8005312:	d040      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	681b      	ldr	r3, [r3, #0]
 8005318:	4a3c      	ldr	r2, [pc, #240]	; (800540c <HAL_DMA_IRQHandler+0xe20>)
 800531a:	4293      	cmp	r3, r2
 800531c:	d03b      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	4a3b      	ldr	r2, [pc, #236]	; (8005410 <HAL_DMA_IRQHandler+0xe24>)
 8005324:	4293      	cmp	r3, r2
 8005326:	d036      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	4a39      	ldr	r2, [pc, #228]	; (8005414 <HAL_DMA_IRQHandler+0xe28>)
 800532e:	4293      	cmp	r3, r2
 8005330:	d031      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	4a38      	ldr	r2, [pc, #224]	; (8005418 <HAL_DMA_IRQHandler+0xe2c>)
 8005338:	4293      	cmp	r3, r2
 800533a:	d02c      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	4a36      	ldr	r2, [pc, #216]	; (800541c <HAL_DMA_IRQHandler+0xe30>)
 8005342:	4293      	cmp	r3, r2
 8005344:	d027      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	4a35      	ldr	r2, [pc, #212]	; (8005420 <HAL_DMA_IRQHandler+0xe34>)
 800534c:	4293      	cmp	r3, r2
 800534e:	d022      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	4a33      	ldr	r2, [pc, #204]	; (8005424 <HAL_DMA_IRQHandler+0xe38>)
 8005356:	4293      	cmp	r3, r2
 8005358:	d01d      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	4a32      	ldr	r2, [pc, #200]	; (8005428 <HAL_DMA_IRQHandler+0xe3c>)
 8005360:	4293      	cmp	r3, r2
 8005362:	d018      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	681b      	ldr	r3, [r3, #0]
 8005368:	4a30      	ldr	r2, [pc, #192]	; (800542c <HAL_DMA_IRQHandler+0xe40>)
 800536a:	4293      	cmp	r3, r2
 800536c:	d013      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	4a2f      	ldr	r2, [pc, #188]	; (8005430 <HAL_DMA_IRQHandler+0xe44>)
 8005374:	4293      	cmp	r3, r2
 8005376:	d00e      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	4a2d      	ldr	r2, [pc, #180]	; (8005434 <HAL_DMA_IRQHandler+0xe48>)
 800537e:	4293      	cmp	r3, r2
 8005380:	d009      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	4a2c      	ldr	r2, [pc, #176]	; (8005438 <HAL_DMA_IRQHandler+0xe4c>)
 8005388:	4293      	cmp	r3, r2
 800538a:	d004      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	4a2a      	ldr	r2, [pc, #168]	; (800543c <HAL_DMA_IRQHandler+0xe50>)
 8005392:	4293      	cmp	r3, r2
 8005394:	d108      	bne.n	80053a8 <HAL_DMA_IRQHandler+0xdbc>
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	681a      	ldr	r2, [r3, #0]
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	f022 021c 	bic.w	r2, r2, #28
 80053a4:	601a      	str	r2, [r3, #0]
 80053a6:	e007      	b.n	80053b8 <HAL_DMA_IRQHandler+0xdcc>
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	681b      	ldr	r3, [r3, #0]
 80053ac:	681a      	ldr	r2, [r3, #0]
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	f022 020e 	bic.w	r2, r2, #14
 80053b6:	601a      	str	r2, [r3, #0]

      /* Clear all flags */
      regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80053bc:	f003 031f 	and.w	r3, r3, #31
 80053c0:	2201      	movs	r2, #1
 80053c2:	409a      	lsls	r2, r3
 80053c4:	69fb      	ldr	r3, [r7, #28]
 80053c6:	605a      	str	r2, [r3, #4]

      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TE;
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	2201      	movs	r2, #1
 80053cc:	655a      	str	r2, [r3, #84]	; 0x54

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 80053ce:	687b      	ldr	r3, [r7, #4]
 80053d0:	2201      	movs	r2, #1
 80053d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	2200      	movs	r2, #0
 80053da:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      if (hdma->XferErrorCallback != NULL)
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80053e2:	2b00      	cmp	r3, #0
 80053e4:	d009      	beq.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80053ea:	6878      	ldr	r0, [r7, #4]
 80053ec:	4798      	blx	r3
 80053ee:	e004      	b.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
          return;
 80053f0:	bf00      	nop
 80053f2:	e002      	b.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80053f4:	bf00      	nop
 80053f6:	e000      	b.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80053f8:	bf00      	nop
  }
  else
  {
    /* Nothing To Do */
  }
}
 80053fa:	3728      	adds	r7, #40	; 0x28
 80053fc:	46bd      	mov	sp, r7
 80053fe:	bd80      	pop	{r7, pc}
 8005400:	40020010 	.word	0x40020010
 8005404:	40020028 	.word	0x40020028
 8005408:	40020040 	.word	0x40020040
 800540c:	40020058 	.word	0x40020058
 8005410:	40020070 	.word	0x40020070
 8005414:	40020088 	.word	0x40020088
 8005418:	400200a0 	.word	0x400200a0
 800541c:	400200b8 	.word	0x400200b8
 8005420:	40020410 	.word	0x40020410
 8005424:	40020428 	.word	0x40020428
 8005428:	40020440 	.word	0x40020440
 800542c:	40020458 	.word	0x40020458
 8005430:	40020470 	.word	0x40020470
 8005434:	40020488 	.word	0x40020488
 8005438:	400204a0 	.word	0x400204a0
 800543c:	400204b8 	.word	0x400204b8

08005440 <HAL_DMA_GetError>:
  * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
  *              the configuration information for the specified DMA Stream.
  * @retval DMA Error Code
  */
uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
{
 8005440:	b480      	push	{r7}
 8005442:	b083      	sub	sp, #12
 8005444:	af00      	add	r7, sp, #0
 8005446:	6078      	str	r0, [r7, #4]
  return hdma->ErrorCode;
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
}
 800544c:	4618      	mov	r0, r3
 800544e:	370c      	adds	r7, #12
 8005450:	46bd      	mov	sp, r7
 8005452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005456:	4770      	bx	lr

08005458 <DMA_SetConfig>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval None
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8005458:	b480      	push	{r7}
 800545a:	b087      	sub	sp, #28
 800545c:	af00      	add	r7, sp, #0
 800545e:	60f8      	str	r0, [r7, #12]
 8005460:	60b9      	str	r1, [r7, #8]
 8005462:	607a      	str	r2, [r7, #4]
 8005464:	603b      	str	r3, [r7, #0]
  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8005466:	68fb      	ldr	r3, [r7, #12]
 8005468:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800546a:	617b      	str	r3, [r7, #20]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800546c:	68fb      	ldr	r3, [r7, #12]
 800546e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005470:	613b      	str	r3, [r7, #16]

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	681b      	ldr	r3, [r3, #0]
 8005476:	4a7f      	ldr	r2, [pc, #508]	; (8005674 <DMA_SetConfig+0x21c>)
 8005478:	4293      	cmp	r3, r2
 800547a:	d072      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800547c:	68fb      	ldr	r3, [r7, #12]
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	4a7d      	ldr	r2, [pc, #500]	; (8005678 <DMA_SetConfig+0x220>)
 8005482:	4293      	cmp	r3, r2
 8005484:	d06d      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	4a7c      	ldr	r2, [pc, #496]	; (800567c <DMA_SetConfig+0x224>)
 800548c:	4293      	cmp	r3, r2
 800548e:	d068      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	4a7a      	ldr	r2, [pc, #488]	; (8005680 <DMA_SetConfig+0x228>)
 8005496:	4293      	cmp	r3, r2
 8005498:	d063      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	4a79      	ldr	r2, [pc, #484]	; (8005684 <DMA_SetConfig+0x22c>)
 80054a0:	4293      	cmp	r3, r2
 80054a2:	d05e      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054a4:	68fb      	ldr	r3, [r7, #12]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	4a77      	ldr	r2, [pc, #476]	; (8005688 <DMA_SetConfig+0x230>)
 80054aa:	4293      	cmp	r3, r2
 80054ac:	d059      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054ae:	68fb      	ldr	r3, [r7, #12]
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	4a76      	ldr	r2, [pc, #472]	; (800568c <DMA_SetConfig+0x234>)
 80054b4:	4293      	cmp	r3, r2
 80054b6:	d054      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	4a74      	ldr	r2, [pc, #464]	; (8005690 <DMA_SetConfig+0x238>)
 80054be:	4293      	cmp	r3, r2
 80054c0:	d04f      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054c2:	68fb      	ldr	r3, [r7, #12]
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	4a73      	ldr	r2, [pc, #460]	; (8005694 <DMA_SetConfig+0x23c>)
 80054c8:	4293      	cmp	r3, r2
 80054ca:	d04a      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054cc:	68fb      	ldr	r3, [r7, #12]
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	4a71      	ldr	r2, [pc, #452]	; (8005698 <DMA_SetConfig+0x240>)
 80054d2:	4293      	cmp	r3, r2
 80054d4:	d045      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	4a70      	ldr	r2, [pc, #448]	; (800569c <DMA_SetConfig+0x244>)
 80054dc:	4293      	cmp	r3, r2
 80054de:	d040      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	4a6e      	ldr	r2, [pc, #440]	; (80056a0 <DMA_SetConfig+0x248>)
 80054e6:	4293      	cmp	r3, r2
 80054e8:	d03b      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	4a6d      	ldr	r2, [pc, #436]	; (80056a4 <DMA_SetConfig+0x24c>)
 80054f0:	4293      	cmp	r3, r2
 80054f2:	d036      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054f4:	68fb      	ldr	r3, [r7, #12]
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	4a6b      	ldr	r2, [pc, #428]	; (80056a8 <DMA_SetConfig+0x250>)
 80054fa:	4293      	cmp	r3, r2
 80054fc:	d031      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054fe:	68fb      	ldr	r3, [r7, #12]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	4a6a      	ldr	r2, [pc, #424]	; (80056ac <DMA_SetConfig+0x254>)
 8005504:	4293      	cmp	r3, r2
 8005506:	d02c      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	4a68      	ldr	r2, [pc, #416]	; (80056b0 <DMA_SetConfig+0x258>)
 800550e:	4293      	cmp	r3, r2
 8005510:	d027      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	681b      	ldr	r3, [r3, #0]
 8005516:	4a67      	ldr	r2, [pc, #412]	; (80056b4 <DMA_SetConfig+0x25c>)
 8005518:	4293      	cmp	r3, r2
 800551a:	d022      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800551c:	68fb      	ldr	r3, [r7, #12]
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	4a65      	ldr	r2, [pc, #404]	; (80056b8 <DMA_SetConfig+0x260>)
 8005522:	4293      	cmp	r3, r2
 8005524:	d01d      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	4a64      	ldr	r2, [pc, #400]	; (80056bc <DMA_SetConfig+0x264>)
 800552c:	4293      	cmp	r3, r2
 800552e:	d018      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	681b      	ldr	r3, [r3, #0]
 8005534:	4a62      	ldr	r2, [pc, #392]	; (80056c0 <DMA_SetConfig+0x268>)
 8005536:	4293      	cmp	r3, r2
 8005538:	d013      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800553a:	68fb      	ldr	r3, [r7, #12]
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	4a61      	ldr	r2, [pc, #388]	; (80056c4 <DMA_SetConfig+0x26c>)
 8005540:	4293      	cmp	r3, r2
 8005542:	d00e      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005544:	68fb      	ldr	r3, [r7, #12]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	4a5f      	ldr	r2, [pc, #380]	; (80056c8 <DMA_SetConfig+0x270>)
 800554a:	4293      	cmp	r3, r2
 800554c:	d009      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	4a5e      	ldr	r2, [pc, #376]	; (80056cc <DMA_SetConfig+0x274>)
 8005554:	4293      	cmp	r3, r2
 8005556:	d004      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	4a5c      	ldr	r2, [pc, #368]	; (80056d0 <DMA_SetConfig+0x278>)
 800555e:	4293      	cmp	r3, r2
 8005560:	d101      	bne.n	8005566 <DMA_SetConfig+0x10e>
 8005562:	2301      	movs	r3, #1
 8005564:	e000      	b.n	8005568 <DMA_SetConfig+0x110>
 8005566:	2300      	movs	r3, #0
 8005568:	2b00      	cmp	r3, #0
 800556a:	d00d      	beq.n	8005588 <DMA_SetConfig+0x130>
  {
    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 800556c:	68fb      	ldr	r3, [r7, #12]
 800556e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005570:	68fa      	ldr	r2, [r7, #12]
 8005572:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8005574:	605a      	str	r2, [r3, #4]

    if(hdma->DMAmuxRequestGen != 0U)
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800557a:	2b00      	cmp	r3, #0
 800557c:	d004      	beq.n	8005588 <DMA_SetConfig+0x130>
    {
      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005582:	68fa      	ldr	r2, [r7, #12]
 8005584:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8005586:	605a      	str	r2, [r3, #4]
    }
  }

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8005588:	68fb      	ldr	r3, [r7, #12]
 800558a:	681b      	ldr	r3, [r3, #0]
 800558c:	4a39      	ldr	r2, [pc, #228]	; (8005674 <DMA_SetConfig+0x21c>)
 800558e:	4293      	cmp	r3, r2
 8005590:	d04a      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	4a38      	ldr	r2, [pc, #224]	; (8005678 <DMA_SetConfig+0x220>)
 8005598:	4293      	cmp	r3, r2
 800559a:	d045      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	4a36      	ldr	r2, [pc, #216]	; (800567c <DMA_SetConfig+0x224>)
 80055a2:	4293      	cmp	r3, r2
 80055a4:	d040      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	4a35      	ldr	r2, [pc, #212]	; (8005680 <DMA_SetConfig+0x228>)
 80055ac:	4293      	cmp	r3, r2
 80055ae:	d03b      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	4a33      	ldr	r2, [pc, #204]	; (8005684 <DMA_SetConfig+0x22c>)
 80055b6:	4293      	cmp	r3, r2
 80055b8:	d036      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055ba:	68fb      	ldr	r3, [r7, #12]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	4a32      	ldr	r2, [pc, #200]	; (8005688 <DMA_SetConfig+0x230>)
 80055c0:	4293      	cmp	r3, r2
 80055c2:	d031      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055c4:	68fb      	ldr	r3, [r7, #12]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	4a30      	ldr	r2, [pc, #192]	; (800568c <DMA_SetConfig+0x234>)
 80055ca:	4293      	cmp	r3, r2
 80055cc:	d02c      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055ce:	68fb      	ldr	r3, [r7, #12]
 80055d0:	681b      	ldr	r3, [r3, #0]
 80055d2:	4a2f      	ldr	r2, [pc, #188]	; (8005690 <DMA_SetConfig+0x238>)
 80055d4:	4293      	cmp	r3, r2
 80055d6:	d027      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	681b      	ldr	r3, [r3, #0]
 80055dc:	4a2d      	ldr	r2, [pc, #180]	; (8005694 <DMA_SetConfig+0x23c>)
 80055de:	4293      	cmp	r3, r2
 80055e0:	d022      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	681b      	ldr	r3, [r3, #0]
 80055e6:	4a2c      	ldr	r2, [pc, #176]	; (8005698 <DMA_SetConfig+0x240>)
 80055e8:	4293      	cmp	r3, r2
 80055ea:	d01d      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055ec:	68fb      	ldr	r3, [r7, #12]
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	4a2a      	ldr	r2, [pc, #168]	; (800569c <DMA_SetConfig+0x244>)
 80055f2:	4293      	cmp	r3, r2
 80055f4:	d018      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055f6:	68fb      	ldr	r3, [r7, #12]
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	4a29      	ldr	r2, [pc, #164]	; (80056a0 <DMA_SetConfig+0x248>)
 80055fc:	4293      	cmp	r3, r2
 80055fe:	d013      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	4a27      	ldr	r2, [pc, #156]	; (80056a4 <DMA_SetConfig+0x24c>)
 8005606:	4293      	cmp	r3, r2
 8005608:	d00e      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 800560a:	68fb      	ldr	r3, [r7, #12]
 800560c:	681b      	ldr	r3, [r3, #0]
 800560e:	4a26      	ldr	r2, [pc, #152]	; (80056a8 <DMA_SetConfig+0x250>)
 8005610:	4293      	cmp	r3, r2
 8005612:	d009      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	681b      	ldr	r3, [r3, #0]
 8005618:	4a24      	ldr	r2, [pc, #144]	; (80056ac <DMA_SetConfig+0x254>)
 800561a:	4293      	cmp	r3, r2
 800561c:	d004      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	4a23      	ldr	r2, [pc, #140]	; (80056b0 <DMA_SetConfig+0x258>)
 8005624:	4293      	cmp	r3, r2
 8005626:	d101      	bne.n	800562c <DMA_SetConfig+0x1d4>
 8005628:	2301      	movs	r3, #1
 800562a:	e000      	b.n	800562e <DMA_SetConfig+0x1d6>
 800562c:	2300      	movs	r3, #0
 800562e:	2b00      	cmp	r3, #0
 8005630:	d059      	beq.n	80056e6 <DMA_SetConfig+0x28e>
  {
    /* Clear all interrupt flags at correct offset within the register */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8005632:	68fb      	ldr	r3, [r7, #12]
 8005634:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005636:	f003 031f 	and.w	r3, r3, #31
 800563a:	223f      	movs	r2, #63	; 0x3f
 800563c:	409a      	lsls	r2, r3
 800563e:	697b      	ldr	r3, [r7, #20]
 8005640:	609a      	str	r2, [r3, #8]

    /* Clear DBM bit */
    ((DMA_Stream_TypeDef *)hdma->Instance)->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8005642:	68fb      	ldr	r3, [r7, #12]
 8005644:	681b      	ldr	r3, [r3, #0]
 8005646:	681a      	ldr	r2, [r3, #0]
 8005648:	68fb      	ldr	r3, [r7, #12]
 800564a:	681b      	ldr	r3, [r3, #0]
 800564c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005650:	601a      	str	r2, [r3, #0]

    /* Configure DMA Stream data length */
    ((DMA_Stream_TypeDef *)hdma->Instance)->NDTR = DataLength;
 8005652:	68fb      	ldr	r3, [r7, #12]
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	683a      	ldr	r2, [r7, #0]
 8005658:	605a      	str	r2, [r3, #4]

    /* Peripheral to Memory */
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	689b      	ldr	r3, [r3, #8]
 800565e:	2b40      	cmp	r3, #64	; 0x40
 8005660:	d138      	bne.n	80056d4 <DMA_SetConfig+0x27c>
    {
      /* Configure DMA Stream destination address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = DstAddress;
 8005662:	68fb      	ldr	r3, [r7, #12]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	687a      	ldr	r2, [r7, #4]
 8005668:	609a      	str	r2, [r3, #8]

      /* Configure DMA Stream source address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = SrcAddress;
 800566a:	68fb      	ldr	r3, [r7, #12]
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	68ba      	ldr	r2, [r7, #8]
 8005670:	60da      	str	r2, [r3, #12]
  }
  else
  {
    /* Nothing To Do */
  }
}
 8005672:	e086      	b.n	8005782 <DMA_SetConfig+0x32a>
 8005674:	40020010 	.word	0x40020010
 8005678:	40020028 	.word	0x40020028
 800567c:	40020040 	.word	0x40020040
 8005680:	40020058 	.word	0x40020058
 8005684:	40020070 	.word	0x40020070
 8005688:	40020088 	.word	0x40020088
 800568c:	400200a0 	.word	0x400200a0
 8005690:	400200b8 	.word	0x400200b8
 8005694:	40020410 	.word	0x40020410
 8005698:	40020428 	.word	0x40020428
 800569c:	40020440 	.word	0x40020440
 80056a0:	40020458 	.word	0x40020458
 80056a4:	40020470 	.word	0x40020470
 80056a8:	40020488 	.word	0x40020488
 80056ac:	400204a0 	.word	0x400204a0
 80056b0:	400204b8 	.word	0x400204b8
 80056b4:	58025408 	.word	0x58025408
 80056b8:	5802541c 	.word	0x5802541c
 80056bc:	58025430 	.word	0x58025430
 80056c0:	58025444 	.word	0x58025444
 80056c4:	58025458 	.word	0x58025458
 80056c8:	5802546c 	.word	0x5802546c
 80056cc:	58025480 	.word	0x58025480
 80056d0:	58025494 	.word	0x58025494
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = SrcAddress;
 80056d4:	68fb      	ldr	r3, [r7, #12]
 80056d6:	681b      	ldr	r3, [r3, #0]
 80056d8:	68ba      	ldr	r2, [r7, #8]
 80056da:	609a      	str	r2, [r3, #8]
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = DstAddress;
 80056dc:	68fb      	ldr	r3, [r7, #12]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	687a      	ldr	r2, [r7, #4]
 80056e2:	60da      	str	r2, [r3, #12]
}
 80056e4:	e04d      	b.n	8005782 <DMA_SetConfig+0x32a>
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	681b      	ldr	r3, [r3, #0]
 80056ea:	4a29      	ldr	r2, [pc, #164]	; (8005790 <DMA_SetConfig+0x338>)
 80056ec:	4293      	cmp	r3, r2
 80056ee:	d022      	beq.n	8005736 <DMA_SetConfig+0x2de>
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	4a27      	ldr	r2, [pc, #156]	; (8005794 <DMA_SetConfig+0x33c>)
 80056f6:	4293      	cmp	r3, r2
 80056f8:	d01d      	beq.n	8005736 <DMA_SetConfig+0x2de>
 80056fa:	68fb      	ldr	r3, [r7, #12]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	4a26      	ldr	r2, [pc, #152]	; (8005798 <DMA_SetConfig+0x340>)
 8005700:	4293      	cmp	r3, r2
 8005702:	d018      	beq.n	8005736 <DMA_SetConfig+0x2de>
 8005704:	68fb      	ldr	r3, [r7, #12]
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	4a24      	ldr	r2, [pc, #144]	; (800579c <DMA_SetConfig+0x344>)
 800570a:	4293      	cmp	r3, r2
 800570c:	d013      	beq.n	8005736 <DMA_SetConfig+0x2de>
 800570e:	68fb      	ldr	r3, [r7, #12]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	4a23      	ldr	r2, [pc, #140]	; (80057a0 <DMA_SetConfig+0x348>)
 8005714:	4293      	cmp	r3, r2
 8005716:	d00e      	beq.n	8005736 <DMA_SetConfig+0x2de>
 8005718:	68fb      	ldr	r3, [r7, #12]
 800571a:	681b      	ldr	r3, [r3, #0]
 800571c:	4a21      	ldr	r2, [pc, #132]	; (80057a4 <DMA_SetConfig+0x34c>)
 800571e:	4293      	cmp	r3, r2
 8005720:	d009      	beq.n	8005736 <DMA_SetConfig+0x2de>
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	4a20      	ldr	r2, [pc, #128]	; (80057a8 <DMA_SetConfig+0x350>)
 8005728:	4293      	cmp	r3, r2
 800572a:	d004      	beq.n	8005736 <DMA_SetConfig+0x2de>
 800572c:	68fb      	ldr	r3, [r7, #12]
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	4a1e      	ldr	r2, [pc, #120]	; (80057ac <DMA_SetConfig+0x354>)
 8005732:	4293      	cmp	r3, r2
 8005734:	d101      	bne.n	800573a <DMA_SetConfig+0x2e2>
 8005736:	2301      	movs	r3, #1
 8005738:	e000      	b.n	800573c <DMA_SetConfig+0x2e4>
 800573a:	2300      	movs	r3, #0
 800573c:	2b00      	cmp	r3, #0
 800573e:	d020      	beq.n	8005782 <DMA_SetConfig+0x32a>
    regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005744:	f003 031f 	and.w	r3, r3, #31
 8005748:	2201      	movs	r2, #1
 800574a:	409a      	lsls	r2, r3
 800574c:	693b      	ldr	r3, [r7, #16]
 800574e:	605a      	str	r2, [r3, #4]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CNDTR = DataLength;
 8005750:	68fb      	ldr	r3, [r7, #12]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	683a      	ldr	r2, [r7, #0]
 8005756:	605a      	str	r2, [r3, #4]
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8005758:	68fb      	ldr	r3, [r7, #12]
 800575a:	689b      	ldr	r3, [r3, #8]
 800575c:	2b40      	cmp	r3, #64	; 0x40
 800575e:	d108      	bne.n	8005772 <DMA_SetConfig+0x31a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = DstAddress;
 8005760:	68fb      	ldr	r3, [r7, #12]
 8005762:	681b      	ldr	r3, [r3, #0]
 8005764:	687a      	ldr	r2, [r7, #4]
 8005766:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = SrcAddress;
 8005768:	68fb      	ldr	r3, [r7, #12]
 800576a:	681b      	ldr	r3, [r3, #0]
 800576c:	68ba      	ldr	r2, [r7, #8]
 800576e:	60da      	str	r2, [r3, #12]
}
 8005770:	e007      	b.n	8005782 <DMA_SetConfig+0x32a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = SrcAddress;
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	68ba      	ldr	r2, [r7, #8]
 8005778:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = DstAddress;
 800577a:	68fb      	ldr	r3, [r7, #12]
 800577c:	681b      	ldr	r3, [r3, #0]
 800577e:	687a      	ldr	r2, [r7, #4]
 8005780:	60da      	str	r2, [r3, #12]
}
 8005782:	bf00      	nop
 8005784:	371c      	adds	r7, #28
 8005786:	46bd      	mov	sp, r7
 8005788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800578c:	4770      	bx	lr
 800578e:	bf00      	nop
 8005790:	58025408 	.word	0x58025408
 8005794:	5802541c 	.word	0x5802541c
 8005798:	58025430 	.word	0x58025430
 800579c:	58025444 	.word	0x58025444
 80057a0:	58025458 	.word	0x58025458
 80057a4:	5802546c 	.word	0x5802546c
 80057a8:	58025480 	.word	0x58025480
 80057ac:	58025494 	.word	0x58025494

080057b0 <DMA_CalcBaseAndBitshift>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 80057b0:	b480      	push	{r7}
 80057b2:	b085      	sub	sp, #20
 80057b4:	af00      	add	r7, sp, #0
 80057b6:	6078      	str	r0, [r7, #4]
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	4a42      	ldr	r2, [pc, #264]	; (80058c8 <DMA_CalcBaseAndBitshift+0x118>)
 80057be:	4293      	cmp	r3, r2
 80057c0:	d04a      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	4a41      	ldr	r2, [pc, #260]	; (80058cc <DMA_CalcBaseAndBitshift+0x11c>)
 80057c8:	4293      	cmp	r3, r2
 80057ca:	d045      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	4a3f      	ldr	r2, [pc, #252]	; (80058d0 <DMA_CalcBaseAndBitshift+0x120>)
 80057d2:	4293      	cmp	r3, r2
 80057d4:	d040      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	4a3e      	ldr	r2, [pc, #248]	; (80058d4 <DMA_CalcBaseAndBitshift+0x124>)
 80057dc:	4293      	cmp	r3, r2
 80057de:	d03b      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	4a3c      	ldr	r2, [pc, #240]	; (80058d8 <DMA_CalcBaseAndBitshift+0x128>)
 80057e6:	4293      	cmp	r3, r2
 80057e8:	d036      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	681b      	ldr	r3, [r3, #0]
 80057ee:	4a3b      	ldr	r2, [pc, #236]	; (80058dc <DMA_CalcBaseAndBitshift+0x12c>)
 80057f0:	4293      	cmp	r3, r2
 80057f2:	d031      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	4a39      	ldr	r2, [pc, #228]	; (80058e0 <DMA_CalcBaseAndBitshift+0x130>)
 80057fa:	4293      	cmp	r3, r2
 80057fc:	d02c      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	4a38      	ldr	r2, [pc, #224]	; (80058e4 <DMA_CalcBaseAndBitshift+0x134>)
 8005804:	4293      	cmp	r3, r2
 8005806:	d027      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	681b      	ldr	r3, [r3, #0]
 800580c:	4a36      	ldr	r2, [pc, #216]	; (80058e8 <DMA_CalcBaseAndBitshift+0x138>)
 800580e:	4293      	cmp	r3, r2
 8005810:	d022      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	4a35      	ldr	r2, [pc, #212]	; (80058ec <DMA_CalcBaseAndBitshift+0x13c>)
 8005818:	4293      	cmp	r3, r2
 800581a:	d01d      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	681b      	ldr	r3, [r3, #0]
 8005820:	4a33      	ldr	r2, [pc, #204]	; (80058f0 <DMA_CalcBaseAndBitshift+0x140>)
 8005822:	4293      	cmp	r3, r2
 8005824:	d018      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	4a32      	ldr	r2, [pc, #200]	; (80058f4 <DMA_CalcBaseAndBitshift+0x144>)
 800582c:	4293      	cmp	r3, r2
 800582e:	d013      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	681b      	ldr	r3, [r3, #0]
 8005834:	4a30      	ldr	r2, [pc, #192]	; (80058f8 <DMA_CalcBaseAndBitshift+0x148>)
 8005836:	4293      	cmp	r3, r2
 8005838:	d00e      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	4a2f      	ldr	r2, [pc, #188]	; (80058fc <DMA_CalcBaseAndBitshift+0x14c>)
 8005840:	4293      	cmp	r3, r2
 8005842:	d009      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	4a2d      	ldr	r2, [pc, #180]	; (8005900 <DMA_CalcBaseAndBitshift+0x150>)
 800584a:	4293      	cmp	r3, r2
 800584c:	d004      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	4a2c      	ldr	r2, [pc, #176]	; (8005904 <DMA_CalcBaseAndBitshift+0x154>)
 8005854:	4293      	cmp	r3, r2
 8005856:	d101      	bne.n	800585c <DMA_CalcBaseAndBitshift+0xac>
 8005858:	2301      	movs	r3, #1
 800585a:	e000      	b.n	800585e <DMA_CalcBaseAndBitshift+0xae>
 800585c:	2300      	movs	r3, #0
 800585e:	2b00      	cmp	r3, #0
 8005860:	d024      	beq.n	80058ac <DMA_CalcBaseAndBitshift+0xfc>
  {
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	b2db      	uxtb	r3, r3
 8005868:	3b10      	subs	r3, #16
 800586a:	4a27      	ldr	r2, [pc, #156]	; (8005908 <DMA_CalcBaseAndBitshift+0x158>)
 800586c:	fba2 2303 	umull	r2, r3, r2, r3
 8005870:	091b      	lsrs	r3, r3, #4
 8005872:	60fb      	str	r3, [r7, #12]

    /* lookup table for necessary bitshift of flags within status registers */
    static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 8005874:	68fb      	ldr	r3, [r7, #12]
 8005876:	f003 0307 	and.w	r3, r3, #7
 800587a:	4a24      	ldr	r2, [pc, #144]	; (800590c <DMA_CalcBaseAndBitshift+0x15c>)
 800587c:	5cd3      	ldrb	r3, [r2, r3]
 800587e:	461a      	mov	r2, r3
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	65da      	str	r2, [r3, #92]	; 0x5c

    if (stream_number > 3U)
 8005884:	68fb      	ldr	r3, [r7, #12]
 8005886:	2b03      	cmp	r3, #3
 8005888:	d908      	bls.n	800589c <DMA_CalcBaseAndBitshift+0xec>
    {
      /* return pointer to HISR and HIFCR */
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	461a      	mov	r2, r3
 8005890:	4b1f      	ldr	r3, [pc, #124]	; (8005910 <DMA_CalcBaseAndBitshift+0x160>)
 8005892:	4013      	ands	r3, r2
 8005894:	1d1a      	adds	r2, r3, #4
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	659a      	str	r2, [r3, #88]	; 0x58
 800589a:	e00d      	b.n	80058b8 <DMA_CalcBaseAndBitshift+0x108>
    }
    else
    {
      /* return pointer to LISR and LIFCR */
      hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU));
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	681b      	ldr	r3, [r3, #0]
 80058a0:	461a      	mov	r2, r3
 80058a2:	4b1b      	ldr	r3, [pc, #108]	; (8005910 <DMA_CalcBaseAndBitshift+0x160>)
 80058a4:	4013      	ands	r3, r2
 80058a6:	687a      	ldr	r2, [r7, #4]
 80058a8:	6593      	str	r3, [r2, #88]	; 0x58
 80058aa:	e005      	b.n	80058b8 <DMA_CalcBaseAndBitshift+0x108>
    }
  }
  else /* BDMA instance(s) */
  {
    /* return pointer to ISR and IFCR */
    hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0xFFU));
 80058ac:	687b      	ldr	r3, [r7, #4]
 80058ae:	681b      	ldr	r3, [r3, #0]
 80058b0:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 80058b4:	687b      	ldr	r3, [r7, #4]
 80058b6:	659a      	str	r2, [r3, #88]	; 0x58
  }

  return hdma->StreamBaseAddress;
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 80058bc:	4618      	mov	r0, r3
 80058be:	3714      	adds	r7, #20
 80058c0:	46bd      	mov	sp, r7
 80058c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058c6:	4770      	bx	lr
 80058c8:	40020010 	.word	0x40020010
 80058cc:	40020028 	.word	0x40020028
 80058d0:	40020040 	.word	0x40020040
 80058d4:	40020058 	.word	0x40020058
 80058d8:	40020070 	.word	0x40020070
 80058dc:	40020088 	.word	0x40020088
 80058e0:	400200a0 	.word	0x400200a0
 80058e4:	400200b8 	.word	0x400200b8
 80058e8:	40020410 	.word	0x40020410
 80058ec:	40020428 	.word	0x40020428
 80058f0:	40020440 	.word	0x40020440
 80058f4:	40020458 	.word	0x40020458
 80058f8:	40020470 	.word	0x40020470
 80058fc:	40020488 	.word	0x40020488
 8005900:	400204a0 	.word	0x400204a0
 8005904:	400204b8 	.word	0x400204b8
 8005908:	aaaaaaab 	.word	0xaaaaaaab
 800590c:	08024ad8 	.word	0x08024ad8
 8005910:	fffffc00 	.word	0xfffffc00

08005914 <DMA_CheckFifoParam>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8005914:	b480      	push	{r7}
 8005916:	b085      	sub	sp, #20
 8005918:	af00      	add	r7, sp, #0
 800591a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800591c:	2300      	movs	r3, #0
 800591e:	73fb      	strb	r3, [r7, #15]

  /* Memory Data size equal to Byte */
  if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	699b      	ldr	r3, [r3, #24]
 8005924:	2b00      	cmp	r3, #0
 8005926:	d120      	bne.n	800596a <DMA_CheckFifoParam+0x56>
  {
    switch (hdma->Init.FIFOThreshold)
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800592c:	2b03      	cmp	r3, #3
 800592e:	d858      	bhi.n	80059e2 <DMA_CheckFifoParam+0xce>
 8005930:	a201      	add	r2, pc, #4	; (adr r2, 8005938 <DMA_CheckFifoParam+0x24>)
 8005932:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005936:	bf00      	nop
 8005938:	08005949 	.word	0x08005949
 800593c:	0800595b 	.word	0x0800595b
 8005940:	08005949 	.word	0x08005949
 8005944:	080059e3 	.word	0x080059e3
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:

        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800594c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005950:	2b00      	cmp	r3, #0
 8005952:	d048      	beq.n	80059e6 <DMA_CheckFifoParam+0xd2>
        {
          status = HAL_ERROR;
 8005954:	2301      	movs	r3, #1
 8005956:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005958:	e045      	b.n	80059e6 <DMA_CheckFifoParam+0xd2>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800595e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005962:	d142      	bne.n	80059ea <DMA_CheckFifoParam+0xd6>
        {
          status = HAL_ERROR;
 8005964:	2301      	movs	r3, #1
 8005966:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005968:	e03f      	b.n	80059ea <DMA_CheckFifoParam+0xd6>
        break;
    }
  }

  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	699b      	ldr	r3, [r3, #24]
 800596e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005972:	d123      	bne.n	80059bc <DMA_CheckFifoParam+0xa8>
  {
    switch (hdma->Init.FIFOThreshold)
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005978:	2b03      	cmp	r3, #3
 800597a:	d838      	bhi.n	80059ee <DMA_CheckFifoParam+0xda>
 800597c:	a201      	add	r2, pc, #4	; (adr r2, 8005984 <DMA_CheckFifoParam+0x70>)
 800597e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005982:	bf00      	nop
 8005984:	08005995 	.word	0x08005995
 8005988:	0800599b 	.word	0x0800599b
 800598c:	08005995 	.word	0x08005995
 8005990:	080059ad 	.word	0x080059ad
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
        status = HAL_ERROR;
 8005994:	2301      	movs	r3, #1
 8005996:	73fb      	strb	r3, [r7, #15]
        break;
 8005998:	e030      	b.n	80059fc <DMA_CheckFifoParam+0xe8>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800599e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80059a2:	2b00      	cmp	r3, #0
 80059a4:	d025      	beq.n	80059f2 <DMA_CheckFifoParam+0xde>
        {
          status = HAL_ERROR;
 80059a6:	2301      	movs	r3, #1
 80059a8:	73fb      	strb	r3, [r7, #15]
        }
        break;
 80059aa:	e022      	b.n	80059f2 <DMA_CheckFifoParam+0xde>

      case DMA_FIFO_THRESHOLD_FULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80059b0:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80059b4:	d11f      	bne.n	80059f6 <DMA_CheckFifoParam+0xe2>
        {
          status = HAL_ERROR;
 80059b6:	2301      	movs	r3, #1
 80059b8:	73fb      	strb	r3, [r7, #15]
        }
        break;
 80059ba:	e01c      	b.n	80059f6 <DMA_CheckFifoParam+0xe2>
  }

  /* Memory Data size equal to Word */
  else
  {
    switch (hdma->Init.FIFOThreshold)
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80059c0:	2b02      	cmp	r3, #2
 80059c2:	d902      	bls.n	80059ca <DMA_CheckFifoParam+0xb6>
 80059c4:	2b03      	cmp	r3, #3
 80059c6:	d003      	beq.n	80059d0 <DMA_CheckFifoParam+0xbc>
          status = HAL_ERROR;
        }
    break;

      default:
        break;
 80059c8:	e018      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        status = HAL_ERROR;
 80059ca:	2301      	movs	r3, #1
 80059cc:	73fb      	strb	r3, [r7, #15]
        break;
 80059ce:	e015      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80059d4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d00e      	beq.n	80059fa <DMA_CheckFifoParam+0xe6>
          status = HAL_ERROR;
 80059dc:	2301      	movs	r3, #1
 80059de:	73fb      	strb	r3, [r7, #15]
    break;
 80059e0:	e00b      	b.n	80059fa <DMA_CheckFifoParam+0xe6>
        break;
 80059e2:	bf00      	nop
 80059e4:	e00a      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059e6:	bf00      	nop
 80059e8:	e008      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059ea:	bf00      	nop
 80059ec:	e006      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059ee:	bf00      	nop
 80059f0:	e004      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059f2:	bf00      	nop
 80059f4:	e002      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059f6:	bf00      	nop
 80059f8:	e000      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
    break;
 80059fa:	bf00      	nop
    }
  }

  return status;
 80059fc:	7bfb      	ldrb	r3, [r7, #15]
}
 80059fe:	4618      	mov	r0, r3
 8005a00:	3714      	adds	r7, #20
 8005a02:	46bd      	mov	sp, r7
 8005a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a08:	4770      	bx	lr
 8005a0a:	bf00      	nop

08005a0c <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8005a0c:	b480      	push	{r7}
 8005a0e:	b085      	sub	sp, #20
 8005a10:	af00      	add	r7, sp, #0
 8005a12:	6078      	str	r0, [r7, #4]
  uint32_t stream_number;
  uint32_t stream_baseaddress = (uint32_t)((uint32_t*)hdma->Instance);
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	681b      	ldr	r3, [r3, #0]
 8005a18:	60bb      	str	r3, [r7, #8]

  if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	4a38      	ldr	r2, [pc, #224]	; (8005b00 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 8005a20:	4293      	cmp	r3, r2
 8005a22:	d022      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	4a36      	ldr	r2, [pc, #216]	; (8005b04 <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 8005a2a:	4293      	cmp	r3, r2
 8005a2c:	d01d      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	4a35      	ldr	r2, [pc, #212]	; (8005b08 <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 8005a34:	4293      	cmp	r3, r2
 8005a36:	d018      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	4a33      	ldr	r2, [pc, #204]	; (8005b0c <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 8005a3e:	4293      	cmp	r3, r2
 8005a40:	d013      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	4a32      	ldr	r2, [pc, #200]	; (8005b10 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 8005a48:	4293      	cmp	r3, r2
 8005a4a:	d00e      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	681b      	ldr	r3, [r3, #0]
 8005a50:	4a30      	ldr	r2, [pc, #192]	; (8005b14 <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 8005a52:	4293      	cmp	r3, r2
 8005a54:	d009      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	681b      	ldr	r3, [r3, #0]
 8005a5a:	4a2f      	ldr	r2, [pc, #188]	; (8005b18 <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 8005a5c:	4293      	cmp	r3, r2
 8005a5e:	d004      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	681b      	ldr	r3, [r3, #0]
 8005a64:	4a2d      	ldr	r2, [pc, #180]	; (8005b1c <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 8005a66:	4293      	cmp	r3, r2
 8005a68:	d101      	bne.n	8005a6e <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 8005a6a:	2301      	movs	r3, #1
 8005a6c:	e000      	b.n	8005a70 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 8005a6e:	2300      	movs	r3, #0
 8005a70:	2b00      	cmp	r3, #0
 8005a72:	d01a      	beq.n	8005aaa <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
  {
    /* BDMA Channels are connected to DMAMUX2 channels */
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 8U) / 20U;
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	b2db      	uxtb	r3, r3
 8005a7a:	3b08      	subs	r3, #8
 8005a7c:	4a28      	ldr	r2, [pc, #160]	; (8005b20 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 8005a7e:	fba2 2303 	umull	r2, r3, r2, r3
 8005a82:	091b      	lsrs	r3, r3, #4
 8005a84:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 8005a86:	68fa      	ldr	r2, [r7, #12]
 8005a88:	4b26      	ldr	r3, [pc, #152]	; (8005b24 <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 8005a8a:	4413      	add	r3, r2
 8005a8c:	009b      	lsls	r3, r3, #2
 8005a8e:	461a      	mov	r2, r3
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX2_ChannelStatus;
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	4a24      	ldr	r2, [pc, #144]	; (8005b28 <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 8005a98:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8005a9a:	68fb      	ldr	r3, [r7, #12]
 8005a9c:	f003 031f 	and.w	r3, r3, #31
 8005aa0:	2201      	movs	r2, #1
 8005aa2:	409a      	lsls	r2, r3
 8005aa4:	687b      	ldr	r3, [r7, #4]
 8005aa6:	669a      	str	r2, [r3, #104]	; 0x68
    }
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
  }
}
 8005aa8:	e024      	b.n	8005af4 <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	b2db      	uxtb	r3, r3
 8005ab0:	3b10      	subs	r3, #16
 8005ab2:	4a1e      	ldr	r2, [pc, #120]	; (8005b2c <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 8005ab4:	fba2 2303 	umull	r2, r3, r2, r3
 8005ab8:	091b      	lsrs	r3, r3, #4
 8005aba:	60fb      	str	r3, [r7, #12]
    if((stream_baseaddress <= ((uint32_t)DMA2_Stream7) ) && \
 8005abc:	68bb      	ldr	r3, [r7, #8]
 8005abe:	4a1c      	ldr	r2, [pc, #112]	; (8005b30 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 8005ac0:	4293      	cmp	r3, r2
 8005ac2:	d806      	bhi.n	8005ad2 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 8005ac4:	68bb      	ldr	r3, [r7, #8]
 8005ac6:	4a1b      	ldr	r2, [pc, #108]	; (8005b34 <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 8005ac8:	4293      	cmp	r3, r2
 8005aca:	d902      	bls.n	8005ad2 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
      stream_number += 8U;
 8005acc:	68fb      	ldr	r3, [r7, #12]
 8005ace:	3308      	adds	r3, #8
 8005ad0:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 8005ad2:	68fa      	ldr	r2, [r7, #12]
 8005ad4:	4b18      	ldr	r3, [pc, #96]	; (8005b38 <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 8005ad6:	4413      	add	r3, r2
 8005ad8:	009b      	lsls	r3, r3, #2
 8005ada:	461a      	mov	r2, r3
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	4a16      	ldr	r2, [pc, #88]	; (8005b3c <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 8005ae4:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8005ae6:	68fb      	ldr	r3, [r7, #12]
 8005ae8:	f003 031f 	and.w	r3, r3, #31
 8005aec:	2201      	movs	r2, #1
 8005aee:	409a      	lsls	r2, r3
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	669a      	str	r2, [r3, #104]	; 0x68
}
 8005af4:	bf00      	nop
 8005af6:	3714      	adds	r7, #20
 8005af8:	46bd      	mov	sp, r7
 8005afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005afe:	4770      	bx	lr
 8005b00:	58025408 	.word	0x58025408
 8005b04:	5802541c 	.word	0x5802541c
 8005b08:	58025430 	.word	0x58025430
 8005b0c:	58025444 	.word	0x58025444
 8005b10:	58025458 	.word	0x58025458
 8005b14:	5802546c 	.word	0x5802546c
 8005b18:	58025480 	.word	0x58025480
 8005b1c:	58025494 	.word	0x58025494
 8005b20:	cccccccd 	.word	0xcccccccd
 8005b24:	16009600 	.word	0x16009600
 8005b28:	58025880 	.word	0x58025880
 8005b2c:	aaaaaaab 	.word	0xaaaaaaab
 8005b30:	400204b8 	.word	0x400204b8
 8005b34:	4002040f 	.word	0x4002040f
 8005b38:	10008200 	.word	0x10008200
 8005b3c:	40020880 	.word	0x40020880

08005b40 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8005b40:	b480      	push	{r7}
 8005b42:	b085      	sub	sp, #20
 8005b44:	af00      	add	r7, sp, #0
 8005b46:	6078      	str	r0, [r7, #4]
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	685b      	ldr	r3, [r3, #4]
 8005b4c:	b2db      	uxtb	r3, r3
 8005b4e:	60fb      	str	r3, [r7, #12]

  if((request >= DMA_REQUEST_GENERATOR0) && (request <= DMA_REQUEST_GENERATOR7))
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	2b00      	cmp	r3, #0
 8005b54:	d04a      	beq.n	8005bec <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 8005b56:	68fb      	ldr	r3, [r7, #12]
 8005b58:	2b08      	cmp	r3, #8
 8005b5a:	d847      	bhi.n	8005bec <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	4a25      	ldr	r2, [pc, #148]	; (8005bf8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 8005b62:	4293      	cmp	r3, r2
 8005b64:	d022      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	4a24      	ldr	r2, [pc, #144]	; (8005bfc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 8005b6c:	4293      	cmp	r3, r2
 8005b6e:	d01d      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	4a22      	ldr	r2, [pc, #136]	; (8005c00 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 8005b76:	4293      	cmp	r3, r2
 8005b78:	d018      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b7a:	687b      	ldr	r3, [r7, #4]
 8005b7c:	681b      	ldr	r3, [r3, #0]
 8005b7e:	4a21      	ldr	r2, [pc, #132]	; (8005c04 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 8005b80:	4293      	cmp	r3, r2
 8005b82:	d013      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b84:	687b      	ldr	r3, [r7, #4]
 8005b86:	681b      	ldr	r3, [r3, #0]
 8005b88:	4a1f      	ldr	r2, [pc, #124]	; (8005c08 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 8005b8a:	4293      	cmp	r3, r2
 8005b8c:	d00e      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	4a1e      	ldr	r2, [pc, #120]	; (8005c0c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 8005b94:	4293      	cmp	r3, r2
 8005b96:	d009      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	4a1c      	ldr	r2, [pc, #112]	; (8005c10 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 8005b9e:	4293      	cmp	r3, r2
 8005ba0:	d004      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	4a1b      	ldr	r2, [pc, #108]	; (8005c14 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 8005ba8:	4293      	cmp	r3, r2
 8005baa:	d101      	bne.n	8005bb0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 8005bac:	2301      	movs	r3, #1
 8005bae:	e000      	b.n	8005bb2 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 8005bb0:	2300      	movs	r3, #0
 8005bb2:	2b00      	cmp	r3, #0
 8005bb4:	d00a      	beq.n	8005bcc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
    {
      /* BDMA Channels are connected to DMAMUX2 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_RequestGenerator0) + ((request - 1U) * 4U)));
 8005bb6:	68fa      	ldr	r2, [r7, #12]
 8005bb8:	4b17      	ldr	r3, [pc, #92]	; (8005c18 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 8005bba:	4413      	add	r3, r2
 8005bbc:	009b      	lsls	r3, r3, #2
 8005bbe:	461a      	mov	r2, r3
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	4a15      	ldr	r2, [pc, #84]	; (8005c1c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 8005bc8:	671a      	str	r2, [r3, #112]	; 0x70
 8005bca:	e009      	b.n	8005be0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
    }
    else
    {
      /* DMA1 and DMA2 Streams use DMAMUX1 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8005bcc:	68fa      	ldr	r2, [r7, #12]
 8005bce:	4b14      	ldr	r3, [pc, #80]	; (8005c20 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 8005bd0:	4413      	add	r3, r2
 8005bd2:	009b      	lsls	r3, r3, #2
 8005bd4:	461a      	mov	r2, r3
 8005bd6:	687b      	ldr	r3, [r7, #4]
 8005bd8:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	4a11      	ldr	r2, [pc, #68]	; (8005c24 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 8005bde:	671a      	str	r2, [r3, #112]	; 0x70
    }

    hdma->DMAmuxRequestGenStatusMask = 1UL << (request - 1U);
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	3b01      	subs	r3, #1
 8005be4:	2201      	movs	r2, #1
 8005be6:	409a      	lsls	r2, r3
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	675a      	str	r2, [r3, #116]	; 0x74
  }
}
 8005bec:	bf00      	nop
 8005bee:	3714      	adds	r7, #20
 8005bf0:	46bd      	mov	sp, r7
 8005bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bf6:	4770      	bx	lr
 8005bf8:	58025408 	.word	0x58025408
 8005bfc:	5802541c 	.word	0x5802541c
 8005c00:	58025430 	.word	0x58025430
 8005c04:	58025444 	.word	0x58025444
 8005c08:	58025458 	.word	0x58025458
 8005c0c:	5802546c 	.word	0x5802546c
 8005c10:	58025480 	.word	0x58025480
 8005c14:	58025494 	.word	0x58025494
 8005c18:	1600963f 	.word	0x1600963f
 8005c1c:	58025940 	.word	0x58025940
 8005c20:	1000823f 	.word	0x1000823f
 8005c24:	40020940 	.word	0x40020940

08005c28 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005c28:	b480      	push	{r7}
 8005c2a:	b089      	sub	sp, #36	; 0x24
 8005c2c:	af00      	add	r7, sp, #0
 8005c2e:	6078      	str	r0, [r7, #4]
 8005c30:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8005c32:	2300      	movs	r3, #0
 8005c34:	61fb      	str	r3, [r7, #28]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
 8005c36:	4b86      	ldr	r3, [pc, #536]	; (8005e50 <HAL_GPIO_Init+0x228>)
 8005c38:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8005c3a:	e18c      	b.n	8005f56 <HAL_GPIO_Init+0x32e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8005c3c:	683b      	ldr	r3, [r7, #0]
 8005c3e:	681a      	ldr	r2, [r3, #0]
 8005c40:	2101      	movs	r1, #1
 8005c42:	69fb      	ldr	r3, [r7, #28]
 8005c44:	fa01 f303 	lsl.w	r3, r1, r3
 8005c48:	4013      	ands	r3, r2
 8005c4a:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 8005c4c:	693b      	ldr	r3, [r7, #16]
 8005c4e:	2b00      	cmp	r3, #0
 8005c50:	f000 817e 	beq.w	8005f50 <HAL_GPIO_Init+0x328>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005c54:	683b      	ldr	r3, [r7, #0]
 8005c56:	685b      	ldr	r3, [r3, #4]
 8005c58:	f003 0303 	and.w	r3, r3, #3
 8005c5c:	2b01      	cmp	r3, #1
 8005c5e:	d005      	beq.n	8005c6c <HAL_GPIO_Init+0x44>
 8005c60:	683b      	ldr	r3, [r7, #0]
 8005c62:	685b      	ldr	r3, [r3, #4]
 8005c64:	f003 0303 	and.w	r3, r3, #3
 8005c68:	2b02      	cmp	r3, #2
 8005c6a:	d130      	bne.n	8005cce <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	689b      	ldr	r3, [r3, #8]
 8005c70:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8005c72:	69fb      	ldr	r3, [r7, #28]
 8005c74:	005b      	lsls	r3, r3, #1
 8005c76:	2203      	movs	r2, #3
 8005c78:	fa02 f303 	lsl.w	r3, r2, r3
 8005c7c:	43db      	mvns	r3, r3
 8005c7e:	69ba      	ldr	r2, [r7, #24]
 8005c80:	4013      	ands	r3, r2
 8005c82:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005c84:	683b      	ldr	r3, [r7, #0]
 8005c86:	68da      	ldr	r2, [r3, #12]
 8005c88:	69fb      	ldr	r3, [r7, #28]
 8005c8a:	005b      	lsls	r3, r3, #1
 8005c8c:	fa02 f303 	lsl.w	r3, r2, r3
 8005c90:	69ba      	ldr	r2, [r7, #24]
 8005c92:	4313      	orrs	r3, r2
 8005c94:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	69ba      	ldr	r2, [r7, #24]
 8005c9a:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	685b      	ldr	r3, [r3, #4]
 8005ca0:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8005ca2:	2201      	movs	r2, #1
 8005ca4:	69fb      	ldr	r3, [r7, #28]
 8005ca6:	fa02 f303 	lsl.w	r3, r2, r3
 8005caa:	43db      	mvns	r3, r3
 8005cac:	69ba      	ldr	r2, [r7, #24]
 8005cae:	4013      	ands	r3, r2
 8005cb0:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005cb2:	683b      	ldr	r3, [r7, #0]
 8005cb4:	685b      	ldr	r3, [r3, #4]
 8005cb6:	091b      	lsrs	r3, r3, #4
 8005cb8:	f003 0201 	and.w	r2, r3, #1
 8005cbc:	69fb      	ldr	r3, [r7, #28]
 8005cbe:	fa02 f303 	lsl.w	r3, r2, r3
 8005cc2:	69ba      	ldr	r2, [r7, #24]
 8005cc4:	4313      	orrs	r3, r2
 8005cc6:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	69ba      	ldr	r2, [r7, #24]
 8005ccc:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005cce:	683b      	ldr	r3, [r7, #0]
 8005cd0:	685b      	ldr	r3, [r3, #4]
 8005cd2:	f003 0303 	and.w	r3, r3, #3
 8005cd6:	2b03      	cmp	r3, #3
 8005cd8:	d017      	beq.n	8005d0a <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	68db      	ldr	r3, [r3, #12]
 8005cde:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8005ce0:	69fb      	ldr	r3, [r7, #28]
 8005ce2:	005b      	lsls	r3, r3, #1
 8005ce4:	2203      	movs	r2, #3
 8005ce6:	fa02 f303 	lsl.w	r3, r2, r3
 8005cea:	43db      	mvns	r3, r3
 8005cec:	69ba      	ldr	r2, [r7, #24]
 8005cee:	4013      	ands	r3, r2
 8005cf0:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005cf2:	683b      	ldr	r3, [r7, #0]
 8005cf4:	689a      	ldr	r2, [r3, #8]
 8005cf6:	69fb      	ldr	r3, [r7, #28]
 8005cf8:	005b      	lsls	r3, r3, #1
 8005cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8005cfe:	69ba      	ldr	r2, [r7, #24]
 8005d00:	4313      	orrs	r3, r2
 8005d02:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	69ba      	ldr	r2, [r7, #24]
 8005d08:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005d0a:	683b      	ldr	r3, [r7, #0]
 8005d0c:	685b      	ldr	r3, [r3, #4]
 8005d0e:	f003 0303 	and.w	r3, r3, #3
 8005d12:	2b02      	cmp	r3, #2
 8005d14:	d123      	bne.n	8005d5e <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8005d16:	69fb      	ldr	r3, [r7, #28]
 8005d18:	08da      	lsrs	r2, r3, #3
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	3208      	adds	r2, #8
 8005d1e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005d22:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8005d24:	69fb      	ldr	r3, [r7, #28]
 8005d26:	f003 0307 	and.w	r3, r3, #7
 8005d2a:	009b      	lsls	r3, r3, #2
 8005d2c:	220f      	movs	r2, #15
 8005d2e:	fa02 f303 	lsl.w	r3, r2, r3
 8005d32:	43db      	mvns	r3, r3
 8005d34:	69ba      	ldr	r2, [r7, #24]
 8005d36:	4013      	ands	r3, r2
 8005d38:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8005d3a:	683b      	ldr	r3, [r7, #0]
 8005d3c:	691a      	ldr	r2, [r3, #16]
 8005d3e:	69fb      	ldr	r3, [r7, #28]
 8005d40:	f003 0307 	and.w	r3, r3, #7
 8005d44:	009b      	lsls	r3, r3, #2
 8005d46:	fa02 f303 	lsl.w	r3, r2, r3
 8005d4a:	69ba      	ldr	r2, [r7, #24]
 8005d4c:	4313      	orrs	r3, r2
 8005d4e:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8005d50:	69fb      	ldr	r3, [r7, #28]
 8005d52:	08da      	lsrs	r2, r3, #3
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	3208      	adds	r2, #8
 8005d58:	69b9      	ldr	r1, [r7, #24]
 8005d5a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8005d64:	69fb      	ldr	r3, [r7, #28]
 8005d66:	005b      	lsls	r3, r3, #1
 8005d68:	2203      	movs	r2, #3
 8005d6a:	fa02 f303 	lsl.w	r3, r2, r3
 8005d6e:	43db      	mvns	r3, r3
 8005d70:	69ba      	ldr	r2, [r7, #24]
 8005d72:	4013      	ands	r3, r2
 8005d74:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005d76:	683b      	ldr	r3, [r7, #0]
 8005d78:	685b      	ldr	r3, [r3, #4]
 8005d7a:	f003 0203 	and.w	r2, r3, #3
 8005d7e:	69fb      	ldr	r3, [r7, #28]
 8005d80:	005b      	lsls	r3, r3, #1
 8005d82:	fa02 f303 	lsl.w	r3, r2, r3
 8005d86:	69ba      	ldr	r2, [r7, #24]
 8005d88:	4313      	orrs	r3, r2
 8005d8a:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	69ba      	ldr	r2, [r7, #24]
 8005d90:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005d92:	683b      	ldr	r3, [r7, #0]
 8005d94:	685b      	ldr	r3, [r3, #4]
 8005d96:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	f000 80d8 	beq.w	8005f50 <HAL_GPIO_Init+0x328>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005da0:	4b2c      	ldr	r3, [pc, #176]	; (8005e54 <HAL_GPIO_Init+0x22c>)
 8005da2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8005da6:	4a2b      	ldr	r2, [pc, #172]	; (8005e54 <HAL_GPIO_Init+0x22c>)
 8005da8:	f043 0302 	orr.w	r3, r3, #2
 8005dac:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8005db0:	4b28      	ldr	r3, [pc, #160]	; (8005e54 <HAL_GPIO_Init+0x22c>)
 8005db2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8005db6:	f003 0302 	and.w	r3, r3, #2
 8005dba:	60fb      	str	r3, [r7, #12]
 8005dbc:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8005dbe:	4a26      	ldr	r2, [pc, #152]	; (8005e58 <HAL_GPIO_Init+0x230>)
 8005dc0:	69fb      	ldr	r3, [r7, #28]
 8005dc2:	089b      	lsrs	r3, r3, #2
 8005dc4:	3302      	adds	r3, #2
 8005dc6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005dca:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8005dcc:	69fb      	ldr	r3, [r7, #28]
 8005dce:	f003 0303 	and.w	r3, r3, #3
 8005dd2:	009b      	lsls	r3, r3, #2
 8005dd4:	220f      	movs	r2, #15
 8005dd6:	fa02 f303 	lsl.w	r3, r2, r3
 8005dda:	43db      	mvns	r3, r3
 8005ddc:	69ba      	ldr	r2, [r7, #24]
 8005dde:	4013      	ands	r3, r2
 8005de0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	4a1d      	ldr	r2, [pc, #116]	; (8005e5c <HAL_GPIO_Init+0x234>)
 8005de6:	4293      	cmp	r3, r2
 8005de8:	d04a      	beq.n	8005e80 <HAL_GPIO_Init+0x258>
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	4a1c      	ldr	r2, [pc, #112]	; (8005e60 <HAL_GPIO_Init+0x238>)
 8005dee:	4293      	cmp	r3, r2
 8005df0:	d02b      	beq.n	8005e4a <HAL_GPIO_Init+0x222>
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	4a1b      	ldr	r2, [pc, #108]	; (8005e64 <HAL_GPIO_Init+0x23c>)
 8005df6:	4293      	cmp	r3, r2
 8005df8:	d025      	beq.n	8005e46 <HAL_GPIO_Init+0x21e>
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	4a1a      	ldr	r2, [pc, #104]	; (8005e68 <HAL_GPIO_Init+0x240>)
 8005dfe:	4293      	cmp	r3, r2
 8005e00:	d01f      	beq.n	8005e42 <HAL_GPIO_Init+0x21a>
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	4a19      	ldr	r2, [pc, #100]	; (8005e6c <HAL_GPIO_Init+0x244>)
 8005e06:	4293      	cmp	r3, r2
 8005e08:	d019      	beq.n	8005e3e <HAL_GPIO_Init+0x216>
 8005e0a:	687b      	ldr	r3, [r7, #4]
 8005e0c:	4a18      	ldr	r2, [pc, #96]	; (8005e70 <HAL_GPIO_Init+0x248>)
 8005e0e:	4293      	cmp	r3, r2
 8005e10:	d013      	beq.n	8005e3a <HAL_GPIO_Init+0x212>
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	4a17      	ldr	r2, [pc, #92]	; (8005e74 <HAL_GPIO_Init+0x24c>)
 8005e16:	4293      	cmp	r3, r2
 8005e18:	d00d      	beq.n	8005e36 <HAL_GPIO_Init+0x20e>
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	4a16      	ldr	r2, [pc, #88]	; (8005e78 <HAL_GPIO_Init+0x250>)
 8005e1e:	4293      	cmp	r3, r2
 8005e20:	d007      	beq.n	8005e32 <HAL_GPIO_Init+0x20a>
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	4a15      	ldr	r2, [pc, #84]	; (8005e7c <HAL_GPIO_Init+0x254>)
 8005e26:	4293      	cmp	r3, r2
 8005e28:	d101      	bne.n	8005e2e <HAL_GPIO_Init+0x206>
 8005e2a:	2309      	movs	r3, #9
 8005e2c:	e029      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e2e:	230a      	movs	r3, #10
 8005e30:	e027      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e32:	2307      	movs	r3, #7
 8005e34:	e025      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e36:	2306      	movs	r3, #6
 8005e38:	e023      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e3a:	2305      	movs	r3, #5
 8005e3c:	e021      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e3e:	2304      	movs	r3, #4
 8005e40:	e01f      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e42:	2303      	movs	r3, #3
 8005e44:	e01d      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e46:	2302      	movs	r3, #2
 8005e48:	e01b      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e4a:	2301      	movs	r3, #1
 8005e4c:	e019      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e4e:	bf00      	nop
 8005e50:	58000080 	.word	0x58000080
 8005e54:	58024400 	.word	0x58024400
 8005e58:	58000400 	.word	0x58000400
 8005e5c:	58020000 	.word	0x58020000
 8005e60:	58020400 	.word	0x58020400
 8005e64:	58020800 	.word	0x58020800
 8005e68:	58020c00 	.word	0x58020c00
 8005e6c:	58021000 	.word	0x58021000
 8005e70:	58021400 	.word	0x58021400
 8005e74:	58021800 	.word	0x58021800
 8005e78:	58021c00 	.word	0x58021c00
 8005e7c:	58022400 	.word	0x58022400
 8005e80:	2300      	movs	r3, #0
 8005e82:	69fa      	ldr	r2, [r7, #28]
 8005e84:	f002 0203 	and.w	r2, r2, #3
 8005e88:	0092      	lsls	r2, r2, #2
 8005e8a:	4093      	lsls	r3, r2
 8005e8c:	69ba      	ldr	r2, [r7, #24]
 8005e8e:	4313      	orrs	r3, r2
 8005e90:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005e92:	4938      	ldr	r1, [pc, #224]	; (8005f74 <HAL_GPIO_Init+0x34c>)
 8005e94:	69fb      	ldr	r3, [r7, #28]
 8005e96:	089b      	lsrs	r3, r3, #2
 8005e98:	3302      	adds	r3, #2
 8005e9a:	69ba      	ldr	r2, [r7, #24]
 8005e9c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8005ea0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005ea4:	681b      	ldr	r3, [r3, #0]
 8005ea6:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005ea8:	693b      	ldr	r3, [r7, #16]
 8005eaa:	43db      	mvns	r3, r3
 8005eac:	69ba      	ldr	r2, [r7, #24]
 8005eae:	4013      	ands	r3, r2
 8005eb0:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8005eb2:	683b      	ldr	r3, [r7, #0]
 8005eb4:	685b      	ldr	r3, [r3, #4]
 8005eb6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d003      	beq.n	8005ec6 <HAL_GPIO_Init+0x29e>
        {
          temp |= iocurrent;
 8005ebe:	69ba      	ldr	r2, [r7, #24]
 8005ec0:	693b      	ldr	r3, [r7, #16]
 8005ec2:	4313      	orrs	r3, r2
 8005ec4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 8005ec6:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005eca:	69bb      	ldr	r3, [r7, #24]
 8005ecc:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 8005ece:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005ed2:	685b      	ldr	r3, [r3, #4]
 8005ed4:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005ed6:	693b      	ldr	r3, [r7, #16]
 8005ed8:	43db      	mvns	r3, r3
 8005eda:	69ba      	ldr	r2, [r7, #24]
 8005edc:	4013      	ands	r3, r2
 8005ede:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005ee0:	683b      	ldr	r3, [r7, #0]
 8005ee2:	685b      	ldr	r3, [r3, #4]
 8005ee4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005ee8:	2b00      	cmp	r3, #0
 8005eea:	d003      	beq.n	8005ef4 <HAL_GPIO_Init+0x2cc>
        {
          temp |= iocurrent;
 8005eec:	69ba      	ldr	r2, [r7, #24]
 8005eee:	693b      	ldr	r3, [r7, #16]
 8005ef0:	4313      	orrs	r3, r2
 8005ef2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 8005ef4:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005ef8:	69bb      	ldr	r3, [r7, #24]
 8005efa:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 8005efc:	697b      	ldr	r3, [r7, #20]
 8005efe:	685b      	ldr	r3, [r3, #4]
 8005f00:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005f02:	693b      	ldr	r3, [r7, #16]
 8005f04:	43db      	mvns	r3, r3
 8005f06:	69ba      	ldr	r2, [r7, #24]
 8005f08:	4013      	ands	r3, r2
 8005f0a:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005f0c:	683b      	ldr	r3, [r7, #0]
 8005f0e:	685b      	ldr	r3, [r3, #4]
 8005f10:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	d003      	beq.n	8005f20 <HAL_GPIO_Init+0x2f8>
        {
          temp |= iocurrent;
 8005f18:	69ba      	ldr	r2, [r7, #24]
 8005f1a:	693b      	ldr	r3, [r7, #16]
 8005f1c:	4313      	orrs	r3, r2
 8005f1e:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 8005f20:	697b      	ldr	r3, [r7, #20]
 8005f22:	69ba      	ldr	r2, [r7, #24]
 8005f24:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 8005f26:	697b      	ldr	r3, [r7, #20]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005f2c:	693b      	ldr	r3, [r7, #16]
 8005f2e:	43db      	mvns	r3, r3
 8005f30:	69ba      	ldr	r2, [r7, #24]
 8005f32:	4013      	ands	r3, r2
 8005f34:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005f36:	683b      	ldr	r3, [r7, #0]
 8005f38:	685b      	ldr	r3, [r3, #4]
 8005f3a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005f3e:	2b00      	cmp	r3, #0
 8005f40:	d003      	beq.n	8005f4a <HAL_GPIO_Init+0x322>
        {
          temp |= iocurrent;
 8005f42:	69ba      	ldr	r2, [r7, #24]
 8005f44:	693b      	ldr	r3, [r7, #16]
 8005f46:	4313      	orrs	r3, r2
 8005f48:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 8005f4a:	697b      	ldr	r3, [r7, #20]
 8005f4c:	69ba      	ldr	r2, [r7, #24]
 8005f4e:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8005f50:	69fb      	ldr	r3, [r7, #28]
 8005f52:	3301      	adds	r3, #1
 8005f54:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8005f56:	683b      	ldr	r3, [r7, #0]
 8005f58:	681a      	ldr	r2, [r3, #0]
 8005f5a:	69fb      	ldr	r3, [r7, #28]
 8005f5c:	fa22 f303 	lsr.w	r3, r2, r3
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	f47f ae6b 	bne.w	8005c3c <HAL_GPIO_Init+0x14>
  }
}
 8005f66:	bf00      	nop
 8005f68:	bf00      	nop
 8005f6a:	3724      	adds	r7, #36	; 0x24
 8005f6c:	46bd      	mov	sp, r7
 8005f6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f72:	4770      	bx	lr
 8005f74:	58000400 	.word	0x58000400

08005f78 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8005f78:	b480      	push	{r7}
 8005f7a:	b083      	sub	sp, #12
 8005f7c:	af00      	add	r7, sp, #0
 8005f7e:	6078      	str	r0, [r7, #4]
 8005f80:	460b      	mov	r3, r1
 8005f82:	807b      	strh	r3, [r7, #2]
 8005f84:	4613      	mov	r3, r2
 8005f86:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8005f88:	787b      	ldrb	r3, [r7, #1]
 8005f8a:	2b00      	cmp	r3, #0
 8005f8c:	d003      	beq.n	8005f96 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8005f8e:	887a      	ldrh	r2, [r7, #2]
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 8005f94:	e003      	b.n	8005f9e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8005f96:	887b      	ldrh	r3, [r7, #2]
 8005f98:	041a      	lsls	r2, r3, #16
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	619a      	str	r2, [r3, #24]
}
 8005f9e:	bf00      	nop
 8005fa0:	370c      	adds	r7, #12
 8005fa2:	46bd      	mov	sp, r7
 8005fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fa8:	4770      	bx	lr
	...

08005fac <HAL_OSPI_Init>:
  *         in the OSPI_InitTypeDef and initialize the associated handle.
  * @param  hospi : OSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_Init(OSPI_HandleTypeDef *hospi)
{
 8005fac:	b580      	push	{r7, lr}
 8005fae:	b086      	sub	sp, #24
 8005fb0:	af02      	add	r7, sp, #8
 8005fb2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8005fb4:	2300      	movs	r3, #0
 8005fb6:	73fb      	strb	r3, [r7, #15]
  uint32_t tickstart = HAL_GetTick();
 8005fb8:	f7fb fd6a 	bl	8001a90 <HAL_GetTick>
 8005fbc:	60b8      	str	r0, [r7, #8]

  /* Check the OSPI handle allocation */
  if (hospi == NULL)
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	2b00      	cmp	r3, #0
 8005fc2:	d102      	bne.n	8005fca <HAL_OSPI_Init+0x1e>
  {
    status = HAL_ERROR;
 8005fc4:	2301      	movs	r3, #1
 8005fc6:	73fb      	strb	r3, [r7, #15]
 8005fc8:	e0a5      	b.n	8006116 <HAL_OSPI_Init+0x16a>
    assert_param(IS_OSPI_CS_BOUNDARY(hospi->Init.ChipSelectBoundary));
    assert_param(IS_OSPI_DLYBYP(hospi->Init.DelayBlockBypass));
    assert_param(IS_OSPI_MAXTRAN(hospi->Init.MaxTran));

    /* Initialize error code */
    hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	2200      	movs	r2, #0
 8005fce:	655a      	str	r2, [r3, #84]	; 0x54

    /* Check if the state is the reset state */
    if (hospi->State == HAL_OSPI_STATE_RESET)
 8005fd0:	687b      	ldr	r3, [r7, #4]
 8005fd2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005fd4:	2b00      	cmp	r3, #0
 8005fd6:	f040 809e 	bne.w	8006116 <HAL_OSPI_Init+0x16a>

      /* Init the low level hardware */
      hospi->MspInitCallback(hospi);
#else
      /* Initialization of the low level hardware */
      HAL_OSPI_MspInit(hospi);
 8005fda:	6878      	ldr	r0, [r7, #4]
 8005fdc:	f7fb f8aa 	bl	8001134 <HAL_OSPI_MspInit>
#endif /* defined (USE_HAL_OSPI_REGISTER_CALLBACKS) && (USE_HAL_OSPI_REGISTER_CALLBACKS == 1U) */

      /* Configure the default timeout for the OSPI memory access */
      (void)HAL_OSPI_SetTimeout(hospi, HAL_OSPI_TIMEOUT_DEFAULT_VALUE);
 8005fe0:	f241 3188 	movw	r1, #5000	; 0x1388
 8005fe4:	6878      	ldr	r0, [r7, #4]
 8005fe6:	f000 f89d 	bl	8006124 <HAL_OSPI_SetTimeout>

      /* Configure memory type, device size, chip select high time, delay block bypass,
         free running clock, clock mode */
      MODIFY_REG(hospi->Instance->DCR1,
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	681b      	ldr	r3, [r3, #0]
 8005fee:	689a      	ldr	r2, [r3, #8]
 8005ff0:	4b4b      	ldr	r3, [pc, #300]	; (8006120 <HAL_OSPI_Init+0x174>)
 8005ff2:	4013      	ands	r3, r2
 8005ff4:	687a      	ldr	r2, [r7, #4]
 8005ff6:	68d1      	ldr	r1, [r2, #12]
 8005ff8:	687a      	ldr	r2, [r7, #4]
 8005ffa:	6912      	ldr	r2, [r2, #16]
 8005ffc:	3a01      	subs	r2, #1
 8005ffe:	0412      	lsls	r2, r2, #16
 8006000:	4311      	orrs	r1, r2
 8006002:	687a      	ldr	r2, [r7, #4]
 8006004:	6952      	ldr	r2, [r2, #20]
 8006006:	3a01      	subs	r2, #1
 8006008:	0212      	lsls	r2, r2, #8
 800600a:	4311      	orrs	r1, r2
 800600c:	687a      	ldr	r2, [r7, #4]
 800600e:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8006010:	4311      	orrs	r1, r2
 8006012:	687a      	ldr	r2, [r7, #4]
 8006014:	69d2      	ldr	r2, [r2, #28]
 8006016:	4311      	orrs	r1, r2
 8006018:	687a      	ldr	r2, [r7, #4]
 800601a:	6812      	ldr	r2, [r2, #0]
 800601c:	430b      	orrs	r3, r1
 800601e:	6093      	str	r3, [r2, #8]
                 (hospi->Init.MemoryType | ((hospi->Init.DeviceSize - 1U) << OCTOSPI_DCR1_DEVSIZE_Pos) |
                  ((hospi->Init.ChipSelectHighTime - 1U) << OCTOSPI_DCR1_CSHT_Pos) |
                  hospi->Init.DelayBlockBypass | hospi->Init.ClockMode));

      /* Configure wrap size */
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	68db      	ldr	r3, [r3, #12]
 8006026:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 800602a:	687b      	ldr	r3, [r7, #4]
 800602c:	6a1a      	ldr	r2, [r3, #32]
 800602e:	687b      	ldr	r3, [r7, #4]
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	430a      	orrs	r2, r1
 8006034:	60da      	str	r2, [r3, #12]

      /* Configure chip select boundary and maximum transfer */
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800603a:	0419      	lsls	r1, r3, #16
                               (hospi->Init.MaxTran << OCTOSPI_DCR3_MAXTRAN_Pos));
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	430a      	orrs	r2, r1
 8006046:	611a      	str	r2, [r3, #16]

      /* Configure refresh */
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	681b      	ldr	r3, [r3, #0]
 800604c:	687a      	ldr	r2, [r7, #4]
 800604e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8006050:	615a      	str	r2, [r3, #20]

      /* Configure FIFO threshold */
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	681b      	ldr	r3, [r3, #0]
 8006056:	681b      	ldr	r3, [r3, #0]
 8006058:	f423 51f8 	bic.w	r1, r3, #7936	; 0x1f00
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	685b      	ldr	r3, [r3, #4]
 8006060:	3b01      	subs	r3, #1
 8006062:	021a      	lsls	r2, r3, #8
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	681b      	ldr	r3, [r3, #0]
 8006068:	430a      	orrs	r2, r1
 800606a:	601a      	str	r2, [r3, #0]

      /* Wait till busy flag is reset */
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006070:	9300      	str	r3, [sp, #0]
 8006072:	68bb      	ldr	r3, [r7, #8]
 8006074:	2200      	movs	r2, #0
 8006076:	2120      	movs	r1, #32
 8006078:	6878      	ldr	r0, [r7, #4]
 800607a:	f000 fd4b 	bl	8006b14 <OSPI_WaitFlagStateUntilTimeout>
 800607e:	4603      	mov	r3, r0
 8006080:	73fb      	strb	r3, [r7, #15]

      if (status == HAL_OK)
 8006082:	7bfb      	ldrb	r3, [r7, #15]
 8006084:	2b00      	cmp	r3, #0
 8006086:	d146      	bne.n	8006116 <HAL_OSPI_Init+0x16a>
      {
        /* Configure clock prescaler */
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8006088:	687b      	ldr	r3, [r7, #4]
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	68db      	ldr	r3, [r3, #12]
 800608e:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8006092:	687b      	ldr	r3, [r7, #4]
 8006094:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006096:	1e5a      	subs	r2, r3, #1
 8006098:	687b      	ldr	r3, [r7, #4]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	430a      	orrs	r2, r1
 800609e:	60da      	str	r2, [r3, #12]
                   ((hospi->Init.ClockPrescaler - 1U) << OCTOSPI_DCR2_PRESCALER_Pos));

        /* Configure Dual Quad mode */
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	681b      	ldr	r3, [r3, #0]
 80060a4:	681b      	ldr	r3, [r3, #0]
 80060a6:	f023 0140 	bic.w	r1, r3, #64	; 0x40
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	689a      	ldr	r2, [r3, #8]
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	681b      	ldr	r3, [r3, #0]
 80060b2:	430a      	orrs	r2, r1
 80060b4:	601a      	str	r2, [r3, #0]

        /* Configure sample shifting and delay hold quarter cycle */
        MODIFY_REG(hospi->Instance->TCR, (OCTOSPI_TCR_SSHIFT | OCTOSPI_TCR_DHQC),
 80060b6:	687b      	ldr	r3, [r7, #4]
 80060b8:	681b      	ldr	r3, [r3, #0]
 80060ba:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 80060be:	f023 41a0 	bic.w	r1, r3, #1342177280	; 0x50000000
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80060ca:	431a      	orrs	r2, r3
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	430a      	orrs	r2, r1
 80060d2:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
                   (hospi->Init.SampleShifting | hospi->Init.DelayHoldQuarterCycle));

        /* Enable OctoSPI */
        __HAL_OSPI_ENABLE(hospi);
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	681a      	ldr	r2, [r3, #0]
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	f042 0201 	orr.w	r2, r2, #1
 80060e4:	601a      	str	r2, [r3, #0]

        /* Enable free running clock if needed : must be done after OSPI enable */
        if (hospi->Init.FreeRunningClock == HAL_OSPI_FREERUNCLK_ENABLE)
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	699b      	ldr	r3, [r3, #24]
 80060ea:	2b02      	cmp	r3, #2
 80060ec:	d107      	bne.n	80060fe <HAL_OSPI_Init+0x152>
        {
          SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	689a      	ldr	r2, [r3, #8]
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	681b      	ldr	r3, [r3, #0]
 80060f8:	f042 0202 	orr.w	r2, r2, #2
 80060fc:	609a      	str	r2, [r3, #8]
        }

        /* Initialize the OSPI state */
        if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	68db      	ldr	r3, [r3, #12]
 8006102:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8006106:	d103      	bne.n	8006110 <HAL_OSPI_Init+0x164>
        {
          hospi->State = HAL_OSPI_STATE_HYPERBUS_INIT;
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	2201      	movs	r2, #1
 800610c:	651a      	str	r2, [r3, #80]	; 0x50
 800610e:	e002      	b.n	8006116 <HAL_OSPI_Init+0x16a>
        }
        else
        {
          hospi->State = HAL_OSPI_STATE_READY;
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	2202      	movs	r2, #2
 8006114:	651a      	str	r2, [r3, #80]	; 0x50
      }
    }
  }

  /* Return function status */
  return status;
 8006116:	7bfb      	ldrb	r3, [r7, #15]
}
 8006118:	4618      	mov	r0, r3
 800611a:	3710      	adds	r7, #16
 800611c:	46bd      	mov	sp, r7
 800611e:	bd80      	pop	{r7, pc}
 8006120:	f8e0f8f4 	.word	0xf8e0f8f4

08006124 <HAL_OSPI_SetTimeout>:
  * @param  hospi   : OSPI handle.
  * @param  Timeout : Timeout for the memory access.
  * @retval None
  */
HAL_StatusTypeDef HAL_OSPI_SetTimeout(OSPI_HandleTypeDef *hospi, uint32_t Timeout)
{
 8006124:	b480      	push	{r7}
 8006126:	b083      	sub	sp, #12
 8006128:	af00      	add	r7, sp, #0
 800612a:	6078      	str	r0, [r7, #4]
 800612c:	6039      	str	r1, [r7, #0]
  hospi->Timeout = Timeout;
 800612e:	687b      	ldr	r3, [r7, #4]
 8006130:	683a      	ldr	r2, [r7, #0]
 8006132:	659a      	str	r2, [r3, #88]	; 0x58
  return HAL_OK;
 8006134:	2300      	movs	r3, #0
}
 8006136:	4618      	mov	r0, r3
 8006138:	370c      	adds	r7, #12
 800613a:	46bd      	mov	sp, r7
 800613c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006140:	4770      	bx	lr
	...

08006144 <HAL_OSPIM_Config>:
  * @param  cfg     : Configuration of the IO Manager for the instance
  * @param  Timeout : Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPIM_Config(OSPI_HandleTypeDef *hospi, OSPIM_CfgTypeDef *cfg, uint32_t Timeout)
{
 8006144:	b580      	push	{r7, lr}
 8006146:	b094      	sub	sp, #80	; 0x50
 8006148:	af00      	add	r7, sp, #0
 800614a:	60f8      	str	r0, [r7, #12]
 800614c:	60b9      	str	r1, [r7, #8]
 800614e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8006150:	2300      	movs	r3, #0
 8006152:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
  uint32_t instance;
  uint8_t index;
  uint8_t ospi_enabled = 0U;
 8006156:	2300      	movs	r3, #0
 8006158:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
  assert_param(IS_OSPIM_PORT(cfg->NCSPort));
  assert_param(IS_OSPIM_IO_PORT(cfg->IOLowPort));
  assert_param(IS_OSPIM_IO_PORT(cfg->IOHighPort));
  assert_param(IS_OSPIM_REQ2ACKTIME(cfg->Req2AckTime));

  if (hospi->Instance == OCTOSPI1)
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	4a9d      	ldr	r2, [pc, #628]	; (80063d8 <HAL_OSPIM_Config+0x294>)
 8006162:	4293      	cmp	r3, r2
 8006164:	d105      	bne.n	8006172 <HAL_OSPIM_Config+0x2e>
  {
    instance = 0U;
 8006166:	2300      	movs	r3, #0
 8006168:	64bb      	str	r3, [r7, #72]	; 0x48
    other_instance = 1U;
 800616a:	2301      	movs	r3, #1
 800616c:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 8006170:	e004      	b.n	800617c <HAL_OSPIM_Config+0x38>
  }
  else
  {
    instance = 1U;
 8006172:	2301      	movs	r3, #1
 8006174:	64bb      	str	r3, [r7, #72]	; 0x48
    other_instance = 0U;
 8006176:	2300      	movs	r3, #0
 8006178:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
  }

  /**************** Get current configuration of the instances ****************/
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 800617c:	2300      	movs	r3, #0
 800617e:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 8006182:	e01d      	b.n	80061c0 <HAL_OSPIM_Config+0x7c>
  {
    if (OSPIM_GetConfig(index + 1U, &(IOM_cfg[index])) != HAL_OK)
 8006184:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8006188:	3301      	adds	r3, #1
 800618a:	b2d8      	uxtb	r0, r3
 800618c:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 8006190:	f107 0114 	add.w	r1, r7, #20
 8006194:	4613      	mov	r3, r2
 8006196:	005b      	lsls	r3, r3, #1
 8006198:	4413      	add	r3, r2
 800619a:	00db      	lsls	r3, r3, #3
 800619c:	440b      	add	r3, r1
 800619e:	4619      	mov	r1, r3
 80061a0:	f000 fcf0 	bl	8006b84 <OSPIM_GetConfig>
 80061a4:	4603      	mov	r3, r0
 80061a6:	2b00      	cmp	r3, #0
 80061a8:	d005      	beq.n	80061b6 <HAL_OSPIM_Config+0x72>
    {
      status = HAL_ERROR;
 80061aa:	2301      	movs	r3, #1
 80061ac:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 80061b0:	68fb      	ldr	r3, [r7, #12]
 80061b2:	2208      	movs	r2, #8
 80061b4:	655a      	str	r2, [r3, #84]	; 0x54
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 80061b6:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80061ba:	3301      	adds	r3, #1
 80061bc:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80061c0:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80061c4:	2b01      	cmp	r3, #1
 80061c6:	d9dd      	bls.n	8006184 <HAL_OSPIM_Config+0x40>
    }
  }

  if (status == HAL_OK)
 80061c8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80061cc:	2b00      	cmp	r3, #0
 80061ce:	f040 8495 	bne.w	8006afc <HAL_OSPIM_Config+0x9b8>
  {
    /********** Disable both OctoSPI to configure OctoSPI IO Manager **********/
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 80061d2:	4b81      	ldr	r3, [pc, #516]	; (80063d8 <HAL_OSPIM_Config+0x294>)
 80061d4:	681b      	ldr	r3, [r3, #0]
 80061d6:	f003 0301 	and.w	r3, r3, #1
 80061da:	2b00      	cmp	r3, #0
 80061dc:	d00b      	beq.n	80061f6 <HAL_OSPIM_Config+0xb2>
    {
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 80061de:	4b7e      	ldr	r3, [pc, #504]	; (80063d8 <HAL_OSPIM_Config+0x294>)
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	4a7d      	ldr	r2, [pc, #500]	; (80063d8 <HAL_OSPIM_Config+0x294>)
 80061e4:	f023 0301 	bic.w	r3, r3, #1
 80061e8:	6013      	str	r3, [r2, #0]
      ospi_enabled |= 0x1U;
 80061ea:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 80061ee:	f043 0301 	orr.w	r3, r3, #1
 80061f2:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
    }
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 80061f6:	4b79      	ldr	r3, [pc, #484]	; (80063dc <HAL_OSPIM_Config+0x298>)
 80061f8:	681b      	ldr	r3, [r3, #0]
 80061fa:	f003 0301 	and.w	r3, r3, #1
 80061fe:	2b00      	cmp	r3, #0
 8006200:	d00b      	beq.n	800621a <HAL_OSPIM_Config+0xd6>
    {
      CLEAR_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8006202:	4b76      	ldr	r3, [pc, #472]	; (80063dc <HAL_OSPIM_Config+0x298>)
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	4a75      	ldr	r2, [pc, #468]	; (80063dc <HAL_OSPIM_Config+0x298>)
 8006208:	f023 0301 	bic.w	r3, r3, #1
 800620c:	6013      	str	r3, [r2, #0]
      ospi_enabled |= 0x2U;
 800620e:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8006212:	f043 0302 	orr.w	r3, r3, #2
 8006216:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
    }

    /***************** Deactivation of previous configuration *****************/
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 800621a:	4971      	ldr	r1, [pc, #452]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800621c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800621e:	4613      	mov	r3, r2
 8006220:	005b      	lsls	r3, r3, #1
 8006222:	4413      	add	r3, r2
 8006224:	00db      	lsls	r3, r3, #3
 8006226:	3350      	adds	r3, #80	; 0x50
 8006228:	443b      	add	r3, r7
 800622a:	3b34      	subs	r3, #52	; 0x34
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	3b01      	subs	r3, #1
 8006230:	009b      	lsls	r3, r3, #2
 8006232:	440b      	add	r3, r1
 8006234:	6859      	ldr	r1, [r3, #4]
 8006236:	486a      	ldr	r0, [pc, #424]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 8006238:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800623a:	4613      	mov	r3, r2
 800623c:	005b      	lsls	r3, r3, #1
 800623e:	4413      	add	r3, r2
 8006240:	00db      	lsls	r3, r3, #3
 8006242:	3350      	adds	r3, #80	; 0x50
 8006244:	443b      	add	r3, r7
 8006246:	3b34      	subs	r3, #52	; 0x34
 8006248:	681b      	ldr	r3, [r3, #0]
 800624a:	3b01      	subs	r3, #1
 800624c:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 8006250:	009b      	lsls	r3, r3, #2
 8006252:	4403      	add	r3, r0
 8006254:	605a      	str	r2, [r3, #4]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006256:	4b62      	ldr	r3, [pc, #392]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	f003 0301 	and.w	r3, r3, #1
 800625e:	2b00      	cmp	r3, #0
 8006260:	f000 80c0 	beq.w	80063e4 <HAL_OSPIM_Config+0x2a0>
    {
      /* De-multiplexing should be performed */
      CLEAR_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8006264:	4b5e      	ldr	r3, [pc, #376]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	4a5d      	ldr	r2, [pc, #372]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800626a:	f023 0301 	bic.w	r3, r3, #1
 800626e:	6013      	str	r3, [r2, #0]

      if (other_instance == 1U)
 8006270:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 8006274:	2b01      	cmp	r3, #1
 8006276:	f040 8162 	bne.w	800653e <HAL_OSPIM_Config+0x3fa>
      {
        SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKSRC);
 800627a:	4959      	ldr	r1, [pc, #356]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800627c:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006280:	4613      	mov	r3, r2
 8006282:	005b      	lsls	r3, r3, #1
 8006284:	4413      	add	r3, r2
 8006286:	00db      	lsls	r3, r3, #3
 8006288:	3350      	adds	r3, #80	; 0x50
 800628a:	443b      	add	r3, r7
 800628c:	3b3c      	subs	r3, #60	; 0x3c
 800628e:	681b      	ldr	r3, [r3, #0]
 8006290:	3b01      	subs	r3, #1
 8006292:	009b      	lsls	r3, r3, #2
 8006294:	440b      	add	r3, r1
 8006296:	6859      	ldr	r1, [r3, #4]
 8006298:	4851      	ldr	r0, [pc, #324]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800629a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800629e:	4613      	mov	r3, r2
 80062a0:	005b      	lsls	r3, r3, #1
 80062a2:	4413      	add	r3, r2
 80062a4:	00db      	lsls	r3, r3, #3
 80062a6:	3350      	adds	r3, #80	; 0x50
 80062a8:	443b      	add	r3, r7
 80062aa:	3b3c      	subs	r3, #60	; 0x3c
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	3b01      	subs	r3, #1
 80062b0:	f041 0202 	orr.w	r2, r1, #2
 80062b4:	009b      	lsls	r3, r3, #2
 80062b6:	4403      	add	r3, r0
 80062b8:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 80062ba:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80062be:	4613      	mov	r3, r2
 80062c0:	005b      	lsls	r3, r3, #1
 80062c2:	4413      	add	r3, r2
 80062c4:	00db      	lsls	r3, r3, #3
 80062c6:	3350      	adds	r3, #80	; 0x50
 80062c8:	443b      	add	r3, r7
 80062ca:	3b38      	subs	r3, #56	; 0x38
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	2b00      	cmp	r3, #0
 80062d0:	d01f      	beq.n	8006312 <HAL_OSPIM_Config+0x1ce>
        {
          SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSSRC);
 80062d2:	4943      	ldr	r1, [pc, #268]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 80062d4:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80062d8:	4613      	mov	r3, r2
 80062da:	005b      	lsls	r3, r3, #1
 80062dc:	4413      	add	r3, r2
 80062de:	00db      	lsls	r3, r3, #3
 80062e0:	3350      	adds	r3, #80	; 0x50
 80062e2:	443b      	add	r3, r7
 80062e4:	3b38      	subs	r3, #56	; 0x38
 80062e6:	681b      	ldr	r3, [r3, #0]
 80062e8:	3b01      	subs	r3, #1
 80062ea:	009b      	lsls	r3, r3, #2
 80062ec:	440b      	add	r3, r1
 80062ee:	6859      	ldr	r1, [r3, #4]
 80062f0:	483b      	ldr	r0, [pc, #236]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 80062f2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80062f6:	4613      	mov	r3, r2
 80062f8:	005b      	lsls	r3, r3, #1
 80062fa:	4413      	add	r3, r2
 80062fc:	00db      	lsls	r3, r3, #3
 80062fe:	3350      	adds	r3, #80	; 0x50
 8006300:	443b      	add	r3, r7
 8006302:	3b38      	subs	r3, #56	; 0x38
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	3b01      	subs	r3, #1
 8006308:	f041 0220 	orr.w	r2, r1, #32
 800630c:	009b      	lsls	r3, r3, #2
 800630e:	4403      	add	r3, r0
 8006310:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006312:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006316:	4613      	mov	r3, r2
 8006318:	005b      	lsls	r3, r3, #1
 800631a:	4413      	add	r3, r2
 800631c:	00db      	lsls	r3, r3, #3
 800631e:	3350      	adds	r3, #80	; 0x50
 8006320:	443b      	add	r3, r7
 8006322:	3b30      	subs	r3, #48	; 0x30
 8006324:	681b      	ldr	r3, [r3, #0]
 8006326:	2b00      	cmp	r3, #0
 8006328:	d023      	beq.n	8006372 <HAL_OSPIM_Config+0x22e>
        {
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], \
 800632a:	492d      	ldr	r1, [pc, #180]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800632c:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006330:	4613      	mov	r3, r2
 8006332:	005b      	lsls	r3, r3, #1
 8006334:	4413      	add	r3, r2
 8006336:	00db      	lsls	r3, r3, #3
 8006338:	3350      	adds	r3, #80	; 0x50
 800633a:	443b      	add	r3, r7
 800633c:	3b30      	subs	r3, #48	; 0x30
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	3b01      	subs	r3, #1
 8006342:	f003 0301 	and.w	r3, r3, #1
 8006346:	009b      	lsls	r3, r3, #2
 8006348:	440b      	add	r3, r1
 800634a:	6859      	ldr	r1, [r3, #4]
 800634c:	4824      	ldr	r0, [pc, #144]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800634e:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006352:	4613      	mov	r3, r2
 8006354:	005b      	lsls	r3, r3, #1
 8006356:	4413      	add	r3, r2
 8006358:	00db      	lsls	r3, r3, #3
 800635a:	3350      	adds	r3, #80	; 0x50
 800635c:	443b      	add	r3, r7
 800635e:	3b30      	subs	r3, #48	; 0x30
 8006360:	681b      	ldr	r3, [r3, #0]
 8006362:	3b01      	subs	r3, #1
 8006364:	f003 0301 	and.w	r3, r3, #1
 8006368:	f441 2280 	orr.w	r2, r1, #262144	; 0x40000
 800636c:	009b      	lsls	r3, r3, #2
 800636e:	4403      	add	r3, r0
 8006370:	605a      	str	r2, [r3, #4]
                  OCTOSPIM_PCR_IOLSRC_1);
        }
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006372:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006376:	4613      	mov	r3, r2
 8006378:	005b      	lsls	r3, r3, #1
 800637a:	4413      	add	r3, r2
 800637c:	00db      	lsls	r3, r3, #3
 800637e:	3350      	adds	r3, #80	; 0x50
 8006380:	443b      	add	r3, r7
 8006382:	3b2c      	subs	r3, #44	; 0x2c
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	2b00      	cmp	r3, #0
 8006388:	f000 80d9 	beq.w	800653e <HAL_OSPIM_Config+0x3fa>
        {
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], \
 800638c:	4914      	ldr	r1, [pc, #80]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800638e:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006392:	4613      	mov	r3, r2
 8006394:	005b      	lsls	r3, r3, #1
 8006396:	4413      	add	r3, r2
 8006398:	00db      	lsls	r3, r3, #3
 800639a:	3350      	adds	r3, #80	; 0x50
 800639c:	443b      	add	r3, r7
 800639e:	3b2c      	subs	r3, #44	; 0x2c
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	3b01      	subs	r3, #1
 80063a4:	f003 0301 	and.w	r3, r3, #1
 80063a8:	009b      	lsls	r3, r3, #2
 80063aa:	440b      	add	r3, r1
 80063ac:	6859      	ldr	r1, [r3, #4]
 80063ae:	480c      	ldr	r0, [pc, #48]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 80063b0:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80063b4:	4613      	mov	r3, r2
 80063b6:	005b      	lsls	r3, r3, #1
 80063b8:	4413      	add	r3, r2
 80063ba:	00db      	lsls	r3, r3, #3
 80063bc:	3350      	adds	r3, #80	; 0x50
 80063be:	443b      	add	r3, r7
 80063c0:	3b2c      	subs	r3, #44	; 0x2c
 80063c2:	681b      	ldr	r3, [r3, #0]
 80063c4:	3b01      	subs	r3, #1
 80063c6:	f003 0301 	and.w	r3, r3, #1
 80063ca:	f041 6280 	orr.w	r2, r1, #67108864	; 0x4000000
 80063ce:	009b      	lsls	r3, r3, #2
 80063d0:	4403      	add	r3, r0
 80063d2:	605a      	str	r2, [r3, #4]
 80063d4:	e0b3      	b.n	800653e <HAL_OSPIM_Config+0x3fa>
 80063d6:	bf00      	nop
 80063d8:	52005000 	.word	0x52005000
 80063dc:	5200a000 	.word	0x5200a000
 80063e0:	5200b400 	.word	0x5200b400
        }
      }
    }
    else
    {
      if (IOM_cfg[instance].ClkPort != 0U)
 80063e4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80063e6:	4613      	mov	r3, r2
 80063e8:	005b      	lsls	r3, r3, #1
 80063ea:	4413      	add	r3, r2
 80063ec:	00db      	lsls	r3, r3, #3
 80063ee:	3350      	adds	r3, #80	; 0x50
 80063f0:	443b      	add	r3, r7
 80063f2:	3b3c      	subs	r3, #60	; 0x3c
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	2b00      	cmp	r3, #0
 80063f8:	f000 80a1 	beq.w	800653e <HAL_OSPIM_Config+0x3fa>
      {
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 80063fc:	4993      	ldr	r1, [pc, #588]	; (800664c <HAL_OSPIM_Config+0x508>)
 80063fe:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006400:	4613      	mov	r3, r2
 8006402:	005b      	lsls	r3, r3, #1
 8006404:	4413      	add	r3, r2
 8006406:	00db      	lsls	r3, r3, #3
 8006408:	3350      	adds	r3, #80	; 0x50
 800640a:	443b      	add	r3, r7
 800640c:	3b3c      	subs	r3, #60	; 0x3c
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	3b01      	subs	r3, #1
 8006412:	009b      	lsls	r3, r3, #2
 8006414:	440b      	add	r3, r1
 8006416:	6859      	ldr	r1, [r3, #4]
 8006418:	488c      	ldr	r0, [pc, #560]	; (800664c <HAL_OSPIM_Config+0x508>)
 800641a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800641c:	4613      	mov	r3, r2
 800641e:	005b      	lsls	r3, r3, #1
 8006420:	4413      	add	r3, r2
 8006422:	00db      	lsls	r3, r3, #3
 8006424:	3350      	adds	r3, #80	; 0x50
 8006426:	443b      	add	r3, r7
 8006428:	3b3c      	subs	r3, #60	; 0x3c
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	3b01      	subs	r3, #1
 800642e:	f021 0201 	bic.w	r2, r1, #1
 8006432:	009b      	lsls	r3, r3, #2
 8006434:	4403      	add	r3, r0
 8006436:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].DQSPort != 0U)
 8006438:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800643a:	4613      	mov	r3, r2
 800643c:	005b      	lsls	r3, r3, #1
 800643e:	4413      	add	r3, r2
 8006440:	00db      	lsls	r3, r3, #3
 8006442:	3350      	adds	r3, #80	; 0x50
 8006444:	443b      	add	r3, r7
 8006446:	3b38      	subs	r3, #56	; 0x38
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	2b00      	cmp	r3, #0
 800644c:	d01d      	beq.n	800648a <HAL_OSPIM_Config+0x346>
        {
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 800644e:	497f      	ldr	r1, [pc, #508]	; (800664c <HAL_OSPIM_Config+0x508>)
 8006450:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006452:	4613      	mov	r3, r2
 8006454:	005b      	lsls	r3, r3, #1
 8006456:	4413      	add	r3, r2
 8006458:	00db      	lsls	r3, r3, #3
 800645a:	3350      	adds	r3, #80	; 0x50
 800645c:	443b      	add	r3, r7
 800645e:	3b38      	subs	r3, #56	; 0x38
 8006460:	681b      	ldr	r3, [r3, #0]
 8006462:	3b01      	subs	r3, #1
 8006464:	009b      	lsls	r3, r3, #2
 8006466:	440b      	add	r3, r1
 8006468:	6859      	ldr	r1, [r3, #4]
 800646a:	4878      	ldr	r0, [pc, #480]	; (800664c <HAL_OSPIM_Config+0x508>)
 800646c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800646e:	4613      	mov	r3, r2
 8006470:	005b      	lsls	r3, r3, #1
 8006472:	4413      	add	r3, r2
 8006474:	00db      	lsls	r3, r3, #3
 8006476:	3350      	adds	r3, #80	; 0x50
 8006478:	443b      	add	r3, r7
 800647a:	3b38      	subs	r3, #56	; 0x38
 800647c:	681b      	ldr	r3, [r3, #0]
 800647e:	3b01      	subs	r3, #1
 8006480:	f021 0210 	bic.w	r2, r1, #16
 8006484:	009b      	lsls	r3, r3, #2
 8006486:	4403      	add	r3, r0
 8006488:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 800648a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800648c:	4613      	mov	r3, r2
 800648e:	005b      	lsls	r3, r3, #1
 8006490:	4413      	add	r3, r2
 8006492:	00db      	lsls	r3, r3, #3
 8006494:	3350      	adds	r3, #80	; 0x50
 8006496:	443b      	add	r3, r7
 8006498:	3b30      	subs	r3, #48	; 0x30
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	2b00      	cmp	r3, #0
 800649e:	d021      	beq.n	80064e4 <HAL_OSPIM_Config+0x3a0>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLEN);
 80064a0:	496a      	ldr	r1, [pc, #424]	; (800664c <HAL_OSPIM_Config+0x508>)
 80064a2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80064a4:	4613      	mov	r3, r2
 80064a6:	005b      	lsls	r3, r3, #1
 80064a8:	4413      	add	r3, r2
 80064aa:	00db      	lsls	r3, r3, #3
 80064ac:	3350      	adds	r3, #80	; 0x50
 80064ae:	443b      	add	r3, r7
 80064b0:	3b30      	subs	r3, #48	; 0x30
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	3b01      	subs	r3, #1
 80064b6:	f003 0301 	and.w	r3, r3, #1
 80064ba:	009b      	lsls	r3, r3, #2
 80064bc:	440b      	add	r3, r1
 80064be:	6859      	ldr	r1, [r3, #4]
 80064c0:	4862      	ldr	r0, [pc, #392]	; (800664c <HAL_OSPIM_Config+0x508>)
 80064c2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80064c4:	4613      	mov	r3, r2
 80064c6:	005b      	lsls	r3, r3, #1
 80064c8:	4413      	add	r3, r2
 80064ca:	00db      	lsls	r3, r3, #3
 80064cc:	3350      	adds	r3, #80	; 0x50
 80064ce:	443b      	add	r3, r7
 80064d0:	3b30      	subs	r3, #48	; 0x30
 80064d2:	681b      	ldr	r3, [r3, #0]
 80064d4:	3b01      	subs	r3, #1
 80064d6:	f003 0301 	and.w	r3, r3, #1
 80064da:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
 80064de:	009b      	lsls	r3, r3, #2
 80064e0:	4403      	add	r3, r0
 80064e2:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80064e4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80064e6:	4613      	mov	r3, r2
 80064e8:	005b      	lsls	r3, r3, #1
 80064ea:	4413      	add	r3, r2
 80064ec:	00db      	lsls	r3, r3, #3
 80064ee:	3350      	adds	r3, #80	; 0x50
 80064f0:	443b      	add	r3, r7
 80064f2:	3b2c      	subs	r3, #44	; 0x2c
 80064f4:	681b      	ldr	r3, [r3, #0]
 80064f6:	2b00      	cmp	r3, #0
 80064f8:	d021      	beq.n	800653e <HAL_OSPIM_Config+0x3fa>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 80064fa:	4954      	ldr	r1, [pc, #336]	; (800664c <HAL_OSPIM_Config+0x508>)
 80064fc:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80064fe:	4613      	mov	r3, r2
 8006500:	005b      	lsls	r3, r3, #1
 8006502:	4413      	add	r3, r2
 8006504:	00db      	lsls	r3, r3, #3
 8006506:	3350      	adds	r3, #80	; 0x50
 8006508:	443b      	add	r3, r7
 800650a:	3b2c      	subs	r3, #44	; 0x2c
 800650c:	681b      	ldr	r3, [r3, #0]
 800650e:	3b01      	subs	r3, #1
 8006510:	f003 0301 	and.w	r3, r3, #1
 8006514:	009b      	lsls	r3, r3, #2
 8006516:	440b      	add	r3, r1
 8006518:	6859      	ldr	r1, [r3, #4]
 800651a:	484c      	ldr	r0, [pc, #304]	; (800664c <HAL_OSPIM_Config+0x508>)
 800651c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800651e:	4613      	mov	r3, r2
 8006520:	005b      	lsls	r3, r3, #1
 8006522:	4413      	add	r3, r2
 8006524:	00db      	lsls	r3, r3, #3
 8006526:	3350      	adds	r3, #80	; 0x50
 8006528:	443b      	add	r3, r7
 800652a:	3b2c      	subs	r3, #44	; 0x2c
 800652c:	681b      	ldr	r3, [r3, #0]
 800652e:	3b01      	subs	r3, #1
 8006530:	f003 0301 	and.w	r3, r3, #1
 8006534:	f021 7280 	bic.w	r2, r1, #16777216	; 0x1000000
 8006538:	009b      	lsls	r3, r3, #2
 800653a:	4403      	add	r3, r0
 800653c:	605a      	str	r2, [r3, #4]
        }
      }
    }

    /********************* Deactivation of other instance *********************/
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 800653e:	68bb      	ldr	r3, [r7, #8]
 8006540:	6819      	ldr	r1, [r3, #0]
 8006542:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006546:	4613      	mov	r3, r2
 8006548:	005b      	lsls	r3, r3, #1
 800654a:	4413      	add	r3, r2
 800654c:	00db      	lsls	r3, r3, #3
 800654e:	3350      	adds	r3, #80	; 0x50
 8006550:	443b      	add	r3, r7
 8006552:	3b3c      	subs	r3, #60	; 0x3c
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	4299      	cmp	r1, r3
 8006558:	d038      	beq.n	80065cc <HAL_OSPIM_Config+0x488>
 800655a:	68bb      	ldr	r3, [r7, #8]
 800655c:	6859      	ldr	r1, [r3, #4]
 800655e:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006562:	4613      	mov	r3, r2
 8006564:	005b      	lsls	r3, r3, #1
 8006566:	4413      	add	r3, r2
 8006568:	00db      	lsls	r3, r3, #3
 800656a:	3350      	adds	r3, #80	; 0x50
 800656c:	443b      	add	r3, r7
 800656e:	3b38      	subs	r3, #56	; 0x38
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	4299      	cmp	r1, r3
 8006574:	d02a      	beq.n	80065cc <HAL_OSPIM_Config+0x488>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006576:	68bb      	ldr	r3, [r7, #8]
 8006578:	6899      	ldr	r1, [r3, #8]
 800657a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800657e:	4613      	mov	r3, r2
 8006580:	005b      	lsls	r3, r3, #1
 8006582:	4413      	add	r3, r2
 8006584:	00db      	lsls	r3, r3, #3
 8006586:	3350      	adds	r3, #80	; 0x50
 8006588:	443b      	add	r3, r7
 800658a:	3b34      	subs	r3, #52	; 0x34
 800658c:	681b      	ldr	r3, [r3, #0]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 800658e:	4299      	cmp	r1, r3
 8006590:	d01c      	beq.n	80065cc <HAL_OSPIM_Config+0x488>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006592:	68bb      	ldr	r3, [r7, #8]
 8006594:	68d9      	ldr	r1, [r3, #12]
 8006596:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800659a:	4613      	mov	r3, r2
 800659c:	005b      	lsls	r3, r3, #1
 800659e:	4413      	add	r3, r2
 80065a0:	00db      	lsls	r3, r3, #3
 80065a2:	3350      	adds	r3, #80	; 0x50
 80065a4:	443b      	add	r3, r7
 80065a6:	3b30      	subs	r3, #48	; 0x30
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	4299      	cmp	r1, r3
 80065ac:	d00e      	beq.n	80065cc <HAL_OSPIM_Config+0x488>
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 80065ae:	68bb      	ldr	r3, [r7, #8]
 80065b0:	6919      	ldr	r1, [r3, #16]
 80065b2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80065b6:	4613      	mov	r3, r2
 80065b8:	005b      	lsls	r3, r3, #1
 80065ba:	4413      	add	r3, r2
 80065bc:	00db      	lsls	r3, r3, #3
 80065be:	3350      	adds	r3, #80	; 0x50
 80065c0:	443b      	add	r3, r7
 80065c2:	3b2c      	subs	r3, #44	; 0x2c
 80065c4:	681b      	ldr	r3, [r3, #0]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 80065c6:	4299      	cmp	r1, r3
 80065c8:	f040 810e 	bne.w	80067e8 <HAL_OSPIM_Config+0x6a4>
    {
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 80065cc:	68bb      	ldr	r3, [r7, #8]
 80065ce:	6819      	ldr	r1, [r3, #0]
 80065d0:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80065d4:	4613      	mov	r3, r2
 80065d6:	005b      	lsls	r3, r3, #1
 80065d8:	4413      	add	r3, r2
 80065da:	00db      	lsls	r3, r3, #3
 80065dc:	3350      	adds	r3, #80	; 0x50
 80065de:	443b      	add	r3, r7
 80065e0:	3b3c      	subs	r3, #60	; 0x3c
 80065e2:	681b      	ldr	r3, [r3, #0]
 80065e4:	4299      	cmp	r1, r3
 80065e6:	d133      	bne.n	8006650 <HAL_OSPIM_Config+0x50c>
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 80065e8:	68bb      	ldr	r3, [r7, #8]
 80065ea:	6859      	ldr	r1, [r3, #4]
 80065ec:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80065f0:	4613      	mov	r3, r2
 80065f2:	005b      	lsls	r3, r3, #1
 80065f4:	4413      	add	r3, r2
 80065f6:	00db      	lsls	r3, r3, #3
 80065f8:	3350      	adds	r3, #80	; 0x50
 80065fa:	443b      	add	r3, r7
 80065fc:	3b38      	subs	r3, #56	; 0x38
 80065fe:	681b      	ldr	r3, [r3, #0]
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 8006600:	4299      	cmp	r1, r3
 8006602:	d125      	bne.n	8006650 <HAL_OSPIM_Config+0x50c>
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006604:	68bb      	ldr	r3, [r7, #8]
 8006606:	68d9      	ldr	r1, [r3, #12]
 8006608:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800660c:	4613      	mov	r3, r2
 800660e:	005b      	lsls	r3, r3, #1
 8006610:	4413      	add	r3, r2
 8006612:	00db      	lsls	r3, r3, #3
 8006614:	3350      	adds	r3, #80	; 0x50
 8006616:	443b      	add	r3, r7
 8006618:	3b30      	subs	r3, #48	; 0x30
 800661a:	681b      	ldr	r3, [r3, #0]
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 800661c:	4299      	cmp	r1, r3
 800661e:	d117      	bne.n	8006650 <HAL_OSPIM_Config+0x50c>
          (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006620:	68bb      	ldr	r3, [r7, #8]
 8006622:	6919      	ldr	r1, [r3, #16]
 8006624:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006628:	4613      	mov	r3, r2
 800662a:	005b      	lsls	r3, r3, #1
 800662c:	4413      	add	r3, r2
 800662e:	00db      	lsls	r3, r3, #3
 8006630:	3350      	adds	r3, #80	; 0x50
 8006632:	443b      	add	r3, r7
 8006634:	3b2c      	subs	r3, #44	; 0x2c
 8006636:	681b      	ldr	r3, [r3, #0]
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006638:	4299      	cmp	r1, r3
 800663a:	d109      	bne.n	8006650 <HAL_OSPIM_Config+0x50c>
      {
        /* Multiplexing should be performed */
        SET_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 800663c:	4b03      	ldr	r3, [pc, #12]	; (800664c <HAL_OSPIM_Config+0x508>)
 800663e:	681b      	ldr	r3, [r3, #0]
 8006640:	4a02      	ldr	r2, [pc, #8]	; (800664c <HAL_OSPIM_Config+0x508>)
 8006642:	f043 0301 	orr.w	r3, r3, #1
 8006646:	6013      	str	r3, [r2, #0]
 8006648:	e0ce      	b.n	80067e8 <HAL_OSPIM_Config+0x6a4>
 800664a:	bf00      	nop
 800664c:	5200b400 	.word	0x5200b400
      }
      else
      {
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 8006650:	49bb      	ldr	r1, [pc, #748]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006652:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006656:	4613      	mov	r3, r2
 8006658:	005b      	lsls	r3, r3, #1
 800665a:	4413      	add	r3, r2
 800665c:	00db      	lsls	r3, r3, #3
 800665e:	3350      	adds	r3, #80	; 0x50
 8006660:	443b      	add	r3, r7
 8006662:	3b3c      	subs	r3, #60	; 0x3c
 8006664:	681b      	ldr	r3, [r3, #0]
 8006666:	3b01      	subs	r3, #1
 8006668:	009b      	lsls	r3, r3, #2
 800666a:	440b      	add	r3, r1
 800666c:	6859      	ldr	r1, [r3, #4]
 800666e:	48b4      	ldr	r0, [pc, #720]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006670:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006674:	4613      	mov	r3, r2
 8006676:	005b      	lsls	r3, r3, #1
 8006678:	4413      	add	r3, r2
 800667a:	00db      	lsls	r3, r3, #3
 800667c:	3350      	adds	r3, #80	; 0x50
 800667e:	443b      	add	r3, r7
 8006680:	3b3c      	subs	r3, #60	; 0x3c
 8006682:	681b      	ldr	r3, [r3, #0]
 8006684:	3b01      	subs	r3, #1
 8006686:	f021 0201 	bic.w	r2, r1, #1
 800668a:	009b      	lsls	r3, r3, #2
 800668c:	4403      	add	r3, r0
 800668e:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8006690:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006694:	4613      	mov	r3, r2
 8006696:	005b      	lsls	r3, r3, #1
 8006698:	4413      	add	r3, r2
 800669a:	00db      	lsls	r3, r3, #3
 800669c:	3350      	adds	r3, #80	; 0x50
 800669e:	443b      	add	r3, r7
 80066a0:	3b38      	subs	r3, #56	; 0x38
 80066a2:	681b      	ldr	r3, [r3, #0]
 80066a4:	2b00      	cmp	r3, #0
 80066a6:	d01f      	beq.n	80066e8 <HAL_OSPIM_Config+0x5a4>
        {
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 80066a8:	49a5      	ldr	r1, [pc, #660]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80066aa:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066ae:	4613      	mov	r3, r2
 80066b0:	005b      	lsls	r3, r3, #1
 80066b2:	4413      	add	r3, r2
 80066b4:	00db      	lsls	r3, r3, #3
 80066b6:	3350      	adds	r3, #80	; 0x50
 80066b8:	443b      	add	r3, r7
 80066ba:	3b38      	subs	r3, #56	; 0x38
 80066bc:	681b      	ldr	r3, [r3, #0]
 80066be:	3b01      	subs	r3, #1
 80066c0:	009b      	lsls	r3, r3, #2
 80066c2:	440b      	add	r3, r1
 80066c4:	6859      	ldr	r1, [r3, #4]
 80066c6:	489e      	ldr	r0, [pc, #632]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80066c8:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066cc:	4613      	mov	r3, r2
 80066ce:	005b      	lsls	r3, r3, #1
 80066d0:	4413      	add	r3, r2
 80066d2:	00db      	lsls	r3, r3, #3
 80066d4:	3350      	adds	r3, #80	; 0x50
 80066d6:	443b      	add	r3, r7
 80066d8:	3b38      	subs	r3, #56	; 0x38
 80066da:	681b      	ldr	r3, [r3, #0]
 80066dc:	3b01      	subs	r3, #1
 80066de:	f021 0210 	bic.w	r2, r1, #16
 80066e2:	009b      	lsls	r3, r3, #2
 80066e4:	4403      	add	r3, r0
 80066e6:	605a      	str	r2, [r3, #4]
        }
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 80066e8:	4995      	ldr	r1, [pc, #596]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80066ea:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066ee:	4613      	mov	r3, r2
 80066f0:	005b      	lsls	r3, r3, #1
 80066f2:	4413      	add	r3, r2
 80066f4:	00db      	lsls	r3, r3, #3
 80066f6:	3350      	adds	r3, #80	; 0x50
 80066f8:	443b      	add	r3, r7
 80066fa:	3b34      	subs	r3, #52	; 0x34
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	3b01      	subs	r3, #1
 8006700:	009b      	lsls	r3, r3, #2
 8006702:	440b      	add	r3, r1
 8006704:	6859      	ldr	r1, [r3, #4]
 8006706:	488e      	ldr	r0, [pc, #568]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006708:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800670c:	4613      	mov	r3, r2
 800670e:	005b      	lsls	r3, r3, #1
 8006710:	4413      	add	r3, r2
 8006712:	00db      	lsls	r3, r3, #3
 8006714:	3350      	adds	r3, #80	; 0x50
 8006716:	443b      	add	r3, r7
 8006718:	3b34      	subs	r3, #52	; 0x34
 800671a:	681b      	ldr	r3, [r3, #0]
 800671c:	3b01      	subs	r3, #1
 800671e:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 8006722:	009b      	lsls	r3, r3, #2
 8006724:	4403      	add	r3, r0
 8006726:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006728:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800672c:	4613      	mov	r3, r2
 800672e:	005b      	lsls	r3, r3, #1
 8006730:	4413      	add	r3, r2
 8006732:	00db      	lsls	r3, r3, #3
 8006734:	3350      	adds	r3, #80	; 0x50
 8006736:	443b      	add	r3, r7
 8006738:	3b30      	subs	r3, #48	; 0x30
 800673a:	681b      	ldr	r3, [r3, #0]
 800673c:	2b00      	cmp	r3, #0
 800673e:	d023      	beq.n	8006788 <HAL_OSPIM_Config+0x644>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006740:	497f      	ldr	r1, [pc, #508]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006742:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006746:	4613      	mov	r3, r2
 8006748:	005b      	lsls	r3, r3, #1
 800674a:	4413      	add	r3, r2
 800674c:	00db      	lsls	r3, r3, #3
 800674e:	3350      	adds	r3, #80	; 0x50
 8006750:	443b      	add	r3, r7
 8006752:	3b30      	subs	r3, #48	; 0x30
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	3b01      	subs	r3, #1
 8006758:	f003 0301 	and.w	r3, r3, #1
 800675c:	009b      	lsls	r3, r3, #2
 800675e:	440b      	add	r3, r1
 8006760:	6859      	ldr	r1, [r3, #4]
 8006762:	4877      	ldr	r0, [pc, #476]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006764:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006768:	4613      	mov	r3, r2
 800676a:	005b      	lsls	r3, r3, #1
 800676c:	4413      	add	r3, r2
 800676e:	00db      	lsls	r3, r3, #3
 8006770:	3350      	adds	r3, #80	; 0x50
 8006772:	443b      	add	r3, r7
 8006774:	3b30      	subs	r3, #48	; 0x30
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	3b01      	subs	r3, #1
 800677a:	f003 0301 	and.w	r3, r3, #1
 800677e:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
 8006782:	009b      	lsls	r3, r3, #2
 8006784:	4403      	add	r3, r0
 8006786:	605a      	str	r2, [r3, #4]
                    OCTOSPIM_PCR_IOLEN);
        }
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006788:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800678c:	4613      	mov	r3, r2
 800678e:	005b      	lsls	r3, r3, #1
 8006790:	4413      	add	r3, r2
 8006792:	00db      	lsls	r3, r3, #3
 8006794:	3350      	adds	r3, #80	; 0x50
 8006796:	443b      	add	r3, r7
 8006798:	3b2c      	subs	r3, #44	; 0x2c
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	2b00      	cmp	r3, #0
 800679e:	d023      	beq.n	80067e8 <HAL_OSPIM_Config+0x6a4>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 80067a0:	4967      	ldr	r1, [pc, #412]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80067a2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80067a6:	4613      	mov	r3, r2
 80067a8:	005b      	lsls	r3, r3, #1
 80067aa:	4413      	add	r3, r2
 80067ac:	00db      	lsls	r3, r3, #3
 80067ae:	3350      	adds	r3, #80	; 0x50
 80067b0:	443b      	add	r3, r7
 80067b2:	3b2c      	subs	r3, #44	; 0x2c
 80067b4:	681b      	ldr	r3, [r3, #0]
 80067b6:	3b01      	subs	r3, #1
 80067b8:	f003 0301 	and.w	r3, r3, #1
 80067bc:	009b      	lsls	r3, r3, #2
 80067be:	440b      	add	r3, r1
 80067c0:	6859      	ldr	r1, [r3, #4]
 80067c2:	485f      	ldr	r0, [pc, #380]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80067c4:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80067c8:	4613      	mov	r3, r2
 80067ca:	005b      	lsls	r3, r3, #1
 80067cc:	4413      	add	r3, r2
 80067ce:	00db      	lsls	r3, r3, #3
 80067d0:	3350      	adds	r3, #80	; 0x50
 80067d2:	443b      	add	r3, r7
 80067d4:	3b2c      	subs	r3, #44	; 0x2c
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	3b01      	subs	r3, #1
 80067da:	f003 0301 	and.w	r3, r3, #1
 80067de:	f021 7280 	bic.w	r2, r1, #16777216	; 0x1000000
 80067e2:	009b      	lsls	r3, r3, #2
 80067e4:	4403      	add	r3, r0
 80067e6:	605a      	str	r2, [r3, #4]
        }
      }
    }

    /******************** Activation of new configuration *********************/
    MODIFY_REG(OCTOSPIM->PCR[(cfg->NCSPort - 1U)], (OCTOSPIM_PCR_NCSEN | OCTOSPIM_PCR_NCSSRC),
 80067e8:	4a55      	ldr	r2, [pc, #340]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80067ea:	68bb      	ldr	r3, [r7, #8]
 80067ec:	689b      	ldr	r3, [r3, #8]
 80067ee:	3b01      	subs	r3, #1
 80067f0:	009b      	lsls	r3, r3, #2
 80067f2:	4413      	add	r3, r2
 80067f4:	685b      	ldr	r3, [r3, #4]
 80067f6:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80067fa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80067fc:	025b      	lsls	r3, r3, #9
 80067fe:	431a      	orrs	r2, r3
 8006800:	494f      	ldr	r1, [pc, #316]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006802:	68bb      	ldr	r3, [r7, #8]
 8006804:	689b      	ldr	r3, [r3, #8]
 8006806:	3b01      	subs	r3, #1
 8006808:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800680c:	009b      	lsls	r3, r3, #2
 800680e:	440b      	add	r3, r1
 8006810:	605a      	str	r2, [r3, #4]
               (OCTOSPIM_PCR_NCSEN | (instance << OCTOSPIM_PCR_NCSSRC_Pos)));

    if ((cfg->Req2AckTime - 1U) > ((OCTOSPIM->CR & OCTOSPIM_CR_REQ2ACK_TIME) >> OCTOSPIM_CR_REQ2ACK_TIME_Pos))
 8006812:	68bb      	ldr	r3, [r7, #8]
 8006814:	695b      	ldr	r3, [r3, #20]
 8006816:	1e5a      	subs	r2, r3, #1
 8006818:	4b49      	ldr	r3, [pc, #292]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800681a:	681b      	ldr	r3, [r3, #0]
 800681c:	0c1b      	lsrs	r3, r3, #16
 800681e:	b2db      	uxtb	r3, r3
 8006820:	429a      	cmp	r2, r3
 8006822:	d90a      	bls.n	800683a <HAL_OSPIM_Config+0x6f6>
    {
      MODIFY_REG(OCTOSPIM->CR, OCTOSPIM_CR_REQ2ACK_TIME, ((cfg->Req2AckTime - 1U) << OCTOSPIM_CR_REQ2ACK_TIME_Pos));
 8006824:	4b46      	ldr	r3, [pc, #280]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	f423 027f 	bic.w	r2, r3, #16711680	; 0xff0000
 800682c:	68bb      	ldr	r3, [r7, #8]
 800682e:	695b      	ldr	r3, [r3, #20]
 8006830:	3b01      	subs	r3, #1
 8006832:	041b      	lsls	r3, r3, #16
 8006834:	4942      	ldr	r1, [pc, #264]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006836:	4313      	orrs	r3, r2
 8006838:	600b      	str	r3, [r1, #0]
    }

    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 800683a:	4b41      	ldr	r3, [pc, #260]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	f003 0301 	and.w	r3, r3, #1
 8006842:	2b00      	cmp	r3, #0
 8006844:	f000 809a 	beq.w	800697c <HAL_OSPIM_Config+0x838>
    {
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006848:	4a3d      	ldr	r2, [pc, #244]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800684a:	68bb      	ldr	r3, [r7, #8]
 800684c:	681b      	ldr	r3, [r3, #0]
 800684e:	3b01      	subs	r3, #1
 8006850:	009b      	lsls	r3, r3, #2
 8006852:	4413      	add	r3, r2
 8006854:	685b      	ldr	r3, [r3, #4]
 8006856:	f023 0203 	bic.w	r2, r3, #3
 800685a:	4939      	ldr	r1, [pc, #228]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800685c:	68bb      	ldr	r3, [r7, #8]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	3b01      	subs	r3, #1
 8006862:	f042 0201 	orr.w	r2, r2, #1
 8006866:	009b      	lsls	r3, r3, #2
 8006868:	440b      	add	r3, r1
 800686a:	605a      	str	r2, [r3, #4]
      if (cfg->DQSPort != 0U)
 800686c:	68bb      	ldr	r3, [r7, #8]
 800686e:	685b      	ldr	r3, [r3, #4]
 8006870:	2b00      	cmp	r3, #0
 8006872:	d011      	beq.n	8006898 <HAL_OSPIM_Config+0x754>
      {
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC), OCTOSPIM_PCR_DQSEN);
 8006874:	4a32      	ldr	r2, [pc, #200]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006876:	68bb      	ldr	r3, [r7, #8]
 8006878:	685b      	ldr	r3, [r3, #4]
 800687a:	3b01      	subs	r3, #1
 800687c:	009b      	lsls	r3, r3, #2
 800687e:	4413      	add	r3, r2
 8006880:	685b      	ldr	r3, [r3, #4]
 8006882:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8006886:	492e      	ldr	r1, [pc, #184]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006888:	68bb      	ldr	r3, [r7, #8]
 800688a:	685b      	ldr	r3, [r3, #4]
 800688c:	3b01      	subs	r3, #1
 800688e:	f042 0210 	orr.w	r2, r2, #16
 8006892:	009b      	lsls	r3, r3, #2
 8006894:	440b      	add	r3, r1
 8006896:	605a      	str	r2, [r3, #4]
      }

      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006898:	68bb      	ldr	r3, [r7, #8]
 800689a:	68db      	ldr	r3, [r3, #12]
 800689c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80068a0:	2b00      	cmp	r3, #0
 80068a2:	d016      	beq.n	80068d2 <HAL_OSPIM_Config+0x78e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 80068a4:	4a26      	ldr	r2, [pc, #152]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80068a6:	68bb      	ldr	r3, [r7, #8]
 80068a8:	68db      	ldr	r3, [r3, #12]
 80068aa:	3b01      	subs	r3, #1
 80068ac:	f003 0301 	and.w	r3, r3, #1
 80068b0:	009b      	lsls	r3, r3, #2
 80068b2:	4413      	add	r3, r2
 80068b4:	685b      	ldr	r3, [r3, #4]
 80068b6:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 80068ba:	4921      	ldr	r1, [pc, #132]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80068bc:	68bb      	ldr	r3, [r7, #8]
 80068be:	68db      	ldr	r3, [r3, #12]
 80068c0:	3b01      	subs	r3, #1
 80068c2:	f003 0301 	and.w	r3, r3, #1
 80068c6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80068ca:	009b      	lsls	r3, r3, #2
 80068cc:	440b      	add	r3, r1
 80068ce:	605a      	str	r2, [r3, #4]
 80068d0:	e019      	b.n	8006906 <HAL_OSPIM_Config+0x7c2>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC), OCTOSPIM_PCR_IOLEN);
      }
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80068d2:	68bb      	ldr	r3, [r7, #8]
 80068d4:	68db      	ldr	r3, [r3, #12]
 80068d6:	2b00      	cmp	r3, #0
 80068d8:	d015      	beq.n	8006906 <HAL_OSPIM_Config+0x7c2>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 80068da:	4a19      	ldr	r2, [pc, #100]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80068dc:	68bb      	ldr	r3, [r7, #8]
 80068de:	68db      	ldr	r3, [r3, #12]
 80068e0:	3b01      	subs	r3, #1
 80068e2:	f003 0301 	and.w	r3, r3, #1
 80068e6:	009b      	lsls	r3, r3, #2
 80068e8:	4413      	add	r3, r2
 80068ea:	685b      	ldr	r3, [r3, #4]
 80068ec:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 80068f0:	4913      	ldr	r1, [pc, #76]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80068f2:	68bb      	ldr	r3, [r7, #8]
 80068f4:	68db      	ldr	r3, [r3, #12]
 80068f6:	3b01      	subs	r3, #1
 80068f8:	f003 0301 	and.w	r3, r3, #1
 80068fc:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006900:	009b      	lsls	r3, r3, #2
 8006902:	440b      	add	r3, r1
 8006904:	605a      	str	r2, [r3, #4]
      else
      {
        /* Nothing to do */
      }

      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006906:	68bb      	ldr	r3, [r7, #8]
 8006908:	691b      	ldr	r3, [r3, #16]
 800690a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800690e:	2b00      	cmp	r3, #0
 8006910:	d018      	beq.n	8006944 <HAL_OSPIM_Config+0x800>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006912:	4a0b      	ldr	r2, [pc, #44]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006914:	68bb      	ldr	r3, [r7, #8]
 8006916:	691b      	ldr	r3, [r3, #16]
 8006918:	3b01      	subs	r3, #1
 800691a:	f003 0301 	and.w	r3, r3, #1
 800691e:	009b      	lsls	r3, r3, #2
 8006920:	4413      	add	r3, r2
 8006922:	685b      	ldr	r3, [r3, #4]
 8006924:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8006928:	4905      	ldr	r1, [pc, #20]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800692a:	68bb      	ldr	r3, [r7, #8]
 800692c:	691b      	ldr	r3, [r3, #16]
 800692e:	3b01      	subs	r3, #1
 8006930:	f003 0301 	and.w	r3, r3, #1
 8006934:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8006938:	009b      	lsls	r3, r3, #2
 800693a:	440b      	add	r3, r1
 800693c:	605a      	str	r2, [r3, #4]
 800693e:	e0c5      	b.n	8006acc <HAL_OSPIM_Config+0x988>
 8006940:	5200b400 	.word	0x5200b400
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC), (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC_0));
      }
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006944:	68bb      	ldr	r3, [r7, #8]
 8006946:	691b      	ldr	r3, [r3, #16]
 8006948:	2b00      	cmp	r3, #0
 800694a:	f000 80bf 	beq.w	8006acc <HAL_OSPIM_Config+0x988>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 800694e:	4a6e      	ldr	r2, [pc, #440]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006950:	68bb      	ldr	r3, [r7, #8]
 8006952:	691b      	ldr	r3, [r3, #16]
 8006954:	3b01      	subs	r3, #1
 8006956:	f003 0301 	and.w	r3, r3, #1
 800695a:	009b      	lsls	r3, r3, #2
 800695c:	4413      	add	r3, r2
 800695e:	685b      	ldr	r3, [r3, #4]
 8006960:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006964:	4968      	ldr	r1, [pc, #416]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006966:	68bb      	ldr	r3, [r7, #8]
 8006968:	691b      	ldr	r3, [r3, #16]
 800696a:	3b01      	subs	r3, #1
 800696c:	f003 0301 	and.w	r3, r3, #1
 8006970:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8006974:	009b      	lsls	r3, r3, #2
 8006976:	440b      	add	r3, r1
 8006978:	605a      	str	r2, [r3, #4]
 800697a:	e0a7      	b.n	8006acc <HAL_OSPIM_Config+0x988>
        /* Nothing to do */
      }
    }
    else
    {
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC),
 800697c:	4a62      	ldr	r2, [pc, #392]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 800697e:	68bb      	ldr	r3, [r7, #8]
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	3b01      	subs	r3, #1
 8006984:	009b      	lsls	r3, r3, #2
 8006986:	4413      	add	r3, r2
 8006988:	685b      	ldr	r3, [r3, #4]
 800698a:	f023 0203 	bic.w	r2, r3, #3
 800698e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006990:	005b      	lsls	r3, r3, #1
 8006992:	431a      	orrs	r2, r3
 8006994:	495c      	ldr	r1, [pc, #368]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006996:	68bb      	ldr	r3, [r7, #8]
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	3b01      	subs	r3, #1
 800699c:	f042 0201 	orr.w	r2, r2, #1
 80069a0:	009b      	lsls	r3, r3, #2
 80069a2:	440b      	add	r3, r1
 80069a4:	605a      	str	r2, [r3, #4]
                 (OCTOSPIM_PCR_CLKEN | (instance << OCTOSPIM_PCR_CLKSRC_Pos)));
      if (cfg->DQSPort != 0U)
 80069a6:	68bb      	ldr	r3, [r7, #8]
 80069a8:	685b      	ldr	r3, [r3, #4]
 80069aa:	2b00      	cmp	r3, #0
 80069ac:	d014      	beq.n	80069d8 <HAL_OSPIM_Config+0x894>
      {
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC),
 80069ae:	4a56      	ldr	r2, [pc, #344]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 80069b0:	68bb      	ldr	r3, [r7, #8]
 80069b2:	685b      	ldr	r3, [r3, #4]
 80069b4:	3b01      	subs	r3, #1
 80069b6:	009b      	lsls	r3, r3, #2
 80069b8:	4413      	add	r3, r2
 80069ba:	685b      	ldr	r3, [r3, #4]
 80069bc:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80069c0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80069c2:	015b      	lsls	r3, r3, #5
 80069c4:	431a      	orrs	r2, r3
 80069c6:	4950      	ldr	r1, [pc, #320]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 80069c8:	68bb      	ldr	r3, [r7, #8]
 80069ca:	685b      	ldr	r3, [r3, #4]
 80069cc:	3b01      	subs	r3, #1
 80069ce:	f042 0210 	orr.w	r2, r2, #16
 80069d2:	009b      	lsls	r3, r3, #2
 80069d4:	440b      	add	r3, r1
 80069d6:	605a      	str	r2, [r3, #4]
                   (OCTOSPIM_PCR_DQSEN | (instance << OCTOSPIM_PCR_DQSSRC_Pos)));
      }

      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 80069d8:	68bb      	ldr	r3, [r7, #8]
 80069da:	68db      	ldr	r3, [r3, #12]
 80069dc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80069e0:	2b00      	cmp	r3, #0
 80069e2:	d019      	beq.n	8006a18 <HAL_OSPIM_Config+0x8d4>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 80069e4:	4a48      	ldr	r2, [pc, #288]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 80069e6:	68bb      	ldr	r3, [r7, #8]
 80069e8:	68db      	ldr	r3, [r3, #12]
 80069ea:	3b01      	subs	r3, #1
 80069ec:	f003 0301 	and.w	r3, r3, #1
 80069f0:	009b      	lsls	r3, r3, #2
 80069f2:	4413      	add	r3, r2
 80069f4:	685b      	ldr	r3, [r3, #4]
 80069f6:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 80069fa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80069fc:	049b      	lsls	r3, r3, #18
 80069fe:	431a      	orrs	r2, r3
 8006a00:	4941      	ldr	r1, [pc, #260]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a02:	68bb      	ldr	r3, [r7, #8]
 8006a04:	68db      	ldr	r3, [r3, #12]
 8006a06:	3b01      	subs	r3, #1
 8006a08:	f003 0301 	and.w	r3, r3, #1
 8006a0c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006a10:	009b      	lsls	r3, r3, #2
 8006a12:	440b      	add	r3, r1
 8006a14:	605a      	str	r2, [r3, #4]
 8006a16:	e01c      	b.n	8006a52 <HAL_OSPIM_Config+0x90e>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC),
                   (OCTOSPIM_PCR_IOLEN | (instance << (OCTOSPIM_PCR_IOLSRC_Pos + 1U))));
      }
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006a18:	68bb      	ldr	r3, [r7, #8]
 8006a1a:	68db      	ldr	r3, [r3, #12]
 8006a1c:	2b00      	cmp	r3, #0
 8006a1e:	d018      	beq.n	8006a52 <HAL_OSPIM_Config+0x90e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006a20:	4a39      	ldr	r2, [pc, #228]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a22:	68bb      	ldr	r3, [r7, #8]
 8006a24:	68db      	ldr	r3, [r3, #12]
 8006a26:	3b01      	subs	r3, #1
 8006a28:	f003 0301 	and.w	r3, r3, #1
 8006a2c:	009b      	lsls	r3, r3, #2
 8006a2e:	4413      	add	r3, r2
 8006a30:	685b      	ldr	r3, [r3, #4]
 8006a32:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006a36:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006a38:	069b      	lsls	r3, r3, #26
 8006a3a:	431a      	orrs	r2, r3
 8006a3c:	4932      	ldr	r1, [pc, #200]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a3e:	68bb      	ldr	r3, [r7, #8]
 8006a40:	68db      	ldr	r3, [r3, #12]
 8006a42:	3b01      	subs	r3, #1
 8006a44:	f003 0301 	and.w	r3, r3, #1
 8006a48:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006a4c:	009b      	lsls	r3, r3, #2
 8006a4e:	440b      	add	r3, r1
 8006a50:	605a      	str	r2, [r3, #4]
      else
      {
        /* Nothing to do */
      }

      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006a52:	68bb      	ldr	r3, [r7, #8]
 8006a54:	691b      	ldr	r3, [r3, #16]
 8006a56:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006a5a:	2b00      	cmp	r3, #0
 8006a5c:	d019      	beq.n	8006a92 <HAL_OSPIM_Config+0x94e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006a5e:	4a2a      	ldr	r2, [pc, #168]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a60:	68bb      	ldr	r3, [r7, #8]
 8006a62:	691b      	ldr	r3, [r3, #16]
 8006a64:	3b01      	subs	r3, #1
 8006a66:	f003 0301 	and.w	r3, r3, #1
 8006a6a:	009b      	lsls	r3, r3, #2
 8006a6c:	4413      	add	r3, r2
 8006a6e:	685b      	ldr	r3, [r3, #4]
 8006a70:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8006a74:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006a76:	049b      	lsls	r3, r3, #18
 8006a78:	431a      	orrs	r2, r3
 8006a7a:	4923      	ldr	r1, [pc, #140]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a7c:	68bb      	ldr	r3, [r7, #8]
 8006a7e:	691b      	ldr	r3, [r3, #16]
 8006a80:	3b01      	subs	r3, #1
 8006a82:	f003 0301 	and.w	r3, r3, #1
 8006a86:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8006a8a:	009b      	lsls	r3, r3, #2
 8006a8c:	440b      	add	r3, r1
 8006a8e:	605a      	str	r2, [r3, #4]
 8006a90:	e01c      	b.n	8006acc <HAL_OSPIM_Config+0x988>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC),
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC_0 | (instance << (OCTOSPIM_PCR_IOLSRC_Pos + 1U))));
      }
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006a92:	68bb      	ldr	r3, [r7, #8]
 8006a94:	691b      	ldr	r3, [r3, #16]
 8006a96:	2b00      	cmp	r3, #0
 8006a98:	d018      	beq.n	8006acc <HAL_OSPIM_Config+0x988>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006a9a:	4a1b      	ldr	r2, [pc, #108]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a9c:	68bb      	ldr	r3, [r7, #8]
 8006a9e:	691b      	ldr	r3, [r3, #16]
 8006aa0:	3b01      	subs	r3, #1
 8006aa2:	f003 0301 	and.w	r3, r3, #1
 8006aa6:	009b      	lsls	r3, r3, #2
 8006aa8:	4413      	add	r3, r2
 8006aaa:	685b      	ldr	r3, [r3, #4]
 8006aac:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006ab0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006ab2:	069b      	lsls	r3, r3, #26
 8006ab4:	431a      	orrs	r2, r3
 8006ab6:	4914      	ldr	r1, [pc, #80]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006ab8:	68bb      	ldr	r3, [r7, #8]
 8006aba:	691b      	ldr	r3, [r3, #16]
 8006abc:	3b01      	subs	r3, #1
 8006abe:	f003 0301 	and.w	r3, r3, #1
 8006ac2:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8006ac6:	009b      	lsls	r3, r3, #2
 8006ac8:	440b      	add	r3, r1
 8006aca:	605a      	str	r2, [r3, #4]
        /* Nothing to do */
      }
    }

    /******* Re-enable both OctoSPI after configure OctoSPI IO Manager ********/
    if ((ospi_enabled & 0x1U) != 0U)
 8006acc:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8006ad0:	f003 0301 	and.w	r3, r3, #1
 8006ad4:	2b00      	cmp	r3, #0
 8006ad6:	d005      	beq.n	8006ae4 <HAL_OSPIM_Config+0x9a0>
    {
      SET_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006ad8:	4b0c      	ldr	r3, [pc, #48]	; (8006b0c <HAL_OSPIM_Config+0x9c8>)
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	4a0b      	ldr	r2, [pc, #44]	; (8006b0c <HAL_OSPIM_Config+0x9c8>)
 8006ade:	f043 0301 	orr.w	r3, r3, #1
 8006ae2:	6013      	str	r3, [r2, #0]
    }
    if ((ospi_enabled & 0x2U) != 0U)
 8006ae4:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8006ae8:	f003 0302 	and.w	r3, r3, #2
 8006aec:	2b00      	cmp	r3, #0
 8006aee:	d005      	beq.n	8006afc <HAL_OSPIM_Config+0x9b8>
    {
      SET_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8006af0:	4b07      	ldr	r3, [pc, #28]	; (8006b10 <HAL_OSPIM_Config+0x9cc>)
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	4a06      	ldr	r2, [pc, #24]	; (8006b10 <HAL_OSPIM_Config+0x9cc>)
 8006af6:	f043 0301 	orr.w	r3, r3, #1
 8006afa:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return function status */
  return status;
 8006afc:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
}
 8006b00:	4618      	mov	r0, r3
 8006b02:	3750      	adds	r7, #80	; 0x50
 8006b04:	46bd      	mov	sp, r7
 8006b06:	bd80      	pop	{r7, pc}
 8006b08:	5200b400 	.word	0x5200b400
 8006b0c:	52005000 	.word	0x52005000
 8006b10:	5200a000 	.word	0x5200a000

08006b14 <OSPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart : Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_WaitFlagStateUntilTimeout(OSPI_HandleTypeDef *hospi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8006b14:	b580      	push	{r7, lr}
 8006b16:	b084      	sub	sp, #16
 8006b18:	af00      	add	r7, sp, #0
 8006b1a:	60f8      	str	r0, [r7, #12]
 8006b1c:	60b9      	str	r1, [r7, #8]
 8006b1e:	603b      	str	r3, [r7, #0]
 8006b20:	4613      	mov	r3, r2
 8006b22:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006b24:	e01a      	b.n	8006b5c <OSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006b26:	69bb      	ldr	r3, [r7, #24]
 8006b28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006b2c:	d016      	beq.n	8006b5c <OSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006b2e:	f7fa ffaf 	bl	8001a90 <HAL_GetTick>
 8006b32:	4602      	mov	r2, r0
 8006b34:	683b      	ldr	r3, [r7, #0]
 8006b36:	1ad3      	subs	r3, r2, r3
 8006b38:	69ba      	ldr	r2, [r7, #24]
 8006b3a:	429a      	cmp	r2, r3
 8006b3c:	d302      	bcc.n	8006b44 <OSPI_WaitFlagStateUntilTimeout+0x30>
 8006b3e:	69bb      	ldr	r3, [r7, #24]
 8006b40:	2b00      	cmp	r3, #0
 8006b42:	d10b      	bne.n	8006b5c <OSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hospi->State     = HAL_OSPI_STATE_ERROR;
 8006b44:	68fb      	ldr	r3, [r7, #12]
 8006b46:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006b4a:	651a      	str	r2, [r3, #80]	; 0x50
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 8006b4c:	68fb      	ldr	r3, [r7, #12]
 8006b4e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006b50:	f043 0201 	orr.w	r2, r3, #1
 8006b54:	68fb      	ldr	r3, [r7, #12]
 8006b56:	655a      	str	r2, [r3, #84]	; 0x54

        return HAL_ERROR;
 8006b58:	2301      	movs	r3, #1
 8006b5a:	e00e      	b.n	8006b7a <OSPI_WaitFlagStateUntilTimeout+0x66>
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006b5c:	68fb      	ldr	r3, [r7, #12]
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	6a1a      	ldr	r2, [r3, #32]
 8006b62:	68bb      	ldr	r3, [r7, #8]
 8006b64:	4013      	ands	r3, r2
 8006b66:	2b00      	cmp	r3, #0
 8006b68:	bf14      	ite	ne
 8006b6a:	2301      	movne	r3, #1
 8006b6c:	2300      	moveq	r3, #0
 8006b6e:	b2db      	uxtb	r3, r3
 8006b70:	461a      	mov	r2, r3
 8006b72:	79fb      	ldrb	r3, [r7, #7]
 8006b74:	429a      	cmp	r2, r3
 8006b76:	d1d6      	bne.n	8006b26 <OSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8006b78:	2300      	movs	r3, #0
}
 8006b7a:	4618      	mov	r0, r3
 8006b7c:	3710      	adds	r7, #16
 8006b7e:	46bd      	mov	sp, r7
 8006b80:	bd80      	pop	{r7, pc}
	...

08006b84 <OSPIM_GetConfig>:
  * @param  instance_nb : number of the instance
  * @param  cfg         : configuration of the IO Manager for the instance
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPIM_GetConfig(uint8_t instance_nb, OSPIM_CfgTypeDef *cfg)
{
 8006b84:	b480      	push	{r7}
 8006b86:	b087      	sub	sp, #28
 8006b88:	af00      	add	r7, sp, #0
 8006b8a:	4603      	mov	r3, r0
 8006b8c:	6039      	str	r1, [r7, #0]
 8006b8e:	71fb      	strb	r3, [r7, #7]
  HAL_StatusTypeDef status = HAL_OK;
 8006b90:	2300      	movs	r3, #0
 8006b92:	75fb      	strb	r3, [r7, #23]
  uint32_t reg;
  uint32_t value = 0U;
 8006b94:	2300      	movs	r3, #0
 8006b96:	613b      	str	r3, [r7, #16]
  uint32_t index;

  if ((instance_nb == 0U) || (instance_nb > OSPI_NB_INSTANCE) || (cfg == NULL))
 8006b98:	79fb      	ldrb	r3, [r7, #7]
 8006b9a:	2b00      	cmp	r3, #0
 8006b9c:	d005      	beq.n	8006baa <OSPIM_GetConfig+0x26>
 8006b9e:	79fb      	ldrb	r3, [r7, #7]
 8006ba0:	2b02      	cmp	r3, #2
 8006ba2:	d802      	bhi.n	8006baa <OSPIM_GetConfig+0x26>
 8006ba4:	683b      	ldr	r3, [r7, #0]
 8006ba6:	2b00      	cmp	r3, #0
 8006ba8:	d102      	bne.n	8006bb0 <OSPIM_GetConfig+0x2c>
  {
    /* Invalid parameter -> error returned */
    status = HAL_ERROR;
 8006baa:	2301      	movs	r3, #1
 8006bac:	75fb      	strb	r3, [r7, #23]
 8006bae:	e098      	b.n	8006ce2 <OSPIM_GetConfig+0x15e>
  }
  else
  {
    /* Initialize the structure */
    cfg->ClkPort    = 0U;
 8006bb0:	683b      	ldr	r3, [r7, #0]
 8006bb2:	2200      	movs	r2, #0
 8006bb4:	601a      	str	r2, [r3, #0]
    cfg->DQSPort    = 0U;
 8006bb6:	683b      	ldr	r3, [r7, #0]
 8006bb8:	2200      	movs	r2, #0
 8006bba:	605a      	str	r2, [r3, #4]
    cfg->NCSPort    = 0U;
 8006bbc:	683b      	ldr	r3, [r7, #0]
 8006bbe:	2200      	movs	r2, #0
 8006bc0:	609a      	str	r2, [r3, #8]
    cfg->IOLowPort  = 0U;
 8006bc2:	683b      	ldr	r3, [r7, #0]
 8006bc4:	2200      	movs	r2, #0
 8006bc6:	60da      	str	r2, [r3, #12]
    cfg->IOHighPort = 0U;
 8006bc8:	683b      	ldr	r3, [r7, #0]
 8006bca:	2200      	movs	r2, #0
 8006bcc:	611a      	str	r2, [r3, #16]

    if (instance_nb == 2U)
 8006bce:	79fb      	ldrb	r3, [r7, #7]
 8006bd0:	2b02      	cmp	r3, #2
 8006bd2:	d10b      	bne.n	8006bec <OSPIM_GetConfig+0x68>
    {
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 8006bd4:	4b46      	ldr	r3, [pc, #280]	; (8006cf0 <OSPIM_GetConfig+0x16c>)
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	f003 0301 	and.w	r3, r3, #1
 8006bdc:	2b00      	cmp	r3, #0
 8006bde:	d102      	bne.n	8006be6 <OSPIM_GetConfig+0x62>
      {
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
 8006be0:	4b44      	ldr	r3, [pc, #272]	; (8006cf4 <OSPIM_GetConfig+0x170>)
 8006be2:	613b      	str	r3, [r7, #16]
 8006be4:	e002      	b.n	8006bec <OSPIM_GetConfig+0x68>
                 | OCTOSPIM_PCR_IOLSRC_1 | OCTOSPIM_PCR_IOHSRC_1);
      }
      else
      {
        value = OCTOSPIM_PCR_NCSSRC;
 8006be6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006bea:	613b      	str	r3, [r7, #16]
      }
    }

    /* Get the information about the instance */
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8006bec:	2300      	movs	r3, #0
 8006bee:	60fb      	str	r3, [r7, #12]
 8006bf0:	e074      	b.n	8006cdc <OSPIM_GetConfig+0x158>
    {
      reg = OCTOSPIM->PCR[index];
 8006bf2:	4a3f      	ldr	r2, [pc, #252]	; (8006cf0 <OSPIM_GetConfig+0x16c>)
 8006bf4:	68fb      	ldr	r3, [r7, #12]
 8006bf6:	009b      	lsls	r3, r3, #2
 8006bf8:	4413      	add	r3, r2
 8006bfa:	685b      	ldr	r3, [r3, #4]
 8006bfc:	60bb      	str	r3, [r7, #8]

      if ((reg & OCTOSPIM_PCR_CLKEN) != 0U)
 8006bfe:	68bb      	ldr	r3, [r7, #8]
 8006c00:	f003 0301 	and.w	r3, r3, #1
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d00a      	beq.n	8006c1e <OSPIM_GetConfig+0x9a>
      {
        /* The clock is enabled on this port */
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
 8006c08:	68ba      	ldr	r2, [r7, #8]
 8006c0a:	693b      	ldr	r3, [r7, #16]
 8006c0c:	4053      	eors	r3, r2
 8006c0e:	f003 0302 	and.w	r3, r3, #2
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	d103      	bne.n	8006c1e <OSPIM_GetConfig+0x9a>
        {
          /* The clock correspond to the instance passed as parameter */
          cfg->ClkPort = index + 1U;
 8006c16:	68fb      	ldr	r3, [r7, #12]
 8006c18:	1c5a      	adds	r2, r3, #1
 8006c1a:	683b      	ldr	r3, [r7, #0]
 8006c1c:	601a      	str	r2, [r3, #0]
        }
      }

      if ((reg & OCTOSPIM_PCR_DQSEN) != 0U)
 8006c1e:	68bb      	ldr	r3, [r7, #8]
 8006c20:	f003 0310 	and.w	r3, r3, #16
 8006c24:	2b00      	cmp	r3, #0
 8006c26:	d00a      	beq.n	8006c3e <OSPIM_GetConfig+0xba>
      {
        /* The DQS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_DQSSRC) == (value & OCTOSPIM_PCR_DQSSRC))
 8006c28:	68ba      	ldr	r2, [r7, #8]
 8006c2a:	693b      	ldr	r3, [r7, #16]
 8006c2c:	4053      	eors	r3, r2
 8006c2e:	f003 0320 	and.w	r3, r3, #32
 8006c32:	2b00      	cmp	r3, #0
 8006c34:	d103      	bne.n	8006c3e <OSPIM_GetConfig+0xba>
        {
          /* The DQS correspond to the instance passed as parameter */
          cfg->DQSPort = index + 1U;
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	1c5a      	adds	r2, r3, #1
 8006c3a:	683b      	ldr	r3, [r7, #0]
 8006c3c:	605a      	str	r2, [r3, #4]
        }
      }

      if ((reg & OCTOSPIM_PCR_NCSEN) != 0U)
 8006c3e:	68bb      	ldr	r3, [r7, #8]
 8006c40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006c44:	2b00      	cmp	r3, #0
 8006c46:	d00a      	beq.n	8006c5e <OSPIM_GetConfig+0xda>
      {
        /* The nCS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_NCSSRC) == (value & OCTOSPIM_PCR_NCSSRC))
 8006c48:	68ba      	ldr	r2, [r7, #8]
 8006c4a:	693b      	ldr	r3, [r7, #16]
 8006c4c:	4053      	eors	r3, r2
 8006c4e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006c52:	2b00      	cmp	r3, #0
 8006c54:	d103      	bne.n	8006c5e <OSPIM_GetConfig+0xda>
        {
          /* The nCS correspond to the instance passed as parameter */
          cfg->NCSPort = index + 1U;
 8006c56:	68fb      	ldr	r3, [r7, #12]
 8006c58:	1c5a      	adds	r2, r3, #1
 8006c5a:	683b      	ldr	r3, [r7, #0]
 8006c5c:	609a      	str	r2, [r3, #8]
        }
      }

      if ((reg & OCTOSPIM_PCR_IOLEN) != 0U)
 8006c5e:	68bb      	ldr	r3, [r7, #8]
 8006c60:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006c64:	2b00      	cmp	r3, #0
 8006c66:	d018      	beq.n	8006c9a <OSPIM_GetConfig+0x116>
      {
        /* The IO Low is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOLSRC_1) == (value & OCTOSPIM_PCR_IOLSRC_1))
 8006c68:	68ba      	ldr	r2, [r7, #8]
 8006c6a:	693b      	ldr	r3, [r7, #16]
 8006c6c:	4053      	eors	r3, r2
 8006c6e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8006c72:	2b00      	cmp	r3, #0
 8006c74:	d111      	bne.n	8006c9a <OSPIM_GetConfig+0x116>
        {
          /* The IO Low correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOLSRC_0) == 0U)
 8006c76:	68bb      	ldr	r3, [r7, #8]
 8006c78:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006c7c:	2b00      	cmp	r3, #0
 8006c7e:	d106      	bne.n	8006c8e <OSPIM_GetConfig+0x10a>
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 8006c80:	68fb      	ldr	r3, [r7, #12]
 8006c82:	3301      	adds	r3, #1
 8006c84:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8006c88:	683b      	ldr	r3, [r7, #0]
 8006c8a:	60da      	str	r2, [r3, #12]
 8006c8c:	e005      	b.n	8006c9a <OSPIM_GetConfig+0x116>
          }
          else
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 8006c8e:	68fb      	ldr	r3, [r7, #12]
 8006c90:	3301      	adds	r3, #1
 8006c92:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 8006c96:	683b      	ldr	r3, [r7, #0]
 8006c98:	60da      	str	r2, [r3, #12]
          }
        }
      }

      if ((reg & OCTOSPIM_PCR_IOHEN) != 0U)
 8006c9a:	68bb      	ldr	r3, [r7, #8]
 8006c9c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8006ca0:	2b00      	cmp	r3, #0
 8006ca2:	d018      	beq.n	8006cd6 <OSPIM_GetConfig+0x152>
      {
        /* The IO High is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOHSRC_1) == (value & OCTOSPIM_PCR_IOHSRC_1))
 8006ca4:	68ba      	ldr	r2, [r7, #8]
 8006ca6:	693b      	ldr	r3, [r7, #16]
 8006ca8:	4053      	eors	r3, r2
 8006caa:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8006cae:	2b00      	cmp	r3, #0
 8006cb0:	d111      	bne.n	8006cd6 <OSPIM_GetConfig+0x152>
        {
          /* The IO High correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOHSRC_0) == 0U)
 8006cb2:	68bb      	ldr	r3, [r7, #8]
 8006cb4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006cb8:	2b00      	cmp	r3, #0
 8006cba:	d106      	bne.n	8006cca <OSPIM_GetConfig+0x146>
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 8006cbc:	68fb      	ldr	r3, [r7, #12]
 8006cbe:	3301      	adds	r3, #1
 8006cc0:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8006cc4:	683b      	ldr	r3, [r7, #0]
 8006cc6:	611a      	str	r2, [r3, #16]
 8006cc8:	e005      	b.n	8006cd6 <OSPIM_GetConfig+0x152>
          }
          else
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 8006cca:	68fb      	ldr	r3, [r7, #12]
 8006ccc:	3301      	adds	r3, #1
 8006cce:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 8006cd2:	683b      	ldr	r3, [r7, #0]
 8006cd4:	611a      	str	r2, [r3, #16]
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8006cd6:	68fb      	ldr	r3, [r7, #12]
 8006cd8:	3301      	adds	r3, #1
 8006cda:	60fb      	str	r3, [r7, #12]
 8006cdc:	68fb      	ldr	r3, [r7, #12]
 8006cde:	2b01      	cmp	r3, #1
 8006ce0:	d987      	bls.n	8006bf2 <OSPIM_GetConfig+0x6e>
      }
    }
  }

  /* Return function status */
  return status;
 8006ce2:	7dfb      	ldrb	r3, [r7, #23]
}
 8006ce4:	4618      	mov	r0, r3
 8006ce6:	371c      	adds	r7, #28
 8006ce8:	46bd      	mov	sp, r7
 8006cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cee:	4770      	bx	lr
 8006cf0:	5200b400 	.word	0x5200b400
 8006cf4:	04040222 	.word	0x04040222

08006cf8 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8006cf8:	b580      	push	{r7, lr}
 8006cfa:	b084      	sub	sp, #16
 8006cfc:	af00      	add	r7, sp, #0
 8006cfe:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 8006d00:	4b19      	ldr	r3, [pc, #100]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d02:	68db      	ldr	r3, [r3, #12]
 8006d04:	f003 0304 	and.w	r3, r3, #4
 8006d08:	2b04      	cmp	r3, #4
 8006d0a:	d00a      	beq.n	8006d22 <HAL_PWREx_ConfigSupply+0x2a>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8006d0c:	4b16      	ldr	r3, [pc, #88]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d0e:	68db      	ldr	r3, [r3, #12]
 8006d10:	f003 0307 	and.w	r3, r3, #7
 8006d14:	687a      	ldr	r2, [r7, #4]
 8006d16:	429a      	cmp	r2, r3
 8006d18:	d001      	beq.n	8006d1e <HAL_PWREx_ConfigSupply+0x26>
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 8006d1a:	2301      	movs	r3, #1
 8006d1c:	e01f      	b.n	8006d5e <HAL_PWREx_ConfigSupply+0x66>
    else
    {
      /* Supply configuration update locked, but new supply configuration
         matches with old supply configuration : nothing to do
      */
      return HAL_OK;
 8006d1e:	2300      	movs	r3, #0
 8006d20:	e01d      	b.n	8006d5e <HAL_PWREx_ConfigSupply+0x66>
    }
  }

  /* Set the power supply configuration */
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 8006d22:	4b11      	ldr	r3, [pc, #68]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d24:	68db      	ldr	r3, [r3, #12]
 8006d26:	f023 0207 	bic.w	r2, r3, #7
 8006d2a:	490f      	ldr	r1, [pc, #60]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	4313      	orrs	r3, r2
 8006d30:	60cb      	str	r3, [r1, #12]

  /* Get tick */
  tickstart = HAL_GetTick ();
 8006d32:	f7fa fead 	bl	8001a90 <HAL_GetTick>
 8006d36:	60f8      	str	r0, [r7, #12]

  /* Wait till voltage level flag is set */
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006d38:	e009      	b.n	8006d4e <HAL_PWREx_ConfigSupply+0x56>
  {
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006d3a:	f7fa fea9 	bl	8001a90 <HAL_GetTick>
 8006d3e:	4602      	mov	r2, r0
 8006d40:	68fb      	ldr	r3, [r7, #12]
 8006d42:	1ad3      	subs	r3, r2, r3
 8006d44:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006d48:	d901      	bls.n	8006d4e <HAL_PWREx_ConfigSupply+0x56>
    {
      return HAL_ERROR;
 8006d4a:	2301      	movs	r3, #1
 8006d4c:	e007      	b.n	8006d5e <HAL_PWREx_ConfigSupply+0x66>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006d4e:	4b06      	ldr	r3, [pc, #24]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d50:	685b      	ldr	r3, [r3, #4]
 8006d52:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8006d56:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006d5a:	d1ee      	bne.n	8006d3a <HAL_PWREx_ConfigSupply+0x42>
      }
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
 8006d5c:	2300      	movs	r3, #0
}
 8006d5e:	4618      	mov	r0, r3
 8006d60:	3710      	adds	r7, #16
 8006d62:	46bd      	mov	sp, r7
 8006d64:	bd80      	pop	{r7, pc}
 8006d66:	bf00      	nop
 8006d68:	58024800 	.word	0x58024800

08006d6c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006d6c:	b580      	push	{r7, lr}
 8006d6e:	b08c      	sub	sp, #48	; 0x30
 8006d70:	af00      	add	r7, sp, #0
 8006d72:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	2b00      	cmp	r3, #0
 8006d78:	d101      	bne.n	8006d7e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8006d7a:	2301      	movs	r3, #1
 8006d7c:	e3c8      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	681b      	ldr	r3, [r3, #0]
 8006d82:	f003 0301 	and.w	r3, r3, #1
 8006d86:	2b00      	cmp	r3, #0
 8006d88:	f000 8087 	beq.w	8006e9a <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006d8c:	4b88      	ldr	r3, [pc, #544]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006d8e:	691b      	ldr	r3, [r3, #16]
 8006d90:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006d94:	62fb      	str	r3, [r7, #44]	; 0x2c
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006d96:	4b86      	ldr	r3, [pc, #536]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006d98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006d9a:	62bb      	str	r3, [r7, #40]	; 0x28
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8006d9c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006d9e:	2b10      	cmp	r3, #16
 8006da0:	d007      	beq.n	8006db2 <HAL_RCC_OscConfig+0x46>
 8006da2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006da4:	2b18      	cmp	r3, #24
 8006da6:	d110      	bne.n	8006dca <HAL_RCC_OscConfig+0x5e>
 8006da8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006daa:	f003 0303 	and.w	r3, r3, #3
 8006dae:	2b02      	cmp	r3, #2
 8006db0:	d10b      	bne.n	8006dca <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006db2:	4b7f      	ldr	r3, [pc, #508]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006db4:	681b      	ldr	r3, [r3, #0]
 8006db6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006dba:	2b00      	cmp	r3, #0
 8006dbc:	d06c      	beq.n	8006e98 <HAL_RCC_OscConfig+0x12c>
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	685b      	ldr	r3, [r3, #4]
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d168      	bne.n	8006e98 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 8006dc6:	2301      	movs	r3, #1
 8006dc8:	e3a2      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006dca:	687b      	ldr	r3, [r7, #4]
 8006dcc:	685b      	ldr	r3, [r3, #4]
 8006dce:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006dd2:	d106      	bne.n	8006de2 <HAL_RCC_OscConfig+0x76>
 8006dd4:	4b76      	ldr	r3, [pc, #472]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	4a75      	ldr	r2, [pc, #468]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006dda:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006dde:	6013      	str	r3, [r2, #0]
 8006de0:	e02e      	b.n	8006e40 <HAL_RCC_OscConfig+0xd4>
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	685b      	ldr	r3, [r3, #4]
 8006de6:	2b00      	cmp	r3, #0
 8006de8:	d10c      	bne.n	8006e04 <HAL_RCC_OscConfig+0x98>
 8006dea:	4b71      	ldr	r3, [pc, #452]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006dec:	681b      	ldr	r3, [r3, #0]
 8006dee:	4a70      	ldr	r2, [pc, #448]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006df0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006df4:	6013      	str	r3, [r2, #0]
 8006df6:	4b6e      	ldr	r3, [pc, #440]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	4a6d      	ldr	r2, [pc, #436]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006dfc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006e00:	6013      	str	r3, [r2, #0]
 8006e02:	e01d      	b.n	8006e40 <HAL_RCC_OscConfig+0xd4>
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	685b      	ldr	r3, [r3, #4]
 8006e08:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006e0c:	d10c      	bne.n	8006e28 <HAL_RCC_OscConfig+0xbc>
 8006e0e:	4b68      	ldr	r3, [pc, #416]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e10:	681b      	ldr	r3, [r3, #0]
 8006e12:	4a67      	ldr	r2, [pc, #412]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e14:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006e18:	6013      	str	r3, [r2, #0]
 8006e1a:	4b65      	ldr	r3, [pc, #404]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e1c:	681b      	ldr	r3, [r3, #0]
 8006e1e:	4a64      	ldr	r2, [pc, #400]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e20:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006e24:	6013      	str	r3, [r2, #0]
 8006e26:	e00b      	b.n	8006e40 <HAL_RCC_OscConfig+0xd4>
 8006e28:	4b61      	ldr	r3, [pc, #388]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e2a:	681b      	ldr	r3, [r3, #0]
 8006e2c:	4a60      	ldr	r2, [pc, #384]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e2e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006e32:	6013      	str	r3, [r2, #0]
 8006e34:	4b5e      	ldr	r3, [pc, #376]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	4a5d      	ldr	r2, [pc, #372]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e3a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006e3e:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	685b      	ldr	r3, [r3, #4]
 8006e44:	2b00      	cmp	r3, #0
 8006e46:	d013      	beq.n	8006e70 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006e48:	f7fa fe22 	bl	8001a90 <HAL_GetTick>
 8006e4c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006e4e:	e008      	b.n	8006e62 <HAL_RCC_OscConfig+0xf6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006e50:	f7fa fe1e 	bl	8001a90 <HAL_GetTick>
 8006e54:	4602      	mov	r2, r0
 8006e56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e58:	1ad3      	subs	r3, r2, r3
 8006e5a:	2b64      	cmp	r3, #100	; 0x64
 8006e5c:	d901      	bls.n	8006e62 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8006e5e:	2303      	movs	r3, #3
 8006e60:	e356      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006e62:	4b53      	ldr	r3, [pc, #332]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e64:	681b      	ldr	r3, [r3, #0]
 8006e66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d0f0      	beq.n	8006e50 <HAL_RCC_OscConfig+0xe4>
 8006e6e:	e014      	b.n	8006e9a <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006e70:	f7fa fe0e 	bl	8001a90 <HAL_GetTick>
 8006e74:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006e76:	e008      	b.n	8006e8a <HAL_RCC_OscConfig+0x11e>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006e78:	f7fa fe0a 	bl	8001a90 <HAL_GetTick>
 8006e7c:	4602      	mov	r2, r0
 8006e7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e80:	1ad3      	subs	r3, r2, r3
 8006e82:	2b64      	cmp	r3, #100	; 0x64
 8006e84:	d901      	bls.n	8006e8a <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 8006e86:	2303      	movs	r3, #3
 8006e88:	e342      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006e8a:	4b49      	ldr	r3, [pc, #292]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d1f0      	bne.n	8006e78 <HAL_RCC_OscConfig+0x10c>
 8006e96:	e000      	b.n	8006e9a <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006e98:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	f003 0302 	and.w	r3, r3, #2
 8006ea2:	2b00      	cmp	r3, #0
 8006ea4:	f000 808c 	beq.w	8006fc0 <HAL_RCC_OscConfig+0x254>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006ea8:	4b41      	ldr	r3, [pc, #260]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006eaa:	691b      	ldr	r3, [r3, #16]
 8006eac:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006eb0:	623b      	str	r3, [r7, #32]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006eb2:	4b3f      	ldr	r3, [pc, #252]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006eb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006eb6:	61fb      	str	r3, [r7, #28]
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8006eb8:	6a3b      	ldr	r3, [r7, #32]
 8006eba:	2b00      	cmp	r3, #0
 8006ebc:	d007      	beq.n	8006ece <HAL_RCC_OscConfig+0x162>
 8006ebe:	6a3b      	ldr	r3, [r7, #32]
 8006ec0:	2b18      	cmp	r3, #24
 8006ec2:	d137      	bne.n	8006f34 <HAL_RCC_OscConfig+0x1c8>
 8006ec4:	69fb      	ldr	r3, [r7, #28]
 8006ec6:	f003 0303 	and.w	r3, r3, #3
 8006eca:	2b00      	cmp	r3, #0
 8006ecc:	d132      	bne.n	8006f34 <HAL_RCC_OscConfig+0x1c8>
    {
      /* When HSI is used as system clock it will not be disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006ece:	4b38      	ldr	r3, [pc, #224]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006ed0:	681b      	ldr	r3, [r3, #0]
 8006ed2:	f003 0304 	and.w	r3, r3, #4
 8006ed6:	2b00      	cmp	r3, #0
 8006ed8:	d005      	beq.n	8006ee6 <HAL_RCC_OscConfig+0x17a>
 8006eda:	687b      	ldr	r3, [r7, #4]
 8006edc:	68db      	ldr	r3, [r3, #12]
 8006ede:	2b00      	cmp	r3, #0
 8006ee0:	d101      	bne.n	8006ee6 <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 8006ee2:	2301      	movs	r3, #1
 8006ee4:	e314      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, only HSI division and calibration are allowed */
      else
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2, HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006ee6:	4b32      	ldr	r3, [pc, #200]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	f023 0219 	bic.w	r2, r3, #25
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	68db      	ldr	r3, [r3, #12]
 8006ef2:	492f      	ldr	r1, [pc, #188]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006ef4:	4313      	orrs	r3, r2
 8006ef6:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006ef8:	f7fa fdca 	bl	8001a90 <HAL_GetTick>
 8006efc:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006efe:	e008      	b.n	8006f12 <HAL_RCC_OscConfig+0x1a6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006f00:	f7fa fdc6 	bl	8001a90 <HAL_GetTick>
 8006f04:	4602      	mov	r2, r0
 8006f06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f08:	1ad3      	subs	r3, r2, r3
 8006f0a:	2b02      	cmp	r3, #2
 8006f0c:	d901      	bls.n	8006f12 <HAL_RCC_OscConfig+0x1a6>
          {
            return HAL_TIMEOUT;
 8006f0e:	2303      	movs	r3, #3
 8006f10:	e2fe      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006f12:	4b27      	ldr	r3, [pc, #156]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f14:	681b      	ldr	r3, [r3, #0]
 8006f16:	f003 0304 	and.w	r3, r3, #4
 8006f1a:	2b00      	cmp	r3, #0
 8006f1c:	d0f0      	beq.n	8006f00 <HAL_RCC_OscConfig+0x194>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006f1e:	4b24      	ldr	r3, [pc, #144]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f20:	685b      	ldr	r3, [r3, #4]
 8006f22:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	691b      	ldr	r3, [r3, #16]
 8006f2a:	061b      	lsls	r3, r3, #24
 8006f2c:	4920      	ldr	r1, [pc, #128]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f2e:	4313      	orrs	r3, r2
 8006f30:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006f32:	e045      	b.n	8006fc0 <HAL_RCC_OscConfig+0x254>
    }

    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006f34:	687b      	ldr	r3, [r7, #4]
 8006f36:	68db      	ldr	r3, [r3, #12]
 8006f38:	2b00      	cmp	r3, #0
 8006f3a:	d026      	beq.n	8006f8a <HAL_RCC_OscConfig+0x21e>
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006f3c:	4b1c      	ldr	r3, [pc, #112]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	f023 0219 	bic.w	r2, r3, #25
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	68db      	ldr	r3, [r3, #12]
 8006f48:	4919      	ldr	r1, [pc, #100]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f4a:	4313      	orrs	r3, r2
 8006f4c:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006f4e:	f7fa fd9f 	bl	8001a90 <HAL_GetTick>
 8006f52:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006f54:	e008      	b.n	8006f68 <HAL_RCC_OscConfig+0x1fc>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006f56:	f7fa fd9b 	bl	8001a90 <HAL_GetTick>
 8006f5a:	4602      	mov	r2, r0
 8006f5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f5e:	1ad3      	subs	r3, r2, r3
 8006f60:	2b02      	cmp	r3, #2
 8006f62:	d901      	bls.n	8006f68 <HAL_RCC_OscConfig+0x1fc>
          {
            return HAL_TIMEOUT;
 8006f64:	2303      	movs	r3, #3
 8006f66:	e2d3      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006f68:	4b11      	ldr	r3, [pc, #68]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f6a:	681b      	ldr	r3, [r3, #0]
 8006f6c:	f003 0304 	and.w	r3, r3, #4
 8006f70:	2b00      	cmp	r3, #0
 8006f72:	d0f0      	beq.n	8006f56 <HAL_RCC_OscConfig+0x1ea>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006f74:	4b0e      	ldr	r3, [pc, #56]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f76:	685b      	ldr	r3, [r3, #4]
 8006f78:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	691b      	ldr	r3, [r3, #16]
 8006f80:	061b      	lsls	r3, r3, #24
 8006f82:	490b      	ldr	r1, [pc, #44]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f84:	4313      	orrs	r3, r2
 8006f86:	604b      	str	r3, [r1, #4]
 8006f88:	e01a      	b.n	8006fc0 <HAL_RCC_OscConfig+0x254>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8006f8a:	4b09      	ldr	r3, [pc, #36]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f8c:	681b      	ldr	r3, [r3, #0]
 8006f8e:	4a08      	ldr	r2, [pc, #32]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f90:	f023 0301 	bic.w	r3, r3, #1
 8006f94:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006f96:	f7fa fd7b 	bl	8001a90 <HAL_GetTick>
 8006f9a:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006f9c:	e00a      	b.n	8006fb4 <HAL_RCC_OscConfig+0x248>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006f9e:	f7fa fd77 	bl	8001a90 <HAL_GetTick>
 8006fa2:	4602      	mov	r2, r0
 8006fa4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006fa6:	1ad3      	subs	r3, r2, r3
 8006fa8:	2b02      	cmp	r3, #2
 8006faa:	d903      	bls.n	8006fb4 <HAL_RCC_OscConfig+0x248>
          {
            return HAL_TIMEOUT;
 8006fac:	2303      	movs	r3, #3
 8006fae:	e2af      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
 8006fb0:	58024400 	.word	0x58024400
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006fb4:	4b96      	ldr	r3, [pc, #600]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8006fb6:	681b      	ldr	r3, [r3, #0]
 8006fb8:	f003 0304 	and.w	r3, r3, #4
 8006fbc:	2b00      	cmp	r3, #0
 8006fbe:	d1ee      	bne.n	8006f9e <HAL_RCC_OscConfig+0x232>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8006fc0:	687b      	ldr	r3, [r7, #4]
 8006fc2:	681b      	ldr	r3, [r3, #0]
 8006fc4:	f003 0310 	and.w	r3, r3, #16
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	d06a      	beq.n	80070a2 <HAL_RCC_OscConfig+0x336>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006fcc:	4b90      	ldr	r3, [pc, #576]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8006fce:	691b      	ldr	r3, [r3, #16]
 8006fd0:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006fd4:	61bb      	str	r3, [r7, #24]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006fd6:	4b8e      	ldr	r3, [pc, #568]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8006fd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006fda:	617b      	str	r3, [r7, #20]
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8006fdc:	69bb      	ldr	r3, [r7, #24]
 8006fde:	2b08      	cmp	r3, #8
 8006fe0:	d007      	beq.n	8006ff2 <HAL_RCC_OscConfig+0x286>
 8006fe2:	69bb      	ldr	r3, [r7, #24]
 8006fe4:	2b18      	cmp	r3, #24
 8006fe6:	d11b      	bne.n	8007020 <HAL_RCC_OscConfig+0x2b4>
 8006fe8:	697b      	ldr	r3, [r7, #20]
 8006fea:	f003 0303 	and.w	r3, r3, #3
 8006fee:	2b01      	cmp	r3, #1
 8006ff0:	d116      	bne.n	8007020 <HAL_RCC_OscConfig+0x2b4>
    {
      /* When CSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8006ff2:	4b87      	ldr	r3, [pc, #540]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8006ff4:	681b      	ldr	r3, [r3, #0]
 8006ff6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d005      	beq.n	800700a <HAL_RCC_OscConfig+0x29e>
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	69db      	ldr	r3, [r3, #28]
 8007002:	2b80      	cmp	r3, #128	; 0x80
 8007004:	d001      	beq.n	800700a <HAL_RCC_OscConfig+0x29e>
      {
        return HAL_ERROR;
 8007006:	2301      	movs	r3, #1
 8007008:	e282      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800700a:	4b81      	ldr	r3, [pc, #516]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800700c:	68db      	ldr	r3, [r3, #12]
 800700e:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	6a1b      	ldr	r3, [r3, #32]
 8007016:	061b      	lsls	r3, r3, #24
 8007018:	497d      	ldr	r1, [pc, #500]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800701a:	4313      	orrs	r3, r2
 800701c:	60cb      	str	r3, [r1, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 800701e:	e040      	b.n	80070a2 <HAL_RCC_OscConfig+0x336>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	69db      	ldr	r3, [r3, #28]
 8007024:	2b00      	cmp	r3, #0
 8007026:	d023      	beq.n	8007070 <HAL_RCC_OscConfig+0x304>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8007028:	4b79      	ldr	r3, [pc, #484]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	4a78      	ldr	r2, [pc, #480]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800702e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007032:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007034:	f7fa fd2c 	bl	8001a90 <HAL_GetTick>
 8007038:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 800703a:	e008      	b.n	800704e <HAL_RCC_OscConfig+0x2e2>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 800703c:	f7fa fd28 	bl	8001a90 <HAL_GetTick>
 8007040:	4602      	mov	r2, r0
 8007042:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007044:	1ad3      	subs	r3, r2, r3
 8007046:	2b02      	cmp	r3, #2
 8007048:	d901      	bls.n	800704e <HAL_RCC_OscConfig+0x2e2>
          {
            return HAL_TIMEOUT;
 800704a:	2303      	movs	r3, #3
 800704c:	e260      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 800704e:	4b70      	ldr	r3, [pc, #448]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007050:	681b      	ldr	r3, [r3, #0]
 8007052:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007056:	2b00      	cmp	r3, #0
 8007058:	d0f0      	beq.n	800703c <HAL_RCC_OscConfig+0x2d0>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800705a:	4b6d      	ldr	r3, [pc, #436]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800705c:	68db      	ldr	r3, [r3, #12]
 800705e:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8007062:	687b      	ldr	r3, [r7, #4]
 8007064:	6a1b      	ldr	r3, [r3, #32]
 8007066:	061b      	lsls	r3, r3, #24
 8007068:	4969      	ldr	r1, [pc, #420]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800706a:	4313      	orrs	r3, r2
 800706c:	60cb      	str	r3, [r1, #12]
 800706e:	e018      	b.n	80070a2 <HAL_RCC_OscConfig+0x336>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 8007070:	4b67      	ldr	r3, [pc, #412]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007072:	681b      	ldr	r3, [r3, #0]
 8007074:	4a66      	ldr	r2, [pc, #408]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007076:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800707a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800707c:	f7fa fd08 	bl	8001a90 <HAL_GetTick>
 8007080:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8007082:	e008      	b.n	8007096 <HAL_RCC_OscConfig+0x32a>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8007084:	f7fa fd04 	bl	8001a90 <HAL_GetTick>
 8007088:	4602      	mov	r2, r0
 800708a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800708c:	1ad3      	subs	r3, r2, r3
 800708e:	2b02      	cmp	r3, #2
 8007090:	d901      	bls.n	8007096 <HAL_RCC_OscConfig+0x32a>
          {
            return HAL_TIMEOUT;
 8007092:	2303      	movs	r3, #3
 8007094:	e23c      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8007096:	4b5e      	ldr	r3, [pc, #376]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007098:	681b      	ldr	r3, [r3, #0]
 800709a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800709e:	2b00      	cmp	r3, #0
 80070a0:	d1f0      	bne.n	8007084 <HAL_RCC_OscConfig+0x318>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	681b      	ldr	r3, [r3, #0]
 80070a6:	f003 0308 	and.w	r3, r3, #8
 80070aa:	2b00      	cmp	r3, #0
 80070ac:	d036      	beq.n	800711c <HAL_RCC_OscConfig+0x3b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80070ae:	687b      	ldr	r3, [r7, #4]
 80070b0:	695b      	ldr	r3, [r3, #20]
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	d019      	beq.n	80070ea <HAL_RCC_OscConfig+0x37e>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80070b6:	4b56      	ldr	r3, [pc, #344]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070b8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80070ba:	4a55      	ldr	r2, [pc, #340]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070bc:	f043 0301 	orr.w	r3, r3, #1
 80070c0:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80070c2:	f7fa fce5 	bl	8001a90 <HAL_GetTick>
 80070c6:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80070c8:	e008      	b.n	80070dc <HAL_RCC_OscConfig+0x370>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80070ca:	f7fa fce1 	bl	8001a90 <HAL_GetTick>
 80070ce:	4602      	mov	r2, r0
 80070d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80070d2:	1ad3      	subs	r3, r2, r3
 80070d4:	2b02      	cmp	r3, #2
 80070d6:	d901      	bls.n	80070dc <HAL_RCC_OscConfig+0x370>
        {
          return HAL_TIMEOUT;
 80070d8:	2303      	movs	r3, #3
 80070da:	e219      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80070dc:	4b4c      	ldr	r3, [pc, #304]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80070e0:	f003 0302 	and.w	r3, r3, #2
 80070e4:	2b00      	cmp	r3, #0
 80070e6:	d0f0      	beq.n	80070ca <HAL_RCC_OscConfig+0x35e>
 80070e8:	e018      	b.n	800711c <HAL_RCC_OscConfig+0x3b0>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80070ea:	4b49      	ldr	r3, [pc, #292]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070ec:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80070ee:	4a48      	ldr	r2, [pc, #288]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070f0:	f023 0301 	bic.w	r3, r3, #1
 80070f4:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80070f6:	f7fa fccb 	bl	8001a90 <HAL_GetTick>
 80070fa:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80070fc:	e008      	b.n	8007110 <HAL_RCC_OscConfig+0x3a4>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80070fe:	f7fa fcc7 	bl	8001a90 <HAL_GetTick>
 8007102:	4602      	mov	r2, r0
 8007104:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007106:	1ad3      	subs	r3, r2, r3
 8007108:	2b02      	cmp	r3, #2
 800710a:	d901      	bls.n	8007110 <HAL_RCC_OscConfig+0x3a4>
        {
          return HAL_TIMEOUT;
 800710c:	2303      	movs	r3, #3
 800710e:	e1ff      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8007110:	4b3f      	ldr	r3, [pc, #252]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007112:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007114:	f003 0302 	and.w	r3, r3, #2
 8007118:	2b00      	cmp	r3, #0
 800711a:	d1f0      	bne.n	80070fe <HAL_RCC_OscConfig+0x392>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	681b      	ldr	r3, [r3, #0]
 8007120:	f003 0320 	and.w	r3, r3, #32
 8007124:	2b00      	cmp	r3, #0
 8007126:	d036      	beq.n	8007196 <HAL_RCC_OscConfig+0x42a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	699b      	ldr	r3, [r3, #24]
 800712c:	2b00      	cmp	r3, #0
 800712e:	d019      	beq.n	8007164 <HAL_RCC_OscConfig+0x3f8>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 8007130:	4b37      	ldr	r3, [pc, #220]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	4a36      	ldr	r2, [pc, #216]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007136:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800713a:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 800713c:	f7fa fca8 	bl	8001a90 <HAL_GetTick>
 8007140:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8007142:	e008      	b.n	8007156 <HAL_RCC_OscConfig+0x3ea>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007144:	f7fa fca4 	bl	8001a90 <HAL_GetTick>
 8007148:	4602      	mov	r2, r0
 800714a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800714c:	1ad3      	subs	r3, r2, r3
 800714e:	2b02      	cmp	r3, #2
 8007150:	d901      	bls.n	8007156 <HAL_RCC_OscConfig+0x3ea>
        {
          return HAL_TIMEOUT;
 8007152:	2303      	movs	r3, #3
 8007154:	e1dc      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8007156:	4b2e      	ldr	r3, [pc, #184]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800715e:	2b00      	cmp	r3, #0
 8007160:	d0f0      	beq.n	8007144 <HAL_RCC_OscConfig+0x3d8>
 8007162:	e018      	b.n	8007196 <HAL_RCC_OscConfig+0x42a>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8007164:	4b2a      	ldr	r3, [pc, #168]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	4a29      	ldr	r2, [pc, #164]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800716a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800716e:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 8007170:	f7fa fc8e 	bl	8001a90 <HAL_GetTick>
 8007174:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007176:	e008      	b.n	800718a <HAL_RCC_OscConfig+0x41e>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007178:	f7fa fc8a 	bl	8001a90 <HAL_GetTick>
 800717c:	4602      	mov	r2, r0
 800717e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007180:	1ad3      	subs	r3, r2, r3
 8007182:	2b02      	cmp	r3, #2
 8007184:	d901      	bls.n	800718a <HAL_RCC_OscConfig+0x41e>
        {
          return HAL_TIMEOUT;
 8007186:	2303      	movs	r3, #3
 8007188:	e1c2      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 800718a:	4b21      	ldr	r3, [pc, #132]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800718c:	681b      	ldr	r3, [r3, #0]
 800718e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007192:	2b00      	cmp	r3, #0
 8007194:	d1f0      	bne.n	8007178 <HAL_RCC_OscConfig+0x40c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007196:	687b      	ldr	r3, [r7, #4]
 8007198:	681b      	ldr	r3, [r3, #0]
 800719a:	f003 0304 	and.w	r3, r3, #4
 800719e:	2b00      	cmp	r3, #0
 80071a0:	f000 8086 	beq.w	80072b0 <HAL_RCC_OscConfig+0x544>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 80071a4:	4b1b      	ldr	r3, [pc, #108]	; (8007214 <HAL_RCC_OscConfig+0x4a8>)
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	4a1a      	ldr	r2, [pc, #104]	; (8007214 <HAL_RCC_OscConfig+0x4a8>)
 80071aa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80071ae:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80071b0:	f7fa fc6e 	bl	8001a90 <HAL_GetTick>
 80071b4:	6278      	str	r0, [r7, #36]	; 0x24

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80071b6:	e008      	b.n	80071ca <HAL_RCC_OscConfig+0x45e>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80071b8:	f7fa fc6a 	bl	8001a90 <HAL_GetTick>
 80071bc:	4602      	mov	r2, r0
 80071be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80071c0:	1ad3      	subs	r3, r2, r3
 80071c2:	2b64      	cmp	r3, #100	; 0x64
 80071c4:	d901      	bls.n	80071ca <HAL_RCC_OscConfig+0x45e>
      {
        return HAL_TIMEOUT;
 80071c6:	2303      	movs	r3, #3
 80071c8:	e1a2      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80071ca:	4b12      	ldr	r3, [pc, #72]	; (8007214 <HAL_RCC_OscConfig+0x4a8>)
 80071cc:	681b      	ldr	r3, [r3, #0]
 80071ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80071d2:	2b00      	cmp	r3, #0
 80071d4:	d0f0      	beq.n	80071b8 <HAL_RCC_OscConfig+0x44c>
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	689b      	ldr	r3, [r3, #8]
 80071da:	2b01      	cmp	r3, #1
 80071dc:	d106      	bne.n	80071ec <HAL_RCC_OscConfig+0x480>
 80071de:	4b0c      	ldr	r3, [pc, #48]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80071e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80071e2:	4a0b      	ldr	r2, [pc, #44]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80071e4:	f043 0301 	orr.w	r3, r3, #1
 80071e8:	6713      	str	r3, [r2, #112]	; 0x70
 80071ea:	e032      	b.n	8007252 <HAL_RCC_OscConfig+0x4e6>
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	689b      	ldr	r3, [r3, #8]
 80071f0:	2b00      	cmp	r3, #0
 80071f2:	d111      	bne.n	8007218 <HAL_RCC_OscConfig+0x4ac>
 80071f4:	4b06      	ldr	r3, [pc, #24]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80071f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80071f8:	4a05      	ldr	r2, [pc, #20]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80071fa:	f023 0301 	bic.w	r3, r3, #1
 80071fe:	6713      	str	r3, [r2, #112]	; 0x70
 8007200:	4b03      	ldr	r3, [pc, #12]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007202:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007204:	4a02      	ldr	r2, [pc, #8]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007206:	f023 0304 	bic.w	r3, r3, #4
 800720a:	6713      	str	r3, [r2, #112]	; 0x70
 800720c:	e021      	b.n	8007252 <HAL_RCC_OscConfig+0x4e6>
 800720e:	bf00      	nop
 8007210:	58024400 	.word	0x58024400
 8007214:	58024800 	.word	0x58024800
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	689b      	ldr	r3, [r3, #8]
 800721c:	2b05      	cmp	r3, #5
 800721e:	d10c      	bne.n	800723a <HAL_RCC_OscConfig+0x4ce>
 8007220:	4b83      	ldr	r3, [pc, #524]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007222:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007224:	4a82      	ldr	r2, [pc, #520]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007226:	f043 0304 	orr.w	r3, r3, #4
 800722a:	6713      	str	r3, [r2, #112]	; 0x70
 800722c:	4b80      	ldr	r3, [pc, #512]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800722e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007230:	4a7f      	ldr	r2, [pc, #508]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007232:	f043 0301 	orr.w	r3, r3, #1
 8007236:	6713      	str	r3, [r2, #112]	; 0x70
 8007238:	e00b      	b.n	8007252 <HAL_RCC_OscConfig+0x4e6>
 800723a:	4b7d      	ldr	r3, [pc, #500]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800723c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800723e:	4a7c      	ldr	r2, [pc, #496]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007240:	f023 0301 	bic.w	r3, r3, #1
 8007244:	6713      	str	r3, [r2, #112]	; 0x70
 8007246:	4b7a      	ldr	r3, [pc, #488]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007248:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800724a:	4a79      	ldr	r2, [pc, #484]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800724c:	f023 0304 	bic.w	r3, r3, #4
 8007250:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007252:	687b      	ldr	r3, [r7, #4]
 8007254:	689b      	ldr	r3, [r3, #8]
 8007256:	2b00      	cmp	r3, #0
 8007258:	d015      	beq.n	8007286 <HAL_RCC_OscConfig+0x51a>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800725a:	f7fa fc19 	bl	8001a90 <HAL_GetTick>
 800725e:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007260:	e00a      	b.n	8007278 <HAL_RCC_OscConfig+0x50c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007262:	f7fa fc15 	bl	8001a90 <HAL_GetTick>
 8007266:	4602      	mov	r2, r0
 8007268:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800726a:	1ad3      	subs	r3, r2, r3
 800726c:	f241 3288 	movw	r2, #5000	; 0x1388
 8007270:	4293      	cmp	r3, r2
 8007272:	d901      	bls.n	8007278 <HAL_RCC_OscConfig+0x50c>
        {
          return HAL_TIMEOUT;
 8007274:	2303      	movs	r3, #3
 8007276:	e14b      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007278:	4b6d      	ldr	r3, [pc, #436]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800727a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800727c:	f003 0302 	and.w	r3, r3, #2
 8007280:	2b00      	cmp	r3, #0
 8007282:	d0ee      	beq.n	8007262 <HAL_RCC_OscConfig+0x4f6>
 8007284:	e014      	b.n	80072b0 <HAL_RCC_OscConfig+0x544>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007286:	f7fa fc03 	bl	8001a90 <HAL_GetTick>
 800728a:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800728c:	e00a      	b.n	80072a4 <HAL_RCC_OscConfig+0x538>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800728e:	f7fa fbff 	bl	8001a90 <HAL_GetTick>
 8007292:	4602      	mov	r2, r0
 8007294:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007296:	1ad3      	subs	r3, r2, r3
 8007298:	f241 3288 	movw	r2, #5000	; 0x1388
 800729c:	4293      	cmp	r3, r2
 800729e:	d901      	bls.n	80072a4 <HAL_RCC_OscConfig+0x538>
        {
          return HAL_TIMEOUT;
 80072a0:	2303      	movs	r3, #3
 80072a2:	e135      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 80072a4:	4b62      	ldr	r3, [pc, #392]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072a6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072a8:	f003 0302 	and.w	r3, r3, #2
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	d1ee      	bne.n	800728e <HAL_RCC_OscConfig+0x522>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072b4:	2b00      	cmp	r3, #0
 80072b6:	f000 812a 	beq.w	800750e <HAL_RCC_OscConfig+0x7a2>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 80072ba:	4b5d      	ldr	r3, [pc, #372]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072bc:	691b      	ldr	r3, [r3, #16]
 80072be:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80072c2:	2b18      	cmp	r3, #24
 80072c4:	f000 80ba 	beq.w	800743c <HAL_RCC_OscConfig+0x6d0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072cc:	2b02      	cmp	r3, #2
 80072ce:	f040 8095 	bne.w	80073fc <HAL_RCC_OscConfig+0x690>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80072d2:	4b57      	ldr	r3, [pc, #348]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072d4:	681b      	ldr	r3, [r3, #0]
 80072d6:	4a56      	ldr	r2, [pc, #344]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072d8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80072dc:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80072de:	f7fa fbd7 	bl	8001a90 <HAL_GetTick>
 80072e2:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80072e4:	e008      	b.n	80072f8 <HAL_RCC_OscConfig+0x58c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80072e6:	f7fa fbd3 	bl	8001a90 <HAL_GetTick>
 80072ea:	4602      	mov	r2, r0
 80072ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80072ee:	1ad3      	subs	r3, r2, r3
 80072f0:	2b02      	cmp	r3, #2
 80072f2:	d901      	bls.n	80072f8 <HAL_RCC_OscConfig+0x58c>
          {
            return HAL_TIMEOUT;
 80072f4:	2303      	movs	r3, #3
 80072f6:	e10b      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80072f8:	4b4d      	ldr	r3, [pc, #308]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072fa:	681b      	ldr	r3, [r3, #0]
 80072fc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007300:	2b00      	cmp	r3, #0
 8007302:	d1f0      	bne.n	80072e6 <HAL_RCC_OscConfig+0x57a>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007304:	4b4a      	ldr	r3, [pc, #296]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007306:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007308:	4b4a      	ldr	r3, [pc, #296]	; (8007434 <HAL_RCC_OscConfig+0x6c8>)
 800730a:	4013      	ands	r3, r2
 800730c:	687a      	ldr	r2, [r7, #4]
 800730e:	6a91      	ldr	r1, [r2, #40]	; 0x28
 8007310:	687a      	ldr	r2, [r7, #4]
 8007312:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8007314:	0112      	lsls	r2, r2, #4
 8007316:	430a      	orrs	r2, r1
 8007318:	4945      	ldr	r1, [pc, #276]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800731a:	4313      	orrs	r3, r2
 800731c:	628b      	str	r3, [r1, #40]	; 0x28
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007322:	3b01      	subs	r3, #1
 8007324:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800732c:	3b01      	subs	r3, #1
 800732e:	025b      	lsls	r3, r3, #9
 8007330:	b29b      	uxth	r3, r3
 8007332:	431a      	orrs	r2, r3
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007338:	3b01      	subs	r3, #1
 800733a:	041b      	lsls	r3, r3, #16
 800733c:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8007340:	431a      	orrs	r2, r3
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007346:	3b01      	subs	r3, #1
 8007348:	061b      	lsls	r3, r3, #24
 800734a:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800734e:	4938      	ldr	r1, [pc, #224]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007350:	4313      	orrs	r3, r2
 8007352:	630b      	str	r3, [r1, #48]	; 0x30
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);

        /* Disable PLLFRACN . */
        __HAL_RCC_PLLFRACN_DISABLE();
 8007354:	4b36      	ldr	r3, [pc, #216]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007358:	4a35      	ldr	r2, [pc, #212]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800735a:	f023 0301 	bic.w	r3, r3, #1
 800735e:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8007360:	4b33      	ldr	r3, [pc, #204]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007362:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007364:	4b34      	ldr	r3, [pc, #208]	; (8007438 <HAL_RCC_OscConfig+0x6cc>)
 8007366:	4013      	ands	r3, r2
 8007368:	687a      	ldr	r2, [r7, #4]
 800736a:	6c92      	ldr	r2, [r2, #72]	; 0x48
 800736c:	00d2      	lsls	r2, r2, #3
 800736e:	4930      	ldr	r1, [pc, #192]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007370:	4313      	orrs	r3, r2
 8007372:	634b      	str	r3, [r1, #52]	; 0x34

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8007374:	4b2e      	ldr	r3, [pc, #184]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007376:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007378:	f023 020c 	bic.w	r2, r3, #12
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007380:	492b      	ldr	r1, [pc, #172]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007382:	4313      	orrs	r3, r2
 8007384:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8007386:	4b2a      	ldr	r3, [pc, #168]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800738a:	f023 0202 	bic.w	r2, r3, #2
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007392:	4927      	ldr	r1, [pc, #156]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007394:	4313      	orrs	r3, r2
 8007396:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Enable PLL System Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007398:	4b25      	ldr	r3, [pc, #148]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800739a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800739c:	4a24      	ldr	r2, [pc, #144]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800739e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80073a2:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1Q Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80073a4:	4b22      	ldr	r3, [pc, #136]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80073a8:	4a21      	ldr	r2, [pc, #132]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073aa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80073ae:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1R  Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 80073b0:	4b1f      	ldr	r3, [pc, #124]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80073b4:	4a1e      	ldr	r2, [pc, #120]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073b6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80073ba:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLLFRACN_ENABLE();
 80073bc:	4b1c      	ldr	r3, [pc, #112]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80073c0:	4a1b      	ldr	r2, [pc, #108]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073c2:	f043 0301 	orr.w	r3, r3, #1
 80073c6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80073c8:	4b19      	ldr	r3, [pc, #100]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073ca:	681b      	ldr	r3, [r3, #0]
 80073cc:	4a18      	ldr	r2, [pc, #96]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073ce:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80073d2:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80073d4:	f7fa fb5c 	bl	8001a90 <HAL_GetTick>
 80073d8:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80073da:	e008      	b.n	80073ee <HAL_RCC_OscConfig+0x682>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80073dc:	f7fa fb58 	bl	8001a90 <HAL_GetTick>
 80073e0:	4602      	mov	r2, r0
 80073e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073e4:	1ad3      	subs	r3, r2, r3
 80073e6:	2b02      	cmp	r3, #2
 80073e8:	d901      	bls.n	80073ee <HAL_RCC_OscConfig+0x682>
          {
            return HAL_TIMEOUT;
 80073ea:	2303      	movs	r3, #3
 80073ec:	e090      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80073ee:	4b10      	ldr	r3, [pc, #64]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073f0:	681b      	ldr	r3, [r3, #0]
 80073f2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80073f6:	2b00      	cmp	r3, #0
 80073f8:	d0f0      	beq.n	80073dc <HAL_RCC_OscConfig+0x670>
 80073fa:	e088      	b.n	800750e <HAL_RCC_OscConfig+0x7a2>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80073fc:	4b0c      	ldr	r3, [pc, #48]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073fe:	681b      	ldr	r3, [r3, #0]
 8007400:	4a0b      	ldr	r2, [pc, #44]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007402:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8007406:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007408:	f7fa fb42 	bl	8001a90 <HAL_GetTick>
 800740c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 800740e:	e008      	b.n	8007422 <HAL_RCC_OscConfig+0x6b6>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007410:	f7fa fb3e 	bl	8001a90 <HAL_GetTick>
 8007414:	4602      	mov	r2, r0
 8007416:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007418:	1ad3      	subs	r3, r2, r3
 800741a:	2b02      	cmp	r3, #2
 800741c:	d901      	bls.n	8007422 <HAL_RCC_OscConfig+0x6b6>
          {
            return HAL_TIMEOUT;
 800741e:	2303      	movs	r3, #3
 8007420:	e076      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007422:	4b03      	ldr	r3, [pc, #12]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800742a:	2b00      	cmp	r3, #0
 800742c:	d1f0      	bne.n	8007410 <HAL_RCC_OscConfig+0x6a4>
 800742e:	e06e      	b.n	800750e <HAL_RCC_OscConfig+0x7a2>
 8007430:	58024400 	.word	0x58024400
 8007434:	fffffc0c 	.word	0xfffffc0c
 8007438:	ffff0007 	.word	0xffff0007
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLLCKSELR;
 800743c:	4b36      	ldr	r3, [pc, #216]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 800743e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007440:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 8007442:	4b35      	ldr	r3, [pc, #212]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 8007444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007446:	60fb      	str	r3, [r7, #12]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800744c:	2b01      	cmp	r3, #1
 800744e:	d031      	beq.n	80074b4 <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007450:	693b      	ldr	r3, [r7, #16]
 8007452:	f003 0203 	and.w	r2, r3, #3
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	6a9b      	ldr	r3, [r3, #40]	; 0x28
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800745a:	429a      	cmp	r2, r3
 800745c:	d12a      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 800745e:	693b      	ldr	r3, [r7, #16]
 8007460:	091b      	lsrs	r3, r3, #4
 8007462:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	6adb      	ldr	r3, [r3, #44]	; 0x2c
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800746a:	429a      	cmp	r2, r3
 800746c:	d122      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 800746e:	68fb      	ldr	r3, [r7, #12]
 8007470:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8007474:	687b      	ldr	r3, [r7, #4]
 8007476:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007478:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 800747a:	429a      	cmp	r2, r3
 800747c:	d11a      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	0a5b      	lsrs	r3, r3, #9
 8007482:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007486:	687b      	ldr	r3, [r7, #4]
 8007488:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800748a:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 800748c:	429a      	cmp	r2, r3
 800748e:	d111      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007490:	68fb      	ldr	r3, [r7, #12]
 8007492:	0c1b      	lsrs	r3, r3, #16
 8007494:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007498:	687b      	ldr	r3, [r7, #4]
 800749a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800749c:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 800749e:	429a      	cmp	r2, r3
 80074a0:	d108      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 80074a2:	68fb      	ldr	r3, [r7, #12]
 80074a4:	0e1b      	lsrs	r3, r3, #24
 80074a6:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80074ae:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80074b0:	429a      	cmp	r2, r3
 80074b2:	d001      	beq.n	80074b8 <HAL_RCC_OscConfig+0x74c>
      {
        return HAL_ERROR;
 80074b4:	2301      	movs	r3, #1
 80074b6:	e02b      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      }
      else
      {
        /* Check if only fractional part needs to be updated  */
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 80074b8:	4b17      	ldr	r3, [pc, #92]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80074bc:	08db      	lsrs	r3, r3, #3
 80074be:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80074c2:	613b      	str	r3, [r7, #16]
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80074c8:	693a      	ldr	r2, [r7, #16]
 80074ca:	429a      	cmp	r2, r3
 80074cc:	d01f      	beq.n	800750e <HAL_RCC_OscConfig+0x7a2>
        {
          assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
          /* Disable PLL1FRACEN */
          __HAL_RCC_PLLFRACN_DISABLE();
 80074ce:	4b12      	ldr	r3, [pc, #72]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80074d2:	4a11      	ldr	r2, [pc, #68]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074d4:	f023 0301 	bic.w	r3, r3, #1
 80074d8:	62d3      	str	r3, [r2, #44]	; 0x2c
          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 80074da:	f7fa fad9 	bl	8001a90 <HAL_GetTick>
 80074de:	6278      	str	r0, [r7, #36]	; 0x24
          /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value will be taken into account. */
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 80074e0:	bf00      	nop
 80074e2:	f7fa fad5 	bl	8001a90 <HAL_GetTick>
 80074e6:	4602      	mov	r2, r0
 80074e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80074ea:	4293      	cmp	r3, r2
 80074ec:	d0f9      	beq.n	80074e2 <HAL_RCC_OscConfig+0x776>
          {
          }
          /* Configure PLL1 PLL1FRACN */
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 80074ee:	4b0a      	ldr	r3, [pc, #40]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80074f2:	4b0a      	ldr	r3, [pc, #40]	; (800751c <HAL_RCC_OscConfig+0x7b0>)
 80074f4:	4013      	ands	r3, r2
 80074f6:	687a      	ldr	r2, [r7, #4]
 80074f8:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80074fa:	00d2      	lsls	r2, r2, #3
 80074fc:	4906      	ldr	r1, [pc, #24]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074fe:	4313      	orrs	r3, r2
 8007500:	634b      	str	r3, [r1, #52]	; 0x34
          /* Enable PLL1FRACEN to latch new value. */
          __HAL_RCC_PLLFRACN_ENABLE();
 8007502:	4b05      	ldr	r3, [pc, #20]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 8007504:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007506:	4a04      	ldr	r2, [pc, #16]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 8007508:	f043 0301 	orr.w	r3, r3, #1
 800750c:	62d3      	str	r3, [r2, #44]	; 0x2c
        }
      }
    }
  }
  return HAL_OK;
 800750e:	2300      	movs	r3, #0
}
 8007510:	4618      	mov	r0, r3
 8007512:	3730      	adds	r7, #48	; 0x30
 8007514:	46bd      	mov	sp, r7
 8007516:	bd80      	pop	{r7, pc}
 8007518:	58024400 	.word	0x58024400
 800751c:	ffff0007 	.word	0xffff0007

08007520 <HAL_RCC_ClockConfig>:
  *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8007520:	b580      	push	{r7, lr}
 8007522:	b086      	sub	sp, #24
 8007524:	af00      	add	r7, sp, #0
 8007526:	6078      	str	r0, [r7, #4]
 8007528:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;
  uint32_t common_system_clock;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	2b00      	cmp	r3, #0
 800752e:	d101      	bne.n	8007534 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8007530:	2301      	movs	r3, #1
 8007532:	e19c      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8007534:	4b8a      	ldr	r3, [pc, #552]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007536:	681b      	ldr	r3, [r3, #0]
 8007538:	f003 030f 	and.w	r3, r3, #15
 800753c:	683a      	ldr	r2, [r7, #0]
 800753e:	429a      	cmp	r2, r3
 8007540:	d910      	bls.n	8007564 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007542:	4b87      	ldr	r3, [pc, #540]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	f023 020f 	bic.w	r2, r3, #15
 800754a:	4985      	ldr	r1, [pc, #532]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 800754c:	683b      	ldr	r3, [r7, #0]
 800754e:	4313      	orrs	r3, r2
 8007550:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007552:	4b83      	ldr	r3, [pc, #524]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007554:	681b      	ldr	r3, [r3, #0]
 8007556:	f003 030f 	and.w	r3, r3, #15
 800755a:	683a      	ldr	r2, [r7, #0]
 800755c:	429a      	cmp	r2, r3
 800755e:	d001      	beq.n	8007564 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8007560:	2301      	movs	r3, #1
 8007562:	e184      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>

  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8007564:	687b      	ldr	r3, [r7, #4]
 8007566:	681b      	ldr	r3, [r3, #0]
 8007568:	f003 0304 	and.w	r3, r3, #4
 800756c:	2b00      	cmp	r3, #0
 800756e:	d010      	beq.n	8007592 <HAL_RCC_ClockConfig+0x72>
  {
#if defined (RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	691a      	ldr	r2, [r3, #16]
 8007574:	4b7b      	ldr	r3, [pc, #492]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007576:	699b      	ldr	r3, [r3, #24]
 8007578:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800757c:	429a      	cmp	r2, r3
 800757e:	d908      	bls.n	8007592 <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007580:	4b78      	ldr	r3, [pc, #480]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007582:	699b      	ldr	r3, [r3, #24]
 8007584:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	691b      	ldr	r3, [r3, #16]
 800758c:	4975      	ldr	r1, [pc, #468]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800758e:	4313      	orrs	r3, r2
 8007590:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	681b      	ldr	r3, [r3, #0]
 8007596:	f003 0308 	and.w	r3, r3, #8
 800759a:	2b00      	cmp	r3, #0
 800759c:	d010      	beq.n	80075c0 <HAL_RCC_ClockConfig+0xa0>
  {
#if defined (RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	695a      	ldr	r2, [r3, #20]
 80075a2:	4b70      	ldr	r3, [pc, #448]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075a4:	69db      	ldr	r3, [r3, #28]
 80075a6:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80075aa:	429a      	cmp	r2, r3
 80075ac:	d908      	bls.n	80075c0 <HAL_RCC_ClockConfig+0xa0>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80075ae:	4b6d      	ldr	r3, [pc, #436]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075b0:	69db      	ldr	r3, [r3, #28]
 80075b2:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80075b6:	687b      	ldr	r3, [r7, #4]
 80075b8:	695b      	ldr	r3, [r3, #20]
 80075ba:	496a      	ldr	r1, [pc, #424]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075bc:	4313      	orrs	r3, r2
 80075be:	61cb      	str	r3, [r1, #28]
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
    }
#endif
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	681b      	ldr	r3, [r3, #0]
 80075c4:	f003 0310 	and.w	r3, r3, #16
 80075c8:	2b00      	cmp	r3, #0
 80075ca:	d010      	beq.n	80075ee <HAL_RCC_ClockConfig+0xce>
  {
#if defined(RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	699a      	ldr	r2, [r3, #24]
 80075d0:	4b64      	ldr	r3, [pc, #400]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075d2:	69db      	ldr	r3, [r3, #28]
 80075d4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80075d8:	429a      	cmp	r2, r3
 80075da:	d908      	bls.n	80075ee <HAL_RCC_ClockConfig+0xce>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80075dc:	4b61      	ldr	r3, [pc, #388]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075de:	69db      	ldr	r3, [r3, #28]
 80075e0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	699b      	ldr	r3, [r3, #24]
 80075e8:	495e      	ldr	r1, [pc, #376]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075ea:	4313      	orrs	r3, r2
 80075ec:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	f003 0320 	and.w	r3, r3, #32
 80075f6:	2b00      	cmp	r3, #0
 80075f8:	d010      	beq.n	800761c <HAL_RCC_ClockConfig+0xfc>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	69da      	ldr	r2, [r3, #28]
 80075fe:	4b59      	ldr	r3, [pc, #356]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007600:	6a1b      	ldr	r3, [r3, #32]
 8007602:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007606:	429a      	cmp	r2, r3
 8007608:	d908      	bls.n	800761c <HAL_RCC_ClockConfig+0xfc>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 800760a:	4b56      	ldr	r3, [pc, #344]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800760c:	6a1b      	ldr	r3, [r3, #32]
 800760e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	69db      	ldr	r3, [r3, #28]
 8007616:	4953      	ldr	r1, [pc, #332]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007618:	4313      	orrs	r3, r2
 800761a:	620b      	str	r3, [r1, #32]
    }
#endif
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	681b      	ldr	r3, [r3, #0]
 8007620:	f003 0302 	and.w	r3, r3, #2
 8007624:	2b00      	cmp	r3, #0
 8007626:	d010      	beq.n	800764a <HAL_RCC_ClockConfig+0x12a>
  {
#if defined (RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	68da      	ldr	r2, [r3, #12]
 800762c:	4b4d      	ldr	r3, [pc, #308]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800762e:	699b      	ldr	r3, [r3, #24]
 8007630:	f003 030f 	and.w	r3, r3, #15
 8007634:	429a      	cmp	r2, r3
 8007636:	d908      	bls.n	800764a <HAL_RCC_ClockConfig+0x12a>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007638:	4b4a      	ldr	r3, [pc, #296]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800763a:	699b      	ldr	r3, [r3, #24]
 800763c:	f023 020f 	bic.w	r2, r3, #15
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	68db      	ldr	r3, [r3, #12]
 8007644:	4947      	ldr	r1, [pc, #284]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007646:	4313      	orrs	r3, r2
 8007648:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*------------------------- SYSCLK Configuration -------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800764a:	687b      	ldr	r3, [r7, #4]
 800764c:	681b      	ldr	r3, [r3, #0]
 800764e:	f003 0301 	and.w	r3, r3, #1
 8007652:	2b00      	cmp	r3, #0
 8007654:	d055      	beq.n	8007702 <HAL_RCC_ClockConfig+0x1e2>
  {
    assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
#if defined(RCC_D1CFGR_D1CPRE)
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 8007656:	4b43      	ldr	r3, [pc, #268]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007658:	699b      	ldr	r3, [r3, #24]
 800765a:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	689b      	ldr	r3, [r3, #8]
 8007662:	4940      	ldr	r1, [pc, #256]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007664:	4313      	orrs	r3, r2
 8007666:	618b      	str	r3, [r1, #24]
#else
    MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
#endif
    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	685b      	ldr	r3, [r3, #4]
 800766c:	2b02      	cmp	r3, #2
 800766e:	d107      	bne.n	8007680 <HAL_RCC_ClockConfig+0x160>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007670:	4b3c      	ldr	r3, [pc, #240]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007672:	681b      	ldr	r3, [r3, #0]
 8007674:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007678:	2b00      	cmp	r3, #0
 800767a:	d121      	bne.n	80076c0 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 800767c:	2301      	movs	r3, #1
 800767e:	e0f6      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007680:	687b      	ldr	r3, [r7, #4]
 8007682:	685b      	ldr	r3, [r3, #4]
 8007684:	2b03      	cmp	r3, #3
 8007686:	d107      	bne.n	8007698 <HAL_RCC_ClockConfig+0x178>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007688:	4b36      	ldr	r3, [pc, #216]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800768a:	681b      	ldr	r3, [r3, #0]
 800768c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007690:	2b00      	cmp	r3, #0
 8007692:	d115      	bne.n	80076c0 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007694:	2301      	movs	r3, #1
 8007696:	e0ea      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* CSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	685b      	ldr	r3, [r3, #4]
 800769c:	2b01      	cmp	r3, #1
 800769e:	d107      	bne.n	80076b0 <HAL_RCC_ClockConfig+0x190>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80076a0:	4b30      	ldr	r3, [pc, #192]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076a2:	681b      	ldr	r3, [r3, #0]
 80076a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80076a8:	2b00      	cmp	r3, #0
 80076aa:	d109      	bne.n	80076c0 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80076ac:	2301      	movs	r3, #1
 80076ae:	e0de      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80076b0:	4b2c      	ldr	r3, [pc, #176]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076b2:	681b      	ldr	r3, [r3, #0]
 80076b4:	f003 0304 	and.w	r3, r3, #4
 80076b8:	2b00      	cmp	r3, #0
 80076ba:	d101      	bne.n	80076c0 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80076bc:	2301      	movs	r3, #1
 80076be:	e0d6      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80076c0:	4b28      	ldr	r3, [pc, #160]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076c2:	691b      	ldr	r3, [r3, #16]
 80076c4:	f023 0207 	bic.w	r2, r3, #7
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	685b      	ldr	r3, [r3, #4]
 80076cc:	4925      	ldr	r1, [pc, #148]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076ce:	4313      	orrs	r3, r2
 80076d0:	610b      	str	r3, [r1, #16]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80076d2:	f7fa f9dd 	bl	8001a90 <HAL_GetTick>
 80076d6:	6178      	str	r0, [r7, #20]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80076d8:	e00a      	b.n	80076f0 <HAL_RCC_ClockConfig+0x1d0>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80076da:	f7fa f9d9 	bl	8001a90 <HAL_GetTick>
 80076de:	4602      	mov	r2, r0
 80076e0:	697b      	ldr	r3, [r7, #20]
 80076e2:	1ad3      	subs	r3, r2, r3
 80076e4:	f241 3288 	movw	r2, #5000	; 0x1388
 80076e8:	4293      	cmp	r3, r2
 80076ea:	d901      	bls.n	80076f0 <HAL_RCC_ClockConfig+0x1d0>
      {
        return HAL_TIMEOUT;
 80076ec:	2303      	movs	r3, #3
 80076ee:	e0be      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80076f0:	4b1c      	ldr	r3, [pc, #112]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076f2:	691b      	ldr	r3, [r3, #16]
 80076f4:	f003 0238 	and.w	r2, r3, #56	; 0x38
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	685b      	ldr	r3, [r3, #4]
 80076fc:	00db      	lsls	r3, r3, #3
 80076fe:	429a      	cmp	r2, r3
 8007700:	d1eb      	bne.n	80076da <HAL_RCC_ClockConfig+0x1ba>

  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	681b      	ldr	r3, [r3, #0]
 8007706:	f003 0302 	and.w	r3, r3, #2
 800770a:	2b00      	cmp	r3, #0
 800770c:	d010      	beq.n	8007730 <HAL_RCC_ClockConfig+0x210>
  {
#if defined(RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	68da      	ldr	r2, [r3, #12]
 8007712:	4b14      	ldr	r3, [pc, #80]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007714:	699b      	ldr	r3, [r3, #24]
 8007716:	f003 030f 	and.w	r3, r3, #15
 800771a:	429a      	cmp	r2, r3
 800771c:	d208      	bcs.n	8007730 <HAL_RCC_ClockConfig+0x210>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800771e:	4b11      	ldr	r3, [pc, #68]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007720:	699b      	ldr	r3, [r3, #24]
 8007722:	f023 020f 	bic.w	r2, r3, #15
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	68db      	ldr	r3, [r3, #12]
 800772a:	490e      	ldr	r1, [pc, #56]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800772c:	4313      	orrs	r3, r2
 800772e:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8007730:	4b0b      	ldr	r3, [pc, #44]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	f003 030f 	and.w	r3, r3, #15
 8007738:	683a      	ldr	r2, [r7, #0]
 800773a:	429a      	cmp	r2, r3
 800773c:	d214      	bcs.n	8007768 <HAL_RCC_ClockConfig+0x248>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800773e:	4b08      	ldr	r3, [pc, #32]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007740:	681b      	ldr	r3, [r3, #0]
 8007742:	f023 020f 	bic.w	r2, r3, #15
 8007746:	4906      	ldr	r1, [pc, #24]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007748:	683b      	ldr	r3, [r7, #0]
 800774a:	4313      	orrs	r3, r2
 800774c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800774e:	4b04      	ldr	r3, [pc, #16]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007750:	681b      	ldr	r3, [r3, #0]
 8007752:	f003 030f 	and.w	r3, r3, #15
 8007756:	683a      	ldr	r2, [r7, #0]
 8007758:	429a      	cmp	r2, r3
 800775a:	d005      	beq.n	8007768 <HAL_RCC_ClockConfig+0x248>
    {
      return HAL_ERROR;
 800775c:	2301      	movs	r3, #1
 800775e:	e086      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
 8007760:	52002000 	.word	0x52002000
 8007764:	58024400 	.word	0x58024400
    }
  }

  /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	681b      	ldr	r3, [r3, #0]
 800776c:	f003 0304 	and.w	r3, r3, #4
 8007770:	2b00      	cmp	r3, #0
 8007772:	d010      	beq.n	8007796 <HAL_RCC_ClockConfig+0x276>
  {
#if defined(RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	691a      	ldr	r2, [r3, #16]
 8007778:	4b3f      	ldr	r3, [pc, #252]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 800777a:	699b      	ldr	r3, [r3, #24]
 800777c:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007780:	429a      	cmp	r2, r3
 8007782:	d208      	bcs.n	8007796 <HAL_RCC_ClockConfig+0x276>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007784:	4b3c      	ldr	r3, [pc, #240]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007786:	699b      	ldr	r3, [r3, #24]
 8007788:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	691b      	ldr	r3, [r3, #16]
 8007790:	4939      	ldr	r1, [pc, #228]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007792:	4313      	orrs	r3, r2
 8007794:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	f003 0308 	and.w	r3, r3, #8
 800779e:	2b00      	cmp	r3, #0
 80077a0:	d010      	beq.n	80077c4 <HAL_RCC_ClockConfig+0x2a4>
  {
#if defined(RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	695a      	ldr	r2, [r3, #20]
 80077a6:	4b34      	ldr	r3, [pc, #208]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077a8:	69db      	ldr	r3, [r3, #28]
 80077aa:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80077ae:	429a      	cmp	r2, r3
 80077b0:	d208      	bcs.n	80077c4 <HAL_RCC_ClockConfig+0x2a4>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80077b2:	4b31      	ldr	r3, [pc, #196]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077b4:	69db      	ldr	r3, [r3, #28]
 80077b6:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80077ba:	687b      	ldr	r3, [r7, #4]
 80077bc:	695b      	ldr	r3, [r3, #20]
 80077be:	492e      	ldr	r1, [pc, #184]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077c0:	4313      	orrs	r3, r2
 80077c2:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80077c4:	687b      	ldr	r3, [r7, #4]
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	f003 0310 	and.w	r3, r3, #16
 80077cc:	2b00      	cmp	r3, #0
 80077ce:	d010      	beq.n	80077f2 <HAL_RCC_ClockConfig+0x2d2>
  {
#if defined (RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	699a      	ldr	r2, [r3, #24]
 80077d4:	4b28      	ldr	r3, [pc, #160]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077d6:	69db      	ldr	r3, [r3, #28]
 80077d8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80077dc:	429a      	cmp	r2, r3
 80077de:	d208      	bcs.n	80077f2 <HAL_RCC_ClockConfig+0x2d2>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80077e0:	4b25      	ldr	r3, [pc, #148]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077e2:	69db      	ldr	r3, [r3, #28]
 80077e4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	699b      	ldr	r3, [r3, #24]
 80077ec:	4922      	ldr	r1, [pc, #136]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077ee:	4313      	orrs	r3, r2
 80077f0:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	681b      	ldr	r3, [r3, #0]
 80077f6:	f003 0320 	and.w	r3, r3, #32
 80077fa:	2b00      	cmp	r3, #0
 80077fc:	d010      	beq.n	8007820 <HAL_RCC_ClockConfig+0x300>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	69da      	ldr	r2, [r3, #28]
 8007802:	4b1d      	ldr	r3, [pc, #116]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007804:	6a1b      	ldr	r3, [r3, #32]
 8007806:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800780a:	429a      	cmp	r2, r3
 800780c:	d208      	bcs.n	8007820 <HAL_RCC_ClockConfig+0x300>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 800780e:	4b1a      	ldr	r3, [pc, #104]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007810:	6a1b      	ldr	r3, [r3, #32]
 8007812:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	69db      	ldr	r3, [r3, #28]
 800781a:	4917      	ldr	r1, [pc, #92]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 800781c:	4313      	orrs	r3, r2
 800781e:	620b      	str	r3, [r1, #32]
#endif
  }

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8007820:	f000 f834 	bl	800788c <HAL_RCC_GetSysClockFreq>
 8007824:	4602      	mov	r2, r0
 8007826:	4b14      	ldr	r3, [pc, #80]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007828:	699b      	ldr	r3, [r3, #24]
 800782a:	0a1b      	lsrs	r3, r3, #8
 800782c:	f003 030f 	and.w	r3, r3, #15
 8007830:	4912      	ldr	r1, [pc, #72]	; (800787c <HAL_RCC_ClockConfig+0x35c>)
 8007832:	5ccb      	ldrb	r3, [r1, r3]
 8007834:	f003 031f 	and.w	r3, r3, #31
 8007838:	fa22 f303 	lsr.w	r3, r2, r3
 800783c:	613b      	str	r3, [r7, #16]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800783e:	4b0e      	ldr	r3, [pc, #56]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007840:	699b      	ldr	r3, [r3, #24]
 8007842:	f003 030f 	and.w	r3, r3, #15
 8007846:	4a0d      	ldr	r2, [pc, #52]	; (800787c <HAL_RCC_ClockConfig+0x35c>)
 8007848:	5cd3      	ldrb	r3, [r2, r3]
 800784a:	f003 031f 	and.w	r3, r3, #31
 800784e:	693a      	ldr	r2, [r7, #16]
 8007850:	fa22 f303 	lsr.w	r3, r2, r3
 8007854:	4a0a      	ldr	r2, [pc, #40]	; (8007880 <HAL_RCC_ClockConfig+0x360>)
 8007856:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007858:	4a0a      	ldr	r2, [pc, #40]	; (8007884 <HAL_RCC_ClockConfig+0x364>)
 800785a:	693b      	ldr	r3, [r7, #16]
 800785c:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 800785e:	4b0a      	ldr	r3, [pc, #40]	; (8007888 <HAL_RCC_ClockConfig+0x368>)
 8007860:	681b      	ldr	r3, [r3, #0]
 8007862:	4618      	mov	r0, r3
 8007864:	f7fa f8ca 	bl	80019fc <HAL_InitTick>
 8007868:	4603      	mov	r3, r0
 800786a:	73fb      	strb	r3, [r7, #15]

  return halstatus;
 800786c:	7bfb      	ldrb	r3, [r7, #15]
}
 800786e:	4618      	mov	r0, r3
 8007870:	3718      	adds	r7, #24
 8007872:	46bd      	mov	sp, r7
 8007874:	bd80      	pop	{r7, pc}
 8007876:	bf00      	nop
 8007878:	58024400 	.word	0x58024400
 800787c:	08024ac8 	.word	0x08024ac8
 8007880:	24000008 	.word	0x24000008
 8007884:	24000004 	.word	0x24000004
 8007888:	2400000c 	.word	0x2400000c

0800788c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800788c:	b480      	push	{r7}
 800788e:	b089      	sub	sp, #36	; 0x24
 8007890:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007892:	4bb3      	ldr	r3, [pc, #716]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007894:	691b      	ldr	r3, [r3, #16]
 8007896:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800789a:	2b18      	cmp	r3, #24
 800789c:	f200 8155 	bhi.w	8007b4a <HAL_RCC_GetSysClockFreq+0x2be>
 80078a0:	a201      	add	r2, pc, #4	; (adr r2, 80078a8 <HAL_RCC_GetSysClockFreq+0x1c>)
 80078a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80078a6:	bf00      	nop
 80078a8:	0800790d 	.word	0x0800790d
 80078ac:	08007b4b 	.word	0x08007b4b
 80078b0:	08007b4b 	.word	0x08007b4b
 80078b4:	08007b4b 	.word	0x08007b4b
 80078b8:	08007b4b 	.word	0x08007b4b
 80078bc:	08007b4b 	.word	0x08007b4b
 80078c0:	08007b4b 	.word	0x08007b4b
 80078c4:	08007b4b 	.word	0x08007b4b
 80078c8:	08007933 	.word	0x08007933
 80078cc:	08007b4b 	.word	0x08007b4b
 80078d0:	08007b4b 	.word	0x08007b4b
 80078d4:	08007b4b 	.word	0x08007b4b
 80078d8:	08007b4b 	.word	0x08007b4b
 80078dc:	08007b4b 	.word	0x08007b4b
 80078e0:	08007b4b 	.word	0x08007b4b
 80078e4:	08007b4b 	.word	0x08007b4b
 80078e8:	08007939 	.word	0x08007939
 80078ec:	08007b4b 	.word	0x08007b4b
 80078f0:	08007b4b 	.word	0x08007b4b
 80078f4:	08007b4b 	.word	0x08007b4b
 80078f8:	08007b4b 	.word	0x08007b4b
 80078fc:	08007b4b 	.word	0x08007b4b
 8007900:	08007b4b 	.word	0x08007b4b
 8007904:	08007b4b 	.word	0x08007b4b
 8007908:	0800793f 	.word	0x0800793f
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800790c:	4b94      	ldr	r3, [pc, #592]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800790e:	681b      	ldr	r3, [r3, #0]
 8007910:	f003 0320 	and.w	r3, r3, #32
 8007914:	2b00      	cmp	r3, #0
 8007916:	d009      	beq.n	800792c <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007918:	4b91      	ldr	r3, [pc, #580]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800791a:	681b      	ldr	r3, [r3, #0]
 800791c:	08db      	lsrs	r3, r3, #3
 800791e:	f003 0303 	and.w	r3, r3, #3
 8007922:	4a90      	ldr	r2, [pc, #576]	; (8007b64 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007924:	fa22 f303 	lsr.w	r3, r2, r3
 8007928:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 800792a:	e111      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 800792c:	4b8d      	ldr	r3, [pc, #564]	; (8007b64 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800792e:	61bb      	str	r3, [r7, #24]
      break;
 8007930:	e10e      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 8007932:	4b8d      	ldr	r3, [pc, #564]	; (8007b68 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007934:	61bb      	str	r3, [r7, #24]
      break;
 8007936:	e10b      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 8007938:	4b8c      	ldr	r3, [pc, #560]	; (8007b6c <HAL_RCC_GetSysClockFreq+0x2e0>)
 800793a:	61bb      	str	r3, [r7, #24]
      break;
 800793c:	e108      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800793e:	4b88      	ldr	r3, [pc, #544]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007940:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007942:	f003 0303 	and.w	r3, r3, #3
 8007946:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8007948:	4b85      	ldr	r3, [pc, #532]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800794a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800794c:	091b      	lsrs	r3, r3, #4
 800794e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8007952:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8007954:	4b82      	ldr	r3, [pc, #520]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007956:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007958:	f003 0301 	and.w	r3, r3, #1
 800795c:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 800795e:	4b80      	ldr	r3, [pc, #512]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007960:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007962:	08db      	lsrs	r3, r3, #3
 8007964:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8007968:	68fa      	ldr	r2, [r7, #12]
 800796a:	fb02 f303 	mul.w	r3, r2, r3
 800796e:	ee07 3a90 	vmov	s15, r3
 8007972:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007976:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 800797a:	693b      	ldr	r3, [r7, #16]
 800797c:	2b00      	cmp	r3, #0
 800797e:	f000 80e1 	beq.w	8007b44 <HAL_RCC_GetSysClockFreq+0x2b8>
 8007982:	697b      	ldr	r3, [r7, #20]
 8007984:	2b02      	cmp	r3, #2
 8007986:	f000 8083 	beq.w	8007a90 <HAL_RCC_GetSysClockFreq+0x204>
 800798a:	697b      	ldr	r3, [r7, #20]
 800798c:	2b02      	cmp	r3, #2
 800798e:	f200 80a1 	bhi.w	8007ad4 <HAL_RCC_GetSysClockFreq+0x248>
 8007992:	697b      	ldr	r3, [r7, #20]
 8007994:	2b00      	cmp	r3, #0
 8007996:	d003      	beq.n	80079a0 <HAL_RCC_GetSysClockFreq+0x114>
 8007998:	697b      	ldr	r3, [r7, #20]
 800799a:	2b01      	cmp	r3, #1
 800799c:	d056      	beq.n	8007a4c <HAL_RCC_GetSysClockFreq+0x1c0>
 800799e:	e099      	b.n	8007ad4 <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80079a0:	4b6f      	ldr	r3, [pc, #444]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80079a2:	681b      	ldr	r3, [r3, #0]
 80079a4:	f003 0320 	and.w	r3, r3, #32
 80079a8:	2b00      	cmp	r3, #0
 80079aa:	d02d      	beq.n	8007a08 <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80079ac:	4b6c      	ldr	r3, [pc, #432]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80079ae:	681b      	ldr	r3, [r3, #0]
 80079b0:	08db      	lsrs	r3, r3, #3
 80079b2:	f003 0303 	and.w	r3, r3, #3
 80079b6:	4a6b      	ldr	r2, [pc, #428]	; (8007b64 <HAL_RCC_GetSysClockFreq+0x2d8>)
 80079b8:	fa22 f303 	lsr.w	r3, r2, r3
 80079bc:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80079be:	687b      	ldr	r3, [r7, #4]
 80079c0:	ee07 3a90 	vmov	s15, r3
 80079c4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80079c8:	693b      	ldr	r3, [r7, #16]
 80079ca:	ee07 3a90 	vmov	s15, r3
 80079ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80079d2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80079d6:	4b62      	ldr	r3, [pc, #392]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80079d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80079da:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80079de:	ee07 3a90 	vmov	s15, r3
 80079e2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80079e6:	ed97 6a02 	vldr	s12, [r7, #8]
 80079ea:	eddf 5a61 	vldr	s11, [pc, #388]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 80079ee:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80079f2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80079f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80079fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80079fe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007a02:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 8007a06:	e087      	b.n	8007b18 <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007a08:	693b      	ldr	r3, [r7, #16]
 8007a0a:	ee07 3a90 	vmov	s15, r3
 8007a0e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007a12:	eddf 6a58 	vldr	s13, [pc, #352]	; 8007b74 <HAL_RCC_GetSysClockFreq+0x2e8>
 8007a16:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007a1a:	4b51      	ldr	r3, [pc, #324]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007a1e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007a22:	ee07 3a90 	vmov	s15, r3
 8007a26:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007a2a:	ed97 6a02 	vldr	s12, [r7, #8]
 8007a2e:	eddf 5a50 	vldr	s11, [pc, #320]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007a32:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007a36:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007a3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007a3e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007a42:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007a46:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007a4a:	e065      	b.n	8007b18 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007a4c:	693b      	ldr	r3, [r7, #16]
 8007a4e:	ee07 3a90 	vmov	s15, r3
 8007a52:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007a56:	eddf 6a48 	vldr	s13, [pc, #288]	; 8007b78 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007a5a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007a5e:	4b40      	ldr	r3, [pc, #256]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007a62:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007a66:	ee07 3a90 	vmov	s15, r3
 8007a6a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007a6e:	ed97 6a02 	vldr	s12, [r7, #8]
 8007a72:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007a76:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007a7a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007a7e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007a82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007a86:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007a8a:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007a8e:	e043      	b.n	8007b18 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007a90:	693b      	ldr	r3, [r7, #16]
 8007a92:	ee07 3a90 	vmov	s15, r3
 8007a96:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007a9a:	eddf 6a38 	vldr	s13, [pc, #224]	; 8007b7c <HAL_RCC_GetSysClockFreq+0x2f0>
 8007a9e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007aa2:	4b2f      	ldr	r3, [pc, #188]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007aa4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007aa6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007aaa:	ee07 3a90 	vmov	s15, r3
 8007aae:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007ab2:	ed97 6a02 	vldr	s12, [r7, #8]
 8007ab6:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007aba:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007abe:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007ac2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007ac6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007aca:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007ace:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007ad2:	e021      	b.n	8007b18 <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007ad4:	693b      	ldr	r3, [r7, #16]
 8007ad6:	ee07 3a90 	vmov	s15, r3
 8007ada:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007ade:	eddf 6a26 	vldr	s13, [pc, #152]	; 8007b78 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007ae2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007ae6:	4b1e      	ldr	r3, [pc, #120]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007ae8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007aea:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007aee:	ee07 3a90 	vmov	s15, r3
 8007af2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007af6:	ed97 6a02 	vldr	s12, [r7, #8]
 8007afa:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007afe:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007b02:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007b06:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007b0a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007b0e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007b12:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007b16:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8007b18:	4b11      	ldr	r3, [pc, #68]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007b1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b1c:	0a5b      	lsrs	r3, r3, #9
 8007b1e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007b22:	3301      	adds	r3, #1
 8007b24:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8007b26:	683b      	ldr	r3, [r7, #0]
 8007b28:	ee07 3a90 	vmov	s15, r3
 8007b2c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8007b30:	edd7 6a07 	vldr	s13, [r7, #28]
 8007b34:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007b38:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007b3c:	ee17 3a90 	vmov	r3, s15
 8007b40:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8007b42:	e005      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8007b44:	2300      	movs	r3, #0
 8007b46:	61bb      	str	r3, [r7, #24]
      break;
 8007b48:	e002      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 8007b4a:	4b07      	ldr	r3, [pc, #28]	; (8007b68 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007b4c:	61bb      	str	r3, [r7, #24]
      break;
 8007b4e:	bf00      	nop
  }

  return sysclockfreq;
 8007b50:	69bb      	ldr	r3, [r7, #24]
}
 8007b52:	4618      	mov	r0, r3
 8007b54:	3724      	adds	r7, #36	; 0x24
 8007b56:	46bd      	mov	sp, r7
 8007b58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b5c:	4770      	bx	lr
 8007b5e:	bf00      	nop
 8007b60:	58024400 	.word	0x58024400
 8007b64:	03d09000 	.word	0x03d09000
 8007b68:	003d0900 	.word	0x003d0900
 8007b6c:	017d7840 	.word	0x017d7840
 8007b70:	46000000 	.word	0x46000000
 8007b74:	4c742400 	.word	0x4c742400
 8007b78:	4a742400 	.word	0x4a742400
 8007b7c:	4bbebc20 	.word	0x4bbebc20

08007b80 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8007b80:	b580      	push	{r7, lr}
 8007b82:	b082      	sub	sp, #8
 8007b84:	af00      	add	r7, sp, #0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8007b86:	f7ff fe81 	bl	800788c <HAL_RCC_GetSysClockFreq>
 8007b8a:	4602      	mov	r2, r0
 8007b8c:	4b10      	ldr	r3, [pc, #64]	; (8007bd0 <HAL_RCC_GetHCLKFreq+0x50>)
 8007b8e:	699b      	ldr	r3, [r3, #24]
 8007b90:	0a1b      	lsrs	r3, r3, #8
 8007b92:	f003 030f 	and.w	r3, r3, #15
 8007b96:	490f      	ldr	r1, [pc, #60]	; (8007bd4 <HAL_RCC_GetHCLKFreq+0x54>)
 8007b98:	5ccb      	ldrb	r3, [r1, r3]
 8007b9a:	f003 031f 	and.w	r3, r3, #31
 8007b9e:	fa22 f303 	lsr.w	r3, r2, r3
 8007ba2:	607b      	str	r3, [r7, #4]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007ba4:	4b0a      	ldr	r3, [pc, #40]	; (8007bd0 <HAL_RCC_GetHCLKFreq+0x50>)
 8007ba6:	699b      	ldr	r3, [r3, #24]
 8007ba8:	f003 030f 	and.w	r3, r3, #15
 8007bac:	4a09      	ldr	r2, [pc, #36]	; (8007bd4 <HAL_RCC_GetHCLKFreq+0x54>)
 8007bae:	5cd3      	ldrb	r3, [r2, r3]
 8007bb0:	f003 031f 	and.w	r3, r3, #31
 8007bb4:	687a      	ldr	r2, [r7, #4]
 8007bb6:	fa22 f303 	lsr.w	r3, r2, r3
 8007bba:	4a07      	ldr	r2, [pc, #28]	; (8007bd8 <HAL_RCC_GetHCLKFreq+0x58>)
 8007bbc:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007bbe:	4a07      	ldr	r2, [pc, #28]	; (8007bdc <HAL_RCC_GetHCLKFreq+0x5c>)
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
 8007bc4:	4b04      	ldr	r3, [pc, #16]	; (8007bd8 <HAL_RCC_GetHCLKFreq+0x58>)
 8007bc6:	681b      	ldr	r3, [r3, #0]
}
 8007bc8:	4618      	mov	r0, r3
 8007bca:	3708      	adds	r7, #8
 8007bcc:	46bd      	mov	sp, r7
 8007bce:	bd80      	pop	{r7, pc}
 8007bd0:	58024400 	.word	0x58024400
 8007bd4:	08024ac8 	.word	0x08024ac8
 8007bd8:	24000008 	.word	0x24000008
 8007bdc:	24000004 	.word	0x24000004

08007be0 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007be0:	b580      	push	{r7, lr}
 8007be2:	af00      	add	r7, sp, #0
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8007be4:	f7ff ffcc 	bl	8007b80 <HAL_RCC_GetHCLKFreq>
 8007be8:	4602      	mov	r2, r0
 8007bea:	4b06      	ldr	r3, [pc, #24]	; (8007c04 <HAL_RCC_GetPCLK1Freq+0x24>)
 8007bec:	69db      	ldr	r3, [r3, #28]
 8007bee:	091b      	lsrs	r3, r3, #4
 8007bf0:	f003 0307 	and.w	r3, r3, #7
 8007bf4:	4904      	ldr	r1, [pc, #16]	; (8007c08 <HAL_RCC_GetPCLK1Freq+0x28>)
 8007bf6:	5ccb      	ldrb	r3, [r1, r3]
 8007bf8:	f003 031f 	and.w	r3, r3, #31
 8007bfc:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8007c00:	4618      	mov	r0, r3
 8007c02:	bd80      	pop	{r7, pc}
 8007c04:	58024400 	.word	0x58024400
 8007c08:	08024ac8 	.word	0x08024ac8

08007c0c <HAL_RCCEx_PeriphCLKConfig>:
  * (*) : Available on some STM32H7 lines only.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8007c0c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007c10:	b0c6      	sub	sp, #280	; 0x118
 8007c12:	af00      	add	r7, sp, #0
 8007c14:	f8c7 0104 	str.w	r0, [r7, #260]	; 0x104
  uint32_t tmpreg;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8007c18:	2300      	movs	r3, #0
 8007c1a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8007c1e:	2300      	movs	r3, #0
 8007c20:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116

  /*---------------------------- SPDIFRX configuration -------------------------------*/

  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8007c24:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c2c:	f002 6400 	and.w	r4, r2, #134217728	; 0x8000000
 8007c30:	2500      	movs	r5, #0
 8007c32:	ea54 0305 	orrs.w	r3, r4, r5
 8007c36:	d049      	beq.n	8007ccc <HAL_RCCEx_PeriphCLKConfig+0xc0>
  {

    switch (PeriphClkInit->SpdifrxClockSelection)
 8007c38:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c3c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007c3e:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007c42:	d02f      	beq.n	8007ca4 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8007c44:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007c48:	d828      	bhi.n	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007c4a:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007c4e:	d01a      	beq.n	8007c86 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8007c50:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007c54:	d822      	bhi.n	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007c56:	2b00      	cmp	r3, #0
 8007c58:	d003      	beq.n	8007c62 <HAL_RCCEx_PeriphCLKConfig+0x56>
 8007c5a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007c5e:	d007      	beq.n	8007c70 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8007c60:	e01c      	b.n	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x90>
    {
      case RCC_SPDIFRXCLKSOURCE_PLL:      /* PLL is used as clock source for SPDIFRX*/
        /* Enable PLL1Q Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c62:	4bab      	ldr	r3, [pc, #684]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007c64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007c66:	4aaa      	ldr	r2, [pc, #680]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007c68:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007c6c:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8007c6e:	e01a      	b.n	8007ca6 <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL2: /* PLL2 is used as clock source for SPDIFRX*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007c70:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c74:	3308      	adds	r3, #8
 8007c76:	2102      	movs	r1, #2
 8007c78:	4618      	mov	r0, r3
 8007c7a:	f002 fa49 	bl	800a110 <RCCEx_PLL2_Config>
 8007c7e:	4603      	mov	r3, r0
 8007c80:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8007c84:	e00f      	b.n	8007ca6 <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPDIFRX*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007c86:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c8a:	3328      	adds	r3, #40	; 0x28
 8007c8c:	2102      	movs	r1, #2
 8007c8e:	4618      	mov	r0, r3
 8007c90:	f002 faf0 	bl	800a274 <RCCEx_PLL3_Config>
 8007c94:	4603      	mov	r3, r0
 8007c96:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8007c9a:	e004      	b.n	8007ca6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
        /* Internal OSC clock is used as source of SPDIFRX clock*/
        /* SPDIFRX clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007c9c:	2301      	movs	r3, #1
 8007c9e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007ca2:	e000      	b.n	8007ca6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
        break;
 8007ca4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007ca6:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007caa:	2b00      	cmp	r3, #0
 8007cac:	d10a      	bne.n	8007cc4 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    {
      /* Set the source of SPDIFRX clock*/
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8007cae:	4b98      	ldr	r3, [pc, #608]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007cb0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007cb2:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8007cb6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007cba:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007cbc:	4a94      	ldr	r2, [pc, #592]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007cbe:	430b      	orrs	r3, r1
 8007cc0:	6513      	str	r3, [r2, #80]	; 0x50
 8007cc2:	e003      	b.n	8007ccc <HAL_RCCEx_PeriphCLKConfig+0xc0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007cc4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007cc8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SAI1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8007ccc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007cd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cd4:	f402 7880 	and.w	r8, r2, #256	; 0x100
 8007cd8:	f04f 0900 	mov.w	r9, #0
 8007cdc:	ea58 0309 	orrs.w	r3, r8, r9
 8007ce0:	d047      	beq.n	8007d72 <HAL_RCCEx_PeriphCLKConfig+0x166>
  {
    switch (PeriphClkInit->Sai1ClockSelection)
 8007ce2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007ce6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007ce8:	2b04      	cmp	r3, #4
 8007cea:	d82a      	bhi.n	8007d42 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8007cec:	a201      	add	r2, pc, #4	; (adr r2, 8007cf4 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8007cee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007cf2:	bf00      	nop
 8007cf4:	08007d09 	.word	0x08007d09
 8007cf8:	08007d17 	.word	0x08007d17
 8007cfc:	08007d2d 	.word	0x08007d2d
 8007d00:	08007d4b 	.word	0x08007d4b
 8007d04:	08007d4b 	.word	0x08007d4b
    {
      case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007d08:	4b81      	ldr	r3, [pc, #516]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007d0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007d0c:	4a80      	ldr	r2, [pc, #512]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007d0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007d12:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007d14:	e01a      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007d16:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d1a:	3308      	adds	r3, #8
 8007d1c:	2100      	movs	r1, #0
 8007d1e:	4618      	mov	r0, r3
 8007d20:	f002 f9f6 	bl	800a110 <RCCEx_PLL2_Config>
 8007d24:	4603      	mov	r3, r0
 8007d26:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007d2a:	e00f      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007d2c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d30:	3328      	adds	r3, #40	; 0x28
 8007d32:	2100      	movs	r1, #0
 8007d34:	4618      	mov	r0, r3
 8007d36:	f002 fa9d 	bl	800a274 <RCCEx_PLL3_Config>
 8007d3a:	4603      	mov	r3, r0
 8007d3c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007d40:	e004      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x140>
        /* HSI, HSE, or CSI oscillator is used as source of SAI1 clock */
        /* SAI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007d42:	2301      	movs	r3, #1
 8007d44:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007d48:	e000      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x140>
        break;
 8007d4a:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007d4c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d10a      	bne.n	8007d6a <HAL_RCCEx_PeriphCLKConfig+0x15e>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007d54:	4b6e      	ldr	r3, [pc, #440]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007d56:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007d58:	f023 0107 	bic.w	r1, r3, #7
 8007d5c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d60:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007d62:	4a6b      	ldr	r2, [pc, #428]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007d64:	430b      	orrs	r3, r1
 8007d66:	6513      	str	r3, [r2, #80]	; 0x50
 8007d68:	e003      	b.n	8007d72 <HAL_RCCEx_PeriphCLKConfig+0x166>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007d6a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007d6e:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif  /*SAI2B*/

#if defined(SAI4)
  /*---------------------------- SAI4A configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8007d72:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d7a:	f402 6a80 	and.w	sl, r2, #1024	; 0x400
 8007d7e:	f04f 0b00 	mov.w	fp, #0
 8007d82:	ea5a 030b 	orrs.w	r3, sl, fp
 8007d86:	d05b      	beq.n	8007e40 <HAL_RCCEx_PeriphCLKConfig+0x234>
  {
    switch (PeriphClkInit->Sai4AClockSelection)
 8007d88:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d8c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8007d90:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 8007d94:	d03b      	beq.n	8007e0e <HAL_RCCEx_PeriphCLKConfig+0x202>
 8007d96:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 8007d9a:	d834      	bhi.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007d9c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8007da0:	d037      	beq.n	8007e12 <HAL_RCCEx_PeriphCLKConfig+0x206>
 8007da2:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8007da6:	d82e      	bhi.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007da8:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8007dac:	d033      	beq.n	8007e16 <HAL_RCCEx_PeriphCLKConfig+0x20a>
 8007dae:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8007db2:	d828      	bhi.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007db4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007db8:	d01a      	beq.n	8007df0 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 8007dba:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007dbe:	d822      	bhi.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007dc0:	2b00      	cmp	r3, #0
 8007dc2:	d003      	beq.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 8007dc4:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007dc8:	d007      	beq.n	8007dda <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 8007dca:	e01c      	b.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    {
      case RCC_SAI4ACLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007dcc:	4b50      	ldr	r3, [pc, #320]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007dce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007dd0:	4a4f      	ldr	r2, [pc, #316]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007dd2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007dd6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007dd8:	e01e      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007dda:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007dde:	3308      	adds	r3, #8
 8007de0:	2100      	movs	r1, #0
 8007de2:	4618      	mov	r0, r3
 8007de4:	f002 f994 	bl	800a110 <RCCEx_PLL2_Config>
 8007de8:	4603      	mov	r3, r0
 8007dea:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8007dee:	e013      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007df0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007df4:	3328      	adds	r3, #40	; 0x28
 8007df6:	2100      	movs	r1, #0
 8007df8:	4618      	mov	r0, r3
 8007dfa:	f002 fa3b 	bl	800a274 <RCCEx_PLL3_Config>
 8007dfe:	4603      	mov	r3, r0
 8007e00:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007e04:	e008      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        /* SAI4A clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8007e06:	2301      	movs	r3, #1
 8007e08:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007e0c:	e004      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007e0e:	bf00      	nop
 8007e10:	e002      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007e12:	bf00      	nop
 8007e14:	e000      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007e16:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007e18:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007e1c:	2b00      	cmp	r3, #0
 8007e1e:	d10b      	bne.n	8007e38 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    {
      /* Set the source of SAI4A clock*/
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8007e20:	4b3b      	ldr	r3, [pc, #236]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007e22:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007e24:	f423 0160 	bic.w	r1, r3, #14680064	; 0xe00000
 8007e28:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007e2c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8007e30:	4a37      	ldr	r2, [pc, #220]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007e32:	430b      	orrs	r3, r1
 8007e34:	6593      	str	r3, [r2, #88]	; 0x58
 8007e36:	e003      	b.n	8007e40 <HAL_RCCEx_PeriphCLKConfig+0x234>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007e38:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007e3c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  /*---------------------------- SAI4B configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 8007e40:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007e44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e48:	f402 6300 	and.w	r3, r2, #2048	; 0x800
 8007e4c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8007e50:	2300      	movs	r3, #0
 8007e52:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8007e56:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	; 0xf8
 8007e5a:	460b      	mov	r3, r1
 8007e5c:	4313      	orrs	r3, r2
 8007e5e:	d05d      	beq.n	8007f1c <HAL_RCCEx_PeriphCLKConfig+0x310>
  {
    switch (PeriphClkInit->Sai4BClockSelection)
 8007e60:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007e64:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8007e68:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8007e6c:	d03b      	beq.n	8007ee6 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8007e6e:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8007e72:	d834      	bhi.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007e74:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8007e78:	d037      	beq.n	8007eea <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8007e7a:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8007e7e:	d82e      	bhi.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007e80:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8007e84:	d033      	beq.n	8007eee <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8007e86:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8007e8a:	d828      	bhi.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007e8c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007e90:	d01a      	beq.n	8007ec8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 8007e92:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007e96:	d822      	bhi.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007e98:	2b00      	cmp	r3, #0
 8007e9a:	d003      	beq.n	8007ea4 <HAL_RCCEx_PeriphCLKConfig+0x298>
 8007e9c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8007ea0:	d007      	beq.n	8007eb2 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 8007ea2:	e01c      	b.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
    {
      case RCC_SAI4BCLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007ea4:	4b1a      	ldr	r3, [pc, #104]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007ea6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ea8:	4a19      	ldr	r2, [pc, #100]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007eaa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007eae:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007eb0:	e01e      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007eb2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007eb6:	3308      	adds	r3, #8
 8007eb8:	2100      	movs	r1, #0
 8007eba:	4618      	mov	r0, r3
 8007ebc:	f002 f928 	bl	800a110 <RCCEx_PLL2_Config>
 8007ec0:	4603      	mov	r3, r0
 8007ec2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8007ec6:	e013      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007ec8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007ecc:	3328      	adds	r3, #40	; 0x28
 8007ece:	2100      	movs	r1, #0
 8007ed0:	4618      	mov	r0, r3
 8007ed2:	f002 f9cf 	bl	800a274 <RCCEx_PLL3_Config>
 8007ed6:	4603      	mov	r3, r0
 8007ed8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007edc:	e008      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        /* SAI4B clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8007ede:	2301      	movs	r3, #1
 8007ee0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007ee4:	e004      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007ee6:	bf00      	nop
 8007ee8:	e002      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007eea:	bf00      	nop
 8007eec:	e000      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007eee:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007ef0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007ef4:	2b00      	cmp	r3, #0
 8007ef6:	d10d      	bne.n	8007f14 <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Set the source of SAI4B clock*/
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8007ef8:	4b05      	ldr	r3, [pc, #20]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007efa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007efc:	f023 61e0 	bic.w	r1, r3, #117440512	; 0x7000000
 8007f00:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007f04:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8007f08:	4a01      	ldr	r2, [pc, #4]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007f0a:	430b      	orrs	r3, r1
 8007f0c:	6593      	str	r3, [r2, #88]	; 0x58
 8007f0e:	e005      	b.n	8007f1c <HAL_RCCEx_PeriphCLKConfig+0x310>
 8007f10:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007f14:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007f18:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif  /*QUADSPI*/

#if defined(OCTOSPI1) || defined(OCTOSPI2)
  /*---------------------------- OCTOSPI configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8007f1c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007f20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f24:	f002 7300 	and.w	r3, r2, #33554432	; 0x2000000
 8007f28:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8007f2c:	2300      	movs	r3, #0
 8007f2e:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8007f32:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	; 0xf0
 8007f36:	460b      	mov	r3, r1
 8007f38:	4313      	orrs	r3, r2
 8007f3a:	d03a      	beq.n	8007fb2 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
  {
    switch (PeriphClkInit->OspiClockSelection)
 8007f3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007f40:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007f42:	2b30      	cmp	r3, #48	; 0x30
 8007f44:	d01f      	beq.n	8007f86 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8007f46:	2b30      	cmp	r3, #48	; 0x30
 8007f48:	d819      	bhi.n	8007f7e <HAL_RCCEx_PeriphCLKConfig+0x372>
 8007f4a:	2b20      	cmp	r3, #32
 8007f4c:	d00c      	beq.n	8007f68 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8007f4e:	2b20      	cmp	r3, #32
 8007f50:	d815      	bhi.n	8007f7e <HAL_RCCEx_PeriphCLKConfig+0x372>
 8007f52:	2b00      	cmp	r3, #0
 8007f54:	d019      	beq.n	8007f8a <HAL_RCCEx_PeriphCLKConfig+0x37e>
 8007f56:	2b10      	cmp	r3, #16
 8007f58:	d111      	bne.n	8007f7e <HAL_RCCEx_PeriphCLKConfig+0x372>
    {
      case RCC_OSPICLKSOURCE_PLL:      /* PLL is used as clock source for OSPI*/
        /* Enable OSPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007f5a:	4baa      	ldr	r3, [pc, #680]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007f5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f5e:	4aa9      	ldr	r2, [pc, #676]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007f60:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007f64:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8007f66:	e011      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x380>

      case RCC_OSPICLKSOURCE_PLL2: /* PLL2 is used as clock source for OSPI*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007f68:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007f6c:	3308      	adds	r3, #8
 8007f6e:	2102      	movs	r1, #2
 8007f70:	4618      	mov	r0, r3
 8007f72:	f002 f8cd 	bl	800a110 <RCCEx_PLL2_Config>
 8007f76:	4603      	mov	r3, r0
 8007f78:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8007f7c:	e006      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x380>
      case RCC_OSPICLKSOURCE_HCLK:
        /* HCLK clock selected as OSPI kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8007f7e:	2301      	movs	r3, #1
 8007f80:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007f84:	e002      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8007f86:	bf00      	nop
 8007f88:	e000      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8007f8a:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007f8c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007f90:	2b00      	cmp	r3, #0
 8007f92:	d10a      	bne.n	8007faa <HAL_RCCEx_PeriphCLKConfig+0x39e>
    {
      /* Set the source of OSPI clock*/
      __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 8007f94:	4b9b      	ldr	r3, [pc, #620]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007f96:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007f98:	f023 0130 	bic.w	r1, r3, #48	; 0x30
 8007f9c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007fa0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007fa2:	4a98      	ldr	r2, [pc, #608]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007fa4:	430b      	orrs	r3, r1
 8007fa6:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007fa8:	e003      	b.n	8007fb2 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007faa:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007fae:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif  /*OCTOSPI*/

  /*---------------------------- SPI1/2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 8007fb2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007fb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007fba:	f402 5380 	and.w	r3, r2, #4096	; 0x1000
 8007fbe:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8007fc2:	2300      	movs	r3, #0
 8007fc4:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8007fc8:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	; 0xe8
 8007fcc:	460b      	mov	r3, r1
 8007fce:	4313      	orrs	r3, r2
 8007fd0:	d051      	beq.n	8008076 <HAL_RCCEx_PeriphCLKConfig+0x46a>
  {
    switch (PeriphClkInit->Spi123ClockSelection)
 8007fd2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007fd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007fd8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007fdc:	d035      	beq.n	800804a <HAL_RCCEx_PeriphCLKConfig+0x43e>
 8007fde:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007fe2:	d82e      	bhi.n	8008042 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007fe4:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8007fe8:	d031      	beq.n	800804e <HAL_RCCEx_PeriphCLKConfig+0x442>
 8007fea:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8007fee:	d828      	bhi.n	8008042 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007ff0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ff4:	d01a      	beq.n	800802c <HAL_RCCEx_PeriphCLKConfig+0x420>
 8007ff6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ffa:	d822      	bhi.n	8008042 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007ffc:	2b00      	cmp	r3, #0
 8007ffe:	d003      	beq.n	8008008 <HAL_RCCEx_PeriphCLKConfig+0x3fc>
 8008000:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008004:	d007      	beq.n	8008016 <HAL_RCCEx_PeriphCLKConfig+0x40a>
 8008006:	e01c      	b.n	8008042 <HAL_RCCEx_PeriphCLKConfig+0x436>
    {
      case RCC_SPI123CLKSOURCE_PLL:      /* PLL is used as clock source for SPI1/2/3 */
        /* Enable SPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008008:	4b7e      	ldr	r3, [pc, #504]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800800a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800800c:	4a7d      	ldr	r2, [pc, #500]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800800e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008012:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8008014:	e01c      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008016:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800801a:	3308      	adds	r3, #8
 800801c:	2100      	movs	r1, #0
 800801e:	4618      	mov	r0, r3
 8008020:	f002 f876 	bl	800a110 <RCCEx_PLL2_Config>
 8008024:	4603      	mov	r3, r0
 8008026:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 800802a:	e011      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800802c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008030:	3328      	adds	r3, #40	; 0x28
 8008032:	2100      	movs	r1, #0
 8008034:	4618      	mov	r0, r3
 8008036:	f002 f91d 	bl	800a274 <RCCEx_PLL3_Config>
 800803a:	4603      	mov	r3, r0
 800803c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8008040:	e006      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1/2/3 clock */
        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008042:	2301      	movs	r3, #1
 8008044:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008048:	e002      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 800804a:	bf00      	nop
 800804c:	e000      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 800804e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008050:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008054:	2b00      	cmp	r3, #0
 8008056:	d10a      	bne.n	800806e <HAL_RCCEx_PeriphCLKConfig+0x462>
    {
      /* Set the source of SPI1/2/3 clock*/
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8008058:	4b6a      	ldr	r3, [pc, #424]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800805a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800805c:	f423 41e0 	bic.w	r1, r3, #28672	; 0x7000
 8008060:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008064:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008066:	4a67      	ldr	r2, [pc, #412]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008068:	430b      	orrs	r3, r1
 800806a:	6513      	str	r3, [r2, #80]	; 0x50
 800806c:	e003      	b.n	8008076 <HAL_RCCEx_PeriphCLKConfig+0x46a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800806e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008072:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SPI4/5 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8008076:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800807a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800807e:	f402 5300 	and.w	r3, r2, #8192	; 0x2000
 8008082:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8008086:	2300      	movs	r3, #0
 8008088:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800808c:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	; 0xe0
 8008090:	460b      	mov	r3, r1
 8008092:	4313      	orrs	r3, r2
 8008094:	d053      	beq.n	800813e <HAL_RCCEx_PeriphCLKConfig+0x532>
  {
    switch (PeriphClkInit->Spi45ClockSelection)
 8008096:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800809a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800809c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80080a0:	d033      	beq.n	800810a <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 80080a2:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80080a6:	d82c      	bhi.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80080a8:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80080ac:	d02f      	beq.n	800810e <HAL_RCCEx_PeriphCLKConfig+0x502>
 80080ae:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80080b2:	d826      	bhi.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80080b4:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80080b8:	d02b      	beq.n	8008112 <HAL_RCCEx_PeriphCLKConfig+0x506>
 80080ba:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80080be:	d820      	bhi.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80080c0:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80080c4:	d012      	beq.n	80080ec <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80080c6:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80080ca:	d81a      	bhi.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80080cc:	2b00      	cmp	r3, #0
 80080ce:	d022      	beq.n	8008116 <HAL_RCCEx_PeriphCLKConfig+0x50a>
 80080d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80080d4:	d115      	bne.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI4/5 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80080d6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80080da:	3308      	adds	r3, #8
 80080dc:	2101      	movs	r1, #1
 80080de:	4618      	mov	r0, r3
 80080e0:	f002 f816 	bl	800a110 <RCCEx_PLL2_Config>
 80080e4:	4603      	mov	r3, r0
 80080e6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 80080ea:	e015      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
      case RCC_SPI45CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80080ec:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80080f0:	3328      	adds	r3, #40	; 0x28
 80080f2:	2101      	movs	r1, #1
 80080f4:	4618      	mov	r0, r3
 80080f6:	f002 f8bd 	bl	800a274 <RCCEx_PLL3_Config>
 80080fa:	4603      	mov	r3, r0
 80080fc:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8008100:	e00a      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        /* HSE,  oscillator is used as source of SPI4/5 clock */
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008102:	2301      	movs	r3, #1
 8008104:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008108:	e006      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 800810a:	bf00      	nop
 800810c:	e004      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 800810e:	bf00      	nop
 8008110:	e002      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8008112:	bf00      	nop
 8008114:	e000      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8008116:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008118:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800811c:	2b00      	cmp	r3, #0
 800811e:	d10a      	bne.n	8008136 <HAL_RCCEx_PeriphCLKConfig+0x52a>
    {
      /* Set the source of SPI4/5 clock*/
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8008120:	4b38      	ldr	r3, [pc, #224]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008122:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008124:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 8008128:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800812c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800812e:	4a35      	ldr	r2, [pc, #212]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008130:	430b      	orrs	r3, r1
 8008132:	6513      	str	r3, [r2, #80]	; 0x50
 8008134:	e003      	b.n	800813e <HAL_RCCEx_PeriphCLKConfig+0x532>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008136:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800813a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SPI6 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 800813e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008142:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008146:	f402 4380 	and.w	r3, r2, #16384	; 0x4000
 800814a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800814e:	2300      	movs	r3, #0
 8008150:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8008154:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8008158:	460b      	mov	r3, r1
 800815a:	4313      	orrs	r3, r2
 800815c:	d058      	beq.n	8008210 <HAL_RCCEx_PeriphCLKConfig+0x604>
  {
    switch (PeriphClkInit->Spi6ClockSelection)
 800815e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008162:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8008166:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800816a:	d033      	beq.n	80081d4 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 800816c:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008170:	d82c      	bhi.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8008172:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008176:	d02f      	beq.n	80081d8 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8008178:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800817c:	d826      	bhi.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800817e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008182:	d02b      	beq.n	80081dc <HAL_RCCEx_PeriphCLKConfig+0x5d0>
 8008184:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008188:	d820      	bhi.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800818a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800818e:	d012      	beq.n	80081b6 <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8008190:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008194:	d81a      	bhi.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8008196:	2b00      	cmp	r3, #0
 8008198:	d022      	beq.n	80081e0 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800819a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800819e:	d115      	bne.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI6*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80081a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80081a4:	3308      	adds	r3, #8
 80081a6:	2101      	movs	r1, #1
 80081a8:	4618      	mov	r0, r3
 80081aa:	f001 ffb1 	bl	800a110 <RCCEx_PLL2_Config>
 80081ae:	4603      	mov	r3, r0
 80081b0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80081b4:	e015      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
      case RCC_SPI6CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI6*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80081b6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80081ba:	3328      	adds	r3, #40	; 0x28
 80081bc:	2101      	movs	r1, #1
 80081be:	4618      	mov	r0, r3
 80081c0:	f002 f858 	bl	800a274 <RCCEx_PLL3_Config>
 80081c4:	4603      	mov	r3, r0
 80081c6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80081ca:	e00a      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        /* SPI6 clock source configuration done later after clock selection check */
        break;
#endif

      default:
        ret = HAL_ERROR;
 80081cc:	2301      	movs	r3, #1
 80081ce:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80081d2:	e006      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80081d4:	bf00      	nop
 80081d6:	e004      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80081d8:	bf00      	nop
 80081da:	e002      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80081dc:	bf00      	nop
 80081de:	e000      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80081e0:	bf00      	nop
    }

    if (ret == HAL_OK)
 80081e2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80081e6:	2b00      	cmp	r3, #0
 80081e8:	d10e      	bne.n	8008208 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
    {
      /* Set the source of SPI6 clock*/
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 80081ea:	4b06      	ldr	r3, [pc, #24]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 80081ec:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80081ee:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 80081f2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80081f6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80081fa:	4a02      	ldr	r2, [pc, #8]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 80081fc:	430b      	orrs	r3, r1
 80081fe:	6593      	str	r3, [r2, #88]	; 0x58
 8008200:	e006      	b.n	8008210 <HAL_RCCEx_PeriphCLKConfig+0x604>
 8008202:	bf00      	nop
 8008204:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008208:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800820c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif /*DSI*/

#if defined(FDCAN1) || defined(FDCAN2)
  /*---------------------------- FDCAN configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8008210:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008214:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008218:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 800821c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8008220:	2300      	movs	r3, #0
 8008222:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8008226:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	; 0xd0
 800822a:	460b      	mov	r3, r1
 800822c:	4313      	orrs	r3, r2
 800822e:	d037      	beq.n	80082a0 <HAL_RCCEx_PeriphCLKConfig+0x694>
  {
    switch (PeriphClkInit->FdcanClockSelection)
 8008230:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008234:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008236:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800823a:	d00e      	beq.n	800825a <HAL_RCCEx_PeriphCLKConfig+0x64e>
 800823c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008240:	d816      	bhi.n	8008270 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8008242:	2b00      	cmp	r3, #0
 8008244:	d018      	beq.n	8008278 <HAL_RCCEx_PeriphCLKConfig+0x66c>
 8008246:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800824a:	d111      	bne.n	8008270 <HAL_RCCEx_PeriphCLKConfig+0x664>
    {
      case RCC_FDCANCLKSOURCE_PLL:      /* PLL is used as clock source for FDCAN*/
        /* Enable FDCAN Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800824c:	4bc4      	ldr	r3, [pc, #784]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800824e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008250:	4ac3      	ldr	r2, [pc, #780]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008252:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008256:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 8008258:	e00f      	b.n	800827a <HAL_RCCEx_PeriphCLKConfig+0x66e>

      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is used as clock source for FDCAN*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800825a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800825e:	3308      	adds	r3, #8
 8008260:	2101      	movs	r1, #1
 8008262:	4618      	mov	r0, r3
 8008264:	f001 ff54 	bl	800a110 <RCCEx_PLL2_Config>
 8008268:	4603      	mov	r3, r0
 800826a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 800826e:	e004      	b.n	800827a <HAL_RCCEx_PeriphCLKConfig+0x66e>
        /* HSE is used as clock source for FDCAN*/
        /* FDCAN clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008270:	2301      	movs	r3, #1
 8008272:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008276:	e000      	b.n	800827a <HAL_RCCEx_PeriphCLKConfig+0x66e>
        break;
 8008278:	bf00      	nop
    }

    if (ret == HAL_OK)
 800827a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800827e:	2b00      	cmp	r3, #0
 8008280:	d10a      	bne.n	8008298 <HAL_RCCEx_PeriphCLKConfig+0x68c>
    {
      /* Set the source of FDCAN clock*/
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8008282:	4bb7      	ldr	r3, [pc, #732]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008284:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008286:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 800828a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800828e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008290:	4ab3      	ldr	r2, [pc, #716]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008292:	430b      	orrs	r3, r1
 8008294:	6513      	str	r3, [r2, #80]	; 0x50
 8008296:	e003      	b.n	80082a0 <HAL_RCCEx_PeriphCLKConfig+0x694>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008298:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800829c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif /*FDCAN1 || FDCAN2*/

  /*---------------------------- FMC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 80082a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80082a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082a8:	f002 7380 	and.w	r3, r2, #16777216	; 0x1000000
 80082ac:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80082b0:	2300      	movs	r3, #0
 80082b2:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80082b6:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	; 0xc8
 80082ba:	460b      	mov	r3, r1
 80082bc:	4313      	orrs	r3, r2
 80082be:	d039      	beq.n	8008334 <HAL_RCCEx_PeriphCLKConfig+0x728>
  {
    switch (PeriphClkInit->FmcClockSelection)
 80082c0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80082c4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80082c6:	2b03      	cmp	r3, #3
 80082c8:	d81c      	bhi.n	8008304 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
 80082ca:	a201      	add	r2, pc, #4	; (adr r2, 80082d0 <HAL_RCCEx_PeriphCLKConfig+0x6c4>)
 80082cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80082d0:	0800830d 	.word	0x0800830d
 80082d4:	080082e1 	.word	0x080082e1
 80082d8:	080082ef 	.word	0x080082ef
 80082dc:	0800830d 	.word	0x0800830d
    {
      case RCC_FMCCLKSOURCE_PLL:      /* PLL is used as clock source for FMC*/
        /* Enable FMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80082e0:	4b9f      	ldr	r3, [pc, #636]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80082e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082e4:	4a9e      	ldr	r2, [pc, #632]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80082e6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80082ea:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FMC clock source configuration done later after clock selection check */
        break;
 80082ec:	e00f      	b.n	800830e <HAL_RCCEx_PeriphCLKConfig+0x702>

      case RCC_FMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for FMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80082ee:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80082f2:	3308      	adds	r3, #8
 80082f4:	2102      	movs	r1, #2
 80082f6:	4618      	mov	r0, r3
 80082f8:	f001 ff0a 	bl	800a110 <RCCEx_PLL2_Config>
 80082fc:	4603      	mov	r3, r0
 80082fe:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* FMC clock source configuration done later after clock selection check */
        break;
 8008302:	e004      	b.n	800830e <HAL_RCCEx_PeriphCLKConfig+0x702>
      case RCC_FMCCLKSOURCE_HCLK:
        /* D1/CD HCLK  clock selected as FMC kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8008304:	2301      	movs	r3, #1
 8008306:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800830a:	e000      	b.n	800830e <HAL_RCCEx_PeriphCLKConfig+0x702>
        break;
 800830c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800830e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008312:	2b00      	cmp	r3, #0
 8008314:	d10a      	bne.n	800832c <HAL_RCCEx_PeriphCLKConfig+0x720>
    {
      /* Set the source of FMC clock*/
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8008316:	4b92      	ldr	r3, [pc, #584]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008318:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800831a:	f023 0103 	bic.w	r1, r3, #3
 800831e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008322:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008324:	4a8e      	ldr	r2, [pc, #568]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008326:	430b      	orrs	r3, r1
 8008328:	64d3      	str	r3, [r2, #76]	; 0x4c
 800832a:	e003      	b.n	8008334 <HAL_RCCEx_PeriphCLKConfig+0x728>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800832c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008330:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- RTC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8008334:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008338:	e9d3 2300 	ldrd	r2, r3, [r3]
 800833c:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 8008340:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8008344:	2300      	movs	r3, #0
 8008346:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800834a:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800834e:	460b      	mov	r3, r1
 8008350:	4313      	orrs	r3, r2
 8008352:	f000 8099 	beq.w	8008488 <HAL_RCCEx_PeriphCLKConfig+0x87c>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8008356:	4b83      	ldr	r3, [pc, #524]	; (8008564 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008358:	681b      	ldr	r3, [r3, #0]
 800835a:	4a82      	ldr	r2, [pc, #520]	; (8008564 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800835c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008360:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8008362:	f7f9 fb95 	bl	8001a90 <HAL_GetTick>
 8008366:	f8c7 0110 	str.w	r0, [r7, #272]	; 0x110

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 800836a:	e00b      	b.n	8008384 <HAL_RCCEx_PeriphCLKConfig+0x778>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800836c:	f7f9 fb90 	bl	8001a90 <HAL_GetTick>
 8008370:	4602      	mov	r2, r0
 8008372:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8008376:	1ad3      	subs	r3, r2, r3
 8008378:	2b64      	cmp	r3, #100	; 0x64
 800837a:	d903      	bls.n	8008384 <HAL_RCCEx_PeriphCLKConfig+0x778>
      {
        ret = HAL_TIMEOUT;
 800837c:	2303      	movs	r3, #3
 800837e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008382:	e005      	b.n	8008390 <HAL_RCCEx_PeriphCLKConfig+0x784>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8008384:	4b77      	ldr	r3, [pc, #476]	; (8008564 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008386:	681b      	ldr	r3, [r3, #0]
 8008388:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800838c:	2b00      	cmp	r3, #0
 800838e:	d0ed      	beq.n	800836c <HAL_RCCEx_PeriphCLKConfig+0x760>
      }
    }

    if (ret == HAL_OK)
 8008390:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008394:	2b00      	cmp	r3, #0
 8008396:	d173      	bne.n	8008480 <HAL_RCCEx_PeriphCLKConfig+0x874>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8008398:	4b71      	ldr	r3, [pc, #452]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800839a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800839c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80083a0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80083a4:	4053      	eors	r3, r2
 80083a6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80083aa:	2b00      	cmp	r3, #0
 80083ac:	d015      	beq.n	80083da <HAL_RCCEx_PeriphCLKConfig+0x7ce>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80083ae:	4b6c      	ldr	r3, [pc, #432]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80083b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80083b6:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 80083ba:	4b69      	ldr	r3, [pc, #420]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80083be:	4a68      	ldr	r2, [pc, #416]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083c0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80083c4:	6713      	str	r3, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 80083c6:	4b66      	ldr	r3, [pc, #408]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80083ca:	4a65      	ldr	r2, [pc, #404]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083cc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80083d0:	6713      	str	r3, [r2, #112]	; 0x70
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpreg;
 80083d2:	4a63      	ldr	r2, [pc, #396]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083d4:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80083d8:	6713      	str	r3, [r2, #112]	; 0x70
      }

      /* If LSE is selected as RTC clock source (and enabled prior to Backup Domain reset), wait for LSE reactivation */
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 80083da:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80083de:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80083e2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80083e6:	d118      	bne.n	800841a <HAL_RCCEx_PeriphCLKConfig+0x80e>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80083e8:	f7f9 fb52 	bl	8001a90 <HAL_GetTick>
 80083ec:	f8c7 0110 	str.w	r0, [r7, #272]	; 0x110

        /* Wait till LSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80083f0:	e00d      	b.n	800840e <HAL_RCCEx_PeriphCLKConfig+0x802>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80083f2:	f7f9 fb4d 	bl	8001a90 <HAL_GetTick>
 80083f6:	4602      	mov	r2, r0
 80083f8:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80083fc:	1ad2      	subs	r2, r2, r3
 80083fe:	f241 3388 	movw	r3, #5000	; 0x1388
 8008402:	429a      	cmp	r2, r3
 8008404:	d903      	bls.n	800840e <HAL_RCCEx_PeriphCLKConfig+0x802>
          {
            ret = HAL_TIMEOUT;
 8008406:	2303      	movs	r3, #3
 8008408:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
            break;
 800840c:	e005      	b.n	800841a <HAL_RCCEx_PeriphCLKConfig+0x80e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800840e:	4b54      	ldr	r3, [pc, #336]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008410:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008412:	f003 0302 	and.w	r3, r3, #2
 8008416:	2b00      	cmp	r3, #0
 8008418:	d0eb      	beq.n	80083f2 <HAL_RCCEx_PeriphCLKConfig+0x7e6>
          }
        }
      }

      if (ret == HAL_OK)
 800841a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800841e:	2b00      	cmp	r3, #0
 8008420:	d129      	bne.n	8008476 <HAL_RCCEx_PeriphCLKConfig+0x86a>
      {
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008422:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008426:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800842a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800842e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008432:	d10e      	bne.n	8008452 <HAL_RCCEx_PeriphCLKConfig+0x846>
 8008434:	4b4a      	ldr	r3, [pc, #296]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008436:	691b      	ldr	r3, [r3, #16]
 8008438:	f423 517c 	bic.w	r1, r3, #16128	; 0x3f00
 800843c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008440:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8008444:	091a      	lsrs	r2, r3, #4
 8008446:	4b48      	ldr	r3, [pc, #288]	; (8008568 <HAL_RCCEx_PeriphCLKConfig+0x95c>)
 8008448:	4013      	ands	r3, r2
 800844a:	4a45      	ldr	r2, [pc, #276]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800844c:	430b      	orrs	r3, r1
 800844e:	6113      	str	r3, [r2, #16]
 8008450:	e005      	b.n	800845e <HAL_RCCEx_PeriphCLKConfig+0x852>
 8008452:	4b43      	ldr	r3, [pc, #268]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008454:	691b      	ldr	r3, [r3, #16]
 8008456:	4a42      	ldr	r2, [pc, #264]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008458:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 800845c:	6113      	str	r3, [r2, #16]
 800845e:	4b40      	ldr	r3, [pc, #256]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008460:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8008462:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008466:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800846a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800846e:	4a3c      	ldr	r2, [pc, #240]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008470:	430b      	orrs	r3, r1
 8008472:	6713      	str	r3, [r2, #112]	; 0x70
 8008474:	e008      	b.n	8008488 <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
      else
      {
        /* set overall return value */
        status = ret;
 8008476:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800847a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
 800847e:	e003      	b.n	8008488 <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008480:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008484:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }


  /*-------------------------- USART1/6 configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8008488:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800848c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008490:	f002 0301 	and.w	r3, r2, #1
 8008494:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8008498:	2300      	movs	r3, #0
 800849a:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 800849e:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	; 0xb8
 80084a2:	460b      	mov	r3, r1
 80084a4:	4313      	orrs	r3, r2
 80084a6:	f000 808f 	beq.w	80085c8 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
  {
    switch (PeriphClkInit->Usart16ClockSelection)
 80084aa:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80084ae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80084b0:	2b28      	cmp	r3, #40	; 0x28
 80084b2:	d871      	bhi.n	8008598 <HAL_RCCEx_PeriphCLKConfig+0x98c>
 80084b4:	a201      	add	r2, pc, #4	; (adr r2, 80084bc <HAL_RCCEx_PeriphCLKConfig+0x8b0>)
 80084b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80084ba:	bf00      	nop
 80084bc:	080085a1 	.word	0x080085a1
 80084c0:	08008599 	.word	0x08008599
 80084c4:	08008599 	.word	0x08008599
 80084c8:	08008599 	.word	0x08008599
 80084cc:	08008599 	.word	0x08008599
 80084d0:	08008599 	.word	0x08008599
 80084d4:	08008599 	.word	0x08008599
 80084d8:	08008599 	.word	0x08008599
 80084dc:	0800856d 	.word	0x0800856d
 80084e0:	08008599 	.word	0x08008599
 80084e4:	08008599 	.word	0x08008599
 80084e8:	08008599 	.word	0x08008599
 80084ec:	08008599 	.word	0x08008599
 80084f0:	08008599 	.word	0x08008599
 80084f4:	08008599 	.word	0x08008599
 80084f8:	08008599 	.word	0x08008599
 80084fc:	08008583 	.word	0x08008583
 8008500:	08008599 	.word	0x08008599
 8008504:	08008599 	.word	0x08008599
 8008508:	08008599 	.word	0x08008599
 800850c:	08008599 	.word	0x08008599
 8008510:	08008599 	.word	0x08008599
 8008514:	08008599 	.word	0x08008599
 8008518:	08008599 	.word	0x08008599
 800851c:	080085a1 	.word	0x080085a1
 8008520:	08008599 	.word	0x08008599
 8008524:	08008599 	.word	0x08008599
 8008528:	08008599 	.word	0x08008599
 800852c:	08008599 	.word	0x08008599
 8008530:	08008599 	.word	0x08008599
 8008534:	08008599 	.word	0x08008599
 8008538:	08008599 	.word	0x08008599
 800853c:	080085a1 	.word	0x080085a1
 8008540:	08008599 	.word	0x08008599
 8008544:	08008599 	.word	0x08008599
 8008548:	08008599 	.word	0x08008599
 800854c:	08008599 	.word	0x08008599
 8008550:	08008599 	.word	0x08008599
 8008554:	08008599 	.word	0x08008599
 8008558:	08008599 	.word	0x08008599
 800855c:	080085a1 	.word	0x080085a1
 8008560:	58024400 	.word	0x58024400
 8008564:	58024800 	.word	0x58024800
 8008568:	00ffffcf 	.word	0x00ffffcf
      case RCC_USART16CLKSOURCE_PCLK2: /* CD/D2 PCLK2 as clock source for USART1/6 */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      case RCC_USART16CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART1/6 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800856c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008570:	3308      	adds	r3, #8
 8008572:	2101      	movs	r1, #1
 8008574:	4618      	mov	r0, r3
 8008576:	f001 fdcb 	bl	800a110 <RCCEx_PLL2_Config>
 800857a:	4603      	mov	r3, r0
 800857c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8008580:	e00f      	b.n	80085a2 <HAL_RCCEx_PeriphCLKConfig+0x996>

      case RCC_USART16CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART1/6 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008582:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008586:	3328      	adds	r3, #40	; 0x28
 8008588:	2101      	movs	r1, #1
 800858a:	4618      	mov	r0, r3
 800858c:	f001 fe72 	bl	800a274 <RCCEx_PLL3_Config>
 8008590:	4603      	mov	r3, r0
 8008592:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8008596:	e004      	b.n	80085a2 <HAL_RCCEx_PeriphCLKConfig+0x996>
        /* LSE,  oscillator is used as source of USART1/6 clock */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008598:	2301      	movs	r3, #1
 800859a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800859e:	e000      	b.n	80085a2 <HAL_RCCEx_PeriphCLKConfig+0x996>
        break;
 80085a0:	bf00      	nop
    }

    if (ret == HAL_OK)
 80085a2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80085a6:	2b00      	cmp	r3, #0
 80085a8:	d10a      	bne.n	80085c0 <HAL_RCCEx_PeriphCLKConfig+0x9b4>
    {
      /* Set the source of USART1/6 clock */
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 80085aa:	4bbf      	ldr	r3, [pc, #764]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80085ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80085ae:	f023 0138 	bic.w	r1, r3, #56	; 0x38
 80085b2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085b6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80085b8:	4abb      	ldr	r2, [pc, #748]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80085ba:	430b      	orrs	r3, r1
 80085bc:	6553      	str	r3, [r2, #84]	; 0x54
 80085be:	e003      	b.n	80085c8 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80085c0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80085c4:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*-------------------------- USART2/3/4/5/7/8 Configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 80085c8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80085d0:	f002 0302 	and.w	r3, r2, #2
 80085d4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80085d8:	2300      	movs	r3, #0
 80085da:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80085de:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	; 0xb0
 80085e2:	460b      	mov	r3, r1
 80085e4:	4313      	orrs	r3, r2
 80085e6:	d041      	beq.n	800866c <HAL_RCCEx_PeriphCLKConfig+0xa60>
  {
    switch (PeriphClkInit->Usart234578ClockSelection)
 80085e8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085ec:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80085ee:	2b05      	cmp	r3, #5
 80085f0:	d824      	bhi.n	800863c <HAL_RCCEx_PeriphCLKConfig+0xa30>
 80085f2:	a201      	add	r2, pc, #4	; (adr r2, 80085f8 <HAL_RCCEx_PeriphCLKConfig+0x9ec>)
 80085f4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80085f8:	08008645 	.word	0x08008645
 80085fc:	08008611 	.word	0x08008611
 8008600:	08008627 	.word	0x08008627
 8008604:	08008645 	.word	0x08008645
 8008608:	08008645 	.word	0x08008645
 800860c:	08008645 	.word	0x08008645
      case RCC_USART234578CLKSOURCE_PCLK1: /* CD/D2 PCLK1 as clock source for USART2/3/4/5/7/8 */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      case RCC_USART234578CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008610:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008614:	3308      	adds	r3, #8
 8008616:	2101      	movs	r1, #1
 8008618:	4618      	mov	r0, r3
 800861a:	f001 fd79 	bl	800a110 <RCCEx_PLL2_Config>
 800861e:	4603      	mov	r3, r0
 8008620:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8008624:	e00f      	b.n	8008646 <HAL_RCCEx_PeriphCLKConfig+0xa3a>

      case RCC_USART234578CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008626:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800862a:	3328      	adds	r3, #40	; 0x28
 800862c:	2101      	movs	r1, #1
 800862e:	4618      	mov	r0, r3
 8008630:	f001 fe20 	bl	800a274 <RCCEx_PLL3_Config>
 8008634:	4603      	mov	r3, r0
 8008636:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 800863a:	e004      	b.n	8008646 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        /* LSE,  oscillator is used as source of USART2/3/4/5/7/8 clock */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800863c:	2301      	movs	r3, #1
 800863e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008642:	e000      	b.n	8008646 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        break;
 8008644:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008646:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800864a:	2b00      	cmp	r3, #0
 800864c:	d10a      	bne.n	8008664 <HAL_RCCEx_PeriphCLKConfig+0xa58>
    {
      /* Set the source of USART2/3/4/5/7/8 clock */
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 800864e:	4b96      	ldr	r3, [pc, #600]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008650:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008652:	f023 0107 	bic.w	r1, r3, #7
 8008656:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800865a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800865c:	4a92      	ldr	r2, [pc, #584]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800865e:	430b      	orrs	r3, r1
 8008660:	6553      	str	r3, [r2, #84]	; 0x54
 8008662:	e003      	b.n	800866c <HAL_RCCEx_PeriphCLKConfig+0xa60>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008664:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008668:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*-------------------------- LPUART1 Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 800866c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008670:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008674:	f002 0304 	and.w	r3, r2, #4
 8008678:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800867c:	2300      	movs	r3, #0
 800867e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008682:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8008686:	460b      	mov	r3, r1
 8008688:	4313      	orrs	r3, r2
 800868a:	d044      	beq.n	8008716 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
  {
    switch (PeriphClkInit->Lpuart1ClockSelection)
 800868c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008690:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008694:	2b05      	cmp	r3, #5
 8008696:	d825      	bhi.n	80086e4 <HAL_RCCEx_PeriphCLKConfig+0xad8>
 8008698:	a201      	add	r2, pc, #4	; (adr r2, 80086a0 <HAL_RCCEx_PeriphCLKConfig+0xa94>)
 800869a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800869e:	bf00      	nop
 80086a0:	080086ed 	.word	0x080086ed
 80086a4:	080086b9 	.word	0x080086b9
 80086a8:	080086cf 	.word	0x080086cf
 80086ac:	080086ed 	.word	0x080086ed
 80086b0:	080086ed 	.word	0x080086ed
 80086b4:	080086ed 	.word	0x080086ed
      case RCC_LPUART1CLKSOURCE_PCLK4: /* SRD/D3 PCLK1 (PCLK4) as clock source for LPUART1 */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPUART1 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80086b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80086bc:	3308      	adds	r3, #8
 80086be:	2101      	movs	r1, #1
 80086c0:	4618      	mov	r0, r3
 80086c2:	f001 fd25 	bl	800a110 <RCCEx_PLL2_Config>
 80086c6:	4603      	mov	r3, r0
 80086c8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 80086cc:	e00f      	b.n	80086ee <HAL_RCCEx_PeriphCLKConfig+0xae2>

      case RCC_LPUART1CLKSOURCE_PLL3: /* PLL3 is used as clock source for LPUART1 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80086ce:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80086d2:	3328      	adds	r3, #40	; 0x28
 80086d4:	2101      	movs	r1, #1
 80086d6:	4618      	mov	r0, r3
 80086d8:	f001 fdcc 	bl	800a274 <RCCEx_PLL3_Config>
 80086dc:	4603      	mov	r3, r0
 80086de:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 80086e2:	e004      	b.n	80086ee <HAL_RCCEx_PeriphCLKConfig+0xae2>
        /* LSE,  oscillator is used as source of LPUART1 clock */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80086e4:	2301      	movs	r3, #1
 80086e6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80086ea:	e000      	b.n	80086ee <HAL_RCCEx_PeriphCLKConfig+0xae2>
        break;
 80086ec:	bf00      	nop
    }

    if (ret == HAL_OK)
 80086ee:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80086f2:	2b00      	cmp	r3, #0
 80086f4:	d10b      	bne.n	800870e <HAL_RCCEx_PeriphCLKConfig+0xb02>
    {
      /* Set the source of LPUART1 clock */
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 80086f6:	4b6c      	ldr	r3, [pc, #432]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80086f8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80086fa:	f023 0107 	bic.w	r1, r3, #7
 80086fe:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008702:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008706:	4a68      	ldr	r2, [pc, #416]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008708:	430b      	orrs	r3, r1
 800870a:	6593      	str	r3, [r2, #88]	; 0x58
 800870c:	e003      	b.n	8008716 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800870e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008712:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8008716:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800871a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800871e:	f002 0320 	and.w	r3, r2, #32
 8008722:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8008726:	2300      	movs	r3, #0
 8008728:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800872c:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	; 0xa0
 8008730:	460b      	mov	r3, r1
 8008732:	4313      	orrs	r3, r2
 8008734:	d055      	beq.n	80087e2 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
  {
    switch (PeriphClkInit->Lptim1ClockSelection)
 8008736:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800873a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800873e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008742:	d033      	beq.n	80087ac <HAL_RCCEx_PeriphCLKConfig+0xba0>
 8008744:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008748:	d82c      	bhi.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800874a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800874e:	d02f      	beq.n	80087b0 <HAL_RCCEx_PeriphCLKConfig+0xba4>
 8008750:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008754:	d826      	bhi.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8008756:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800875a:	d02b      	beq.n	80087b4 <HAL_RCCEx_PeriphCLKConfig+0xba8>
 800875c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008760:	d820      	bhi.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8008762:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008766:	d012      	beq.n	800878e <HAL_RCCEx_PeriphCLKConfig+0xb82>
 8008768:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800876c:	d81a      	bhi.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800876e:	2b00      	cmp	r3, #0
 8008770:	d022      	beq.n	80087b8 <HAL_RCCEx_PeriphCLKConfig+0xbac>
 8008772:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008776:	d115      	bne.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008778:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800877c:	3308      	adds	r3, #8
 800877e:	2100      	movs	r1, #0
 8008780:	4618      	mov	r0, r3
 8008782:	f001 fcc5 	bl	800a110 <RCCEx_PLL2_Config>
 8008786:	4603      	mov	r3, r0
 8008788:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 800878c:	e015      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>

      case RCC_LPTIM1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800878e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008792:	3328      	adds	r3, #40	; 0x28
 8008794:	2102      	movs	r1, #2
 8008796:	4618      	mov	r0, r3
 8008798:	f001 fd6c 	bl	800a274 <RCCEx_PLL3_Config>
 800879c:	4603      	mov	r3, r0
 800879e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 80087a2:	e00a      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM1 clock */
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80087a4:	2301      	movs	r3, #1
 80087a6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80087aa:	e006      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80087ac:	bf00      	nop
 80087ae:	e004      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80087b0:	bf00      	nop
 80087b2:	e002      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80087b4:	bf00      	nop
 80087b6:	e000      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80087b8:	bf00      	nop
    }

    if (ret == HAL_OK)
 80087ba:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80087be:	2b00      	cmp	r3, #0
 80087c0:	d10b      	bne.n	80087da <HAL_RCCEx_PeriphCLKConfig+0xbce>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 80087c2:	4b39      	ldr	r3, [pc, #228]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80087c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80087c6:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 80087ca:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80087ce:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80087d2:	4a35      	ldr	r2, [pc, #212]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80087d4:	430b      	orrs	r3, r1
 80087d6:	6553      	str	r3, [r2, #84]	; 0x54
 80087d8:	e003      	b.n	80087e2 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80087da:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80087de:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 80087e2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80087e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087ea:	f002 0340 	and.w	r3, r2, #64	; 0x40
 80087ee:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80087f2:	2300      	movs	r3, #0
 80087f4:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80087f8:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	; 0x98
 80087fc:	460b      	mov	r3, r1
 80087fe:	4313      	orrs	r3, r2
 8008800:	d058      	beq.n	80088b4 <HAL_RCCEx_PeriphCLKConfig+0xca8>
  {
    switch (PeriphClkInit->Lptim2ClockSelection)
 8008802:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008806:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800880a:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 800880e:	d033      	beq.n	8008878 <HAL_RCCEx_PeriphCLKConfig+0xc6c>
 8008810:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8008814:	d82c      	bhi.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008816:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800881a:	d02f      	beq.n	800887c <HAL_RCCEx_PeriphCLKConfig+0xc70>
 800881c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008820:	d826      	bhi.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008822:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008826:	d02b      	beq.n	8008880 <HAL_RCCEx_PeriphCLKConfig+0xc74>
 8008828:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800882c:	d820      	bhi.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800882e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008832:	d012      	beq.n	800885a <HAL_RCCEx_PeriphCLKConfig+0xc4e>
 8008834:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008838:	d81a      	bhi.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800883a:	2b00      	cmp	r3, #0
 800883c:	d022      	beq.n	8008884 <HAL_RCCEx_PeriphCLKConfig+0xc78>
 800883e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008842:	d115      	bne.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008844:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008848:	3308      	adds	r3, #8
 800884a:	2100      	movs	r1, #0
 800884c:	4618      	mov	r0, r3
 800884e:	f001 fc5f 	bl	800a110 <RCCEx_PLL2_Config>
 8008852:	4603      	mov	r3, r0
 8008854:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8008858:	e015      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>

      case RCC_LPTIM2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800885a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800885e:	3328      	adds	r3, #40	; 0x28
 8008860:	2102      	movs	r1, #2
 8008862:	4618      	mov	r0, r3
 8008864:	f001 fd06 	bl	800a274 <RCCEx_PLL3_Config>
 8008868:	4603      	mov	r3, r0
 800886a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 800886e:	e00a      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM2 clock */
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008870:	2301      	movs	r3, #1
 8008872:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008876:	e006      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008878:	bf00      	nop
 800887a:	e004      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 800887c:	bf00      	nop
 800887e:	e002      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008880:	bf00      	nop
 8008882:	e000      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008884:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008886:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800888a:	2b00      	cmp	r3, #0
 800888c:	d10e      	bne.n	80088ac <HAL_RCCEx_PeriphCLKConfig+0xca0>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 800888e:	4b06      	ldr	r3, [pc, #24]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008890:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008892:	f423 51e0 	bic.w	r1, r3, #7168	; 0x1c00
 8008896:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800889a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800889e:	4a02      	ldr	r2, [pc, #8]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80088a0:	430b      	orrs	r3, r1
 80088a2:	6593      	str	r3, [r2, #88]	; 0x58
 80088a4:	e006      	b.n	80088b4 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 80088a6:	bf00      	nop
 80088a8:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 80088ac:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80088b0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM345 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 80088b4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80088b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088bc:	f002 0380 	and.w	r3, r2, #128	; 0x80
 80088c0:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80088c4:	2300      	movs	r3, #0
 80088c6:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80088ca:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	; 0x90
 80088ce:	460b      	mov	r3, r1
 80088d0:	4313      	orrs	r3, r2
 80088d2:	d055      	beq.n	8008980 <HAL_RCCEx_PeriphCLKConfig+0xd74>
  {
    switch (PeriphClkInit->Lptim345ClockSelection)
 80088d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80088d8:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80088dc:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 80088e0:	d033      	beq.n	800894a <HAL_RCCEx_PeriphCLKConfig+0xd3e>
 80088e2:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 80088e6:	d82c      	bhi.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 80088e8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80088ec:	d02f      	beq.n	800894e <HAL_RCCEx_PeriphCLKConfig+0xd42>
 80088ee:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80088f2:	d826      	bhi.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 80088f4:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80088f8:	d02b      	beq.n	8008952 <HAL_RCCEx_PeriphCLKConfig+0xd46>
 80088fa:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80088fe:	d820      	bhi.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008900:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008904:	d012      	beq.n	800892c <HAL_RCCEx_PeriphCLKConfig+0xd20>
 8008906:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800890a:	d81a      	bhi.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800890c:	2b00      	cmp	r3, #0
 800890e:	d022      	beq.n	8008956 <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 8008910:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008914:	d115      	bne.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
      case RCC_LPTIM345CLKSOURCE_PCLK4:      /* SRD/D3 PCLK1 (PCLK4) as clock source for LPTIM3/4/5 */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM345CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008916:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800891a:	3308      	adds	r3, #8
 800891c:	2100      	movs	r1, #0
 800891e:	4618      	mov	r0, r3
 8008920:	f001 fbf6 	bl	800a110 <RCCEx_PLL2_Config>
 8008924:	4603      	mov	r3, r0
 8008926:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 800892a:	e015      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>

      case RCC_LPTIM345CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800892c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008930:	3328      	adds	r3, #40	; 0x28
 8008932:	2102      	movs	r1, #2
 8008934:	4618      	mov	r0, r3
 8008936:	f001 fc9d 	bl	800a274 <RCCEx_PLL3_Config>
 800893a:	4603      	mov	r3, r0
 800893c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8008940:	e00a      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM3/4/5 clock */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008942:	2301      	movs	r3, #1
 8008944:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008948:	e006      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 800894a:	bf00      	nop
 800894c:	e004      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 800894e:	bf00      	nop
 8008950:	e002      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8008952:	bf00      	nop
 8008954:	e000      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8008956:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008958:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800895c:	2b00      	cmp	r3, #0
 800895e:	d10b      	bne.n	8008978 <HAL_RCCEx_PeriphCLKConfig+0xd6c>
    {
      /* Set the source of LPTIM3/4/5 clock */
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8008960:	4ba0      	ldr	r3, [pc, #640]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008962:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008964:	f423 4160 	bic.w	r1, r3, #57344	; 0xe000
 8008968:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800896c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008970:	4a9c      	ldr	r2, [pc, #624]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008972:	430b      	orrs	r3, r1
 8008974:	6593      	str	r3, [r2, #88]	; 0x58
 8008976:	e003      	b.n	8008980 <HAL_RCCEx_PeriphCLKConfig+0xd74>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008978:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800897c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*------------------------------ I2C1/2/3/5* Configuration ------------------------*/
#if defined(I2C5)
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1235) == RCC_PERIPHCLK_I2C1235)
 8008980:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008984:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008988:	f002 0308 	and.w	r3, r2, #8
 800898c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008990:	2300      	movs	r3, #0
 8008992:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8008996:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	; 0x88
 800899a:	460b      	mov	r3, r1
 800899c:	4313      	orrs	r3, r2
 800899e:	d01e      	beq.n	80089de <HAL_RCCEx_PeriphCLKConfig+0xdd2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1235CLKSOURCE(PeriphClkInit->I2c1235ClockSelection));

    if ((PeriphClkInit->I2c1235ClockSelection) == RCC_I2C1235CLKSOURCE_PLL3)
 80089a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80089a8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80089ac:	d10c      	bne.n	80089c8 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 80089ae:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089b2:	3328      	adds	r3, #40	; 0x28
 80089b4:	2102      	movs	r1, #2
 80089b6:	4618      	mov	r0, r3
 80089b8:	f001 fc5c 	bl	800a274 <RCCEx_PLL3_Config>
 80089bc:	4603      	mov	r3, r0
 80089be:	2b00      	cmp	r3, #0
 80089c0:	d002      	beq.n	80089c8 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      {
        status = HAL_ERROR;
 80089c2:	2301      	movs	r3, #1
 80089c4:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
      }
    }

    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);
 80089c8:	4b86      	ldr	r3, [pc, #536]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80089ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80089cc:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80089d0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80089d8:	4a82      	ldr	r2, [pc, #520]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80089da:	430b      	orrs	r3, r1
 80089dc:	6553      	str	r3, [r2, #84]	; 0x54

  }
#endif /* I2C5 */

  /*------------------------------ I2C4 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80089de:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089e6:	f002 0310 	and.w	r3, r2, #16
 80089ea:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80089ee:	2300      	movs	r3, #0
 80089f0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80089f4:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	; 0x80
 80089f8:	460b      	mov	r3, r1
 80089fa:	4313      	orrs	r3, r2
 80089fc:	d01e      	beq.n	8008a3c <HAL_RCCEx_PeriphCLKConfig+0xe30>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 80089fe:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a02:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008a06:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a0a:	d10c      	bne.n	8008a26 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008a0c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a10:	3328      	adds	r3, #40	; 0x28
 8008a12:	2102      	movs	r1, #2
 8008a14:	4618      	mov	r0, r3
 8008a16:	f001 fc2d 	bl	800a274 <RCCEx_PLL3_Config>
 8008a1a:	4603      	mov	r3, r0
 8008a1c:	2b00      	cmp	r3, #0
 8008a1e:	d002      	beq.n	8008a26 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
      {
        status = HAL_ERROR;
 8008a20:	2301      	movs	r3, #1
 8008a22:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
      }
    }

    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8008a26:	4b6f      	ldr	r3, [pc, #444]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008a28:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008a2a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8008a2e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a32:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008a36:	4a6b      	ldr	r2, [pc, #428]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008a38:	430b      	orrs	r3, r1
 8008a3a:	6593      	str	r3, [r2, #88]	; 0x58

  }

  /*---------------------------- ADC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8008a3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a44:	f402 2300 	and.w	r3, r2, #524288	; 0x80000
 8008a48:	67bb      	str	r3, [r7, #120]	; 0x78
 8008a4a:	2300      	movs	r3, #0
 8008a4c:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008a4e:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	; 0x78
 8008a52:	460b      	mov	r3, r1
 8008a54:	4313      	orrs	r3, r2
 8008a56:	d03e      	beq.n	8008ad6 <HAL_RCCEx_PeriphCLKConfig+0xeca>
  {
    switch (PeriphClkInit->AdcClockSelection)
 8008a58:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a5c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008a60:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008a64:	d022      	beq.n	8008aac <HAL_RCCEx_PeriphCLKConfig+0xea0>
 8008a66:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008a6a:	d81b      	bhi.n	8008aa4 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 8008a6c:	2b00      	cmp	r3, #0
 8008a6e:	d003      	beq.n	8008a78 <HAL_RCCEx_PeriphCLKConfig+0xe6c>
 8008a70:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008a74:	d00b      	beq.n	8008a8e <HAL_RCCEx_PeriphCLKConfig+0xe82>
 8008a76:	e015      	b.n	8008aa4 <HAL_RCCEx_PeriphCLKConfig+0xe98>
    {

      case RCC_ADCCLKSOURCE_PLL2: /* PLL2 is used as clock source for ADC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008a78:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a7c:	3308      	adds	r3, #8
 8008a7e:	2100      	movs	r1, #0
 8008a80:	4618      	mov	r0, r3
 8008a82:	f001 fb45 	bl	800a110 <RCCEx_PLL2_Config>
 8008a86:	4603      	mov	r3, r0
 8008a88:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008a8c:	e00f      	b.n	8008aae <HAL_RCCEx_PeriphCLKConfig+0xea2>

      case RCC_ADCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for ADC*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008a8e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a92:	3328      	adds	r3, #40	; 0x28
 8008a94:	2102      	movs	r1, #2
 8008a96:	4618      	mov	r0, r3
 8008a98:	f001 fbec 	bl	800a274 <RCCEx_PLL3_Config>
 8008a9c:	4603      	mov	r3, r0
 8008a9e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008aa2:	e004      	b.n	8008aae <HAL_RCCEx_PeriphCLKConfig+0xea2>
        /* HSI, HSE, or CSI oscillator is used as source of ADC clock */
        /* ADC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008aa4:	2301      	movs	r3, #1
 8008aa6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008aaa:	e000      	b.n	8008aae <HAL_RCCEx_PeriphCLKConfig+0xea2>
        break;
 8008aac:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008aae:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ab2:	2b00      	cmp	r3, #0
 8008ab4:	d10b      	bne.n	8008ace <HAL_RCCEx_PeriphCLKConfig+0xec2>
    {
      /* Set the source of ADC clock*/
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8008ab6:	4b4b      	ldr	r3, [pc, #300]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008ab8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008aba:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8008abe:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ac2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008ac6:	4a47      	ldr	r2, [pc, #284]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008ac8:	430b      	orrs	r3, r1
 8008aca:	6593      	str	r3, [r2, #88]	; 0x58
 8008acc:	e003      	b.n	8008ad6 <HAL_RCCEx_PeriphCLKConfig+0xeca>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ace:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ad2:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*------------------------------ USB Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8008ad6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ada:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ade:	f402 2380 	and.w	r3, r2, #262144	; 0x40000
 8008ae2:	673b      	str	r3, [r7, #112]	; 0x70
 8008ae4:	2300      	movs	r3, #0
 8008ae6:	677b      	str	r3, [r7, #116]	; 0x74
 8008ae8:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	; 0x70
 8008aec:	460b      	mov	r3, r1
 8008aee:	4313      	orrs	r3, r2
 8008af0:	d03b      	beq.n	8008b6a <HAL_RCCEx_PeriphCLKConfig+0xf5e>
  {

    switch (PeriphClkInit->UsbClockSelection)
 8008af2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008af6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008afa:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008afe:	d01f      	beq.n	8008b40 <HAL_RCCEx_PeriphCLKConfig+0xf34>
 8008b00:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008b04:	d818      	bhi.n	8008b38 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 8008b06:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008b0a:	d003      	beq.n	8008b14 <HAL_RCCEx_PeriphCLKConfig+0xf08>
 8008b0c:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008b10:	d007      	beq.n	8008b22 <HAL_RCCEx_PeriphCLKConfig+0xf16>
 8008b12:	e011      	b.n	8008b38 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
    {
      case RCC_USBCLKSOURCE_PLL:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008b14:	4b33      	ldr	r3, [pc, #204]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b18:	4a32      	ldr	r2, [pc, #200]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b1a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008b1e:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* USB clock source configuration done later after clock selection check */
        break;
 8008b20:	e00f      	b.n	8008b42 <HAL_RCCEx_PeriphCLKConfig+0xf36>

      case RCC_USBCLKSOURCE_PLL3: /* PLL3 is used as clock source for USB*/

        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008b22:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b26:	3328      	adds	r3, #40	; 0x28
 8008b28:	2101      	movs	r1, #1
 8008b2a:	4618      	mov	r0, r3
 8008b2c:	f001 fba2 	bl	800a274 <RCCEx_PLL3_Config>
 8008b30:	4603      	mov	r3, r0
 8008b32:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* USB clock source configuration done later after clock selection check */
        break;
 8008b36:	e004      	b.n	8008b42 <HAL_RCCEx_PeriphCLKConfig+0xf36>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008b38:	2301      	movs	r3, #1
 8008b3a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008b3e:	e000      	b.n	8008b42 <HAL_RCCEx_PeriphCLKConfig+0xf36>
        break;
 8008b40:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008b42:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008b46:	2b00      	cmp	r3, #0
 8008b48:	d10b      	bne.n	8008b62 <HAL_RCCEx_PeriphCLKConfig+0xf56>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8008b4a:	4b26      	ldr	r3, [pc, #152]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b4c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008b4e:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8008b52:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b56:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008b5a:	4a22      	ldr	r2, [pc, #136]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b5c:	430b      	orrs	r3, r1
 8008b5e:	6553      	str	r3, [r2, #84]	; 0x54
 8008b60:	e003      	b.n	8008b6a <HAL_RCCEx_PeriphCLKConfig+0xf5e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008b62:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008b66:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }

  }

  /*------------------------------------- SDMMC Configuration ------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8008b6a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b72:	f402 3380 	and.w	r3, r2, #65536	; 0x10000
 8008b76:	66bb      	str	r3, [r7, #104]	; 0x68
 8008b78:	2300      	movs	r3, #0
 8008b7a:	66fb      	str	r3, [r7, #108]	; 0x6c
 8008b7c:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	; 0x68
 8008b80:	460b      	mov	r3, r1
 8008b82:	4313      	orrs	r3, r2
 8008b84:	d034      	beq.n	8008bf0 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC(PeriphClkInit->SdmmcClockSelection));

    switch (PeriphClkInit->SdmmcClockSelection)
 8008b86:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008b8c:	2b00      	cmp	r3, #0
 8008b8e:	d003      	beq.n	8008b98 <HAL_RCCEx_PeriphCLKConfig+0xf8c>
 8008b90:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008b94:	d007      	beq.n	8008ba6 <HAL_RCCEx_PeriphCLKConfig+0xf9a>
 8008b96:	e011      	b.n	8008bbc <HAL_RCCEx_PeriphCLKConfig+0xfb0>
    {
      case RCC_SDMMCCLKSOURCE_PLL:      /* PLL is used as clock source for SDMMC*/
        /* Enable SDMMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008b98:	4b12      	ldr	r3, [pc, #72]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b9c:	4a11      	ldr	r2, [pc, #68]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b9e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008ba2:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008ba4:	e00e      	b.n	8008bc4 <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for SDMMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008ba6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008baa:	3308      	adds	r3, #8
 8008bac:	2102      	movs	r1, #2
 8008bae:	4618      	mov	r0, r3
 8008bb0:	f001 faae 	bl	800a110 <RCCEx_PLL2_Config>
 8008bb4:	4603      	mov	r3, r0
 8008bb6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008bba:	e003      	b.n	8008bc4 <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      default:
        ret = HAL_ERROR;
 8008bbc:	2301      	movs	r3, #1
 8008bbe:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008bc2:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008bc4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008bc8:	2b00      	cmp	r3, #0
 8008bca:	d10d      	bne.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0xfdc>
    {
      /* Set the source of SDMMC clock*/
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8008bcc:	4b05      	ldr	r3, [pc, #20]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008bce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008bd0:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8008bd4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008bd8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008bda:	4a02      	ldr	r2, [pc, #8]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008bdc:	430b      	orrs	r3, r1
 8008bde:	64d3      	str	r3, [r2, #76]	; 0x4c
 8008be0:	e006      	b.n	8008bf0 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 8008be2:	bf00      	nop
 8008be4:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008be8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008bec:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

#if defined(LTDC)
  /*-------------------------------------- LTDC Configuration -----------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8008bf0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008bf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008bf8:	f002 5300 	and.w	r3, r2, #536870912	; 0x20000000
 8008bfc:	663b      	str	r3, [r7, #96]	; 0x60
 8008bfe:	2300      	movs	r3, #0
 8008c00:	667b      	str	r3, [r7, #100]	; 0x64
 8008c02:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 8008c06:	460b      	mov	r3, r1
 8008c08:	4313      	orrs	r3, r2
 8008c0a:	d00c      	beq.n	8008c26 <HAL_RCCEx_PeriphCLKConfig+0x101a>
  {
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008c0c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c10:	3328      	adds	r3, #40	; 0x28
 8008c12:	2102      	movs	r1, #2
 8008c14:	4618      	mov	r0, r3
 8008c16:	f001 fb2d 	bl	800a274 <RCCEx_PLL3_Config>
 8008c1a:	4603      	mov	r3, r0
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	d002      	beq.n	8008c26 <HAL_RCCEx_PeriphCLKConfig+0x101a>
    {
      status = HAL_ERROR;
 8008c20:	2301      	movs	r3, #1
 8008c22:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif /* LTDC */

  /*------------------------------ RNG Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8008c26:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c2e:	f402 3300 	and.w	r3, r2, #131072	; 0x20000
 8008c32:	65bb      	str	r3, [r7, #88]	; 0x58
 8008c34:	2300      	movs	r3, #0
 8008c36:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008c38:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	; 0x58
 8008c3c:	460b      	mov	r3, r1
 8008c3e:	4313      	orrs	r3, r2
 8008c40:	d036      	beq.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
  {

    switch (PeriphClkInit->RngClockSelection)
 8008c42:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c46:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008c48:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008c4c:	d018      	beq.n	8008c80 <HAL_RCCEx_PeriphCLKConfig+0x1074>
 8008c4e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008c52:	d811      	bhi.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8008c54:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008c58:	d014      	beq.n	8008c84 <HAL_RCCEx_PeriphCLKConfig+0x1078>
 8008c5a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008c5e:	d80b      	bhi.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8008c60:	2b00      	cmp	r3, #0
 8008c62:	d011      	beq.n	8008c88 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 8008c64:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008c68:	d106      	bne.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0x106c>
    {
      case RCC_RNGCLKSOURCE_PLL:     /* PLL is used as clock source for RNG*/
        /* Enable RNG Clock output generated form System RNG . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008c6a:	4bb7      	ldr	r3, [pc, #732]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008c6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c6e:	4ab6      	ldr	r2, [pc, #728]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008c70:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008c74:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* RNG clock source configuration done later after clock selection check */
        break;
 8008c76:	e008      	b.n	8008c8a <HAL_RCCEx_PeriphCLKConfig+0x107e>
        /* HSI48 oscillator is used as source of RNG clock */
        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008c78:	2301      	movs	r3, #1
 8008c7a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008c7e:	e004      	b.n	8008c8a <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8008c80:	bf00      	nop
 8008c82:	e002      	b.n	8008c8a <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8008c84:	bf00      	nop
 8008c86:	e000      	b.n	8008c8a <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8008c88:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008c8a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008c8e:	2b00      	cmp	r3, #0
 8008c90:	d10a      	bne.n	8008ca8 <HAL_RCCEx_PeriphCLKConfig+0x109c>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8008c92:	4bad      	ldr	r3, [pc, #692]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008c94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008c96:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8008c9a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c9e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008ca0:	4aa9      	ldr	r2, [pc, #676]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008ca2:	430b      	orrs	r3, r1
 8008ca4:	6553      	str	r3, [r2, #84]	; 0x54
 8008ca6:	e003      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ca8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008cac:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }

  }

  /*------------------------------ SWPMI1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8008cb0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008cb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008cb8:	f402 1380 	and.w	r3, r2, #1048576	; 0x100000
 8008cbc:	653b      	str	r3, [r7, #80]	; 0x50
 8008cbe:	2300      	movs	r3, #0
 8008cc0:	657b      	str	r3, [r7, #84]	; 0x54
 8008cc2:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 8008cc6:	460b      	mov	r3, r1
 8008cc8:	4313      	orrs	r3, r2
 8008cca:	d009      	beq.n	8008ce0 <HAL_RCCEx_PeriphCLKConfig+0x10d4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 interface clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8008ccc:	4b9e      	ldr	r3, [pc, #632]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008cce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008cd0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8008cd4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008cd8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008cda:	4a9b      	ldr	r2, [pc, #620]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008cdc:	430b      	orrs	r3, r1
 8008cde:	6513      	str	r3, [r2, #80]	; 0x50
    /* Configure the HRTIM1 clock source */
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
  }
#endif  /*HRTIM1*/
  /*------------------------------ DFSDM1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8008ce0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ce4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ce8:	f402 1300 	and.w	r3, r2, #2097152	; 0x200000
 8008cec:	64bb      	str	r3, [r7, #72]	; 0x48
 8008cee:	2300      	movs	r3, #0
 8008cf0:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008cf2:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	; 0x48
 8008cf6:	460b      	mov	r3, r1
 8008cf8:	4313      	orrs	r3, r2
 8008cfa:	d009      	beq.n	8008d10 <HAL_RCCEx_PeriphCLKConfig+0x1104>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8008cfc:	4b92      	ldr	r3, [pc, #584]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008cfe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008d00:	f023 7180 	bic.w	r1, r3, #16777216	; 0x1000000
 8008d04:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d08:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008d0a:	4a8f      	ldr	r2, [pc, #572]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d0c:	430b      	orrs	r3, r1
 8008d0e:	6513      	str	r3, [r2, #80]	; 0x50
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
  }
#endif  /* DFSDM2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8008d10:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d18:	f002 4380 	and.w	r3, r2, #1073741824	; 0x40000000
 8008d1c:	643b      	str	r3, [r7, #64]	; 0x40
 8008d1e:	2300      	movs	r3, #0
 8008d20:	647b      	str	r3, [r7, #68]	; 0x44
 8008d22:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 8008d26:	460b      	mov	r3, r1
 8008d28:	4313      	orrs	r3, r2
 8008d2a:	d00e      	beq.n	8008d4a <HAL_RCCEx_PeriphCLKConfig+0x113e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8008d2c:	4b86      	ldr	r3, [pc, #536]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d2e:	691b      	ldr	r3, [r3, #16]
 8008d30:	4a85      	ldr	r2, [pc, #532]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d32:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8008d36:	6113      	str	r3, [r2, #16]
 8008d38:	4b83      	ldr	r3, [pc, #524]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d3a:	6919      	ldr	r1, [r3, #16]
 8008d3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d40:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008d44:	4a80      	ldr	r2, [pc, #512]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d46:	430b      	orrs	r3, r1
 8008d48:	6113      	str	r3, [r2, #16]
  }

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8008d4a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d52:	f002 4300 	and.w	r3, r2, #2147483648	; 0x80000000
 8008d56:	63bb      	str	r3, [r7, #56]	; 0x38
 8008d58:	2300      	movs	r3, #0
 8008d5a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008d5c:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
 8008d60:	460b      	mov	r3, r1
 8008d62:	4313      	orrs	r3, r2
 8008d64:	d009      	beq.n	8008d7a <HAL_RCCEx_PeriphCLKConfig+0x116e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(PeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8008d66:	4b78      	ldr	r3, [pc, #480]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d6a:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 8008d6e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d72:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d74:	4a74      	ldr	r2, [pc, #464]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d76:	430b      	orrs	r3, r1
 8008d78:	64d3      	str	r3, [r2, #76]	; 0x4c
  }

  /*------------------------------ CEC Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8008d7a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d82:	f402 0300 	and.w	r3, r2, #8388608	; 0x800000
 8008d86:	633b      	str	r3, [r7, #48]	; 0x30
 8008d88:	2300      	movs	r3, #0
 8008d8a:	637b      	str	r3, [r7, #52]	; 0x34
 8008d8c:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 8008d90:	460b      	mov	r3, r1
 8008d92:	4313      	orrs	r3, r2
 8008d94:	d00a      	beq.n	8008dac <HAL_RCCEx_PeriphCLKConfig+0x11a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC interface clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8008d96:	4b6c      	ldr	r3, [pc, #432]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d98:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d9a:	f423 0140 	bic.w	r1, r3, #12582912	; 0xc00000
 8008d9e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008da2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008da6:	4a68      	ldr	r2, [pc, #416]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008da8:	430b      	orrs	r3, r1
 8008daa:	6553      	str	r3, [r2, #84]	; 0x54
  }

  /*---------------------------- PLL2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 8008dac:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008db0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008db4:	2100      	movs	r1, #0
 8008db6:	62b9      	str	r1, [r7, #40]	; 0x28
 8008db8:	f003 0301 	and.w	r3, r3, #1
 8008dbc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008dbe:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	; 0x28
 8008dc2:	460b      	mov	r3, r1
 8008dc4:	4313      	orrs	r3, r2
 8008dc6:	d011      	beq.n	8008dec <HAL_RCCEx_PeriphCLKConfig+0x11e0>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008dc8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008dcc:	3308      	adds	r3, #8
 8008dce:	2100      	movs	r1, #0
 8008dd0:	4618      	mov	r0, r3
 8008dd2:	f001 f99d 	bl	800a110 <RCCEx_PLL2_Config>
 8008dd6:	4603      	mov	r3, r0
 8008dd8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008ddc:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008de0:	2b00      	cmp	r3, #0
 8008de2:	d003      	beq.n	8008dec <HAL_RCCEx_PeriphCLKConfig+0x11e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008de4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008de8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    } 
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8008dec:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008df0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008df4:	2100      	movs	r1, #0
 8008df6:	6239      	str	r1, [r7, #32]
 8008df8:	f003 0302 	and.w	r3, r3, #2
 8008dfc:	627b      	str	r3, [r7, #36]	; 0x24
 8008dfe:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8008e02:	460b      	mov	r3, r1
 8008e04:	4313      	orrs	r3, r2
 8008e06:	d011      	beq.n	8008e2c <HAL_RCCEx_PeriphCLKConfig+0x1220>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008e08:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e0c:	3308      	adds	r3, #8
 8008e0e:	2101      	movs	r1, #1
 8008e10:	4618      	mov	r0, r3
 8008e12:	f001 f97d 	bl	800a110 <RCCEx_PLL2_Config>
 8008e16:	4603      	mov	r3, r0
 8008e18:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008e1c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008e20:	2b00      	cmp	r3, #0
 8008e22:	d003      	beq.n	8008e2c <HAL_RCCEx_PeriphCLKConfig+0x1220>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008e24:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008e28:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8008e2c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e34:	2100      	movs	r1, #0
 8008e36:	61b9      	str	r1, [r7, #24]
 8008e38:	f003 0304 	and.w	r3, r3, #4
 8008e3c:	61fb      	str	r3, [r7, #28]
 8008e3e:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8008e42:	460b      	mov	r3, r1
 8008e44:	4313      	orrs	r3, r2
 8008e46:	d011      	beq.n	8008e6c <HAL_RCCEx_PeriphCLKConfig+0x1260>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008e48:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e4c:	3308      	adds	r3, #8
 8008e4e:	2102      	movs	r1, #2
 8008e50:	4618      	mov	r0, r3
 8008e52:	f001 f95d 	bl	800a110 <RCCEx_PLL2_Config>
 8008e56:	4603      	mov	r3, r0
 8008e58:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008e5c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d003      	beq.n	8008e6c <HAL_RCCEx_PeriphCLKConfig+0x1260>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008e64:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008e68:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  

  /*---------------------------- PLL3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8008e6c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e74:	2100      	movs	r1, #0
 8008e76:	6139      	str	r1, [r7, #16]
 8008e78:	f003 0308 	and.w	r3, r3, #8
 8008e7c:	617b      	str	r3, [r7, #20]
 8008e7e:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8008e82:	460b      	mov	r3, r1
 8008e84:	4313      	orrs	r3, r2
 8008e86:	d011      	beq.n	8008eac <HAL_RCCEx_PeriphCLKConfig+0x12a0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008e88:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e8c:	3328      	adds	r3, #40	; 0x28
 8008e8e:	2100      	movs	r1, #0
 8008e90:	4618      	mov	r0, r3
 8008e92:	f001 f9ef 	bl	800a274 <RCCEx_PLL3_Config>
 8008e96:	4603      	mov	r3, r0
 8008e98:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  
    if (ret == HAL_OK)
 8008e9c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ea0:	2b00      	cmp	r3, #0
 8008ea2:	d003      	beq.n	8008eac <HAL_RCCEx_PeriphCLKConfig+0x12a0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ea4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ea8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 8008eac:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008eb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008eb4:	2100      	movs	r1, #0
 8008eb6:	60b9      	str	r1, [r7, #8]
 8008eb8:	f003 0310 	and.w	r3, r3, #16
 8008ebc:	60fb      	str	r3, [r7, #12]
 8008ebe:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8008ec2:	460b      	mov	r3, r1
 8008ec4:	4313      	orrs	r3, r2
 8008ec6:	d011      	beq.n	8008eec <HAL_RCCEx_PeriphCLKConfig+0x12e0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008ec8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ecc:	3328      	adds	r3, #40	; 0x28
 8008ece:	2101      	movs	r1, #1
 8008ed0:	4618      	mov	r0, r3
 8008ed2:	f001 f9cf 	bl	800a274 <RCCEx_PLL3_Config>
 8008ed6:	4603      	mov	r3, r0
 8008ed8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008edc:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ee0:	2b00      	cmp	r3, #0
 8008ee2:	d003      	beq.n	8008eec <HAL_RCCEx_PeriphCLKConfig+0x12e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ee4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ee8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 8008eec:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ef4:	2100      	movs	r1, #0
 8008ef6:	6039      	str	r1, [r7, #0]
 8008ef8:	f003 0320 	and.w	r3, r3, #32
 8008efc:	607b      	str	r3, [r7, #4]
 8008efe:	e9d7 1200 	ldrd	r1, r2, [r7]
 8008f02:	460b      	mov	r3, r1
 8008f04:	4313      	orrs	r3, r2
 8008f06:	d011      	beq.n	8008f2c <HAL_RCCEx_PeriphCLKConfig+0x1320>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008f08:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008f0c:	3328      	adds	r3, #40	; 0x28
 8008f0e:	2102      	movs	r1, #2
 8008f10:	4618      	mov	r0, r3
 8008f12:	f001 f9af 	bl	800a274 <RCCEx_PLL3_Config>
 8008f16:	4603      	mov	r3, r0
 8008f18:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008f1c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008f20:	2b00      	cmp	r3, #0
 8008f22:	d003      	beq.n	8008f2c <HAL_RCCEx_PeriphCLKConfig+0x1320>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008f24:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008f28:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    } 
  }

  if (status == HAL_OK)
 8008f2c:	f897 3116 	ldrb.w	r3, [r7, #278]	; 0x116
 8008f30:	2b00      	cmp	r3, #0
 8008f32:	d101      	bne.n	8008f38 <HAL_RCCEx_PeriphCLKConfig+0x132c>
  {
    return HAL_OK;
 8008f34:	2300      	movs	r3, #0
 8008f36:	e000      	b.n	8008f3a <HAL_RCCEx_PeriphCLKConfig+0x132e>
  }
  return HAL_ERROR;
 8008f38:	2301      	movs	r3, #1
}
 8008f3a:	4618      	mov	r0, r3
 8008f3c:	f507 778c 	add.w	r7, r7, #280	; 0x118
 8008f40:	46bd      	mov	sp, r7
 8008f42:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008f46:	bf00      	nop
 8008f48:	58024400 	.word	0x58024400

08008f4c <HAL_RCCEx_GetPeriphCLKFreq>:
  * @retval Frequency in KHz
  *
  *  (*) : Available on some STM32H7 lines only.
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint64_t PeriphClk)
{
 8008f4c:	b580      	push	{r7, lr}
 8008f4e:	b090      	sub	sp, #64	; 0x40
 8008f50:	af00      	add	r7, sp, #0
 8008f52:	e9c7 0100 	strd	r0, r1, [r7]
  /* This variable is used to store the SAI and CKP clock source */
  uint32_t saiclocksource;
  uint32_t ckpclocksource;
  uint32_t srcclk;

  if (PeriphClk == RCC_PERIPHCLK_SAI1)
 8008f56:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008f5a:	f5a2 7180 	sub.w	r1, r2, #256	; 0x100
 8008f5e:	430b      	orrs	r3, r1
 8008f60:	f040 8094 	bne.w	800908c <HAL_RCCEx_GetPeriphCLKFreq+0x140>
  {

    saiclocksource = __HAL_RCC_GET_SAI1_SOURCE();
 8008f64:	4b9b      	ldr	r3, [pc, #620]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008f66:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008f68:	f003 0307 	and.w	r3, r3, #7
 8008f6c:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8008f6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f70:	2b04      	cmp	r3, #4
 8008f72:	f200 8087 	bhi.w	8009084 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 8008f76:	a201      	add	r2, pc, #4	; (adr r2, 8008f7c <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 8008f78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f7c:	08008f91 	.word	0x08008f91
 8008f80:	08008fb9 	.word	0x08008fb9
 8008f84:	08008fe1 	.word	0x08008fe1
 8008f88:	0800907d 	.word	0x0800907d
 8008f8c:	08009009 	.word	0x08009009
    {
      case RCC_SAI1CLKSOURCE_PLL: /* PLL1 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8008f90:	4b90      	ldr	r3, [pc, #576]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008f92:	681b      	ldr	r3, [r3, #0]
 8008f94:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008f98:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008f9c:	d108      	bne.n	8008fb0 <HAL_RCCEx_GetPeriphCLKFreq+0x64>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8008f9e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008fa2:	4618      	mov	r0, r3
 8008fa4:	f000 ff62 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8008fa8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008faa:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008fac:	f000 bc93 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008fb0:	2300      	movs	r3, #0
 8008fb2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008fb4:	f000 bc8f 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8008fb8:	4b86      	ldr	r3, [pc, #536]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008fba:	681b      	ldr	r3, [r3, #0]
 8008fbc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008fc0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008fc4:	d108      	bne.n	8008fd8 <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8008fc6:	f107 0318 	add.w	r3, r7, #24
 8008fca:	4618      	mov	r0, r3
 8008fcc:	f000 fca6 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8008fd0:	69bb      	ldr	r3, [r7, #24]
 8008fd2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008fd4:	f000 bc7f 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008fd8:	2300      	movs	r3, #0
 8008fda:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008fdc:	f000 bc7b 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI1CLKSOURCE_PLL3: /* PLL3 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8008fe0:	4b7c      	ldr	r3, [pc, #496]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008fe2:	681b      	ldr	r3, [r3, #0]
 8008fe4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8008fe8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008fec:	d108      	bne.n	8009000 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8008fee:	f107 030c 	add.w	r3, r7, #12
 8008ff2:	4618      	mov	r0, r3
 8008ff4:	f000 fde6 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 8008ff8:	68fb      	ldr	r3, [r7, #12]
 8008ffa:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008ffc:	f000 bc6b 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009000:	2300      	movs	r3, #0
 8009002:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009004:	f000 bc67 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI1CLKSOURCE_CLKP: /* CKPER is the clock source for SAI1*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009008:	4b72      	ldr	r3, [pc, #456]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800900a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800900c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009010:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009012:	4b70      	ldr	r3, [pc, #448]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009014:	681b      	ldr	r3, [r3, #0]
 8009016:	f003 0304 	and.w	r3, r3, #4
 800901a:	2b04      	cmp	r3, #4
 800901c:	d10c      	bne.n	8009038 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 800901e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009020:	2b00      	cmp	r3, #0
 8009022:	d109      	bne.n	8009038 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009024:	4b6b      	ldr	r3, [pc, #428]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009026:	681b      	ldr	r3, [r3, #0]
 8009028:	08db      	lsrs	r3, r3, #3
 800902a:	f003 0303 	and.w	r3, r3, #3
 800902e:	4a6a      	ldr	r2, [pc, #424]	; (80091d8 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 8009030:	fa22 f303 	lsr.w	r3, r2, r3
 8009034:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009036:	e01f      	b.n	8009078 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009038:	4b66      	ldr	r3, [pc, #408]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800903a:	681b      	ldr	r3, [r3, #0]
 800903c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009040:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009044:	d106      	bne.n	8009054 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 8009046:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009048:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800904c:	d102      	bne.n	8009054 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 800904e:	4b63      	ldr	r3, [pc, #396]	; (80091dc <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 8009050:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009052:	e011      	b.n	8009078 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009054:	4b5f      	ldr	r3, [pc, #380]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009056:	681b      	ldr	r3, [r3, #0]
 8009058:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800905c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009060:	d106      	bne.n	8009070 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 8009062:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009064:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009068:	d102      	bne.n	8009070 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 800906a:	4b5d      	ldr	r3, [pc, #372]	; (80091e0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800906c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800906e:	e003      	b.n	8009078 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009070:	2300      	movs	r3, #0
 8009072:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009074:	f000 bc2f 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009078:	f000 bc2d 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case (RCC_SAI1CLKSOURCE_PIN): /* External clock is the clock source for SAI1 */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 800907c:	4b59      	ldr	r3, [pc, #356]	; (80091e4 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800907e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009080:	f000 bc29 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 8009084:	2300      	movs	r3, #0
 8009086:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009088:	f000 bc25 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
    }
  }
#endif

#if defined(SAI4)
  else if (PeriphClk == RCC_PERIPHCLK_SAI4A)
 800908c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009090:	f5a2 6180 	sub.w	r1, r2, #1024	; 0x400
 8009094:	430b      	orrs	r3, r1
 8009096:	f040 80a7 	bne.w	80091e8 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>
  {

    saiclocksource = __HAL_RCC_GET_SAI4A_SOURCE();
 800909a:	4b4e      	ldr	r3, [pc, #312]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800909c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800909e:	f403 0360 	and.w	r3, r3, #14680064	; 0xe00000
 80090a2:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 80090a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090a6:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80090aa:	d054      	beq.n	8009156 <HAL_RCCEx_GetPeriphCLKFreq+0x20a>
 80090ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090ae:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80090b2:	f200 808b 	bhi.w	80091cc <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80090b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090b8:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80090bc:	f000 8083 	beq.w	80091c6 <HAL_RCCEx_GetPeriphCLKFreq+0x27a>
 80090c0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090c2:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80090c6:	f200 8081 	bhi.w	80091cc <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80090ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090cc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80090d0:	d02f      	beq.n	8009132 <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 80090d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090d4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80090d8:	d878      	bhi.n	80091cc <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80090da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090dc:	2b00      	cmp	r3, #0
 80090de:	d004      	beq.n	80090ea <HAL_RCCEx_GetPeriphCLKFreq+0x19e>
 80090e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090e2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80090e6:	d012      	beq.n	800910e <HAL_RCCEx_GetPeriphCLKFreq+0x1c2>
 80090e8:	e070      	b.n	80091cc <HAL_RCCEx_GetPeriphCLKFreq+0x280>
    {
      case RCC_SAI4ACLKSOURCE_PLL: /* PLL1 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 80090ea:	4b3a      	ldr	r3, [pc, #232]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80090f2:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80090f6:	d107      	bne.n	8009108 <HAL_RCCEx_GetPeriphCLKFreq+0x1bc>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80090f8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80090fc:	4618      	mov	r0, r3
 80090fe:	f000 feb5 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009102:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009104:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009106:	e3e6      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009108:	2300      	movs	r3, #0
 800910a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800910c:	e3e3      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI4ACLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 800910e:	4b31      	ldr	r3, [pc, #196]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009110:	681b      	ldr	r3, [r3, #0]
 8009112:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009116:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800911a:	d107      	bne.n	800912c <HAL_RCCEx_GetPeriphCLKFreq+0x1e0>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800911c:	f107 0318 	add.w	r3, r7, #24
 8009120:	4618      	mov	r0, r3
 8009122:	f000 fbfb 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8009126:	69bb      	ldr	r3, [r7, #24]
 8009128:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800912a:	e3d4      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800912c:	2300      	movs	r3, #0
 800912e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009130:	e3d1      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009132:	4b28      	ldr	r3, [pc, #160]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009134:	681b      	ldr	r3, [r3, #0]
 8009136:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800913a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800913e:	d107      	bne.n	8009150 <HAL_RCCEx_GetPeriphCLKFreq+0x204>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009140:	f107 030c 	add.w	r3, r7, #12
 8009144:	4618      	mov	r0, r3
 8009146:	f000 fd3d 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 800914a:	68fb      	ldr	r3, [r7, #12]
 800914c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800914e:	e3c2      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009150:	2300      	movs	r3, #0
 8009152:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009154:	e3bf      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_CLKP: /* CKPER is the clock source for SAI4A*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009156:	4b1f      	ldr	r3, [pc, #124]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009158:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800915a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800915e:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009160:	4b1c      	ldr	r3, [pc, #112]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009162:	681b      	ldr	r3, [r3, #0]
 8009164:	f003 0304 	and.w	r3, r3, #4
 8009168:	2b04      	cmp	r3, #4
 800916a:	d10c      	bne.n	8009186 <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
 800916c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800916e:	2b00      	cmp	r3, #0
 8009170:	d109      	bne.n	8009186 <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009172:	4b18      	ldr	r3, [pc, #96]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009174:	681b      	ldr	r3, [r3, #0]
 8009176:	08db      	lsrs	r3, r3, #3
 8009178:	f003 0303 	and.w	r3, r3, #3
 800917c:	4a16      	ldr	r2, [pc, #88]	; (80091d8 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 800917e:	fa22 f303 	lsr.w	r3, r2, r3
 8009182:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009184:	e01e      	b.n	80091c4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009186:	4b13      	ldr	r3, [pc, #76]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009188:	681b      	ldr	r3, [r3, #0]
 800918a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800918e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009192:	d106      	bne.n	80091a2 <HAL_RCCEx_GetPeriphCLKFreq+0x256>
 8009194:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009196:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800919a:	d102      	bne.n	80091a2 <HAL_RCCEx_GetPeriphCLKFreq+0x256>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 800919c:	4b0f      	ldr	r3, [pc, #60]	; (80091dc <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 800919e:	63fb      	str	r3, [r7, #60]	; 0x3c
 80091a0:	e010      	b.n	80091c4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 80091a2:	4b0c      	ldr	r3, [pc, #48]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80091a4:	681b      	ldr	r3, [r3, #0]
 80091a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80091aa:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80091ae:	d106      	bne.n	80091be <HAL_RCCEx_GetPeriphCLKFreq+0x272>
 80091b0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80091b2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80091b6:	d102      	bne.n	80091be <HAL_RCCEx_GetPeriphCLKFreq+0x272>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 80091b8:	4b09      	ldr	r3, [pc, #36]	; (80091e0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80091ba:	63fb      	str	r3, [r7, #60]	; 0x3c
 80091bc:	e002      	b.n	80091c4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 80091be:	2300      	movs	r3, #0
 80091c0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 80091c2:	e388      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 80091c4:	e387      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_PIN: /* External clock is the clock source for SAI4A */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 80091c6:	4b07      	ldr	r3, [pc, #28]	; (80091e4 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 80091c8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80091ca:	e384      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 80091cc:	2300      	movs	r3, #0
 80091ce:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80091d0:	e381      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 80091d2:	bf00      	nop
 80091d4:	58024400 	.word	0x58024400
 80091d8:	03d09000 	.word	0x03d09000
 80091dc:	003d0900 	.word	0x003d0900
 80091e0:	017d7840 	.word	0x017d7840
 80091e4:	00bb8000 	.word	0x00bb8000
      }
    }
  }

  else if (PeriphClk == RCC_PERIPHCLK_SAI4B)
 80091e8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80091ec:	f5a2 6100 	sub.w	r1, r2, #2048	; 0x800
 80091f0:	430b      	orrs	r3, r1
 80091f2:	f040 809c 	bne.w	800932e <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
  {

    saiclocksource = __HAL_RCC_GET_SAI4B_SOURCE();
 80091f6:	4b9e      	ldr	r3, [pc, #632]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80091f8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80091fa:	f003 63e0 	and.w	r3, r3, #117440512	; 0x7000000
 80091fe:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8009200:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009202:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8009206:	d054      	beq.n	80092b2 <HAL_RCCEx_GetPeriphCLKFreq+0x366>
 8009208:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800920a:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800920e:	f200 808b 	bhi.w	8009328 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 8009212:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009214:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8009218:	f000 8083 	beq.w	8009322 <HAL_RCCEx_GetPeriphCLKFreq+0x3d6>
 800921c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800921e:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8009222:	f200 8081 	bhi.w	8009328 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 8009226:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009228:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800922c:	d02f      	beq.n	800928e <HAL_RCCEx_GetPeriphCLKFreq+0x342>
 800922e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009230:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009234:	d878      	bhi.n	8009328 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 8009236:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009238:	2b00      	cmp	r3, #0
 800923a:	d004      	beq.n	8009246 <HAL_RCCEx_GetPeriphCLKFreq+0x2fa>
 800923c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800923e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8009242:	d012      	beq.n	800926a <HAL_RCCEx_GetPeriphCLKFreq+0x31e>
 8009244:	e070      	b.n	8009328 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
    {
      case RCC_SAI4BCLKSOURCE_PLL: /* PLL1 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009246:	4b8a      	ldr	r3, [pc, #552]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009248:	681b      	ldr	r3, [r3, #0]
 800924a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800924e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009252:	d107      	bne.n	8009264 <HAL_RCCEx_GetPeriphCLKFreq+0x318>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009254:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009258:	4618      	mov	r0, r3
 800925a:	f000 fe07 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 800925e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009260:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009262:	e338      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009264:	2300      	movs	r3, #0
 8009266:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009268:	e335      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI4BCLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 800926a:	4b81      	ldr	r3, [pc, #516]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800926c:	681b      	ldr	r3, [r3, #0]
 800926e:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009272:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009276:	d107      	bne.n	8009288 <HAL_RCCEx_GetPeriphCLKFreq+0x33c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009278:	f107 0318 	add.w	r3, r7, #24
 800927c:	4618      	mov	r0, r3
 800927e:	f000 fb4d 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8009282:	69bb      	ldr	r3, [r7, #24]
 8009284:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009286:	e326      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009288:	2300      	movs	r3, #0
 800928a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800928c:	e323      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 800928e:	4b78      	ldr	r3, [pc, #480]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009290:	681b      	ldr	r3, [r3, #0]
 8009292:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009296:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800929a:	d107      	bne.n	80092ac <HAL_RCCEx_GetPeriphCLKFreq+0x360>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800929c:	f107 030c 	add.w	r3, r7, #12
 80092a0:	4618      	mov	r0, r3
 80092a2:	f000 fc8f 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80092a6:	68fb      	ldr	r3, [r7, #12]
 80092a8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80092aa:	e314      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80092ac:	2300      	movs	r3, #0
 80092ae:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80092b0:	e311      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_CLKP: /* CKPER is the clock source for SAI4B*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80092b2:	4b6f      	ldr	r3, [pc, #444]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80092b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80092b6:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80092ba:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 80092bc:	4b6c      	ldr	r3, [pc, #432]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80092be:	681b      	ldr	r3, [r3, #0]
 80092c0:	f003 0304 	and.w	r3, r3, #4
 80092c4:	2b04      	cmp	r3, #4
 80092c6:	d10c      	bne.n	80092e2 <HAL_RCCEx_GetPeriphCLKFreq+0x396>
 80092c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80092ca:	2b00      	cmp	r3, #0
 80092cc:	d109      	bne.n	80092e2 <HAL_RCCEx_GetPeriphCLKFreq+0x396>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80092ce:	4b68      	ldr	r3, [pc, #416]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80092d0:	681b      	ldr	r3, [r3, #0]
 80092d2:	08db      	lsrs	r3, r3, #3
 80092d4:	f003 0303 	and.w	r3, r3, #3
 80092d8:	4a66      	ldr	r2, [pc, #408]	; (8009474 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 80092da:	fa22 f303 	lsr.w	r3, r2, r3
 80092de:	63fb      	str	r3, [r7, #60]	; 0x3c
 80092e0:	e01e      	b.n	8009320 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 80092e2:	4b63      	ldr	r3, [pc, #396]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80092e4:	681b      	ldr	r3, [r3, #0]
 80092e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80092ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80092ee:	d106      	bne.n	80092fe <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
 80092f0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80092f2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80092f6:	d102      	bne.n	80092fe <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 80092f8:	4b5f      	ldr	r3, [pc, #380]	; (8009478 <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 80092fa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80092fc:	e010      	b.n	8009320 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 80092fe:	4b5c      	ldr	r3, [pc, #368]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009306:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800930a:	d106      	bne.n	800931a <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
 800930c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800930e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009312:	d102      	bne.n	800931a <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009314:	4b59      	ldr	r3, [pc, #356]	; (800947c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009316:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009318:	e002      	b.n	8009320 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 800931a:	2300      	movs	r3, #0
 800931c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 800931e:	e2da      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009320:	e2d9      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_PIN: /* External clock is the clock source for SAI4B */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 8009322:	4b57      	ldr	r3, [pc, #348]	; (8009480 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8009324:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009326:	e2d6      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009328:	2300      	movs	r3, #0
 800932a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800932c:	e2d3      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
#endif /*SAI4*/
  else if (PeriphClk == RCC_PERIPHCLK_SPI123)
 800932e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009332:	f5a2 5180 	sub.w	r1, r2, #4096	; 0x1000
 8009336:	430b      	orrs	r3, r1
 8009338:	f040 80a7 	bne.w	800948a <HAL_RCCEx_GetPeriphCLKFreq+0x53e>
  {
    /* Get SPI1/2/3 clock source */
    srcclk = __HAL_RCC_GET_SPI123_SOURCE();
 800933c:	4b4c      	ldr	r3, [pc, #304]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800933e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009340:	f403 43e0 	and.w	r3, r3, #28672	; 0x7000
 8009344:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009346:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009348:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800934c:	d055      	beq.n	80093fa <HAL_RCCEx_GetPeriphCLKFreq+0x4ae>
 800934e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009350:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009354:	f200 8096 	bhi.w	8009484 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 8009358:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800935a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800935e:	f000 8084 	beq.w	800946a <HAL_RCCEx_GetPeriphCLKFreq+0x51e>
 8009362:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009364:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009368:	f200 808c 	bhi.w	8009484 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800936c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800936e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009372:	d030      	beq.n	80093d6 <HAL_RCCEx_GetPeriphCLKFreq+0x48a>
 8009374:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009376:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800937a:	f200 8083 	bhi.w	8009484 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800937e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009380:	2b00      	cmp	r3, #0
 8009382:	d004      	beq.n	800938e <HAL_RCCEx_GetPeriphCLKFreq+0x442>
 8009384:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009386:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800938a:	d012      	beq.n	80093b2 <HAL_RCCEx_GetPeriphCLKFreq+0x466>
 800938c:	e07a      	b.n	8009484 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
    {
      case RCC_SPI123CLKSOURCE_PLL: /* PLL1 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 800938e:	4b38      	ldr	r3, [pc, #224]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009390:	681b      	ldr	r3, [r3, #0]
 8009392:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009396:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800939a:	d107      	bne.n	80093ac <HAL_RCCEx_GetPeriphCLKFreq+0x460>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800939c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80093a0:	4618      	mov	r0, r3
 80093a2:	f000 fd63 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80093a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093a8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80093aa:	e294      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80093ac:	2300      	movs	r3, #0
 80093ae:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80093b0:	e291      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80093b2:	4b2f      	ldr	r3, [pc, #188]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80093b4:	681b      	ldr	r3, [r3, #0]
 80093b6:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80093ba:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80093be:	d107      	bne.n	80093d0 <HAL_RCCEx_GetPeriphCLKFreq+0x484>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80093c0:	f107 0318 	add.w	r3, r7, #24
 80093c4:	4618      	mov	r0, r3
 80093c6:	f000 faa9 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80093ca:	69bb      	ldr	r3, [r7, #24]
 80093cc:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80093ce:	e282      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80093d0:	2300      	movs	r3, #0
 80093d2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80093d4:	e27f      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SPI123CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80093d6:	4b26      	ldr	r3, [pc, #152]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80093d8:	681b      	ldr	r3, [r3, #0]
 80093da:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80093de:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80093e2:	d107      	bne.n	80093f4 <HAL_RCCEx_GetPeriphCLKFreq+0x4a8>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80093e4:	f107 030c 	add.w	r3, r7, #12
 80093e8:	4618      	mov	r0, r3
 80093ea:	f000 fbeb 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80093ee:	68fb      	ldr	r3, [r7, #12]
 80093f0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80093f2:	e270      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80093f4:	2300      	movs	r3, #0
 80093f6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80093f8:	e26d      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SPI123CLKSOURCE_CLKP: /* CKPER is the clock source for SPI123 */
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80093fa:	4b1d      	ldr	r3, [pc, #116]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80093fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80093fe:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009402:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009404:	4b1a      	ldr	r3, [pc, #104]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	f003 0304 	and.w	r3, r3, #4
 800940c:	2b04      	cmp	r3, #4
 800940e:	d10c      	bne.n	800942a <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 8009410:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009412:	2b00      	cmp	r3, #0
 8009414:	d109      	bne.n	800942a <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009416:	4b16      	ldr	r3, [pc, #88]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009418:	681b      	ldr	r3, [r3, #0]
 800941a:	08db      	lsrs	r3, r3, #3
 800941c:	f003 0303 	and.w	r3, r3, #3
 8009420:	4a14      	ldr	r2, [pc, #80]	; (8009474 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 8009422:	fa22 f303 	lsr.w	r3, r2, r3
 8009426:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009428:	e01e      	b.n	8009468 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 800942a:	4b11      	ldr	r3, [pc, #68]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800942c:	681b      	ldr	r3, [r3, #0]
 800942e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009432:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009436:	d106      	bne.n	8009446 <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
 8009438:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800943a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800943e:	d102      	bne.n	8009446 <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009440:	4b0d      	ldr	r3, [pc, #52]	; (8009478 <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 8009442:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009444:	e010      	b.n	8009468 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009446:	4b0a      	ldr	r3, [pc, #40]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009448:	681b      	ldr	r3, [r3, #0]
 800944a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800944e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009452:	d106      	bne.n	8009462 <HAL_RCCEx_GetPeriphCLKFreq+0x516>
 8009454:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009456:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800945a:	d102      	bne.n	8009462 <HAL_RCCEx_GetPeriphCLKFreq+0x516>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 800945c:	4b07      	ldr	r3, [pc, #28]	; (800947c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800945e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009460:	e002      	b.n	8009468 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009462:	2300      	movs	r3, #0
 8009464:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009466:	e236      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009468:	e235      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case (RCC_SPI123CLKSOURCE_PIN): /* External clock is the clock source for I2S */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 800946a:	4b05      	ldr	r3, [pc, #20]	; (8009480 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 800946c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800946e:	e232      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009470:	58024400 	.word	0x58024400
 8009474:	03d09000 	.word	0x03d09000
 8009478:	003d0900 	.word	0x003d0900
 800947c:	017d7840 	.word	0x017d7840
 8009480:	00bb8000 	.word	0x00bb8000
      }
      default :
      {
        frequency = 0;
 8009484:	2300      	movs	r3, #0
 8009486:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009488:	e225      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI45)
 800948a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800948e:	f5a2 5100 	sub.w	r1, r2, #8192	; 0x2000
 8009492:	430b      	orrs	r3, r1
 8009494:	f040 8085 	bne.w	80095a2 <HAL_RCCEx_GetPeriphCLKFreq+0x656>
  {
    /* Get SPI45 clock source */
    srcclk = __HAL_RCC_GET_SPI45_SOURCE();
 8009498:	4b9c      	ldr	r3, [pc, #624]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800949a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800949c:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
 80094a0:	63bb      	str	r3, [r7, #56]	; 0x38
    switch (srcclk)
 80094a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094a4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80094a8:	d06b      	beq.n	8009582 <HAL_RCCEx_GetPeriphCLKFreq+0x636>
 80094aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094ac:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80094b0:	d874      	bhi.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80094b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094b4:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80094b8:	d056      	beq.n	8009568 <HAL_RCCEx_GetPeriphCLKFreq+0x61c>
 80094ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094bc:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80094c0:	d86c      	bhi.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80094c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094c4:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80094c8:	d03b      	beq.n	8009542 <HAL_RCCEx_GetPeriphCLKFreq+0x5f6>
 80094ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094cc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80094d0:	d864      	bhi.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80094d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094d4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80094d8:	d021      	beq.n	800951e <HAL_RCCEx_GetPeriphCLKFreq+0x5d2>
 80094da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094dc:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80094e0:	d85c      	bhi.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80094e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094e4:	2b00      	cmp	r3, #0
 80094e6:	d004      	beq.n	80094f2 <HAL_RCCEx_GetPeriphCLKFreq+0x5a6>
 80094e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094ea:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80094ee:	d004      	beq.n	80094fa <HAL_RCCEx_GetPeriphCLKFreq+0x5ae>
 80094f0:	e054      	b.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
    {
      case RCC_SPI45CLKSOURCE_PCLK2: /* CD/D2 PCLK2 is the clock source for SPI4/5 */
      {
        frequency = HAL_RCC_GetPCLK1Freq();
 80094f2:	f7fe fb75 	bl	8007be0 <HAL_RCC_GetPCLK1Freq>
 80094f6:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 80094f8:	e1ed      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80094fa:	4b84      	ldr	r3, [pc, #528]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80094fc:	681b      	ldr	r3, [r3, #0]
 80094fe:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009502:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009506:	d107      	bne.n	8009518 <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009508:	f107 0318 	add.w	r3, r7, #24
 800950c:	4618      	mov	r0, r3
 800950e:	f000 fa05 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8009512:	69fb      	ldr	r3, [r7, #28]
 8009514:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009516:	e1de      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009518:	2300      	movs	r3, #0
 800951a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800951c:	e1db      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 800951e:	4b7b      	ldr	r3, [pc, #492]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009520:	681b      	ldr	r3, [r3, #0]
 8009522:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009526:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800952a:	d107      	bne.n	800953c <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800952c:	f107 030c 	add.w	r3, r7, #12
 8009530:	4618      	mov	r0, r3
 8009532:	f000 fb47 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 8009536:	693b      	ldr	r3, [r7, #16]
 8009538:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800953a:	e1cc      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800953c:	2300      	movs	r3, #0
 800953e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009540:	e1c9      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_HSI: /* HSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8009542:	4b72      	ldr	r3, [pc, #456]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009544:	681b      	ldr	r3, [r3, #0]
 8009546:	f003 0304 	and.w	r3, r3, #4
 800954a:	2b04      	cmp	r3, #4
 800954c:	d109      	bne.n	8009562 <HAL_RCCEx_GetPeriphCLKFreq+0x616>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800954e:	4b6f      	ldr	r3, [pc, #444]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009550:	681b      	ldr	r3, [r3, #0]
 8009552:	08db      	lsrs	r3, r3, #3
 8009554:	f003 0303 	and.w	r3, r3, #3
 8009558:	4a6d      	ldr	r2, [pc, #436]	; (8009710 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 800955a:	fa22 f303 	lsr.w	r3, r2, r3
 800955e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009560:	e1b9      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009562:	2300      	movs	r3, #0
 8009564:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009566:	e1b6      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_CSI: /* CSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 8009568:	4b68      	ldr	r3, [pc, #416]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800956a:	681b      	ldr	r3, [r3, #0]
 800956c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009570:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009574:	d102      	bne.n	800957c <HAL_RCCEx_GetPeriphCLKFreq+0x630>
        {
          frequency = CSI_VALUE;
 8009576:	4b67      	ldr	r3, [pc, #412]	; (8009714 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 8009578:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800957a:	e1ac      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800957c:	2300      	movs	r3, #0
 800957e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009580:	e1a9      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_HSE: /* HSE is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009582:	4b62      	ldr	r3, [pc, #392]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009584:	681b      	ldr	r3, [r3, #0]
 8009586:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800958a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800958e:	d102      	bne.n	8009596 <HAL_RCCEx_GetPeriphCLKFreq+0x64a>
        {
          frequency = HSE_VALUE;
 8009590:	4b61      	ldr	r3, [pc, #388]	; (8009718 <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 8009592:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009594:	e19f      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009596:	2300      	movs	r3, #0
 8009598:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800959a:	e19c      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 800959c:	2300      	movs	r3, #0
 800959e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80095a0:	e199      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_ADC)
 80095a2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80095a6:	f5a2 2100 	sub.w	r1, r2, #524288	; 0x80000
 80095aa:	430b      	orrs	r3, r1
 80095ac:	d173      	bne.n	8009696 <HAL_RCCEx_GetPeriphCLKFreq+0x74a>
  {
    /* Get ADC clock source */
    srcclk = __HAL_RCC_GET_ADC_SOURCE();
 80095ae:	4b57      	ldr	r3, [pc, #348]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80095b0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80095b2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80095b6:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 80095b8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095ba:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80095be:	d02f      	beq.n	8009620 <HAL_RCCEx_GetPeriphCLKFreq+0x6d4>
 80095c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095c2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80095c6:	d863      	bhi.n	8009690 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
 80095c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095ca:	2b00      	cmp	r3, #0
 80095cc:	d004      	beq.n	80095d8 <HAL_RCCEx_GetPeriphCLKFreq+0x68c>
 80095ce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80095d4:	d012      	beq.n	80095fc <HAL_RCCEx_GetPeriphCLKFreq+0x6b0>
 80095d6:	e05b      	b.n	8009690 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
    {
      case RCC_ADCCLKSOURCE_PLL2:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80095d8:	4b4c      	ldr	r3, [pc, #304]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80095da:	681b      	ldr	r3, [r3, #0]
 80095dc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80095e0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80095e4:	d107      	bne.n	80095f6 <HAL_RCCEx_GetPeriphCLKFreq+0x6aa>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80095e6:	f107 0318 	add.w	r3, r7, #24
 80095ea:	4618      	mov	r0, r3
 80095ec:	f000 f996 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80095f0:	69bb      	ldr	r3, [r7, #24]
 80095f2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80095f4:	e16f      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80095f6:	2300      	movs	r3, #0
 80095f8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80095fa:	e16c      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_ADCCLKSOURCE_PLL3:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80095fc:	4b43      	ldr	r3, [pc, #268]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80095fe:	681b      	ldr	r3, [r3, #0]
 8009600:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009604:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009608:	d107      	bne.n	800961a <HAL_RCCEx_GetPeriphCLKFreq+0x6ce>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800960a:	f107 030c 	add.w	r3, r7, #12
 800960e:	4618      	mov	r0, r3
 8009610:	f000 fad8 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_R_Frequency;
 8009614:	697b      	ldr	r3, [r7, #20]
 8009616:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009618:	e15d      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800961a:	2300      	movs	r3, #0
 800961c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800961e:	e15a      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_ADCCLKSOURCE_CLKP:
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009620:	4b3a      	ldr	r3, [pc, #232]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009622:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009624:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009628:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 800962a:	4b38      	ldr	r3, [pc, #224]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800962c:	681b      	ldr	r3, [r3, #0]
 800962e:	f003 0304 	and.w	r3, r3, #4
 8009632:	2b04      	cmp	r3, #4
 8009634:	d10c      	bne.n	8009650 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
 8009636:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009638:	2b00      	cmp	r3, #0
 800963a:	d109      	bne.n	8009650 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800963c:	4b33      	ldr	r3, [pc, #204]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800963e:	681b      	ldr	r3, [r3, #0]
 8009640:	08db      	lsrs	r3, r3, #3
 8009642:	f003 0303 	and.w	r3, r3, #3
 8009646:	4a32      	ldr	r2, [pc, #200]	; (8009710 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 8009648:	fa22 f303 	lsr.w	r3, r2, r3
 800964c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800964e:	e01e      	b.n	800968e <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009650:	4b2e      	ldr	r3, [pc, #184]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009652:	681b      	ldr	r3, [r3, #0]
 8009654:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009658:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800965c:	d106      	bne.n	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x720>
 800965e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009660:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009664:	d102      	bne.n	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x720>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009666:	4b2b      	ldr	r3, [pc, #172]	; (8009714 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 8009668:	63fb      	str	r3, [r7, #60]	; 0x3c
 800966a:	e010      	b.n	800968e <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 800966c:	4b27      	ldr	r3, [pc, #156]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800966e:	681b      	ldr	r3, [r3, #0]
 8009670:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009674:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009678:	d106      	bne.n	8009688 <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
 800967a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800967c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009680:	d102      	bne.n	8009688 <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009682:	4b25      	ldr	r3, [pc, #148]	; (8009718 <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 8009684:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009686:	e002      	b.n	800968e <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009688:	2300      	movs	r3, #0
 800968a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 800968c:	e123      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800968e:	e122      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009690:	2300      	movs	r3, #0
 8009692:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009694:	e11f      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SDMMC)
 8009696:	e9d7 2300 	ldrd	r2, r3, [r7]
 800969a:	f5a2 3180 	sub.w	r1, r2, #65536	; 0x10000
 800969e:	430b      	orrs	r3, r1
 80096a0:	d13c      	bne.n	800971c <HAL_RCCEx_GetPeriphCLKFreq+0x7d0>
  {
    /* Get SDMMC clock source */
    srcclk = __HAL_RCC_GET_SDMMC_SOURCE();
 80096a2:	4b1a      	ldr	r3, [pc, #104]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80096a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80096a6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80096aa:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 80096ac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80096ae:	2b00      	cmp	r3, #0
 80096b0:	d004      	beq.n	80096bc <HAL_RCCEx_GetPeriphCLKFreq+0x770>
 80096b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80096b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80096b8:	d012      	beq.n	80096e0 <HAL_RCCEx_GetPeriphCLKFreq+0x794>
 80096ba:	e023      	b.n	8009704 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>
    {
      case RCC_SDMMCCLKSOURCE_PLL: /* PLL1 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 80096bc:	4b13      	ldr	r3, [pc, #76]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80096be:	681b      	ldr	r3, [r3, #0]
 80096c0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80096c4:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80096c8:	d107      	bne.n	80096da <HAL_RCCEx_GetPeriphCLKFreq+0x78e>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80096ca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80096ce:	4618      	mov	r0, r3
 80096d0:	f000 fbcc 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80096d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80096d6:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80096d8:	e0fd      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80096da:	2300      	movs	r3, #0
 80096dc:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80096de:	e0fa      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80096e0:	4b0a      	ldr	r3, [pc, #40]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80096e2:	681b      	ldr	r3, [r3, #0]
 80096e4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80096e8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80096ec:	d107      	bne.n	80096fe <HAL_RCCEx_GetPeriphCLKFreq+0x7b2>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80096ee:	f107 0318 	add.w	r3, r7, #24
 80096f2:	4618      	mov	r0, r3
 80096f4:	f000 f912 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_R_Frequency;
 80096f8:	6a3b      	ldr	r3, [r7, #32]
 80096fa:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80096fc:	e0eb      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80096fe:	2300      	movs	r3, #0
 8009700:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009702:	e0e8      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009704:	2300      	movs	r3, #0
 8009706:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009708:	e0e5      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800970a:	bf00      	nop
 800970c:	58024400 	.word	0x58024400
 8009710:	03d09000 	.word	0x03d09000
 8009714:	003d0900 	.word	0x003d0900
 8009718:	017d7840 	.word	0x017d7840
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI6)
 800971c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009720:	f5a2 4180 	sub.w	r1, r2, #16384	; 0x4000
 8009724:	430b      	orrs	r3, r1
 8009726:	f040 8085 	bne.w	8009834 <HAL_RCCEx_GetPeriphCLKFreq+0x8e8>
  {
    /* Get SPI6 clock source */
    srcclk = __HAL_RCC_GET_SPI6_SOURCE();
 800972a:	4b6d      	ldr	r3, [pc, #436]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800972c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800972e:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8009732:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009734:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009736:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800973a:	d06b      	beq.n	8009814 <HAL_RCCEx_GetPeriphCLKFreq+0x8c8>
 800973c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800973e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009742:	d874      	bhi.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009744:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009746:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800974a:	d056      	beq.n	80097fa <HAL_RCCEx_GetPeriphCLKFreq+0x8ae>
 800974c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800974e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009752:	d86c      	bhi.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009754:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009756:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800975a:	d03b      	beq.n	80097d4 <HAL_RCCEx_GetPeriphCLKFreq+0x888>
 800975c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800975e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009762:	d864      	bhi.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009764:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009766:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800976a:	d021      	beq.n	80097b0 <HAL_RCCEx_GetPeriphCLKFreq+0x864>
 800976c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800976e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009772:	d85c      	bhi.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009774:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009776:	2b00      	cmp	r3, #0
 8009778:	d004      	beq.n	8009784 <HAL_RCCEx_GetPeriphCLKFreq+0x838>
 800977a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800977c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009780:	d004      	beq.n	800978c <HAL_RCCEx_GetPeriphCLKFreq+0x840>
 8009782:	e054      	b.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
    {
      case RCC_SPI6CLKSOURCE_D3PCLK1: /* D3PCLK1 (PCLK4) is the clock source for SPI6 */
      {
        frequency = HAL_RCCEx_GetD3PCLK1Freq();
 8009784:	f000 f8b4 	bl	80098f0 <HAL_RCCEx_GetD3PCLK1Freq>
 8009788:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 800978a:	e0a4      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 800978c:	4b54      	ldr	r3, [pc, #336]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800978e:	681b      	ldr	r3, [r3, #0]
 8009790:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009794:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009798:	d107      	bne.n	80097aa <HAL_RCCEx_GetPeriphCLKFreq+0x85e>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800979a:	f107 0318 	add.w	r3, r7, #24
 800979e:	4618      	mov	r0, r3
 80097a0:	f000 f8bc 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 80097a4:	69fb      	ldr	r3, [r7, #28]
 80097a6:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097a8:	e095      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097aa:	2300      	movs	r3, #0
 80097ac:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097ae:	e092      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80097b0:	4b4b      	ldr	r3, [pc, #300]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80097b2:	681b      	ldr	r3, [r3, #0]
 80097b4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80097b8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80097bc:	d107      	bne.n	80097ce <HAL_RCCEx_GetPeriphCLKFreq+0x882>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80097be:	f107 030c 	add.w	r3, r7, #12
 80097c2:	4618      	mov	r0, r3
 80097c4:	f000 f9fe 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 80097c8:	693b      	ldr	r3, [r7, #16]
 80097ca:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097cc:	e083      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097ce:	2300      	movs	r3, #0
 80097d0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097d2:	e080      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_HSI: /* HSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 80097d4:	4b42      	ldr	r3, [pc, #264]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80097d6:	681b      	ldr	r3, [r3, #0]
 80097d8:	f003 0304 	and.w	r3, r3, #4
 80097dc:	2b04      	cmp	r3, #4
 80097de:	d109      	bne.n	80097f4 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80097e0:	4b3f      	ldr	r3, [pc, #252]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80097e2:	681b      	ldr	r3, [r3, #0]
 80097e4:	08db      	lsrs	r3, r3, #3
 80097e6:	f003 0303 	and.w	r3, r3, #3
 80097ea:	4a3e      	ldr	r2, [pc, #248]	; (80098e4 <HAL_RCCEx_GetPeriphCLKFreq+0x998>)
 80097ec:	fa22 f303 	lsr.w	r3, r2, r3
 80097f0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097f2:	e070      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097f4:	2300      	movs	r3, #0
 80097f6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097f8:	e06d      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_CSI: /* CSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 80097fa:	4b39      	ldr	r3, [pc, #228]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80097fc:	681b      	ldr	r3, [r3, #0]
 80097fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009802:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009806:	d102      	bne.n	800980e <HAL_RCCEx_GetPeriphCLKFreq+0x8c2>
        {
          frequency = CSI_VALUE;
 8009808:	4b37      	ldr	r3, [pc, #220]	; (80098e8 <HAL_RCCEx_GetPeriphCLKFreq+0x99c>)
 800980a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800980c:	e063      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800980e:	2300      	movs	r3, #0
 8009810:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009812:	e060      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_HSE: /* HSE is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009814:	4b32      	ldr	r3, [pc, #200]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009816:	681b      	ldr	r3, [r3, #0]
 8009818:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800981c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009820:	d102      	bne.n	8009828 <HAL_RCCEx_GetPeriphCLKFreq+0x8dc>
        {
          frequency = HSE_VALUE;
 8009822:	4b32      	ldr	r3, [pc, #200]	; (80098ec <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 8009824:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009826:	e056      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009828:	2300      	movs	r3, #0
 800982a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800982c:	e053      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
        break;
      }
#endif /* RCC_SPI6CLKSOURCE_PIN */
      default :
      {
        frequency = 0;
 800982e:	2300      	movs	r3, #0
 8009830:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009832:	e050      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_FDCAN)
 8009834:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009838:	f5a2 4100 	sub.w	r1, r2, #32768	; 0x8000
 800983c:	430b      	orrs	r3, r1
 800983e:	d148      	bne.n	80098d2 <HAL_RCCEx_GetPeriphCLKFreq+0x986>
  {
    /* Get FDCAN clock source */
    srcclk = __HAL_RCC_GET_FDCAN_SOURCE();
 8009840:	4b27      	ldr	r3, [pc, #156]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009842:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009844:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009848:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 800984a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800984c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009850:	d02a      	beq.n	80098a8 <HAL_RCCEx_GetPeriphCLKFreq+0x95c>
 8009852:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009854:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009858:	d838      	bhi.n	80098cc <HAL_RCCEx_GetPeriphCLKFreq+0x980>
 800985a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800985c:	2b00      	cmp	r3, #0
 800985e:	d004      	beq.n	800986a <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 8009860:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009862:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009866:	d00d      	beq.n	8009884 <HAL_RCCEx_GetPeriphCLKFreq+0x938>
 8009868:	e030      	b.n	80098cc <HAL_RCCEx_GetPeriphCLKFreq+0x980>
    {
      case RCC_FDCANCLKSOURCE_HSE: /* HSE is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 800986a:	4b1d      	ldr	r3, [pc, #116]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800986c:	681b      	ldr	r3, [r3, #0]
 800986e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009872:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009876:	d102      	bne.n	800987e <HAL_RCCEx_GetPeriphCLKFreq+0x932>
        {
          frequency = HSE_VALUE;
 8009878:	4b1c      	ldr	r3, [pc, #112]	; (80098ec <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 800987a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800987c:	e02b      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800987e:	2300      	movs	r3, #0
 8009880:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009882:	e028      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_FDCANCLKSOURCE_PLL: /* PLL is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009884:	4b16      	ldr	r3, [pc, #88]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009886:	681b      	ldr	r3, [r3, #0]
 8009888:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800988c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009890:	d107      	bne.n	80098a2 <HAL_RCCEx_GetPeriphCLKFreq+0x956>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009892:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009896:	4618      	mov	r0, r3
 8009898:	f000 fae8 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 800989c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800989e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80098a0:	e019      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80098a2:	2300      	movs	r3, #0
 80098a4:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80098a6:	e016      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80098a8:	4b0d      	ldr	r3, [pc, #52]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80098aa:	681b      	ldr	r3, [r3, #0]
 80098ac:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80098b0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80098b4:	d107      	bne.n	80098c6 <HAL_RCCEx_GetPeriphCLKFreq+0x97a>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80098b6:	f107 0318 	add.w	r3, r7, #24
 80098ba:	4618      	mov	r0, r3
 80098bc:	f000 f82e 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 80098c0:	69fb      	ldr	r3, [r7, #28]
 80098c2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80098c4:	e007      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80098c6:	2300      	movs	r3, #0
 80098c8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80098ca:	e004      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 80098cc:	2300      	movs	r3, #0
 80098ce:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80098d0:	e001      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else
  {
    frequency = 0;
 80098d2:	2300      	movs	r3, #0
 80098d4:	63fb      	str	r3, [r7, #60]	; 0x3c
  }

  return frequency;
 80098d6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 80098d8:	4618      	mov	r0, r3
 80098da:	3740      	adds	r7, #64	; 0x40
 80098dc:	46bd      	mov	sp, r7
 80098de:	bd80      	pop	{r7, pc}
 80098e0:	58024400 	.word	0x58024400
 80098e4:	03d09000 	.word	0x03d09000
 80098e8:	003d0900 	.word	0x003d0900
 80098ec:	017d7840 	.word	0x017d7840

080098f0 <HAL_RCCEx_GetD3PCLK1Freq>:
  * @note   Each time D3PCLK1 changes, this function must be called to update the
  *         right D3PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval D3PCLK1 frequency
  */
uint32_t HAL_RCCEx_GetD3PCLK1Freq(void)
{
 80098f0:	b580      	push	{r7, lr}
 80098f2:	af00      	add	r7, sp, #0
#if defined(RCC_D3CFGR_D3PPRE)
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
 80098f4:	f7fe f944 	bl	8007b80 <HAL_RCC_GetHCLKFreq>
 80098f8:	4602      	mov	r2, r0
 80098fa:	4b06      	ldr	r3, [pc, #24]	; (8009914 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 80098fc:	6a1b      	ldr	r3, [r3, #32]
 80098fe:	091b      	lsrs	r3, r3, #4
 8009900:	f003 0307 	and.w	r3, r3, #7
 8009904:	4904      	ldr	r1, [pc, #16]	; (8009918 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8009906:	5ccb      	ldrb	r3, [r1, r3]
 8009908:	f003 031f 	and.w	r3, r3, #31
 800990c:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE) >> RCC_SRDCFGR_SRDPPRE_Pos] & 0x1FU));
#endif
}
 8009910:	4618      	mov	r0, r3
 8009912:	bd80      	pop	{r7, pc}
 8009914:	58024400 	.word	0x58024400
 8009918:	08024ac8 	.word	0x08024ac8

0800991c <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef *PLL2_Clocks)
{
 800991c:	b480      	push	{r7}
 800991e:	b089      	sub	sp, #36	; 0x24
 8009920:	af00      	add	r7, sp, #0
 8009922:	6078      	str	r0, [r7, #4]
  float_t fracn2, pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009924:	4ba1      	ldr	r3, [pc, #644]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009926:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009928:	f003 0303 	and.w	r3, r3, #3
 800992c:	61bb      	str	r3, [r7, #24]
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
 800992e:	4b9f      	ldr	r3, [pc, #636]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009930:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009932:	0b1b      	lsrs	r3, r3, #12
 8009934:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009938:	617b      	str	r3, [r7, #20]
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
 800993a:	4b9c      	ldr	r3, [pc, #624]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800993c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800993e:	091b      	lsrs	r3, r3, #4
 8009940:	f003 0301 	and.w	r3, r3, #1
 8009944:	613b      	str	r3, [r7, #16]
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
 8009946:	4b99      	ldr	r3, [pc, #612]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009948:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800994a:	08db      	lsrs	r3, r3, #3
 800994c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009950:	693a      	ldr	r2, [r7, #16]
 8009952:	fb02 f303 	mul.w	r3, r2, r3
 8009956:	ee07 3a90 	vmov	s15, r3
 800995a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800995e:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll2m != 0U)
 8009962:	697b      	ldr	r3, [r7, #20]
 8009964:	2b00      	cmp	r3, #0
 8009966:	f000 8111 	beq.w	8009b8c <HAL_RCCEx_GetPLL2ClockFreq+0x270>
  {
    switch (pllsource)
 800996a:	69bb      	ldr	r3, [r7, #24]
 800996c:	2b02      	cmp	r3, #2
 800996e:	f000 8083 	beq.w	8009a78 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8009972:	69bb      	ldr	r3, [r7, #24]
 8009974:	2b02      	cmp	r3, #2
 8009976:	f200 80a1 	bhi.w	8009abc <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800997a:	69bb      	ldr	r3, [r7, #24]
 800997c:	2b00      	cmp	r3, #0
 800997e:	d003      	beq.n	8009988 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8009980:	69bb      	ldr	r3, [r7, #24]
 8009982:	2b01      	cmp	r3, #1
 8009984:	d056      	beq.n	8009a34 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8009986:	e099      	b.n	8009abc <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009988:	4b88      	ldr	r3, [pc, #544]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	f003 0320 	and.w	r3, r3, #32
 8009990:	2b00      	cmp	r3, #0
 8009992:	d02d      	beq.n	80099f0 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009994:	4b85      	ldr	r3, [pc, #532]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	08db      	lsrs	r3, r3, #3
 800999a:	f003 0303 	and.w	r3, r3, #3
 800999e:	4a84      	ldr	r2, [pc, #528]	; (8009bb0 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 80099a0:	fa22 f303 	lsr.w	r3, r2, r3
 80099a4:	60bb      	str	r3, [r7, #8]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80099a6:	68bb      	ldr	r3, [r7, #8]
 80099a8:	ee07 3a90 	vmov	s15, r3
 80099ac:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80099b0:	697b      	ldr	r3, [r7, #20]
 80099b2:	ee07 3a90 	vmov	s15, r3
 80099b6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80099ba:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80099be:	4b7b      	ldr	r3, [pc, #492]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80099c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80099c2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80099c6:	ee07 3a90 	vmov	s15, r3
 80099ca:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80099ce:	ed97 6a03 	vldr	s12, [r7, #12]
 80099d2:	eddf 5a78 	vldr	s11, [pc, #480]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80099d6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80099da:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80099de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80099e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80099e6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80099ea:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
        }
        break;
 80099ee:	e087      	b.n	8009b00 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80099f0:	697b      	ldr	r3, [r7, #20]
 80099f2:	ee07 3a90 	vmov	s15, r3
 80099f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80099fa:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8009bb8 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 80099fe:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009a02:	4b6a      	ldr	r3, [pc, #424]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009a04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a06:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a0a:	ee07 3a90 	vmov	s15, r3
 8009a0e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a12:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a16:	eddf 5a67 	vldr	s11, [pc, #412]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009a1a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009a1e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009a22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009a26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009a2a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009a2e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009a32:	e065      	b.n	8009b00 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009a34:	697b      	ldr	r3, [r7, #20]
 8009a36:	ee07 3a90 	vmov	s15, r3
 8009a3a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009a3e:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8009bbc <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009a42:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009a46:	4b59      	ldr	r3, [pc, #356]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009a48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a4a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a4e:	ee07 3a90 	vmov	s15, r3
 8009a52:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a56:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a5a:	eddf 5a56 	vldr	s11, [pc, #344]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009a5e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009a62:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009a66:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009a6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009a6e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009a72:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009a76:	e043      	b.n	8009b00 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009a78:	697b      	ldr	r3, [r7, #20]
 8009a7a:	ee07 3a90 	vmov	s15, r3
 8009a7e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009a82:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8009bc0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 8009a86:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009a8a:	4b48      	ldr	r3, [pc, #288]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009a8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a8e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a92:	ee07 3a90 	vmov	s15, r3
 8009a96:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a9a:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a9e:	eddf 5a45 	vldr	s11, [pc, #276]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009aa2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009aa6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009aaa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009aae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ab2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009ab6:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009aba:	e021      	b.n	8009b00 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      default:
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009abc:	697b      	ldr	r3, [r7, #20]
 8009abe:	ee07 3a90 	vmov	s15, r3
 8009ac2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ac6:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8009bbc <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009aca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009ace:	4b37      	ldr	r3, [pc, #220]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009ad0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ad2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009ad6:	ee07 3a90 	vmov	s15, r3
 8009ada:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ade:	ed97 6a03 	vldr	s12, [r7, #12]
 8009ae2:	eddf 5a34 	vldr	s11, [pc, #208]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009ae6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009aea:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009aee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009af2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009af6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009afa:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009afe:	bf00      	nop
    }
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
 8009b00:	4b2a      	ldr	r3, [pc, #168]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009b02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b04:	0a5b      	lsrs	r3, r3, #9
 8009b06:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b0a:	ee07 3a90 	vmov	s15, r3
 8009b0e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b16:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b1a:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b1e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b22:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b26:	ee17 2a90 	vmov	r2, s15
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
 8009b2e:	4b1f      	ldr	r3, [pc, #124]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009b30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b32:	0c1b      	lsrs	r3, r3, #16
 8009b34:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b38:	ee07 3a90 	vmov	s15, r3
 8009b3c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b44:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b48:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b4c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b50:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b54:	ee17 2a90 	vmov	r2, s15
 8009b58:	687b      	ldr	r3, [r7, #4]
 8009b5a:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
 8009b5c:	4b13      	ldr	r3, [pc, #76]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009b5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b60:	0e1b      	lsrs	r3, r3, #24
 8009b62:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b66:	ee07 3a90 	vmov	s15, r3
 8009b6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b6e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b72:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b76:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b7a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b7e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b82:	ee17 2a90 	vmov	r2, s15
 8009b86:	687b      	ldr	r3, [r7, #4]
 8009b88:	609a      	str	r2, [r3, #8]
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
 8009b8a:	e008      	b.n	8009b9e <HAL_RCCEx_GetPLL2ClockFreq+0x282>
    PLL2_Clocks->PLL2_P_Frequency = 0U;
 8009b8c:	687b      	ldr	r3, [r7, #4]
 8009b8e:	2200      	movs	r2, #0
 8009b90:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	2200      	movs	r2, #0
 8009b96:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
 8009b98:	687b      	ldr	r3, [r7, #4]
 8009b9a:	2200      	movs	r2, #0
 8009b9c:	609a      	str	r2, [r3, #8]
}
 8009b9e:	bf00      	nop
 8009ba0:	3724      	adds	r7, #36	; 0x24
 8009ba2:	46bd      	mov	sp, r7
 8009ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ba8:	4770      	bx	lr
 8009baa:	bf00      	nop
 8009bac:	58024400 	.word	0x58024400
 8009bb0:	03d09000 	.word	0x03d09000
 8009bb4:	46000000 	.word	0x46000000
 8009bb8:	4c742400 	.word	0x4c742400
 8009bbc:	4a742400 	.word	0x4a742400
 8009bc0:	4bbebc20 	.word	0x4bbebc20

08009bc4 <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef *PLL3_Clocks)
{
 8009bc4:	b480      	push	{r7}
 8009bc6:	b089      	sub	sp, #36	; 0x24
 8009bc8:	af00      	add	r7, sp, #0
 8009bca:	6078      	str	r0, [r7, #4]
  float_t fracn3, pll3vco;

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
     PLL3xCLK = PLL3_VCO / PLLxR
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009bcc:	4ba1      	ldr	r3, [pc, #644]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009bd0:	f003 0303 	and.w	r3, r3, #3
 8009bd4:	61bb      	str	r3, [r7, #24]
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
 8009bd6:	4b9f      	ldr	r3, [pc, #636]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009bda:	0d1b      	lsrs	r3, r3, #20
 8009bdc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009be0:	617b      	str	r3, [r7, #20]
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
 8009be2:	4b9c      	ldr	r3, [pc, #624]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009be4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009be6:	0a1b      	lsrs	r3, r3, #8
 8009be8:	f003 0301 	and.w	r3, r3, #1
 8009bec:	613b      	str	r3, [r7, #16]
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
 8009bee:	4b99      	ldr	r3, [pc, #612]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009bf2:	08db      	lsrs	r3, r3, #3
 8009bf4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009bf8:	693a      	ldr	r2, [r7, #16]
 8009bfa:	fb02 f303 	mul.w	r3, r2, r3
 8009bfe:	ee07 3a90 	vmov	s15, r3
 8009c02:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009c06:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll3m != 0U)
 8009c0a:	697b      	ldr	r3, [r7, #20]
 8009c0c:	2b00      	cmp	r3, #0
 8009c0e:	f000 8111 	beq.w	8009e34 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
  {
    switch (pllsource)
 8009c12:	69bb      	ldr	r3, [r7, #24]
 8009c14:	2b02      	cmp	r3, #2
 8009c16:	f000 8083 	beq.w	8009d20 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8009c1a:	69bb      	ldr	r3, [r7, #24]
 8009c1c:	2b02      	cmp	r3, #2
 8009c1e:	f200 80a1 	bhi.w	8009d64 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8009c22:	69bb      	ldr	r3, [r7, #24]
 8009c24:	2b00      	cmp	r3, #0
 8009c26:	d003      	beq.n	8009c30 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8009c28:	69bb      	ldr	r3, [r7, #24]
 8009c2a:	2b01      	cmp	r3, #1
 8009c2c:	d056      	beq.n	8009cdc <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8009c2e:	e099      	b.n	8009d64 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009c30:	4b88      	ldr	r3, [pc, #544]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	f003 0320 	and.w	r3, r3, #32
 8009c38:	2b00      	cmp	r3, #0
 8009c3a:	d02d      	beq.n	8009c98 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009c3c:	4b85      	ldr	r3, [pc, #532]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c3e:	681b      	ldr	r3, [r3, #0]
 8009c40:	08db      	lsrs	r3, r3, #3
 8009c42:	f003 0303 	and.w	r3, r3, #3
 8009c46:	4a84      	ldr	r2, [pc, #528]	; (8009e58 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8009c48:	fa22 f303 	lsr.w	r3, r2, r3
 8009c4c:	60bb      	str	r3, [r7, #8]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009c4e:	68bb      	ldr	r3, [r7, #8]
 8009c50:	ee07 3a90 	vmov	s15, r3
 8009c54:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009c58:	697b      	ldr	r3, [r7, #20]
 8009c5a:	ee07 3a90 	vmov	s15, r3
 8009c5e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009c62:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009c66:	4b7b      	ldr	r3, [pc, #492]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c6a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009c6e:	ee07 3a90 	vmov	s15, r3
 8009c72:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009c76:	ed97 6a03 	vldr	s12, [r7, #12]
 8009c7a:	eddf 5a78 	vldr	s11, [pc, #480]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009c7e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009c82:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009c86:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009c8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009c92:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8009c96:	e087      	b.n	8009da8 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009c98:	697b      	ldr	r3, [r7, #20]
 8009c9a:	ee07 3a90 	vmov	s15, r3
 8009c9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ca2:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8009e60 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 8009ca6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009caa:	4b6a      	ldr	r3, [pc, #424]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009cac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009cae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009cb2:	ee07 3a90 	vmov	s15, r3
 8009cb6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009cba:	ed97 6a03 	vldr	s12, [r7, #12]
 8009cbe:	eddf 5a67 	vldr	s11, [pc, #412]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009cc2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009cc6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009cca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009cce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009cd2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009cd6:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009cda:	e065      	b.n	8009da8 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009cdc:	697b      	ldr	r3, [r7, #20]
 8009cde:	ee07 3a90 	vmov	s15, r3
 8009ce2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ce6:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8009e64 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8009cea:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009cee:	4b59      	ldr	r3, [pc, #356]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009cf0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009cf2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009cf6:	ee07 3a90 	vmov	s15, r3
 8009cfa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009cfe:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d02:	eddf 5a56 	vldr	s11, [pc, #344]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009d06:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d0a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d16:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d1a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009d1e:	e043      	b.n	8009da8 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009d20:	697b      	ldr	r3, [r7, #20]
 8009d22:	ee07 3a90 	vmov	s15, r3
 8009d26:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d2a:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8009e68 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 8009d2e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009d32:	4b48      	ldr	r3, [pc, #288]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009d34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d36:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d3a:	ee07 3a90 	vmov	s15, r3
 8009d3e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d42:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d46:	eddf 5a45 	vldr	s11, [pc, #276]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009d4a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d4e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d56:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d5a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d5e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009d62:	e021      	b.n	8009da8 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      default:
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009d64:	697b      	ldr	r3, [r7, #20]
 8009d66:	ee07 3a90 	vmov	s15, r3
 8009d6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d6e:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8009e64 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8009d72:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009d76:	4b37      	ldr	r3, [pc, #220]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009d78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d7a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d7e:	ee07 3a90 	vmov	s15, r3
 8009d82:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d86:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d8a:	eddf 5a34 	vldr	s11, [pc, #208]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009d8e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d92:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d9e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009da2:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009da6:	bf00      	nop
    }
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
 8009da8:	4b2a      	ldr	r3, [pc, #168]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009daa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009dac:	0a5b      	lsrs	r3, r3, #9
 8009dae:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009db2:	ee07 3a90 	vmov	s15, r3
 8009db6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009dba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009dbe:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009dc2:	edd7 6a07 	vldr	s13, [r7, #28]
 8009dc6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009dca:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009dce:	ee17 2a90 	vmov	r2, s15
 8009dd2:	687b      	ldr	r3, [r7, #4]
 8009dd4:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
 8009dd6:	4b1f      	ldr	r3, [pc, #124]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009dd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009dda:	0c1b      	lsrs	r3, r3, #16
 8009ddc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009de0:	ee07 3a90 	vmov	s15, r3
 8009de4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009de8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009dec:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009df0:	edd7 6a07 	vldr	s13, [r7, #28]
 8009df4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009df8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009dfc:	ee17 2a90 	vmov	r2, s15
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
 8009e04:	4b13      	ldr	r3, [pc, #76]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009e06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009e08:	0e1b      	lsrs	r3, r3, #24
 8009e0a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009e0e:	ee07 3a90 	vmov	s15, r3
 8009e12:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e16:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009e1a:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009e1e:	edd7 6a07 	vldr	s13, [r7, #28]
 8009e22:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009e26:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009e2a:	ee17 2a90 	vmov	r2, s15
 8009e2e:	687b      	ldr	r3, [r7, #4]
 8009e30:	609a      	str	r2, [r3, #8]
    PLL3_Clocks->PLL3_P_Frequency = 0U;
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
 8009e32:	e008      	b.n	8009e46 <HAL_RCCEx_GetPLL3ClockFreq+0x282>
    PLL3_Clocks->PLL3_P_Frequency = 0U;
 8009e34:	687b      	ldr	r3, [r7, #4]
 8009e36:	2200      	movs	r2, #0
 8009e38:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	2200      	movs	r2, #0
 8009e3e:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	2200      	movs	r2, #0
 8009e44:	609a      	str	r2, [r3, #8]
}
 8009e46:	bf00      	nop
 8009e48:	3724      	adds	r7, #36	; 0x24
 8009e4a:	46bd      	mov	sp, r7
 8009e4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e50:	4770      	bx	lr
 8009e52:	bf00      	nop
 8009e54:	58024400 	.word	0x58024400
 8009e58:	03d09000 	.word	0x03d09000
 8009e5c:	46000000 	.word	0x46000000
 8009e60:	4c742400 	.word	0x4c742400
 8009e64:	4a742400 	.word	0x4a742400
 8009e68:	4bbebc20 	.word	0x4bbebc20

08009e6c <HAL_RCCEx_GetPLL1ClockFreq>:
  *         right PLL1CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL1_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL1ClockFreq(PLL1_ClocksTypeDef *PLL1_Clocks)
{
 8009e6c:	b480      	push	{r7}
 8009e6e:	b089      	sub	sp, #36	; 0x24
 8009e70:	af00      	add	r7, sp, #0
 8009e72:	6078      	str	r0, [r7, #4]
  uint32_t pllsource, pll1m, pll1fracen, hsivalue;
  float_t fracn1, pll1vco;

  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009e74:	4ba0      	ldr	r3, [pc, #640]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009e76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e78:	f003 0303 	and.w	r3, r3, #3
 8009e7c:	61bb      	str	r3, [r7, #24]
  pll1m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 8009e7e:	4b9e      	ldr	r3, [pc, #632]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009e80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e82:	091b      	lsrs	r3, r3, #4
 8009e84:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009e88:	617b      	str	r3, [r7, #20]
  pll1fracen = RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN;
 8009e8a:	4b9b      	ldr	r3, [pc, #620]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009e8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e8e:	f003 0301 	and.w	r3, r3, #1
 8009e92:	613b      	str	r3, [r7, #16]
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8009e94:	4b98      	ldr	r3, [pc, #608]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009e96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009e98:	08db      	lsrs	r3, r3, #3
 8009e9a:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009e9e:	693a      	ldr	r2, [r7, #16]
 8009ea0:	fb02 f303 	mul.w	r3, r2, r3
 8009ea4:	ee07 3a90 	vmov	s15, r3
 8009ea8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009eac:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll1m != 0U)
 8009eb0:	697b      	ldr	r3, [r7, #20]
 8009eb2:	2b00      	cmp	r3, #0
 8009eb4:	f000 8111 	beq.w	800a0da <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
  {
    switch (pllsource)
 8009eb8:	69bb      	ldr	r3, [r7, #24]
 8009eba:	2b02      	cmp	r3, #2
 8009ebc:	f000 8083 	beq.w	8009fc6 <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 8009ec0:	69bb      	ldr	r3, [r7, #24]
 8009ec2:	2b02      	cmp	r3, #2
 8009ec4:	f200 80a1 	bhi.w	800a00a <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 8009ec8:	69bb      	ldr	r3, [r7, #24]
 8009eca:	2b00      	cmp	r3, #0
 8009ecc:	d003      	beq.n	8009ed6 <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 8009ece:	69bb      	ldr	r3, [r7, #24]
 8009ed0:	2b01      	cmp	r3, #1
 8009ed2:	d056      	beq.n	8009f82 <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 8009ed4:	e099      	b.n	800a00a <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009ed6:	4b88      	ldr	r3, [pc, #544]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009ed8:	681b      	ldr	r3, [r3, #0]
 8009eda:	f003 0320 	and.w	r3, r3, #32
 8009ede:	2b00      	cmp	r3, #0
 8009ee0:	d02d      	beq.n	8009f3e <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009ee2:	4b85      	ldr	r3, [pc, #532]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009ee4:	681b      	ldr	r3, [r3, #0]
 8009ee6:	08db      	lsrs	r3, r3, #3
 8009ee8:	f003 0303 	and.w	r3, r3, #3
 8009eec:	4a83      	ldr	r2, [pc, #524]	; (800a0fc <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 8009eee:	fa22 f303 	lsr.w	r3, r2, r3
 8009ef2:	60bb      	str	r3, [r7, #8]
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8009ef4:	68bb      	ldr	r3, [r7, #8]
 8009ef6:	ee07 3a90 	vmov	s15, r3
 8009efa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009efe:	697b      	ldr	r3, [r7, #20]
 8009f00:	ee07 3a90 	vmov	s15, r3
 8009f04:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f08:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f0c:	4b7a      	ldr	r3, [pc, #488]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009f0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f10:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f14:	ee07 3a90 	vmov	s15, r3
 8009f18:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f1c:	ed97 6a03 	vldr	s12, [r7, #12]
 8009f20:	eddf 5a77 	vldr	s11, [pc, #476]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8009f24:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009f28:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009f2c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009f30:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f34:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009f38:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8009f3c:	e087      	b.n	800a04e <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8009f3e:	697b      	ldr	r3, [r7, #20]
 8009f40:	ee07 3a90 	vmov	s15, r3
 8009f44:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f48:	eddf 6a6e 	vldr	s13, [pc, #440]	; 800a104 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 8009f4c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f50:	4b69      	ldr	r3, [pc, #420]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009f52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f54:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f58:	ee07 3a90 	vmov	s15, r3
 8009f5c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f60:	ed97 6a03 	vldr	s12, [r7, #12]
 8009f64:	eddf 5a66 	vldr	s11, [pc, #408]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8009f68:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009f6c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009f70:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009f74:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f78:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009f7c:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009f80:	e065      	b.n	800a04e <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll1vco = ((float_t)CSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8009f82:	697b      	ldr	r3, [r7, #20]
 8009f84:	ee07 3a90 	vmov	s15, r3
 8009f88:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f8c:	eddf 6a5e 	vldr	s13, [pc, #376]	; 800a108 <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 8009f90:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f94:	4b58      	ldr	r3, [pc, #352]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009f96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f98:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f9c:	ee07 3a90 	vmov	s15, r3
 8009fa0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009fa4:	ed97 6a03 	vldr	s12, [r7, #12]
 8009fa8:	eddf 5a55 	vldr	s11, [pc, #340]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8009fac:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009fb0:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009fb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009fb8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009fbc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009fc0:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009fc4:	e043      	b.n	800a04e <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8009fc6:	697b      	ldr	r3, [r7, #20]
 8009fc8:	ee07 3a90 	vmov	s15, r3
 8009fcc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009fd0:	eddf 6a4e 	vldr	s13, [pc, #312]	; 800a10c <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 8009fd4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009fd8:	4b47      	ldr	r3, [pc, #284]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009fda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009fdc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009fe0:	ee07 3a90 	vmov	s15, r3
 8009fe4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009fe8:	ed97 6a03 	vldr	s12, [r7, #12]
 8009fec:	eddf 5a44 	vldr	s11, [pc, #272]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8009ff0:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009ff4:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009ff8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009ffc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a000:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a004:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a008:	e021      	b.n	800a04e <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      default:
        pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a00a:	697b      	ldr	r3, [r7, #20]
 800a00c:	ee07 3a90 	vmov	s15, r3
 800a010:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a014:	eddf 6a3b 	vldr	s13, [pc, #236]	; 800a104 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800a018:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a01c:	4b36      	ldr	r3, [pc, #216]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a01e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a020:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a024:	ee07 3a90 	vmov	s15, r3
 800a028:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a02c:	ed97 6a03 	vldr	s12, [r7, #12]
 800a030:	eddf 5a33 	vldr	s11, [pc, #204]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a034:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a038:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a03c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a040:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a044:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a048:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a04c:	bf00      	nop
    }

    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9)  + (float_t)1)) ;
 800a04e:	4b2a      	ldr	r3, [pc, #168]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a050:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a052:	0a5b      	lsrs	r3, r3, #9
 800a054:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a058:	ee07 3a90 	vmov	s15, r3
 800a05c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a060:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a064:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a068:	edd7 6a07 	vldr	s13, [r7, #28]
 800a06c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a070:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a074:	ee17 2a90 	vmov	r2, s15
 800a078:	687b      	ldr	r3, [r7, #4]
 800a07a:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> 16) + (float_t)1)) ;
 800a07c:	4b1e      	ldr	r3, [pc, #120]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a07e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a080:	0c1b      	lsrs	r3, r3, #16
 800a082:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a086:	ee07 3a90 	vmov	s15, r3
 800a08a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a08e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a092:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a096:	edd7 6a07 	vldr	s13, [r7, #28]
 800a09a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a09e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a0a2:	ee17 2a90 	vmov	r2, s15
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> 24) + (float_t)1)) ;
 800a0aa:	4b13      	ldr	r3, [pc, #76]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a0ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a0ae:	0e1b      	lsrs	r3, r3, #24
 800a0b0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a0b4:	ee07 3a90 	vmov	s15, r3
 800a0b8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a0bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a0c0:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a0c4:	edd7 6a07 	vldr	s13, [r7, #28]
 800a0c8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a0cc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a0d0:	ee17 2a90 	vmov	r2, s15
 800a0d4:	687b      	ldr	r3, [r7, #4]
 800a0d6:	609a      	str	r2, [r3, #8]
    PLL1_Clocks->PLL1_P_Frequency = 0U;
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
    PLL1_Clocks->PLL1_R_Frequency = 0U;
  }

}
 800a0d8:	e008      	b.n	800a0ec <HAL_RCCEx_GetPLL1ClockFreq+0x280>
    PLL1_Clocks->PLL1_P_Frequency = 0U;
 800a0da:	687b      	ldr	r3, [r7, #4]
 800a0dc:	2200      	movs	r2, #0
 800a0de:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
 800a0e0:	687b      	ldr	r3, [r7, #4]
 800a0e2:	2200      	movs	r2, #0
 800a0e4:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = 0U;
 800a0e6:	687b      	ldr	r3, [r7, #4]
 800a0e8:	2200      	movs	r2, #0
 800a0ea:	609a      	str	r2, [r3, #8]
}
 800a0ec:	bf00      	nop
 800a0ee:	3724      	adds	r7, #36	; 0x24
 800a0f0:	46bd      	mov	sp, r7
 800a0f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0f6:	4770      	bx	lr
 800a0f8:	58024400 	.word	0x58024400
 800a0fc:	03d09000 	.word	0x03d09000
 800a100:	46000000 	.word	0x46000000
 800a104:	4c742400 	.word	0x4c742400
 800a108:	4a742400 	.word	0x4a742400
 800a10c:	4bbebc20 	.word	0x4bbebc20

0800a110 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 800a110:	b580      	push	{r7, lr}
 800a112:	b084      	sub	sp, #16
 800a114:	af00      	add	r7, sp, #0
 800a116:	6078      	str	r0, [r7, #4]
 800a118:	6039      	str	r1, [r7, #0]

  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800a11a:	2300      	movs	r3, #0
 800a11c:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800a11e:	4b53      	ldr	r3, [pc, #332]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a120:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a122:	f003 0303 	and.w	r3, r3, #3
 800a126:	2b03      	cmp	r3, #3
 800a128:	d101      	bne.n	800a12e <RCCEx_PLL2_Config+0x1e>
  {
    return HAL_ERROR;
 800a12a:	2301      	movs	r3, #1
 800a12c:	e099      	b.n	800a262 <RCCEx_PLL2_Config+0x152>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 800a12e:	4b4f      	ldr	r3, [pc, #316]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a130:	681b      	ldr	r3, [r3, #0]
 800a132:	4a4e      	ldr	r2, [pc, #312]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a134:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800a138:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a13a:	f7f7 fca9 	bl	8001a90 <HAL_GetTick>
 800a13e:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800a140:	e008      	b.n	800a154 <RCCEx_PLL2_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800a142:	f7f7 fca5 	bl	8001a90 <HAL_GetTick>
 800a146:	4602      	mov	r2, r0
 800a148:	68bb      	ldr	r3, [r7, #8]
 800a14a:	1ad3      	subs	r3, r2, r3
 800a14c:	2b02      	cmp	r3, #2
 800a14e:	d901      	bls.n	800a154 <RCCEx_PLL2_Config+0x44>
      {
        return HAL_TIMEOUT;
 800a150:	2303      	movs	r3, #3
 800a152:	e086      	b.n	800a262 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800a154:	4b45      	ldr	r3, [pc, #276]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a156:	681b      	ldr	r3, [r3, #0]
 800a158:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a15c:	2b00      	cmp	r3, #0
 800a15e:	d1f0      	bne.n	800a142 <RCCEx_PLL2_Config+0x32>
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 800a160:	4b42      	ldr	r3, [pc, #264]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a162:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a164:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	681b      	ldr	r3, [r3, #0]
 800a16c:	031b      	lsls	r3, r3, #12
 800a16e:	493f      	ldr	r1, [pc, #252]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a170:	4313      	orrs	r3, r2
 800a172:	628b      	str	r3, [r1, #40]	; 0x28
 800a174:	687b      	ldr	r3, [r7, #4]
 800a176:	685b      	ldr	r3, [r3, #4]
 800a178:	3b01      	subs	r3, #1
 800a17a:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	689b      	ldr	r3, [r3, #8]
 800a182:	3b01      	subs	r3, #1
 800a184:	025b      	lsls	r3, r3, #9
 800a186:	b29b      	uxth	r3, r3
 800a188:	431a      	orrs	r2, r3
 800a18a:	687b      	ldr	r3, [r7, #4]
 800a18c:	68db      	ldr	r3, [r3, #12]
 800a18e:	3b01      	subs	r3, #1
 800a190:	041b      	lsls	r3, r3, #16
 800a192:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a196:	431a      	orrs	r2, r3
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	691b      	ldr	r3, [r3, #16]
 800a19c:	3b01      	subs	r3, #1
 800a19e:	061b      	lsls	r3, r3, #24
 800a1a0:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a1a4:	4931      	ldr	r1, [pc, #196]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1a6:	4313      	orrs	r3, r2
 800a1a8:	638b      	str	r3, [r1, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 800a1aa:	4b30      	ldr	r3, [pc, #192]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1ae:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800a1b2:	687b      	ldr	r3, [r7, #4]
 800a1b4:	695b      	ldr	r3, [r3, #20]
 800a1b6:	492d      	ldr	r1, [pc, #180]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1b8:	4313      	orrs	r3, r2
 800a1ba:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 800a1bc:	4b2b      	ldr	r3, [pc, #172]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1c0:	f023 0220 	bic.w	r2, r3, #32
 800a1c4:	687b      	ldr	r3, [r7, #4]
 800a1c6:	699b      	ldr	r3, [r3, #24]
 800a1c8:	4928      	ldr	r1, [pc, #160]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1ca:	4313      	orrs	r3, r2
 800a1cc:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 800a1ce:	4b27      	ldr	r3, [pc, #156]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1d2:	4a26      	ldr	r2, [pc, #152]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1d4:	f023 0310 	bic.w	r3, r3, #16
 800a1d8:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 800a1da:	4b24      	ldr	r3, [pc, #144]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1dc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a1de:	4b24      	ldr	r3, [pc, #144]	; (800a270 <RCCEx_PLL2_Config+0x160>)
 800a1e0:	4013      	ands	r3, r2
 800a1e2:	687a      	ldr	r2, [r7, #4]
 800a1e4:	69d2      	ldr	r2, [r2, #28]
 800a1e6:	00d2      	lsls	r2, r2, #3
 800a1e8:	4920      	ldr	r1, [pc, #128]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1ea:	4313      	orrs	r3, r2
 800a1ec:	63cb      	str	r3, [r1, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 800a1ee:	4b1f      	ldr	r3, [pc, #124]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1f2:	4a1e      	ldr	r2, [pc, #120]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1f4:	f043 0310 	orr.w	r3, r3, #16
 800a1f8:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800a1fa:	683b      	ldr	r3, [r7, #0]
 800a1fc:	2b00      	cmp	r3, #0
 800a1fe:	d106      	bne.n	800a20e <RCCEx_PLL2_Config+0xfe>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 800a200:	4b1a      	ldr	r3, [pc, #104]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a202:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a204:	4a19      	ldr	r2, [pc, #100]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a206:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800a20a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a20c:	e00f      	b.n	800a22e <RCCEx_PLL2_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 800a20e:	683b      	ldr	r3, [r7, #0]
 800a210:	2b01      	cmp	r3, #1
 800a212:	d106      	bne.n	800a222 <RCCEx_PLL2_Config+0x112>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 800a214:	4b15      	ldr	r3, [pc, #84]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a216:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a218:	4a14      	ldr	r2, [pc, #80]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a21a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a21e:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a220:	e005      	b.n	800a22e <RCCEx_PLL2_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 800a222:	4b12      	ldr	r3, [pc, #72]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a226:	4a11      	ldr	r2, [pc, #68]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a228:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800a22c:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 800a22e:	4b0f      	ldr	r3, [pc, #60]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a230:	681b      	ldr	r3, [r3, #0]
 800a232:	4a0e      	ldr	r2, [pc, #56]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a234:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800a238:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a23a:	f7f7 fc29 	bl	8001a90 <HAL_GetTick>
 800a23e:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800a240:	e008      	b.n	800a254 <RCCEx_PLL2_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800a242:	f7f7 fc25 	bl	8001a90 <HAL_GetTick>
 800a246:	4602      	mov	r2, r0
 800a248:	68bb      	ldr	r3, [r7, #8]
 800a24a:	1ad3      	subs	r3, r2, r3
 800a24c:	2b02      	cmp	r3, #2
 800a24e:	d901      	bls.n	800a254 <RCCEx_PLL2_Config+0x144>
      {
        return HAL_TIMEOUT;
 800a250:	2303      	movs	r3, #3
 800a252:	e006      	b.n	800a262 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800a254:	4b05      	ldr	r3, [pc, #20]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a256:	681b      	ldr	r3, [r3, #0]
 800a258:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a25c:	2b00      	cmp	r3, #0
 800a25e:	d0f0      	beq.n	800a242 <RCCEx_PLL2_Config+0x132>
    }

  }


  return status;
 800a260:	7bfb      	ldrb	r3, [r7, #15]
}
 800a262:	4618      	mov	r0, r3
 800a264:	3710      	adds	r7, #16
 800a266:	46bd      	mov	sp, r7
 800a268:	bd80      	pop	{r7, pc}
 800a26a:	bf00      	nop
 800a26c:	58024400 	.word	0x58024400
 800a270:	ffff0007 	.word	0xffff0007

0800a274 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 800a274:	b580      	push	{r7, lr}
 800a276:	b084      	sub	sp, #16
 800a278:	af00      	add	r7, sp, #0
 800a27a:	6078      	str	r0, [r7, #4]
 800a27c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800a27e:	2300      	movs	r3, #0
 800a280:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800a282:	4b53      	ldr	r3, [pc, #332]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a284:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a286:	f003 0303 	and.w	r3, r3, #3
 800a28a:	2b03      	cmp	r3, #3
 800a28c:	d101      	bne.n	800a292 <RCCEx_PLL3_Config+0x1e>
  {
    return HAL_ERROR;
 800a28e:	2301      	movs	r3, #1
 800a290:	e099      	b.n	800a3c6 <RCCEx_PLL3_Config+0x152>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 800a292:	4b4f      	ldr	r3, [pc, #316]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a294:	681b      	ldr	r3, [r3, #0]
 800a296:	4a4e      	ldr	r2, [pc, #312]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a298:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a29c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a29e:	f7f7 fbf7 	bl	8001a90 <HAL_GetTick>
 800a2a2:	60b8      	str	r0, [r7, #8]
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800a2a4:	e008      	b.n	800a2b8 <RCCEx_PLL3_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800a2a6:	f7f7 fbf3 	bl	8001a90 <HAL_GetTick>
 800a2aa:	4602      	mov	r2, r0
 800a2ac:	68bb      	ldr	r3, [r7, #8]
 800a2ae:	1ad3      	subs	r3, r2, r3
 800a2b0:	2b02      	cmp	r3, #2
 800a2b2:	d901      	bls.n	800a2b8 <RCCEx_PLL3_Config+0x44>
      {
        return HAL_TIMEOUT;
 800a2b4:	2303      	movs	r3, #3
 800a2b6:	e086      	b.n	800a3c6 <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800a2b8:	4b45      	ldr	r3, [pc, #276]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a2ba:	681b      	ldr	r3, [r3, #0]
 800a2bc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a2c0:	2b00      	cmp	r3, #0
 800a2c2:	d1f0      	bne.n	800a2a6 <RCCEx_PLL3_Config+0x32>
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 800a2c4:	4b42      	ldr	r3, [pc, #264]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a2c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a2c8:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 800a2cc:	687b      	ldr	r3, [r7, #4]
 800a2ce:	681b      	ldr	r3, [r3, #0]
 800a2d0:	051b      	lsls	r3, r3, #20
 800a2d2:	493f      	ldr	r1, [pc, #252]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a2d4:	4313      	orrs	r3, r2
 800a2d6:	628b      	str	r3, [r1, #40]	; 0x28
 800a2d8:	687b      	ldr	r3, [r7, #4]
 800a2da:	685b      	ldr	r3, [r3, #4]
 800a2dc:	3b01      	subs	r3, #1
 800a2de:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a2e2:	687b      	ldr	r3, [r7, #4]
 800a2e4:	689b      	ldr	r3, [r3, #8]
 800a2e6:	3b01      	subs	r3, #1
 800a2e8:	025b      	lsls	r3, r3, #9
 800a2ea:	b29b      	uxth	r3, r3
 800a2ec:	431a      	orrs	r2, r3
 800a2ee:	687b      	ldr	r3, [r7, #4]
 800a2f0:	68db      	ldr	r3, [r3, #12]
 800a2f2:	3b01      	subs	r3, #1
 800a2f4:	041b      	lsls	r3, r3, #16
 800a2f6:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a2fa:	431a      	orrs	r2, r3
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	691b      	ldr	r3, [r3, #16]
 800a300:	3b01      	subs	r3, #1
 800a302:	061b      	lsls	r3, r3, #24
 800a304:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a308:	4931      	ldr	r1, [pc, #196]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a30a:	4313      	orrs	r3, r2
 800a30c:	640b      	str	r3, [r1, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 800a30e:	4b30      	ldr	r3, [pc, #192]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a310:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a312:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800a316:	687b      	ldr	r3, [r7, #4]
 800a318:	695b      	ldr	r3, [r3, #20]
 800a31a:	492d      	ldr	r1, [pc, #180]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a31c:	4313      	orrs	r3, r2
 800a31e:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 800a320:	4b2b      	ldr	r3, [pc, #172]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a322:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a324:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800a328:	687b      	ldr	r3, [r7, #4]
 800a32a:	699b      	ldr	r3, [r3, #24]
 800a32c:	4928      	ldr	r1, [pc, #160]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a32e:	4313      	orrs	r3, r2
 800a330:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 800a332:	4b27      	ldr	r3, [pc, #156]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a336:	4a26      	ldr	r2, [pc, #152]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a338:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a33c:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 800a33e:	4b24      	ldr	r3, [pc, #144]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a340:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a342:	4b24      	ldr	r3, [pc, #144]	; (800a3d4 <RCCEx_PLL3_Config+0x160>)
 800a344:	4013      	ands	r3, r2
 800a346:	687a      	ldr	r2, [r7, #4]
 800a348:	69d2      	ldr	r2, [r2, #28]
 800a34a:	00d2      	lsls	r2, r2, #3
 800a34c:	4920      	ldr	r1, [pc, #128]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a34e:	4313      	orrs	r3, r2
 800a350:	644b      	str	r3, [r1, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 800a352:	4b1f      	ldr	r3, [pc, #124]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a356:	4a1e      	ldr	r2, [pc, #120]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a358:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a35c:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800a35e:	683b      	ldr	r3, [r7, #0]
 800a360:	2b00      	cmp	r3, #0
 800a362:	d106      	bne.n	800a372 <RCCEx_PLL3_Config+0xfe>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 800a364:	4b1a      	ldr	r3, [pc, #104]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a366:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a368:	4a19      	ldr	r2, [pc, #100]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a36a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800a36e:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a370:	e00f      	b.n	800a392 <RCCEx_PLL3_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 800a372:	683b      	ldr	r3, [r7, #0]
 800a374:	2b01      	cmp	r3, #1
 800a376:	d106      	bne.n	800a386 <RCCEx_PLL3_Config+0x112>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 800a378:	4b15      	ldr	r3, [pc, #84]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a37a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a37c:	4a14      	ldr	r2, [pc, #80]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a37e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a382:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a384:	e005      	b.n	800a392 <RCCEx_PLL3_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800a386:	4b12      	ldr	r3, [pc, #72]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a38a:	4a11      	ldr	r2, [pc, #68]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a38c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800a390:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 800a392:	4b0f      	ldr	r3, [pc, #60]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a394:	681b      	ldr	r3, [r3, #0]
 800a396:	4a0e      	ldr	r2, [pc, #56]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a398:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a39c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a39e:	f7f7 fb77 	bl	8001a90 <HAL_GetTick>
 800a3a2:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800a3a4:	e008      	b.n	800a3b8 <RCCEx_PLL3_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800a3a6:	f7f7 fb73 	bl	8001a90 <HAL_GetTick>
 800a3aa:	4602      	mov	r2, r0
 800a3ac:	68bb      	ldr	r3, [r7, #8]
 800a3ae:	1ad3      	subs	r3, r2, r3
 800a3b0:	2b02      	cmp	r3, #2
 800a3b2:	d901      	bls.n	800a3b8 <RCCEx_PLL3_Config+0x144>
      {
        return HAL_TIMEOUT;
 800a3b4:	2303      	movs	r3, #3
 800a3b6:	e006      	b.n	800a3c6 <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800a3b8:	4b05      	ldr	r3, [pc, #20]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a3ba:	681b      	ldr	r3, [r3, #0]
 800a3bc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a3c0:	2b00      	cmp	r3, #0
 800a3c2:	d0f0      	beq.n	800a3a6 <RCCEx_PLL3_Config+0x132>
    }

  }


  return status;
 800a3c4:	7bfb      	ldrb	r3, [r7, #15]
}
 800a3c6:	4618      	mov	r0, r3
 800a3c8:	3710      	adds	r7, #16
 800a3ca:	46bd      	mov	sp, r7
 800a3cc:	bd80      	pop	{r7, pc}
 800a3ce:	bf00      	nop
 800a3d0:	58024400 	.word	0x58024400
 800a3d4:	ffff0007 	.word	0xffff0007

0800a3d8 <HAL_SPI_Init>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800a3d8:	b580      	push	{r7, lr}
 800a3da:	b084      	sub	sp, #16
 800a3dc:	af00      	add	r7, sp, #0
 800a3de:	6078      	str	r0, [r7, #4]
#if (USE_SPI_CRC != 0UL)
  uint32_t crc_poly_msb_mask;
#endif /* USE_SPI_CRC */

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800a3e0:	687b      	ldr	r3, [r7, #4]
 800a3e2:	2b00      	cmp	r3, #0
 800a3e4:	d101      	bne.n	800a3ea <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800a3e6:	2301      	movs	r3, #1
 800a3e8:	e10f      	b.n	800a60a <HAL_SPI_Init+0x232>
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	2200      	movs	r2, #0
 800a3ee:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 800a3f0:	687b      	ldr	r3, [r7, #4]
 800a3f2:	681b      	ldr	r3, [r3, #0]
 800a3f4:	4a87      	ldr	r2, [pc, #540]	; (800a614 <HAL_SPI_Init+0x23c>)
 800a3f6:	4293      	cmp	r3, r2
 800a3f8:	d00f      	beq.n	800a41a <HAL_SPI_Init+0x42>
 800a3fa:	687b      	ldr	r3, [r7, #4]
 800a3fc:	681b      	ldr	r3, [r3, #0]
 800a3fe:	4a86      	ldr	r2, [pc, #536]	; (800a618 <HAL_SPI_Init+0x240>)
 800a400:	4293      	cmp	r3, r2
 800a402:	d00a      	beq.n	800a41a <HAL_SPI_Init+0x42>
 800a404:	687b      	ldr	r3, [r7, #4]
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	4a84      	ldr	r2, [pc, #528]	; (800a61c <HAL_SPI_Init+0x244>)
 800a40a:	4293      	cmp	r3, r2
 800a40c:	d005      	beq.n	800a41a <HAL_SPI_Init+0x42>
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	68db      	ldr	r3, [r3, #12]
 800a412:	2b0f      	cmp	r3, #15
 800a414:	d901      	bls.n	800a41a <HAL_SPI_Init+0x42>
  {
    return HAL_ERROR;
 800a416:	2301      	movs	r3, #1
 800a418:	e0f7      	b.n	800a60a <HAL_SPI_Init+0x232>
  }

  /* Verify that the SPI instance supports requested data packing */
  packet_length = SPI_GetPacketSize(hspi);
 800a41a:	6878      	ldr	r0, [r7, #4]
 800a41c:	f000 ff6c 	bl	800b2f8 <SPI_GetPacketSize>
 800a420:	60f8      	str	r0, [r7, #12]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800a422:	687b      	ldr	r3, [r7, #4]
 800a424:	681b      	ldr	r3, [r3, #0]
 800a426:	4a7b      	ldr	r2, [pc, #492]	; (800a614 <HAL_SPI_Init+0x23c>)
 800a428:	4293      	cmp	r3, r2
 800a42a:	d00c      	beq.n	800a446 <HAL_SPI_Init+0x6e>
 800a42c:	687b      	ldr	r3, [r7, #4]
 800a42e:	681b      	ldr	r3, [r3, #0]
 800a430:	4a79      	ldr	r2, [pc, #484]	; (800a618 <HAL_SPI_Init+0x240>)
 800a432:	4293      	cmp	r3, r2
 800a434:	d007      	beq.n	800a446 <HAL_SPI_Init+0x6e>
 800a436:	687b      	ldr	r3, [r7, #4]
 800a438:	681b      	ldr	r3, [r3, #0]
 800a43a:	4a78      	ldr	r2, [pc, #480]	; (800a61c <HAL_SPI_Init+0x244>)
 800a43c:	4293      	cmp	r3, r2
 800a43e:	d002      	beq.n	800a446 <HAL_SPI_Init+0x6e>
 800a440:	68fb      	ldr	r3, [r7, #12]
 800a442:	2b08      	cmp	r3, #8
 800a444:	d811      	bhi.n	800a46a <HAL_SPI_Init+0x92>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800a446:	687b      	ldr	r3, [r7, #4]
 800a448:	681b      	ldr	r3, [r3, #0]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800a44a:	4a72      	ldr	r2, [pc, #456]	; (800a614 <HAL_SPI_Init+0x23c>)
 800a44c:	4293      	cmp	r3, r2
 800a44e:	d009      	beq.n	800a464 <HAL_SPI_Init+0x8c>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800a450:	687b      	ldr	r3, [r7, #4]
 800a452:	681b      	ldr	r3, [r3, #0]
 800a454:	4a70      	ldr	r2, [pc, #448]	; (800a618 <HAL_SPI_Init+0x240>)
 800a456:	4293      	cmp	r3, r2
 800a458:	d004      	beq.n	800a464 <HAL_SPI_Init+0x8c>
 800a45a:	687b      	ldr	r3, [r7, #4]
 800a45c:	681b      	ldr	r3, [r3, #0]
 800a45e:	4a6f      	ldr	r2, [pc, #444]	; (800a61c <HAL_SPI_Init+0x244>)
 800a460:	4293      	cmp	r3, r2
 800a462:	d104      	bne.n	800a46e <HAL_SPI_Init+0x96>
 800a464:	68fb      	ldr	r3, [r7, #12]
 800a466:	2b10      	cmp	r3, #16
 800a468:	d901      	bls.n	800a46e <HAL_SPI_Init+0x96>
  {
    return HAL_ERROR;
 800a46a:	2301      	movs	r3, #1
 800a46c:	e0cd      	b.n	800a60a <HAL_SPI_Init+0x232>
  {
    crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
  }
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800a46e:	687b      	ldr	r3, [r7, #4]
 800a470:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800a474:	b2db      	uxtb	r3, r3
 800a476:	2b00      	cmp	r3, #0
 800a478:	d106      	bne.n	800a488 <HAL_SPI_Init+0xb0>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800a47a:	687b      	ldr	r3, [r7, #4]
 800a47c:	2200      	movs	r2, #0
 800a47e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800a482:	6878      	ldr	r0, [r7, #4]
 800a484:	f7f6 ff7c 	bl	8001380 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800a488:	687b      	ldr	r3, [r7, #4]
 800a48a:	2202      	movs	r2, #2
 800a48c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800a490:	687b      	ldr	r3, [r7, #4]
 800a492:	681b      	ldr	r3, [r3, #0]
 800a494:	681a      	ldr	r2, [r3, #0]
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	681b      	ldr	r3, [r3, #0]
 800a49a:	f022 0201 	bic.w	r2, r2, #1
 800a49e:	601a      	str	r2, [r3, #0]

#if (USE_SPI_CRC == 0)
  /* Keep the default value of CRCSIZE in case of CRC is not used */
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	689b      	ldr	r3, [r3, #8]
 800a4a6:	f403 13f8 	and.w	r3, r3, #2031616	; 0x1f0000
 800a4aa:	60bb      	str	r3, [r7, #8]
  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit, CRC calculation state, CRC Length */

  /* SPIx NSS Software Management Configuration */
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800a4ac:	687b      	ldr	r3, [r7, #4]
 800a4ae:	699b      	ldr	r3, [r3, #24]
 800a4b0:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a4b4:	d119      	bne.n	800a4ea <HAL_SPI_Init+0x112>
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	685b      	ldr	r3, [r3, #4]
 800a4ba:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800a4be:	d103      	bne.n	800a4c8 <HAL_SPI_Init+0xf0>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 800a4c0:	687b      	ldr	r3, [r7, #4]
 800a4c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800a4c4:	2b00      	cmp	r3, #0
 800a4c6:	d008      	beq.n	800a4da <HAL_SPI_Init+0x102>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800a4c8:	687b      	ldr	r3, [r7, #4]
 800a4ca:	685b      	ldr	r3, [r3, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 800a4cc:	2b00      	cmp	r3, #0
 800a4ce:	d10c      	bne.n	800a4ea <HAL_SPI_Init+0x112>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800a4d4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800a4d8:	d107      	bne.n	800a4ea <HAL_SPI_Init+0x112>
  {
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 800a4da:	687b      	ldr	r3, [r7, #4]
 800a4dc:	681b      	ldr	r3, [r3, #0]
 800a4de:	681a      	ldr	r2, [r3, #0]
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	681b      	ldr	r3, [r3, #0]
 800a4e4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a4e8:	601a      	str	r2, [r3, #0]
  }

  /* SPIx Master Rx Auto Suspend Configuration */
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	685b      	ldr	r3, [r3, #4]
 800a4ee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a4f2:	2b00      	cmp	r3, #0
 800a4f4:	d00f      	beq.n	800a516 <HAL_SPI_Init+0x13e>
 800a4f6:	687b      	ldr	r3, [r7, #4]
 800a4f8:	68db      	ldr	r3, [r3, #12]
 800a4fa:	2b06      	cmp	r3, #6
 800a4fc:	d90b      	bls.n	800a516 <HAL_SPI_Init+0x13e>
  {
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 800a4fe:	687b      	ldr	r3, [r7, #4]
 800a500:	681b      	ldr	r3, [r3, #0]
 800a502:	681b      	ldr	r3, [r3, #0]
 800a504:	f423 7180 	bic.w	r1, r3, #256	; 0x100
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800a50c:	687b      	ldr	r3, [r7, #4]
 800a50e:	681b      	ldr	r3, [r3, #0]
 800a510:	430a      	orrs	r2, r1
 800a512:	601a      	str	r2, [r3, #0]
 800a514:	e007      	b.n	800a526 <HAL_SPI_Init+0x14e>
  }
  else
  {
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 800a516:	687b      	ldr	r3, [r7, #4]
 800a518:	681b      	ldr	r3, [r3, #0]
 800a51a:	681a      	ldr	r2, [r3, #0]
 800a51c:	687b      	ldr	r3, [r7, #4]
 800a51e:	681b      	ldr	r3, [r3, #0]
 800a520:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a524:	601a      	str	r2, [r3, #0]
  }

  /* SPIx CFG1 Configuration */
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
 800a526:	687b      	ldr	r3, [r7, #4]
 800a528:	69da      	ldr	r2, [r3, #28]
 800a52a:	687b      	ldr	r3, [r7, #4]
 800a52c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a52e:	431a      	orrs	r2, r3
 800a530:	68bb      	ldr	r3, [r7, #8]
 800a532:	431a      	orrs	r2, r3
 800a534:	687b      	ldr	r3, [r7, #4]
 800a536:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a538:	ea42 0103 	orr.w	r1, r2, r3
 800a53c:	687b      	ldr	r3, [r7, #4]
 800a53e:	68da      	ldr	r2, [r3, #12]
 800a540:	687b      	ldr	r3, [r7, #4]
 800a542:	681b      	ldr	r3, [r3, #0]
 800a544:	430a      	orrs	r2, r1
 800a546:	609a      	str	r2, [r3, #8]
                                   hspi->Init.FifoThreshold     | hspi->Init.DataSize));

  /* SPIx CFG2 Configuration */
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 800a548:	687b      	ldr	r3, [r7, #4]
 800a54a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a54c:	687b      	ldr	r3, [r7, #4]
 800a54e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a550:	431a      	orrs	r2, r3
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a556:	431a      	orrs	r2, r3
 800a558:	687b      	ldr	r3, [r7, #4]
 800a55a:	699b      	ldr	r3, [r3, #24]
 800a55c:	431a      	orrs	r2, r3
 800a55e:	687b      	ldr	r3, [r7, #4]
 800a560:	691b      	ldr	r3, [r3, #16]
 800a562:	431a      	orrs	r2, r3
 800a564:	687b      	ldr	r3, [r7, #4]
 800a566:	695b      	ldr	r3, [r3, #20]
 800a568:	431a      	orrs	r2, r3
 800a56a:	687b      	ldr	r3, [r7, #4]
 800a56c:	6a1b      	ldr	r3, [r3, #32]
 800a56e:	431a      	orrs	r2, r3
 800a570:	687b      	ldr	r3, [r7, #4]
 800a572:	685b      	ldr	r3, [r3, #4]
 800a574:	431a      	orrs	r2, r3
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a57a:	431a      	orrs	r2, r3
 800a57c:	687b      	ldr	r3, [r7, #4]
 800a57e:	689b      	ldr	r3, [r3, #8]
 800a580:	431a      	orrs	r2, r3
 800a582:	687b      	ldr	r3, [r7, #4]
 800a584:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a586:	ea42 0103 	orr.w	r1, r2, r3
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	681b      	ldr	r3, [r3, #0]
 800a592:	430a      	orrs	r2, r1
 800a594:	60da      	str	r2, [r3, #12]
    }
  }
#endif /* USE_SPI_CRC */

  /* Insure that Underrun configuration is managed only by Salve */
  if (hspi->Init.Mode == SPI_MODE_SLAVE)
 800a596:	687b      	ldr	r3, [r7, #4]
 800a598:	685b      	ldr	r3, [r3, #4]
 800a59a:	2b00      	cmp	r3, #0
 800a59c:	d113      	bne.n	800a5c6 <HAL_SPI_Init+0x1ee>
    /* Set Default Underrun configuration */
#if (USE_SPI_CRC != 0UL)
    if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
#endif /* USE_SPI_CRC */
    {
      MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 800a59e:	687b      	ldr	r3, [r7, #4]
 800a5a0:	681b      	ldr	r3, [r3, #0]
 800a5a2:	689b      	ldr	r3, [r3, #8]
 800a5a4:	f423 52c0 	bic.w	r2, r3, #6144	; 0x1800
 800a5a8:	687b      	ldr	r3, [r7, #4]
 800a5aa:	681b      	ldr	r3, [r3, #0]
 800a5ac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a5b0:	609a      	str	r2, [r3, #8]
    }
    MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 800a5b2:	687b      	ldr	r3, [r7, #4]
 800a5b4:	681b      	ldr	r3, [r3, #0]
 800a5b6:	689b      	ldr	r3, [r3, #8]
 800a5b8:	f423 62c0 	bic.w	r2, r3, #1536	; 0x600
 800a5bc:	687b      	ldr	r3, [r7, #4]
 800a5be:	681b      	ldr	r3, [r3, #0]
 800a5c0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a5c4:	609a      	str	r2, [r3, #8]
  }

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	681b      	ldr	r3, [r3, #0]
 800a5ca:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	681b      	ldr	r3, [r3, #0]
 800a5d0:	f022 0201 	bic.w	r2, r2, #1
 800a5d4:	651a      	str	r2, [r3, #80]	; 0x50
#endif /* SPI_I2SCFGR_I2SMOD */

  /* Insure that AFCNTR is managed only by Master */
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	685b      	ldr	r3, [r3, #4]
 800a5da:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a5de:	2b00      	cmp	r3, #0
 800a5e0:	d00a      	beq.n	800a5f8 <HAL_SPI_Init+0x220>
  {
    /* Alternate function GPIOs control */
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 800a5e2:	687b      	ldr	r3, [r7, #4]
 800a5e4:	681b      	ldr	r3, [r3, #0]
 800a5e6:	68db      	ldr	r3, [r3, #12]
 800a5e8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800a5ec:	687b      	ldr	r3, [r7, #4]
 800a5ee:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800a5f0:	687b      	ldr	r3, [r7, #4]
 800a5f2:	681b      	ldr	r3, [r3, #0]
 800a5f4:	430a      	orrs	r2, r1
 800a5f6:	60da      	str	r2, [r3, #12]
  }

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a5f8:	687b      	ldr	r3, [r7, #4]
 800a5fa:	2200      	movs	r2, #0
 800a5fc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->State     = HAL_SPI_STATE_READY;
 800a600:	687b      	ldr	r3, [r7, #4]
 800a602:	2201      	movs	r2, #1
 800a604:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  return HAL_OK;
 800a608:	2300      	movs	r3, #0
}
 800a60a:	4618      	mov	r0, r3
 800a60c:	3710      	adds	r7, #16
 800a60e:	46bd      	mov	sp, r7
 800a610:	bd80      	pop	{r7, pc}
 800a612:	bf00      	nop
 800a614:	40013000 	.word	0x40013000
 800a618:	40003800 	.word	0x40003800
 800a61c:	40003c00 	.word	0x40003c00

0800a620 <HAL_SPI_Transmit>:
  * @param  Size   : amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800a620:	b580      	push	{r7, lr}
 800a622:	b088      	sub	sp, #32
 800a624:	af02      	add	r7, sp, #8
 800a626:	60f8      	str	r0, [r7, #12]
 800a628:	60b9      	str	r1, [r7, #8]
 800a62a:	603b      	str	r3, [r7, #0]
 800a62c:	4613      	mov	r3, r2
 800a62e:	80fb      	strh	r3, [r7, #6]
#if defined (__GNUC__)
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 800a630:	68fb      	ldr	r3, [r7, #12]
 800a632:	681b      	ldr	r3, [r3, #0]
 800a634:	3320      	adds	r3, #32
 800a636:	617b      	str	r3, [r7, #20]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800a638:	f7f7 fa2a 	bl	8001a90 <HAL_GetTick>
 800a63c:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 800a63e:	68fb      	ldr	r3, [r7, #12]
 800a640:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800a644:	b2db      	uxtb	r3, r3
 800a646:	2b01      	cmp	r3, #1
 800a648:	d001      	beq.n	800a64e <HAL_SPI_Transmit+0x2e>
  {
    return HAL_BUSY;
 800a64a:	2302      	movs	r3, #2
 800a64c:	e1d1      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
  }

  if ((pData == NULL) || (Size == 0UL))
 800a64e:	68bb      	ldr	r3, [r7, #8]
 800a650:	2b00      	cmp	r3, #0
 800a652:	d002      	beq.n	800a65a <HAL_SPI_Transmit+0x3a>
 800a654:	88fb      	ldrh	r3, [r7, #6]
 800a656:	2b00      	cmp	r3, #0
 800a658:	d101      	bne.n	800a65e <HAL_SPI_Transmit+0x3e>
  {
    return HAL_ERROR;
 800a65a:	2301      	movs	r3, #1
 800a65c:	e1c9      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800a65e:	68fb      	ldr	r3, [r7, #12]
 800a660:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800a664:	2b01      	cmp	r3, #1
 800a666:	d101      	bne.n	800a66c <HAL_SPI_Transmit+0x4c>
 800a668:	2302      	movs	r3, #2
 800a66a:	e1c2      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
 800a66c:	68fb      	ldr	r3, [r7, #12]
 800a66e:	2201      	movs	r2, #1
 800a670:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800a674:	68fb      	ldr	r3, [r7, #12]
 800a676:	2203      	movs	r2, #3
 800a678:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a67c:	68fb      	ldr	r3, [r7, #12]
 800a67e:	2200      	movs	r2, #0
 800a680:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800a684:	68fb      	ldr	r3, [r7, #12]
 800a686:	68ba      	ldr	r2, [r7, #8]
 800a688:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800a68a:	68fb      	ldr	r3, [r7, #12]
 800a68c:	88fa      	ldrh	r2, [r7, #6]
 800a68e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 800a692:	68fb      	ldr	r3, [r7, #12]
 800a694:	88fa      	ldrh	r2, [r7, #6]
 800a696:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800a69a:	68fb      	ldr	r3, [r7, #12]
 800a69c:	2200      	movs	r2, #0
 800a69e:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->RxXferSize  = (uint16_t) 0UL;
 800a6a0:	68fb      	ldr	r3, [r7, #12]
 800a6a2:	2200      	movs	r2, #0
 800a6a4:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t) 0UL;
 800a6a8:	68fb      	ldr	r3, [r7, #12]
 800a6aa:	2200      	movs	r2, #0
 800a6ac:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxISR       = NULL;
 800a6b0:	68fb      	ldr	r3, [r7, #12]
 800a6b2:	2200      	movs	r2, #0
 800a6b4:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 800a6b6:	68fb      	ldr	r3, [r7, #12]
 800a6b8:	2200      	movs	r2, #0
 800a6ba:	671a      	str	r2, [r3, #112]	; 0x70

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a6bc:	68fb      	ldr	r3, [r7, #12]
 800a6be:	689b      	ldr	r3, [r3, #8]
 800a6c0:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800a6c4:	d108      	bne.n	800a6d8 <HAL_SPI_Transmit+0xb8>
  {
    SPI_1LINE_TX(hspi);
 800a6c6:	68fb      	ldr	r3, [r7, #12]
 800a6c8:	681b      	ldr	r3, [r3, #0]
 800a6ca:	681a      	ldr	r2, [r3, #0]
 800a6cc:	68fb      	ldr	r3, [r7, #12]
 800a6ce:	681b      	ldr	r3, [r3, #0]
 800a6d0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a6d4:	601a      	str	r2, [r3, #0]
 800a6d6:	e009      	b.n	800a6ec <HAL_SPI_Transmit+0xcc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800a6d8:	68fb      	ldr	r3, [r7, #12]
 800a6da:	681b      	ldr	r3, [r3, #0]
 800a6dc:	68db      	ldr	r3, [r3, #12]
 800a6de:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800a6e2:	68fb      	ldr	r3, [r7, #12]
 800a6e4:	681b      	ldr	r3, [r3, #0]
 800a6e6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800a6ea:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800a6ec:	68fb      	ldr	r3, [r7, #12]
 800a6ee:	681b      	ldr	r3, [r3, #0]
 800a6f0:	685a      	ldr	r2, [r3, #4]
 800a6f2:	4b96      	ldr	r3, [pc, #600]	; (800a94c <HAL_SPI_Transmit+0x32c>)
 800a6f4:	4013      	ands	r3, r2
 800a6f6:	88f9      	ldrh	r1, [r7, #6]
 800a6f8:	68fa      	ldr	r2, [r7, #12]
 800a6fa:	6812      	ldr	r2, [r2, #0]
 800a6fc:	430b      	orrs	r3, r1
 800a6fe:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800a700:	68fb      	ldr	r3, [r7, #12]
 800a702:	681b      	ldr	r3, [r3, #0]
 800a704:	681a      	ldr	r2, [r3, #0]
 800a706:	68fb      	ldr	r3, [r7, #12]
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	f042 0201 	orr.w	r2, r2, #1
 800a70e:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a710:	68fb      	ldr	r3, [r7, #12]
 800a712:	685b      	ldr	r3, [r3, #4]
 800a714:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800a718:	d107      	bne.n	800a72a <HAL_SPI_Transmit+0x10a>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800a71a:	68fb      	ldr	r3, [r7, #12]
 800a71c:	681b      	ldr	r3, [r3, #0]
 800a71e:	681a      	ldr	r2, [r3, #0]
 800a720:	68fb      	ldr	r3, [r7, #12]
 800a722:	681b      	ldr	r3, [r3, #0]
 800a724:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a728:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 32 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800a72a:	68fb      	ldr	r3, [r7, #12]
 800a72c:	68db      	ldr	r3, [r3, #12]
 800a72e:	2b0f      	cmp	r3, #15
 800a730:	d947      	bls.n	800a7c2 <HAL_SPI_Transmit+0x1a2>
  {
    /* Transmit data in 32 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800a732:	e03f      	b.n	800a7b4 <HAL_SPI_Transmit+0x194>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800a734:	68fb      	ldr	r3, [r7, #12]
 800a736:	681b      	ldr	r3, [r3, #0]
 800a738:	695b      	ldr	r3, [r3, #20]
 800a73a:	f003 0302 	and.w	r3, r3, #2
 800a73e:	2b02      	cmp	r3, #2
 800a740:	d114      	bne.n	800a76c <HAL_SPI_Transmit+0x14c>
      {
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800a742:	68fb      	ldr	r3, [r7, #12]
 800a744:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a746:	68fb      	ldr	r3, [r7, #12]
 800a748:	681b      	ldr	r3, [r3, #0]
 800a74a:	6812      	ldr	r2, [r2, #0]
 800a74c:	621a      	str	r2, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
 800a74e:	68fb      	ldr	r3, [r7, #12]
 800a750:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a752:	1d1a      	adds	r2, r3, #4
 800a754:	68fb      	ldr	r3, [r7, #12]
 800a756:	65da      	str	r2, [r3, #92]	; 0x5c
        hspi->TxXferCount--;
 800a758:	68fb      	ldr	r3, [r7, #12]
 800a75a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a75e:	b29b      	uxth	r3, r3
 800a760:	3b01      	subs	r3, #1
 800a762:	b29a      	uxth	r2, r3
 800a764:	68fb      	ldr	r3, [r7, #12]
 800a766:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a76a:	e023      	b.n	800a7b4 <HAL_SPI_Transmit+0x194>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a76c:	f7f7 f990 	bl	8001a90 <HAL_GetTick>
 800a770:	4602      	mov	r2, r0
 800a772:	693b      	ldr	r3, [r7, #16]
 800a774:	1ad3      	subs	r3, r2, r3
 800a776:	683a      	ldr	r2, [r7, #0]
 800a778:	429a      	cmp	r2, r3
 800a77a:	d803      	bhi.n	800a784 <HAL_SPI_Transmit+0x164>
 800a77c:	683b      	ldr	r3, [r7, #0]
 800a77e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a782:	d102      	bne.n	800a78a <HAL_SPI_Transmit+0x16a>
 800a784:	683b      	ldr	r3, [r7, #0]
 800a786:	2b00      	cmp	r3, #0
 800a788:	d114      	bne.n	800a7b4 <HAL_SPI_Transmit+0x194>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800a78a:	68f8      	ldr	r0, [r7, #12]
 800a78c:	f000 fce6 	bl	800b15c <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800a790:	68fb      	ldr	r3, [r7, #12]
 800a792:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a796:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800a79a:	68fb      	ldr	r3, [r7, #12]
 800a79c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800a7a0:	68fb      	ldr	r3, [r7, #12]
 800a7a2:	2201      	movs	r2, #1
 800a7a4:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800a7a8:	68fb      	ldr	r3, [r7, #12]
 800a7aa:	2200      	movs	r2, #0
 800a7ac:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800a7b0:	2303      	movs	r3, #3
 800a7b2:	e11e      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800a7b4:	68fb      	ldr	r3, [r7, #12]
 800a7b6:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a7ba:	b29b      	uxth	r3, r3
 800a7bc:	2b00      	cmp	r3, #0
 800a7be:	d1b9      	bne.n	800a734 <HAL_SPI_Transmit+0x114>
 800a7c0:	e0f1      	b.n	800a9a6 <HAL_SPI_Transmit+0x386>
        }
      }
    }
  }
  /* Transmit data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800a7c2:	68fb      	ldr	r3, [r7, #12]
 800a7c4:	68db      	ldr	r3, [r3, #12]
 800a7c6:	2b07      	cmp	r3, #7
 800a7c8:	f240 80e6 	bls.w	800a998 <HAL_SPI_Transmit+0x378>
  {
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800a7cc:	e05d      	b.n	800a88a <HAL_SPI_Transmit+0x26a>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800a7ce:	68fb      	ldr	r3, [r7, #12]
 800a7d0:	681b      	ldr	r3, [r3, #0]
 800a7d2:	695b      	ldr	r3, [r3, #20]
 800a7d4:	f003 0302 	and.w	r3, r3, #2
 800a7d8:	2b02      	cmp	r3, #2
 800a7da:	d132      	bne.n	800a842 <HAL_SPI_Transmit+0x222>
      {
        if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 800a7dc:	68fb      	ldr	r3, [r7, #12]
 800a7de:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a7e2:	b29b      	uxth	r3, r3
 800a7e4:	2b01      	cmp	r3, #1
 800a7e6:	d918      	bls.n	800a81a <HAL_SPI_Transmit+0x1fa>
 800a7e8:	68fb      	ldr	r3, [r7, #12]
 800a7ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a7ec:	2b00      	cmp	r3, #0
 800a7ee:	d014      	beq.n	800a81a <HAL_SPI_Transmit+0x1fa>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800a7f0:	68fb      	ldr	r3, [r7, #12]
 800a7f2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a7f4:	68fb      	ldr	r3, [r7, #12]
 800a7f6:	681b      	ldr	r3, [r3, #0]
 800a7f8:	6812      	ldr	r2, [r2, #0]
 800a7fa:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 800a7fc:	68fb      	ldr	r3, [r7, #12]
 800a7fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a800:	1d1a      	adds	r2, r3, #4
 800a802:	68fb      	ldr	r3, [r7, #12]
 800a804:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800a806:	68fb      	ldr	r3, [r7, #12]
 800a808:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a80c:	b29b      	uxth	r3, r3
 800a80e:	3b02      	subs	r3, #2
 800a810:	b29a      	uxth	r2, r3
 800a812:	68fb      	ldr	r3, [r7, #12]
 800a814:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a818:	e037      	b.n	800a88a <HAL_SPI_Transmit+0x26a>
        }
        else
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800a81a:	68fb      	ldr	r3, [r7, #12]
 800a81c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a81e:	881a      	ldrh	r2, [r3, #0]
 800a820:	697b      	ldr	r3, [r7, #20]
 800a822:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 800a824:	68fb      	ldr	r3, [r7, #12]
 800a826:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a828:	1c9a      	adds	r2, r3, #2
 800a82a:	68fb      	ldr	r3, [r7, #12]
 800a82c:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800a82e:	68fb      	ldr	r3, [r7, #12]
 800a830:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a834:	b29b      	uxth	r3, r3
 800a836:	3b01      	subs	r3, #1
 800a838:	b29a      	uxth	r2, r3
 800a83a:	68fb      	ldr	r3, [r7, #12]
 800a83c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a840:	e023      	b.n	800a88a <HAL_SPI_Transmit+0x26a>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a842:	f7f7 f925 	bl	8001a90 <HAL_GetTick>
 800a846:	4602      	mov	r2, r0
 800a848:	693b      	ldr	r3, [r7, #16]
 800a84a:	1ad3      	subs	r3, r2, r3
 800a84c:	683a      	ldr	r2, [r7, #0]
 800a84e:	429a      	cmp	r2, r3
 800a850:	d803      	bhi.n	800a85a <HAL_SPI_Transmit+0x23a>
 800a852:	683b      	ldr	r3, [r7, #0]
 800a854:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a858:	d102      	bne.n	800a860 <HAL_SPI_Transmit+0x240>
 800a85a:	683b      	ldr	r3, [r7, #0]
 800a85c:	2b00      	cmp	r3, #0
 800a85e:	d114      	bne.n	800a88a <HAL_SPI_Transmit+0x26a>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800a860:	68f8      	ldr	r0, [r7, #12]
 800a862:	f000 fc7b 	bl	800b15c <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800a866:	68fb      	ldr	r3, [r7, #12]
 800a868:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a86c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800a870:	68fb      	ldr	r3, [r7, #12]
 800a872:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800a876:	68fb      	ldr	r3, [r7, #12]
 800a878:	2201      	movs	r2, #1
 800a87a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800a87e:	68fb      	ldr	r3, [r7, #12]
 800a880:	2200      	movs	r2, #0
 800a882:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800a886:	2303      	movs	r3, #3
 800a888:	e0b3      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800a88a:	68fb      	ldr	r3, [r7, #12]
 800a88c:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a890:	b29b      	uxth	r3, r3
 800a892:	2b00      	cmp	r3, #0
 800a894:	d19b      	bne.n	800a7ce <HAL_SPI_Transmit+0x1ae>
 800a896:	e086      	b.n	800a9a6 <HAL_SPI_Transmit+0x386>
  else
  {
    while (hspi->TxXferCount > 0UL)
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800a898:	68fb      	ldr	r3, [r7, #12]
 800a89a:	681b      	ldr	r3, [r3, #0]
 800a89c:	695b      	ldr	r3, [r3, #20]
 800a89e:	f003 0302 	and.w	r3, r3, #2
 800a8a2:	2b02      	cmp	r3, #2
 800a8a4:	d154      	bne.n	800a950 <HAL_SPI_Transmit+0x330>
      {
        if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 800a8a6:	68fb      	ldr	r3, [r7, #12]
 800a8a8:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a8ac:	b29b      	uxth	r3, r3
 800a8ae:	2b03      	cmp	r3, #3
 800a8b0:	d918      	bls.n	800a8e4 <HAL_SPI_Transmit+0x2c4>
 800a8b2:	68fb      	ldr	r3, [r7, #12]
 800a8b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a8b6:	2b40      	cmp	r3, #64	; 0x40
 800a8b8:	d914      	bls.n	800a8e4 <HAL_SPI_Transmit+0x2c4>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800a8ba:	68fb      	ldr	r3, [r7, #12]
 800a8bc:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a8be:	68fb      	ldr	r3, [r7, #12]
 800a8c0:	681b      	ldr	r3, [r3, #0]
 800a8c2:	6812      	ldr	r2, [r2, #0]
 800a8c4:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 800a8c6:	68fb      	ldr	r3, [r7, #12]
 800a8c8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a8ca:	1d1a      	adds	r2, r3, #4
 800a8cc:	68fb      	ldr	r3, [r7, #12]
 800a8ce:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)4UL;
 800a8d0:	68fb      	ldr	r3, [r7, #12]
 800a8d2:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a8d6:	b29b      	uxth	r3, r3
 800a8d8:	3b04      	subs	r3, #4
 800a8da:	b29a      	uxth	r2, r3
 800a8dc:	68fb      	ldr	r3, [r7, #12]
 800a8de:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a8e2:	e059      	b.n	800a998 <HAL_SPI_Transmit+0x378>
        }
        else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 800a8e4:	68fb      	ldr	r3, [r7, #12]
 800a8e6:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a8ea:	b29b      	uxth	r3, r3
 800a8ec:	2b01      	cmp	r3, #1
 800a8ee:	d917      	bls.n	800a920 <HAL_SPI_Transmit+0x300>
 800a8f0:	68fb      	ldr	r3, [r7, #12]
 800a8f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a8f4:	2b00      	cmp	r3, #0
 800a8f6:	d013      	beq.n	800a920 <HAL_SPI_Transmit+0x300>
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800a8f8:	68fb      	ldr	r3, [r7, #12]
 800a8fa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a8fc:	881a      	ldrh	r2, [r3, #0]
 800a8fe:	697b      	ldr	r3, [r7, #20]
 800a900:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 800a902:	68fb      	ldr	r3, [r7, #12]
 800a904:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a906:	1c9a      	adds	r2, r3, #2
 800a908:	68fb      	ldr	r3, [r7, #12]
 800a90a:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800a90c:	68fb      	ldr	r3, [r7, #12]
 800a90e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a912:	b29b      	uxth	r3, r3
 800a914:	3b02      	subs	r3, #2
 800a916:	b29a      	uxth	r2, r3
 800a918:	68fb      	ldr	r3, [r7, #12]
 800a91a:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a91e:	e03b      	b.n	800a998 <HAL_SPI_Transmit+0x378>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800a920:	68fb      	ldr	r3, [r7, #12]
 800a922:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a924:	68fb      	ldr	r3, [r7, #12]
 800a926:	681b      	ldr	r3, [r3, #0]
 800a928:	3320      	adds	r3, #32
 800a92a:	7812      	ldrb	r2, [r2, #0]
 800a92c:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr += sizeof(uint8_t);
 800a92e:	68fb      	ldr	r3, [r7, #12]
 800a930:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a932:	1c5a      	adds	r2, r3, #1
 800a934:	68fb      	ldr	r3, [r7, #12]
 800a936:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800a938:	68fb      	ldr	r3, [r7, #12]
 800a93a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a93e:	b29b      	uxth	r3, r3
 800a940:	3b01      	subs	r3, #1
 800a942:	b29a      	uxth	r2, r3
 800a944:	68fb      	ldr	r3, [r7, #12]
 800a946:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a94a:	e025      	b.n	800a998 <HAL_SPI_Transmit+0x378>
 800a94c:	ffff0000 	.word	0xffff0000
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a950:	f7f7 f89e 	bl	8001a90 <HAL_GetTick>
 800a954:	4602      	mov	r2, r0
 800a956:	693b      	ldr	r3, [r7, #16]
 800a958:	1ad3      	subs	r3, r2, r3
 800a95a:	683a      	ldr	r2, [r7, #0]
 800a95c:	429a      	cmp	r2, r3
 800a95e:	d803      	bhi.n	800a968 <HAL_SPI_Transmit+0x348>
 800a960:	683b      	ldr	r3, [r7, #0]
 800a962:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a966:	d102      	bne.n	800a96e <HAL_SPI_Transmit+0x34e>
 800a968:	683b      	ldr	r3, [r7, #0]
 800a96a:	2b00      	cmp	r3, #0
 800a96c:	d114      	bne.n	800a998 <HAL_SPI_Transmit+0x378>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800a96e:	68f8      	ldr	r0, [r7, #12]
 800a970:	f000 fbf4 	bl	800b15c <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800a974:	68fb      	ldr	r3, [r7, #12]
 800a976:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a97a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800a97e:	68fb      	ldr	r3, [r7, #12]
 800a980:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800a984:	68fb      	ldr	r3, [r7, #12]
 800a986:	2201      	movs	r2, #1
 800a988:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800a98c:	68fb      	ldr	r3, [r7, #12]
 800a98e:	2200      	movs	r2, #0
 800a990:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800a994:	2303      	movs	r3, #3
 800a996:	e02c      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800a998:	68fb      	ldr	r3, [r7, #12]
 800a99a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a99e:	b29b      	uxth	r3, r3
 800a9a0:	2b00      	cmp	r3, #0
 800a9a2:	f47f af79 	bne.w	800a898 <HAL_SPI_Transmit+0x278>
      }
    }
  }

  /* Wait for Tx (and CRC) data to be sent */
  if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
 800a9a6:	693b      	ldr	r3, [r7, #16]
 800a9a8:	9300      	str	r3, [sp, #0]
 800a9aa:	683b      	ldr	r3, [r7, #0]
 800a9ac:	2200      	movs	r2, #0
 800a9ae:	2108      	movs	r1, #8
 800a9b0:	68f8      	ldr	r0, [r7, #12]
 800a9b2:	f000 fc73 	bl	800b29c <SPI_WaitOnFlagUntilTimeout>
 800a9b6:	4603      	mov	r3, r0
 800a9b8:	2b00      	cmp	r3, #0
 800a9ba:	d007      	beq.n	800a9cc <HAL_SPI_Transmit+0x3ac>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a9bc:	68fb      	ldr	r3, [r7, #12]
 800a9be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a9c2:	f043 0220 	orr.w	r2, r3, #32
 800a9c6:	68fb      	ldr	r3, [r7, #12]
 800a9c8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  }

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 800a9cc:	68f8      	ldr	r0, [r7, #12]
 800a9ce:	f000 fbc5 	bl	800b15c <SPI_CloseTransfer>

  hspi->State = HAL_SPI_STATE_READY;
 800a9d2:	68fb      	ldr	r3, [r7, #12]
 800a9d4:	2201      	movs	r2, #1
 800a9d6:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800a9da:	68fb      	ldr	r3, [r7, #12]
 800a9dc:	2200      	movs	r2, #0
 800a9de:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a9e2:	68fb      	ldr	r3, [r7, #12]
 800a9e4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a9e8:	2b00      	cmp	r3, #0
 800a9ea:	d001      	beq.n	800a9f0 <HAL_SPI_Transmit+0x3d0>
  {
    return HAL_ERROR;
 800a9ec:	2301      	movs	r3, #1
 800a9ee:	e000      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
  }
  else
  {
    return HAL_OK;
 800a9f0:	2300      	movs	r3, #0
  }
}
 800a9f2:	4618      	mov	r0, r3
 800a9f4:	3718      	adds	r7, #24
 800a9f6:	46bd      	mov	sp, r7
 800a9f8:	bd80      	pop	{r7, pc}
 800a9fa:	bf00      	nop

0800a9fc <HAL_SPI_Transmit_DMA>:
  * @param  pData: pointer to data buffer
  * @param  Size : amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 800a9fc:	b580      	push	{r7, lr}
 800a9fe:	b084      	sub	sp, #16
 800aa00:	af00      	add	r7, sp, #0
 800aa02:	60f8      	str	r0, [r7, #12]
 800aa04:	60b9      	str	r1, [r7, #8]
 800aa06:	4613      	mov	r3, r2
 800aa08:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 800aa0a:	68fb      	ldr	r3, [r7, #12]
 800aa0c:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800aa10:	b2db      	uxtb	r3, r3
 800aa12:	2b01      	cmp	r3, #1
 800aa14:	d001      	beq.n	800aa1a <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 800aa16:	2302      	movs	r3, #2
 800aa18:	e126      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
  }

  if ((pData == NULL) || (Size == 0UL))
 800aa1a:	68bb      	ldr	r3, [r7, #8]
 800aa1c:	2b00      	cmp	r3, #0
 800aa1e:	d002      	beq.n	800aa26 <HAL_SPI_Transmit_DMA+0x2a>
 800aa20:	88fb      	ldrh	r3, [r7, #6]
 800aa22:	2b00      	cmp	r3, #0
 800aa24:	d101      	bne.n	800aa2a <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 800aa26:	2301      	movs	r3, #1
 800aa28:	e11e      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800aa2a:	68fb      	ldr	r3, [r7, #12]
 800aa2c:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800aa30:	2b01      	cmp	r3, #1
 800aa32:	d101      	bne.n	800aa38 <HAL_SPI_Transmit_DMA+0x3c>
 800aa34:	2302      	movs	r3, #2
 800aa36:	e117      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
 800aa38:	68fb      	ldr	r3, [r7, #12]
 800aa3a:	2201      	movs	r2, #1
 800aa3c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800aa40:	68fb      	ldr	r3, [r7, #12]
 800aa42:	2203      	movs	r2, #3
 800aa44:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800aa48:	68fb      	ldr	r3, [r7, #12]
 800aa4a:	2200      	movs	r2, #0
 800aa4c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800aa50:	68fb      	ldr	r3, [r7, #12]
 800aa52:	68ba      	ldr	r2, [r7, #8]
 800aa54:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800aa56:	68fb      	ldr	r3, [r7, #12]
 800aa58:	88fa      	ldrh	r2, [r7, #6]
 800aa5a:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 800aa5e:	68fb      	ldr	r3, [r7, #12]
 800aa60:	88fa      	ldrh	r2, [r7, #6]
 800aa62:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800aa66:	68fb      	ldr	r3, [r7, #12]
 800aa68:	2200      	movs	r2, #0
 800aa6a:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->TxISR       = NULL;
 800aa6c:	68fb      	ldr	r3, [r7, #12]
 800aa6e:	2200      	movs	r2, #0
 800aa70:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 800aa72:	68fb      	ldr	r3, [r7, #12]
 800aa74:	2200      	movs	r2, #0
 800aa76:	671a      	str	r2, [r3, #112]	; 0x70
  hspi->RxXferSize  = (uint16_t)0UL;
 800aa78:	68fb      	ldr	r3, [r7, #12]
 800aa7a:	2200      	movs	r2, #0
 800aa7c:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t)0UL;
 800aa80:	68fb      	ldr	r3, [r7, #12]
 800aa82:	2200      	movs	r2, #0
 800aa84:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aa88:	68fb      	ldr	r3, [r7, #12]
 800aa8a:	689b      	ldr	r3, [r3, #8]
 800aa8c:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800aa90:	d108      	bne.n	800aaa4 <HAL_SPI_Transmit_DMA+0xa8>
  {
    SPI_1LINE_TX(hspi);
 800aa92:	68fb      	ldr	r3, [r7, #12]
 800aa94:	681b      	ldr	r3, [r3, #0]
 800aa96:	681a      	ldr	r2, [r3, #0]
 800aa98:	68fb      	ldr	r3, [r7, #12]
 800aa9a:	681b      	ldr	r3, [r3, #0]
 800aa9c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aaa0:	601a      	str	r2, [r3, #0]
 800aaa2:	e009      	b.n	800aab8 <HAL_SPI_Transmit_DMA+0xbc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800aaa4:	68fb      	ldr	r3, [r7, #12]
 800aaa6:	681b      	ldr	r3, [r3, #0]
 800aaa8:	68db      	ldr	r3, [r3, #12]
 800aaaa:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800aaae:	68fb      	ldr	r3, [r7, #12]
 800aab0:	681b      	ldr	r3, [r3, #0]
 800aab2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800aab6:	60da      	str	r2, [r3, #12]
  }

  /* Packing mode management is enabled by the DMA settings */
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 800aab8:	68fb      	ldr	r3, [r7, #12]
 800aaba:	68db      	ldr	r3, [r3, #12]
 800aabc:	2b0f      	cmp	r3, #15
 800aabe:	d905      	bls.n	800aacc <HAL_SPI_Transmit_DMA+0xd0>
 800aac0:	68fb      	ldr	r3, [r7, #12]
 800aac2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800aac4:	699b      	ldr	r3, [r3, #24]
 800aac6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800aaca:	d10f      	bne.n	800aaec <HAL_SPI_Transmit_DMA+0xf0>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800aacc:	68fb      	ldr	r3, [r7, #12]
 800aace:	68db      	ldr	r3, [r3, #12]
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 800aad0:	2b07      	cmp	r3, #7
 800aad2:	d911      	bls.n	800aaf8 <HAL_SPI_Transmit_DMA+0xfc>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800aad4:	68fb      	ldr	r3, [r7, #12]
 800aad6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800aad8:	699b      	ldr	r3, [r3, #24]
 800aada:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800aade:	d00b      	beq.n	800aaf8 <HAL_SPI_Transmit_DMA+0xfc>
                                                     (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))))
 800aae0:	68fb      	ldr	r3, [r7, #12]
 800aae2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800aae4:	699b      	ldr	r3, [r3, #24]
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800aae6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800aaea:	d005      	beq.n	800aaf8 <HAL_SPI_Transmit_DMA+0xfc>
  {
    /* Restriction the DMA data received is not allowed in this mode */
    __HAL_UNLOCK(hspi);
 800aaec:	68fb      	ldr	r3, [r7, #12]
 800aaee:	2200      	movs	r2, #0
 800aaf0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return HAL_ERROR;
 800aaf4:	2301      	movs	r3, #1
 800aaf6:	e0b7      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Adjust XferCount according to DMA alignment / Data size */
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 800aaf8:	68fb      	ldr	r3, [r7, #12]
 800aafa:	68db      	ldr	r3, [r3, #12]
 800aafc:	2b07      	cmp	r3, #7
 800aafe:	d820      	bhi.n	800ab42 <HAL_SPI_Transmit_DMA+0x146>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800ab00:	68fb      	ldr	r3, [r7, #12]
 800ab02:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab04:	699b      	ldr	r3, [r3, #24]
 800ab06:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ab0a:	d109      	bne.n	800ab20 <HAL_SPI_Transmit_DMA+0x124>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800ab0c:	68fb      	ldr	r3, [r7, #12]
 800ab0e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ab12:	b29b      	uxth	r3, r3
 800ab14:	3301      	adds	r3, #1
 800ab16:	105b      	asrs	r3, r3, #1
 800ab18:	b29a      	uxth	r2, r3
 800ab1a:	68fb      	ldr	r3, [r7, #12]
 800ab1c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
    }
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 800ab20:	68fb      	ldr	r3, [r7, #12]
 800ab22:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab24:	699b      	ldr	r3, [r3, #24]
 800ab26:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800ab2a:	d11e      	bne.n	800ab6a <HAL_SPI_Transmit_DMA+0x16e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 800ab2c:	68fb      	ldr	r3, [r7, #12]
 800ab2e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ab32:	b29b      	uxth	r3, r3
 800ab34:	3303      	adds	r3, #3
 800ab36:	109b      	asrs	r3, r3, #2
 800ab38:	b29a      	uxth	r2, r3
 800ab3a:	68fb      	ldr	r3, [r7, #12]
 800ab3c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800ab40:	e013      	b.n	800ab6a <HAL_SPI_Transmit_DMA+0x16e>
    }
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 800ab42:	68fb      	ldr	r3, [r7, #12]
 800ab44:	68db      	ldr	r3, [r3, #12]
 800ab46:	2b0f      	cmp	r3, #15
 800ab48:	d80f      	bhi.n	800ab6a <HAL_SPI_Transmit_DMA+0x16e>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 800ab4a:	68fb      	ldr	r3, [r7, #12]
 800ab4c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab4e:	699b      	ldr	r3, [r3, #24]
 800ab50:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800ab54:	d109      	bne.n	800ab6a <HAL_SPI_Transmit_DMA+0x16e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800ab56:	68fb      	ldr	r3, [r7, #12]
 800ab58:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ab5c:	b29b      	uxth	r3, r3
 800ab5e:	3301      	adds	r3, #1
 800ab60:	105b      	asrs	r3, r3, #1
 800ab62:	b29a      	uxth	r2, r3
 800ab64:	68fb      	ldr	r3, [r7, #12]
 800ab66:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  {
    /* Adjustment done */
  }

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800ab6a:	68fb      	ldr	r3, [r7, #12]
 800ab6c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab6e:	4a40      	ldr	r2, [pc, #256]	; (800ac70 <HAL_SPI_Transmit_DMA+0x274>)
 800ab70:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 800ab72:	68fb      	ldr	r3, [r7, #12]
 800ab74:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab76:	4a3f      	ldr	r2, [pc, #252]	; (800ac74 <HAL_SPI_Transmit_DMA+0x278>)
 800ab78:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 800ab7a:	68fb      	ldr	r3, [r7, #12]
 800ab7c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab7e:	4a3e      	ldr	r2, [pc, #248]	; (800ac78 <HAL_SPI_Transmit_DMA+0x27c>)
 800ab80:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 800ab82:	68fb      	ldr	r3, [r7, #12]
 800ab84:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab86:	2200      	movs	r2, #0
 800ab88:	651a      	str	r2, [r3, #80]	; 0x50

  /* Clear TXDMAEN bit*/
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800ab8a:	68fb      	ldr	r3, [r7, #12]
 800ab8c:	681b      	ldr	r3, [r3, #0]
 800ab8e:	689a      	ldr	r2, [r3, #8]
 800ab90:	68fb      	ldr	r3, [r7, #12]
 800ab92:	681b      	ldr	r3, [r3, #0]
 800ab94:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800ab98:	609a      	str	r2, [r3, #8]

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 800ab9a:	68fb      	ldr	r3, [r7, #12]
 800ab9c:	6f98      	ldr	r0, [r3, #120]	; 0x78
 800ab9e:	68fb      	ldr	r3, [r7, #12]
 800aba0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800aba2:	4619      	mov	r1, r3
 800aba4:	68fb      	ldr	r3, [r7, #12]
 800aba6:	681b      	ldr	r3, [r3, #0]
 800aba8:	3320      	adds	r3, #32
 800abaa:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 800abac:	68fb      	ldr	r3, [r7, #12]
 800abae:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800abb2:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 800abb4:	f7f9 f86a 	bl	8003c8c <HAL_DMA_Start_IT>
 800abb8:	4603      	mov	r3, r0
 800abba:	2b00      	cmp	r3, #0
 800abbc:	d011      	beq.n	800abe2 <HAL_SPI_Transmit_DMA+0x1e6>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800abbe:	68fb      	ldr	r3, [r7, #12]
 800abc0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800abc4:	f043 0210 	orr.w	r2, r3, #16
 800abc8:	68fb      	ldr	r3, [r7, #12]
 800abca:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 800abce:	68fb      	ldr	r3, [r7, #12]
 800abd0:	2201      	movs	r2, #1
 800abd2:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

    /* Unlock the process */
    __HAL_UNLOCK(hspi);
 800abd6:	68fb      	ldr	r3, [r7, #12]
 800abd8:	2200      	movs	r2, #0
 800abda:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    return HAL_ERROR;
 800abde:	2301      	movs	r3, #1
 800abe0:	e042      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Set the number of data at current transfer */
  if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 800abe2:	68fb      	ldr	r3, [r7, #12]
 800abe4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800abe6:	69db      	ldr	r3, [r3, #28]
 800abe8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800abec:	d108      	bne.n	800ac00 <HAL_SPI_Transmit_DMA+0x204>
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 800abee:	68fb      	ldr	r3, [r7, #12]
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	6859      	ldr	r1, [r3, #4]
 800abf4:	68fb      	ldr	r3, [r7, #12]
 800abf6:	681a      	ldr	r2, [r3, #0]
 800abf8:	4b20      	ldr	r3, [pc, #128]	; (800ac7c <HAL_SPI_Transmit_DMA+0x280>)
 800abfa:	400b      	ands	r3, r1
 800abfc:	6053      	str	r3, [r2, #4]
 800abfe:	e009      	b.n	800ac14 <HAL_SPI_Transmit_DMA+0x218>
  }
  else
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800ac00:	68fb      	ldr	r3, [r7, #12]
 800ac02:	681b      	ldr	r3, [r3, #0]
 800ac04:	685a      	ldr	r2, [r3, #4]
 800ac06:	4b1d      	ldr	r3, [pc, #116]	; (800ac7c <HAL_SPI_Transmit_DMA+0x280>)
 800ac08:	4013      	ands	r3, r2
 800ac0a:	88f9      	ldrh	r1, [r7, #6]
 800ac0c:	68fa      	ldr	r2, [r7, #12]
 800ac0e:	6812      	ldr	r2, [r2, #0]
 800ac10:	430b      	orrs	r3, r1
 800ac12:	6053      	str	r3, [r2, #4]
  }

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800ac14:	68fb      	ldr	r3, [r7, #12]
 800ac16:	681b      	ldr	r3, [r3, #0]
 800ac18:	689a      	ldr	r2, [r3, #8]
 800ac1a:	68fb      	ldr	r3, [r7, #12]
 800ac1c:	681b      	ldr	r3, [r3, #0]
 800ac1e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ac22:	609a      	str	r2, [r3, #8]

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 800ac24:	68fb      	ldr	r3, [r7, #12]
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	691a      	ldr	r2, [r3, #16]
 800ac2a:	68fb      	ldr	r3, [r7, #12]
 800ac2c:	681b      	ldr	r3, [r3, #0]
 800ac2e:	f442 7248 	orr.w	r2, r2, #800	; 0x320
 800ac32:	611a      	str	r2, [r3, #16]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800ac34:	68fb      	ldr	r3, [r7, #12]
 800ac36:	681b      	ldr	r3, [r3, #0]
 800ac38:	681a      	ldr	r2, [r3, #0]
 800ac3a:	68fb      	ldr	r3, [r7, #12]
 800ac3c:	681b      	ldr	r3, [r3, #0]
 800ac3e:	f042 0201 	orr.w	r2, r2, #1
 800ac42:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ac44:	68fb      	ldr	r3, [r7, #12]
 800ac46:	685b      	ldr	r3, [r3, #4]
 800ac48:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800ac4c:	d107      	bne.n	800ac5e <HAL_SPI_Transmit_DMA+0x262>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800ac4e:	68fb      	ldr	r3, [r7, #12]
 800ac50:	681b      	ldr	r3, [r3, #0]
 800ac52:	681a      	ldr	r2, [r3, #0]
 800ac54:	68fb      	ldr	r3, [r7, #12]
 800ac56:	681b      	ldr	r3, [r3, #0]
 800ac58:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac5c:	601a      	str	r2, [r3, #0]
  }

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800ac5e:	68fb      	ldr	r3, [r7, #12]
 800ac60:	2200      	movs	r2, #0
 800ac62:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  return HAL_OK;
 800ac66:	2300      	movs	r3, #0
}
 800ac68:	4618      	mov	r0, r3
 800ac6a:	3710      	adds	r7, #16
 800ac6c:	46bd      	mov	sp, r7
 800ac6e:	bd80      	pop	{r7, pc}
 800ac70:	0800b0c7 	.word	0x0800b0c7
 800ac74:	0800b081 	.word	0x0800b081
 800ac78:	0800b0e3 	.word	0x0800b0e3
 800ac7c:	ffff0000 	.word	0xffff0000

0800ac80 <HAL_SPI_IRQHandler>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 800ac80:	b580      	push	{r7, lr}
 800ac82:	b08a      	sub	sp, #40	; 0x28
 800ac84:	af00      	add	r7, sp, #0
 800ac86:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->IER;
 800ac88:	687b      	ldr	r3, [r7, #4]
 800ac8a:	681b      	ldr	r3, [r3, #0]
 800ac8c:	691b      	ldr	r3, [r3, #16]
 800ac8e:	623b      	str	r3, [r7, #32]
  uint32_t itflag   = hspi->Instance->SR;
 800ac90:	687b      	ldr	r3, [r7, #4]
 800ac92:	681b      	ldr	r3, [r3, #0]
 800ac94:	695b      	ldr	r3, [r3, #20]
 800ac96:	61fb      	str	r3, [r7, #28]
  uint32_t trigger  = itsource & itflag;
 800ac98:	6a3a      	ldr	r2, [r7, #32]
 800ac9a:	69fb      	ldr	r3, [r7, #28]
 800ac9c:	4013      	ands	r3, r2
 800ac9e:	61bb      	str	r3, [r7, #24]
  uint32_t cfg1     = hspi->Instance->CFG1;
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	681b      	ldr	r3, [r3, #0]
 800aca4:	689b      	ldr	r3, [r3, #8]
 800aca6:	617b      	str	r3, [r7, #20]
  uint32_t handled  = 0UL;
 800aca8:	2300      	movs	r3, #0
 800acaa:	627b      	str	r3, [r7, #36]	; 0x24

  HAL_SPI_StateTypeDef State = hspi->State;
 800acac:	687b      	ldr	r3, [r7, #4]
 800acae:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800acb2:	74fb      	strb	r3, [r7, #19]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	681b      	ldr	r3, [r3, #0]
 800acb8:	3330      	adds	r3, #48	; 0x30
 800acba:	60fb      	str	r3, [r7, #12]
#endif /* __GNUC__ */

  /* SPI in SUSPEND mode  ----------------------------------------------------*/
  if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
 800acbc:	69fb      	ldr	r3, [r7, #28]
 800acbe:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800acc2:	2b00      	cmp	r3, #0
 800acc4:	d010      	beq.n	800ace8 <HAL_SPI_IRQHandler+0x68>
 800acc6:	6a3b      	ldr	r3, [r7, #32]
 800acc8:	f003 0308 	and.w	r3, r3, #8
 800accc:	2b00      	cmp	r3, #0
 800acce:	d00b      	beq.n	800ace8 <HAL_SPI_IRQHandler+0x68>
  {
    /* Clear the Suspend flag */
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800acd0:	687b      	ldr	r3, [r7, #4]
 800acd2:	681b      	ldr	r3, [r3, #0]
 800acd4:	699a      	ldr	r2, [r3, #24]
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	681b      	ldr	r3, [r3, #0]
 800acda:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800acde:	619a      	str	r2, [r3, #24]

    /* Suspend on going, Call the Suspend callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->SuspendCallback(hspi);
#else
    HAL_SPI_SuspendCallback(hspi);
 800ace0:	6878      	ldr	r0, [r7, #4]
 800ace2:	f000 f9c3 	bl	800b06c <HAL_SPI_SuspendCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
    return;
 800ace6:	e192      	b.n	800b00e <HAL_SPI_IRQHandler+0x38e>
  }

  /* SPI in mode Transmitter and Receiver ------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 800ace8:	69bb      	ldr	r3, [r7, #24]
 800acea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800acee:	2b00      	cmp	r3, #0
 800acf0:	d113      	bne.n	800ad1a <HAL_SPI_IRQHandler+0x9a>
 800acf2:	69bb      	ldr	r3, [r7, #24]
 800acf4:	f003 0320 	and.w	r3, r3, #32
 800acf8:	2b00      	cmp	r3, #0
 800acfa:	d10e      	bne.n	800ad1a <HAL_SPI_IRQHandler+0x9a>
      HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
 800acfc:	69bb      	ldr	r3, [r7, #24]
 800acfe:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 800ad02:	2b00      	cmp	r3, #0
 800ad04:	d009      	beq.n	800ad1a <HAL_SPI_IRQHandler+0x9a>
  {
    hspi->TxISR(hspi);
 800ad06:	687b      	ldr	r3, [r7, #4]
 800ad08:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ad0a:	6878      	ldr	r0, [r7, #4]
 800ad0c:	4798      	blx	r3
    hspi->RxISR(hspi);
 800ad0e:	687b      	ldr	r3, [r7, #4]
 800ad10:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ad12:	6878      	ldr	r0, [r7, #4]
 800ad14:	4798      	blx	r3
    handled = 1UL;
 800ad16:	2301      	movs	r3, #1
 800ad18:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Receiver ----------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 800ad1a:	69bb      	ldr	r3, [r7, #24]
 800ad1c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad20:	2b00      	cmp	r3, #0
 800ad22:	d10f      	bne.n	800ad44 <HAL_SPI_IRQHandler+0xc4>
 800ad24:	69bb      	ldr	r3, [r7, #24]
 800ad26:	f003 0301 	and.w	r3, r3, #1
 800ad2a:	2b00      	cmp	r3, #0
 800ad2c:	d00a      	beq.n	800ad44 <HAL_SPI_IRQHandler+0xc4>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800ad2e:	69bb      	ldr	r3, [r7, #24]
 800ad30:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 800ad34:	2b00      	cmp	r3, #0
 800ad36:	d105      	bne.n	800ad44 <HAL_SPI_IRQHandler+0xc4>
  {
    hspi->RxISR(hspi);
 800ad38:	687b      	ldr	r3, [r7, #4]
 800ad3a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ad3c:	6878      	ldr	r0, [r7, #4]
 800ad3e:	4798      	blx	r3
    handled = 1UL;
 800ad40:	2301      	movs	r3, #1
 800ad42:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800ad44:	69bb      	ldr	r3, [r7, #24]
 800ad46:	f003 0320 	and.w	r3, r3, #32
 800ad4a:	2b00      	cmp	r3, #0
 800ad4c:	d10f      	bne.n	800ad6e <HAL_SPI_IRQHandler+0xee>
 800ad4e:	69bb      	ldr	r3, [r7, #24]
 800ad50:	f003 0302 	and.w	r3, r3, #2
 800ad54:	2b00      	cmp	r3, #0
 800ad56:	d00a      	beq.n	800ad6e <HAL_SPI_IRQHandler+0xee>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800ad58:	69bb      	ldr	r3, [r7, #24]
 800ad5a:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800ad5e:	2b00      	cmp	r3, #0
 800ad60:	d105      	bne.n	800ad6e <HAL_SPI_IRQHandler+0xee>
  {
    hspi->TxISR(hspi);
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ad66:	6878      	ldr	r0, [r7, #4]
 800ad68:	4798      	blx	r3
    handled = 1UL;
 800ad6a:	2301      	movs	r3, #1
 800ad6c:	627b      	str	r3, [r7, #36]	; 0x24
  {
    __HAL_SPI_CLEAR_TSERFFLAG(hspi);
  }
#endif /* USE_SPI_RELOAD_TRANSFER */

  if (handled != 0UL)
 800ad6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ad70:	2b00      	cmp	r3, #0
 800ad72:	f040 8147 	bne.w	800b004 <HAL_SPI_IRQHandler+0x384>
  {
    return;
  }

  /* SPI End Of Transfer: DMA or IT based transfer */
  if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
 800ad76:	69bb      	ldr	r3, [r7, #24]
 800ad78:	f003 0308 	and.w	r3, r3, #8
 800ad7c:	2b00      	cmp	r3, #0
 800ad7e:	f000 808b 	beq.w	800ae98 <HAL_SPI_IRQHandler+0x218>
  {
    /* Clear EOT/TXTF/SUSP flag */
    __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800ad82:	687b      	ldr	r3, [r7, #4]
 800ad84:	681b      	ldr	r3, [r3, #0]
 800ad86:	699a      	ldr	r2, [r3, #24]
 800ad88:	687b      	ldr	r3, [r7, #4]
 800ad8a:	681b      	ldr	r3, [r3, #0]
 800ad8c:	f042 0208 	orr.w	r2, r2, #8
 800ad90:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	681b      	ldr	r3, [r3, #0]
 800ad96:	699a      	ldr	r2, [r3, #24]
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	681b      	ldr	r3, [r3, #0]
 800ad9c:	f042 0210 	orr.w	r2, r2, #16
 800ada0:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800ada2:	687b      	ldr	r3, [r7, #4]
 800ada4:	681b      	ldr	r3, [r3, #0]
 800ada6:	699a      	ldr	r2, [r3, #24]
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	681b      	ldr	r3, [r3, #0]
 800adac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800adb0:	619a      	str	r2, [r3, #24]

    /* Disable EOT interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
 800adb2:	687b      	ldr	r3, [r7, #4]
 800adb4:	681b      	ldr	r3, [r3, #0]
 800adb6:	691a      	ldr	r2, [r3, #16]
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	681b      	ldr	r3, [r3, #0]
 800adbc:	f022 0208 	bic.w	r2, r2, #8
 800adc0:	611a      	str	r2, [r3, #16]

    /* For the IT based receive extra polling maybe required for last packet */
    if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800adc2:	687b      	ldr	r3, [r7, #4]
 800adc4:	681b      	ldr	r3, [r3, #0]
 800adc6:	689b      	ldr	r3, [r3, #8]
 800adc8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800adcc:	2b00      	cmp	r3, #0
 800adce:	d13d      	bne.n	800ae4c <HAL_SPI_IRQHandler+0x1cc>
    {
      /* Pooling remaining data */
      while (hspi->RxXferCount != 0UL)
 800add0:	e036      	b.n	800ae40 <HAL_SPI_IRQHandler+0x1c0>
      {
        /* Receive data in 32 Bit mode */
        if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	68db      	ldr	r3, [r3, #12]
 800add6:	2b0f      	cmp	r3, #15
 800add8:	d90b      	bls.n	800adf2 <HAL_SPI_IRQHandler+0x172>
        {
          *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 800adda:	687b      	ldr	r3, [r7, #4]
 800addc:	681a      	ldr	r2, [r3, #0]
 800adde:	687b      	ldr	r3, [r7, #4]
 800ade0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ade2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800ade4:	601a      	str	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint32_t);
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800adea:	1d1a      	adds	r2, r3, #4
 800adec:	687b      	ldr	r3, [r7, #4]
 800adee:	665a      	str	r2, [r3, #100]	; 0x64
 800adf0:	e01d      	b.n	800ae2e <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 16 Bit mode */
        else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	68db      	ldr	r3, [r3, #12]
 800adf6:	2b07      	cmp	r3, #7
 800adf8:	d90b      	bls.n	800ae12 <HAL_SPI_IRQHandler+0x192>
        {
#if defined (__GNUC__)
          *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800adfa:	687b      	ldr	r3, [r7, #4]
 800adfc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800adfe:	68fa      	ldr	r2, [r7, #12]
 800ae00:	8812      	ldrh	r2, [r2, #0]
 800ae02:	b292      	uxth	r2, r2
 800ae04:	801a      	strh	r2, [r3, #0]
#else
          *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
          hspi->pRxBuffPtr += sizeof(uint16_t);
 800ae06:	687b      	ldr	r3, [r7, #4]
 800ae08:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae0a:	1c9a      	adds	r2, r3, #2
 800ae0c:	687b      	ldr	r3, [r7, #4]
 800ae0e:	665a      	str	r2, [r3, #100]	; 0x64
 800ae10:	e00d      	b.n	800ae2e <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 8 Bit mode */
        else
        {
          *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800ae12:	687b      	ldr	r3, [r7, #4]
 800ae14:	681b      	ldr	r3, [r3, #0]
 800ae16:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800ae1a:	687b      	ldr	r3, [r7, #4]
 800ae1c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae1e:	7812      	ldrb	r2, [r2, #0]
 800ae20:	b2d2      	uxtb	r2, r2
 800ae22:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint8_t);
 800ae24:	687b      	ldr	r3, [r7, #4]
 800ae26:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae28:	1c5a      	adds	r2, r3, #1
 800ae2a:	687b      	ldr	r3, [r7, #4]
 800ae2c:	665a      	str	r2, [r3, #100]	; 0x64
        }

        hspi->RxXferCount--;
 800ae2e:	687b      	ldr	r3, [r7, #4]
 800ae30:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800ae34:	b29b      	uxth	r3, r3
 800ae36:	3b01      	subs	r3, #1
 800ae38:	b29a      	uxth	r2, r3
 800ae3a:	687b      	ldr	r3, [r7, #4]
 800ae3c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
      while (hspi->RxXferCount != 0UL)
 800ae40:	687b      	ldr	r3, [r7, #4]
 800ae42:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800ae46:	b29b      	uxth	r3, r3
 800ae48:	2b00      	cmp	r3, #0
 800ae4a:	d1c2      	bne.n	800add2 <HAL_SPI_IRQHandler+0x152>
      }
    }

    /* Call SPI Standard close procedure */
    SPI_CloseTransfer(hspi);
 800ae4c:	6878      	ldr	r0, [r7, #4]
 800ae4e:	f000 f985 	bl	800b15c <SPI_CloseTransfer>

    hspi->State = HAL_SPI_STATE_READY;
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	2201      	movs	r2, #1
 800ae56:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ae5a:	687b      	ldr	r3, [r7, #4]
 800ae5c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ae60:	2b00      	cmp	r3, #0
 800ae62:	d003      	beq.n	800ae6c <HAL_SPI_IRQHandler+0x1ec>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 800ae64:	6878      	ldr	r0, [r7, #4]
 800ae66:	f000 f8f7 	bl	800b058 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 800ae6a:	e0d0      	b.n	800b00e <HAL_SPI_IRQHandler+0x38e>
    {
      hspi->TxCpltCallback(hspi);
    }
#else
    /* Call appropriate user callback */
    if (State == HAL_SPI_STATE_BUSY_TX_RX)
 800ae6c:	7cfb      	ldrb	r3, [r7, #19]
 800ae6e:	2b05      	cmp	r3, #5
 800ae70:	d103      	bne.n	800ae7a <HAL_SPI_IRQHandler+0x1fa>
    {
      HAL_SPI_TxRxCpltCallback(hspi);
 800ae72:	6878      	ldr	r0, [r7, #4]
 800ae74:	f000 f8dc 	bl	800b030 <HAL_SPI_TxRxCpltCallback>
    else
    {
      /* End of the appropriate call */
    }

    return;
 800ae78:	e0c6      	b.n	800b008 <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_RX)
 800ae7a:	7cfb      	ldrb	r3, [r7, #19]
 800ae7c:	2b04      	cmp	r3, #4
 800ae7e:	d103      	bne.n	800ae88 <HAL_SPI_IRQHandler+0x208>
      HAL_SPI_RxCpltCallback(hspi);
 800ae80:	6878      	ldr	r0, [r7, #4]
 800ae82:	f000 f8cb 	bl	800b01c <HAL_SPI_RxCpltCallback>
    return;
 800ae86:	e0bf      	b.n	800b008 <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_TX)
 800ae88:	7cfb      	ldrb	r3, [r7, #19]
 800ae8a:	2b03      	cmp	r3, #3
 800ae8c:	f040 80bc 	bne.w	800b008 <HAL_SPI_IRQHandler+0x388>
      HAL_SPI_TxCpltCallback(hspi);
 800ae90:	6878      	ldr	r0, [r7, #4]
 800ae92:	f002 fe9d 	bl	800dbd0 <HAL_SPI_TxCpltCallback>
    return;
 800ae96:	e0b7      	b.n	800b008 <HAL_SPI_IRQHandler+0x388>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
 800ae98:	69bb      	ldr	r3, [r7, #24]
 800ae9a:	f403 7358 	and.w	r3, r3, #864	; 0x360
 800ae9e:	2b00      	cmp	r3, #0
 800aea0:	f000 80b5 	beq.w	800b00e <HAL_SPI_IRQHandler+0x38e>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if ((trigger & SPI_FLAG_OVR) != 0UL)
 800aea4:	69bb      	ldr	r3, [r7, #24]
 800aea6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aeaa:	2b00      	cmp	r3, #0
 800aeac:	d00f      	beq.n	800aece <HAL_SPI_IRQHandler+0x24e>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800aeae:	687b      	ldr	r3, [r7, #4]
 800aeb0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800aeb4:	f043 0204 	orr.w	r2, r3, #4
 800aeb8:	687b      	ldr	r3, [r7, #4]
 800aeba:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800aebe:	687b      	ldr	r3, [r7, #4]
 800aec0:	681b      	ldr	r3, [r3, #0]
 800aec2:	699a      	ldr	r2, [r3, #24]
 800aec4:	687b      	ldr	r3, [r7, #4]
 800aec6:	681b      	ldr	r3, [r3, #0]
 800aec8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800aecc:	619a      	str	r2, [r3, #24]
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if ((trigger & SPI_FLAG_MODF) != 0UL)
 800aece:	69bb      	ldr	r3, [r7, #24]
 800aed0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800aed4:	2b00      	cmp	r3, #0
 800aed6:	d00f      	beq.n	800aef8 <HAL_SPI_IRQHandler+0x278>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800aed8:	687b      	ldr	r3, [r7, #4]
 800aeda:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800aede:	f043 0201 	orr.w	r2, r3, #1
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	681b      	ldr	r3, [r3, #0]
 800aeec:	699a      	ldr	r2, [r3, #24]
 800aeee:	687b      	ldr	r3, [r7, #4]
 800aef0:	681b      	ldr	r3, [r3, #0]
 800aef2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aef6:	619a      	str	r2, [r3, #24]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_FRE) != 0UL)
 800aef8:	69bb      	ldr	r3, [r7, #24]
 800aefa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800aefe:	2b00      	cmp	r3, #0
 800af00:	d00f      	beq.n	800af22 <HAL_SPI_IRQHandler+0x2a2>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800af02:	687b      	ldr	r3, [r7, #4]
 800af04:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af08:	f043 0208 	orr.w	r2, r3, #8
 800af0c:	687b      	ldr	r3, [r7, #4]
 800af0e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800af12:	687b      	ldr	r3, [r7, #4]
 800af14:	681b      	ldr	r3, [r3, #0]
 800af16:	699a      	ldr	r2, [r3, #24]
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	681b      	ldr	r3, [r3, #0]
 800af1c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800af20:	619a      	str	r2, [r3, #24]
    }

    /* SPI Underrun error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_UDR) != 0UL)
 800af22:	69bb      	ldr	r3, [r7, #24]
 800af24:	f003 0320 	and.w	r3, r3, #32
 800af28:	2b00      	cmp	r3, #0
 800af2a:	d00f      	beq.n	800af4c <HAL_SPI_IRQHandler+0x2cc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800af2c:	687b      	ldr	r3, [r7, #4]
 800af2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af32:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800af3c:	687b      	ldr	r3, [r7, #4]
 800af3e:	681b      	ldr	r3, [r3, #0]
 800af40:	699a      	ldr	r2, [r3, #24]
 800af42:	687b      	ldr	r3, [r7, #4]
 800af44:	681b      	ldr	r3, [r3, #0]
 800af46:	f042 0220 	orr.w	r2, r2, #32
 800af4a:	619a      	str	r2, [r3, #24]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800af4c:	687b      	ldr	r3, [r7, #4]
 800af4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af52:	2b00      	cmp	r3, #0
 800af54:	d05a      	beq.n	800b00c <HAL_SPI_IRQHandler+0x38c>
    {
      /* Disable SPI peripheral */
      __HAL_SPI_DISABLE(hspi);
 800af56:	687b      	ldr	r3, [r7, #4]
 800af58:	681b      	ldr	r3, [r3, #0]
 800af5a:	681a      	ldr	r2, [r3, #0]
 800af5c:	687b      	ldr	r3, [r7, #4]
 800af5e:	681b      	ldr	r3, [r3, #0]
 800af60:	f022 0201 	bic.w	r2, r2, #1
 800af64:	601a      	str	r2, [r3, #0]

      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF |
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	681b      	ldr	r3, [r3, #0]
 800af6a:	6919      	ldr	r1, [r3, #16]
 800af6c:	687b      	ldr	r3, [r7, #4]
 800af6e:	681a      	ldr	r2, [r3, #0]
 800af70:	4b28      	ldr	r3, [pc, #160]	; (800b014 <HAL_SPI_IRQHandler+0x394>)
 800af72:	400b      	ands	r3, r1
 800af74:	6113      	str	r3, [r2, #16]
                                  SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));

      /* Disable the SPI DMA requests if enabled */
      if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800af76:	697b      	ldr	r3, [r7, #20]
 800af78:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800af7c:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 800af80:	d138      	bne.n	800aff4 <HAL_SPI_IRQHandler+0x374>
      {
        /* Disable the SPI DMA requests */
        CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800af82:	687b      	ldr	r3, [r7, #4]
 800af84:	681b      	ldr	r3, [r3, #0]
 800af86:	689a      	ldr	r2, [r3, #8]
 800af88:	687b      	ldr	r3, [r7, #4]
 800af8a:	681b      	ldr	r3, [r3, #0]
 800af8c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800af90:	609a      	str	r2, [r3, #8]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 800af92:	687b      	ldr	r3, [r7, #4]
 800af94:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800af96:	2b00      	cmp	r3, #0
 800af98:	d013      	beq.n	800afc2 <HAL_SPI_IRQHandler+0x342>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800af9a:	687b      	ldr	r3, [r7, #4]
 800af9c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800af9e:	4a1e      	ldr	r2, [pc, #120]	; (800b018 <HAL_SPI_IRQHandler+0x398>)
 800afa0:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 800afa2:	687b      	ldr	r3, [r7, #4]
 800afa4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800afa6:	4618      	mov	r0, r3
 800afa8:	f7f9 f8da 	bl	8004160 <HAL_DMA_Abort_IT>
 800afac:	4603      	mov	r3, r0
 800afae:	2b00      	cmp	r3, #0
 800afb0:	d007      	beq.n	800afc2 <HAL_SPI_IRQHandler+0x342>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800afb2:	687b      	ldr	r3, [r7, #4]
 800afb4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800afb8:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800afbc:	687b      	ldr	r3, [r7, #4]
 800afbe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 800afc2:	687b      	ldr	r3, [r7, #4]
 800afc4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800afc6:	2b00      	cmp	r3, #0
 800afc8:	d020      	beq.n	800b00c <HAL_SPI_IRQHandler+0x38c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 800afca:	687b      	ldr	r3, [r7, #4]
 800afcc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800afce:	4a12      	ldr	r2, [pc, #72]	; (800b018 <HAL_SPI_IRQHandler+0x398>)
 800afd0:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 800afd2:	687b      	ldr	r3, [r7, #4]
 800afd4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800afd6:	4618      	mov	r0, r3
 800afd8:	f7f9 f8c2 	bl	8004160 <HAL_DMA_Abort_IT>
 800afdc:	4603      	mov	r3, r0
 800afde:	2b00      	cmp	r3, #0
 800afe0:	d014      	beq.n	800b00c <HAL_SPI_IRQHandler+0x38c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800afe2:	687b      	ldr	r3, [r7, #4]
 800afe4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800afe8:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800afec:	687b      	ldr	r3, [r7, #4]
 800afee:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
        HAL_SPI_ErrorCallback(hspi);
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 800aff2:	e00b      	b.n	800b00c <HAL_SPI_IRQHandler+0x38c>
        hspi->State = HAL_SPI_STATE_READY;
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	2201      	movs	r2, #1
 800aff8:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
        HAL_SPI_ErrorCallback(hspi);
 800affc:	6878      	ldr	r0, [r7, #4]
 800affe:	f000 f82b 	bl	800b058 <HAL_SPI_ErrorCallback>
    return;
 800b002:	e003      	b.n	800b00c <HAL_SPI_IRQHandler+0x38c>
    return;
 800b004:	bf00      	nop
 800b006:	e002      	b.n	800b00e <HAL_SPI_IRQHandler+0x38e>
    return;
 800b008:	bf00      	nop
 800b00a:	e000      	b.n	800b00e <HAL_SPI_IRQHandler+0x38e>
    return;
 800b00c:	bf00      	nop
  }
}
 800b00e:	3728      	adds	r7, #40	; 0x28
 800b010:	46bd      	mov	sp, r7
 800b012:	bd80      	pop	{r7, pc}
 800b014:	fffffc94 	.word	0xfffffc94
 800b018:	0800b129 	.word	0x0800b129

0800b01c <HAL_SPI_RxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b01c:	b480      	push	{r7}
 800b01e:	b083      	sub	sp, #12
 800b020:	af00      	add	r7, sp, #0
 800b022:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 800b024:	bf00      	nop
 800b026:	370c      	adds	r7, #12
 800b028:	46bd      	mov	sp, r7
 800b02a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b02e:	4770      	bx	lr

0800b030 <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b030:	b480      	push	{r7}
 800b032:	b083      	sub	sp, #12
 800b034:	af00      	add	r7, sp, #0
 800b036:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 800b038:	bf00      	nop
 800b03a:	370c      	adds	r7, #12
 800b03c:	46bd      	mov	sp, r7
 800b03e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b042:	4770      	bx	lr

0800b044 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b044:	b480      	push	{r7}
 800b046:	b083      	sub	sp, #12
 800b048:	af00      	add	r7, sp, #0
 800b04a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 800b04c:	bf00      	nop
 800b04e:	370c      	adds	r7, #12
 800b050:	46bd      	mov	sp, r7
 800b052:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b056:	4770      	bx	lr

0800b058 <HAL_SPI_ErrorCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b058:	b480      	push	{r7}
 800b05a:	b083      	sub	sp, #12
 800b05c:	af00      	add	r7, sp, #0
 800b05e:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 800b060:	bf00      	nop
 800b062:	370c      	adds	r7, #12
 800b064:	46bd      	mov	sp, r7
 800b066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b06a:	4770      	bx	lr

0800b06c <HAL_SPI_SuspendCallback>:
  * @brief  SPI Suspend callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_SuspendCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b06c:	b480      	push	{r7}
 800b06e:	b083      	sub	sp, #12
 800b070:	af00      	add	r7, sp, #0
 800b072:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_SuspendCallback can be implemented in the user file.
   */
}
 800b074:	bf00      	nop
 800b076:	370c      	adds	r7, #12
 800b078:	46bd      	mov	sp, r7
 800b07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b07e:	4770      	bx	lr

0800b080 <SPI_DMATransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 800b080:	b580      	push	{r7, lr}
 800b082:	b084      	sub	sp, #16
 800b084:	af00      	add	r7, sp, #0
 800b086:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b088:	687b      	ldr	r3, [r7, #4]
 800b08a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b08c:	60fb      	str	r3, [r7, #12]

  if (hspi->State != HAL_SPI_STATE_ABORT)
 800b08e:	68fb      	ldr	r3, [r7, #12]
 800b090:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b094:	b2db      	uxtb	r3, r3
 800b096:	2b07      	cmp	r3, #7
 800b098:	d011      	beq.n	800b0be <SPI_DMATransmitCplt+0x3e>
  {
    if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 800b09a:	68fb      	ldr	r3, [r7, #12]
 800b09c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b09e:	69db      	ldr	r3, [r3, #28]
 800b0a0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b0a4:	d103      	bne.n	800b0ae <SPI_DMATransmitCplt+0x2e>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->TxCpltCallback(hspi);
#else
      HAL_SPI_TxCpltCallback(hspi);
 800b0a6:	68f8      	ldr	r0, [r7, #12]
 800b0a8:	f002 fd92 	bl	800dbd0 <HAL_SPI_TxCpltCallback>
    {
      /* Enable EOT interrupt */
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
    }
  }
}
 800b0ac:	e007      	b.n	800b0be <SPI_DMATransmitCplt+0x3e>
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
 800b0ae:	68fb      	ldr	r3, [r7, #12]
 800b0b0:	681b      	ldr	r3, [r3, #0]
 800b0b2:	691a      	ldr	r2, [r3, #16]
 800b0b4:	68fb      	ldr	r3, [r7, #12]
 800b0b6:	681b      	ldr	r3, [r3, #0]
 800b0b8:	f042 0208 	orr.w	r2, r2, #8
 800b0bc:	611a      	str	r2, [r3, #16]
}
 800b0be:	bf00      	nop
 800b0c0:	3710      	adds	r7, #16
 800b0c2:	46bd      	mov	sp, r7
 800b0c4:	bd80      	pop	{r7, pc}

0800b0c6 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b0c6:	b580      	push	{r7, lr}
 800b0c8:	b084      	sub	sp, #16
 800b0ca:	af00      	add	r7, sp, #0
 800b0cc:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0d2:	60fb      	str	r3, [r7, #12]
                            ((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-8.13 */

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 800b0d4:	68f8      	ldr	r0, [r7, #12]
 800b0d6:	f7ff ffb5 	bl	800b044 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800b0da:	bf00      	nop
 800b0dc:	3710      	adds	r7, #16
 800b0de:	46bd      	mov	sp, r7
 800b0e0:	bd80      	pop	{r7, pc}

0800b0e2 <SPI_DMAError>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 800b0e2:	b580      	push	{r7, lr}
 800b0e4:	b084      	sub	sp, #16
 800b0e6:	af00      	add	r7, sp, #0
 800b0e8:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b0ea:	687b      	ldr	r3, [r7, #4]
 800b0ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0ee:	60fb      	str	r3, [r7, #12]

  /* if DMA error is FIFO error ignore it */
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
 800b0f0:	6878      	ldr	r0, [r7, #4]
 800b0f2:	f7fa f9a5 	bl	8005440 <HAL_DMA_GetError>
 800b0f6:	4603      	mov	r3, r0
 800b0f8:	2b02      	cmp	r3, #2
 800b0fa:	d011      	beq.n	800b120 <SPI_DMAError+0x3e>
  {
    /* Call SPI standard close procedure */
    SPI_CloseTransfer(hspi);
 800b0fc:	68f8      	ldr	r0, [r7, #12]
 800b0fe:	f000 f82d 	bl	800b15c <SPI_CloseTransfer>

    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800b102:	68fb      	ldr	r3, [r7, #12]
 800b104:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b108:	f043 0210 	orr.w	r2, r3, #16
 800b10c:	68fb      	ldr	r3, [r7, #12]
 800b10e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 800b112:	68fb      	ldr	r3, [r7, #12]
 800b114:	2201      	movs	r2, #1
 800b116:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->ErrorCallback(hspi);
#else
    HAL_SPI_ErrorCallback(hspi);
 800b11a:	68f8      	ldr	r0, [r7, #12]
 800b11c:	f7ff ff9c 	bl	800b058 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }
}
 800b120:	bf00      	nop
 800b122:	3710      	adds	r7, #16
 800b124:	46bd      	mov	sp, r7
 800b126:	bd80      	pop	{r7, pc}

0800b128 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800b128:	b580      	push	{r7, lr}
 800b12a:	b084      	sub	sp, #16
 800b12c:	af00      	add	r7, sp, #0
 800b12e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b130:	687b      	ldr	r3, [r7, #4]
 800b132:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b134:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = (uint16_t) 0UL;
 800b136:	68fb      	ldr	r3, [r7, #12]
 800b138:	2200      	movs	r2, #0
 800b13a:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxXferCount = (uint16_t) 0UL;
 800b13e:	68fb      	ldr	r3, [r7, #12]
 800b140:	2200      	movs	r2, #0
 800b142:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Restore hspi->State to Ready */
  hspi->State = HAL_SPI_STATE_READY;
 800b146:	68fb      	ldr	r3, [r7, #12]
 800b148:	2201      	movs	r2, #1
 800b14a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 800b14e:	68f8      	ldr	r0, [r7, #12]
 800b150:	f7ff ff82 	bl	800b058 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800b154:	bf00      	nop
 800b156:	3710      	adds	r7, #16
 800b158:	46bd      	mov	sp, r7
 800b15a:	bd80      	pop	{r7, pc}

0800b15c <SPI_CloseTransfer>:
  *               the configuration information for SPI module.
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
 800b15c:	b480      	push	{r7}
 800b15e:	b085      	sub	sp, #20
 800b160:	af00      	add	r7, sp, #0
 800b162:	6078      	str	r0, [r7, #4]
  uint32_t itflag = hspi->Instance->SR;
 800b164:	687b      	ldr	r3, [r7, #4]
 800b166:	681b      	ldr	r3, [r3, #0]
 800b168:	695b      	ldr	r3, [r3, #20]
 800b16a:	60fb      	str	r3, [r7, #12]

  __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800b16c:	687b      	ldr	r3, [r7, #4]
 800b16e:	681b      	ldr	r3, [r3, #0]
 800b170:	699a      	ldr	r2, [r3, #24]
 800b172:	687b      	ldr	r3, [r7, #4]
 800b174:	681b      	ldr	r3, [r3, #0]
 800b176:	f042 0208 	orr.w	r2, r2, #8
 800b17a:	619a      	str	r2, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	681b      	ldr	r3, [r3, #0]
 800b180:	699a      	ldr	r2, [r3, #24]
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	681b      	ldr	r3, [r3, #0]
 800b186:	f042 0210 	orr.w	r2, r2, #16
 800b18a:	619a      	str	r2, [r3, #24]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800b18c:	687b      	ldr	r3, [r7, #4]
 800b18e:	681b      	ldr	r3, [r3, #0]
 800b190:	681a      	ldr	r2, [r3, #0]
 800b192:	687b      	ldr	r3, [r7, #4]
 800b194:	681b      	ldr	r3, [r3, #0]
 800b196:	f022 0201 	bic.w	r2, r2, #1
 800b19a:	601a      	str	r2, [r3, #0]

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
 800b19c:	687b      	ldr	r3, [r7, #4]
 800b19e:	681b      	ldr	r3, [r3, #0]
 800b1a0:	6919      	ldr	r1, [r3, #16]
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	681a      	ldr	r2, [r3, #0]
 800b1a6:	4b3c      	ldr	r3, [pc, #240]	; (800b298 <SPI_CloseTransfer+0x13c>)
 800b1a8:	400b      	ands	r3, r1
 800b1aa:	6113      	str	r3, [r2, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800b1ac:	687b      	ldr	r3, [r7, #4]
 800b1ae:	681b      	ldr	r3, [r3, #0]
 800b1b0:	689a      	ldr	r2, [r3, #8]
 800b1b2:	687b      	ldr	r3, [r7, #4]
 800b1b4:	681b      	ldr	r3, [r3, #0]
 800b1b6:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800b1ba:	609a      	str	r2, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800b1bc:	687b      	ldr	r3, [r7, #4]
 800b1be:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b1c2:	b2db      	uxtb	r3, r3
 800b1c4:	2b04      	cmp	r3, #4
 800b1c6:	d014      	beq.n	800b1f2 <SPI_CloseTransfer+0x96>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
 800b1c8:	68fb      	ldr	r3, [r7, #12]
 800b1ca:	f003 0320 	and.w	r3, r3, #32
 800b1ce:	2b00      	cmp	r3, #0
 800b1d0:	d00f      	beq.n	800b1f2 <SPI_CloseTransfer+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b1d8:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800b1dc:	687b      	ldr	r3, [r7, #4]
 800b1de:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	681b      	ldr	r3, [r3, #0]
 800b1e6:	699a      	ldr	r2, [r3, #24]
 800b1e8:	687b      	ldr	r3, [r7, #4]
 800b1ea:	681b      	ldr	r3, [r3, #0]
 800b1ec:	f042 0220 	orr.w	r2, r2, #32
 800b1f0:	619a      	str	r2, [r3, #24]
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b1f8:	b2db      	uxtb	r3, r3
 800b1fa:	2b03      	cmp	r3, #3
 800b1fc:	d014      	beq.n	800b228 <SPI_CloseTransfer+0xcc>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
 800b1fe:	68fb      	ldr	r3, [r7, #12]
 800b200:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b204:	2b00      	cmp	r3, #0
 800b206:	d00f      	beq.n	800b228 <SPI_CloseTransfer+0xcc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800b208:	687b      	ldr	r3, [r7, #4]
 800b20a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b20e:	f043 0204 	orr.w	r2, r3, #4
 800b212:	687b      	ldr	r3, [r7, #4]
 800b214:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800b218:	687b      	ldr	r3, [r7, #4]
 800b21a:	681b      	ldr	r3, [r3, #0]
 800b21c:	699a      	ldr	r2, [r3, #24]
 800b21e:	687b      	ldr	r3, [r7, #4]
 800b220:	681b      	ldr	r3, [r3, #0]
 800b222:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b226:	619a      	str	r2, [r3, #24]
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
 800b228:	68fb      	ldr	r3, [r7, #12]
 800b22a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b22e:	2b00      	cmp	r3, #0
 800b230:	d00f      	beq.n	800b252 <SPI_CloseTransfer+0xf6>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b238:	f043 0201 	orr.w	r2, r3, #1
 800b23c:	687b      	ldr	r3, [r7, #4]
 800b23e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	681b      	ldr	r3, [r3, #0]
 800b246:	699a      	ldr	r2, [r3, #24]
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	681b      	ldr	r3, [r3, #0]
 800b24c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b250:	619a      	str	r2, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
 800b252:	68fb      	ldr	r3, [r7, #12]
 800b254:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b258:	2b00      	cmp	r3, #0
 800b25a:	d00f      	beq.n	800b27c <SPI_CloseTransfer+0x120>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800b25c:	687b      	ldr	r3, [r7, #4]
 800b25e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b262:	f043 0208 	orr.w	r2, r3, #8
 800b266:	687b      	ldr	r3, [r7, #4]
 800b268:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_FREFLAG(hspi);
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	681b      	ldr	r3, [r3, #0]
 800b270:	699a      	ldr	r2, [r3, #24]
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	681b      	ldr	r3, [r3, #0]
 800b276:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b27a:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
 800b27c:	687b      	ldr	r3, [r7, #4]
 800b27e:	2200      	movs	r2, #0
 800b280:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  hspi->RxXferCount = (uint16_t)0UL;
 800b284:	687b      	ldr	r3, [r7, #4]
 800b286:	2200      	movs	r2, #0
 800b288:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
}
 800b28c:	bf00      	nop
 800b28e:	3714      	adds	r7, #20
 800b290:	46bd      	mov	sp, r7
 800b292:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b296:	4770      	bx	lr
 800b298:	fffffc90 	.word	0xfffffc90

0800b29c <SPI_WaitOnFlagUntilTimeout>:
  * @param Tickstart: Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(const SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 800b29c:	b580      	push	{r7, lr}
 800b29e:	b084      	sub	sp, #16
 800b2a0:	af00      	add	r7, sp, #0
 800b2a2:	60f8      	str	r0, [r7, #12]
 800b2a4:	60b9      	str	r1, [r7, #8]
 800b2a6:	603b      	str	r3, [r7, #0]
 800b2a8:	4613      	mov	r3, r2
 800b2aa:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800b2ac:	e010      	b.n	800b2d0 <SPI_WaitOnFlagUntilTimeout+0x34>
  {
    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b2ae:	f7f6 fbef 	bl	8001a90 <HAL_GetTick>
 800b2b2:	4602      	mov	r2, r0
 800b2b4:	69bb      	ldr	r3, [r7, #24]
 800b2b6:	1ad3      	subs	r3, r2, r3
 800b2b8:	683a      	ldr	r2, [r7, #0]
 800b2ba:	429a      	cmp	r2, r3
 800b2bc:	d803      	bhi.n	800b2c6 <SPI_WaitOnFlagUntilTimeout+0x2a>
 800b2be:	683b      	ldr	r3, [r7, #0]
 800b2c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b2c4:	d102      	bne.n	800b2cc <SPI_WaitOnFlagUntilTimeout+0x30>
 800b2c6:	683b      	ldr	r3, [r7, #0]
 800b2c8:	2b00      	cmp	r3, #0
 800b2ca:	d101      	bne.n	800b2d0 <SPI_WaitOnFlagUntilTimeout+0x34>
    {
      return HAL_TIMEOUT;
 800b2cc:	2303      	movs	r3, #3
 800b2ce:	e00f      	b.n	800b2f0 <SPI_WaitOnFlagUntilTimeout+0x54>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800b2d0:	68fb      	ldr	r3, [r7, #12]
 800b2d2:	681b      	ldr	r3, [r3, #0]
 800b2d4:	695a      	ldr	r2, [r3, #20]
 800b2d6:	68bb      	ldr	r3, [r7, #8]
 800b2d8:	4013      	ands	r3, r2
 800b2da:	68ba      	ldr	r2, [r7, #8]
 800b2dc:	429a      	cmp	r2, r3
 800b2de:	bf0c      	ite	eq
 800b2e0:	2301      	moveq	r3, #1
 800b2e2:	2300      	movne	r3, #0
 800b2e4:	b2db      	uxtb	r3, r3
 800b2e6:	461a      	mov	r2, r3
 800b2e8:	79fb      	ldrb	r3, [r7, #7]
 800b2ea:	429a      	cmp	r2, r3
 800b2ec:	d0df      	beq.n	800b2ae <SPI_WaitOnFlagUntilTimeout+0x12>
    }
  }
  return HAL_OK;
 800b2ee:	2300      	movs	r3, #0
}
 800b2f0:	4618      	mov	r0, r3
 800b2f2:	3710      	adds	r7, #16
 800b2f4:	46bd      	mov	sp, r7
 800b2f6:	bd80      	pop	{r7, pc}

0800b2f8 <SPI_GetPacketSize>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(const SPI_HandleTypeDef *hspi)
{
 800b2f8:	b480      	push	{r7}
 800b2fa:	b085      	sub	sp, #20
 800b2fc:	af00      	add	r7, sp, #0
 800b2fe:	6078      	str	r0, [r7, #4]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 800b300:	687b      	ldr	r3, [r7, #4]
 800b302:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b304:	095b      	lsrs	r3, r3, #5
 800b306:	3301      	adds	r3, #1
 800b308:	60fb      	str	r3, [r7, #12]
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 800b30a:	687b      	ldr	r3, [r7, #4]
 800b30c:	68db      	ldr	r3, [r3, #12]
 800b30e:	3301      	adds	r3, #1
 800b310:	60bb      	str	r3, [r7, #8]

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
 800b312:	68bb      	ldr	r3, [r7, #8]
 800b314:	3307      	adds	r3, #7
 800b316:	08db      	lsrs	r3, r3, #3
 800b318:	60bb      	str	r3, [r7, #8]

  return data_size * fifo_threashold;
 800b31a:	68bb      	ldr	r3, [r7, #8]
 800b31c:	68fa      	ldr	r2, [r7, #12]
 800b31e:	fb02 f303 	mul.w	r3, r2, r3
}
 800b322:	4618      	mov	r0, r3
 800b324:	3714      	adds	r7, #20
 800b326:	46bd      	mov	sp, r7
 800b328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b32c:	4770      	bx	lr

0800b32e <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800b32e:	b580      	push	{r7, lr}
 800b330:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800b332:	f003 f917 	bl	800e564 <touchgfx_components_init>
  touchgfx_init();
 800b336:	f003 f8eb 	bl	800e510 <touchgfx_init>
}
 800b33a:	bf00      	nop
 800b33c:	bd80      	pop	{r7, pc}

0800b33e <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800b33e:	b580      	push	{r7, lr}
 800b340:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800b342:	f003 f917 	bl	800e574 <touchgfx_taskEntry>
}
 800b346:	bf00      	nop
 800b348:	bd80      	pop	{r7, pc}
	...

0800b34c <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800b34c:	b480      	push	{r7}
 800b34e:	b083      	sub	sp, #12
 800b350:	af00      	add	r7, sp, #0
 800b352:	6078      	str	r0, [r7, #4]
    {
 800b354:	4a04      	ldr	r2, [pc, #16]	; (800b368 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	601a      	str	r2, [r3, #0]
    }
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	4618      	mov	r0, r3
 800b35e:	370c      	adds	r7, #12
 800b360:	46bd      	mov	sp, r7
 800b362:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b366:	4770      	bx	lr
 800b368:	08024afc 	.word	0x08024afc

0800b36c <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800b36c:	b580      	push	{r7, lr}
 800b36e:	b082      	sub	sp, #8
 800b370:	af00      	add	r7, sp, #0
 800b372:	6078      	str	r0, [r7, #4]
    }
 800b374:	6878      	ldr	r0, [r7, #4]
 800b376:	f7ff ffe9 	bl	800b34c <_ZN8touchgfx12FontProviderD1Ev>
 800b37a:	2104      	movs	r1, #4
 800b37c:	6878      	ldr	r0, [r7, #4]
 800b37e:	f017 fb86 	bl	8022a8e <_ZdlPvj>
 800b382:	687b      	ldr	r3, [r7, #4]
 800b384:	4618      	mov	r0, r3
 800b386:	3708      	adds	r7, #8
 800b388:	46bd      	mov	sp, r7
 800b38a:	bd80      	pop	{r7, pc}

0800b38c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800b38c:	b580      	push	{r7, lr}
 800b38e:	b082      	sub	sp, #8
 800b390:	af00      	add	r7, sp, #0
 800b392:	6078      	str	r0, [r7, #4]
 800b394:	460b      	mov	r3, r1
 800b396:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800b398:	887b      	ldrh	r3, [r7, #2]
 800b39a:	2b02      	cmp	r3, #2
 800b39c:	d010      	beq.n	800b3c0 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800b39e:	2b02      	cmp	r3, #2
 800b3a0:	dc13      	bgt.n	800b3ca <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800b3a2:	2b00      	cmp	r3, #0
 800b3a4:	d002      	beq.n	800b3ac <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800b3a6:	2b01      	cmp	r3, #1
 800b3a8:	d005      	beq.n	800b3b6 <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800b3aa:	e00e      	b.n	800b3ca <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800b3ac:	f001 ff14 	bl	800d1d8 <_ZN17TypedTextDatabase8getFontsEv>
 800b3b0:	4603      	mov	r3, r0
 800b3b2:	681b      	ldr	r3, [r3, #0]
 800b3b4:	e00a      	b.n	800b3cc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800b3b6:	f001 ff0f 	bl	800d1d8 <_ZN17TypedTextDatabase8getFontsEv>
 800b3ba:	4603      	mov	r3, r0
 800b3bc:	685b      	ldr	r3, [r3, #4]
 800b3be:	e005      	b.n	800b3cc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800b3c0:	f001 ff0a 	bl	800d1d8 <_ZN17TypedTextDatabase8getFontsEv>
 800b3c4:	4603      	mov	r3, r0
 800b3c6:	689b      	ldr	r3, [r3, #8]
 800b3c8:	e000      	b.n	800b3cc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800b3ca:	2300      	movs	r3, #0
    }
}
 800b3cc:	4618      	mov	r0, r3
 800b3ce:	3708      	adds	r7, #8
 800b3d0:	46bd      	mov	sp, r7
 800b3d2:	bd80      	pop	{r7, pc}

0800b3d4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800b3d4:	b580      	push	{r7, lr}
 800b3d6:	b082      	sub	sp, #8
 800b3d8:	af00      	add	r7, sp, #0
 800b3da:	6078      	str	r0, [r7, #4]
 800b3dc:	4a05      	ldr	r2, [pc, #20]	; (800b3f4 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800b3de:	687b      	ldr	r3, [r7, #4]
 800b3e0:	601a      	str	r2, [r3, #0]
 800b3e2:	687b      	ldr	r3, [r7, #4]
 800b3e4:	4618      	mov	r0, r3
 800b3e6:	f7ff ffb1 	bl	800b34c <_ZN8touchgfx12FontProviderD1Ev>
 800b3ea:	687b      	ldr	r3, [r7, #4]
 800b3ec:	4618      	mov	r0, r3
 800b3ee:	3708      	adds	r7, #8
 800b3f0:	46bd      	mov	sp, r7
 800b3f2:	bd80      	pop	{r7, pc}
 800b3f4:	08024ae8 	.word	0x08024ae8

0800b3f8 <_ZN23ApplicationFontProviderD0Ev>:
 800b3f8:	b580      	push	{r7, lr}
 800b3fa:	b082      	sub	sp, #8
 800b3fc:	af00      	add	r7, sp, #0
 800b3fe:	6078      	str	r0, [r7, #4]
 800b400:	6878      	ldr	r0, [r7, #4]
 800b402:	f7ff ffe7 	bl	800b3d4 <_ZN23ApplicationFontProviderD1Ev>
 800b406:	2104      	movs	r1, #4
 800b408:	6878      	ldr	r0, [r7, #4]
 800b40a:	f017 fb40 	bl	8022a8e <_ZdlPvj>
 800b40e:	687b      	ldr	r3, [r7, #4]
 800b410:	4618      	mov	r0, r3
 800b412:	3708      	adds	r7, #8
 800b414:	46bd      	mov	sp, r7
 800b416:	bd80      	pop	{r7, pc}

0800b418 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800b418:	b480      	push	{r7}
 800b41a:	b083      	sub	sp, #12
 800b41c:	af00      	add	r7, sp, #0
 800b41e:	6078      	str	r0, [r7, #4]
    {
 800b420:	4a04      	ldr	r2, [pc, #16]	; (800b434 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	601a      	str	r2, [r3, #0]
    }
 800b426:	687b      	ldr	r3, [r7, #4]
 800b428:	4618      	mov	r0, r3
 800b42a:	370c      	adds	r7, #12
 800b42c:	46bd      	mov	sp, r7
 800b42e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b432:	4770      	bx	lr
 800b434:	08024dac 	.word	0x08024dac

0800b438 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800b438:	b580      	push	{r7, lr}
 800b43a:	b082      	sub	sp, #8
 800b43c:	af00      	add	r7, sp, #0
 800b43e:	6078      	str	r0, [r7, #4]
    }
 800b440:	6878      	ldr	r0, [r7, #4]
 800b442:	f7ff ffe9 	bl	800b418 <_ZN8touchgfx4FontD1Ev>
 800b446:	2114      	movs	r1, #20
 800b448:	6878      	ldr	r0, [r7, #4]
 800b44a:	f017 fb20 	bl	8022a8e <_ZdlPvj>
 800b44e:	687b      	ldr	r3, [r7, #4]
 800b450:	4618      	mov	r0, r3
 800b452:	3708      	adds	r7, #8
 800b454:	46bd      	mov	sp, r7
 800b456:	bd80      	pop	{r7, pc}

0800b458 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800b458:	b590      	push	{r4, r7, lr}
 800b45a:	b087      	sub	sp, #28
 800b45c:	af00      	add	r7, sp, #0
 800b45e:	6078      	str	r0, [r7, #4]
 800b460:	460b      	mov	r3, r1
 800b462:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800b464:	887b      	ldrh	r3, [r7, #2]
 800b466:	2b00      	cmp	r3, #0
 800b468:	d101      	bne.n	800b46e <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800b46a:	2300      	movs	r3, #0
 800b46c:	e010      	b.n	800b490 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800b46e:	2300      	movs	r3, #0
 800b470:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800b472:	2300      	movs	r3, #0
 800b474:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	681b      	ldr	r3, [r3, #0]
 800b47a:	3308      	adds	r3, #8
 800b47c:	681c      	ldr	r4, [r3, #0]
 800b47e:	f107 030f 	add.w	r3, r7, #15
 800b482:	f107 0210 	add.w	r2, r7, #16
 800b486:	8879      	ldrh	r1, [r7, #2]
 800b488:	6878      	ldr	r0, [r7, #4]
 800b48a:	47a0      	blx	r4
 800b48c:	6178      	str	r0, [r7, #20]
        return glyph;
 800b48e:	697b      	ldr	r3, [r7, #20]
    }
 800b490:	4618      	mov	r0, r3
 800b492:	371c      	adds	r7, #28
 800b494:	46bd      	mov	sp, r7
 800b496:	bd90      	pop	{r4, r7, pc}

0800b498 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800b498:	b480      	push	{r7}
 800b49a:	b083      	sub	sp, #12
 800b49c:	af00      	add	r7, sp, #0
 800b49e:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	89db      	ldrh	r3, [r3, #14]
    }
 800b4a4:	4618      	mov	r0, r3
 800b4a6:	370c      	adds	r7, #12
 800b4a8:	46bd      	mov	sp, r7
 800b4aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4ae:	4770      	bx	lr

0800b4b0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800b4b0:	b480      	push	{r7}
 800b4b2:	b083      	sub	sp, #12
 800b4b4:	af00      	add	r7, sp, #0
 800b4b6:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800b4b8:	687b      	ldr	r3, [r7, #4]
 800b4ba:	8a1b      	ldrh	r3, [r3, #16]
    }
 800b4bc:	4618      	mov	r0, r3
 800b4be:	370c      	adds	r7, #12
 800b4c0:	46bd      	mov	sp, r7
 800b4c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4c6:	4770      	bx	lr

0800b4c8 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800b4c8:	b480      	push	{r7}
 800b4ca:	b083      	sub	sp, #12
 800b4cc:	af00      	add	r7, sp, #0
 800b4ce:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800b4d0:	687b      	ldr	r3, [r7, #4]
 800b4d2:	88db      	ldrh	r3, [r3, #6]
    }
 800b4d4:	4618      	mov	r0, r3
 800b4d6:	370c      	adds	r7, #12
 800b4d8:	46bd      	mov	sp, r7
 800b4da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4de:	4770      	bx	lr

0800b4e0 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800b4e0:	b480      	push	{r7}
 800b4e2:	b083      	sub	sp, #12
 800b4e4:	af00      	add	r7, sp, #0
 800b4e6:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800b4e8:	687b      	ldr	r3, [r7, #4]
 800b4ea:	889b      	ldrh	r3, [r3, #4]
    }
 800b4ec:	4618      	mov	r0, r3
 800b4ee:	370c      	adds	r7, #12
 800b4f0:	46bd      	mov	sp, r7
 800b4f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4f6:	4770      	bx	lr

0800b4f8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800b4f8:	b480      	push	{r7}
 800b4fa:	b083      	sub	sp, #12
 800b4fc:	af00      	add	r7, sp, #0
 800b4fe:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800b500:	687b      	ldr	r3, [r7, #4]
 800b502:	7a9b      	ldrb	r3, [r3, #10]
 800b504:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800b508:	b2db      	uxtb	r3, r3
    }
 800b50a:	4618      	mov	r0, r3
 800b50c:	370c      	adds	r7, #12
 800b50e:	46bd      	mov	sp, r7
 800b510:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b514:	4770      	bx	lr

0800b516 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800b516:	b480      	push	{r7}
 800b518:	b083      	sub	sp, #12
 800b51a:	af00      	add	r7, sp, #0
 800b51c:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800b51e:	687b      	ldr	r3, [r7, #4]
 800b520:	7a9b      	ldrb	r3, [r3, #10]
 800b522:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800b526:	b2db      	uxtb	r3, r3
    }
 800b528:	4618      	mov	r0, r3
 800b52a:	370c      	adds	r7, #12
 800b52c:	46bd      	mov	sp, r7
 800b52e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b532:	4770      	bx	lr

0800b534 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800b534:	b580      	push	{r7, lr}
 800b536:	b082      	sub	sp, #8
 800b538:	af00      	add	r7, sp, #0
 800b53a:	6078      	str	r0, [r7, #4]
 800b53c:	4a05      	ldr	r2, [pc, #20]	; (800b554 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800b53e:	687b      	ldr	r3, [r7, #4]
 800b540:	601a      	str	r2, [r3, #0]
 800b542:	687b      	ldr	r3, [r7, #4]
 800b544:	4618      	mov	r0, r3
 800b546:	f7ff ff67 	bl	800b418 <_ZN8touchgfx4FontD1Ev>
 800b54a:	687b      	ldr	r3, [r7, #4]
 800b54c:	4618      	mov	r0, r3
 800b54e:	3708      	adds	r7, #8
 800b550:	46bd      	mov	sp, r7
 800b552:	bd80      	pop	{r7, pc}
 800b554:	08025688 	.word	0x08025688

0800b558 <_ZN8touchgfx9ConstFontD0Ev>:
 800b558:	b580      	push	{r7, lr}
 800b55a:	b082      	sub	sp, #8
 800b55c:	af00      	add	r7, sp, #0
 800b55e:	6078      	str	r0, [r7, #4]
 800b560:	6878      	ldr	r0, [r7, #4]
 800b562:	f7ff ffe7 	bl	800b534 <_ZN8touchgfx9ConstFontD1Ev>
 800b566:	211c      	movs	r1, #28
 800b568:	6878      	ldr	r0, [r7, #4]
 800b56a:	f017 fa90 	bl	8022a8e <_ZdlPvj>
 800b56e:	687b      	ldr	r3, [r7, #4]
 800b570:	4618      	mov	r0, r3
 800b572:	3708      	adds	r7, #8
 800b574:	46bd      	mov	sp, r7
 800b576:	bd80      	pop	{r7, pc}

0800b578 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800b578:	b580      	push	{r7, lr}
 800b57a:	b082      	sub	sp, #8
 800b57c:	af00      	add	r7, sp, #0
 800b57e:	6078      	str	r0, [r7, #4]
 800b580:	4a05      	ldr	r2, [pc, #20]	; (800b598 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	601a      	str	r2, [r3, #0]
 800b586:	687b      	ldr	r3, [r7, #4]
 800b588:	4618      	mov	r0, r3
 800b58a:	f7ff ffd3 	bl	800b534 <_ZN8touchgfx9ConstFontD1Ev>
 800b58e:	687b      	ldr	r3, [r7, #4]
 800b590:	4618      	mov	r0, r3
 800b592:	3708      	adds	r7, #8
 800b594:	46bd      	mov	sp, r7
 800b596:	bd80      	pop	{r7, pc}
 800b598:	08024b20 	.word	0x08024b20

0800b59c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800b59c:	b580      	push	{r7, lr}
 800b59e:	b082      	sub	sp, #8
 800b5a0:	af00      	add	r7, sp, #0
 800b5a2:	6078      	str	r0, [r7, #4]
 800b5a4:	6878      	ldr	r0, [r7, #4]
 800b5a6:	f7ff ffe7 	bl	800b578 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b5aa:	212c      	movs	r1, #44	; 0x2c
 800b5ac:	6878      	ldr	r0, [r7, #4]
 800b5ae:	f017 fa6e 	bl	8022a8e <_ZdlPvj>
 800b5b2:	687b      	ldr	r3, [r7, #4]
 800b5b4:	4618      	mov	r0, r3
 800b5b6:	3708      	adds	r7, #8
 800b5b8:	46bd      	mov	sp, r7
 800b5ba:	bd80      	pop	{r7, pc}

0800b5bc <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800b5bc:	b480      	push	{r7}
 800b5be:	b083      	sub	sp, #12
 800b5c0:	af00      	add	r7, sp, #0
 800b5c2:	6078      	str	r0, [r7, #4]
    {
 800b5c4:	4a04      	ldr	r2, [pc, #16]	; (800b5d8 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	601a      	str	r2, [r3, #0]
    }
 800b5ca:	687b      	ldr	r3, [r7, #4]
 800b5cc:	4618      	mov	r0, r3
 800b5ce:	370c      	adds	r7, #12
 800b5d0:	46bd      	mov	sp, r7
 800b5d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5d6:	4770      	bx	lr
 800b5d8:	08024b10 	.word	0x08024b10

0800b5dc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800b5dc:	b580      	push	{r7, lr}
 800b5de:	b082      	sub	sp, #8
 800b5e0:	af00      	add	r7, sp, #0
 800b5e2:	6078      	str	r0, [r7, #4]
    }
 800b5e4:	6878      	ldr	r0, [r7, #4]
 800b5e6:	f7ff ffe9 	bl	800b5bc <_ZN8touchgfx9TypedTextD1Ev>
 800b5ea:	2108      	movs	r1, #8
 800b5ec:	6878      	ldr	r0, [r7, #4]
 800b5ee:	f017 fa4e 	bl	8022a8e <_ZdlPvj>
 800b5f2:	687b      	ldr	r3, [r7, #4]
 800b5f4:	4618      	mov	r0, r3
 800b5f6:	3708      	adds	r7, #8
 800b5f8:	46bd      	mov	sp, r7
 800b5fa:	bd80      	pop	{r7, pc}

0800b5fc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800b5fc:	b480      	push	{r7}
 800b5fe:	b083      	sub	sp, #12
 800b600:	af00      	add	r7, sp, #0
 800b602:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800b604:	687b      	ldr	r3, [r7, #4]
 800b606:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800b608:	4618      	mov	r0, r3
 800b60a:	370c      	adds	r7, #12
 800b60c:	46bd      	mov	sp, r7
 800b60e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b612:	4770      	bx	lr

0800b614 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800b614:	b480      	push	{r7}
 800b616:	b083      	sub	sp, #12
 800b618:	af00      	add	r7, sp, #0
 800b61a:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800b61c:	687b      	ldr	r3, [r7, #4]
 800b61e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800b620:	4618      	mov	r0, r3
 800b622:	370c      	adds	r7, #12
 800b624:	46bd      	mov	sp, r7
 800b626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b62a:	4770      	bx	lr

0800b62c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800b62c:	b580      	push	{r7, lr}
 800b62e:	b08e      	sub	sp, #56	; 0x38
 800b630:	af0a      	add	r7, sp, #40	; 0x28
 800b632:	60f8      	str	r0, [r7, #12]
 800b634:	60b9      	str	r1, [r7, #8]
 800b636:	4611      	mov	r1, r2
 800b638:	461a      	mov	r2, r3
 800b63a:	460b      	mov	r3, r1
 800b63c:	80fb      	strh	r3, [r7, #6]
 800b63e:	4613      	mov	r3, r2
 800b640:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800b642:	68f8      	ldr	r0, [r7, #12]
 800b644:	88b9      	ldrh	r1, [r7, #4]
 800b646:	88fa      	ldrh	r2, [r7, #6]
 800b648:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800b64c:	9308      	str	r3, [sp, #32]
 800b64e:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800b650:	9307      	str	r3, [sp, #28]
 800b652:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800b656:	9306      	str	r3, [sp, #24]
 800b658:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800b65c:	9305      	str	r3, [sp, #20]
 800b65e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800b662:	9304      	str	r3, [sp, #16]
 800b664:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800b668:	9303      	str	r3, [sp, #12]
 800b66a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800b66e:	9302      	str	r3, [sp, #8]
 800b670:	7f3b      	ldrb	r3, [r7, #28]
 800b672:	9301      	str	r3, [sp, #4]
 800b674:	8b3b      	ldrh	r3, [r7, #24]
 800b676:	9300      	str	r3, [sp, #0]
 800b678:	460b      	mov	r3, r1
 800b67a:	68b9      	ldr	r1, [r7, #8]
 800b67c:	f008 fa0a 	bl	8013a94 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800b680:	4a09      	ldr	r2, [pc, #36]	; (800b6a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800b682:	68fb      	ldr	r3, [r7, #12]
 800b684:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800b686:	68fb      	ldr	r3, [r7, #12]
 800b688:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b68a:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800b68c:	68fb      	ldr	r3, [r7, #12]
 800b68e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b690:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800b692:	68fb      	ldr	r3, [r7, #12]
 800b694:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b696:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800b698:	68fb      	ldr	r3, [r7, #12]
 800b69a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b69c:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800b69e:	68fb      	ldr	r3, [r7, #12]
 800b6a0:	4618      	mov	r0, r3
 800b6a2:	3710      	adds	r7, #16
 800b6a4:	46bd      	mov	sp, r7
 800b6a6:	bd80      	pop	{r7, pc}
 800b6a8:	08024b20 	.word	0x08024b20

0800b6ac <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800b6ac:	b480      	push	{r7}
 800b6ae:	b085      	sub	sp, #20
 800b6b0:	af00      	add	r7, sp, #0
 800b6b2:	6078      	str	r0, [r7, #4]
 800b6b4:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	69db      	ldr	r3, [r3, #28]
 800b6ba:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800b6bc:	683b      	ldr	r3, [r7, #0]
 800b6be:	889b      	ldrh	r3, [r3, #4]
 800b6c0:	0adb      	lsrs	r3, r3, #11
 800b6c2:	b29b      	uxth	r3, r3
 800b6c4:	009b      	lsls	r3, r3, #2
 800b6c6:	68fa      	ldr	r2, [r7, #12]
 800b6c8:	4413      	add	r3, r2
 800b6ca:	681a      	ldr	r2, [r3, #0]
 800b6cc:	683b      	ldr	r3, [r7, #0]
 800b6ce:	681b      	ldr	r3, [r3, #0]
 800b6d0:	4413      	add	r3, r2
}
 800b6d2:	4618      	mov	r0, r3
 800b6d4:	3714      	adds	r7, #20
 800b6d6:	46bd      	mov	sp, r7
 800b6d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6dc:	4770      	bx	lr

0800b6de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800b6de:	b480      	push	{r7}
 800b6e0:	b089      	sub	sp, #36	; 0x24
 800b6e2:	af00      	add	r7, sp, #0
 800b6e4:	60f8      	str	r0, [r7, #12]
 800b6e6:	460b      	mov	r3, r1
 800b6e8:	607a      	str	r2, [r7, #4]
 800b6ea:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800b6ec:	687b      	ldr	r3, [r7, #4]
 800b6ee:	2b00      	cmp	r3, #0
 800b6f0:	d003      	beq.n	800b6fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800b6f2:	687b      	ldr	r3, [r7, #4]
 800b6f4:	7b1b      	ldrb	r3, [r3, #12]
 800b6f6:	2b00      	cmp	r3, #0
 800b6f8:	d101      	bne.n	800b6fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800b6fa:	2300      	movs	r3, #0
 800b6fc:	e031      	b.n	800b762 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800b6fe:	68fb      	ldr	r3, [r7, #12]
 800b700:	6a1a      	ldr	r2, [r3, #32]
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800b706:	697b      	ldr	r3, [r7, #20]
 800b708:	7b5b      	ldrb	r3, [r3, #13]
 800b70a:	021b      	lsls	r3, r3, #8
 800b70c:	b21b      	sxth	r3, r3
 800b70e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800b712:	b219      	sxth	r1, r3
 800b714:	697b      	ldr	r3, [r7, #20]
 800b716:	7adb      	ldrb	r3, [r3, #11]
 800b718:	b21b      	sxth	r3, r3
 800b71a:	430b      	orrs	r3, r1
 800b71c:	b21b      	sxth	r3, r3
 800b71e:	b29b      	uxth	r3, r3
 800b720:	009b      	lsls	r3, r3, #2
 800b722:	4413      	add	r3, r2
 800b724:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b726:	687b      	ldr	r3, [r7, #4]
 800b728:	7b1b      	ldrb	r3, [r3, #12]
 800b72a:	837b      	strh	r3, [r7, #26]
 800b72c:	e013      	b.n	800b756 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800b72e:	69fb      	ldr	r3, [r7, #28]
 800b730:	881b      	ldrh	r3, [r3, #0]
 800b732:	897a      	ldrh	r2, [r7, #10]
 800b734:	429a      	cmp	r2, r3
 800b736:	d103      	bne.n	800b740 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800b738:	69fb      	ldr	r3, [r7, #28]
 800b73a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800b73e:	e010      	b.n	800b762 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800b740:	69fb      	ldr	r3, [r7, #28]
 800b742:	881b      	ldrh	r3, [r3, #0]
 800b744:	897a      	ldrh	r2, [r7, #10]
 800b746:	429a      	cmp	r2, r3
 800b748:	d309      	bcc.n	800b75e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b74a:	8b7b      	ldrh	r3, [r7, #26]
 800b74c:	3b01      	subs	r3, #1
 800b74e:	837b      	strh	r3, [r7, #26]
 800b750:	69fb      	ldr	r3, [r7, #28]
 800b752:	3304      	adds	r3, #4
 800b754:	61fb      	str	r3, [r7, #28]
 800b756:	8b7b      	ldrh	r3, [r7, #26]
 800b758:	2b00      	cmp	r3, #0
 800b75a:	d1e8      	bne.n	800b72e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800b75c:	e000      	b.n	800b760 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800b75e:	bf00      	nop
        }
    }
    return 0;
 800b760:	2300      	movs	r3, #0
}
 800b762:	4618      	mov	r0, r3
 800b764:	3724      	adds	r7, #36	; 0x24
 800b766:	46bd      	mov	sp, r7
 800b768:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b76c:	4770      	bx	lr
	...

0800b770 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b770:	b580      	push	{r7, lr}
 800b772:	af00      	add	r7, sp, #0
 800b774:	4801      	ldr	r0, [pc, #4]	; (800b77c <__tcf_0+0xc>)
 800b776:	f7ff feff 	bl	800b578 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b77a:	bd80      	pop	{r7, pc}
 800b77c:	24000394 	.word	0x24000394

0800b780 <_Z23getFont_verdana_10_4bppv>:
{
 800b780:	b580      	push	{r7, lr}
 800b782:	b08e      	sub	sp, #56	; 0x38
 800b784:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b786:	4b21      	ldr	r3, [pc, #132]	; (800b80c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b788:	681b      	ldr	r3, [r3, #0]
 800b78a:	f3bf 8f5b 	dmb	ish
 800b78e:	f003 0301 	and.w	r3, r3, #1
 800b792:	2b00      	cmp	r3, #0
 800b794:	bf0c      	ite	eq
 800b796:	2301      	moveq	r3, #1
 800b798:	2300      	movne	r3, #0
 800b79a:	b2db      	uxtb	r3, r3
 800b79c:	2b00      	cmp	r3, #0
 800b79e:	d030      	beq.n	800b802 <_Z23getFont_verdana_10_4bppv+0x82>
 800b7a0:	481a      	ldr	r0, [pc, #104]	; (800b80c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b7a2:	f017 f976 	bl	8022a92 <__cxa_guard_acquire>
 800b7a6:	4603      	mov	r3, r0
 800b7a8:	2b00      	cmp	r3, #0
 800b7aa:	bf14      	ite	ne
 800b7ac:	2301      	movne	r3, #1
 800b7ae:	2300      	moveq	r3, #0
 800b7b0:	b2db      	uxtb	r3, r3
 800b7b2:	2b00      	cmp	r3, #0
 800b7b4:	d025      	beq.n	800b802 <_Z23getFont_verdana_10_4bppv+0x82>
 800b7b6:	2300      	movs	r3, #0
 800b7b8:	930c      	str	r3, [sp, #48]	; 0x30
 800b7ba:	2300      	movs	r3, #0
 800b7bc:	930b      	str	r3, [sp, #44]	; 0x2c
 800b7be:	2300      	movs	r3, #0
 800b7c0:	930a      	str	r3, [sp, #40]	; 0x28
 800b7c2:	233f      	movs	r3, #63	; 0x3f
 800b7c4:	9309      	str	r3, [sp, #36]	; 0x24
 800b7c6:	4b12      	ldr	r3, [pc, #72]	; (800b810 <_Z23getFont_verdana_10_4bppv+0x90>)
 800b7c8:	9308      	str	r3, [sp, #32]
 800b7ca:	4b12      	ldr	r3, [pc, #72]	; (800b814 <_Z23getFont_verdana_10_4bppv+0x94>)
 800b7cc:	9307      	str	r3, [sp, #28]
 800b7ce:	2300      	movs	r3, #0
 800b7d0:	9306      	str	r3, [sp, #24]
 800b7d2:	2300      	movs	r3, #0
 800b7d4:	9305      	str	r3, [sp, #20]
 800b7d6:	2301      	movs	r3, #1
 800b7d8:	9304      	str	r3, [sp, #16]
 800b7da:	2304      	movs	r3, #4
 800b7dc:	9303      	str	r3, [sp, #12]
 800b7de:	2300      	movs	r3, #0
 800b7e0:	9302      	str	r3, [sp, #8]
 800b7e2:	2300      	movs	r3, #0
 800b7e4:	9301      	str	r3, [sp, #4]
 800b7e6:	230a      	movs	r3, #10
 800b7e8:	9300      	str	r3, [sp, #0]
 800b7ea:	230a      	movs	r3, #10
 800b7ec:	2201      	movs	r2, #1
 800b7ee:	490a      	ldr	r1, [pc, #40]	; (800b818 <_Z23getFont_verdana_10_4bppv+0x98>)
 800b7f0:	480a      	ldr	r0, [pc, #40]	; (800b81c <_Z23getFont_verdana_10_4bppv+0x9c>)
 800b7f2:	f7ff ff1b 	bl	800b62c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b7f6:	480a      	ldr	r0, [pc, #40]	; (800b820 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800b7f8:	f017 f996 	bl	8022b28 <atexit>
 800b7fc:	4803      	ldr	r0, [pc, #12]	; (800b80c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b7fe:	f017 f954 	bl	8022aaa <__cxa_guard_release>
    return verdana_10_4bpp;
 800b802:	4b06      	ldr	r3, [pc, #24]	; (800b81c <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800b804:	4618      	mov	r0, r3
 800b806:	46bd      	mov	sp, r7
 800b808:	bd80      	pop	{r7, pc}
 800b80a:	bf00      	nop
 800b80c:	240003c0 	.word	0x240003c0
 800b810:	08025df8 	.word	0x08025df8
 800b814:	08025e04 	.word	0x08025e04
 800b818:	08025d84 	.word	0x08025d84
 800b81c:	24000394 	.word	0x24000394
 800b820:	0800b771 	.word	0x0800b771

0800b824 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 6, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800b824:	b580      	push	{r7, lr}
 800b826:	af00      	add	r7, sp, #0
 800b828:	4801      	ldr	r0, [pc, #4]	; (800b830 <__tcf_0+0xc>)
 800b82a:	f7ff fea5 	bl	800b578 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b82e:	bd80      	pop	{r7, pc}
 800b830:	240003c4 	.word	0x240003c4

0800b834 <_Z23getFont_verdana_20_4bppv>:
{
 800b834:	b580      	push	{r7, lr}
 800b836:	b08e      	sub	sp, #56	; 0x38
 800b838:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 6, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800b83a:	4b21      	ldr	r3, [pc, #132]	; (800b8c0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b83c:	681b      	ldr	r3, [r3, #0]
 800b83e:	f3bf 8f5b 	dmb	ish
 800b842:	f003 0301 	and.w	r3, r3, #1
 800b846:	2b00      	cmp	r3, #0
 800b848:	bf0c      	ite	eq
 800b84a:	2301      	moveq	r3, #1
 800b84c:	2300      	movne	r3, #0
 800b84e:	b2db      	uxtb	r3, r3
 800b850:	2b00      	cmp	r3, #0
 800b852:	d030      	beq.n	800b8b6 <_Z23getFont_verdana_20_4bppv+0x82>
 800b854:	481a      	ldr	r0, [pc, #104]	; (800b8c0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b856:	f017 f91c 	bl	8022a92 <__cxa_guard_acquire>
 800b85a:	4603      	mov	r3, r0
 800b85c:	2b00      	cmp	r3, #0
 800b85e:	bf14      	ite	ne
 800b860:	2301      	movne	r3, #1
 800b862:	2300      	moveq	r3, #0
 800b864:	b2db      	uxtb	r3, r3
 800b866:	2b00      	cmp	r3, #0
 800b868:	d025      	beq.n	800b8b6 <_Z23getFont_verdana_20_4bppv+0x82>
 800b86a:	2300      	movs	r3, #0
 800b86c:	930c      	str	r3, [sp, #48]	; 0x30
 800b86e:	2300      	movs	r3, #0
 800b870:	930b      	str	r3, [sp, #44]	; 0x2c
 800b872:	2300      	movs	r3, #0
 800b874:	930a      	str	r3, [sp, #40]	; 0x28
 800b876:	233f      	movs	r3, #63	; 0x3f
 800b878:	9309      	str	r3, [sp, #36]	; 0x24
 800b87a:	4b12      	ldr	r3, [pc, #72]	; (800b8c4 <_Z23getFont_verdana_20_4bppv+0x90>)
 800b87c:	9308      	str	r3, [sp, #32]
 800b87e:	4b12      	ldr	r3, [pc, #72]	; (800b8c8 <_Z23getFont_verdana_20_4bppv+0x94>)
 800b880:	9307      	str	r3, [sp, #28]
 800b882:	2301      	movs	r3, #1
 800b884:	9306      	str	r3, [sp, #24]
 800b886:	2300      	movs	r3, #0
 800b888:	9305      	str	r3, [sp, #20]
 800b88a:	2301      	movs	r3, #1
 800b88c:	9304      	str	r3, [sp, #16]
 800b88e:	2304      	movs	r3, #4
 800b890:	9303      	str	r3, [sp, #12]
 800b892:	2300      	movs	r3, #0
 800b894:	9302      	str	r3, [sp, #8]
 800b896:	2300      	movs	r3, #0
 800b898:	9301      	str	r3, [sp, #4]
 800b89a:	2314      	movs	r3, #20
 800b89c:	9300      	str	r3, [sp, #0]
 800b89e:	2314      	movs	r3, #20
 800b8a0:	2206      	movs	r2, #6
 800b8a2:	490a      	ldr	r1, [pc, #40]	; (800b8cc <_Z23getFont_verdana_20_4bppv+0x98>)
 800b8a4:	480a      	ldr	r0, [pc, #40]	; (800b8d0 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800b8a6:	f7ff fec1 	bl	800b62c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b8aa:	480a      	ldr	r0, [pc, #40]	; (800b8d4 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800b8ac:	f017 f93c 	bl	8022b28 <atexit>
 800b8b0:	4803      	ldr	r0, [pc, #12]	; (800b8c0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b8b2:	f017 f8fa 	bl	8022aaa <__cxa_guard_release>
    return verdana_20_4bpp;
 800b8b6:	4b06      	ldr	r3, [pc, #24]	; (800b8d0 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800b8b8:	4618      	mov	r0, r3
 800b8ba:	46bd      	mov	sp, r7
 800b8bc:	bd80      	pop	{r7, pc}
 800b8be:	bf00      	nop
 800b8c0:	240003f0 	.word	0x240003f0
 800b8c4:	08025dfc 	.word	0x08025dfc
 800b8c8:	08025e08 	.word	0x08025e08
 800b8cc:	08025d94 	.word	0x08025d94
 800b8d0:	240003c4 	.word	0x240003c4
 800b8d4:	0800b825 	.word	0x0800b825

0800b8d8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800b8d8:	b580      	push	{r7, lr}
 800b8da:	af00      	add	r7, sp, #0
 800b8dc:	4801      	ldr	r0, [pc, #4]	; (800b8e4 <__tcf_0+0xc>)
 800b8de:	f7ff fe4b 	bl	800b578 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b8e2:	bd80      	pop	{r7, pc}
 800b8e4:	240003f4 	.word	0x240003f4

0800b8e8 <_Z23getFont_verdana_40_4bppv>:
{
 800b8e8:	b580      	push	{r7, lr}
 800b8ea:	b08e      	sub	sp, #56	; 0x38
 800b8ec:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800b8ee:	4b21      	ldr	r3, [pc, #132]	; (800b974 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b8f0:	681b      	ldr	r3, [r3, #0]
 800b8f2:	f3bf 8f5b 	dmb	ish
 800b8f6:	f003 0301 	and.w	r3, r3, #1
 800b8fa:	2b00      	cmp	r3, #0
 800b8fc:	bf0c      	ite	eq
 800b8fe:	2301      	moveq	r3, #1
 800b900:	2300      	movne	r3, #0
 800b902:	b2db      	uxtb	r3, r3
 800b904:	2b00      	cmp	r3, #0
 800b906:	d030      	beq.n	800b96a <_Z23getFont_verdana_40_4bppv+0x82>
 800b908:	481a      	ldr	r0, [pc, #104]	; (800b974 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b90a:	f017 f8c2 	bl	8022a92 <__cxa_guard_acquire>
 800b90e:	4603      	mov	r3, r0
 800b910:	2b00      	cmp	r3, #0
 800b912:	bf14      	ite	ne
 800b914:	2301      	movne	r3, #1
 800b916:	2300      	moveq	r3, #0
 800b918:	b2db      	uxtb	r3, r3
 800b91a:	2b00      	cmp	r3, #0
 800b91c:	d025      	beq.n	800b96a <_Z23getFont_verdana_40_4bppv+0x82>
 800b91e:	2300      	movs	r3, #0
 800b920:	930c      	str	r3, [sp, #48]	; 0x30
 800b922:	2300      	movs	r3, #0
 800b924:	930b      	str	r3, [sp, #44]	; 0x2c
 800b926:	2300      	movs	r3, #0
 800b928:	930a      	str	r3, [sp, #40]	; 0x28
 800b92a:	233f      	movs	r3, #63	; 0x3f
 800b92c:	9309      	str	r3, [sp, #36]	; 0x24
 800b92e:	4b12      	ldr	r3, [pc, #72]	; (800b978 <_Z23getFont_verdana_40_4bppv+0x90>)
 800b930:	9308      	str	r3, [sp, #32]
 800b932:	4b12      	ldr	r3, [pc, #72]	; (800b97c <_Z23getFont_verdana_40_4bppv+0x94>)
 800b934:	9307      	str	r3, [sp, #28]
 800b936:	2300      	movs	r3, #0
 800b938:	9306      	str	r3, [sp, #24]
 800b93a:	2300      	movs	r3, #0
 800b93c:	9305      	str	r3, [sp, #20]
 800b93e:	2301      	movs	r3, #1
 800b940:	9304      	str	r3, [sp, #16]
 800b942:	2304      	movs	r3, #4
 800b944:	9303      	str	r3, [sp, #12]
 800b946:	2300      	movs	r3, #0
 800b948:	9302      	str	r3, [sp, #8]
 800b94a:	2300      	movs	r3, #0
 800b94c:	9301      	str	r3, [sp, #4]
 800b94e:	2328      	movs	r3, #40	; 0x28
 800b950:	9300      	str	r3, [sp, #0]
 800b952:	2328      	movs	r3, #40	; 0x28
 800b954:	2201      	movs	r2, #1
 800b956:	490a      	ldr	r1, [pc, #40]	; (800b980 <_Z23getFont_verdana_40_4bppv+0x98>)
 800b958:	480a      	ldr	r0, [pc, #40]	; (800b984 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800b95a:	f7ff fe67 	bl	800b62c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b95e:	480a      	ldr	r0, [pc, #40]	; (800b988 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800b960:	f017 f8e2 	bl	8022b28 <atexit>
 800b964:	4803      	ldr	r0, [pc, #12]	; (800b974 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b966:	f017 f8a0 	bl	8022aaa <__cxa_guard_release>
    return verdana_40_4bpp;
 800b96a:	4b06      	ldr	r3, [pc, #24]	; (800b984 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800b96c:	4618      	mov	r0, r3
 800b96e:	46bd      	mov	sp, r7
 800b970:	bd80      	pop	{r7, pc}
 800b972:	bf00      	nop
 800b974:	24000420 	.word	0x24000420
 800b978:	08025e00 	.word	0x08025e00
 800b97c:	08025e0c 	.word	0x08025e0c
 800b980:	08025de8 	.word	0x08025de8
 800b984:	240003f4 	.word	0x240003f4
 800b988:	0800b8d9 	.word	0x0800b8d9

0800b98c <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800b98c:	b480      	push	{r7}
 800b98e:	b083      	sub	sp, #12
 800b990:	af00      	add	r7, sp, #0
 800b992:	6078      	str	r0, [r7, #4]
 800b994:	6039      	str	r1, [r7, #0]
 800b996:	683b      	ldr	r3, [r7, #0]
 800b998:	4618      	mov	r0, r3
 800b99a:	370c      	adds	r7, #12
 800b99c:	46bd      	mov	sp, r7
 800b99e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9a2:	4770      	bx	lr

0800b9a4 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800b9a4:	b480      	push	{r7}
 800b9a6:	b083      	sub	sp, #12
 800b9a8:	af00      	add	r7, sp, #0
 800b9aa:	6078      	str	r0, [r7, #4]
 800b9ac:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b9ae:	bf00      	nop
 800b9b0:	370c      	adds	r7, #12
 800b9b2:	46bd      	mov	sp, r7
 800b9b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9b8:	4770      	bx	lr

0800b9ba <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800b9ba:	b480      	push	{r7}
 800b9bc:	b083      	sub	sp, #12
 800b9be:	af00      	add	r7, sp, #0
 800b9c0:	6078      	str	r0, [r7, #4]
 800b9c2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b9c4:	bf00      	nop
 800b9c6:	370c      	adds	r7, #12
 800b9c8:	46bd      	mov	sp, r7
 800b9ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9ce:	4770      	bx	lr

0800b9d0 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800b9d0:	b480      	push	{r7}
 800b9d2:	b083      	sub	sp, #12
 800b9d4:	af00      	add	r7, sp, #0
 800b9d6:	6078      	str	r0, [r7, #4]
 800b9d8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b9da:	bf00      	nop
 800b9dc:	370c      	adds	r7, #12
 800b9de:	46bd      	mov	sp, r7
 800b9e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9e4:	4770      	bx	lr

0800b9e6 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800b9e6:	b480      	push	{r7}
 800b9e8:	b083      	sub	sp, #12
 800b9ea:	af00      	add	r7, sp, #0
 800b9ec:	6078      	str	r0, [r7, #4]
 800b9ee:	460b      	mov	r3, r1
 800b9f0:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800b9f2:	bf00      	nop
 800b9f4:	370c      	adds	r7, #12
 800b9f6:	46bd      	mov	sp, r7
 800b9f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9fc:	4770      	bx	lr

0800b9fe <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800b9fe:	b480      	push	{r7}
 800ba00:	b083      	sub	sp, #12
 800ba02:	af00      	add	r7, sp, #0
 800ba04:	6078      	str	r0, [r7, #4]
    {
    }
 800ba06:	bf00      	nop
 800ba08:	370c      	adds	r7, #12
 800ba0a:	46bd      	mov	sp, r7
 800ba0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba10:	4770      	bx	lr

0800ba12 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800ba12:	b480      	push	{r7}
 800ba14:	b083      	sub	sp, #12
 800ba16:	af00      	add	r7, sp, #0
 800ba18:	6078      	str	r0, [r7, #4]
    {
    }
 800ba1a:	bf00      	nop
 800ba1c:	370c      	adds	r7, #12
 800ba1e:	46bd      	mov	sp, r7
 800ba20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba24:	4770      	bx	lr
	...

0800ba28 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800ba28:	b480      	push	{r7}
 800ba2a:	b083      	sub	sp, #12
 800ba2c:	af00      	add	r7, sp, #0
 800ba2e:	6078      	str	r0, [r7, #4]
    {
 800ba30:	4a04      	ldr	r2, [pc, #16]	; (800ba44 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800ba32:	687b      	ldr	r3, [r7, #4]
 800ba34:	601a      	str	r2, [r3, #0]
    }
 800ba36:	687b      	ldr	r3, [r7, #4]
 800ba38:	4618      	mov	r0, r3
 800ba3a:	370c      	adds	r7, #12
 800ba3c:	46bd      	mov	sp, r7
 800ba3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba42:	4770      	bx	lr
 800ba44:	08024ca0 	.word	0x08024ca0

0800ba48 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800ba48:	b580      	push	{r7, lr}
 800ba4a:	b082      	sub	sp, #8
 800ba4c:	af00      	add	r7, sp, #0
 800ba4e:	6078      	str	r0, [r7, #4]
    }
 800ba50:	6878      	ldr	r0, [r7, #4]
 800ba52:	f7ff ffe9 	bl	800ba28 <_ZN8touchgfx15UIEventListenerD1Ev>
 800ba56:	2104      	movs	r1, #4
 800ba58:	6878      	ldr	r0, [r7, #4]
 800ba5a:	f017 f818 	bl	8022a8e <_ZdlPvj>
 800ba5e:	687b      	ldr	r3, [r7, #4]
 800ba60:	4618      	mov	r0, r3
 800ba62:	3708      	adds	r7, #8
 800ba64:	46bd      	mov	sp, r7
 800ba66:	bd80      	pop	{r7, pc}

0800ba68 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800ba68:	b480      	push	{r7}
 800ba6a:	b083      	sub	sp, #12
 800ba6c:	af00      	add	r7, sp, #0
 800ba6e:	6078      	str	r0, [r7, #4]
    {
    }
 800ba70:	bf00      	nop
 800ba72:	370c      	adds	r7, #12
 800ba74:	46bd      	mov	sp, r7
 800ba76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba7a:	4770      	bx	lr

0800ba7c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800ba7c:	b480      	push	{r7}
 800ba7e:	b083      	sub	sp, #12
 800ba80:	af00      	add	r7, sp, #0
 800ba82:	6078      	str	r0, [r7, #4]
 800ba84:	460b      	mov	r3, r1
 800ba86:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800ba88:	bf00      	nop
 800ba8a:	370c      	adds	r7, #12
 800ba8c:	46bd      	mov	sp, r7
 800ba8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba92:	4770      	bx	lr

0800ba94 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800ba94:	b480      	push	{r7}
 800ba96:	b083      	sub	sp, #12
 800ba98:	af00      	add	r7, sp, #0
 800ba9a:	6078      	str	r0, [r7, #4]
 800ba9c:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	683a      	ldr	r2, [r7, #0]
 800baa2:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800baa6:	6810      	ldr	r0, [r2, #0]
 800baa8:	6851      	ldr	r1, [r2, #4]
 800baaa:	c303      	stmia	r3!, {r0, r1}
    }
 800baac:	bf00      	nop
 800baae:	370c      	adds	r7, #12
 800bab0:	46bd      	mov	sp, r7
 800bab2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bab6:	4770      	bx	lr

0800bab8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800bab8:	b580      	push	{r7, lr}
 800baba:	b082      	sub	sp, #8
 800babc:	af00      	add	r7, sp, #0
 800babe:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800bac0:	687b      	ldr	r3, [r7, #4]
 800bac2:	3304      	adds	r3, #4
 800bac4:	4618      	mov	r0, r3
 800bac6:	f006 fee4 	bl	8012892 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800baca:	bf00      	nop
 800bacc:	3708      	adds	r7, #8
 800bace:	46bd      	mov	sp, r7
 800bad0:	bd80      	pop	{r7, pc}
	...

0800bad4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800bad4:	b480      	push	{r7}
 800bad6:	b083      	sub	sp, #12
 800bad8:	af00      	add	r7, sp, #0
 800bada:	6078      	str	r0, [r7, #4]
    {
 800badc:	4a04      	ldr	r2, [pc, #16]	; (800baf0 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800bade:	687b      	ldr	r3, [r7, #4]
 800bae0:	601a      	str	r2, [r3, #0]
    }
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	4618      	mov	r0, r3
 800bae6:	370c      	adds	r7, #12
 800bae8:	46bd      	mov	sp, r7
 800baea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baee:	4770      	bx	lr
 800baf0:	08024c88 	.word	0x08024c88

0800baf4 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800baf4:	b580      	push	{r7, lr}
 800baf6:	b082      	sub	sp, #8
 800baf8:	af00      	add	r7, sp, #0
 800bafa:	6078      	str	r0, [r7, #4]
    }
 800bafc:	6878      	ldr	r0, [r7, #4]
 800bafe:	f7ff ffe9 	bl	800bad4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800bb02:	2104      	movs	r1, #4
 800bb04:	6878      	ldr	r0, [r7, #4]
 800bb06:	f016 ffc2 	bl	8022a8e <_ZdlPvj>
 800bb0a:	687b      	ldr	r3, [r7, #4]
 800bb0c:	4618      	mov	r0, r3
 800bb0e:	3708      	adds	r7, #8
 800bb10:	46bd      	mov	sp, r7
 800bb12:	bd80      	pop	{r7, pc}

0800bb14 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800bb14:	b480      	push	{r7}
 800bb16:	af00      	add	r7, sp, #0
    {
        return instance;
 800bb18:	4b03      	ldr	r3, [pc, #12]	; (800bb28 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800bb1a:	681b      	ldr	r3, [r3, #0]
    }
 800bb1c:	4618      	mov	r0, r3
 800bb1e:	46bd      	mov	sp, r7
 800bb20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb24:	4770      	bx	lr
 800bb26:	bf00      	nop
 800bb28:	24001ed8 	.word	0x24001ed8

0800bb2c <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800bb2c:	b480      	push	{r7}
 800bb2e:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800bb30:	4b0b      	ldr	r3, [pc, #44]	; (800bb60 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800bb32:	681b      	ldr	r3, [r3, #0]
 800bb34:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800bb38:	2b00      	cmp	r3, #0
 800bb3a:	d008      	beq.n	800bb4e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800bb3c:	4b08      	ldr	r3, [pc, #32]	; (800bb60 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800bb3e:	681b      	ldr	r3, [r3, #0]
 800bb40:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800bb42:	2b00      	cmp	r3, #0
 800bb44:	d003      	beq.n	800bb4e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800bb46:	4b06      	ldr	r3, [pc, #24]	; (800bb60 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800bb48:	681b      	ldr	r3, [r3, #0]
 800bb4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800bb4c:	e002      	b.n	800bb54 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800bb4e:	4b04      	ldr	r3, [pc, #16]	; (800bb60 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800bb50:	681b      	ldr	r3, [r3, #0]
 800bb52:	689b      	ldr	r3, [r3, #8]
    }
 800bb54:	4618      	mov	r0, r3
 800bb56:	46bd      	mov	sp, r7
 800bb58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb5c:	4770      	bx	lr
 800bb5e:	bf00      	nop
 800bb60:	24001ed8 	.word	0x24001ed8

0800bb64 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800bb64:	b480      	push	{r7}
 800bb66:	b083      	sub	sp, #12
 800bb68:	af00      	add	r7, sp, #0
 800bb6a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800bb6c:	4a07      	ldr	r2, [pc, #28]	; (800bb8c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800bb6e:	687b      	ldr	r3, [r7, #4]
 800bb70:	601a      	str	r2, [r3, #0]
 800bb72:	687b      	ldr	r3, [r7, #4]
 800bb74:	2200      	movs	r2, #0
 800bb76:	605a      	str	r2, [r3, #4]
 800bb78:	687b      	ldr	r3, [r7, #4]
 800bb7a:	2200      	movs	r2, #0
 800bb7c:	721a      	strb	r2, [r3, #8]
    {
    }
 800bb7e:	687b      	ldr	r3, [r7, #4]
 800bb80:	4618      	mov	r0, r3
 800bb82:	370c      	adds	r7, #12
 800bb84:	46bd      	mov	sp, r7
 800bb86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb8a:	4770      	bx	lr
 800bb8c:	08024c64 	.word	0x08024c64

0800bb90 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800bb90:	b480      	push	{r7}
 800bb92:	b083      	sub	sp, #12
 800bb94:	af00      	add	r7, sp, #0
 800bb96:	6078      	str	r0, [r7, #4]
    {
 800bb98:	4a04      	ldr	r2, [pc, #16]	; (800bbac <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800bb9a:	687b      	ldr	r3, [r7, #4]
 800bb9c:	601a      	str	r2, [r3, #0]
    }
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	4618      	mov	r0, r3
 800bba2:	370c      	adds	r7, #12
 800bba4:	46bd      	mov	sp, r7
 800bba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbaa:	4770      	bx	lr
 800bbac:	08024c64 	.word	0x08024c64

0800bbb0 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800bbb0:	b580      	push	{r7, lr}
 800bbb2:	b082      	sub	sp, #8
 800bbb4:	af00      	add	r7, sp, #0
 800bbb6:	6078      	str	r0, [r7, #4]
    }
 800bbb8:	6878      	ldr	r0, [r7, #4]
 800bbba:	f7ff ffe9 	bl	800bb90 <_ZN8touchgfx10TransitionD1Ev>
 800bbbe:	210c      	movs	r1, #12
 800bbc0:	6878      	ldr	r0, [r7, #4]
 800bbc2:	f016 ff64 	bl	8022a8e <_ZdlPvj>
 800bbc6:	687b      	ldr	r3, [r7, #4]
 800bbc8:	4618      	mov	r0, r3
 800bbca:	3708      	adds	r7, #8
 800bbcc:	46bd      	mov	sp, r7
 800bbce:	bd80      	pop	{r7, pc}

0800bbd0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800bbd0:	b480      	push	{r7}
 800bbd2:	b083      	sub	sp, #12
 800bbd4:	af00      	add	r7, sp, #0
 800bbd6:	6078      	str	r0, [r7, #4]
    {
    }
 800bbd8:	bf00      	nop
 800bbda:	370c      	adds	r7, #12
 800bbdc:	46bd      	mov	sp, r7
 800bbde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbe2:	4770      	bx	lr

0800bbe4 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800bbe4:	b480      	push	{r7}
 800bbe6:	b083      	sub	sp, #12
 800bbe8:	af00      	add	r7, sp, #0
 800bbea:	6078      	str	r0, [r7, #4]
    {
    }
 800bbec:	bf00      	nop
 800bbee:	370c      	adds	r7, #12
 800bbf0:	46bd      	mov	sp, r7
 800bbf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbf6:	4770      	bx	lr

0800bbf8 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800bbf8:	b480      	push	{r7}
 800bbfa:	b083      	sub	sp, #12
 800bbfc:	af00      	add	r7, sp, #0
 800bbfe:	6078      	str	r0, [r7, #4]
    {
    }
 800bc00:	bf00      	nop
 800bc02:	370c      	adds	r7, #12
 800bc04:	46bd      	mov	sp, r7
 800bc06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc0a:	4770      	bx	lr

0800bc0c <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800bc0c:	b580      	push	{r7, lr}
 800bc0e:	b082      	sub	sp, #8
 800bc10:	af00      	add	r7, sp, #0
 800bc12:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800bc14:	f006 fe18 	bl	8012848 <_ZN8touchgfx11Application11getInstanceEv>
 800bc18:	4603      	mov	r3, r0
 800bc1a:	681a      	ldr	r2, [r3, #0]
 800bc1c:	323c      	adds	r2, #60	; 0x3c
 800bc1e:	6812      	ldr	r2, [r2, #0]
 800bc20:	4618      	mov	r0, r3
 800bc22:	4790      	blx	r2
    }
 800bc24:	bf00      	nop
 800bc26:	3708      	adds	r7, #8
 800bc28:	46bd      	mov	sp, r7
 800bc2a:	bd80      	pop	{r7, pc}

0800bc2c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800bc2c:	b480      	push	{r7}
 800bc2e:	b083      	sub	sp, #12
 800bc30:	af00      	add	r7, sp, #0
 800bc32:	6078      	str	r0, [r7, #4]
 800bc34:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800bc36:	687b      	ldr	r3, [r7, #4]
 800bc38:	683a      	ldr	r2, [r7, #0]
 800bc3a:	605a      	str	r2, [r3, #4]
    }
 800bc3c:	bf00      	nop
 800bc3e:	370c      	adds	r7, #12
 800bc40:	46bd      	mov	sp, r7
 800bc42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc46:	4770      	bx	lr

0800bc48 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800bc48:	b580      	push	{r7, lr}
 800bc4a:	b082      	sub	sp, #8
 800bc4c:	af00      	add	r7, sp, #0
 800bc4e:	6078      	str	r0, [r7, #4]
 800bc50:	4a05      	ldr	r2, [pc, #20]	; (800bc68 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800bc52:	687b      	ldr	r3, [r7, #4]
 800bc54:	601a      	str	r2, [r3, #0]
 800bc56:	687b      	ldr	r3, [r7, #4]
 800bc58:	4618      	mov	r0, r3
 800bc5a:	f7ff fee5 	bl	800ba28 <_ZN8touchgfx15UIEventListenerD1Ev>
 800bc5e:	687b      	ldr	r3, [r7, #4]
 800bc60:	4618      	mov	r0, r3
 800bc62:	3708      	adds	r7, #8
 800bc64:	46bd      	mov	sp, r7
 800bc66:	bd80      	pop	{r7, pc}
 800bc68:	080255cc 	.word	0x080255cc

0800bc6c <_ZN8touchgfx11ApplicationD0Ev>:
 800bc6c:	b580      	push	{r7, lr}
 800bc6e:	b082      	sub	sp, #8
 800bc70:	af00      	add	r7, sp, #0
 800bc72:	6078      	str	r0, [r7, #4]
 800bc74:	6878      	ldr	r0, [r7, #4]
 800bc76:	f7ff ffe7 	bl	800bc48 <_ZN8touchgfx11ApplicationD1Ev>
 800bc7a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800bc7e:	6878      	ldr	r0, [r7, #4]
 800bc80:	f016 ff05 	bl	8022a8e <_ZdlPvj>
 800bc84:	687b      	ldr	r3, [r7, #4]
 800bc86:	4618      	mov	r0, r3
 800bc88:	3708      	adds	r7, #8
 800bc8a:	46bd      	mov	sp, r7
 800bc8c:	bd80      	pop	{r7, pc}
	...

0800bc90 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800bc90:	b580      	push	{r7, lr}
 800bc92:	b082      	sub	sp, #8
 800bc94:	af00      	add	r7, sp, #0
 800bc96:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800bc98:	687b      	ldr	r3, [r7, #4]
 800bc9a:	4618      	mov	r0, r3
 800bc9c:	f006 fe9a 	bl	80129d4 <_ZN8touchgfx11ApplicationC1Ev>
 800bca0:	4a09      	ldr	r2, [pc, #36]	; (800bcc8 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800bca2:	687b      	ldr	r3, [r7, #4]
 800bca4:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800bca6:	687b      	ldr	r3, [r7, #4]
 800bca8:	2200      	movs	r2, #0
 800bcaa:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800bcae:	687b      	ldr	r3, [r7, #4]
 800bcb0:	2200      	movs	r2, #0
 800bcb2:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800bcb6:	687b      	ldr	r3, [r7, #4]
 800bcb8:	4a04      	ldr	r2, [pc, #16]	; (800bccc <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800bcba:	6013      	str	r3, [r2, #0]
    }
 800bcbc:	687b      	ldr	r3, [r7, #4]
 800bcbe:	4618      	mov	r0, r3
 800bcc0:	3708      	adds	r7, #8
 800bcc2:	46bd      	mov	sp, r7
 800bcc4:	bd80      	pop	{r7, pc}
 800bcc6:	bf00      	nop
 800bcc8:	08024c10 	.word	0x08024c10
 800bccc:	24001f24 	.word	0x24001f24

0800bcd0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800bcd0:	b580      	push	{r7, lr}
 800bcd2:	b082      	sub	sp, #8
 800bcd4:	af00      	add	r7, sp, #0
 800bcd6:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800bcd8:	6878      	ldr	r0, [r7, #4]
 800bcda:	f000 f804 	bl	800bce6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800bcde:	bf00      	nop
 800bce0:	3708      	adds	r7, #8
 800bce2:	46bd      	mov	sp, r7
 800bce4:	bd80      	pop	{r7, pc}

0800bce6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800bce6:	b580      	push	{r7, lr}
 800bce8:	b082      	sub	sp, #8
 800bcea:	af00      	add	r7, sp, #0
 800bcec:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800bcee:	687b      	ldr	r3, [r7, #4]
 800bcf0:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bcf4:	2b00      	cmp	r3, #0
 800bcf6:	d00f      	beq.n	800bd18 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800bcf8:	687b      	ldr	r3, [r7, #4]
 800bcfa:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800bcfe:	687b      	ldr	r3, [r7, #4]
 800bd00:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bd04:	681b      	ldr	r3, [r3, #0]
 800bd06:	330c      	adds	r3, #12
 800bd08:	681b      	ldr	r3, [r3, #0]
 800bd0a:	4610      	mov	r0, r2
 800bd0c:	4798      	blx	r3
 800bd0e:	4603      	mov	r3, r0
 800bd10:	2b00      	cmp	r3, #0
 800bd12:	d001      	beq.n	800bd18 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800bd14:	2301      	movs	r3, #1
 800bd16:	e000      	b.n	800bd1a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800bd18:	2300      	movs	r3, #0
 800bd1a:	2b00      	cmp	r3, #0
 800bd1c:	d00e      	beq.n	800bd3c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800bd1e:	687b      	ldr	r3, [r7, #4]
 800bd20:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800bd24:	687b      	ldr	r3, [r7, #4]
 800bd26:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bd2a:	681b      	ldr	r3, [r3, #0]
 800bd2c:	3308      	adds	r3, #8
 800bd2e:	681b      	ldr	r3, [r3, #0]
 800bd30:	4610      	mov	r0, r2
 800bd32:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800bd34:	687b      	ldr	r3, [r7, #4]
 800bd36:	2200      	movs	r2, #0
 800bd38:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800bd3c:	bf00      	nop
 800bd3e:	3708      	adds	r7, #8
 800bd40:	46bd      	mov	sp, r7
 800bd42:	bd80      	pop	{r7, pc}

0800bd44 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800bd44:	b480      	push	{r7}
 800bd46:	b083      	sub	sp, #12
 800bd48:	af00      	add	r7, sp, #0
 800bd4a:	6078      	str	r0, [r7, #4]
 800bd4c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800bd4e:	687b      	ldr	r3, [r7, #4]
 800bd50:	683a      	ldr	r2, [r7, #0]
 800bd52:	601a      	str	r2, [r3, #0]
    }
 800bd54:	bf00      	nop
 800bd56:	370c      	adds	r7, #12
 800bd58:	46bd      	mov	sp, r7
 800bd5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd5e:	4770      	bx	lr

0800bd60 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800bd60:	b580      	push	{r7, lr}
 800bd62:	b082      	sub	sp, #8
 800bd64:	af00      	add	r7, sp, #0
 800bd66:	6078      	str	r0, [r7, #4]
 800bd68:	4a05      	ldr	r2, [pc, #20]	; (800bd80 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800bd6a:	687b      	ldr	r3, [r7, #4]
 800bd6c:	601a      	str	r2, [r3, #0]
 800bd6e:	687b      	ldr	r3, [r7, #4]
 800bd70:	4618      	mov	r0, r3
 800bd72:	f7ff ff69 	bl	800bc48 <_ZN8touchgfx11ApplicationD1Ev>
 800bd76:	687b      	ldr	r3, [r7, #4]
 800bd78:	4618      	mov	r0, r3
 800bd7a:	3708      	adds	r7, #8
 800bd7c:	46bd      	mov	sp, r7
 800bd7e:	bd80      	pop	{r7, pc}
 800bd80:	08024c10 	.word	0x08024c10

0800bd84 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800bd84:	b580      	push	{r7, lr}
 800bd86:	b082      	sub	sp, #8
 800bd88:	af00      	add	r7, sp, #0
 800bd8a:	6078      	str	r0, [r7, #4]
 800bd8c:	6878      	ldr	r0, [r7, #4]
 800bd8e:	f7ff ffe7 	bl	800bd60 <_ZN8touchgfx14MVPApplicationD1Ev>
 800bd92:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800bd96:	6878      	ldr	r0, [r7, #4]
 800bd98:	f016 fe79 	bl	8022a8e <_ZdlPvj>
 800bd9c:	687b      	ldr	r3, [r7, #4]
 800bd9e:	4618      	mov	r0, r3
 800bda0:	3708      	adds	r7, #8
 800bda2:	46bd      	mov	sp, r7
 800bda4:	bd80      	pop	{r7, pc}
	...

0800bda8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800bda8:	b580      	push	{r7, lr}
 800bdaa:	b082      	sub	sp, #8
 800bdac:	af00      	add	r7, sp, #0
 800bdae:	6078      	str	r0, [r7, #4]
 800bdb0:	4a08      	ldr	r2, [pc, #32]	; (800bdd4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800bdb2:	687b      	ldr	r3, [r7, #4]
 800bdb4:	601a      	str	r2, [r3, #0]
 800bdb6:	687b      	ldr	r3, [r7, #4]
 800bdb8:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800bdbc:	4618      	mov	r0, r3
 800bdbe:	f000 facb 	bl	800c358 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800bdc2:	687b      	ldr	r3, [r7, #4]
 800bdc4:	4618      	mov	r0, r3
 800bdc6:	f7ff ffcb 	bl	800bd60 <_ZN8touchgfx14MVPApplicationD1Ev>
 800bdca:	687b      	ldr	r3, [r7, #4]
 800bdcc:	4618      	mov	r0, r3
 800bdce:	3708      	adds	r7, #8
 800bdd0:	46bd      	mov	sp, r7
 800bdd2:	bd80      	pop	{r7, pc}
 800bdd4:	08024ba4 	.word	0x08024ba4

0800bdd8 <_ZN23FrontendApplicationBaseD0Ev>:
 800bdd8:	b580      	push	{r7, lr}
 800bdda:	b082      	sub	sp, #8
 800bddc:	af00      	add	r7, sp, #0
 800bdde:	6078      	str	r0, [r7, #4]
 800bde0:	6878      	ldr	r0, [r7, #4]
 800bde2:	f7ff ffe1 	bl	800bda8 <_ZN23FrontendApplicationBaseD1Ev>
 800bde6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800bdea:	6878      	ldr	r0, [r7, #4]
 800bdec:	f016 fe4f 	bl	8022a8e <_ZdlPvj>
 800bdf0:	687b      	ldr	r3, [r7, #4]
 800bdf2:	4618      	mov	r0, r3
 800bdf4:	3708      	adds	r7, #8
 800bdf6:	46bd      	mov	sp, r7
 800bdf8:	bd80      	pop	{r7, pc}

0800bdfa <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800bdfa:	b580      	push	{r7, lr}
 800bdfc:	b082      	sub	sp, #8
 800bdfe:	af00      	add	r7, sp, #0
 800be00:	6078      	str	r0, [r7, #4]
    {
        gotoscreenScreenNoTransition();
 800be02:	6878      	ldr	r0, [r7, #4]
 800be04:	f000 f882 	bl	800bf0c <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800be08:	bf00      	nop
 800be0a:	3708      	adds	r7, #8
 800be0c:	46bd      	mov	sp, r7
 800be0e:	bd80      	pop	{r7, pc}

0800be10 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800be10:	b480      	push	{r7}
 800be12:	b083      	sub	sp, #12
 800be14:	af00      	add	r7, sp, #0
 800be16:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800be18:	687b      	ldr	r3, [r7, #4]
 800be1a:	2201      	movs	r2, #1
 800be1c:	721a      	strb	r2, [r3, #8]
    }
 800be1e:	bf00      	nop
 800be20:	370c      	adds	r7, #12
 800be22:	46bd      	mov	sp, r7
 800be24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be28:	4770      	bx	lr

0800be2a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800be2a:	b480      	push	{r7}
 800be2c:	b083      	sub	sp, #12
 800be2e:	af00      	add	r7, sp, #0
 800be30:	6078      	str	r0, [r7, #4]
 800be32:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800be34:	687b      	ldr	r3, [r7, #4]
 800be36:	683a      	ldr	r2, [r7, #0]
 800be38:	605a      	str	r2, [r3, #4]
    }
 800be3a:	bf00      	nop
 800be3c:	370c      	adds	r7, #12
 800be3e:	46bd      	mov	sp, r7
 800be40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be44:	4770      	bx	lr
	...

0800be48 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800be48:	b580      	push	{r7, lr}
 800be4a:	b084      	sub	sp, #16
 800be4c:	af00      	add	r7, sp, #0
 800be4e:	60f8      	str	r0, [r7, #12]
 800be50:	60b9      	str	r1, [r7, #8]
 800be52:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800be54:	68fb      	ldr	r3, [r7, #12]
 800be56:	4618      	mov	r0, r3
 800be58:	f7ff ff1a 	bl	800bc90 <_ZN8touchgfx14MVPApplicationC1Ev>
 800be5c:	4a16      	ldr	r2, [pc, #88]	; (800beb8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800be5e:	68fb      	ldr	r3, [r7, #12]
 800be60:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800be62:	68fb      	ldr	r3, [r7, #12]
 800be64:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800be68:	4618      	mov	r0, r3
 800be6a:	f000 f8a5 	bl	800bfb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800be6e:	68fb      	ldr	r3, [r7, #12]
 800be70:	687a      	ldr	r2, [r7, #4]
 800be72:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800be76:	68fb      	ldr	r3, [r7, #12]
 800be78:	68ba      	ldr	r2, [r7, #8]
 800be7a:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800be7e:	f7ff fe49 	bl	800bb14 <_ZN8touchgfx3HAL11getInstanceEv>
 800be82:	4603      	mov	r3, r0
 800be84:	681a      	ldr	r2, [r3, #0]
 800be86:	3208      	adds	r2, #8
 800be88:	6812      	ldr	r2, [r2, #0]
 800be8a:	2100      	movs	r1, #0
 800be8c:	4618      	mov	r0, r3
 800be8e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800be90:	2000      	movs	r0, #0
 800be92:	f001 f929 	bl	800d0e8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800be96:	f7ff fe49 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 800be9a:	4603      	mov	r3, r0
 800be9c:	4618      	mov	r0, r3
 800be9e:	f00f fa9c 	bl	801b3da <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800bea2:	f7ff fe43 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 800bea6:	4603      	mov	r3, r0
 800bea8:	4618      	mov	r0, r3
 800beaa:	f00f fb11 	bl	801b4d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800beae:	68fb      	ldr	r3, [r7, #12]
 800beb0:	4618      	mov	r0, r3
 800beb2:	3710      	adds	r7, #16
 800beb4:	46bd      	mov	sp, r7
 800beb6:	bd80      	pop	{r7, pc}
 800beb8:	08024ba4 	.word	0x08024ba4

0800bebc <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800bebc:	b480      	push	{r7}
 800bebe:	b083      	sub	sp, #12
 800bec0:	af00      	add	r7, sp, #0
 800bec2:	6078      	str	r0, [r7, #4]
 800bec4:	6039      	str	r1, [r7, #0]
 800bec6:	687b      	ldr	r3, [r7, #4]
 800bec8:	4618      	mov	r0, r3
 800beca:	370c      	adds	r7, #12
 800becc:	46bd      	mov	sp, r7
 800bece:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bed2:	4770      	bx	lr

0800bed4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800bed4:	b580      	push	{r7, lr}
 800bed6:	b082      	sub	sp, #8
 800bed8:	af00      	add	r7, sp, #0
 800beda:	6078      	str	r0, [r7, #4]
 800bedc:	6039      	str	r1, [r7, #0]
 800bede:	687b      	ldr	r3, [r7, #4]
 800bee0:	683a      	ldr	r2, [r7, #0]
 800bee2:	4611      	mov	r1, r2
 800bee4:	4618      	mov	r0, r3
 800bee6:	f7ff ffe9 	bl	800bebc <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800beea:	683b      	ldr	r3, [r7, #0]
 800beec:	685a      	ldr	r2, [r3, #4]
 800beee:	687b      	ldr	r3, [r7, #4]
 800bef0:	605a      	str	r2, [r3, #4]
 800bef2:	687b      	ldr	r3, [r7, #4]
 800bef4:	683a      	ldr	r2, [r7, #0]
 800bef6:	3308      	adds	r3, #8
 800bef8:	3208      	adds	r2, #8
 800befa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800befe:	e883 0003 	stmia.w	r3, {r0, r1}
 800bf02:	687b      	ldr	r3, [r7, #4]
 800bf04:	4618      	mov	r0, r3
 800bf06:	3708      	adds	r7, #8
 800bf08:	46bd      	mov	sp, r7
 800bf0a:	bd80      	pop	{r7, pc}

0800bf0c <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>:
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
 800bf0c:	b590      	push	{r4, r7, lr}
 800bf0e:	b089      	sub	sp, #36	; 0x24
 800bf10:	af00      	add	r7, sp, #0
 800bf12:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenScreenNoTransitionImpl);
 800bf14:	687b      	ldr	r3, [r7, #4]
 800bf16:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800bf1a:	4b10      	ldr	r3, [pc, #64]	; (800bf5c <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv+0x50>)
 800bf1c:	61bb      	str	r3, [r7, #24]
 800bf1e:	2300      	movs	r3, #0
 800bf20:	61fb      	str	r3, [r7, #28]
 800bf22:	f107 0008 	add.w	r0, r7, #8
 800bf26:	f107 0318 	add.w	r3, r7, #24
 800bf2a:	cb0c      	ldmia	r3, {r2, r3}
 800bf2c:	6879      	ldr	r1, [r7, #4]
 800bf2e:	f000 f85f 	bl	800bff0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800bf32:	f107 0308 	add.w	r3, r7, #8
 800bf36:	4619      	mov	r1, r3
 800bf38:	4620      	mov	r0, r4
 800bf3a:	f7ff ffcb 	bl	800bed4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800bf3e:	f107 0308 	add.w	r3, r7, #8
 800bf42:	4618      	mov	r0, r3
 800bf44:	f000 fa08 	bl	800c358 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800bf48:	687b      	ldr	r3, [r7, #4]
 800bf4a:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800bf4e:	687b      	ldr	r3, [r7, #4]
 800bf50:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800bf54:	bf00      	nop
 800bf56:	3724      	adds	r7, #36	; 0x24
 800bf58:	46bd      	mov	sp, r7
 800bf5a:	bd90      	pop	{r4, r7, pc}
 800bf5c:	0800bf61 	.word	0x0800bf61

0800bf60 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
 800bf60:	b580      	push	{r7, lr}
 800bf62:	b084      	sub	sp, #16
 800bf64:	af02      	add	r7, sp, #8
 800bf66:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800bf68:	687b      	ldr	r3, [r7, #4]
 800bf6a:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800bf6e:	687b      	ldr	r3, [r7, #4]
 800bf70:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800bf74:	461a      	mov	r2, r3
 800bf76:	687b      	ldr	r3, [r7, #4]
 800bf78:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800bf7c:	9300      	str	r3, [sp, #0]
 800bf7e:	4b04      	ldr	r3, [pc, #16]	; (800bf90 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x30>)
 800bf80:	4804      	ldr	r0, [pc, #16]	; (800bf94 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x34>)
 800bf82:	f000 f867 	bl	800c054 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800bf86:	bf00      	nop
 800bf88:	3708      	adds	r7, #8
 800bf8a:	46bd      	mov	sp, r7
 800bf8c:	bd80      	pop	{r7, pc}
 800bf8e:	bf00      	nop
 800bf90:	24001f18 	.word	0x24001f18
 800bf94:	24001f14 	.word	0x24001f14

0800bf98 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800bf98:	b480      	push	{r7}
 800bf9a:	b083      	sub	sp, #12
 800bf9c:	af00      	add	r7, sp, #0
 800bf9e:	6078      	str	r0, [r7, #4]
 800bfa0:	4a04      	ldr	r2, [pc, #16]	; (800bfb4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800bfa2:	687b      	ldr	r3, [r7, #4]
 800bfa4:	601a      	str	r2, [r3, #0]
 800bfa6:	687b      	ldr	r3, [r7, #4]
 800bfa8:	4618      	mov	r0, r3
 800bfaa:	370c      	adds	r7, #12
 800bfac:	46bd      	mov	sp, r7
 800bfae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfb2:	4770      	bx	lr
 800bfb4:	08024c88 	.word	0x08024c88

0800bfb8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800bfb8:	b580      	push	{r7, lr}
 800bfba:	b082      	sub	sp, #8
 800bfbc:	af00      	add	r7, sp, #0
 800bfbe:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800bfc0:	687b      	ldr	r3, [r7, #4]
 800bfc2:	4618      	mov	r0, r3
 800bfc4:	f7ff ffe8 	bl	800bf98 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800bfc8:	4a08      	ldr	r2, [pc, #32]	; (800bfec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800bfca:	687b      	ldr	r3, [r7, #4]
 800bfcc:	601a      	str	r2, [r3, #0]
 800bfce:	687b      	ldr	r3, [r7, #4]
 800bfd0:	2200      	movs	r2, #0
 800bfd2:	605a      	str	r2, [r3, #4]
 800bfd4:	687b      	ldr	r3, [r7, #4]
 800bfd6:	2200      	movs	r2, #0
 800bfd8:	609a      	str	r2, [r3, #8]
 800bfda:	687b      	ldr	r3, [r7, #4]
 800bfdc:	2200      	movs	r2, #0
 800bfde:	60da      	str	r2, [r3, #12]
    {
    }
 800bfe0:	687b      	ldr	r3, [r7, #4]
 800bfe2:	4618      	mov	r0, r3
 800bfe4:	3708      	adds	r7, #8
 800bfe6:	46bd      	mov	sp, r7
 800bfe8:	bd80      	pop	{r7, pc}
 800bfea:	bf00      	nop
 800bfec:	08024bf8 	.word	0x08024bf8

0800bff0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800bff0:	b580      	push	{r7, lr}
 800bff2:	b084      	sub	sp, #16
 800bff4:	af00      	add	r7, sp, #0
 800bff6:	60f8      	str	r0, [r7, #12]
 800bff8:	60b9      	str	r1, [r7, #8]
 800bffa:	4639      	mov	r1, r7
 800bffc:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800c000:	68fb      	ldr	r3, [r7, #12]
 800c002:	4618      	mov	r0, r3
 800c004:	f7ff ffc8 	bl	800bf98 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800c008:	4a08      	ldr	r2, [pc, #32]	; (800c02c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800c00a:	68fb      	ldr	r3, [r7, #12]
 800c00c:	601a      	str	r2, [r3, #0]
 800c00e:	68fb      	ldr	r3, [r7, #12]
 800c010:	68ba      	ldr	r2, [r7, #8]
 800c012:	605a      	str	r2, [r3, #4]
 800c014:	68fb      	ldr	r3, [r7, #12]
 800c016:	3308      	adds	r3, #8
 800c018:	463a      	mov	r2, r7
 800c01a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c01e:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800c022:	68fb      	ldr	r3, [r7, #12]
 800c024:	4618      	mov	r0, r3
 800c026:	3710      	adds	r7, #16
 800c028:	46bd      	mov	sp, r7
 800c02a:	bd80      	pop	{r7, pc}
 800c02c:	08024bf8 	.word	0x08024bf8

0800c030 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800c030:	b580      	push	{r7, lr}
 800c032:	b082      	sub	sp, #8
 800c034:	af00      	add	r7, sp, #0
 800c036:	6078      	str	r0, [r7, #4]
 800c038:	687b      	ldr	r3, [r7, #4]
 800c03a:	4618      	mov	r0, r3
 800c03c:	f7ff fd92 	bl	800bb64 <_ZN8touchgfx10TransitionC1Ev>
 800c040:	4a03      	ldr	r2, [pc, #12]	; (800c050 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800c042:	687b      	ldr	r3, [r7, #4]
 800c044:	601a      	str	r2, [r3, #0]
 800c046:	687b      	ldr	r3, [r7, #4]
 800c048:	4618      	mov	r0, r3
 800c04a:	3708      	adds	r7, #8
 800c04c:	46bd      	mov	sp, r7
 800c04e:	bd80      	pop	{r7, pc}
 800c050:	08024b80 	.word	0x08024b80

0800c054 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800c054:	b590      	push	{r4, r7, lr}
 800c056:	b08f      	sub	sp, #60	; 0x3c
 800c058:	af00      	add	r7, sp, #0
 800c05a:	60f8      	str	r0, [r7, #12]
 800c05c:	60b9      	str	r1, [r7, #8]
 800c05e:	607a      	str	r2, [r7, #4]
 800c060:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800c062:	687b      	ldr	r3, [r7, #4]
 800c064:	689a      	ldr	r2, [r3, #8]
 800c066:	687b      	ldr	r3, [r7, #4]
 800c068:	689b      	ldr	r3, [r3, #8]
 800c06a:	681b      	ldr	r3, [r3, #0]
 800c06c:	3320      	adds	r3, #32
 800c06e:	681b      	ldr	r3, [r3, #0]
 800c070:	4610      	mov	r0, r2
 800c072:	4798      	blx	r3
 800c074:	4603      	mov	r3, r0
 800c076:	2bdf      	cmp	r3, #223	; 0xdf
 800c078:	d805      	bhi.n	800c086 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 800c07a:	4b7d      	ldr	r3, [pc, #500]	; (800c270 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x21c>)
 800c07c:	4a7d      	ldr	r2, [pc, #500]	; (800c274 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c07e:	21a3      	movs	r1, #163	; 0xa3
 800c080:	487d      	ldr	r0, [pc, #500]	; (800c278 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c082:	f016 fd33 	bl	8022aec <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800c086:	687b      	ldr	r3, [r7, #4]
 800c088:	685a      	ldr	r2, [r3, #4]
 800c08a:	687b      	ldr	r3, [r7, #4]
 800c08c:	685b      	ldr	r3, [r3, #4]
 800c08e:	681b      	ldr	r3, [r3, #0]
 800c090:	3320      	adds	r3, #32
 800c092:	681b      	ldr	r3, [r3, #0]
 800c094:	4610      	mov	r0, r2
 800c096:	4798      	blx	r3
 800c098:	4603      	mov	r3, r0
 800c09a:	2b0f      	cmp	r3, #15
 800c09c:	d805      	bhi.n	800c0aa <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x56>
 800c09e:	4b77      	ldr	r3, [pc, #476]	; (800c27c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c0a0:	4a74      	ldr	r2, [pc, #464]	; (800c274 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c0a2:	21a4      	movs	r1, #164	; 0xa4
 800c0a4:	4874      	ldr	r0, [pc, #464]	; (800c278 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c0a6:	f016 fd21 	bl	8022aec <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800c0aa:	687b      	ldr	r3, [r7, #4]
 800c0ac:	68da      	ldr	r2, [r3, #12]
 800c0ae:	687b      	ldr	r3, [r7, #4]
 800c0b0:	68db      	ldr	r3, [r3, #12]
 800c0b2:	681b      	ldr	r3, [r3, #0]
 800c0b4:	3320      	adds	r3, #32
 800c0b6:	681b      	ldr	r3, [r3, #0]
 800c0b8:	4610      	mov	r0, r2
 800c0ba:	4798      	blx	r3
 800c0bc:	4603      	mov	r3, r0
 800c0be:	2b0b      	cmp	r3, #11
 800c0c0:	d805      	bhi.n	800c0ce <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
 800c0c2:	4b6f      	ldr	r3, [pc, #444]	; (800c280 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800c0c4:	4a6b      	ldr	r2, [pc, #428]	; (800c274 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c0c6:	21a5      	movs	r1, #165	; 0xa5
 800c0c8:	486b      	ldr	r0, [pc, #428]	; (800c278 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c0ca:	f016 fd0f 	bl	8022aec <__assert_func>
 800c0ce:	68fb      	ldr	r3, [r7, #12]
 800c0d0:	62bb      	str	r3, [r7, #40]	; 0x28
 800c0d2:	68bb      	ldr	r3, [r7, #8]
 800c0d4:	627b      	str	r3, [r7, #36]	; 0x24
 800c0d6:	683b      	ldr	r3, [r7, #0]
 800c0d8:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c0da:	f006 fbb5 	bl	8012848 <_ZN8touchgfx11Application11getInstanceEv>
 800c0de:	4603      	mov	r3, r0
 800c0e0:	4618      	mov	r0, r3
 800c0e2:	f7ff fce9 	bl	800bab8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c0e6:	6a3b      	ldr	r3, [r7, #32]
 800c0e8:	681b      	ldr	r3, [r3, #0]
 800c0ea:	2b00      	cmp	r3, #0
 800c0ec:	d008      	beq.n	800c100 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xac>
        (*currentTrans)->tearDown();
 800c0ee:	6a3b      	ldr	r3, [r7, #32]
 800c0f0:	681a      	ldr	r2, [r3, #0]
 800c0f2:	6a3b      	ldr	r3, [r7, #32]
 800c0f4:	681b      	ldr	r3, [r3, #0]
 800c0f6:	681b      	ldr	r3, [r3, #0]
 800c0f8:	330c      	adds	r3, #12
 800c0fa:	681b      	ldr	r3, [r3, #0]
 800c0fc:	4610      	mov	r0, r2
 800c0fe:	4798      	blx	r3
    if (*currentTrans)
 800c100:	6a3b      	ldr	r3, [r7, #32]
 800c102:	681b      	ldr	r3, [r3, #0]
 800c104:	2b00      	cmp	r3, #0
 800c106:	d007      	beq.n	800c118 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc4>
        (*currentTrans)->~Transition();
 800c108:	6a3b      	ldr	r3, [r7, #32]
 800c10a:	681a      	ldr	r2, [r3, #0]
 800c10c:	6a3b      	ldr	r3, [r7, #32]
 800c10e:	681b      	ldr	r3, [r3, #0]
 800c110:	681b      	ldr	r3, [r3, #0]
 800c112:	681b      	ldr	r3, [r3, #0]
 800c114:	4610      	mov	r0, r2
 800c116:	4798      	blx	r3
    if (*currentScreen)
 800c118:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c11a:	681b      	ldr	r3, [r3, #0]
 800c11c:	2b00      	cmp	r3, #0
 800c11e:	d008      	beq.n	800c132 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xde>
        (*currentScreen)->tearDownScreen();
 800c120:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c122:	681a      	ldr	r2, [r3, #0]
 800c124:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c126:	681b      	ldr	r3, [r3, #0]
 800c128:	681b      	ldr	r3, [r3, #0]
 800c12a:	3314      	adds	r3, #20
 800c12c:	681b      	ldr	r3, [r3, #0]
 800c12e:	4610      	mov	r0, r2
 800c130:	4798      	blx	r3
    if (*currentPresenter)
 800c132:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c134:	681b      	ldr	r3, [r3, #0]
 800c136:	2b00      	cmp	r3, #0
 800c138:	d008      	beq.n	800c14c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf8>
        (*currentPresenter)->deactivate();
 800c13a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c13c:	681a      	ldr	r2, [r3, #0]
 800c13e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c140:	681b      	ldr	r3, [r3, #0]
 800c142:	681b      	ldr	r3, [r3, #0]
 800c144:	3304      	adds	r3, #4
 800c146:	681b      	ldr	r3, [r3, #0]
 800c148:	4610      	mov	r0, r2
 800c14a:	4798      	blx	r3
    if (*currentScreen)
 800c14c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c14e:	681b      	ldr	r3, [r3, #0]
 800c150:	2b00      	cmp	r3, #0
 800c152:	d007      	beq.n	800c164 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x110>
        (*currentScreen)->~Screen();
 800c154:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c156:	681a      	ldr	r2, [r3, #0]
 800c158:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c15a:	681b      	ldr	r3, [r3, #0]
 800c15c:	681b      	ldr	r3, [r3, #0]
 800c15e:	681b      	ldr	r3, [r3, #0]
 800c160:	4610      	mov	r0, r2
 800c162:	4798      	blx	r3
    if (*currentPresenter)
 800c164:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c166:	681b      	ldr	r3, [r3, #0]
 800c168:	2b00      	cmp	r3, #0
 800c16a:	d008      	beq.n	800c17e <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
        (*currentPresenter)->~Presenter();
 800c16c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c16e:	681a      	ldr	r2, [r3, #0]
 800c170:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c172:	681b      	ldr	r3, [r3, #0]
 800c174:	681b      	ldr	r3, [r3, #0]
 800c176:	3308      	adds	r3, #8
 800c178:	681b      	ldr	r3, [r3, #0]
 800c17a:	4610      	mov	r0, r2
 800c17c:	4798      	blx	r3
}
 800c17e:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c180:	687b      	ldr	r3, [r7, #4]
 800c182:	68db      	ldr	r3, [r3, #12]
 800c184:	2100      	movs	r1, #0
 800c186:	4618      	mov	r0, r3
 800c188:	f000 f87c 	bl	800c284 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800c18c:	4603      	mov	r3, r0
 800c18e:	4619      	mov	r1, r3
 800c190:	200c      	movs	r0, #12
 800c192:	f7ff fbfb 	bl	800b98c <_ZnwjPv>
 800c196:	4604      	mov	r4, r0
 800c198:	4620      	mov	r0, r4
 800c19a:	f7ff ff49 	bl	800c030 <_ZN8touchgfx12NoTransitionC1Ev>
 800c19e:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c1a0:	687b      	ldr	r3, [r7, #4]
 800c1a2:	689b      	ldr	r3, [r3, #8]
 800c1a4:	2100      	movs	r1, #0
 800c1a6:	4618      	mov	r0, r3
 800c1a8:	f000 f87f 	bl	800c2aa <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>
 800c1ac:	4603      	mov	r3, r0
 800c1ae:	4619      	mov	r1, r3
 800c1b0:	20e0      	movs	r0, #224	; 0xe0
 800c1b2:	f7ff fbeb 	bl	800b98c <_ZnwjPv>
 800c1b6:	4604      	mov	r4, r0
 800c1b8:	4620      	mov	r0, r4
 800c1ba:	f001 f9a7 	bl	800d50c <_ZN10screenViewC1Ev>
 800c1be:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c1c0:	687b      	ldr	r3, [r7, #4]
 800c1c2:	685b      	ldr	r3, [r3, #4]
 800c1c4:	2100      	movs	r1, #0
 800c1c6:	4618      	mov	r0, r3
 800c1c8:	f000 f882 	bl	800c2d0 <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>
 800c1cc:	4603      	mov	r3, r0
 800c1ce:	4619      	mov	r1, r3
 800c1d0:	2010      	movs	r0, #16
 800c1d2:	f7ff fbdb 	bl	800b98c <_ZnwjPv>
 800c1d6:	4604      	mov	r4, r0
 800c1d8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c1da:	4620      	mov	r0, r4
 800c1dc:	f001 f940 	bl	800d460 <_ZN15screenPresenterC1ER10screenView>
 800c1e0:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800c1e2:	683b      	ldr	r3, [r7, #0]
 800c1e4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c1e6:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c1e8:	68bb      	ldr	r3, [r7, #8]
 800c1ea:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c1ec:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c1ee:	68fb      	ldr	r3, [r7, #12]
 800c1f0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c1f2:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c1f4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c1f6:	2b00      	cmp	r3, #0
 800c1f8:	d002      	beq.n	800c200 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>
 800c1fa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c1fc:	3304      	adds	r3, #4
 800c1fe:	e000      	b.n	800c202 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ae>
 800c200:	2300      	movs	r3, #0
 800c202:	4619      	mov	r1, r3
 800c204:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800c206:	f7ff fd9d 	bl	800bd44 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c20a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c20c:	3304      	adds	r3, #4
 800c20e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800c210:	4618      	mov	r0, r3
 800c212:	f7ff fe0a 	bl	800be2a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c216:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c218:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c21a:	4618      	mov	r0, r3
 800c21c:	f000 f86b 	bl	800c2f6 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>
 800c220:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c222:	61fb      	str	r3, [r7, #28]
 800c224:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c226:	61bb      	str	r3, [r7, #24]
 800c228:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c22a:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c22c:	69fb      	ldr	r3, [r7, #28]
 800c22e:	681b      	ldr	r3, [r3, #0]
 800c230:	330c      	adds	r3, #12
 800c232:	681b      	ldr	r3, [r3, #0]
 800c234:	69f8      	ldr	r0, [r7, #28]
 800c236:	4798      	blx	r3
    newPresenter->activate();
 800c238:	69bb      	ldr	r3, [r7, #24]
 800c23a:	681b      	ldr	r3, [r3, #0]
 800c23c:	681b      	ldr	r3, [r3, #0]
 800c23e:	69b8      	ldr	r0, [r7, #24]
 800c240:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c242:	6979      	ldr	r1, [r7, #20]
 800c244:	69f8      	ldr	r0, [r7, #28]
 800c246:	f007 ffc3 	bl	80141d0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c24a:	697b      	ldr	r3, [r7, #20]
 800c24c:	681b      	ldr	r3, [r3, #0]
 800c24e:	3310      	adds	r3, #16
 800c250:	681b      	ldr	r3, [r3, #0]
 800c252:	6978      	ldr	r0, [r7, #20]
 800c254:	4798      	blx	r3
    newTransition->invalidate();
 800c256:	697b      	ldr	r3, [r7, #20]
 800c258:	681b      	ldr	r3, [r3, #0]
 800c25a:	3314      	adds	r3, #20
 800c25c:	681b      	ldr	r3, [r3, #0]
 800c25e:	6978      	ldr	r0, [r7, #20]
 800c260:	4798      	blx	r3
}
 800c262:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800c264:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c266:	4618      	mov	r0, r3
 800c268:	373c      	adds	r7, #60	; 0x3c
 800c26a:	46bd      	mov	sp, r7
 800c26c:	bd90      	pop	{r4, r7, pc}
 800c26e:	bf00      	nop
 800c270:	08023b58 	.word	0x08023b58
 800c274:	08023be8 	.word	0x08023be8
 800c278:	08023cec 	.word	0x08023cec
 800c27c:	08023d30 	.word	0x08023d30
 800c280:	08023dd4 	.word	0x08023dd4

0800c284 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800c284:	b580      	push	{r7, lr}
 800c286:	b082      	sub	sp, #8
 800c288:	af00      	add	r7, sp, #0
 800c28a:	6078      	str	r0, [r7, #4]
 800c28c:	460b      	mov	r3, r1
 800c28e:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800c290:	687b      	ldr	r3, [r7, #4]
 800c292:	681b      	ldr	r3, [r3, #0]
 800c294:	3324      	adds	r3, #36	; 0x24
 800c296:	681b      	ldr	r3, [r3, #0]
 800c298:	887a      	ldrh	r2, [r7, #2]
 800c29a:	4611      	mov	r1, r2
 800c29c:	6878      	ldr	r0, [r7, #4]
 800c29e:	4798      	blx	r3
 800c2a0:	4603      	mov	r3, r0
    }
 800c2a2:	4618      	mov	r0, r3
 800c2a4:	3708      	adds	r7, #8
 800c2a6:	46bd      	mov	sp, r7
 800c2a8:	bd80      	pop	{r7, pc}

0800c2aa <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>:
    T& at(const uint16_t index)
 800c2aa:	b580      	push	{r7, lr}
 800c2ac:	b082      	sub	sp, #8
 800c2ae:	af00      	add	r7, sp, #0
 800c2b0:	6078      	str	r0, [r7, #4]
 800c2b2:	460b      	mov	r3, r1
 800c2b4:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c2b6:	687b      	ldr	r3, [r7, #4]
 800c2b8:	681b      	ldr	r3, [r3, #0]
 800c2ba:	3324      	adds	r3, #36	; 0x24
 800c2bc:	681b      	ldr	r3, [r3, #0]
 800c2be:	887a      	ldrh	r2, [r7, #2]
 800c2c0:	4611      	mov	r1, r2
 800c2c2:	6878      	ldr	r0, [r7, #4]
 800c2c4:	4798      	blx	r3
 800c2c6:	4603      	mov	r3, r0
    }
 800c2c8:	4618      	mov	r0, r3
 800c2ca:	3708      	adds	r7, #8
 800c2cc:	46bd      	mov	sp, r7
 800c2ce:	bd80      	pop	{r7, pc}

0800c2d0 <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>:
    T& at(const uint16_t index)
 800c2d0:	b580      	push	{r7, lr}
 800c2d2:	b082      	sub	sp, #8
 800c2d4:	af00      	add	r7, sp, #0
 800c2d6:	6078      	str	r0, [r7, #4]
 800c2d8:	460b      	mov	r3, r1
 800c2da:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c2dc:	687b      	ldr	r3, [r7, #4]
 800c2de:	681b      	ldr	r3, [r3, #0]
 800c2e0:	3324      	adds	r3, #36	; 0x24
 800c2e2:	681b      	ldr	r3, [r3, #0]
 800c2e4:	887a      	ldrh	r2, [r7, #2]
 800c2e6:	4611      	mov	r1, r2
 800c2e8:	6878      	ldr	r0, [r7, #4]
 800c2ea:	4798      	blx	r3
 800c2ec:	4603      	mov	r3, r0
    }
 800c2ee:	4618      	mov	r0, r3
 800c2f0:	3708      	adds	r7, #8
 800c2f2:	46bd      	mov	sp, r7
 800c2f4:	bd80      	pop	{r7, pc}

0800c2f6 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800c2f6:	b480      	push	{r7}
 800c2f8:	b083      	sub	sp, #12
 800c2fa:	af00      	add	r7, sp, #0
 800c2fc:	6078      	str	r0, [r7, #4]
 800c2fe:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800c300:	687b      	ldr	r3, [r7, #4]
 800c302:	683a      	ldr	r2, [r7, #0]
 800c304:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c306:	bf00      	nop
 800c308:	370c      	adds	r7, #12
 800c30a:	46bd      	mov	sp, r7
 800c30c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c310:	4770      	bx	lr
	...

0800c314 <_ZN8touchgfx12NoTransitionD1Ev>:
 800c314:	b580      	push	{r7, lr}
 800c316:	b082      	sub	sp, #8
 800c318:	af00      	add	r7, sp, #0
 800c31a:	6078      	str	r0, [r7, #4]
 800c31c:	4a05      	ldr	r2, [pc, #20]	; (800c334 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	601a      	str	r2, [r3, #0]
 800c322:	687b      	ldr	r3, [r7, #4]
 800c324:	4618      	mov	r0, r3
 800c326:	f7ff fc33 	bl	800bb90 <_ZN8touchgfx10TransitionD1Ev>
 800c32a:	687b      	ldr	r3, [r7, #4]
 800c32c:	4618      	mov	r0, r3
 800c32e:	3708      	adds	r7, #8
 800c330:	46bd      	mov	sp, r7
 800c332:	bd80      	pop	{r7, pc}
 800c334:	08024b80 	.word	0x08024b80

0800c338 <_ZN8touchgfx12NoTransitionD0Ev>:
 800c338:	b580      	push	{r7, lr}
 800c33a:	b082      	sub	sp, #8
 800c33c:	af00      	add	r7, sp, #0
 800c33e:	6078      	str	r0, [r7, #4]
 800c340:	6878      	ldr	r0, [r7, #4]
 800c342:	f7ff ffe7 	bl	800c314 <_ZN8touchgfx12NoTransitionD1Ev>
 800c346:	210c      	movs	r1, #12
 800c348:	6878      	ldr	r0, [r7, #4]
 800c34a:	f016 fba0 	bl	8022a8e <_ZdlPvj>
 800c34e:	687b      	ldr	r3, [r7, #4]
 800c350:	4618      	mov	r0, r3
 800c352:	3708      	adds	r7, #8
 800c354:	46bd      	mov	sp, r7
 800c356:	bd80      	pop	{r7, pc}

0800c358 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c358:	b580      	push	{r7, lr}
 800c35a:	b082      	sub	sp, #8
 800c35c:	af00      	add	r7, sp, #0
 800c35e:	6078      	str	r0, [r7, #4]
 800c360:	4a05      	ldr	r2, [pc, #20]	; (800c378 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800c362:	687b      	ldr	r3, [r7, #4]
 800c364:	601a      	str	r2, [r3, #0]
 800c366:	687b      	ldr	r3, [r7, #4]
 800c368:	4618      	mov	r0, r3
 800c36a:	f7ff fbb3 	bl	800bad4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800c36e:	687b      	ldr	r3, [r7, #4]
 800c370:	4618      	mov	r0, r3
 800c372:	3708      	adds	r7, #8
 800c374:	46bd      	mov	sp, r7
 800c376:	bd80      	pop	{r7, pc}
 800c378:	08024bf8 	.word	0x08024bf8

0800c37c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800c37c:	b580      	push	{r7, lr}
 800c37e:	b082      	sub	sp, #8
 800c380:	af00      	add	r7, sp, #0
 800c382:	6078      	str	r0, [r7, #4]
 800c384:	6878      	ldr	r0, [r7, #4]
 800c386:	f7ff ffe7 	bl	800c358 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800c38a:	2110      	movs	r1, #16
 800c38c:	6878      	ldr	r0, [r7, #4]
 800c38e:	f016 fb7e 	bl	8022a8e <_ZdlPvj>
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	4618      	mov	r0, r3
 800c396:	3708      	adds	r7, #8
 800c398:	46bd      	mov	sp, r7
 800c39a:	bd80      	pop	{r7, pc}

0800c39c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800c39c:	b580      	push	{r7, lr}
 800c39e:	b082      	sub	sp, #8
 800c3a0:	af00      	add	r7, sp, #0
 800c3a2:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800c3a4:	687b      	ldr	r3, [r7, #4]
 800c3a6:	685b      	ldr	r3, [r3, #4]
 800c3a8:	687a      	ldr	r2, [r7, #4]
 800c3aa:	68d2      	ldr	r2, [r2, #12]
 800c3ac:	1052      	asrs	r2, r2, #1
 800c3ae:	1899      	adds	r1, r3, r2
 800c3b0:	687b      	ldr	r3, [r7, #4]
 800c3b2:	68db      	ldr	r3, [r3, #12]
 800c3b4:	f003 0301 	and.w	r3, r3, #1
 800c3b8:	2b00      	cmp	r3, #0
 800c3ba:	d102      	bne.n	800c3c2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800c3bc:	687b      	ldr	r3, [r7, #4]
 800c3be:	689b      	ldr	r3, [r3, #8]
 800c3c0:	e00a      	b.n	800c3d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800c3c2:	687b      	ldr	r3, [r7, #4]
 800c3c4:	685b      	ldr	r3, [r3, #4]
 800c3c6:	687a      	ldr	r2, [r7, #4]
 800c3c8:	68d2      	ldr	r2, [r2, #12]
 800c3ca:	1052      	asrs	r2, r2, #1
 800c3cc:	4413      	add	r3, r2
 800c3ce:	681b      	ldr	r3, [r3, #0]
 800c3d0:	687a      	ldr	r2, [r7, #4]
 800c3d2:	6892      	ldr	r2, [r2, #8]
 800c3d4:	4413      	add	r3, r2
 800c3d6:	681b      	ldr	r3, [r3, #0]
 800c3d8:	4608      	mov	r0, r1
 800c3da:	4798      	blx	r3
    }
 800c3dc:	bf00      	nop
 800c3de:	3708      	adds	r7, #8
 800c3e0:	46bd      	mov	sp, r7
 800c3e2:	bd80      	pop	{r7, pc}

0800c3e4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800c3e4:	b480      	push	{r7}
 800c3e6:	b083      	sub	sp, #12
 800c3e8:	af00      	add	r7, sp, #0
 800c3ea:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800c3ec:	687b      	ldr	r3, [r7, #4]
 800c3ee:	685b      	ldr	r3, [r3, #4]
 800c3f0:	2b00      	cmp	r3, #0
 800c3f2:	d010      	beq.n	800c416 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c3f4:	687b      	ldr	r3, [r7, #4]
 800c3f6:	689b      	ldr	r3, [r3, #8]
 800c3f8:	2b00      	cmp	r3, #0
 800c3fa:	d107      	bne.n	800c40c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c3fc:	687b      	ldr	r3, [r7, #4]
 800c3fe:	68db      	ldr	r3, [r3, #12]
 800c400:	f003 0301 	and.w	r3, r3, #1
 800c404:	2b00      	cmp	r3, #0
 800c406:	d101      	bne.n	800c40c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c408:	2301      	movs	r3, #1
 800c40a:	e000      	b.n	800c40e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800c40c:	2300      	movs	r3, #0
 800c40e:	2b01      	cmp	r3, #1
 800c410:	d001      	beq.n	800c416 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c412:	2301      	movs	r3, #1
 800c414:	e000      	b.n	800c418 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800c416:	2300      	movs	r3, #0
    }
 800c418:	4618      	mov	r0, r3
 800c41a:	370c      	adds	r7, #12
 800c41c:	46bd      	mov	sp, r7
 800c41e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c422:	4770      	bx	lr

0800c424 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800c424:	b480      	push	{r7}
 800c426:	b083      	sub	sp, #12
 800c428:	af00      	add	r7, sp, #0
 800c42a:	6078      	str	r0, [r7, #4]
 800c42c:	6039      	str	r1, [r7, #0]
        : color(col)
 800c42e:	687b      	ldr	r3, [r7, #4]
 800c430:	683a      	ldr	r2, [r7, #0]
 800c432:	601a      	str	r2, [r3, #0]
    {
    }
 800c434:	687b      	ldr	r3, [r7, #4]
 800c436:	4618      	mov	r0, r3
 800c438:	370c      	adds	r7, #12
 800c43a:	46bd      	mov	sp, r7
 800c43c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c440:	4770      	bx	lr

0800c442 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800c442:	b480      	push	{r7}
 800c444:	b083      	sub	sp, #12
 800c446:	af00      	add	r7, sp, #0
 800c448:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800c44a:	687b      	ldr	r3, [r7, #4]
 800c44c:	2200      	movs	r2, #0
 800c44e:	801a      	strh	r2, [r3, #0]
 800c450:	687b      	ldr	r3, [r7, #4]
 800c452:	2200      	movs	r2, #0
 800c454:	805a      	strh	r2, [r3, #2]
 800c456:	687b      	ldr	r3, [r7, #4]
 800c458:	2200      	movs	r2, #0
 800c45a:	809a      	strh	r2, [r3, #4]
 800c45c:	687b      	ldr	r3, [r7, #4]
 800c45e:	2200      	movs	r2, #0
 800c460:	80da      	strh	r2, [r3, #6]
    {
    }
 800c462:	687b      	ldr	r3, [r7, #4]
 800c464:	4618      	mov	r0, r3
 800c466:	370c      	adds	r7, #12
 800c468:	46bd      	mov	sp, r7
 800c46a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c46e:	4770      	bx	lr

0800c470 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800c470:	b480      	push	{r7}
 800c472:	b085      	sub	sp, #20
 800c474:	af00      	add	r7, sp, #0
 800c476:	60f8      	str	r0, [r7, #12]
 800c478:	4608      	mov	r0, r1
 800c47a:	4611      	mov	r1, r2
 800c47c:	461a      	mov	r2, r3
 800c47e:	4603      	mov	r3, r0
 800c480:	817b      	strh	r3, [r7, #10]
 800c482:	460b      	mov	r3, r1
 800c484:	813b      	strh	r3, [r7, #8]
 800c486:	4613      	mov	r3, r2
 800c488:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800c48a:	68fb      	ldr	r3, [r7, #12]
 800c48c:	897a      	ldrh	r2, [r7, #10]
 800c48e:	801a      	strh	r2, [r3, #0]
 800c490:	68fb      	ldr	r3, [r7, #12]
 800c492:	893a      	ldrh	r2, [r7, #8]
 800c494:	805a      	strh	r2, [r3, #2]
 800c496:	68fb      	ldr	r3, [r7, #12]
 800c498:	88fa      	ldrh	r2, [r7, #6]
 800c49a:	809a      	strh	r2, [r3, #4]
 800c49c:	68fb      	ldr	r3, [r7, #12]
 800c49e:	8b3a      	ldrh	r2, [r7, #24]
 800c4a0:	80da      	strh	r2, [r3, #6]
    {
    }
 800c4a2:	68fb      	ldr	r3, [r7, #12]
 800c4a4:	4618      	mov	r0, r3
 800c4a6:	3714      	adds	r7, #20
 800c4a8:	46bd      	mov	sp, r7
 800c4aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4ae:	4770      	bx	lr

0800c4b0 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800c4b0:	b580      	push	{r7, lr}
 800c4b2:	b082      	sub	sp, #8
 800c4b4:	af00      	add	r7, sp, #0
 800c4b6:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800c4b8:	4a14      	ldr	r2, [pc, #80]	; (800c50c <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800c4ba:	687b      	ldr	r3, [r7, #4]
 800c4bc:	601a      	str	r2, [r3, #0]
        : rect(),
 800c4be:	687b      	ldr	r3, [r7, #4]
 800c4c0:	3304      	adds	r3, #4
 800c4c2:	4618      	mov	r0, r3
 800c4c4:	f7ff ffbd 	bl	800c442 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800c4c8:	687b      	ldr	r3, [r7, #4]
 800c4ca:	330c      	adds	r3, #12
 800c4cc:	4618      	mov	r0, r3
 800c4ce:	f7ff ffb8 	bl	800c442 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800c4d2:	687b      	ldr	r3, [r7, #4]
 800c4d4:	2200      	movs	r2, #0
 800c4d6:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800c4d8:	687b      	ldr	r3, [r7, #4]
 800c4da:	2200      	movs	r2, #0
 800c4dc:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800c4de:	687b      	ldr	r3, [r7, #4]
 800c4e0:	2200      	movs	r2, #0
 800c4e2:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800c4e4:	687b      	ldr	r3, [r7, #4]
 800c4e6:	2200      	movs	r2, #0
 800c4e8:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800c4ea:	687b      	ldr	r3, [r7, #4]
 800c4ec:	2200      	movs	r2, #0
 800c4ee:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800c4f0:	687b      	ldr	r3, [r7, #4]
 800c4f2:	2200      	movs	r2, #0
 800c4f4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800c4f8:	687b      	ldr	r3, [r7, #4]
 800c4fa:	2201      	movs	r2, #1
 800c4fc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800c500:	687b      	ldr	r3, [r7, #4]
 800c502:	4618      	mov	r0, r3
 800c504:	3708      	adds	r7, #8
 800c506:	46bd      	mov	sp, r7
 800c508:	bd80      	pop	{r7, pc}
 800c50a:	bf00      	nop
 800c50c:	08025620 	.word	0x08025620

0800c510 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800c510:	b480      	push	{r7}
 800c512:	b083      	sub	sp, #12
 800c514:	af00      	add	r7, sp, #0
 800c516:	6078      	str	r0, [r7, #4]
    {
 800c518:	4a04      	ldr	r2, [pc, #16]	; (800c52c <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800c51a:	687b      	ldr	r3, [r7, #4]
 800c51c:	601a      	str	r2, [r3, #0]
    }
 800c51e:	687b      	ldr	r3, [r7, #4]
 800c520:	4618      	mov	r0, r3
 800c522:	370c      	adds	r7, #12
 800c524:	46bd      	mov	sp, r7
 800c526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c52a:	4770      	bx	lr
 800c52c:	08025620 	.word	0x08025620

0800c530 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800c530:	b580      	push	{r7, lr}
 800c532:	b082      	sub	sp, #8
 800c534:	af00      	add	r7, sp, #0
 800c536:	6078      	str	r0, [r7, #4]
    }
 800c538:	6878      	ldr	r0, [r7, #4]
 800c53a:	f7ff ffe9 	bl	800c510 <_ZN8touchgfx8DrawableD1Ev>
 800c53e:	2128      	movs	r1, #40	; 0x28
 800c540:	6878      	ldr	r0, [r7, #4]
 800c542:	f016 faa4 	bl	8022a8e <_ZdlPvj>
 800c546:	687b      	ldr	r3, [r7, #4]
 800c548:	4618      	mov	r0, r3
 800c54a:	3708      	adds	r7, #8
 800c54c:	46bd      	mov	sp, r7
 800c54e:	bd80      	pop	{r7, pc}

0800c550 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800c550:	b580      	push	{r7, lr}
 800c552:	b082      	sub	sp, #8
 800c554:	af00      	add	r7, sp, #0
 800c556:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800c558:	687b      	ldr	r3, [r7, #4]
 800c55a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800c55e:	2b00      	cmp	r3, #0
 800c560:	d005      	beq.n	800c56e <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800c562:	687b      	ldr	r3, [r7, #4]
 800c564:	681b      	ldr	r3, [r3, #0]
 800c566:	3314      	adds	r3, #20
 800c568:	681b      	ldr	r3, [r3, #0]
 800c56a:	6878      	ldr	r0, [r7, #4]
 800c56c:	4798      	blx	r3
        }
    }
 800c56e:	bf00      	nop
 800c570:	3708      	adds	r7, #8
 800c572:	46bd      	mov	sp, r7
 800c574:	bd80      	pop	{r7, pc}

0800c576 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800c576:	b480      	push	{r7}
 800c578:	b083      	sub	sp, #12
 800c57a:	af00      	add	r7, sp, #0
 800c57c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800c57e:	2300      	movs	r3, #0
    }
 800c580:	4618      	mov	r0, r3
 800c582:	370c      	adds	r7, #12
 800c584:	46bd      	mov	sp, r7
 800c586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c58a:	4770      	bx	lr

0800c58c <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800c58c:	b580      	push	{r7, lr}
 800c58e:	b084      	sub	sp, #16
 800c590:	af00      	add	r7, sp, #0
 800c592:	60f8      	str	r0, [r7, #12]
 800c594:	4608      	mov	r0, r1
 800c596:	4611      	mov	r1, r2
 800c598:	461a      	mov	r2, r3
 800c59a:	4603      	mov	r3, r0
 800c59c:	817b      	strh	r3, [r7, #10]
 800c59e:	460b      	mov	r3, r1
 800c5a0:	813b      	strh	r3, [r7, #8]
 800c5a2:	4613      	mov	r3, r2
 800c5a4:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800c5a6:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800c5aa:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800c5ae:	4619      	mov	r1, r3
 800c5b0:	68f8      	ldr	r0, [r7, #12]
 800c5b2:	f000 f82a 	bl	800c60a <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800c5b6:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800c5ba:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800c5be:	4619      	mov	r1, r3
 800c5c0:	68f8      	ldr	r0, [r7, #12]
 800c5c2:	f000 f87e 	bl	800c6c2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800c5c6:	bf00      	nop
 800c5c8:	3710      	adds	r7, #16
 800c5ca:	46bd      	mov	sp, r7
 800c5cc:	bd80      	pop	{r7, pc}

0800c5ce <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800c5ce:	b480      	push	{r7}
 800c5d0:	b083      	sub	sp, #12
 800c5d2:	af00      	add	r7, sp, #0
 800c5d4:	6078      	str	r0, [r7, #4]
 800c5d6:	460b      	mov	r3, r1
 800c5d8:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800c5da:	687b      	ldr	r3, [r7, #4]
 800c5dc:	887a      	ldrh	r2, [r7, #2]
 800c5de:	809a      	strh	r2, [r3, #4]
    }
 800c5e0:	bf00      	nop
 800c5e2:	370c      	adds	r7, #12
 800c5e4:	46bd      	mov	sp, r7
 800c5e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5ea:	4770      	bx	lr

0800c5ec <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800c5ec:	b480      	push	{r7}
 800c5ee:	b083      	sub	sp, #12
 800c5f0:	af00      	add	r7, sp, #0
 800c5f2:	6078      	str	r0, [r7, #4]
 800c5f4:	460b      	mov	r3, r1
 800c5f6:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800c5f8:	687b      	ldr	r3, [r7, #4]
 800c5fa:	887a      	ldrh	r2, [r7, #2]
 800c5fc:	80da      	strh	r2, [r3, #6]
    }
 800c5fe:	bf00      	nop
 800c600:	370c      	adds	r7, #12
 800c602:	46bd      	mov	sp, r7
 800c604:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c608:	4770      	bx	lr

0800c60a <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800c60a:	b580      	push	{r7, lr}
 800c60c:	b082      	sub	sp, #8
 800c60e:	af00      	add	r7, sp, #0
 800c610:	6078      	str	r0, [r7, #4]
 800c612:	460b      	mov	r3, r1
 800c614:	807b      	strh	r3, [r7, #2]
 800c616:	4613      	mov	r3, r2
 800c618:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800c61a:	687b      	ldr	r3, [r7, #4]
 800c61c:	681b      	ldr	r3, [r3, #0]
 800c61e:	3330      	adds	r3, #48	; 0x30
 800c620:	681b      	ldr	r3, [r3, #0]
 800c622:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c626:	4611      	mov	r1, r2
 800c628:	6878      	ldr	r0, [r7, #4]
 800c62a:	4798      	blx	r3
        setY(y);
 800c62c:	687b      	ldr	r3, [r7, #4]
 800c62e:	681b      	ldr	r3, [r3, #0]
 800c630:	3334      	adds	r3, #52	; 0x34
 800c632:	681b      	ldr	r3, [r3, #0]
 800c634:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c638:	4611      	mov	r1, r2
 800c63a:	6878      	ldr	r0, [r7, #4]
 800c63c:	4798      	blx	r3
    }
 800c63e:	bf00      	nop
 800c640:	3708      	adds	r7, #8
 800c642:	46bd      	mov	sp, r7
 800c644:	bd80      	pop	{r7, pc}

0800c646 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800c646:	b480      	push	{r7}
 800c648:	b083      	sub	sp, #12
 800c64a:	af00      	add	r7, sp, #0
 800c64c:	6078      	str	r0, [r7, #4]
 800c64e:	460b      	mov	r3, r1
 800c650:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800c652:	687b      	ldr	r3, [r7, #4]
 800c654:	887a      	ldrh	r2, [r7, #2]
 800c656:	811a      	strh	r2, [r3, #8]
    }
 800c658:	bf00      	nop
 800c65a:	370c      	adds	r7, #12
 800c65c:	46bd      	mov	sp, r7
 800c65e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c662:	4770      	bx	lr

0800c664 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800c664:	b480      	push	{r7}
 800c666:	b083      	sub	sp, #12
 800c668:	af00      	add	r7, sp, #0
 800c66a:	6078      	str	r0, [r7, #4]
 800c66c:	460b      	mov	r3, r1
 800c66e:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800c670:	687b      	ldr	r3, [r7, #4]
 800c672:	887a      	ldrh	r2, [r7, #2]
 800c674:	815a      	strh	r2, [r3, #10]
    }
 800c676:	bf00      	nop
 800c678:	370c      	adds	r7, #12
 800c67a:	46bd      	mov	sp, r7
 800c67c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c680:	4770      	bx	lr

0800c682 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800c682:	b480      	push	{r7}
 800c684:	b083      	sub	sp, #12
 800c686:	af00      	add	r7, sp, #0
 800c688:	6078      	str	r0, [r7, #4]
    {
    }
 800c68a:	bf00      	nop
 800c68c:	370c      	adds	r7, #12
 800c68e:	46bd      	mov	sp, r7
 800c690:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c694:	4770      	bx	lr

0800c696 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800c696:	b480      	push	{r7}
 800c698:	b083      	sub	sp, #12
 800c69a:	af00      	add	r7, sp, #0
 800c69c:	6078      	str	r0, [r7, #4]
 800c69e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c6a0:	bf00      	nop
 800c6a2:	370c      	adds	r7, #12
 800c6a4:	46bd      	mov	sp, r7
 800c6a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6aa:	4770      	bx	lr

0800c6ac <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800c6ac:	b480      	push	{r7}
 800c6ae:	b083      	sub	sp, #12
 800c6b0:	af00      	add	r7, sp, #0
 800c6b2:	6078      	str	r0, [r7, #4]
 800c6b4:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c6b6:	bf00      	nop
 800c6b8:	370c      	adds	r7, #12
 800c6ba:	46bd      	mov	sp, r7
 800c6bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6c0:	4770      	bx	lr

0800c6c2 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800c6c2:	b580      	push	{r7, lr}
 800c6c4:	b082      	sub	sp, #8
 800c6c6:	af00      	add	r7, sp, #0
 800c6c8:	6078      	str	r0, [r7, #4]
 800c6ca:	460b      	mov	r3, r1
 800c6cc:	807b      	strh	r3, [r7, #2]
 800c6ce:	4613      	mov	r3, r2
 800c6d0:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800c6d2:	687b      	ldr	r3, [r7, #4]
 800c6d4:	681b      	ldr	r3, [r3, #0]
 800c6d6:	3338      	adds	r3, #56	; 0x38
 800c6d8:	681b      	ldr	r3, [r3, #0]
 800c6da:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c6de:	4611      	mov	r1, r2
 800c6e0:	6878      	ldr	r0, [r7, #4]
 800c6e2:	4798      	blx	r3
        setHeight(height);
 800c6e4:	687b      	ldr	r3, [r7, #4]
 800c6e6:	681b      	ldr	r3, [r3, #0]
 800c6e8:	333c      	adds	r3, #60	; 0x3c
 800c6ea:	681b      	ldr	r3, [r3, #0]
 800c6ec:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c6f0:	4611      	mov	r1, r2
 800c6f2:	6878      	ldr	r0, [r7, #4]
 800c6f4:	4798      	blx	r3
    }
 800c6f6:	bf00      	nop
 800c6f8:	3708      	adds	r7, #8
 800c6fa:	46bd      	mov	sp, r7
 800c6fc:	bd80      	pop	{r7, pc}

0800c6fe <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800c6fe:	b480      	push	{r7}
 800c700:	b083      	sub	sp, #12
 800c702:	af00      	add	r7, sp, #0
 800c704:	6078      	str	r0, [r7, #4]
 800c706:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c708:	bf00      	nop
 800c70a:	370c      	adds	r7, #12
 800c70c:	46bd      	mov	sp, r7
 800c70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c712:	4770      	bx	lr

0800c714 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800c714:	b480      	push	{r7}
 800c716:	b083      	sub	sp, #12
 800c718:	af00      	add	r7, sp, #0
 800c71a:	6078      	str	r0, [r7, #4]
    {
    }
 800c71c:	bf00      	nop
 800c71e:	370c      	adds	r7, #12
 800c720:	46bd      	mov	sp, r7
 800c722:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c726:	4770      	bx	lr

0800c728 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800c728:	b480      	push	{r7}
 800c72a:	b083      	sub	sp, #12
 800c72c:	af00      	add	r7, sp, #0
 800c72e:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800c730:	687b      	ldr	r3, [r7, #4]
 800c732:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800c736:	4618      	mov	r0, r3
 800c738:	370c      	adds	r7, #12
 800c73a:	46bd      	mov	sp, r7
 800c73c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c740:	4770      	bx	lr

0800c742 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800c742:	b480      	push	{r7}
 800c744:	b083      	sub	sp, #12
 800c746:	af00      	add	r7, sp, #0
 800c748:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800c74a:	687b      	ldr	r3, [r7, #4]
 800c74c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800c750:	4618      	mov	r0, r3
 800c752:	370c      	adds	r7, #12
 800c754:	46bd      	mov	sp, r7
 800c756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c75a:	4770      	bx	lr

0800c75c <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800c75c:	b580      	push	{r7, lr}
 800c75e:	b082      	sub	sp, #8
 800c760:	af00      	add	r7, sp, #0
 800c762:	6078      	str	r0, [r7, #4]
 800c764:	460b      	mov	r3, r1
 800c766:	807b      	strh	r3, [r7, #2]
 800c768:	4613      	mov	r3, r2
 800c76a:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800c76c:	687b      	ldr	r3, [r7, #4]
 800c76e:	681b      	ldr	r3, [r3, #0]
 800c770:	3354      	adds	r3, #84	; 0x54
 800c772:	681b      	ldr	r3, [r3, #0]
 800c774:	8879      	ldrh	r1, [r7, #2]
 800c776:	687a      	ldr	r2, [r7, #4]
 800c778:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800c77c:	b292      	uxth	r2, r2
 800c77e:	1a8a      	subs	r2, r1, r2
 800c780:	b292      	uxth	r2, r2
 800c782:	b210      	sxth	r0, r2
 800c784:	8839      	ldrh	r1, [r7, #0]
 800c786:	687a      	ldr	r2, [r7, #4]
 800c788:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800c78c:	b292      	uxth	r2, r2
 800c78e:	1a8a      	subs	r2, r1, r2
 800c790:	b292      	uxth	r2, r2
 800c792:	b212      	sxth	r2, r2
 800c794:	4601      	mov	r1, r0
 800c796:	6878      	ldr	r0, [r7, #4]
 800c798:	4798      	blx	r3
    }
 800c79a:	bf00      	nop
 800c79c:	3708      	adds	r7, #8
 800c79e:	46bd      	mov	sp, r7
 800c7a0:	bd80      	pop	{r7, pc}

0800c7a2 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800c7a2:	b480      	push	{r7}
 800c7a4:	b083      	sub	sp, #12
 800c7a6:	af00      	add	r7, sp, #0
 800c7a8:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800c7aa:	687b      	ldr	r3, [r7, #4]
 800c7ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c7b0:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800c7b2:	687b      	ldr	r3, [r7, #4]
 800c7b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c7b8:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c7c0:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800c7c2:	bf00      	nop
 800c7c4:	370c      	adds	r7, #12
 800c7c6:	46bd      	mov	sp, r7
 800c7c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7cc:	4770      	bx	lr

0800c7ce <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800c7ce:	b580      	push	{r7, lr}
 800c7d0:	b084      	sub	sp, #16
 800c7d2:	af00      	add	r7, sp, #0
 800c7d4:	60f8      	str	r0, [r7, #12]
 800c7d6:	60b9      	str	r1, [r7, #8]
 800c7d8:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800c7da:	68f8      	ldr	r0, [r7, #12]
 800c7dc:	f7ff ffe1 	bl	800c7a2 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800c7e0:	687b      	ldr	r3, [r7, #4]
 800c7e2:	681a      	ldr	r2, [r3, #0]
 800c7e4:	68fb      	ldr	r3, [r7, #12]
 800c7e6:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800c7e8:	687b      	ldr	r3, [r7, #4]
 800c7ea:	68fa      	ldr	r2, [r7, #12]
 800c7ec:	601a      	str	r2, [r3, #0]
    }
 800c7ee:	bf00      	nop
 800c7f0:	3710      	adds	r7, #16
 800c7f2:	46bd      	mov	sp, r7
 800c7f4:	bd80      	pop	{r7, pc}
	...

0800c7f8 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800c7f8:	b580      	push	{r7, lr}
 800c7fa:	b082      	sub	sp, #8
 800c7fc:	af00      	add	r7, sp, #0
 800c7fe:	6078      	str	r0, [r7, #4]
    {
 800c800:	4a06      	ldr	r2, [pc, #24]	; (800c81c <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800c802:	687b      	ldr	r3, [r7, #4]
 800c804:	601a      	str	r2, [r3, #0]
 800c806:	687b      	ldr	r3, [r7, #4]
 800c808:	3304      	adds	r3, #4
 800c80a:	4618      	mov	r0, r3
 800c80c:	f000 fab2 	bl	800cd74 <_ZN8touchgfx9ContainerD1Ev>
    }
 800c810:	687b      	ldr	r3, [r7, #4]
 800c812:	4618      	mov	r0, r3
 800c814:	3708      	adds	r7, #8
 800c816:	46bd      	mov	sp, r7
 800c818:	bd80      	pop	{r7, pc}
 800c81a:	bf00      	nop
 800c81c:	08025724 	.word	0x08025724

0800c820 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800c820:	b580      	push	{r7, lr}
 800c822:	b082      	sub	sp, #8
 800c824:	af00      	add	r7, sp, #0
 800c826:	6078      	str	r0, [r7, #4]
    }
 800c828:	6878      	ldr	r0, [r7, #4]
 800c82a:	f7ff ffe5 	bl	800c7f8 <_ZN8touchgfx6ScreenD1Ev>
 800c82e:	213c      	movs	r1, #60	; 0x3c
 800c830:	6878      	ldr	r0, [r7, #4]
 800c832:	f016 f92c 	bl	8022a8e <_ZdlPvj>
 800c836:	687b      	ldr	r3, [r7, #4]
 800c838:	4618      	mov	r0, r3
 800c83a:	3708      	adds	r7, #8
 800c83c:	46bd      	mov	sp, r7
 800c83e:	bd80      	pop	{r7, pc}

0800c840 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800c840:	b480      	push	{r7}
 800c842:	b083      	sub	sp, #12
 800c844:	af00      	add	r7, sp, #0
 800c846:	6078      	str	r0, [r7, #4]
    {
    }
 800c848:	bf00      	nop
 800c84a:	370c      	adds	r7, #12
 800c84c:	46bd      	mov	sp, r7
 800c84e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c852:	4770      	bx	lr

0800c854 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800c854:	b480      	push	{r7}
 800c856:	b083      	sub	sp, #12
 800c858:	af00      	add	r7, sp, #0
 800c85a:	6078      	str	r0, [r7, #4]
    {
    }
 800c85c:	bf00      	nop
 800c85e:	370c      	adds	r7, #12
 800c860:	46bd      	mov	sp, r7
 800c862:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c866:	4770      	bx	lr

0800c868 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800c868:	b480      	push	{r7}
 800c86a:	b083      	sub	sp, #12
 800c86c:	af00      	add	r7, sp, #0
 800c86e:	6078      	str	r0, [r7, #4]
    {
    }
 800c870:	bf00      	nop
 800c872:	370c      	adds	r7, #12
 800c874:	46bd      	mov	sp, r7
 800c876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c87a:	4770      	bx	lr

0800c87c <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800c87c:	b480      	push	{r7}
 800c87e:	b083      	sub	sp, #12
 800c880:	af00      	add	r7, sp, #0
 800c882:	6078      	str	r0, [r7, #4]
    {
    }
 800c884:	bf00      	nop
 800c886:	370c      	adds	r7, #12
 800c888:	46bd      	mov	sp, r7
 800c88a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c88e:	4770      	bx	lr

0800c890 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800c890:	b480      	push	{r7}
 800c892:	b083      	sub	sp, #12
 800c894:	af00      	add	r7, sp, #0
 800c896:	6078      	str	r0, [r7, #4]
 800c898:	460b      	mov	r3, r1
 800c89a:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800c89c:	bf00      	nop
 800c89e:	370c      	adds	r7, #12
 800c8a0:	46bd      	mov	sp, r7
 800c8a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8a6:	4770      	bx	lr

0800c8a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800c8a8:	b580      	push	{r7, lr}
 800c8aa:	b082      	sub	sp, #8
 800c8ac:	af00      	add	r7, sp, #0
 800c8ae:	6078      	str	r0, [r7, #4]
 800c8b0:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800c8b2:	687b      	ldr	r3, [r7, #4]
 800c8b4:	3304      	adds	r3, #4
 800c8b6:	6839      	ldr	r1, [r7, #0]
 800c8b8:	4618      	mov	r0, r3
 800c8ba:	f002 fd67 	bl	800f38c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800c8be:	bf00      	nop
 800c8c0:	3708      	adds	r7, #8
 800c8c2:	46bd      	mov	sp, r7
 800c8c4:	bd80      	pop	{r7, pc}

0800c8c6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800c8c6:	b580      	push	{r7, lr}
 800c8c8:	b084      	sub	sp, #16
 800c8ca:	af00      	add	r7, sp, #0
 800c8cc:	60f8      	str	r0, [r7, #12]
 800c8ce:	607b      	str	r3, [r7, #4]
 800c8d0:	460b      	mov	r3, r1
 800c8d2:	817b      	strh	r3, [r7, #10]
 800c8d4:	4613      	mov	r3, r2
 800c8d6:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800c8d8:	68fb      	ldr	r3, [r7, #12]
 800c8da:	4618      	mov	r0, r3
 800c8dc:	f7ff ff24 	bl	800c728 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800c8e0:	4603      	mov	r3, r0
 800c8e2:	2b00      	cmp	r3, #0
 800c8e4:	d008      	beq.n	800c8f8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800c8e6:	68fb      	ldr	r3, [r7, #12]
 800c8e8:	4618      	mov	r0, r3
 800c8ea:	f7ff ff2a 	bl	800c742 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800c8ee:	4603      	mov	r3, r0
 800c8f0:	2b00      	cmp	r3, #0
 800c8f2:	d001      	beq.n	800c8f8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800c8f4:	2301      	movs	r3, #1
 800c8f6:	e000      	b.n	800c8fa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800c8f8:	2300      	movs	r3, #0
 800c8fa:	2b00      	cmp	r3, #0
 800c8fc:	d002      	beq.n	800c904 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800c8fe:	68fa      	ldr	r2, [r7, #12]
 800c900:	687b      	ldr	r3, [r7, #4]
 800c902:	601a      	str	r2, [r3, #0]
        }
    }
 800c904:	bf00      	nop
 800c906:	3710      	adds	r7, #16
 800c908:	46bd      	mov	sp, r7
 800c90a:	bd80      	pop	{r7, pc}

0800c90c <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800c90c:	b580      	push	{r7, lr}
 800c90e:	b082      	sub	sp, #8
 800c910:	af00      	add	r7, sp, #0
 800c912:	6078      	str	r0, [r7, #4]
 800c914:	687b      	ldr	r3, [r7, #4]
 800c916:	4618      	mov	r0, r3
 800c918:	f7ff fdca 	bl	800c4b0 <_ZN8touchgfx8DrawableC1Ev>
 800c91c:	4a03      	ldr	r2, [pc, #12]	; (800c92c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800c91e:	687b      	ldr	r3, [r7, #4]
 800c920:	601a      	str	r2, [r3, #0]
 800c922:	687b      	ldr	r3, [r7, #4]
 800c924:	4618      	mov	r0, r3
 800c926:	3708      	adds	r7, #8
 800c928:	46bd      	mov	sp, r7
 800c92a:	bd80      	pop	{r7, pc}
 800c92c:	08024d30 	.word	0x08024d30

0800c930 <_ZN8touchgfx6WidgetD1Ev>:
 800c930:	b580      	push	{r7, lr}
 800c932:	b082      	sub	sp, #8
 800c934:	af00      	add	r7, sp, #0
 800c936:	6078      	str	r0, [r7, #4]
 800c938:	4a05      	ldr	r2, [pc, #20]	; (800c950 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800c93a:	687b      	ldr	r3, [r7, #4]
 800c93c:	601a      	str	r2, [r3, #0]
 800c93e:	687b      	ldr	r3, [r7, #4]
 800c940:	4618      	mov	r0, r3
 800c942:	f7ff fde5 	bl	800c510 <_ZN8touchgfx8DrawableD1Ev>
 800c946:	687b      	ldr	r3, [r7, #4]
 800c948:	4618      	mov	r0, r3
 800c94a:	3708      	adds	r7, #8
 800c94c:	46bd      	mov	sp, r7
 800c94e:	bd80      	pop	{r7, pc}
 800c950:	08024d30 	.word	0x08024d30

0800c954 <_ZN8touchgfx6WidgetD0Ev>:
 800c954:	b580      	push	{r7, lr}
 800c956:	b082      	sub	sp, #8
 800c958:	af00      	add	r7, sp, #0
 800c95a:	6078      	str	r0, [r7, #4]
 800c95c:	6878      	ldr	r0, [r7, #4]
 800c95e:	f7ff ffe7 	bl	800c930 <_ZN8touchgfx6WidgetD1Ev>
 800c962:	2128      	movs	r1, #40	; 0x28
 800c964:	6878      	ldr	r0, [r7, #4]
 800c966:	f016 f892 	bl	8022a8e <_ZdlPvj>
 800c96a:	687b      	ldr	r3, [r7, #4]
 800c96c:	4618      	mov	r0, r3
 800c96e:	3708      	adds	r7, #8
 800c970:	46bd      	mov	sp, r7
 800c972:	bd80      	pop	{r7, pc}

0800c974 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800c974:	b580      	push	{r7, lr}
 800c976:	b082      	sub	sp, #8
 800c978:	af00      	add	r7, sp, #0
 800c97a:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800c97c:	687b      	ldr	r3, [r7, #4]
 800c97e:	4618      	mov	r0, r3
 800c980:	2326      	movs	r3, #38	; 0x26
 800c982:	461a      	mov	r2, r3
 800c984:	2100      	movs	r1, #0
 800c986:	f016 fab6 	bl	8022ef6 <memset>
 800c98a:	687b      	ldr	r3, [r7, #4]
 800c98c:	4618      	mov	r0, r3
 800c98e:	f7ff ffbd 	bl	800c90c <_ZN8touchgfx6WidgetC1Ev>
 800c992:	4a09      	ldr	r2, [pc, #36]	; (800c9b8 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800c994:	687b      	ldr	r3, [r7, #4]
 800c996:	601a      	str	r2, [r3, #0]
 800c998:	687b      	ldr	r3, [r7, #4]
 800c99a:	22ff      	movs	r2, #255	; 0xff
 800c99c:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800c9a0:	687b      	ldr	r3, [r7, #4]
 800c9a2:	3328      	adds	r3, #40	; 0x28
 800c9a4:	2100      	movs	r1, #0
 800c9a6:	4618      	mov	r0, r3
 800c9a8:	f7ff fd3c 	bl	800c424 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800c9ac:	687b      	ldr	r3, [r7, #4]
 800c9ae:	4618      	mov	r0, r3
 800c9b0:	3708      	adds	r7, #8
 800c9b2:	46bd      	mov	sp, r7
 800c9b4:	bd80      	pop	{r7, pc}
 800c9b6:	bf00      	nop
 800c9b8:	0802550c 	.word	0x0802550c

0800c9bc <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800c9bc:	b480      	push	{r7}
 800c9be:	b083      	sub	sp, #12
 800c9c0:	af00      	add	r7, sp, #0
 800c9c2:	6078      	str	r0, [r7, #4]
 800c9c4:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800c9c6:	687b      	ldr	r3, [r7, #4]
 800c9c8:	683a      	ldr	r2, [r7, #0]
 800c9ca:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800c9cc:	bf00      	nop
 800c9ce:	370c      	adds	r7, #12
 800c9d0:	46bd      	mov	sp, r7
 800c9d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9d6:	4770      	bx	lr

0800c9d8 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800c9d8:	b480      	push	{r7}
 800c9da:	b083      	sub	sp, #12
 800c9dc:	af00      	add	r7, sp, #0
 800c9de:	6078      	str	r0, [r7, #4]
 800c9e0:	460b      	mov	r3, r1
 800c9e2:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800c9e4:	4a06      	ldr	r2, [pc, #24]	; (800ca00 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800c9e6:	687b      	ldr	r3, [r7, #4]
 800c9e8:	601a      	str	r2, [r3, #0]
 800c9ea:	687b      	ldr	r3, [r7, #4]
 800c9ec:	887a      	ldrh	r2, [r7, #2]
 800c9ee:	809a      	strh	r2, [r3, #4]
    }
 800c9f0:	687b      	ldr	r3, [r7, #4]
 800c9f2:	4618      	mov	r0, r3
 800c9f4:	370c      	adds	r7, #12
 800c9f6:	46bd      	mov	sp, r7
 800c9f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9fc:	4770      	bx	lr
 800c9fe:	bf00      	nop
 800ca00:	08024b10 	.word	0x08024b10

0800ca04 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800ca04:	b580      	push	{r7, lr}
 800ca06:	b082      	sub	sp, #8
 800ca08:	af00      	add	r7, sp, #0
 800ca0a:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800ca0c:	687b      	ldr	r3, [r7, #4]
 800ca0e:	4618      	mov	r0, r3
 800ca10:	2326      	movs	r3, #38	; 0x26
 800ca12:	461a      	mov	r2, r3
 800ca14:	2100      	movs	r1, #0
 800ca16:	f016 fa6e 	bl	8022ef6 <memset>
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	4618      	mov	r0, r3
 800ca1e:	f7ff ff75 	bl	800c90c <_ZN8touchgfx6WidgetC1Ev>
 800ca22:	4a16      	ldr	r2, [pc, #88]	; (800ca7c <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800ca24:	687b      	ldr	r3, [r7, #4]
 800ca26:	601a      	str	r2, [r3, #0]
 800ca28:	687b      	ldr	r3, [r7, #4]
 800ca2a:	3328      	adds	r3, #40	; 0x28
 800ca2c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ca30:	4618      	mov	r0, r3
 800ca32:	f7ff ffd1 	bl	800c9d8 <_ZN8touchgfx9TypedTextC1Et>
 800ca36:	687b      	ldr	r3, [r7, #4]
 800ca38:	3330      	adds	r3, #48	; 0x30
 800ca3a:	2100      	movs	r1, #0
 800ca3c:	4618      	mov	r0, r3
 800ca3e:	f7ff fcf1 	bl	800c424 <_ZN8touchgfx9colortypeC1Em>
 800ca42:	687b      	ldr	r3, [r7, #4]
 800ca44:	2200      	movs	r2, #0
 800ca46:	869a      	strh	r2, [r3, #52]	; 0x34
 800ca48:	687b      	ldr	r3, [r7, #4]
 800ca4a:	22ff      	movs	r2, #255	; 0xff
 800ca4c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800ca50:	687b      	ldr	r3, [r7, #4]
 800ca52:	2200      	movs	r2, #0
 800ca54:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800ca58:	687b      	ldr	r3, [r7, #4]
 800ca5a:	2200      	movs	r2, #0
 800ca5c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800ca60:	687b      	ldr	r3, [r7, #4]
 800ca62:	2200      	movs	r2, #0
 800ca64:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800ca68:	687b      	ldr	r3, [r7, #4]
 800ca6a:	333c      	adds	r3, #60	; 0x3c
 800ca6c:	4618      	mov	r0, r3
 800ca6e:	f000 f807 	bl	800ca80 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800ca72:	687b      	ldr	r3, [r7, #4]
 800ca74:	4618      	mov	r0, r3
 800ca76:	3708      	adds	r7, #8
 800ca78:	46bd      	mov	sp, r7
 800ca7a:	bd80      	pop	{r7, pc}
 800ca7c:	0802547c 	.word	0x0802547c

0800ca80 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800ca80:	b580      	push	{r7, lr}
 800ca82:	b084      	sub	sp, #16
 800ca84:	af02      	add	r7, sp, #8
 800ca86:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800ca88:	6878      	ldr	r0, [r7, #4]
 800ca8a:	f04f 33ff 	mov.w	r3, #4294967295
 800ca8e:	9300      	str	r3, [sp, #0]
 800ca90:	f04f 33ff 	mov.w	r3, #4294967295
 800ca94:	2200      	movs	r2, #0
 800ca96:	2100      	movs	r1, #0
 800ca98:	f7ff fcea 	bl	800c470 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800ca9c:	687b      	ldr	r3, [r7, #4]
 800ca9e:	2200      	movs	r2, #0
 800caa0:	609a      	str	r2, [r3, #8]
        {
        }
 800caa2:	687b      	ldr	r3, [r7, #4]
 800caa4:	4618      	mov	r0, r3
 800caa6:	3708      	adds	r7, #8
 800caa8:	46bd      	mov	sp, r7
 800caaa:	bd80      	pop	{r7, pc}

0800caac <_ZN8touchgfx4ViewI15screenPresenterED1Ev>:
class View : public Screen
 800caac:	b580      	push	{r7, lr}
 800caae:	b082      	sub	sp, #8
 800cab0:	af00      	add	r7, sp, #0
 800cab2:	6078      	str	r0, [r7, #4]
 800cab4:	4a05      	ldr	r2, [pc, #20]	; (800cacc <_ZN8touchgfx4ViewI15screenPresenterED1Ev+0x20>)
 800cab6:	687b      	ldr	r3, [r7, #4]
 800cab8:	601a      	str	r2, [r3, #0]
 800caba:	687b      	ldr	r3, [r7, #4]
 800cabc:	4618      	mov	r0, r3
 800cabe:	f7ff fe9b 	bl	800c7f8 <_ZN8touchgfx6ScreenD1Ev>
 800cac2:	687b      	ldr	r3, [r7, #4]
 800cac4:	4618      	mov	r0, r3
 800cac6:	3708      	adds	r7, #8
 800cac8:	46bd      	mov	sp, r7
 800caca:	bd80      	pop	{r7, pc}
 800cacc:	08024cfc 	.word	0x08024cfc

0800cad0 <_ZN8touchgfx4ViewI15screenPresenterED0Ev>:
 800cad0:	b580      	push	{r7, lr}
 800cad2:	b082      	sub	sp, #8
 800cad4:	af00      	add	r7, sp, #0
 800cad6:	6078      	str	r0, [r7, #4]
 800cad8:	6878      	ldr	r0, [r7, #4]
 800cada:	f7ff ffe7 	bl	800caac <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 800cade:	2140      	movs	r1, #64	; 0x40
 800cae0:	6878      	ldr	r0, [r7, #4]
 800cae2:	f015 ffd4 	bl	8022a8e <_ZdlPvj>
 800cae6:	687b      	ldr	r3, [r7, #4]
 800cae8:	4618      	mov	r0, r3
 800caea:	3708      	adds	r7, #8
 800caec:	46bd      	mov	sp, r7
 800caee:	bd80      	pop	{r7, pc}

0800caf0 <_ZN14screenViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase()
 800caf0:	b590      	push	{r4, r7, lr}
 800caf2:	b095      	sub	sp, #84	; 0x54
 800caf4:	af02      	add	r7, sp, #8
 800caf6:	6178      	str	r0, [r7, #20]
 800caf8:	697b      	ldr	r3, [r7, #20]
 800cafa:	4618      	mov	r0, r3
 800cafc:	f000 f924 	bl	800cd48 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>
 800cb00:	4a72      	ldr	r2, [pc, #456]	; (800cccc <_ZN14screenViewBaseC1Ev+0x1dc>)
 800cb02:	697b      	ldr	r3, [r7, #20]
 800cb04:	601a      	str	r2, [r3, #0]
 800cb06:	697b      	ldr	r3, [r7, #20]
 800cb08:	3340      	adds	r3, #64	; 0x40
 800cb0a:	4618      	mov	r0, r3
 800cb0c:	f7ff ff32 	bl	800c974 <_ZN8touchgfx3BoxC1Ev>
 800cb10:	697b      	ldr	r3, [r7, #20]
 800cb12:	336c      	adds	r3, #108	; 0x6c
 800cb14:	4618      	mov	r0, r3
 800cb16:	f7ff ff2d 	bl	800c974 <_ZN8touchgfx3BoxC1Ev>
 800cb1a:	697b      	ldr	r3, [r7, #20]
 800cb1c:	3398      	adds	r3, #152	; 0x98
 800cb1e:	4618      	mov	r0, r3
 800cb20:	f7ff ff70 	bl	800ca04 <_ZN8touchgfx8TextAreaC1Ev>
{
    __background.setPosition(0, 0, 320, 240);
 800cb24:	697b      	ldr	r3, [r7, #20]
 800cb26:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800cb2a:	23f0      	movs	r3, #240	; 0xf0
 800cb2c:	9300      	str	r3, [sp, #0]
 800cb2e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800cb32:	2200      	movs	r2, #0
 800cb34:	2100      	movs	r1, #0
 800cb36:	f7ff fd29 	bl	800c58c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800cb3a:	697b      	ldr	r3, [r7, #20]
 800cb3c:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800cb40:	2300      	movs	r3, #0
 800cb42:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 800cb46:	2300      	movs	r3, #0
 800cb48:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 800cb4c:	2300      	movs	r3, #0
 800cb4e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800cb52:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 800cb56:	041b      	lsls	r3, r3, #16
 800cb58:	461a      	mov	r2, r3
 800cb5a:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800cb5e:	021b      	lsls	r3, r3, #8
 800cb60:	431a      	orrs	r2, r3
 800cb62:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 800cb66:	4313      	orrs	r3, r2
 800cb68:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800cb6c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800cb70:	4611      	mov	r1, r2
 800cb72:	4618      	mov	r0, r3
 800cb74:	f7ff fc56 	bl	800c424 <_ZN8touchgfx9colortypeC1Em>
 800cb78:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cb7a:	4619      	mov	r1, r3
 800cb7c:	4620      	mov	r0, r4
 800cb7e:	f7ff ff1d 	bl	800c9bc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800cb82:	697a      	ldr	r2, [r7, #20]
 800cb84:	697b      	ldr	r3, [r7, #20]
 800cb86:	3340      	adds	r3, #64	; 0x40
 800cb88:	4619      	mov	r1, r3
 800cb8a:	4610      	mov	r0, r2
 800cb8c:	f7ff fe8c 	bl	800c8a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box1.setPosition(0, 0, 320, 240);
 800cb90:	697b      	ldr	r3, [r7, #20]
 800cb92:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800cb96:	23f0      	movs	r3, #240	; 0xf0
 800cb98:	9300      	str	r3, [sp, #0]
 800cb9a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800cb9e:	2200      	movs	r2, #0
 800cba0:	2100      	movs	r1, #0
 800cba2:	f7ff fcf3 	bl	800c58c <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFromRGB(232, 16, 16));
 800cba6:	697b      	ldr	r3, [r7, #20]
 800cba8:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800cbac:	23e8      	movs	r3, #232	; 0xe8
 800cbae:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 800cbb2:	2310      	movs	r3, #16
 800cbb4:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800cbb8:	2310      	movs	r3, #16
 800cbba:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 800cbbe:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 800cbc2:	041b      	lsls	r3, r3, #16
 800cbc4:	461a      	mov	r2, r3
 800cbc6:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800cbca:	021b      	lsls	r3, r3, #8
 800cbcc:	431a      	orrs	r2, r3
 800cbce:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800cbd2:	4313      	orrs	r3, r2
 800cbd4:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800cbd8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800cbdc:	4611      	mov	r1, r2
 800cbde:	4618      	mov	r0, r3
 800cbe0:	f7ff fc20 	bl	800c424 <_ZN8touchgfx9colortypeC1Em>
 800cbe4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cbe6:	4619      	mov	r1, r3
 800cbe8:	4620      	mov	r0, r4
 800cbea:	f7ff fee7 	bl	800c9bc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box1);
 800cbee:	697a      	ldr	r2, [r7, #20]
 800cbf0:	697b      	ldr	r3, [r7, #20]
 800cbf2:	336c      	adds	r3, #108	; 0x6c
 800cbf4:	4619      	mov	r1, r3
 800cbf6:	4610      	mov	r0, r2
 800cbf8:	f7ff fe56 	bl	800c8a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(87, 86);
 800cbfc:	697b      	ldr	r3, [r7, #20]
 800cbfe:	3398      	adds	r3, #152	; 0x98
 800cc00:	2256      	movs	r2, #86	; 0x56
 800cc02:	2157      	movs	r1, #87	; 0x57
 800cc04:	4618      	mov	r0, r3
 800cc06:	f7ff fd00 	bl	800c60a <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800cc0a:	697b      	ldr	r3, [r7, #20]
 800cc0c:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800cc10:	2300      	movs	r3, #0
 800cc12:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 800cc16:	2300      	movs	r3, #0
 800cc18:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 800cc1c:	2300      	movs	r3, #0
 800cc1e:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 800cc22:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 800cc26:	041b      	lsls	r3, r3, #16
 800cc28:	461a      	mov	r2, r3
 800cc2a:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 800cc2e:	021b      	lsls	r3, r3, #8
 800cc30:	431a      	orrs	r2, r3
 800cc32:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 800cc36:	4313      	orrs	r3, r2
 800cc38:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800cc3c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800cc40:	4611      	mov	r1, r2
 800cc42:	4618      	mov	r0, r3
 800cc44:	f7ff fbee 	bl	800c424 <_ZN8touchgfx9colortypeC1Em>
 800cc48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc4a:	63fc      	str	r4, [r7, #60]	; 0x3c
 800cc4c:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800cc4e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cc50:	69ba      	ldr	r2, [r7, #24]
 800cc52:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800cc54:	bf00      	nop
    textArea1.setLinespacing(0);
 800cc56:	697b      	ldr	r3, [r7, #20]
 800cc58:	3398      	adds	r3, #152	; 0x98
 800cc5a:	647b      	str	r3, [r7, #68]	; 0x44
 800cc5c:	2300      	movs	r3, #0
 800cc5e:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
        linespace = space;
 800cc62:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800cc64:	f8b7 2042 	ldrh.w	r2, [r7, #66]	; 0x42
 800cc68:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800cc6a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800cc6c:	681b      	ldr	r3, [r3, #0]
 800cc6e:	3384      	adds	r3, #132	; 0x84
 800cc70:	681b      	ldr	r3, [r3, #0]
 800cc72:	6c7c      	ldr	r4, [r7, #68]	; 0x44
 800cc74:	463a      	mov	r2, r7
 800cc76:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800cc78:	4610      	mov	r0, r2
 800cc7a:	4798      	blx	r3
 800cc7c:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800cc80:	463a      	mov	r2, r7
 800cc82:	ca07      	ldmia	r2, {r0, r1, r2}
 800cc84:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cc88:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8Z2S));
 800cc8a:	697b      	ldr	r3, [r7, #20]
 800cc8c:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800cc90:	f107 031c 	add.w	r3, r7, #28
 800cc94:	2100      	movs	r1, #0
 800cc96:	4618      	mov	r0, r3
 800cc98:	f7ff fe9e 	bl	800c9d8 <_ZN8touchgfx9TypedTextC1Et>
 800cc9c:	f107 031c 	add.w	r3, r7, #28
 800cca0:	4619      	mov	r1, r3
 800cca2:	4620      	mov	r0, r4
 800cca4:	f004 f8b8 	bl	8010e18 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800cca8:	f107 031c 	add.w	r3, r7, #28
 800ccac:	4618      	mov	r0, r3
 800ccae:	f7fe fc85 	bl	800b5bc <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800ccb2:	697a      	ldr	r2, [r7, #20]
 800ccb4:	697b      	ldr	r3, [r7, #20]
 800ccb6:	3398      	adds	r3, #152	; 0x98
 800ccb8:	4619      	mov	r1, r3
 800ccba:	4610      	mov	r0, r2
 800ccbc:	f7ff fdf4 	bl	800c8a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800ccc0:	697b      	ldr	r3, [r7, #20]
 800ccc2:	4618      	mov	r0, r3
 800ccc4:	374c      	adds	r7, #76	; 0x4c
 800ccc6:	46bd      	mov	sp, r7
 800ccc8:	bd90      	pop	{r4, r7, pc}
 800ccca:	bf00      	nop
 800cccc:	08024cc8 	.word	0x08024cc8

0800ccd0 <_ZN14screenViewBaseD1Ev>:

screenViewBase::~screenViewBase()
 800ccd0:	b580      	push	{r7, lr}
 800ccd2:	b082      	sub	sp, #8
 800ccd4:	af00      	add	r7, sp, #0
 800ccd6:	6078      	str	r0, [r7, #4]
 800ccd8:	4a0d      	ldr	r2, [pc, #52]	; (800cd10 <_ZN14screenViewBaseD1Ev+0x40>)
 800ccda:	687b      	ldr	r3, [r7, #4]
 800ccdc:	601a      	str	r2, [r3, #0]
 800ccde:	687b      	ldr	r3, [r7, #4]
 800cce0:	3398      	adds	r3, #152	; 0x98
 800cce2:	4618      	mov	r0, r3
 800cce4:	f000 f88a 	bl	800cdfc <_ZN8touchgfx8TextAreaD1Ev>
 800cce8:	687b      	ldr	r3, [r7, #4]
 800ccea:	336c      	adds	r3, #108	; 0x6c
 800ccec:	4618      	mov	r0, r3
 800ccee:	f000 f863 	bl	800cdb8 <_ZN8touchgfx3BoxD1Ev>
 800ccf2:	687b      	ldr	r3, [r7, #4]
 800ccf4:	3340      	adds	r3, #64	; 0x40
 800ccf6:	4618      	mov	r0, r3
 800ccf8:	f000 f85e 	bl	800cdb8 <_ZN8touchgfx3BoxD1Ev>
 800ccfc:	687b      	ldr	r3, [r7, #4]
 800ccfe:	4618      	mov	r0, r3
 800cd00:	f7ff fed4 	bl	800caac <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
{

}
 800cd04:	687b      	ldr	r3, [r7, #4]
 800cd06:	4618      	mov	r0, r3
 800cd08:	3708      	adds	r7, #8
 800cd0a:	46bd      	mov	sp, r7
 800cd0c:	bd80      	pop	{r7, pc}
 800cd0e:	bf00      	nop
 800cd10:	08024cc8 	.word	0x08024cc8

0800cd14 <_ZN14screenViewBaseD0Ev>:
screenViewBase::~screenViewBase()
 800cd14:	b580      	push	{r7, lr}
 800cd16:	b082      	sub	sp, #8
 800cd18:	af00      	add	r7, sp, #0
 800cd1a:	6078      	str	r0, [r7, #4]
}
 800cd1c:	6878      	ldr	r0, [r7, #4]
 800cd1e:	f7ff ffd7 	bl	800ccd0 <_ZN14screenViewBaseD1Ev>
 800cd22:	21e0      	movs	r1, #224	; 0xe0
 800cd24:	6878      	ldr	r0, [r7, #4]
 800cd26:	f015 feb2 	bl	8022a8e <_ZdlPvj>
 800cd2a:	687b      	ldr	r3, [r7, #4]
 800cd2c:	4618      	mov	r0, r3
 800cd2e:	3708      	adds	r7, #8
 800cd30:	46bd      	mov	sp, r7
 800cd32:	bd80      	pop	{r7, pc}

0800cd34 <_ZN14screenViewBase11setupScreenEv>:

void screenViewBase::setupScreen()
{
 800cd34:	b480      	push	{r7}
 800cd36:	b083      	sub	sp, #12
 800cd38:	af00      	add	r7, sp, #0
 800cd3a:	6078      	str	r0, [r7, #4]

}
 800cd3c:	bf00      	nop
 800cd3e:	370c      	adds	r7, #12
 800cd40:	46bd      	mov	sp, r7
 800cd42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd46:	4770      	bx	lr

0800cd48 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>:
    View()
 800cd48:	b580      	push	{r7, lr}
 800cd4a:	b082      	sub	sp, #8
 800cd4c:	af00      	add	r7, sp, #0
 800cd4e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800cd50:	687b      	ldr	r3, [r7, #4]
 800cd52:	4618      	mov	r0, r3
 800cd54:	f007 f890 	bl	8013e78 <_ZN8touchgfx6ScreenC1Ev>
 800cd58:	4a05      	ldr	r2, [pc, #20]	; (800cd70 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev+0x28>)
 800cd5a:	687b      	ldr	r3, [r7, #4]
 800cd5c:	601a      	str	r2, [r3, #0]
 800cd5e:	687b      	ldr	r3, [r7, #4]
 800cd60:	2200      	movs	r2, #0
 800cd62:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800cd64:	687b      	ldr	r3, [r7, #4]
 800cd66:	4618      	mov	r0, r3
 800cd68:	3708      	adds	r7, #8
 800cd6a:	46bd      	mov	sp, r7
 800cd6c:	bd80      	pop	{r7, pc}
 800cd6e:	bf00      	nop
 800cd70:	08024cfc 	.word	0x08024cfc

0800cd74 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800cd74:	b580      	push	{r7, lr}
 800cd76:	b082      	sub	sp, #8
 800cd78:	af00      	add	r7, sp, #0
 800cd7a:	6078      	str	r0, [r7, #4]
 800cd7c:	4a05      	ldr	r2, [pc, #20]	; (800cd94 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800cd7e:	687b      	ldr	r3, [r7, #4]
 800cd80:	601a      	str	r2, [r3, #0]
 800cd82:	687b      	ldr	r3, [r7, #4]
 800cd84:	4618      	mov	r0, r3
 800cd86:	f7ff fbc3 	bl	800c510 <_ZN8touchgfx8DrawableD1Ev>
 800cd8a:	687b      	ldr	r3, [r7, #4]
 800cd8c:	4618      	mov	r0, r3
 800cd8e:	3708      	adds	r7, #8
 800cd90:	46bd      	mov	sp, r7
 800cd92:	bd80      	pop	{r7, pc}
 800cd94:	08025294 	.word	0x08025294

0800cd98 <_ZN8touchgfx9ContainerD0Ev>:
 800cd98:	b580      	push	{r7, lr}
 800cd9a:	b082      	sub	sp, #8
 800cd9c:	af00      	add	r7, sp, #0
 800cd9e:	6078      	str	r0, [r7, #4]
 800cda0:	6878      	ldr	r0, [r7, #4]
 800cda2:	f7ff ffe7 	bl	800cd74 <_ZN8touchgfx9ContainerD1Ev>
 800cda6:	212c      	movs	r1, #44	; 0x2c
 800cda8:	6878      	ldr	r0, [r7, #4]
 800cdaa:	f015 fe70 	bl	8022a8e <_ZdlPvj>
 800cdae:	687b      	ldr	r3, [r7, #4]
 800cdb0:	4618      	mov	r0, r3
 800cdb2:	3708      	adds	r7, #8
 800cdb4:	46bd      	mov	sp, r7
 800cdb6:	bd80      	pop	{r7, pc}

0800cdb8 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800cdb8:	b580      	push	{r7, lr}
 800cdba:	b082      	sub	sp, #8
 800cdbc:	af00      	add	r7, sp, #0
 800cdbe:	6078      	str	r0, [r7, #4]
 800cdc0:	4a05      	ldr	r2, [pc, #20]	; (800cdd8 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800cdc2:	687b      	ldr	r3, [r7, #4]
 800cdc4:	601a      	str	r2, [r3, #0]
 800cdc6:	687b      	ldr	r3, [r7, #4]
 800cdc8:	4618      	mov	r0, r3
 800cdca:	f7ff fdb1 	bl	800c930 <_ZN8touchgfx6WidgetD1Ev>
 800cdce:	687b      	ldr	r3, [r7, #4]
 800cdd0:	4618      	mov	r0, r3
 800cdd2:	3708      	adds	r7, #8
 800cdd4:	46bd      	mov	sp, r7
 800cdd6:	bd80      	pop	{r7, pc}
 800cdd8:	0802550c 	.word	0x0802550c

0800cddc <_ZN8touchgfx3BoxD0Ev>:
 800cddc:	b580      	push	{r7, lr}
 800cdde:	b082      	sub	sp, #8
 800cde0:	af00      	add	r7, sp, #0
 800cde2:	6078      	str	r0, [r7, #4]
 800cde4:	6878      	ldr	r0, [r7, #4]
 800cde6:	f7ff ffe7 	bl	800cdb8 <_ZN8touchgfx3BoxD1Ev>
 800cdea:	212c      	movs	r1, #44	; 0x2c
 800cdec:	6878      	ldr	r0, [r7, #4]
 800cdee:	f015 fe4e 	bl	8022a8e <_ZdlPvj>
 800cdf2:	687b      	ldr	r3, [r7, #4]
 800cdf4:	4618      	mov	r0, r3
 800cdf6:	3708      	adds	r7, #8
 800cdf8:	46bd      	mov	sp, r7
 800cdfa:	bd80      	pop	{r7, pc}

0800cdfc <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800cdfc:	b580      	push	{r7, lr}
 800cdfe:	b082      	sub	sp, #8
 800ce00:	af00      	add	r7, sp, #0
 800ce02:	6078      	str	r0, [r7, #4]
 800ce04:	4a08      	ldr	r2, [pc, #32]	; (800ce28 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800ce06:	687b      	ldr	r3, [r7, #4]
 800ce08:	601a      	str	r2, [r3, #0]
 800ce0a:	687b      	ldr	r3, [r7, #4]
 800ce0c:	3328      	adds	r3, #40	; 0x28
 800ce0e:	4618      	mov	r0, r3
 800ce10:	f7fe fbd4 	bl	800b5bc <_ZN8touchgfx9TypedTextD1Ev>
 800ce14:	687b      	ldr	r3, [r7, #4]
 800ce16:	4618      	mov	r0, r3
 800ce18:	f7ff fd8a 	bl	800c930 <_ZN8touchgfx6WidgetD1Ev>
 800ce1c:	687b      	ldr	r3, [r7, #4]
 800ce1e:	4618      	mov	r0, r3
 800ce20:	3708      	adds	r7, #8
 800ce22:	46bd      	mov	sp, r7
 800ce24:	bd80      	pop	{r7, pc}
 800ce26:	bf00      	nop
 800ce28:	0802547c 	.word	0x0802547c

0800ce2c <_ZN8touchgfx8TextAreaD0Ev>:
 800ce2c:	b580      	push	{r7, lr}
 800ce2e:	b082      	sub	sp, #8
 800ce30:	af00      	add	r7, sp, #0
 800ce32:	6078      	str	r0, [r7, #4]
 800ce34:	6878      	ldr	r0, [r7, #4]
 800ce36:	f7ff ffe1 	bl	800cdfc <_ZN8touchgfx8TextAreaD1Ev>
 800ce3a:	2148      	movs	r1, #72	; 0x48
 800ce3c:	6878      	ldr	r0, [r7, #4]
 800ce3e:	f015 fe26 	bl	8022a8e <_ZdlPvj>
 800ce42:	687b      	ldr	r3, [r7, #4]
 800ce44:	4618      	mov	r0, r3
 800ce46:	3708      	adds	r7, #8
 800ce48:	46bd      	mov	sp, r7
 800ce4a:	bd80      	pop	{r7, pc}

0800ce4c <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800ce4c:	b480      	push	{r7}
 800ce4e:	af00      	add	r7, sp, #0
    return bitmap_database;
 800ce50:	4b02      	ldr	r3, [pc, #8]	; (800ce5c <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800ce52:	4618      	mov	r0, r3
 800ce54:	46bd      	mov	sp, r7
 800ce56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce5a:	4770      	bx	lr
 800ce5c:	08024d90 	.word	0x08024d90

0800ce60 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800ce60:	b480      	push	{r7}
 800ce62:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800ce64:	2301      	movs	r3, #1
}
 800ce66:	4618      	mov	r0, r3
 800ce68:	46bd      	mov	sp, r7
 800ce6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce6e:	4770      	bx	lr

0800ce70 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800ce70:	b480      	push	{r7}
 800ce72:	b085      	sub	sp, #20
 800ce74:	af00      	add	r7, sp, #0
 800ce76:	60f8      	str	r0, [r7, #12]
 800ce78:	460b      	mov	r3, r1
 800ce7a:	607a      	str	r2, [r7, #4]
 800ce7c:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800ce7e:	2300      	movs	r3, #0
    }
 800ce80:	4618      	mov	r0, r3
 800ce82:	3714      	adds	r7, #20
 800ce84:	46bd      	mov	sp, r7
 800ce86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce8a:	4770      	bx	lr

0800ce8c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800ce8c:	b480      	push	{r7}
 800ce8e:	b083      	sub	sp, #12
 800ce90:	af00      	add	r7, sp, #0
 800ce92:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800ce94:	2300      	movs	r3, #0
    }
 800ce96:	4618      	mov	r0, r3
 800ce98:	370c      	adds	r7, #12
 800ce9a:	46bd      	mov	sp, r7
 800ce9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cea0:	4770      	bx	lr

0800cea2 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800cea2:	b480      	push	{r7}
 800cea4:	b083      	sub	sp, #12
 800cea6:	af00      	add	r7, sp, #0
 800cea8:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800ceaa:	2300      	movs	r3, #0
    }
 800ceac:	4618      	mov	r0, r3
 800ceae:	370c      	adds	r7, #12
 800ceb0:	46bd      	mov	sp, r7
 800ceb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ceb6:	4770      	bx	lr

0800ceb8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800ceb8:	b480      	push	{r7}
 800ceba:	b085      	sub	sp, #20
 800cebc:	af00      	add	r7, sp, #0
 800cebe:	60f8      	str	r0, [r7, #12]
 800cec0:	60b9      	str	r1, [r7, #8]
 800cec2:	4613      	mov	r3, r2
 800cec4:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800cec6:	4a07      	ldr	r2, [pc, #28]	; (800cee4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800cec8:	68fb      	ldr	r3, [r7, #12]
 800ceca:	6013      	str	r3, [r2, #0]
        fonts = f;
 800cecc:	4a06      	ldr	r2, [pc, #24]	; (800cee8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800cece:	68bb      	ldr	r3, [r7, #8]
 800ced0:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800ced2:	4a06      	ldr	r2, [pc, #24]	; (800ceec <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800ced4:	88fb      	ldrh	r3, [r7, #6]
 800ced6:	8013      	strh	r3, [r2, #0]
    }
 800ced8:	bf00      	nop
 800ceda:	3714      	adds	r7, #20
 800cedc:	46bd      	mov	sp, r7
 800cede:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cee2:	4770      	bx	lr
 800cee4:	24001f28 	.word	0x24001f28
 800cee8:	24001f30 	.word	0x24001f30
 800ceec:	24001f2c 	.word	0x24001f2c

0800cef0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800cef0:	b40e      	push	{r1, r2, r3}
 800cef2:	b580      	push	{r7, lr}
 800cef4:	b085      	sub	sp, #20
 800cef6:	af00      	add	r7, sp, #0
 800cef8:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800cefa:	f107 0320 	add.w	r3, r7, #32
 800cefe:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800cf00:	68bb      	ldr	r3, [r7, #8]
 800cf02:	69fa      	ldr	r2, [r7, #28]
 800cf04:	2100      	movs	r1, #0
 800cf06:	6878      	ldr	r0, [r7, #4]
 800cf08:	f006 fbec 	bl	80136e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800cf0c:	4603      	mov	r3, r0
 800cf0e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800cf10:	89fb      	ldrh	r3, [r7, #14]
}
 800cf12:	4618      	mov	r0, r3
 800cf14:	3714      	adds	r7, #20
 800cf16:	46bd      	mov	sp, r7
 800cf18:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800cf1c:	b003      	add	sp, #12
 800cf1e:	4770      	bx	lr

0800cf20 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800cf20:	b40c      	push	{r2, r3}
 800cf22:	b580      	push	{r7, lr}
 800cf24:	b084      	sub	sp, #16
 800cf26:	af00      	add	r7, sp, #0
 800cf28:	6078      	str	r0, [r7, #4]
 800cf2a:	460b      	mov	r3, r1
 800cf2c:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800cf2e:	f107 031c 	add.w	r3, r7, #28
 800cf32:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800cf34:	78f9      	ldrb	r1, [r7, #3]
 800cf36:	68bb      	ldr	r3, [r7, #8]
 800cf38:	69ba      	ldr	r2, [r7, #24]
 800cf3a:	6878      	ldr	r0, [r7, #4]
 800cf3c:	f006 fbd2 	bl	80136e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800cf40:	4603      	mov	r3, r0
 800cf42:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800cf44:	89fb      	ldrh	r3, [r7, #14]
}
 800cf46:	4618      	mov	r0, r3
 800cf48:	3710      	adds	r7, #16
 800cf4a:	46bd      	mov	sp, r7
 800cf4c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800cf50:	b002      	add	sp, #8
 800cf52:	4770      	bx	lr

0800cf54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800cf54:	b580      	push	{r7, lr}
 800cf56:	b08a      	sub	sp, #40	; 0x28
 800cf58:	af00      	add	r7, sp, #0
 800cf5a:	6078      	str	r0, [r7, #4]
 800cf5c:	460b      	mov	r3, r1
 800cf5e:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800cf60:	687b      	ldr	r3, [r7, #4]
 800cf62:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cf64:	2b00      	cmp	r3, #0
 800cf66:	d016      	beq.n	800cf96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800cf68:	687b      	ldr	r3, [r7, #4]
 800cf6a:	3322      	adds	r3, #34	; 0x22
 800cf6c:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800cf6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cf70:	8adb      	ldrh	r3, [r3, #22]
 800cf72:	2b00      	cmp	r3, #0
 800cf74:	d105      	bne.n	800cf82 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800cf76:	4b43      	ldr	r3, [pc, #268]	; (800d084 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800cf78:	4a43      	ldr	r2, [pc, #268]	; (800d088 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800cf7a:	21c5      	movs	r1, #197	; 0xc5
 800cf7c:	4843      	ldr	r0, [pc, #268]	; (800d08c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800cf7e:	f015 fdb5 	bl	8022aec <__assert_func>
            return buffer[pos];
 800cf82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cf84:	8a9b      	ldrh	r3, [r3, #20]
 800cf86:	461a      	mov	r2, r3
 800cf88:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cf8a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800cf8e:	2b00      	cmp	r3, #0
 800cf90:	d001      	beq.n	800cf96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800cf92:	2301      	movs	r3, #1
 800cf94:	e000      	b.n	800cf98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800cf96:	2300      	movs	r3, #0
 800cf98:	2b00      	cmp	r3, #0
 800cf9a:	d06a      	beq.n	800d072 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800cf9c:	6878      	ldr	r0, [r7, #4]
 800cf9e:	f007 fe47 	bl	8014c30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800cfa2:	687b      	ldr	r3, [r7, #4]
 800cfa4:	3322      	adds	r3, #34	; 0x22
 800cfa6:	623b      	str	r3, [r7, #32]
 800cfa8:	2301      	movs	r3, #1
 800cfaa:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800cfac:	6a3b      	ldr	r3, [r7, #32]
 800cfae:	8adb      	ldrh	r3, [r3, #22]
 800cfb0:	8bfa      	ldrh	r2, [r7, #30]
 800cfb2:	429a      	cmp	r2, r3
 800cfb4:	d305      	bcc.n	800cfc2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800cfb6:	4b36      	ldr	r3, [pc, #216]	; (800d090 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800cfb8:	4a36      	ldr	r2, [pc, #216]	; (800d094 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800cfba:	21cb      	movs	r1, #203	; 0xcb
 800cfbc:	4833      	ldr	r0, [pc, #204]	; (800d08c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800cfbe:	f015 fd95 	bl	8022aec <__assert_func>
            const uint16_t index = pos + offset;
 800cfc2:	6a3b      	ldr	r3, [r7, #32]
 800cfc4:	8a9a      	ldrh	r2, [r3, #20]
 800cfc6:	8bfb      	ldrh	r3, [r7, #30]
 800cfc8:	4413      	add	r3, r2
 800cfca:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800cfcc:	8bbb      	ldrh	r3, [r7, #28]
 800cfce:	2b09      	cmp	r3, #9
 800cfd0:	d801      	bhi.n	800cfd6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800cfd2:	8bbb      	ldrh	r3, [r7, #28]
 800cfd4:	e001      	b.n	800cfda <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800cfd6:	8bbb      	ldrh	r3, [r7, #28]
 800cfd8:	3b0a      	subs	r3, #10
 800cfda:	6a3a      	ldr	r2, [r7, #32]
 800cfdc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800cfe0:	f640 123f 	movw	r2, #2367	; 0x93f
 800cfe4:	4293      	cmp	r3, r2
 800cfe6:	bf0c      	ite	eq
 800cfe8:	2301      	moveq	r3, #1
 800cfea:	2300      	movne	r3, #0
 800cfec:	b2db      	uxtb	r3, r3
 800cfee:	2b00      	cmp	r3, #0
 800cff0:	d03f      	beq.n	800d072 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800cff2:	687b      	ldr	r3, [r7, #4]
 800cff4:	3322      	adds	r3, #34	; 0x22
 800cff6:	687a      	ldr	r2, [r7, #4]
 800cff8:	3222      	adds	r2, #34	; 0x22
 800cffa:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800cffc:	68ba      	ldr	r2, [r7, #8]
 800cffe:	8ad2      	ldrh	r2, [r2, #22]
 800d000:	2a00      	cmp	r2, #0
 800d002:	d105      	bne.n	800d010 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800d004:	4b1f      	ldr	r3, [pc, #124]	; (800d084 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d006:	4a20      	ldr	r2, [pc, #128]	; (800d088 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d008:	21c5      	movs	r1, #197	; 0xc5
 800d00a:	4820      	ldr	r0, [pc, #128]	; (800d08c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d00c:	f015 fd6e 	bl	8022aec <__assert_func>
            return buffer[pos];
 800d010:	68ba      	ldr	r2, [r7, #8]
 800d012:	8a92      	ldrh	r2, [r2, #20]
 800d014:	4611      	mov	r1, r2
 800d016:	68ba      	ldr	r2, [r7, #8]
 800d018:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800d01c:	613b      	str	r3, [r7, #16]
 800d01e:	4613      	mov	r3, r2
 800d020:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800d022:	693b      	ldr	r3, [r7, #16]
 800d024:	8adb      	ldrh	r3, [r3, #22]
 800d026:	2b01      	cmp	r3, #1
 800d028:	d806      	bhi.n	800d038 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800d02a:	4b1b      	ldr	r3, [pc, #108]	; (800d098 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800d02c:	4a1b      	ldr	r2, [pc, #108]	; (800d09c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800d02e:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800d032:	4816      	ldr	r0, [pc, #88]	; (800d08c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d034:	f015 fd5a 	bl	8022aec <__assert_func>
            const uint16_t index = pos + 1;
 800d038:	693b      	ldr	r3, [r7, #16]
 800d03a:	8a9b      	ldrh	r3, [r3, #20]
 800d03c:	3301      	adds	r3, #1
 800d03e:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800d040:	89bb      	ldrh	r3, [r7, #12]
 800d042:	2b09      	cmp	r3, #9
 800d044:	d801      	bhi.n	800d04a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800d046:	89bb      	ldrh	r3, [r7, #12]
 800d048:	e000      	b.n	800d04c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800d04a:	2300      	movs	r3, #0
 800d04c:	693a      	ldr	r2, [r7, #16]
 800d04e:	89f9      	ldrh	r1, [r7, #14]
 800d050:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800d054:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800d056:	687b      	ldr	r3, [r7, #4]
 800d058:	3322      	adds	r3, #34	; 0x22
 800d05a:	61bb      	str	r3, [r7, #24]
 800d05c:	f640 133f 	movw	r3, #2367	; 0x93f
 800d060:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800d062:	69bb      	ldr	r3, [r7, #24]
 800d064:	8a9b      	ldrh	r3, [r3, #20]
 800d066:	4619      	mov	r1, r3
 800d068:	69bb      	ldr	r3, [r7, #24]
 800d06a:	8afa      	ldrh	r2, [r7, #22]
 800d06c:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800d070:	bf00      	nop
        }
    }
    return getNextChar();
 800d072:	6878      	ldr	r0, [r7, #4]
 800d074:	f007 fcde 	bl	8014a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d078:	4603      	mov	r3, r0
}
 800d07a:	4618      	mov	r0, r3
 800d07c:	3728      	adds	r7, #40	; 0x28
 800d07e:	46bd      	mov	sp, r7
 800d080:	bd80      	pop	{r7, pc}
 800d082:	bf00      	nop
 800d084:	08023e78 	.word	0x08023e78
 800d088:	08023e84 	.word	0x08023e84
 800d08c:	08023f30 	.word	0x08023f30
 800d090:	08023f78 	.word	0x08023f78
 800d094:	08023f88 	.word	0x08023f88
 800d098:	0802405c 	.word	0x0802405c
 800d09c:	08024068 	.word	0x08024068

0800d0a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800d0a0:	b580      	push	{r7, lr}
 800d0a2:	b082      	sub	sp, #8
 800d0a4:	af00      	add	r7, sp, #0
 800d0a6:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800d0a8:	6878      	ldr	r0, [r7, #4]
 800d0aa:	f007 fc8c 	bl	80149c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800d0ae:	bf00      	nop
 800d0b0:	3708      	adds	r7, #8
 800d0b2:	46bd      	mov	sp, r7
 800d0b4:	bd80      	pop	{r7, pc}

0800d0b6 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800d0b6:	b580      	push	{r7, lr}
 800d0b8:	b088      	sub	sp, #32
 800d0ba:	af02      	add	r7, sp, #8
 800d0bc:	60f8      	str	r0, [r7, #12]
 800d0be:	1d38      	adds	r0, r7, #4
 800d0c0:	e880 0006 	stmia.w	r0, {r1, r2}
 800d0c4:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800d0c6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d0ca:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800d0cc:	1d39      	adds	r1, r7, #4
 800d0ce:	697b      	ldr	r3, [r7, #20]
 800d0d0:	9301      	str	r3, [sp, #4]
 800d0d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d0d4:	9300      	str	r3, [sp, #0]
 800d0d6:	6a3b      	ldr	r3, [r7, #32]
 800d0d8:	683a      	ldr	r2, [r7, #0]
 800d0da:	68f8      	ldr	r0, [r7, #12]
 800d0dc:	f004 ff5c 	bl	8011f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800d0e0:	bf00      	nop
 800d0e2:	3718      	adds	r7, #24
 800d0e4:	46bd      	mov	sp, r7
 800d0e6:	bd80      	pop	{r7, pc}

0800d0e8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800d0e8:	b590      	push	{r4, r7, lr}
 800d0ea:	b085      	sub	sp, #20
 800d0ec:	af00      	add	r7, sp, #0
 800d0ee:	4603      	mov	r3, r0
 800d0f0:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800d0f2:	2300      	movs	r3, #0
 800d0f4:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800d0f6:	88fb      	ldrh	r3, [r7, #6]
 800d0f8:	2b00      	cmp	r3, #0
 800d0fa:	d127      	bne.n	800d14c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800d0fc:	88fb      	ldrh	r3, [r7, #6]
 800d0fe:	4a1e      	ldr	r2, [pc, #120]	; (800d178 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d100:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d104:	2b00      	cmp	r3, #0
 800d106:	d016      	beq.n	800d136 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800d108:	88fb      	ldrh	r3, [r7, #6]
 800d10a:	4a1b      	ldr	r2, [pc, #108]	; (800d178 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d10c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d110:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800d112:	68bb      	ldr	r3, [r7, #8]
 800d114:	681b      	ldr	r3, [r3, #0]
 800d116:	68ba      	ldr	r2, [r7, #8]
 800d118:	4413      	add	r3, r2
 800d11a:	4a18      	ldr	r2, [pc, #96]	; (800d17c <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d11c:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800d11e:	68bb      	ldr	r3, [r7, #8]
 800d120:	685b      	ldr	r3, [r3, #4]
 800d122:	68ba      	ldr	r2, [r7, #8]
 800d124:	4413      	add	r3, r2
 800d126:	4a16      	ldr	r2, [pc, #88]	; (800d180 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d128:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800d12a:	68bb      	ldr	r3, [r7, #8]
 800d12c:	689b      	ldr	r3, [r3, #8]
 800d12e:	68ba      	ldr	r2, [r7, #8]
 800d130:	4413      	add	r3, r2
 800d132:	60fb      	str	r3, [r7, #12]
 800d134:	e00a      	b.n	800d14c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800d136:	4b11      	ldr	r3, [pc, #68]	; (800d17c <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d138:	4a12      	ldr	r2, [pc, #72]	; (800d184 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800d13a:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800d13c:	4a12      	ldr	r2, [pc, #72]	; (800d188 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800d13e:	4b10      	ldr	r3, [pc, #64]	; (800d180 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d140:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800d142:	88fb      	ldrh	r3, [r7, #6]
 800d144:	4a11      	ldr	r2, [pc, #68]	; (800d18c <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800d146:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d14a:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800d14c:	68fb      	ldr	r3, [r7, #12]
 800d14e:	2b00      	cmp	r3, #0
 800d150:	d00d      	beq.n	800d16e <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800d152:	4a0f      	ldr	r2, [pc, #60]	; (800d190 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800d154:	88fb      	ldrh	r3, [r7, #6]
 800d156:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800d158:	f000 f83e 	bl	800d1d8 <_ZN17TypedTextDatabase8getFontsEv>
 800d15c:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800d15e:	f000 f833 	bl	800d1c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800d162:	4603      	mov	r3, r0
 800d164:	461a      	mov	r2, r3
 800d166:	4621      	mov	r1, r4
 800d168:	68f8      	ldr	r0, [r7, #12]
 800d16a:	f7ff fea5 	bl	800ceb8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800d16e:	bf00      	nop
 800d170:	3714      	adds	r7, #20
 800d172:	46bd      	mov	sp, r7
 800d174:	bd90      	pop	{r4, r7, pc}
 800d176:	bf00      	nop
 800d178:	24000424 	.word	0x24000424
 800d17c:	2400042c 	.word	0x2400042c
 800d180:	24000430 	.word	0x24000430
 800d184:	08025e14 	.word	0x08025e14
 800d188:	08025e10 	.word	0x08025e10
 800d18c:	08025e2c 	.word	0x08025e2c
 800d190:	24000428 	.word	0x24000428

0800d194 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800d194:	b480      	push	{r7}
 800d196:	b083      	sub	sp, #12
 800d198:	af00      	add	r7, sp, #0
 800d19a:	6078      	str	r0, [r7, #4]
 800d19c:	460b      	mov	r3, r1
 800d19e:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800d1a0:	4b07      	ldr	r3, [pc, #28]	; (800d1c0 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800d1a2:	681a      	ldr	r2, [r3, #0]
 800d1a4:	4b07      	ldr	r3, [pc, #28]	; (800d1c4 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800d1a6:	6819      	ldr	r1, [r3, #0]
 800d1a8:	887b      	ldrh	r3, [r7, #2]
 800d1aa:	009b      	lsls	r3, r3, #2
 800d1ac:	440b      	add	r3, r1
 800d1ae:	681b      	ldr	r3, [r3, #0]
 800d1b0:	005b      	lsls	r3, r3, #1
 800d1b2:	4413      	add	r3, r2
}
 800d1b4:	4618      	mov	r0, r3
 800d1b6:	370c      	adds	r7, #12
 800d1b8:	46bd      	mov	sp, r7
 800d1ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1be:	4770      	bx	lr
 800d1c0:	2400042c 	.word	0x2400042c
 800d1c4:	24000430 	.word	0x24000430

0800d1c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800d1c8:	b480      	push	{r7}
 800d1ca:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800d1cc:	2301      	movs	r3, #1
}
 800d1ce:	4618      	mov	r0, r3
 800d1d0:	46bd      	mov	sp, r7
 800d1d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1d6:	4770      	bx	lr

0800d1d8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800d1d8:	b480      	push	{r7}
 800d1da:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800d1dc:	4b02      	ldr	r3, [pc, #8]	; (800d1e8 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800d1de:	4618      	mov	r0, r3
 800d1e0:	46bd      	mov	sp, r7
 800d1e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1e6:	4770      	bx	lr
 800d1e8:	24000434 	.word	0x24000434

0800d1ec <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800d1ec:	b580      	push	{r7, lr}
 800d1ee:	b082      	sub	sp, #8
 800d1f0:	af00      	add	r7, sp, #0
 800d1f2:	6078      	str	r0, [r7, #4]
 800d1f4:	6039      	str	r1, [r7, #0]
 800d1f6:	687b      	ldr	r3, [r7, #4]
 800d1f8:	2b01      	cmp	r3, #1
 800d1fa:	d113      	bne.n	800d224 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800d1fc:	683b      	ldr	r3, [r7, #0]
 800d1fe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d202:	4293      	cmp	r3, r2
 800d204:	d10e      	bne.n	800d224 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800d206:	f7fe fb15 	bl	800b834 <_Z23getFont_verdana_20_4bppv>
 800d20a:	4603      	mov	r3, r0
};
 800d20c:	4a07      	ldr	r2, [pc, #28]	; (800d22c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d20e:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800d210:	f7fe fb6a 	bl	800b8e8 <_Z23getFont_verdana_40_4bppv>
 800d214:	4603      	mov	r3, r0
};
 800d216:	4a05      	ldr	r2, [pc, #20]	; (800d22c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d218:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800d21a:	f7fe fab1 	bl	800b780 <_Z23getFont_verdana_10_4bppv>
 800d21e:	4603      	mov	r3, r0
};
 800d220:	4a02      	ldr	r2, [pc, #8]	; (800d22c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800d222:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800d224:	bf00      	nop
 800d226:	3708      	adds	r7, #8
 800d228:	46bd      	mov	sp, r7
 800d22a:	bd80      	pop	{r7, pc}
 800d22c:	24000434 	.word	0x24000434

0800d230 <_GLOBAL__sub_I_touchgfx_fonts>:
 800d230:	b580      	push	{r7, lr}
 800d232:	af00      	add	r7, sp, #0
 800d234:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d238:	2001      	movs	r0, #1
 800d23a:	f7ff ffd7 	bl	800d1ec <_Z41__static_initialization_and_destruction_0ii>
 800d23e:	bd80      	pop	{r7, pc}

0800d240 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800d240:	b580      	push	{r7, lr}
 800d242:	b082      	sub	sp, #8
 800d244:	af00      	add	r7, sp, #0
 800d246:	6078      	str	r0, [r7, #4]
 800d248:	4a05      	ldr	r2, [pc, #20]	; (800d260 <_ZN19FrontendApplicationD1Ev+0x20>)
 800d24a:	687b      	ldr	r3, [r7, #4]
 800d24c:	601a      	str	r2, [r3, #0]
 800d24e:	687b      	ldr	r3, [r7, #4]
 800d250:	4618      	mov	r0, r3
 800d252:	f7fe fda9 	bl	800bda8 <_ZN23FrontendApplicationBaseD1Ev>
 800d256:	687b      	ldr	r3, [r7, #4]
 800d258:	4618      	mov	r0, r3
 800d25a:	3708      	adds	r7, #8
 800d25c:	46bd      	mov	sp, r7
 800d25e:	bd80      	pop	{r7, pc}
 800d260:	08024e08 	.word	0x08024e08

0800d264 <_ZN19FrontendApplicationD0Ev>:
 800d264:	b580      	push	{r7, lr}
 800d266:	b082      	sub	sp, #8
 800d268:	af00      	add	r7, sp, #0
 800d26a:	6078      	str	r0, [r7, #4]
 800d26c:	6878      	ldr	r0, [r7, #4]
 800d26e:	f7ff ffe7 	bl	800d240 <_ZN19FrontendApplicationD1Ev>
 800d272:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800d276:	6878      	ldr	r0, [r7, #4]
 800d278:	f015 fc09 	bl	8022a8e <_ZdlPvj>
 800d27c:	687b      	ldr	r3, [r7, #4]
 800d27e:	4618      	mov	r0, r3
 800d280:	3708      	adds	r7, #8
 800d282:	46bd      	mov	sp, r7
 800d284:	bd80      	pop	{r7, pc}

0800d286 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800d286:	b580      	push	{r7, lr}
 800d288:	b082      	sub	sp, #8
 800d28a:	af00      	add	r7, sp, #0
 800d28c:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800d28e:	687b      	ldr	r3, [r7, #4]
 800d290:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800d294:	4618      	mov	r0, r3
 800d296:	f000 f82d 	bl	800d2f4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800d29a:	687b      	ldr	r3, [r7, #4]
 800d29c:	4618      	mov	r0, r3
 800d29e:	f005 fb55 	bl	801294c <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800d2a2:	bf00      	nop
 800d2a4:	3708      	adds	r7, #8
 800d2a6:	46bd      	mov	sp, r7
 800d2a8:	bd80      	pop	{r7, pc}
	...

0800d2ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800d2ac:	b580      	push	{r7, lr}
 800d2ae:	b084      	sub	sp, #16
 800d2b0:	af00      	add	r7, sp, #0
 800d2b2:	60f8      	str	r0, [r7, #12]
 800d2b4:	60b9      	str	r1, [r7, #8]
 800d2b6:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800d2b8:	68fb      	ldr	r3, [r7, #12]
 800d2ba:	687a      	ldr	r2, [r7, #4]
 800d2bc:	68b9      	ldr	r1, [r7, #8]
 800d2be:	4618      	mov	r0, r3
 800d2c0:	f7fe fdc2 	bl	800be48 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800d2c4:	4a03      	ldr	r2, [pc, #12]	; (800d2d4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800d2c6:	68fb      	ldr	r3, [r7, #12]
 800d2c8:	601a      	str	r2, [r3, #0]
{

}
 800d2ca:	68fb      	ldr	r3, [r7, #12]
 800d2cc:	4618      	mov	r0, r3
 800d2ce:	3710      	adds	r7, #16
 800d2d0:	46bd      	mov	sp, r7
 800d2d2:	bd80      	pop	{r7, pc}
 800d2d4:	08024e08 	.word	0x08024e08

0800d2d8 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800d2d8:	b480      	push	{r7}
 800d2da:	b083      	sub	sp, #12
 800d2dc:	af00      	add	r7, sp, #0
 800d2de:	6078      	str	r0, [r7, #4]
 800d2e0:	687b      	ldr	r3, [r7, #4]
 800d2e2:	2200      	movs	r2, #0
 800d2e4:	601a      	str	r2, [r3, #0]
{

}
 800d2e6:	687b      	ldr	r3, [r7, #4]
 800d2e8:	4618      	mov	r0, r3
 800d2ea:	370c      	adds	r7, #12
 800d2ec:	46bd      	mov	sp, r7
 800d2ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d2f2:	4770      	bx	lr

0800d2f4 <_ZN5Model4tickEv>:

void Model::tick()
{
 800d2f4:	b480      	push	{r7}
 800d2f6:	b083      	sub	sp, #12
 800d2f8:	af00      	add	r7, sp, #0
 800d2fa:	6078      	str	r0, [r7, #4]

}
 800d2fc:	bf00      	nop
 800d2fe:	370c      	adds	r7, #12
 800d300:	46bd      	mov	sp, r7
 800d302:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d306:	4770      	bx	lr

0800d308 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800d308:	b480      	push	{r7}
 800d30a:	b083      	sub	sp, #12
 800d30c:	af00      	add	r7, sp, #0
 800d30e:	6078      	str	r0, [r7, #4]
    {
    }
 800d310:	bf00      	nop
 800d312:	370c      	adds	r7, #12
 800d314:	46bd      	mov	sp, r7
 800d316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d31a:	4770      	bx	lr

0800d31c <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800d31c:	b480      	push	{r7}
 800d31e:	b083      	sub	sp, #12
 800d320:	af00      	add	r7, sp, #0
 800d322:	6078      	str	r0, [r7, #4]
    {
    }
 800d324:	bf00      	nop
 800d326:	370c      	adds	r7, #12
 800d328:	46bd      	mov	sp, r7
 800d32a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d32e:	4770      	bx	lr

0800d330 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800d330:	b480      	push	{r7}
 800d332:	b083      	sub	sp, #12
 800d334:	af00      	add	r7, sp, #0
 800d336:	6078      	str	r0, [r7, #4]
    {
 800d338:	4a04      	ldr	r2, [pc, #16]	; (800d34c <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800d33a:	687b      	ldr	r3, [r7, #4]
 800d33c:	601a      	str	r2, [r3, #0]
    }
 800d33e:	687b      	ldr	r3, [r7, #4]
 800d340:	4618      	mov	r0, r3
 800d342:	370c      	adds	r7, #12
 800d344:	46bd      	mov	sp, r7
 800d346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d34a:	4770      	bx	lr
 800d34c:	08024e94 	.word	0x08024e94

0800d350 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800d350:	b580      	push	{r7, lr}
 800d352:	b082      	sub	sp, #8
 800d354:	af00      	add	r7, sp, #0
 800d356:	6078      	str	r0, [r7, #4]
    }
 800d358:	6878      	ldr	r0, [r7, #4]
 800d35a:	f7ff ffe9 	bl	800d330 <_ZN8touchgfx9PresenterD1Ev>
 800d35e:	2104      	movs	r1, #4
 800d360:	6878      	ldr	r0, [r7, #4]
 800d362:	f015 fb94 	bl	8022a8e <_ZdlPvj>
 800d366:	687b      	ldr	r3, [r7, #4]
 800d368:	4618      	mov	r0, r3
 800d36a:	3708      	adds	r7, #8
 800d36c:	46bd      	mov	sp, r7
 800d36e:	bd80      	pop	{r7, pc}

0800d370 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800d370:	b480      	push	{r7}
 800d372:	b083      	sub	sp, #12
 800d374:	af00      	add	r7, sp, #0
 800d376:	6078      	str	r0, [r7, #4]
    {
 800d378:	4a04      	ldr	r2, [pc, #16]	; (800d38c <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800d37a:	687b      	ldr	r3, [r7, #4]
 800d37c:	601a      	str	r2, [r3, #0]
    }
 800d37e:	687b      	ldr	r3, [r7, #4]
 800d380:	4618      	mov	r0, r3
 800d382:	370c      	adds	r7, #12
 800d384:	46bd      	mov	sp, r7
 800d386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d38a:	4770      	bx	lr
 800d38c:	08024e94 	.word	0x08024e94

0800d390 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800d390:	b480      	push	{r7}
 800d392:	b083      	sub	sp, #12
 800d394:	af00      	add	r7, sp, #0
 800d396:	6078      	str	r0, [r7, #4]
 800d398:	4a06      	ldr	r2, [pc, #24]	; (800d3b4 <_ZN13ModelListenerC1Ev+0x24>)
 800d39a:	687b      	ldr	r3, [r7, #4]
 800d39c:	601a      	str	r2, [r3, #0]
 800d39e:	687b      	ldr	r3, [r7, #4]
 800d3a0:	2200      	movs	r2, #0
 800d3a2:	605a      	str	r2, [r3, #4]
 800d3a4:	687b      	ldr	r3, [r7, #4]
 800d3a6:	4618      	mov	r0, r3
 800d3a8:	370c      	adds	r7, #12
 800d3aa:	46bd      	mov	sp, r7
 800d3ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3b0:	4770      	bx	lr
 800d3b2:	bf00      	nop
 800d3b4:	08024e84 	.word	0x08024e84

0800d3b8 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800d3b8:	b480      	push	{r7}
 800d3ba:	b083      	sub	sp, #12
 800d3bc:	af00      	add	r7, sp, #0
 800d3be:	6078      	str	r0, [r7, #4]
 800d3c0:	4a04      	ldr	r2, [pc, #16]	; (800d3d4 <_ZN13ModelListenerD1Ev+0x1c>)
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	601a      	str	r2, [r3, #0]
 800d3c6:	687b      	ldr	r3, [r7, #4]
 800d3c8:	4618      	mov	r0, r3
 800d3ca:	370c      	adds	r7, #12
 800d3cc:	46bd      	mov	sp, r7
 800d3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3d2:	4770      	bx	lr
 800d3d4:	08024e84 	.word	0x08024e84

0800d3d8 <_ZN13ModelListenerD0Ev>:
 800d3d8:	b580      	push	{r7, lr}
 800d3da:	b082      	sub	sp, #8
 800d3dc:	af00      	add	r7, sp, #0
 800d3de:	6078      	str	r0, [r7, #4]
 800d3e0:	6878      	ldr	r0, [r7, #4]
 800d3e2:	f7ff ffe9 	bl	800d3b8 <_ZN13ModelListenerD1Ev>
 800d3e6:	2108      	movs	r1, #8
 800d3e8:	6878      	ldr	r0, [r7, #4]
 800d3ea:	f015 fb50 	bl	8022a8e <_ZdlPvj>
 800d3ee:	687b      	ldr	r3, [r7, #4]
 800d3f0:	4618      	mov	r0, r3
 800d3f2:	3708      	adds	r7, #8
 800d3f4:	46bd      	mov	sp, r7
 800d3f6:	bd80      	pop	{r7, pc}

0800d3f8 <_ZN15screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screenPresenter() {}
 800d3f8:	b580      	push	{r7, lr}
 800d3fa:	b082      	sub	sp, #8
 800d3fc:	af00      	add	r7, sp, #0
 800d3fe:	6078      	str	r0, [r7, #4]
 800d400:	4a09      	ldr	r2, [pc, #36]	; (800d428 <_ZN15screenPresenterD1Ev+0x30>)
 800d402:	687b      	ldr	r3, [r7, #4]
 800d404:	601a      	str	r2, [r3, #0]
 800d406:	4a09      	ldr	r2, [pc, #36]	; (800d42c <_ZN15screenPresenterD1Ev+0x34>)
 800d408:	687b      	ldr	r3, [r7, #4]
 800d40a:	605a      	str	r2, [r3, #4]
 800d40c:	687b      	ldr	r3, [r7, #4]
 800d40e:	3304      	adds	r3, #4
 800d410:	4618      	mov	r0, r3
 800d412:	f7ff ffd1 	bl	800d3b8 <_ZN13ModelListenerD1Ev>
 800d416:	687b      	ldr	r3, [r7, #4]
 800d418:	4618      	mov	r0, r3
 800d41a:	f7ff ff89 	bl	800d330 <_ZN8touchgfx9PresenterD1Ev>
 800d41e:	687b      	ldr	r3, [r7, #4]
 800d420:	4618      	mov	r0, r3
 800d422:	3708      	adds	r7, #8
 800d424:	46bd      	mov	sp, r7
 800d426:	bd80      	pop	{r7, pc}
 800d428:	08024e5c 	.word	0x08024e5c
 800d42c:	08024e74 	.word	0x08024e74

0800d430 <_ZThn4_N15screenPresenterD1Ev>:
 800d430:	f1a0 0004 	sub.w	r0, r0, #4
 800d434:	e7e0      	b.n	800d3f8 <_ZN15screenPresenterD1Ev>
 800d436:	bf00      	nop

0800d438 <_ZN15screenPresenterD0Ev>:
 800d438:	b580      	push	{r7, lr}
 800d43a:	b082      	sub	sp, #8
 800d43c:	af00      	add	r7, sp, #0
 800d43e:	6078      	str	r0, [r7, #4]
 800d440:	6878      	ldr	r0, [r7, #4]
 800d442:	f7ff ffd9 	bl	800d3f8 <_ZN15screenPresenterD1Ev>
 800d446:	2110      	movs	r1, #16
 800d448:	6878      	ldr	r0, [r7, #4]
 800d44a:	f015 fb20 	bl	8022a8e <_ZdlPvj>
 800d44e:	687b      	ldr	r3, [r7, #4]
 800d450:	4618      	mov	r0, r3
 800d452:	3708      	adds	r7, #8
 800d454:	46bd      	mov	sp, r7
 800d456:	bd80      	pop	{r7, pc}

0800d458 <_ZThn4_N15screenPresenterD0Ev>:
 800d458:	f1a0 0004 	sub.w	r0, r0, #4
 800d45c:	e7ec      	b.n	800d438 <_ZN15screenPresenterD0Ev>
	...

0800d460 <_ZN15screenPresenterC1ER10screenView>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

screenPresenter::screenPresenter(screenView& v)
 800d460:	b580      	push	{r7, lr}
 800d462:	b082      	sub	sp, #8
 800d464:	af00      	add	r7, sp, #0
 800d466:	6078      	str	r0, [r7, #4]
 800d468:	6039      	str	r1, [r7, #0]
    : view(v)
 800d46a:	687b      	ldr	r3, [r7, #4]
 800d46c:	4618      	mov	r0, r3
 800d46e:	f7ff ff7f 	bl	800d370 <_ZN8touchgfx9PresenterC1Ev>
 800d472:	687b      	ldr	r3, [r7, #4]
 800d474:	3304      	adds	r3, #4
 800d476:	4618      	mov	r0, r3
 800d478:	f7ff ff8a 	bl	800d390 <_ZN13ModelListenerC1Ev>
 800d47c:	4a06      	ldr	r2, [pc, #24]	; (800d498 <_ZN15screenPresenterC1ER10screenView+0x38>)
 800d47e:	687b      	ldr	r3, [r7, #4]
 800d480:	601a      	str	r2, [r3, #0]
 800d482:	4a06      	ldr	r2, [pc, #24]	; (800d49c <_ZN15screenPresenterC1ER10screenView+0x3c>)
 800d484:	687b      	ldr	r3, [r7, #4]
 800d486:	605a      	str	r2, [r3, #4]
 800d488:	687b      	ldr	r3, [r7, #4]
 800d48a:	683a      	ldr	r2, [r7, #0]
 800d48c:	60da      	str	r2, [r3, #12]
{

}
 800d48e:	687b      	ldr	r3, [r7, #4]
 800d490:	4618      	mov	r0, r3
 800d492:	3708      	adds	r7, #8
 800d494:	46bd      	mov	sp, r7
 800d496:	bd80      	pop	{r7, pc}
 800d498:	08024e5c 	.word	0x08024e5c
 800d49c:	08024e74 	.word	0x08024e74

0800d4a0 <_ZN15screenPresenter8activateEv>:

void screenPresenter::activate()
{
 800d4a0:	b480      	push	{r7}
 800d4a2:	b083      	sub	sp, #12
 800d4a4:	af00      	add	r7, sp, #0
 800d4a6:	6078      	str	r0, [r7, #4]

}
 800d4a8:	bf00      	nop
 800d4aa:	370c      	adds	r7, #12
 800d4ac:	46bd      	mov	sp, r7
 800d4ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4b2:	4770      	bx	lr

0800d4b4 <_ZN15screenPresenter10deactivateEv>:

void screenPresenter::deactivate()
{
 800d4b4:	b480      	push	{r7}
 800d4b6:	b083      	sub	sp, #12
 800d4b8:	af00      	add	r7, sp, #0
 800d4ba:	6078      	str	r0, [r7, #4]

}
 800d4bc:	bf00      	nop
 800d4be:	370c      	adds	r7, #12
 800d4c0:	46bd      	mov	sp, r7
 800d4c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4c6:	4770      	bx	lr

0800d4c8 <_ZN10screenViewD1Ev>:

class screenView : public screenViewBase
{
public:
    screenView();
    virtual ~screenView() {}
 800d4c8:	b580      	push	{r7, lr}
 800d4ca:	b082      	sub	sp, #8
 800d4cc:	af00      	add	r7, sp, #0
 800d4ce:	6078      	str	r0, [r7, #4]
 800d4d0:	4a05      	ldr	r2, [pc, #20]	; (800d4e8 <_ZN10screenViewD1Ev+0x20>)
 800d4d2:	687b      	ldr	r3, [r7, #4]
 800d4d4:	601a      	str	r2, [r3, #0]
 800d4d6:	687b      	ldr	r3, [r7, #4]
 800d4d8:	4618      	mov	r0, r3
 800d4da:	f7ff fbf9 	bl	800ccd0 <_ZN14screenViewBaseD1Ev>
 800d4de:	687b      	ldr	r3, [r7, #4]
 800d4e0:	4618      	mov	r0, r3
 800d4e2:	3708      	adds	r7, #8
 800d4e4:	46bd      	mov	sp, r7
 800d4e6:	bd80      	pop	{r7, pc}
 800d4e8:	08024eac 	.word	0x08024eac

0800d4ec <_ZN10screenViewD0Ev>:
 800d4ec:	b580      	push	{r7, lr}
 800d4ee:	b082      	sub	sp, #8
 800d4f0:	af00      	add	r7, sp, #0
 800d4f2:	6078      	str	r0, [r7, #4]
 800d4f4:	6878      	ldr	r0, [r7, #4]
 800d4f6:	f7ff ffe7 	bl	800d4c8 <_ZN10screenViewD1Ev>
 800d4fa:	21e0      	movs	r1, #224	; 0xe0
 800d4fc:	6878      	ldr	r0, [r7, #4]
 800d4fe:	f015 fac6 	bl	8022a8e <_ZdlPvj>
 800d502:	687b      	ldr	r3, [r7, #4]
 800d504:	4618      	mov	r0, r3
 800d506:	3708      	adds	r7, #8
 800d508:	46bd      	mov	sp, r7
 800d50a:	bd80      	pop	{r7, pc}

0800d50c <_ZN10screenViewC1Ev>:
#include <gui/screen_screen/screenView.hpp>

screenView::screenView()
 800d50c:	b580      	push	{r7, lr}
 800d50e:	b082      	sub	sp, #8
 800d510:	af00      	add	r7, sp, #0
 800d512:	6078      	str	r0, [r7, #4]
 800d514:	687b      	ldr	r3, [r7, #4]
 800d516:	4618      	mov	r0, r3
 800d518:	f7ff faea 	bl	800caf0 <_ZN14screenViewBaseC1Ev>
 800d51c:	4a03      	ldr	r2, [pc, #12]	; (800d52c <_ZN10screenViewC1Ev+0x20>)
 800d51e:	687b      	ldr	r3, [r7, #4]
 800d520:	601a      	str	r2, [r3, #0]
{

}
 800d522:	687b      	ldr	r3, [r7, #4]
 800d524:	4618      	mov	r0, r3
 800d526:	3708      	adds	r7, #8
 800d528:	46bd      	mov	sp, r7
 800d52a:	bd80      	pop	{r7, pc}
 800d52c:	08024eac 	.word	0x08024eac

0800d530 <_ZN10screenView11setupScreenEv>:

void screenView::setupScreen()
{
 800d530:	b580      	push	{r7, lr}
 800d532:	b082      	sub	sp, #8
 800d534:	af00      	add	r7, sp, #0
 800d536:	6078      	str	r0, [r7, #4]
    screenViewBase::setupScreen();
 800d538:	687b      	ldr	r3, [r7, #4]
 800d53a:	4618      	mov	r0, r3
 800d53c:	f7ff fbfa 	bl	800cd34 <_ZN14screenViewBase11setupScreenEv>
}
 800d540:	bf00      	nop
 800d542:	3708      	adds	r7, #8
 800d544:	46bd      	mov	sp, r7
 800d546:	bd80      	pop	{r7, pc}

0800d548 <_ZN10screenView14tearDownScreenEv>:

void screenView::tearDownScreen()
{
 800d548:	b580      	push	{r7, lr}
 800d54a:	b082      	sub	sp, #8
 800d54c:	af00      	add	r7, sp, #0
 800d54e:	6078      	str	r0, [r7, #4]
    screenViewBase::tearDownScreen();
 800d550:	687b      	ldr	r3, [r7, #4]
 800d552:	4618      	mov	r0, r3
 800d554:	f7ff f988 	bl	800c868 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800d558:	bf00      	nop
 800d55a:	3708      	adds	r7, #8
 800d55c:	46bd      	mov	sp, r7
 800d55e:	bd80      	pop	{r7, pc}

0800d560 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800d560:	b480      	push	{r7}
 800d562:	b083      	sub	sp, #12
 800d564:	af00      	add	r7, sp, #0
 800d566:	6078      	str	r0, [r7, #4]
    {
 800d568:	4a04      	ldr	r2, [pc, #16]	; (800d57c <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800d56a:	687b      	ldr	r3, [r7, #4]
 800d56c:	601a      	str	r2, [r3, #0]
    }
 800d56e:	687b      	ldr	r3, [r7, #4]
 800d570:	4618      	mov	r0, r3
 800d572:	370c      	adds	r7, #12
 800d574:	46bd      	mov	sp, r7
 800d576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d57a:	4770      	bx	lr
 800d57c:	08024ef8 	.word	0x08024ef8

0800d580 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800d580:	b580      	push	{r7, lr}
 800d582:	b082      	sub	sp, #8
 800d584:	af00      	add	r7, sp, #0
 800d586:	6078      	str	r0, [r7, #4]
    }
 800d588:	6878      	ldr	r0, [r7, #4]
 800d58a:	f7ff ffe9 	bl	800d560 <_ZN8touchgfx15TouchControllerD1Ev>
 800d58e:	2104      	movs	r1, #4
 800d590:	6878      	ldr	r0, [r7, #4]
 800d592:	f015 fa7c 	bl	8022a8e <_ZdlPvj>
 800d596:	687b      	ldr	r3, [r7, #4]
 800d598:	4618      	mov	r0, r3
 800d59a:	3708      	adds	r7, #8
 800d59c:	46bd      	mov	sp, r7
 800d59e:	bd80      	pop	{r7, pc}

0800d5a0 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800d5a0:	b480      	push	{r7}
 800d5a2:	b083      	sub	sp, #12
 800d5a4:	af00      	add	r7, sp, #0
 800d5a6:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800d5a8:	bf00      	nop
 800d5aa:	370c      	adds	r7, #12
 800d5ac:	46bd      	mov	sp, r7
 800d5ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5b2:	4770      	bx	lr

0800d5b4 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800d5b4:	b480      	push	{r7}
 800d5b6:	b085      	sub	sp, #20
 800d5b8:	af00      	add	r7, sp, #0
 800d5ba:	60f8      	str	r0, [r7, #12]
 800d5bc:	60b9      	str	r1, [r7, #8]
 800d5be:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800d5c0:	2300      	movs	r3, #0
}
 800d5c2:	4618      	mov	r0, r3
 800d5c4:	3714      	adds	r7, #20
 800d5c6:	46bd      	mov	sp, r7
 800d5c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5cc:	4770      	bx	lr
	...

0800d5d0 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800d5d0:	b580      	push	{r7, lr}
 800d5d2:	b082      	sub	sp, #8
 800d5d4:	af00      	add	r7, sp, #0
 800d5d6:	6078      	str	r0, [r7, #4]
 800d5d8:	4a05      	ldr	r2, [pc, #20]	; (800d5f0 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800d5da:	687b      	ldr	r3, [r7, #4]
 800d5dc:	601a      	str	r2, [r3, #0]
 800d5de:	687b      	ldr	r3, [r7, #4]
 800d5e0:	4618      	mov	r0, r3
 800d5e2:	f7ff ffbd 	bl	800d560 <_ZN8touchgfx15TouchControllerD1Ev>
 800d5e6:	687b      	ldr	r3, [r7, #4]
 800d5e8:	4618      	mov	r0, r3
 800d5ea:	3708      	adds	r7, #8
 800d5ec:	46bd      	mov	sp, r7
 800d5ee:	bd80      	pop	{r7, pc}
 800d5f0:	08024ee0 	.word	0x08024ee0

0800d5f4 <_ZN20STM32TouchControllerD0Ev>:
 800d5f4:	b580      	push	{r7, lr}
 800d5f6:	b082      	sub	sp, #8
 800d5f8:	af00      	add	r7, sp, #0
 800d5fa:	6078      	str	r0, [r7, #4]
 800d5fc:	6878      	ldr	r0, [r7, #4]
 800d5fe:	f7ff ffe7 	bl	800d5d0 <_ZN20STM32TouchControllerD1Ev>
 800d602:	2104      	movs	r1, #4
 800d604:	6878      	ldr	r0, [r7, #4]
 800d606:	f015 fa42 	bl	8022a8e <_ZdlPvj>
 800d60a:	687b      	ldr	r3, [r7, #4]
 800d60c:	4618      	mov	r0, r3
 800d60e:	3708      	adds	r7, #8
 800d610:	46bd      	mov	sp, r7
 800d612:	bd80      	pop	{r7, pc}

0800d614 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800d614:	b480      	push	{r7}
 800d616:	af00      	add	r7, sp, #0

}
 800d618:	bf00      	nop
 800d61a:	46bd      	mov	sp, r7
 800d61c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d620:	4770      	bx	lr
	...

0800d624 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800d624:	b480      	push	{r7}
 800d626:	b083      	sub	sp, #12
 800d628:	af00      	add	r7, sp, #0
 800d62a:	4603      	mov	r3, r0
 800d62c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d62e:	79fb      	ldrb	r3, [r7, #7]
 800d630:	2b03      	cmp	r3, #3
 800d632:	d80c      	bhi.n	800d64e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800d634:	a201      	add	r2, pc, #4	; (adr r2, 800d63c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800d636:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d63a:	bf00      	nop
 800d63c:	0800d64d 	.word	0x0800d64d
 800d640:	0800d64d 	.word	0x0800d64d
 800d644:	0800d64d 	.word	0x0800d64d
 800d648:	0800d64d 	.word	0x0800d64d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800d64c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800d64e:	bf00      	nop
 800d650:	370c      	adds	r7, #12
 800d652:	46bd      	mov	sp, r7
 800d654:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d658:	4770      	bx	lr
 800d65a:	bf00      	nop

0800d65c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800d65c:	b480      	push	{r7}
 800d65e:	b083      	sub	sp, #12
 800d660:	af00      	add	r7, sp, #0
 800d662:	4603      	mov	r3, r0
 800d664:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d666:	79fb      	ldrb	r3, [r7, #7]
 800d668:	2b03      	cmp	r3, #3
 800d66a:	d80c      	bhi.n	800d686 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800d66c:	a201      	add	r2, pc, #4	; (adr r2, 800d674 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800d66e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d672:	bf00      	nop
 800d674:	0800d685 	.word	0x0800d685
 800d678:	0800d685 	.word	0x0800d685
 800d67c:	0800d685 	.word	0x0800d685
 800d680:	0800d685 	.word	0x0800d685
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800d684:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800d686:	bf00      	nop
 800d688:	370c      	adds	r7, #12
 800d68a:	46bd      	mov	sp, r7
 800d68c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d690:	4770      	bx	lr
 800d692:	bf00      	nop

0800d694 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800d694:	b480      	push	{r7}
 800d696:	b083      	sub	sp, #12
 800d698:	af00      	add	r7, sp, #0
 800d69a:	4603      	mov	r3, r0
 800d69c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800d69e:	79fb      	ldrb	r3, [r7, #7]
 800d6a0:	2b03      	cmp	r3, #3
 800d6a2:	d80c      	bhi.n	800d6be <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800d6a4:	a201      	add	r2, pc, #4	; (adr r2, 800d6ac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800d6a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d6aa:	bf00      	nop
 800d6ac:	0800d6bd 	.word	0x0800d6bd
 800d6b0:	0800d6bd 	.word	0x0800d6bd
 800d6b4:	0800d6bd 	.word	0x0800d6bd
 800d6b8:	0800d6bd 	.word	0x0800d6bd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800d6bc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800d6be:	bf00      	nop
 800d6c0:	370c      	adds	r7, #12
 800d6c2:	46bd      	mov	sp, r7
 800d6c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6c8:	4770      	bx	lr
 800d6ca:	bf00      	nop

0800d6cc <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800d6cc:	b480      	push	{r7}
 800d6ce:	b083      	sub	sp, #12
 800d6d0:	af00      	add	r7, sp, #0
 800d6d2:	6078      	str	r0, [r7, #4]
    {
 800d6d4:	4a04      	ldr	r2, [pc, #16]	; (800d6e8 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800d6d6:	687b      	ldr	r3, [r7, #4]
 800d6d8:	601a      	str	r2, [r3, #0]
    }
 800d6da:	687b      	ldr	r3, [r7, #4]
 800d6dc:	4618      	mov	r0, r3
 800d6de:	370c      	adds	r7, #12
 800d6e0:	46bd      	mov	sp, r7
 800d6e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6e6:	4770      	bx	lr
 800d6e8:	08025330 	.word	0x08025330

0800d6ec <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800d6ec:	b580      	push	{r7, lr}
 800d6ee:	b082      	sub	sp, #8
 800d6f0:	af00      	add	r7, sp, #0
 800d6f2:	6078      	str	r0, [r7, #4]
    }
 800d6f4:	6878      	ldr	r0, [r7, #4]
 800d6f6:	f7ff ffe9 	bl	800d6cc <_ZN8touchgfx3HALD1Ev>
 800d6fa:	217c      	movs	r1, #124	; 0x7c
 800d6fc:	6878      	ldr	r0, [r7, #4]
 800d6fe:	f015 f9c6 	bl	8022a8e <_ZdlPvj>
 800d702:	687b      	ldr	r3, [r7, #4]
 800d704:	4618      	mov	r0, r3
 800d706:	3708      	adds	r7, #8
 800d708:	46bd      	mov	sp, r7
 800d70a:	bd80      	pop	{r7, pc}

0800d70c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800d70c:	b480      	push	{r7}
 800d70e:	b083      	sub	sp, #12
 800d710:	af00      	add	r7, sp, #0
 800d712:	6078      	str	r0, [r7, #4]
 800d714:	460b      	mov	r3, r1
 800d716:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800d718:	687b      	ldr	r3, [r7, #4]
 800d71a:	78fa      	ldrb	r2, [r7, #3]
 800d71c:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800d720:	687b      	ldr	r3, [r7, #4]
 800d722:	2201      	movs	r2, #1
 800d724:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 800d728:	bf00      	nop
 800d72a:	370c      	adds	r7, #12
 800d72c:	46bd      	mov	sp, r7
 800d72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d732:	4770      	bx	lr

0800d734 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800d734:	b580      	push	{r7, lr}
 800d736:	b082      	sub	sp, #8
 800d738:	af00      	add	r7, sp, #0
 800d73a:	6078      	str	r0, [r7, #4]
 800d73c:	460b      	mov	r3, r1
 800d73e:	807b      	strh	r3, [r7, #2]
 800d740:	4613      	mov	r3, r2
 800d742:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800d744:	4b0c      	ldr	r3, [pc, #48]	; (800d778 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800d746:	881b      	ldrh	r3, [r3, #0]
 800d748:	887a      	ldrh	r2, [r7, #2]
 800d74a:	429a      	cmp	r2, r3
 800d74c:	d304      	bcc.n	800d758 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800d74e:	4b0b      	ldr	r3, [pc, #44]	; (800d77c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800d750:	881b      	ldrh	r3, [r3, #0]
 800d752:	883a      	ldrh	r2, [r7, #0]
 800d754:	429a      	cmp	r2, r3
 800d756:	d205      	bcs.n	800d764 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800d758:	4b09      	ldr	r3, [pc, #36]	; (800d780 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800d75a:	4a0a      	ldr	r2, [pc, #40]	; (800d784 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800d75c:	219e      	movs	r1, #158	; 0x9e
 800d75e:	480a      	ldr	r0, [pc, #40]	; (800d788 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800d760:	f015 f9c4 	bl	8022aec <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800d764:	4a09      	ldr	r2, [pc, #36]	; (800d78c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800d766:	887b      	ldrh	r3, [r7, #2]
 800d768:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800d76a:	4a09      	ldr	r2, [pc, #36]	; (800d790 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800d76c:	883b      	ldrh	r3, [r7, #0]
 800d76e:	8013      	strh	r3, [r2, #0]
    }
 800d770:	bf00      	nop
 800d772:	3708      	adds	r7, #8
 800d774:	46bd      	mov	sp, r7
 800d776:	bd80      	pop	{r7, pc}
 800d778:	24001ecc 	.word	0x24001ecc
 800d77c:	24001ece 	.word	0x24001ece
 800d780:	0802411c 	.word	0x0802411c
 800d784:	08024180 	.word	0x08024180
 800d788:	080241c4 	.word	0x080241c4
 800d78c:	24001ed2 	.word	0x24001ed2
 800d790:	24001ed4 	.word	0x24001ed4

0800d794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800d794:	b580      	push	{r7, lr}
 800d796:	b082      	sub	sp, #8
 800d798:	af00      	add	r7, sp, #0
 800d79a:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800d79c:	687b      	ldr	r3, [r7, #4]
 800d79e:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 800d7a2:	2b00      	cmp	r3, #0
 800d7a4:	d009      	beq.n	800d7ba <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800d7a6:	687b      	ldr	r3, [r7, #4]
 800d7a8:	685a      	ldr	r2, [r3, #4]
 800d7aa:	687b      	ldr	r3, [r7, #4]
 800d7ac:	685b      	ldr	r3, [r3, #4]
 800d7ae:	681b      	ldr	r3, [r3, #0]
 800d7b0:	681b      	ldr	r3, [r3, #0]
 800d7b2:	4610      	mov	r0, r2
 800d7b4:	4798      	blx	r3
 800d7b6:	4603      	mov	r3, r0
 800d7b8:	e000      	b.n	800d7bc <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800d7ba:	2300      	movs	r3, #0
    }
 800d7bc:	4618      	mov	r0, r3
 800d7be:	3708      	adds	r7, #8
 800d7c0:	46bd      	mov	sp, r7
 800d7c2:	bd80      	pop	{r7, pc}

0800d7c4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800d7c4:	b580      	push	{r7, lr}
 800d7c6:	b082      	sub	sp, #8
 800d7c8:	af00      	add	r7, sp, #0
 800d7ca:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800d7cc:	6878      	ldr	r0, [r7, #4]
 800d7ce:	f002 fe0d 	bl	80103ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800d7d2:	687b      	ldr	r3, [r7, #4]
 800d7d4:	681b      	ldr	r3, [r3, #0]
 800d7d6:	33ac      	adds	r3, #172	; 0xac
 800d7d8:	681b      	ldr	r3, [r3, #0]
 800d7da:	6878      	ldr	r0, [r7, #4]
 800d7dc:	4798      	blx	r3
    }
 800d7de:	bf00      	nop
 800d7e0:	3708      	adds	r7, #8
 800d7e2:	46bd      	mov	sp, r7
 800d7e4:	bd80      	pop	{r7, pc}

0800d7e6 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800d7e6:	b480      	push	{r7}
 800d7e8:	b083      	sub	sp, #12
 800d7ea:	af00      	add	r7, sp, #0
 800d7ec:	6078      	str	r0, [r7, #4]
 800d7ee:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800d7f0:	2300      	movs	r3, #0
    }
 800d7f2:	4618      	mov	r0, r3
 800d7f4:	370c      	adds	r7, #12
 800d7f6:	46bd      	mov	sp, r7
 800d7f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7fc:	4770      	bx	lr
	...

0800d800 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800d800:	b580      	push	{r7, lr}
 800d802:	b084      	sub	sp, #16
 800d804:	af00      	add	r7, sp, #0
 800d806:	60f8      	str	r0, [r7, #12]
 800d808:	60b9      	str	r1, [r7, #8]
 800d80a:	607a      	str	r2, [r7, #4]
 800d80c:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800d80e:	68bb      	ldr	r3, [r7, #8]
 800d810:	2b00      	cmp	r3, #0
 800d812:	d106      	bne.n	800d822 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800d814:	4b0f      	ldr	r3, [pc, #60]	; (800d854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800d816:	4a10      	ldr	r2, [pc, #64]	; (800d858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800d818:	f240 21d2 	movw	r1, #722	; 0x2d2
 800d81c:	480f      	ldr	r0, [pc, #60]	; (800d85c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800d81e:	f015 f965 	bl	8022aec <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800d822:	68fb      	ldr	r3, [r7, #12]
 800d824:	68ba      	ldr	r2, [r7, #8]
 800d826:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800d828:	68fb      	ldr	r3, [r7, #12]
 800d82a:	687a      	ldr	r2, [r7, #4]
 800d82c:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800d82e:	687b      	ldr	r3, [r7, #4]
 800d830:	2b00      	cmp	r3, #0
 800d832:	bf14      	ite	ne
 800d834:	2301      	movne	r3, #1
 800d836:	2300      	moveq	r3, #0
 800d838:	b2da      	uxtb	r2, r3
 800d83a:	4b09      	ldr	r3, [pc, #36]	; (800d860 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800d83c:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800d83e:	68fb      	ldr	r3, [r7, #12]
 800d840:	681b      	ldr	r3, [r3, #0]
 800d842:	338c      	adds	r3, #140	; 0x8c
 800d844:	681b      	ldr	r3, [r3, #0]
 800d846:	6839      	ldr	r1, [r7, #0]
 800d848:	68f8      	ldr	r0, [r7, #12]
 800d84a:	4798      	blx	r3
    }
 800d84c:	bf00      	nop
 800d84e:	3710      	adds	r7, #16
 800d850:	46bd      	mov	sp, r7
 800d852:	bd80      	pop	{r7, pc}
 800d854:	08024208 	.word	0x08024208
 800d858:	08024240 	.word	0x08024240
 800d85c:	080241c4 	.word	0x080241c4
 800d860:	24001ed6 	.word	0x24001ed6

0800d864 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800d864:	b480      	push	{r7}
 800d866:	b083      	sub	sp, #12
 800d868:	af00      	add	r7, sp, #0
 800d86a:	6078      	str	r0, [r7, #4]
 800d86c:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800d86e:	687b      	ldr	r3, [r7, #4]
 800d870:	683a      	ldr	r2, [r7, #0]
 800d872:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800d874:	683b      	ldr	r3, [r7, #0]
 800d876:	2b00      	cmp	r3, #0
 800d878:	bf14      	ite	ne
 800d87a:	2301      	movne	r3, #1
 800d87c:	2300      	moveq	r3, #0
 800d87e:	b2da      	uxtb	r2, r3
 800d880:	4b03      	ldr	r3, [pc, #12]	; (800d890 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800d882:	701a      	strb	r2, [r3, #0]
    }
 800d884:	bf00      	nop
 800d886:	370c      	adds	r7, #12
 800d888:	46bd      	mov	sp, r7
 800d88a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d88e:	4770      	bx	lr
 800d890:	24001ed7 	.word	0x24001ed7

0800d894 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800d894:	b480      	push	{r7}
 800d896:	b083      	sub	sp, #12
 800d898:	af00      	add	r7, sp, #0
 800d89a:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800d89c:	2300      	movs	r3, #0
    }
 800d89e:	4618      	mov	r0, r3
 800d8a0:	370c      	adds	r7, #12
 800d8a2:	46bd      	mov	sp, r7
 800d8a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8a8:	4770      	bx	lr

0800d8aa <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800d8aa:	b580      	push	{r7, lr}
 800d8ac:	b082      	sub	sp, #8
 800d8ae:	af00      	add	r7, sp, #0
 800d8b0:	6078      	str	r0, [r7, #4]
 800d8b2:	460b      	mov	r3, r1
 800d8b4:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800d8b6:	687b      	ldr	r3, [r7, #4]
 800d8b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d8ba:	2b00      	cmp	r3, #0
 800d8bc:	d004      	beq.n	800d8c8 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800d8be:	687b      	ldr	r3, [r7, #4]
 800d8c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d8c2:	887a      	ldrh	r2, [r7, #2]
 800d8c4:	4610      	mov	r0, r2
 800d8c6:	4798      	blx	r3
        }
    }
 800d8c8:	bf00      	nop
 800d8ca:	3708      	adds	r7, #8
 800d8cc:	46bd      	mov	sp, r7
 800d8ce:	bd80      	pop	{r7, pc}

0800d8d0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800d8d0:	b480      	push	{r7}
 800d8d2:	b083      	sub	sp, #12
 800d8d4:	af00      	add	r7, sp, #0
 800d8d6:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800d8d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 800d8dc:	4618      	mov	r0, r3
 800d8de:	370c      	adds	r7, #12
 800d8e0:	46bd      	mov	sp, r7
 800d8e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8e6:	4770      	bx	lr

0800d8e8 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800d8e8:	b580      	push	{r7, lr}
 800d8ea:	b082      	sub	sp, #8
 800d8ec:	af00      	add	r7, sp, #0
 800d8ee:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800d8f0:	687b      	ldr	r3, [r7, #4]
 800d8f2:	685a      	ldr	r2, [r3, #4]
 800d8f4:	687b      	ldr	r3, [r7, #4]
 800d8f6:	685b      	ldr	r3, [r3, #4]
 800d8f8:	681b      	ldr	r3, [r3, #0]
 800d8fa:	3318      	adds	r3, #24
 800d8fc:	681b      	ldr	r3, [r3, #0]
 800d8fe:	4610      	mov	r0, r2
 800d900:	4798      	blx	r3
 800d902:	4603      	mov	r3, r0
    }
 800d904:	4618      	mov	r0, r3
 800d906:	3708      	adds	r7, #8
 800d908:	46bd      	mov	sp, r7
 800d90a:	bd80      	pop	{r7, pc}

0800d90c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800d90c:	b480      	push	{r7}
 800d90e:	b085      	sub	sp, #20
 800d910:	af00      	add	r7, sp, #0
 800d912:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800d914:	687b      	ldr	r3, [r7, #4]
 800d916:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 800d91a:	687b      	ldr	r3, [r7, #4]
 800d91c:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800d920:	429a      	cmp	r2, r3
 800d922:	d011      	beq.n	800d948 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800d924:	4b14      	ldr	r3, [pc, #80]	; (800d978 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800d926:	781b      	ldrb	r3, [r3, #0]
 800d928:	2b00      	cmp	r3, #0
 800d92a:	d11e      	bne.n	800d96a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800d92c:	4b13      	ldr	r3, [pc, #76]	; (800d97c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800d92e:	881b      	ldrh	r3, [r3, #0]
 800d930:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800d932:	4b13      	ldr	r3, [pc, #76]	; (800d980 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800d934:	881a      	ldrh	r2, [r3, #0]
 800d936:	4b11      	ldr	r3, [pc, #68]	; (800d97c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800d938:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800d93a:	4a11      	ldr	r2, [pc, #68]	; (800d980 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800d93c:	89bb      	ldrh	r3, [r7, #12]
 800d93e:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800d940:	4b0d      	ldr	r3, [pc, #52]	; (800d978 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800d942:	2201      	movs	r2, #1
 800d944:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800d946:	e010      	b.n	800d96a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800d948:	4b0b      	ldr	r3, [pc, #44]	; (800d978 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800d94a:	781b      	ldrb	r3, [r3, #0]
 800d94c:	2b00      	cmp	r3, #0
 800d94e:	d00c      	beq.n	800d96a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800d950:	4b0a      	ldr	r3, [pc, #40]	; (800d97c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800d952:	881b      	ldrh	r3, [r3, #0]
 800d954:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800d956:	4b0a      	ldr	r3, [pc, #40]	; (800d980 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800d958:	881a      	ldrh	r2, [r3, #0]
 800d95a:	4b08      	ldr	r3, [pc, #32]	; (800d97c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800d95c:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800d95e:	4a08      	ldr	r2, [pc, #32]	; (800d980 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800d960:	89fb      	ldrh	r3, [r7, #14]
 800d962:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800d964:	4b04      	ldr	r3, [pc, #16]	; (800d978 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800d966:	2200      	movs	r2, #0
 800d968:	701a      	strb	r2, [r3, #0]
    }
 800d96a:	bf00      	nop
 800d96c:	3714      	adds	r7, #20
 800d96e:	46bd      	mov	sp, r7
 800d970:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d974:	4770      	bx	lr
 800d976:	bf00      	nop
 800d978:	24001ed0 	.word	0x24001ed0
 800d97c:	24001ece 	.word	0x24001ece
 800d980:	24001ecc 	.word	0x24001ecc

0800d984 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800d984:	b580      	push	{r7, lr}
 800d986:	b082      	sub	sp, #8
 800d988:	af00      	add	r7, sp, #0
 800d98a:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800d98c:	687b      	ldr	r3, [r7, #4]
 800d98e:	4618      	mov	r0, r3
 800d990:	f001 ff8a 	bl	800f8a8 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800d994:	bf00      	nop
 800d996:	3708      	adds	r7, #8
 800d998:	46bd      	mov	sp, r7
 800d99a:	bd80      	pop	{r7, pc}

0800d99c <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800d99c:	b580      	push	{r7, lr}
 800d99e:	b082      	sub	sp, #8
 800d9a0:	af00      	add	r7, sp, #0
 800d9a2:	6078      	str	r0, [r7, #4]
 800d9a4:	4a05      	ldr	r2, [pc, #20]	; (800d9bc <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800d9a6:	687b      	ldr	r3, [r7, #4]
 800d9a8:	601a      	str	r2, [r3, #0]
 800d9aa:	687b      	ldr	r3, [r7, #4]
 800d9ac:	4618      	mov	r0, r3
 800d9ae:	f7ff fe8d 	bl	800d6cc <_ZN8touchgfx3HALD1Ev>
 800d9b2:	687b      	ldr	r3, [r7, #4]
 800d9b4:	4618      	mov	r0, r3
 800d9b6:	3708      	adds	r7, #8
 800d9b8:	46bd      	mov	sp, r7
 800d9ba:	bd80      	pop	{r7, pc}
 800d9bc:	0802515c 	.word	0x0802515c

0800d9c0 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800d9c0:	b580      	push	{r7, lr}
 800d9c2:	b082      	sub	sp, #8
 800d9c4:	af00      	add	r7, sp, #0
 800d9c6:	6078      	str	r0, [r7, #4]
 800d9c8:	6878      	ldr	r0, [r7, #4]
 800d9ca:	f7ff ffe7 	bl	800d99c <_ZN20TouchGFXGeneratedHALD1Ev>
 800d9ce:	217c      	movs	r1, #124	; 0x7c
 800d9d0:	6878      	ldr	r0, [r7, #4]
 800d9d2:	f015 f85c 	bl	8022a8e <_ZdlPvj>
 800d9d6:	687b      	ldr	r3, [r7, #4]
 800d9d8:	4618      	mov	r0, r3
 800d9da:	3708      	adds	r7, #8
 800d9dc:	46bd      	mov	sp, r7
 800d9de:	bd80      	pop	{r7, pc}

0800d9e0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800d9e0:	b580      	push	{r7, lr}
 800d9e2:	b082      	sub	sp, #8
 800d9e4:	af00      	add	r7, sp, #0
 800d9e6:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800d9e8:	687b      	ldr	r3, [r7, #4]
 800d9ea:	4618      	mov	r0, r3
 800d9ec:	f7ff ffca 	bl	800d984 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800d9f0:	bf00      	nop
 800d9f2:	3708      	adds	r7, #8
 800d9f4:	46bd      	mov	sp, r7
 800d9f6:	bd80      	pop	{r7, pc}

0800d9f8 <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800d9f8:	b580      	push	{r7, lr}
 800d9fa:	b082      	sub	sp, #8
 800d9fc:	af00      	add	r7, sp, #0
 800d9fe:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800da00:	687b      	ldr	r3, [r7, #4]
 800da02:	4618      	mov	r0, r3
 800da04:	f001 f81c 	bl	800ea40 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800da08:	bf00      	nop
 800da0a:	3708      	adds	r7, #8
 800da0c:	46bd      	mov	sp, r7
 800da0e:	bd80      	pop	{r7, pc}

0800da10 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800da10:	b580      	push	{r7, lr}
 800da12:	b082      	sub	sp, #8
 800da14:	af00      	add	r7, sp, #0
 800da16:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800da18:	687b      	ldr	r3, [r7, #4]
 800da1a:	4618      	mov	r0, r3
 800da1c:	f001 f88e 	bl	800eb3c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800da20:	4603      	mov	r3, r0
}
 800da22:	4618      	mov	r0, r3
 800da24:	3708      	adds	r7, #8
 800da26:	46bd      	mov	sp, r7
 800da28:	bd80      	pop	{r7, pc}

0800da2a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800da2a:	b580      	push	{r7, lr}
 800da2c:	b082      	sub	sp, #8
 800da2e:	af00      	add	r7, sp, #0
 800da30:	6078      	str	r0, [r7, #4]
 800da32:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800da34:	687b      	ldr	r3, [r7, #4]
 800da36:	6839      	ldr	r1, [r7, #0]
 800da38:	4618      	mov	r0, r3
 800da3a:	f001 f88a 	bl	800eb52 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800da3e:	bf00      	nop
 800da40:	3708      	adds	r7, #8
 800da42:	46bd      	mov	sp, r7
 800da44:	bd80      	pop	{r7, pc}

0800da46 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800da46:	b580      	push	{r7, lr}
 800da48:	b082      	sub	sp, #8
 800da4a:	af00      	add	r7, sp, #0
 800da4c:	6078      	str	r0, [r7, #4]
 800da4e:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800da50:	687b      	ldr	r3, [r7, #4]
 800da52:	6839      	ldr	r1, [r7, #0]
 800da54:	4618      	mov	r0, r3
 800da56:	f001 f887 	bl	800eb68 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800da5a:	bf00      	nop
 800da5c:	3708      	adds	r7, #8
 800da5e:	46bd      	mov	sp, r7
 800da60:	bd80      	pop	{r7, pc}

0800da62 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800da62:	b580      	push	{r7, lr}
 800da64:	b084      	sub	sp, #16
 800da66:	af00      	add	r7, sp, #0
 800da68:	60f8      	str	r0, [r7, #12]
 800da6a:	60b9      	str	r1, [r7, #8]
 800da6c:	607a      	str	r2, [r7, #4]
 800da6e:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800da70:	68f8      	ldr	r0, [r7, #12]
 800da72:	683b      	ldr	r3, [r7, #0]
 800da74:	687a      	ldr	r2, [r7, #4]
 800da76:	68b9      	ldr	r1, [r7, #8]
 800da78:	f001 f8b9 	bl	800ebee <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800da7c:	4603      	mov	r3, r0
}
 800da7e:	4618      	mov	r0, r3
 800da80:	3710      	adds	r7, #16
 800da82:	46bd      	mov	sp, r7
 800da84:	bd80      	pop	{r7, pc}

0800da86 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800da86:	b580      	push	{r7, lr}
 800da88:	b082      	sub	sp, #8
 800da8a:	af00      	add	r7, sp, #0
 800da8c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800da8e:	687b      	ldr	r3, [r7, #4]
 800da90:	4618      	mov	r0, r3
 800da92:	f001 f805 	bl	800eaa0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800da96:	bf00      	nop
 800da98:	3708      	adds	r7, #8
 800da9a:	46bd      	mov	sp, r7
 800da9c:	bd80      	pop	{r7, pc}

0800da9e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800da9e:	b580      	push	{r7, lr}
 800daa0:	b082      	sub	sp, #8
 800daa2:	af00      	add	r7, sp, #0
 800daa4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800daa6:	687b      	ldr	r3, [r7, #4]
 800daa8:	4618      	mov	r0, r3
 800daaa:	f001 f803 	bl	800eab4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800daae:	bf00      	nop
 800dab0:	3708      	adds	r7, #8
 800dab2:	46bd      	mov	sp, r7
 800dab4:	bd80      	pop	{r7, pc}

0800dab6 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800dab6:	b580      	push	{r7, lr}
 800dab8:	b082      	sub	sp, #8
 800daba:	af00      	add	r7, sp, #0
 800dabc:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800dabe:	687b      	ldr	r3, [r7, #4]
 800dac0:	4618      	mov	r0, r3
 800dac2:	f001 f801 	bl	800eac8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800dac6:	bf00      	nop
 800dac8:	3708      	adds	r7, #8
 800daca:	46bd      	mov	sp, r7
 800dacc:	bd80      	pop	{r7, pc}

0800dace <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800dace:	b580      	push	{r7, lr}
 800dad0:	b082      	sub	sp, #8
 800dad2:	af00      	add	r7, sp, #0
 800dad4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800dad6:	687b      	ldr	r3, [r7, #4]
 800dad8:	4618      	mov	r0, r3
 800dada:	f000 ffff 	bl	800eadc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800dade:	bf00      	nop
 800dae0:	3708      	adds	r7, #8
 800dae2:	46bd      	mov	sp, r7
 800dae4:	bd80      	pop	{r7, pc}

0800dae6 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800dae6:	b580      	push	{r7, lr}
 800dae8:	b082      	sub	sp, #8
 800daea:	af00      	add	r7, sp, #0
 800daec:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800daee:	687b      	ldr	r3, [r7, #4]
 800daf0:	4618      	mov	r0, r3
 800daf2:	f000 fffd 	bl	800eaf0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800daf6:	4603      	mov	r3, r0
}
 800daf8:	4618      	mov	r0, r3
 800dafa:	3708      	adds	r7, #8
 800dafc:	46bd      	mov	sp, r7
 800dafe:	bd80      	pop	{r7, pc}

0800db00 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800db00:	b580      	push	{r7, lr}
 800db02:	b082      	sub	sp, #8
 800db04:	af00      	add	r7, sp, #0
 800db06:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800db08:	687b      	ldr	r3, [r7, #4]
 800db0a:	4618      	mov	r0, r3
 800db0c:	f000 fffd 	bl	800eb0a <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800db10:	bf00      	nop
 800db12:	3708      	adds	r7, #8
 800db14:	46bd      	mov	sp, r7
 800db16:	bd80      	pop	{r7, pc}

0800db18 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800db18:	b580      	push	{r7, lr}
 800db1a:	b082      	sub	sp, #8
 800db1c:	af00      	add	r7, sp, #0
 800db1e:	6078      	str	r0, [r7, #4]
 800db20:	4a05      	ldr	r2, [pc, #20]	; (800db38 <_ZN11TouchGFXHALD1Ev+0x20>)
 800db22:	687b      	ldr	r3, [r7, #4]
 800db24:	601a      	str	r2, [r3, #0]
 800db26:	687b      	ldr	r3, [r7, #4]
 800db28:	4618      	mov	r0, r3
 800db2a:	f7ff ff37 	bl	800d99c <_ZN20TouchGFXGeneratedHALD1Ev>
 800db2e:	687b      	ldr	r3, [r7, #4]
 800db30:	4618      	mov	r0, r3
 800db32:	3708      	adds	r7, #8
 800db34:	46bd      	mov	sp, r7
 800db36:	bd80      	pop	{r7, pc}
 800db38:	08024f10 	.word	0x08024f10

0800db3c <_ZN11TouchGFXHALD0Ev>:
 800db3c:	b580      	push	{r7, lr}
 800db3e:	b082      	sub	sp, #8
 800db40:	af00      	add	r7, sp, #0
 800db42:	6078      	str	r0, [r7, #4]
 800db44:	6878      	ldr	r0, [r7, #4]
 800db46:	f7ff ffe7 	bl	800db18 <_ZN11TouchGFXHALD1Ev>
 800db4a:	217c      	movs	r1, #124	; 0x7c
 800db4c:	6878      	ldr	r0, [r7, #4]
 800db4e:	f014 ff9e 	bl	8022a8e <_ZdlPvj>
 800db52:	687b      	ldr	r3, [r7, #4]
 800db54:	4618      	mov	r0, r3
 800db56:	3708      	adds	r7, #8
 800db58:	46bd      	mov	sp, r7
 800db5a:	bd80      	pop	{r7, pc}

0800db5c <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 800db5c:	b480      	push	{r7}
 800db5e:	af00      	add	r7, sp, #0
	return isTransmittingData;
 800db60:	4b03      	ldr	r3, [pc, #12]	; (800db70 <touchgfxDisplayDriverTransmitActive+0x14>)
 800db62:	781b      	ldrb	r3, [r3, #0]
}
 800db64:	4618      	mov	r0, r3
 800db66:	46bd      	mov	sp, r7
 800db68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db6c:	4770      	bx	lr
 800db6e:	bf00      	nop
 800db70:	24000440 	.word	0x24000440

0800db74 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 800db74:	b590      	push	{r4, r7, lr}
 800db76:	b085      	sub	sp, #20
 800db78:	af00      	add	r7, sp, #0
 800db7a:	60f8      	str	r0, [r7, #12]
 800db7c:	4608      	mov	r0, r1
 800db7e:	4611      	mov	r1, r2
 800db80:	461a      	mov	r2, r3
 800db82:	4603      	mov	r3, r0
 800db84:	817b      	strh	r3, [r7, #10]
 800db86:	460b      	mov	r3, r1
 800db88:	813b      	strh	r3, [r7, #8]
 800db8a:	4613      	mov	r3, r2
 800db8c:	80fb      	strh	r3, [r7, #6]
	isTransmittingData = 1;
 800db8e:	4b0f      	ldr	r3, [pc, #60]	; (800dbcc <touchgfxDisplayDriverTransmitBlock+0x58>)
 800db90:	2201      	movs	r2, #1
 800db92:	701a      	strb	r2, [r3, #0]
	ILI9341_SetWindow(x, y, x+w-1, y+h-1);
 800db94:	897a      	ldrh	r2, [r7, #10]
 800db96:	88fb      	ldrh	r3, [r7, #6]
 800db98:	4413      	add	r3, r2
 800db9a:	b29b      	uxth	r3, r3
 800db9c:	3b01      	subs	r3, #1
 800db9e:	b29c      	uxth	r4, r3
 800dba0:	893a      	ldrh	r2, [r7, #8]
 800dba2:	8c3b      	ldrh	r3, [r7, #32]
 800dba4:	4413      	add	r3, r2
 800dba6:	b29b      	uxth	r3, r3
 800dba8:	3b01      	subs	r3, #1
 800dbaa:	b29b      	uxth	r3, r3
 800dbac:	8939      	ldrh	r1, [r7, #8]
 800dbae:	8978      	ldrh	r0, [r7, #10]
 800dbb0:	4622      	mov	r2, r4
 800dbb2:	f7f2 fd04 	bl	80005be <ILI9341_SetWindow>
	ILI9341_DrawBitmap(w, h, pixels);
 800dbb6:	8c39      	ldrh	r1, [r7, #32]
 800dbb8:	88fb      	ldrh	r3, [r7, #6]
 800dbba:	68fa      	ldr	r2, [r7, #12]
 800dbbc:	4618      	mov	r0, r3
 800dbbe:	f7f2 fd69 	bl	8000694 <ILI9341_DrawBitmap>
}
 800dbc2:	bf00      	nop
 800dbc4:	3714      	adds	r7, #20
 800dbc6:	46bd      	mov	sp, r7
 800dbc8:	bd90      	pop	{r4, r7, pc}
 800dbca:	bf00      	nop
 800dbcc:	24000440 	.word	0x24000440

0800dbd0 <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800dbd0:	b580      	push	{r7, lr}
 800dbd2:	b082      	sub	sp, #8
 800dbd4:	af00      	add	r7, sp, #0
 800dbd6:	6078      	str	r0, [r7, #4]
	if (hspi->Instance == SPI5) {
 800dbd8:	687b      	ldr	r3, [r7, #4]
 800dbda:	681b      	ldr	r3, [r3, #0]
 800dbdc:	4a06      	ldr	r2, [pc, #24]	; (800dbf8 <HAL_SPI_TxCpltCallback+0x28>)
 800dbde:	4293      	cmp	r3, r2
 800dbe0:	d106      	bne.n	800dbf0 <HAL_SPI_TxCpltCallback+0x20>
		ILI9341_EndOfDrawBitmap();
 800dbe2:	f7f2 fd7f 	bl	80006e4 <ILI9341_EndOfDrawBitmap>
		isTransmittingData = 0;
 800dbe6:	4b05      	ldr	r3, [pc, #20]	; (800dbfc <HAL_SPI_TxCpltCallback+0x2c>)
 800dbe8:	2200      	movs	r2, #0
 800dbea:	701a      	strb	r2, [r3, #0]
		DisplayDriver_TransferCompleteCallback();
 800dbec:	f001 f8ff 	bl	800edee <DisplayDriver_TransferCompleteCallback>
	}
}
 800dbf0:	bf00      	nop
 800dbf2:	3708      	adds	r7, #8
 800dbf4:	46bd      	mov	sp, r7
 800dbf6:	bd80      	pop	{r7, pc}
 800dbf8:	40015000 	.word	0x40015000
 800dbfc:	24000440 	.word	0x24000440

0800dc00 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800dc00:	b480      	push	{r7}
 800dc02:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800dc04:	4b05      	ldr	r3, [pc, #20]	; (800dc1c <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800dc06:	2200      	movs	r2, #0
 800dc08:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800dc0a:	4b05      	ldr	r3, [pc, #20]	; (800dc20 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800dc0c:	2200      	movs	r2, #0
 800dc0e:	601a      	str	r2, [r3, #0]
}
 800dc10:	bf00      	nop
 800dc12:	46bd      	mov	sp, r7
 800dc14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc18:	4770      	bx	lr
 800dc1a:	bf00      	nop
 800dc1c:	24000444 	.word	0x24000444
 800dc20:	24000448 	.word	0x24000448

0800dc24 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800dc24:	b480      	push	{r7}
 800dc26:	af00      	add	r7, sp, #0
    while (fb_sem);
 800dc28:	bf00      	nop
 800dc2a:	4b08      	ldr	r3, [pc, #32]	; (800dc4c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800dc2c:	681b      	ldr	r3, [r3, #0]
 800dc2e:	2b00      	cmp	r3, #0
 800dc30:	bf14      	ite	ne
 800dc32:	2301      	movne	r3, #1
 800dc34:	2300      	moveq	r3, #0
 800dc36:	b2db      	uxtb	r3, r3
 800dc38:	2b00      	cmp	r3, #0
 800dc3a:	d1f6      	bne.n	800dc2a <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800dc3c:	4b03      	ldr	r3, [pc, #12]	; (800dc4c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800dc3e:	2201      	movs	r2, #1
 800dc40:	601a      	str	r2, [r3, #0]
}
 800dc42:	bf00      	nop
 800dc44:	46bd      	mov	sp, r7
 800dc46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc4a:	4770      	bx	lr
 800dc4c:	24000444 	.word	0x24000444

0800dc50 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800dc50:	b480      	push	{r7}
 800dc52:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800dc54:	4b03      	ldr	r3, [pc, #12]	; (800dc64 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800dc56:	2200      	movs	r2, #0
 800dc58:	601a      	str	r2, [r3, #0]
}
 800dc5a:	bf00      	nop
 800dc5c:	46bd      	mov	sp, r7
 800dc5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc62:	4770      	bx	lr
 800dc64:	24000444 	.word	0x24000444

0800dc68 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800dc68:	b480      	push	{r7}
 800dc6a:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800dc6c:	4b03      	ldr	r3, [pc, #12]	; (800dc7c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800dc6e:	2201      	movs	r2, #1
 800dc70:	601a      	str	r2, [r3, #0]
}
 800dc72:	bf00      	nop
 800dc74:	46bd      	mov	sp, r7
 800dc76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc7a:	4770      	bx	lr
 800dc7c:	24000444 	.word	0x24000444

0800dc80 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800dc80:	b480      	push	{r7}
 800dc82:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800dc84:	4b03      	ldr	r3, [pc, #12]	; (800dc94 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800dc86:	2200      	movs	r2, #0
 800dc88:	601a      	str	r2, [r3, #0]
}
 800dc8a:	bf00      	nop
 800dc8c:	46bd      	mov	sp, r7
 800dc8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc92:	4770      	bx	lr
 800dc94:	24000444 	.word	0x24000444

0800dc98 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800dc98:	b480      	push	{r7}
 800dc9a:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800dc9c:	4b03      	ldr	r3, [pc, #12]	; (800dcac <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800dc9e:	2201      	movs	r2, #1
 800dca0:	601a      	str	r2, [r3, #0]
}
 800dca2:	bf00      	nop
 800dca4:	46bd      	mov	sp, r7
 800dca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcaa:	4770      	bx	lr
 800dcac:	24000448 	.word	0x24000448

0800dcb0 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800dcb0:	b480      	push	{r7}
 800dcb2:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800dcb4:	4b03      	ldr	r3, [pc, #12]	; (800dcc4 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800dcb6:	2200      	movs	r2, #0
 800dcb8:	601a      	str	r2, [r3, #0]
}
 800dcba:	bf00      	nop
 800dcbc:	46bd      	mov	sp, r7
 800dcbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcc2:	4770      	bx	lr
 800dcc4:	24000448 	.word	0x24000448

0800dcc8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800dcc8:	b480      	push	{r7}
 800dcca:	af00      	add	r7, sp, #0
    return vsync_sem;
 800dccc:	4b05      	ldr	r3, [pc, #20]	; (800dce4 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800dcce:	681b      	ldr	r3, [r3, #0]
 800dcd0:	2b00      	cmp	r3, #0
 800dcd2:	bf14      	ite	ne
 800dcd4:	2301      	movne	r3, #1
 800dcd6:	2300      	moveq	r3, #0
 800dcd8:	b2db      	uxtb	r3, r3
}
 800dcda:	4618      	mov	r0, r3
 800dcdc:	46bd      	mov	sp, r7
 800dcde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dce2:	4770      	bx	lr
 800dce4:	24000448 	.word	0x24000448

0800dce8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800dce8:	b580      	push	{r7, lr}
 800dcea:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800dcec:	4b0a      	ldr	r3, [pc, #40]	; (800dd18 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800dcee:	681b      	ldr	r3, [r3, #0]
 800dcf0:	2b00      	cmp	r3, #0
 800dcf2:	bf14      	ite	ne
 800dcf4:	2301      	movne	r3, #1
 800dcf6:	2300      	moveq	r3, #0
 800dcf8:	b2db      	uxtb	r3, r3
 800dcfa:	2b00      	cmp	r3, #0
 800dcfc:	d00a      	beq.n	800dd14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800dcfe:	4b06      	ldr	r3, [pc, #24]	; (800dd18 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800dd00:	2200      	movs	r2, #0
 800dd02:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800dd04:	f7fd ff06 	bl	800bb14 <_ZN8touchgfx3HAL11getInstanceEv>
 800dd08:	4603      	mov	r3, r0
 800dd0a:	681a      	ldr	r2, [r3, #0]
 800dd0c:	3270      	adds	r2, #112	; 0x70
 800dd0e:	6812      	ldr	r2, [r2, #0]
 800dd10:	4618      	mov	r0, r3
 800dd12:	4790      	blx	r2
    }
}
 800dd14:	bf00      	nop
 800dd16:	bd80      	pop	{r7, pc}
 800dd18:	24000448 	.word	0x24000448

0800dd1c <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800dd1c:	b480      	push	{r7}
 800dd1e:	b083      	sub	sp, #12
 800dd20:	af00      	add	r7, sp, #0
 800dd22:	6078      	str	r0, [r7, #4]
        : color(0)
 800dd24:	687b      	ldr	r3, [r7, #4]
 800dd26:	2200      	movs	r2, #0
 800dd28:	601a      	str	r2, [r3, #0]
    }
 800dd2a:	687b      	ldr	r3, [r7, #4]
 800dd2c:	4618      	mov	r0, r3
 800dd2e:	370c      	adds	r7, #12
 800dd30:	46bd      	mov	sp, r7
 800dd32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd36:	4770      	bx	lr

0800dd38 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800dd38:	b480      	push	{r7}
 800dd3a:	b083      	sub	sp, #12
 800dd3c:	af00      	add	r7, sp, #0
 800dd3e:	6078      	str	r0, [r7, #4]
    {
 800dd40:	4a04      	ldr	r2, [pc, #16]	; (800dd54 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800dd42:	687b      	ldr	r3, [r7, #4]
 800dd44:	601a      	str	r2, [r3, #0]
    }
 800dd46:	687b      	ldr	r3, [r7, #4]
 800dd48:	4618      	mov	r0, r3
 800dd4a:	370c      	adds	r7, #12
 800dd4c:	46bd      	mov	sp, r7
 800dd4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd52:	4770      	bx	lr
 800dd54:	08025038 	.word	0x08025038

0800dd58 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800dd58:	b580      	push	{r7, lr}
 800dd5a:	b082      	sub	sp, #8
 800dd5c:	af00      	add	r7, sp, #0
 800dd5e:	6078      	str	r0, [r7, #4]
    }
 800dd60:	6878      	ldr	r0, [r7, #4]
 800dd62:	f7ff ffe9 	bl	800dd38 <_ZN8touchgfx9DMA_QueueD1Ev>
 800dd66:	2104      	movs	r1, #4
 800dd68:	6878      	ldr	r0, [r7, #4]
 800dd6a:	f014 fe90 	bl	8022a8e <_ZdlPvj>
 800dd6e:	687b      	ldr	r3, [r7, #4]
 800dd70:	4618      	mov	r0, r3
 800dd72:	3708      	adds	r7, #8
 800dd74:	46bd      	mov	sp, r7
 800dd76:	bd80      	pop	{r7, pc}

0800dd78 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 800dd78:	b480      	push	{r7}
 800dd7a:	b083      	sub	sp, #12
 800dd7c:	af00      	add	r7, sp, #0
 800dd7e:	6078      	str	r0, [r7, #4]
    {
    }
 800dd80:	bf00      	nop
 800dd82:	370c      	adds	r7, #12
 800dd84:	46bd      	mov	sp, r7
 800dd86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd8a:	4770      	bx	lr

0800dd8c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 800dd8c:	b480      	push	{r7}
 800dd8e:	b083      	sub	sp, #12
 800dd90:	af00      	add	r7, sp, #0
 800dd92:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800dd94:	2300      	movs	r3, #0
    }
 800dd96:	4618      	mov	r0, r3
 800dd98:	370c      	adds	r7, #12
 800dd9a:	46bd      	mov	sp, r7
 800dd9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dda0:	4770      	bx	lr
	...

0800dda4 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800dda4:	b480      	push	{r7}
 800dda6:	b083      	sub	sp, #12
 800dda8:	af00      	add	r7, sp, #0
 800ddaa:	6078      	str	r0, [r7, #4]
    {
 800ddac:	4a04      	ldr	r2, [pc, #16]	; (800ddc0 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800ddae:	687b      	ldr	r3, [r7, #4]
 800ddb0:	601a      	str	r2, [r3, #0]
    }
 800ddb2:	687b      	ldr	r3, [r7, #4]
 800ddb4:	4618      	mov	r0, r3
 800ddb6:	370c      	adds	r7, #12
 800ddb8:	46bd      	mov	sp, r7
 800ddba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddbe:	4770      	bx	lr
 800ddc0:	08025408 	.word	0x08025408

0800ddc4 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800ddc4:	b580      	push	{r7, lr}
 800ddc6:	b082      	sub	sp, #8
 800ddc8:	af00      	add	r7, sp, #0
 800ddca:	6078      	str	r0, [r7, #4]
    }
 800ddcc:	6878      	ldr	r0, [r7, #4]
 800ddce:	f7ff ffe9 	bl	800dda4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800ddd2:	210c      	movs	r1, #12
 800ddd4:	6878      	ldr	r0, [r7, #4]
 800ddd6:	f014 fe5a 	bl	8022a8e <_ZdlPvj>
 800ddda:	687b      	ldr	r3, [r7, #4]
 800dddc:	4618      	mov	r0, r3
 800ddde:	3708      	adds	r7, #8
 800dde0:	46bd      	mov	sp, r7
 800dde2:	bd80      	pop	{r7, pc}

0800dde4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800dde4:	b480      	push	{r7}
 800dde6:	b083      	sub	sp, #12
 800dde8:	af00      	add	r7, sp, #0
 800ddea:	6078      	str	r0, [r7, #4]
 800ddec:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800ddee:	4a09      	ldr	r2, [pc, #36]	; (800de14 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800ddf0:	687b      	ldr	r3, [r7, #4]
 800ddf2:	601a      	str	r2, [r3, #0]
 800ddf4:	687b      	ldr	r3, [r7, #4]
 800ddf6:	683a      	ldr	r2, [r7, #0]
 800ddf8:	605a      	str	r2, [r3, #4]
 800ddfa:	687b      	ldr	r3, [r7, #4]
 800ddfc:	2200      	movs	r2, #0
 800ddfe:	721a      	strb	r2, [r3, #8]
 800de00:	687b      	ldr	r3, [r7, #4]
 800de02:	2200      	movs	r2, #0
 800de04:	725a      	strb	r2, [r3, #9]
    {
    }
 800de06:	687b      	ldr	r3, [r7, #4]
 800de08:	4618      	mov	r0, r3
 800de0a:	370c      	adds	r7, #12
 800de0c:	46bd      	mov	sp, r7
 800de0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de12:	4770      	bx	lr
 800de14:	08025408 	.word	0x08025408

0800de18 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 800de18:	b480      	push	{r7}
 800de1a:	b083      	sub	sp, #12
 800de1c:	af00      	add	r7, sp, #0
 800de1e:	6078      	str	r0, [r7, #4]
    {
    }
 800de20:	bf00      	nop
 800de22:	370c      	adds	r7, #12
 800de24:	46bd      	mov	sp, r7
 800de26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de2a:	4770      	bx	lr

0800de2c <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 800de2c:	b480      	push	{r7}
 800de2e:	b083      	sub	sp, #12
 800de30:	af00      	add	r7, sp, #0
 800de32:	6078      	str	r0, [r7, #4]
    {
    }
 800de34:	bf00      	nop
 800de36:	370c      	adds	r7, #12
 800de38:	46bd      	mov	sp, r7
 800de3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de3e:	4770      	bx	lr

0800de40 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800de40:	b580      	push	{r7, lr}
 800de42:	b082      	sub	sp, #8
 800de44:	af00      	add	r7, sp, #0
 800de46:	6078      	str	r0, [r7, #4]
 800de48:	687b      	ldr	r3, [r7, #4]
 800de4a:	330c      	adds	r3, #12
 800de4c:	4618      	mov	r0, r3
 800de4e:	f7ff ff65 	bl	800dd1c <_ZN8touchgfx9colortypeC1Ev>
 800de52:	687b      	ldr	r3, [r7, #4]
 800de54:	4618      	mov	r0, r3
 800de56:	3708      	adds	r7, #8
 800de58:	46bd      	mov	sp, r7
 800de5a:	bd80      	pop	{r7, pc}

0800de5c <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 800de5c:	b580      	push	{r7, lr}
 800de5e:	b082      	sub	sp, #8
 800de60:	af00      	add	r7, sp, #0
 800de62:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 800de64:	687a      	ldr	r2, [r7, #4]
 800de66:	687b      	ldr	r3, [r7, #4]
 800de68:	330c      	adds	r3, #12
 800de6a:	4619      	mov	r1, r3
 800de6c:	4610      	mov	r0, r2
 800de6e:	f7ff ffb9 	bl	800dde4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800de72:	4a0b      	ldr	r2, [pc, #44]	; (800dea0 <_ZN8STM32DMAC1Ev+0x44>)
 800de74:	687b      	ldr	r3, [r7, #4]
 800de76:	601a      	str	r2, [r3, #0]
 800de78:	687b      	ldr	r3, [r7, #4]
 800de7a:	f103 000c 	add.w	r0, r3, #12
 800de7e:	687b      	ldr	r3, [r7, #4]
 800de80:	3320      	adds	r3, #32
 800de82:	2201      	movs	r2, #1
 800de84:	4619      	mov	r1, r3
 800de86:	f002 fbeb 	bl	8010660 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800de8a:	687b      	ldr	r3, [r7, #4]
 800de8c:	3320      	adds	r3, #32
 800de8e:	4618      	mov	r0, r3
 800de90:	f7ff ffd6 	bl	800de40 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 800de94:	687b      	ldr	r3, [r7, #4]
 800de96:	4618      	mov	r0, r3
 800de98:	3708      	adds	r7, #8
 800de9a:	46bd      	mov	sp, r7
 800de9c:	bd80      	pop	{r7, pc}
 800de9e:	bf00      	nop
 800dea0:	08024fe8 	.word	0x08024fe8

0800dea4 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 800dea4:	b480      	push	{r7}
 800dea6:	b083      	sub	sp, #12
 800dea8:	af00      	add	r7, sp, #0
 800deaa:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 800deac:	2300      	movs	r3, #0
}
 800deae:	4618      	mov	r0, r3
 800deb0:	370c      	adds	r7, #12
 800deb2:	46bd      	mov	sp, r7
 800deb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deb8:	4770      	bx	lr
	...

0800debc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 800debc:	b580      	push	{r7, lr}
 800debe:	b082      	sub	sp, #8
 800dec0:	af00      	add	r7, sp, #0
 800dec2:	6078      	str	r0, [r7, #4]
 800dec4:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800dec6:	4b03      	ldr	r3, [pc, #12]	; (800ded4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800dec8:	4a03      	ldr	r2, [pc, #12]	; (800ded8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800deca:	2122      	movs	r1, #34	; 0x22
 800decc:	4803      	ldr	r0, [pc, #12]	; (800dedc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800dece:	f014 fe0d 	bl	8022aec <__assert_func>
 800ded2:	bf00      	nop
 800ded4:	08024290 	.word	0x08024290
 800ded8:	080242b4 	.word	0x080242b4
 800dedc:	080242f4 	.word	0x080242f4

0800dee0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800dee0:	b580      	push	{r7, lr}
 800dee2:	b082      	sub	sp, #8
 800dee4:	af00      	add	r7, sp, #0
 800dee6:	6078      	str	r0, [r7, #4]
 800dee8:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800deea:	4b03      	ldr	r3, [pc, #12]	; (800def8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800deec:	4a03      	ldr	r2, [pc, #12]	; (800defc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800deee:	2127      	movs	r1, #39	; 0x27
 800def0:	4803      	ldr	r0, [pc, #12]	; (800df00 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800def2:	f014 fdfb 	bl	8022aec <__assert_func>
 800def6:	bf00      	nop
 800def8:	08024290 	.word	0x08024290
 800defc:	08024320 	.word	0x08024320
 800df00:	080242f4 	.word	0x080242f4

0800df04 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800df04:	b580      	push	{r7, lr}
 800df06:	b082      	sub	sp, #8
 800df08:	af00      	add	r7, sp, #0
 800df0a:	6078      	str	r0, [r7, #4]
 800df0c:	4a08      	ldr	r2, [pc, #32]	; (800df30 <_ZN8STM32DMAD1Ev+0x2c>)
 800df0e:	687b      	ldr	r3, [r7, #4]
 800df10:	601a      	str	r2, [r3, #0]
 800df12:	687b      	ldr	r3, [r7, #4]
 800df14:	330c      	adds	r3, #12
 800df16:	4618      	mov	r0, r3
 800df18:	f000 f81c 	bl	800df54 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800df1c:	687b      	ldr	r3, [r7, #4]
 800df1e:	4618      	mov	r0, r3
 800df20:	f7ff ff40 	bl	800dda4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800df24:	687b      	ldr	r3, [r7, #4]
 800df26:	4618      	mov	r0, r3
 800df28:	3708      	adds	r7, #8
 800df2a:	46bd      	mov	sp, r7
 800df2c:	bd80      	pop	{r7, pc}
 800df2e:	bf00      	nop
 800df30:	08024fe8 	.word	0x08024fe8

0800df34 <_ZN8STM32DMAD0Ev>:
 800df34:	b580      	push	{r7, lr}
 800df36:	b082      	sub	sp, #8
 800df38:	af00      	add	r7, sp, #0
 800df3a:	6078      	str	r0, [r7, #4]
 800df3c:	6878      	ldr	r0, [r7, #4]
 800df3e:	f7ff ffe1 	bl	800df04 <_ZN8STM32DMAD1Ev>
 800df42:	2144      	movs	r1, #68	; 0x44
 800df44:	6878      	ldr	r0, [r7, #4]
 800df46:	f014 fda2 	bl	8022a8e <_ZdlPvj>
 800df4a:	687b      	ldr	r3, [r7, #4]
 800df4c:	4618      	mov	r0, r3
 800df4e:	3708      	adds	r7, #8
 800df50:	46bd      	mov	sp, r7
 800df52:	bd80      	pop	{r7, pc}

0800df54 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800df54:	b580      	push	{r7, lr}
 800df56:	b082      	sub	sp, #8
 800df58:	af00      	add	r7, sp, #0
 800df5a:	6078      	str	r0, [r7, #4]
 800df5c:	4a05      	ldr	r2, [pc, #20]	; (800df74 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800df5e:	687b      	ldr	r3, [r7, #4]
 800df60:	601a      	str	r2, [r3, #0]
 800df62:	687b      	ldr	r3, [r7, #4]
 800df64:	4618      	mov	r0, r3
 800df66:	f7ff fee7 	bl	800dd38 <_ZN8touchgfx9DMA_QueueD1Ev>
 800df6a:	687b      	ldr	r3, [r7, #4]
 800df6c:	4618      	mov	r0, r3
 800df6e:	3708      	adds	r7, #8
 800df70:	46bd      	mov	sp, r7
 800df72:	bd80      	pop	{r7, pc}
 800df74:	08025458 	.word	0x08025458

0800df78 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800df78:	b580      	push	{r7, lr}
 800df7a:	b082      	sub	sp, #8
 800df7c:	af00      	add	r7, sp, #0
 800df7e:	6078      	str	r0, [r7, #4]
 800df80:	6878      	ldr	r0, [r7, #4]
 800df82:	f7ff ffe7 	bl	800df54 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800df86:	2114      	movs	r1, #20
 800df88:	6878      	ldr	r0, [r7, #4]
 800df8a:	f014 fd80 	bl	8022a8e <_ZdlPvj>
 800df8e:	687b      	ldr	r3, [r7, #4]
 800df90:	4618      	mov	r0, r3
 800df92:	3708      	adds	r7, #8
 800df94:	46bd      	mov	sp, r7
 800df96:	bd80      	pop	{r7, pc}

0800df98 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800df98:	b480      	push	{r7}
 800df9a:	b083      	sub	sp, #12
 800df9c:	af00      	add	r7, sp, #0
 800df9e:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800dfa0:	4a04      	ldr	r2, [pc, #16]	; (800dfb4 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800dfa2:	687b      	ldr	r3, [r7, #4]
 800dfa4:	6013      	str	r3, [r2, #0]
    }
 800dfa6:	bf00      	nop
 800dfa8:	370c      	adds	r7, #12
 800dfaa:	46bd      	mov	sp, r7
 800dfac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfb0:	4770      	bx	lr
 800dfb2:	bf00      	nop
 800dfb4:	24001f34 	.word	0x24001f34

0800dfb8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800dfb8:	b480      	push	{r7}
 800dfba:	b085      	sub	sp, #20
 800dfbc:	af00      	add	r7, sp, #0
 800dfbe:	60f8      	str	r0, [r7, #12]
 800dfc0:	60b9      	str	r1, [r7, #8]
 800dfc2:	607a      	str	r2, [r7, #4]
 800dfc4:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800dfc6:	4a0b      	ldr	r2, [pc, #44]	; (800dff4 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800dfc8:	68fb      	ldr	r3, [r7, #12]
 800dfca:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800dfcc:	68fb      	ldr	r3, [r7, #12]
 800dfce:	68ba      	ldr	r2, [r7, #8]
 800dfd0:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800dfd2:	68fb      	ldr	r3, [r7, #12]
 800dfd4:	687a      	ldr	r2, [r7, #4]
 800dfd6:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800dfd8:	68fb      	ldr	r3, [r7, #12]
 800dfda:	683a      	ldr	r2, [r7, #0]
 800dfdc:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800dfde:	68fb      	ldr	r3, [r7, #12]
 800dfe0:	69ba      	ldr	r2, [r7, #24]
 800dfe2:	611a      	str	r2, [r3, #16]
    {
    }
 800dfe4:	68fb      	ldr	r3, [r7, #12]
 800dfe6:	4618      	mov	r0, r3
 800dfe8:	3714      	adds	r7, #20
 800dfea:	46bd      	mov	sp, r7
 800dfec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dff0:	4770      	bx	lr
 800dff2:	bf00      	nop
 800dff4:	08025120 	.word	0x08025120

0800dff8 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800dff8:	b480      	push	{r7}
 800dffa:	b083      	sub	sp, #12
 800dffc:	af00      	add	r7, sp, #0
 800dffe:	6078      	str	r0, [r7, #4]
    {
 800e000:	4a04      	ldr	r2, [pc, #16]	; (800e014 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800e002:	687b      	ldr	r3, [r7, #4]
 800e004:	601a      	str	r2, [r3, #0]
    }
 800e006:	687b      	ldr	r3, [r7, #4]
 800e008:	4618      	mov	r0, r3
 800e00a:	370c      	adds	r7, #12
 800e00c:	46bd      	mov	sp, r7
 800e00e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e012:	4770      	bx	lr
 800e014:	08025120 	.word	0x08025120

0800e018 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800e018:	b580      	push	{r7, lr}
 800e01a:	b082      	sub	sp, #8
 800e01c:	af00      	add	r7, sp, #0
 800e01e:	6078      	str	r0, [r7, #4]
    }
 800e020:	6878      	ldr	r0, [r7, #4]
 800e022:	f7ff ffe9 	bl	800dff8 <_ZN8touchgfx7MVPHeapD1Ev>
 800e026:	2114      	movs	r1, #20
 800e028:	6878      	ldr	r0, [r7, #4]
 800e02a:	f014 fd30 	bl	8022a8e <_ZdlPvj>
 800e02e:	687b      	ldr	r3, [r7, #4]
 800e030:	4618      	mov	r0, r3
 800e032:	3708      	adds	r7, #8
 800e034:	46bd      	mov	sp, r7
 800e036:	bd80      	pop	{r7, pc}

0800e038 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800e038:	b480      	push	{r7}
 800e03a:	b083      	sub	sp, #12
 800e03c:	af00      	add	r7, sp, #0
 800e03e:	6078      	str	r0, [r7, #4]
    {
 800e040:	4a04      	ldr	r2, [pc, #16]	; (800e054 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800e042:	687b      	ldr	r3, [r7, #4]
 800e044:	601a      	str	r2, [r3, #0]
    }
 800e046:	687b      	ldr	r3, [r7, #4]
 800e048:	4618      	mov	r0, r3
 800e04a:	370c      	adds	r7, #12
 800e04c:	46bd      	mov	sp, r7
 800e04e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e052:	4770      	bx	lr
 800e054:	08025574 	.word	0x08025574

0800e058 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800e058:	b580      	push	{r7, lr}
 800e05a:	b082      	sub	sp, #8
 800e05c:	af00      	add	r7, sp, #0
 800e05e:	6078      	str	r0, [r7, #4]
    }
 800e060:	6878      	ldr	r0, [r7, #4]
 800e062:	f7ff ffe9 	bl	800e038 <_ZN8touchgfx3LCDD1Ev>
 800e066:	2108      	movs	r1, #8
 800e068:	6878      	ldr	r0, [r7, #4]
 800e06a:	f014 fd10 	bl	8022a8e <_ZdlPvj>
 800e06e:	687b      	ldr	r3, [r7, #4]
 800e070:	4618      	mov	r0, r3
 800e072:	3708      	adds	r7, #8
 800e074:	46bd      	mov	sp, r7
 800e076:	bd80      	pop	{r7, pc}

0800e078 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800e078:	b480      	push	{r7}
 800e07a:	b083      	sub	sp, #12
 800e07c:	af00      	add	r7, sp, #0
 800e07e:	6078      	str	r0, [r7, #4]
            : startX(0),
 800e080:	687b      	ldr	r3, [r7, #4]
 800e082:	2200      	movs	r2, #0
 800e084:	801a      	strh	r2, [r3, #0]
              startY(0),
 800e086:	687b      	ldr	r3, [r7, #4]
 800e088:	2200      	movs	r2, #0
 800e08a:	805a      	strh	r2, [r3, #2]
              downX(0),
 800e08c:	687b      	ldr	r3, [r7, #4]
 800e08e:	2200      	movs	r2, #0
 800e090:	809a      	strh	r2, [r3, #4]
              downY(0),
 800e092:	687b      	ldr	r3, [r7, #4]
 800e094:	2200      	movs	r2, #0
 800e096:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800e098:	687b      	ldr	r3, [r7, #4]
 800e09a:	2200      	movs	r2, #0
 800e09c:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800e09e:	687b      	ldr	r3, [r7, #4]
 800e0a0:	2200      	movs	r2, #0
 800e0a2:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800e0a4:	687b      	ldr	r3, [r7, #4]
 800e0a6:	2200      	movs	r2, #0
 800e0a8:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800e0aa:	687b      	ldr	r3, [r7, #4]
 800e0ac:	2200      	movs	r2, #0
 800e0ae:	739a      	strb	r2, [r3, #14]
        {
        }
 800e0b0:	687b      	ldr	r3, [r7, #4]
 800e0b2:	4618      	mov	r0, r3
 800e0b4:	370c      	adds	r7, #12
 800e0b6:	46bd      	mov	sp, r7
 800e0b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0bc:	4770      	bx	lr

0800e0be <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800e0be:	b580      	push	{r7, lr}
 800e0c0:	b082      	sub	sp, #8
 800e0c2:	af00      	add	r7, sp, #0
 800e0c4:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800e0c6:	687b      	ldr	r3, [r7, #4]
 800e0c8:	4618      	mov	r0, r3
 800e0ca:	f7ff ffd5 	bl	800e078 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800e0ce:	687b      	ldr	r3, [r7, #4]
 800e0d0:	2200      	movs	r2, #0
 800e0d2:	611a      	str	r2, [r3, #16]
 800e0d4:	687b      	ldr	r3, [r7, #4]
 800e0d6:	2200      	movs	r2, #0
 800e0d8:	829a      	strh	r2, [r3, #20]
    {
    }
 800e0da:	687b      	ldr	r3, [r7, #4]
 800e0dc:	4618      	mov	r0, r3
 800e0de:	3708      	adds	r7, #8
 800e0e0:	46bd      	mov	sp, r7
 800e0e2:	bd80      	pop	{r7, pc}

0800e0e4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800e0e4:	b580      	push	{r7, lr}
 800e0e6:	b084      	sub	sp, #16
 800e0e8:	af00      	add	r7, sp, #0
 800e0ea:	60f8      	str	r0, [r7, #12]
 800e0ec:	60b9      	str	r1, [r7, #8]
 800e0ee:	607a      	str	r2, [r7, #4]
 800e0f0:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800e0f2:	4a55      	ldr	r2, [pc, #340]	; (800e248 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800e0f4:	68fb      	ldr	r3, [r7, #12]
 800e0f6:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800e0f8:	68fb      	ldr	r3, [r7, #12]
 800e0fa:	68ba      	ldr	r2, [r7, #8]
 800e0fc:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800e0fe:	68fb      	ldr	r3, [r7, #12]
 800e100:	687a      	ldr	r2, [r7, #4]
 800e102:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800e104:	68fb      	ldr	r3, [r7, #12]
 800e106:	683a      	ldr	r2, [r7, #0]
 800e108:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800e10a:	68fb      	ldr	r3, [r7, #12]
 800e10c:	2200      	movs	r2, #0
 800e10e:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800e110:	68fb      	ldr	r3, [r7, #12]
 800e112:	2200      	movs	r2, #0
 800e114:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800e116:	68fb      	ldr	r3, [r7, #12]
 800e118:	2200      	movs	r2, #0
 800e11a:	619a      	str	r2, [r3, #24]
          gestures(),
 800e11c:	68fb      	ldr	r3, [r7, #12]
 800e11e:	331c      	adds	r3, #28
 800e120:	4618      	mov	r0, r3
 800e122:	f7ff ffcc 	bl	800e0be <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800e126:	68fb      	ldr	r3, [r7, #12]
 800e128:	2200      	movs	r2, #0
 800e12a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 800e12e:	68fb      	ldr	r3, [r7, #12]
 800e130:	2200      	movs	r2, #0
 800e132:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 800e134:	68fb      	ldr	r3, [r7, #12]
 800e136:	2200      	movs	r2, #0
 800e138:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 800e13a:	68fb      	ldr	r3, [r7, #12]
 800e13c:	2200      	movs	r2, #0
 800e13e:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 800e140:	68fb      	ldr	r3, [r7, #12]
 800e142:	2200      	movs	r2, #0
 800e144:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800e146:	68fb      	ldr	r3, [r7, #12]
 800e148:	2200      	movs	r2, #0
 800e14a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 800e14e:	68fb      	ldr	r3, [r7, #12]
 800e150:	2201      	movs	r2, #1
 800e152:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 800e156:	68fb      	ldr	r3, [r7, #12]
 800e158:	2200      	movs	r2, #0
 800e15a:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 800e15e:	68fb      	ldr	r3, [r7, #12]
 800e160:	2200      	movs	r2, #0
 800e162:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 800e166:	68fb      	ldr	r3, [r7, #12]
 800e168:	2200      	movs	r2, #0
 800e16a:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 800e16c:	68fb      	ldr	r3, [r7, #12]
 800e16e:	3350      	adds	r3, #80	; 0x50
 800e170:	4618      	mov	r0, r3
 800e172:	f7fe f966 	bl	800c442 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800e176:	68fb      	ldr	r3, [r7, #12]
 800e178:	2200      	movs	r2, #0
 800e17a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 800e17e:	68fb      	ldr	r3, [r7, #12]
 800e180:	2200      	movs	r2, #0
 800e182:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 800e184:	68fb      	ldr	r3, [r7, #12]
 800e186:	2200      	movs	r2, #0
 800e188:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 800e18a:	68fb      	ldr	r3, [r7, #12]
 800e18c:	2200      	movs	r2, #0
 800e18e:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 800e190:	68fb      	ldr	r3, [r7, #12]
 800e192:	2201      	movs	r2, #1
 800e194:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 800e198:	68fb      	ldr	r3, [r7, #12]
 800e19a:	2200      	movs	r2, #0
 800e19c:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 800e1a0:	68fb      	ldr	r3, [r7, #12]
 800e1a2:	2200      	movs	r2, #0
 800e1a4:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 800e1a8:	68fb      	ldr	r3, [r7, #12]
 800e1aa:	2201      	movs	r2, #1
 800e1ac:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 800e1b0:	68fb      	ldr	r3, [r7, #12]
 800e1b2:	2200      	movs	r2, #0
 800e1b4:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 800e1b8:	68fb      	ldr	r3, [r7, #12]
 800e1ba:	2200      	movs	r2, #0
 800e1bc:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 800e1c0:	68fb      	ldr	r3, [r7, #12]
 800e1c2:	2200      	movs	r2, #0
 800e1c4:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 800e1c8:	68fb      	ldr	r3, [r7, #12]
 800e1ca:	2200      	movs	r2, #0
 800e1cc:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 800e1d0:	68fb      	ldr	r3, [r7, #12]
 800e1d2:	2200      	movs	r2, #0
 800e1d4:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 800e1d8:	68fb      	ldr	r3, [r7, #12]
 800e1da:	2200      	movs	r2, #0
 800e1dc:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800e1de:	68fb      	ldr	r3, [r7, #12]
 800e1e0:	2200      	movs	r2, #0
 800e1e2:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 800e1e6:	68fb      	ldr	r3, [r7, #12]
 800e1e8:	2200      	movs	r2, #0
 800e1ea:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 800e1ee:	68fb      	ldr	r3, [r7, #12]
 800e1f0:	2201      	movs	r2, #1
 800e1f2:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 800e1f6:	68fb      	ldr	r3, [r7, #12]
 800e1f8:	2201      	movs	r2, #1
 800e1fa:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 800e1fe:	4a13      	ldr	r2, [pc, #76]	; (800e24c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800e200:	68fb      	ldr	r3, [r7, #12]
 800e202:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800e204:	4a12      	ldr	r2, [pc, #72]	; (800e250 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800e206:	8b3b      	ldrh	r3, [r7, #24]
 800e208:	8013      	strh	r3, [r2, #0]
 800e20a:	4b11      	ldr	r3, [pc, #68]	; (800e250 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800e20c:	881a      	ldrh	r2, [r3, #0]
 800e20e:	4b11      	ldr	r3, [pc, #68]	; (800e254 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800e210:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800e212:	4a11      	ldr	r2, [pc, #68]	; (800e258 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800e214:	8bbb      	ldrh	r3, [r7, #28]
 800e216:	8013      	strh	r3, [r2, #0]
 800e218:	4b0f      	ldr	r3, [pc, #60]	; (800e258 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800e21a:	881a      	ldrh	r2, [r3, #0]
 800e21c:	4b0f      	ldr	r3, [pc, #60]	; (800e25c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800e21e:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800e220:	4b0f      	ldr	r3, [pc, #60]	; (800e260 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800e222:	2200      	movs	r2, #0
 800e224:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800e226:	8b3a      	ldrh	r2, [r7, #24]
 800e228:	8bbb      	ldrh	r3, [r7, #28]
 800e22a:	429a      	cmp	r2, r3
 800e22c:	bf34      	ite	cc
 800e22e:	2301      	movcc	r3, #1
 800e230:	2300      	movcs	r3, #0
 800e232:	b2db      	uxtb	r3, r3
 800e234:	461a      	mov	r2, r3
 800e236:	68fb      	ldr	r3, [r7, #12]
 800e238:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800e23c:	68fb      	ldr	r3, [r7, #12]
 800e23e:	4618      	mov	r0, r3
 800e240:	3710      	adds	r7, #16
 800e242:	46bd      	mov	sp, r7
 800e244:	bd80      	pop	{r7, pc}
 800e246:	bf00      	nop
 800e248:	08025330 	.word	0x08025330
 800e24c:	24001ed8 	.word	0x24001ed8
 800e250:	24001ecc 	.word	0x24001ecc
 800e254:	24001ed2 	.word	0x24001ed2
 800e258:	24001ece 	.word	0x24001ece
 800e25c:	24001ed4 	.word	0x24001ed4
 800e260:	24001ed0 	.word	0x24001ed0

0800e264 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800e264:	b580      	push	{r7, lr}
 800e266:	b082      	sub	sp, #8
 800e268:	af00      	add	r7, sp, #0
 800e26a:	6078      	str	r0, [r7, #4]
 800e26c:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreenScreenNoTransition();
 800e26e:	683b      	ldr	r3, [r7, #0]
 800e270:	4618      	mov	r0, r3
 800e272:	f7fd fe4b 	bl	800bf0c <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800e276:	bf00      	nop
 800e278:	3708      	adds	r7, #8
 800e27a:	46bd      	mov	sp, r7
 800e27c:	bd80      	pop	{r7, pc}
	...

0800e280 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800e280:	b580      	push	{r7, lr}
 800e282:	b086      	sub	sp, #24
 800e284:	af02      	add	r7, sp, #8
 800e286:	60f8      	str	r0, [r7, #12]
 800e288:	60b9      	str	r1, [r7, #8]
 800e28a:	607a      	str	r2, [r7, #4]
 800e28c:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800e28e:	68f8      	ldr	r0, [r7, #12]
 800e290:	69bb      	ldr	r3, [r7, #24]
 800e292:	9300      	str	r3, [sp, #0]
 800e294:	683b      	ldr	r3, [r7, #0]
 800e296:	687a      	ldr	r2, [r7, #4]
 800e298:	68b9      	ldr	r1, [r7, #8]
 800e29a:	f7ff fe8d 	bl	800dfb8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800e29e:	4a04      	ldr	r2, [pc, #16]	; (800e2b0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800e2a0:	68fb      	ldr	r3, [r7, #12]
 800e2a2:	601a      	str	r2, [r3, #0]
    {

    }
 800e2a4:	68fb      	ldr	r3, [r7, #12]
 800e2a6:	4618      	mov	r0, r3
 800e2a8:	3710      	adds	r7, #16
 800e2aa:	46bd      	mov	sp, r7
 800e2ac:	bd80      	pop	{r7, pc}
 800e2ae:	bf00      	nop
 800e2b0:	0802510c 	.word	0x0802510c

0800e2b4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800e2b4:	b580      	push	{r7, lr}
 800e2b6:	af00      	add	r7, sp, #0
 800e2b8:	4801      	ldr	r0, [pc, #4]	; (800e2c0 <__tcf_0+0xc>)
 800e2ba:	f000 f969 	bl	800e590 <_ZN12FrontendHeapD1Ev>
 800e2be:	bd80      	pop	{r7, pc}
 800e2c0:	2400044c 	.word	0x2400044c

0800e2c4 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800e2c4:	b580      	push	{r7, lr}
 800e2c6:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800e2c8:	4b11      	ldr	r3, [pc, #68]	; (800e310 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e2ca:	681b      	ldr	r3, [r3, #0]
 800e2cc:	f3bf 8f5b 	dmb	ish
 800e2d0:	f003 0301 	and.w	r3, r3, #1
 800e2d4:	2b00      	cmp	r3, #0
 800e2d6:	bf0c      	ite	eq
 800e2d8:	2301      	moveq	r3, #1
 800e2da:	2300      	movne	r3, #0
 800e2dc:	b2db      	uxtb	r3, r3
 800e2de:	2b00      	cmp	r3, #0
 800e2e0:	d013      	beq.n	800e30a <_ZN12FrontendHeap11getInstanceEv+0x46>
 800e2e2:	480b      	ldr	r0, [pc, #44]	; (800e310 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e2e4:	f014 fbd5 	bl	8022a92 <__cxa_guard_acquire>
 800e2e8:	4603      	mov	r3, r0
 800e2ea:	2b00      	cmp	r3, #0
 800e2ec:	bf14      	ite	ne
 800e2ee:	2301      	movne	r3, #1
 800e2f0:	2300      	moveq	r3, #0
 800e2f2:	b2db      	uxtb	r3, r3
 800e2f4:	2b00      	cmp	r3, #0
 800e2f6:	d008      	beq.n	800e30a <_ZN12FrontendHeap11getInstanceEv+0x46>
 800e2f8:	4806      	ldr	r0, [pc, #24]	; (800e314 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800e2fa:	f000 f867 	bl	800e3cc <_ZN12FrontendHeapC1Ev>
 800e2fe:	4806      	ldr	r0, [pc, #24]	; (800e318 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800e300:	f014 fc12 	bl	8022b28 <atexit>
 800e304:	4802      	ldr	r0, [pc, #8]	; (800e310 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e306:	f014 fbd0 	bl	8022aaa <__cxa_guard_release>
        return instance;
 800e30a:	4b02      	ldr	r3, [pc, #8]	; (800e314 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800e30c:	4618      	mov	r0, r3
 800e30e:	bd80      	pop	{r7, pc}
 800e310:	240006d4 	.word	0x240006d4
 800e314:	2400044c 	.word	0x2400044c
 800e318:	0800e2b5 	.word	0x0800e2b5

0800e31c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800e31c:	b580      	push	{r7, lr}
 800e31e:	b082      	sub	sp, #8
 800e320:	af00      	add	r7, sp, #0
 800e322:	6078      	str	r0, [r7, #4]
 800e324:	4a05      	ldr	r2, [pc, #20]	; (800e33c <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800e326:	687b      	ldr	r3, [r7, #4]
 800e328:	601a      	str	r2, [r3, #0]
 800e32a:	687b      	ldr	r3, [r7, #4]
 800e32c:	4618      	mov	r0, r3
 800e32e:	f7ff fe63 	bl	800dff8 <_ZN8touchgfx7MVPHeapD1Ev>
 800e332:	687b      	ldr	r3, [r7, #4]
 800e334:	4618      	mov	r0, r3
 800e336:	3708      	adds	r7, #8
 800e338:	46bd      	mov	sp, r7
 800e33a:	bd80      	pop	{r7, pc}
 800e33c:	0802510c 	.word	0x0802510c

0800e340 <_ZN16FrontendHeapBaseD0Ev>:
 800e340:	b580      	push	{r7, lr}
 800e342:	b082      	sub	sp, #8
 800e344:	af00      	add	r7, sp, #0
 800e346:	6078      	str	r0, [r7, #4]
 800e348:	6878      	ldr	r0, [r7, #4]
 800e34a:	f7ff ffe7 	bl	800e31c <_ZN16FrontendHeapBaseD1Ev>
 800e34e:	2114      	movs	r1, #20
 800e350:	6878      	ldr	r0, [r7, #4]
 800e352:	f014 fb9c 	bl	8022a8e <_ZdlPvj>
 800e356:	687b      	ldr	r3, [r7, #4]
 800e358:	4618      	mov	r0, r3
 800e35a:	3708      	adds	r7, #8
 800e35c:	46bd      	mov	sp, r7
 800e35e:	bd80      	pop	{r7, pc}

0800e360 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800e360:	b580      	push	{r7, lr}
 800e362:	b082      	sub	sp, #8
 800e364:	af00      	add	r7, sp, #0
 800e366:	6078      	str	r0, [r7, #4]
 800e368:	687b      	ldr	r3, [r7, #4]
 800e36a:	4618      	mov	r0, r3
 800e36c:	f000 fffa 	bl	800f364 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e370:	4a03      	ldr	r2, [pc, #12]	; (800e380 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e372:	687b      	ldr	r3, [r7, #4]
 800e374:	601a      	str	r2, [r3, #0]
 800e376:	687b      	ldr	r3, [r7, #4]
 800e378:	4618      	mov	r0, r3
 800e37a:	3708      	adds	r7, #8
 800e37c:	46bd      	mov	sp, r7
 800e37e:	bd80      	pop	{r7, pc}
 800e380:	080250d8 	.word	0x080250d8

0800e384 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800e384:	b580      	push	{r7, lr}
 800e386:	b082      	sub	sp, #8
 800e388:	af00      	add	r7, sp, #0
 800e38a:	6078      	str	r0, [r7, #4]
 800e38c:	687b      	ldr	r3, [r7, #4]
 800e38e:	4618      	mov	r0, r3
 800e390:	f000 ffe8 	bl	800f364 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e394:	4a03      	ldr	r2, [pc, #12]	; (800e3a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e396:	687b      	ldr	r3, [r7, #4]
 800e398:	601a      	str	r2, [r3, #0]
 800e39a:	687b      	ldr	r3, [r7, #4]
 800e39c:	4618      	mov	r0, r3
 800e39e:	3708      	adds	r7, #8
 800e3a0:	46bd      	mov	sp, r7
 800e3a2:	bd80      	pop	{r7, pc}
 800e3a4:	080250a4 	.word	0x080250a4

0800e3a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800e3a8:	b580      	push	{r7, lr}
 800e3aa:	b082      	sub	sp, #8
 800e3ac:	af00      	add	r7, sp, #0
 800e3ae:	6078      	str	r0, [r7, #4]
 800e3b0:	687b      	ldr	r3, [r7, #4]
 800e3b2:	4618      	mov	r0, r3
 800e3b4:	f000 ffd6 	bl	800f364 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e3b8:	4a03      	ldr	r2, [pc, #12]	; (800e3c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e3ba:	687b      	ldr	r3, [r7, #4]
 800e3bc:	601a      	str	r2, [r3, #0]
 800e3be:	687b      	ldr	r3, [r7, #4]
 800e3c0:	4618      	mov	r0, r3
 800e3c2:	3708      	adds	r7, #8
 800e3c4:	46bd      	mov	sp, r7
 800e3c6:	bd80      	pop	{r7, pc}
 800e3c8:	08025070 	.word	0x08025070

0800e3cc <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800e3cc:	b590      	push	{r4, r7, lr}
 800e3ce:	b085      	sub	sp, #20
 800e3d0:	af02      	add	r7, sp, #8
 800e3d2:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800e3d4:	6878      	ldr	r0, [r7, #4]
 800e3d6:	687b      	ldr	r3, [r7, #4]
 800e3d8:	f103 0114 	add.w	r1, r3, #20
 800e3dc:	687b      	ldr	r3, [r7, #4]
 800e3de:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800e3e2:	687b      	ldr	r3, [r7, #4]
 800e3e4:	f503 748a 	add.w	r4, r3, #276	; 0x114
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800e3e8:	687b      	ldr	r3, [r7, #4]
 800e3ea:	f503 7396 	add.w	r3, r3, #300	; 0x12c
                     app(model, *this)
 800e3ee:	9300      	str	r3, [sp, #0]
 800e3f0:	4623      	mov	r3, r4
 800e3f2:	f7ff ff45 	bl	800e280 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800e3f6:	4a18      	ldr	r2, [pc, #96]	; (800e458 <_ZN12FrontendHeapC1Ev+0x8c>)
 800e3f8:	687b      	ldr	r3, [r7, #4]
 800e3fa:	601a      	str	r2, [r3, #0]
 800e3fc:	687b      	ldr	r3, [r7, #4]
 800e3fe:	3314      	adds	r3, #20
 800e400:	4618      	mov	r0, r3
 800e402:	f7ff ffad 	bl	800e360 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e406:	687b      	ldr	r3, [r7, #4]
 800e408:	332c      	adds	r3, #44	; 0x2c
 800e40a:	4618      	mov	r0, r3
 800e40c:	f7ff ffba 	bl	800e384 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e410:	687b      	ldr	r3, [r7, #4]
 800e412:	f503 738a 	add.w	r3, r3, #276	; 0x114
 800e416:	4618      	mov	r0, r3
 800e418:	f7ff ffc6 	bl	800e3a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e41c:	687b      	ldr	r3, [r7, #4]
 800e41e:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800e422:	4618      	mov	r0, r3
 800e424:	f7fe ff58 	bl	800d2d8 <_ZN5ModelC1Ev>
 800e428:	687b      	ldr	r3, [r7, #4]
 800e42a:	f503 7096 	add.w	r0, r3, #300	; 0x12c
 800e42e:	687b      	ldr	r3, [r7, #4]
 800e430:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800e434:	687a      	ldr	r2, [r7, #4]
 800e436:	4619      	mov	r1, r3
 800e438:	f7fe ff38 	bl	800d2ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800e43c:	687a      	ldr	r2, [r7, #4]
 800e43e:	687b      	ldr	r3, [r7, #4]
 800e440:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800e444:	4619      	mov	r1, r3
 800e446:	4610      	mov	r0, r2
 800e448:	f7ff ff0c 	bl	800e264 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800e44c:	687b      	ldr	r3, [r7, #4]
 800e44e:	4618      	mov	r0, r3
 800e450:	370c      	adds	r7, #12
 800e452:	46bd      	mov	sp, r7
 800e454:	bd90      	pop	{r4, r7, pc}
 800e456:	bf00      	nop
 800e458:	0802505c 	.word	0x0802505c

0800e45c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800e45c:	b580      	push	{r7, lr}
 800e45e:	b086      	sub	sp, #24
 800e460:	af02      	add	r7, sp, #8
 800e462:	60f8      	str	r0, [r7, #12]
 800e464:	60b9      	str	r1, [r7, #8]
 800e466:	607a      	str	r2, [r7, #4]
 800e468:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800e46a:	68f8      	ldr	r0, [r7, #12]
 800e46c:	8bbb      	ldrh	r3, [r7, #28]
 800e46e:	9301      	str	r3, [sp, #4]
 800e470:	8b3b      	ldrh	r3, [r7, #24]
 800e472:	9300      	str	r3, [sp, #0]
 800e474:	683b      	ldr	r3, [r7, #0]
 800e476:	687a      	ldr	r2, [r7, #4]
 800e478:	68b9      	ldr	r1, [r7, #8]
 800e47a:	f7ff fe33 	bl	800e0e4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800e47e:	4a04      	ldr	r2, [pc, #16]	; (800e490 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800e480:	68fb      	ldr	r3, [r7, #12]
 800e482:	601a      	str	r2, [r3, #0]
    }
 800e484:	68fb      	ldr	r3, [r7, #12]
 800e486:	4618      	mov	r0, r3
 800e488:	3710      	adds	r7, #16
 800e48a:	46bd      	mov	sp, r7
 800e48c:	bd80      	pop	{r7, pc}
 800e48e:	bf00      	nop
 800e490:	0802515c 	.word	0x0802515c

0800e494 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800e494:	b580      	push	{r7, lr}
 800e496:	b086      	sub	sp, #24
 800e498:	af02      	add	r7, sp, #8
 800e49a:	60f8      	str	r0, [r7, #12]
 800e49c:	60b9      	str	r1, [r7, #8]
 800e49e:	607a      	str	r2, [r7, #4]
 800e4a0:	603b      	str	r3, [r7, #0]
 800e4a2:	68f8      	ldr	r0, [r7, #12]
 800e4a4:	8bbb      	ldrh	r3, [r7, #28]
 800e4a6:	9301      	str	r3, [sp, #4]
 800e4a8:	8b3b      	ldrh	r3, [r7, #24]
 800e4aa:	9300      	str	r3, [sp, #0]
 800e4ac:	683b      	ldr	r3, [r7, #0]
 800e4ae:	687a      	ldr	r2, [r7, #4]
 800e4b0:	68b9      	ldr	r1, [r7, #8]
 800e4b2:	f7ff ffd3 	bl	800e45c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800e4b6:	4a04      	ldr	r2, [pc, #16]	; (800e4c8 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800e4b8:	68fb      	ldr	r3, [r7, #12]
 800e4ba:	601a      	str	r2, [r3, #0]
    }
 800e4bc:	68fb      	ldr	r3, [r7, #12]
 800e4be:	4618      	mov	r0, r3
 800e4c0:	3710      	adds	r7, #16
 800e4c2:	46bd      	mov	sp, r7
 800e4c4:	bd80      	pop	{r7, pc}
 800e4c6:	bf00      	nop
 800e4c8:	08024f10 	.word	0x08024f10

0800e4cc <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800e4cc:	b480      	push	{r7}
 800e4ce:	b083      	sub	sp, #12
 800e4d0:	af00      	add	r7, sp, #0
 800e4d2:	6078      	str	r0, [r7, #4]
 800e4d4:	4a04      	ldr	r2, [pc, #16]	; (800e4e8 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800e4d6:	687b      	ldr	r3, [r7, #4]
 800e4d8:	601a      	str	r2, [r3, #0]
 800e4da:	687b      	ldr	r3, [r7, #4]
 800e4dc:	4618      	mov	r0, r3
 800e4de:	370c      	adds	r7, #12
 800e4e0:	46bd      	mov	sp, r7
 800e4e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4e6:	4770      	bx	lr
 800e4e8:	08024ef8 	.word	0x08024ef8

0800e4ec <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800e4ec:	b580      	push	{r7, lr}
 800e4ee:	b082      	sub	sp, #8
 800e4f0:	af00      	add	r7, sp, #0
 800e4f2:	6078      	str	r0, [r7, #4]
 800e4f4:	687b      	ldr	r3, [r7, #4]
 800e4f6:	4618      	mov	r0, r3
 800e4f8:	f7ff ffe8 	bl	800e4cc <_ZN8touchgfx15TouchControllerC1Ev>
 800e4fc:	4a03      	ldr	r2, [pc, #12]	; (800e50c <_ZN20STM32TouchControllerC1Ev+0x20>)
 800e4fe:	687b      	ldr	r3, [r7, #4]
 800e500:	601a      	str	r2, [r3, #0]
 800e502:	687b      	ldr	r3, [r7, #4]
 800e504:	4618      	mov	r0, r3
 800e506:	3708      	adds	r7, #8
 800e508:	46bd      	mov	sp, r7
 800e50a:	bd80      	pop	{r7, pc}
 800e50c:	08024ee0 	.word	0x08024ee0

0800e510 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 800e510:	b590      	push	{r4, r7, lr}
 800e512:	b085      	sub	sp, #20
 800e514:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800e516:	f7fe fc99 	bl	800ce4c <_ZN14BitmapDatabase11getInstanceEv>
 800e51a:	4604      	mov	r4, r0
 800e51c:	f7fe fca0 	bl	800ce60 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800e520:	4603      	mov	r3, r0
 800e522:	4619      	mov	r1, r3
 800e524:	2300      	movs	r3, #0
 800e526:	9300      	str	r3, [sp, #0]
 800e528:	2300      	movs	r3, #0
 800e52a:	2200      	movs	r2, #0
 800e52c:	4620      	mov	r0, r4
 800e52e:	f006 fe53 	bl	80151d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800e532:	4809      	ldr	r0, [pc, #36]	; (800e558 <touchgfx_init+0x48>)
 800e534:	f7ff fd30 	bl	800df98 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800e538:	2000      	movs	r0, #0
 800e53a:	f7fe fdd5 	bl	800d0e8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800e53e:	4807      	ldr	r0, [pc, #28]	; (800e55c <touchgfx_init+0x4c>)
 800e540:	f006 fdb2 	bl	80150a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800e544:	f7ff febe 	bl	800e2c4 <_ZN12FrontendHeap11getInstanceEv>
 800e548:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800e54a:	4805      	ldr	r0, [pc, #20]	; (800e560 <touchgfx_init+0x50>)
 800e54c:	f7ff fa54 	bl	800d9f8 <_ZN11TouchGFXHAL10initializeEv>
}
 800e550:	bf00      	nop
 800e552:	370c      	adds	r7, #12
 800e554:	46bd      	mov	sp, r7
 800e556:	bd90      	pop	{r4, r7, pc}
 800e558:	240007a4 	.word	0x240007a4
 800e55c:	24000014 	.word	0x24000014
 800e560:	240007a8 	.word	0x240007a8

0800e564 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800e564:	b480      	push	{r7}
 800e566:	af00      	add	r7, sp, #0
}
 800e568:	bf00      	nop
 800e56a:	46bd      	mov	sp, r7
 800e56c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e570:	4770      	bx	lr
	...

0800e574 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800e574:	b580      	push	{r7, lr}
 800e576:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 800e578:	f7ff fba6 	bl	800dcc8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800e57c:	4603      	mov	r3, r0
 800e57e:	2b00      	cmp	r3, #0
 800e580:	d002      	beq.n	800e588 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 800e582:	4802      	ldr	r0, [pc, #8]	; (800e58c <touchgfx_taskEntry+0x18>)
 800e584:	f7ff f91e 	bl	800d7c4 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 800e588:	bf00      	nop
 800e58a:	bd80      	pop	{r7, pc}
 800e58c:	240007a8 	.word	0x240007a8

0800e590 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800e590:	b580      	push	{r7, lr}
 800e592:	b082      	sub	sp, #8
 800e594:	af00      	add	r7, sp, #0
 800e596:	6078      	str	r0, [r7, #4]
 800e598:	4a10      	ldr	r2, [pc, #64]	; (800e5dc <_ZN12FrontendHeapD1Ev+0x4c>)
 800e59a:	687b      	ldr	r3, [r7, #4]
 800e59c:	601a      	str	r2, [r3, #0]
 800e59e:	687b      	ldr	r3, [r7, #4]
 800e5a0:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800e5a4:	4618      	mov	r0, r3
 800e5a6:	f7fe fe4b 	bl	800d240 <_ZN19FrontendApplicationD1Ev>
 800e5aa:	687b      	ldr	r3, [r7, #4]
 800e5ac:	f503 738a 	add.w	r3, r3, #276	; 0x114
 800e5b0:	4618      	mov	r0, r3
 800e5b2:	f000 f827 	bl	800e604 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e5b6:	687b      	ldr	r3, [r7, #4]
 800e5b8:	332c      	adds	r3, #44	; 0x2c
 800e5ba:	4618      	mov	r0, r3
 800e5bc:	f000 f844 	bl	800e648 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e5c0:	687b      	ldr	r3, [r7, #4]
 800e5c2:	3314      	adds	r3, #20
 800e5c4:	4618      	mov	r0, r3
 800e5c6:	f000 f861 	bl	800e68c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e5ca:	687b      	ldr	r3, [r7, #4]
 800e5cc:	4618      	mov	r0, r3
 800e5ce:	f7ff fea5 	bl	800e31c <_ZN16FrontendHeapBaseD1Ev>
 800e5d2:	687b      	ldr	r3, [r7, #4]
 800e5d4:	4618      	mov	r0, r3
 800e5d6:	3708      	adds	r7, #8
 800e5d8:	46bd      	mov	sp, r7
 800e5da:	bd80      	pop	{r7, pc}
 800e5dc:	0802505c 	.word	0x0802505c

0800e5e0 <_ZN12FrontendHeapD0Ev>:
 800e5e0:	b580      	push	{r7, lr}
 800e5e2:	b082      	sub	sp, #8
 800e5e4:	af00      	add	r7, sp, #0
 800e5e6:	6078      	str	r0, [r7, #4]
 800e5e8:	6878      	ldr	r0, [r7, #4]
 800e5ea:	f7ff ffd1 	bl	800e590 <_ZN12FrontendHeapD1Ev>
 800e5ee:	f44f 7122 	mov.w	r1, #648	; 0x288
 800e5f2:	6878      	ldr	r0, [r7, #4]
 800e5f4:	f014 fa4b 	bl	8022a8e <_ZdlPvj>
 800e5f8:	687b      	ldr	r3, [r7, #4]
 800e5fa:	4618      	mov	r0, r3
 800e5fc:	3708      	adds	r7, #8
 800e5fe:	46bd      	mov	sp, r7
 800e600:	bd80      	pop	{r7, pc}
	...

0800e604 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800e604:	b580      	push	{r7, lr}
 800e606:	b082      	sub	sp, #8
 800e608:	af00      	add	r7, sp, #0
 800e60a:	6078      	str	r0, [r7, #4]
 800e60c:	4a05      	ldr	r2, [pc, #20]	; (800e624 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800e60e:	687b      	ldr	r3, [r7, #4]
 800e610:	601a      	str	r2, [r3, #0]
 800e612:	687b      	ldr	r3, [r7, #4]
 800e614:	4618      	mov	r0, r3
 800e616:	f000 fea4 	bl	800f362 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800e61a:	687b      	ldr	r3, [r7, #4]
 800e61c:	4618      	mov	r0, r3
 800e61e:	3708      	adds	r7, #8
 800e620:	46bd      	mov	sp, r7
 800e622:	bd80      	pop	{r7, pc}
 800e624:	08025070 	.word	0x08025070

0800e628 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800e628:	b580      	push	{r7, lr}
 800e62a:	b082      	sub	sp, #8
 800e62c:	af00      	add	r7, sp, #0
 800e62e:	6078      	str	r0, [r7, #4]
 800e630:	6878      	ldr	r0, [r7, #4]
 800e632:	f7ff ffe7 	bl	800e604 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e636:	2114      	movs	r1, #20
 800e638:	6878      	ldr	r0, [r7, #4]
 800e63a:	f014 fa28 	bl	8022a8e <_ZdlPvj>
 800e63e:	687b      	ldr	r3, [r7, #4]
 800e640:	4618      	mov	r0, r3
 800e642:	3708      	adds	r7, #8
 800e644:	46bd      	mov	sp, r7
 800e646:	bd80      	pop	{r7, pc}

0800e648 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800e648:	b580      	push	{r7, lr}
 800e64a:	b082      	sub	sp, #8
 800e64c:	af00      	add	r7, sp, #0
 800e64e:	6078      	str	r0, [r7, #4]
 800e650:	4a05      	ldr	r2, [pc, #20]	; (800e668 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800e652:	687b      	ldr	r3, [r7, #4]
 800e654:	601a      	str	r2, [r3, #0]
 800e656:	687b      	ldr	r3, [r7, #4]
 800e658:	4618      	mov	r0, r3
 800e65a:	f000 fe82 	bl	800f362 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800e65e:	687b      	ldr	r3, [r7, #4]
 800e660:	4618      	mov	r0, r3
 800e662:	3708      	adds	r7, #8
 800e664:	46bd      	mov	sp, r7
 800e666:	bd80      	pop	{r7, pc}
 800e668:	080250a4 	.word	0x080250a4

0800e66c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800e66c:	b580      	push	{r7, lr}
 800e66e:	b082      	sub	sp, #8
 800e670:	af00      	add	r7, sp, #0
 800e672:	6078      	str	r0, [r7, #4]
 800e674:	6878      	ldr	r0, [r7, #4]
 800e676:	f7ff ffe7 	bl	800e648 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e67a:	21e8      	movs	r1, #232	; 0xe8
 800e67c:	6878      	ldr	r0, [r7, #4]
 800e67e:	f014 fa06 	bl	8022a8e <_ZdlPvj>
 800e682:	687b      	ldr	r3, [r7, #4]
 800e684:	4618      	mov	r0, r3
 800e686:	3708      	adds	r7, #8
 800e688:	46bd      	mov	sp, r7
 800e68a:	bd80      	pop	{r7, pc}

0800e68c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800e68c:	b580      	push	{r7, lr}
 800e68e:	b082      	sub	sp, #8
 800e690:	af00      	add	r7, sp, #0
 800e692:	6078      	str	r0, [r7, #4]
 800e694:	4a05      	ldr	r2, [pc, #20]	; (800e6ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800e696:	687b      	ldr	r3, [r7, #4]
 800e698:	601a      	str	r2, [r3, #0]
 800e69a:	687b      	ldr	r3, [r7, #4]
 800e69c:	4618      	mov	r0, r3
 800e69e:	f000 fe60 	bl	800f362 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800e6a2:	687b      	ldr	r3, [r7, #4]
 800e6a4:	4618      	mov	r0, r3
 800e6a6:	3708      	adds	r7, #8
 800e6a8:	46bd      	mov	sp, r7
 800e6aa:	bd80      	pop	{r7, pc}
 800e6ac:	080250d8 	.word	0x080250d8

0800e6b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800e6b0:	b580      	push	{r7, lr}
 800e6b2:	b082      	sub	sp, #8
 800e6b4:	af00      	add	r7, sp, #0
 800e6b6:	6078      	str	r0, [r7, #4]
 800e6b8:	6878      	ldr	r0, [r7, #4]
 800e6ba:	f7ff ffe7 	bl	800e68c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800e6be:	2118      	movs	r1, #24
 800e6c0:	6878      	ldr	r0, [r7, #4]
 800e6c2:	f014 f9e4 	bl	8022a8e <_ZdlPvj>
 800e6c6:	687b      	ldr	r3, [r7, #4]
 800e6c8:	4618      	mov	r0, r3
 800e6ca:	3708      	adds	r7, #8
 800e6cc:	46bd      	mov	sp, r7
 800e6ce:	bd80      	pop	{r7, pc}

0800e6d0 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800e6d0:	b580      	push	{r7, lr}
 800e6d2:	b082      	sub	sp, #8
 800e6d4:	af00      	add	r7, sp, #0
 800e6d6:	6078      	str	r0, [r7, #4]
 800e6d8:	4a05      	ldr	r2, [pc, #20]	; (800e6f0 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800e6da:	687b      	ldr	r3, [r7, #4]
 800e6dc:	601a      	str	r2, [r3, #0]
 800e6de:	687b      	ldr	r3, [r7, #4]
 800e6e0:	4618      	mov	r0, r3
 800e6e2:	f7ff fca9 	bl	800e038 <_ZN8touchgfx3LCDD1Ev>
 800e6e6:	687b      	ldr	r3, [r7, #4]
 800e6e8:	4618      	mov	r0, r3
 800e6ea:	3708      	adds	r7, #8
 800e6ec:	46bd      	mov	sp, r7
 800e6ee:	bd80      	pop	{r7, pc}
 800e6f0:	080259dc 	.word	0x080259dc

0800e6f4 <_ZN8touchgfx8LCD16bppD0Ev>:
 800e6f4:	b580      	push	{r7, lr}
 800e6f6:	b082      	sub	sp, #8
 800e6f8:	af00      	add	r7, sp, #0
 800e6fa:	6078      	str	r0, [r7, #4]
 800e6fc:	6878      	ldr	r0, [r7, #4]
 800e6fe:	f7ff ffe7 	bl	800e6d0 <_ZN8touchgfx8LCD16bppD1Ev>
 800e702:	2184      	movs	r1, #132	; 0x84
 800e704:	6878      	ldr	r0, [r7, #4]
 800e706:	f014 f9c2 	bl	8022a8e <_ZdlPvj>
 800e70a:	687b      	ldr	r3, [r7, #4]
 800e70c:	4618      	mov	r0, r3
 800e70e:	3708      	adds	r7, #8
 800e710:	46bd      	mov	sp, r7
 800e712:	bd80      	pop	{r7, pc}

0800e714 <_Z41__static_initialization_and_destruction_0ii>:
 800e714:	b580      	push	{r7, lr}
 800e716:	b084      	sub	sp, #16
 800e718:	af02      	add	r7, sp, #8
 800e71a:	6078      	str	r0, [r7, #4]
 800e71c:	6039      	str	r1, [r7, #0]
 800e71e:	687b      	ldr	r3, [r7, #4]
 800e720:	2b01      	cmp	r3, #1
 800e722:	d118      	bne.n	800e756 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800e724:	683b      	ldr	r3, [r7, #0]
 800e726:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e72a:	4293      	cmp	r3, r2
 800e72c:	d113      	bne.n	800e756 <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800e72e:	4817      	ldr	r0, [pc, #92]	; (800e78c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800e730:	f7ff fedc 	bl	800e4ec <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800e734:	4816      	ldr	r0, [pc, #88]	; (800e790 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800e736:	f7ff fb91 	bl	800de5c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800e73a:	4816      	ldr	r0, [pc, #88]	; (800e794 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800e73c:	f00b f81e 	bl	801977c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 800e740:	23f0      	movs	r3, #240	; 0xf0
 800e742:	9301      	str	r3, [sp, #4]
 800e744:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800e748:	9300      	str	r3, [sp, #0]
 800e74a:	4b10      	ldr	r3, [pc, #64]	; (800e78c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800e74c:	4a11      	ldr	r2, [pc, #68]	; (800e794 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800e74e:	4910      	ldr	r1, [pc, #64]	; (800e790 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800e750:	4811      	ldr	r0, [pc, #68]	; (800e798 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800e752:	f7ff fe9f 	bl	800e494 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800e756:	687b      	ldr	r3, [r7, #4]
 800e758:	2b00      	cmp	r3, #0
 800e75a:	d113      	bne.n	800e784 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800e75c:	683b      	ldr	r3, [r7, #0]
 800e75e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e762:	4293      	cmp	r3, r2
 800e764:	d10e      	bne.n	800e784 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800e766:	480c      	ldr	r0, [pc, #48]	; (800e798 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800e768:	f7ff f9d6 	bl	800db18 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800e76c:	480b      	ldr	r0, [pc, #44]	; (800e79c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800e76e:	f7fc fe31 	bl	800b3d4 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800e772:	4808      	ldr	r0, [pc, #32]	; (800e794 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800e774:	f7ff ffac 	bl	800e6d0 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800e778:	4805      	ldr	r0, [pc, #20]	; (800e790 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800e77a:	f7ff fbc3 	bl	800df04 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800e77e:	4803      	ldr	r0, [pc, #12]	; (800e78c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800e780:	f7fe ff26 	bl	800d5d0 <_ZN20STM32TouchControllerD1Ev>
}
 800e784:	bf00      	nop
 800e786:	3708      	adds	r7, #8
 800e788:	46bd      	mov	sp, r7
 800e78a:	bd80      	pop	{r7, pc}
 800e78c:	240006d8 	.word	0x240006d8
 800e790:	240006dc 	.word	0x240006dc
 800e794:	24000720 	.word	0x24000720
 800e798:	240007a8 	.word	0x240007a8
 800e79c:	24000014 	.word	0x24000014

0800e7a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800e7a0:	b480      	push	{r7}
 800e7a2:	b083      	sub	sp, #12
 800e7a4:	af00      	add	r7, sp, #0
 800e7a6:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800e7a8:	2301      	movs	r3, #1
    }
 800e7aa:	4618      	mov	r0, r3
 800e7ac:	370c      	adds	r7, #12
 800e7ae:	46bd      	mov	sp, r7
 800e7b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7b4:	4770      	bx	lr

0800e7b6 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800e7b6:	b480      	push	{r7}
 800e7b8:	b083      	sub	sp, #12
 800e7ba:	af00      	add	r7, sp, #0
 800e7bc:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800e7be:	230c      	movs	r3, #12
    }
 800e7c0:	4618      	mov	r0, r3
 800e7c2:	370c      	adds	r7, #12
 800e7c4:	46bd      	mov	sp, r7
 800e7c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7ca:	4770      	bx	lr

0800e7cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800e7cc:	b480      	push	{r7}
 800e7ce:	b083      	sub	sp, #12
 800e7d0:	af00      	add	r7, sp, #0
 800e7d2:	6078      	str	r0, [r7, #4]
 800e7d4:	460b      	mov	r3, r1
 800e7d6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800e7d8:	887a      	ldrh	r2, [r7, #2]
 800e7da:	4613      	mov	r3, r2
 800e7dc:	005b      	lsls	r3, r3, #1
 800e7de:	4413      	add	r3, r2
 800e7e0:	009b      	lsls	r3, r3, #2
 800e7e2:	3308      	adds	r3, #8
 800e7e4:	687a      	ldr	r2, [r7, #4]
 800e7e6:	4413      	add	r3, r2
    }
 800e7e8:	4618      	mov	r0, r3
 800e7ea:	370c      	adds	r7, #12
 800e7ec:	46bd      	mov	sp, r7
 800e7ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7f2:	4770      	bx	lr

0800e7f4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800e7f4:	b480      	push	{r7}
 800e7f6:	b083      	sub	sp, #12
 800e7f8:	af00      	add	r7, sp, #0
 800e7fa:	6078      	str	r0, [r7, #4]
 800e7fc:	460b      	mov	r3, r1
 800e7fe:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800e800:	887a      	ldrh	r2, [r7, #2]
 800e802:	4613      	mov	r3, r2
 800e804:	005b      	lsls	r3, r3, #1
 800e806:	4413      	add	r3, r2
 800e808:	009b      	lsls	r3, r3, #2
 800e80a:	3308      	adds	r3, #8
 800e80c:	687a      	ldr	r2, [r7, #4]
 800e80e:	4413      	add	r3, r2
    }
 800e810:	4618      	mov	r0, r3
 800e812:	370c      	adds	r7, #12
 800e814:	46bd      	mov	sp, r7
 800e816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e81a:	4770      	bx	lr

0800e81c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800e81c:	b480      	push	{r7}
 800e81e:	b083      	sub	sp, #12
 800e820:	af00      	add	r7, sp, #0
 800e822:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800e824:	2301      	movs	r3, #1
    }
 800e826:	4618      	mov	r0, r3
 800e828:	370c      	adds	r7, #12
 800e82a:	46bd      	mov	sp, r7
 800e82c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e830:	4770      	bx	lr

0800e832 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800e832:	b480      	push	{r7}
 800e834:	b083      	sub	sp, #12
 800e836:	af00      	add	r7, sp, #0
 800e838:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800e83a:	23e0      	movs	r3, #224	; 0xe0
    }
 800e83c:	4618      	mov	r0, r3
 800e83e:	370c      	adds	r7, #12
 800e840:	46bd      	mov	sp, r7
 800e842:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e846:	4770      	bx	lr

0800e848 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800e848:	b480      	push	{r7}
 800e84a:	b083      	sub	sp, #12
 800e84c:	af00      	add	r7, sp, #0
 800e84e:	6078      	str	r0, [r7, #4]
 800e850:	460b      	mov	r3, r1
 800e852:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800e854:	887a      	ldrh	r2, [r7, #2]
 800e856:	4613      	mov	r3, r2
 800e858:	00db      	lsls	r3, r3, #3
 800e85a:	1a9b      	subs	r3, r3, r2
 800e85c:	015b      	lsls	r3, r3, #5
 800e85e:	3308      	adds	r3, #8
 800e860:	687a      	ldr	r2, [r7, #4]
 800e862:	4413      	add	r3, r2
    }
 800e864:	4618      	mov	r0, r3
 800e866:	370c      	adds	r7, #12
 800e868:	46bd      	mov	sp, r7
 800e86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e86e:	4770      	bx	lr

0800e870 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800e870:	b480      	push	{r7}
 800e872:	b083      	sub	sp, #12
 800e874:	af00      	add	r7, sp, #0
 800e876:	6078      	str	r0, [r7, #4]
 800e878:	460b      	mov	r3, r1
 800e87a:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800e87c:	887a      	ldrh	r2, [r7, #2]
 800e87e:	4613      	mov	r3, r2
 800e880:	00db      	lsls	r3, r3, #3
 800e882:	1a9b      	subs	r3, r3, r2
 800e884:	015b      	lsls	r3, r3, #5
 800e886:	3308      	adds	r3, #8
 800e888:	687a      	ldr	r2, [r7, #4]
 800e88a:	4413      	add	r3, r2
    }
 800e88c:	4618      	mov	r0, r3
 800e88e:	370c      	adds	r7, #12
 800e890:	46bd      	mov	sp, r7
 800e892:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e896:	4770      	bx	lr

0800e898 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800e898:	b480      	push	{r7}
 800e89a:	b083      	sub	sp, #12
 800e89c:	af00      	add	r7, sp, #0
 800e89e:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800e8a0:	2301      	movs	r3, #1
    }
 800e8a2:	4618      	mov	r0, r3
 800e8a4:	370c      	adds	r7, #12
 800e8a6:	46bd      	mov	sp, r7
 800e8a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8ac:	4770      	bx	lr

0800e8ae <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800e8ae:	b480      	push	{r7}
 800e8b0:	b083      	sub	sp, #12
 800e8b2:	af00      	add	r7, sp, #0
 800e8b4:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800e8b6:	2310      	movs	r3, #16
    }
 800e8b8:	4618      	mov	r0, r3
 800e8ba:	370c      	adds	r7, #12
 800e8bc:	46bd      	mov	sp, r7
 800e8be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8c2:	4770      	bx	lr

0800e8c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800e8c4:	b480      	push	{r7}
 800e8c6:	b083      	sub	sp, #12
 800e8c8:	af00      	add	r7, sp, #0
 800e8ca:	6078      	str	r0, [r7, #4]
 800e8cc:	460b      	mov	r3, r1
 800e8ce:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800e8d0:	887b      	ldrh	r3, [r7, #2]
 800e8d2:	011b      	lsls	r3, r3, #4
 800e8d4:	3308      	adds	r3, #8
 800e8d6:	687a      	ldr	r2, [r7, #4]
 800e8d8:	4413      	add	r3, r2
    }
 800e8da:	4618      	mov	r0, r3
 800e8dc:	370c      	adds	r7, #12
 800e8de:	46bd      	mov	sp, r7
 800e8e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8e4:	4770      	bx	lr

0800e8e6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800e8e6:	b480      	push	{r7}
 800e8e8:	b083      	sub	sp, #12
 800e8ea:	af00      	add	r7, sp, #0
 800e8ec:	6078      	str	r0, [r7, #4]
 800e8ee:	460b      	mov	r3, r1
 800e8f0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800e8f2:	887b      	ldrh	r3, [r7, #2]
 800e8f4:	011b      	lsls	r3, r3, #4
 800e8f6:	3308      	adds	r3, #8
 800e8f8:	687a      	ldr	r2, [r7, #4]
 800e8fa:	4413      	add	r3, r2
    }
 800e8fc:	4618      	mov	r0, r3
 800e8fe:	370c      	adds	r7, #12
 800e900:	46bd      	mov	sp, r7
 800e902:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e906:	4770      	bx	lr

0800e908 <_GLOBAL__sub_I_touchgfx_init>:
 800e908:	b580      	push	{r7, lr}
 800e90a:	af00      	add	r7, sp, #0
 800e90c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e910:	2001      	movs	r0, #1
 800e912:	f7ff feff 	bl	800e714 <_Z41__static_initialization_and_destruction_0ii>
 800e916:	bd80      	pop	{r7, pc}

0800e918 <_GLOBAL__sub_D_touchgfx_init>:
 800e918:	b580      	push	{r7, lr}
 800e91a:	af00      	add	r7, sp, #0
 800e91c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e920:	2000      	movs	r0, #0
 800e922:	f7ff fef7 	bl	800e714 <_Z41__static_initialization_and_destruction_0ii>
 800e926:	bd80      	pop	{r7, pc}

0800e928 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800e928:	b480      	push	{r7}
 800e92a:	b083      	sub	sp, #12
 800e92c:	af00      	add	r7, sp, #0
 800e92e:	6078      	str	r0, [r7, #4]
    {
 800e930:	4a04      	ldr	r2, [pc, #16]	; (800e944 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800e932:	687b      	ldr	r3, [r7, #4]
 800e934:	601a      	str	r2, [r3, #0]
    }
 800e936:	687b      	ldr	r3, [r7, #4]
 800e938:	4618      	mov	r0, r3
 800e93a:	370c      	adds	r7, #12
 800e93c:	46bd      	mov	sp, r7
 800e93e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e942:	4770      	bx	lr
 800e944:	08025234 	.word	0x08025234

0800e948 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800e948:	b580      	push	{r7, lr}
 800e94a:	b082      	sub	sp, #8
 800e94c:	af00      	add	r7, sp, #0
 800e94e:	6078      	str	r0, [r7, #4]
    }
 800e950:	6878      	ldr	r0, [r7, #4]
 800e952:	f7ff ffe9 	bl	800e928 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800e956:	2104      	movs	r1, #4
 800e958:	6878      	ldr	r0, [r7, #4]
 800e95a:	f014 f898 	bl	8022a8e <_ZdlPvj>
 800e95e:	687b      	ldr	r3, [r7, #4]
 800e960:	4618      	mov	r0, r3
 800e962:	3708      	adds	r7, #8
 800e964:	46bd      	mov	sp, r7
 800e966:	bd80      	pop	{r7, pc}

0800e968 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800e968:	b480      	push	{r7}
 800e96a:	b083      	sub	sp, #12
 800e96c:	af00      	add	r7, sp, #0
 800e96e:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800e970:	687b      	ldr	r3, [r7, #4]
 800e972:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 800e976:	3301      	adds	r3, #1
 800e978:	b2da      	uxtb	r2, r3
 800e97a:	687b      	ldr	r3, [r7, #4]
 800e97c:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 800e980:	bf00      	nop
 800e982:	370c      	adds	r7, #12
 800e984:	46bd      	mov	sp, r7
 800e986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e98a:	4770      	bx	lr

0800e98c <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800e98c:	b480      	push	{r7}
 800e98e:	b083      	sub	sp, #12
 800e990:	af00      	add	r7, sp, #0
 800e992:	6078      	str	r0, [r7, #4]
 800e994:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 800e996:	687b      	ldr	r3, [r7, #4]
 800e998:	683a      	ldr	r2, [r7, #0]
 800e99a:	619a      	str	r2, [r3, #24]
    }
 800e99c:	bf00      	nop
 800e99e:	370c      	adds	r7, #12
 800e9a0:	46bd      	mov	sp, r7
 800e9a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9a6:	4770      	bx	lr

0800e9a8 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 800e9a8:	b480      	push	{r7}
 800e9aa:	b083      	sub	sp, #12
 800e9ac:	af00      	add	r7, sp, #0
 800e9ae:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 800e9b0:	687b      	ldr	r3, [r7, #4]
 800e9b2:	699b      	ldr	r3, [r3, #24]
    }
 800e9b4:	4618      	mov	r0, r3
 800e9b6:	370c      	adds	r7, #12
 800e9b8:	46bd      	mov	sp, r7
 800e9ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9be:	4770      	bx	lr

0800e9c0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800e9c0:	b580      	push	{r7, lr}
 800e9c2:	b082      	sub	sp, #8
 800e9c4:	af00      	add	r7, sp, #0
 800e9c6:	6078      	str	r0, [r7, #4]
 800e9c8:	460b      	mov	r3, r1
 800e9ca:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800e9cc:	78fb      	ldrb	r3, [r7, #3]
 800e9ce:	2b00      	cmp	r3, #0
 800e9d0:	d002      	beq.n	800e9d8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800e9d2:	78fb      	ldrb	r3, [r7, #3]
 800e9d4:	2b02      	cmp	r3, #2
 800e9d6:	d105      	bne.n	800e9e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800e9d8:	687b      	ldr	r3, [r7, #4]
 800e9da:	78fa      	ldrb	r2, [r7, #3]
 800e9dc:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800e9e0:	2301      	movs	r3, #1
 800e9e2:	e027      	b.n	800ea34 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800e9e4:	78fb      	ldrb	r3, [r7, #3]
 800e9e6:	2b01      	cmp	r3, #1
 800e9e8:	d123      	bne.n	800ea32 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800e9ea:	687b      	ldr	r3, [r7, #4]
 800e9ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e9ee:	2b00      	cmp	r3, #0
 800e9f0:	d014      	beq.n	800ea1c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800e9f2:	687b      	ldr	r3, [r7, #4]
 800e9f4:	681b      	ldr	r3, [r3, #0]
 800e9f6:	339c      	adds	r3, #156	; 0x9c
 800e9f8:	681b      	ldr	r3, [r3, #0]
 800e9fa:	6878      	ldr	r0, [r7, #4]
 800e9fc:	4798      	blx	r3
 800e9fe:	4603      	mov	r3, r0
 800ea00:	461a      	mov	r2, r3
 800ea02:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ea06:	429a      	cmp	r2, r3
 800ea08:	d008      	beq.n	800ea1c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ea0a:	4b0c      	ldr	r3, [pc, #48]	; (800ea3c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800ea0c:	781b      	ldrb	r3, [r3, #0]
 800ea0e:	f083 0301 	eor.w	r3, r3, #1
 800ea12:	b2db      	uxtb	r3, r3
 800ea14:	2b00      	cmp	r3, #0
 800ea16:	d001      	beq.n	800ea1c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ea18:	2301      	movs	r3, #1
 800ea1a:	e000      	b.n	800ea1e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800ea1c:	2300      	movs	r3, #0
 800ea1e:	2b00      	cmp	r3, #0
 800ea20:	d005      	beq.n	800ea2e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800ea22:	687b      	ldr	r3, [r7, #4]
 800ea24:	78fa      	ldrb	r2, [r7, #3]
 800ea26:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800ea2a:	2301      	movs	r3, #1
 800ea2c:	e002      	b.n	800ea34 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800ea2e:	2300      	movs	r3, #0
 800ea30:	e000      	b.n	800ea34 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800ea32:	2300      	movs	r3, #0
    }
 800ea34:	4618      	mov	r0, r3
 800ea36:	3708      	adds	r7, #8
 800ea38:	46bd      	mov	sp, r7
 800ea3a:	bd80      	pop	{r7, pc}
 800ea3c:	24001ed6 	.word	0x24001ed6

0800ea40 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800ea40:	b5b0      	push	{r4, r5, r7, lr}
 800ea42:	b082      	sub	sp, #8
 800ea44:	af00      	add	r7, sp, #0
 800ea46:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800ea48:	687b      	ldr	r3, [r7, #4]
 800ea4a:	4618      	mov	r0, r3
 800ea4c:	f000 ff81 	bl	800f952 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800ea50:	687d      	ldr	r5, [r7, #4]
 800ea52:	687b      	ldr	r3, [r7, #4]
 800ea54:	681b      	ldr	r3, [r3, #0]
 800ea56:	3364      	adds	r3, #100	; 0x64
 800ea58:	681c      	ldr	r4, [r3, #0]
 800ea5a:	f003 fef5 	bl	8012848 <_ZN8touchgfx11Application11getInstanceEv>
 800ea5e:	4603      	mov	r3, r0
 800ea60:	4619      	mov	r1, r3
 800ea62:	4628      	mov	r0, r5
 800ea64:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800ea66:	687b      	ldr	r3, [r7, #4]
 800ea68:	681b      	ldr	r3, [r3, #0]
 800ea6a:	3380      	adds	r3, #128	; 0x80
 800ea6c:	681b      	ldr	r3, [r3, #0]
 800ea6e:	6878      	ldr	r0, [r7, #4]
 800ea70:	4798      	blx	r3
    enableInterrupts();
 800ea72:	687b      	ldr	r3, [r7, #4]
 800ea74:	681b      	ldr	r3, [r3, #0]
 800ea76:	3378      	adds	r3, #120	; 0x78
 800ea78:	681b      	ldr	r3, [r3, #0]
 800ea7a:	6878      	ldr	r0, [r7, #4]
 800ea7c:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800ea7e:	687b      	ldr	r3, [r7, #4]
 800ea80:	4906      	ldr	r1, [pc, #24]	; (800ea9c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800ea82:	4618      	mov	r0, r3
 800ea84:	f7ff ff82 	bl	800e98c <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800ea88:	687b      	ldr	r3, [r7, #4]
 800ea8a:	2102      	movs	r1, #2
 800ea8c:	4618      	mov	r0, r3
 800ea8e:	f7ff ff97 	bl	800e9c0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800ea92:	bf00      	nop
 800ea94:	3708      	adds	r7, #8
 800ea96:	46bd      	mov	sp, r7
 800ea98:	bdb0      	pop	{r4, r5, r7, pc}
 800ea9a:	bf00      	nop
 800ea9c:	24000824 	.word	0x24000824

0800eaa0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800eaa0:	b480      	push	{r7}
 800eaa2:	b083      	sub	sp, #12
 800eaa4:	af00      	add	r7, sp, #0
 800eaa6:	6078      	str	r0, [r7, #4]
}
 800eaa8:	bf00      	nop
 800eaaa:	370c      	adds	r7, #12
 800eaac:	46bd      	mov	sp, r7
 800eaae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eab2:	4770      	bx	lr

0800eab4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800eab4:	b480      	push	{r7}
 800eab6:	b083      	sub	sp, #12
 800eab8:	af00      	add	r7, sp, #0
 800eaba:	6078      	str	r0, [r7, #4]
}
 800eabc:	bf00      	nop
 800eabe:	370c      	adds	r7, #12
 800eac0:	46bd      	mov	sp, r7
 800eac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eac6:	4770      	bx	lr

0800eac8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800eac8:	b480      	push	{r7}
 800eaca:	b083      	sub	sp, #12
 800eacc:	af00      	add	r7, sp, #0
 800eace:	6078      	str	r0, [r7, #4]
}
 800ead0:	bf00      	nop
 800ead2:	370c      	adds	r7, #12
 800ead4:	46bd      	mov	sp, r7
 800ead6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eada:	4770      	bx	lr

0800eadc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800eadc:	b480      	push	{r7}
 800eade:	b083      	sub	sp, #12
 800eae0:	af00      	add	r7, sp, #0
 800eae2:	6078      	str	r0, [r7, #4]
}
 800eae4:	bf00      	nop
 800eae6:	370c      	adds	r7, #12
 800eae8:	46bd      	mov	sp, r7
 800eaea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eaee:	4770      	bx	lr

0800eaf0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800eaf0:	b580      	push	{r7, lr}
 800eaf2:	b082      	sub	sp, #8
 800eaf4:	af00      	add	r7, sp, #0
 800eaf6:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800eaf8:	687b      	ldr	r3, [r7, #4]
 800eafa:	4618      	mov	r0, r3
 800eafc:	f000 ff10 	bl	800f920 <_ZN8touchgfx3HAL10beginFrameEv>
 800eb00:	4603      	mov	r3, r0
}
 800eb02:	4618      	mov	r0, r3
 800eb04:	3708      	adds	r7, #8
 800eb06:	46bd      	mov	sp, r7
 800eb08:	bd80      	pop	{r7, pc}

0800eb0a <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800eb0a:	b580      	push	{r7, lr}
 800eb0c:	b082      	sub	sp, #8
 800eb0e:	af00      	add	r7, sp, #0
 800eb10:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800eb12:	bf00      	nop
 800eb14:	f7ff f822 	bl	800db5c <touchgfxDisplayDriverTransmitActive>
 800eb18:	4603      	mov	r3, r0
 800eb1a:	2b00      	cmp	r3, #0
 800eb1c:	bf14      	ite	ne
 800eb1e:	2301      	movne	r3, #1
 800eb20:	2300      	moveq	r3, #0
 800eb22:	b2db      	uxtb	r3, r3
 800eb24:	2b00      	cmp	r3, #0
 800eb26:	d1f5      	bne.n	800eb14 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800eb28:	687b      	ldr	r3, [r7, #4]
 800eb2a:	4618      	mov	r0, r3
 800eb2c:	f000 ff04 	bl	800f938 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800eb30:	f7ff f8be 	bl	800dcb0 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800eb34:	bf00      	nop
 800eb36:	3708      	adds	r7, #8
 800eb38:	46bd      	mov	sp, r7
 800eb3a:	bd80      	pop	{r7, pc}

0800eb3c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800eb3c:	b480      	push	{r7}
 800eb3e:	b083      	sub	sp, #12
 800eb40:	af00      	add	r7, sp, #0
 800eb42:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800eb44:	2300      	movs	r3, #0
}
 800eb46:	4618      	mov	r0, r3
 800eb48:	370c      	adds	r7, #12
 800eb4a:	46bd      	mov	sp, r7
 800eb4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb50:	4770      	bx	lr

0800eb52 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800eb52:	b480      	push	{r7}
 800eb54:	b083      	sub	sp, #12
 800eb56:	af00      	add	r7, sp, #0
 800eb58:	6078      	str	r0, [r7, #4]
 800eb5a:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800eb5c:	bf00      	nop
 800eb5e:	370c      	adds	r7, #12
 800eb60:	46bd      	mov	sp, r7
 800eb62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb66:	4770      	bx	lr

0800eb68 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800eb68:	b580      	push	{r7, lr}
 800eb6a:	b088      	sub	sp, #32
 800eb6c:	af02      	add	r7, sp, #8
 800eb6e:	6078      	str	r0, [r7, #4]
 800eb70:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800eb72:	687b      	ldr	r3, [r7, #4]
 800eb74:	6839      	ldr	r1, [r7, #0]
 800eb76:	4618      	mov	r0, r3
 800eb78:	f000 fe9c 	bl	800f8b4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800eb7c:	687b      	ldr	r3, [r7, #4]
 800eb7e:	699a      	ldr	r2, [r3, #24]
 800eb80:	687b      	ldr	r3, [r7, #4]
 800eb82:	699b      	ldr	r3, [r3, #24]
 800eb84:	681b      	ldr	r3, [r3, #0]
 800eb86:	3304      	adds	r3, #4
 800eb88:	681b      	ldr	r3, [r3, #0]
 800eb8a:	4610      	mov	r0, r2
 800eb8c:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800eb8e:	f7fe ffe5 	bl	800db5c <touchgfxDisplayDriverTransmitActive>
 800eb92:	4603      	mov	r3, r0
 800eb94:	2b00      	cmp	r3, #0
 800eb96:	bf0c      	ite	eq
 800eb98:	2301      	moveq	r3, #1
 800eb9a:	2300      	movne	r3, #0
 800eb9c:	b2db      	uxtb	r3, r3
 800eb9e:	2b00      	cmp	r3, #0
 800eba0:	d021      	beq.n	800ebe6 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800eba2:	f107 030c 	add.w	r3, r7, #12
 800eba6:	4618      	mov	r0, r3
 800eba8:	f7fd fc4b 	bl	800c442 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800ebac:	687b      	ldr	r3, [r7, #4]
 800ebae:	699a      	ldr	r2, [r3, #24]
 800ebb0:	687b      	ldr	r3, [r7, #4]
 800ebb2:	699b      	ldr	r3, [r3, #24]
 800ebb4:	681b      	ldr	r3, [r3, #0]
 800ebb6:	330c      	adds	r3, #12
 800ebb8:	681b      	ldr	r3, [r3, #0]
 800ebba:	f107 010c 	add.w	r1, r7, #12
 800ebbe:	4610      	mov	r0, r2
 800ebc0:	4798      	blx	r3
 800ebc2:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800ebc4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800ebc8:	b299      	uxth	r1, r3
 800ebca:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800ebce:	b29a      	uxth	r2, r3
 800ebd0:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800ebd4:	b298      	uxth	r0, r3
 800ebd6:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800ebda:	b29b      	uxth	r3, r3
 800ebdc:	9300      	str	r3, [sp, #0]
 800ebde:	4603      	mov	r3, r0
 800ebe0:	6978      	ldr	r0, [r7, #20]
 800ebe2:	f7fe ffc7 	bl	800db74 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800ebe6:	bf00      	nop
 800ebe8:	3718      	adds	r7, #24
 800ebea:	46bd      	mov	sp, r7
 800ebec:	bd80      	pop	{r7, pc}

0800ebee <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800ebee:	b580      	push	{r7, lr}
 800ebf0:	b084      	sub	sp, #16
 800ebf2:	af00      	add	r7, sp, #0
 800ebf4:	60f8      	str	r0, [r7, #12]
 800ebf6:	60b9      	str	r1, [r7, #8]
 800ebf8:	607a      	str	r2, [r7, #4]
 800ebfa:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800ebfc:	68f8      	ldr	r0, [r7, #12]
 800ebfe:	683b      	ldr	r3, [r7, #0]
 800ec00:	687a      	ldr	r2, [r7, #4]
 800ec02:	68b9      	ldr	r1, [r7, #8]
 800ec04:	f000 ffc7 	bl	800fb96 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800ec08:	4603      	mov	r3, r0
}
 800ec0a:	4618      	mov	r0, r3
 800ec0c:	3710      	adds	r7, #16
 800ec0e:	46bd      	mov	sp, r7
 800ec10:	bd80      	pop	{r7, pc}
	...

0800ec14 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 800ec14:	b480      	push	{r7}
 800ec16:	b087      	sub	sp, #28
 800ec18:	af00      	add	r7, sp, #0
 800ec1a:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800ec1c:	4b25      	ldr	r3, [pc, #148]	; (800ecb4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800ec1e:	695b      	ldr	r3, [r3, #20]
 800ec20:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800ec24:	2b00      	cmp	r3, #0
 800ec26:	bf14      	ite	ne
 800ec28:	2301      	movne	r3, #1
 800ec2a:	2300      	moveq	r3, #0
 800ec2c:	b2db      	uxtb	r3, r3
 800ec2e:	2b00      	cmp	r3, #0
 800ec30:	d03a      	beq.n	800eca8 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800ec32:	4b20      	ldr	r3, [pc, #128]	; (800ecb4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800ec34:	2200      	movs	r2, #0
 800ec36:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800ec3a:	f3bf 8f4f 	dsb	sy
}
 800ec3e:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800ec40:	4b1c      	ldr	r3, [pc, #112]	; (800ecb4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800ec42:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ec46:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800ec48:	697b      	ldr	r3, [r7, #20]
 800ec4a:	0b5b      	lsrs	r3, r3, #13
 800ec4c:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800ec50:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800ec52:	697b      	ldr	r3, [r7, #20]
 800ec54:	08db      	lsrs	r3, r3, #3
 800ec56:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800ec5a:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800ec5c:	693b      	ldr	r3, [r7, #16]
 800ec5e:	015a      	lsls	r2, r3, #5
 800ec60:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800ec64:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800ec66:	68fa      	ldr	r2, [r7, #12]
 800ec68:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800ec6a:	4912      	ldr	r1, [pc, #72]	; (800ecb4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800ec6c:	4313      	orrs	r3, r2
 800ec6e:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800ec72:	68fb      	ldr	r3, [r7, #12]
 800ec74:	1e5a      	subs	r2, r3, #1
 800ec76:	60fa      	str	r2, [r7, #12]
 800ec78:	2b00      	cmp	r3, #0
 800ec7a:	bf14      	ite	ne
 800ec7c:	2301      	movne	r3, #1
 800ec7e:	2300      	moveq	r3, #0
 800ec80:	b2db      	uxtb	r3, r3
 800ec82:	2b00      	cmp	r3, #0
 800ec84:	d1ea      	bne.n	800ec5c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x48>
    } while(sets-- != 0U);
 800ec86:	693b      	ldr	r3, [r7, #16]
 800ec88:	1e5a      	subs	r2, r3, #1
 800ec8a:	613a      	str	r2, [r7, #16]
 800ec8c:	2b00      	cmp	r3, #0
 800ec8e:	bf14      	ite	ne
 800ec90:	2301      	movne	r3, #1
 800ec92:	2300      	moveq	r3, #0
 800ec94:	b2db      	uxtb	r3, r3
 800ec96:	2b00      	cmp	r3, #0
 800ec98:	d1db      	bne.n	800ec52 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 800ec9a:	f3bf 8f4f 	dsb	sy
}
 800ec9e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800eca0:	f3bf 8f6f 	isb	sy
}
 800eca4:	bf00      	nop
}
 800eca6:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 800eca8:	bf00      	nop
 800ecaa:	371c      	adds	r7, #28
 800ecac:	46bd      	mov	sp, r7
 800ecae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecb2:	4770      	bx	lr
 800ecb4:	e000ed00 	.word	0xe000ed00

0800ecb8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 800ecb8:	b480      	push	{r7}
 800ecba:	b087      	sub	sp, #28
 800ecbc:	af00      	add	r7, sp, #0
 800ecbe:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800ecc0:	4b25      	ldr	r3, [pc, #148]	; (800ed58 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800ecc2:	695b      	ldr	r3, [r3, #20]
 800ecc4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800ecc8:	2b00      	cmp	r3, #0
 800ecca:	bf14      	ite	ne
 800eccc:	2301      	movne	r3, #1
 800ecce:	2300      	moveq	r3, #0
 800ecd0:	b2db      	uxtb	r3, r3
 800ecd2:	2b00      	cmp	r3, #0
 800ecd4:	d03a      	beq.n	800ed4c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800ecd6:	4b20      	ldr	r3, [pc, #128]	; (800ed58 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800ecd8:	2200      	movs	r2, #0
 800ecda:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800ecde:	f3bf 8f4f 	dsb	sy
}
 800ece2:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800ece4:	4b1c      	ldr	r3, [pc, #112]	; (800ed58 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800ece6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ecea:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800ecec:	697b      	ldr	r3, [r7, #20]
 800ecee:	0b5b      	lsrs	r3, r3, #13
 800ecf0:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800ecf4:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800ecf6:	697b      	ldr	r3, [r7, #20]
 800ecf8:	08db      	lsrs	r3, r3, #3
 800ecfa:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800ecfe:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800ed00:	693b      	ldr	r3, [r7, #16]
 800ed02:	015a      	lsls	r2, r3, #5
 800ed04:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800ed08:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800ed0a:	68fa      	ldr	r2, [r7, #12]
 800ed0c:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800ed0e:	4912      	ldr	r1, [pc, #72]	; (800ed58 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800ed10:	4313      	orrs	r3, r2
 800ed12:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800ed16:	68fb      	ldr	r3, [r7, #12]
 800ed18:	1e5a      	subs	r2, r3, #1
 800ed1a:	60fa      	str	r2, [r7, #12]
 800ed1c:	2b00      	cmp	r3, #0
 800ed1e:	bf14      	ite	ne
 800ed20:	2301      	movne	r3, #1
 800ed22:	2300      	moveq	r3, #0
 800ed24:	b2db      	uxtb	r3, r3
 800ed26:	2b00      	cmp	r3, #0
 800ed28:	d1ea      	bne.n	800ed00 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    } while(sets-- != 0U);
 800ed2a:	693b      	ldr	r3, [r7, #16]
 800ed2c:	1e5a      	subs	r2, r3, #1
 800ed2e:	613a      	str	r2, [r7, #16]
 800ed30:	2b00      	cmp	r3, #0
 800ed32:	bf14      	ite	ne
 800ed34:	2301      	movne	r3, #1
 800ed36:	2300      	moveq	r3, #0
 800ed38:	b2db      	uxtb	r3, r3
 800ed3a:	2b00      	cmp	r3, #0
 800ed3c:	d1db      	bne.n	800ecf6 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 800ed3e:	f3bf 8f4f 	dsb	sy
}
 800ed42:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800ed44:	f3bf 8f6f 	isb	sy
}
 800ed48:	bf00      	nop
}
 800ed4a:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 800ed4c:	bf00      	nop
 800ed4e:	371c      	adds	r7, #28
 800ed50:	46bd      	mov	sp, r7
 800ed52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed56:	4770      	bx	lr
 800ed58:	e000ed00 	.word	0xe000ed00

0800ed5c <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800ed5c:	b480      	push	{r7}
 800ed5e:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 800ed60:	bf00      	nop
 800ed62:	46bd      	mov	sp, r7
 800ed64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed68:	4770      	bx	lr

0800ed6a <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800ed6a:	b480      	push	{r7}
 800ed6c:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 800ed6e:	bf00      	nop
 800ed70:	46bd      	mov	sp, r7
 800ed72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed76:	4770      	bx	lr

0800ed78 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800ed78:	b580      	push	{r7, lr}
 800ed7a:	b086      	sub	sp, #24
 800ed7c:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800ed7e:	f7fc fec9 	bl	800bb14 <_ZN8touchgfx3HAL11getInstanceEv>
 800ed82:	4603      	mov	r3, r0
 800ed84:	4618      	mov	r0, r3
 800ed86:	f7ff fe0f 	bl	800e9a8 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800ed8a:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800ed8c:	68fb      	ldr	r3, [r7, #12]
 800ed8e:	681b      	ldr	r3, [r3, #0]
 800ed90:	3318      	adds	r3, #24
 800ed92:	681b      	ldr	r3, [r3, #0]
 800ed94:	68f8      	ldr	r0, [r7, #12]
 800ed96:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800ed98:	68fb      	ldr	r3, [r7, #12]
 800ed9a:	681b      	ldr	r3, [r3, #0]
 800ed9c:	3308      	adds	r3, #8
 800ed9e:	681b      	ldr	r3, [r3, #0]
 800eda0:	68f8      	ldr	r0, [r7, #12]
 800eda2:	4798      	blx	r3
 800eda4:	4603      	mov	r3, r0
 800eda6:	2b00      	cmp	r3, #0
 800eda8:	d01d      	beq.n	800ede6 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800edaa:	463b      	mov	r3, r7
 800edac:	4618      	mov	r0, r3
 800edae:	f7fd fb48 	bl	800c442 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800edb2:	68fb      	ldr	r3, [r7, #12]
 800edb4:	681b      	ldr	r3, [r3, #0]
 800edb6:	330c      	adds	r3, #12
 800edb8:	681b      	ldr	r3, [r3, #0]
 800edba:	463a      	mov	r2, r7
 800edbc:	4611      	mov	r1, r2
 800edbe:	68f8      	ldr	r0, [r7, #12]
 800edc0:	4798      	blx	r3
 800edc2:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800edc4:	f9b7 3000 	ldrsh.w	r3, [r7]
 800edc8:	b299      	uxth	r1, r3
 800edca:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800edce:	b29a      	uxth	r2, r3
 800edd0:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800edd4:	b298      	uxth	r0, r3
 800edd6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800edda:	b29b      	uxth	r3, r3
 800eddc:	9300      	str	r3, [sp, #0]
 800edde:	4603      	mov	r3, r0
 800ede0:	68b8      	ldr	r0, [r7, #8]
 800ede2:	f7fe fec7 	bl	800db74 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800ede6:	bf00      	nop
 800ede8:	3710      	adds	r7, #16
 800edea:	46bd      	mov	sp, r7
 800edec:	bd80      	pop	{r7, pc}

0800edee <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800edee:	b580      	push	{r7, lr}
 800edf0:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800edf2:	f7ff ffc1 	bl	800ed78 <_ZN8touchgfx16startNewTransferEv>
}
 800edf6:	bf00      	nop
 800edf8:	bd80      	pop	{r7, pc}

0800edfa <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800edfa:	b580      	push	{r7, lr}
 800edfc:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800edfe:	f7fc fe89 	bl	800bb14 <_ZN8touchgfx3HAL11getInstanceEv>
 800ee02:	4603      	mov	r3, r0
 800ee04:	4618      	mov	r0, r3
 800ee06:	f7ff fdaf 	bl	800e968 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800ee0a:	f7fe ff45 	bl	800dc98 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800ee0e:	bf00      	nop
 800ee10:	bd80      	pop	{r7, pc}
	...

0800ee14 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800ee14:	b480      	push	{r7}
 800ee16:	b083      	sub	sp, #12
 800ee18:	af00      	add	r7, sp, #0
 800ee1a:	6078      	str	r0, [r7, #4]
 800ee1c:	4a04      	ldr	r2, [pc, #16]	; (800ee30 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800ee1e:	687b      	ldr	r3, [r7, #4]
 800ee20:	601a      	str	r2, [r3, #0]
 800ee22:	687b      	ldr	r3, [r7, #4]
 800ee24:	4618      	mov	r0, r3
 800ee26:	370c      	adds	r7, #12
 800ee28:	46bd      	mov	sp, r7
 800ee2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee2e:	4770      	bx	lr
 800ee30:	08025234 	.word	0x08025234

0800ee34 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800ee34:	b5b0      	push	{r4, r5, r7, lr}
 800ee36:	b084      	sub	sp, #16
 800ee38:	af00      	add	r7, sp, #0
 800ee3a:	6078      	str	r0, [r7, #4]
    {
 800ee3c:	687b      	ldr	r3, [r7, #4]
 800ee3e:	4618      	mov	r0, r3
 800ee40:	f7ff ffe8 	bl	800ee14 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800ee44:	4a1a      	ldr	r2, [pc, #104]	; (800eeb0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 800ee46:	687b      	ldr	r3, [r7, #4]
 800ee48:	601a      	str	r2, [r3, #0]
 800ee4a:	687a      	ldr	r2, [r7, #4]
 800ee4c:	f241 6388 	movw	r3, #5768	; 0x1688
 800ee50:	4413      	add	r3, r2
 800ee52:	2402      	movs	r4, #2
 800ee54:	461d      	mov	r5, r3
 800ee56:	e004      	b.n	800ee62 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 800ee58:	4628      	mov	r0, r5
 800ee5a:	f7fd faf2 	bl	800c442 <_ZN8touchgfx4RectC1Ev>
 800ee5e:	3508      	adds	r5, #8
 800ee60:	3c01      	subs	r4, #1
 800ee62:	2c00      	cmp	r4, #0
 800ee64:	daf8      	bge.n	800ee58 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800ee66:	687b      	ldr	r3, [r7, #4]
 800ee68:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ee6c:	461a      	mov	r2, r3
 800ee6e:	f04f 33ff 	mov.w	r3, #4294967295
 800ee72:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 800ee76:	687b      	ldr	r3, [r7, #4]
 800ee78:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ee7c:	461a      	mov	r2, r3
 800ee7e:	f04f 33ff 	mov.w	r3, #4294967295
 800ee82:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 800ee86:	2300      	movs	r3, #0
 800ee88:	60fb      	str	r3, [r7, #12]
 800ee8a:	e008      	b.n	800ee9e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800ee8c:	687a      	ldr	r2, [r7, #4]
 800ee8e:	68fb      	ldr	r3, [r7, #12]
 800ee90:	4413      	add	r3, r2
 800ee92:	3304      	adds	r3, #4
 800ee94:	2200      	movs	r2, #0
 800ee96:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800ee98:	68fb      	ldr	r3, [r7, #12]
 800ee9a:	3301      	adds	r3, #1
 800ee9c:	60fb      	str	r3, [r7, #12]
 800ee9e:	68fb      	ldr	r3, [r7, #12]
 800eea0:	2b02      	cmp	r3, #2
 800eea2:	d9f3      	bls.n	800ee8c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 800eea4:	687b      	ldr	r3, [r7, #4]
 800eea6:	4618      	mov	r0, r3
 800eea8:	3710      	adds	r7, #16
 800eeaa:	46bd      	mov	sp, r7
 800eeac:	bdb0      	pop	{r4, r5, r7, pc}
 800eeae:	bf00      	nop
 800eeb0:	08025130 	.word	0x08025130

0800eeb4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800eeb4:	b580      	push	{r7, lr}
 800eeb6:	b082      	sub	sp, #8
 800eeb8:	af00      	add	r7, sp, #0
 800eeba:	6078      	str	r0, [r7, #4]
 800eebc:	4a05      	ldr	r2, [pc, #20]	; (800eed4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 800eebe:	687b      	ldr	r3, [r7, #4]
 800eec0:	601a      	str	r2, [r3, #0]
 800eec2:	687b      	ldr	r3, [r7, #4]
 800eec4:	4618      	mov	r0, r3
 800eec6:	f7ff fd2f 	bl	800e928 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800eeca:	687b      	ldr	r3, [r7, #4]
 800eecc:	4618      	mov	r0, r3
 800eece:	3708      	adds	r7, #8
 800eed0:	46bd      	mov	sp, r7
 800eed2:	bd80      	pop	{r7, pc}
 800eed4:	08025130 	.word	0x08025130

0800eed8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 800eed8:	b580      	push	{r7, lr}
 800eeda:	b082      	sub	sp, #8
 800eedc:	af00      	add	r7, sp, #0
 800eede:	6078      	str	r0, [r7, #4]
 800eee0:	6878      	ldr	r0, [r7, #4]
 800eee2:	f7ff ffe7 	bl	800eeb4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 800eee6:	f241 61a8 	movw	r1, #5800	; 0x16a8
 800eeea:	6878      	ldr	r0, [r7, #4]
 800eeec:	f013 fdcf 	bl	8022a8e <_ZdlPvj>
 800eef0:	687b      	ldr	r3, [r7, #4]
 800eef2:	4618      	mov	r0, r3
 800eef4:	3708      	adds	r7, #8
 800eef6:	46bd      	mov	sp, r7
 800eef8:	bd80      	pop	{r7, pc}
	...

0800eefc <_Z41__static_initialization_and_destruction_0ii>:
 800eefc:	b580      	push	{r7, lr}
 800eefe:	b082      	sub	sp, #8
 800ef00:	af00      	add	r7, sp, #0
 800ef02:	6078      	str	r0, [r7, #4]
 800ef04:	6039      	str	r1, [r7, #0]
 800ef06:	687b      	ldr	r3, [r7, #4]
 800ef08:	2b01      	cmp	r3, #1
 800ef0a:	d107      	bne.n	800ef1c <_Z41__static_initialization_and_destruction_0ii+0x20>
 800ef0c:	683b      	ldr	r3, [r7, #0]
 800ef0e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ef12:	4293      	cmp	r3, r2
 800ef14:	d102      	bne.n	800ef1c <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 800ef16:	4809      	ldr	r0, [pc, #36]	; (800ef3c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800ef18:	f7ff ff8c 	bl	800ee34 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 800ef1c:	687b      	ldr	r3, [r7, #4]
 800ef1e:	2b00      	cmp	r3, #0
 800ef20:	d107      	bne.n	800ef32 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800ef22:	683b      	ldr	r3, [r7, #0]
 800ef24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ef28:	4293      	cmp	r3, r2
 800ef2a:	d102      	bne.n	800ef32 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800ef2c:	4803      	ldr	r0, [pc, #12]	; (800ef3c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800ef2e:	f7ff ffc1 	bl	800eeb4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 800ef32:	bf00      	nop
 800ef34:	3708      	adds	r7, #8
 800ef36:	46bd      	mov	sp, r7
 800ef38:	bd80      	pop	{r7, pc}
 800ef3a:	bf00      	nop
 800ef3c:	24000824 	.word	0x24000824

0800ef40 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800ef40:	b580      	push	{r7, lr}
 800ef42:	b086      	sub	sp, #24
 800ef44:	af00      	add	r7, sp, #0
 800ef46:	60f8      	str	r0, [r7, #12]
 800ef48:	4608      	mov	r0, r1
 800ef4a:	4611      	mov	r1, r2
 800ef4c:	461a      	mov	r2, r3
 800ef4e:	4603      	mov	r3, r0
 800ef50:	817b      	strh	r3, [r7, #10]
 800ef52:	460b      	mov	r3, r1
 800ef54:	813b      	strh	r3, [r7, #8]
 800ef56:	4613      	mov	r3, r2
 800ef58:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800ef5a:	68fb      	ldr	r3, [r7, #12]
 800ef5c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ef60:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800ef64:	3301      	adds	r3, #1
 800ef66:	68fa      	ldr	r2, [r7, #12]
 800ef68:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800ef6c:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 800ef70:	68fb      	ldr	r3, [r7, #12]
 800ef72:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ef76:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800ef7a:	2b03      	cmp	r3, #3
 800ef7c:	d109      	bne.n	800ef92 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800ef7e:	68fb      	ldr	r3, [r7, #12]
 800ef80:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ef84:	461a      	mov	r2, r3
 800ef86:	2300      	movs	r3, #0
 800ef88:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 800ef8c:	e001      	b.n	800ef92 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800ef8e:	f7ff fee5 	bl	800ed5c <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800ef92:	68fb      	ldr	r3, [r7, #12]
 800ef94:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ef98:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800ef9c:	68fa      	ldr	r2, [r7, #12]
 800ef9e:	4413      	add	r3, r2
 800efa0:	791b      	ldrb	r3, [r3, #4]
 800efa2:	b2db      	uxtb	r3, r3
 800efa4:	2b00      	cmp	r3, #0
 800efa6:	bf14      	ite	ne
 800efa8:	2301      	movne	r3, #1
 800efaa:	2300      	moveq	r3, #0
 800efac:	b2db      	uxtb	r3, r3
 800efae:	2b00      	cmp	r3, #0
 800efb0:	d1ed      	bne.n	800ef8e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800efb2:	68fb      	ldr	r3, [r7, #12]
 800efb4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800efb8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800efbc:	68fa      	ldr	r2, [r7, #12]
 800efbe:	4413      	add	r3, r2
 800efc0:	791b      	ldrb	r3, [r3, #4]
 800efc2:	b2db      	uxtb	r3, r3
 800efc4:	2b00      	cmp	r3, #0
 800efc6:	d005      	beq.n	800efd4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800efc8:	4b38      	ldr	r3, [pc, #224]	; (800f0ac <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800efca:	4a39      	ldr	r2, [pc, #228]	; (800f0b0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800efcc:	21aa      	movs	r1, #170	; 0xaa
 800efce:	4839      	ldr	r0, [pc, #228]	; (800f0b4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800efd0:	f013 fd8c 	bl	8022aec <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800efd4:	68fb      	ldr	r3, [r7, #12]
 800efd6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800efda:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800efde:	68fa      	ldr	r2, [r7, #12]
 800efe0:	4413      	add	r3, r2
 800efe2:	2201      	movs	r2, #1
 800efe4:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800efe6:	88fb      	ldrh	r3, [r7, #6]
 800efe8:	005b      	lsls	r3, r3, #1
 800efea:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800efec:	697b      	ldr	r3, [r7, #20]
 800efee:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 800eff2:	fbb2 f3f3 	udiv	r3, r2, r3
 800eff6:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800eff8:	68fb      	ldr	r3, [r7, #12]
 800effa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800effe:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 800f002:	4613      	mov	r3, r2
 800f004:	011b      	lsls	r3, r3, #4
 800f006:	1a9b      	subs	r3, r3, r2
 800f008:	01db      	lsls	r3, r3, #7
 800f00a:	3308      	adds	r3, #8
 800f00c:	68fa      	ldr	r2, [r7, #12]
 800f00e:	441a      	add	r2, r3
 800f010:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f012:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800f014:	68fb      	ldr	r3, [r7, #12]
 800f016:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f01a:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 800f01e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800f022:	68fb      	ldr	r3, [r7, #12]
 800f024:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 800f028:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800f02c:	68fb      	ldr	r3, [r7, #12]
 800f02e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f032:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f036:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800f03a:	68fa      	ldr	r2, [r7, #12]
 800f03c:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f040:	00db      	lsls	r3, r3, #3
 800f042:	4413      	add	r3, r2
 800f044:	460a      	mov	r2, r1
 800f046:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800f048:	68fb      	ldr	r3, [r7, #12]
 800f04a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f04e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f052:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800f056:	68fa      	ldr	r2, [r7, #12]
 800f058:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f05c:	00db      	lsls	r3, r3, #3
 800f05e:	4413      	add	r3, r2
 800f060:	460a      	mov	r2, r1
 800f062:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800f064:	8c3a      	ldrh	r2, [r7, #32]
 800f066:	693b      	ldr	r3, [r7, #16]
 800f068:	429a      	cmp	r2, r3
 800f06a:	bfa8      	it	ge
 800f06c:	461a      	movge	r2, r3
 800f06e:	68fb      	ldr	r3, [r7, #12]
 800f070:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f074:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f078:	b211      	sxth	r1, r2
 800f07a:	68fa      	ldr	r2, [r7, #12]
 800f07c:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f080:	00db      	lsls	r3, r3, #3
 800f082:	4413      	add	r3, r2
 800f084:	460a      	mov	r2, r1
 800f086:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800f088:	68fb      	ldr	r3, [r7, #12]
 800f08a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f08e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f092:	68fa      	ldr	r2, [r7, #12]
 800f094:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f098:	00db      	lsls	r3, r3, #3
 800f09a:	4413      	add	r3, r2
 800f09c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800f0a0:	b29b      	uxth	r3, r3
    }
 800f0a2:	4618      	mov	r0, r3
 800f0a4:	3718      	adds	r7, #24
 800f0a6:	46bd      	mov	sp, r7
 800f0a8:	bd80      	pop	{r7, pc}
 800f0aa:	bf00      	nop
 800f0ac:	080244d4 	.word	0x080244d4
 800f0b0:	080244f4 	.word	0x080244f4
 800f0b4:	08024628 	.word	0x08024628

0800f0b8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800f0b8:	b580      	push	{r7, lr}
 800f0ba:	b082      	sub	sp, #8
 800f0bc:	af00      	add	r7, sp, #0
 800f0be:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800f0c0:	687b      	ldr	r3, [r7, #4]
 800f0c2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f0c6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f0ca:	687a      	ldr	r2, [r7, #4]
 800f0cc:	4413      	add	r3, r2
 800f0ce:	791b      	ldrb	r3, [r3, #4]
 800f0d0:	b2db      	uxtb	r3, r3
 800f0d2:	2b01      	cmp	r3, #1
 800f0d4:	d005      	beq.n	800f0e2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800f0d6:	4b0a      	ldr	r3, [pc, #40]	; (800f100 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800f0d8:	4a0a      	ldr	r2, [pc, #40]	; (800f104 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800f0da:	21b9      	movs	r1, #185	; 0xb9
 800f0dc:	480a      	ldr	r0, [pc, #40]	; (800f108 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800f0de:	f013 fd05 	bl	8022aec <__assert_func>
        state[drawingBlock] = DRAWN;
 800f0e2:	687b      	ldr	r3, [r7, #4]
 800f0e4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f0e8:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f0ec:	687a      	ldr	r2, [r7, #4]
 800f0ee:	4413      	add	r3, r2
 800f0f0:	2202      	movs	r2, #2
 800f0f2:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800f0f4:	f7ff fe39 	bl	800ed6a <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800f0f8:	bf00      	nop
 800f0fa:	3708      	adds	r7, #8
 800f0fc:	46bd      	mov	sp, r7
 800f0fe:	bd80      	pop	{r7, pc}
 800f100:	0802467c 	.word	0x0802467c
 800f104:	080246a0 	.word	0x080246a0
 800f108:	08024628 	.word	0x08024628

0800f10c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800f10c:	b480      	push	{r7}
 800f10e:	b085      	sub	sp, #20
 800f110:	af00      	add	r7, sp, #0
 800f112:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800f114:	2300      	movs	r3, #0
 800f116:	60fb      	str	r3, [r7, #12]
 800f118:	e011      	b.n	800f13e <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800f11a:	687a      	ldr	r2, [r7, #4]
 800f11c:	68fb      	ldr	r3, [r7, #12]
 800f11e:	4413      	add	r3, r2
 800f120:	3304      	adds	r3, #4
 800f122:	781b      	ldrb	r3, [r3, #0]
 800f124:	b2db      	uxtb	r3, r3
 800f126:	2b02      	cmp	r3, #2
 800f128:	bf0c      	ite	eq
 800f12a:	2301      	moveq	r3, #1
 800f12c:	2300      	movne	r3, #0
 800f12e:	b2db      	uxtb	r3, r3
 800f130:	2b00      	cmp	r3, #0
 800f132:	d001      	beq.n	800f138 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800f134:	2301      	movs	r3, #1
 800f136:	e006      	b.n	800f146 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800f138:	68fb      	ldr	r3, [r7, #12]
 800f13a:	3301      	adds	r3, #1
 800f13c:	60fb      	str	r3, [r7, #12]
 800f13e:	68fb      	ldr	r3, [r7, #12]
 800f140:	2b02      	cmp	r3, #2
 800f142:	d9ea      	bls.n	800f11a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800f144:	2300      	movs	r3, #0
    }
 800f146:	4618      	mov	r0, r3
 800f148:	3714      	adds	r7, #20
 800f14a:	46bd      	mov	sp, r7
 800f14c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f150:	4770      	bx	lr
	...

0800f154 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800f154:	b580      	push	{r7, lr}
 800f156:	b082      	sub	sp, #8
 800f158:	af00      	add	r7, sp, #0
 800f15a:	6078      	str	r0, [r7, #4]
 800f15c:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800f15e:	687b      	ldr	r3, [r7, #4]
 800f160:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f164:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f168:	3301      	adds	r3, #1
 800f16a:	687a      	ldr	r2, [r7, #4]
 800f16c:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800f170:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 800f174:	687b      	ldr	r3, [r7, #4]
 800f176:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f17a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f17e:	2b03      	cmp	r3, #3
 800f180:	d106      	bne.n	800f190 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800f182:	687b      	ldr	r3, [r7, #4]
 800f184:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f188:	461a      	mov	r2, r3
 800f18a:	2300      	movs	r3, #0
 800f18c:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 800f190:	687b      	ldr	r3, [r7, #4]
 800f192:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f196:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f19a:	687a      	ldr	r2, [r7, #4]
 800f19c:	4413      	add	r3, r2
 800f19e:	791b      	ldrb	r3, [r3, #4]
 800f1a0:	b2db      	uxtb	r3, r3
 800f1a2:	2b02      	cmp	r3, #2
 800f1a4:	d005      	beq.n	800f1b2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800f1a6:	4b16      	ldr	r3, [pc, #88]	; (800f200 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800f1a8:	4a16      	ldr	r2, [pc, #88]	; (800f204 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800f1aa:	21dd      	movs	r1, #221	; 0xdd
 800f1ac:	4816      	ldr	r0, [pc, #88]	; (800f208 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800f1ae:	f013 fc9d 	bl	8022aec <__assert_func>
        rect = blockRect[sendingBlock];
 800f1b2:	687b      	ldr	r3, [r7, #4]
 800f1b4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f1b8:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f1bc:	683a      	ldr	r2, [r7, #0]
 800f1be:	6879      	ldr	r1, [r7, #4]
 800f1c0:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f1c4:	00db      	lsls	r3, r3, #3
 800f1c6:	440b      	add	r3, r1
 800f1c8:	cb03      	ldmia	r3!, {r0, r1}
 800f1ca:	6010      	str	r0, [r2, #0]
 800f1cc:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800f1ce:	687b      	ldr	r3, [r7, #4]
 800f1d0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f1d4:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f1d8:	687a      	ldr	r2, [r7, #4]
 800f1da:	4413      	add	r3, r2
 800f1dc:	2203      	movs	r2, #3
 800f1de:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800f1e0:	687b      	ldr	r3, [r7, #4]
 800f1e2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f1e6:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 800f1ea:	4613      	mov	r3, r2
 800f1ec:	011b      	lsls	r3, r3, #4
 800f1ee:	1a9b      	subs	r3, r3, r2
 800f1f0:	01db      	lsls	r3, r3, #7
 800f1f2:	3308      	adds	r3, #8
 800f1f4:	687a      	ldr	r2, [r7, #4]
 800f1f6:	4413      	add	r3, r2
    }
 800f1f8:	4618      	mov	r0, r3
 800f1fa:	3708      	adds	r7, #8
 800f1fc:	46bd      	mov	sp, r7
 800f1fe:	bd80      	pop	{r7, pc}
 800f200:	08024774 	.word	0x08024774
 800f204:	08024794 	.word	0x08024794
 800f208:	08024628 	.word	0x08024628

0800f20c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800f20c:	b580      	push	{r7, lr}
 800f20e:	b084      	sub	sp, #16
 800f210:	af00      	add	r7, sp, #0
 800f212:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800f214:	687b      	ldr	r3, [r7, #4]
 800f216:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f21a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f21e:	3301      	adds	r3, #1
 800f220:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800f222:	68fb      	ldr	r3, [r7, #12]
 800f224:	2b03      	cmp	r3, #3
 800f226:	d101      	bne.n	800f22c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800f228:	2300      	movs	r3, #0
 800f22a:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800f22c:	687a      	ldr	r2, [r7, #4]
 800f22e:	68fb      	ldr	r3, [r7, #12]
 800f230:	4413      	add	r3, r2
 800f232:	3304      	adds	r3, #4
 800f234:	781b      	ldrb	r3, [r3, #0]
 800f236:	b2db      	uxtb	r3, r3
 800f238:	2b02      	cmp	r3, #2
 800f23a:	d005      	beq.n	800f248 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800f23c:	4b07      	ldr	r3, [pc, #28]	; (800f25c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800f23e:	4a08      	ldr	r2, [pc, #32]	; (800f260 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800f240:	21ea      	movs	r1, #234	; 0xea
 800f242:	4808      	ldr	r0, [pc, #32]	; (800f264 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800f244:	f013 fc52 	bl	8022aec <__assert_func>
        return blockRect[nextSendingBlock];
 800f248:	68fb      	ldr	r3, [r7, #12]
 800f24a:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f24e:	00db      	lsls	r3, r3, #3
 800f250:	687a      	ldr	r2, [r7, #4]
 800f252:	4413      	add	r3, r2
    }
 800f254:	4618      	mov	r0, r3
 800f256:	3710      	adds	r7, #16
 800f258:	46bd      	mov	sp, r7
 800f25a:	bd80      	pop	{r7, pc}
 800f25c:	08024894 	.word	0x08024894
 800f260:	080248b8 	.word	0x080248b8
 800f264:	08024628 	.word	0x08024628

0800f268 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800f268:	b480      	push	{r7}
 800f26a:	b085      	sub	sp, #20
 800f26c:	af00      	add	r7, sp, #0
 800f26e:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800f270:	687b      	ldr	r3, [r7, #4]
 800f272:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f276:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f27a:	3301      	adds	r3, #1
 800f27c:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800f27e:	68fb      	ldr	r3, [r7, #12]
 800f280:	2b03      	cmp	r3, #3
 800f282:	d101      	bne.n	800f288 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800f284:	2300      	movs	r3, #0
 800f286:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800f288:	687a      	ldr	r2, [r7, #4]
 800f28a:	68fb      	ldr	r3, [r7, #12]
 800f28c:	4413      	add	r3, r2
 800f28e:	3304      	adds	r3, #4
 800f290:	781b      	ldrb	r3, [r3, #0]
 800f292:	b2db      	uxtb	r3, r3
 800f294:	2b00      	cmp	r3, #0
 800f296:	bf0c      	ite	eq
 800f298:	2301      	moveq	r3, #1
 800f29a:	2300      	movne	r3, #0
 800f29c:	b2db      	uxtb	r3, r3
    }
 800f29e:	4618      	mov	r0, r3
 800f2a0:	3714      	adds	r7, #20
 800f2a2:	46bd      	mov	sp, r7
 800f2a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2a8:	4770      	bx	lr
	...

0800f2ac <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800f2ac:	b580      	push	{r7, lr}
 800f2ae:	b082      	sub	sp, #8
 800f2b0:	af00      	add	r7, sp, #0
 800f2b2:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800f2b4:	687b      	ldr	r3, [r7, #4]
 800f2b6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f2ba:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f2be:	687a      	ldr	r2, [r7, #4]
 800f2c0:	4413      	add	r3, r2
 800f2c2:	791b      	ldrb	r3, [r3, #4]
 800f2c4:	b2db      	uxtb	r3, r3
 800f2c6:	2b03      	cmp	r3, #3
 800f2c8:	d005      	beq.n	800f2d6 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800f2ca:	4b09      	ldr	r3, [pc, #36]	; (800f2f0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800f2cc:	4a09      	ldr	r2, [pc, #36]	; (800f2f4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800f2ce:	21ff      	movs	r1, #255	; 0xff
 800f2d0:	4809      	ldr	r0, [pc, #36]	; (800f2f8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800f2d2:	f013 fc0b 	bl	8022aec <__assert_func>
        state[sendingBlock] = EMPTY;
 800f2d6:	687b      	ldr	r3, [r7, #4]
 800f2d8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f2dc:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f2e0:	687a      	ldr	r2, [r7, #4]
 800f2e2:	4413      	add	r3, r2
 800f2e4:	2200      	movs	r2, #0
 800f2e6:	711a      	strb	r2, [r3, #4]
    }
 800f2e8:	bf00      	nop
 800f2ea:	3708      	adds	r7, #8
 800f2ec:	46bd      	mov	sp, r7
 800f2ee:	bd80      	pop	{r7, pc}
 800f2f0:	08024998 	.word	0x08024998
 800f2f4:	080249b8 	.word	0x080249b8
 800f2f8:	08024628 	.word	0x08024628

0800f2fc <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800f2fc:	b580      	push	{r7, lr}
 800f2fe:	af00      	add	r7, sp, #0
 800f300:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f304:	2001      	movs	r0, #1
 800f306:	f7ff fdf9 	bl	800eefc <_Z41__static_initialization_and_destruction_0ii>
 800f30a:	bd80      	pop	{r7, pc}

0800f30c <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800f30c:	b580      	push	{r7, lr}
 800f30e:	af00      	add	r7, sp, #0
 800f310:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f314:	2000      	movs	r0, #0
 800f316:	f7ff fdf1 	bl	800eefc <_Z41__static_initialization_and_destruction_0ii>
 800f31a:	bd80      	pop	{r7, pc}

0800f31c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f31c:	8880      	ldrh	r0, [r0, #4]
 800f31e:	4770      	bx	lr

0800f320 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f320:	b570      	push	{r4, r5, r6, lr}
 800f322:	6803      	ldr	r3, [r0, #0]
 800f324:	460c      	mov	r4, r1
 800f326:	2100      	movs	r1, #0
 800f328:	4605      	mov	r5, r0
 800f32a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f32c:	4798      	blx	r3
 800f32e:	4606      	mov	r6, r0
 800f330:	682b      	ldr	r3, [r5, #0]
 800f332:	4628      	mov	r0, r5
 800f334:	1ba4      	subs	r4, r4, r6
 800f336:	6a1b      	ldr	r3, [r3, #32]
 800f338:	b2a4      	uxth	r4, r4
 800f33a:	4798      	blx	r3
 800f33c:	fbb4 f0f0 	udiv	r0, r4, r0
 800f340:	bd70      	pop	{r4, r5, r6, pc}

0800f342 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f342:	2300      	movs	r3, #0
 800f344:	8083      	strh	r3, [r0, #4]
 800f346:	4770      	bx	lr

0800f348 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f348:	b510      	push	{r4, lr}
 800f34a:	6803      	ldr	r3, [r0, #0]
 800f34c:	4604      	mov	r4, r0
 800f34e:	8881      	ldrh	r1, [r0, #4]
 800f350:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f352:	4798      	blx	r3
 800f354:	88a3      	ldrh	r3, [r4, #4]
 800f356:	3301      	adds	r3, #1
 800f358:	80a3      	strh	r3, [r4, #4]
 800f35a:	bd10      	pop	{r4, pc}

0800f35c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f35c:	6803      	ldr	r3, [r0, #0]
 800f35e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f360:	4718      	bx	r3

0800f362 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f362:	4770      	bx	lr

0800f364 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f364:	4a02      	ldr	r2, [pc, #8]	; (800f370 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f366:	6002      	str	r2, [r0, #0]
 800f368:	2200      	movs	r2, #0
 800f36a:	8082      	strh	r2, [r0, #4]
 800f36c:	4770      	bx	lr
 800f36e:	bf00      	nop
 800f370:	08025260 	.word	0x08025260

0800f374 <_ZN8touchgfx9Container13getFirstChildEv>:
 800f374:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800f376:	4770      	bx	lr

0800f378 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f378:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f37a:	2000      	movs	r0, #0
 800f37c:	b12b      	cbz	r3, 800f38a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f37e:	b920      	cbnz	r0, 800f38a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f380:	1a5a      	subs	r2, r3, r1
 800f382:	699b      	ldr	r3, [r3, #24]
 800f384:	4250      	negs	r0, r2
 800f386:	4150      	adcs	r0, r2
 800f388:	e7f8      	b.n	800f37c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f38a:	4770      	bx	lr

0800f38c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f38c:	2300      	movs	r3, #0
 800f38e:	6148      	str	r0, [r1, #20]
 800f390:	618b      	str	r3, [r1, #24]
 800f392:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f394:	b913      	cbnz	r3, 800f39c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f396:	6281      	str	r1, [r0, #40]	; 0x28
 800f398:	4770      	bx	lr
 800f39a:	4613      	mov	r3, r2
 800f39c:	699a      	ldr	r2, [r3, #24]
 800f39e:	2a00      	cmp	r2, #0
 800f3a0:	d1fb      	bne.n	800f39a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f3a2:	6199      	str	r1, [r3, #24]
 800f3a4:	4770      	bx	lr

0800f3a6 <_ZN8touchgfx9Container9removeAllEv>:
 800f3a6:	2200      	movs	r2, #0
 800f3a8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f3aa:	b123      	cbz	r3, 800f3b6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f3ac:	6999      	ldr	r1, [r3, #24]
 800f3ae:	6281      	str	r1, [r0, #40]	; 0x28
 800f3b0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f3b4:	e7f8      	b.n	800f3a8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f3b6:	4770      	bx	lr

0800f3b8 <_ZN8touchgfx9Container6unlinkEv>:
 800f3b8:	2300      	movs	r3, #0
 800f3ba:	6283      	str	r3, [r0, #40]	; 0x28
 800f3bc:	4770      	bx	lr

0800f3be <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f3be:	2200      	movs	r2, #0
 800f3c0:	8002      	strh	r2, [r0, #0]
 800f3c2:	8042      	strh	r2, [r0, #2]
 800f3c4:	8082      	strh	r2, [r0, #4]
 800f3c6:	80c2      	strh	r2, [r0, #6]
 800f3c8:	4770      	bx	lr

0800f3ca <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f3ca:	b570      	push	{r4, r5, r6, lr}
 800f3cc:	460d      	mov	r5, r1
 800f3ce:	4616      	mov	r6, r2
 800f3d0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f3d2:	b13c      	cbz	r4, 800f3e4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f3d4:	6823      	ldr	r3, [r4, #0]
 800f3d6:	4620      	mov	r0, r4
 800f3d8:	4632      	mov	r2, r6
 800f3da:	4629      	mov	r1, r5
 800f3dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f3de:	4798      	blx	r3
 800f3e0:	69a4      	ldr	r4, [r4, #24]
 800f3e2:	e7f6      	b.n	800f3d2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f3e4:	bd70      	pop	{r4, r5, r6, pc}

0800f3e6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f3e6:	b538      	push	{r3, r4, r5, lr}
 800f3e8:	460d      	mov	r5, r1
 800f3ea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f3ec:	b134      	cbz	r4, 800f3fc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f3ee:	682b      	ldr	r3, [r5, #0]
 800f3f0:	4621      	mov	r1, r4
 800f3f2:	4628      	mov	r0, r5
 800f3f4:	689b      	ldr	r3, [r3, #8]
 800f3f6:	4798      	blx	r3
 800f3f8:	69a4      	ldr	r4, [r4, #24]
 800f3fa:	e7f7      	b.n	800f3ec <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f3fc:	bd38      	pop	{r3, r4, r5, pc}

0800f3fe <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f3fe:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f400:	b19b      	cbz	r3, 800f42a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f402:	428b      	cmp	r3, r1
 800f404:	d109      	bne.n	800f41a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f406:	699a      	ldr	r2, [r3, #24]
 800f408:	2100      	movs	r1, #0
 800f40a:	6159      	str	r1, [r3, #20]
 800f40c:	6282      	str	r2, [r0, #40]	; 0x28
 800f40e:	b902      	cbnz	r2, 800f412 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f410:	4770      	bx	lr
 800f412:	6199      	str	r1, [r3, #24]
 800f414:	4770      	bx	lr
 800f416:	4613      	mov	r3, r2
 800f418:	b13a      	cbz	r2, 800f42a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f41a:	699a      	ldr	r2, [r3, #24]
 800f41c:	428a      	cmp	r2, r1
 800f41e:	d1fa      	bne.n	800f416 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f420:	698a      	ldr	r2, [r1, #24]
 800f422:	619a      	str	r2, [r3, #24]
 800f424:	2300      	movs	r3, #0
 800f426:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f42a:	4770      	bx	lr

0800f42c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f42c:	b410      	push	{r4}
 800f42e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f430:	4604      	mov	r4, r0
 800f432:	b92b      	cbnz	r3, 800f440 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f434:	6803      	ldr	r3, [r0, #0]
 800f436:	4611      	mov	r1, r2
 800f438:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f43c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f43e:	4718      	bx	r3
 800f440:	b941      	cbnz	r1, 800f454 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f442:	6193      	str	r3, [r2, #24]
 800f444:	6282      	str	r2, [r0, #40]	; 0x28
 800f446:	6154      	str	r4, [r2, #20]
 800f448:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f44c:	4770      	bx	lr
 800f44e:	4603      	mov	r3, r0
 800f450:	2800      	cmp	r0, #0
 800f452:	d0f9      	beq.n	800f448 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f454:	4299      	cmp	r1, r3
 800f456:	6998      	ldr	r0, [r3, #24]
 800f458:	d1f9      	bne.n	800f44e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f45a:	6190      	str	r0, [r2, #24]
 800f45c:	618a      	str	r2, [r1, #24]
 800f45e:	e7f2      	b.n	800f446 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f460 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f464:	461f      	mov	r7, r3
 800f466:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f46a:	460d      	mov	r5, r1
 800f46c:	4616      	mov	r6, r2
 800f46e:	b103      	cbz	r3, 800f472 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f470:	6038      	str	r0, [r7, #0]
 800f472:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f474:	b314      	cbz	r4, 800f4bc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f476:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f47a:	b1eb      	cbz	r3, 800f4b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f47c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f480:	428d      	cmp	r5, r1
 800f482:	db19      	blt.n	800f4b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f484:	b289      	uxth	r1, r1
 800f486:	8923      	ldrh	r3, [r4, #8]
 800f488:	440b      	add	r3, r1
 800f48a:	b21b      	sxth	r3, r3
 800f48c:	429d      	cmp	r5, r3
 800f48e:	da13      	bge.n	800f4b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f490:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f494:	4296      	cmp	r6, r2
 800f496:	db0f      	blt.n	800f4b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f498:	b292      	uxth	r2, r2
 800f49a:	8963      	ldrh	r3, [r4, #10]
 800f49c:	4413      	add	r3, r2
 800f49e:	b21b      	sxth	r3, r3
 800f4a0:	429e      	cmp	r6, r3
 800f4a2:	da09      	bge.n	800f4b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f4a4:	6823      	ldr	r3, [r4, #0]
 800f4a6:	1ab2      	subs	r2, r6, r2
 800f4a8:	1a69      	subs	r1, r5, r1
 800f4aa:	4620      	mov	r0, r4
 800f4ac:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f4b0:	b212      	sxth	r2, r2
 800f4b2:	463b      	mov	r3, r7
 800f4b4:	b209      	sxth	r1, r1
 800f4b6:	47c0      	blx	r8
 800f4b8:	69a4      	ldr	r4, [r4, #24]
 800f4ba:	e7db      	b.n	800f474 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f4bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f4c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4c4:	4c6d      	ldr	r4, [pc, #436]	; (800f67c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800f4c6:	b0a1      	sub	sp, #132	; 0x84
 800f4c8:	4606      	mov	r6, r0
 800f4ca:	6824      	ldr	r4, [r4, #0]
 800f4cc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f4ce:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f4d2:	2400      	movs	r4, #0
 800f4d4:	9303      	str	r3, [sp, #12]
 800f4d6:	802c      	strh	r4, [r5, #0]
 800f4d8:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f4da:	802c      	strh	r4, [r5, #0]
 800f4dc:	601c      	str	r4, [r3, #0]
 800f4de:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f4e2:	f7ff ffbd 	bl	800f460 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f4e6:	f1b9 0f03 	cmp.w	r9, #3
 800f4ea:	f340 80c1 	ble.w	800f670 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800f4ee:	4631      	mov	r1, r6
 800f4f0:	a80c      	add	r0, sp, #48	; 0x30
 800f4f2:	f004 fabd 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f4f6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f4fa:	9306      	str	r3, [sp, #24]
 800f4fc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f500:	9307      	str	r3, [sp, #28]
 800f502:	9b03      	ldr	r3, [sp, #12]
 800f504:	f8d3 a000 	ldr.w	sl, [r3]
 800f508:	f1ba 0f00 	cmp.w	sl, #0
 800f50c:	f000 80b3 	beq.w	800f676 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800f510:	4651      	mov	r1, sl
 800f512:	a810      	add	r0, sp, #64	; 0x40
 800f514:	f004 faac 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f518:	2002      	movs	r0, #2
 800f51a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f51e:	9b01      	ldr	r3, [sp, #4]
 800f520:	9a06      	ldr	r2, [sp, #24]
 800f522:	fb91 f1f0 	sdiv	r1, r1, r0
 800f526:	189d      	adds	r5, r3, r2
 800f528:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f52c:	9a07      	ldr	r2, [sp, #28]
 800f52e:	4419      	add	r1, r3
 800f530:	9b02      	ldr	r3, [sp, #8]
 800f532:	4413      	add	r3, r2
 800f534:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f538:	1a6d      	subs	r5, r5, r1
 800f53a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f53e:	fb92 f2f0 	sdiv	r2, r2, r0
 800f542:	440a      	add	r2, r1
 800f544:	1a9b      	subs	r3, r3, r2
 800f546:	435b      	muls	r3, r3
 800f548:	fb05 3505 	mla	r5, r5, r5, r3
 800f54c:	4f4c      	ldr	r7, [pc, #304]	; (800f680 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f54e:	ac10      	add	r4, sp, #64	; 0x40
 800f550:	f1b9 0f0c 	cmp.w	r9, #12
 800f554:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f556:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f558:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f55a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f55c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f55e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f560:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f564:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f568:	f04f 0303 	mov.w	r3, #3
 800f56c:	bfd8      	it	le
 800f56e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f572:	f04f 0400 	mov.w	r4, #0
 800f576:	f8cd 9000 	str.w	r9, [sp]
 800f57a:	bfcc      	ite	gt
 800f57c:	4698      	movgt	r8, r3
 800f57e:	fb92 f8f3 	sdivle	r8, r2, r3
 800f582:	1c63      	adds	r3, r4, #1
 800f584:	aa10      	add	r2, sp, #64	; 0x40
 800f586:	f004 0401 	and.w	r4, r4, #1
 800f58a:	f04f 0b00 	mov.w	fp, #0
 800f58e:	9308      	str	r3, [sp, #32]
 800f590:	9b00      	ldr	r3, [sp, #0]
 800f592:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f596:	fb93 f3f8 	sdiv	r3, r3, r8
 800f59a:	3404      	adds	r4, #4
 800f59c:	b29b      	uxth	r3, r3
 800f59e:	9304      	str	r3, [sp, #16]
 800f5a0:	9a04      	ldr	r2, [sp, #16]
 800f5a2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f5a6:	fb13 f302 	smulbb	r3, r3, r2
 800f5aa:	9a01      	ldr	r2, [sp, #4]
 800f5ac:	b29b      	uxth	r3, r3
 800f5ae:	1899      	adds	r1, r3, r2
 800f5b0:	9305      	str	r3, [sp, #20]
 800f5b2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f5b6:	b209      	sxth	r1, r1
 800f5b8:	4299      	cmp	r1, r3
 800f5ba:	db4d      	blt.n	800f658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f5bc:	8932      	ldrh	r2, [r6, #8]
 800f5be:	4413      	add	r3, r2
 800f5c0:	b21b      	sxth	r3, r3
 800f5c2:	4299      	cmp	r1, r3
 800f5c4:	da48      	bge.n	800f658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f5c6:	9b04      	ldr	r3, [sp, #16]
 800f5c8:	6827      	ldr	r7, [r4, #0]
 800f5ca:	fb17 f703 	smulbb	r7, r7, r3
 800f5ce:	9b02      	ldr	r3, [sp, #8]
 800f5d0:	b2bf      	uxth	r7, r7
 800f5d2:	18fa      	adds	r2, r7, r3
 800f5d4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f5d8:	b212      	sxth	r2, r2
 800f5da:	429a      	cmp	r2, r3
 800f5dc:	db3c      	blt.n	800f658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f5de:	8970      	ldrh	r0, [r6, #10]
 800f5e0:	4403      	add	r3, r0
 800f5e2:	b21b      	sxth	r3, r3
 800f5e4:	429a      	cmp	r2, r3
 800f5e6:	da37      	bge.n	800f658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f5e8:	2300      	movs	r3, #0
 800f5ea:	4630      	mov	r0, r6
 800f5ec:	930b      	str	r3, [sp, #44]	; 0x2c
 800f5ee:	ab0b      	add	r3, sp, #44	; 0x2c
 800f5f0:	f7ff ff36 	bl	800f460 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f5f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f5f6:	b37a      	cbz	r2, 800f658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f5f8:	4552      	cmp	r2, sl
 800f5fa:	d02d      	beq.n	800f658 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f5fc:	4611      	mov	r1, r2
 800f5fe:	a80e      	add	r0, sp, #56	; 0x38
 800f600:	9209      	str	r2, [sp, #36]	; 0x24
 800f602:	f004 fa35 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f606:	f04f 0e02 	mov.w	lr, #2
 800f60a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f60e:	9a06      	ldr	r2, [sp, #24]
 800f610:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f614:	9b01      	ldr	r3, [sp, #4]
 800f616:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f61a:	4413      	add	r3, r2
 800f61c:	9a07      	ldr	r2, [sp, #28]
 800f61e:	fb91 f1fe 	sdiv	r1, r1, lr
 800f622:	fb9c fcfe 	sdiv	ip, ip, lr
 800f626:	4401      	add	r1, r0
 800f628:	1a58      	subs	r0, r3, r1
 800f62a:	9b02      	ldr	r3, [sp, #8]
 800f62c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f630:	4413      	add	r3, r2
 800f632:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f634:	448c      	add	ip, r1
 800f636:	eba3 030c 	sub.w	r3, r3, ip
 800f63a:	435b      	muls	r3, r3
 800f63c:	fb00 3300 	mla	r3, r0, r0, r3
 800f640:	42ab      	cmp	r3, r5
 800f642:	d208      	bcs.n	800f656 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f644:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f646:	461d      	mov	r5, r3
 800f648:	9803      	ldr	r0, [sp, #12]
 800f64a:	6001      	str	r1, [r0, #0]
 800f64c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f64e:	9805      	ldr	r0, [sp, #20]
 800f650:	8008      	strh	r0, [r1, #0]
 800f652:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f654:	800f      	strh	r7, [r1, #0]
 800f656:	4692      	mov	sl, r2
 800f658:	f10b 0b01 	add.w	fp, fp, #1
 800f65c:	3408      	adds	r4, #8
 800f65e:	f1bb 0f04 	cmp.w	fp, #4
 800f662:	d19d      	bne.n	800f5a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f664:	9b00      	ldr	r3, [sp, #0]
 800f666:	9c08      	ldr	r4, [sp, #32]
 800f668:	444b      	add	r3, r9
 800f66a:	4544      	cmp	r4, r8
 800f66c:	9300      	str	r3, [sp, #0]
 800f66e:	d188      	bne.n	800f582 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f670:	b021      	add	sp, #132	; 0x84
 800f672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f676:	f04f 35ff 	mov.w	r5, #4294967295
 800f67a:	e767      	b.n	800f54c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f67c:	24001ed8 	.word	0x24001ed8
 800f680:	08024a88 	.word	0x08024a88

0800f684 <_ZN8touchgfx4RectaNERKS0_>:
 800f684:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f688:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f68c:	888c      	ldrh	r4, [r1, #4]
 800f68e:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f692:	443c      	add	r4, r7
 800f694:	b2a4      	uxth	r4, r4
 800f696:	fa0f f884 	sxth.w	r8, r4
 800f69a:	45c1      	cmp	r9, r8
 800f69c:	da2f      	bge.n	800f6fe <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f69e:	8882      	ldrh	r2, [r0, #4]
 800f6a0:	444a      	add	r2, r9
 800f6a2:	b292      	uxth	r2, r2
 800f6a4:	fa0f fe82 	sxth.w	lr, r2
 800f6a8:	4577      	cmp	r7, lr
 800f6aa:	da28      	bge.n	800f6fe <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f6ac:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f6b0:	88cb      	ldrh	r3, [r1, #6]
 800f6b2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f6b6:	442b      	add	r3, r5
 800f6b8:	b21b      	sxth	r3, r3
 800f6ba:	429e      	cmp	r6, r3
 800f6bc:	da1f      	bge.n	800f6fe <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f6be:	88c3      	ldrh	r3, [r0, #6]
 800f6c0:	4433      	add	r3, r6
 800f6c2:	b29b      	uxth	r3, r3
 800f6c4:	fa0f fc83 	sxth.w	ip, r3
 800f6c8:	4565      	cmp	r5, ip
 800f6ca:	da18      	bge.n	800f6fe <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f6cc:	454f      	cmp	r7, r9
 800f6ce:	bfb8      	it	lt
 800f6d0:	464f      	movlt	r7, r9
 800f6d2:	42b5      	cmp	r5, r6
 800f6d4:	bfb8      	it	lt
 800f6d6:	4635      	movlt	r5, r6
 800f6d8:	45f0      	cmp	r8, lr
 800f6da:	bfd8      	it	le
 800f6dc:	4622      	movle	r2, r4
 800f6de:	1bd2      	subs	r2, r2, r7
 800f6e0:	8082      	strh	r2, [r0, #4]
 800f6e2:	884a      	ldrh	r2, [r1, #2]
 800f6e4:	88c9      	ldrh	r1, [r1, #6]
 800f6e6:	8007      	strh	r7, [r0, #0]
 800f6e8:	440a      	add	r2, r1
 800f6ea:	8045      	strh	r5, [r0, #2]
 800f6ec:	b292      	uxth	r2, r2
 800f6ee:	b211      	sxth	r1, r2
 800f6f0:	458c      	cmp	ip, r1
 800f6f2:	bfa8      	it	ge
 800f6f4:	4613      	movge	r3, r2
 800f6f6:	1b5b      	subs	r3, r3, r5
 800f6f8:	80c3      	strh	r3, [r0, #6]
 800f6fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f6fe:	2300      	movs	r3, #0
 800f700:	8003      	strh	r3, [r0, #0]
 800f702:	8043      	strh	r3, [r0, #2]
 800f704:	8083      	strh	r3, [r0, #4]
 800f706:	80c3      	strh	r3, [r0, #6]
 800f708:	e7f7      	b.n	800f6fa <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f70a <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f70a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f70e:	2b00      	cmp	r3, #0
 800f710:	dd06      	ble.n	800f720 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f712:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f716:	2800      	cmp	r0, #0
 800f718:	bfcc      	ite	gt
 800f71a:	2000      	movgt	r0, #0
 800f71c:	2001      	movle	r0, #1
 800f71e:	4770      	bx	lr
 800f720:	2001      	movs	r0, #1
 800f722:	4770      	bx	lr

0800f724 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f728:	2300      	movs	r3, #0
 800f72a:	4604      	mov	r4, r0
 800f72c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f72e:	8003      	strh	r3, [r0, #0]
 800f730:	8043      	strh	r3, [r0, #2]
 800f732:	8083      	strh	r3, [r0, #4]
 800f734:	80c3      	strh	r3, [r0, #6]
 800f736:	2d00      	cmp	r5, #0
 800f738:	d040      	beq.n	800f7bc <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f73a:	1d28      	adds	r0, r5, #4
 800f73c:	f7ff ffe5 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f740:	b988      	cbnz	r0, 800f766 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f742:	4620      	mov	r0, r4
 800f744:	f7ff ffe1 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f748:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f74c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f750:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f754:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f758:	b138      	cbz	r0, 800f76a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f75a:	8022      	strh	r2, [r4, #0]
 800f75c:	8063      	strh	r3, [r4, #2]
 800f75e:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f762:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f766:	69ad      	ldr	r5, [r5, #24]
 800f768:	e7e5      	b.n	800f736 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f76a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f76e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f772:	4290      	cmp	r0, r2
 800f774:	4607      	mov	r7, r0
 800f776:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f77a:	460e      	mov	r6, r1
 800f77c:	bfa8      	it	ge
 800f77e:	4617      	movge	r7, r2
 800f780:	4299      	cmp	r1, r3
 800f782:	4472      	add	r2, lr
 800f784:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f788:	bfa8      	it	ge
 800f78a:	461e      	movge	r6, r3
 800f78c:	4440      	add	r0, r8
 800f78e:	4471      	add	r1, lr
 800f790:	4463      	add	r3, ip
 800f792:	b200      	sxth	r0, r0
 800f794:	8027      	strh	r7, [r4, #0]
 800f796:	b212      	sxth	r2, r2
 800f798:	8066      	strh	r6, [r4, #2]
 800f79a:	b209      	sxth	r1, r1
 800f79c:	b21b      	sxth	r3, r3
 800f79e:	4290      	cmp	r0, r2
 800f7a0:	bfac      	ite	ge
 800f7a2:	ebc7 0200 	rsbge	r2, r7, r0
 800f7a6:	ebc7 0202 	rsblt	r2, r7, r2
 800f7aa:	4299      	cmp	r1, r3
 800f7ac:	bfac      	ite	ge
 800f7ae:	ebc6 0301 	rsbge	r3, r6, r1
 800f7b2:	ebc6 0303 	rsblt	r3, r6, r3
 800f7b6:	80a2      	strh	r2, [r4, #4]
 800f7b8:	80e3      	strh	r3, [r4, #6]
 800f7ba:	e7d4      	b.n	800f766 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f7bc:	4620      	mov	r0, r4
 800f7be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f7c2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f7c2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f7c6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f7ca:	b383      	cbz	r3, 800f82e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f7cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f7ce:	b374      	cbz	r4, 800f82e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f7d0:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f7d4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f7d8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f7dc:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f7e0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f7e4:	b303      	cbz	r3, 800f828 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f7e6:	4668      	mov	r0, sp
 800f7e8:	1d21      	adds	r1, r4, #4
 800f7ea:	f8ad 5000 	strh.w	r5, [sp]
 800f7ee:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f7f2:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f7f6:	f8ad 8006 	strh.w	r8, [sp, #6]
 800f7fa:	f7ff ff43 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 800f7fe:	4668      	mov	r0, sp
 800f800:	f7ff ff83 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f804:	b980      	cbnz	r0, 800f828 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f806:	f8bd 3000 	ldrh.w	r3, [sp]
 800f80a:	4669      	mov	r1, sp
 800f80c:	88a2      	ldrh	r2, [r4, #4]
 800f80e:	4620      	mov	r0, r4
 800f810:	1a9b      	subs	r3, r3, r2
 800f812:	88e2      	ldrh	r2, [r4, #6]
 800f814:	f8ad 3000 	strh.w	r3, [sp]
 800f818:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f81c:	1a9b      	subs	r3, r3, r2
 800f81e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f822:	6823      	ldr	r3, [r4, #0]
 800f824:	689b      	ldr	r3, [r3, #8]
 800f826:	4798      	blx	r3
 800f828:	69a4      	ldr	r4, [r4, #24]
 800f82a:	2c00      	cmp	r4, #0
 800f82c:	d1d8      	bne.n	800f7e0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800f82e:	b002      	add	sp, #8
 800f830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f834 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800f834:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f836:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f83a:	460d      	mov	r5, r1
 800f83c:	4616      	mov	r6, r2
 800f83e:	b323      	cbz	r3, 800f88a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f840:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f842:	b314      	cbz	r4, 800f88a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f844:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f848:	b1eb      	cbz	r3, 800f886 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f84a:	6828      	ldr	r0, [r5, #0]
 800f84c:	466b      	mov	r3, sp
 800f84e:	6869      	ldr	r1, [r5, #4]
 800f850:	c303      	stmia	r3!, {r0, r1}
 800f852:	4668      	mov	r0, sp
 800f854:	1d21      	adds	r1, r4, #4
 800f856:	f7ff ff15 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 800f85a:	4668      	mov	r0, sp
 800f85c:	f7ff ff55 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f860:	b988      	cbnz	r0, 800f886 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f862:	f8bd 3000 	ldrh.w	r3, [sp]
 800f866:	4669      	mov	r1, sp
 800f868:	88a2      	ldrh	r2, [r4, #4]
 800f86a:	4620      	mov	r0, r4
 800f86c:	1a9b      	subs	r3, r3, r2
 800f86e:	88e2      	ldrh	r2, [r4, #6]
 800f870:	f8ad 3000 	strh.w	r3, [sp]
 800f874:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f878:	1a9b      	subs	r3, r3, r2
 800f87a:	4632      	mov	r2, r6
 800f87c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f880:	6823      	ldr	r3, [r4, #0]
 800f882:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800f884:	4798      	blx	r3
 800f886:	69a4      	ldr	r4, [r4, #24]
 800f888:	e7db      	b.n	800f842 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800f88a:	b002      	add	sp, #8
 800f88c:	bd70      	pop	{r4, r5, r6, pc}

0800f88e <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800f88e:	4770      	bx	lr

0800f890 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800f890:	4770      	bx	lr

0800f892 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800f892:	6803      	ldr	r3, [r0, #0]
 800f894:	b513      	push	{r0, r1, r4, lr}
 800f896:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800f89a:	2300      	movs	r3, #0
 800f89c:	e9cd 3300 	strd	r3, r3, [sp]
 800f8a0:	466b      	mov	r3, sp
 800f8a2:	47a0      	blx	r4
 800f8a4:	b002      	add	sp, #8
 800f8a6:	bd10      	pop	{r4, pc}

0800f8a8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800f8a8:	2301      	movs	r3, #1
 800f8aa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800f8ae:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800f8b2:	4770      	bx	lr

0800f8b4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800f8b4:	2301      	movs	r3, #1
 800f8b6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800f8ba:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800f8be:	4770      	bx	lr

0800f8c0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800f8c0:	6843      	ldr	r3, [r0, #4]
 800f8c2:	2201      	movs	r2, #1
 800f8c4:	725a      	strb	r2, [r3, #9]
 800f8c6:	6840      	ldr	r0, [r0, #4]
 800f8c8:	6803      	ldr	r3, [r0, #0]
 800f8ca:	691b      	ldr	r3, [r3, #16]
 800f8cc:	4718      	bx	r3

0800f8ce <_ZN8touchgfx3HAL8flushDMAEv>:
 800f8ce:	6840      	ldr	r0, [r0, #4]
 800f8d0:	6803      	ldr	r3, [r0, #0]
 800f8d2:	689b      	ldr	r3, [r3, #8]
 800f8d4:	4718      	bx	r3

0800f8d6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800f8d6:	b530      	push	{r4, r5, lr}
 800f8d8:	b08b      	sub	sp, #44	; 0x2c
 800f8da:	6804      	ldr	r4, [r0, #0]
 800f8dc:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800f8e0:	9509      	str	r5, [sp, #36]	; 0x24
 800f8e2:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800f8e6:	9508      	str	r5, [sp, #32]
 800f8e8:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800f8ec:	9507      	str	r5, [sp, #28]
 800f8ee:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800f8f2:	9506      	str	r5, [sp, #24]
 800f8f4:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800f8f8:	9505      	str	r5, [sp, #20]
 800f8fa:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800f8fe:	9504      	str	r5, [sp, #16]
 800f900:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800f904:	9503      	str	r5, [sp, #12]
 800f906:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800f90a:	9502      	str	r5, [sp, #8]
 800f90c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800f910:	e9cd 3500 	strd	r3, r5, [sp]
 800f914:	4613      	mov	r3, r2
 800f916:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800f918:	2200      	movs	r2, #0
 800f91a:	47a0      	blx	r4
 800f91c:	b00b      	add	sp, #44	; 0x2c
 800f91e:	bd30      	pop	{r4, r5, pc}

0800f920 <_ZN8touchgfx3HAL10beginFrameEv>:
 800f920:	4b04      	ldr	r3, [pc, #16]	; (800f934 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800f922:	781b      	ldrb	r3, [r3, #0]
 800f924:	b123      	cbz	r3, 800f930 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800f926:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800f92a:	f080 0001 	eor.w	r0, r0, #1
 800f92e:	4770      	bx	lr
 800f930:	2001      	movs	r0, #1
 800f932:	4770      	bx	lr
 800f934:	24001ed6 	.word	0x24001ed6

0800f938 <_ZN8touchgfx3HAL8endFrameEv>:
 800f938:	b510      	push	{r4, lr}
 800f93a:	4604      	mov	r4, r0
 800f93c:	6840      	ldr	r0, [r0, #4]
 800f93e:	6803      	ldr	r3, [r0, #0]
 800f940:	689b      	ldr	r3, [r3, #8]
 800f942:	4798      	blx	r3
 800f944:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800f948:	b113      	cbz	r3, 800f950 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800f94a:	2301      	movs	r3, #1
 800f94c:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800f950:	bd10      	pop	{r4, pc}

0800f952 <_ZN8touchgfx3HAL10initializeEv>:
 800f952:	b510      	push	{r4, lr}
 800f954:	4604      	mov	r4, r0
 800f956:	f7fe f953 	bl	800dc00 <_ZN8touchgfx10OSWrappers10initializeEv>
 800f95a:	f7fd fe5b 	bl	800d614 <_ZN8touchgfx4GPIO4initEv>
 800f95e:	6860      	ldr	r0, [r4, #4]
 800f960:	6803      	ldr	r3, [r0, #0]
 800f962:	68db      	ldr	r3, [r3, #12]
 800f964:	4798      	blx	r3
 800f966:	68e0      	ldr	r0, [r4, #12]
 800f968:	6803      	ldr	r3, [r0, #0]
 800f96a:	689b      	ldr	r3, [r3, #8]
 800f96c:	4798      	blx	r3
 800f96e:	6823      	ldr	r3, [r4, #0]
 800f970:	4620      	mov	r0, r4
 800f972:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800f974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f978:	4718      	bx	r3

0800f97a <_ZN8touchgfx3HAL9taskEntryEv>:
 800f97a:	b508      	push	{r3, lr}
 800f97c:	6803      	ldr	r3, [r0, #0]
 800f97e:	4604      	mov	r4, r0
 800f980:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f984:	4798      	blx	r3
 800f986:	6823      	ldr	r3, [r4, #0]
 800f988:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800f98a:	4620      	mov	r0, r4
 800f98c:	4798      	blx	r3
 800f98e:	f7fe f9ab 	bl	800dce8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800f992:	6823      	ldr	r3, [r4, #0]
 800f994:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800f996:	e7f8      	b.n	800f98a <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800f998 <_ZN8touchgfx3HAL4tickEv>:
 800f998:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f99a:	6803      	ldr	r3, [r0, #0]
 800f99c:	4604      	mov	r4, r0
 800f99e:	4d5b      	ldr	r5, [pc, #364]	; (800fb0c <_ZN8touchgfx3HAL4tickEv+0x174>)
 800f9a0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f9a4:	4798      	blx	r3
 800f9a6:	2800      	cmp	r0, #0
 800f9a8:	f000 8095 	beq.w	800fad6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800f9ac:	2001      	movs	r0, #1
 800f9ae:	2600      	movs	r6, #0
 800f9b0:	f7fd fe38 	bl	800d624 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800f9b4:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800f9b8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800f9bc:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800f9c0:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800f9c4:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800f9c8:	b133      	cbz	r3, 800f9d8 <_ZN8touchgfx3HAL4tickEv+0x40>
 800f9ca:	6823      	ldr	r3, [r4, #0]
 800f9cc:	4620      	mov	r0, r4
 800f9ce:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800f9d2:	4798      	blx	r3
 800f9d4:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800f9d8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800f9dc:	2601      	movs	r6, #1
 800f9de:	6862      	ldr	r2, [r4, #4]
 800f9e0:	f083 0301 	eor.w	r3, r3, #1
 800f9e4:	702e      	strb	r6, [r5, #0]
 800f9e6:	7253      	strb	r3, [r2, #9]
 800f9e8:	f002 ff2e 	bl	8012848 <_ZN8touchgfx11Application11getInstanceEv>
 800f9ec:	6803      	ldr	r3, [r0, #0]
 800f9ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f9f0:	4798      	blx	r3
 800f9f2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800f9f6:	b90b      	cbnz	r3, 800f9fc <_ZN8touchgfx3HAL4tickEv+0x64>
 800f9f8:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800f9fc:	f002 ff24 	bl	8012848 <_ZN8touchgfx11Application11getInstanceEv>
 800fa00:	6803      	ldr	r3, [r0, #0]
 800fa02:	695b      	ldr	r3, [r3, #20]
 800fa04:	4798      	blx	r3
 800fa06:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fa08:	6803      	ldr	r3, [r0, #0]
 800fa0a:	691b      	ldr	r3, [r3, #16]
 800fa0c:	4798      	blx	r3
 800fa0e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fa12:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800fa16:	3b01      	subs	r3, #1
 800fa18:	b2db      	uxtb	r3, r3
 800fa1a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fa1e:	b10a      	cbz	r2, 800fa24 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fa20:	2b00      	cmp	r3, #0
 800fa22:	d1eb      	bne.n	800f9fc <_ZN8touchgfx3HAL4tickEv+0x64>
 800fa24:	4a3a      	ldr	r2, [pc, #232]	; (800fb10 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fa26:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fa2a:	7813      	ldrb	r3, [r2, #0]
 800fa2c:	3301      	adds	r3, #1
 800fa2e:	b25b      	sxtb	r3, r3
 800fa30:	4299      	cmp	r1, r3
 800fa32:	7013      	strb	r3, [r2, #0]
 800fa34:	dc10      	bgt.n	800fa58 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fa36:	2300      	movs	r3, #0
 800fa38:	68e0      	ldr	r0, [r4, #12]
 800fa3a:	a902      	add	r1, sp, #8
 800fa3c:	7013      	strb	r3, [r2, #0]
 800fa3e:	aa03      	add	r2, sp, #12
 800fa40:	6803      	ldr	r3, [r0, #0]
 800fa42:	68db      	ldr	r3, [r3, #12]
 800fa44:	4798      	blx	r3
 800fa46:	6823      	ldr	r3, [r4, #0]
 800fa48:	2800      	cmp	r0, #0
 800fa4a:	d050      	beq.n	800faee <_ZN8touchgfx3HAL4tickEv+0x156>
 800fa4c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fa50:	4620      	mov	r0, r4
 800fa52:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fa56:	4798      	blx	r3
 800fa58:	2300      	movs	r3, #0
 800fa5a:	6960      	ldr	r0, [r4, #20]
 800fa5c:	f88d 3007 	strb.w	r3, [sp, #7]
 800fa60:	b158      	cbz	r0, 800fa7a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fa62:	6803      	ldr	r3, [r0, #0]
 800fa64:	f10d 0107 	add.w	r1, sp, #7
 800fa68:	68db      	ldr	r3, [r3, #12]
 800fa6a:	4798      	blx	r3
 800fa6c:	b128      	cbz	r0, 800fa7a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fa6e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fa70:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fa74:	6803      	ldr	r3, [r0, #0]
 800fa76:	68db      	ldr	r3, [r3, #12]
 800fa78:	4798      	blx	r3
 800fa7a:	f104 001c 	add.w	r0, r4, #28
 800fa7e:	f012 ff51 	bl	8022924 <_ZN8touchgfx8Gestures4tickEv>
 800fa82:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800fa86:	b30b      	cbz	r3, 800facc <_ZN8touchgfx3HAL4tickEv+0x134>
 800fa88:	6920      	ldr	r0, [r4, #16]
 800fa8a:	6803      	ldr	r3, [r0, #0]
 800fa8c:	691b      	ldr	r3, [r3, #16]
 800fa8e:	4798      	blx	r3
 800fa90:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fa92:	4606      	mov	r6, r0
 800fa94:	b903      	cbnz	r3, 800fa98 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fa96:	6760      	str	r0, [r4, #116]	; 0x74
 800fa98:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fa9a:	4a1e      	ldr	r2, [pc, #120]	; (800fb14 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fa9c:	1af3      	subs	r3, r6, r3
 800fa9e:	4293      	cmp	r3, r2
 800faa0:	d914      	bls.n	800facc <_ZN8touchgfx3HAL4tickEv+0x134>
 800faa2:	6920      	ldr	r0, [r4, #16]
 800faa4:	6803      	ldr	r3, [r0, #0]
 800faa6:	699b      	ldr	r3, [r3, #24]
 800faa8:	4798      	blx	r3
 800faaa:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800faac:	2264      	movs	r2, #100	; 0x64
 800faae:	1af3      	subs	r3, r6, r3
 800fab0:	fbb3 f3f2 	udiv	r3, r3, r2
 800fab4:	fbb0 f0f3 	udiv	r0, r0, r3
 800fab8:	2800      	cmp	r0, #0
 800faba:	dc1d      	bgt.n	800faf8 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fabc:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800fac0:	6920      	ldr	r0, [r4, #16]
 800fac2:	2100      	movs	r1, #0
 800fac4:	6803      	ldr	r3, [r0, #0]
 800fac6:	69db      	ldr	r3, [r3, #28]
 800fac8:	4798      	blx	r3
 800faca:	6766      	str	r6, [r4, #116]	; 0x74
 800facc:	f002 febc 	bl	8012848 <_ZN8touchgfx11Application11getInstanceEv>
 800fad0:	6803      	ldr	r3, [r0, #0]
 800fad2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fad4:	4798      	blx	r3
 800fad6:	6823      	ldr	r3, [r4, #0]
 800fad8:	4620      	mov	r0, r4
 800fada:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fade:	4798      	blx	r3
 800fae0:	2001      	movs	r0, #1
 800fae2:	f7fd fdbb 	bl	800d65c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fae6:	2300      	movs	r3, #0
 800fae8:	702b      	strb	r3, [r5, #0]
 800faea:	b004      	add	sp, #16
 800faec:	bd70      	pop	{r4, r5, r6, pc}
 800faee:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800faf2:	4620      	mov	r0, r4
 800faf4:	4798      	blx	r3
 800faf6:	e7af      	b.n	800fa58 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800faf8:	2863      	cmp	r0, #99	; 0x63
 800fafa:	bfcb      	itete	gt
 800fafc:	2300      	movgt	r3, #0
 800fafe:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800fb02:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800fb06:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800fb0a:	e7d9      	b.n	800fac0 <_ZN8touchgfx3HAL4tickEv+0x128>
 800fb0c:	24001edc 	.word	0x24001edc
 800fb10:	24001edd 	.word	0x24001edd
 800fb14:	05f5e100 	.word	0x05f5e100

0800fb18 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fb18:	b510      	push	{r4, lr}
 800fb1a:	4604      	mov	r4, r0
 800fb1c:	f7fe f898 	bl	800dc50 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fb20:	2200      	movs	r2, #0
 800fb22:	6863      	ldr	r3, [r4, #4]
 800fb24:	729a      	strb	r2, [r3, #10]
 800fb26:	bd10      	pop	{r4, pc}

0800fb28 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fb28:	65c1      	str	r1, [r0, #92]	; 0x5c
 800fb2a:	301c      	adds	r0, #28
 800fb2c:	f012 bef8 	b.w	8022920 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fb30 <_ZN8touchgfx3HAL5touchEll>:
 800fb30:	b530      	push	{r4, r5, lr}
 800fb32:	b087      	sub	sp, #28
 800fb34:	4604      	mov	r4, r0
 800fb36:	a804      	add	r0, sp, #16
 800fb38:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800fb3c:	f002 fc76 	bl	801242c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800fb40:	9b04      	ldr	r3, [sp, #16]
 800fb42:	a906      	add	r1, sp, #24
 800fb44:	a803      	add	r0, sp, #12
 800fb46:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fb4a:	9b05      	ldr	r3, [sp, #20]
 800fb4c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800fb50:	f002 fcbe 	bl	80124d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800fb54:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800fb58:	f104 001c 	add.w	r0, r4, #28
 800fb5c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fb60:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800fb64:	b189      	cbz	r1, 800fb8a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800fb66:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800fb6a:	9300      	str	r3, [sp, #0]
 800fb6c:	4613      	mov	r3, r2
 800fb6e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800fb72:	462a      	mov	r2, r5
 800fb74:	f012 fee4 	bl	8022940 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800fb78:	b128      	cbz	r0, 800fb86 <_ZN8touchgfx3HAL5touchEll+0x56>
 800fb7a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fb7e:	6623      	str	r3, [r4, #96]	; 0x60
 800fb80:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fb84:	6663      	str	r3, [r4, #100]	; 0x64
 800fb86:	b007      	add	sp, #28
 800fb88:	bd30      	pop	{r4, r5, pc}
 800fb8a:	f012 ff19 	bl	80229c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fb8e:	2301      	movs	r3, #1
 800fb90:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fb94:	e7f1      	b.n	800fb7a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800fb96 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800fb96:	b510      	push	{r4, lr}
 800fb98:	2b00      	cmp	r3, #0
 800fb9a:	d046      	beq.n	800fc2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fb9c:	ea81 0002 	eor.w	r0, r1, r2
 800fba0:	07c4      	lsls	r4, r0, #31
 800fba2:	d508      	bpl.n	800fbb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800fba4:	440b      	add	r3, r1
 800fba6:	3a01      	subs	r2, #1
 800fba8:	428b      	cmp	r3, r1
 800fbaa:	d93e      	bls.n	800fc2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fbac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fbb0:	f801 0b01 	strb.w	r0, [r1], #1
 800fbb4:	e7f8      	b.n	800fba8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800fbb6:	07d0      	lsls	r0, r2, #31
 800fbb8:	bf42      	ittt	mi
 800fbba:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800fbbe:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800fbc2:	f801 0b01 	strbmi.w	r0, [r1], #1
 800fbc6:	2b01      	cmp	r3, #1
 800fbc8:	d911      	bls.n	800fbee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fbca:	ea81 0402 	eor.w	r4, r1, r2
 800fbce:	4610      	mov	r0, r2
 800fbd0:	07a4      	lsls	r4, r4, #30
 800fbd2:	d022      	beq.n	800fc1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800fbd4:	f023 0401 	bic.w	r4, r3, #1
 800fbd8:	440c      	add	r4, r1
 800fbda:	428c      	cmp	r4, r1
 800fbdc:	4602      	mov	r2, r0
 800fbde:	d904      	bls.n	800fbea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800fbe0:	8812      	ldrh	r2, [r2, #0]
 800fbe2:	3002      	adds	r0, #2
 800fbe4:	f821 2b02 	strh.w	r2, [r1], #2
 800fbe8:	e7f7      	b.n	800fbda <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800fbea:	f003 0301 	and.w	r3, r3, #1
 800fbee:	f023 0003 	bic.w	r0, r3, #3
 800fbf2:	4408      	add	r0, r1
 800fbf4:	4288      	cmp	r0, r1
 800fbf6:	4614      	mov	r4, r2
 800fbf8:	d904      	bls.n	800fc04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800fbfa:	6824      	ldr	r4, [r4, #0]
 800fbfc:	3204      	adds	r2, #4
 800fbfe:	f841 4b04 	str.w	r4, [r1], #4
 800fc02:	e7f7      	b.n	800fbf4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800fc04:	f003 0303 	and.w	r3, r3, #3
 800fc08:	3a01      	subs	r2, #1
 800fc0a:	440b      	add	r3, r1
 800fc0c:	428b      	cmp	r3, r1
 800fc0e:	d90c      	bls.n	800fc2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fc10:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fc14:	f801 0b01 	strb.w	r0, [r1], #1
 800fc18:	e7f8      	b.n	800fc0c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800fc1a:	0790      	lsls	r0, r2, #30
 800fc1c:	d0e7      	beq.n	800fbee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fc1e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800fc22:	3b02      	subs	r3, #2
 800fc24:	f821 0b02 	strh.w	r0, [r1], #2
 800fc28:	e7e1      	b.n	800fbee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fc2a:	2001      	movs	r0, #1
 800fc2c:	bd10      	pop	{r4, pc}

0800fc2e <_ZN8touchgfx3HAL7noTouchEv>:
 800fc2e:	b510      	push	{r4, lr}
 800fc30:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800fc34:	4604      	mov	r4, r0
 800fc36:	b153      	cbz	r3, 800fc4e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800fc38:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800fc3c:	2101      	movs	r1, #1
 800fc3e:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800fc42:	301c      	adds	r0, #28
 800fc44:	f012 febc 	bl	80229c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fc48:	2300      	movs	r3, #0
 800fc4a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fc4e:	bd10      	pop	{r4, pc}

0800fc50 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800fc50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc54:	b085      	sub	sp, #20
 800fc56:	4604      	mov	r4, r0
 800fc58:	2000      	movs	r0, #0
 800fc5a:	4699      	mov	r9, r3
 800fc5c:	ad04      	add	r5, sp, #16
 800fc5e:	460f      	mov	r7, r1
 800fc60:	4690      	mov	r8, r2
 800fc62:	f845 0d04 	str.w	r0, [r5, #-4]!
 800fc66:	69a0      	ldr	r0, [r4, #24]
 800fc68:	6806      	ldr	r6, [r0, #0]
 800fc6a:	9501      	str	r5, [sp, #4]
 800fc6c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800fc70:	9500      	str	r5, [sp, #0]
 800fc72:	6835      	ldr	r5, [r6, #0]
 800fc74:	47a8      	blx	r5
 800fc76:	4d10      	ldr	r5, [pc, #64]	; (800fcb8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800fc78:	4606      	mov	r6, r0
 800fc7a:	f8a5 9000 	strh.w	r9, [r5]
 800fc7e:	f7fb ff55 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 800fc82:	6803      	ldr	r3, [r0, #0]
 800fc84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc86:	4798      	blx	r3
 800fc88:	b128      	cbz	r0, 800fc96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800fc8a:	2801      	cmp	r0, #1
 800fc8c:	d00b      	beq.n	800fca6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800fc8e:	4630      	mov	r0, r6
 800fc90:	b005      	add	sp, #20
 800fc92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fc96:	882b      	ldrh	r3, [r5, #0]
 800fc98:	fb08 7203 	mla	r2, r8, r3, r7
 800fc9c:	9b03      	ldr	r3, [sp, #12]
 800fc9e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800fca2:	63e3      	str	r3, [r4, #60]	; 0x3c
 800fca4:	e7f3      	b.n	800fc8e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fca6:	882a      	ldrh	r2, [r5, #0]
 800fca8:	9b03      	ldr	r3, [sp, #12]
 800fcaa:	fb08 7202 	mla	r2, r8, r2, r7
 800fcae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800fcb2:	1a9a      	subs	r2, r3, r2
 800fcb4:	63e2      	str	r2, [r4, #60]	; 0x3c
 800fcb6:	e7ea      	b.n	800fc8e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fcb8:	24001ed2 	.word	0x24001ed2

0800fcbc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800fcbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fcbe:	b08b      	sub	sp, #44	; 0x2c
 800fcc0:	4617      	mov	r7, r2
 800fcc2:	4604      	mov	r4, r0
 800fcc4:	460e      	mov	r6, r1
 800fcc6:	461d      	mov	r5, r3
 800fcc8:	f7fb ff30 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 800fccc:	6803      	ldr	r3, [r0, #0]
 800fcce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fcd0:	4798      	blx	r3
 800fcd2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800fcd6:	9007      	str	r0, [sp, #28]
 800fcd8:	4631      	mov	r1, r6
 800fcda:	6822      	ldr	r2, [r4, #0]
 800fcdc:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fce0:	4b0c      	ldr	r3, [pc, #48]	; (800fd14 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800fce2:	4620      	mov	r0, r4
 800fce4:	881b      	ldrh	r3, [r3, #0]
 800fce6:	9306      	str	r3, [sp, #24]
 800fce8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800fcec:	9305      	str	r3, [sp, #20]
 800fcee:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800fcf2:	9304      	str	r3, [sp, #16]
 800fcf4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fcf8:	9303      	str	r3, [sp, #12]
 800fcfa:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fcfe:	9302      	str	r3, [sp, #8]
 800fd00:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800fd04:	e9cd 5300 	strd	r5, r3, [sp]
 800fd08:	463b      	mov	r3, r7
 800fd0a:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800fd0c:	2200      	movs	r2, #0
 800fd0e:	47a8      	blx	r5
 800fd10:	b00b      	add	sp, #44	; 0x2c
 800fd12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fd14:	24001ed2 	.word	0x24001ed2

0800fd18 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800fd18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd1c:	4698      	mov	r8, r3
 800fd1e:	6803      	ldr	r3, [r0, #0]
 800fd20:	b08b      	sub	sp, #44	; 0x2c
 800fd22:	4617      	mov	r7, r2
 800fd24:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800fd26:	460e      	mov	r6, r1
 800fd28:	4b13      	ldr	r3, [pc, #76]	; (800fd78 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800fd2a:	4604      	mov	r4, r0
 800fd2c:	f8b3 9000 	ldrh.w	r9, [r3]
 800fd30:	f7fb fefc 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 800fd34:	6803      	ldr	r3, [r0, #0]
 800fd36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd38:	4798      	blx	r3
 800fd3a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800fd3e:	2200      	movs	r2, #0
 800fd40:	4631      	mov	r1, r6
 800fd42:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fd46:	2302      	movs	r3, #2
 800fd48:	4620      	mov	r0, r4
 800fd4a:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800fd4e:	2301      	movs	r3, #1
 800fd50:	9305      	str	r3, [sp, #20]
 800fd52:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800fd56:	9304      	str	r3, [sp, #16]
 800fd58:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800fd5c:	9303      	str	r3, [sp, #12]
 800fd5e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800fd62:	9302      	str	r3, [sp, #8]
 800fd64:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fd68:	e9cd 8300 	strd	r8, r3, [sp]
 800fd6c:	463b      	mov	r3, r7
 800fd6e:	47a8      	blx	r5
 800fd70:	b00b      	add	sp, #44	; 0x2c
 800fd72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fd76:	bf00      	nop
 800fd78:	24001ed2 	.word	0x24001ed2

0800fd7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800fd7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd80:	4698      	mov	r8, r3
 800fd82:	6803      	ldr	r3, [r0, #0]
 800fd84:	b087      	sub	sp, #28
 800fd86:	460e      	mov	r6, r1
 800fd88:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800fd8a:	4617      	mov	r7, r2
 800fd8c:	4b0f      	ldr	r3, [pc, #60]	; (800fdcc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800fd8e:	4604      	mov	r4, r0
 800fd90:	f8b3 9000 	ldrh.w	r9, [r3]
 800fd94:	f7fb feca 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 800fd98:	6803      	ldr	r3, [r0, #0]
 800fd9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd9c:	4798      	blx	r3
 800fd9e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800fda2:	463a      	mov	r2, r7
 800fda4:	4631      	mov	r1, r6
 800fda6:	f8cd 900c 	str.w	r9, [sp, #12]
 800fdaa:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800fdae:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800fdb2:	4620      	mov	r0, r4
 800fdb4:	9302      	str	r3, [sp, #8]
 800fdb6:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800fdba:	9301      	str	r3, [sp, #4]
 800fdbc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800fdc0:	9300      	str	r3, [sp, #0]
 800fdc2:	4643      	mov	r3, r8
 800fdc4:	47a8      	blx	r5
 800fdc6:	b007      	add	sp, #28
 800fdc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fdcc:	24001ed2 	.word	0x24001ed2

0800fdd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800fdd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fdd4:	4604      	mov	r4, r0
 800fdd6:	b08f      	sub	sp, #60	; 0x3c
 800fdd8:	4610      	mov	r0, r2
 800fdda:	460d      	mov	r5, r1
 800fddc:	4691      	mov	r9, r2
 800fdde:	461e      	mov	r6, r3
 800fde0:	f005 f97a 	bl	80150d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800fde4:	2800      	cmp	r0, #0
 800fde6:	f000 809d 	beq.w	800ff24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800fdea:	6823      	ldr	r3, [r4, #0]
 800fdec:	4620      	mov	r0, r4
 800fdee:	f8df b198 	ldr.w	fp, [pc, #408]	; 800ff88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800fdf2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800fdf6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fdf8:	4798      	blx	r3
 800fdfa:	6823      	ldr	r3, [r4, #0]
 800fdfc:	4620      	mov	r0, r4
 800fdfe:	f8df a18c 	ldr.w	sl, [pc, #396]	; 800ff8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800fe02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe04:	4798      	blx	r3
 800fe06:	f8bb 3000 	ldrh.w	r3, [fp]
 800fe0a:	4f5c      	ldr	r7, [pc, #368]	; (800ff7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fe0c:	9301      	str	r3, [sp, #4]
 800fe0e:	f8ba 3000 	ldrh.w	r3, [sl]
 800fe12:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800fe16:	4640      	mov	r0, r8
 800fe18:	9302      	str	r3, [sp, #8]
 800fe1a:	883b      	ldrh	r3, [r7, #0]
 800fe1c:	9303      	str	r3, [sp, #12]
 800fe1e:	4b58      	ldr	r3, [pc, #352]	; (800ff80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800fe20:	881a      	ldrh	r2, [r3, #0]
 800fe22:	9305      	str	r3, [sp, #20]
 800fe24:	9204      	str	r2, [sp, #16]
 800fe26:	f005 f9eb 	bl	8015200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fe2a:	8038      	strh	r0, [r7, #0]
 800fe2c:	4640      	mov	r0, r8
 800fe2e:	f005 fa1b 	bl	8015268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fe32:	9b05      	ldr	r3, [sp, #20]
 800fe34:	b280      	uxth	r0, r0
 800fe36:	8018      	strh	r0, [r3, #0]
 800fe38:	4b52      	ldr	r3, [pc, #328]	; (800ff84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800fe3a:	781b      	ldrb	r3, [r3, #0]
 800fe3c:	2b00      	cmp	r3, #0
 800fe3e:	d174      	bne.n	800ff2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800fe40:	883b      	ldrh	r3, [r7, #0]
 800fe42:	f8aa 0000 	strh.w	r0, [sl]
 800fe46:	f8ab 3000 	strh.w	r3, [fp]
 800fe4a:	4648      	mov	r0, r9
 800fe4c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800fe50:	f005 f942 	bl	80150d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800fe54:	2200      	movs	r2, #0
 800fe56:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800fe5a:	4611      	mov	r1, r2
 800fe5c:	4628      	mov	r0, r5
 800fe5e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800fe62:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800fe66:	f7fc fbd0 	bl	800c60a <_ZN8touchgfx8Drawable5setXYEss>
 800fe6a:	2301      	movs	r3, #1
 800fe6c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800fe70:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800fe74:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fe78:	2b00      	cmp	r3, #0
 800fe7a:	dd5c      	ble.n	800ff36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800fe7c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fe80:	2b00      	cmp	r3, #0
 800fe82:	dd58      	ble.n	800ff36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800fe84:	462a      	mov	r2, r5
 800fe86:	ab0a      	add	r3, sp, #40	; 0x28
 800fe88:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800fe8c:	6851      	ldr	r1, [r2, #4]
 800fe8e:	c303      	stmia	r3!, {r0, r1}
 800fe90:	4631      	mov	r1, r6
 800fe92:	a80a      	add	r0, sp, #40	; 0x28
 800fe94:	f7ff fbf6 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 800fe98:	4b38      	ldr	r3, [pc, #224]	; (800ff7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800fe9a:	2100      	movs	r1, #0
 800fe9c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fea0:	4b37      	ldr	r3, [pc, #220]	; (800ff80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800fea2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800fea6:	aa0a      	add	r2, sp, #40	; 0x28
 800fea8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800feac:	910c      	str	r1, [sp, #48]	; 0x30
 800feae:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800feb2:	ab08      	add	r3, sp, #32
 800feb4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800feb8:	e883 0003 	stmia.w	r3, {r0, r1}
 800febc:	4618      	mov	r0, r3
 800febe:	a90c      	add	r1, sp, #48	; 0x30
 800fec0:	f7ff fbe0 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 800fec4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800fec6:	2b00      	cmp	r3, #0
 800fec8:	d13c      	bne.n	800ff44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800feca:	2000      	movs	r0, #0
 800fecc:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800fed0:	2600      	movs	r6, #0
 800fed2:	696b      	ldr	r3, [r5, #20]
 800fed4:	a908      	add	r1, sp, #32
 800fed6:	682a      	ldr	r2, [r5, #0]
 800fed8:	4628      	mov	r0, r5
 800feda:	9305      	str	r3, [sp, #20]
 800fedc:	616e      	str	r6, [r5, #20]
 800fede:	6892      	ldr	r2, [r2, #8]
 800fee0:	4790      	blx	r2
 800fee2:	9b05      	ldr	r3, [sp, #20]
 800fee4:	4652      	mov	r2, sl
 800fee6:	4649      	mov	r1, r9
 800fee8:	616b      	str	r3, [r5, #20]
 800feea:	4628      	mov	r0, r5
 800feec:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800fef0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800fef4:	f7fc fb89 	bl	800c60a <_ZN8touchgfx8Drawable5setXYEss>
 800fef8:	9a01      	ldr	r2, [sp, #4]
 800fefa:	4b23      	ldr	r3, [pc, #140]	; (800ff88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800fefc:	4620      	mov	r0, r4
 800fefe:	801a      	strh	r2, [r3, #0]
 800ff00:	9a02      	ldr	r2, [sp, #8]
 800ff02:	4b22      	ldr	r3, [pc, #136]	; (800ff8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800ff04:	801a      	strh	r2, [r3, #0]
 800ff06:	9a03      	ldr	r2, [sp, #12]
 800ff08:	4b1c      	ldr	r3, [pc, #112]	; (800ff7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ff0a:	801a      	strh	r2, [r3, #0]
 800ff0c:	4b1c      	ldr	r3, [pc, #112]	; (800ff80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ff0e:	9a04      	ldr	r2, [sp, #16]
 800ff10:	801a      	strh	r2, [r3, #0]
 800ff12:	6823      	ldr	r3, [r4, #0]
 800ff14:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800ff18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ff1a:	4798      	blx	r3
 800ff1c:	6823      	ldr	r3, [r4, #0]
 800ff1e:	4620      	mov	r0, r4
 800ff20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff22:	4798      	blx	r3
 800ff24:	b00f      	add	sp, #60	; 0x3c
 800ff26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff2a:	883b      	ldrh	r3, [r7, #0]
 800ff2c:	f8ab 0000 	strh.w	r0, [fp]
 800ff30:	f8aa 3000 	strh.w	r3, [sl]
 800ff34:	e789      	b.n	800fe4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800ff36:	462a      	mov	r2, r5
 800ff38:	ab0a      	add	r3, sp, #40	; 0x28
 800ff3a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ff3e:	6851      	ldr	r1, [r2, #4]
 800ff40:	c303      	stmia	r3!, {r0, r1}
 800ff42:	e7a9      	b.n	800fe98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800ff44:	a807      	add	r0, sp, #28
 800ff46:	f005 facb 	bl	80154e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ff4a:	4606      	mov	r6, r0
 800ff4c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800ff4e:	6803      	ldr	r3, [r0, #0]
 800ff50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff52:	4798      	blx	r3
 800ff54:	4286      	cmp	r6, r0
 800ff56:	d1b8      	bne.n	800feca <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800ff58:	f7fb fde8 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 800ff5c:	6803      	ldr	r3, [r0, #0]
 800ff5e:	4606      	mov	r6, r0
 800ff60:	a807      	add	r0, sp, #28
 800ff62:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ff64:	9305      	str	r3, [sp, #20]
 800ff66:	f005 fabb 	bl	80154e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ff6a:	9b05      	ldr	r3, [sp, #20]
 800ff6c:	4601      	mov	r1, r0
 800ff6e:	4630      	mov	r0, r6
 800ff70:	4798      	blx	r3
 800ff72:	f080 0001 	eor.w	r0, r0, #1
 800ff76:	b2c0      	uxtb	r0, r0
 800ff78:	e7a8      	b.n	800fecc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800ff7a:	bf00      	nop
 800ff7c:	24001ecc 	.word	0x24001ecc
 800ff80:	24001ece 	.word	0x24001ece
 800ff84:	24001ed0 	.word	0x24001ed0
 800ff88:	24001ed2 	.word	0x24001ed2
 800ff8c:	24001ed4 	.word	0x24001ed4

0800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800ff90:	4b07      	ldr	r3, [pc, #28]	; (800ffb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800ff92:	b510      	push	{r4, lr}
 800ff94:	781b      	ldrb	r3, [r3, #0]
 800ff96:	4604      	mov	r4, r0
 800ff98:	b13b      	cbz	r3, 800ffaa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ff9a:	6803      	ldr	r3, [r0, #0]
 800ff9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ff9e:	4798      	blx	r3
 800ffa0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ffa2:	4283      	cmp	r3, r0
 800ffa4:	d101      	bne.n	800ffaa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ffa6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800ffa8:	bd10      	pop	{r4, pc}
 800ffaa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ffac:	e7fc      	b.n	800ffa8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ffae:	bf00      	nop
 800ffb0:	24001ed6 	.word	0x24001ed6

0800ffb4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ffb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffb8:	461d      	mov	r5, r3
 800ffba:	b08a      	sub	sp, #40	; 0x28
 800ffbc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ffc0:	4690      	mov	r8, r2
 800ffc2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800ffc6:	2400      	movs	r4, #0
 800ffc8:	4607      	mov	r7, r0
 800ffca:	fb06 8505 	mla	r5, r6, r5, r8
 800ffce:	9404      	str	r4, [sp, #16]
 800ffd0:	f88d 4020 	strb.w	r4, [sp, #32]
 800ffd4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ffd8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ffdc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ffe0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ffe4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ffe8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ffec:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fff0:	f7ff ffce 	bl	800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800fff4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800fff8:	6878      	ldr	r0, [r7, #4]
 800fffa:	f8ad 601e 	strh.w	r6, [sp, #30]
 800fffe:	a901      	add	r1, sp, #4
 8010000:	9505      	str	r5, [sp, #20]
 8010002:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010006:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 801000a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801000e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010012:	6803      	ldr	r3, [r0, #0]
 8010014:	685b      	ldr	r3, [r3, #4]
 8010016:	4798      	blx	r3
 8010018:	b00a      	add	sp, #40	; 0x28
 801001a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801001e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801001e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010022:	b08b      	sub	sp, #44	; 0x2c
 8010024:	2400      	movs	r4, #0
 8010026:	4691      	mov	r9, r2
 8010028:	461d      	mov	r5, r3
 801002a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801002e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010032:	4688      	mov	r8, r1
 8010034:	4607      	mov	r7, r0
 8010036:	9404      	str	r4, [sp, #16]
 8010038:	fb06 9505 	mla	r5, r6, r5, r9
 801003c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010040:	f7ff ffa6 	bl	800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010044:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010048:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801004c:	6878      	ldr	r0, [r7, #4]
 801004e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010052:	a901      	add	r1, sp, #4
 8010054:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010058:	9505      	str	r5, [sp, #20]
 801005a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801005e:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010062:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010066:	f8cd 8010 	str.w	r8, [sp, #16]
 801006a:	f8ad 4020 	strh.w	r4, [sp, #32]
 801006e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010072:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010076:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 801007a:	6803      	ldr	r3, [r0, #0]
 801007c:	685b      	ldr	r3, [r3, #4]
 801007e:	4798      	blx	r3
 8010080:	b00b      	add	sp, #44	; 0x2c
 8010082:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010088 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010088:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801008c:	b08a      	sub	sp, #40	; 0x28
 801008e:	4698      	mov	r8, r3
 8010090:	2300      	movs	r3, #0
 8010092:	4606      	mov	r6, r0
 8010094:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8010098:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801009c:	2d0b      	cmp	r5, #11
 801009e:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80100a2:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80100a6:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80100aa:	9304      	str	r3, [sp, #16]
 80100ac:	d137      	bne.n	801011e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 80100ae:	2380      	movs	r3, #128	; 0x80
 80100b0:	f88d 0020 	strb.w	r0, [sp, #32]
 80100b4:	4630      	mov	r0, r6
 80100b6:	9203      	str	r2, [sp, #12]
 80100b8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80100bc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80100c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80100c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80100c8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80100cc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80100d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80100d4:	f7ff ff5c 	bl	800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80100d8:	2c0b      	cmp	r4, #11
 80100da:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80100de:	f8ad 701e 	strh.w	r7, [sp, #30]
 80100e2:	bf94      	ite	ls
 80100e4:	4b19      	ldrls	r3, [pc, #100]	; (801014c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80100e6:	2100      	movhi	r1, #0
 80100e8:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80100ec:	bf98      	it	ls
 80100ee:	5d19      	ldrbls	r1, [r3, r4]
 80100f0:	fb02 8307 	mla	r3, r2, r7, r8
 80100f4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80100f8:	10c9      	asrs	r1, r1, #3
 80100fa:	fb01 0003 	mla	r0, r1, r3, r0
 80100fe:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010102:	a901      	add	r1, sp, #4
 8010104:	9005      	str	r0, [sp, #20]
 8010106:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801010a:	2300      	movs	r3, #0
 801010c:	6870      	ldr	r0, [r6, #4]
 801010e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010112:	6803      	ldr	r3, [r0, #0]
 8010114:	685b      	ldr	r3, [r3, #4]
 8010116:	4798      	blx	r3
 8010118:	b00a      	add	sp, #40	; 0x28
 801011a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801011e:	2d02      	cmp	r5, #2
 8010120:	d109      	bne.n	8010136 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 8010122:	28ff      	cmp	r0, #255	; 0xff
 8010124:	d105      	bne.n	8010132 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8010126:	f1bc 0f00 	cmp.w	ip, #0
 801012a:	bf14      	ite	ne
 801012c:	2340      	movne	r3, #64	; 0x40
 801012e:	2320      	moveq	r3, #32
 8010130:	e7be      	b.n	80100b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010132:	2340      	movs	r3, #64	; 0x40
 8010134:	e7bc      	b.n	80100b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010136:	28ff      	cmp	r0, #255	; 0xff
 8010138:	d105      	bne.n	8010146 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 801013a:	f1bc 0f00 	cmp.w	ip, #0
 801013e:	bf14      	ite	ne
 8010140:	2304      	movne	r3, #4
 8010142:	2301      	moveq	r3, #1
 8010144:	e7b4      	b.n	80100b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010146:	2304      	movs	r3, #4
 8010148:	e7b2      	b.n	80100b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801014a:	bf00      	nop
 801014c:	0802531c 	.word	0x0802531c

08010150 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010154:	b08b      	sub	sp, #44	; 0x2c
 8010156:	461d      	mov	r5, r3
 8010158:	2400      	movs	r4, #0
 801015a:	4688      	mov	r8, r1
 801015c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010160:	4693      	mov	fp, r2
 8010162:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010166:	4607      	mov	r7, r0
 8010168:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801016c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010170:	9404      	str	r4, [sp, #16]
 8010172:	bf14      	ite	ne
 8010174:	2308      	movne	r3, #8
 8010176:	2302      	moveq	r3, #2
 8010178:	fb05 b50a 	mla	r5, r5, sl, fp
 801017c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010180:	f7ff ff06 	bl	800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010184:	2e0b      	cmp	r6, #11
 8010186:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801018a:	a901      	add	r1, sp, #4
 801018c:	bf98      	it	ls
 801018e:	4b13      	ldrls	r3, [pc, #76]	; (80101dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010190:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010194:	bf98      	it	ls
 8010196:	5d9c      	ldrbls	r4, [r3, r6]
 8010198:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801019c:	10e4      	asrs	r4, r4, #3
 801019e:	f8cd 8010 	str.w	r8, [sp, #16]
 80101a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80101a6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80101aa:	fb04 0405 	mla	r4, r4, r5, r0
 80101ae:	6878      	ldr	r0, [r7, #4]
 80101b0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80101b4:	2300      	movs	r3, #0
 80101b6:	9405      	str	r4, [sp, #20]
 80101b8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80101bc:	f88d 9020 	strb.w	r9, [sp, #32]
 80101c0:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80101c4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80101c8:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80101cc:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80101d0:	6803      	ldr	r3, [r0, #0]
 80101d2:	685b      	ldr	r3, [r3, #4]
 80101d4:	4798      	blx	r3
 80101d6:	b00b      	add	sp, #44	; 0x2c
 80101d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101dc:	0802531c 	.word	0x0802531c

080101e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80101e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101e4:	461e      	mov	r6, r3
 80101e6:	4b0a      	ldr	r3, [pc, #40]	; (8010210 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80101e8:	460f      	mov	r7, r1
 80101ea:	4690      	mov	r8, r2
 80101ec:	881d      	ldrh	r5, [r3, #0]
 80101ee:	f7fb fc9d 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 80101f2:	6803      	ldr	r3, [r0, #0]
 80101f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80101f6:	4798      	blx	r3
 80101f8:	280b      	cmp	r0, #11
 80101fa:	bf96      	itet	ls
 80101fc:	4b05      	ldrls	r3, [pc, #20]	; (8010214 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80101fe:	2400      	movhi	r4, #0
 8010200:	5c1c      	ldrbls	r4, [r3, r0]
 8010202:	fb08 7005 	mla	r0, r8, r5, r7
 8010206:	10e4      	asrs	r4, r4, #3
 8010208:	fb04 6000 	mla	r0, r4, r0, r6
 801020c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010210:	24001ed2 	.word	0x24001ed2
 8010214:	0802531c 	.word	0x0802531c

08010218 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010218:	b5f0      	push	{r4, r5, r6, r7, lr}
 801021a:	b08b      	sub	sp, #44	; 0x2c
 801021c:	461f      	mov	r7, r3
 801021e:	4604      	mov	r4, r0
 8010220:	4616      	mov	r6, r2
 8010222:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010226:	2500      	movs	r5, #0
 8010228:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801022c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010230:	9504      	str	r5, [sp, #16]
 8010232:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010236:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801023a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801023e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010242:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010246:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801024a:	f88d 3020 	strb.w	r3, [sp, #32]
 801024e:	f7ff fe9f 	bl	800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010252:	463a      	mov	r2, r7
 8010254:	4631      	mov	r1, r6
 8010256:	4603      	mov	r3, r0
 8010258:	4620      	mov	r0, r4
 801025a:	f7ff ffc1 	bl	80101e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801025e:	4b0e      	ldr	r3, [pc, #56]	; (8010298 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010260:	9005      	str	r0, [sp, #20]
 8010262:	881b      	ldrh	r3, [r3, #0]
 8010264:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010268:	f7fb fc60 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 801026c:	6803      	ldr	r3, [r0, #0]
 801026e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010270:	4798      	blx	r3
 8010272:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010274:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010278:	a901      	add	r1, sp, #4
 801027a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801027e:	9304      	str	r3, [sp, #16]
 8010280:	6860      	ldr	r0, [r4, #4]
 8010282:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010286:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801028a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801028e:	6803      	ldr	r3, [r0, #0]
 8010290:	685b      	ldr	r3, [r3, #4]
 8010292:	4798      	blx	r3
 8010294:	b00b      	add	sp, #44	; 0x2c
 8010296:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010298:	24001ed2 	.word	0x24001ed2

0801029c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801029c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801029e:	b08d      	sub	sp, #52	; 0x34
 80102a0:	2501      	movs	r5, #1
 80102a2:	4604      	mov	r4, r0
 80102a4:	466b      	mov	r3, sp
 80102a6:	9503      	str	r5, [sp, #12]
 80102a8:	e883 0006 	stmia.w	r3, {r1, r2}
 80102ac:	2300      	movs	r3, #0
 80102ae:	f8bd 6000 	ldrh.w	r6, [sp]
 80102b2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80102b6:	9306      	str	r3, [sp, #24]
 80102b8:	6803      	ldr	r3, [r0, #0]
 80102ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80102bc:	4798      	blx	r3
 80102be:	463a      	mov	r2, r7
 80102c0:	4631      	mov	r1, r6
 80102c2:	4603      	mov	r3, r0
 80102c4:	4620      	mov	r0, r4
 80102c6:	f7ff ff8b 	bl	80101e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80102ca:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80102cc:	9004      	str	r0, [sp, #16]
 80102ce:	9307      	str	r3, [sp, #28]
 80102d0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80102d4:	f8ad 3020 	strh.w	r3, [sp, #32]
 80102d8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80102dc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80102e0:	4b0e      	ldr	r3, [pc, #56]	; (801031c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80102e2:	881b      	ldrh	r3, [r3, #0]
 80102e4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80102e8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80102ec:	f7fb fc1e 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 80102f0:	6803      	ldr	r3, [r0, #0]
 80102f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80102f4:	4798      	blx	r3
 80102f6:	23ff      	movs	r3, #255	; 0xff
 80102f8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80102fc:	a903      	add	r1, sp, #12
 80102fe:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010302:	6860      	ldr	r0, [r4, #4]
 8010304:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010308:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801030c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010310:	6803      	ldr	r3, [r0, #0]
 8010312:	685b      	ldr	r3, [r3, #4]
 8010314:	4798      	blx	r3
 8010316:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010318:	b00d      	add	sp, #52	; 0x34
 801031a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801031c:	24001ed2 	.word	0x24001ed2

08010320 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010320:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010324:	b08c      	sub	sp, #48	; 0x30
 8010326:	461e      	mov	r6, r3
 8010328:	2300      	movs	r3, #0
 801032a:	4604      	mov	r4, r0
 801032c:	466d      	mov	r5, sp
 801032e:	9306      	str	r3, [sp, #24]
 8010330:	6803      	ldr	r3, [r0, #0]
 8010332:	e885 0006 	stmia.w	r5, {r1, r2}
 8010336:	2501      	movs	r5, #1
 8010338:	f8bd 7000 	ldrh.w	r7, [sp]
 801033c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010340:	9503      	str	r5, [sp, #12]
 8010342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010344:	4798      	blx	r3
 8010346:	4642      	mov	r2, r8
 8010348:	4639      	mov	r1, r7
 801034a:	4603      	mov	r3, r0
 801034c:	4620      	mov	r0, r4
 801034e:	f7ff ff47 	bl	80101e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010352:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010356:	9004      	str	r0, [sp, #16]
 8010358:	f8ad 3020 	strh.w	r3, [sp, #32]
 801035c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010360:	9607      	str	r6, [sp, #28]
 8010362:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010366:	4b10      	ldr	r3, [pc, #64]	; (80103a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8010368:	881b      	ldrh	r3, [r3, #0]
 801036a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801036e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010370:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010374:	f7fb fbda 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 8010378:	6803      	ldr	r3, [r0, #0]
 801037a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801037c:	4798      	blx	r3
 801037e:	23ff      	movs	r3, #255	; 0xff
 8010380:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010384:	a903      	add	r1, sp, #12
 8010386:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801038a:	6860      	ldr	r0, [r4, #4]
 801038c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010390:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010394:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010398:	6803      	ldr	r3, [r0, #0]
 801039a:	685b      	ldr	r3, [r3, #4]
 801039c:	4798      	blx	r3
 801039e:	4630      	mov	r0, r6
 80103a0:	b00c      	add	sp, #48	; 0x30
 80103a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80103a6:	bf00      	nop
 80103a8:	24001ed2 	.word	0x24001ed2

080103ac <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80103ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103ae:	b085      	sub	sp, #20
 80103b0:	4605      	mov	r5, r0
 80103b2:	ac02      	add	r4, sp, #8
 80103b4:	e884 0006 	stmia.w	r4, {r1, r2}
 80103b8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80103bc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80103c0:	f7ff fde6 	bl	800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80103c4:	4631      	mov	r1, r6
 80103c6:	4603      	mov	r3, r0
 80103c8:	463a      	mov	r2, r7
 80103ca:	4628      	mov	r0, r5
 80103cc:	f7ff ff08 	bl	80101e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80103d0:	4a05      	ldr	r2, [pc, #20]	; (80103e8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80103d2:	682b      	ldr	r3, [r5, #0]
 80103d4:	8812      	ldrh	r2, [r2, #0]
 80103d6:	9200      	str	r2, [sp, #0]
 80103d8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80103da:	4603      	mov	r3, r0
 80103dc:	4628      	mov	r0, r5
 80103de:	e894 0006 	ldmia.w	r4, {r1, r2}
 80103e2:	47b0      	blx	r6
 80103e4:	b005      	add	sp, #20
 80103e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103e8:	24001ed2 	.word	0x24001ed2

080103ec <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80103ec:	b570      	push	{r4, r5, r6, lr}
 80103ee:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80103f2:	4604      	mov	r4, r0
 80103f4:	b19b      	cbz	r3, 801041e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80103f6:	2002      	movs	r0, #2
 80103f8:	f7fd f94c 	bl	800d694 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80103fc:	2300      	movs	r3, #0
 80103fe:	4620      	mov	r0, r4
 8010400:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010404:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8010408:	6823      	ldr	r3, [r4, #0]
 801040a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801040e:	f7ff fdbf 	bl	800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010412:	4601      	mov	r1, r0
 8010414:	4620      	mov	r0, r4
 8010416:	462b      	mov	r3, r5
 8010418:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801041c:	4718      	bx	r3
 801041e:	bd70      	pop	{r4, r5, r6, pc}

08010420 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010420:	b538      	push	{r3, r4, r5, lr}
 8010422:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8010426:	4604      	mov	r4, r0
 8010428:	460d      	mov	r5, r1
 801042a:	428b      	cmp	r3, r1
 801042c:	d006      	beq.n	801043c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801042e:	6803      	ldr	r3, [r0, #0]
 8010430:	b929      	cbnz	r1, 801043e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8010432:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010436:	4798      	blx	r3
 8010438:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801043c:	bd38      	pop	{r3, r4, r5, pc}
 801043e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010442:	e7f8      	b.n	8010436 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010444 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010444:	4b0d      	ldr	r3, [pc, #52]	; (801047c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010446:	b510      	push	{r4, lr}
 8010448:	781b      	ldrb	r3, [r3, #0]
 801044a:	4604      	mov	r4, r0
 801044c:	b95b      	cbnz	r3, 8010466 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801044e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8010452:	2b02      	cmp	r3, #2
 8010454:	d007      	beq.n	8010466 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010456:	6840      	ldr	r0, [r0, #4]
 8010458:	f000 f90e 	bl	8010678 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801045c:	b118      	cbz	r0, 8010466 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801045e:	6862      	ldr	r2, [r4, #4]
 8010460:	7a53      	ldrb	r3, [r2, #9]
 8010462:	2b00      	cmp	r3, #0
 8010464:	d0fc      	beq.n	8010460 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010466:	f7fd fbdd 	bl	800dc24 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801046a:	4620      	mov	r0, r4
 801046c:	2100      	movs	r1, #0
 801046e:	f7ff ffd7 	bl	8010420 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010472:	4620      	mov	r0, r4
 8010474:	f7ff fd8c 	bl	800ff90 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010478:	bd10      	pop	{r4, pc}
 801047a:	bf00      	nop
 801047c:	24001ed6 	.word	0x24001ed6

08010480 <_ZN8touchgfx13DMA_Interface5flushEv>:
 8010480:	6803      	ldr	r3, [r0, #0]
 8010482:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010484:	4718      	bx	r3

08010486 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010486:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 801048a:	1a13      	subs	r3, r2, r0
 801048c:	4258      	negs	r0, r3
 801048e:	4158      	adcs	r0, r3
 8010490:	4770      	bx	lr

08010492 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010492:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010496:	1a9b      	subs	r3, r3, r2
 8010498:	2b00      	cmp	r3, #0
 801049a:	bfdc      	itt	le
 801049c:	6882      	ldrle	r2, [r0, #8]
 801049e:	189b      	addle	r3, r3, r2
 80104a0:	2b01      	cmp	r3, #1
 80104a2:	bfcc      	ite	gt
 80104a4:	2000      	movgt	r0, #0
 80104a6:	2001      	movle	r0, #1
 80104a8:	4770      	bx	lr

080104aa <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80104aa:	6902      	ldr	r2, [r0, #16]
 80104ac:	6843      	ldr	r3, [r0, #4]
 80104ae:	2024      	movs	r0, #36	; 0x24
 80104b0:	fb00 3002 	mla	r0, r0, r2, r3
 80104b4:	4770      	bx	lr

080104b6 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80104b6:	6803      	ldr	r3, [r0, #0]
 80104b8:	691b      	ldr	r3, [r3, #16]
 80104ba:	4718      	bx	r3

080104bc <_ZN8touchgfx13DMA_Interface7executeEv>:
 80104bc:	2301      	movs	r3, #1
 80104be:	b570      	push	{r4, r5, r6, lr}
 80104c0:	7203      	strb	r3, [r0, #8]
 80104c2:	4604      	mov	r4, r0
 80104c4:	6840      	ldr	r0, [r0, #4]
 80104c6:	6803      	ldr	r3, [r0, #0]
 80104c8:	699b      	ldr	r3, [r3, #24]
 80104ca:	4798      	blx	r3
 80104cc:	6803      	ldr	r3, [r0, #0]
 80104ce:	4605      	mov	r5, r0
 80104d0:	2b40      	cmp	r3, #64	; 0x40
 80104d2:	d00c      	beq.n	80104ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80104d4:	d810      	bhi.n	80104f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80104d6:	2b04      	cmp	r3, #4
 80104d8:	d01d      	beq.n	8010516 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80104da:	d804      	bhi.n	80104e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80104dc:	2b01      	cmp	r3, #1
 80104de:	d006      	beq.n	80104ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80104e0:	2b02      	cmp	r3, #2
 80104e2:	d02c      	beq.n	801053e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80104e4:	bd70      	pop	{r4, r5, r6, pc}
 80104e6:	2b08      	cmp	r3, #8
 80104e8:	d01d      	beq.n	8010526 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80104ea:	2b20      	cmp	r3, #32
 80104ec:	d1fa      	bne.n	80104e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80104ee:	6823      	ldr	r3, [r4, #0]
 80104f0:	4620      	mov	r0, r4
 80104f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80104f4:	4798      	blx	r3
 80104f6:	e013      	b.n	8010520 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80104f8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80104fc:	d0f7      	beq.n	80104ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80104fe:	d804      	bhi.n	801050a <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010500:	2b80      	cmp	r3, #128	; 0x80
 8010502:	d0f4      	beq.n	80104ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010504:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010508:	e7f0      	b.n	80104ec <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 801050a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801050e:	d0ee      	beq.n	80104ee <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010510:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8010514:	e7e5      	b.n	80104e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010516:	6823      	ldr	r3, [r4, #0]
 8010518:	7f01      	ldrb	r1, [r0, #28]
 801051a:	4620      	mov	r0, r4
 801051c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801051e:	4798      	blx	r3
 8010520:	6823      	ldr	r3, [r4, #0]
 8010522:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010524:	e006      	b.n	8010534 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010526:	6823      	ldr	r3, [r4, #0]
 8010528:	7f01      	ldrb	r1, [r0, #28]
 801052a:	4620      	mov	r0, r4
 801052c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801052e:	4798      	blx	r3
 8010530:	6823      	ldr	r3, [r4, #0]
 8010532:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010534:	4629      	mov	r1, r5
 8010536:	4620      	mov	r0, r4
 8010538:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801053c:	4718      	bx	r3
 801053e:	6823      	ldr	r3, [r4, #0]
 8010540:	4620      	mov	r0, r4
 8010542:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010544:	4798      	blx	r3
 8010546:	e7f3      	b.n	8010530 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010548 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010548:	4770      	bx	lr

0801054a <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 801054a:	4770      	bx	lr

0801054c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801054c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010550:	b510      	push	{r4, lr}
 8010552:	1ad2      	subs	r2, r2, r3
 8010554:	2a00      	cmp	r2, #0
 8010556:	bfdc      	itt	le
 8010558:	6884      	ldrle	r4, [r0, #8]
 801055a:	1912      	addle	r2, r2, r4
 801055c:	2a01      	cmp	r2, #1
 801055e:	dd16      	ble.n	801058e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010560:	6842      	ldr	r2, [r0, #4]
 8010562:	2424      	movs	r4, #36	; 0x24
 8010564:	fb04 2303 	mla	r3, r4, r3, r2
 8010568:	f101 0220 	add.w	r2, r1, #32
 801056c:	f851 4b04 	ldr.w	r4, [r1], #4
 8010570:	4291      	cmp	r1, r2
 8010572:	f843 4b04 	str.w	r4, [r3], #4
 8010576:	d1f9      	bne.n	801056c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010578:	780a      	ldrb	r2, [r1, #0]
 801057a:	701a      	strb	r2, [r3, #0]
 801057c:	68c3      	ldr	r3, [r0, #12]
 801057e:	6882      	ldr	r2, [r0, #8]
 8010580:	f3bf 8f5b 	dmb	ish
 8010584:	3301      	adds	r3, #1
 8010586:	429a      	cmp	r2, r3
 8010588:	bfd8      	it	le
 801058a:	1a9b      	suble	r3, r3, r2
 801058c:	60c3      	str	r3, [r0, #12]
 801058e:	bd10      	pop	{r4, pc}

08010590 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010590:	6903      	ldr	r3, [r0, #16]
 8010592:	6882      	ldr	r2, [r0, #8]
 8010594:	f3bf 8f5b 	dmb	ish
 8010598:	3301      	adds	r3, #1
 801059a:	429a      	cmp	r2, r3
 801059c:	bfd8      	it	le
 801059e:	1a9b      	suble	r3, r3, r2
 80105a0:	6103      	str	r3, [r0, #16]
 80105a2:	4770      	bx	lr

080105a4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80105a4:	b570      	push	{r4, r5, r6, lr}
 80105a6:	4604      	mov	r4, r0
 80105a8:	460e      	mov	r6, r1
 80105aa:	6860      	ldr	r0, [r4, #4]
 80105ac:	6803      	ldr	r3, [r0, #0]
 80105ae:	685b      	ldr	r3, [r3, #4]
 80105b0:	4798      	blx	r3
 80105b2:	2800      	cmp	r0, #0
 80105b4:	d1f9      	bne.n	80105aa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80105b6:	4d0d      	ldr	r5, [pc, #52]	; (80105ec <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80105b8:	6828      	ldr	r0, [r5, #0]
 80105ba:	6803      	ldr	r3, [r0, #0]
 80105bc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80105be:	4798      	blx	r3
 80105c0:	f7fd fb52 	bl	800dc68 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80105c4:	6828      	ldr	r0, [r5, #0]
 80105c6:	2101      	movs	r1, #1
 80105c8:	f7ff ff2a 	bl	8010420 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80105cc:	6860      	ldr	r0, [r4, #4]
 80105ce:	4631      	mov	r1, r6
 80105d0:	6803      	ldr	r3, [r0, #0]
 80105d2:	689b      	ldr	r3, [r3, #8]
 80105d4:	4798      	blx	r3
 80105d6:	6823      	ldr	r3, [r4, #0]
 80105d8:	4620      	mov	r0, r4
 80105da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105dc:	4798      	blx	r3
 80105de:	6828      	ldr	r0, [r5, #0]
 80105e0:	6803      	ldr	r3, [r0, #0]
 80105e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105e6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80105e8:	4718      	bx	r3
 80105ea:	bf00      	nop
 80105ec:	24001ed8 	.word	0x24001ed8

080105f0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80105f0:	b508      	push	{r3, lr}
 80105f2:	f7fd fb17 	bl	800dc24 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80105f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80105fa:	f7fd bb29 	b.w	800dc50 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080105fe <_ZN8touchgfx13DMA_Interface5startEv>:
 80105fe:	b510      	push	{r4, lr}
 8010600:	4604      	mov	r4, r0
 8010602:	6840      	ldr	r0, [r0, #4]
 8010604:	6803      	ldr	r3, [r0, #0]
 8010606:	681b      	ldr	r3, [r3, #0]
 8010608:	4798      	blx	r3
 801060a:	b948      	cbnz	r0, 8010620 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801060c:	7a63      	ldrb	r3, [r4, #9]
 801060e:	b13b      	cbz	r3, 8010620 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010610:	7a23      	ldrb	r3, [r4, #8]
 8010612:	b92b      	cbnz	r3, 8010620 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010614:	6823      	ldr	r3, [r4, #0]
 8010616:	4620      	mov	r0, r4
 8010618:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801061a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801061e:	4718      	bx	r3
 8010620:	bd10      	pop	{r4, pc}

08010622 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010622:	b570      	push	{r4, r5, r6, lr}
 8010624:	4604      	mov	r4, r0
 8010626:	6840      	ldr	r0, [r0, #4]
 8010628:	6803      	ldr	r3, [r0, #0]
 801062a:	681b      	ldr	r3, [r3, #0]
 801062c:	4798      	blx	r3
 801062e:	4605      	mov	r5, r0
 8010630:	b930      	cbnz	r0, 8010640 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010632:	7a23      	ldrb	r3, [r4, #8]
 8010634:	b123      	cbz	r3, 8010640 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010636:	6860      	ldr	r0, [r4, #4]
 8010638:	6803      	ldr	r3, [r0, #0]
 801063a:	695b      	ldr	r3, [r3, #20]
 801063c:	4798      	blx	r3
 801063e:	7225      	strb	r5, [r4, #8]
 8010640:	6860      	ldr	r0, [r4, #4]
 8010642:	6803      	ldr	r3, [r0, #0]
 8010644:	681b      	ldr	r3, [r3, #0]
 8010646:	4798      	blx	r3
 8010648:	b928      	cbnz	r0, 8010656 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 801064a:	6823      	ldr	r3, [r4, #0]
 801064c:	4620      	mov	r0, r4
 801064e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010650:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010654:	4718      	bx	r3
 8010656:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801065a:	f7fd bb11 	b.w	800dc80 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08010660 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010660:	b510      	push	{r4, lr}
 8010662:	6082      	str	r2, [r0, #8]
 8010664:	2200      	movs	r2, #0
 8010666:	4c03      	ldr	r4, [pc, #12]	; (8010674 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010668:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801066c:	e9c0 4100 	strd	r4, r1, [r0]
 8010670:	bd10      	pop	{r4, pc}
 8010672:	bf00      	nop
 8010674:	08025458 	.word	0x08025458

08010678 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010678:	6840      	ldr	r0, [r0, #4]
 801067a:	6803      	ldr	r3, [r0, #0]
 801067c:	681b      	ldr	r3, [r3, #0]
 801067e:	4718      	bx	r3

08010680 <_ZN8touchgfx8TextArea8setWidthEs>:
 8010680:	b530      	push	{r4, r5, lr}
 8010682:	b085      	sub	sp, #20
 8010684:	6803      	ldr	r3, [r0, #0]
 8010686:	4604      	mov	r4, r0
 8010688:	8101      	strh	r1, [r0, #8]
 801068a:	466d      	mov	r5, sp
 801068c:	4601      	mov	r1, r0
 801068e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010692:	343c      	adds	r4, #60	; 0x3c
 8010694:	4628      	mov	r0, r5
 8010696:	4798      	blx	r3
 8010698:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801069c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80106a0:	b005      	add	sp, #20
 80106a2:	bd30      	pop	{r4, r5, pc}

080106a4 <_ZN8touchgfx8TextArea9setHeightEs>:
 80106a4:	b530      	push	{r4, r5, lr}
 80106a6:	b085      	sub	sp, #20
 80106a8:	6803      	ldr	r3, [r0, #0]
 80106aa:	4604      	mov	r4, r0
 80106ac:	8141      	strh	r1, [r0, #10]
 80106ae:	466d      	mov	r5, sp
 80106b0:	4601      	mov	r1, r0
 80106b2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80106b6:	343c      	adds	r4, #60	; 0x3c
 80106b8:	4628      	mov	r0, r5
 80106ba:	4798      	blx	r3
 80106bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80106c0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80106c4:	b005      	add	sp, #20
 80106c6:	bd30      	pop	{r4, r5, pc}

080106c8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80106c8:	2200      	movs	r2, #0
 80106ca:	8002      	strh	r2, [r0, #0]
 80106cc:	8042      	strh	r2, [r0, #2]
 80106ce:	8082      	strh	r2, [r0, #4]
 80106d0:	80c2      	strh	r2, [r0, #6]
 80106d2:	4770      	bx	lr

080106d4 <_ZN8touchgfx8TextArea8setAlphaEh>:
 80106d4:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 80106d8:	4770      	bx	lr
	...

080106dc <_ZN8touchgfx8TextArea12setBaselineYEs>:
 80106dc:	b570      	push	{r4, r5, r6, lr}
 80106de:	6803      	ldr	r3, [r0, #0]
 80106e0:	4604      	mov	r4, r0
 80106e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80106e4:	460d      	mov	r5, r1
 80106e6:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 80106e8:	4b08      	ldr	r3, [pc, #32]	; (801070c <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 80106ea:	681b      	ldr	r3, [r3, #0]
 80106ec:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80106f0:	4b07      	ldr	r3, [pc, #28]	; (8010710 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 80106f2:	681b      	ldr	r3, [r3, #0]
 80106f4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80106f8:	6803      	ldr	r3, [r0, #0]
 80106fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80106fc:	4798      	blx	r3
 80106fe:	1a29      	subs	r1, r5, r0
 8010700:	4633      	mov	r3, r6
 8010702:	4620      	mov	r0, r4
 8010704:	b209      	sxth	r1, r1
 8010706:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801070a:	4718      	bx	r3
 801070c:	24001f28 	.word	0x24001f28
 8010710:	24001f30 	.word	0x24001f30

08010714 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8010714:	b570      	push	{r4, r5, r6, lr}
 8010716:	6803      	ldr	r3, [r0, #0]
 8010718:	4604      	mov	r4, r0
 801071a:	4615      	mov	r5, r2
 801071c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801071e:	4798      	blx	r3
 8010720:	6823      	ldr	r3, [r4, #0]
 8010722:	4629      	mov	r1, r5
 8010724:	4620      	mov	r0, r4
 8010726:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8010728:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801072c:	4718      	bx	r3

0801072e <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 801072e:	2000      	movs	r0, #0
 8010730:	4770      	bx	lr

08010732 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 8010732:	2000      	movs	r0, #0
 8010734:	4770      	bx	lr
	...

08010738 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8010738:	4b07      	ldr	r3, [pc, #28]	; (8010758 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801073a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801073c:	881b      	ldrh	r3, [r3, #0]
 801073e:	4293      	cmp	r3, r2
 8010740:	bf81      	itttt	hi
 8010742:	4b06      	ldrhi	r3, [pc, #24]	; (801075c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8010744:	681b      	ldrhi	r3, [r3, #0]
 8010746:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801074a:	7858      	ldrbhi	r0, [r3, #1]
 801074c:	bf8c      	ite	hi
 801074e:	f000 0003 	andhi.w	r0, r0, #3
 8010752:	2000      	movls	r0, #0
 8010754:	4770      	bx	lr
 8010756:	bf00      	nop
 8010758:	24001f2c 	.word	0x24001f2c
 801075c:	24001f28 	.word	0x24001f28

08010760 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8010760:	4b11      	ldr	r3, [pc, #68]	; (80107a8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8010762:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010766:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010768:	4604      	mov	r4, r0
 801076a:	881b      	ldrh	r3, [r3, #0]
 801076c:	428b      	cmp	r3, r1
 801076e:	d918      	bls.n	80107a2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8010770:	6803      	ldr	r3, [r0, #0]
 8010772:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8010774:	4b0d      	ldr	r3, [pc, #52]	; (80107ac <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8010776:	6818      	ldr	r0, [r3, #0]
 8010778:	f7fc fd0c 	bl	800d194 <_ZNK8touchgfx5Texts7getTextEt>
 801077c:	6823      	ldr	r3, [r4, #0]
 801077e:	4606      	mov	r6, r0
 8010780:	4620      	mov	r0, r4
 8010782:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010784:	4798      	blx	r3
 8010786:	6823      	ldr	r3, [r4, #0]
 8010788:	4607      	mov	r7, r0
 801078a:	4620      	mov	r0, r4
 801078c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010790:	4798      	blx	r3
 8010792:	463a      	mov	r2, r7
 8010794:	4603      	mov	r3, r0
 8010796:	4631      	mov	r1, r6
 8010798:	4620      	mov	r0, r4
 801079a:	46ac      	mov	ip, r5
 801079c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80107a0:	4760      	bx	ip
 80107a2:	2000      	movs	r0, #0
 80107a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107a8:	24001f2c 	.word	0x24001f2c
 80107ac:	24001f34 	.word	0x24001f34

080107b0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80107b0:	4b18      	ldr	r3, [pc, #96]	; (8010814 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80107b2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80107b6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80107b8:	4604      	mov	r4, r0
 80107ba:	881b      	ldrh	r3, [r3, #0]
 80107bc:	428b      	cmp	r3, r1
 80107be:	d926      	bls.n	801080e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80107c0:	4b15      	ldr	r3, [pc, #84]	; (8010818 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80107c2:	681b      	ldr	r3, [r3, #0]
 80107c4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80107c8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80107cc:	4b13      	ldr	r3, [pc, #76]	; (801081c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80107ce:	7855      	ldrb	r5, [r2, #1]
 80107d0:	681b      	ldr	r3, [r3, #0]
 80107d2:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80107d6:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80107da:	6833      	ldr	r3, [r6, #0]
 80107dc:	69df      	ldr	r7, [r3, #28]
 80107de:	4b10      	ldr	r3, [pc, #64]	; (8010820 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80107e0:	6818      	ldr	r0, [r3, #0]
 80107e2:	f7fc fcd7 	bl	800d194 <_ZNK8touchgfx5Texts7getTextEt>
 80107e6:	6823      	ldr	r3, [r4, #0]
 80107e8:	4680      	mov	r8, r0
 80107ea:	4620      	mov	r0, r4
 80107ec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80107ee:	4798      	blx	r3
 80107f0:	6823      	ldr	r3, [r4, #0]
 80107f2:	4681      	mov	r9, r0
 80107f4:	4620      	mov	r0, r4
 80107f6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80107fa:	4798      	blx	r3
 80107fc:	464b      	mov	r3, r9
 80107fe:	9000      	str	r0, [sp, #0]
 8010800:	4642      	mov	r2, r8
 8010802:	4629      	mov	r1, r5
 8010804:	4630      	mov	r0, r6
 8010806:	47b8      	blx	r7
 8010808:	b003      	add	sp, #12
 801080a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801080e:	2000      	movs	r0, #0
 8010810:	e7fa      	b.n	8010808 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8010812:	bf00      	nop
 8010814:	24001f2c 	.word	0x24001f2c
 8010818:	24001f28 	.word	0x24001f28
 801081c:	24001f30 	.word	0x24001f30
 8010820:	24001f34 	.word	0x24001f34

08010824 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8010824:	b40e      	push	{r1, r2, r3}
 8010826:	4b30      	ldr	r3, [pc, #192]	; (80108e8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8010828:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801082c:	881a      	ldrh	r2, [r3, #0]
 801082e:	b09d      	sub	sp, #116	; 0x74
 8010830:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8010832:	4604      	mov	r4, r0
 8010834:	429a      	cmp	r2, r3
 8010836:	d954      	bls.n	80108e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8010838:	aa26      	add	r2, sp, #152	; 0x98
 801083a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80108ec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801083e:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80108f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8010842:	9202      	str	r2, [sp, #8]
 8010844:	f8d9 2000 	ldr.w	r2, [r9]
 8010848:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801084c:	f8d8 3000 	ldr.w	r3, [r8]
 8010850:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010854:	682b      	ldr	r3, [r5, #0]
 8010856:	4628      	mov	r0, r5
 8010858:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801085a:	4798      	blx	r3
 801085c:	4606      	mov	r6, r0
 801085e:	b207      	sxth	r7, r0
 8010860:	a803      	add	r0, sp, #12
 8010862:	f003 fcbb 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 8010866:	682b      	ldr	r3, [r5, #0]
 8010868:	4628      	mov	r0, r5
 801086a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801086c:	4798      	blx	r3
 801086e:	682b      	ldr	r3, [r5, #0]
 8010870:	4682      	mov	sl, r0
 8010872:	4628      	mov	r0, r5
 8010874:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010876:	4798      	blx	r3
 8010878:	4653      	mov	r3, sl
 801087a:	9000      	str	r0, [sp, #0]
 801087c:	a803      	add	r0, sp, #12
 801087e:	9a02      	ldr	r2, [sp, #8]
 8010880:	9925      	ldr	r1, [sp, #148]	; 0x94
 8010882:	f003 fd06 	bl	8014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010886:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010888:	f8d9 3000 	ldr.w	r3, [r9]
 801088c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8010890:	8925      	ldrh	r5, [r4, #8]
 8010892:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8010896:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801089a:	eba5 050c 	sub.w	r5, r5, ip
 801089e:	784a      	ldrb	r2, [r1, #1]
 80108a0:	f8d8 3000 	ldr.w	r3, [r8]
 80108a4:	b22d      	sxth	r5, r5
 80108a6:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80108aa:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80108ae:	9500      	str	r5, [sp, #0]
 80108b0:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80108b4:	a803      	add	r0, sp, #12
 80108b6:	f001 fb3f 	bl	8011f38 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80108ba:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80108be:	b203      	sxth	r3, r0
 80108c0:	18b9      	adds	r1, r7, r2
 80108c2:	2900      	cmp	r1, #0
 80108c4:	dd0b      	ble.n	80108de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80108c6:	3b01      	subs	r3, #1
 80108c8:	fb13 f302 	smulbb	r3, r3, r2
 80108cc:	fb16 3300 	smlabb	r3, r6, r0, r3
 80108d0:	b21f      	sxth	r7, r3
 80108d2:	4638      	mov	r0, r7
 80108d4:	b01d      	add	sp, #116	; 0x74
 80108d6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80108da:	b003      	add	sp, #12
 80108dc:	4770      	bx	lr
 80108de:	2b00      	cmp	r3, #0
 80108e0:	dcf7      	bgt.n	80108d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80108e2:	2700      	movs	r7, #0
 80108e4:	e7f5      	b.n	80108d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80108e6:	bf00      	nop
 80108e8:	24001f2c 	.word	0x24001f2c
 80108ec:	24001f28 	.word	0x24001f28
 80108f0:	24001f30 	.word	0x24001f30

080108f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80108f4:	4bbd      	ldr	r3, [pc, #756]	; (8010bec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80108f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108fa:	460c      	mov	r4, r1
 80108fc:	881b      	ldrh	r3, [r3, #0]
 80108fe:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8010900:	b0a9      	sub	sp, #164	; 0xa4
 8010902:	4680      	mov	r8, r0
 8010904:	428b      	cmp	r3, r1
 8010906:	d809      	bhi.n	801091c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8010908:	2300      	movs	r3, #0
 801090a:	f04f 32ff 	mov.w	r2, #4294967295
 801090e:	6083      	str	r3, [r0, #8]
 8010910:	e9c0 3200 	strd	r3, r2, [r0]
 8010914:	4640      	mov	r0, r8
 8010916:	b029      	add	sp, #164	; 0xa4
 8010918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801091c:	4eb4      	ldr	r6, [pc, #720]	; (8010bf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801091e:	6833      	ldr	r3, [r6, #0]
 8010920:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8010924:	4bb3      	ldr	r3, [pc, #716]	; (8010bf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8010926:	681b      	ldr	r3, [r3, #0]
 8010928:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801092c:	4bb2      	ldr	r3, [pc, #712]	; (8010bf8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801092e:	6818      	ldr	r0, [r3, #0]
 8010930:	f7fc fc30 	bl	800d194 <_ZNK8touchgfx5Texts7getTextEt>
 8010934:	682b      	ldr	r3, [r5, #0]
 8010936:	4681      	mov	r9, r0
 8010938:	4628      	mov	r0, r5
 801093a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801093c:	4798      	blx	r3
 801093e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8010940:	b203      	sxth	r3, r0
 8010942:	4682      	mov	sl, r0
 8010944:	4407      	add	r7, r0
 8010946:	a80f      	add	r0, sp, #60	; 0x3c
 8010948:	9304      	str	r3, [sp, #16]
 801094a:	b2bb      	uxth	r3, r7
 801094c:	9303      	str	r3, [sp, #12]
 801094e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8010952:	2b00      	cmp	r3, #0
 8010954:	f040 80a5 	bne.w	8010aa2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 8010958:	f003 fc40 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 801095c:	682b      	ldr	r3, [r5, #0]
 801095e:	4628      	mov	r0, r5
 8010960:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010962:	4798      	blx	r3
 8010964:	682b      	ldr	r3, [r5, #0]
 8010966:	4606      	mov	r6, r0
 8010968:	4628      	mov	r0, r5
 801096a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801096c:	4798      	blx	r3
 801096e:	6823      	ldr	r3, [r4, #0]
 8010970:	4607      	mov	r7, r0
 8010972:	4620      	mov	r0, r4
 8010974:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010976:	4798      	blx	r3
 8010978:	6823      	ldr	r3, [r4, #0]
 801097a:	4683      	mov	fp, r0
 801097c:	4620      	mov	r0, r4
 801097e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010982:	4798      	blx	r3
 8010984:	463b      	mov	r3, r7
 8010986:	4649      	mov	r1, r9
 8010988:	4632      	mov	r2, r6
 801098a:	2600      	movs	r6, #0
 801098c:	e9cd b000 	strd	fp, r0, [sp]
 8010990:	a80f      	add	r0, sp, #60	; 0x3c
 8010992:	4637      	mov	r7, r6
 8010994:	f003 fc92 	bl	80142bc <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010998:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801099c:	f8df b250 	ldr.w	fp, [pc, #592]	; 8010bf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80109a0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80109a4:	bf0c      	ite	eq
 80109a6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80109aa:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80109ae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80109b0:	4629      	mov	r1, r5
 80109b2:	f8db 3000 	ldr.w	r3, [fp]
 80109b6:	a80f      	add	r0, sp, #60	; 0x3c
 80109b8:	3701      	adds	r7, #1
 80109ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80109be:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80109c2:	b2bf      	uxth	r7, r7
 80109c4:	785b      	ldrb	r3, [r3, #1]
 80109c6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80109ca:	f000 ffd0 	bl	801196e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80109ce:	9b03      	ldr	r3, [sp, #12]
 80109d0:	4286      	cmp	r6, r0
 80109d2:	eba9 0903 	sub.w	r9, r9, r3
 80109d6:	bfb8      	it	lt
 80109d8:	4606      	movlt	r6, r0
 80109da:	a80f      	add	r0, sp, #60	; 0x3c
 80109dc:	fa0f f989 	sxth.w	r9, r9
 80109e0:	b236      	sxth	r6, r6
 80109e2:	f003 fc22 	bl	801422a <_ZN8touchgfx12TextProvider11endOfStringEv>
 80109e6:	b918      	cbnz	r0, 80109f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80109e8:	7a2b      	ldrb	r3, [r5, #8]
 80109ea:	444b      	add	r3, r9
 80109ec:	2b00      	cmp	r3, #0
 80109ee:	dcde      	bgt.n	80109ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 80109f0:	9b03      	ldr	r3, [sp, #12]
 80109f2:	4620      	mov	r0, r4
 80109f4:	9a04      	ldr	r2, [sp, #16]
 80109f6:	fb13 f707 	smulbb	r7, r3, r7
 80109fa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80109fc:	f895 9009 	ldrb.w	r9, [r5, #9]
 8010a00:	1aff      	subs	r7, r7, r3
 8010a02:	b2bf      	uxth	r7, r7
 8010a04:	b23b      	sxth	r3, r7
 8010a06:	429a      	cmp	r2, r3
 8010a08:	bfa8      	it	ge
 8010a0a:	4657      	movge	r7, sl
 8010a0c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010a10:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010a14:	6823      	ldr	r3, [r4, #0]
 8010a16:	444f      	add	r7, r9
 8010a18:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010a1a:	bf08      	it	eq
 8010a1c:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8010a20:	fa1f f987 	uxth.w	r9, r7
 8010a24:	bf18      	it	ne
 8010a26:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8010a2a:	4798      	blx	r3
 8010a2c:	2801      	cmp	r0, #1
 8010a2e:	fa0f f789 	sxth.w	r7, r9
 8010a32:	b2b3      	uxth	r3, r6
 8010a34:	f000 80e2 	beq.w	8010bfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8010a38:	2802      	cmp	r0, #2
 8010a3a:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8010a3e:	f000 80e3 	beq.w	8010c08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8010a42:	7aea      	ldrb	r2, [r5, #11]
 8010a44:	b236      	sxth	r6, r6
 8010a46:	7b2d      	ldrb	r5, [r5, #12]
 8010a48:	1ab6      	subs	r6, r6, r2
 8010a4a:	442a      	add	r2, r5
 8010a4c:	fa1f fa86 	uxth.w	sl, r6
 8010a50:	4413      	add	r3, r2
 8010a52:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8010a56:	fa0f fb8a 	sxth.w	fp, sl
 8010a5a:	b29b      	uxth	r3, r3
 8010a5c:	2a02      	cmp	r2, #2
 8010a5e:	b21e      	sxth	r6, r3
 8010a60:	f000 80d6 	beq.w	8010c10 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8010a64:	2a03      	cmp	r2, #3
 8010a66:	f000 80de 	beq.w	8010c26 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8010a6a:	2a01      	cmp	r2, #1
 8010a6c:	f040 80e6 	bne.w	8010c3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8010a70:	8925      	ldrh	r5, [r4, #8]
 8010a72:	4633      	mov	r3, r6
 8010a74:	463e      	mov	r6, r7
 8010a76:	eba5 0909 	sub.w	r9, r5, r9
 8010a7a:	461f      	mov	r7, r3
 8010a7c:	465d      	mov	r5, fp
 8010a7e:	fa0f fb89 	sxth.w	fp, r9
 8010a82:	4b5d      	ldr	r3, [pc, #372]	; (8010bf8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010a84:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010a86:	6818      	ldr	r0, [r3, #0]
 8010a88:	f7fc fb84 	bl	800d194 <_ZNK8touchgfx5Texts7getTextEt>
 8010a8c:	f8a8 b000 	strh.w	fp, [r8]
 8010a90:	f8a8 5002 	strh.w	r5, [r8, #2]
 8010a94:	f8a8 6004 	strh.w	r6, [r8, #4]
 8010a98:	f8a8 7006 	strh.w	r7, [r8, #6]
 8010a9c:	f8c8 0008 	str.w	r0, [r8, #8]
 8010aa0:	e738      	b.n	8010914 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8010aa2:	f003 fb9b 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 8010aa6:	682b      	ldr	r3, [r5, #0]
 8010aa8:	4628      	mov	r0, r5
 8010aaa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010aac:	4798      	blx	r3
 8010aae:	682b      	ldr	r3, [r5, #0]
 8010ab0:	4607      	mov	r7, r0
 8010ab2:	4628      	mov	r0, r5
 8010ab4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010ab6:	4798      	blx	r3
 8010ab8:	6823      	ldr	r3, [r4, #0]
 8010aba:	4683      	mov	fp, r0
 8010abc:	4620      	mov	r0, r4
 8010abe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010ac0:	4798      	blx	r3
 8010ac2:	6822      	ldr	r2, [r4, #0]
 8010ac4:	9005      	str	r0, [sp, #20]
 8010ac6:	4620      	mov	r0, r4
 8010ac8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8010acc:	4790      	blx	r2
 8010ace:	9b05      	ldr	r3, [sp, #20]
 8010ad0:	463a      	mov	r2, r7
 8010ad2:	4649      	mov	r1, r9
 8010ad4:	9001      	str	r0, [sp, #4]
 8010ad6:	a80f      	add	r0, sp, #60	; 0x3c
 8010ad8:	9300      	str	r3, [sp, #0]
 8010ada:	465b      	mov	r3, fp
 8010adc:	f003 fbee 	bl	80142bc <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010ae0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010ae4:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8010ae8:	af0f      	add	r7, sp, #60	; 0x3c
 8010aea:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010aee:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010af2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010af4:	bf0a      	itet	eq
 8010af6:	464a      	moveq	r2, r9
 8010af8:	461a      	movne	r2, r3
 8010afa:	4699      	moveq	r9, r3
 8010afc:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8010b00:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8010b04:	1ad2      	subs	r2, r2, r3
 8010b06:	6833      	ldr	r3, [r6, #0]
 8010b08:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8010b0c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8010b10:	7859      	ldrb	r1, [r3, #1]
 8010b12:	2300      	movs	r3, #0
 8010b14:	9707      	str	r7, [sp, #28]
 8010b16:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8010b1a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010b1e:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010b22:	f88d 1020 	strb.w	r1, [sp, #32]
 8010b26:	9509      	str	r5, [sp, #36]	; 0x24
 8010b28:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010b2c:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8010b30:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8010b34:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010b38:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8010b3c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010b40:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8010b44:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010b48:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8010b4c:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8010b50:	b350      	cbz	r0, 8010ba8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8010b52:	682b      	ldr	r3, [r5, #0]
 8010b54:	4628      	mov	r0, r5
 8010b56:	695b      	ldr	r3, [r3, #20]
 8010b58:	4798      	blx	r3
 8010b5a:	4607      	mov	r7, r0
 8010b5c:	b320      	cbz	r0, 8010ba8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8010b5e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010b60:	4639      	mov	r1, r7
 8010b62:	6803      	ldr	r3, [r0, #0]
 8010b64:	68db      	ldr	r3, [r3, #12]
 8010b66:	4798      	blx	r3
 8010b68:	4606      	mov	r6, r0
 8010b6a:	b1e8      	cbz	r0, 8010ba8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8010b6c:	7b43      	ldrb	r3, [r0, #13]
 8010b6e:	7a82      	ldrb	r2, [r0, #10]
 8010b70:	005b      	lsls	r3, r3, #1
 8010b72:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010b76:	4313      	orrs	r3, r2
 8010b78:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8010b7c:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8010b80:	2b06      	cmp	r3, #6
 8010b82:	d111      	bne.n	8010ba8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8010b84:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010b86:	4632      	mov	r2, r6
 8010b88:	4639      	mov	r1, r7
 8010b8a:	6803      	ldr	r3, [r0, #0]
 8010b8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010b8e:	4798      	blx	r3
 8010b90:	7b73      	ldrb	r3, [r6, #13]
 8010b92:	005b      	lsls	r3, r3, #1
 8010b94:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010b98:	7ab3      	ldrb	r3, [r6, #10]
 8010b9a:	4313      	orrs	r3, r2
 8010b9c:	4418      	add	r0, r3
 8010b9e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010ba2:	4418      	add	r0, r3
 8010ba4:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8010ba8:	2600      	movs	r6, #0
 8010baa:	4637      	mov	r7, r6
 8010bac:	a806      	add	r0, sp, #24
 8010bae:	3701      	adds	r7, #1
 8010bb0:	f001 f8bf 	bl	8011d32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010bb4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8010bb8:	9b03      	ldr	r3, [sp, #12]
 8010bba:	b2bf      	uxth	r7, r7
 8010bbc:	4286      	cmp	r6, r0
 8010bbe:	eba9 0903 	sub.w	r9, r9, r3
 8010bc2:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010bc6:	bfb8      	it	lt
 8010bc8:	4606      	movlt	r6, r0
 8010bca:	fa0f f989 	sxth.w	r9, r9
 8010bce:	b236      	sxth	r6, r6
 8010bd0:	2b00      	cmp	r3, #0
 8010bd2:	f43f af0d 	beq.w	80109f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8010bd6:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8010bda:	2b00      	cmp	r3, #0
 8010bdc:	f47f af08 	bne.w	80109f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8010be0:	7a2b      	ldrb	r3, [r5, #8]
 8010be2:	444b      	add	r3, r9
 8010be4:	2b00      	cmp	r3, #0
 8010be6:	dce1      	bgt.n	8010bac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 8010be8:	e702      	b.n	80109f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8010bea:	bf00      	nop
 8010bec:	24001f2c 	.word	0x24001f2c
 8010bf0:	24001f28 	.word	0x24001f28
 8010bf4:	24001f30 	.word	0x24001f30
 8010bf8:	24001f34 	.word	0x24001f34
 8010bfc:	ebaa 0606 	sub.w	r6, sl, r6
 8010c00:	2002      	movs	r0, #2
 8010c02:	fb96 f6f0 	sdiv	r6, r6, r0
 8010c06:	e71c      	b.n	8010a42 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8010c08:	441e      	add	r6, r3
 8010c0a:	ebaa 0606 	sub.w	r6, sl, r6
 8010c0e:	e718      	b.n	8010a42 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8010c10:	8925      	ldrh	r5, [r4, #8]
 8010c12:	1aed      	subs	r5, r5, r3
 8010c14:	eba5 050a 	sub.w	r5, r5, sl
 8010c18:	fa0f fb85 	sxth.w	fp, r5
 8010c1c:	8965      	ldrh	r5, [r4, #10]
 8010c1e:	eba5 0509 	sub.w	r5, r5, r9
 8010c22:	b22d      	sxth	r5, r5
 8010c24:	e72d      	b.n	8010a82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 8010c26:	8965      	ldrh	r5, [r4, #10]
 8010c28:	f04f 0b00 	mov.w	fp, #0
 8010c2c:	1aed      	subs	r5, r5, r3
 8010c2e:	4633      	mov	r3, r6
 8010c30:	463e      	mov	r6, r7
 8010c32:	eba5 050a 	sub.w	r5, r5, sl
 8010c36:	461f      	mov	r7, r3
 8010c38:	b22d      	sxth	r5, r5
 8010c3a:	e722      	b.n	8010a82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 8010c3c:	2500      	movs	r5, #0
 8010c3e:	e720      	b.n	8010a82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

08010c40 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8010c40:	b513      	push	{r0, r1, r4, lr}
 8010c42:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8010c46:	4604      	mov	r4, r0
 8010c48:	b1fb      	cbz	r3, 8010c8a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010c4a:	4b16      	ldr	r3, [pc, #88]	; (8010ca4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8010c4c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010c4e:	881b      	ldrh	r3, [r3, #0]
 8010c50:	428b      	cmp	r3, r1
 8010c52:	d91a      	bls.n	8010c8a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010c54:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010c58:	2b00      	cmp	r3, #0
 8010c5a:	dd16      	ble.n	8010c8a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010c5c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010c60:	2b00      	cmp	r3, #0
 8010c62:	dd12      	ble.n	8010c8a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010c64:	4b10      	ldr	r3, [pc, #64]	; (8010ca8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8010c66:	6818      	ldr	r0, [r3, #0]
 8010c68:	f7fc fa94 	bl	800d194 <_ZNK8touchgfx5Texts7getTextEt>
 8010c6c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8010c70:	6822      	ldr	r2, [r4, #0]
 8010c72:	2b00      	cmp	r3, #0
 8010c74:	db06      	blt.n	8010c84 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010c76:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8010c7a:	2b00      	cmp	r3, #0
 8010c7c:	db02      	blt.n	8010c84 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8010c7e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010c80:	4298      	cmp	r0, r3
 8010c82:	d004      	beq.n	8010c8e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8010c84:	6953      	ldr	r3, [r2, #20]
 8010c86:	4620      	mov	r0, r4
 8010c88:	4798      	blx	r3
 8010c8a:	b002      	add	sp, #8
 8010c8c:	bd10      	pop	{r4, pc}
 8010c8e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8010c92:	466b      	mov	r3, sp
 8010c94:	6912      	ldr	r2, [r2, #16]
 8010c96:	c903      	ldmia	r1, {r0, r1}
 8010c98:	e883 0003 	stmia.w	r3, {r0, r1}
 8010c9c:	4619      	mov	r1, r3
 8010c9e:	4620      	mov	r0, r4
 8010ca0:	4790      	blx	r2
 8010ca2:	e7f2      	b.n	8010c8a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010ca4:	24001f2c 	.word	0x24001f2c
 8010ca8:	24001f34 	.word	0x24001f34

08010cac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8010cac:	4b45      	ldr	r3, [pc, #276]	; (8010dc4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8010cae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010cb2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010cb4:	b08e      	sub	sp, #56	; 0x38
 8010cb6:	881b      	ldrh	r3, [r3, #0]
 8010cb8:	4604      	mov	r4, r0
 8010cba:	4293      	cmp	r3, r2
 8010cbc:	d97e      	bls.n	8010dbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010cbe:	6808      	ldr	r0, [r1, #0]
 8010cc0:	ab05      	add	r3, sp, #20
 8010cc2:	6849      	ldr	r1, [r1, #4]
 8010cc4:	4d40      	ldr	r5, [pc, #256]	; (8010dc8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8010cc6:	c303      	stmia	r3!, {r0, r1}
 8010cc8:	4611      	mov	r1, r2
 8010cca:	6828      	ldr	r0, [r5, #0]
 8010ccc:	f7fc fa62 	bl	800d194 <_ZNK8touchgfx5Texts7getTextEt>
 8010cd0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8010cd4:	2b00      	cmp	r3, #0
 8010cd6:	db11      	blt.n	8010cfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010cd8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8010cdc:	2b00      	cmp	r3, #0
 8010cde:	db0d      	blt.n	8010cfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010ce0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010ce2:	4298      	cmp	r0, r3
 8010ce4:	d10a      	bne.n	8010cfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010ce6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8010cea:	ab09      	add	r3, sp, #36	; 0x24
 8010cec:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010cf0:	e883 0003 	stmia.w	r3, {r0, r1}
 8010cf4:	4619      	mov	r1, r3
 8010cf6:	a805      	add	r0, sp, #20
 8010cf8:	f7fe fcc4 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 8010cfc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010d00:	2b00      	cmp	r3, #0
 8010d02:	dd5b      	ble.n	8010dbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010d04:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010d08:	2b00      	cmp	r3, #0
 8010d0a:	dd57      	ble.n	8010dbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010d0c:	4f2f      	ldr	r7, [pc, #188]	; (8010dcc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8010d0e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010d10:	683b      	ldr	r3, [r7, #0]
 8010d12:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8010d16:	4b2e      	ldr	r3, [pc, #184]	; (8010dd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8010d18:	681b      	ldr	r3, [r3, #0]
 8010d1a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8010d1e:	2e00      	cmp	r6, #0
 8010d20:	d04c      	beq.n	8010dbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010d22:	6823      	ldr	r3, [r4, #0]
 8010d24:	4620      	mov	r0, r4
 8010d26:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8010d2a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010d2c:	4798      	blx	r3
 8010d2e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010d30:	683b      	ldr	r3, [r7, #0]
 8010d32:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8010d36:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010d3a:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8010d3e:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8010d42:	785b      	ldrb	r3, [r3, #1]
 8010d44:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8010d48:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010d4c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010d4e:	9609      	str	r6, [sp, #36]	; 0x24
 8010d50:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8010d54:	4b1f      	ldr	r3, [pc, #124]	; (8010dd4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8010d56:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8010d5a:	681b      	ldr	r3, [r3, #0]
 8010d5c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8010d60:	910b      	str	r1, [sp, #44]	; 0x2c
 8010d62:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8010d66:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8010d6a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8010d6e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8010d72:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8010d76:	b10a      	cbz	r2, 8010d7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8010d78:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8010d7a:	b906      	cbnz	r6, 8010d7e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8010d7c:	689e      	ldr	r6, [r3, #8]
 8010d7e:	af07      	add	r7, sp, #28
 8010d80:	4621      	mov	r1, r4
 8010d82:	4638      	mov	r0, r7
 8010d84:	f002 fe74 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010d88:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8010d8a:	6828      	ldr	r0, [r5, #0]
 8010d8c:	f7fc fa02 	bl	800d194 <_ZNK8touchgfx5Texts7getTextEt>
 8010d90:	6823      	ldr	r3, [r4, #0]
 8010d92:	4605      	mov	r5, r0
 8010d94:	4620      	mov	r0, r4
 8010d96:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010d98:	4798      	blx	r3
 8010d9a:	6823      	ldr	r3, [r4, #0]
 8010d9c:	4680      	mov	r8, r0
 8010d9e:	4620      	mov	r0, r4
 8010da0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010da4:	4798      	blx	r3
 8010da6:	ab09      	add	r3, sp, #36	; 0x24
 8010da8:	9501      	str	r5, [sp, #4]
 8010daa:	9300      	str	r3, [sp, #0]
 8010dac:	ab05      	add	r3, sp, #20
 8010dae:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8010db2:	4630      	mov	r0, r6
 8010db4:	e897 0006 	ldmia.w	r7, {r1, r2}
 8010db8:	f7fc f97d 	bl	800d0b6 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8010dbc:	b00e      	add	sp, #56	; 0x38
 8010dbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010dc2:	bf00      	nop
 8010dc4:	24001f2c 	.word	0x24001f2c
 8010dc8:	24001f34 	.word	0x24001f34
 8010dcc:	24001f28 	.word	0x24001f28
 8010dd0:	24001f30 	.word	0x24001f30
 8010dd4:	24001ed8 	.word	0x24001ed8

08010dd8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8010dd8:	b538      	push	{r3, r4, r5, lr}
 8010dda:	4b0e      	ldr	r3, [pc, #56]	; (8010e14 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8010ddc:	4604      	mov	r4, r0
 8010dde:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010de0:	881b      	ldrh	r3, [r3, #0]
 8010de2:	429a      	cmp	r2, r3
 8010de4:	d214      	bcs.n	8010e10 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8010de6:	6803      	ldr	r3, [r0, #0]
 8010de8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010dea:	4798      	blx	r3
 8010dec:	6823      	ldr	r3, [r4, #0]
 8010dee:	4605      	mov	r5, r0
 8010df0:	4620      	mov	r0, r4
 8010df2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8010df4:	4798      	blx	r3
 8010df6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010dfa:	b22d      	sxth	r5, r5
 8010dfc:	4601      	mov	r1, r0
 8010dfe:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010e02:	bf06      	itte	eq
 8010e04:	4602      	moveq	r2, r0
 8010e06:	4629      	moveq	r1, r5
 8010e08:	462a      	movne	r2, r5
 8010e0a:	4620      	mov	r0, r4
 8010e0c:	f7fb fc59 	bl	800c6c2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010e10:	bd38      	pop	{r3, r4, r5, pc}
 8010e12:	bf00      	nop
 8010e14:	24001f2c 	.word	0x24001f2c

08010e18 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8010e18:	b530      	push	{r4, r5, lr}
 8010e1a:	888b      	ldrh	r3, [r1, #4]
 8010e1c:	b085      	sub	sp, #20
 8010e1e:	4604      	mov	r4, r0
 8010e20:	8583      	strh	r3, [r0, #44]	; 0x2c
 8010e22:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010e26:	b923      	cbnz	r3, 8010e32 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010e28:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010e2c:	b90b      	cbnz	r3, 8010e32 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010e2e:	f7ff ffd3 	bl	8010dd8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8010e32:	6823      	ldr	r3, [r4, #0]
 8010e34:	466d      	mov	r5, sp
 8010e36:	4621      	mov	r1, r4
 8010e38:	343c      	adds	r4, #60	; 0x3c
 8010e3a:	4628      	mov	r0, r5
 8010e3c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010e40:	4798      	blx	r3
 8010e42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8010e46:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010e4a:	b005      	add	sp, #20
 8010e4c:	bd30      	pop	{r4, r5, pc}

08010e4e <_ZNK8touchgfx3Box12getSolidRectEv>:
 8010e4e:	2300      	movs	r3, #0
 8010e50:	8083      	strh	r3, [r0, #4]
 8010e52:	80c3      	strh	r3, [r0, #6]
 8010e54:	8003      	strh	r3, [r0, #0]
 8010e56:	8043      	strh	r3, [r0, #2]
 8010e58:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8010e5c:	2bff      	cmp	r3, #255	; 0xff
 8010e5e:	bf01      	itttt	eq
 8010e60:	890b      	ldrheq	r3, [r1, #8]
 8010e62:	8083      	strheq	r3, [r0, #4]
 8010e64:	894b      	ldrheq	r3, [r1, #10]
 8010e66:	80c3      	strheq	r3, [r0, #6]
 8010e68:	4770      	bx	lr
	...

08010e6c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8010e6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010e6e:	4604      	mov	r4, r0
 8010e70:	466b      	mov	r3, sp
 8010e72:	6808      	ldr	r0, [r1, #0]
 8010e74:	6849      	ldr	r1, [r1, #4]
 8010e76:	c303      	stmia	r3!, {r0, r1}
 8010e78:	6823      	ldr	r3, [r4, #0]
 8010e7a:	4669      	mov	r1, sp
 8010e7c:	4620      	mov	r0, r4
 8010e7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e80:	4798      	blx	r3
 8010e82:	4b08      	ldr	r3, [pc, #32]	; (8010ea4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8010e84:	681b      	ldr	r3, [r3, #0]
 8010e86:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8010e8a:	b10a      	cbz	r2, 8010e90 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8010e8c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010e8e:	b900      	cbnz	r0, 8010e92 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8010e90:	6898      	ldr	r0, [r3, #8]
 8010e92:	6803      	ldr	r3, [r0, #0]
 8010e94:	4669      	mov	r1, sp
 8010e96:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8010e98:	6a1d      	ldr	r5, [r3, #32]
 8010e9a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8010e9e:	47a8      	blx	r5
 8010ea0:	b003      	add	sp, #12
 8010ea2:	bd30      	pop	{r4, r5, pc}
 8010ea4:	24001ed8 	.word	0x24001ed8

08010ea8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8010ea8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8010eac:	b12a      	cbz	r2, 8010eba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010eae:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8010eb2:	b112      	cbz	r2, 8010eba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8010eb4:	6803      	ldr	r3, [r0, #0]
 8010eb6:	695b      	ldr	r3, [r3, #20]
 8010eb8:	4718      	bx	r3
 8010eba:	4770      	bx	lr

08010ebc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8010ebc:	b510      	push	{r4, lr}
 8010ebe:	6803      	ldr	r3, [r0, #0]
 8010ec0:	460c      	mov	r4, r1
 8010ec2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ec4:	4798      	blx	r3
 8010ec6:	1b03      	subs	r3, r0, r4
 8010ec8:	4258      	negs	r0, r3
 8010eca:	4158      	adcs	r0, r3
 8010ecc:	bd10      	pop	{r4, pc}
	...

08010ed0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8010ed0:	4b01      	ldr	r3, [pc, #4]	; (8010ed8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8010ed2:	6019      	str	r1, [r3, #0]
 8010ed4:	4770      	bx	lr
 8010ed6:	bf00      	nop
 8010ed8:	24001ee0 	.word	0x24001ee0

08010edc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ee0:	4696      	mov	lr, r2
 8010ee2:	b097      	sub	sp, #92	; 0x5c
 8010ee4:	4605      	mov	r5, r0
 8010ee6:	4614      	mov	r4, r2
 8010ee8:	460e      	mov	r6, r1
 8010eea:	461f      	mov	r7, r3
 8010eec:	f10d 0c1c 	add.w	ip, sp, #28
 8010ef0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8010ef4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8010ef8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8010efc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010f00:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010f04:	f8de 3000 	ldr.w	r3, [lr]
 8010f08:	f104 0e14 	add.w	lr, r4, #20
 8010f0c:	f8cc 3000 	str.w	r3, [ip]
 8010f10:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010f14:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010f18:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010f1c:	f8de 3000 	ldr.w	r3, [lr]
 8010f20:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8010f24:	f8cc 3000 	str.w	r3, [ip]
 8010f28:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8010f2c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010f30:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010f34:	f8de 3000 	ldr.w	r3, [lr]
 8010f38:	4631      	mov	r1, r6
 8010f3a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8010f3c:	4628      	mov	r0, r5
 8010f3e:	f8cc 3000 	str.w	r3, [ip]
 8010f42:	682b      	ldr	r3, [r5, #0]
 8010f44:	9201      	str	r2, [sp, #4]
 8010f46:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8010f48:	f8cd 8008 	str.w	r8, [sp, #8]
 8010f4c:	9200      	str	r2, [sp, #0]
 8010f4e:	aa07      	add	r2, sp, #28
 8010f50:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8010f54:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8010f58:	463b      	mov	r3, r7
 8010f5a:	47d8      	blx	fp
 8010f5c:	46a6      	mov	lr, r4
 8010f5e:	f10d 0c1c 	add.w	ip, sp, #28
 8010f62:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010f66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010f6a:	f8de 3000 	ldr.w	r3, [lr]
 8010f6e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8010f72:	343c      	adds	r4, #60	; 0x3c
 8010f74:	f8cc 3000 	str.w	r3, [ip]
 8010f78:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010f7c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010f80:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010f84:	f8de 3000 	ldr.w	r3, [lr]
 8010f88:	f8cc 3000 	str.w	r3, [ip]
 8010f8c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8010f90:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010f92:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010f96:	6823      	ldr	r3, [r4, #0]
 8010f98:	4631      	mov	r1, r6
 8010f9a:	4628      	mov	r0, r5
 8010f9c:	f8cc 3000 	str.w	r3, [ip]
 8010fa0:	682b      	ldr	r3, [r5, #0]
 8010fa2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8010fa6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8010fa8:	f8cd 8008 	str.w	r8, [sp, #8]
 8010fac:	9201      	str	r2, [sp, #4]
 8010fae:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8010fb0:	9200      	str	r2, [sp, #0]
 8010fb2:	aa07      	add	r2, sp, #28
 8010fb4:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8010fb6:	463b      	mov	r3, r7
 8010fb8:	47a0      	blx	r4
 8010fba:	b017      	add	sp, #92	; 0x5c
 8010fbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010fc0 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8010fc0:	2000      	movs	r0, #0
 8010fc2:	4770      	bx	lr

08010fc4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8010fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fc8:	b08d      	sub	sp, #52	; 0x34
 8010fca:	4688      	mov	r8, r1
 8010fcc:	f8d3 c000 	ldr.w	ip, [r3]
 8010fd0:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010fd2:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8010fd6:	680f      	ldr	r7, [r1, #0]
 8010fd8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8010fdc:	eba7 070c 	sub.w	r7, r7, ip
 8010fe0:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8010fe4:	edd3 6a07 	vldr	s13, [r3, #28]
 8010fe8:	42bc      	cmp	r4, r7
 8010fea:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010fec:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8010ff0:	bfa8      	it	ge
 8010ff2:	463c      	movge	r4, r7
 8010ff4:	f9b1 9000 	ldrsh.w	r9, [r1]
 8010ff8:	f9ba 1000 	ldrsh.w	r1, [sl]
 8010ffc:	ee07 4a90 	vmov	s15, r4
 8011000:	eb09 0e0c 	add.w	lr, r9, ip
 8011004:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8011008:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801100c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8011010:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8011014:	4571      	cmp	r1, lr
 8011016:	ee25 4a04 	vmul.f32	s8, s10, s8
 801101a:	ee65 4a24 	vmul.f32	s9, s10, s9
 801101e:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011022:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8011026:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801102a:	ee32 1a05 	vadd.f32	s2, s4, s10
 801102e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8011032:	ee36 0a84 	vadd.f32	s0, s13, s8
 8011036:	ee61 1a87 	vmul.f32	s3, s3, s14
 801103a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801103e:	f340 808c 	ble.w	801115a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 8011042:	eba1 060e 	sub.w	r6, r1, lr
 8011046:	fb96 f5f4 	sdiv	r5, r6, r4
 801104a:	ee07 5a10 	vmov	s14, r5
 801104e:	2d00      	cmp	r5, #0
 8011050:	fb04 6615 	mls	r6, r4, r5, r6
 8011054:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011058:	eea7 0a04 	vfma.f32	s0, s14, s8
 801105c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8011060:	eea7 1a05 	vfma.f32	s2, s14, s10
 8011064:	dd12      	ble.n	801108c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 8011066:	ee70 6a44 	vsub.f32	s13, s0, s8
 801106a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801106e:	ee31 2a45 	vsub.f32	s4, s2, s10
 8011072:	eef5 6a40 	vcmp.f32	s13, #0.0
 8011076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801107a:	bf14      	ite	ne
 801107c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8011080:	eeb0 7a67 	vmoveq.f32	s14, s15
 8011084:	ee61 1a87 	vmul.f32	s3, s3, s14
 8011088:	ee22 2a07 	vmul.f32	s4, s4, s14
 801108c:	fb05 f204 	mul.w	r2, r5, r4
 8011090:	1abf      	subs	r7, r7, r2
 8011092:	4494      	add	ip, r2
 8011094:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8011098:	4411      	add	r1, r2
 801109a:	eb09 020c 	add.w	r2, r9, ip
 801109e:	b209      	sxth	r1, r1
 80110a0:	443a      	add	r2, r7
 80110a2:	428a      	cmp	r2, r1
 80110a4:	bfc4      	itt	gt
 80110a6:	eba1 0209 	subgt.w	r2, r1, r9
 80110aa:	eba2 070c 	subgt.w	r7, r2, ip
 80110ae:	2f00      	cmp	r7, #0
 80110b0:	dd50      	ble.n	8011154 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 80110b2:	fb97 f1f4 	sdiv	r1, r7, r4
 80110b6:	fb04 7211 	mls	r2, r4, r1, r7
 80110ba:	b90a      	cbnz	r2, 80110c0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 80110bc:	3901      	subs	r1, #1
 80110be:	4622      	mov	r2, r4
 80110c0:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80110c4:	6840      	ldr	r0, [r0, #4]
 80110c6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80110ca:	44b6      	add	lr, r6
 80110cc:	f8d0 a000 	ldr.w	sl, [r0]
 80110d0:	2900      	cmp	r1, #0
 80110d2:	bfcc      	ite	gt
 80110d4:	46a1      	movgt	r9, r4
 80110d6:	4691      	movle	r9, r2
 80110d8:	900b      	str	r0, [sp, #44]	; 0x2c
 80110da:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80110dc:	fb04 e505 	mla	r5, r4, r5, lr
 80110e0:	eef0 6a42 	vmov.f32	s13, s4
 80110e4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80110e8:	9008      	str	r0, [sp, #32]
 80110ea:	eeb0 7a61 	vmov.f32	s14, s3
 80110ee:	9818      	ldr	r0, [sp, #96]	; 0x60
 80110f0:	695b      	ldr	r3, [r3, #20]
 80110f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80110f6:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80110fa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80110fe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8011100:	445b      	add	r3, fp
 8011102:	9307      	str	r3, [sp, #28]
 8011104:	ee16 3a90 	vmov	r3, s13
 8011108:	e9cd 8505 	strd	r8, r5, [sp, #20]
 801110c:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8011110:	ee21 3a23 	vmul.f32	s6, s2, s7
 8011114:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8011118:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801111c:	ee17 7a90 	vmov	r7, s15
 8011120:	ee73 7a42 	vsub.f32	s15, s6, s4
 8011124:	fb97 f7f4 	sdiv	r7, r7, r4
 8011128:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801112c:	ee17 ca90 	vmov	ip, s15
 8011130:	fb9c fcf4 	sdiv	ip, ip, r4
 8011134:	fb0c 3306 	mla	r3, ip, r6, r3
 8011138:	9302      	str	r3, [sp, #8]
 801113a:	ee17 3a10 	vmov	r3, s14
 801113e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8011142:	fb07 3706 	mla	r7, r7, r6, r3
 8011146:	eba9 0306 	sub.w	r3, r9, r6
 801114a:	e9cd 4700 	strd	r4, r7, [sp]
 801114e:	f8da 4008 	ldr.w	r4, [sl, #8]
 8011152:	47a0      	blx	r4
 8011154:	b00d      	add	sp, #52	; 0x34
 8011156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801115a:	2500      	movs	r5, #0
 801115c:	462e      	mov	r6, r5
 801115e:	e799      	b.n	8011094 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08011160 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8011160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011164:	b0db      	sub	sp, #364	; 0x16c
 8011166:	461d      	mov	r5, r3
 8011168:	4614      	mov	r4, r2
 801116a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 801116e:	910f      	str	r1, [sp, #60]	; 0x3c
 8011170:	4629      	mov	r1, r5
 8011172:	930a      	str	r3, [sp, #40]	; 0x28
 8011174:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8011178:	9009      	str	r0, [sp, #36]	; 0x24
 801117a:	930b      	str	r3, [sp, #44]	; 0x2c
 801117c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8011180:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8011184:	9310      	str	r3, [sp, #64]	; 0x40
 8011186:	6803      	ldr	r3, [r0, #0]
 8011188:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801118a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801118e:	47b8      	blx	r7
 8011190:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011192:	6058      	str	r0, [r3, #4]
 8011194:	2800      	cmp	r0, #0
 8011196:	f000 83a1 	beq.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801119a:	682b      	ldr	r3, [r5, #0]
 801119c:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80111a0:	ed94 7a02 	vldr	s14, [r4, #8]
 80111a4:	9314      	str	r3, [sp, #80]	; 0x50
 80111a6:	686b      	ldr	r3, [r5, #4]
 80111a8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80111ac:	9315      	str	r3, [sp, #84]	; 0x54
 80111ae:	4bc1      	ldr	r3, [pc, #772]	; (80114b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80111b0:	7819      	ldrb	r1, [r3, #0]
 80111b2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80111b6:	2900      	cmp	r1, #0
 80111b8:	bf16      	itet	ne
 80111ba:	4619      	movne	r1, r3
 80111bc:	4611      	moveq	r1, r2
 80111be:	4613      	movne	r3, r2
 80111c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80111c4:	9116      	str	r1, [sp, #88]	; 0x58
 80111c6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80111ca:	f240 8387 	bls.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80111ce:	ed94 7a07 	vldr	s14, [r4, #28]
 80111d2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80111d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80111da:	f240 837f 	bls.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80111de:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80111e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80111e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80111ea:	f240 8377 	bls.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80111ee:	6822      	ldr	r2, [r4, #0]
 80111f0:	4bb1      	ldr	r3, [pc, #708]	; (80114b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80111f2:	429a      	cmp	r2, r3
 80111f4:	f2c0 8372 	blt.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80111f8:	49b0      	ldr	r1, [pc, #704]	; (80114bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80111fa:	6963      	ldr	r3, [r4, #20]
 80111fc:	428a      	cmp	r2, r1
 80111fe:	f300 836d 	bgt.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011202:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8011206:	48ae      	ldr	r0, [pc, #696]	; (80114c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8011208:	33ff      	adds	r3, #255	; 0xff
 801120a:	4283      	cmp	r3, r0
 801120c:	f200 8366 	bhi.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011210:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011212:	4dac      	ldr	r5, [pc, #688]	; (80114c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8011214:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8011218:	33ff      	adds	r3, #255	; 0xff
 801121a:	42ab      	cmp	r3, r5
 801121c:	f200 835e 	bhi.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011220:	6862      	ldr	r2, [r4, #4]
 8011222:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8011226:	33ff      	adds	r3, #255	; 0xff
 8011228:	4283      	cmp	r3, r0
 801122a:	f200 8357 	bhi.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801122e:	69a1      	ldr	r1, [r4, #24]
 8011230:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8011234:	33ff      	adds	r3, #255	; 0xff
 8011236:	4283      	cmp	r3, r0
 8011238:	f200 8350 	bhi.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801123c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801123e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8011242:	30ff      	adds	r0, #255	; 0xff
 8011244:	42a8      	cmp	r0, r5
 8011246:	f200 8349 	bhi.w	80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801124a:	428a      	cmp	r2, r1
 801124c:	f280 8110 	bge.w	8011470 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8011250:	429a      	cmp	r2, r3
 8011252:	f300 8119 	bgt.w	8011488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8011256:	4299      	cmp	r1, r3
 8011258:	f280 811d 	bge.w	8011496 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 801125c:	2502      	movs	r5, #2
 801125e:	2701      	movs	r7, #1
 8011260:	46a9      	mov	r9, r5
 8011262:	46b8      	mov	r8, r7
 8011264:	f04f 0a00 	mov.w	sl, #0
 8011268:	4621      	mov	r1, r4
 801126a:	a849      	add	r0, sp, #292	; 0x124
 801126c:	f003 fd00 	bl	8014c70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8011270:	4622      	mov	r2, r4
 8011272:	4653      	mov	r3, sl
 8011274:	a949      	add	r1, sp, #292	; 0x124
 8011276:	f8cd 9000 	str.w	r9, [sp]
 801127a:	a819      	add	r0, sp, #100	; 0x64
 801127c:	f003 fe28 	bl	8014ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011280:	4622      	mov	r2, r4
 8011282:	4653      	mov	r3, sl
 8011284:	a949      	add	r1, sp, #292	; 0x124
 8011286:	f8cd 8000 	str.w	r8, [sp]
 801128a:	a829      	add	r0, sp, #164	; 0xa4
 801128c:	f003 fe20 	bl	8014ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011290:	4643      	mov	r3, r8
 8011292:	4622      	mov	r2, r4
 8011294:	a949      	add	r1, sp, #292	; 0x124
 8011296:	f8cd 9000 	str.w	r9, [sp]
 801129a:	a839      	add	r0, sp, #228	; 0xe4
 801129c:	f003 fe18 	bl	8014ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80112a0:	42af      	cmp	r7, r5
 80112a2:	af12      	add	r7, sp, #72	; 0x48
 80112a4:	bfb7      	itett	lt
 80112a6:	2300      	movlt	r3, #0
 80112a8:	2301      	movge	r3, #1
 80112aa:	ad29      	addlt	r5, sp, #164	; 0xa4
 80112ac:	ac19      	addlt	r4, sp, #100	; 0x64
 80112ae:	bfb1      	iteee	lt
 80112b0:	930e      	strlt	r3, [sp, #56]	; 0x38
 80112b2:	ad19      	addge	r5, sp, #100	; 0x64
 80112b4:	930e      	strge	r3, [sp, #56]	; 0x38
 80112b6:	ac29      	addge	r4, sp, #164	; 0xa4
 80112b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80112ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80112be:	e887 0003 	stmia.w	r7, {r0, r1}
 80112c2:	b928      	cbnz	r0, 80112d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80112c4:	4b80      	ldr	r3, [pc, #512]	; (80114c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80112c6:	6818      	ldr	r0, [r3, #0]
 80112c8:	6803      	ldr	r3, [r0, #0]
 80112ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80112cc:	4798      	blx	r3
 80112ce:	6038      	str	r0, [r7, #0]
 80112d0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80112d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80112d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80112da:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80112dc:	930c      	str	r3, [sp, #48]	; 0x30
 80112de:	990c      	ldr	r1, [sp, #48]	; 0x30
 80112e0:	6963      	ldr	r3, [r4, #20]
 80112e2:	440b      	add	r3, r1
 80112e4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80112e8:	4408      	add	r0, r1
 80112ea:	b200      	sxth	r0, r0
 80112ec:	4283      	cmp	r3, r0
 80112ee:	900d      	str	r0, [sp, #52]	; 0x34
 80112f0:	f280 80dd 	bge.w	80114ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80112f4:	428b      	cmp	r3, r1
 80112f6:	da08      	bge.n	801130a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80112f8:	2a00      	cmp	r2, #0
 80112fa:	dd06      	ble.n	801130a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80112fc:	1acb      	subs	r3, r1, r3
 80112fe:	429a      	cmp	r2, r3
 8011300:	f2c0 80e4 	blt.w	80114cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8011304:	2b00      	cmp	r3, #0
 8011306:	f300 80e2 	bgt.w	80114ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801130a:	6967      	ldr	r7, [r4, #20]
 801130c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8011310:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011312:	443b      	add	r3, r7
 8011314:	461f      	mov	r7, r3
 8011316:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011318:	1bdf      	subs	r7, r3, r7
 801131a:	4297      	cmp	r7, r2
 801131c:	bfa8      	it	ge
 801131e:	4617      	movge	r7, r2
 8011320:	2f00      	cmp	r7, #0
 8011322:	f340 8166 	ble.w	80115f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8011326:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011328:	6829      	ldr	r1, [r5, #0]
 801132a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801132e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8011332:	4411      	add	r1, r2
 8011334:	6820      	ldr	r0, [r4, #0]
 8011336:	4299      	cmp	r1, r3
 8011338:	dd1a      	ble.n	8011370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801133a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801133e:	4402      	add	r2, r0
 8011340:	440b      	add	r3, r1
 8011342:	b21b      	sxth	r3, r3
 8011344:	429a      	cmp	r2, r3
 8011346:	dc13      	bgt.n	8011370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8011348:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801134a:	a912      	add	r1, sp, #72	; 0x48
 801134c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801134e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011350:	681b      	ldr	r3, [r3, #0]
 8011352:	9206      	str	r2, [sp, #24]
 8011354:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011356:	9500      	str	r5, [sp, #0]
 8011358:	9205      	str	r2, [sp, #20]
 801135a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801135c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8011360:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8011362:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011366:	aa49      	add	r2, sp, #292	; 0x124
 8011368:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801136c:	4623      	mov	r3, r4
 801136e:	47c8      	blx	r9
 8011370:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8011374:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8011378:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801137c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011380:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8011384:	68a1      	ldr	r1, [r4, #8]
 8011386:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801138a:	ed94 6a08 	vldr	s12, [r4, #32]
 801138e:	edd4 6a07 	vldr	s13, [r4, #28]
 8011392:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8011396:	ee76 6a86 	vadd.f32	s13, s13, s12
 801139a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801139e:	e9d4 2300 	ldrd	r2, r3, [r4]
 80113a2:	edc4 6a07 	vstr	s13, [r4, #28]
 80113a6:	441a      	add	r2, r3
 80113a8:	6963      	ldr	r3, [r4, #20]
 80113aa:	3301      	adds	r3, #1
 80113ac:	6022      	str	r2, [r4, #0]
 80113ae:	6163      	str	r3, [r4, #20]
 80113b0:	69a3      	ldr	r3, [r4, #24]
 80113b2:	3b01      	subs	r3, #1
 80113b4:	61a3      	str	r3, [r4, #24]
 80113b6:	6923      	ldr	r3, [r4, #16]
 80113b8:	440b      	add	r3, r1
 80113ba:	68e1      	ldr	r1, [r4, #12]
 80113bc:	428b      	cmp	r3, r1
 80113be:	6123      	str	r3, [r4, #16]
 80113c0:	db15      	blt.n	80113ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80113c2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80113c6:	3201      	adds	r2, #1
 80113c8:	1a5b      	subs	r3, r3, r1
 80113ca:	ee76 6a26 	vadd.f32	s13, s12, s13
 80113ce:	6022      	str	r2, [r4, #0]
 80113d0:	6123      	str	r3, [r4, #16]
 80113d2:	edc4 6a07 	vstr	s13, [r4, #28]
 80113d6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80113da:	ee36 7a87 	vadd.f32	s14, s13, s14
 80113de:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80113e2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80113e6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80113ea:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80113ee:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80113f2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80113f6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80113fa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80113fe:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8011402:	68a9      	ldr	r1, [r5, #8]
 8011404:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011408:	ed95 6a08 	vldr	s12, [r5, #32]
 801140c:	edd5 6a07 	vldr	s13, [r5, #28]
 8011410:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011414:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011418:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801141c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8011420:	edc5 6a07 	vstr	s13, [r5, #28]
 8011424:	441a      	add	r2, r3
 8011426:	696b      	ldr	r3, [r5, #20]
 8011428:	3301      	adds	r3, #1
 801142a:	602a      	str	r2, [r5, #0]
 801142c:	616b      	str	r3, [r5, #20]
 801142e:	69ab      	ldr	r3, [r5, #24]
 8011430:	3b01      	subs	r3, #1
 8011432:	61ab      	str	r3, [r5, #24]
 8011434:	692b      	ldr	r3, [r5, #16]
 8011436:	440b      	add	r3, r1
 8011438:	68e9      	ldr	r1, [r5, #12]
 801143a:	428b      	cmp	r3, r1
 801143c:	612b      	str	r3, [r5, #16]
 801143e:	db15      	blt.n	801146c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8011440:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8011444:	3201      	adds	r2, #1
 8011446:	1a5b      	subs	r3, r3, r1
 8011448:	ee76 6a26 	vadd.f32	s13, s12, s13
 801144c:	602a      	str	r2, [r5, #0]
 801144e:	612b      	str	r3, [r5, #16]
 8011450:	edc5 6a07 	vstr	s13, [r5, #28]
 8011454:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8011458:	ee36 7a87 	vadd.f32	s14, s13, s14
 801145c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011460:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8011464:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011468:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801146c:	3f01      	subs	r7, #1
 801146e:	e757      	b.n	8011320 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8011470:	4299      	cmp	r1, r3
 8011472:	dc13      	bgt.n	801149c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8011474:	429a      	cmp	r2, r3
 8011476:	da14      	bge.n	80114a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8011478:	2502      	movs	r5, #2
 801147a:	2703      	movs	r7, #3
 801147c:	f04f 0800 	mov.w	r8, #0
 8011480:	46a9      	mov	r9, r5
 8011482:	f04f 0a01 	mov.w	sl, #1
 8011486:	e6ef      	b.n	8011268 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011488:	2501      	movs	r5, #1
 801148a:	2700      	movs	r7, #0
 801148c:	46a9      	mov	r9, r5
 801148e:	46b8      	mov	r8, r7
 8011490:	f04f 0a02 	mov.w	sl, #2
 8011494:	e6e8      	b.n	8011268 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011496:	2501      	movs	r5, #1
 8011498:	2702      	movs	r7, #2
 801149a:	e6e1      	b.n	8011260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801149c:	2500      	movs	r5, #0
 801149e:	2701      	movs	r7, #1
 80114a0:	e7f4      	b.n	801148c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80114a2:	2702      	movs	r7, #2
 80114a4:	2503      	movs	r5, #3
 80114a6:	f04f 0900 	mov.w	r9, #0
 80114aa:	46b8      	mov	r8, r7
 80114ac:	e7e9      	b.n	8011482 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80114ae:	4613      	mov	r3, r2
 80114b0:	e728      	b.n	8011304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80114b2:	bf00      	nop
 80114b4:	24001ed0 	.word	0x24001ed0
 80114b8:	fffd8f01 	.word	0xfffd8f01
 80114bc:	00027100 	.word	0x00027100
 80114c0:	0004e1ff 	.word	0x0004e1ff
 80114c4:	0004e1fe 	.word	0x0004e1fe
 80114c8:	24001ed8 	.word	0x24001ed8
 80114cc:	4613      	mov	r3, r2
 80114ce:	992b      	ldr	r1, [sp, #172]	; 0xac
 80114d0:	469e      	mov	lr, r3
 80114d2:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80114d4:	469c      	mov	ip, r3
 80114d6:	9111      	str	r1, [sp, #68]	; 0x44
 80114d8:	f04f 0900 	mov.w	r9, #0
 80114dc:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80114e0:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80114e4:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80114e8:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80114ec:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80114f0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80114f4:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80114f8:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80114fc:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8011500:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8011504:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8011508:	f1bc 0f00 	cmp.w	ip, #0
 801150c:	d147      	bne.n	801159e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801150e:	eb03 0c07 	add.w	ip, r3, r7
 8011512:	1ad7      	subs	r7, r2, r3
 8011514:	f1b9 0f00 	cmp.w	r9, #0
 8011518:	d009      	beq.n	801152e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801151a:	9029      	str	r0, [sp, #164]	; 0xa4
 801151c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8011520:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8011524:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8011528:	912d      	str	r1, [sp, #180]	; 0xb4
 801152a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801152e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8011530:	f04f 0800 	mov.w	r8, #0
 8011534:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8011538:	9111      	str	r1, [sp, #68]	; 0x44
 801153a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801153e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8011542:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8011546:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801154a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801154e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8011552:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8011556:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801155a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801155e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8011562:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8011566:	f1be 0f00 	cmp.w	lr, #0
 801156a:	d031      	beq.n	80115d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801156c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801156e:	4450      	add	r0, sl
 8011570:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011574:	4431      	add	r1, r6
 8011576:	ee37 7a04 	vadd.f32	s14, s14, s8
 801157a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801157e:	4549      	cmp	r1, r9
 8011580:	db08      	blt.n	8011594 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8011582:	ee77 7a85 	vadd.f32	s15, s15, s10
 8011586:	3001      	adds	r0, #1
 8011588:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801158c:	eba1 0109 	sub.w	r1, r1, r9
 8011590:	ee37 7a06 	vadd.f32	s14, s14, s12
 8011594:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011598:	f04f 0801 	mov.w	r8, #1
 801159c:	e7e3      	b.n	8011566 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801159e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80115a0:	4450      	add	r0, sl
 80115a2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80115a6:	4431      	add	r1, r6
 80115a8:	ee77 7a84 	vadd.f32	s15, s15, s8
 80115ac:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80115b0:	4541      	cmp	r1, r8
 80115b2:	db08      	blt.n	80115c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80115b4:	ee76 6a85 	vadd.f32	s13, s13, s10
 80115b8:	3001      	adds	r0, #1
 80115ba:	ee37 7a25 	vadd.f32	s14, s14, s11
 80115be:	eba1 0108 	sub.w	r1, r1, r8
 80115c2:	ee77 7a86 	vadd.f32	s15, s15, s12
 80115c6:	f10c 3cff 	add.w	ip, ip, #4294967295
 80115ca:	f04f 0901 	mov.w	r9, #1
 80115ce:	e79b      	b.n	8011508 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80115d0:	449c      	add	ip, r3
 80115d2:	1aff      	subs	r7, r7, r3
 80115d4:	f1b8 0f00 	cmp.w	r8, #0
 80115d8:	d009      	beq.n	80115ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80115da:	9019      	str	r0, [sp, #100]	; 0x64
 80115dc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80115e0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80115e4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80115e8:	911d      	str	r1, [sp, #116]	; 0x74
 80115ea:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80115ee:	1ad2      	subs	r2, r2, r3
 80115f0:	e68b      	b.n	801130a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80115f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80115f4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80115f6:	2b00      	cmp	r3, #0
 80115f8:	f000 80d1 	beq.w	801179e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80115fc:	ad19      	add	r5, sp, #100	; 0x64
 80115fe:	ac39      	add	r4, sp, #228	; 0xe4
 8011600:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011602:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8011606:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801160a:	930c      	str	r3, [sp, #48]	; 0x30
 801160c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801160e:	6963      	ldr	r3, [r4, #20]
 8011610:	440b      	add	r3, r1
 8011612:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8011616:	4408      	add	r0, r1
 8011618:	b200      	sxth	r0, r0
 801161a:	4283      	cmp	r3, r0
 801161c:	900d      	str	r0, [sp, #52]	; 0x34
 801161e:	f280 80c1 	bge.w	80117a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8011622:	428b      	cmp	r3, r1
 8011624:	da08      	bge.n	8011638 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8011626:	2a00      	cmp	r2, #0
 8011628:	dd06      	ble.n	8011638 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801162a:	1acb      	subs	r3, r1, r3
 801162c:	429a      	cmp	r2, r3
 801162e:	f2c0 80bb 	blt.w	80117a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8011632:	2b00      	cmp	r3, #0
 8011634:	f300 80b9 	bgt.w	80117aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8011638:	6967      	ldr	r7, [r4, #20]
 801163a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801163e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011640:	443b      	add	r3, r7
 8011642:	461f      	mov	r7, r3
 8011644:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011646:	1bdf      	subs	r7, r3, r7
 8011648:	4297      	cmp	r7, r2
 801164a:	bfa8      	it	ge
 801164c:	4617      	movge	r7, r2
 801164e:	2f00      	cmp	r7, #0
 8011650:	f340 813c 	ble.w	80118cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8011654:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011656:	6829      	ldr	r1, [r5, #0]
 8011658:	f9b3 2000 	ldrsh.w	r2, [r3]
 801165c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8011660:	4411      	add	r1, r2
 8011662:	6820      	ldr	r0, [r4, #0]
 8011664:	4299      	cmp	r1, r3
 8011666:	dd1a      	ble.n	801169e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011668:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801166c:	4402      	add	r2, r0
 801166e:	440b      	add	r3, r1
 8011670:	b21b      	sxth	r3, r3
 8011672:	429a      	cmp	r2, r3
 8011674:	dc13      	bgt.n	801169e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011676:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011678:	a912      	add	r1, sp, #72	; 0x48
 801167a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801167c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801167e:	681b      	ldr	r3, [r3, #0]
 8011680:	9206      	str	r2, [sp, #24]
 8011682:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011684:	9500      	str	r5, [sp, #0]
 8011686:	9205      	str	r2, [sp, #20]
 8011688:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801168a:	e9cd b203 	strd	fp, r2, [sp, #12]
 801168e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8011690:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011694:	aa49      	add	r2, sp, #292	; 0x124
 8011696:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801169a:	4623      	mov	r3, r4
 801169c:	47c8      	blx	r9
 801169e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80116a2:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80116a6:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80116aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80116ae:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80116b2:	68a1      	ldr	r1, [r4, #8]
 80116b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80116b8:	ed94 6a08 	vldr	s12, [r4, #32]
 80116bc:	edd4 6a07 	vldr	s13, [r4, #28]
 80116c0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80116c4:	ee76 6a86 	vadd.f32	s13, s13, s12
 80116c8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80116cc:	e9d4 2300 	ldrd	r2, r3, [r4]
 80116d0:	edc4 6a07 	vstr	s13, [r4, #28]
 80116d4:	441a      	add	r2, r3
 80116d6:	6963      	ldr	r3, [r4, #20]
 80116d8:	3301      	adds	r3, #1
 80116da:	6022      	str	r2, [r4, #0]
 80116dc:	6163      	str	r3, [r4, #20]
 80116de:	69a3      	ldr	r3, [r4, #24]
 80116e0:	3b01      	subs	r3, #1
 80116e2:	61a3      	str	r3, [r4, #24]
 80116e4:	6923      	ldr	r3, [r4, #16]
 80116e6:	440b      	add	r3, r1
 80116e8:	68e1      	ldr	r1, [r4, #12]
 80116ea:	428b      	cmp	r3, r1
 80116ec:	6123      	str	r3, [r4, #16]
 80116ee:	db15      	blt.n	801171c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80116f0:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80116f4:	3201      	adds	r2, #1
 80116f6:	1a5b      	subs	r3, r3, r1
 80116f8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80116fc:	6022      	str	r2, [r4, #0]
 80116fe:	6123      	str	r3, [r4, #16]
 8011700:	edc4 6a07 	vstr	s13, [r4, #28]
 8011704:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8011708:	ee36 7a87 	vadd.f32	s14, s13, s14
 801170c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8011710:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8011714:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011718:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801171c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8011720:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8011724:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8011728:	ee37 7a27 	vadd.f32	s14, s14, s15
 801172c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8011730:	68a9      	ldr	r1, [r5, #8]
 8011732:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011736:	ed95 6a08 	vldr	s12, [r5, #32]
 801173a:	edd5 6a07 	vldr	s13, [r5, #28]
 801173e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011742:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011746:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801174a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801174e:	edc5 6a07 	vstr	s13, [r5, #28]
 8011752:	441a      	add	r2, r3
 8011754:	696b      	ldr	r3, [r5, #20]
 8011756:	3301      	adds	r3, #1
 8011758:	602a      	str	r2, [r5, #0]
 801175a:	616b      	str	r3, [r5, #20]
 801175c:	69ab      	ldr	r3, [r5, #24]
 801175e:	3b01      	subs	r3, #1
 8011760:	61ab      	str	r3, [r5, #24]
 8011762:	692b      	ldr	r3, [r5, #16]
 8011764:	440b      	add	r3, r1
 8011766:	68e9      	ldr	r1, [r5, #12]
 8011768:	428b      	cmp	r3, r1
 801176a:	612b      	str	r3, [r5, #16]
 801176c:	db15      	blt.n	801179a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801176e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8011772:	3201      	adds	r2, #1
 8011774:	1a5b      	subs	r3, r3, r1
 8011776:	ee76 6a26 	vadd.f32	s13, s12, s13
 801177a:	602a      	str	r2, [r5, #0]
 801177c:	612b      	str	r3, [r5, #16]
 801177e:	edc5 6a07 	vstr	s13, [r5, #28]
 8011782:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8011786:	ee36 7a87 	vadd.f32	s14, s13, s14
 801178a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801178e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8011792:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011796:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801179a:	3f01      	subs	r7, #1
 801179c:	e757      	b.n	801164e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801179e:	ad39      	add	r5, sp, #228	; 0xe4
 80117a0:	ac19      	add	r4, sp, #100	; 0x64
 80117a2:	e72d      	b.n	8011600 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80117a4:	4613      	mov	r3, r2
 80117a6:	e744      	b.n	8011632 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80117a8:	4613      	mov	r3, r2
 80117aa:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80117ac:	469e      	mov	lr, r3
 80117ae:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80117b2:	461f      	mov	r7, r3
 80117b4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80117b8:	f04f 0900 	mov.w	r9, #0
 80117bc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80117c0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80117c4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80117c8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80117cc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80117d0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80117d2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80117d6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80117da:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80117de:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80117e2:	960e      	str	r6, [sp, #56]	; 0x38
 80117e4:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80117e8:	2f00      	cmp	r7, #0
 80117ea:	d146      	bne.n	801187a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80117ec:	449c      	add	ip, r3
 80117ee:	1ad7      	subs	r7, r2, r3
 80117f0:	f1b9 0f00 	cmp.w	r9, #0
 80117f4:	d009      	beq.n	801180a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80117f6:	9039      	str	r0, [sp, #228]	; 0xe4
 80117f8:	913d      	str	r1, [sp, #244]	; 0xf4
 80117fa:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80117fe:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8011802:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8011806:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801180a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801180c:	f04f 0800 	mov.w	r8, #0
 8011810:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8011814:	910e      	str	r1, [sp, #56]	; 0x38
 8011816:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801181a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801181e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8011822:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8011826:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801182a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801182e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8011832:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8011836:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801183a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801183e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8011842:	f1be 0f00 	cmp.w	lr, #0
 8011846:	d030      	beq.n	80118aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8011848:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801184a:	4450      	add	r0, sl
 801184c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011850:	4431      	add	r1, r6
 8011852:	ee37 7a04 	vadd.f32	s14, s14, s8
 8011856:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801185a:	4549      	cmp	r1, r9
 801185c:	db08      	blt.n	8011870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801185e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8011862:	3001      	adds	r0, #1
 8011864:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8011868:	eba1 0109 	sub.w	r1, r1, r9
 801186c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8011870:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011874:	f04f 0801 	mov.w	r8, #1
 8011878:	e7e3      	b.n	8011842 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801187a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801187c:	4450      	add	r0, sl
 801187e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8011882:	4431      	add	r1, r6
 8011884:	ee77 7a84 	vadd.f32	s15, s15, s8
 8011888:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801188c:	4541      	cmp	r1, r8
 801188e:	db08      	blt.n	80118a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8011890:	ee76 6a85 	vadd.f32	s13, s13, s10
 8011894:	3001      	adds	r0, #1
 8011896:	ee37 7a25 	vadd.f32	s14, s14, s11
 801189a:	eba1 0108 	sub.w	r1, r1, r8
 801189e:	ee77 7a86 	vadd.f32	s15, s15, s12
 80118a2:	3f01      	subs	r7, #1
 80118a4:	f04f 0901 	mov.w	r9, #1
 80118a8:	e79e      	b.n	80117e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80118aa:	449c      	add	ip, r3
 80118ac:	1aff      	subs	r7, r7, r3
 80118ae:	f1b8 0f00 	cmp.w	r8, #0
 80118b2:	d009      	beq.n	80118c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80118b4:	9019      	str	r0, [sp, #100]	; 0x64
 80118b6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80118ba:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80118be:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80118c2:	911d      	str	r1, [sp, #116]	; 0x74
 80118c4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80118c8:	1ad2      	subs	r2, r2, r3
 80118ca:	e6b5      	b.n	8011638 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80118cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80118ce:	681b      	ldr	r3, [r3, #0]
 80118d0:	b923      	cbnz	r3, 80118dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80118d2:	4b04      	ldr	r3, [pc, #16]	; (80118e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80118d4:	6818      	ldr	r0, [r3, #0]
 80118d6:	6803      	ldr	r3, [r0, #0]
 80118d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118da:	4798      	blx	r3
 80118dc:	b05b      	add	sp, #364	; 0x16c
 80118de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118e2:	bf00      	nop
 80118e4:	24001ed8 	.word	0x24001ed8

080118e8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80118e8:	b570      	push	{r4, r5, r6, lr}
 80118ea:	4604      	mov	r4, r0
 80118ec:	2500      	movs	r5, #0
 80118ee:	9805      	ldr	r0, [sp, #20]
 80118f0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80118f4:	6061      	str	r1, [r4, #4]
 80118f6:	8263      	strh	r3, [r4, #18]
 80118f8:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80118fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011900:	8025      	strh	r5, [r4, #0]
 8011902:	7221      	strb	r1, [r4, #8]
 8011904:	7266      	strb	r6, [r4, #9]
 8011906:	60e0      	str	r0, [r4, #12]
 8011908:	8222      	strh	r2, [r4, #16]
 801190a:	82a3      	strh	r3, [r4, #20]
 801190c:	82e5      	strh	r5, [r4, #22]
 801190e:	8325      	strh	r5, [r4, #24]
 8011910:	8365      	strh	r5, [r4, #26]
 8011912:	83a5      	strh	r5, [r4, #28]
 8011914:	83e5      	strh	r5, [r4, #30]
 8011916:	8425      	strh	r5, [r4, #32]
 8011918:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 801191c:	b32e      	cbz	r6, 801196a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801191e:	6803      	ldr	r3, [r0, #0]
 8011920:	695b      	ldr	r3, [r3, #20]
 8011922:	4798      	blx	r3
 8011924:	4606      	mov	r6, r0
 8011926:	b300      	cbz	r0, 801196a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8011928:	68e0      	ldr	r0, [r4, #12]
 801192a:	4631      	mov	r1, r6
 801192c:	6803      	ldr	r3, [r0, #0]
 801192e:	68db      	ldr	r3, [r3, #12]
 8011930:	4798      	blx	r3
 8011932:	4605      	mov	r5, r0
 8011934:	b1c8      	cbz	r0, 801196a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8011936:	7b43      	ldrb	r3, [r0, #13]
 8011938:	7a82      	ldrb	r2, [r0, #10]
 801193a:	005b      	lsls	r3, r3, #1
 801193c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011940:	4313      	orrs	r3, r2
 8011942:	8423      	strh	r3, [r4, #32]
 8011944:	7a63      	ldrb	r3, [r4, #9]
 8011946:	2b06      	cmp	r3, #6
 8011948:	d10f      	bne.n	801196a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801194a:	68e0      	ldr	r0, [r4, #12]
 801194c:	462a      	mov	r2, r5
 801194e:	4631      	mov	r1, r6
 8011950:	6803      	ldr	r3, [r0, #0]
 8011952:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011954:	4798      	blx	r3
 8011956:	7b6b      	ldrb	r3, [r5, #13]
 8011958:	005b      	lsls	r3, r3, #1
 801195a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801195e:	7aab      	ldrb	r3, [r5, #10]
 8011960:	4313      	orrs	r3, r2
 8011962:	4418      	add	r0, r3
 8011964:	8c23      	ldrh	r3, [r4, #32]
 8011966:	4418      	add	r0, r3
 8011968:	8420      	strh	r0, [r4, #32]
 801196a:	4620      	mov	r0, r4
 801196c:	bd70      	pop	{r4, r5, r6, pc}

0801196e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801196e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011972:	2400      	movs	r4, #0
 8011974:	b085      	sub	sp, #20
 8011976:	4681      	mov	r9, r0
 8011978:	4688      	mov	r8, r1
 801197a:	4692      	mov	sl, r2
 801197c:	469b      	mov	fp, r3
 801197e:	4627      	mov	r7, r4
 8011980:	4625      	mov	r5, r4
 8011982:	4626      	mov	r6, r4
 8011984:	4554      	cmp	r4, sl
 8011986:	da2a      	bge.n	80119de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8011988:	2300      	movs	r3, #0
 801198a:	9303      	str	r3, [sp, #12]
 801198c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011990:	429d      	cmp	r5, r3
 8011992:	d004      	beq.n	801199e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8011994:	f242 030b 	movw	r3, #8203	; 0x200b
 8011998:	429d      	cmp	r5, r3
 801199a:	bf18      	it	ne
 801199c:	462f      	movne	r7, r5
 801199e:	ab03      	add	r3, sp, #12
 80119a0:	4642      	mov	r2, r8
 80119a2:	4659      	mov	r1, fp
 80119a4:	4648      	mov	r0, r9
 80119a6:	f002 ff79 	bl	801489c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80119aa:	4605      	mov	r5, r0
 80119ac:	b1b8      	cbz	r0, 80119de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80119ae:	280a      	cmp	r0, #10
 80119b0:	d015      	beq.n	80119de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80119b2:	9a03      	ldr	r2, [sp, #12]
 80119b4:	b18a      	cbz	r2, 80119da <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80119b6:	7b50      	ldrb	r0, [r2, #13]
 80119b8:	4639      	mov	r1, r7
 80119ba:	7a93      	ldrb	r3, [r2, #10]
 80119bc:	0040      	lsls	r0, r0, #1
 80119be:	8895      	ldrh	r5, [r2, #4]
 80119c0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80119c4:	4303      	orrs	r3, r0
 80119c6:	4640      	mov	r0, r8
 80119c8:	9301      	str	r3, [sp, #4]
 80119ca:	f8d8 3000 	ldr.w	r3, [r8]
 80119ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80119d0:	4798      	blx	r3
 80119d2:	9b01      	ldr	r3, [sp, #4]
 80119d4:	4418      	add	r0, r3
 80119d6:	4406      	add	r6, r0
 80119d8:	b2b6      	uxth	r6, r6
 80119da:	3401      	adds	r4, #1
 80119dc:	e7d2      	b.n	8011984 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80119de:	4630      	mov	r0, r6
 80119e0:	b005      	add	sp, #20
 80119e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080119e6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80119e6:	2a02      	cmp	r2, #2
 80119e8:	b530      	push	{r4, r5, lr}
 80119ea:	d011      	beq.n	8011a10 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80119ec:	2a03      	cmp	r2, #3
 80119ee:	d01c      	beq.n	8011a2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80119f0:	2a01      	cmp	r2, #1
 80119f2:	d10c      	bne.n	8011a0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80119f4:	888b      	ldrh	r3, [r1, #4]
 80119f6:	8801      	ldrh	r1, [r0, #0]
 80119f8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80119fc:	1a5b      	subs	r3, r3, r1
 80119fe:	8844      	ldrh	r4, [r0, #2]
 8011a00:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011a04:	1a9b      	subs	r3, r3, r2
 8011a06:	8004      	strh	r4, [r0, #0]
 8011a08:	8081      	strh	r1, [r0, #4]
 8011a0a:	8043      	strh	r3, [r0, #2]
 8011a0c:	80c2      	strh	r2, [r0, #6]
 8011a0e:	bd30      	pop	{r4, r5, pc}
 8011a10:	88cb      	ldrh	r3, [r1, #6]
 8011a12:	8842      	ldrh	r2, [r0, #2]
 8011a14:	1a9b      	subs	r3, r3, r2
 8011a16:	88c2      	ldrh	r2, [r0, #6]
 8011a18:	1a9b      	subs	r3, r3, r2
 8011a1a:	888a      	ldrh	r2, [r1, #4]
 8011a1c:	8801      	ldrh	r1, [r0, #0]
 8011a1e:	8043      	strh	r3, [r0, #2]
 8011a20:	1a52      	subs	r2, r2, r1
 8011a22:	8881      	ldrh	r1, [r0, #4]
 8011a24:	1a52      	subs	r2, r2, r1
 8011a26:	8002      	strh	r2, [r0, #0]
 8011a28:	e7f1      	b.n	8011a0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8011a2a:	88cb      	ldrh	r3, [r1, #6]
 8011a2c:	8841      	ldrh	r1, [r0, #2]
 8011a2e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8011a32:	1a5b      	subs	r3, r3, r1
 8011a34:	f9b0 5000 	ldrsh.w	r5, [r0]
 8011a38:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8011a3c:	1a9b      	subs	r3, r3, r2
 8011a3e:	8045      	strh	r5, [r0, #2]
 8011a40:	8082      	strh	r2, [r0, #4]
 8011a42:	8003      	strh	r3, [r0, #0]
 8011a44:	80c4      	strh	r4, [r0, #6]
 8011a46:	e7e2      	b.n	8011a0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08011a48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8011a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a4c:	b09f      	sub	sp, #124	; 0x7c
 8011a4e:	9116      	str	r1, [sp, #88]	; 0x58
 8011a50:	9317      	str	r3, [sp, #92]	; 0x5c
 8011a52:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8011a54:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011a56:	8809      	ldrh	r1, [r1, #0]
 8011a58:	889b      	ldrh	r3, [r3, #4]
 8011a5a:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8011a5e:	440b      	add	r3, r1
 8011a60:	9212      	str	r2, [sp, #72]	; 0x48
 8011a62:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8011a66:	b21b      	sxth	r3, r3
 8011a68:	9011      	str	r0, [sp, #68]	; 0x44
 8011a6a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8011a6e:	9310      	str	r3, [sp, #64]	; 0x40
 8011a70:	f8d8 3000 	ldr.w	r3, [r8]
 8011a74:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8011a78:	7b19      	ldrb	r1, [r3, #12]
 8011a7a:	7adb      	ldrb	r3, [r3, #11]
 8011a7c:	9114      	str	r1, [sp, #80]	; 0x50
 8011a7e:	9315      	str	r3, [sp, #84]	; 0x54
 8011a80:	2a00      	cmp	r2, #0
 8011a82:	d06a      	beq.n	8011b5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8011a84:	f898 3010 	ldrb.w	r3, [r8, #16]
 8011a88:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8011a8a:	2b06      	cmp	r3, #6
 8011a8c:	bf14      	ite	ne
 8011a8e:	2301      	movne	r3, #1
 8011a90:	2302      	moveq	r3, #2
 8011a92:	4413      	add	r3, r2
 8011a94:	f04f 0900 	mov.w	r9, #0
 8011a98:	930f      	str	r3, [sp, #60]	; 0x3c
 8011a9a:	464c      	mov	r4, r9
 8011a9c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8011aa0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8011aa4:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8011aa8:	4293      	cmp	r3, r2
 8011aaa:	f280 808f 	bge.w	8011bcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8011aae:	2300      	movs	r3, #0
 8011ab0:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8011ab4:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8011ab8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011abc:	429c      	cmp	r4, r3
 8011abe:	d006      	beq.n	8011ace <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8011ac0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011ac2:	f242 020b 	movw	r2, #8203	; 0x200b
 8011ac6:	4294      	cmp	r4, r2
 8011ac8:	bf18      	it	ne
 8011aca:	4623      	movne	r3, r4
 8011acc:	930d      	str	r3, [sp, #52]	; 0x34
 8011ace:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ad0:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8011ad2:	f8d8 2000 	ldr.w	r2, [r8]
 8011ad6:	428b      	cmp	r3, r1
 8011ad8:	db41      	blt.n	8011b5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8011ada:	6813      	ldr	r3, [r2, #0]
 8011adc:	4610      	mov	r0, r2
 8011ade:	695b      	ldr	r3, [r3, #20]
 8011ae0:	4798      	blx	r3
 8011ae2:	4604      	mov	r4, r0
 8011ae4:	f8d8 0000 	ldr.w	r0, [r8]
 8011ae8:	aa1d      	add	r2, sp, #116	; 0x74
 8011aea:	4621      	mov	r1, r4
 8011aec:	6803      	ldr	r3, [r0, #0]
 8011aee:	689d      	ldr	r5, [r3, #8]
 8011af0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8011af4:	47a8      	blx	r5
 8011af6:	901c      	str	r0, [sp, #112]	; 0x70
 8011af8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011afc:	429c      	cmp	r4, r3
 8011afe:	f000 80ec 	beq.w	8011cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8011b02:	f242 030b 	movw	r3, #8203	; 0x200b
 8011b06:	429c      	cmp	r4, r3
 8011b08:	f000 80e7 	beq.w	8011cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8011b0c:	2c00      	cmp	r4, #0
 8011b0e:	f000 80f9 	beq.w	8011d04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8011b12:	2c0a      	cmp	r4, #10
 8011b14:	d060      	beq.n	8011bd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8011b16:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8011b18:	b36a      	cbz	r2, 8011b76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8011b1a:	8894      	ldrh	r4, [r2, #4]
 8011b1c:	f1bb 0f00 	cmp.w	fp, #0
 8011b20:	d03b      	beq.n	8011b9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8011b22:	f892 900d 	ldrb.w	r9, [r2, #13]
 8011b26:	f1bb 0f01 	cmp.w	fp, #1
 8011b2a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8011b2e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8011b32:	f892 900a 	ldrb.w	r9, [r2, #10]
 8011b36:	ea49 0903 	orr.w	r9, r9, r3
 8011b3a:	d134      	bne.n	8011ba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8011b3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011b3e:	eba6 0609 	sub.w	r6, r6, r9
 8011b42:	2b00      	cmp	r3, #0
 8011b44:	d14f      	bne.n	8011be6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8011b46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011b48:	eb09 0306 	add.w	r3, r9, r6
 8011b4c:	4413      	add	r3, r2
 8011b4e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8011b50:	f9b2 2000 	ldrsh.w	r2, [r2]
 8011b54:	4293      	cmp	r3, r2
 8011b56:	da51      	bge.n	8011bfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8011b58:	e038      	b.n	8011bcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8011b5a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8011b5c:	e79a      	b.n	8011a94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8011b5e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8011b62:	4659      	mov	r1, fp
 8011b64:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8011b66:	9301      	str	r3, [sp, #4]
 8011b68:	ab1d      	add	r3, sp, #116	; 0x74
 8011b6a:	9300      	str	r3, [sp, #0]
 8011b6c:	ab1c      	add	r3, sp, #112	; 0x70
 8011b6e:	f002 fede 	bl	801492e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8011b72:	4604      	mov	r4, r0
 8011b74:	e7c0      	b.n	8011af8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8011b76:	f8d8 0000 	ldr.w	r0, [r8]
 8011b7a:	6803      	ldr	r3, [r0, #0]
 8011b7c:	691b      	ldr	r3, [r3, #16]
 8011b7e:	4798      	blx	r3
 8011b80:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011b84:	4298      	cmp	r0, r3
 8011b86:	f000 80a8 	beq.w	8011cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8011b8a:	f242 030b 	movw	r3, #8203	; 0x200b
 8011b8e:	4298      	cmp	r0, r3
 8011b90:	f000 80a3 	beq.w	8011cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8011b94:	f1bb 0f00 	cmp.w	fp, #0
 8011b98:	d100      	bne.n	8011b9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8011b9a:	444e      	add	r6, r9
 8011b9c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8011b9e:	2a00      	cmp	r2, #0
 8011ba0:	d1bf      	bne.n	8011b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8011ba2:	4691      	mov	r9, r2
 8011ba4:	e099      	b.n	8011cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8011ba6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011ba8:	2b00      	cmp	r3, #0
 8011baa:	f000 80ad 	beq.w	8011d08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 8011bae:	f1bb 0f00 	cmp.w	fp, #0
 8011bb2:	d118      	bne.n	8011be6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8011bb4:	f8d8 0000 	ldr.w	r0, [r8]
 8011bb8:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011bba:	6803      	ldr	r3, [r0, #0]
 8011bbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011bbe:	4798      	blx	r3
 8011bc0:	4406      	add	r6, r0
 8011bc2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011bc4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011bc6:	1af3      	subs	r3, r6, r3
 8011bc8:	4293      	cmp	r3, r2
 8011bca:	dd17      	ble.n	8011bfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8011bcc:	2c00      	cmp	r4, #0
 8011bce:	f000 8099 	beq.w	8011d04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8011bd2:	2c0a      	cmp	r4, #10
 8011bd4:	f040 8087 	bne.w	8011ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8011bd8:	240a      	movs	r4, #10
 8011bda:	fab4 f084 	clz	r0, r4
 8011bde:	0940      	lsrs	r0, r0, #5
 8011be0:	b01f      	add	sp, #124	; 0x7c
 8011be2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011be6:	f8d8 0000 	ldr.w	r0, [r8]
 8011bea:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011bec:	6803      	ldr	r3, [r0, #0]
 8011bee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011bf0:	4798      	blx	r3
 8011bf2:	f1bb 0f01 	cmp.w	fp, #1
 8011bf6:	eba6 0600 	sub.w	r6, r6, r0
 8011bfa:	d0a4      	beq.n	8011b46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8011bfc:	981c      	ldr	r0, [sp, #112]	; 0x70
 8011bfe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011c00:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8011c04:	f9b3 7000 	ldrsh.w	r7, [r3]
 8011c08:	7b43      	ldrb	r3, [r0, #13]
 8011c0a:	4431      	add	r1, r6
 8011c0c:	015b      	lsls	r3, r3, #5
 8011c0e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011c12:	7983      	ldrb	r3, [r0, #6]
 8011c14:	4313      	orrs	r3, r2
 8011c16:	440b      	add	r3, r1
 8011c18:	42bb      	cmp	r3, r7
 8011c1a:	db5e      	blt.n	8011cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8011c1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011c1e:	4299      	cmp	r1, r3
 8011c20:	da5b      	bge.n	8011cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8011c22:	f8d8 0000 	ldr.w	r0, [r8]
 8011c26:	42b7      	cmp	r7, r6
 8011c28:	6803      	ldr	r3, [r0, #0]
 8011c2a:	bfcc      	ite	gt
 8011c2c:	1bbf      	subgt	r7, r7, r6
 8011c2e:	2700      	movle	r7, #0
 8011c30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011c32:	bfc8      	it	gt
 8011c34:	b2bf      	uxthgt	r7, r7
 8011c36:	4798      	blx	r3
 8011c38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8011c3a:	7b5a      	ldrb	r2, [r3, #13]
 8011c3c:	00d1      	lsls	r1, r2, #3
 8011c3e:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8011c42:	7a19      	ldrb	r1, [r3, #8]
 8011c44:	4329      	orrs	r1, r5
 8011c46:	0655      	lsls	r5, r2, #25
 8011c48:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8011c4a:	bf48      	it	mi
 8011c4c:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8011c50:	4405      	add	r5, r0
 8011c52:	bf48      	it	mi
 8011c54:	b209      	sxthmi	r1, r1
 8011c56:	1a6d      	subs	r5, r5, r1
 8011c58:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8011c5a:	b2ad      	uxth	r5, r5
 8011c5c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8011c60:	fa0f fa85 	sxth.w	sl, r5
 8011c64:	4551      	cmp	r1, sl
 8011c66:	dd3c      	ble.n	8011ce2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8011c68:	0112      	lsls	r2, r2, #4
 8011c6a:	79d8      	ldrb	r0, [r3, #7]
 8011c6c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011c70:	4302      	orrs	r2, r0
 8011c72:	4492      	add	sl, r2
 8011c74:	4551      	cmp	r1, sl
 8011c76:	dc30      	bgt.n	8011cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8011c78:	1b4d      	subs	r5, r1, r5
 8011c7a:	468a      	mov	sl, r1
 8011c7c:	b22d      	sxth	r5, r5
 8011c7e:	9319      	str	r3, [sp, #100]	; 0x64
 8011c80:	b2ad      	uxth	r5, r5
 8011c82:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011c84:	f8d8 0000 	ldr.w	r0, [r8]
 8011c88:	681a      	ldr	r2, [r3, #0]
 8011c8a:	6801      	ldr	r1, [r0, #0]
 8011c8c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8011c8e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8011c90:	9313      	str	r3, [sp, #76]	; 0x4c
 8011c92:	9218      	str	r2, [sp, #96]	; 0x60
 8011c94:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8011c96:	4788      	blx	r1
 8011c98:	f898 1006 	ldrb.w	r1, [r8, #6]
 8011c9c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8011c9e:	910b      	str	r1, [sp, #44]	; 0x2c
 8011ca0:	f898 100e 	ldrb.w	r1, [r8, #14]
 8011ca4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8011ca6:	910a      	str	r1, [sp, #40]	; 0x28
 8011ca8:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8011cac:	9109      	str	r1, [sp, #36]	; 0x24
 8011cae:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8011cb2:	9305      	str	r3, [sp, #20]
 8011cb4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011cb6:	9206      	str	r2, [sp, #24]
 8011cb8:	9304      	str	r3, [sp, #16]
 8011cba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011cbc:	f8cd a004 	str.w	sl, [sp, #4]
 8011cc0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8011cc4:	4437      	add	r7, r6
 8011cc6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011cc8:	b23f      	sxth	r7, r7
 8011cca:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8011cce:	9700      	str	r7, [sp, #0]
 8011cd0:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011cd2:	681a      	ldr	r2, [r3, #0]
 8011cd4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011cd6:	685b      	ldr	r3, [r3, #4]
 8011cd8:	47a8      	blx	r5
 8011cda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011cdc:	3301      	adds	r3, #1
 8011cde:	930e      	str	r3, [sp, #56]	; 0x38
 8011ce0:	e6e0      	b.n	8011aa4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8011ce2:	2500      	movs	r5, #0
 8011ce4:	e7cb      	b.n	8011c7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 8011ce6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8011ce8:	3501      	adds	r5, #1
 8011cea:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8011cec:	429d      	cmp	r5, r3
 8011cee:	f6bf af74 	bge.w	8011bda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8011cf2:	4659      	mov	r1, fp
 8011cf4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8011cf6:	f7fb f92d 	bl	800cf54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011cfa:	4604      	mov	r4, r0
 8011cfc:	b110      	cbz	r0, 8011d04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8011cfe:	280a      	cmp	r0, #10
 8011d00:	d1f2      	bne.n	8011ce8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 8011d02:	e769      	b.n	8011bd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8011d04:	2400      	movs	r4, #0
 8011d06:	e768      	b.n	8011bda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8011d08:	f1bb 0f00 	cmp.w	fp, #0
 8011d0c:	f43f af59 	beq.w	8011bc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8011d10:	e774      	b.n	8011bfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08011d12 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8011d12:	b530      	push	{r4, r5, lr}
 8011d14:	8ac4      	ldrh	r4, [r0, #22]
 8011d16:	8b45      	ldrh	r5, [r0, #26]
 8011d18:	8343      	strh	r3, [r0, #26]
 8011d1a:	442c      	add	r4, r5
 8011d1c:	1ae4      	subs	r4, r4, r3
 8011d1e:	8b83      	ldrh	r3, [r0, #28]
 8011d20:	82c4      	strh	r4, [r0, #22]
 8011d22:	8b04      	ldrh	r4, [r0, #24]
 8011d24:	4422      	add	r2, r4
 8011d26:	440c      	add	r4, r1
 8011d28:	1a59      	subs	r1, r3, r1
 8011d2a:	83c2      	strh	r2, [r0, #30]
 8011d2c:	8304      	strh	r4, [r0, #24]
 8011d2e:	8381      	strh	r1, [r0, #28]
 8011d30:	bd30      	pop	{r4, r5, pc}

08011d32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8011d32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d36:	4604      	mov	r4, r0
 8011d38:	8a47      	ldrh	r7, [r0, #18]
 8011d3a:	68c0      	ldr	r0, [r0, #12]
 8011d3c:	b085      	sub	sp, #20
 8011d3e:	6803      	ldr	r3, [r0, #0]
 8011d40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011d42:	4798      	blx	r3
 8011d44:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8011d48:	7a63      	ldrb	r3, [r4, #9]
 8011d4a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8011d4e:	3b01      	subs	r3, #1
 8011d50:	42b7      	cmp	r7, r6
 8011d52:	bfac      	ite	ge
 8011d54:	f04f 0900 	movge.w	r9, #0
 8011d58:	f04f 0901 	movlt.w	r9, #1
 8011d5c:	2b05      	cmp	r3, #5
 8011d5e:	d804      	bhi.n	8011d6a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 8011d60:	e8df f003 	tbb	[pc, r3]
 8011d64:	470f0854 	.word	0x470f0854
 8011d68:	4c4c      	.short	0x4c4c
 8011d6a:	2500      	movs	r5, #0
 8011d6c:	46a9      	mov	r9, r5
 8011d6e:	462e      	mov	r6, r5
 8011d70:	462f      	mov	r7, r5
 8011d72:	e00e      	b.n	8011d92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011d74:	42b7      	cmp	r7, r6
 8011d76:	f04f 0500 	mov.w	r5, #0
 8011d7a:	bfb4      	ite	lt
 8011d7c:	2600      	movlt	r6, #0
 8011d7e:	2601      	movge	r6, #1
 8011d80:	e7f6      	b.n	8011d70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8011d82:	42b7      	cmp	r7, r6
 8011d84:	464d      	mov	r5, r9
 8011d86:	f04f 0900 	mov.w	r9, #0
 8011d8a:	bfb4      	ite	lt
 8011d8c:	2600      	movlt	r6, #0
 8011d8e:	2601      	movge	r6, #1
 8011d90:	464f      	mov	r7, r9
 8011d92:	f04f 0800 	mov.w	r8, #0
 8011d96:	f8a4 8016 	strh.w	r8, [r4, #22]
 8011d9a:	f8a4 8018 	strh.w	r8, [r4, #24]
 8011d9e:	f8cd 8004 	str.w	r8, [sp, #4]
 8011da2:	2300      	movs	r3, #0
 8011da4:	9303      	str	r3, [sp, #12]
 8011da6:	8823      	ldrh	r3, [r4, #0]
 8011da8:	2b20      	cmp	r3, #32
 8011daa:	d033      	beq.n	8011e14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 8011dac:	f242 010b 	movw	r1, #8203	; 0x200b
 8011db0:	1a5a      	subs	r2, r3, r1
 8011db2:	f1d2 0a00 	rsbs	sl, r2, #0
 8011db6:	eb4a 0a02 	adc.w	sl, sl, r2
 8011dba:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011dbe:	4293      	cmp	r3, r2
 8011dc0:	d008      	beq.n	8011dd4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8011dc2:	428b      	cmp	r3, r1
 8011dc4:	9a01      	ldr	r2, [sp, #4]
 8011dc6:	bf0e      	itee	eq
 8011dc8:	f04f 0a01 	moveq.w	sl, #1
 8011dcc:	461a      	movne	r2, r3
 8011dce:	f04f 0a00 	movne.w	sl, #0
 8011dd2:	9201      	str	r2, [sp, #4]
 8011dd4:	ab03      	add	r3, sp, #12
 8011dd6:	68e2      	ldr	r2, [r4, #12]
 8011dd8:	7a21      	ldrb	r1, [r4, #8]
 8011dda:	6860      	ldr	r0, [r4, #4]
 8011ddc:	f002 fd5e 	bl	801489c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011de0:	8020      	strh	r0, [r4, #0]
 8011de2:	b9d8      	cbnz	r0, 8011e1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 8011de4:	8ba2      	ldrh	r2, [r4, #28]
 8011de6:	2300      	movs	r3, #0
 8011de8:	4611      	mov	r1, r2
 8011dea:	4620      	mov	r0, r4
 8011dec:	f7ff ff91 	bl	8011d12 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8011df0:	e06e      	b.n	8011ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8011df2:	2500      	movs	r5, #0
 8011df4:	2701      	movs	r7, #1
 8011df6:	46a9      	mov	r9, r5
 8011df8:	462e      	mov	r6, r5
 8011dfa:	e7ca      	b.n	8011d92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011dfc:	42b7      	cmp	r7, r6
 8011dfe:	f04f 0500 	mov.w	r5, #0
 8011e02:	bfb4      	ite	lt
 8011e04:	2700      	movlt	r7, #0
 8011e06:	2701      	movge	r7, #1
 8011e08:	462e      	mov	r6, r5
 8011e0a:	e7c2      	b.n	8011d92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011e0c:	2500      	movs	r5, #0
 8011e0e:	2601      	movs	r6, #1
 8011e10:	46a9      	mov	r9, r5
 8011e12:	e7ad      	b.n	8011d70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8011e14:	9301      	str	r3, [sp, #4]
 8011e16:	f04f 0a01 	mov.w	sl, #1
 8011e1a:	e7db      	b.n	8011dd4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8011e1c:	8b63      	ldrh	r3, [r4, #26]
 8011e1e:	280a      	cmp	r0, #10
 8011e20:	f103 0301 	add.w	r3, r3, #1
 8011e24:	8363      	strh	r3, [r4, #26]
 8011e26:	d0dd      	beq.n	8011de4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 8011e28:	9a03      	ldr	r2, [sp, #12]
 8011e2a:	bb62      	cbnz	r2, 8011e86 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 8011e2c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011e30:	4298      	cmp	r0, r3
 8011e32:	d003      	beq.n	8011e3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8011e34:	f242 030b 	movw	r3, #8203	; 0x200b
 8011e38:	4298      	cmp	r0, r3
 8011e3a:	d1b2      	bne.n	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011e3c:	8823      	ldrh	r3, [r4, #0]
 8011e3e:	8ba1      	ldrh	r1, [r4, #28]
 8011e40:	2b20      	cmp	r3, #32
 8011e42:	d003      	beq.n	8011e4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 8011e44:	f242 000b 	movw	r0, #8203	; 0x200b
 8011e48:	4283      	cmp	r3, r0
 8011e4a:	d131      	bne.n	8011eb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 8011e4c:	f1ba 0f00 	cmp.w	sl, #0
 8011e50:	bf0a      	itet	eq
 8011e52:	4688      	moveq	r8, r1
 8011e54:	4650      	movne	r0, sl
 8011e56:	2001      	moveq	r0, #1
 8011e58:	440a      	add	r2, r1
 8011e5a:	8b23      	ldrh	r3, [r4, #24]
 8011e5c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8011e60:	b292      	uxth	r2, r2
 8011e62:	83a2      	strh	r2, [r4, #28]
 8011e64:	4413      	add	r3, r2
 8011e66:	f1b9 0f00 	cmp.w	r9, #0
 8011e6a:	d102      	bne.n	8011e72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 8011e6c:	2d00      	cmp	r5, #0
 8011e6e:	d042      	beq.n	8011ef6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 8011e70:	b300      	cbz	r0, 8011eb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 8011e72:	8c21      	ldrh	r1, [r4, #32]
 8011e74:	4419      	add	r1, r3
 8011e76:	458c      	cmp	ip, r1
 8011e78:	da37      	bge.n	8011eea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8011e7a:	8ae1      	ldrh	r1, [r4, #22]
 8011e7c:	2900      	cmp	r1, #0
 8011e7e:	d034      	beq.n	8011eea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8011e80:	4563      	cmp	r3, ip
 8011e82:	dd8e      	ble.n	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011e84:	e01d      	b.n	8011ec2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 8011e86:	8893      	ldrh	r3, [r2, #4]
 8011e88:	9901      	ldr	r1, [sp, #4]
 8011e8a:	8023      	strh	r3, [r4, #0]
 8011e8c:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8011e90:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8011e94:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8011e98:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8011e9c:	ea4b 0b00 	orr.w	fp, fp, r0
 8011ea0:	68e0      	ldr	r0, [r4, #12]
 8011ea2:	6803      	ldr	r3, [r0, #0]
 8011ea4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011ea6:	4798      	blx	r3
 8011ea8:	eb0b 0200 	add.w	r2, fp, r0
 8011eac:	b292      	uxth	r2, r2
 8011eae:	e7c5      	b.n	8011e3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8011eb0:	2000      	movs	r0, #0
 8011eb2:	e7d1      	b.n	8011e58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 8011eb4:	4563      	cmp	r3, ip
 8011eb6:	f77f af74 	ble.w	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011eba:	8ae3      	ldrh	r3, [r4, #22]
 8011ebc:	2b00      	cmp	r3, #0
 8011ebe:	f43f af70 	beq.w	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011ec2:	2301      	movs	r3, #1
 8011ec4:	8c22      	ldrh	r2, [r4, #32]
 8011ec6:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8011eca:	8be3      	ldrh	r3, [r4, #30]
 8011ecc:	4413      	add	r3, r2
 8011ece:	83e3      	strh	r3, [r4, #30]
 8011ed0:	68e0      	ldr	r0, [r4, #12]
 8011ed2:	6803      	ldr	r3, [r0, #0]
 8011ed4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011ed6:	4798      	blx	r3
 8011ed8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8011edc:	4418      	add	r0, r3
 8011ede:	8a63      	ldrh	r3, [r4, #18]
 8011ee0:	1a18      	subs	r0, r3, r0
 8011ee2:	8260      	strh	r0, [r4, #18]
 8011ee4:	b005      	add	sp, #20
 8011ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011eea:	2300      	movs	r3, #0
 8011eec:	4611      	mov	r1, r2
 8011eee:	4620      	mov	r0, r4
 8011ef0:	f7ff ff0f 	bl	8011d12 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8011ef4:	e755      	b.n	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011ef6:	4563      	cmp	r3, ip
 8011ef8:	dd14      	ble.n	8011f24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 8011efa:	b117      	cbz	r7, 8011f02 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 8011efc:	2301      	movs	r3, #1
 8011efe:	460a      	mov	r2, r1
 8011f00:	e772      	b.n	8011de8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 8011f02:	2e00      	cmp	r6, #0
 8011f04:	f43f af4d 	beq.w	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011f08:	2800      	cmp	r0, #0
 8011f0a:	f47f af4a 	bne.w	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011f0e:	f1ba 0f00 	cmp.w	sl, #0
 8011f12:	d002      	beq.n	8011f1a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 8011f14:	2301      	movs	r3, #1
 8011f16:	4642      	mov	r2, r8
 8011f18:	e767      	b.n	8011dea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8011f1a:	8ae3      	ldrh	r3, [r4, #22]
 8011f1c:	2b00      	cmp	r3, #0
 8011f1e:	f43f af40 	beq.w	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011f22:	e7d5      	b.n	8011ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8011f24:	2800      	cmp	r0, #0
 8011f26:	f47f af3c 	bne.w	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011f2a:	f1ba 0f00 	cmp.w	sl, #0
 8011f2e:	f43f af38 	beq.w	8011da2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011f32:	2301      	movs	r3, #1
 8011f34:	4642      	mov	r2, r8
 8011f36:	e7da      	b.n	8011eee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

08011f38 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8011f38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f3a:	4605      	mov	r5, r0
 8011f3c:	b08f      	sub	sp, #60	; 0x3c
 8011f3e:	4617      	mov	r7, r2
 8011f40:	461c      	mov	r4, r3
 8011f42:	460e      	mov	r6, r1
 8011f44:	b1d1      	cbz	r1, 8011f7c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8011f46:	681b      	ldr	r3, [r3, #0]
 8011f48:	4620      	mov	r0, r4
 8011f4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011f4c:	4798      	blx	r3
 8011f4e:	4240      	negs	r0, r0
 8011f50:	9603      	str	r6, [sp, #12]
 8011f52:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011f56:	b200      	sxth	r0, r0
 8011f58:	9700      	str	r7, [sp, #0]
 8011f5a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8011f5e:	4629      	mov	r1, r5
 8011f60:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8011f64:	2401      	movs	r4, #1
 8011f66:	a805      	add	r0, sp, #20
 8011f68:	f7ff fcbe 	bl	80118e8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8011f6c:	a805      	add	r0, sp, #20
 8011f6e:	f7ff fee0 	bl	8011d32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011f72:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8011f76:	b163      	cbz	r3, 8011f92 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8011f78:	3401      	adds	r4, #1
 8011f7a:	e7f7      	b.n	8011f6c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8011f7c:	2401      	movs	r4, #1
 8011f7e:	f002 fd59 	bl	8014a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011f82:	280a      	cmp	r0, #10
 8011f84:	4628      	mov	r0, r5
 8011f86:	bf08      	it	eq
 8011f88:	3401      	addeq	r4, #1
 8011f8a:	f002 fd53 	bl	8014a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011f8e:	2800      	cmp	r0, #0
 8011f90:	d1f7      	bne.n	8011f82 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8011f92:	b2a0      	uxth	r0, r4
 8011f94:	b00f      	add	sp, #60	; 0x3c
 8011f96:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011f98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8011f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f9c:	b0e3      	sub	sp, #396	; 0x18c
 8011f9e:	461c      	mov	r4, r3
 8011fa0:	4683      	mov	fp, r0
 8011fa2:	4688      	mov	r8, r1
 8011fa4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8011fa6:	2b00      	cmp	r3, #0
 8011fa8:	f000 8112 	beq.w	80121d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011fac:	6823      	ldr	r3, [r4, #0]
 8011fae:	2b00      	cmp	r3, #0
 8011fb0:	f000 810e 	beq.w	80121d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011fb4:	7ba3      	ldrb	r3, [r4, #14]
 8011fb6:	2b00      	cmp	r3, #0
 8011fb8:	f000 810a 	beq.w	80121d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011fbc:	ad0a      	add	r5, sp, #40	; 0x28
 8011fbe:	6810      	ldr	r0, [r2, #0]
 8011fc0:	6851      	ldr	r1, [r2, #4]
 8011fc2:	462b      	mov	r3, r5
 8011fc4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8011fc8:	c303      	stmia	r3!, {r0, r1}
 8011fca:	2100      	movs	r1, #0
 8011fcc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8011fd0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011fd4:	4628      	mov	r0, r5
 8011fd6:	910c      	str	r1, [sp, #48]	; 0x30
 8011fd8:	a90c      	add	r1, sp, #48	; 0x30
 8011fda:	79a2      	ldrb	r2, [r4, #6]
 8011fdc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011fe0:	f7ff fd01 	bl	80119e6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011fe4:	a90c      	add	r1, sp, #48	; 0x30
 8011fe6:	79a2      	ldrb	r2, [r4, #6]
 8011fe8:	4608      	mov	r0, r1
 8011fea:	f7ff fcfc 	bl	80119e6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011fee:	a817      	add	r0, sp, #92	; 0x5c
 8011ff0:	f002 f8f4 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 8011ff4:	6820      	ldr	r0, [r4, #0]
 8011ff6:	6803      	ldr	r3, [r0, #0]
 8011ff8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011ffa:	4798      	blx	r3
 8011ffc:	4606      	mov	r6, r0
 8011ffe:	6820      	ldr	r0, [r4, #0]
 8012000:	6803      	ldr	r3, [r0, #0]
 8012002:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012004:	4798      	blx	r3
 8012006:	4633      	mov	r3, r6
 8012008:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801200a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801200c:	9000      	str	r0, [sp, #0]
 801200e:	a817      	add	r0, sp, #92	; 0x5c
 8012010:	f002 f93f 	bl	8014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012014:	6820      	ldr	r0, [r4, #0]
 8012016:	f894 a004 	ldrb.w	sl, [r4, #4]
 801201a:	6803      	ldr	r3, [r0, #0]
 801201c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801201e:	4798      	blx	r3
 8012020:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8012024:	6823      	ldr	r3, [r4, #0]
 8012026:	4607      	mov	r7, r0
 8012028:	4406      	add	r6, r0
 801202a:	a830      	add	r0, sp, #192	; 0xc0
 801202c:	f893 9009 	ldrb.w	r9, [r3, #9]
 8012030:	f002 f8d4 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 8012034:	7c23      	ldrb	r3, [r4, #16]
 8012036:	b17b      	cbz	r3, 8012058 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8012038:	6820      	ldr	r0, [r4, #0]
 801203a:	6803      	ldr	r3, [r0, #0]
 801203c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801203e:	4798      	blx	r3
 8012040:	9009      	str	r0, [sp, #36]	; 0x24
 8012042:	6820      	ldr	r0, [r4, #0]
 8012044:	6802      	ldr	r2, [r0, #0]
 8012046:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8012048:	4790      	blx	r2
 801204a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801204c:	9000      	str	r0, [sp, #0]
 801204e:	a830      	add	r0, sp, #192	; 0xc0
 8012050:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8012052:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8012054:	f002 f91d 	bl	8014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012058:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801205c:	a80e      	add	r0, sp, #56	; 0x38
 801205e:	7be2      	ldrb	r2, [r4, #15]
 8012060:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8012064:	1a8a      	subs	r2, r1, r2
 8012066:	7c21      	ldrb	r1, [r4, #16]
 8012068:	9103      	str	r1, [sp, #12]
 801206a:	b292      	uxth	r2, r2
 801206c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8012070:	9102      	str	r1, [sp, #8]
 8012072:	6821      	ldr	r1, [r4, #0]
 8012074:	9101      	str	r1, [sp, #4]
 8012076:	7961      	ldrb	r1, [r4, #5]
 8012078:	9100      	str	r1, [sp, #0]
 801207a:	a930      	add	r1, sp, #192	; 0xc0
 801207c:	f7ff fc34 	bl	80118e8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8012080:	2e00      	cmp	r6, #0
 8012082:	dc5b      	bgt.n	801213c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8012084:	af17      	add	r7, sp, #92	; 0x5c
 8012086:	f04f 0900 	mov.w	r9, #0
 801208a:	7c23      	ldrb	r3, [r4, #16]
 801208c:	2b00      	cmp	r3, #0
 801208e:	f000 80b1 	beq.w	80121f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8012092:	a80e      	add	r0, sp, #56	; 0x38
 8012094:	f7ff fe4d 	bl	8011d32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012098:	f1ba 0f00 	cmp.w	sl, #0
 801209c:	f000 80a5 	beq.w	80121ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80120a0:	7c23      	ldrb	r3, [r4, #16]
 80120a2:	2264      	movs	r2, #100	; 0x64
 80120a4:	4639      	mov	r1, r7
 80120a6:	a849      	add	r0, sp, #292	; 0x124
 80120a8:	9309      	str	r3, [sp, #36]	; 0x24
 80120aa:	f010 fff4 	bl	8023096 <memcpy>
 80120ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80120b0:	2b00      	cmp	r3, #0
 80120b2:	f000 80a7 	beq.w	8012204 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80120b6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80120ba:	7922      	ldrb	r2, [r4, #4]
 80120bc:	2a01      	cmp	r2, #1
 80120be:	f040 808a 	bne.w	80121d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80120c2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80120c6:	1ac0      	subs	r0, r0, r3
 80120c8:	2302      	movs	r3, #2
 80120ca:	fb90 f0f3 	sdiv	r0, r0, r3
 80120ce:	b200      	sxth	r0, r0
 80120d0:	7c23      	ldrb	r3, [r4, #16]
 80120d2:	2b00      	cmp	r3, #0
 80120d4:	f000 808b 	beq.w	80121ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80120d8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80120dc:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80120e0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80120e4:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80120e8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80120ec:	2100      	movs	r1, #0
 80120ee:	4410      	add	r0, r2
 80120f0:	4642      	mov	r2, r8
 80120f2:	b200      	sxth	r0, r0
 80120f4:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80120f8:	9000      	str	r0, [sp, #0]
 80120fa:	4658      	mov	r0, fp
 80120fc:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8012100:	f7ff fca2 	bl	8011a48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8012104:	2800      	cmp	r0, #0
 8012106:	d163      	bne.n	80121d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012108:	b2b2      	uxth	r2, r6
 801210a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801210e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8012112:	4413      	add	r3, r2
 8012114:	1a8a      	subs	r2, r1, r2
 8012116:	b21b      	sxth	r3, r3
 8012118:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 801211c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8012120:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012124:	2a00      	cmp	r2, #0
 8012126:	d153      	bne.n	80121d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012128:	6822      	ldr	r2, [r4, #0]
 801212a:	8869      	ldrh	r1, [r5, #2]
 801212c:	7a12      	ldrb	r2, [r2, #8]
 801212e:	1a9b      	subs	r3, r3, r2
 8012130:	88ea      	ldrh	r2, [r5, #6]
 8012132:	440a      	add	r2, r1
 8012134:	b212      	sxth	r2, r2
 8012136:	4293      	cmp	r3, r2
 8012138:	dda7      	ble.n	801208a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801213a:	e049      	b.n	80121d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801213c:	7c23      	ldrb	r3, [r4, #16]
 801213e:	444f      	add	r7, r9
 8012140:	b1c3      	cbz	r3, 8012174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8012142:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8012146:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801214a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801214e:	443b      	add	r3, r7
 8012150:	4293      	cmp	r3, r2
 8012152:	da97      	bge.n	8012084 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8012154:	a80e      	add	r0, sp, #56	; 0x38
 8012156:	f7ff fdec 	bl	8011d32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801215a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801215e:	3b01      	subs	r3, #1
 8012160:	b29b      	uxth	r3, r3
 8012162:	454b      	cmp	r3, r9
 8012164:	9309      	str	r3, [sp, #36]	; 0x24
 8012166:	d021      	beq.n	80121ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8012168:	7961      	ldrb	r1, [r4, #5]
 801216a:	a817      	add	r0, sp, #92	; 0x5c
 801216c:	f7fa fef2 	bl	800cf54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012170:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012172:	e7f4      	b.n	801215e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8012174:	fa1f f986 	uxth.w	r9, r6
 8012178:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801217c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012180:	443b      	add	r3, r7
 8012182:	4293      	cmp	r3, r2
 8012184:	f6bf af7e 	bge.w	8012084 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8012188:	a817      	add	r0, sp, #92	; 0x5c
 801218a:	f002 fc53 	bl	8014a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801218e:	b1f8      	cbz	r0, 80121d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012190:	280a      	cmp	r0, #10
 8012192:	d1f1      	bne.n	8012178 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8012194:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012198:	444b      	add	r3, r9
 801219a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801219e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80121a2:	eba3 0309 	sub.w	r3, r3, r9
 80121a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80121aa:	e7e5      	b.n	8012178 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80121ac:	b2b3      	uxth	r3, r6
 80121ae:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80121b2:	441a      	add	r2, r3
 80121b4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80121b8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80121bc:	1ad3      	subs	r3, r2, r3
 80121be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80121c2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80121c6:	b11b      	cbz	r3, 80121d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80121c8:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80121cc:	2b00      	cmp	r3, #0
 80121ce:	d0ba      	beq.n	8012146 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80121d0:	b063      	add	sp, #396	; 0x18c
 80121d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80121d6:	2a02      	cmp	r2, #2
 80121d8:	d105      	bne.n	80121e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80121da:	7be2      	ldrb	r2, [r4, #15]
 80121dc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80121e0:	1a80      	subs	r0, r0, r2
 80121e2:	1ac0      	subs	r0, r0, r3
 80121e4:	e773      	b.n	80120ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80121e6:	2000      	movs	r0, #0
 80121e8:	e772      	b.n	80120d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80121ea:	7be0      	ldrb	r0, [r4, #15]
 80121ec:	e770      	b.n	80120d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80121ee:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80121f2:	e773      	b.n	80120dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80121f4:	f1ba 0f00 	cmp.w	sl, #0
 80121f8:	d0f7      	beq.n	80121ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80121fa:	2264      	movs	r2, #100	; 0x64
 80121fc:	4639      	mov	r1, r7
 80121fe:	a849      	add	r0, sp, #292	; 0x124
 8012200:	f010 ff49 	bl	8023096 <memcpy>
 8012204:	2300      	movs	r3, #0
 8012206:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801220a:	6821      	ldr	r1, [r4, #0]
 801220c:	a849      	add	r0, sp, #292	; 0x124
 801220e:	f7ff fbae 	bl	801196e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012212:	b203      	sxth	r3, r0
 8012214:	e751      	b.n	80120ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08012216 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8012216:	2b03      	cmp	r3, #3
 8012218:	d818      	bhi.n	801224c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801221a:	e8df f003 	tbb	[pc, r3]
 801221e:	0602      	.short	0x0602
 8012220:	130d      	.short	0x130d
 8012222:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012226:	1850      	adds	r0, r2, r1
 8012228:	4770      	bx	lr
 801222a:	8803      	ldrh	r3, [r0, #0]
 801222c:	8880      	ldrh	r0, [r0, #4]
 801222e:	4418      	add	r0, r3
 8012230:	b200      	sxth	r0, r0
 8012232:	1a80      	subs	r0, r0, r2
 8012234:	3801      	subs	r0, #1
 8012236:	4770      	bx	lr
 8012238:	8803      	ldrh	r3, [r0, #0]
 801223a:	8880      	ldrh	r0, [r0, #4]
 801223c:	4418      	add	r0, r3
 801223e:	b200      	sxth	r0, r0
 8012240:	1a40      	subs	r0, r0, r1
 8012242:	e7f7      	b.n	8012234 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8012244:	f9b0 0000 	ldrsh.w	r0, [r0]
 8012248:	4410      	add	r0, r2
 801224a:	4770      	bx	lr
 801224c:	2000      	movs	r0, #0
 801224e:	4770      	bx	lr

08012250 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8012250:	2b03      	cmp	r3, #3
 8012252:	d817      	bhi.n	8012284 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8012254:	e8df f003 	tbb	[pc, r3]
 8012258:	10090602 	.word	0x10090602
 801225c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8012260:	1850      	adds	r0, r2, r1
 8012262:	4770      	bx	lr
 8012264:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8012268:	e7fa      	b.n	8012260 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801226a:	8843      	ldrh	r3, [r0, #2]
 801226c:	88c0      	ldrh	r0, [r0, #6]
 801226e:	4418      	add	r0, r3
 8012270:	b200      	sxth	r0, r0
 8012272:	1a80      	subs	r0, r0, r2
 8012274:	3801      	subs	r0, #1
 8012276:	4770      	bx	lr
 8012278:	8843      	ldrh	r3, [r0, #2]
 801227a:	88c0      	ldrh	r0, [r0, #6]
 801227c:	4418      	add	r0, r3
 801227e:	b200      	sxth	r0, r0
 8012280:	1a40      	subs	r0, r0, r1
 8012282:	e7f7      	b.n	8012274 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8012284:	2000      	movs	r0, #0
 8012286:	4770      	bx	lr

08012288 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8012288:	4b01      	ldr	r3, [pc, #4]	; (8012290 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801228a:	2200      	movs	r2, #0
 801228c:	601a      	str	r2, [r3, #0]
 801228e:	4770      	bx	lr
 8012290:	24001ee0 	.word	0x24001ee0

08012294 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8012294:	4603      	mov	r3, r0
 8012296:	b1c8      	cbz	r0, 80122cc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8012298:	0c02      	lsrs	r2, r0, #16
 801229a:	0412      	lsls	r2, r2, #16
 801229c:	b9a2      	cbnz	r2, 80122c8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801229e:	0403      	lsls	r3, r0, #16
 80122a0:	2010      	movs	r0, #16
 80122a2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80122a6:	bf04      	itt	eq
 80122a8:	021b      	lsleq	r3, r3, #8
 80122aa:	3008      	addeq	r0, #8
 80122ac:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80122b0:	bf04      	itt	eq
 80122b2:	011b      	lsleq	r3, r3, #4
 80122b4:	3004      	addeq	r0, #4
 80122b6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80122ba:	bf04      	itt	eq
 80122bc:	009b      	lsleq	r3, r3, #2
 80122be:	3002      	addeq	r0, #2
 80122c0:	2b00      	cmp	r3, #0
 80122c2:	db04      	blt.n	80122ce <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80122c4:	3001      	adds	r0, #1
 80122c6:	4770      	bx	lr
 80122c8:	2000      	movs	r0, #0
 80122ca:	e7ea      	b.n	80122a2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80122cc:	2020      	movs	r0, #32
 80122ce:	4770      	bx	lr

080122d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80122d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122d4:	b087      	sub	sp, #28
 80122d6:	460d      	mov	r5, r1
 80122d8:	4616      	mov	r6, r2
 80122da:	4698      	mov	r8, r3
 80122dc:	4601      	mov	r1, r0
 80122de:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80122e2:	b120      	cbz	r0, 80122ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80122e4:	b11a      	cbz	r2, 80122ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80122e6:	2d1f      	cmp	r5, #31
 80122e8:	d801      	bhi.n	80122ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80122ea:	2b1f      	cmp	r3, #31
 80122ec:	d904      	bls.n	80122f8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80122ee:	2000      	movs	r0, #0
 80122f0:	6038      	str	r0, [r7, #0]
 80122f2:	b007      	add	sp, #28
 80122f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122f8:	b97d      	cbnz	r5, 801231a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80122fa:	b143      	cbz	r3, 801230e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80122fc:	4602      	mov	r2, r0
 80122fe:	462b      	mov	r3, r5
 8012300:	4641      	mov	r1, r8
 8012302:	4630      	mov	r0, r6
 8012304:	e9cd 4700 	strd	r4, r7, [sp]
 8012308:	f7ff ffe2 	bl	80122d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801230c:	e7f1      	b.n	80122f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801230e:	f04f 33ff 	mov.w	r3, #4294967295
 8012312:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012316:	603b      	str	r3, [r7, #0]
 8012318:	e7eb      	b.n	80122f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801231a:	fa32 fa05 	lsrs.w	sl, r2, r5
 801231e:	d106      	bne.n	801232e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8012320:	4346      	muls	r6, r0
 8012322:	fbb6 f0f4 	udiv	r0, r6, r4
 8012326:	fb04 6610 	mls	r6, r4, r0, r6
 801232a:	603e      	str	r6, [r7, #0]
 801232c:	e7e1      	b.n	80122f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801232e:	2201      	movs	r2, #1
 8012330:	fa00 fb05 	lsl.w	fp, r0, r5
 8012334:	40aa      	lsls	r2, r5
 8012336:	fbbb f9f4 	udiv	r9, fp, r4
 801233a:	3a01      	subs	r2, #1
 801233c:	fb0a f309 	mul.w	r3, sl, r9
 8012340:	fb04 b919 	mls	r9, r4, r9, fp
 8012344:	4016      	ands	r6, r2
 8012346:	9303      	str	r3, [sp, #12]
 8012348:	4630      	mov	r0, r6
 801234a:	f7ff ffa3 	bl	8012294 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801234e:	462b      	mov	r3, r5
 8012350:	460a      	mov	r2, r1
 8012352:	4601      	mov	r1, r0
 8012354:	4630      	mov	r0, r6
 8012356:	e9cd 4700 	strd	r4, r7, [sp]
 801235a:	f7ff ffb9 	bl	80122d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801235e:	4606      	mov	r6, r0
 8012360:	4648      	mov	r0, r9
 8012362:	eb05 0108 	add.w	r1, r5, r8
 8012366:	f7ff ff95 	bl	8012294 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801236a:	ab05      	add	r3, sp, #20
 801236c:	464a      	mov	r2, r9
 801236e:	e9cd 4300 	strd	r4, r3, [sp]
 8012372:	4603      	mov	r3, r0
 8012374:	4650      	mov	r0, sl
 8012376:	f7ff ffab 	bl	80122d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801237a:	6839      	ldr	r1, [r7, #0]
 801237c:	9a05      	ldr	r2, [sp, #20]
 801237e:	9b03      	ldr	r3, [sp, #12]
 8012380:	4411      	add	r1, r2
 8012382:	fbb1 f2f4 	udiv	r2, r1, r4
 8012386:	18d3      	adds	r3, r2, r3
 8012388:	fb04 1412 	mls	r4, r4, r2, r1
 801238c:	441e      	add	r6, r3
 801238e:	603c      	str	r4, [r7, #0]
 8012390:	4430      	add	r0, r6
 8012392:	e7ae      	b.n	80122f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08012394 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8012394:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012398:	b085      	sub	sp, #20
 801239a:	f1b0 0900 	subs.w	r9, r0, #0
 801239e:	461d      	mov	r5, r3
 80123a0:	4617      	mov	r7, r2
 80123a2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80123a4:	bfbb      	ittet	lt
 80123a6:	f1c9 0900 	rsblt	r9, r9, #0
 80123aa:	f04f 36ff 	movlt.w	r6, #4294967295
 80123ae:	2601      	movge	r6, #1
 80123b0:	6823      	ldrlt	r3, [r4, #0]
 80123b2:	bfbc      	itt	lt
 80123b4:	425b      	neglt	r3, r3
 80123b6:	6023      	strlt	r3, [r4, #0]
 80123b8:	2a00      	cmp	r2, #0
 80123ba:	da04      	bge.n	80123c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80123bc:	6823      	ldr	r3, [r4, #0]
 80123be:	4257      	negs	r7, r2
 80123c0:	4276      	negs	r6, r6
 80123c2:	425b      	negs	r3, r3
 80123c4:	6023      	str	r3, [r4, #0]
 80123c6:	2d00      	cmp	r5, #0
 80123c8:	4638      	mov	r0, r7
 80123ca:	bfba      	itte	lt
 80123cc:	426d      	neglt	r5, r5
 80123ce:	f04f 38ff 	movlt.w	r8, #4294967295
 80123d2:	f04f 0801 	movge.w	r8, #1
 80123d6:	f7ff ff5d 	bl	8012294 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80123da:	ab03      	add	r3, sp, #12
 80123dc:	463a      	mov	r2, r7
 80123de:	e9cd 5300 	strd	r5, r3, [sp]
 80123e2:	4603      	mov	r3, r0
 80123e4:	4648      	mov	r0, r9
 80123e6:	f7ff ff73 	bl	80122d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80123ea:	6823      	ldr	r3, [r4, #0]
 80123ec:	9a03      	ldr	r2, [sp, #12]
 80123ee:	4546      	cmp	r6, r8
 80123f0:	441a      	add	r2, r3
 80123f2:	fb92 f3f5 	sdiv	r3, r2, r5
 80123f6:	4418      	add	r0, r3
 80123f8:	fb05 2313 	mls	r3, r5, r3, r2
 80123fc:	bf18      	it	ne
 80123fe:	4240      	negne	r0, r0
 8012400:	1c72      	adds	r2, r6, #1
 8012402:	6023      	str	r3, [r4, #0]
 8012404:	d105      	bne.n	8012412 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8012406:	2b00      	cmp	r3, #0
 8012408:	f1c3 0200 	rsb	r2, r3, #0
 801240c:	db0b      	blt.n	8012426 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801240e:	6022      	str	r2, [r4, #0]
 8012410:	e006      	b.n	8012420 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012412:	2e01      	cmp	r6, #1
 8012414:	d104      	bne.n	8012420 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012416:	2b00      	cmp	r3, #0
 8012418:	da02      	bge.n	8012420 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801241a:	442b      	add	r3, r5
 801241c:	3801      	subs	r0, #1
 801241e:	6023      	str	r3, [r4, #0]
 8012420:	b005      	add	sp, #20
 8012422:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012426:	3801      	subs	r0, #1
 8012428:	1b52      	subs	r2, r2, r5
 801242a:	e7f0      	b.n	801240e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0801242c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801242c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8012430:	4c1c      	ldr	r4, [pc, #112]	; (80124a4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8012432:	4605      	mov	r5, r0
 8012434:	6807      	ldr	r7, [r0, #0]
 8012436:	69a3      	ldr	r3, [r4, #24]
 8012438:	b92b      	cbnz	r3, 8012446 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801243a:	6840      	ldr	r0, [r0, #4]
 801243c:	e9c5 7000 	strd	r7, r0, [r5]
 8012440:	b004      	add	sp, #16
 8012442:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012446:	f04f 0802 	mov.w	r8, #2
 801244a:	68a2      	ldr	r2, [r4, #8]
 801244c:	ae04      	add	r6, sp, #16
 801244e:	6820      	ldr	r0, [r4, #0]
 8012450:	fb93 f1f8 	sdiv	r1, r3, r8
 8012454:	440a      	add	r2, r1
 8012456:	69e1      	ldr	r1, [r4, #28]
 8012458:	f846 2d04 	str.w	r2, [r6, #-4]!
 801245c:	463a      	mov	r2, r7
 801245e:	9600      	str	r6, [sp, #0]
 8012460:	f7ff ff98 	bl	8012394 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012464:	69a3      	ldr	r3, [r4, #24]
 8012466:	4607      	mov	r7, r0
 8012468:	686a      	ldr	r2, [r5, #4]
 801246a:	6a21      	ldr	r1, [r4, #32]
 801246c:	9600      	str	r6, [sp, #0]
 801246e:	6860      	ldr	r0, [r4, #4]
 8012470:	f7ff ff90 	bl	8012394 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012474:	69a3      	ldr	r3, [r4, #24]
 8012476:	6962      	ldr	r2, [r4, #20]
 8012478:	4407      	add	r7, r0
 801247a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801247c:	9600      	str	r6, [sp, #0]
 801247e:	68e0      	ldr	r0, [r4, #12]
 8012480:	fb93 f8f8 	sdiv	r8, r3, r8
 8012484:	4442      	add	r2, r8
 8012486:	9203      	str	r2, [sp, #12]
 8012488:	682a      	ldr	r2, [r5, #0]
 801248a:	f7ff ff83 	bl	8012394 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801248e:	4680      	mov	r8, r0
 8012490:	9600      	str	r6, [sp, #0]
 8012492:	69a3      	ldr	r3, [r4, #24]
 8012494:	686a      	ldr	r2, [r5, #4]
 8012496:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8012498:	6920      	ldr	r0, [r4, #16]
 801249a:	f7ff ff7b 	bl	8012394 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801249e:	4440      	add	r0, r8
 80124a0:	e7cc      	b.n	801243c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80124a2:	bf00      	nop
 80124a4:	24001ee4 	.word	0x24001ee4

080124a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80124a8:	4b07      	ldr	r3, [pc, #28]	; (80124c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80124aa:	781b      	ldrb	r3, [r3, #0]
 80124ac:	2b01      	cmp	r3, #1
 80124ae:	d109      	bne.n	80124c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80124b0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80124b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80124b8:	8003      	strh	r3, [r0, #0]
 80124ba:	4b04      	ldr	r3, [pc, #16]	; (80124cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80124bc:	881b      	ldrh	r3, [r3, #0]
 80124be:	3b01      	subs	r3, #1
 80124c0:	1a9b      	subs	r3, r3, r2
 80124c2:	800b      	strh	r3, [r1, #0]
 80124c4:	4770      	bx	lr
 80124c6:	bf00      	nop
 80124c8:	24001ed0 	.word	0x24001ed0
 80124cc:	24001ecc 	.word	0x24001ecc

080124d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80124d0:	4b07      	ldr	r3, [pc, #28]	; (80124f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80124d2:	b510      	push	{r4, lr}
 80124d4:	781b      	ldrb	r3, [r3, #0]
 80124d6:	2b01      	cmp	r3, #1
 80124d8:	d108      	bne.n	80124ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80124da:	4b06      	ldr	r3, [pc, #24]	; (80124f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80124dc:	880c      	ldrh	r4, [r1, #0]
 80124de:	881b      	ldrh	r3, [r3, #0]
 80124e0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80124e4:	3b01      	subs	r3, #1
 80124e6:	1b1b      	subs	r3, r3, r4
 80124e8:	8003      	strh	r3, [r0, #0]
 80124ea:	800a      	strh	r2, [r1, #0]
 80124ec:	bd10      	pop	{r4, pc}
 80124ee:	bf00      	nop
 80124f0:	24001ed0 	.word	0x24001ed0
 80124f4:	24001ecc 	.word	0x24001ecc

080124f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80124f8:	4b0a      	ldr	r3, [pc, #40]	; (8012524 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80124fa:	b510      	push	{r4, lr}
 80124fc:	781b      	ldrb	r3, [r3, #0]
 80124fe:	2b01      	cmp	r3, #1
 8012500:	d10e      	bne.n	8012520 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8012502:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012506:	8843      	ldrh	r3, [r0, #2]
 8012508:	f9b0 4000 	ldrsh.w	r4, [r0]
 801250c:	18ca      	adds	r2, r1, r3
 801250e:	4b06      	ldr	r3, [pc, #24]	; (8012528 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8012510:	8044      	strh	r4, [r0, #2]
 8012512:	881b      	ldrh	r3, [r3, #0]
 8012514:	1a9b      	subs	r3, r3, r2
 8012516:	8003      	strh	r3, [r0, #0]
 8012518:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801251c:	8081      	strh	r1, [r0, #4]
 801251e:	80c3      	strh	r3, [r0, #6]
 8012520:	bd10      	pop	{r4, pc}
 8012522:	bf00      	nop
 8012524:	24001ed0 	.word	0x24001ed0
 8012528:	24001ecc 	.word	0x24001ecc

0801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801252c:	4b08      	ldr	r3, [pc, #32]	; (8012550 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801252e:	781b      	ldrb	r3, [r3, #0]
 8012530:	2b01      	cmp	r3, #1
 8012532:	d10c      	bne.n	801254e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8012534:	8803      	ldrh	r3, [r0, #0]
 8012536:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801253a:	8842      	ldrh	r2, [r0, #2]
 801253c:	8002      	strh	r2, [r0, #0]
 801253e:	185a      	adds	r2, r3, r1
 8012540:	4b04      	ldr	r3, [pc, #16]	; (8012554 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8012542:	881b      	ldrh	r3, [r3, #0]
 8012544:	1a9b      	subs	r3, r3, r2
 8012546:	8043      	strh	r3, [r0, #2]
 8012548:	88c3      	ldrh	r3, [r0, #6]
 801254a:	80c1      	strh	r1, [r0, #6]
 801254c:	8083      	strh	r3, [r0, #4]
 801254e:	4770      	bx	lr
 8012550:	24001ed0 	.word	0x24001ed0
 8012554:	24001ecc 	.word	0x24001ecc

08012558 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8012558:	4b07      	ldr	r3, [pc, #28]	; (8012578 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801255a:	b510      	push	{r4, lr}
 801255c:	781b      	ldrb	r3, [r3, #0]
 801255e:	2b01      	cmp	r3, #1
 8012560:	d108      	bne.n	8012574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8012562:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012566:	f9b0 4000 	ldrsh.w	r4, [r0]
 801256a:	8003      	strh	r3, [r0, #0]
 801256c:	8893      	ldrh	r3, [r2, #4]
 801256e:	3b01      	subs	r3, #1
 8012570:	1b1b      	subs	r3, r3, r4
 8012572:	800b      	strh	r3, [r1, #0]
 8012574:	bd10      	pop	{r4, pc}
 8012576:	bf00      	nop
 8012578:	24001ed0 	.word	0x24001ed0

0801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801257c:	4b0a      	ldr	r3, [pc, #40]	; (80125a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801257e:	460a      	mov	r2, r1
 8012580:	b510      	push	{r4, lr}
 8012582:	781b      	ldrb	r3, [r3, #0]
 8012584:	2b01      	cmp	r3, #1
 8012586:	d10d      	bne.n	80125a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8012588:	8881      	ldrh	r1, [r0, #4]
 801258a:	8803      	ldrh	r3, [r0, #0]
 801258c:	440b      	add	r3, r1
 801258e:	4601      	mov	r1, r0
 8012590:	3b01      	subs	r3, #1
 8012592:	f821 3b02 	strh.w	r3, [r1], #2
 8012596:	f7ff ffdf 	bl	8012558 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801259a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801259e:	88c2      	ldrh	r2, [r0, #6]
 80125a0:	80c3      	strh	r3, [r0, #6]
 80125a2:	8082      	strh	r2, [r0, #4]
 80125a4:	bd10      	pop	{r4, pc}
 80125a6:	bf00      	nop
 80125a8:	24001ed0 	.word	0x24001ed0

080125ac <_ZN8touchgfx11Application13requestRedrawEv>:
 80125ac:	4b06      	ldr	r3, [pc, #24]	; (80125c8 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80125ae:	2100      	movs	r1, #0
 80125b0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80125b4:	4b05      	ldr	r3, [pc, #20]	; (80125cc <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80125b6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80125ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 80125be:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80125c2:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80125c6:	4770      	bx	lr
 80125c8:	24001ecc 	.word	0x24001ecc
 80125cc:	24001ece 	.word	0x24001ece

080125d0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80125d0:	4b03      	ldr	r3, [pc, #12]	; (80125e0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80125d2:	6818      	ldr	r0, [r3, #0]
 80125d4:	b110      	cbz	r0, 80125dc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80125d6:	6803      	ldr	r3, [r0, #0]
 80125d8:	699b      	ldr	r3, [r3, #24]
 80125da:	4718      	bx	r3
 80125dc:	4770      	bx	lr
 80125de:	bf00      	nop
 80125e0:	24001f14 	.word	0x24001f14

080125e4 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80125e4:	4770      	bx	lr
	...

080125e8 <_ZN8touchgfx11Application4drawEv>:
 80125e8:	4b09      	ldr	r3, [pc, #36]	; (8012610 <_ZN8touchgfx11Application4drawEv+0x28>)
 80125ea:	b507      	push	{r0, r1, r2, lr}
 80125ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 80125f0:	2100      	movs	r1, #0
 80125f2:	4b08      	ldr	r3, [pc, #32]	; (8012614 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80125f4:	9100      	str	r1, [sp, #0]
 80125f6:	4669      	mov	r1, sp
 80125f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80125fc:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012600:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012604:	6803      	ldr	r3, [r0, #0]
 8012606:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012608:	4798      	blx	r3
 801260a:	b003      	add	sp, #12
 801260c:	f85d fb04 	ldr.w	pc, [sp], #4
 8012610:	24001ecc 	.word	0x24001ecc
 8012614:	24001ece 	.word	0x24001ece

08012618 <_ZN8touchgfx11Application10invalidateEv>:
 8012618:	4b09      	ldr	r3, [pc, #36]	; (8012640 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801261a:	b082      	sub	sp, #8
 801261c:	2100      	movs	r1, #0
 801261e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012622:	4b08      	ldr	r3, [pc, #32]	; (8012644 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8012624:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012628:	aa02      	add	r2, sp, #8
 801262a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801262e:	9100      	str	r1, [sp, #0]
 8012630:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012634:	6803      	ldr	r3, [r0, #0]
 8012636:	e912 0006 	ldmdb	r2, {r1, r2}
 801263a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801263c:	b002      	add	sp, #8
 801263e:	4718      	bx	r3
 8012640:	24001ecc 	.word	0x24001ecc
 8012644:	24001ece 	.word	0x24001ece

08012648 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8012648:	4b03      	ldr	r3, [pc, #12]	; (8012658 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801264a:	6818      	ldr	r0, [r3, #0]
 801264c:	b110      	cbz	r0, 8012654 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801264e:	6803      	ldr	r3, [r0, #0]
 8012650:	69db      	ldr	r3, [r3, #28]
 8012652:	4718      	bx	r3
 8012654:	4770      	bx	lr
 8012656:	bf00      	nop
 8012658:	24001f14 	.word	0x24001f14

0801265c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801265c:	4b03      	ldr	r3, [pc, #12]	; (801266c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801265e:	6818      	ldr	r0, [r3, #0]
 8012660:	b110      	cbz	r0, 8012668 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8012662:	6803      	ldr	r3, [r0, #0]
 8012664:	6a1b      	ldr	r3, [r3, #32]
 8012666:	4718      	bx	r3
 8012668:	4770      	bx	lr
 801266a:	bf00      	nop
 801266c:	24001f14 	.word	0x24001f14

08012670 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8012670:	2300      	movs	r3, #0
 8012672:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8012676:	4770      	bx	lr

08012678 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8012678:	4b03      	ldr	r3, [pc, #12]	; (8012688 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801267a:	6818      	ldr	r0, [r3, #0]
 801267c:	b110      	cbz	r0, 8012684 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801267e:	6803      	ldr	r3, [r0, #0]
 8012680:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012682:	4718      	bx	r3
 8012684:	4770      	bx	lr
 8012686:	bf00      	nop
 8012688:	24001f14 	.word	0x24001f14

0801268c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801268c:	b510      	push	{r4, lr}
 801268e:	f9b1 4000 	ldrsh.w	r4, [r1]
 8012692:	888a      	ldrh	r2, [r1, #4]
 8012694:	f9b0 3000 	ldrsh.w	r3, [r0]
 8012698:	4422      	add	r2, r4
 801269a:	b212      	sxth	r2, r2
 801269c:	4293      	cmp	r3, r2
 801269e:	da15      	bge.n	80126cc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80126a0:	8882      	ldrh	r2, [r0, #4]
 80126a2:	4413      	add	r3, r2
 80126a4:	b21b      	sxth	r3, r3
 80126a6:	429c      	cmp	r4, r3
 80126a8:	da10      	bge.n	80126cc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80126aa:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80126ae:	88c9      	ldrh	r1, [r1, #6]
 80126b0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80126b4:	4419      	add	r1, r3
 80126b6:	b209      	sxth	r1, r1
 80126b8:	428a      	cmp	r2, r1
 80126ba:	da07      	bge.n	80126cc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80126bc:	88c0      	ldrh	r0, [r0, #6]
 80126be:	4410      	add	r0, r2
 80126c0:	b200      	sxth	r0, r0
 80126c2:	4283      	cmp	r3, r0
 80126c4:	bfac      	ite	ge
 80126c6:	2000      	movge	r0, #0
 80126c8:	2001      	movlt	r0, #1
 80126ca:	bd10      	pop	{r4, pc}
 80126cc:	2000      	movs	r0, #0
 80126ce:	e7fc      	b.n	80126ca <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080126d0 <_ZN8touchgfx4Rect10restrictToEss>:
 80126d0:	f9b0 3000 	ldrsh.w	r3, [r0]
 80126d4:	2b00      	cmp	r3, #0
 80126d6:	b510      	push	{r4, lr}
 80126d8:	da04      	bge.n	80126e4 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80126da:	8884      	ldrh	r4, [r0, #4]
 80126dc:	4423      	add	r3, r4
 80126de:	8083      	strh	r3, [r0, #4]
 80126e0:	2300      	movs	r3, #0
 80126e2:	8003      	strh	r3, [r0, #0]
 80126e4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80126e8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80126ec:	1b09      	subs	r1, r1, r4
 80126ee:	428b      	cmp	r3, r1
 80126f0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80126f4:	bfc8      	it	gt
 80126f6:	8081      	strhgt	r1, [r0, #4]
 80126f8:	2b00      	cmp	r3, #0
 80126fa:	da04      	bge.n	8012706 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80126fc:	88c1      	ldrh	r1, [r0, #6]
 80126fe:	440b      	add	r3, r1
 8012700:	80c3      	strh	r3, [r0, #6]
 8012702:	2300      	movs	r3, #0
 8012704:	8043      	strh	r3, [r0, #2]
 8012706:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801270a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801270e:	1a52      	subs	r2, r2, r1
 8012710:	4293      	cmp	r3, r2
 8012712:	bfc8      	it	gt
 8012714:	80c2      	strhgt	r2, [r0, #6]
 8012716:	bd10      	pop	{r4, pc}

08012718 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8012718:	4b10      	ldr	r3, [pc, #64]	; (801275c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801271a:	b510      	push	{r4, lr}
 801271c:	460c      	mov	r4, r1
 801271e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012722:	4b0f      	ldr	r3, [pc, #60]	; (8012760 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8012724:	4620      	mov	r0, r4
 8012726:	f9b3 1000 	ldrsh.w	r1, [r3]
 801272a:	f7ff ffd1 	bl	80126d0 <_ZN8touchgfx4Rect10restrictToEss>
 801272e:	4b0d      	ldr	r3, [pc, #52]	; (8012764 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8012730:	6818      	ldr	r0, [r3, #0]
 8012732:	b190      	cbz	r0, 801275a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8012734:	6803      	ldr	r3, [r0, #0]
 8012736:	4621      	mov	r1, r4
 8012738:	689b      	ldr	r3, [r3, #8]
 801273a:	4798      	blx	r3
 801273c:	4b0a      	ldr	r3, [pc, #40]	; (8012768 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801273e:	6818      	ldr	r0, [r3, #0]
 8012740:	b118      	cbz	r0, 801274a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8012742:	6803      	ldr	r3, [r0, #0]
 8012744:	4621      	mov	r1, r4
 8012746:	689b      	ldr	r3, [r3, #8]
 8012748:	4798      	blx	r3
 801274a:	4b08      	ldr	r3, [pc, #32]	; (801276c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801274c:	4621      	mov	r1, r4
 801274e:	6818      	ldr	r0, [r3, #0]
 8012750:	6803      	ldr	r3, [r0, #0]
 8012752:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012756:	69db      	ldr	r3, [r3, #28]
 8012758:	4718      	bx	r3
 801275a:	bd10      	pop	{r4, pc}
 801275c:	24001ece 	.word	0x24001ece
 8012760:	24001ecc 	.word	0x24001ecc
 8012764:	24001f14 	.word	0x24001f14
 8012768:	24001f10 	.word	0x24001f10
 801276c:	24001ed8 	.word	0x24001ed8

08012770 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8012770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012772:	4606      	mov	r6, r0
 8012774:	4608      	mov	r0, r1
 8012776:	460f      	mov	r7, r1
 8012778:	f7fc ffc7 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 801277c:	b9e8      	cbnz	r0, 80127ba <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801277e:	f9b7 5000 	ldrsh.w	r5, [r7]
 8012782:	f9b6 4000 	ldrsh.w	r4, [r6]
 8012786:	42a5      	cmp	r5, r4
 8012788:	db17      	blt.n	80127ba <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801278a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801278e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8012792:	429a      	cmp	r2, r3
 8012794:	db11      	blt.n	80127ba <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8012796:	88b9      	ldrh	r1, [r7, #4]
 8012798:	440d      	add	r5, r1
 801279a:	88b1      	ldrh	r1, [r6, #4]
 801279c:	440c      	add	r4, r1
 801279e:	b22d      	sxth	r5, r5
 80127a0:	b224      	sxth	r4, r4
 80127a2:	42a5      	cmp	r5, r4
 80127a4:	dc09      	bgt.n	80127ba <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80127a6:	88f8      	ldrh	r0, [r7, #6]
 80127a8:	4410      	add	r0, r2
 80127aa:	88f2      	ldrh	r2, [r6, #6]
 80127ac:	4413      	add	r3, r2
 80127ae:	b200      	sxth	r0, r0
 80127b0:	b21b      	sxth	r3, r3
 80127b2:	4298      	cmp	r0, r3
 80127b4:	bfcc      	ite	gt
 80127b6:	2000      	movgt	r0, #0
 80127b8:	2001      	movle	r0, #1
 80127ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080127bc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80127bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80127be:	4604      	mov	r4, r0
 80127c0:	4608      	mov	r0, r1
 80127c2:	460d      	mov	r5, r1
 80127c4:	f7fc ffa1 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 80127c8:	b978      	cbnz	r0, 80127ea <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80127ca:	4620      	mov	r0, r4
 80127cc:	f7fc ff9d 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 80127d0:	f9b5 6000 	ldrsh.w	r6, [r5]
 80127d4:	b150      	cbz	r0, 80127ec <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80127d6:	8026      	strh	r6, [r4, #0]
 80127d8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80127dc:	8063      	strh	r3, [r4, #2]
 80127de:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80127e2:	80a3      	strh	r3, [r4, #4]
 80127e4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80127e8:	80e3      	strh	r3, [r4, #6]
 80127ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80127ec:	f9b4 1000 	ldrsh.w	r1, [r4]
 80127f0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80127f4:	42b1      	cmp	r1, r6
 80127f6:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80127fa:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80127fe:	460f      	mov	r7, r1
 8012800:	88ed      	ldrh	r5, [r5, #6]
 8012802:	bfa8      	it	ge
 8012804:	4637      	movge	r7, r6
 8012806:	4293      	cmp	r3, r2
 8012808:	4618      	mov	r0, r3
 801280a:	4466      	add	r6, ip
 801280c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8012810:	bfa8      	it	ge
 8012812:	4610      	movge	r0, r2
 8012814:	442a      	add	r2, r5
 8012816:	88e5      	ldrh	r5, [r4, #6]
 8012818:	4461      	add	r1, ip
 801281a:	b236      	sxth	r6, r6
 801281c:	8027      	strh	r7, [r4, #0]
 801281e:	442b      	add	r3, r5
 8012820:	b209      	sxth	r1, r1
 8012822:	b212      	sxth	r2, r2
 8012824:	8060      	strh	r0, [r4, #2]
 8012826:	b21b      	sxth	r3, r3
 8012828:	428e      	cmp	r6, r1
 801282a:	bfac      	ite	ge
 801282c:	ebc7 0106 	rsbge	r1, r7, r6
 8012830:	ebc7 0101 	rsblt	r1, r7, r1
 8012834:	429a      	cmp	r2, r3
 8012836:	bfac      	ite	ge
 8012838:	ebc0 0202 	rsbge	r2, r0, r2
 801283c:	ebc0 0203 	rsblt	r2, r0, r3
 8012840:	80a1      	strh	r1, [r4, #4]
 8012842:	80e2      	strh	r2, [r4, #6]
 8012844:	e7d1      	b.n	80127ea <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08012848 <_ZN8touchgfx11Application11getInstanceEv>:
 8012848:	4b01      	ldr	r3, [pc, #4]	; (8012850 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801284a:	6818      	ldr	r0, [r3, #0]
 801284c:	4770      	bx	lr
 801284e:	bf00      	nop
 8012850:	24001f24 	.word	0x24001f24

08012854 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8012854:	2300      	movs	r3, #0
 8012856:	b510      	push	{r4, lr}
 8012858:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 801285c:	4604      	mov	r4, r0
 801285e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8012862:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8012866:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801286a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 801286e:	429a      	cmp	r2, r3
 8012870:	d90e      	bls.n	8012890 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8012872:	18e2      	adds	r2, r4, r3
 8012874:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8012878:	b122      	cbz	r2, 8012884 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801287a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801287e:	6803      	ldr	r3, [r0, #0]
 8012880:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012882:	4798      	blx	r3
 8012884:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012888:	3301      	adds	r3, #1
 801288a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801288e:	e7ea      	b.n	8012866 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8012890:	bd10      	pop	{r4, pc}

08012892 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8012892:	2300      	movs	r3, #0
 8012894:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8012898:	30a4      	adds	r0, #164	; 0xa4
 801289a:	f820 3c24 	strh.w	r3, [r0, #-36]
 801289e:	f802 3b01 	strb.w	r3, [r2], #1
 80128a2:	4282      	cmp	r2, r0
 80128a4:	d1fb      	bne.n	801289e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80128a6:	4770      	bx	lr

080128a8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80128a8:	b570      	push	{r4, r5, r6, lr}
 80128aa:	4c0b      	ldr	r4, [pc, #44]	; (80128d8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80128ac:	4605      	mov	r5, r0
 80128ae:	460e      	mov	r6, r1
 80128b0:	6820      	ldr	r0, [r4, #0]
 80128b2:	b110      	cbz	r0, 80128ba <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80128b4:	6803      	ldr	r3, [r0, #0]
 80128b6:	695b      	ldr	r3, [r3, #20]
 80128b8:	4798      	blx	r3
 80128ba:	1d28      	adds	r0, r5, #4
 80128bc:	f7ff ffe9 	bl	8012892 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80128c0:	6026      	str	r6, [r4, #0]
 80128c2:	6833      	ldr	r3, [r6, #0]
 80128c4:	4630      	mov	r0, r6
 80128c6:	68db      	ldr	r3, [r3, #12]
 80128c8:	4798      	blx	r3
 80128ca:	682b      	ldr	r3, [r5, #0]
 80128cc:	4628      	mov	r0, r5
 80128ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80128d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80128d4:	4718      	bx	r3
 80128d6:	bf00      	nop
 80128d8:	24001f14 	.word	0x24001f14

080128dc <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80128dc:	2300      	movs	r3, #0
 80128de:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 80128e2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80128e6:	461a      	mov	r2, r3
 80128e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80128ea:	461c      	mov	r4, r3
 80128ec:	461d      	mov	r5, r3
 80128ee:	459c      	cmp	ip, r3
 80128f0:	dd1a      	ble.n	8012928 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80128f2:	18c6      	adds	r6, r0, r3
 80128f4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80128f8:	b16e      	cbz	r6, 8012916 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80128fa:	429a      	cmp	r2, r3
 80128fc:	d008      	beq.n	8012910 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80128fe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8012902:	fa1f fe82 	uxth.w	lr, r2
 8012906:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801290a:	1887      	adds	r7, r0, r2
 801290c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8012910:	3201      	adds	r2, #1
 8012912:	3301      	adds	r3, #1
 8012914:	e7eb      	b.n	80128ee <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8012916:	4299      	cmp	r1, r3
 8012918:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 801291c:	bfa8      	it	ge
 801291e:	3501      	addge	r5, #1
 8012920:	429e      	cmp	r6, r3
 8012922:	bfc8      	it	gt
 8012924:	3401      	addgt	r4, #1
 8012926:	e7f4      	b.n	8012912 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8012928:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 801292c:	1b49      	subs	r1, r1, r5
 801292e:	1b1b      	subs	r3, r3, r4
 8012930:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8012934:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8012938:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 801293c:	4293      	cmp	r3, r2
 801293e:	dd03      	ble.n	8012948 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8012940:	3b01      	subs	r3, #1
 8012942:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8012946:	e7f7      	b.n	8012938 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8012948:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801294c <_ZN8touchgfx11Application15handleTickEventEv>:
 801294c:	b570      	push	{r4, r5, r6, lr}
 801294e:	4d16      	ldr	r5, [pc, #88]	; (80129a8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8012950:	4604      	mov	r4, r0
 8012952:	6828      	ldr	r0, [r5, #0]
 8012954:	b140      	cbz	r0, 8012968 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8012956:	7a03      	ldrb	r3, [r0, #8]
 8012958:	b933      	cbnz	r3, 8012968 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801295a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801295e:	6803      	ldr	r3, [r0, #0]
 8012960:	689b      	ldr	r3, [r3, #8]
 8012962:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012966:	4718      	bx	r3
 8012968:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 801296c:	4e0f      	ldr	r6, [pc, #60]	; (80129ac <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801296e:	b973      	cbnz	r3, 801298e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8012970:	b168      	cbz	r0, 801298e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8012972:	7a03      	ldrb	r3, [r0, #8]
 8012974:	b15b      	cbz	r3, 801298e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8012976:	6830      	ldr	r0, [r6, #0]
 8012978:	b110      	cbz	r0, 8012980 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801297a:	6803      	ldr	r3, [r0, #0]
 801297c:	691b      	ldr	r3, [r3, #16]
 801297e:	4798      	blx	r3
 8012980:	6828      	ldr	r0, [r5, #0]
 8012982:	6803      	ldr	r3, [r0, #0]
 8012984:	68db      	ldr	r3, [r3, #12]
 8012986:	4798      	blx	r3
 8012988:	2301      	movs	r3, #1
 801298a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801298e:	3404      	adds	r4, #4
 8012990:	4620      	mov	r0, r4
 8012992:	f7ff ff5f 	bl	8012854 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8012996:	4620      	mov	r0, r4
 8012998:	f7ff ffa0 	bl	80128dc <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801299c:	6830      	ldr	r0, [r6, #0]
 801299e:	b110      	cbz	r0, 80129a6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80129a0:	6803      	ldr	r3, [r0, #0]
 80129a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80129a4:	e7dd      	b.n	8012962 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80129a6:	bd70      	pop	{r4, r5, r6, pc}
 80129a8:	24001f18 	.word	0x24001f18
 80129ac:	24001f14 	.word	0x24001f14

080129b0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80129b0:	4603      	mov	r3, r0
 80129b2:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80129b6:	2200      	movs	r2, #0
 80129b8:	801a      	strh	r2, [r3, #0]
 80129ba:	3308      	adds	r3, #8
 80129bc:	f823 2c06 	strh.w	r2, [r3, #-6]
 80129c0:	f823 2c04 	strh.w	r2, [r3, #-4]
 80129c4:	f823 2c02 	strh.w	r2, [r3, #-2]
 80129c8:	428b      	cmp	r3, r1
 80129ca:	d1f5      	bne.n	80129b8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80129cc:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80129d0:	4770      	bx	lr
	...

080129d4 <_ZN8touchgfx11ApplicationC1Ev>:
 80129d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80129d6:	4b1d      	ldr	r3, [pc, #116]	; (8012a4c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80129d8:	4606      	mov	r6, r0
 80129da:	4604      	mov	r4, r0
 80129dc:	2500      	movs	r5, #0
 80129de:	f846 3b04 	str.w	r3, [r6], #4
 80129e2:	22a8      	movs	r2, #168	; 0xa8
 80129e4:	2100      	movs	r1, #0
 80129e6:	4630      	mov	r0, r6
 80129e8:	f010 fa85 	bl	8022ef6 <memset>
 80129ec:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80129f0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80129f4:	4f16      	ldr	r7, [pc, #88]	; (8012a50 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80129f6:	f7ff ffdb 	bl	80129b0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80129fa:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80129fe:	f7ff ffd7 	bl	80129b0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8012a02:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8012a06:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8012a0a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8012a0e:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8012a12:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8012a16:	490f      	ldr	r1, [pc, #60]	; (8012a54 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8012a18:	480f      	ldr	r0, [pc, #60]	; (8012a58 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8012a1a:	f00f ff2f 	bl	802287c <CRC_Lock>
 8012a1e:	4b0f      	ldr	r3, [pc, #60]	; (8012a5c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8012a20:	b158      	cbz	r0, 8012a3a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8012a22:	801d      	strh	r5, [r3, #0]
 8012a24:	2300      	movs	r3, #0
 8012a26:	4a0e      	ldr	r2, [pc, #56]	; (8012a60 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8012a28:	4630      	mov	r0, r6
 8012a2a:	6013      	str	r3, [r2, #0]
 8012a2c:	4a0d      	ldr	r2, [pc, #52]	; (8012a64 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8012a2e:	603b      	str	r3, [r7, #0]
 8012a30:	6013      	str	r3, [r2, #0]
 8012a32:	f7ff ff2e 	bl	8012892 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8012a36:	4620      	mov	r0, r4
 8012a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012a3a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8012a3e:	2002      	movs	r0, #2
 8012a40:	801a      	strh	r2, [r3, #0]
 8012a42:	6038      	str	r0, [r7, #0]
 8012a44:	f001 fa50 	bl	8013ee8 <_ZN8touchgfx6Screen4drawEv>
 8012a48:	e7ec      	b.n	8012a24 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8012a4a:	bf00      	nop
 8012a4c:	080255cc 	.word	0x080255cc
 8012a50:	24001f14 	.word	0x24001f14
 8012a54:	b5e8b5cd 	.word	0xb5e8b5cd
 8012a58:	f407a5c2 	.word	0xf407a5c2
 8012a5c:	24000018 	.word	0x24000018
 8012a60:	24001f24 	.word	0x24001f24
 8012a64:	24001f18 	.word	0x24001f18

08012a68 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8012a68:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8012a6c:	3b01      	subs	r3, #1
 8012a6e:	b29b      	uxth	r3, r3
 8012a70:	428b      	cmp	r3, r1
 8012a72:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8012a76:	b510      	push	{r4, lr}
 8012a78:	d908      	bls.n	8012a8c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8012a7a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8012a7e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8012a82:	681a      	ldr	r2, [r3, #0]
 8012a84:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8012a88:	685a      	ldr	r2, [r3, #4]
 8012a8a:	6062      	str	r2, [r4, #4]
 8012a8c:	bd10      	pop	{r4, pc}
	...

08012a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8012a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a94:	b08f      	sub	sp, #60	; 0x3c
 8012a96:	4b8f      	ldr	r3, [pc, #572]	; (8012cd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8012a98:	4683      	mov	fp, r0
 8012a9a:	ac0a      	add	r4, sp, #40	; 0x28
 8012a9c:	e884 0006 	stmia.w	r4, {r1, r2}
 8012aa0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012aa4:	4620      	mov	r0, r4
 8012aa6:	4b8c      	ldr	r3, [pc, #560]	; (8012cd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8012aa8:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012aac:	f7ff fe10 	bl	80126d0 <_ZN8touchgfx4Rect10restrictToEss>
 8012ab0:	4620      	mov	r0, r4
 8012ab2:	f7fc fe2a 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012ab6:	2800      	cmp	r0, #0
 8012ab8:	d16a      	bne.n	8012b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012aba:	9403      	str	r4, [sp, #12]
 8012abc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8012ac0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8012ac4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8012ac8:	9301      	str	r3, [sp, #4]
 8012aca:	35a4      	adds	r5, #164	; 0xa4
 8012acc:	b15c      	cbz	r4, 8012ae6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8012ace:	4629      	mov	r1, r5
 8012ad0:	9803      	ldr	r0, [sp, #12]
 8012ad2:	f7ff fe4d 	bl	8012770 <_ZNK8touchgfx4Rect8includesERKS0_>
 8012ad6:	3c01      	subs	r4, #1
 8012ad8:	b118      	cbz	r0, 8012ae2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8012ada:	b2a1      	uxth	r1, r4
 8012adc:	9801      	ldr	r0, [sp, #4]
 8012ade:	f7ff ffc3 	bl	8012a68 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012ae2:	3d08      	subs	r5, #8
 8012ae4:	e7f2      	b.n	8012acc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8012ae6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8012aea:	f10a 33ff 	add.w	r3, sl, #4294967295
 8012aee:	f8cd a010 	str.w	sl, [sp, #16]
 8012af2:	9302      	str	r3, [sp, #8]
 8012af4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8012af8:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8012afc:	9306      	str	r3, [sp, #24]
 8012afe:	445c      	add	r4, fp
 8012b00:	2500      	movs	r5, #0
 8012b02:	4626      	mov	r6, r4
 8012b04:	f8cd a014 	str.w	sl, [sp, #20]
 8012b08:	462f      	mov	r7, r5
 8012b0a:	9b05      	ldr	r3, [sp, #20]
 8012b0c:	2b00      	cmp	r3, #0
 8012b0e:	d073      	beq.n	8012bf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8012b10:	9903      	ldr	r1, [sp, #12]
 8012b12:	4630      	mov	r0, r6
 8012b14:	f7ff fdba 	bl	801268c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012b18:	b350      	cbz	r0, 8012b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8012b1a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8012b1e:	f9b6 c000 	ldrsh.w	ip, [r6]
 8012b22:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8012b26:	45e6      	cmp	lr, ip
 8012b28:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8012b2c:	db33      	blt.n	8012b96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8012b2e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8012b32:	88b3      	ldrh	r3, [r6, #4]
 8012b34:	4472      	add	r2, lr
 8012b36:	4463      	add	r3, ip
 8012b38:	b212      	sxth	r2, r2
 8012b3a:	b21b      	sxth	r3, r3
 8012b3c:	429a      	cmp	r2, r3
 8012b3e:	dc2a      	bgt.n	8012b96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8012b40:	fa1f f289 	uxth.w	r2, r9
 8012b44:	88f3      	ldrh	r3, [r6, #6]
 8012b46:	45c8      	cmp	r8, r9
 8012b48:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8012b4c:	4413      	add	r3, r2
 8012b4e:	fa1f fc88 	uxth.w	ip, r8
 8012b52:	b29b      	uxth	r3, r3
 8012b54:	fa0f fe83 	sxth.w	lr, r3
 8012b58:	db0f      	blt.n	8012b7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8012b5a:	eba3 030c 	sub.w	r3, r3, ip
 8012b5e:	1ac9      	subs	r1, r1, r3
 8012b60:	b209      	sxth	r1, r1
 8012b62:	2900      	cmp	r1, #0
 8012b64:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012b68:	dd12      	ble.n	8012b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012b6a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8012b6e:	4605      	mov	r5, r0
 8012b70:	9b05      	ldr	r3, [sp, #20]
 8012b72:	3e08      	subs	r6, #8
 8012b74:	3b01      	subs	r3, #1
 8012b76:	9305      	str	r3, [sp, #20]
 8012b78:	e7c7      	b.n	8012b0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8012b7a:	4461      	add	r1, ip
 8012b7c:	b209      	sxth	r1, r1
 8012b7e:	4571      	cmp	r1, lr
 8012b80:	dc38      	bgt.n	8012bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8012b82:	eba2 020c 	sub.w	r2, r2, ip
 8012b86:	b212      	sxth	r2, r2
 8012b88:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8012b8c:	2a00      	cmp	r2, #0
 8012b8e:	dcee      	bgt.n	8012b6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8012b90:	b00f      	add	sp, #60	; 0x3c
 8012b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b96:	45c8      	cmp	r8, r9
 8012b98:	db2c      	blt.n	8012bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8012b9a:	88f3      	ldrh	r3, [r6, #6]
 8012b9c:	4499      	add	r9, r3
 8012b9e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8012ba2:	4498      	add	r8, r3
 8012ba4:	fa0f f989 	sxth.w	r9, r9
 8012ba8:	fa0f f888 	sxth.w	r8, r8
 8012bac:	45c1      	cmp	r9, r8
 8012bae:	db21      	blt.n	8012bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8012bb0:	fa1f f28c 	uxth.w	r2, ip
 8012bb4:	88b3      	ldrh	r3, [r6, #4]
 8012bb6:	45e6      	cmp	lr, ip
 8012bb8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012bbc:	4413      	add	r3, r2
 8012bbe:	fa1f f88e 	uxth.w	r8, lr
 8012bc2:	b29b      	uxth	r3, r3
 8012bc4:	fa0f f983 	sxth.w	r9, r3
 8012bc8:	db0a      	blt.n	8012be0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8012bca:	eba3 0308 	sub.w	r3, r3, r8
 8012bce:	1ac9      	subs	r1, r1, r3
 8012bd0:	b209      	sxth	r1, r1
 8012bd2:	2900      	cmp	r1, #0
 8012bd4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8012bd8:	ddda      	ble.n	8012b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012bda:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8012bde:	e7c6      	b.n	8012b6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8012be0:	4441      	add	r1, r8
 8012be2:	b209      	sxth	r1, r1
 8012be4:	4549      	cmp	r1, r9
 8012be6:	dc05      	bgt.n	8012bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8012be8:	eba2 0208 	sub.w	r2, r2, r8
 8012bec:	b212      	sxth	r2, r2
 8012bee:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8012bf2:	e7cb      	b.n	8012b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8012bf4:	4607      	mov	r7, r0
 8012bf6:	e7bb      	b.n	8012b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8012bf8:	2d00      	cmp	r5, #0
 8012bfa:	d181      	bne.n	8012b00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8012bfc:	2f00      	cmp	r7, #0
 8012bfe:	f000 81dd 	beq.w	8012fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8012c02:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8012c06:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8012c0a:	b2b3      	uxth	r3, r6
 8012c0c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8012c10:	9305      	str	r3, [sp, #20]
 8012c12:	9a05      	ldr	r2, [sp, #20]
 8012c14:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8012c18:	4413      	add	r3, r2
 8012c1a:	b2ba      	uxth	r2, r7
 8012c1c:	4492      	add	sl, r2
 8012c1e:	b29b      	uxth	r3, r3
 8012c20:	fa1f fa8a 	uxth.w	sl, sl
 8012c24:	fa0f f883 	sxth.w	r8, r3
 8012c28:	fa0f f98a 	sxth.w	r9, sl
 8012c2c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8012c30:	9b04      	ldr	r3, [sp, #16]
 8012c32:	2b00      	cmp	r3, #0
 8012c34:	d052      	beq.n	8012cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8012c36:	9903      	ldr	r1, [sp, #12]
 8012c38:	4620      	mov	r0, r4
 8012c3a:	f7ff fd27 	bl	801268c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012c3e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8012c42:	b1c0      	cbz	r0, 8012c76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8012c44:	f9b4 e000 	ldrsh.w	lr, [r4]
 8012c48:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012c4c:	4576      	cmp	r6, lr
 8012c4e:	dc22      	bgt.n	8012c96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8012c50:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8012c54:	44f4      	add	ip, lr
 8012c56:	fa0f fc8c 	sxth.w	ip, ip
 8012c5a:	45e0      	cmp	r8, ip
 8012c5c:	db1b      	blt.n	8012c96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8012c5e:	428f      	cmp	r7, r1
 8012c60:	fa1f fc81 	uxth.w	ip, r1
 8012c64:	88e1      	ldrh	r1, [r4, #6]
 8012c66:	dc0d      	bgt.n	8012c84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8012c68:	ebaa 0c0c 	sub.w	ip, sl, ip
 8012c6c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8012c70:	eba1 010c 	sub.w	r1, r1, ip
 8012c74:	80e1      	strh	r1, [r4, #6]
 8012c76:	4628      	mov	r0, r5
 8012c78:	9904      	ldr	r1, [sp, #16]
 8012c7a:	3c08      	subs	r4, #8
 8012c7c:	4605      	mov	r5, r0
 8012c7e:	3901      	subs	r1, #1
 8012c80:	9104      	str	r1, [sp, #16]
 8012c82:	e7d3      	b.n	8012c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8012c84:	4461      	add	r1, ip
 8012c86:	b209      	sxth	r1, r1
 8012c88:	4549      	cmp	r1, r9
 8012c8a:	dcf5      	bgt.n	8012c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8012c8c:	eba2 0c0c 	sub.w	ip, r2, ip
 8012c90:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012c94:	e7ef      	b.n	8012c76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8012c96:	428f      	cmp	r7, r1
 8012c98:	dcee      	bgt.n	8012c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8012c9a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8012c9e:	4461      	add	r1, ip
 8012ca0:	b209      	sxth	r1, r1
 8012ca2:	4589      	cmp	r9, r1
 8012ca4:	dbe8      	blt.n	8012c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8012ca6:	4576      	cmp	r6, lr
 8012ca8:	fa1f fc8e 	uxth.w	ip, lr
 8012cac:	88a1      	ldrh	r1, [r4, #4]
 8012cae:	dc07      	bgt.n	8012cc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8012cb0:	eba3 0c0c 	sub.w	ip, r3, ip
 8012cb4:	f8a4 8000 	strh.w	r8, [r4]
 8012cb8:	eba1 010c 	sub.w	r1, r1, ip
 8012cbc:	80a1      	strh	r1, [r4, #4]
 8012cbe:	e7da      	b.n	8012c76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8012cc0:	4461      	add	r1, ip
 8012cc2:	b209      	sxth	r1, r1
 8012cc4:	4588      	cmp	r8, r1
 8012cc6:	dbd7      	blt.n	8012c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8012cc8:	9905      	ldr	r1, [sp, #20]
 8012cca:	eba1 0c0c 	sub.w	ip, r1, ip
 8012cce:	f8a4 c004 	strh.w	ip, [r4, #4]
 8012cd2:	e7d0      	b.n	8012c76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8012cd4:	24001ece 	.word	0x24001ece
 8012cd8:	24001ecc 	.word	0x24001ecc
 8012cdc:	2d00      	cmp	r5, #0
 8012cde:	f000 816d 	beq.w	8012fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8012ce2:	9b06      	ldr	r3, [sp, #24]
 8012ce4:	445b      	add	r3, fp
 8012ce6:	461c      	mov	r4, r3
 8012ce8:	9b02      	ldr	r3, [sp, #8]
 8012cea:	3301      	adds	r3, #1
 8012cec:	f000 8166 	beq.w	8012fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8012cf0:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8012cf4:	9803      	ldr	r0, [sp, #12]
 8012cf6:	4629      	mov	r1, r5
 8012cf8:	f7ff fd3a 	bl	8012770 <_ZNK8touchgfx4Rect8includesERKS0_>
 8012cfc:	b120      	cbz	r0, 8012d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8012cfe:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8012d02:	9801      	ldr	r0, [sp, #4]
 8012d04:	f7ff feb0 	bl	8012a68 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012d08:	9903      	ldr	r1, [sp, #12]
 8012d0a:	4628      	mov	r0, r5
 8012d0c:	f7ff fcbe 	bl	801268c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012d10:	2800      	cmp	r0, #0
 8012d12:	f000 809c 	beq.w	8012e4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8012d16:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8012d1a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8012d1e:	fa1f f189 	uxth.w	r1, r9
 8012d22:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8012d26:	9309      	str	r3, [sp, #36]	; 0x24
 8012d28:	eb01 0c03 	add.w	ip, r1, r3
 8012d2c:	b283      	uxth	r3, r0
 8012d2e:	4548      	cmp	r0, r9
 8012d30:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8012d34:	fa1f fa8c 	uxth.w	sl, ip
 8012d38:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8012d3c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8012d40:	eb03 050c 	add.w	r5, r3, ip
 8012d44:	b2ad      	uxth	r5, r5
 8012d46:	9505      	str	r5, [sp, #20]
 8012d48:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8012d4c:	9504      	str	r5, [sp, #16]
 8012d4e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8012d52:	f340 8099 	ble.w	8012e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8012d56:	1a5b      	subs	r3, r3, r1
 8012d58:	4596      	cmp	lr, r2
 8012d5a:	fa0f f08a 	sxth.w	r0, sl
 8012d5e:	b29b      	uxth	r3, r3
 8012d60:	b21e      	sxth	r6, r3
 8012d62:	dd2e      	ble.n	8012dc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8012d64:	9f02      	ldr	r7, [sp, #8]
 8012d66:	fa1f fe8e 	uxth.w	lr, lr
 8012d6a:	b292      	uxth	r2, r2
 8012d6c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8012d70:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8012d74:	9f04      	ldr	r7, [sp, #16]
 8012d76:	ebae 0102 	sub.w	r1, lr, r2
 8012d7a:	44a6      	add	lr, r4
 8012d7c:	1a3f      	subs	r7, r7, r0
 8012d7e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8012d82:	b289      	uxth	r1, r1
 8012d84:	4402      	add	r2, r0
 8012d86:	fa0f fe8e 	sxth.w	lr, lr
 8012d8a:	b20d      	sxth	r5, r1
 8012d8c:	b212      	sxth	r2, r2
 8012d8e:	436f      	muls	r7, r5
 8012d90:	ebae 0202 	sub.w	r2, lr, r2
 8012d94:	4372      	muls	r2, r6
 8012d96:	4297      	cmp	r7, r2
 8012d98:	db09      	blt.n	8012dae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8012d9a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8012d9e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8012da2:	449c      	add	ip, r3
 8012da4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012da8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8012dac:	e686      	b.n	8012abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012dae:	4421      	add	r1, r4
 8012db0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8012db4:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8012db8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012dbc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012dc0:	e67c      	b.n	8012abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012dc2:	9f04      	ldr	r7, [sp, #16]
 8012dc4:	42b8      	cmp	r0, r7
 8012dc6:	da27      	bge.n	8012e18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8012dc8:	9902      	ldr	r1, [sp, #8]
 8012dca:	1a3f      	subs	r7, r7, r0
 8012dcc:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8012dd0:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8012dd4:	eb05 010e 	add.w	r1, r5, lr
 8012dd8:	fa1f f881 	uxth.w	r8, r1
 8012ddc:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8012de0:	4411      	add	r1, r2
 8012de2:	fa0f f988 	sxth.w	r9, r8
 8012de6:	eba2 020e 	sub.w	r2, r2, lr
 8012dea:	eba1 0108 	sub.w	r1, r1, r8
 8012dee:	4372      	muls	r2, r6
 8012df0:	b289      	uxth	r1, r1
 8012df2:	fa0f f881 	sxth.w	r8, r1
 8012df6:	fb08 f707 	mul.w	r7, r8, r7
 8012dfa:	42ba      	cmp	r2, r7
 8012dfc:	dc06      	bgt.n	8012e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8012dfe:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8012e02:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8012e06:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8012e0a:	e7ca      	b.n	8012da2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8012e0c:	4429      	add	r1, r5
 8012e0e:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8012e12:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012e16:	e651      	b.n	8012abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012e18:	9805      	ldr	r0, [sp, #20]
 8012e1a:	2d06      	cmp	r5, #6
 8012e1c:	ebaa 0000 	sub.w	r0, sl, r0
 8012e20:	b280      	uxth	r0, r0
 8012e22:	fa0f fe80 	sxth.w	lr, r0
 8012e26:	d817      	bhi.n	8012e58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8012e28:	9b04      	ldr	r3, [sp, #16]
 8012e2a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8012e2e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8012e32:	1c6b      	adds	r3, r5, #1
 8012e34:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8012e38:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8012e3c:	9b01      	ldr	r3, [sp, #4]
 8012e3e:	9801      	ldr	r0, [sp, #4]
 8012e40:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012e44:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012e48:	805a      	strh	r2, [r3, #2]
 8012e4a:	809e      	strh	r6, [r3, #4]
 8012e4c:	80d9      	strh	r1, [r3, #6]
 8012e4e:	9b02      	ldr	r3, [sp, #8]
 8012e50:	3c08      	subs	r4, #8
 8012e52:	3b01      	subs	r3, #1
 8012e54:	9302      	str	r3, [sp, #8]
 8012e56:	e747      	b.n	8012ce8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8012e58:	9a02      	ldr	r2, [sp, #8]
 8012e5a:	45b6      	cmp	lr, r6
 8012e5c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8012e60:	db0d      	blt.n	8012e7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8012e62:	449c      	add	ip, r3
 8012e64:	445a      	add	r2, fp
 8012e66:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8012e6a:	fa1f fc8c 	uxth.w	ip, ip
 8012e6e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8012e72:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8012e76:	448c      	add	ip, r1
 8012e78:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8012e7c:	e61e      	b.n	8012abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012e7e:	445a      	add	r2, fp
 8012e80:	4484      	add	ip, r0
 8012e82:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8012e86:	e78f      	b.n	8012da8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012e88:	fa1f f18e 	uxth.w	r1, lr
 8012e8c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8012e90:	b293      	uxth	r3, r2
 8012e92:	4596      	cmp	lr, r2
 8012e94:	eb01 0806 	add.w	r8, r1, r6
 8012e98:	9306      	str	r3, [sp, #24]
 8012e9a:	fa1f f888 	uxth.w	r8, r8
 8012e9e:	9f06      	ldr	r7, [sp, #24]
 8012ea0:	fa0f f388 	sxth.w	r3, r8
 8012ea4:	9307      	str	r3, [sp, #28]
 8012ea6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8012eaa:	443b      	add	r3, r7
 8012eac:	b29b      	uxth	r3, r3
 8012eae:	9308      	str	r3, [sp, #32]
 8012eb0:	da24      	bge.n	8012efc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8012eb2:	9905      	ldr	r1, [sp, #20]
 8012eb4:	eba3 0308 	sub.w	r3, r3, r8
 8012eb8:	eba2 020e 	sub.w	r2, r2, lr
 8012ebc:	eba9 0000 	sub.w	r0, r9, r0
 8012ec0:	ebaa 0401 	sub.w	r4, sl, r1
 8012ec4:	b29b      	uxth	r3, r3
 8012ec6:	b2a4      	uxth	r4, r4
 8012ec8:	b219      	sxth	r1, r3
 8012eca:	b225      	sxth	r5, r4
 8012ecc:	4348      	muls	r0, r1
 8012ece:	436a      	muls	r2, r5
 8012ed0:	4282      	cmp	r2, r0
 8012ed2:	9a02      	ldr	r2, [sp, #8]
 8012ed4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8012ed8:	445a      	add	r2, fp
 8012eda:	dc06      	bgt.n	8012eea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8012edc:	9b07      	ldr	r3, [sp, #28]
 8012ede:	44a4      	add	ip, r4
 8012ee0:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8012ee4:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8012ee8:	e75e      	b.n	8012da8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012eea:	9904      	ldr	r1, [sp, #16]
 8012eec:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8012ef0:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8012ef4:	4433      	add	r3, r6
 8012ef6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012efa:	e5df      	b.n	8012abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012efc:	9f06      	ldr	r7, [sp, #24]
 8012efe:	9b04      	ldr	r3, [sp, #16]
 8012f00:	1bc9      	subs	r1, r1, r7
 8012f02:	fa0f f78a 	sxth.w	r7, sl
 8012f06:	b289      	uxth	r1, r1
 8012f08:	429f      	cmp	r7, r3
 8012f0a:	fa0f fe81 	sxth.w	lr, r1
 8012f0e:	dd23      	ble.n	8012f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8012f10:	9a05      	ldr	r2, [sp, #20]
 8012f12:	eba9 0000 	sub.w	r0, r9, r0
 8012f16:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012f1a:	ebaa 0202 	sub.w	r2, sl, r2
 8012f1e:	9d07      	ldr	r5, [sp, #28]
 8012f20:	fb0e f000 	mul.w	r0, lr, r0
 8012f24:	b292      	uxth	r2, r2
 8012f26:	eba5 0a03 	sub.w	sl, r5, r3
 8012f2a:	9b02      	ldr	r3, [sp, #8]
 8012f2c:	b214      	sxth	r4, r2
 8012f2e:	00db      	lsls	r3, r3, #3
 8012f30:	fb04 fa0a 	mul.w	sl, r4, sl
 8012f34:	445b      	add	r3, fp
 8012f36:	4550      	cmp	r0, sl
 8012f38:	db03      	blt.n	8012f42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8012f3a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8012f3e:	4494      	add	ip, r2
 8012f40:	e732      	b.n	8012da8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012f42:	9a04      	ldr	r2, [sp, #16]
 8012f44:	4431      	add	r1, r6
 8012f46:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8012f4a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8012f4e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8012f52:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012f56:	e75c      	b.n	8012e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8012f58:	9b08      	ldr	r3, [sp, #32]
 8012f5a:	2d06      	cmp	r5, #6
 8012f5c:	eba3 0308 	sub.w	r3, r3, r8
 8012f60:	b29b      	uxth	r3, r3
 8012f62:	b218      	sxth	r0, r3
 8012f64:	d813      	bhi.n	8012f8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8012f66:	9b07      	ldr	r3, [sp, #28]
 8012f68:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8012f6c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8012f70:	1c6b      	adds	r3, r5, #1
 8012f72:	9901      	ldr	r1, [sp, #4]
 8012f74:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8012f78:	9b01      	ldr	r3, [sp, #4]
 8012f7a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8012f7e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012f82:	805a      	strh	r2, [r3, #2]
 8012f84:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012f86:	f8a3 e006 	strh.w	lr, [r3, #6]
 8012f8a:	809a      	strh	r2, [r3, #4]
 8012f8c:	e75f      	b.n	8012e4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8012f8e:	9c02      	ldr	r4, [sp, #8]
 8012f90:	4570      	cmp	r0, lr
 8012f92:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8012f96:	db0d      	blt.n	8012fb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8012f98:	4431      	add	r1, r6
 8012f9a:	9b06      	ldr	r3, [sp, #24]
 8012f9c:	445c      	add	r4, fp
 8012f9e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012fa2:	b289      	uxth	r1, r1
 8012fa4:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8012fa8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012fac:	4419      	add	r1, r3
 8012fae:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8012fb2:	e583      	b.n	8012abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012fb4:	445c      	add	r4, fp
 8012fb6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8012fba:	e79b      	b.n	8012ef4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8012fbc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8012fc0:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8012fc4:	1e65      	subs	r5, r4, #1
 8012fc6:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8012fca:	b2ad      	uxth	r5, r5
 8012fcc:	42b5      	cmp	r5, r6
 8012fce:	d044      	beq.n	801305a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8012fd0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012fd4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8012fd8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012fdc:	4282      	cmp	r2, r0
 8012fde:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8012fe2:	d11f      	bne.n	8013024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8012fe4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8012fe8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8012fec:	459c      	cmp	ip, r3
 8012fee:	d119      	bne.n	8013024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8012ff0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8012ff4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8012ff8:	19d8      	adds	r0, r3, r7
 8012ffa:	b200      	sxth	r0, r0
 8012ffc:	4288      	cmp	r0, r1
 8012ffe:	d109      	bne.n	8013014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8013000:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8013004:	4413      	add	r3, r2
 8013006:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801300a:	4629      	mov	r1, r5
 801300c:	9801      	ldr	r0, [sp, #4]
 801300e:	f7ff fd2b 	bl	8012a68 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013012:	e003      	b.n	801301c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013014:	4411      	add	r1, r2
 8013016:	b209      	sxth	r1, r1
 8013018:	42b9      	cmp	r1, r7
 801301a:	d0f3      	beq.n	8013004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 801301c:	3d01      	subs	r5, #1
 801301e:	3c08      	subs	r4, #8
 8013020:	b2ad      	uxth	r5, r5
 8013022:	e7d3      	b.n	8012fcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8013024:	42b9      	cmp	r1, r7
 8013026:	d1f9      	bne.n	801301c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013028:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 801302c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8013030:	4299      	cmp	r1, r3
 8013032:	d1f3      	bne.n	801301c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013034:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8013038:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801303c:	181f      	adds	r7, r3, r0
 801303e:	b23f      	sxth	r7, r7
 8013040:	42ba      	cmp	r2, r7
 8013042:	d105      	bne.n	8013050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8013044:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8013048:	440b      	add	r3, r1
 801304a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801304e:	e7dc      	b.n	801300a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8013050:	440a      	add	r2, r1
 8013052:	b212      	sxth	r2, r2
 8013054:	4290      	cmp	r0, r2
 8013056:	d1e1      	bne.n	801301c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013058:	e7f6      	b.n	8013048 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801305a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 801305e:	2e07      	cmp	r6, #7
 8013060:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8013064:	d812      	bhi.n	801308c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8013066:	1c75      	adds	r5, r6, #1
 8013068:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801306c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8013070:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8013074:	9d01      	ldr	r5, [sp, #4]
 8013076:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801307a:	442c      	add	r4, r5
 801307c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8013080:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8013084:	8061      	strh	r1, [r4, #2]
 8013086:	80a2      	strh	r2, [r4, #4]
 8013088:	80e3      	strh	r3, [r4, #6]
 801308a:	e581      	b.n	8012b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801308c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8013090:	3e01      	subs	r6, #1
 8013092:	445c      	add	r4, fp
 8013094:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8013098:	f04f 37ff 	mov.w	r7, #4294967295
 801309c:	2500      	movs	r5, #0
 801309e:	9305      	str	r3, [sp, #20]
 80130a0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80130a4:	1e72      	subs	r2, r6, #1
 80130a6:	9302      	str	r3, [sp, #8]
 80130a8:	4691      	mov	r9, r2
 80130aa:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80130ae:	9304      	str	r3, [sp, #16]
 80130b0:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80130b4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80130b8:	6818      	ldr	r0, [r3, #0]
 80130ba:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80130be:	9207      	str	r2, [sp, #28]
 80130c0:	bf16      	itet	ne
 80130c2:	9905      	ldrne	r1, [sp, #20]
 80130c4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80130c8:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80130cc:	9306      	str	r3, [sp, #24]
 80130ce:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80130d2:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80130d6:	fb18 f801 	smulbb	r8, r8, r1
 80130da:	6859      	ldr	r1, [r3, #4]
 80130dc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80130e0:	4671      	mov	r1, lr
 80130e2:	a80c      	add	r0, sp, #48	; 0x30
 80130e4:	f7ff fb6a 	bl	80127bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80130e8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80130ec:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80130f0:	f04f 0c08 	mov.w	ip, #8
 80130f4:	9b04      	ldr	r3, [sp, #16]
 80130f6:	9a02      	ldr	r2, [sp, #8]
 80130f8:	fb10 f001 	smulbb	r0, r0, r1
 80130fc:	fb02 8803 	mla	r8, r2, r3, r8
 8013100:	eba0 0108 	sub.w	r1, r0, r8
 8013104:	fb90 f0fc 	sdiv	r0, r0, ip
 8013108:	4288      	cmp	r0, r1
 801310a:	dc20      	bgt.n	801314e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 801310c:	4551      	cmp	r1, sl
 801310e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8013112:	da03      	bge.n	801311c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8013114:	b1d9      	cbz	r1, 801314e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8013116:	468a      	mov	sl, r1
 8013118:	464f      	mov	r7, r9
 801311a:	4635      	mov	r5, r6
 801311c:	f109 39ff 	add.w	r9, r9, #4294967295
 8013120:	f119 0f02 	cmn.w	r9, #2
 8013124:	d1c6      	bne.n	80130b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8013126:	4616      	mov	r6, r2
 8013128:	3201      	adds	r2, #1
 801312a:	f1a4 0408 	sub.w	r4, r4, #8
 801312e:	d1b7      	bne.n	80130a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8013130:	9b01      	ldr	r3, [sp, #4]
 8013132:	b2ac      	uxth	r4, r5
 8013134:	00ed      	lsls	r5, r5, #3
 8013136:	1958      	adds	r0, r3, r5
 8013138:	1c7b      	adds	r3, r7, #1
 801313a:	d10b      	bne.n	8013154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 801313c:	4601      	mov	r1, r0
 801313e:	9803      	ldr	r0, [sp, #12]
 8013140:	f7ff fb3c 	bl	80127bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013144:	4621      	mov	r1, r4
 8013146:	9801      	ldr	r0, [sp, #4]
 8013148:	f7ff fc8e 	bl	8012a68 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801314c:	e4b6      	b.n	8012abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801314e:	464f      	mov	r7, r9
 8013150:	4635      	mov	r5, r6
 8013152:	e7ed      	b.n	8013130 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8013154:	9b01      	ldr	r3, [sp, #4]
 8013156:	00ff      	lsls	r7, r7, #3
 8013158:	445d      	add	r5, fp
 801315a:	19d9      	adds	r1, r3, r7
 801315c:	445f      	add	r7, fp
 801315e:	f7ff fb2d 	bl	80127bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013162:	9b03      	ldr	r3, [sp, #12]
 8013164:	cb03      	ldmia	r3!, {r0, r1}
 8013166:	9b03      	ldr	r3, [sp, #12]
 8013168:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 801316c:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8013170:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8013174:	6869      	ldr	r1, [r5, #4]
 8013176:	c303      	stmia	r3!, {r0, r1}
 8013178:	e7e4      	b.n	8013144 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 801317a:	bf00      	nop

0801317c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801317c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013180:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8013184:	b09b      	sub	sp, #108	; 0x6c
 8013186:	4604      	mov	r4, r0
 8013188:	4630      	mov	r0, r6
 801318a:	f7fc fabe 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 801318e:	4605      	mov	r5, r0
 8013190:	b948      	cbnz	r0, 80131a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8013192:	6823      	ldr	r3, [r4, #0]
 8013194:	4620      	mov	r0, r4
 8013196:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013198:	e896 0006 	ldmia.w	r6, {r1, r2}
 801319c:	4798      	blx	r3
 801319e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80131a2:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80131a6:	4bc5      	ldr	r3, [pc, #788]	; (80134bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 80131a8:	681b      	ldr	r3, [r3, #0]
 80131aa:	2b00      	cmp	r3, #0
 80131ac:	d03f      	beq.n	801322e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80131ae:	4dc4      	ldr	r5, [pc, #784]	; (80134c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80131b0:	4628      	mov	r0, r5
 80131b2:	f7fc faaa 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 80131b6:	4606      	mov	r6, r0
 80131b8:	2800      	cmp	r0, #0
 80131ba:	d138      	bne.n	801322e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80131bc:	4628      	mov	r0, r5
 80131be:	f7ff f99b 	bl	80124f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80131c2:	6823      	ldr	r3, [r4, #0]
 80131c4:	6829      	ldr	r1, [r5, #0]
 80131c6:	4620      	mov	r0, r4
 80131c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80131ca:	686a      	ldr	r2, [r5, #4]
 80131cc:	4798      	blx	r3
 80131ce:	802e      	strh	r6, [r5, #0]
 80131d0:	806e      	strh	r6, [r5, #2]
 80131d2:	80ae      	strh	r6, [r5, #4]
 80131d4:	80ee      	strh	r6, [r5, #6]
 80131d6:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80131da:	4dba      	ldr	r5, [pc, #744]	; (80134c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80131dc:	4640      	mov	r0, r8
 80131de:	f7ff fbe7 	bl	80129b0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80131e2:	882e      	ldrh	r6, [r5, #0]
 80131e4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80131e8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80131ec:	4633      	mov	r3, r6
 80131ee:	42bb      	cmp	r3, r7
 80131f0:	d224      	bcs.n	801323c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80131f2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80131f6:	2907      	cmp	r1, #7
 80131f8:	d816      	bhi.n	8013228 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80131fa:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80131fe:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8013202:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8013206:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801320a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801320e:	1c4a      	adds	r2, r1, #1
 8013210:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8013214:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8013218:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 801321c:	f8a2 a002 	strh.w	sl, [r2, #2]
 8013220:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013224:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013228:	3301      	adds	r3, #1
 801322a:	b29b      	uxth	r3, r3
 801322c:	e7df      	b.n	80131ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 801322e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8013232:	2b00      	cmp	r3, #0
 8013234:	d1cf      	bne.n	80131d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8013236:	b01b      	add	sp, #108	; 0x6c
 8013238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801323c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8013240:	42b3      	cmp	r3, r6
 8013242:	d90c      	bls.n	801325e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8013244:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8013248:	6822      	ldr	r2, [r4, #0]
 801324a:	3601      	adds	r6, #1
 801324c:	4620      	mov	r0, r4
 801324e:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8013250:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8013254:	b2b6      	uxth	r6, r6
 8013256:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 801325a:	47b8      	blx	r7
 801325c:	e7ee      	b.n	801323c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801325e:	4a9a      	ldr	r2, [pc, #616]	; (80134c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8013260:	6813      	ldr	r3, [r2, #0]
 8013262:	4691      	mov	r9, r2
 8013264:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8013268:	2b01      	cmp	r3, #1
 801326a:	f040 80e0 	bne.w	801342e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 801326e:	8829      	ldrh	r1, [r5, #0]
 8013270:	2600      	movs	r6, #0
 8013272:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8013276:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801327a:	33ae      	adds	r3, #174	; 0xae
 801327c:	428f      	cmp	r7, r1
 801327e:	f103 0308 	add.w	r3, r3, #8
 8013282:	dd0a      	ble.n	801329a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8013284:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8013288:	3101      	adds	r1, #1
 801328a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 801328e:	4402      	add	r2, r0
 8013290:	b212      	sxth	r2, r2
 8013292:	4296      	cmp	r6, r2
 8013294:	bfb8      	it	lt
 8013296:	4616      	movlt	r6, r2
 8013298:	e7f0      	b.n	801327c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801329a:	4b8c      	ldr	r3, [pc, #560]	; (80134cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801329c:	f8df 9228 	ldr.w	r9, [pc, #552]	; 80134c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 80132a0:	881b      	ldrh	r3, [r3, #0]
 80132a2:	2b0f      	cmp	r3, #15
 80132a4:	bf8c      	ite	hi
 80132a6:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80132aa:	f04f 0b01 	movls.w	fp, #1
 80132ae:	2300      	movs	r3, #0
 80132b0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80132b4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80132b8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80132bc:	4b82      	ldr	r3, [pc, #520]	; (80134c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80132be:	4438      	add	r0, r7
 80132c0:	b207      	sxth	r7, r0
 80132c2:	6818      	ldr	r0, [r3, #0]
 80132c4:	42b7      	cmp	r7, r6
 80132c6:	6803      	ldr	r3, [r0, #0]
 80132c8:	f280 8083 	bge.w	80133d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 80132cc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80132d0:	4798      	blx	r3
 80132d2:	eb07 030b 	add.w	r3, r7, fp
 80132d6:	4298      	cmp	r0, r3
 80132d8:	da07      	bge.n	80132ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80132da:	42b0      	cmp	r0, r6
 80132dc:	da05      	bge.n	80132ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80132de:	4287      	cmp	r7, r0
 80132e0:	dd6c      	ble.n	80133bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80132e2:	2f00      	cmp	r7, #0
 80132e4:	dd6a      	ble.n	80133bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80132e6:	4630      	mov	r0, r6
 80132e8:	e004      	b.n	80132f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 80132ea:	4287      	cmp	r7, r0
 80132ec:	dcfb      	bgt.n	80132e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 80132ee:	42b0      	cmp	r0, r6
 80132f0:	bfa8      	it	ge
 80132f2:	4630      	movge	r0, r6
 80132f4:	4b76      	ldr	r3, [pc, #472]	; (80134d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80132f6:	1bc0      	subs	r0, r0, r7
 80132f8:	2200      	movs	r2, #0
 80132fa:	f8ad 7016 	strh.w	r7, [sp, #22]
 80132fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013302:	882f      	ldrh	r7, [r5, #0]
 8013304:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013308:	f8ad 3018 	strh.w	r3, [sp, #24]
 801330c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013310:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8013314:	42bb      	cmp	r3, r7
 8013316:	d9cd      	bls.n	80132b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8013318:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801331c:	ab07      	add	r3, sp, #28
 801331e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8013322:	6851      	ldr	r1, [r2, #4]
 8013324:	c303      	stmia	r3!, {r0, r1}
 8013326:	a905      	add	r1, sp, #20
 8013328:	a807      	add	r0, sp, #28
 801332a:	f7ff f9af 	bl	801268c <_ZNK8touchgfx4Rect9intersectERKS0_>
 801332e:	2800      	cmp	r0, #0
 8013330:	d04c      	beq.n	80133cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8013332:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8013336:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801333a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 801333e:	4686      	mov	lr, r0
 8013340:	4290      	cmp	r0, r2
 8013342:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8013346:	4450      	add	r0, sl
 8013348:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801334c:	bfb8      	it	lt
 801334e:	4696      	movlt	lr, r2
 8013350:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013354:	4452      	add	r2, sl
 8013356:	b280      	uxth	r0, r0
 8013358:	4299      	cmp	r1, r3
 801335a:	468c      	mov	ip, r1
 801335c:	b292      	uxth	r2, r2
 801335e:	9302      	str	r3, [sp, #8]
 8013360:	bfb8      	it	lt
 8013362:	469c      	movlt	ip, r3
 8013364:	b203      	sxth	r3, r0
 8013366:	fa0f fa82 	sxth.w	sl, r2
 801336a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801336e:	f8ad c01e 	strh.w	ip, [sp, #30]
 8013372:	4553      	cmp	r3, sl
 8013374:	bfb8      	it	lt
 8013376:	4602      	movlt	r2, r0
 8013378:	9b02      	ldr	r3, [sp, #8]
 801337a:	eba2 020e 	sub.w	r2, r2, lr
 801337e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8013382:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8013386:	4411      	add	r1, r2
 8013388:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801338c:	4413      	add	r3, r2
 801338e:	b289      	uxth	r1, r1
 8013390:	b29b      	uxth	r3, r3
 8013392:	b208      	sxth	r0, r1
 8013394:	b21a      	sxth	r2, r3
 8013396:	4290      	cmp	r0, r2
 8013398:	bfb8      	it	lt
 801339a:	460b      	movlt	r3, r1
 801339c:	eba3 030c 	sub.w	r3, r3, ip
 80133a0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80133a4:	a807      	add	r0, sp, #28
 80133a6:	f7fc f9b0 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 80133aa:	b920      	cbnz	r0, 80133b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 80133ac:	6823      	ldr	r3, [r4, #0]
 80133ae:	a907      	add	r1, sp, #28
 80133b0:	4620      	mov	r0, r4
 80133b2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80133b4:	4798      	blx	r3
 80133b6:	3701      	adds	r7, #1
 80133b8:	b2bf      	uxth	r7, r7
 80133ba:	e7a9      	b.n	8013310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 80133bc:	f8d9 0000 	ldr.w	r0, [r9]
 80133c0:	2101      	movs	r1, #1
 80133c2:	6803      	ldr	r3, [r0, #0]
 80133c4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80133c8:	4798      	blx	r3
 80133ca:	e773      	b.n	80132b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 80133cc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80133d0:	e7e8      	b.n	80133a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 80133d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80133d4:	4798      	blx	r3
 80133d6:	4b3f      	ldr	r3, [pc, #252]	; (80134d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80133d8:	781b      	ldrb	r3, [r3, #0]
 80133da:	2b00      	cmp	r3, #0
 80133dc:	f43f af2b 	beq.w	8013236 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80133e0:	2300      	movs	r3, #0
 80133e2:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80133e6:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80133ea:	882b      	ldrh	r3, [r5, #0]
 80133ec:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80133f0:	42ab      	cmp	r3, r5
 80133f2:	f4bf af20 	bcs.w	8013236 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80133f6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80133fa:	2907      	cmp	r1, #7
 80133fc:	d814      	bhi.n	8013428 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 80133fe:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8013402:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8013406:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 801340a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 801340e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8013412:	1c4a      	adds	r2, r1, #1
 8013414:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8013418:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801341c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8013420:	f8a2 c002 	strh.w	ip, [r2, #2]
 8013424:	8097      	strh	r7, [r2, #4]
 8013426:	80d6      	strh	r6, [r2, #6]
 8013428:	3301      	adds	r3, #1
 801342a:	b29b      	uxth	r3, r3
 801342c:	e7e0      	b.n	80133f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 801342e:	2b02      	cmp	r3, #2
 8013430:	f040 8133 	bne.w	801369a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8013434:	4b28      	ldr	r3, [pc, #160]	; (80134d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8013436:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 801343a:	781b      	ldrb	r3, [r3, #0]
 801343c:	2b01      	cmp	r3, #1
 801343e:	f000 8098 	beq.w	8013572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8013442:	882a      	ldrh	r2, [r5, #0]
 8013444:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8013448:	3201      	adds	r2, #1
 801344a:	b292      	uxth	r2, r2
 801344c:	2900      	cmp	r1, #0
 801344e:	d0c2      	beq.n	80133d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8013450:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8013454:	4694      	mov	ip, r2
 8013456:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 801345a:	f04f 0900 	mov.w	r9, #0
 801345e:	441e      	add	r6, r3
 8013460:	b236      	sxth	r6, r6
 8013462:	fa1f f38c 	uxth.w	r3, ip
 8013466:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 801346a:	4299      	cmp	r1, r3
 801346c:	f240 80be 	bls.w	80135ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8013470:	4427      	add	r7, r4
 8013472:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8013476:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 801347a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 801347e:	4283      	cmp	r3, r0
 8013480:	f340 80a0 	ble.w	80135c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8013484:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8013488:	46e1      	mov	r9, ip
 801348a:	4406      	add	r6, r0
 801348c:	b236      	sxth	r6, r6
 801348e:	429e      	cmp	r6, r3
 8013490:	bfa8      	it	ge
 8013492:	461e      	movge	r6, r3
 8013494:	f10c 0c01 	add.w	ip, ip, #1
 8013498:	e7e3      	b.n	8013462 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 801349a:	d10a      	bne.n	80134b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 801349c:	4562      	cmp	r2, ip
 801349e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80134a2:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80134a6:	bfb8      	it	lt
 80134a8:	4662      	movlt	r2, ip
 80134aa:	4288      	cmp	r0, r1
 80134ac:	bfb8      	it	lt
 80134ae:	461f      	movlt	r7, r3
 80134b0:	e086      	b.n	80135c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 80134b2:	428a      	cmp	r2, r1
 80134b4:	bfb8      	it	lt
 80134b6:	460a      	movlt	r2, r1
 80134b8:	e082      	b.n	80135c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 80134ba:	bf00      	nop
 80134bc:	24001f10 	.word	0x24001f10
 80134c0:	24001f1c 	.word	0x24001f1c
 80134c4:	24000018 	.word	0x24000018
 80134c8:	24001ed8 	.word	0x24001ed8
 80134cc:	24001ece 	.word	0x24001ece
 80134d0:	24001ecc 	.word	0x24001ecc
 80134d4:	24001ed6 	.word	0x24001ed6
 80134d8:	24001ed0 	.word	0x24001ed0
 80134dc:	19a1      	adds	r1, r4, r6
 80134de:	ab07      	add	r3, sp, #28
 80134e0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80134e4:	6849      	ldr	r1, [r1, #4]
 80134e6:	c303      	stmia	r3!, {r0, r1}
 80134e8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80134ec:	a807      	add	r0, sp, #28
 80134ee:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80134f2:	2b13      	cmp	r3, #19
 80134f4:	440b      	add	r3, r1
 80134f6:	bfd8      	it	le
 80134f8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80134fc:	1a9b      	subs	r3, r3, r2
 80134fe:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013502:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013506:	f7ff f811 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801350a:	a807      	add	r0, sp, #28
 801350c:	f7fc f8fd 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 8013510:	bb78      	cbnz	r0, 8013572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8013512:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8013516:	4426      	add	r6, r4
 8013518:	f8d9 0000 	ldr.w	r0, [r9]
 801351c:	f1bc 0f14 	cmp.w	ip, #20
 8013520:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013524:	f8d0 e000 	ldr.w	lr, [r0]
 8013528:	bfa8      	it	ge
 801352a:	f04f 0c14 	movge.w	ip, #20
 801352e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8013532:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013536:	fa1f fc8c 	uxth.w	ip, ip
 801353a:	f8cd c000 	str.w	ip, [sp]
 801353e:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8013542:	47d8      	blx	fp
 8013544:	4683      	mov	fp, r0
 8013546:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801354a:	a807      	add	r0, sp, #28
 801354c:	f7fe ffd4 	bl	80124f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8013550:	6823      	ldr	r3, [r4, #0]
 8013552:	4620      	mov	r0, r4
 8013554:	a907      	add	r1, sp, #28
 8013556:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013558:	4798      	blx	r3
 801355a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801355e:	eba0 000b 	sub.w	r0, r0, fp
 8013562:	b200      	sxth	r0, r0
 8013564:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8013568:	b918      	cbnz	r0, 8013572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 801356a:	b2b9      	uxth	r1, r7
 801356c:	4650      	mov	r0, sl
 801356e:	f7ff fa7b 	bl	8012a68 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013572:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8013576:	f1bb 0f00 	cmp.w	fp, #0
 801357a:	f43f af2c 	beq.w	80133d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801357e:	882b      	ldrh	r3, [r5, #0]
 8013580:	2700      	movs	r7, #0
 8013582:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8013586:	3301      	adds	r3, #1
 8013588:	b29b      	uxth	r3, r3
 801358a:	b299      	uxth	r1, r3
 801358c:	00fe      	lsls	r6, r7, #3
 801358e:	458b      	cmp	fp, r1
 8013590:	d9a4      	bls.n	80134dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 8013592:	4426      	add	r6, r4
 8013594:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8013598:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 801359c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80135a0:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80135a4:	4408      	add	r0, r1
 80135a6:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80135aa:	4461      	add	r1, ip
 80135ac:	b200      	sxth	r0, r0
 80135ae:	b209      	sxth	r1, r1
 80135b0:	4288      	cmp	r0, r1
 80135b2:	f6bf af72 	bge.w	801349a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 80135b6:	4584      	cmp	ip, r0
 80135b8:	4662      	mov	r2, ip
 80135ba:	461f      	mov	r7, r3
 80135bc:	bfb8      	it	lt
 80135be:	4602      	movlt	r2, r0
 80135c0:	3301      	adds	r3, #1
 80135c2:	e7e2      	b.n	801358a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 80135c4:	d10e      	bne.n	80135e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 80135c6:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80135ca:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80135ce:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80135d2:	4473      	add	r3, lr
 80135d4:	b21b      	sxth	r3, r3
 80135d6:	429e      	cmp	r6, r3
 80135d8:	bfa8      	it	ge
 80135da:	461e      	movge	r6, r3
 80135dc:	4287      	cmp	r7, r0
 80135de:	bfb8      	it	lt
 80135e0:	46e1      	movlt	r9, ip
 80135e2:	e757      	b.n	8013494 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 80135e4:	4286      	cmp	r6, r0
 80135e6:	bfa8      	it	ge
 80135e8:	4606      	movge	r6, r0
 80135ea:	e753      	b.n	8013494 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 80135ec:	eb0a 0007 	add.w	r0, sl, r7
 80135f0:	4427      	add	r7, r4
 80135f2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80135f6:	f1bb 0f13 	cmp.w	fp, #19
 80135fa:	bfdc      	itt	le
 80135fc:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8013600:	445e      	addle	r6, fp
 8013602:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8013606:	bfd8      	it	le
 8013608:	b236      	sxthle	r6, r6
 801360a:	f7fc f87e 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 801360e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8013612:	2800      	cmp	r0, #0
 8013614:	f47f af1a 	bne.w	801344c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8013618:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 801361c:	fa1f fb8b 	uxth.w	fp, fp
 8013620:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013624:	1ab6      	subs	r6, r6, r2
 8013626:	4829      	ldr	r0, [pc, #164]	; (80136cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8013628:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801362c:	2e14      	cmp	r6, #20
 801362e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8013632:	6800      	ldr	r0, [r0, #0]
 8013634:	bfa8      	it	ge
 8013636:	2614      	movge	r6, #20
 8013638:	f8ad 101c 	strh.w	r1, [sp, #28]
 801363c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8013640:	b289      	uxth	r1, r1
 8013642:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013646:	b2b6      	uxth	r6, r6
 8013648:	f8d0 c000 	ldr.w	ip, [r0]
 801364c:	b292      	uxth	r2, r2
 801364e:	455e      	cmp	r6, fp
 8013650:	bf94      	ite	ls
 8013652:	9600      	strls	r6, [sp, #0]
 8013654:	f8cd b000 	strhi.w	fp, [sp]
 8013658:	b29b      	uxth	r3, r3
 801365a:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 801365e:	47b0      	blx	r6
 8013660:	6823      	ldr	r3, [r4, #0]
 8013662:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013666:	a907      	add	r1, sp, #28
 8013668:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801366a:	4620      	mov	r0, r4
 801366c:	4798      	blx	r3
 801366e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013672:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8013676:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 801367a:	1a5b      	subs	r3, r3, r1
 801367c:	440a      	add	r2, r1
 801367e:	b21b      	sxth	r3, r3
 8013680:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8013684:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8013688:	2b00      	cmp	r3, #0
 801368a:	f47f aeda 	bne.w	8013442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 801368e:	fa1f f189 	uxth.w	r1, r9
 8013692:	4650      	mov	r0, sl
 8013694:	f7ff f9e8 	bl	8012a68 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013698:	e6d3      	b.n	8013442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 801369a:	882e      	ldrh	r6, [r5, #0]
 801369c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80136a0:	42b3      	cmp	r3, r6
 80136a2:	f67f ae98 	bls.w	80133d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80136a6:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80136aa:	ab07      	add	r3, sp, #28
 80136ac:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80136b0:	6851      	ldr	r1, [r2, #4]
 80136b2:	c303      	stmia	r3!, {r0, r1}
 80136b4:	a807      	add	r0, sp, #28
 80136b6:	f7fc f828 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 80136ba:	b920      	cbnz	r0, 80136c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 80136bc:	6823      	ldr	r3, [r4, #0]
 80136be:	a907      	add	r1, sp, #28
 80136c0:	4620      	mov	r0, r4
 80136c2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80136c4:	4798      	blx	r3
 80136c6:	3601      	adds	r6, #1
 80136c8:	b2b6      	uxth	r6, r6
 80136ca:	e7e7      	b.n	801369c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 80136cc:	24001ed8 	.word	0x24001ed8

080136d0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80136d0:	4b03      	ldr	r3, [pc, #12]	; (80136e0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80136d2:	2200      	movs	r2, #0
 80136d4:	801a      	strh	r2, [r3, #0]
 80136d6:	805a      	strh	r2, [r3, #2]
 80136d8:	809a      	strh	r2, [r3, #4]
 80136da:	80da      	strh	r2, [r3, #6]
 80136dc:	4770      	bx	lr
 80136de:	bf00      	nop
 80136e0:	24001f1c 	.word	0x24001f1c

080136e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80136e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136e8:	b09d      	sub	sp, #116	; 0x74
 80136ea:	4606      	mov	r6, r0
 80136ec:	4614      	mov	r4, r2
 80136ee:	468a      	mov	sl, r1
 80136f0:	a803      	add	r0, sp, #12
 80136f2:	461d      	mov	r5, r3
 80136f4:	f000 fd72 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 80136f8:	6833      	ldr	r3, [r6, #0]
 80136fa:	4630      	mov	r0, r6
 80136fc:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8013700:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013702:	4798      	blx	r3
 8013704:	6833      	ldr	r3, [r6, #0]
 8013706:	4607      	mov	r7, r0
 8013708:	4630      	mov	r0, r6
 801370a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801370c:	4798      	blx	r3
 801370e:	462a      	mov	r2, r5
 8013710:	2500      	movs	r5, #0
 8013712:	4621      	mov	r1, r4
 8013714:	9000      	str	r0, [sp, #0]
 8013716:	463b      	mov	r3, r7
 8013718:	462c      	mov	r4, r5
 801371a:	46a9      	mov	r9, r5
 801371c:	46a8      	mov	r8, r5
 801371e:	a803      	add	r0, sp, #12
 8013720:	f000 fdb7 	bl	8014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013724:	2300      	movs	r3, #0
 8013726:	9302      	str	r3, [sp, #8]
 8013728:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801372c:	429c      	cmp	r4, r3
 801372e:	d002      	beq.n	8013736 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8013730:	455c      	cmp	r4, fp
 8013732:	bf18      	it	ne
 8013734:	4625      	movne	r5, r4
 8013736:	ab02      	add	r3, sp, #8
 8013738:	4632      	mov	r2, r6
 801373a:	4651      	mov	r1, sl
 801373c:	a803      	add	r0, sp, #12
 801373e:	f001 f8ad 	bl	801489c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013742:	4604      	mov	r4, r0
 8013744:	b108      	cbz	r0, 801374a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8013746:	280a      	cmp	r0, #10
 8013748:	d10a      	bne.n	8013760 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801374a:	45c1      	cmp	r9, r8
 801374c:	bf38      	it	cc
 801374e:	46c1      	movcc	r9, r8
 8013750:	f04f 0800 	mov.w	r8, #0
 8013754:	2c00      	cmp	r4, #0
 8013756:	d1e5      	bne.n	8013724 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8013758:	4648      	mov	r0, r9
 801375a:	b01d      	add	sp, #116	; 0x74
 801375c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013760:	9a02      	ldr	r2, [sp, #8]
 8013762:	2a00      	cmp	r2, #0
 8013764:	d0de      	beq.n	8013724 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8013766:	7b57      	ldrb	r7, [r2, #13]
 8013768:	4629      	mov	r1, r5
 801376a:	6833      	ldr	r3, [r6, #0]
 801376c:	007f      	lsls	r7, r7, #1
 801376e:	8894      	ldrh	r4, [r2, #4]
 8013770:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013772:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8013776:	7a97      	ldrb	r7, [r2, #10]
 8013778:	4307      	orrs	r7, r0
 801377a:	4630      	mov	r0, r6
 801377c:	4798      	blx	r3
 801377e:	4438      	add	r0, r7
 8013780:	4480      	add	r8, r0
 8013782:	fa1f f888 	uxth.w	r8, r8
 8013786:	e7e5      	b.n	8013754 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08013788 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8013788:	b508      	push	{r3, lr}
 801378a:	6803      	ldr	r3, [r0, #0]
 801378c:	68db      	ldr	r3, [r3, #12]
 801378e:	4798      	blx	r3
 8013790:	b128      	cbz	r0, 801379e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8013792:	7b43      	ldrb	r3, [r0, #13]
 8013794:	7a80      	ldrb	r0, [r0, #10]
 8013796:	005b      	lsls	r3, r3, #1
 8013798:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801379c:	4318      	orrs	r0, r3
 801379e:	bd08      	pop	{r3, pc}

080137a0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80137a0:	b40e      	push	{r1, r2, r3}
 80137a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80137a4:	b09e      	sub	sp, #120	; 0x78
 80137a6:	4605      	mov	r5, r0
 80137a8:	ab23      	add	r3, sp, #140	; 0x8c
 80137aa:	a805      	add	r0, sp, #20
 80137ac:	f853 4b04 	ldr.w	r4, [r3], #4
 80137b0:	9303      	str	r3, [sp, #12]
 80137b2:	f000 fd13 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 80137b6:	682b      	ldr	r3, [r5, #0]
 80137b8:	4628      	mov	r0, r5
 80137ba:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80137bc:	4798      	blx	r3
 80137be:	682b      	ldr	r3, [r5, #0]
 80137c0:	4606      	mov	r6, r0
 80137c2:	4628      	mov	r0, r5
 80137c4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80137c6:	4798      	blx	r3
 80137c8:	4633      	mov	r3, r6
 80137ca:	4621      	mov	r1, r4
 80137cc:	ae1e      	add	r6, sp, #120	; 0x78
 80137ce:	2400      	movs	r4, #0
 80137d0:	9000      	str	r0, [sp, #0]
 80137d2:	9a03      	ldr	r2, [sp, #12]
 80137d4:	a805      	add	r0, sp, #20
 80137d6:	f000 fd5c 	bl	8014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80137da:	f846 4d68 	str.w	r4, [r6, #-104]!
 80137de:	462a      	mov	r2, r5
 80137e0:	4633      	mov	r3, r6
 80137e2:	4621      	mov	r1, r4
 80137e4:	a805      	add	r0, sp, #20
 80137e6:	f001 f859 	bl	801489c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80137ea:	b300      	cbz	r0, 801382e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 80137ec:	280a      	cmp	r0, #10
 80137ee:	d01a      	beq.n	8013826 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80137f0:	9f04      	ldr	r7, [sp, #16]
 80137f2:	b1c7      	cbz	r7, 8013826 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80137f4:	7b78      	ldrb	r0, [r7, #13]
 80137f6:	7a3b      	ldrb	r3, [r7, #8]
 80137f8:	00c1      	lsls	r1, r0, #3
 80137fa:	88ea      	ldrh	r2, [r5, #6]
 80137fc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013800:	4319      	orrs	r1, r3
 8013802:	0643      	lsls	r3, r0, #25
 8013804:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8013808:	bf48      	it	mi
 801380a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801380e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013812:	bf48      	it	mi
 8013814:	b219      	sxthmi	r1, r3
 8013816:	79fb      	ldrb	r3, [r7, #7]
 8013818:	4303      	orrs	r3, r0
 801381a:	4413      	add	r3, r2
 801381c:	1a5b      	subs	r3, r3, r1
 801381e:	b21b      	sxth	r3, r3
 8013820:	429c      	cmp	r4, r3
 8013822:	bfb8      	it	lt
 8013824:	461c      	movlt	r4, r3
 8013826:	4633      	mov	r3, r6
 8013828:	462a      	mov	r2, r5
 801382a:	2100      	movs	r1, #0
 801382c:	e7da      	b.n	80137e4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801382e:	b2a0      	uxth	r0, r4
 8013830:	b01e      	add	sp, #120	; 0x78
 8013832:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8013836:	b003      	add	sp, #12
 8013838:	4770      	bx	lr

0801383a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801383a:	7a43      	ldrb	r3, [r0, #9]
 801383c:	8880      	ldrh	r0, [r0, #4]
 801383e:	4418      	add	r0, r3
 8013840:	b280      	uxth	r0, r0
 8013842:	4770      	bx	lr

08013844 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8013844:	6803      	ldr	r3, [r0, #0]
 8013846:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013848:	4718      	bx	r3

0801384a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801384a:	b40e      	push	{r1, r2, r3}
 801384c:	b570      	push	{r4, r5, r6, lr}
 801384e:	b09d      	sub	sp, #116	; 0x74
 8013850:	4604      	mov	r4, r0
 8013852:	ab21      	add	r3, sp, #132	; 0x84
 8013854:	a803      	add	r0, sp, #12
 8013856:	f853 5b04 	ldr.w	r5, [r3], #4
 801385a:	9302      	str	r3, [sp, #8]
 801385c:	f000 fcbe 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 8013860:	6823      	ldr	r3, [r4, #0]
 8013862:	4620      	mov	r0, r4
 8013864:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013866:	4798      	blx	r3
 8013868:	6823      	ldr	r3, [r4, #0]
 801386a:	4606      	mov	r6, r0
 801386c:	4620      	mov	r0, r4
 801386e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013870:	2401      	movs	r4, #1
 8013872:	4798      	blx	r3
 8013874:	4633      	mov	r3, r6
 8013876:	9000      	str	r0, [sp, #0]
 8013878:	4629      	mov	r1, r5
 801387a:	9a02      	ldr	r2, [sp, #8]
 801387c:	a803      	add	r0, sp, #12
 801387e:	f000 fd08 	bl	8014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013882:	a803      	add	r0, sp, #12
 8013884:	f001 f8d6 	bl	8014a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013888:	b2a3      	uxth	r3, r4
 801388a:	b138      	cbz	r0, 801389c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 801388c:	280a      	cmp	r0, #10
 801388e:	a803      	add	r0, sp, #12
 8013890:	bf04      	itt	eq
 8013892:	3301      	addeq	r3, #1
 8013894:	b21c      	sxtheq	r4, r3
 8013896:	f001 f8cd 	bl	8014a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801389a:	e7f5      	b.n	8013888 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801389c:	4618      	mov	r0, r3
 801389e:	b01d      	add	sp, #116	; 0x74
 80138a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80138a4:	b003      	add	sp, #12
 80138a6:	4770      	bx	lr

080138a8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80138a8:	b40e      	push	{r1, r2, r3}
 80138aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138ac:	b09e      	sub	sp, #120	; 0x78
 80138ae:	4604      	mov	r4, r0
 80138b0:	ab23      	add	r3, sp, #140	; 0x8c
 80138b2:	a805      	add	r0, sp, #20
 80138b4:	f853 5b04 	ldr.w	r5, [r3], #4
 80138b8:	9303      	str	r3, [sp, #12]
 80138ba:	f000 fc8f 	bl	80141dc <_ZN8touchgfx12TextProviderC1Ev>
 80138be:	6823      	ldr	r3, [r4, #0]
 80138c0:	4620      	mov	r0, r4
 80138c2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80138c4:	4798      	blx	r3
 80138c6:	6823      	ldr	r3, [r4, #0]
 80138c8:	4606      	mov	r6, r0
 80138ca:	4620      	mov	r0, r4
 80138cc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80138ce:	4798      	blx	r3
 80138d0:	4633      	mov	r3, r6
 80138d2:	4629      	mov	r1, r5
 80138d4:	9000      	str	r0, [sp, #0]
 80138d6:	9a03      	ldr	r2, [sp, #12]
 80138d8:	a805      	add	r0, sp, #20
 80138da:	f000 fcda 	bl	8014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80138de:	ad1e      	add	r5, sp, #120	; 0x78
 80138e0:	2100      	movs	r1, #0
 80138e2:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80138e6:	4622      	mov	r2, r4
 80138e8:	a805      	add	r0, sp, #20
 80138ea:	f845 1d68 	str.w	r1, [r5, #-104]!
 80138ee:	462b      	mov	r3, r5
 80138f0:	f000 ffd4 	bl	801489c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80138f4:	b1d8      	cbz	r0, 801392e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80138f6:	280a      	cmp	r0, #10
 80138f8:	d012      	beq.n	8013920 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80138fa:	9804      	ldr	r0, [sp, #16]
 80138fc:	b180      	cbz	r0, 8013920 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80138fe:	7b47      	ldrb	r7, [r0, #13]
 8013900:	88e2      	ldrh	r2, [r4, #6]
 8013902:	00fb      	lsls	r3, r7, #3
 8013904:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013908:	7a03      	ldrb	r3, [r0, #8]
 801390a:	430b      	orrs	r3, r1
 801390c:	0679      	lsls	r1, r7, #25
 801390e:	bf44      	itt	mi
 8013910:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013914:	b21b      	sxthmi	r3, r3
 8013916:	1ad3      	subs	r3, r2, r3
 8013918:	b21b      	sxth	r3, r3
 801391a:	429e      	cmp	r6, r3
 801391c:	bfa8      	it	ge
 801391e:	461e      	movge	r6, r3
 8013920:	462b      	mov	r3, r5
 8013922:	4622      	mov	r2, r4
 8013924:	2100      	movs	r1, #0
 8013926:	a805      	add	r0, sp, #20
 8013928:	f000 ffb8 	bl	801489c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801392c:	e7e2      	b.n	80138f4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801392e:	4630      	mov	r0, r6
 8013930:	b01e      	add	sp, #120	; 0x78
 8013932:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8013936:	b003      	add	sp, #12
 8013938:	4770      	bx	lr

0801393a <_ZNK8touchgfx8Drawable10invalidateEv>:
 801393a:	b513      	push	{r0, r1, r4, lr}
 801393c:	6803      	ldr	r3, [r0, #0]
 801393e:	2400      	movs	r4, #0
 8013940:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8013944:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013948:	f8ad 1004 	strh.w	r1, [sp, #4]
 801394c:	4669      	mov	r1, sp
 801394e:	691b      	ldr	r3, [r3, #16]
 8013950:	9400      	str	r4, [sp, #0]
 8013952:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013956:	4798      	blx	r3
 8013958:	b002      	add	sp, #8
 801395a:	bd10      	pop	{r4, pc}

0801395c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801395c:	b538      	push	{r3, r4, r5, lr}
 801395e:	680b      	ldr	r3, [r1, #0]
 8013960:	460c      	mov	r4, r1
 8013962:	4605      	mov	r5, r0
 8013964:	68db      	ldr	r3, [r3, #12]
 8013966:	4798      	blx	r3
 8013968:	6823      	ldr	r3, [r4, #0]
 801396a:	4620      	mov	r0, r4
 801396c:	4629      	mov	r1, r5
 801396e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013970:	4798      	blx	r3
 8013972:	4628      	mov	r0, r5
 8013974:	bd38      	pop	{r3, r4, r5, pc}

08013976 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8013976:	b410      	push	{r4}
 8013978:	880a      	ldrh	r2, [r1, #0]
 801397a:	8884      	ldrh	r4, [r0, #4]
 801397c:	4422      	add	r2, r4
 801397e:	800a      	strh	r2, [r1, #0]
 8013980:	884a      	ldrh	r2, [r1, #2]
 8013982:	88c4      	ldrh	r4, [r0, #6]
 8013984:	4422      	add	r2, r4
 8013986:	804a      	strh	r2, [r1, #2]
 8013988:	6940      	ldr	r0, [r0, #20]
 801398a:	b120      	cbz	r0, 8013996 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801398c:	6803      	ldr	r3, [r0, #0]
 801398e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013992:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013994:	4718      	bx	r3
 8013996:	f85d 4b04 	ldr.w	r4, [sp], #4
 801399a:	4770      	bx	lr

0801399c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801399c:	b570      	push	{r4, r5, r6, lr}
 801399e:	8882      	ldrh	r2, [r0, #4]
 80139a0:	460c      	mov	r4, r1
 80139a2:	880b      	ldrh	r3, [r1, #0]
 80139a4:	4605      	mov	r5, r0
 80139a6:	4413      	add	r3, r2
 80139a8:	800b      	strh	r3, [r1, #0]
 80139aa:	884b      	ldrh	r3, [r1, #2]
 80139ac:	88c2      	ldrh	r2, [r0, #6]
 80139ae:	4413      	add	r3, r2
 80139b0:	804b      	strh	r3, [r1, #2]
 80139b2:	1d01      	adds	r1, r0, #4
 80139b4:	4620      	mov	r0, r4
 80139b6:	f7fb fe65 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 80139ba:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80139be:	2b00      	cmp	r3, #0
 80139c0:	dd0b      	ble.n	80139da <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80139c2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80139c6:	2b00      	cmp	r3, #0
 80139c8:	dd07      	ble.n	80139da <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80139ca:	6968      	ldr	r0, [r5, #20]
 80139cc:	b128      	cbz	r0, 80139da <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80139ce:	6803      	ldr	r3, [r0, #0]
 80139d0:	4621      	mov	r1, r4
 80139d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80139d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80139d8:	4718      	bx	r3
 80139da:	bd70      	pop	{r4, r5, r6, pc}

080139dc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80139dc:	b570      	push	{r4, r5, r6, lr}
 80139de:	8882      	ldrh	r2, [r0, #4]
 80139e0:	460c      	mov	r4, r1
 80139e2:	880b      	ldrh	r3, [r1, #0]
 80139e4:	4605      	mov	r5, r0
 80139e6:	4413      	add	r3, r2
 80139e8:	800b      	strh	r3, [r1, #0]
 80139ea:	884b      	ldrh	r3, [r1, #2]
 80139ec:	88c2      	ldrh	r2, [r0, #6]
 80139ee:	4413      	add	r3, r2
 80139f0:	804b      	strh	r3, [r1, #2]
 80139f2:	1d01      	adds	r1, r0, #4
 80139f4:	4620      	mov	r0, r4
 80139f6:	f7fb fe45 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 80139fa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80139fe:	2b00      	cmp	r3, #0
 8013a00:	dd19      	ble.n	8013a36 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8013a02:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8013a06:	2b00      	cmp	r3, #0
 8013a08:	dd15      	ble.n	8013a36 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8013a0a:	6968      	ldr	r0, [r5, #20]
 8013a0c:	b128      	cbz	r0, 8013a1a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8013a0e:	6803      	ldr	r3, [r0, #0]
 8013a10:	4621      	mov	r1, r4
 8013a12:	691b      	ldr	r3, [r3, #16]
 8013a14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a18:	4718      	bx	r3
 8013a1a:	4b07      	ldr	r3, [pc, #28]	; (8013a38 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8013a1c:	681b      	ldr	r3, [r3, #0]
 8013a1e:	3304      	adds	r3, #4
 8013a20:	429d      	cmp	r5, r3
 8013a22:	d108      	bne.n	8013a36 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8013a24:	f7fe ff10 	bl	8012848 <_ZN8touchgfx11Application11getInstanceEv>
 8013a28:	6803      	ldr	r3, [r0, #0]
 8013a2a:	6821      	ldr	r1, [r4, #0]
 8013a2c:	6862      	ldr	r2, [r4, #4]
 8013a2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013a30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a34:	4718      	bx	r3
 8013a36:	bd70      	pop	{r4, r5, r6, pc}
 8013a38:	24001f14 	.word	0x24001f14

08013a3c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8013a3c:	b570      	push	{r4, r5, r6, lr}
 8013a3e:	4604      	mov	r4, r0
 8013a40:	4616      	mov	r6, r2
 8013a42:	460d      	mov	r5, r1
 8013a44:	b901      	cbnz	r1, 8013a48 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8013a46:	b192      	cbz	r2, 8013a6e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8013a48:	6823      	ldr	r3, [r4, #0]
 8013a4a:	4620      	mov	r0, r4
 8013a4c:	699b      	ldr	r3, [r3, #24]
 8013a4e:	4798      	blx	r3
 8013a50:	88e2      	ldrh	r2, [r4, #6]
 8013a52:	88a1      	ldrh	r1, [r4, #4]
 8013a54:	4620      	mov	r0, r4
 8013a56:	4432      	add	r2, r6
 8013a58:	4429      	add	r1, r5
 8013a5a:	b212      	sxth	r2, r2
 8013a5c:	b209      	sxth	r1, r1
 8013a5e:	f7f8 fdd4 	bl	800c60a <_ZN8touchgfx8Drawable5setXYEss>
 8013a62:	6823      	ldr	r3, [r4, #0]
 8013a64:	4620      	mov	r0, r4
 8013a66:	699b      	ldr	r3, [r3, #24]
 8013a68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a6c:	4718      	bx	r3
 8013a6e:	bd70      	pop	{r4, r5, r6, pc}

08013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8013a70:	b510      	push	{r4, lr}
 8013a72:	2300      	movs	r3, #0
 8013a74:	4604      	mov	r4, r0
 8013a76:	4608      	mov	r0, r1
 8013a78:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8013a7c:	8023      	strh	r3, [r4, #0]
 8013a7e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013a82:	8063      	strh	r3, [r4, #2]
 8013a84:	6803      	ldr	r3, [r0, #0]
 8013a86:	80a1      	strh	r1, [r4, #4]
 8013a88:	4621      	mov	r1, r4
 8013a8a:	80e2      	strh	r2, [r4, #6]
 8013a8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a8e:	4798      	blx	r3
 8013a90:	4620      	mov	r0, r4
 8013a92:	bd10      	pop	{r4, pc}

08013a94 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8013a94:	b530      	push	{r4, r5, lr}
 8013a96:	8083      	strh	r3, [r0, #4]
 8013a98:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8013a9c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8013aa0:	80c3      	strh	r3, [r0, #6]
 8013aa2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013aa6:	6141      	str	r1, [r0, #20]
 8013aa8:	7203      	strb	r3, [r0, #8]
 8013aaa:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013aae:	8302      	strh	r2, [r0, #24]
 8013ab0:	7243      	strb	r3, [r0, #9]
 8013ab2:	7a83      	ldrb	r3, [r0, #10]
 8013ab4:	f365 0306 	bfi	r3, r5, #0, #7
 8013ab8:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8013abc:	f365 13c7 	bfi	r3, r5, #7, #1
 8013ac0:	7283      	strb	r3, [r0, #10]
 8013ac2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8013ac6:	72c3      	strb	r3, [r0, #11]
 8013ac8:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8013acc:	7303      	strb	r3, [r0, #12]
 8013ace:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8013ad2:	81c3      	strh	r3, [r0, #14]
 8013ad4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8013ad8:	8203      	strh	r3, [r0, #16]
 8013ada:	4b01      	ldr	r3, [pc, #4]	; (8013ae0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8013adc:	6003      	str	r3, [r0, #0]
 8013ade:	bd30      	pop	{r4, r5, pc}
 8013ae0:	08025688 	.word	0x08025688

08013ae4 <_ZNK8touchgfx9ConstFont4findEt>:
 8013ae4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013ae6:	6944      	ldr	r4, [r0, #20]
 8013ae8:	b3bc      	cbz	r4, 8013b5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013aea:	88a3      	ldrh	r3, [r4, #4]
 8013aec:	8b02      	ldrh	r2, [r0, #24]
 8013aee:	1acb      	subs	r3, r1, r3
 8013af0:	f102 32ff 	add.w	r2, r2, #4294967295
 8013af4:	d431      	bmi.n	8013b5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013af6:	4293      	cmp	r3, r2
 8013af8:	dd0c      	ble.n	8013b14 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8013afa:	230e      	movs	r3, #14
 8013afc:	fb03 4302 	mla	r3, r3, r2, r4
 8013b00:	889b      	ldrh	r3, [r3, #4]
 8013b02:	1a5b      	subs	r3, r3, r1
 8013b04:	1ad3      	subs	r3, r2, r3
 8013b06:	429a      	cmp	r2, r3
 8013b08:	db27      	blt.n	8013b5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013b0a:	2b00      	cmp	r3, #0
 8013b0c:	bfbc      	itt	lt
 8013b0e:	2302      	movlt	r3, #2
 8013b10:	fb92 f3f3 	sdivlt	r3, r2, r3
 8013b14:	2500      	movs	r5, #0
 8013b16:	260e      	movs	r6, #14
 8013b18:	4295      	cmp	r5, r2
 8013b1a:	dc1e      	bgt.n	8013b5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013b1c:	fb06 4003 	mla	r0, r6, r3, r4
 8013b20:	8887      	ldrh	r7, [r0, #4]
 8013b22:	42b9      	cmp	r1, r7
 8013b24:	d01a      	beq.n	8013b5c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8013b26:	d20d      	bcs.n	8013b44 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8013b28:	1e5a      	subs	r2, r3, #1
 8013b2a:	4295      	cmp	r5, r2
 8013b2c:	dc15      	bgt.n	8013b5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013b2e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8013b32:	1a5b      	subs	r3, r3, r1
 8013b34:	1ad3      	subs	r3, r2, r3
 8013b36:	429a      	cmp	r2, r3
 8013b38:	db0f      	blt.n	8013b5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013b3a:	429d      	cmp	r5, r3
 8013b3c:	ddec      	ble.n	8013b18 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013b3e:	1953      	adds	r3, r2, r5
 8013b40:	105b      	asrs	r3, r3, #1
 8013b42:	e7e9      	b.n	8013b18 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013b44:	1c5d      	adds	r5, r3, #1
 8013b46:	42aa      	cmp	r2, r5
 8013b48:	db07      	blt.n	8013b5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013b4a:	8a43      	ldrh	r3, [r0, #18]
 8013b4c:	1acb      	subs	r3, r1, r3
 8013b4e:	442b      	add	r3, r5
 8013b50:	429d      	cmp	r5, r3
 8013b52:	dc02      	bgt.n	8013b5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013b54:	429a      	cmp	r2, r3
 8013b56:	dadf      	bge.n	8013b18 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013b58:	e7f1      	b.n	8013b3e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8013b5a:	2000      	movs	r0, #0
 8013b5c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013b5e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8013b5e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013b60:	4604      	mov	r4, r0
 8013b62:	4617      	mov	r7, r2
 8013b64:	461e      	mov	r6, r3
 8013b66:	b911      	cbnz	r1, 8013b6e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8013b68:	2500      	movs	r5, #0
 8013b6a:	4628      	mov	r0, r5
 8013b6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013b6e:	290a      	cmp	r1, #10
 8013b70:	d0fa      	beq.n	8013b68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013b72:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8013b76:	4291      	cmp	r1, r2
 8013b78:	d0f6      	beq.n	8013b68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013b7a:	f242 020b 	movw	r2, #8203	; 0x200b
 8013b7e:	4291      	cmp	r1, r2
 8013b80:	d0f2      	beq.n	8013b68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013b82:	f7ff ffaf 	bl	8013ae4 <_ZNK8touchgfx9ConstFont4findEt>
 8013b86:	4605      	mov	r5, r0
 8013b88:	b950      	cbnz	r0, 8013ba0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8013b8a:	6823      	ldr	r3, [r4, #0]
 8013b8c:	4620      	mov	r0, r4
 8013b8e:	691b      	ldr	r3, [r3, #16]
 8013b90:	4798      	blx	r3
 8013b92:	4601      	mov	r1, r0
 8013b94:	4620      	mov	r0, r4
 8013b96:	f7ff ffa5 	bl	8013ae4 <_ZNK8touchgfx9ConstFont4findEt>
 8013b9a:	4605      	mov	r5, r0
 8013b9c:	2800      	cmp	r0, #0
 8013b9e:	d0e3      	beq.n	8013b68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013ba0:	6823      	ldr	r3, [r4, #0]
 8013ba2:	4629      	mov	r1, r5
 8013ba4:	4620      	mov	r0, r4
 8013ba6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8013ba8:	4798      	blx	r3
 8013baa:	6038      	str	r0, [r7, #0]
 8013bac:	6823      	ldr	r3, [r4, #0]
 8013bae:	4620      	mov	r0, r4
 8013bb0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013bb2:	4798      	blx	r3
 8013bb4:	7030      	strb	r0, [r6, #0]
 8013bb6:	e7d8      	b.n	8013b6a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08013bb8 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8013bb8:	2000      	movs	r0, #0
 8013bba:	4770      	bx	lr

08013bbc <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8013bbc:	2001      	movs	r0, #1
 8013bbe:	4770      	bx	lr

08013bc0 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8013bc0:	2002      	movs	r0, #2
 8013bc2:	4770      	bx	lr

08013bc4 <_ZN8touchgfx12GestureEventD1Ev>:
 8013bc4:	4770      	bx	lr

08013bc6 <_ZN8touchgfx9DragEventD1Ev>:
 8013bc6:	4770      	bx	lr

08013bc8 <_ZN8touchgfx10ClickEventD1Ev>:
 8013bc8:	4770      	bx	lr

08013bca <_ZN8touchgfx10ClickEventD0Ev>:
 8013bca:	b510      	push	{r4, lr}
 8013bcc:	4604      	mov	r4, r0
 8013bce:	210c      	movs	r1, #12
 8013bd0:	f00e ff5d 	bl	8022a8e <_ZdlPvj>
 8013bd4:	4620      	mov	r0, r4
 8013bd6:	bd10      	pop	{r4, pc}

08013bd8 <_ZN8touchgfx9DragEventD0Ev>:
 8013bd8:	b510      	push	{r4, lr}
 8013bda:	4604      	mov	r4, r0
 8013bdc:	2110      	movs	r1, #16
 8013bde:	f00e ff56 	bl	8022a8e <_ZdlPvj>
 8013be2:	4620      	mov	r0, r4
 8013be4:	bd10      	pop	{r4, pc}

08013be6 <_ZN8touchgfx12GestureEventD0Ev>:
 8013be6:	b510      	push	{r4, lr}
 8013be8:	4604      	mov	r4, r0
 8013bea:	210c      	movs	r1, #12
 8013bec:	f00e ff4f 	bl	8022a8e <_ZdlPvj>
 8013bf0:	4620      	mov	r0, r4
 8013bf2:	bd10      	pop	{r4, pc}

08013bf4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8013bf4:	b530      	push	{r4, r5, lr}
 8013bf6:	460d      	mov	r5, r1
 8013bf8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8013bfa:	b087      	sub	sp, #28
 8013bfc:	4604      	mov	r4, r0
 8013bfe:	b301      	cbz	r1, 8013c42 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8013c00:	a801      	add	r0, sp, #4
 8013c02:	f7ff ff35 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013c06:	892a      	ldrh	r2, [r5, #8]
 8013c08:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013c0c:	7928      	ldrb	r0, [r5, #4]
 8013c0e:	1ad2      	subs	r2, r2, r3
 8013c10:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013c12:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8013c16:	441a      	add	r2, r3
 8013c18:	896b      	ldrh	r3, [r5, #10]
 8013c1a:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8013c1e:	f88d 0010 	strb.w	r0, [sp, #16]
 8013c22:	1b5b      	subs	r3, r3, r5
 8013c24:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8013c26:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8013c28:	442b      	add	r3, r5
 8013c2a:	4d07      	ldr	r5, [pc, #28]	; (8013c48 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8013c2c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013c30:	a903      	add	r1, sp, #12
 8013c32:	9503      	str	r5, [sp, #12]
 8013c34:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013c38:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013c3c:	6803      	ldr	r3, [r0, #0]
 8013c3e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013c40:	4798      	blx	r3
 8013c42:	b007      	add	sp, #28
 8013c44:	bd30      	pop	{r4, r5, pc}
 8013c46:	bf00      	nop
 8013c48:	08025710 	.word	0x08025710

08013c4c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8013c4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c50:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8013c52:	b08a      	sub	sp, #40	; 0x28
 8013c54:	4604      	mov	r4, r0
 8013c56:	460d      	mov	r5, r1
 8013c58:	b113      	cbz	r3, 8013c60 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8013c5a:	790b      	ldrb	r3, [r1, #4]
 8013c5c:	2b00      	cmp	r3, #0
 8013c5e:	d044      	beq.n	8013cea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013c60:	f104 0804 	add.w	r8, r4, #4
 8013c64:	a803      	add	r0, sp, #12
 8013c66:	4641      	mov	r1, r8
 8013c68:	f7ff ff02 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013c6c:	792b      	ldrb	r3, [r5, #4]
 8013c6e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8013c72:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8013c76:	b983      	cbnz	r3, 8013c9a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8013c78:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8013c7c:	892a      	ldrh	r2, [r5, #8]
 8013c7e:	88e9      	ldrh	r1, [r5, #6]
 8013c80:	4640      	mov	r0, r8
 8013c82:	1b92      	subs	r2, r2, r6
 8013c84:	9301      	str	r3, [sp, #4]
 8013c86:	1bc9      	subs	r1, r1, r7
 8013c88:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8013c8c:	b212      	sxth	r2, r2
 8013c8e:	9300      	str	r3, [sp, #0]
 8013c90:	b209      	sxth	r1, r1
 8013c92:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8013c96:	f7fb fc13 	bl	800f4c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8013c9a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013c9c:	b329      	cbz	r1, 8013cea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013c9e:	a805      	add	r0, sp, #20
 8013ca0:	f7ff fee6 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013ca4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013ca8:	792b      	ldrb	r3, [r5, #4]
 8013caa:	a907      	add	r1, sp, #28
 8013cac:	1abf      	subs	r7, r7, r2
 8013cae:	88ea      	ldrh	r2, [r5, #6]
 8013cb0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8013cb2:	4417      	add	r7, r2
 8013cb4:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8013cb6:	f88d 3020 	strb.w	r3, [sp, #32]
 8013cba:	4417      	add	r7, r2
 8013cbc:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8013cc0:	1ab6      	subs	r6, r6, r2
 8013cc2:	892a      	ldrh	r2, [r5, #8]
 8013cc4:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8013cc8:	4416      	add	r6, r2
 8013cca:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013ccc:	4416      	add	r6, r2
 8013cce:	4a08      	ldr	r2, [pc, #32]	; (8013cf0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8013cd0:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8013cd4:	2600      	movs	r6, #0
 8013cd6:	9207      	str	r2, [sp, #28]
 8013cd8:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8013cdc:	6803      	ldr	r3, [r0, #0]
 8013cde:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013ce0:	4798      	blx	r3
 8013ce2:	792b      	ldrb	r3, [r5, #4]
 8013ce4:	b10b      	cbz	r3, 8013cea <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013ce6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8013cea:	b00a      	add	sp, #40	; 0x28
 8013cec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013cf0:	080256e8 	.word	0x080256e8

08013cf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8013cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013cf8:	460c      	mov	r4, r1
 8013cfa:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8013cfc:	b088      	sub	sp, #32
 8013cfe:	4605      	mov	r5, r0
 8013d00:	2900      	cmp	r1, #0
 8013d02:	d06d      	beq.n	8013de0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8013d04:	4668      	mov	r0, sp
 8013d06:	f7ff feb3 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013d0a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8013d0c:	88e3      	ldrh	r3, [r4, #6]
 8013d0e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8013d12:	440b      	add	r3, r1
 8013d14:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8013d18:	b21b      	sxth	r3, r3
 8013d1a:	4543      	cmp	r3, r8
 8013d1c:	db31      	blt.n	8013d82 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013d1e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8013d22:	44c4      	add	ip, r8
 8013d24:	fa0f fc8c 	sxth.w	ip, ip
 8013d28:	4563      	cmp	r3, ip
 8013d2a:	da2a      	bge.n	8013d82 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013d2c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8013d2e:	8926      	ldrh	r6, [r4, #8]
 8013d30:	4416      	add	r6, r2
 8013d32:	b236      	sxth	r6, r6
 8013d34:	42be      	cmp	r6, r7
 8013d36:	db24      	blt.n	8013d82 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013d38:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013d3c:	4438      	add	r0, r7
 8013d3e:	b200      	sxth	r0, r0
 8013d40:	4286      	cmp	r6, r0
 8013d42:	da1e      	bge.n	8013d82 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013d44:	8963      	ldrh	r3, [r4, #10]
 8013d46:	4419      	add	r1, r3
 8013d48:	b209      	sxth	r1, r1
 8013d4a:	4541      	cmp	r1, r8
 8013d4c:	db08      	blt.n	8013d60 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013d4e:	4561      	cmp	r1, ip
 8013d50:	da06      	bge.n	8013d60 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013d52:	89a3      	ldrh	r3, [r4, #12]
 8013d54:	441a      	add	r2, r3
 8013d56:	b212      	sxth	r2, r2
 8013d58:	42ba      	cmp	r2, r7
 8013d5a:	db01      	blt.n	8013d60 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013d5c:	4282      	cmp	r2, r0
 8013d5e:	db10      	blt.n	8013d82 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013d60:	4b21      	ldr	r3, [pc, #132]	; (8013de8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8013d62:	a904      	add	r1, sp, #16
 8013d64:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8013d66:	9304      	str	r3, [sp, #16]
 8013d68:	2302      	movs	r3, #2
 8013d6a:	f88d 3014 	strb.w	r3, [sp, #20]
 8013d6e:	2300      	movs	r3, #0
 8013d70:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013d74:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d78:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d7c:	6803      	ldr	r3, [r0, #0]
 8013d7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013d80:	4798      	blx	r3
 8013d82:	1d29      	adds	r1, r5, #4
 8013d84:	a802      	add	r0, sp, #8
 8013d86:	f7ff fe73 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013d8a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013d8e:	88e0      	ldrh	r0, [r4, #6]
 8013d90:	eba3 0808 	sub.w	r8, r3, r8
 8013d94:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013d98:	7921      	ldrb	r1, [r4, #4]
 8013d9a:	fa1f f888 	uxth.w	r8, r8
 8013d9e:	1bdf      	subs	r7, r3, r7
 8013da0:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8013da4:	b2bb      	uxth	r3, r7
 8013da6:	4440      	add	r0, r8
 8013da8:	8922      	ldrh	r2, [r4, #8]
 8013daa:	8967      	ldrh	r7, [r4, #10]
 8013dac:	4460      	add	r0, ip
 8013dae:	89a4      	ldrh	r4, [r4, #12]
 8013db0:	441a      	add	r2, r3
 8013db2:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8013db4:	44b8      	add	r8, r7
 8013db6:	4423      	add	r3, r4
 8013db8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8013dbc:	4432      	add	r2, r6
 8013dbe:	44e0      	add	r8, ip
 8013dc0:	4433      	add	r3, r6
 8013dc2:	4c0a      	ldr	r4, [pc, #40]	; (8013dec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8013dc4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8013dc6:	f88d 1014 	strb.w	r1, [sp, #20]
 8013dca:	a904      	add	r1, sp, #16
 8013dcc:	9404      	str	r4, [sp, #16]
 8013dce:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013dd2:	f8ad 801a 	strh.w	r8, [sp, #26]
 8013dd6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013dda:	6803      	ldr	r3, [r0, #0]
 8013ddc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013dde:	4798      	blx	r3
 8013de0:	b008      	add	sp, #32
 8013de2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013de6:	bf00      	nop
 8013de8:	080256e8 	.word	0x080256e8
 8013dec:	080256fc 	.word	0x080256fc

08013df0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8013df0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013df2:	4604      	mov	r4, r0
 8013df4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8013df8:	3201      	adds	r2, #1
 8013dfa:	d112      	bne.n	8013e22 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8013dfc:	2500      	movs	r5, #0
 8013dfe:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8013e02:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013e06:	6803      	ldr	r3, [r0, #0]
 8013e08:	9500      	str	r5, [sp, #0]
 8013e0a:	466d      	mov	r5, sp
 8013e0c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8013e10:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013e14:	4629      	mov	r1, r5
 8013e16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013e18:	4798      	blx	r3
 8013e1a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013e1e:	e884 0003 	stmia.w	r4, {r0, r1}
 8013e22:	4620      	mov	r0, r4
 8013e24:	b003      	add	sp, #12
 8013e26:	bd30      	pop	{r4, r5, pc}

08013e28 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8013e28:	b513      	push	{r0, r1, r4, lr}
 8013e2a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8013e2e:	4604      	mov	r4, r0
 8013e30:	3301      	adds	r3, #1
 8013e32:	d109      	bne.n	8013e48 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8013e34:	4601      	mov	r1, r0
 8013e36:	4668      	mov	r0, sp
 8013e38:	f7ff fe1a 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013e3c:	f8bd 3000 	ldrh.w	r3, [sp]
 8013e40:	8423      	strh	r3, [r4, #32]
 8013e42:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013e46:	8463      	strh	r3, [r4, #34]	; 0x22
 8013e48:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8013e4c:	b002      	add	sp, #8
 8013e4e:	bd10      	pop	{r4, pc}

08013e50 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8013e50:	b513      	push	{r0, r1, r4, lr}
 8013e52:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8013e56:	4604      	mov	r4, r0
 8013e58:	3301      	adds	r3, #1
 8013e5a:	d109      	bne.n	8013e70 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8013e5c:	4601      	mov	r1, r0
 8013e5e:	4668      	mov	r0, sp
 8013e60:	f7ff fe06 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013e64:	f8bd 3000 	ldrh.w	r3, [sp]
 8013e68:	8423      	strh	r3, [r4, #32]
 8013e6a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013e6e:	8463      	strh	r3, [r4, #34]	; 0x22
 8013e70:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8013e74:	b002      	add	sp, #8
 8013e76:	bd10      	pop	{r4, pc}

08013e78 <_ZN8touchgfx6ScreenC1Ev>:
 8013e78:	b570      	push	{r4, r5, r6, lr}
 8013e7a:	4b17      	ldr	r3, [pc, #92]	; (8013ed8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8013e7c:	4605      	mov	r5, r0
 8013e7e:	4a17      	ldr	r2, [pc, #92]	; (8013edc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8013e80:	2101      	movs	r1, #1
 8013e82:	f845 3b04 	str.w	r3, [r5], #4
 8013e86:	2300      	movs	r3, #0
 8013e88:	6042      	str	r2, [r0, #4]
 8013e8a:	4604      	mov	r4, r0
 8013e8c:	8103      	strh	r3, [r0, #8]
 8013e8e:	8143      	strh	r3, [r0, #10]
 8013e90:	8183      	strh	r3, [r0, #12]
 8013e92:	81c3      	strh	r3, [r0, #14]
 8013e94:	8203      	strh	r3, [r0, #16]
 8013e96:	8243      	strh	r3, [r0, #18]
 8013e98:	8283      	strh	r3, [r0, #20]
 8013e9a:	82c3      	strh	r3, [r0, #22]
 8013e9c:	6203      	str	r3, [r0, #32]
 8013e9e:	8483      	strh	r3, [r0, #36]	; 0x24
 8013ea0:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013ea2:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8013ea6:	6343      	str	r3, [r0, #52]	; 0x34
 8013ea8:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8013eac:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8013eb0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8013eb4:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8013eb8:	4b09      	ldr	r3, [pc, #36]	; (8013ee0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8013eba:	4628      	mov	r0, r5
 8013ebc:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013ec0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8013ec2:	4a08      	ldr	r2, [pc, #32]	; (8013ee4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8013ec4:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013ec8:	4798      	blx	r3
 8013eca:	6863      	ldr	r3, [r4, #4]
 8013ecc:	4628      	mov	r0, r5
 8013ece:	4631      	mov	r1, r6
 8013ed0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013ed2:	4798      	blx	r3
 8013ed4:	4620      	mov	r0, r4
 8013ed6:	bd70      	pop	{r4, r5, r6, pc}
 8013ed8:	08025724 	.word	0x08025724
 8013edc:	08025294 	.word	0x08025294
 8013ee0:	24001ece 	.word	0x24001ece
 8013ee4:	24001ecc 	.word	0x24001ecc

08013ee8 <_ZN8touchgfx6Screen4drawEv>:
 8013ee8:	4b09      	ldr	r3, [pc, #36]	; (8013f10 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8013eea:	b507      	push	{r0, r1, r2, lr}
 8013eec:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013ef0:	2100      	movs	r1, #0
 8013ef2:	4b08      	ldr	r3, [pc, #32]	; (8013f14 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8013ef4:	9100      	str	r1, [sp, #0]
 8013ef6:	4669      	mov	r1, sp
 8013ef8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013efc:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013f00:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013f04:	6803      	ldr	r3, [r0, #0]
 8013f06:	689b      	ldr	r3, [r3, #8]
 8013f08:	4798      	blx	r3
 8013f0a:	b003      	add	sp, #12
 8013f0c:	f85d fb04 	ldr.w	pc, [sp], #4
 8013f10:	24001ecc 	.word	0x24001ecc
 8013f14:	24001ece 	.word	0x24001ece

08013f18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8013f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f1c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8013f20:	b089      	sub	sp, #36	; 0x24
 8013f22:	4680      	mov	r8, r0
 8013f24:	460c      	mov	r4, r1
 8013f26:	2b00      	cmp	r3, #0
 8013f28:	4615      	mov	r5, r2
 8013f2a:	dd0e      	ble.n	8013f4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013f2c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8013f30:	2b00      	cmp	r3, #0
 8013f32:	dd0a      	ble.n	8013f4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013f34:	4628      	mov	r0, r5
 8013f36:	f7ff ff5b 	bl	8013df0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013f3a:	4621      	mov	r1, r4
 8013f3c:	f7fe fba6 	bl	801268c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013f40:	69eb      	ldr	r3, [r5, #28]
 8013f42:	b928      	cbnz	r0, 8013f50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8013f44:	461d      	mov	r5, r3
 8013f46:	2b00      	cmp	r3, #0
 8013f48:	d1f4      	bne.n	8013f34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8013f4a:	b009      	add	sp, #36	; 0x24
 8013f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f50:	ae04      	add	r6, sp, #16
 8013f52:	2b00      	cmp	r3, #0
 8013f54:	f000 80b5 	beq.w	80140c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013f58:	682b      	ldr	r3, [r5, #0]
 8013f5a:	4629      	mov	r1, r5
 8013f5c:	a802      	add	r0, sp, #8
 8013f5e:	68db      	ldr	r3, [r3, #12]
 8013f60:	4798      	blx	r3
 8013f62:	4628      	mov	r0, r5
 8013f64:	f7ff ff60 	bl	8013e28 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013f68:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8013f6c:	4407      	add	r7, r0
 8013f6e:	4628      	mov	r0, r5
 8013f70:	f7ff ff6e 	bl	8013e50 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013f74:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013f78:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013f7c:	b23f      	sxth	r7, r7
 8013f7e:	4418      	add	r0, r3
 8013f80:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013f84:	4621      	mov	r1, r4
 8013f86:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013f8a:	f8ad 0012 	strh.w	r0, [sp, #18]
 8013f8e:	4630      	mov	r0, r6
 8013f90:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013f94:	f8ad 7010 	strh.w	r7, [sp, #16]
 8013f98:	f7fb fb74 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 8013f9c:	4628      	mov	r0, r5
 8013f9e:	f7ff ff27 	bl	8013df0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013fa2:	ab06      	add	r3, sp, #24
 8013fa4:	4602      	mov	r2, r0
 8013fa6:	e896 0003 	ldmia.w	r6, {r0, r1}
 8013faa:	e883 0003 	stmia.w	r3, {r0, r1}
 8013fae:	4611      	mov	r1, r2
 8013fb0:	4618      	mov	r0, r3
 8013fb2:	f7fb fb67 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 8013fb6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013fba:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013fbe:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8013fc2:	4299      	cmp	r1, r3
 8013fc4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8013fc8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8013fcc:	d10b      	bne.n	8013fe6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013fce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013fd2:	4552      	cmp	r2, sl
 8013fd4:	d107      	bne.n	8013fe6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013fd6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013fda:	455a      	cmp	r2, fp
 8013fdc:	d103      	bne.n	8013fe6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013fde:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8013fe2:	454a      	cmp	r2, r9
 8013fe4:	d06d      	beq.n	80140c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013fe6:	f1bb 0f00 	cmp.w	fp, #0
 8013fea:	dd65      	ble.n	80140b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013fec:	f1b9 0f00 	cmp.w	r9, #0
 8013ff0:	dd62      	ble.n	80140b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013ff2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013ff6:	fa1f f08a 	uxth.w	r0, sl
 8013ffa:	4552      	cmp	r2, sl
 8013ffc:	9000      	str	r0, [sp, #0]
 8013ffe:	da12      	bge.n	8014026 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8014000:	9301      	str	r3, [sp, #4]
 8014002:	9b00      	ldr	r3, [sp, #0]
 8014004:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014008:	f8ad 2012 	strh.w	r2, [sp, #18]
 801400c:	1a9a      	subs	r2, r3, r2
 801400e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8014012:	4631      	mov	r1, r6
 8014014:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014018:	4640      	mov	r0, r8
 801401a:	f8ad 2016 	strh.w	r2, [sp, #22]
 801401e:	69ea      	ldr	r2, [r5, #28]
 8014020:	f7ff ff7a 	bl	8013f18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014024:	9b01      	ldr	r3, [sp, #4]
 8014026:	f9b4 2000 	ldrsh.w	r2, [r4]
 801402a:	b29f      	uxth	r7, r3
 801402c:	429a      	cmp	r2, r3
 801402e:	da0d      	bge.n	801404c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8014030:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014034:	1aba      	subs	r2, r7, r2
 8014036:	f8ad a012 	strh.w	sl, [sp, #18]
 801403a:	4631      	mov	r1, r6
 801403c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014040:	4640      	mov	r0, r8
 8014042:	f8ad 9016 	strh.w	r9, [sp, #22]
 8014046:	69ea      	ldr	r2, [r5, #28]
 8014048:	f7ff ff66 	bl	8013f18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801404c:	8822      	ldrh	r2, [r4, #0]
 801404e:	445f      	add	r7, fp
 8014050:	88a3      	ldrh	r3, [r4, #4]
 8014052:	b2bf      	uxth	r7, r7
 8014054:	4413      	add	r3, r2
 8014056:	b23a      	sxth	r2, r7
 8014058:	b29b      	uxth	r3, r3
 801405a:	b219      	sxth	r1, r3
 801405c:	4291      	cmp	r1, r2
 801405e:	dd0d      	ble.n	801407c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8014060:	1bdb      	subs	r3, r3, r7
 8014062:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014066:	f8ad a012 	strh.w	sl, [sp, #18]
 801406a:	4631      	mov	r1, r6
 801406c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014070:	4640      	mov	r0, r8
 8014072:	f8ad 9016 	strh.w	r9, [sp, #22]
 8014076:	69ea      	ldr	r2, [r5, #28]
 8014078:	f7ff ff4e 	bl	8013f18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801407c:	88e2      	ldrh	r2, [r4, #6]
 801407e:	8863      	ldrh	r3, [r4, #2]
 8014080:	4413      	add	r3, r2
 8014082:	9a00      	ldr	r2, [sp, #0]
 8014084:	444a      	add	r2, r9
 8014086:	b29b      	uxth	r3, r3
 8014088:	fa1f f982 	uxth.w	r9, r2
 801408c:	b219      	sxth	r1, r3
 801408e:	fa0f f289 	sxth.w	r2, r9
 8014092:	428a      	cmp	r2, r1
 8014094:	da15      	bge.n	80140c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8014096:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801409a:	eba3 0309 	sub.w	r3, r3, r9
 801409e:	f9b4 0000 	ldrsh.w	r0, [r4]
 80140a2:	f8ad 1014 	strh.w	r1, [sp, #20]
 80140a6:	4631      	mov	r1, r6
 80140a8:	f8ad 0010 	strh.w	r0, [sp, #16]
 80140ac:	f8ad 2012 	strh.w	r2, [sp, #18]
 80140b0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80140b4:	69ea      	ldr	r2, [r5, #28]
 80140b6:	e001      	b.n	80140bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80140b8:	69ea      	ldr	r2, [r5, #28]
 80140ba:	4621      	mov	r1, r4
 80140bc:	4640      	mov	r0, r8
 80140be:	f7ff ff2b 	bl	8013f18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80140c2:	4628      	mov	r0, r5
 80140c4:	f7ff fe94 	bl	8013df0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80140c8:	6861      	ldr	r1, [r4, #4]
 80140ca:	4602      	mov	r2, r0
 80140cc:	4633      	mov	r3, r6
 80140ce:	6820      	ldr	r0, [r4, #0]
 80140d0:	c303      	stmia	r3!, {r0, r1}
 80140d2:	4611      	mov	r1, r2
 80140d4:	4630      	mov	r0, r6
 80140d6:	f7fb fad5 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 80140da:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80140de:	2b00      	cmp	r3, #0
 80140e0:	f77f af33 	ble.w	8013f4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80140e4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80140e8:	2b00      	cmp	r3, #0
 80140ea:	f77f af2e 	ble.w	8013f4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80140ee:	4628      	mov	r0, r5
 80140f0:	f7ff fe9a 	bl	8013e28 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80140f4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80140f8:	1a18      	subs	r0, r3, r0
 80140fa:	f8ad 0010 	strh.w	r0, [sp, #16]
 80140fe:	4628      	mov	r0, r5
 8014100:	f7ff fea6 	bl	8013e50 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8014104:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014108:	4631      	mov	r1, r6
 801410a:	1a18      	subs	r0, r3, r0
 801410c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8014110:	4628      	mov	r0, r5
 8014112:	682b      	ldr	r3, [r5, #0]
 8014114:	689b      	ldr	r3, [r3, #8]
 8014116:	4798      	blx	r3
 8014118:	e717      	b.n	8013f4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801411a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801411a:	b570      	push	{r4, r5, r6, lr}
 801411c:	1d06      	adds	r6, r0, #4
 801411e:	b086      	sub	sp, #24
 8014120:	460c      	mov	r4, r1
 8014122:	2300      	movs	r3, #0
 8014124:	4631      	mov	r1, r6
 8014126:	4605      	mov	r5, r0
 8014128:	a802      	add	r0, sp, #8
 801412a:	9301      	str	r3, [sp, #4]
 801412c:	f7ff fca0 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014130:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014134:	8822      	ldrh	r2, [r4, #0]
 8014136:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801413a:	1ad2      	subs	r2, r2, r3
 801413c:	8863      	ldrh	r3, [r4, #2]
 801413e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014142:	1a5b      	subs	r3, r3, r1
 8014144:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8014148:	f8ad 2010 	strh.w	r2, [sp, #16]
 801414c:	aa01      	add	r2, sp, #4
 801414e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014152:	4630      	mov	r0, r6
 8014154:	f8ad 1016 	strh.w	r1, [sp, #22]
 8014158:	a904      	add	r1, sp, #16
 801415a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801415e:	f7fb fb69 	bl	800f834 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8014162:	9a01      	ldr	r2, [sp, #4]
 8014164:	b11a      	cbz	r2, 801416e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8014166:	4621      	mov	r1, r4
 8014168:	4628      	mov	r0, r5
 801416a:	f7ff fed5 	bl	8013f18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801416e:	b006      	add	sp, #24
 8014170:	bd70      	pop	{r4, r5, r6, pc}

08014172 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8014172:	4602      	mov	r2, r0
 8014174:	b530      	push	{r4, r5, lr}
 8014176:	4604      	mov	r4, r0
 8014178:	b085      	sub	sp, #20
 801417a:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801417e:	460d      	mov	r5, r1
 8014180:	466b      	mov	r3, sp
 8014182:	6851      	ldr	r1, [r2, #4]
 8014184:	c303      	stmia	r3!, {r0, r1}
 8014186:	4629      	mov	r1, r5
 8014188:	4668      	mov	r0, sp
 801418a:	f7fb fa7b 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 801418e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014192:	b12b      	cbz	r3, 80141a0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8014194:	4669      	mov	r1, sp
 8014196:	4620      	mov	r0, r4
 8014198:	f7ff ffbf 	bl	801411a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801419c:	b005      	add	sp, #20
 801419e:	bd30      	pop	{r4, r5, pc}
 80141a0:	3404      	adds	r4, #4
 80141a2:	a802      	add	r0, sp, #8
 80141a4:	4621      	mov	r1, r4
 80141a6:	f7ff fc63 	bl	8013a70 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80141aa:	f8bd 3000 	ldrh.w	r3, [sp]
 80141ae:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80141b2:	4669      	mov	r1, sp
 80141b4:	4620      	mov	r0, r4
 80141b6:	1a9b      	subs	r3, r3, r2
 80141b8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80141bc:	f8ad 3000 	strh.w	r3, [sp]
 80141c0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80141c4:	1a9b      	subs	r3, r3, r2
 80141c6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80141ca:	f7fb fafa 	bl	800f7c2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80141ce:	e7e5      	b.n	801419c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080141d0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80141d0:	460b      	mov	r3, r1
 80141d2:	680a      	ldr	r2, [r1, #0]
 80141d4:	1d01      	adds	r1, r0, #4
 80141d6:	6992      	ldr	r2, [r2, #24]
 80141d8:	4618      	mov	r0, r3
 80141da:	4710      	bx	r2

080141dc <_ZN8touchgfx12TextProviderC1Ev>:
 80141dc:	b538      	push	{r3, r4, r5, lr}
 80141de:	2500      	movs	r5, #0
 80141e0:	2302      	movs	r3, #2
 80141e2:	4604      	mov	r4, r0
 80141e4:	220e      	movs	r2, #14
 80141e6:	7403      	strb	r3, [r0, #16]
 80141e8:	4629      	mov	r1, r5
 80141ea:	6145      	str	r5, [r0, #20]
 80141ec:	7605      	strb	r5, [r0, #24]
 80141ee:	83c5      	strh	r5, [r0, #30]
 80141f0:	8405      	strh	r5, [r0, #32]
 80141f2:	86c5      	strh	r5, [r0, #54]	; 0x36
 80141f4:	8705      	strh	r5, [r0, #56]	; 0x38
 80141f6:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80141f8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80141fc:	e9c0 5500 	strd	r5, r5, [r0]
 8014200:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8014204:	304c      	adds	r0, #76	; 0x4c
 8014206:	f00e fe76 	bl	8022ef6 <memset>
 801420a:	2301      	movs	r3, #1
 801420c:	4620      	mov	r0, r4
 801420e:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8014212:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8014216:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801421a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801421e:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8014222:	f7f8 ff3d 	bl	800d0a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8014226:	4620      	mov	r0, r4
 8014228:	bd38      	pop	{r3, r4, r5, pc}

0801422a <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801422a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801422c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014230:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8014232:	fab0 f080 	clz	r0, r0
 8014236:	0940      	lsrs	r0, r0, #5
 8014238:	4770      	bx	lr

0801423a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801423a:	b530      	push	{r4, r5, lr}
 801423c:	2500      	movs	r5, #0
 801423e:	2401      	movs	r4, #1
 8014240:	6843      	ldr	r3, [r0, #4]
 8014242:	b913      	cbnz	r3, 801424a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8014244:	6803      	ldr	r3, [r0, #0]
 8014246:	b313      	cbz	r3, 801428e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014248:	6043      	str	r3, [r0, #4]
 801424a:	7e03      	ldrb	r3, [r0, #24]
 801424c:	b143      	cbz	r3, 8014260 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801424e:	6943      	ldr	r3, [r0, #20]
 8014250:	b12b      	cbz	r3, 801425e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014252:	881a      	ldrh	r2, [r3, #0]
 8014254:	b11a      	cbz	r2, 801425e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014256:	1c9a      	adds	r2, r3, #2
 8014258:	6142      	str	r2, [r0, #20]
 801425a:	8818      	ldrh	r0, [r3, #0]
 801425c:	bd30      	pop	{r4, r5, pc}
 801425e:	7605      	strb	r5, [r0, #24]
 8014260:	6843      	ldr	r3, [r0, #4]
 8014262:	8819      	ldrh	r1, [r3, #0]
 8014264:	b199      	cbz	r1, 801428e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014266:	1c9a      	adds	r2, r3, #2
 8014268:	2902      	cmp	r1, #2
 801426a:	6042      	str	r2, [r0, #4]
 801426c:	d1f5      	bne.n	801425a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801426e:	7c03      	ldrb	r3, [r0, #16]
 8014270:	2b01      	cmp	r3, #1
 8014272:	d8e5      	bhi.n	8014240 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014274:	1c5a      	adds	r2, r3, #1
 8014276:	3302      	adds	r3, #2
 8014278:	7402      	strb	r2, [r0, #16]
 801427a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801427e:	6143      	str	r3, [r0, #20]
 8014280:	2b00      	cmp	r3, #0
 8014282:	d0dd      	beq.n	8014240 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014284:	881b      	ldrh	r3, [r3, #0]
 8014286:	2b00      	cmp	r3, #0
 8014288:	d0da      	beq.n	8014240 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801428a:	7604      	strb	r4, [r0, #24]
 801428c:	e7d8      	b.n	8014240 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801428e:	2000      	movs	r0, #0
 8014290:	e7e4      	b.n	801425c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8014292:	6001      	str	r1, [r0, #0]
 8014294:	2100      	movs	r1, #0
 8014296:	b430      	push	{r4, r5}
 8014298:	6041      	str	r1, [r0, #4]
 801429a:	6815      	ldr	r5, [r2, #0]
 801429c:	6085      	str	r5, [r0, #8]
 801429e:	6852      	ldr	r2, [r2, #4]
 80142a0:	6443      	str	r3, [r0, #68]	; 0x44
 80142a2:	9b02      	ldr	r3, [sp, #8]
 80142a4:	60c2      	str	r2, [r0, #12]
 80142a6:	7401      	strb	r1, [r0, #16]
 80142a8:	6141      	str	r1, [r0, #20]
 80142aa:	7601      	strb	r1, [r0, #24]
 80142ac:	8701      	strh	r1, [r0, #56]	; 0x38
 80142ae:	8401      	strh	r1, [r0, #32]
 80142b0:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80142b4:	6483      	str	r3, [r0, #72]	; 0x48
 80142b6:	bc30      	pop	{r4, r5}
 80142b8:	f7f8 bef2 	b.w	800d0a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080142bc <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80142bc:	b408      	push	{r3}
 80142be:	b510      	push	{r4, lr}
 80142c0:	b085      	sub	sp, #20
 80142c2:	ac07      	add	r4, sp, #28
 80142c4:	f854 3b04 	ldr.w	r3, [r4], #4
 80142c8:	9300      	str	r3, [sp, #0]
 80142ca:	4613      	mov	r3, r2
 80142cc:	4622      	mov	r2, r4
 80142ce:	9403      	str	r4, [sp, #12]
 80142d0:	f7ff ffdf 	bl	8014292 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80142d4:	b005      	add	sp, #20
 80142d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80142da:	b001      	add	sp, #4
 80142dc:	4770      	bx	lr

080142de <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80142de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80142e0:	4605      	mov	r5, r0
 80142e2:	4608      	mov	r0, r1
 80142e4:	b1f1      	cbz	r1, 8014324 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 80142e6:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80142ea:	460b      	mov	r3, r1
 80142ec:	f101 0708 	add.w	r7, r1, #8
 80142f0:	4622      	mov	r2, r4
 80142f2:	6818      	ldr	r0, [r3, #0]
 80142f4:	3308      	adds	r3, #8
 80142f6:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80142fa:	4626      	mov	r6, r4
 80142fc:	42bb      	cmp	r3, r7
 80142fe:	c603      	stmia	r6!, {r0, r1}
 8014300:	4634      	mov	r4, r6
 8014302:	d1f6      	bne.n	80142f2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8014304:	6818      	ldr	r0, [r3, #0]
 8014306:	6030      	str	r0, [r6, #0]
 8014308:	4610      	mov	r0, r2
 801430a:	889b      	ldrh	r3, [r3, #4]
 801430c:	80b3      	strh	r3, [r6, #4]
 801430e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8014312:	015b      	lsls	r3, r3, #5
 8014314:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8014318:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801431c:	430b      	orrs	r3, r1
 801431e:	425b      	negs	r3, r3
 8014320:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8014324:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014326 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8014326:	b538      	push	{r3, r4, r5, lr}
 8014328:	460c      	mov	r4, r1
 801432a:	6811      	ldr	r1, [r2, #0]
 801432c:	4610      	mov	r0, r2
 801432e:	68cd      	ldr	r5, [r1, #12]
 8014330:	4619      	mov	r1, r3
 8014332:	47a8      	blx	r5
 8014334:	2800      	cmp	r0, #0
 8014336:	bf08      	it	eq
 8014338:	4620      	moveq	r0, r4
 801433a:	bd38      	pop	{r3, r4, r5, pc}

0801433c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801433c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801433e:	4604      	mov	r4, r0
 8014340:	4615      	mov	r5, r2
 8014342:	4608      	mov	r0, r1
 8014344:	b93a      	cbnz	r2, 8014356 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8014346:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801434a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801434e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8014352:	4628      	mov	r0, r5
 8014354:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014356:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801435a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801435e:	8893      	ldrh	r3, [r2, #4]
 8014360:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8014364:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8014368:	79ee      	ldrb	r6, [r5, #7]
 801436a:	4316      	orrs	r6, r2
 801436c:	19da      	adds	r2, r3, r7
 801436e:	b291      	uxth	r1, r2
 8014370:	b2b7      	uxth	r7, r6
 8014372:	291d      	cmp	r1, #29
 8014374:	d87b      	bhi.n	801446e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8014376:	2201      	movs	r2, #1
 8014378:	10f6      	asrs	r6, r6, #3
 801437a:	408a      	lsls	r2, r1
 801437c:	4974      	ldr	r1, [pc, #464]	; (8014550 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801437e:	420a      	tst	r2, r1
 8014380:	d12e      	bne.n	80143e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8014382:	f412 7f60 	tst.w	r2, #896	; 0x380
 8014386:	d072      	beq.n	801446e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8014388:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801438c:	462b      	mov	r3, r5
 801438e:	f105 0e08 	add.w	lr, r5, #8
 8014392:	4615      	mov	r5, r2
 8014394:	6818      	ldr	r0, [r3, #0]
 8014396:	3308      	adds	r3, #8
 8014398:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801439c:	4694      	mov	ip, r2
 801439e:	4573      	cmp	r3, lr
 80143a0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80143a4:	4662      	mov	r2, ip
 80143a6:	d1f5      	bne.n	8014394 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 80143a8:	6818      	ldr	r0, [r3, #0]
 80143aa:	f8cc 0000 	str.w	r0, [ip]
 80143ae:	889b      	ldrh	r3, [r3, #4]
 80143b0:	f8ac 3004 	strh.w	r3, [ip, #4]
 80143b4:	b2b3      	uxth	r3, r6
 80143b6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80143ba:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80143be:	1aca      	subs	r2, r1, r3
 80143c0:	1bcf      	subs	r7, r1, r7
 80143c2:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80143c6:	b292      	uxth	r2, r2
 80143c8:	1afb      	subs	r3, r7, r3
 80143ca:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80143ce:	10d2      	asrs	r2, r2, #3
 80143d0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80143d4:	4302      	orrs	r2, r0
 80143d6:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80143da:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80143de:	e7b8      	b.n	8014352 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80143e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80143e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80143e6:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80143e8:	f640 6333 	movw	r3, #3635	; 0xe33
 80143ec:	4299      	cmp	r1, r3
 80143ee:	d110      	bne.n	8014412 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80143f0:	6803      	ldr	r3, [r0, #0]
 80143f2:	68db      	ldr	r3, [r3, #12]
 80143f4:	4798      	blx	r3
 80143f6:	7b41      	ldrb	r1, [r0, #13]
 80143f8:	00cb      	lsls	r3, r1, #3
 80143fa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80143fe:	7a03      	ldrb	r3, [r0, #8]
 8014400:	0648      	lsls	r0, r1, #25
 8014402:	ea43 0302 	orr.w	r3, r3, r2
 8014406:	bf44      	itt	mi
 8014408:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801440c:	b21b      	sxthmi	r3, r3
 801440e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8014412:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8014416:	462a      	mov	r2, r5
 8014418:	f105 0c08 	add.w	ip, r5, #8
 801441c:	443b      	add	r3, r7
 801441e:	4433      	add	r3, r6
 8014420:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8014424:	b29b      	uxth	r3, r3
 8014426:	4635      	mov	r5, r6
 8014428:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801442c:	6810      	ldr	r0, [r2, #0]
 801442e:	3208      	adds	r2, #8
 8014430:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8014434:	4637      	mov	r7, r6
 8014436:	4562      	cmp	r2, ip
 8014438:	c703      	stmia	r7!, {r0, r1}
 801443a:	463e      	mov	r6, r7
 801443c:	d1f6      	bne.n	801442c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801443e:	6810      	ldr	r0, [r2, #0]
 8014440:	6038      	str	r0, [r7, #0]
 8014442:	8892      	ldrh	r2, [r2, #4]
 8014444:	80ba      	strh	r2, [r7, #4]
 8014446:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801444a:	10db      	asrs	r3, r3, #3
 801444c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8014450:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8014454:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8014458:	4313      	orrs	r3, r2
 801445a:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801445e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8014462:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8014466:	1a9b      	subs	r3, r3, r2
 8014468:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801446c:	e771      	b.n	8014352 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801446e:	f023 0204 	bic.w	r2, r3, #4
 8014472:	f640 611b 	movw	r1, #3611	; 0xe1b
 8014476:	428a      	cmp	r2, r1
 8014478:	d003      	beq.n	8014482 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 801447a:	f640 621d 	movw	r2, #3613	; 0xe1d
 801447e:	4293      	cmp	r3, r2
 8014480:	d120      	bne.n	80144c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 8014482:	3b01      	subs	r3, #1
 8014484:	4602      	mov	r2, r0
 8014486:	4629      	mov	r1, r5
 8014488:	4620      	mov	r0, r4
 801448a:	b29b      	uxth	r3, r3
 801448c:	f7ff ff4b 	bl	8014326 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8014490:	7b41      	ldrb	r1, [r0, #13]
 8014492:	00cb      	lsls	r3, r1, #3
 8014494:	0649      	lsls	r1, r1, #25
 8014496:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801449a:	7a03      	ldrb	r3, [r0, #8]
 801449c:	ea43 0302 	orr.w	r3, r3, r2
 80144a0:	bf44      	itt	mi
 80144a2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80144a6:	b21b      	sxthmi	r3, r3
 80144a8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80144ac:	7b6b      	ldrb	r3, [r5, #13]
 80144ae:	7aaa      	ldrb	r2, [r5, #10]
 80144b0:	005b      	lsls	r3, r3, #1
 80144b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80144b6:	4313      	orrs	r3, r2
 80144b8:	115a      	asrs	r2, r3, #5
 80144ba:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80144be:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80144c2:	e035      	b.n	8014530 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80144c4:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80144c8:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80144cc:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80144d0:	7a2a      	ldrb	r2, [r5, #8]
 80144d2:	ea42 0201 	orr.w	r2, r2, r1
 80144d6:	f640 6109 	movw	r1, #3593	; 0xe09
 80144da:	bf1c      	itt	ne
 80144dc:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80144e0:	b212      	sxthne	r2, r2
 80144e2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80144e6:	f023 0210 	bic.w	r2, r3, #16
 80144ea:	428a      	cmp	r2, r1
 80144ec:	d003      	beq.n	80144f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 80144ee:	f640 6213 	movw	r2, #3603	; 0xe13
 80144f2:	4293      	cmp	r3, r2
 80144f4:	d129      	bne.n	801454a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80144f6:	7b6e      	ldrb	r6, [r5, #13]
 80144f8:	4629      	mov	r1, r5
 80144fa:	0076      	lsls	r6, r6, #1
 80144fc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8014500:	7aae      	ldrb	r6, [r5, #10]
 8014502:	4316      	orrs	r6, r2
 8014504:	f640 6213 	movw	r2, #3603	; 0xe13
 8014508:	4293      	cmp	r3, r2
 801450a:	4602      	mov	r2, r0
 801450c:	4620      	mov	r0, r4
 801450e:	bf16      	itet	ne
 8014510:	f103 33ff 	addne.w	r3, r3, #4294967295
 8014514:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8014518:	b29b      	uxthne	r3, r3
 801451a:	f7ff ff04 	bl	8014326 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801451e:	7b43      	ldrb	r3, [r0, #13]
 8014520:	7a82      	ldrb	r2, [r0, #10]
 8014522:	005b      	lsls	r3, r3, #1
 8014524:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014528:	4313      	orrs	r3, r2
 801452a:	1af6      	subs	r6, r6, r3
 801452c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8014530:	7b69      	ldrb	r1, [r5, #13]
 8014532:	00cb      	lsls	r3, r1, #3
 8014534:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014538:	7a2b      	ldrb	r3, [r5, #8]
 801453a:	4313      	orrs	r3, r2
 801453c:	064a      	lsls	r2, r1, #25
 801453e:	bf44      	itt	mi
 8014540:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014544:	b21b      	sxthmi	r3, r3
 8014546:	1bdb      	subs	r3, r3, r7
 8014548:	e747      	b.n	80143da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801454a:	2300      	movs	r3, #0
 801454c:	e7b7      	b.n	80144be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 801454e:	bf00      	nop
 8014550:	3fc00079 	.word	0x3fc00079

08014554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8014554:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014558:	4604      	mov	r4, r0
 801455a:	b942      	cbnz	r2, 801456e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801455c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014560:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8014564:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8014568:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801456c:	e047      	b.n	80145fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801456e:	7b51      	ldrb	r1, [r2, #13]
 8014570:	8893      	ldrh	r3, [r2, #4]
 8014572:	010d      	lsls	r5, r1, #4
 8014574:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8014578:	79d5      	ldrb	r5, [r2, #7]
 801457a:	4305      	orrs	r5, r0
 801457c:	2d04      	cmp	r5, #4
 801457e:	bfcc      	ite	gt
 8014580:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8014584:	f04f 0e01 	movle.w	lr, #1
 8014588:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801458c:	f200 80ab 	bhi.w	80146e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8014590:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8014594:	4283      	cmp	r3, r0
 8014596:	d216      	bcs.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014598:	f240 605b 	movw	r0, #1627	; 0x65b
 801459c:	4283      	cmp	r3, r0
 801459e:	d859      	bhi.n	8014654 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80145a0:	f240 6057 	movw	r0, #1623	; 0x657
 80145a4:	4283      	cmp	r3, r0
 80145a6:	d20e      	bcs.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80145a8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80145ac:	d24a      	bcs.n	8014644 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80145ae:	f240 604e 	movw	r0, #1614	; 0x64e
 80145b2:	4283      	cmp	r3, r0
 80145b4:	d207      	bcs.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80145b6:	f240 601a 	movw	r0, #1562	; 0x61a
 80145ba:	4283      	cmp	r3, r0
 80145bc:	d02a      	beq.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80145be:	d821      	bhi.n	8014604 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80145c0:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80145c4:	d35b      	bcc.n	801467e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80145c6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80145ca:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80145ce:	f040 80d0 	bne.w	8014772 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80145d2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80145d6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80145da:	f040 80ca 	bne.w	8014772 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80145de:	00cb      	lsls	r3, r1, #3
 80145e0:	0649      	lsls	r1, r1, #25
 80145e2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80145e6:	7a13      	ldrb	r3, [r2, #8]
 80145e8:	ea43 0300 	orr.w	r3, r3, r0
 80145ec:	bf44      	itt	mi
 80145ee:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80145f2:	b21b      	sxthmi	r3, r3
 80145f4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80145f8:	1b5d      	subs	r5, r3, r5
 80145fa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80145fe:	4610      	mov	r0, r2
 8014600:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014604:	f240 604b 	movw	r0, #1611	; 0x64b
 8014608:	4283      	cmp	r3, r0
 801460a:	d338      	bcc.n	801467e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801460c:	f240 604c 	movw	r0, #1612	; 0x64c
 8014610:	4283      	cmp	r3, r0
 8014612:	d9d8      	bls.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014614:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8014618:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801461c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8014620:	f040 80f3 	bne.w	801480a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8014624:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8014628:	f040 80ef 	bne.w	801480a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 801462c:	00cb      	lsls	r3, r1, #3
 801462e:	064e      	lsls	r6, r1, #25
 8014630:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8014634:	7a13      	ldrb	r3, [r2, #8]
 8014636:	ea43 0300 	orr.w	r3, r3, r0
 801463a:	bf44      	itt	mi
 801463c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014640:	b21b      	sxthmi	r3, r3
 8014642:	e7d9      	b.n	80145f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8014644:	f240 6054 	movw	r0, #1620	; 0x654
 8014648:	4283      	cmp	r3, r0
 801464a:	d8e3      	bhi.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801464c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8014650:	d9e0      	bls.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014652:	e7b8      	b.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014654:	f240 6074 	movw	r0, #1652	; 0x674
 8014658:	4283      	cmp	r3, r0
 801465a:	d0b4      	beq.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801465c:	d82d      	bhi.n	80146ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801465e:	f240 605e 	movw	r0, #1630	; 0x65e
 8014662:	4283      	cmp	r3, r0
 8014664:	d804      	bhi.n	8014670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8014666:	f240 605d 	movw	r0, #1629	; 0x65d
 801466a:	4283      	cmp	r3, r0
 801466c:	d3d2      	bcc.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801466e:	e7aa      	b.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014670:	f240 605f 	movw	r0, #1631	; 0x65f
 8014674:	4283      	cmp	r3, r0
 8014676:	d0cd      	beq.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014678:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801467c:	d0a3      	beq.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801467e:	00cb      	lsls	r3, r1, #3
 8014680:	0649      	lsls	r1, r1, #25
 8014682:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8014686:	7a13      	ldrb	r3, [r2, #8]
 8014688:	ea43 0300 	orr.w	r3, r3, r0
 801468c:	bf44      	itt	mi
 801468e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014692:	b21b      	sxthmi	r3, r3
 8014694:	1b5d      	subs	r5, r3, r5
 8014696:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801469a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801469e:	7b53      	ldrb	r3, [r2, #13]
 80146a0:	015b      	lsls	r3, r3, #5
 80146a2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80146a6:	7993      	ldrb	r3, [r2, #6]
 80146a8:	430b      	orrs	r3, r1
 80146aa:	2105      	movs	r1, #5
 80146ac:	005b      	lsls	r3, r3, #1
 80146ae:	fb93 f3f1 	sdiv	r3, r3, r1
 80146b2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80146b6:	440b      	add	r3, r1
 80146b8:	e756      	b.n	8014568 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80146ba:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80146be:	4283      	cmp	r3, r0
 80146c0:	d809      	bhi.n	80146d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80146c2:	f240 60df 	movw	r0, #1759	; 0x6df
 80146c6:	4283      	cmp	r3, r0
 80146c8:	f4bf af7d 	bcs.w	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80146cc:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80146d0:	2b05      	cmp	r3, #5
 80146d2:	d8d4      	bhi.n	801467e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80146d4:	e777      	b.n	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80146d6:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80146da:	4283      	cmp	r3, r0
 80146dc:	d09a      	beq.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80146de:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80146e2:	4283      	cmp	r3, r0
 80146e4:	e7ca      	b.n	801467c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80146e6:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80146ea:	d22b      	bcs.n	8014744 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80146ec:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80146f0:	4283      	cmp	r3, r0
 80146f2:	d28f      	bcs.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80146f4:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80146f8:	4283      	cmp	r3, r0
 80146fa:	d816      	bhi.n	801472a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80146fc:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8014700:	4283      	cmp	r3, r0
 8014702:	f4bf af60 	bcs.w	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014706:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801470a:	4283      	cmp	r3, r0
 801470c:	d80a      	bhi.n	8014724 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801470e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8014712:	4283      	cmp	r3, r0
 8014714:	f4bf af57 	bcs.w	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014718:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801471c:	4283      	cmp	r3, r0
 801471e:	f43f af79 	beq.w	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014722:	e7ac      	b.n	801467e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014724:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8014728:	e7f8      	b.n	801471c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801472a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801472e:	4283      	cmp	r3, r0
 8014730:	d802      	bhi.n	8014738 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8014732:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8014736:	e798      	b.n	801466a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8014738:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801473c:	4283      	cmp	r3, r0
 801473e:	f47f af42 	bne.w	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014742:	e767      	b.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014744:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8014748:	4283      	cmp	r3, r0
 801474a:	f43f af63 	beq.w	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801474e:	d802      	bhi.n	8014756 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8014750:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8014754:	e7f2      	b.n	801473c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8014756:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801475a:	4283      	cmp	r3, r0
 801475c:	d805      	bhi.n	801476a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801475e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8014762:	4283      	cmp	r3, r0
 8014764:	f4ff af2f 	bcc.w	80145c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014768:	e754      	b.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801476a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801476e:	4283      	cmp	r3, r0
 8014770:	e7af      	b.n	80146d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8014772:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8014776:	4617      	mov	r7, r2
 8014778:	f102 0808 	add.w	r8, r2, #8
 801477c:	4666      	mov	r6, ip
 801477e:	6838      	ldr	r0, [r7, #0]
 8014780:	3708      	adds	r7, #8
 8014782:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8014786:	46e6      	mov	lr, ip
 8014788:	4547      	cmp	r7, r8
 801478a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801478e:	46f4      	mov	ip, lr
 8014790:	d1f5      	bne.n	801477e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8014792:	6838      	ldr	r0, [r7, #0]
 8014794:	f8ce 0000 	str.w	r0, [lr]
 8014798:	88b9      	ldrh	r1, [r7, #4]
 801479a:	f8ae 1004 	strh.w	r1, [lr, #4]
 801479e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80147a2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80147a6:	d009      	beq.n	80147bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 80147a8:	7b51      	ldrb	r1, [r2, #13]
 80147aa:	7992      	ldrb	r2, [r2, #6]
 80147ac:	0149      	lsls	r1, r1, #5
 80147ae:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80147b2:	4311      	orrs	r1, r2
 80147b4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80147b8:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80147bc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80147c0:	b2ad      	uxth	r5, r5
 80147c2:	d00d      	beq.n	80147e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 80147c4:	442b      	add	r3, r5
 80147c6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80147ca:	b29b      	uxth	r3, r3
 80147cc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80147d0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80147d4:	10db      	asrs	r3, r3, #3
 80147d6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80147da:	4313      	orrs	r3, r2
 80147dc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80147e0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80147e4:	00cb      	lsls	r3, r1, #3
 80147e6:	064f      	lsls	r7, r1, #25
 80147e8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80147ec:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80147f0:	ea43 0302 	orr.w	r3, r3, r2
 80147f4:	bf44      	itt	mi
 80147f6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80147fa:	b21b      	sxthmi	r3, r3
 80147fc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8014800:	1b5b      	subs	r3, r3, r5
 8014802:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8014806:	4632      	mov	r2, r6
 8014808:	e6f9      	b.n	80145fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801480a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801480e:	4617      	mov	r7, r2
 8014810:	f102 0908 	add.w	r9, r2, #8
 8014814:	4666      	mov	r6, ip
 8014816:	6838      	ldr	r0, [r7, #0]
 8014818:	3708      	adds	r7, #8
 801481a:	f857 1c04 	ldr.w	r1, [r7, #-4]
 801481e:	46e0      	mov	r8, ip
 8014820:	454f      	cmp	r7, r9
 8014822:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8014826:	46c4      	mov	ip, r8
 8014828:	d1f5      	bne.n	8014816 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 801482a:	6838      	ldr	r0, [r7, #0]
 801482c:	f8c8 0000 	str.w	r0, [r8]
 8014830:	88b9      	ldrh	r1, [r7, #4]
 8014832:	f8a8 1004 	strh.w	r1, [r8, #4]
 8014836:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801483a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801483e:	d009      	beq.n	8014854 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8014840:	7b51      	ldrb	r1, [r2, #13]
 8014842:	7992      	ldrb	r2, [r2, #6]
 8014844:	0149      	lsls	r1, r1, #5
 8014846:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801484a:	4311      	orrs	r1, r2
 801484c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8014850:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8014854:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8014858:	d00e      	beq.n	8014878 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801485a:	eba3 030e 	sub.w	r3, r3, lr
 801485e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8014862:	b29b      	uxth	r3, r3
 8014864:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8014868:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801486c:	10db      	asrs	r3, r3, #3
 801486e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8014872:	4313      	orrs	r3, r2
 8014874:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8014878:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801487c:	00cb      	lsls	r3, r1, #3
 801487e:	0648      	lsls	r0, r1, #25
 8014880:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014884:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8014888:	ea43 0302 	orr.w	r3, r3, r2
 801488c:	bf44      	itt	mi
 801488e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014892:	b21b      	sxthmi	r3, r3
 8014894:	1b5d      	subs	r5, r3, r5
 8014896:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801489a:	e7b4      	b.n	8014806 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

0801489c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801489c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80148a0:	461e      	mov	r6, r3
 80148a2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80148a4:	4604      	mov	r4, r0
 80148a6:	4617      	mov	r7, r2
 80148a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80148ac:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80148b0:	f7f8 fb50 	bl	800cf54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80148b4:	4605      	mov	r5, r0
 80148b6:	b918      	cbnz	r0, 80148c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80148b8:	6030      	str	r0, [r6, #0]
 80148ba:	4628      	mov	r0, r5
 80148bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80148c0:	683b      	ldr	r3, [r7, #0]
 80148c2:	4601      	mov	r1, r0
 80148c4:	4638      	mov	r0, r7
 80148c6:	68db      	ldr	r3, [r3, #12]
 80148c8:	4798      	blx	r3
 80148ca:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80148ce:	4602      	mov	r2, r0
 80148d0:	6030      	str	r0, [r6, #0]
 80148d2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80148d6:	d213      	bcs.n	8014900 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80148d8:	4643      	mov	r3, r8
 80148da:	4639      	mov	r1, r7
 80148dc:	4620      	mov	r0, r4
 80148de:	f7ff fe39 	bl	8014554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80148e2:	6030      	str	r0, [r6, #0]
 80148e4:	6833      	ldr	r3, [r6, #0]
 80148e6:	b143      	cbz	r3, 80148fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80148e8:	7b5a      	ldrb	r2, [r3, #13]
 80148ea:	7a9b      	ldrb	r3, [r3, #10]
 80148ec:	0052      	lsls	r2, r2, #1
 80148ee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80148f2:	4313      	orrs	r3, r2
 80148f4:	bf0c      	ite	eq
 80148f6:	2301      	moveq	r3, #1
 80148f8:	2300      	movne	r3, #0
 80148fa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80148fe:	e7dc      	b.n	80148ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8014900:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8014904:	b29b      	uxth	r3, r3
 8014906:	2b7f      	cmp	r3, #127	; 0x7f
 8014908:	d804      	bhi.n	8014914 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801490a:	4639      	mov	r1, r7
 801490c:	4620      	mov	r0, r4
 801490e:	f7ff fd15 	bl	801433c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8014912:	e7e6      	b.n	80148e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8014914:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8014918:	2b00      	cmp	r3, #0
 801491a:	d0e3      	beq.n	80148e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801491c:	f640 1302 	movw	r3, #2306	; 0x902
 8014920:	429d      	cmp	r5, r3
 8014922:	d1df      	bne.n	80148e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014924:	4601      	mov	r1, r0
 8014926:	4620      	mov	r0, r4
 8014928:	f7ff fcd9 	bl	80142de <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801492c:	e7d9      	b.n	80148e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801492e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801492e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014932:	461e      	mov	r6, r3
 8014934:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8014936:	4604      	mov	r4, r0
 8014938:	4617      	mov	r7, r2
 801493a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801493e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8014942:	f7f8 fb07 	bl	800cf54 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014946:	4605      	mov	r5, r0
 8014948:	b918      	cbnz	r0, 8014952 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801494a:	6030      	str	r0, [r6, #0]
 801494c:	4628      	mov	r0, r5
 801494e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014952:	683b      	ldr	r3, [r7, #0]
 8014954:	4601      	mov	r1, r0
 8014956:	4638      	mov	r0, r7
 8014958:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801495c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8014960:	47c8      	blx	r9
 8014962:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8014966:	4602      	mov	r2, r0
 8014968:	6030      	str	r0, [r6, #0]
 801496a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801496e:	d213      	bcs.n	8014998 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8014970:	4643      	mov	r3, r8
 8014972:	4639      	mov	r1, r7
 8014974:	4620      	mov	r0, r4
 8014976:	f7ff fded 	bl	8014554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801497a:	6030      	str	r0, [r6, #0]
 801497c:	6833      	ldr	r3, [r6, #0]
 801497e:	b143      	cbz	r3, 8014992 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8014980:	7b5a      	ldrb	r2, [r3, #13]
 8014982:	7a9b      	ldrb	r3, [r3, #10]
 8014984:	0052      	lsls	r2, r2, #1
 8014986:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801498a:	4313      	orrs	r3, r2
 801498c:	bf0c      	ite	eq
 801498e:	2301      	moveq	r3, #1
 8014990:	2300      	movne	r3, #0
 8014992:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8014996:	e7d9      	b.n	801494c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8014998:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801499c:	b29b      	uxth	r3, r3
 801499e:	2b7f      	cmp	r3, #127	; 0x7f
 80149a0:	d804      	bhi.n	80149ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80149a2:	4639      	mov	r1, r7
 80149a4:	4620      	mov	r0, r4
 80149a6:	f7ff fcc9 	bl	801433c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80149aa:	e7e6      	b.n	801497a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80149ac:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80149b0:	2b00      	cmp	r3, #0
 80149b2:	d0e3      	beq.n	801497c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80149b4:	f640 1302 	movw	r3, #2306	; 0x902
 80149b8:	429d      	cmp	r5, r3
 80149ba:	d1df      	bne.n	801497c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80149bc:	4601      	mov	r1, r0
 80149be:	4620      	mov	r0, r4
 80149c0:	f7ff fc8d 	bl	80142de <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80149c4:	e7d9      	b.n	801497a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080149c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80149c6:	b510      	push	{r4, lr}
 80149c8:	4604      	mov	r4, r0
 80149ca:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80149ce:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80149d0:	b1e1      	cbz	r1, 8014a0c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80149d2:	2b0a      	cmp	r3, #10
 80149d4:	d02d      	beq.n	8014a32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80149d6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80149d8:	3901      	subs	r1, #1
 80149da:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80149de:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80149e0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80149e4:	1c51      	adds	r1, r2, #1
 80149e6:	b289      	uxth	r1, r1
 80149e8:	2901      	cmp	r1, #1
 80149ea:	bf8a      	itet	hi
 80149ec:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80149f0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80149f2:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80149f4:	1c5a      	adds	r2, r3, #1
 80149f6:	8722      	strh	r2, [r4, #56]	; 0x38
 80149f8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80149fa:	4413      	add	r3, r2
 80149fc:	b29b      	uxth	r3, r3
 80149fe:	2b09      	cmp	r3, #9
 8014a00:	bf88      	it	hi
 8014a02:	3b0a      	subhi	r3, #10
 8014a04:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014a08:	8458      	strh	r0, [r3, #34]	; 0x22
 8014a0a:	e7de      	b.n	80149ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8014a0c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8014a0e:	2b0a      	cmp	r3, #10
 8014a10:	d00f      	beq.n	8014a32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8014a12:	4620      	mov	r0, r4
 8014a14:	f7ff fc11 	bl	801423a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8014a18:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8014a1a:	1c5a      	adds	r2, r3, #1
 8014a1c:	8722      	strh	r2, [r4, #56]	; 0x38
 8014a1e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8014a20:	4413      	add	r3, r2
 8014a22:	b29b      	uxth	r3, r3
 8014a24:	2b09      	cmp	r3, #9
 8014a26:	bf88      	it	hi
 8014a28:	3b0a      	subhi	r3, #10
 8014a2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014a2e:	8458      	strh	r0, [r3, #34]	; 0x22
 8014a30:	e7ec      	b.n	8014a0c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8014a32:	bd10      	pop	{r4, pc}

08014a34 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8014a34:	b538      	push	{r3, r4, r5, lr}
 8014a36:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8014a38:	4604      	mov	r4, r0
 8014a3a:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8014a3e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8014a40:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8014a42:	3a01      	subs	r2, #1
 8014a44:	8702      	strh	r2, [r0, #56]	; 0x38
 8014a46:	1c5a      	adds	r2, r3, #1
 8014a48:	b292      	uxth	r2, r2
 8014a4a:	2a09      	cmp	r2, #9
 8014a4c:	bf8a      	itet	hi
 8014a4e:	3b09      	subhi	r3, #9
 8014a50:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8014a52:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8014a54:	f7ff ffb7 	bl	80149c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8014a58:	8c23      	ldrh	r3, [r4, #32]
 8014a5a:	2b01      	cmp	r3, #1
 8014a5c:	bf9c      	itt	ls
 8014a5e:	3301      	addls	r3, #1
 8014a60:	8423      	strhls	r3, [r4, #32]
 8014a62:	8be3      	ldrh	r3, [r4, #30]
 8014a64:	b90b      	cbnz	r3, 8014a6a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8014a66:	2302      	movs	r3, #2
 8014a68:	83e3      	strh	r3, [r4, #30]
 8014a6a:	8be3      	ldrh	r3, [r4, #30]
 8014a6c:	4628      	mov	r0, r5
 8014a6e:	3b01      	subs	r3, #1
 8014a70:	b29b      	uxth	r3, r3
 8014a72:	83e3      	strh	r3, [r4, #30]
 8014a74:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a78:	8365      	strh	r5, [r4, #26]
 8014a7a:	bd38      	pop	{r3, r4, r5, pc}

08014a7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8014a7c:	428a      	cmp	r2, r1
 8014a7e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014a82:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8014a84:	d932      	bls.n	8014aec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8014a86:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8014a88:	1a54      	subs	r4, r2, r1
 8014a8a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8014a8e:	19ee      	adds	r6, r5, r7
 8014a90:	fa1f fe84 	uxth.w	lr, r4
 8014a94:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8014a98:	3e01      	subs	r6, #1
 8014a9a:	b2b4      	uxth	r4, r6
 8014a9c:	eba4 090e 	sub.w	r9, r4, lr
 8014aa0:	fa1f f989 	uxth.w	r9, r9
 8014aa4:	2c09      	cmp	r4, #9
 8014aa6:	4626      	mov	r6, r4
 8014aa8:	bf88      	it	hi
 8014aaa:	f1a4 060a 	subhi.w	r6, r4, #10
 8014aae:	f1bc 0f00 	cmp.w	ip, #0
 8014ab2:	f104 34ff 	add.w	r4, r4, #4294967295
 8014ab6:	bf08      	it	eq
 8014ab8:	f04f 0c02 	moveq.w	ip, #2
 8014abc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014ac0:	b2a4      	uxth	r4, r4
 8014ac2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014ac6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8014aca:	454c      	cmp	r4, r9
 8014acc:	fa1f fc8c 	uxth.w	ip, ip
 8014ad0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8014ad4:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8014ad8:	d1e4      	bne.n	8014aa4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8014ada:	eba5 050e 	sub.w	r5, r5, lr
 8014ade:	eb0e 0408 	add.w	r4, lr, r8
 8014ae2:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8014ae6:	8705      	strh	r5, [r0, #56]	; 0x38
 8014ae8:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8014aec:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8014aee:	250a      	movs	r5, #10
 8014af0:	1a64      	subs	r4, r4, r1
 8014af2:	4439      	add	r1, r7
 8014af4:	b289      	uxth	r1, r1
 8014af6:	8704      	strh	r4, [r0, #56]	; 0x38
 8014af8:	2909      	cmp	r1, #9
 8014afa:	bf88      	it	hi
 8014afc:	390a      	subhi	r1, #10
 8014afe:	86c1      	strh	r1, [r0, #54]	; 0x36
 8014b00:	b18a      	cbz	r2, 8014b26 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 8014b02:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8014b04:	3a01      	subs	r2, #1
 8014b06:	3101      	adds	r1, #1
 8014b08:	b292      	uxth	r2, r2
 8014b0a:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8014b0e:	8701      	strh	r1, [r0, #56]	; 0x38
 8014b10:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8014b12:	b901      	cbnz	r1, 8014b16 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8014b14:	86c5      	strh	r5, [r0, #54]	; 0x36
 8014b16:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8014b18:	3901      	subs	r1, #1
 8014b1a:	b289      	uxth	r1, r1
 8014b1c:	86c1      	strh	r1, [r0, #54]	; 0x36
 8014b1e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014b22:	844c      	strh	r4, [r1, #34]	; 0x22
 8014b24:	e7ec      	b.n	8014b00 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 8014b26:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014b2a:	f7ff bf4c 	b.w	80149c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08014b2e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8014b2e:	b570      	push	{r4, r5, r6, lr}
 8014b30:	2500      	movs	r5, #0
 8014b32:	4295      	cmp	r5, r2
 8014b34:	d011      	beq.n	8014b5a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8014b36:	8bc4      	ldrh	r4, [r0, #30]
 8014b38:	f831 6b02 	ldrh.w	r6, [r1], #2
 8014b3c:	4414      	add	r4, r2
 8014b3e:	3c01      	subs	r4, #1
 8014b40:	1b64      	subs	r4, r4, r5
 8014b42:	b2a4      	uxth	r4, r4
 8014b44:	2c01      	cmp	r4, #1
 8014b46:	bf88      	it	hi
 8014b48:	3c02      	subhi	r4, #2
 8014b4a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8014b4e:	8b64      	ldrh	r4, [r4, #26]
 8014b50:	42b4      	cmp	r4, r6
 8014b52:	d117      	bne.n	8014b84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8014b54:	3501      	adds	r5, #1
 8014b56:	b2ad      	uxth	r5, r5
 8014b58:	e7eb      	b.n	8014b32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8014b5a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014b5e:	2400      	movs	r4, #0
 8014b60:	4413      	add	r3, r2
 8014b62:	b2a2      	uxth	r2, r4
 8014b64:	429a      	cmp	r2, r3
 8014b66:	da0f      	bge.n	8014b88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8014b68:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8014b6a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8014b6e:	3401      	adds	r4, #1
 8014b70:	4432      	add	r2, r6
 8014b72:	b292      	uxth	r2, r2
 8014b74:	2a09      	cmp	r2, #9
 8014b76:	bf88      	it	hi
 8014b78:	3a0a      	subhi	r2, #10
 8014b7a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014b7e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8014b80:	42aa      	cmp	r2, r5
 8014b82:	d0ee      	beq.n	8014b62 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8014b84:	2000      	movs	r0, #0
 8014b86:	bd70      	pop	{r4, r5, r6, pc}
 8014b88:	2001      	movs	r0, #1
 8014b8a:	e7fc      	b.n	8014b86 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08014b8c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8014b8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b90:	4605      	mov	r5, r0
 8014b92:	4616      	mov	r6, r2
 8014b94:	1c8c      	adds	r4, r1, #2
 8014b96:	8809      	ldrh	r1, [r1, #0]
 8014b98:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8014b9c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8014ba0:	42b3      	cmp	r3, r6
 8014ba2:	d124      	bne.n	8014bee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8014ba4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8014ba8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8014bac:	f001 070f 	and.w	r7, r1, #15
 8014bb0:	4652      	mov	r2, sl
 8014bb2:	f8cd 8000 	str.w	r8, [sp]
 8014bb6:	464b      	mov	r3, r9
 8014bb8:	4621      	mov	r1, r4
 8014bba:	4628      	mov	r0, r5
 8014bbc:	f7ff ffb7 	bl	8014b2e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8014bc0:	4683      	mov	fp, r0
 8014bc2:	b168      	cbz	r0, 8014be0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8014bc4:	eb0a 0109 	add.w	r1, sl, r9
 8014bc8:	463a      	mov	r2, r7
 8014bca:	4628      	mov	r0, r5
 8014bcc:	4441      	add	r1, r8
 8014bce:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8014bd2:	4649      	mov	r1, r9
 8014bd4:	f7ff ff52 	bl	8014a7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8014bd8:	4658      	mov	r0, fp
 8014bda:	b003      	add	sp, #12
 8014bdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014be0:	eb07 010a 	add.w	r1, r7, sl
 8014be4:	4449      	add	r1, r9
 8014be6:	4441      	add	r1, r8
 8014be8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8014bec:	e7d2      	b.n	8014b94 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8014bee:	f04f 0b00 	mov.w	fp, #0
 8014bf2:	e7f1      	b.n	8014bd8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08014bf4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8014bf4:	b570      	push	{r4, r5, r6, lr}
 8014bf6:	8810      	ldrh	r0, [r2, #0]
 8014bf8:	4298      	cmp	r0, r3
 8014bfa:	d817      	bhi.n	8014c2c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014bfc:	1e48      	subs	r0, r1, #1
 8014bfe:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8014c02:	4298      	cmp	r0, r3
 8014c04:	d312      	bcc.n	8014c2c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014c06:	2400      	movs	r4, #0
 8014c08:	428c      	cmp	r4, r1
 8014c0a:	d20f      	bcs.n	8014c2c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014c0c:	1860      	adds	r0, r4, r1
 8014c0e:	1040      	asrs	r0, r0, #1
 8014c10:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8014c14:	0085      	lsls	r5, r0, #2
 8014c16:	42b3      	cmp	r3, r6
 8014c18:	d902      	bls.n	8014c20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8014c1a:	3001      	adds	r0, #1
 8014c1c:	b284      	uxth	r4, r0
 8014c1e:	e7f3      	b.n	8014c08 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014c20:	d201      	bcs.n	8014c26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8014c22:	b281      	uxth	r1, r0
 8014c24:	e7f0      	b.n	8014c08 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014c26:	442a      	add	r2, r5
 8014c28:	8850      	ldrh	r0, [r2, #2]
 8014c2a:	bd70      	pop	{r4, r5, r6, pc}
 8014c2c:	2000      	movs	r0, #0
 8014c2e:	e7fc      	b.n	8014c2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08014c30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8014c30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014c34:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8014c36:	4604      	mov	r4, r0
 8014c38:	260b      	movs	r6, #11
 8014c3a:	886f      	ldrh	r7, [r5, #2]
 8014c3c:	087f      	lsrs	r7, r7, #1
 8014c3e:	3e01      	subs	r6, #1
 8014c40:	d013      	beq.n	8014c6a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8014c42:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8014c44:	462a      	mov	r2, r5
 8014c46:	4639      	mov	r1, r7
 8014c48:	4620      	mov	r0, r4
 8014c4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014c4e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8014c52:	4643      	mov	r3, r8
 8014c54:	f7ff ffce 	bl	8014bf4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8014c58:	b138      	cbz	r0, 8014c6a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8014c5a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8014c5e:	4642      	mov	r2, r8
 8014c60:	4620      	mov	r0, r4
 8014c62:	f7ff ff93 	bl	8014b8c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8014c66:	2800      	cmp	r0, #0
 8014c68:	d1e9      	bne.n	8014c3e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8014c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08014c70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8014c70:	b570      	push	{r4, r5, r6, lr}
 8014c72:	694a      	ldr	r2, [r1, #20]
 8014c74:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8014c76:	684b      	ldr	r3, [r1, #4]
 8014c78:	1b54      	subs	r4, r2, r5
 8014c7a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8014c7c:	f000 8106 	beq.w	8014e8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8014c80:	1b9b      	subs	r3, r3, r6
 8014c82:	d003      	beq.n	8014c8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8014c84:	4363      	muls	r3, r4
 8014c86:	2210      	movs	r2, #16
 8014c88:	fb93 f3f2 	sdiv	r3, r3, r2
 8014c8c:	680c      	ldr	r4, [r1, #0]
 8014c8e:	698a      	ldr	r2, [r1, #24]
 8014c90:	1b65      	subs	r5, r4, r5
 8014c92:	f000 80fd 	beq.w	8014e90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8014c96:	1b92      	subs	r2, r2, r6
 8014c98:	d003      	beq.n	8014ca2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014c9a:	436a      	muls	r2, r5
 8014c9c:	2410      	movs	r4, #16
 8014c9e:	fb92 f2f4 	sdiv	r2, r2, r4
 8014ca2:	1a9b      	subs	r3, r3, r2
 8014ca4:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8014ecc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8014ca8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014cac:	460a      	mov	r2, r1
 8014cae:	ee07 3a90 	vmov	s15, r3
 8014cb2:	f100 040c 	add.w	r4, r0, #12
 8014cb6:	4603      	mov	r3, r0
 8014cb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014cbc:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014cc0:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8014cc4:	eeb1 6a43 	vneg.f32	s12, s6
 8014cc8:	edd2 7a02 	vldr	s15, [r2, #8]
 8014ccc:	3214      	adds	r2, #20
 8014cce:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8014cd2:	ece3 6a01 	vstmia	r3!, {s13}
 8014cd6:	429c      	cmp	r4, r3
 8014cd8:	ed52 7a02 	vldr	s15, [r2, #-8]
 8014cdc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014ce0:	edc3 7a02 	vstr	s15, [r3, #8]
 8014ce4:	ed52 7a01 	vldr	s15, [r2, #-4]
 8014ce8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014cec:	edc3 7a05 	vstr	s15, [r3, #20]
 8014cf0:	d1ea      	bne.n	8014cc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8014cf2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014cf4:	698b      	ldr	r3, [r1, #24]
 8014cf6:	edd0 4a02 	vldr	s9, [r0, #8]
 8014cfa:	1a9b      	subs	r3, r3, r2
 8014cfc:	edd0 3a00 	vldr	s7, [r0]
 8014d00:	edd0 6a01 	vldr	s13, [r0, #4]
 8014d04:	ee07 3a90 	vmov	s15, r3
 8014d08:	684b      	ldr	r3, [r1, #4]
 8014d0a:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8014d0e:	ed90 5a05 	vldr	s10, [r0, #20]
 8014d12:	1a9b      	subs	r3, r3, r2
 8014d14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014d18:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8014d1c:	ed90 2a03 	vldr	s4, [r0, #12]
 8014d20:	ee07 3a10 	vmov	s14, r3
 8014d24:	edd0 5a04 	vldr	s11, [r0, #16]
 8014d28:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014d2c:	ed90 1a07 	vldr	s2, [r0, #28]
 8014d30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014d34:	edd0 2a06 	vldr	s5, [r0, #24]
 8014d38:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8014d3c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8014d40:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014d44:	ee32 5a45 	vsub.f32	s10, s4, s10
 8014d48:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014d4c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8014d50:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8014d54:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014d56:	694a      	ldr	r2, [r1, #20]
 8014d58:	1b13      	subs	r3, r2, r4
 8014d5a:	ee07 3a10 	vmov	s14, r3
 8014d5e:	680b      	ldr	r3, [r1, #0]
 8014d60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014d64:	1b1b      	subs	r3, r3, r4
 8014d66:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014d6a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8014d6e:	ee07 3a10 	vmov	s14, r3
 8014d72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014d76:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014d7a:	eee6 4a87 	vfma.f32	s9, s13, s14
 8014d7e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8014d82:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8014d86:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014d88:	698b      	ldr	r3, [r1, #24]
 8014d8a:	1a9b      	subs	r3, r3, r2
 8014d8c:	ee06 3a90 	vmov	s13, r3
 8014d90:	684b      	ldr	r3, [r1, #4]
 8014d92:	1a9b      	subs	r3, r3, r2
 8014d94:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014d98:	ee07 3a10 	vmov	s14, r3
 8014d9c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8014da0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014da4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8014da8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014dac:	eee5 6a87 	vfma.f32	s13, s11, s14
 8014db0:	ee66 6a83 	vmul.f32	s13, s13, s6
 8014db4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8014db8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014dba:	694a      	ldr	r2, [r1, #20]
 8014dbc:	1b13      	subs	r3, r2, r4
 8014dbe:	ee07 3a10 	vmov	s14, r3
 8014dc2:	680b      	ldr	r3, [r1, #0]
 8014dc4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014dc8:	1b1b      	subs	r3, r3, r4
 8014dca:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014dce:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8014dd2:	ee07 3a10 	vmov	s14, r3
 8014dd6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014dda:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014dde:	eea5 5a87 	vfma.f32	s10, s11, s14
 8014de2:	edd0 5a08 	vldr	s11, [r0, #32]
 8014de6:	ee31 1a65 	vsub.f32	s2, s2, s11
 8014dea:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8014dee:	ee25 5a06 	vmul.f32	s10, s10, s12
 8014df2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8014df6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014df8:	698b      	ldr	r3, [r1, #24]
 8014dfa:	1a9b      	subs	r3, r3, r2
 8014dfc:	ee07 3a10 	vmov	s14, r3
 8014e00:	684b      	ldr	r3, [r1, #4]
 8014e02:	1a9b      	subs	r3, r3, r2
 8014e04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014e08:	ee01 3a90 	vmov	s3, r3
 8014e0c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014e10:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8014e14:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8014e18:	ee61 1a84 	vmul.f32	s3, s3, s8
 8014e1c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8014e20:	ee27 7a03 	vmul.f32	s14, s14, s6
 8014e24:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8014e28:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014e2a:	694a      	ldr	r2, [r1, #20]
 8014e2c:	1b13      	subs	r3, r2, r4
 8014e2e:	ee03 3a10 	vmov	s6, r3
 8014e32:	680b      	ldr	r3, [r1, #0]
 8014e34:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014e38:	1b1b      	subs	r3, r3, r4
 8014e3a:	ee23 3a04 	vmul.f32	s6, s6, s8
 8014e3e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8014e42:	ee03 3a10 	vmov	s6, r3
 8014e46:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014e4a:	ee23 4a04 	vmul.f32	s8, s6, s8
 8014e4e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8014e52:	ee25 6a86 	vmul.f32	s12, s11, s12
 8014e56:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8014e5a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8014e5e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8014e62:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8014e66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014e6a:	dd13      	ble.n	8014e94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8014e6c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014e70:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8014e74:	63c3      	str	r3, [r0, #60]	; 0x3c
 8014e76:	eee3 7a87 	vfma.f32	s15, s7, s14
 8014e7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014e7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014e82:	dd15      	ble.n	8014eb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8014e84:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014e88:	6403      	str	r3, [r0, #64]	; 0x40
 8014e8a:	bd70      	pop	{r4, r5, r6, pc}
 8014e8c:	4623      	mov	r3, r4
 8014e8e:	e6fd      	b.n	8014c8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8014e90:	462a      	mov	r2, r5
 8014e92:	e706      	b.n	8014ca2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014e94:	d502      	bpl.n	8014e9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8014e96:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014e9a:	e7e9      	b.n	8014e70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8014e9c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8014ea0:	eea3 2a85 	vfma.f32	s4, s7, s10
 8014ea4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8014ea8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014eac:	dade      	bge.n	8014e6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8014eae:	e7f2      	b.n	8014e96 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8014eb0:	d502      	bpl.n	8014eb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8014eb2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014eb6:	e7e7      	b.n	8014e88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8014eb8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014ebc:	eee3 4a86 	vfma.f32	s9, s7, s12
 8014ec0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8014ec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014ec8:	dadc      	bge.n	8014e84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8014eca:	e7f2      	b.n	8014eb2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014ecc:	3d800000 	.word	0x3d800000

08014ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8014ed0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014ed4:	2714      	movs	r7, #20
 8014ed6:	435f      	muls	r7, r3
 8014ed8:	eb02 0c07 	add.w	ip, r2, r7
 8014edc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8014ee0:	f115 0e0f 	adds.w	lr, r5, #15
 8014ee4:	f100 80a2 	bmi.w	801502c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8014ee8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8014eec:	9c08      	ldr	r4, [sp, #32]
 8014eee:	2614      	movs	r6, #20
 8014ef0:	f8c0 e014 	str.w	lr, [r0, #20]
 8014ef4:	4366      	muls	r6, r4
 8014ef6:	eb02 0806 	add.w	r8, r2, r6
 8014efa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8014efe:	f115 040f 	adds.w	r4, r5, #15
 8014f02:	f100 809f 	bmi.w	8015044 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8014f06:	1124      	asrs	r4, r4, #4
 8014f08:	eba4 040e 	sub.w	r4, r4, lr
 8014f0c:	6184      	str	r4, [r0, #24]
 8014f0e:	2c00      	cmp	r4, #0
 8014f10:	f000 808a 	beq.w	8015028 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8014f14:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8014f18:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8014f1c:	5995      	ldr	r5, [r2, r6]
 8014f1e:	eba4 0809 	sub.w	r8, r4, r9
 8014f22:	59d4      	ldr	r4, [r2, r7]
 8014f24:	eba5 0a04 	sub.w	sl, r5, r4
 8014f28:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8014f2c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8014f30:	fb0e fe05 	mul.w	lr, lr, r5
 8014f34:	fb0a ee19 	mls	lr, sl, r9, lr
 8014f38:	fb08 e404 	mla	r4, r8, r4, lr
 8014f3c:	3c01      	subs	r4, #1
 8014f3e:	19a4      	adds	r4, r4, r6
 8014f40:	f100 808c 	bmi.w	801505c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8014f44:	fb94 fef6 	sdiv	lr, r4, r6
 8014f48:	fb06 441e 	mls	r4, r6, lr, r4
 8014f4c:	f8c0 e000 	str.w	lr, [r0]
 8014f50:	6104      	str	r4, [r0, #16]
 8014f52:	2d00      	cmp	r5, #0
 8014f54:	f2c0 8095 	blt.w	8015082 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8014f58:	fb95 f4f6 	sdiv	r4, r5, r6
 8014f5c:	fb06 5514 	mls	r5, r6, r4, r5
 8014f60:	6044      	str	r4, [r0, #4]
 8014f62:	6085      	str	r5, [r0, #8]
 8014f64:	60c6      	str	r6, [r0, #12]
 8014f66:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014f6a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8014f6e:	6945      	ldr	r5, [r0, #20]
 8014f70:	59d2      	ldr	r2, [r2, r7]
 8014f72:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8014f76:	eddf 6a4b 	vldr	s13, [pc, #300]	; 80150a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8014f7a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8014f7e:	ee07 4a10 	vmov	s14, r4
 8014f82:	6804      	ldr	r4, [r0, #0]
 8014f84:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8014f88:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014f8c:	ee07 2a90 	vmov	s15, r2
 8014f90:	ee27 7a26 	vmul.f32	s14, s14, s13
 8014f94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014f98:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014f9c:	edd3 6a00 	vldr	s13, [r3]
 8014fa0:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014fa4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8014fa8:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014fac:	edc0 6a07 	vstr	s13, [r0, #28]
 8014fb0:	edd0 6a01 	vldr	s13, [r0, #4]
 8014fb4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8014fb8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014fbc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8014fc0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014fc4:	ed80 6a08 	vstr	s12, [r0, #32]
 8014fc8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8014fca:	6242      	str	r2, [r0, #36]	; 0x24
 8014fcc:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8014fd0:	ed93 6a03 	vldr	s12, [r3, #12]
 8014fd4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014fd8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014fdc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8014fe0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8014fe4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014fe8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8014fec:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014ff0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8014ff4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014ff6:	6302      	str	r2, [r0, #48]	; 0x30
 8014ff8:	ed93 6a06 	vldr	s12, [r3, #24]
 8014ffc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8015000:	eea5 6a87 	vfma.f32	s12, s11, s14
 8015004:	eeb0 7a46 	vmov.f32	s14, s12
 8015008:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801500c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8015010:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8015014:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8015018:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801501c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8015020:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8015024:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8015026:	63c3      	str	r3, [r0, #60]	; 0x3c
 8015028:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801502c:	2410      	movs	r4, #16
 801502e:	f1c5 0501 	rsb	r5, r5, #1
 8015032:	fb9e fef4 	sdiv	lr, lr, r4
 8015036:	f015 050f 	ands.w	r5, r5, #15
 801503a:	bf18      	it	ne
 801503c:	2501      	movne	r5, #1
 801503e:	ebae 0e05 	sub.w	lr, lr, r5
 8015042:	e753      	b.n	8014eec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8015044:	f04f 0910 	mov.w	r9, #16
 8015048:	f1c5 0501 	rsb	r5, r5, #1
 801504c:	fb94 f4f9 	sdiv	r4, r4, r9
 8015050:	f015 050f 	ands.w	r5, r5, #15
 8015054:	bf18      	it	ne
 8015056:	2501      	movne	r5, #1
 8015058:	1b64      	subs	r4, r4, r5
 801505a:	e755      	b.n	8014f08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801505c:	4264      	negs	r4, r4
 801505e:	fb94 fef6 	sdiv	lr, r4, r6
 8015062:	f1ce 0800 	rsb	r8, lr, #0
 8015066:	fb06 441e 	mls	r4, r6, lr, r4
 801506a:	f8c0 8000 	str.w	r8, [r0]
 801506e:	6104      	str	r4, [r0, #16]
 8015070:	2c00      	cmp	r4, #0
 8015072:	f43f af6e 	beq.w	8014f52 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8015076:	ea6f 0e0e 	mvn.w	lr, lr
 801507a:	1b34      	subs	r4, r6, r4
 801507c:	f8c0 e000 	str.w	lr, [r0]
 8015080:	e766      	b.n	8014f50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8015082:	426d      	negs	r5, r5
 8015084:	fb95 f4f6 	sdiv	r4, r5, r6
 8015088:	f1c4 0e00 	rsb	lr, r4, #0
 801508c:	fb06 5514 	mls	r5, r6, r4, r5
 8015090:	f8c0 e004 	str.w	lr, [r0, #4]
 8015094:	6085      	str	r5, [r0, #8]
 8015096:	2d00      	cmp	r5, #0
 8015098:	f43f af64 	beq.w	8014f64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801509c:	43e4      	mvns	r4, r4
 801509e:	1b75      	subs	r5, r6, r5
 80150a0:	6044      	str	r4, [r0, #4]
 80150a2:	e75e      	b.n	8014f62 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80150a4:	3d800000 	.word	0x3d800000

080150a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80150a8:	4b01      	ldr	r3, [pc, #4]	; (80150b0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80150aa:	6018      	str	r0, [r3, #0]
 80150ac:	4770      	bx	lr
 80150ae:	bf00      	nop
 80150b0:	24001f38 	.word	0x24001f38

080150b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80150b4:	4b06      	ldr	r3, [pc, #24]	; (80150d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80150b6:	881a      	ldrh	r2, [r3, #0]
 80150b8:	4282      	cmp	r2, r0
 80150ba:	d807      	bhi.n	80150cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80150bc:	4b05      	ldr	r3, [pc, #20]	; (80150d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80150be:	881b      	ldrh	r3, [r3, #0]
 80150c0:	4413      	add	r3, r2
 80150c2:	4298      	cmp	r0, r3
 80150c4:	bfac      	ite	ge
 80150c6:	2000      	movge	r0, #0
 80150c8:	2001      	movlt	r0, #1
 80150ca:	4770      	bx	lr
 80150cc:	2000      	movs	r0, #0
 80150ce:	4770      	bx	lr
 80150d0:	24001f58 	.word	0x24001f58
 80150d4:	24001f5c 	.word	0x24001f5c

080150d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80150d8:	b508      	push	{r3, lr}
 80150da:	4601      	mov	r1, r0
 80150dc:	f7ff ffea 	bl	80150b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80150e0:	b118      	cbz	r0, 80150ea <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80150e2:	4b02      	ldr	r3, [pc, #8]	; (80150ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80150e4:	681b      	ldr	r3, [r3, #0]
 80150e6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80150ea:	bd08      	pop	{r3, pc}
 80150ec:	24001f3c 	.word	0x24001f3c

080150f0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80150f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80150f2:	4c24      	ldr	r4, [pc, #144]	; (8015184 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80150f4:	6823      	ldr	r3, [r4, #0]
 80150f6:	2b00      	cmp	r3, #0
 80150f8:	d042      	beq.n	8015180 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80150fa:	4a23      	ldr	r2, [pc, #140]	; (8015188 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80150fc:	4d23      	ldr	r5, [pc, #140]	; (801518c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80150fe:	8811      	ldrh	r1, [r2, #0]
 8015100:	f8b5 c000 	ldrh.w	ip, [r5]
 8015104:	4822      	ldr	r0, [pc, #136]	; (8015190 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8015106:	4461      	add	r1, ip
 8015108:	1c4a      	adds	r2, r1, #1
 801510a:	008f      	lsls	r7, r1, #2
 801510c:	f022 0201 	bic.w	r2, r2, #1
 8015110:	19de      	adds	r6, r3, r7
 8015112:	0412      	lsls	r2, r2, #16
 8015114:	6006      	str	r6, [r0, #0]
 8015116:	4e1f      	ldr	r6, [pc, #124]	; (8015194 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8015118:	0c12      	lsrs	r2, r2, #16
 801511a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801511e:	19da      	adds	r2, r3, r7
 8015120:	6032      	str	r2, [r6, #0]
 8015122:	220e      	movs	r2, #14
 8015124:	fb02 f20c 	mul.w	r2, r2, ip
 8015128:	3203      	adds	r2, #3
 801512a:	f022 0203 	bic.w	r2, r2, #3
 801512e:	443a      	add	r2, r7
 8015130:	4f19      	ldr	r7, [pc, #100]	; (8015198 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8015132:	4413      	add	r3, r2
 8015134:	603b      	str	r3, [r7, #0]
 8015136:	2300      	movs	r3, #0
 8015138:	4f18      	ldr	r7, [pc, #96]	; (801519c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801513a:	469c      	mov	ip, r3
 801513c:	803b      	strh	r3, [r7, #0]
 801513e:	4f18      	ldr	r7, [pc, #96]	; (80151a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8015140:	683f      	ldr	r7, [r7, #0]
 8015142:	1aba      	subs	r2, r7, r2
 8015144:	4f17      	ldr	r7, [pc, #92]	; (80151a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8015146:	603a      	str	r2, [r7, #0]
 8015148:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801514c:	4a16      	ldr	r2, [pc, #88]	; (80151a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801514e:	8013      	strh	r3, [r2, #0]
 8015150:	428b      	cmp	r3, r1
 8015152:	d10d      	bne.n	8015170 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8015154:	882d      	ldrh	r5, [r5, #0]
 8015156:	2300      	movs	r3, #0
 8015158:	6830      	ldr	r0, [r6, #0]
 801515a:	240e      	movs	r4, #14
 801515c:	429d      	cmp	r5, r3
 801515e:	d90f      	bls.n	8015180 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8015160:	fb04 0203 	mla	r2, r4, r3, r0
 8015164:	3301      	adds	r3, #1
 8015166:	7b11      	ldrb	r1, [r2, #12]
 8015168:	f36f 1145 	bfc	r1, #5, #1
 801516c:	7311      	strb	r1, [r2, #12]
 801516e:	e7f5      	b.n	801515c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8015170:	6822      	ldr	r2, [r4, #0]
 8015172:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8015176:	6802      	ldr	r2, [r0, #0]
 8015178:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801517c:	3301      	adds	r3, #1
 801517e:	e7e7      	b.n	8015150 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8015180:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015182:	bf00      	nop
 8015184:	24001f3c 	.word	0x24001f3c
 8015188:	24001f58 	.word	0x24001f58
 801518c:	24001f5c 	.word	0x24001f5c
 8015190:	24001f50 	.word	0x24001f50
 8015194:	24001f40 	.word	0x24001f40
 8015198:	24001f48 	.word	0x24001f48
 801519c:	24001f5a 	.word	0x24001f5a
 80151a0:	24001f44 	.word	0x24001f44
 80151a4:	24001f54 	.word	0x24001f54
 80151a8:	24001f4c 	.word	0x24001f4c

080151ac <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80151ac:	4b06      	ldr	r3, [pc, #24]	; (80151c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80151ae:	681b      	ldr	r3, [r3, #0]
 80151b0:	b943      	cbnz	r3, 80151c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80151b2:	b139      	cbz	r1, 80151c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80151b4:	4b05      	ldr	r3, [pc, #20]	; (80151cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80151b6:	801a      	strh	r2, [r3, #0]
 80151b8:	4b05      	ldr	r3, [pc, #20]	; (80151d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80151ba:	6019      	str	r1, [r3, #0]
 80151bc:	4b05      	ldr	r3, [pc, #20]	; (80151d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80151be:	6018      	str	r0, [r3, #0]
 80151c0:	f7ff bf96 	b.w	80150f0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80151c4:	4770      	bx	lr
 80151c6:	bf00      	nop
 80151c8:	24001f48 	.word	0x24001f48
 80151cc:	24001f5c 	.word	0x24001f5c
 80151d0:	24001f44 	.word	0x24001f44
 80151d4:	24001f3c 	.word	0x24001f3c

080151d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80151d8:	b470      	push	{r4, r5, r6}
 80151da:	4c07      	ldr	r4, [pc, #28]	; (80151f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80151dc:	4605      	mov	r5, r0
 80151de:	4610      	mov	r0, r2
 80151e0:	9a03      	ldr	r2, [sp, #12]
 80151e2:	6826      	ldr	r6, [r4, #0]
 80151e4:	b936      	cbnz	r6, 80151f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80151e6:	6025      	str	r5, [r4, #0]
 80151e8:	4c04      	ldr	r4, [pc, #16]	; (80151fc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80151ea:	8021      	strh	r1, [r4, #0]
 80151ec:	4619      	mov	r1, r3
 80151ee:	bc70      	pop	{r4, r5, r6}
 80151f0:	f7ff bfdc 	b.w	80151ac <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80151f4:	bc70      	pop	{r4, r5, r6}
 80151f6:	4770      	bx	lr
 80151f8:	24001f60 	.word	0x24001f60
 80151fc:	24001f58 	.word	0x24001f58

08015200 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8015200:	4a12      	ldr	r2, [pc, #72]	; (801524c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8015202:	8803      	ldrh	r3, [r0, #0]
 8015204:	8812      	ldrh	r2, [r2, #0]
 8015206:	4293      	cmp	r3, r2
 8015208:	d207      	bcs.n	801521a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801520a:	4a11      	ldr	r2, [pc, #68]	; (8015250 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801520c:	2114      	movs	r1, #20
 801520e:	6812      	ldr	r2, [r2, #0]
 8015210:	fb01 2303 	mla	r3, r1, r3, r2
 8015214:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8015218:	4770      	bx	lr
 801521a:	490e      	ldr	r1, [pc, #56]	; (8015254 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801521c:	8809      	ldrh	r1, [r1, #0]
 801521e:	4411      	add	r1, r2
 8015220:	428b      	cmp	r3, r1
 8015222:	da04      	bge.n	801522e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8015224:	1a9b      	subs	r3, r3, r2
 8015226:	4a0c      	ldr	r2, [pc, #48]	; (8015258 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8015228:	210e      	movs	r1, #14
 801522a:	6812      	ldr	r2, [r2, #0]
 801522c:	e7f0      	b.n	8015210 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801522e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015232:	4293      	cmp	r3, r2
 8015234:	d108      	bne.n	8015248 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8015236:	4b09      	ldr	r3, [pc, #36]	; (801525c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8015238:	781b      	ldrb	r3, [r3, #0]
 801523a:	b91b      	cbnz	r3, 8015244 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801523c:	4b08      	ldr	r3, [pc, #32]	; (8015260 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801523e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8015242:	4770      	bx	lr
 8015244:	4b07      	ldr	r3, [pc, #28]	; (8015264 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8015246:	e7fa      	b.n	801523e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8015248:	2000      	movs	r0, #0
 801524a:	4770      	bx	lr
 801524c:	24001f58 	.word	0x24001f58
 8015250:	24001f60 	.word	0x24001f60
 8015254:	24001f5c 	.word	0x24001f5c
 8015258:	24001f40 	.word	0x24001f40
 801525c:	24001ed0 	.word	0x24001ed0
 8015260:	24001ed2 	.word	0x24001ed2
 8015264:	24001ed4 	.word	0x24001ed4

08015268 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8015268:	4a12      	ldr	r2, [pc, #72]	; (80152b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801526a:	8803      	ldrh	r3, [r0, #0]
 801526c:	8812      	ldrh	r2, [r2, #0]
 801526e:	4293      	cmp	r3, r2
 8015270:	d207      	bcs.n	8015282 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8015272:	4a11      	ldr	r2, [pc, #68]	; (80152b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8015274:	2114      	movs	r1, #20
 8015276:	6812      	ldr	r2, [r2, #0]
 8015278:	fb01 2303 	mla	r3, r1, r3, r2
 801527c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8015280:	4770      	bx	lr
 8015282:	490e      	ldr	r1, [pc, #56]	; (80152bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8015284:	8809      	ldrh	r1, [r1, #0]
 8015286:	4411      	add	r1, r2
 8015288:	428b      	cmp	r3, r1
 801528a:	da04      	bge.n	8015296 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801528c:	1a9b      	subs	r3, r3, r2
 801528e:	4a0c      	ldr	r2, [pc, #48]	; (80152c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8015290:	210e      	movs	r1, #14
 8015292:	6812      	ldr	r2, [r2, #0]
 8015294:	e7f0      	b.n	8015278 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8015296:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801529a:	4293      	cmp	r3, r2
 801529c:	d108      	bne.n	80152b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801529e:	4b09      	ldr	r3, [pc, #36]	; (80152c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80152a0:	781b      	ldrb	r3, [r3, #0]
 80152a2:	b91b      	cbnz	r3, 80152ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80152a4:	4b08      	ldr	r3, [pc, #32]	; (80152c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80152a6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80152aa:	4770      	bx	lr
 80152ac:	4b07      	ldr	r3, [pc, #28]	; (80152cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80152ae:	e7fa      	b.n	80152a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80152b0:	2000      	movs	r0, #0
 80152b2:	4770      	bx	lr
 80152b4:	24001f58 	.word	0x24001f58
 80152b8:	24001f60 	.word	0x24001f60
 80152bc:	24001f5c 	.word	0x24001f5c
 80152c0:	24001f40 	.word	0x24001f40
 80152c4:	24001ed0 	.word	0x24001ed0
 80152c8:	24001ed4 	.word	0x24001ed4
 80152cc:	24001ed2 	.word	0x24001ed2

080152d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80152d0:	4a1f      	ldr	r2, [pc, #124]	; (8015350 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80152d2:	b510      	push	{r4, lr}
 80152d4:	880b      	ldrh	r3, [r1, #0]
 80152d6:	8812      	ldrh	r2, [r2, #0]
 80152d8:	4293      	cmp	r3, r2
 80152da:	d213      	bcs.n	8015304 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80152dc:	4a1d      	ldr	r2, [pc, #116]	; (8015354 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80152de:	2114      	movs	r1, #20
 80152e0:	6812      	ldr	r2, [r2, #0]
 80152e2:	fb01 2303 	mla	r3, r1, r3, r2
 80152e6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80152ea:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80152ee:	8a1a      	ldrh	r2, [r3, #16]
 80152f0:	8a5b      	ldrh	r3, [r3, #18]
 80152f2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80152f6:	8004      	strh	r4, [r0, #0]
 80152f8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80152fc:	8041      	strh	r1, [r0, #2]
 80152fe:	8082      	strh	r2, [r0, #4]
 8015300:	80c3      	strh	r3, [r0, #6]
 8015302:	e00e      	b.n	8015322 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8015304:	4914      	ldr	r1, [pc, #80]	; (8015358 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8015306:	8809      	ldrh	r1, [r1, #0]
 8015308:	4411      	add	r1, r2
 801530a:	428b      	cmp	r3, r1
 801530c:	da0a      	bge.n	8015324 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801530e:	1a9b      	subs	r3, r3, r2
 8015310:	4a12      	ldr	r2, [pc, #72]	; (801535c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8015312:	210e      	movs	r1, #14
 8015314:	6812      	ldr	r2, [r2, #0]
 8015316:	fb01 2303 	mla	r3, r1, r3, r2
 801531a:	681a      	ldr	r2, [r3, #0]
 801531c:	6002      	str	r2, [r0, #0]
 801531e:	685a      	ldr	r2, [r3, #4]
 8015320:	6042      	str	r2, [r0, #4]
 8015322:	bd10      	pop	{r4, pc}
 8015324:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015328:	4293      	cmp	r3, r2
 801532a:	d10b      	bne.n	8015344 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801532c:	4b0c      	ldr	r3, [pc, #48]	; (8015360 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801532e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015332:	4b0c      	ldr	r3, [pc, #48]	; (8015364 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8015334:	8081      	strh	r1, [r0, #4]
 8015336:	f9b3 2000 	ldrsh.w	r2, [r3]
 801533a:	2300      	movs	r3, #0
 801533c:	80c2      	strh	r2, [r0, #6]
 801533e:	8003      	strh	r3, [r0, #0]
 8015340:	8043      	strh	r3, [r0, #2]
 8015342:	e7ee      	b.n	8015322 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8015344:	2300      	movs	r3, #0
 8015346:	8003      	strh	r3, [r0, #0]
 8015348:	8043      	strh	r3, [r0, #2]
 801534a:	8083      	strh	r3, [r0, #4]
 801534c:	e7d8      	b.n	8015300 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801534e:	bf00      	nop
 8015350:	24001f58 	.word	0x24001f58
 8015354:	24001f60 	.word	0x24001f60
 8015358:	24001f5c 	.word	0x24001f5c
 801535c:	24001f40 	.word	0x24001f40
 8015360:	24001ecc 	.word	0x24001ecc
 8015364:	24001ece 	.word	0x24001ece

08015368 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8015368:	4a17      	ldr	r2, [pc, #92]	; (80153c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801536a:	8803      	ldrh	r3, [r0, #0]
 801536c:	8812      	ldrh	r2, [r2, #0]
 801536e:	4293      	cmp	r3, r2
 8015370:	d213      	bcs.n	801539a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8015372:	4a16      	ldr	r2, [pc, #88]	; (80153cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8015374:	2114      	movs	r1, #20
 8015376:	6812      	ldr	r2, [r2, #0]
 8015378:	fb01 2303 	mla	r3, r1, r3, r2
 801537c:	8a1a      	ldrh	r2, [r3, #16]
 801537e:	8919      	ldrh	r1, [r3, #8]
 8015380:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015384:	428a      	cmp	r2, r1
 8015386:	db1d      	blt.n	80153c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015388:	8a58      	ldrh	r0, [r3, #18]
 801538a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801538e:	895b      	ldrh	r3, [r3, #10]
 8015390:	4298      	cmp	r0, r3
 8015392:	bfac      	ite	ge
 8015394:	2000      	movge	r0, #0
 8015396:	2001      	movlt	r0, #1
 8015398:	4770      	bx	lr
 801539a:	490d      	ldr	r1, [pc, #52]	; (80153d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801539c:	8809      	ldrh	r1, [r1, #0]
 801539e:	4411      	add	r1, r2
 80153a0:	428b      	cmp	r3, r1
 80153a2:	da0d      	bge.n	80153c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80153a4:	1a9b      	subs	r3, r3, r2
 80153a6:	4a0b      	ldr	r2, [pc, #44]	; (80153d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80153a8:	210e      	movs	r1, #14
 80153aa:	6812      	ldr	r2, [r2, #0]
 80153ac:	fb01 2303 	mla	r3, r1, r3, r2
 80153b0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80153b4:	891a      	ldrh	r2, [r3, #8]
 80153b6:	4291      	cmp	r1, r2
 80153b8:	db04      	blt.n	80153c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80153ba:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80153be:	e7e6      	b.n	801538e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80153c0:	2000      	movs	r0, #0
 80153c2:	4770      	bx	lr
 80153c4:	2001      	movs	r0, #1
 80153c6:	4770      	bx	lr
 80153c8:	24001f58 	.word	0x24001f58
 80153cc:	24001f60 	.word	0x24001f60
 80153d0:	24001f5c 	.word	0x24001f5c
 80153d4:	24001f40 	.word	0x24001f40

080153d8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80153d8:	4a12      	ldr	r2, [pc, #72]	; (8015424 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80153da:	8803      	ldrh	r3, [r0, #0]
 80153dc:	8811      	ldrh	r1, [r2, #0]
 80153de:	428b      	cmp	r3, r1
 80153e0:	d20b      	bcs.n	80153fa <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80153e2:	4a11      	ldr	r2, [pc, #68]	; (8015428 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80153e4:	6812      	ldr	r2, [r2, #0]
 80153e6:	b112      	cbz	r2, 80153ee <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80153e8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80153ec:	b9c0      	cbnz	r0, 8015420 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80153ee:	4a0f      	ldr	r2, [pc, #60]	; (801542c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80153f0:	6811      	ldr	r1, [r2, #0]
 80153f2:	2214      	movs	r2, #20
 80153f4:	4353      	muls	r3, r2
 80153f6:	58c8      	ldr	r0, [r1, r3]
 80153f8:	4770      	bx	lr
 80153fa:	4a0d      	ldr	r2, [pc, #52]	; (8015430 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80153fc:	8812      	ldrh	r2, [r2, #0]
 80153fe:	440a      	add	r2, r1
 8015400:	4293      	cmp	r3, r2
 8015402:	da04      	bge.n	801540e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8015404:	4a08      	ldr	r2, [pc, #32]	; (8015428 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015406:	6812      	ldr	r2, [r2, #0]
 8015408:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801540c:	4770      	bx	lr
 801540e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015412:	4293      	cmp	r3, r2
 8015414:	d103      	bne.n	801541e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8015416:	4b07      	ldr	r3, [pc, #28]	; (8015434 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8015418:	681b      	ldr	r3, [r3, #0]
 801541a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801541c:	4770      	bx	lr
 801541e:	2000      	movs	r0, #0
 8015420:	4770      	bx	lr
 8015422:	bf00      	nop
 8015424:	24001f58 	.word	0x24001f58
 8015428:	24001f3c 	.word	0x24001f3c
 801542c:	24001f60 	.word	0x24001f60
 8015430:	24001f5c 	.word	0x24001f5c
 8015434:	24001ed8 	.word	0x24001ed8

08015438 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8015438:	4b24      	ldr	r3, [pc, #144]	; (80154cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801543a:	8802      	ldrh	r2, [r0, #0]
 801543c:	8818      	ldrh	r0, [r3, #0]
 801543e:	4282      	cmp	r2, r0
 8015440:	d221      	bcs.n	8015486 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8015442:	4b23      	ldr	r3, [pc, #140]	; (80154d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8015444:	6819      	ldr	r1, [r3, #0]
 8015446:	2314      	movs	r3, #20
 8015448:	fb03 1302 	mla	r3, r3, r2, r1
 801544c:	6858      	ldr	r0, [r3, #4]
 801544e:	2800      	cmp	r0, #0
 8015450:	d03a      	beq.n	80154c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015452:	4920      	ldr	r1, [pc, #128]	; (80154d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015454:	6809      	ldr	r1, [r1, #0]
 8015456:	2900      	cmp	r1, #0
 8015458:	d036      	beq.n	80154c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801545a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801545e:	2900      	cmp	r1, #0
 8015460:	d032      	beq.n	80154c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015462:	891a      	ldrh	r2, [r3, #8]
 8015464:	8958      	ldrh	r0, [r3, #10]
 8015466:	4350      	muls	r0, r2
 8015468:	7c5a      	ldrb	r2, [r3, #17]
 801546a:	7cdb      	ldrb	r3, [r3, #19]
 801546c:	0952      	lsrs	r2, r2, #5
 801546e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8015472:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8015476:	2b0b      	cmp	r3, #11
 8015478:	bf18      	it	ne
 801547a:	0040      	lslne	r0, r0, #1
 801547c:	3003      	adds	r0, #3
 801547e:	f020 0003 	bic.w	r0, r0, #3
 8015482:	4408      	add	r0, r1
 8015484:	4770      	bx	lr
 8015486:	4b14      	ldr	r3, [pc, #80]	; (80154d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8015488:	881b      	ldrh	r3, [r3, #0]
 801548a:	4403      	add	r3, r0
 801548c:	429a      	cmp	r2, r3
 801548e:	da1a      	bge.n	80154c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015490:	4b12      	ldr	r3, [pc, #72]	; (80154dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8015492:	1a10      	subs	r0, r2, r0
 8015494:	210e      	movs	r1, #14
 8015496:	681b      	ldr	r3, [r3, #0]
 8015498:	fb01 3000 	mla	r0, r1, r0, r3
 801549c:	7b03      	ldrb	r3, [r0, #12]
 801549e:	f003 031f 	and.w	r3, r3, #31
 80154a2:	2b0b      	cmp	r3, #11
 80154a4:	d10b      	bne.n	80154be <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80154a6:	8903      	ldrh	r3, [r0, #8]
 80154a8:	8940      	ldrh	r0, [r0, #10]
 80154aa:	4358      	muls	r0, r3
 80154ac:	4b09      	ldr	r3, [pc, #36]	; (80154d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80154ae:	3003      	adds	r0, #3
 80154b0:	6819      	ldr	r1, [r3, #0]
 80154b2:	f020 0303 	bic.w	r3, r0, #3
 80154b6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80154ba:	4418      	add	r0, r3
 80154bc:	4770      	bx	lr
 80154be:	2b0d      	cmp	r3, #13
 80154c0:	d101      	bne.n	80154c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80154c2:	300d      	adds	r0, #13
 80154c4:	4770      	bx	lr
 80154c6:	2000      	movs	r0, #0
 80154c8:	4770      	bx	lr
 80154ca:	bf00      	nop
 80154cc:	24001f58 	.word	0x24001f58
 80154d0:	24001f60 	.word	0x24001f60
 80154d4:	24001f3c 	.word	0x24001f3c
 80154d8:	24001f5c 	.word	0x24001f5c
 80154dc:	24001f40 	.word	0x24001f40

080154e0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80154e0:	4a17      	ldr	r2, [pc, #92]	; (8015540 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80154e2:	b510      	push	{r4, lr}
 80154e4:	8803      	ldrh	r3, [r0, #0]
 80154e6:	8812      	ldrh	r2, [r2, #0]
 80154e8:	4293      	cmp	r3, r2
 80154ea:	d20c      	bcs.n	8015506 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80154ec:	4a15      	ldr	r2, [pc, #84]	; (8015544 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80154ee:	2114      	movs	r1, #20
 80154f0:	6812      	ldr	r2, [r2, #0]
 80154f2:	fb01 2303 	mla	r3, r1, r3, r2
 80154f6:	7c58      	ldrb	r0, [r3, #17]
 80154f8:	0942      	lsrs	r2, r0, #5
 80154fa:	7cd8      	ldrb	r0, [r3, #19]
 80154fc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8015500:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8015504:	bd10      	pop	{r4, pc}
 8015506:	4910      	ldr	r1, [pc, #64]	; (8015548 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8015508:	8809      	ldrh	r1, [r1, #0]
 801550a:	4411      	add	r1, r2
 801550c:	428b      	cmp	r3, r1
 801550e:	da09      	bge.n	8015524 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8015510:	1a9b      	subs	r3, r3, r2
 8015512:	4a0e      	ldr	r2, [pc, #56]	; (801554c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8015514:	210e      	movs	r1, #14
 8015516:	6812      	ldr	r2, [r2, #0]
 8015518:	fb01 2303 	mla	r3, r1, r3, r2
 801551c:	7b18      	ldrb	r0, [r3, #12]
 801551e:	f000 001f 	and.w	r0, r0, #31
 8015522:	e7ef      	b.n	8015504 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8015524:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015528:	4293      	cmp	r3, r2
 801552a:	d106      	bne.n	801553a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801552c:	f7f6 fafe 	bl	800bb2c <_ZN8touchgfx3HAL3lcdEv>
 8015530:	6803      	ldr	r3, [r0, #0]
 8015532:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015536:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015538:	4718      	bx	r3
 801553a:	2000      	movs	r0, #0
 801553c:	e7e2      	b.n	8015504 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801553e:	bf00      	nop
 8015540:	24001f58 	.word	0x24001f58
 8015544:	24001f60 	.word	0x24001f60
 8015548:	24001f5c 	.word	0x24001f5c
 801554c:	24001f40 	.word	0x24001f40

08015550 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8015550:	2010      	movs	r0, #16
 8015552:	4770      	bx	lr

08015554 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8015554:	2000      	movs	r0, #0
 8015556:	4770      	bx	lr

08015558 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8015558:	4b02      	ldr	r3, [pc, #8]	; (8015564 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801555a:	8818      	ldrh	r0, [r3, #0]
 801555c:	0040      	lsls	r0, r0, #1
 801555e:	b280      	uxth	r0, r0
 8015560:	4770      	bx	lr
 8015562:	bf00      	nop
 8015564:	24001ed2 	.word	0x24001ed2

08015568 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8015568:	2bff      	cmp	r3, #255	; 0xff
 801556a:	d050      	beq.n	801560e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801556c:	2a0b      	cmp	r2, #11
 801556e:	d04a      	beq.n	8015606 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015570:	d80e      	bhi.n	8015590 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8015572:	2a03      	cmp	r2, #3
 8015574:	d03f      	beq.n	80155f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8015576:	d804      	bhi.n	8015582 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8015578:	2a01      	cmp	r2, #1
 801557a:	d03e      	beq.n	80155fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801557c:	d93f      	bls.n	80155fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801557e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8015580:	4770      	bx	lr
 8015582:	2a09      	cmp	r2, #9
 8015584:	d03f      	beq.n	8015606 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015586:	d83c      	bhi.n	8015602 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8015588:	2a08      	cmp	r2, #8
 801558a:	d03a      	beq.n	8015602 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801558c:	2000      	movs	r0, #0
 801558e:	4770      	bx	lr
 8015590:	2a2f      	cmp	r2, #47	; 0x2f
 8015592:	d024      	beq.n	80155de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8015594:	d80d      	bhi.n	80155b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8015596:	2a2d      	cmp	r2, #45	; 0x2d
 8015598:	d014      	beq.n	80155c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801559a:	d826      	bhi.n	80155ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801559c:	2a2c      	cmp	r2, #44	; 0x2c
 801559e:	d1f5      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80155a0:	684b      	ldr	r3, [r1, #4]
 80155a2:	781b      	ldrb	r3, [r3, #0]
 80155a4:	2b01      	cmp	r3, #1
 80155a6:	d018      	beq.n	80155da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80155a8:	d323      	bcc.n	80155f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80155aa:	2b02      	cmp	r3, #2
 80155ac:	d1ee      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80155ae:	6880      	ldr	r0, [r0, #8]
 80155b0:	4770      	bx	lr
 80155b2:	2a31      	cmp	r2, #49	; 0x31
 80155b4:	d004      	beq.n	80155c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80155b6:	d328      	bcc.n	801560a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80155b8:	2a32      	cmp	r2, #50	; 0x32
 80155ba:	d026      	beq.n	801560a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80155bc:	2a33      	cmp	r2, #51	; 0x33
 80155be:	d1e5      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80155c0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80155c2:	4770      	bx	lr
 80155c4:	684b      	ldr	r3, [r1, #4]
 80155c6:	781b      	ldrb	r3, [r3, #0]
 80155c8:	2b01      	cmp	r3, #1
 80155ca:	d004      	beq.n	80155d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80155cc:	d30b      	bcc.n	80155e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80155ce:	2b02      	cmp	r3, #2
 80155d0:	d1dc      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80155d2:	6900      	ldr	r0, [r0, #16]
 80155d4:	4770      	bx	lr
 80155d6:	6a00      	ldr	r0, [r0, #32]
 80155d8:	4770      	bx	lr
 80155da:	6980      	ldr	r0, [r0, #24]
 80155dc:	4770      	bx	lr
 80155de:	684b      	ldr	r3, [r1, #4]
 80155e0:	781b      	ldrb	r3, [r3, #0]
 80155e2:	2b00      	cmp	r3, #0
 80155e4:	d1d2      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80155e6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80155e8:	4770      	bx	lr
 80155ea:	684b      	ldr	r3, [r1, #4]
 80155ec:	781b      	ldrb	r3, [r3, #0]
 80155ee:	2b00      	cmp	r3, #0
 80155f0:	d1cc      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80155f2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80155f4:	4770      	bx	lr
 80155f6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80155f8:	4770      	bx	lr
 80155fa:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80155fc:	4770      	bx	lr
 80155fe:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8015600:	4770      	bx	lr
 8015602:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8015604:	4770      	bx	lr
 8015606:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8015608:	4770      	bx	lr
 801560a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801560c:	4770      	bx	lr
 801560e:	2a0b      	cmp	r2, #11
 8015610:	d049      	beq.n	80156a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015612:	d80e      	bhi.n	8015632 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8015614:	2a03      	cmp	r2, #3
 8015616:	d040      	beq.n	801569a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8015618:	d804      	bhi.n	8015624 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801561a:	2a01      	cmp	r2, #1
 801561c:	d03f      	beq.n	801569e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801561e:	d940      	bls.n	80156a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8015620:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8015622:	4770      	bx	lr
 8015624:	2a09      	cmp	r2, #9
 8015626:	d03e      	beq.n	80156a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015628:	d801      	bhi.n	801562e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801562a:	2a08      	cmp	r2, #8
 801562c:	d1ae      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801562e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8015630:	4770      	bx	lr
 8015632:	2a2f      	cmp	r2, #47	; 0x2f
 8015634:	d024      	beq.n	8015680 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8015636:	d80d      	bhi.n	8015654 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8015638:	2a2d      	cmp	r2, #45	; 0x2d
 801563a:	d014      	beq.n	8015666 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801563c:	d826      	bhi.n	801568c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801563e:	2a2c      	cmp	r2, #44	; 0x2c
 8015640:	d1a4      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015642:	684b      	ldr	r3, [r1, #4]
 8015644:	781b      	ldrb	r3, [r3, #0]
 8015646:	2b01      	cmp	r3, #1
 8015648:	d018      	beq.n	801567c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801564a:	d324      	bcc.n	8015696 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801564c:	2b02      	cmp	r3, #2
 801564e:	d19d      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015650:	68c0      	ldr	r0, [r0, #12]
 8015652:	4770      	bx	lr
 8015654:	2a31      	cmp	r2, #49	; 0x31
 8015656:	d004      	beq.n	8015662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8015658:	d327      	bcc.n	80156aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801565a:	2a32      	cmp	r2, #50	; 0x32
 801565c:	d025      	beq.n	80156aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801565e:	2a33      	cmp	r2, #51	; 0x33
 8015660:	d194      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015662:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8015664:	4770      	bx	lr
 8015666:	684b      	ldr	r3, [r1, #4]
 8015668:	781b      	ldrb	r3, [r3, #0]
 801566a:	2b01      	cmp	r3, #1
 801566c:	d004      	beq.n	8015678 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801566e:	d30b      	bcc.n	8015688 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8015670:	2b02      	cmp	r3, #2
 8015672:	d18b      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015674:	6940      	ldr	r0, [r0, #20]
 8015676:	4770      	bx	lr
 8015678:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801567a:	4770      	bx	lr
 801567c:	69c0      	ldr	r0, [r0, #28]
 801567e:	4770      	bx	lr
 8015680:	684b      	ldr	r3, [r1, #4]
 8015682:	781b      	ldrb	r3, [r3, #0]
 8015684:	2b00      	cmp	r3, #0
 8015686:	d181      	bne.n	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015688:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801568a:	4770      	bx	lr
 801568c:	684b      	ldr	r3, [r1, #4]
 801568e:	781b      	ldrb	r3, [r3, #0]
 8015690:	2b00      	cmp	r3, #0
 8015692:	f47f af7b 	bne.w	801558c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015696:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8015698:	4770      	bx	lr
 801569a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801569c:	4770      	bx	lr
 801569e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80156a0:	4770      	bx	lr
 80156a2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80156a4:	4770      	bx	lr
 80156a6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80156a8:	4770      	bx	lr
 80156aa:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80156ac:	4770      	bx	lr

080156ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156b2:	b087      	sub	sp, #28
 80156b4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80156b6:	9205      	str	r2, [sp, #20]
 80156b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80156bc:	9101      	str	r1, [sp, #4]
 80156be:	9202      	str	r2, [sp, #8]
 80156c0:	6841      	ldr	r1, [r0, #4]
 80156c2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80156c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80156ca:	fb01 2404 	mla	r4, r1, r4, r2
 80156ce:	6802      	ldr	r2, [r0, #0]
 80156d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80156d4:	f8de 2000 	ldr.w	r2, [lr]
 80156d8:	9203      	str	r2, [sp, #12]
 80156da:	f8de 2004 	ldr.w	r2, [lr, #4]
 80156de:	3204      	adds	r2, #4
 80156e0:	9204      	str	r2, [sp, #16]
 80156e2:	9a02      	ldr	r2, [sp, #8]
 80156e4:	43d6      	mvns	r6, r2
 80156e6:	b2f6      	uxtb	r6, r6
 80156e8:	9a01      	ldr	r2, [sp, #4]
 80156ea:	2a00      	cmp	r2, #0
 80156ec:	dc03      	bgt.n	80156f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80156ee:	9a05      	ldr	r2, [sp, #20]
 80156f0:	2a00      	cmp	r2, #0
 80156f2:	f340 8129 	ble.w	8015948 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80156f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80156f8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80156fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015700:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015702:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015706:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801570a:	2b00      	cmp	r3, #0
 801570c:	dd0e      	ble.n	801572c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801570e:	1408      	asrs	r0, r1, #16
 8015710:	d405      	bmi.n	801571e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015712:	4560      	cmp	r0, ip
 8015714:	da03      	bge.n	801571e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015716:	1410      	asrs	r0, r2, #16
 8015718:	d401      	bmi.n	801571e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801571a:	42b8      	cmp	r0, r7
 801571c:	db07      	blt.n	801572e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801571e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015720:	3b01      	subs	r3, #1
 8015722:	3402      	adds	r4, #2
 8015724:	4401      	add	r1, r0
 8015726:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015728:	4402      	add	r2, r0
 801572a:	e7ee      	b.n	801570a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801572c:	d071      	beq.n	8015812 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801572e:	1e58      	subs	r0, r3, #1
 8015730:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015732:	fb05 1500 	mla	r5, r5, r0, r1
 8015736:	142d      	asrs	r5, r5, #16
 8015738:	d45f      	bmi.n	80157fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801573a:	4565      	cmp	r5, ip
 801573c:	da5d      	bge.n	80157fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801573e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015740:	fb05 2000 	mla	r0, r5, r0, r2
 8015744:	1400      	asrs	r0, r0, #16
 8015746:	d458      	bmi.n	80157fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015748:	42b8      	cmp	r0, r7
 801574a:	da56      	bge.n	80157fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801574c:	4699      	mov	r9, r3
 801574e:	46a2      	mov	sl, r4
 8015750:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8015754:	f1b9 0f00 	cmp.w	r9, #0
 8015758:	dd57      	ble.n	801580a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801575a:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801575e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015762:	9803      	ldr	r0, [sp, #12]
 8015764:	140d      	asrs	r5, r1, #16
 8015766:	f109 39ff 	add.w	r9, r9, #4294967295
 801576a:	fb07 000c 	mla	r0, r7, ip, r0
 801576e:	5d40      	ldrb	r0, [r0, r5]
 8015770:	9d04      	ldr	r5, [sp, #16]
 8015772:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015776:	f8ba 5000 	ldrh.w	r5, [sl]
 801577a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801577e:	122f      	asrs	r7, r5, #8
 8015780:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015784:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015788:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801578c:	00ed      	lsls	r5, r5, #3
 801578e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015792:	fb17 f706 	smulbb	r7, r7, r6
 8015796:	b2ed      	uxtb	r5, r5
 8015798:	fb18 f806 	smulbb	r8, r8, r6
 801579c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80157a0:	10c7      	asrs	r7, r0, #3
 80157a2:	fb15 f506 	smulbb	r5, r5, r6
 80157a6:	00c0      	lsls	r0, r0, #3
 80157a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80157ac:	fa1f fc8c 	uxth.w	ip, ip
 80157b0:	b2c0      	uxtb	r0, r0
 80157b2:	fb07 870b 	mla	r7, r7, fp, r8
 80157b6:	fb00 500b 	mla	r0, r0, fp, r5
 80157ba:	f10c 0501 	add.w	r5, ip, #1
 80157be:	b2bf      	uxth	r7, r7
 80157c0:	b280      	uxth	r0, r0
 80157c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80157c6:	f107 0801 	add.w	r8, r7, #1
 80157ca:	1c45      	adds	r5, r0, #1
 80157cc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80157d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80157d4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80157d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80157da:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80157de:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80157e2:	4401      	add	r1, r0
 80157e4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80157e8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80157ea:	ea45 0c0c 	orr.w	ip, r5, ip
 80157ee:	4402      	add	r2, r0
 80157f0:	ea4c 0c08 	orr.w	ip, ip, r8
 80157f4:	f82a cb02 	strh.w	ip, [sl], #2
 80157f8:	e7ac      	b.n	8015754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80157fa:	f04f 0800 	mov.w	r8, #0
 80157fe:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8015802:	eb03 0008 	add.w	r0, r3, r8
 8015806:	2800      	cmp	r0, #0
 8015808:	dc41      	bgt.n	801588e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801580a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801580e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015812:	9b01      	ldr	r3, [sp, #4]
 8015814:	2b00      	cmp	r3, #0
 8015816:	f340 8097 	ble.w	8015948 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801581a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801581e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015820:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015824:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015828:	eef0 6a62 	vmov.f32	s13, s5
 801582c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015830:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015834:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015838:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801583c:	eef0 6a43 	vmov.f32	s13, s6
 8015840:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015844:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8015848:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801584c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015850:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015854:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015858:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801585c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015860:	ee12 2a90 	vmov	r2, s5
 8015864:	eef0 2a47 	vmov.f32	s5, s14
 8015868:	fb92 f3f3 	sdiv	r3, r2, r3
 801586c:	ee13 2a10 	vmov	r2, s6
 8015870:	9313      	str	r3, [sp, #76]	; 0x4c
 8015872:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015874:	eeb0 3a67 	vmov.f32	s6, s15
 8015878:	fb92 f3f3 	sdiv	r3, r2, r3
 801587c:	9314      	str	r3, [sp, #80]	; 0x50
 801587e:	9b01      	ldr	r3, [sp, #4]
 8015880:	9a05      	ldr	r2, [sp, #20]
 8015882:	3b01      	subs	r3, #1
 8015884:	9301      	str	r3, [sp, #4]
 8015886:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015888:	bf08      	it	eq
 801588a:	4613      	moveq	r3, r2
 801588c:	e72c      	b.n	80156e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801588e:	140f      	asrs	r7, r1, #16
 8015890:	d453      	bmi.n	801593a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015892:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015896:	42bd      	cmp	r5, r7
 8015898:	dd4f      	ble.n	801593a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801589a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801589e:	d44c      	bmi.n	801593a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80158a0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80158a4:	4560      	cmp	r0, ip
 80158a6:	dd48      	ble.n	801593a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80158a8:	9803      	ldr	r0, [sp, #12]
 80158aa:	b22d      	sxth	r5, r5
 80158ac:	fb0c 0505 	mla	r5, ip, r5, r0
 80158b0:	5de8      	ldrb	r0, [r5, r7]
 80158b2:	9d04      	ldr	r5, [sp, #16]
 80158b4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80158b8:	f06f 0501 	mvn.w	r5, #1
 80158bc:	fb05 fb08 	mul.w	fp, r5, r8
 80158c0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80158c4:	f834 500b 	ldrh.w	r5, [r4, fp]
 80158c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80158cc:	122f      	asrs	r7, r5, #8
 80158ce:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80158d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80158d6:	00ed      	lsls	r5, r5, #3
 80158d8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80158dc:	fb17 f706 	smulbb	r7, r7, r6
 80158e0:	b2ed      	uxtb	r5, r5
 80158e2:	fb19 f906 	smulbb	r9, r9, r6
 80158e6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80158ea:	10c7      	asrs	r7, r0, #3
 80158ec:	fb15 f506 	smulbb	r5, r5, r6
 80158f0:	00c0      	lsls	r0, r0, #3
 80158f2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80158f6:	fa1f fc8c 	uxth.w	ip, ip
 80158fa:	b2c0      	uxtb	r0, r0
 80158fc:	fb07 970a 	mla	r7, r7, sl, r9
 8015900:	fb00 500a 	mla	r0, r0, sl, r5
 8015904:	f10c 0501 	add.w	r5, ip, #1
 8015908:	b2bf      	uxth	r7, r7
 801590a:	b280      	uxth	r0, r0
 801590c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015910:	f107 0901 	add.w	r9, r7, #1
 8015914:	1c45      	adds	r5, r0, #1
 8015916:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801591a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801591e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015922:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015926:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801592a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801592e:	ea45 0c0c 	orr.w	ip, r5, ip
 8015932:	ea4c 0c09 	orr.w	ip, ip, r9
 8015936:	f824 c00b 	strh.w	ip, [r4, fp]
 801593a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801593c:	f108 38ff 	add.w	r8, r8, #4294967295
 8015940:	4401      	add	r1, r0
 8015942:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015944:	4402      	add	r2, r0
 8015946:	e75c      	b.n	8015802 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015948:	b007      	add	sp, #28
 801594a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801594e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801594e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015952:	b085      	sub	sp, #20
 8015954:	4693      	mov	fp, r2
 8015956:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801595a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801595c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801595e:	6870      	ldr	r0, [r6, #4]
 8015960:	9100      	str	r1, [sp, #0]
 8015962:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015966:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801596a:	fb00 2404 	mla	r4, r0, r4, r2
 801596e:	6832      	ldr	r2, [r6, #0]
 8015970:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015974:	682a      	ldr	r2, [r5, #0]
 8015976:	9201      	str	r2, [sp, #4]
 8015978:	686a      	ldr	r2, [r5, #4]
 801597a:	3204      	adds	r2, #4
 801597c:	9202      	str	r2, [sp, #8]
 801597e:	9a00      	ldr	r2, [sp, #0]
 8015980:	2a00      	cmp	r2, #0
 8015982:	dc03      	bgt.n	801598c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015984:	f1bb 0f00 	cmp.w	fp, #0
 8015988:	f340 80a0 	ble.w	8015acc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801598c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801598e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015992:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015996:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015998:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801599c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80159a0:	2b00      	cmp	r3, #0
 80159a2:	dd0c      	ble.n	80159be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80159a4:	1406      	asrs	r6, r0, #16
 80159a6:	d405      	bmi.n	80159b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80159a8:	454e      	cmp	r6, r9
 80159aa:	da03      	bge.n	80159b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80159ac:	1416      	asrs	r6, r2, #16
 80159ae:	d401      	bmi.n	80159b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80159b0:	4546      	cmp	r6, r8
 80159b2:	db05      	blt.n	80159c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80159b4:	4470      	add	r0, lr
 80159b6:	4462      	add	r2, ip
 80159b8:	3b01      	subs	r3, #1
 80159ba:	3402      	adds	r4, #2
 80159bc:	e7f0      	b.n	80159a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80159be:	d00f      	beq.n	80159e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80159c0:	1e5e      	subs	r6, r3, #1
 80159c2:	fb0e 0706 	mla	r7, lr, r6, r0
 80159c6:	143f      	asrs	r7, r7, #16
 80159c8:	d541      	bpl.n	8015a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80159ca:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80159ce:	4698      	mov	r8, r3
 80159d0:	9603      	str	r6, [sp, #12]
 80159d2:	f1b8 0f00 	cmp.w	r8, #0
 80159d6:	dc59      	bgt.n	8015a8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80159d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80159e0:	9b00      	ldr	r3, [sp, #0]
 80159e2:	2b00      	cmp	r3, #0
 80159e4:	dd72      	ble.n	8015acc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80159e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80159ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80159f0:	eeb0 6a62 	vmov.f32	s12, s5
 80159f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80159f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a00:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015a04:	eeb0 6a43 	vmov.f32	s12, s6
 8015a08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a0c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015a10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015a14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a28:	ee12 2a90 	vmov	r2, s5
 8015a2c:	eef0 2a47 	vmov.f32	s5, s14
 8015a30:	fb92 fef3 	sdiv	lr, r2, r3
 8015a34:	ee13 2a10 	vmov	r2, s6
 8015a38:	eeb0 3a67 	vmov.f32	s6, s15
 8015a3c:	fb92 fcf3 	sdiv	ip, r2, r3
 8015a40:	9b00      	ldr	r3, [sp, #0]
 8015a42:	3b01      	subs	r3, #1
 8015a44:	9300      	str	r3, [sp, #0]
 8015a46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a48:	bf08      	it	eq
 8015a4a:	465b      	moveq	r3, fp
 8015a4c:	e797      	b.n	801597e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015a4e:	454f      	cmp	r7, r9
 8015a50:	dabb      	bge.n	80159ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015a52:	fb0c 2606 	mla	r6, ip, r6, r2
 8015a56:	1436      	asrs	r6, r6, #16
 8015a58:	d4b7      	bmi.n	80159ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015a5a:	4546      	cmp	r6, r8
 8015a5c:	dab5      	bge.n	80159ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015a5e:	461e      	mov	r6, r3
 8015a60:	46a0      	mov	r8, r4
 8015a62:	2e00      	cmp	r6, #0
 8015a64:	ddb8      	ble.n	80159d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015a66:	1417      	asrs	r7, r2, #16
 8015a68:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015a6c:	9901      	ldr	r1, [sp, #4]
 8015a6e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015a72:	4462      	add	r2, ip
 8015a74:	4470      	add	r0, lr
 8015a76:	fb0a 1707 	mla	r7, sl, r7, r1
 8015a7a:	9902      	ldr	r1, [sp, #8]
 8015a7c:	3e01      	subs	r6, #1
 8015a7e:	f817 7009 	ldrb.w	r7, [r7, r9]
 8015a82:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015a86:	f828 7b02 	strh.w	r7, [r8], #2
 8015a8a:	e7ea      	b.n	8015a62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8015a8c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015a90:	d417      	bmi.n	8015ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015a92:	68ae      	ldr	r6, [r5, #8]
 8015a94:	454e      	cmp	r6, r9
 8015a96:	dd14      	ble.n	8015ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015a98:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015a9c:	d411      	bmi.n	8015ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015a9e:	68ef      	ldr	r7, [r5, #12]
 8015aa0:	4557      	cmp	r7, sl
 8015aa2:	dd0e      	ble.n	8015ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015aa4:	9f01      	ldr	r7, [sp, #4]
 8015aa6:	b236      	sxth	r6, r6
 8015aa8:	f06f 0101 	mvn.w	r1, #1
 8015aac:	fb0a 7606 	mla	r6, sl, r6, r7
 8015ab0:	9f02      	ldr	r7, [sp, #8]
 8015ab2:	f816 6009 	ldrb.w	r6, [r6, r9]
 8015ab6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015aba:	fb01 f608 	mul.w	r6, r1, r8
 8015abe:	9903      	ldr	r1, [sp, #12]
 8015ac0:	538f      	strh	r7, [r1, r6]
 8015ac2:	4470      	add	r0, lr
 8015ac4:	4462      	add	r2, ip
 8015ac6:	f108 38ff 	add.w	r8, r8, #4294967295
 8015aca:	e782      	b.n	80159d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015acc:	b005      	add	sp, #20
 8015ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ad2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ad6:	b087      	sub	sp, #28
 8015ad8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015ada:	9205      	str	r2, [sp, #20]
 8015adc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015ae0:	9102      	str	r1, [sp, #8]
 8015ae2:	9203      	str	r2, [sp, #12]
 8015ae4:	6861      	ldr	r1, [r4, #4]
 8015ae6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015aea:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8015aee:	fb01 2000 	mla	r0, r1, r0, r2
 8015af2:	6822      	ldr	r2, [r4, #0]
 8015af4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8015af8:	9200      	str	r2, [sp, #0]
 8015afa:	f8dc 2000 	ldr.w	r2, [ip]
 8015afe:	9204      	str	r2, [sp, #16]
 8015b00:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015b04:	3204      	adds	r2, #4
 8015b06:	9201      	str	r2, [sp, #4]
 8015b08:	9a03      	ldr	r2, [sp, #12]
 8015b0a:	43d5      	mvns	r5, r2
 8015b0c:	b2ed      	uxtb	r5, r5
 8015b0e:	9a02      	ldr	r2, [sp, #8]
 8015b10:	2a00      	cmp	r2, #0
 8015b12:	dc03      	bgt.n	8015b1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015b14:	9a05      	ldr	r2, [sp, #20]
 8015b16:	2a00      	cmp	r2, #0
 8015b18:	f340 812c 	ble.w	8015d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015b1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015b1e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8015b22:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015b26:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015b28:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8015b2c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015b30:	2b00      	cmp	r3, #0
 8015b32:	dd10      	ble.n	8015b56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015b34:	140c      	asrs	r4, r1, #16
 8015b36:	d405      	bmi.n	8015b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b38:	4574      	cmp	r4, lr
 8015b3a:	da03      	bge.n	8015b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b3c:	1414      	asrs	r4, r2, #16
 8015b3e:	d401      	bmi.n	8015b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015b40:	42bc      	cmp	r4, r7
 8015b42:	db09      	blt.n	8015b58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015b44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015b46:	3b01      	subs	r3, #1
 8015b48:	9800      	ldr	r0, [sp, #0]
 8015b4a:	4421      	add	r1, r4
 8015b4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015b4e:	3002      	adds	r0, #2
 8015b50:	4422      	add	r2, r4
 8015b52:	9000      	str	r0, [sp, #0]
 8015b54:	e7ec      	b.n	8015b30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015b56:	d071      	beq.n	8015c3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015b58:	1e5c      	subs	r4, r3, #1
 8015b5a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015b5c:	fb06 1604 	mla	r6, r6, r4, r1
 8015b60:	1436      	asrs	r6, r6, #16
 8015b62:	d45d      	bmi.n	8015c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015b64:	4576      	cmp	r6, lr
 8015b66:	da5b      	bge.n	8015c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015b68:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8015b6a:	fb06 2404 	mla	r4, r6, r4, r2
 8015b6e:	1424      	asrs	r4, r4, #16
 8015b70:	d456      	bmi.n	8015c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015b72:	42bc      	cmp	r4, r7
 8015b74:	da54      	bge.n	8015c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015b76:	4698      	mov	r8, r3
 8015b78:	f8dd 9000 	ldr.w	r9, [sp]
 8015b7c:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8015b80:	f1b8 0f00 	cmp.w	r8, #0
 8015b84:	dd54      	ble.n	8015c30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015b86:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015b8a:	1414      	asrs	r4, r2, #16
 8015b8c:	9804      	ldr	r0, [sp, #16]
 8015b8e:	140e      	asrs	r6, r1, #16
 8015b90:	f108 38ff 	add.w	r8, r8, #4294967295
 8015b94:	fb07 0404 	mla	r4, r7, r4, r0
 8015b98:	9801      	ldr	r0, [sp, #4]
 8015b9a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8015b9e:	f8b9 4000 	ldrh.w	r4, [r9]
 8015ba2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015ba6:	1227      	asrs	r7, r4, #8
 8015ba8:	eb00 0b0e 	add.w	fp, r0, lr
 8015bac:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8015bb0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015bb4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015bb6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015bba:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015bbe:	4401      	add	r1, r0
 8015bc0:	fb16 f60a 	smulbb	r6, r6, sl
 8015bc4:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015bc6:	fb1b fb0a 	smulbb	fp, fp, sl
 8015bca:	fb07 6705 	mla	r7, r7, r5, r6
 8015bce:	10e6      	asrs	r6, r4, #3
 8015bd0:	00e4      	lsls	r4, r4, #3
 8015bd2:	4402      	add	r2, r0
 8015bd4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015bd8:	b2bf      	uxth	r7, r7
 8015bda:	b2e4      	uxtb	r4, r4
 8015bdc:	fb06 b605 	mla	r6, r6, r5, fp
 8015be0:	fb14 f405 	smulbb	r4, r4, r5
 8015be4:	b2b6      	uxth	r6, r6
 8015be6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8015bea:	1c7c      	adds	r4, r7, #1
 8015bec:	f106 0b01 	add.w	fp, r6, #1
 8015bf0:	fa1f fe8e 	uxth.w	lr, lr
 8015bf4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015bf8:	f10e 0401 	add.w	r4, lr, #1
 8015bfc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015c00:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015c04:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8015c08:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015c0c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015c10:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015c14:	4327      	orrs	r7, r4
 8015c16:	ea47 070b 	orr.w	r7, r7, fp
 8015c1a:	f829 7b02 	strh.w	r7, [r9], #2
 8015c1e:	e7af      	b.n	8015b80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8015c20:	f04f 0e00 	mov.w	lr, #0
 8015c24:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8015c28:	eb03 040e 	add.w	r4, r3, lr
 8015c2c:	2c00      	cmp	r4, #0
 8015c2e:	dc43      	bgt.n	8015cb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015c30:	9a00      	ldr	r2, [sp, #0]
 8015c32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c36:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015c3a:	9300      	str	r3, [sp, #0]
 8015c3c:	9b02      	ldr	r3, [sp, #8]
 8015c3e:	2b00      	cmp	r3, #0
 8015c40:	f340 8098 	ble.w	8015d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015c44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015c48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015c4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015c4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015c52:	eef0 6a62 	vmov.f32	s13, s5
 8015c56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015c5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015c5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015c62:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015c66:	eef0 6a43 	vmov.f32	s13, s6
 8015c6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015c6e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8015c72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015c76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015c7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015c7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015c82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015c86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015c8a:	ee12 2a90 	vmov	r2, s5
 8015c8e:	eef0 2a47 	vmov.f32	s5, s14
 8015c92:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c96:	ee13 2a10 	vmov	r2, s6
 8015c9a:	9313      	str	r3, [sp, #76]	; 0x4c
 8015c9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015c9e:	eeb0 3a67 	vmov.f32	s6, s15
 8015ca2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ca6:	9314      	str	r3, [sp, #80]	; 0x50
 8015ca8:	9b02      	ldr	r3, [sp, #8]
 8015caa:	9a05      	ldr	r2, [sp, #20]
 8015cac:	3b01      	subs	r3, #1
 8015cae:	9302      	str	r3, [sp, #8]
 8015cb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015cb2:	bf08      	it	eq
 8015cb4:	4613      	moveq	r3, r2
 8015cb6:	e72a      	b.n	8015b0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015cb8:	140f      	asrs	r7, r1, #16
 8015cba:	d454      	bmi.n	8015d66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015cbc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015cc0:	42be      	cmp	r6, r7
 8015cc2:	dd50      	ble.n	8015d66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015cc4:	ea5f 4822 	movs.w	r8, r2, asr #16
 8015cc8:	d44d      	bmi.n	8015d66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015cca:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8015cce:	4544      	cmp	r4, r8
 8015cd0:	dd49      	ble.n	8015d66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015cd2:	9c04      	ldr	r4, [sp, #16]
 8015cd4:	b236      	sxth	r6, r6
 8015cd6:	f06f 0001 	mvn.w	r0, #1
 8015cda:	fb08 4606 	mla	r6, r8, r6, r4
 8015cde:	9c01      	ldr	r4, [sp, #4]
 8015ce0:	fb00 fa0e 	mul.w	sl, r0, lr
 8015ce4:	9800      	ldr	r0, [sp, #0]
 8015ce6:	f816 8007 	ldrb.w	r8, [r6, r7]
 8015cea:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015cee:	eb04 0b08 	add.w	fp, r4, r8
 8015cf2:	f830 400a 	ldrh.w	r4, [r0, sl]
 8015cf6:	9801      	ldr	r0, [sp, #4]
 8015cf8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015cfc:	1227      	asrs	r7, r4, #8
 8015cfe:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015d02:	fb16 f609 	smulbb	r6, r6, r9
 8015d06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015d0a:	f810 8008 	ldrb.w	r8, [r0, r8]
 8015d0e:	fb1b fb09 	smulbb	fp, fp, r9
 8015d12:	fb07 6705 	mla	r7, r7, r5, r6
 8015d16:	10e6      	asrs	r6, r4, #3
 8015d18:	00e4      	lsls	r4, r4, #3
 8015d1a:	9800      	ldr	r0, [sp, #0]
 8015d1c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015d20:	b2bf      	uxth	r7, r7
 8015d22:	b2e4      	uxtb	r4, r4
 8015d24:	fb06 b605 	mla	r6, r6, r5, fp
 8015d28:	fb14 f405 	smulbb	r4, r4, r5
 8015d2c:	b2b6      	uxth	r6, r6
 8015d2e:	fb08 4809 	mla	r8, r8, r9, r4
 8015d32:	1c7c      	adds	r4, r7, #1
 8015d34:	f106 0b01 	add.w	fp, r6, #1
 8015d38:	fa1f f888 	uxth.w	r8, r8
 8015d3c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015d40:	f108 0401 	add.w	r4, r8, #1
 8015d44:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015d48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015d4c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015d50:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015d54:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015d58:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015d5c:	4327      	orrs	r7, r4
 8015d5e:	ea47 070b 	orr.w	r7, r7, fp
 8015d62:	f820 700a 	strh.w	r7, [r0, sl]
 8015d66:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015d68:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015d6c:	4401      	add	r1, r0
 8015d6e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015d70:	4402      	add	r2, r0
 8015d72:	e759      	b.n	8015c28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015d74:	b007      	add	sp, #28
 8015d76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d80:	b085      	sub	sp, #20
 8015d82:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015d86:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015d88:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015d8a:	9203      	str	r2, [sp, #12]
 8015d8c:	6870      	ldr	r0, [r6, #4]
 8015d8e:	686f      	ldr	r7, [r5, #4]
 8015d90:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015d94:	3704      	adds	r7, #4
 8015d96:	9101      	str	r1, [sp, #4]
 8015d98:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015d9c:	fb00 2404 	mla	r4, r0, r4, r2
 8015da0:	6832      	ldr	r2, [r6, #0]
 8015da2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015da6:	682a      	ldr	r2, [r5, #0]
 8015da8:	9202      	str	r2, [sp, #8]
 8015daa:	9a01      	ldr	r2, [sp, #4]
 8015dac:	2a00      	cmp	r2, #0
 8015dae:	dc03      	bgt.n	8015db8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015db0:	9a03      	ldr	r2, [sp, #12]
 8015db2:	2a00      	cmp	r2, #0
 8015db4:	f340 80cc 	ble.w	8015f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015db8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015dba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015dbe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015dc2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015dc4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015dc8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015dcc:	2b00      	cmp	r3, #0
 8015dce:	dd0d      	ble.n	8015dec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015dd0:	1406      	asrs	r6, r0, #16
 8015dd2:	d405      	bmi.n	8015de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015dd4:	454e      	cmp	r6, r9
 8015dd6:	da03      	bge.n	8015de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015dd8:	1416      	asrs	r6, r2, #16
 8015dda:	d401      	bmi.n	8015de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015ddc:	4546      	cmp	r6, r8
 8015dde:	db06      	blt.n	8015dee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015de0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015de2:	4460      	add	r0, ip
 8015de4:	3b01      	subs	r3, #1
 8015de6:	3402      	adds	r4, #2
 8015de8:	4432      	add	r2, r6
 8015dea:	e7ef      	b.n	8015dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8015dec:	d00f      	beq.n	8015e0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015dee:	1e5e      	subs	r6, r3, #1
 8015df0:	fb0c 0e06 	mla	lr, ip, r6, r0
 8015df4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8015df8:	d543      	bpl.n	8015e82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8015dfa:	4698      	mov	r8, r3
 8015dfc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8015e00:	f1b8 0f00 	cmp.w	r8, #0
 8015e04:	dc71      	bgt.n	8015eea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015e06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e0e:	9b01      	ldr	r3, [sp, #4]
 8015e10:	2b00      	cmp	r3, #0
 8015e12:	f340 809d 	ble.w	8015f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015e16:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e20:	eeb0 6a62 	vmov.f32	s12, s5
 8015e24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015e28:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e30:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015e34:	eeb0 6a43 	vmov.f32	s12, s6
 8015e38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e3c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015e40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e44:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e48:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015e58:	ee12 2a90 	vmov	r2, s5
 8015e5c:	eef0 2a47 	vmov.f32	s5, s14
 8015e60:	fb92 fcf3 	sdiv	ip, r2, r3
 8015e64:	ee13 2a10 	vmov	r2, s6
 8015e68:	eeb0 3a67 	vmov.f32	s6, s15
 8015e6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e70:	9312      	str	r3, [sp, #72]	; 0x48
 8015e72:	9b01      	ldr	r3, [sp, #4]
 8015e74:	9a03      	ldr	r2, [sp, #12]
 8015e76:	3b01      	subs	r3, #1
 8015e78:	9301      	str	r3, [sp, #4]
 8015e7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e7c:	bf08      	it	eq
 8015e7e:	4613      	moveq	r3, r2
 8015e80:	e793      	b.n	8015daa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015e82:	45ce      	cmp	lr, r9
 8015e84:	dab9      	bge.n	8015dfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015e86:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015e88:	fb01 2606 	mla	r6, r1, r6, r2
 8015e8c:	1436      	asrs	r6, r6, #16
 8015e8e:	d4b4      	bmi.n	8015dfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015e90:	4546      	cmp	r6, r8
 8015e92:	dab2      	bge.n	8015dfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015e94:	4698      	mov	r8, r3
 8015e96:	46a2      	mov	sl, r4
 8015e98:	f1b8 0f00 	cmp.w	r8, #0
 8015e9c:	ddb3      	ble.n	8015e06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015e9e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015ea2:	1416      	asrs	r6, r2, #16
 8015ea4:	9902      	ldr	r1, [sp, #8]
 8015ea6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8015eaa:	f108 38ff 	add.w	r8, r8, #4294967295
 8015eae:	4460      	add	r0, ip
 8015eb0:	fb09 1606 	mla	r6, r9, r6, r1
 8015eb4:	4928      	ldr	r1, [pc, #160]	; (8015f58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015eb6:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015eba:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015ebe:	eb07 0b0e 	add.w	fp, r7, lr
 8015ec2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015ec6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015eca:	00f6      	lsls	r6, r6, #3
 8015ecc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8015ed0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015ed2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015ed6:	440a      	add	r2, r1
 8015ed8:	ea49 0606 	orr.w	r6, r9, r6
 8015edc:	f817 900e 	ldrb.w	r9, [r7, lr]
 8015ee0:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8015ee4:	f82a 6b02 	strh.w	r6, [sl], #2
 8015ee8:	e7d6      	b.n	8015e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015eea:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015eee:	d429      	bmi.n	8015f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015ef0:	68ae      	ldr	r6, [r5, #8]
 8015ef2:	454e      	cmp	r6, r9
 8015ef4:	dd26      	ble.n	8015f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015ef6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8015efa:	d423      	bmi.n	8015f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015efc:	68e9      	ldr	r1, [r5, #12]
 8015efe:	4559      	cmp	r1, fp
 8015f00:	dd20      	ble.n	8015f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015f02:	fa0f fe86 	sxth.w	lr, r6
 8015f06:	9902      	ldr	r1, [sp, #8]
 8015f08:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8015f0c:	f06f 0101 	mvn.w	r1, #1
 8015f10:	f81e e009 	ldrb.w	lr, [lr, r9]
 8015f14:	fb01 f908 	mul.w	r9, r1, r8
 8015f18:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8015f1c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015f20:	eb07 060e 	add.w	r6, r7, lr
 8015f24:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015f28:	7876      	ldrb	r6, [r6, #1]
 8015f2a:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015f2e:	00f6      	lsls	r6, r6, #3
 8015f30:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015f34:	ea4b 0606 	orr.w	r6, fp, r6
 8015f38:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8015f3c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015f40:	f82a 6009 	strh.w	r6, [sl, r9]
 8015f44:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015f46:	4460      	add	r0, ip
 8015f48:	f108 38ff 	add.w	r8, r8, #4294967295
 8015f4c:	440a      	add	r2, r1
 8015f4e:	e757      	b.n	8015e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015f50:	b005      	add	sp, #20
 8015f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f56:	bf00      	nop
 8015f58:	fffff800 	.word	0xfffff800

08015f5c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f60:	b087      	sub	sp, #28
 8015f62:	468b      	mov	fp, r1
 8015f64:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015f68:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015f6a:	9204      	str	r2, [sp, #16]
 8015f6c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015f70:	6841      	ldr	r1, [r0, #4]
 8015f72:	9205      	str	r2, [sp, #20]
 8015f74:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015f78:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015f7c:	fb01 2404 	mla	r4, r1, r4, r2
 8015f80:	6802      	ldr	r2, [r0, #0]
 8015f82:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015f86:	f8dc 2000 	ldr.w	r2, [ip]
 8015f8a:	9201      	str	r2, [sp, #4]
 8015f8c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015f90:	3204      	adds	r2, #4
 8015f92:	9202      	str	r2, [sp, #8]
 8015f94:	f1bb 0f00 	cmp.w	fp, #0
 8015f98:	dc03      	bgt.n	8015fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8015f9a:	9a04      	ldr	r2, [sp, #16]
 8015f9c:	2a00      	cmp	r2, #0
 8015f9e:	f340 8138 	ble.w	8016212 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015fa2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015fa4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015fa8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015fac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015fae:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8015fb2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015fb6:	2b00      	cmp	r3, #0
 8015fb8:	dd0e      	ble.n	8015fd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015fba:	1402      	asrs	r2, r0, #16
 8015fbc:	d405      	bmi.n	8015fca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015fbe:	42ba      	cmp	r2, r7
 8015fc0:	da03      	bge.n	8015fca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015fc2:	140a      	asrs	r2, r1, #16
 8015fc4:	d401      	bmi.n	8015fca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015fc6:	42b2      	cmp	r2, r6
 8015fc8:	db07      	blt.n	8015fda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015fca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015fcc:	3b01      	subs	r3, #1
 8015fce:	3402      	adds	r4, #2
 8015fd0:	4410      	add	r0, r2
 8015fd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015fd4:	4411      	add	r1, r2
 8015fd6:	e7ee      	b.n	8015fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015fd8:	d019      	beq.n	801600e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015fda:	1e5a      	subs	r2, r3, #1
 8015fdc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015fde:	fb05 0502 	mla	r5, r5, r2, r0
 8015fe2:	142d      	asrs	r5, r5, #16
 8015fe4:	d409      	bmi.n	8015ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015fe6:	42bd      	cmp	r5, r7
 8015fe8:	da07      	bge.n	8015ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015fea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015fec:	fb05 1202 	mla	r2, r5, r2, r1
 8015ff0:	1412      	asrs	r2, r2, #16
 8015ff2:	d402      	bmi.n	8015ffa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ff4:	42b2      	cmp	r2, r6
 8015ff6:	f2c0 80ac 	blt.w	8016152 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015ffa:	f04f 0e00 	mov.w	lr, #0
 8015ffe:	eb03 020e 	add.w	r2, r3, lr
 8016002:	2a00      	cmp	r2, #0
 8016004:	dc3e      	bgt.n	8016084 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016006:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801600a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801600e:	f1bb 0f00 	cmp.w	fp, #0
 8016012:	f340 80fe 	ble.w	8016212 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016016:	ee30 0a04 	vadd.f32	s0, s0, s8
 801601a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801601c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016020:	f1bb 0b01 	subs.w	fp, fp, #1
 8016024:	eeb0 6a62 	vmov.f32	s12, s5
 8016028:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801602c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016030:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016034:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016038:	eeb0 6a43 	vmov.f32	s12, s6
 801603c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016040:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016044:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016048:	ee61 7a27 	vmul.f32	s15, s2, s15
 801604c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016050:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016054:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016058:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801605c:	ee12 2a90 	vmov	r2, s5
 8016060:	eef0 2a47 	vmov.f32	s5, s14
 8016064:	fb92 f3f3 	sdiv	r3, r2, r3
 8016068:	ee13 2a10 	vmov	r2, s6
 801606c:	9313      	str	r3, [sp, #76]	; 0x4c
 801606e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016070:	eeb0 3a67 	vmov.f32	s6, s15
 8016074:	fb92 f3f3 	sdiv	r3, r2, r3
 8016078:	9a04      	ldr	r2, [sp, #16]
 801607a:	9314      	str	r3, [sp, #80]	; 0x50
 801607c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801607e:	bf08      	it	eq
 8016080:	4613      	moveq	r3, r2
 8016082:	e787      	b.n	8015f94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016084:	1406      	asrs	r6, r0, #16
 8016086:	d45d      	bmi.n	8016144 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016088:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801608c:	42b5      	cmp	r5, r6
 801608e:	dd59      	ble.n	8016144 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016090:	140f      	asrs	r7, r1, #16
 8016092:	d457      	bmi.n	8016144 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016094:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8016098:	42ba      	cmp	r2, r7
 801609a:	dd53      	ble.n	8016144 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801609c:	9a01      	ldr	r2, [sp, #4]
 801609e:	b22d      	sxth	r5, r5
 80160a0:	fb07 2505 	mla	r5, r7, r5, r2
 80160a4:	5daa      	ldrb	r2, [r5, r6]
 80160a6:	9d02      	ldr	r5, [sp, #8]
 80160a8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80160ac:	0e2e      	lsrs	r6, r5, #24
 80160ae:	d049      	beq.n	8016144 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80160b0:	f06f 0201 	mvn.w	r2, #1
 80160b4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80160b8:	fb02 f20e 	mul.w	r2, r2, lr
 80160bc:	f834 8002 	ldrh.w	r8, [r4, r2]
 80160c0:	9203      	str	r2, [sp, #12]
 80160c2:	9a05      	ldr	r2, [sp, #20]
 80160c4:	ea4f 2728 	mov.w	r7, r8, asr #8
 80160c8:	4356      	muls	r6, r2
 80160ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80160ce:	1c72      	adds	r2, r6, #1
 80160d0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80160d4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80160d8:	b2ed      	uxtb	r5, r5
 80160da:	1212      	asrs	r2, r2, #8
 80160dc:	fa1f f982 	uxth.w	r9, r2
 80160e0:	43d2      	mvns	r2, r2
 80160e2:	fb16 f609 	smulbb	r6, r6, r9
 80160e6:	b2d2      	uxtb	r2, r2
 80160e8:	fb15 f509 	smulbb	r5, r5, r9
 80160ec:	fb07 6702 	mla	r7, r7, r2, r6
 80160f0:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80160f4:	fb1a fa09 	smulbb	sl, sl, r9
 80160f8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80160fc:	b2bf      	uxth	r7, r7
 80160fe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016102:	fa5f f888 	uxtb.w	r8, r8
 8016106:	fb06 a602 	mla	r6, r6, r2, sl
 801610a:	fb08 5502 	mla	r5, r8, r2, r5
 801610e:	1c7a      	adds	r2, r7, #1
 8016110:	b2b6      	uxth	r6, r6
 8016112:	b2ad      	uxth	r5, r5
 8016114:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016118:	9a03      	ldr	r2, [sp, #12]
 801611a:	f105 0a01 	add.w	sl, r5, #1
 801611e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016122:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016126:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801612a:	ea4a 0707 	orr.w	r7, sl, r7
 801612e:	f106 0a01 	add.w	sl, r6, #1
 8016132:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016136:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801613a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801613e:	ea47 070a 	orr.w	r7, r7, sl
 8016142:	52a7      	strh	r7, [r4, r2]
 8016144:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016146:	f10e 3eff 	add.w	lr, lr, #4294967295
 801614a:	4410      	add	r0, r2
 801614c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801614e:	4411      	add	r1, r2
 8016150:	e755      	b.n	8015ffe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016152:	f04f 0800 	mov.w	r8, #0
 8016156:	eba3 0208 	sub.w	r2, r3, r8
 801615a:	2a00      	cmp	r2, #0
 801615c:	f77f af53 	ble.w	8016006 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016160:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8016164:	140a      	asrs	r2, r1, #16
 8016166:	9f01      	ldr	r7, [sp, #4]
 8016168:	1405      	asrs	r5, r0, #16
 801616a:	fb06 7202 	mla	r2, r6, r2, r7
 801616e:	5d52      	ldrb	r2, [r2, r5]
 8016170:	9d02      	ldr	r5, [sp, #8]
 8016172:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8016176:	0e2e      	lsrs	r6, r5, #24
 8016178:	d044      	beq.n	8016204 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801617a:	9a05      	ldr	r2, [sp, #20]
 801617c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016180:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016184:	4356      	muls	r6, r2
 8016186:	ea4f 272e 	mov.w	r7, lr, asr #8
 801618a:	1c72      	adds	r2, r6, #1
 801618c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016190:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016194:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016198:	b2ed      	uxtb	r5, r5
 801619a:	1212      	asrs	r2, r2, #8
 801619c:	fa1f f982 	uxth.w	r9, r2
 80161a0:	43d2      	mvns	r2, r2
 80161a2:	fb16 f609 	smulbb	r6, r6, r9
 80161a6:	b2d2      	uxtb	r2, r2
 80161a8:	fb15 f509 	smulbb	r5, r5, r9
 80161ac:	fb07 6702 	mla	r7, r7, r2, r6
 80161b0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80161b4:	fb1a fa09 	smulbb	sl, sl, r9
 80161b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80161bc:	b2bf      	uxth	r7, r7
 80161be:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80161c2:	fa5f fe8e 	uxtb.w	lr, lr
 80161c6:	fb06 a602 	mla	r6, r6, r2, sl
 80161ca:	fb0e 5502 	mla	r5, lr, r2, r5
 80161ce:	1c7a      	adds	r2, r7, #1
 80161d0:	b2b6      	uxth	r6, r6
 80161d2:	b2ad      	uxth	r5, r5
 80161d4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80161d8:	f105 0a01 	add.w	sl, r5, #1
 80161dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80161e0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80161e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80161e8:	ea4a 0707 	orr.w	r7, sl, r7
 80161ec:	f106 0a01 	add.w	sl, r6, #1
 80161f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80161f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80161f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80161fc:	ea47 070a 	orr.w	r7, r7, sl
 8016200:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8016204:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016206:	f108 0801 	add.w	r8, r8, #1
 801620a:	4410      	add	r0, r2
 801620c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801620e:	4411      	add	r1, r2
 8016210:	e7a1      	b.n	8016156 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8016212:	b007      	add	sp, #28
 8016214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016218 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801621c:	b085      	sub	sp, #20
 801621e:	468b      	mov	fp, r1
 8016220:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016224:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016226:	9203      	str	r2, [sp, #12]
 8016228:	6841      	ldr	r1, [r0, #4]
 801622a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801622e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016232:	fb01 2404 	mla	r4, r1, r4, r2
 8016236:	6802      	ldr	r2, [r0, #0]
 8016238:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801623c:	f8de 2000 	ldr.w	r2, [lr]
 8016240:	9200      	str	r2, [sp, #0]
 8016242:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016246:	3204      	adds	r2, #4
 8016248:	9201      	str	r2, [sp, #4]
 801624a:	f1bb 0f00 	cmp.w	fp, #0
 801624e:	dc03      	bgt.n	8016258 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016250:	9a03      	ldr	r2, [sp, #12]
 8016252:	2a00      	cmp	r2, #0
 8016254:	f340 8153 	ble.w	80164fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016258:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801625a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801625e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016262:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016264:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016268:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801626c:	2b00      	cmp	r3, #0
 801626e:	dd0e      	ble.n	801628e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016270:	1408      	asrs	r0, r1, #16
 8016272:	d405      	bmi.n	8016280 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016274:	42b8      	cmp	r0, r7
 8016276:	da03      	bge.n	8016280 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016278:	1410      	asrs	r0, r2, #16
 801627a:	d401      	bmi.n	8016280 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801627c:	42b0      	cmp	r0, r6
 801627e:	db07      	blt.n	8016290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016280:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016282:	3b01      	subs	r3, #1
 8016284:	3402      	adds	r4, #2
 8016286:	4401      	add	r1, r0
 8016288:	9812      	ldr	r0, [sp, #72]	; 0x48
 801628a:	4402      	add	r2, r0
 801628c:	e7ee      	b.n	801626c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801628e:	d017      	beq.n	80162c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016290:	1e58      	subs	r0, r3, #1
 8016292:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016294:	fb05 1500 	mla	r5, r5, r0, r1
 8016298:	142d      	asrs	r5, r5, #16
 801629a:	d409      	bmi.n	80162b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801629c:	42bd      	cmp	r5, r7
 801629e:	da07      	bge.n	80162b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80162a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80162a2:	fb05 2000 	mla	r0, r5, r0, r2
 80162a6:	1400      	asrs	r0, r0, #16
 80162a8:	d402      	bmi.n	80162b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80162aa:	42b0      	cmp	r0, r6
 80162ac:	f2c0 80bc 	blt.w	8016428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80162b0:	2600      	movs	r6, #0
 80162b2:	1998      	adds	r0, r3, r6
 80162b4:	2800      	cmp	r0, #0
 80162b6:	dc3e      	bgt.n	8016336 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80162b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80162bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80162c0:	f1bb 0f00 	cmp.w	fp, #0
 80162c4:	f340 811b 	ble.w	80164fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80162c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80162cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80162d2:	f1bb 0b01 	subs.w	fp, fp, #1
 80162d6:	eeb0 6a62 	vmov.f32	s12, s5
 80162da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80162de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80162e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80162ea:	eeb0 6a43 	vmov.f32	s12, s6
 80162ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80162f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80162fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80162fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016302:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016306:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801630a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801630e:	ee12 2a90 	vmov	r2, s5
 8016312:	eef0 2a47 	vmov.f32	s5, s14
 8016316:	fb92 f3f3 	sdiv	r3, r2, r3
 801631a:	ee13 2a10 	vmov	r2, s6
 801631e:	9311      	str	r3, [sp, #68]	; 0x44
 8016320:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016322:	eeb0 3a67 	vmov.f32	s6, s15
 8016326:	fb92 f3f3 	sdiv	r3, r2, r3
 801632a:	9a03      	ldr	r2, [sp, #12]
 801632c:	9312      	str	r3, [sp, #72]	; 0x48
 801632e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016330:	bf08      	it	eq
 8016332:	4613      	moveq	r3, r2
 8016334:	e789      	b.n	801624a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016336:	140f      	asrs	r7, r1, #16
 8016338:	d426      	bmi.n	8016388 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801633a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801633e:	42bd      	cmp	r5, r7
 8016340:	dd22      	ble.n	8016388 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016342:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016346:	d41f      	bmi.n	8016388 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016348:	f8de 000c 	ldr.w	r0, [lr, #12]
 801634c:	4560      	cmp	r0, ip
 801634e:	dd1b      	ble.n	8016388 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016350:	9800      	ldr	r0, [sp, #0]
 8016352:	b22d      	sxth	r5, r5
 8016354:	fb0c 0505 	mla	r5, ip, r5, r0
 8016358:	5de8      	ldrb	r0, [r5, r7]
 801635a:	9d01      	ldr	r5, [sp, #4]
 801635c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8016360:	0e07      	lsrs	r7, r0, #24
 8016362:	2fff      	cmp	r7, #255	; 0xff
 8016364:	d116      	bne.n	8016394 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016366:	f06f 0501 	mvn.w	r5, #1
 801636a:	fb05 f706 	mul.w	r7, r5, r6
 801636e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016372:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016376:	0945      	lsrs	r5, r0, #5
 8016378:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801637c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016380:	ea4c 0505 	orr.w	r5, ip, r5
 8016384:	4305      	orrs	r5, r0
 8016386:	53e5      	strh	r5, [r4, r7]
 8016388:	9811      	ldr	r0, [sp, #68]	; 0x44
 801638a:	3e01      	subs	r6, #1
 801638c:	4401      	add	r1, r0
 801638e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016390:	4402      	add	r2, r0
 8016392:	e78e      	b.n	80162b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016394:	b2fd      	uxtb	r5, r7
 8016396:	2f00      	cmp	r7, #0
 8016398:	d0f6      	beq.n	8016388 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801639a:	f06f 0701 	mvn.w	r7, #1
 801639e:	fa1f f985 	uxth.w	r9, r5
 80163a2:	43ed      	mvns	r5, r5
 80163a4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80163a8:	4377      	muls	r7, r6
 80163aa:	fb1a fa09 	smulbb	sl, sl, r9
 80163ae:	b2ed      	uxtb	r5, r5
 80163b0:	f834 8007 	ldrh.w	r8, [r4, r7]
 80163b4:	9702      	str	r7, [sp, #8]
 80163b6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80163ba:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80163be:	fb17 f709 	smulbb	r7, r7, r9
 80163c2:	b2c0      	uxtb	r0, r0
 80163c4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80163c8:	fb10 f009 	smulbb	r0, r0, r9
 80163cc:	fb0c 7c05 	mla	ip, ip, r5, r7
 80163d0:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80163d4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80163d8:	fa1f fc8c 	uxth.w	ip, ip
 80163dc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80163e0:	fa5f f888 	uxtb.w	r8, r8
 80163e4:	fb07 a705 	mla	r7, r7, r5, sl
 80163e8:	fb08 0005 	mla	r0, r8, r5, r0
 80163ec:	f10c 0501 	add.w	r5, ip, #1
 80163f0:	b2bf      	uxth	r7, r7
 80163f2:	b280      	uxth	r0, r0
 80163f4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80163f8:	f100 0a01 	add.w	sl, r0, #1
 80163fc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016400:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016404:	9802      	ldr	r0, [sp, #8]
 8016406:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801640a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801640e:	f107 0a01 	add.w	sl, r7, #1
 8016412:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016416:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801641a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801641e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016422:	f824 c000 	strh.w	ip, [r4, r0]
 8016426:	e7af      	b.n	8016388 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016428:	f04f 0800 	mov.w	r8, #0
 801642c:	eba3 0008 	sub.w	r0, r3, r8
 8016430:	2800      	cmp	r0, #0
 8016432:	f77f af41 	ble.w	80162b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016436:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801643a:	1410      	asrs	r0, r2, #16
 801643c:	9f00      	ldr	r7, [sp, #0]
 801643e:	140d      	asrs	r5, r1, #16
 8016440:	fb06 7000 	mla	r0, r6, r0, r7
 8016444:	5d40      	ldrb	r0, [r0, r5]
 8016446:	9d01      	ldr	r5, [sp, #4]
 8016448:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801644c:	0e2e      	lsrs	r6, r5, #24
 801644e:	2eff      	cmp	r6, #255	; 0xff
 8016450:	d112      	bne.n	8016478 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8016452:	482c      	ldr	r0, [pc, #176]	; (8016504 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8016454:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016458:	0968      	lsrs	r0, r5, #5
 801645a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801645e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016462:	4330      	orrs	r0, r6
 8016464:	4328      	orrs	r0, r5
 8016466:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801646a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801646c:	f108 0801 	add.w	r8, r8, #1
 8016470:	4401      	add	r1, r0
 8016472:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016474:	4402      	add	r2, r0
 8016476:	e7d9      	b.n	801642c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016478:	b2f0      	uxtb	r0, r6
 801647a:	2e00      	cmp	r6, #0
 801647c:	d0f5      	beq.n	801646a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801647e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8016482:	fa1f f980 	uxth.w	r9, r0
 8016486:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801648a:	43c0      	mvns	r0, r0
 801648c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016490:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016494:	fb16 f609 	smulbb	r6, r6, r9
 8016498:	b2c0      	uxtb	r0, r0
 801649a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801649e:	b2ed      	uxtb	r5, r5
 80164a0:	fb1a fa09 	smulbb	sl, sl, r9
 80164a4:	fb07 6700 	mla	r7, r7, r0, r6
 80164a8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80164ac:	fb15 f509 	smulbb	r5, r5, r9
 80164b0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80164b4:	b2bf      	uxth	r7, r7
 80164b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80164ba:	fa5f fc8c 	uxtb.w	ip, ip
 80164be:	fb06 a600 	mla	r6, r6, r0, sl
 80164c2:	fb0c 5500 	mla	r5, ip, r0, r5
 80164c6:	1c78      	adds	r0, r7, #1
 80164c8:	b2b6      	uxth	r6, r6
 80164ca:	b2ad      	uxth	r5, r5
 80164cc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80164d0:	f105 0a01 	add.w	sl, r5, #1
 80164d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80164d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80164dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80164e0:	ea4a 0707 	orr.w	r7, sl, r7
 80164e4:	f106 0a01 	add.w	sl, r6, #1
 80164e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80164ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80164f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80164f4:	ea47 070a 	orr.w	r7, r7, sl
 80164f8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80164fc:	e7b5      	b.n	801646a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80164fe:	b005      	add	sp, #20
 8016500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016504:	fffff800 	.word	0xfffff800

08016508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801650c:	b087      	sub	sp, #28
 801650e:	468b      	mov	fp, r1
 8016510:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016514:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016516:	9204      	str	r2, [sp, #16]
 8016518:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801651c:	6861      	ldr	r1, [r4, #4]
 801651e:	9205      	str	r2, [sp, #20]
 8016520:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8016524:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8016528:	fb01 2000 	mla	r0, r1, r0, r2
 801652c:	6822      	ldr	r2, [r4, #0]
 801652e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016532:	f8de 2000 	ldr.w	r2, [lr]
 8016536:	9201      	str	r2, [sp, #4]
 8016538:	f8de 2004 	ldr.w	r2, [lr, #4]
 801653c:	9202      	str	r2, [sp, #8]
 801653e:	f1bb 0f00 	cmp.w	fp, #0
 8016542:	dc03      	bgt.n	801654c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016544:	9a04      	ldr	r2, [sp, #16]
 8016546:	2a00      	cmp	r2, #0
 8016548:	f340 8142 	ble.w	80167d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801654c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801654e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016552:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016556:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016558:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801655c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016560:	2b00      	cmp	r3, #0
 8016562:	dd0e      	ble.n	8016582 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016564:	140c      	asrs	r4, r1, #16
 8016566:	d405      	bmi.n	8016574 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016568:	42bc      	cmp	r4, r7
 801656a:	da03      	bge.n	8016574 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801656c:	1414      	asrs	r4, r2, #16
 801656e:	d401      	bmi.n	8016574 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016570:	42b4      	cmp	r4, r6
 8016572:	db07      	blt.n	8016584 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016574:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016576:	3b01      	subs	r3, #1
 8016578:	3002      	adds	r0, #2
 801657a:	4421      	add	r1, r4
 801657c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801657e:	4422      	add	r2, r4
 8016580:	e7ee      	b.n	8016560 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016582:	d019      	beq.n	80165b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016584:	1e5c      	subs	r4, r3, #1
 8016586:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016588:	fb05 1504 	mla	r5, r5, r4, r1
 801658c:	142d      	asrs	r5, r5, #16
 801658e:	d409      	bmi.n	80165a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016590:	42bd      	cmp	r5, r7
 8016592:	da07      	bge.n	80165a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016594:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016596:	fb05 2404 	mla	r4, r5, r4, r2
 801659a:	1424      	asrs	r4, r4, #16
 801659c:	d402      	bmi.n	80165a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801659e:	42b4      	cmp	r4, r6
 80165a0:	f2c0 80b1 	blt.w	8016706 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80165a4:	f04f 0800 	mov.w	r8, #0
 80165a8:	eb03 0408 	add.w	r4, r3, r8
 80165ac:	2c00      	cmp	r4, #0
 80165ae:	dc3e      	bgt.n	801662e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80165b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80165b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80165b8:	f1bb 0f00 	cmp.w	fp, #0
 80165bc:	f340 8108 	ble.w	80167d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80165c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80165c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80165c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80165ca:	f1bb 0b01 	subs.w	fp, fp, #1
 80165ce:	eeb0 6a62 	vmov.f32	s12, s5
 80165d2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80165d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80165da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80165de:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80165e2:	eeb0 6a43 	vmov.f32	s12, s6
 80165e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80165ea:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80165ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80165f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80165f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80165fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80165fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016602:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016606:	ee12 2a90 	vmov	r2, s5
 801660a:	eef0 2a47 	vmov.f32	s5, s14
 801660e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016612:	ee13 2a10 	vmov	r2, s6
 8016616:	9313      	str	r3, [sp, #76]	; 0x4c
 8016618:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801661a:	eeb0 3a67 	vmov.f32	s6, s15
 801661e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016622:	9a04      	ldr	r2, [sp, #16]
 8016624:	9314      	str	r3, [sp, #80]	; 0x50
 8016626:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016628:	bf08      	it	eq
 801662a:	4613      	moveq	r3, r2
 801662c:	e787      	b.n	801653e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801662e:	140e      	asrs	r6, r1, #16
 8016630:	d462      	bmi.n	80166f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016632:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016636:	42b5      	cmp	r5, r6
 8016638:	dd5e      	ble.n	80166f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801663a:	1417      	asrs	r7, r2, #16
 801663c:	d45c      	bmi.n	80166f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801663e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8016642:	42bc      	cmp	r4, r7
 8016644:	dd58      	ble.n	80166f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016646:	b22d      	sxth	r5, r5
 8016648:	9c02      	ldr	r4, [sp, #8]
 801664a:	fb07 6505 	mla	r5, r7, r5, r6
 801664e:	5d66      	ldrb	r6, [r4, r5]
 8016650:	2e00      	cmp	r6, #0
 8016652:	d051      	beq.n	80166f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016654:	9c01      	ldr	r4, [sp, #4]
 8016656:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801665a:	f06f 0401 	mvn.w	r4, #1
 801665e:	fb04 f408 	mul.w	r4, r4, r8
 8016662:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8016666:	5b05      	ldrh	r5, [r0, r4]
 8016668:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801666c:	9403      	str	r4, [sp, #12]
 801666e:	9c05      	ldr	r4, [sp, #20]
 8016670:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016674:	4366      	muls	r6, r4
 8016676:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801667a:	1c74      	adds	r4, r6, #1
 801667c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016680:	122e      	asrs	r6, r5, #8
 8016682:	1224      	asrs	r4, r4, #8
 8016684:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016688:	00ed      	lsls	r5, r5, #3
 801668a:	b2a7      	uxth	r7, r4
 801668c:	43e4      	mvns	r4, r4
 801668e:	b2ed      	uxtb	r5, r5
 8016690:	b2e4      	uxtb	r4, r4
 8016692:	fb16 f604 	smulbb	r6, r6, r4
 8016696:	fb15 f504 	smulbb	r5, r5, r4
 801669a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801669e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80166a2:	fb1a fa04 	smulbb	sl, sl, r4
 80166a6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80166aa:	fa1f fc8c 	uxth.w	ip, ip
 80166ae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80166b2:	fa5f f989 	uxtb.w	r9, r9
 80166b6:	fb06 a607 	mla	r6, r6, r7, sl
 80166ba:	f10c 0401 	add.w	r4, ip, #1
 80166be:	fb09 5507 	mla	r5, r9, r7, r5
 80166c2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80166c6:	9c03      	ldr	r4, [sp, #12]
 80166c8:	b2ad      	uxth	r5, r5
 80166ca:	b2b6      	uxth	r6, r6
 80166cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80166d0:	f105 0a01 	add.w	sl, r5, #1
 80166d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80166d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80166dc:	ea4a 0c0c 	orr.w	ip, sl, ip
 80166e0:	f106 0a01 	add.w	sl, r6, #1
 80166e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80166e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80166ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80166f0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80166f4:	f820 c004 	strh.w	ip, [r0, r4]
 80166f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80166fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80166fe:	4421      	add	r1, r4
 8016700:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016702:	4422      	add	r2, r4
 8016704:	e750      	b.n	80165a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016706:	f04f 0900 	mov.w	r9, #0
 801670a:	eba3 0409 	sub.w	r4, r3, r9
 801670e:	2c00      	cmp	r4, #0
 8016710:	f77f af4e 	ble.w	80165b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016714:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8016718:	140d      	asrs	r5, r1, #16
 801671a:	1414      	asrs	r4, r2, #16
 801671c:	fb06 5404 	mla	r4, r6, r4, r5
 8016720:	9d02      	ldr	r5, [sp, #8]
 8016722:	5d2e      	ldrb	r6, [r5, r4]
 8016724:	2e00      	cmp	r6, #0
 8016726:	d04c      	beq.n	80167c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8016728:	9d01      	ldr	r5, [sp, #4]
 801672a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801672e:	9c05      	ldr	r4, [sp, #20]
 8016730:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016734:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016738:	4366      	muls	r6, r4
 801673a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801673e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016742:	1c74      	adds	r4, r6, #1
 8016744:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016748:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801674c:	122e      	asrs	r6, r5, #8
 801674e:	1224      	asrs	r4, r4, #8
 8016750:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016754:	00ed      	lsls	r5, r5, #3
 8016756:	b2a7      	uxth	r7, r4
 8016758:	43e4      	mvns	r4, r4
 801675a:	b2ed      	uxtb	r5, r5
 801675c:	b2e4      	uxtb	r4, r4
 801675e:	fb16 f604 	smulbb	r6, r6, r4
 8016762:	fb15 f504 	smulbb	r5, r5, r4
 8016766:	fb0c 6c07 	mla	ip, ip, r7, r6
 801676a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801676e:	fb1a fa04 	smulbb	sl, sl, r4
 8016772:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016776:	fa1f fc8c 	uxth.w	ip, ip
 801677a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801677e:	fa5f f888 	uxtb.w	r8, r8
 8016782:	fb06 a607 	mla	r6, r6, r7, sl
 8016786:	f10c 0401 	add.w	r4, ip, #1
 801678a:	fb08 5507 	mla	r5, r8, r7, r5
 801678e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016792:	b2ad      	uxth	r5, r5
 8016794:	b2b6      	uxth	r6, r6
 8016796:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801679a:	f105 0a01 	add.w	sl, r5, #1
 801679e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80167a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80167a6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80167aa:	f106 0a01 	add.w	sl, r6, #1
 80167ae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80167b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80167b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80167ba:	ea4c 0c0a 	orr.w	ip, ip, sl
 80167be:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80167c2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80167c4:	f109 0901 	add.w	r9, r9, #1
 80167c8:	4421      	add	r1, r4
 80167ca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80167cc:	4422      	add	r2, r4
 80167ce:	e79c      	b.n	801670a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80167d0:	b007      	add	sp, #28
 80167d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080167d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80167d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167da:	b085      	sub	sp, #20
 80167dc:	468b      	mov	fp, r1
 80167de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80167e2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80167e4:	9203      	str	r2, [sp, #12]
 80167e6:	6861      	ldr	r1, [r4, #4]
 80167e8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80167ec:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80167f0:	fb01 2000 	mla	r0, r1, r0, r2
 80167f4:	6822      	ldr	r2, [r4, #0]
 80167f6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80167fa:	f8d8 2000 	ldr.w	r2, [r8]
 80167fe:	9200      	str	r2, [sp, #0]
 8016800:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8016804:	9201      	str	r2, [sp, #4]
 8016806:	f1bb 0f00 	cmp.w	fp, #0
 801680a:	dc03      	bgt.n	8016814 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801680c:	9a03      	ldr	r2, [sp, #12]
 801680e:	2a00      	cmp	r2, #0
 8016810:	f340 8146 	ble.w	8016aa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016814:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016816:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801681a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801681e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016820:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8016824:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016828:	2b00      	cmp	r3, #0
 801682a:	dd0e      	ble.n	801684a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801682c:	140c      	asrs	r4, r1, #16
 801682e:	d405      	bmi.n	801683c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016830:	42bc      	cmp	r4, r7
 8016832:	da03      	bge.n	801683c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016834:	1414      	asrs	r4, r2, #16
 8016836:	d401      	bmi.n	801683c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016838:	42b4      	cmp	r4, r6
 801683a:	db07      	blt.n	801684c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801683c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801683e:	3b01      	subs	r3, #1
 8016840:	3002      	adds	r0, #2
 8016842:	4421      	add	r1, r4
 8016844:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016846:	4422      	add	r2, r4
 8016848:	e7ee      	b.n	8016828 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801684a:	d017      	beq.n	801687c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801684c:	1e5c      	subs	r4, r3, #1
 801684e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016850:	fb05 1504 	mla	r5, r5, r4, r1
 8016854:	142d      	asrs	r5, r5, #16
 8016856:	d409      	bmi.n	801686c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016858:	42bd      	cmp	r5, r7
 801685a:	da07      	bge.n	801686c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801685c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801685e:	fb05 2404 	mla	r4, r5, r4, r2
 8016862:	1424      	asrs	r4, r4, #16
 8016864:	d402      	bmi.n	801686c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016866:	42b4      	cmp	r4, r6
 8016868:	f2c0 80b3 	blt.w	80169d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801686c:	2600      	movs	r6, #0
 801686e:	199c      	adds	r4, r3, r6
 8016870:	2c00      	cmp	r4, #0
 8016872:	dc3e      	bgt.n	80168f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016874:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016878:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801687c:	f1bb 0f00 	cmp.w	fp, #0
 8016880:	f340 810e 	ble.w	8016aa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016884:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016888:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801688a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801688e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016892:	eeb0 6a62 	vmov.f32	s12, s5
 8016896:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801689a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801689e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80168a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80168a6:	eeb0 6a43 	vmov.f32	s12, s6
 80168aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80168ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80168b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80168b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80168ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80168be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80168c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80168c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80168ca:	ee12 2a90 	vmov	r2, s5
 80168ce:	eef0 2a47 	vmov.f32	s5, s14
 80168d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80168d6:	ee13 2a10 	vmov	r2, s6
 80168da:	9311      	str	r3, [sp, #68]	; 0x44
 80168dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80168de:	eeb0 3a67 	vmov.f32	s6, s15
 80168e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80168e6:	9a03      	ldr	r2, [sp, #12]
 80168e8:	9312      	str	r3, [sp, #72]	; 0x48
 80168ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80168ec:	bf08      	it	eq
 80168ee:	4613      	moveq	r3, r2
 80168f0:	e789      	b.n	8016806 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80168f2:	140f      	asrs	r7, r1, #16
 80168f4:	d418      	bmi.n	8016928 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80168f6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80168fa:	42bd      	cmp	r5, r7
 80168fc:	dd14      	ble.n	8016928 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80168fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016902:	d411      	bmi.n	8016928 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016904:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8016908:	4564      	cmp	r4, ip
 801690a:	dd0d      	ble.n	8016928 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801690c:	b22d      	sxth	r5, r5
 801690e:	9c01      	ldr	r4, [sp, #4]
 8016910:	fb0c 7505 	mla	r5, ip, r5, r7
 8016914:	5d64      	ldrb	r4, [r4, r5]
 8016916:	2cff      	cmp	r4, #255	; 0xff
 8016918:	d10c      	bne.n	8016934 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801691a:	9c00      	ldr	r4, [sp, #0]
 801691c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8016920:	f06f 0401 	mvn.w	r4, #1
 8016924:	4374      	muls	r4, r6
 8016926:	5305      	strh	r5, [r0, r4]
 8016928:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801692a:	3e01      	subs	r6, #1
 801692c:	4421      	add	r1, r4
 801692e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016930:	4422      	add	r2, r4
 8016932:	e79c      	b.n	801686e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016934:	2c00      	cmp	r4, #0
 8016936:	d0f7      	beq.n	8016928 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016938:	9f00      	ldr	r7, [sp, #0]
 801693a:	fa1f fc84 	uxth.w	ip, r4
 801693e:	43e4      	mvns	r4, r4
 8016940:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8016944:	f06f 0501 	mvn.w	r5, #1
 8016948:	b2e4      	uxtb	r4, r4
 801694a:	4375      	muls	r5, r6
 801694c:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8016950:	9502      	str	r5, [sp, #8]
 8016952:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016956:	5b45      	ldrh	r5, [r0, r5]
 8016958:	122f      	asrs	r7, r5, #8
 801695a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801695e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016962:	00ed      	lsls	r5, r5, #3
 8016964:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016968:	fb17 f704 	smulbb	r7, r7, r4
 801696c:	b2ed      	uxtb	r5, r5
 801696e:	fb1a fa04 	smulbb	sl, sl, r4
 8016972:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8016976:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801697a:	fb15 f504 	smulbb	r5, r5, r4
 801697e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016982:	fa1f fe8e 	uxth.w	lr, lr
 8016986:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801698a:	fa5f f989 	uxtb.w	r9, r9
 801698e:	fb07 a70c 	mla	r7, r7, ip, sl
 8016992:	f10e 0401 	add.w	r4, lr, #1
 8016996:	fb09 550c 	mla	r5, r9, ip, r5
 801699a:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801699e:	9c02      	ldr	r4, [sp, #8]
 80169a0:	b2ad      	uxth	r5, r5
 80169a2:	b2bf      	uxth	r7, r7
 80169a4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80169a8:	f105 0a01 	add.w	sl, r5, #1
 80169ac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80169b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80169b4:	ea4a 0e0e 	orr.w	lr, sl, lr
 80169b8:	f107 0a01 	add.w	sl, r7, #1
 80169bc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80169c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80169c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80169c8:	ea4e 0e0a 	orr.w	lr, lr, sl
 80169cc:	f820 e004 	strh.w	lr, [r0, r4]
 80169d0:	e7aa      	b.n	8016928 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80169d2:	f04f 0900 	mov.w	r9, #0
 80169d6:	eba3 0409 	sub.w	r4, r3, r9
 80169da:	2c00      	cmp	r4, #0
 80169dc:	f77f af4a 	ble.w	8016874 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80169e0:	1414      	asrs	r4, r2, #16
 80169e2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80169e6:	140d      	asrs	r5, r1, #16
 80169e8:	fb06 5504 	mla	r5, r6, r4, r5
 80169ec:	9c01      	ldr	r4, [sp, #4]
 80169ee:	5d64      	ldrb	r4, [r4, r5]
 80169f0:	2cff      	cmp	r4, #255	; 0xff
 80169f2:	d10b      	bne.n	8016a0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80169f4:	9c00      	ldr	r4, [sp, #0]
 80169f6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80169fa:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80169fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016a00:	f109 0901 	add.w	r9, r9, #1
 8016a04:	4421      	add	r1, r4
 8016a06:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016a08:	4422      	add	r2, r4
 8016a0a:	e7e4      	b.n	80169d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8016a0c:	2c00      	cmp	r4, #0
 8016a0e:	d0f6      	beq.n	80169fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016a10:	9e00      	ldr	r6, [sp, #0]
 8016a12:	b2a7      	uxth	r7, r4
 8016a14:	43e4      	mvns	r4, r4
 8016a16:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8016a1a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016a1e:	b2e4      	uxtb	r4, r4
 8016a20:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016a24:	122e      	asrs	r6, r5, #8
 8016a26:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016a2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016a2e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016a32:	00ed      	lsls	r5, r5, #3
 8016a34:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016a38:	fb16 f604 	smulbb	r6, r6, r4
 8016a3c:	b2ed      	uxtb	r5, r5
 8016a3e:	fb1a fa04 	smulbb	sl, sl, r4
 8016a42:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016a46:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016a4a:	fb15 f504 	smulbb	r5, r5, r4
 8016a4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a52:	fa1f fc8c 	uxth.w	ip, ip
 8016a56:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a5a:	fa5f fe8e 	uxtb.w	lr, lr
 8016a5e:	fb06 a607 	mla	r6, r6, r7, sl
 8016a62:	f10c 0401 	add.w	r4, ip, #1
 8016a66:	fb0e 5507 	mla	r5, lr, r7, r5
 8016a6a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016a6e:	b2ad      	uxth	r5, r5
 8016a70:	b2b6      	uxth	r6, r6
 8016a72:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016a76:	f105 0a01 	add.w	sl, r5, #1
 8016a7a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016a7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016a82:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016a86:	f106 0a01 	add.w	sl, r6, #1
 8016a8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016a8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016a92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016a96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016a9a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8016a9e:	e7ae      	b.n	80169fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016aa0:	b005      	add	sp, #20
 8016aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016aa6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016aa6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016aaa:	b085      	sub	sp, #20
 8016aac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016aae:	9203      	str	r2, [sp, #12]
 8016ab0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8016ab4:	9100      	str	r1, [sp, #0]
 8016ab6:	9201      	str	r2, [sp, #4]
 8016ab8:	6841      	ldr	r1, [r0, #4]
 8016aba:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8016abe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016ac2:	fb01 2404 	mla	r4, r1, r4, r2
 8016ac6:	6802      	ldr	r2, [r0, #0]
 8016ac8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016acc:	f8de 2000 	ldr.w	r2, [lr]
 8016ad0:	9202      	str	r2, [sp, #8]
 8016ad2:	9a01      	ldr	r2, [sp, #4]
 8016ad4:	43d6      	mvns	r6, r2
 8016ad6:	b2f6      	uxtb	r6, r6
 8016ad8:	9a00      	ldr	r2, [sp, #0]
 8016ada:	2a00      	cmp	r2, #0
 8016adc:	dc03      	bgt.n	8016ae6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016ade:	9a03      	ldr	r2, [sp, #12]
 8016ae0:	2a00      	cmp	r2, #0
 8016ae2:	f340 8124 	ble.w	8016d2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016ae6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016ae8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8016aec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016af0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016af2:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8016af6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016afa:	2b00      	cmp	r3, #0
 8016afc:	dd0e      	ble.n	8016b1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016afe:	1408      	asrs	r0, r1, #16
 8016b00:	d405      	bmi.n	8016b0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016b02:	4560      	cmp	r0, ip
 8016b04:	da03      	bge.n	8016b0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016b06:	1410      	asrs	r0, r2, #16
 8016b08:	d401      	bmi.n	8016b0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016b0a:	42b8      	cmp	r0, r7
 8016b0c:	db07      	blt.n	8016b1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016b0e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016b10:	3b01      	subs	r3, #1
 8016b12:	3402      	adds	r4, #2
 8016b14:	4401      	add	r1, r0
 8016b16:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016b18:	4402      	add	r2, r0
 8016b1a:	e7ee      	b.n	8016afa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016b1c:	d06e      	beq.n	8016bfc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016b1e:	1e58      	subs	r0, r3, #1
 8016b20:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016b22:	fb05 1500 	mla	r5, r5, r0, r1
 8016b26:	142d      	asrs	r5, r5, #16
 8016b28:	d45c      	bmi.n	8016be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016b2a:	4565      	cmp	r5, ip
 8016b2c:	da5a      	bge.n	8016be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016b2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016b30:	fb05 2000 	mla	r0, r5, r0, r2
 8016b34:	1400      	asrs	r0, r0, #16
 8016b36:	d455      	bmi.n	8016be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016b38:	42b8      	cmp	r0, r7
 8016b3a:	da53      	bge.n	8016be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016b3c:	4699      	mov	r9, r3
 8016b3e:	46a2      	mov	sl, r4
 8016b40:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8016b44:	f1b9 0f00 	cmp.w	r9, #0
 8016b48:	dd54      	ble.n	8016bf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016b4a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016b4e:	140d      	asrs	r5, r1, #16
 8016b50:	1410      	asrs	r0, r2, #16
 8016b52:	f109 39ff 	add.w	r9, r9, #4294967295
 8016b56:	fb07 5000 	mla	r0, r7, r0, r5
 8016b5a:	9d02      	ldr	r5, [sp, #8]
 8016b5c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8016b60:	f8ba 5000 	ldrh.w	r5, [sl]
 8016b64:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016b68:	122f      	asrs	r7, r5, #8
 8016b6a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016b6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016b72:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016b76:	00ed      	lsls	r5, r5, #3
 8016b78:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8016b7c:	fb17 f706 	smulbb	r7, r7, r6
 8016b80:	b2ed      	uxtb	r5, r5
 8016b82:	fb18 f806 	smulbb	r8, r8, r6
 8016b86:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8016b8a:	10c7      	asrs	r7, r0, #3
 8016b8c:	fb15 f506 	smulbb	r5, r5, r6
 8016b90:	00c0      	lsls	r0, r0, #3
 8016b92:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016b96:	fa1f fc8c 	uxth.w	ip, ip
 8016b9a:	b2c0      	uxtb	r0, r0
 8016b9c:	fb07 870b 	mla	r7, r7, fp, r8
 8016ba0:	fb00 500b 	mla	r0, r0, fp, r5
 8016ba4:	f10c 0501 	add.w	r5, ip, #1
 8016ba8:	b2bf      	uxth	r7, r7
 8016baa:	b280      	uxth	r0, r0
 8016bac:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016bb0:	f107 0801 	add.w	r8, r7, #1
 8016bb4:	1c45      	adds	r5, r0, #1
 8016bb6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8016bba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016bbe:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016bc2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016bc4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016bc8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016bcc:	4401      	add	r1, r0
 8016bce:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016bd2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016bd4:	ea45 0c0c 	orr.w	ip, r5, ip
 8016bd8:	4402      	add	r2, r0
 8016bda:	ea4c 0c08 	orr.w	ip, ip, r8
 8016bde:	f82a cb02 	strh.w	ip, [sl], #2
 8016be2:	e7af      	b.n	8016b44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016be4:	f04f 0800 	mov.w	r8, #0
 8016be8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8016bec:	eb03 0008 	add.w	r0, r3, r8
 8016bf0:	2800      	cmp	r0, #0
 8016bf2:	dc41      	bgt.n	8016c78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016bf4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016bf8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016bfc:	9b00      	ldr	r3, [sp, #0]
 8016bfe:	2b00      	cmp	r3, #0
 8016c00:	f340 8095 	ble.w	8016d2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016c04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016c08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016c0a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016c0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016c12:	eef0 6a62 	vmov.f32	s13, s5
 8016c16:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016c1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016c1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c22:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8016c26:	eef0 6a43 	vmov.f32	s13, s6
 8016c2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c2e:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8016c32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016c36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016c3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c4a:	ee12 2a90 	vmov	r2, s5
 8016c4e:	eef0 2a47 	vmov.f32	s5, s14
 8016c52:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c56:	ee13 2a10 	vmov	r2, s6
 8016c5a:	9311      	str	r3, [sp, #68]	; 0x44
 8016c5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016c5e:	eeb0 3a67 	vmov.f32	s6, s15
 8016c62:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c66:	9312      	str	r3, [sp, #72]	; 0x48
 8016c68:	9b00      	ldr	r3, [sp, #0]
 8016c6a:	9a03      	ldr	r2, [sp, #12]
 8016c6c:	3b01      	subs	r3, #1
 8016c6e:	9300      	str	r3, [sp, #0]
 8016c70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016c72:	bf08      	it	eq
 8016c74:	4613      	moveq	r3, r2
 8016c76:	e72f      	b.n	8016ad8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016c78:	140f      	asrs	r7, r1, #16
 8016c7a:	d451      	bmi.n	8016d20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016c7c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016c80:	42bd      	cmp	r5, r7
 8016c82:	dd4d      	ble.n	8016d20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016c84:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016c88:	d44a      	bmi.n	8016d20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016c8a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016c8e:	4560      	cmp	r0, ip
 8016c90:	dd46      	ble.n	8016d20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016c92:	b22d      	sxth	r5, r5
 8016c94:	9802      	ldr	r0, [sp, #8]
 8016c96:	fb0c 7505 	mla	r5, ip, r5, r7
 8016c9a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8016c9e:	f06f 0501 	mvn.w	r5, #1
 8016ca2:	fb05 fb08 	mul.w	fp, r5, r8
 8016ca6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016caa:	f834 500b 	ldrh.w	r5, [r4, fp]
 8016cae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016cb2:	122f      	asrs	r7, r5, #8
 8016cb4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016cb8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016cbc:	00ed      	lsls	r5, r5, #3
 8016cbe:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016cc2:	fb17 f706 	smulbb	r7, r7, r6
 8016cc6:	b2ed      	uxtb	r5, r5
 8016cc8:	fb19 f906 	smulbb	r9, r9, r6
 8016ccc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016cd0:	10c7      	asrs	r7, r0, #3
 8016cd2:	fb15 f506 	smulbb	r5, r5, r6
 8016cd6:	00c0      	lsls	r0, r0, #3
 8016cd8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016cdc:	fa1f fc8c 	uxth.w	ip, ip
 8016ce0:	b2c0      	uxtb	r0, r0
 8016ce2:	fb07 970a 	mla	r7, r7, sl, r9
 8016ce6:	fb00 500a 	mla	r0, r0, sl, r5
 8016cea:	f10c 0501 	add.w	r5, ip, #1
 8016cee:	b2bf      	uxth	r7, r7
 8016cf0:	b280      	uxth	r0, r0
 8016cf2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016cf6:	f107 0901 	add.w	r9, r7, #1
 8016cfa:	1c45      	adds	r5, r0, #1
 8016cfc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016d00:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016d04:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016d08:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016d0c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016d10:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016d14:	ea45 0c0c 	orr.w	ip, r5, ip
 8016d18:	ea4c 0c09 	orr.w	ip, ip, r9
 8016d1c:	f824 c00b 	strh.w	ip, [r4, fp]
 8016d20:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016d22:	f108 38ff 	add.w	r8, r8, #4294967295
 8016d26:	4401      	add	r1, r0
 8016d28:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016d2a:	4402      	add	r2, r0
 8016d2c:	e75e      	b.n	8016bec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8016d2e:	b005      	add	sp, #20
 8016d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016d34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d38:	b085      	sub	sp, #20
 8016d3a:	4693      	mov	fp, r2
 8016d3c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016d40:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016d42:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016d44:	6870      	ldr	r0, [r6, #4]
 8016d46:	9101      	str	r1, [sp, #4]
 8016d48:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016d4c:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016d50:	fb00 2404 	mla	r4, r0, r4, r2
 8016d54:	6832      	ldr	r2, [r6, #0]
 8016d56:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016d5a:	682a      	ldr	r2, [r5, #0]
 8016d5c:	9202      	str	r2, [sp, #8]
 8016d5e:	9a01      	ldr	r2, [sp, #4]
 8016d60:	2a00      	cmp	r2, #0
 8016d62:	dc03      	bgt.n	8016d6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016d64:	f1bb 0f00 	cmp.w	fp, #0
 8016d68:	f340 809a 	ble.w	8016ea0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016d6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016d6e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016d72:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016d76:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016d78:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016d7c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016d80:	2b00      	cmp	r3, #0
 8016d82:	dd0c      	ble.n	8016d9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016d84:	1406      	asrs	r6, r0, #16
 8016d86:	d405      	bmi.n	8016d94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016d88:	454e      	cmp	r6, r9
 8016d8a:	da03      	bge.n	8016d94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016d8c:	1416      	asrs	r6, r2, #16
 8016d8e:	d401      	bmi.n	8016d94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016d90:	4546      	cmp	r6, r8
 8016d92:	db05      	blt.n	8016da0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016d94:	4470      	add	r0, lr
 8016d96:	4462      	add	r2, ip
 8016d98:	3b01      	subs	r3, #1
 8016d9a:	3402      	adds	r4, #2
 8016d9c:	e7f0      	b.n	8016d80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016d9e:	d00f      	beq.n	8016dc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016da0:	1e5e      	subs	r6, r3, #1
 8016da2:	fb0e 0706 	mla	r7, lr, r6, r0
 8016da6:	143f      	asrs	r7, r7, #16
 8016da8:	d541      	bpl.n	8016e2e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8016daa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016dae:	4698      	mov	r8, r3
 8016db0:	9603      	str	r6, [sp, #12]
 8016db2:	f1b8 0f00 	cmp.w	r8, #0
 8016db6:	dc56      	bgt.n	8016e66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016db8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016dbc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016dc0:	9b01      	ldr	r3, [sp, #4]
 8016dc2:	2b00      	cmp	r3, #0
 8016dc4:	dd6c      	ble.n	8016ea0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016dc6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016dca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016dcc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016dd0:	eeb0 6a62 	vmov.f32	s12, s5
 8016dd4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016dd8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016ddc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016de0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016de4:	eeb0 6a43 	vmov.f32	s12, s6
 8016de8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016dec:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016df0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016df4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016df8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016dfc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016e00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016e04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016e08:	ee12 2a90 	vmov	r2, s5
 8016e0c:	eef0 2a47 	vmov.f32	s5, s14
 8016e10:	fb92 fef3 	sdiv	lr, r2, r3
 8016e14:	ee13 2a10 	vmov	r2, s6
 8016e18:	eeb0 3a67 	vmov.f32	s6, s15
 8016e1c:	fb92 fcf3 	sdiv	ip, r2, r3
 8016e20:	9b01      	ldr	r3, [sp, #4]
 8016e22:	3b01      	subs	r3, #1
 8016e24:	9301      	str	r3, [sp, #4]
 8016e26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016e28:	bf08      	it	eq
 8016e2a:	465b      	moveq	r3, fp
 8016e2c:	e797      	b.n	8016d5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016e2e:	454f      	cmp	r7, r9
 8016e30:	dabb      	bge.n	8016daa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016e32:	fb0c 2606 	mla	r6, ip, r6, r2
 8016e36:	1436      	asrs	r6, r6, #16
 8016e38:	d4b7      	bmi.n	8016daa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016e3a:	4546      	cmp	r6, r8
 8016e3c:	dab5      	bge.n	8016daa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016e3e:	461e      	mov	r6, r3
 8016e40:	46a0      	mov	r8, r4
 8016e42:	2e00      	cmp	r6, #0
 8016e44:	ddb8      	ble.n	8016db8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016e46:	1417      	asrs	r7, r2, #16
 8016e48:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8016e4c:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016e50:	9902      	ldr	r1, [sp, #8]
 8016e52:	4470      	add	r0, lr
 8016e54:	4462      	add	r2, ip
 8016e56:	fb0a 9707 	mla	r7, sl, r7, r9
 8016e5a:	3e01      	subs	r6, #1
 8016e5c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8016e60:	f828 7b02 	strh.w	r7, [r8], #2
 8016e64:	e7ed      	b.n	8016e42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016e66:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016e6a:	d414      	bmi.n	8016e96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016e6c:	68ae      	ldr	r6, [r5, #8]
 8016e6e:	454e      	cmp	r6, r9
 8016e70:	dd11      	ble.n	8016e96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016e72:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016e76:	d40e      	bmi.n	8016e96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016e78:	68ef      	ldr	r7, [r5, #12]
 8016e7a:	4557      	cmp	r7, sl
 8016e7c:	dd0b      	ble.n	8016e96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016e7e:	b236      	sxth	r6, r6
 8016e80:	f06f 0101 	mvn.w	r1, #1
 8016e84:	9f02      	ldr	r7, [sp, #8]
 8016e86:	fb0a 9606 	mla	r6, sl, r6, r9
 8016e8a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8016e8e:	fb01 f608 	mul.w	r6, r1, r8
 8016e92:	9903      	ldr	r1, [sp, #12]
 8016e94:	538f      	strh	r7, [r1, r6]
 8016e96:	4470      	add	r0, lr
 8016e98:	4462      	add	r2, ip
 8016e9a:	f108 38ff 	add.w	r8, r8, #4294967295
 8016e9e:	e788      	b.n	8016db2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016ea0:	b005      	add	sp, #20
 8016ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016ea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016ea6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016eaa:	b087      	sub	sp, #28
 8016eac:	468b      	mov	fp, r1
 8016eae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016eb2:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016eb4:	9203      	str	r2, [sp, #12]
 8016eb6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016eba:	6841      	ldr	r1, [r0, #4]
 8016ebc:	9204      	str	r2, [sp, #16]
 8016ebe:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016ec2:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8016ec6:	fb01 2505 	mla	r5, r1, r5, r2
 8016eca:	6802      	ldr	r2, [r0, #0]
 8016ecc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8016ed0:	f8d9 2000 	ldr.w	r2, [r9]
 8016ed4:	9201      	str	r2, [sp, #4]
 8016ed6:	f1bb 0f00 	cmp.w	fp, #0
 8016eda:	dc03      	bgt.n	8016ee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016edc:	9a03      	ldr	r2, [sp, #12]
 8016ede:	2a00      	cmp	r2, #0
 8016ee0:	f340 8158 	ble.w	8017194 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8016ee4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016ee6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016eea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016eee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016ef0:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016ef4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016ef8:	2b00      	cmp	r3, #0
 8016efa:	dd0e      	ble.n	8016f1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016efc:	1402      	asrs	r2, r0, #16
 8016efe:	d405      	bmi.n	8016f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016f00:	42ba      	cmp	r2, r7
 8016f02:	da03      	bge.n	8016f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016f04:	140a      	asrs	r2, r1, #16
 8016f06:	d401      	bmi.n	8016f0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016f08:	42b2      	cmp	r2, r6
 8016f0a:	db07      	blt.n	8016f1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016f0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016f0e:	3b01      	subs	r3, #1
 8016f10:	3502      	adds	r5, #2
 8016f12:	4410      	add	r0, r2
 8016f14:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016f16:	4411      	add	r1, r2
 8016f18:	e7ee      	b.n	8016ef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016f1a:	d017      	beq.n	8016f4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8016f1c:	1e5a      	subs	r2, r3, #1
 8016f1e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016f20:	fb04 0402 	mla	r4, r4, r2, r0
 8016f24:	1424      	asrs	r4, r4, #16
 8016f26:	d409      	bmi.n	8016f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016f28:	42bc      	cmp	r4, r7
 8016f2a:	da07      	bge.n	8016f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016f2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016f2e:	fb04 1202 	mla	r2, r4, r2, r1
 8016f32:	1412      	asrs	r2, r2, #16
 8016f34:	d402      	bmi.n	8016f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016f36:	42b2      	cmp	r2, r6
 8016f38:	f2c0 80bf 	blt.w	80170ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016f3c:	2700      	movs	r7, #0
 8016f3e:	19da      	adds	r2, r3, r7
 8016f40:	2a00      	cmp	r2, #0
 8016f42:	dc3e      	bgt.n	8016fc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016f44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016f48:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8016f4c:	f1bb 0f00 	cmp.w	fp, #0
 8016f50:	f340 8120 	ble.w	8017194 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8016f54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016f58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016f5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016f5e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016f62:	eeb0 6a62 	vmov.f32	s12, s5
 8016f66:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016f6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016f6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f72:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016f76:	eeb0 6a43 	vmov.f32	s12, s6
 8016f7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f7e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016f82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016f86:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016f8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016f8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016f92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016f96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016f9a:	ee12 2a90 	vmov	r2, s5
 8016f9e:	eef0 2a47 	vmov.f32	s5, s14
 8016fa2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016fa6:	ee13 2a10 	vmov	r2, s6
 8016faa:	9313      	str	r3, [sp, #76]	; 0x4c
 8016fac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016fae:	eeb0 3a67 	vmov.f32	s6, s15
 8016fb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016fb6:	9a03      	ldr	r2, [sp, #12]
 8016fb8:	9314      	str	r3, [sp, #80]	; 0x50
 8016fba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016fbc:	bf08      	it	eq
 8016fbe:	4613      	moveq	r3, r2
 8016fc0:	e789      	b.n	8016ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016fc2:	1406      	asrs	r6, r0, #16
 8016fc4:	d42d      	bmi.n	8017022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016fc6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8016fca:	42b4      	cmp	r4, r6
 8016fcc:	dd29      	ble.n	8017022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016fce:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8016fd2:	d426      	bmi.n	8017022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016fd4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016fd8:	4562      	cmp	r2, ip
 8016fda:	dd22      	ble.n	8017022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016fdc:	b224      	sxth	r4, r4
 8016fde:	9a01      	ldr	r2, [sp, #4]
 8016fe0:	fb0c 6404 	mla	r4, ip, r4, r6
 8016fe4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8016fe8:	0e22      	lsrs	r2, r4, #24
 8016fea:	d01a      	beq.n	8017022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016fec:	9e04      	ldr	r6, [sp, #16]
 8016fee:	4372      	muls	r2, r6
 8016ff0:	1c56      	adds	r6, r2, #1
 8016ff2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016ff6:	0a26      	lsrs	r6, r4, #8
 8016ff8:	1212      	asrs	r2, r2, #8
 8016ffa:	9605      	str	r6, [sp, #20]
 8016ffc:	2aff      	cmp	r2, #255	; 0xff
 8016ffe:	d116      	bne.n	801702e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017000:	f06f 0201 	mvn.w	r2, #1
 8017004:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8017008:	fb02 fc07 	mul.w	ip, r2, r7
 801700c:	0962      	lsrs	r2, r4, #5
 801700e:	f026 0607 	bic.w	r6, r6, #7
 8017012:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017016:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801701a:	4316      	orrs	r6, r2
 801701c:	4326      	orrs	r6, r4
 801701e:	f825 600c 	strh.w	r6, [r5, ip]
 8017022:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017024:	3f01      	subs	r7, #1
 8017026:	4410      	add	r0, r2
 8017028:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801702a:	4411      	add	r1, r2
 801702c:	e787      	b.n	8016f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801702e:	f06f 0601 	mvn.w	r6, #1
 8017032:	fa1f fa82 	uxth.w	sl, r2
 8017036:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801703a:	43d2      	mvns	r2, r2
 801703c:	437e      	muls	r6, r7
 801703e:	b2e4      	uxtb	r4, r4
 8017040:	fb1c fc0a 	smulbb	ip, ip, sl
 8017044:	b2d2      	uxtb	r2, r2
 8017046:	f835 8006 	ldrh.w	r8, [r5, r6]
 801704a:	fb14 f40a 	smulbb	r4, r4, sl
 801704e:	9602      	str	r6, [sp, #8]
 8017050:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017054:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8017058:	fb16 f60a 	smulbb	r6, r6, sl
 801705c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8017060:	fb0e ce02 	mla	lr, lr, r2, ip
 8017064:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017068:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801706c:	fa1f fe8e 	uxth.w	lr, lr
 8017070:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017074:	fa5f f888 	uxtb.w	r8, r8
 8017078:	fb0c 6c02 	mla	ip, ip, r2, r6
 801707c:	fb08 4402 	mla	r4, r8, r2, r4
 8017080:	f10e 0201 	add.w	r2, lr, #1
 8017084:	fa1f fc8c 	uxth.w	ip, ip
 8017088:	b2a4      	uxth	r4, r4
 801708a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801708e:	9a02      	ldr	r2, [sp, #8]
 8017090:	1c66      	adds	r6, r4, #1
 8017092:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8017096:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801709a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801709e:	ea46 0e0e 	orr.w	lr, r6, lr
 80170a2:	f10c 0601 	add.w	r6, ip, #1
 80170a6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80170aa:	0976      	lsrs	r6, r6, #5
 80170ac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80170b0:	ea4e 0e06 	orr.w	lr, lr, r6
 80170b4:	f825 e002 	strh.w	lr, [r5, r2]
 80170b8:	e7b3      	b.n	8017022 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80170ba:	f04f 0800 	mov.w	r8, #0
 80170be:	eba3 0208 	sub.w	r2, r3, r8
 80170c2:	2a00      	cmp	r2, #0
 80170c4:	f77f af3e 	ble.w	8016f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80170c8:	1404      	asrs	r4, r0, #16
 80170ca:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80170ce:	140a      	asrs	r2, r1, #16
 80170d0:	fb06 4202 	mla	r2, r6, r2, r4
 80170d4:	9c01      	ldr	r4, [sp, #4]
 80170d6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80170da:	0e22      	lsrs	r2, r4, #24
 80170dc:	d015      	beq.n	801710a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80170de:	9e04      	ldr	r6, [sp, #16]
 80170e0:	4372      	muls	r2, r6
 80170e2:	1c56      	adds	r6, r2, #1
 80170e4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80170e8:	0a26      	lsrs	r6, r4, #8
 80170ea:	1212      	asrs	r2, r2, #8
 80170ec:	2aff      	cmp	r2, #255	; 0xff
 80170ee:	d113      	bne.n	8017118 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80170f0:	0962      	lsrs	r2, r4, #5
 80170f2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80170f6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80170fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80170fe:	f026 0607 	bic.w	r6, r6, #7
 8017102:	4316      	orrs	r6, r2
 8017104:	4326      	orrs	r6, r4
 8017106:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801710a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801710c:	f108 0801 	add.w	r8, r8, #1
 8017110:	4410      	add	r0, r2
 8017112:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017114:	4411      	add	r1, r2
 8017116:	e7d2      	b.n	80170be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8017118:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801711c:	fa1f fa82 	uxth.w	sl, r2
 8017120:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8017124:	43d2      	mvns	r2, r2
 8017126:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801712a:	fb17 f70a 	smulbb	r7, r7, sl
 801712e:	b2d2      	uxtb	r2, r2
 8017130:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017134:	b2e4      	uxtb	r4, r4
 8017136:	b2f6      	uxtb	r6, r6
 8017138:	fb0c 7c02 	mla	ip, ip, r2, r7
 801713c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017140:	fb14 f40a 	smulbb	r4, r4, sl
 8017144:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017148:	fa1f fc8c 	uxth.w	ip, ip
 801714c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017150:	fb16 f60a 	smulbb	r6, r6, sl
 8017154:	fa5f fe8e 	uxtb.w	lr, lr
 8017158:	fb0e 4402 	mla	r4, lr, r2, r4
 801715c:	fb07 6702 	mla	r7, r7, r2, r6
 8017160:	f10c 0201 	add.w	r2, ip, #1
 8017164:	b2a4      	uxth	r4, r4
 8017166:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801716a:	1c66      	adds	r6, r4, #1
 801716c:	b2bf      	uxth	r7, r7
 801716e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017172:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8017176:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801717a:	ea46 0c0c 	orr.w	ip, r6, ip
 801717e:	1c7e      	adds	r6, r7, #1
 8017180:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017184:	0976      	lsrs	r6, r6, #5
 8017186:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801718a:	ea4c 0c06 	orr.w	ip, ip, r6
 801718e:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8017192:	e7ba      	b.n	801710a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017194:	b007      	add	sp, #28
 8017196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801719c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801719c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171a0:	b085      	sub	sp, #20
 80171a2:	468b      	mov	fp, r1
 80171a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80171a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80171aa:	9203      	str	r2, [sp, #12]
 80171ac:	6841      	ldr	r1, [r0, #4]
 80171ae:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80171b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80171b6:	fb01 2404 	mla	r4, r1, r4, r2
 80171ba:	6802      	ldr	r2, [r0, #0]
 80171bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80171c0:	f8d8 2000 	ldr.w	r2, [r8]
 80171c4:	9201      	str	r2, [sp, #4]
 80171c6:	f1bb 0f00 	cmp.w	fp, #0
 80171ca:	dc03      	bgt.n	80171d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80171cc:	9a03      	ldr	r2, [sp, #12]
 80171ce:	2a00      	cmp	r2, #0
 80171d0:	f340 814f 	ble.w	8017472 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80171d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80171d6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80171da:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80171de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80171e0:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80171e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80171e8:	2b00      	cmp	r3, #0
 80171ea:	dd0e      	ble.n	801720a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80171ec:	1408      	asrs	r0, r1, #16
 80171ee:	d405      	bmi.n	80171fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80171f0:	42b8      	cmp	r0, r7
 80171f2:	da03      	bge.n	80171fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80171f4:	1410      	asrs	r0, r2, #16
 80171f6:	d401      	bmi.n	80171fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80171f8:	42b0      	cmp	r0, r6
 80171fa:	db07      	blt.n	801720c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80171fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80171fe:	3b01      	subs	r3, #1
 8017200:	3402      	adds	r4, #2
 8017202:	4401      	add	r1, r0
 8017204:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017206:	4402      	add	r2, r0
 8017208:	e7ee      	b.n	80171e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801720a:	d017      	beq.n	801723c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801720c:	1e58      	subs	r0, r3, #1
 801720e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017210:	fb05 1500 	mla	r5, r5, r0, r1
 8017214:	142d      	asrs	r5, r5, #16
 8017216:	d409      	bmi.n	801722c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017218:	42bd      	cmp	r5, r7
 801721a:	da07      	bge.n	801722c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801721c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801721e:	fb05 2000 	mla	r0, r5, r0, r2
 8017222:	1400      	asrs	r0, r0, #16
 8017224:	d402      	bmi.n	801722c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017226:	42b0      	cmp	r0, r6
 8017228:	f2c0 80ba 	blt.w	80173a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801722c:	2600      	movs	r6, #0
 801722e:	1998      	adds	r0, r3, r6
 8017230:	2800      	cmp	r0, #0
 8017232:	dc3e      	bgt.n	80172b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8017234:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017238:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801723c:	f1bb 0f00 	cmp.w	fp, #0
 8017240:	f340 8117 	ble.w	8017472 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8017244:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017248:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801724a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801724e:	f1bb 0b01 	subs.w	fp, fp, #1
 8017252:	eeb0 6a62 	vmov.f32	s12, s5
 8017256:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801725a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801725e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017262:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017266:	eeb0 6a43 	vmov.f32	s12, s6
 801726a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801726e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017272:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017276:	ee61 7a27 	vmul.f32	s15, s2, s15
 801727a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801727e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017282:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017286:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801728a:	ee12 2a90 	vmov	r2, s5
 801728e:	eef0 2a47 	vmov.f32	s5, s14
 8017292:	fb92 f3f3 	sdiv	r3, r2, r3
 8017296:	ee13 2a10 	vmov	r2, s6
 801729a:	9311      	str	r3, [sp, #68]	; 0x44
 801729c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801729e:	eeb0 3a67 	vmov.f32	s6, s15
 80172a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80172a6:	9a03      	ldr	r2, [sp, #12]
 80172a8:	9312      	str	r3, [sp, #72]	; 0x48
 80172aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80172ac:	bf08      	it	eq
 80172ae:	4613      	moveq	r3, r2
 80172b0:	e789      	b.n	80171c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80172b2:	140f      	asrs	r7, r1, #16
 80172b4:	d424      	bmi.n	8017300 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80172b6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80172ba:	42bd      	cmp	r5, r7
 80172bc:	dd20      	ble.n	8017300 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80172be:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80172c2:	d41d      	bmi.n	8017300 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80172c4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80172c8:	4560      	cmp	r0, ip
 80172ca:	dd19      	ble.n	8017300 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80172cc:	b22d      	sxth	r5, r5
 80172ce:	9801      	ldr	r0, [sp, #4]
 80172d0:	fb0c 7505 	mla	r5, ip, r5, r7
 80172d4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80172d8:	0e07      	lsrs	r7, r0, #24
 80172da:	2fff      	cmp	r7, #255	; 0xff
 80172dc:	d116      	bne.n	801730c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80172de:	f06f 0501 	mvn.w	r5, #1
 80172e2:	fb05 f706 	mul.w	r7, r5, r6
 80172e6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80172ea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80172ee:	0945      	lsrs	r5, r0, #5
 80172f0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80172f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80172f8:	ea4c 0505 	orr.w	r5, ip, r5
 80172fc:	4305      	orrs	r5, r0
 80172fe:	53e5      	strh	r5, [r4, r7]
 8017300:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017302:	3e01      	subs	r6, #1
 8017304:	4401      	add	r1, r0
 8017306:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017308:	4402      	add	r2, r0
 801730a:	e790      	b.n	801722e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801730c:	b2fd      	uxtb	r5, r7
 801730e:	2f00      	cmp	r7, #0
 8017310:	d0f6      	beq.n	8017300 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017312:	f06f 0701 	mvn.w	r7, #1
 8017316:	fa1f f985 	uxth.w	r9, r5
 801731a:	43ed      	mvns	r5, r5
 801731c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8017320:	4377      	muls	r7, r6
 8017322:	fb1a fa09 	smulbb	sl, sl, r9
 8017326:	b2ed      	uxtb	r5, r5
 8017328:	f834 e007 	ldrh.w	lr, [r4, r7]
 801732c:	9702      	str	r7, [sp, #8]
 801732e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8017332:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017336:	fb17 f709 	smulbb	r7, r7, r9
 801733a:	b2c0      	uxtb	r0, r0
 801733c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017340:	fb10 f009 	smulbb	r0, r0, r9
 8017344:	fb0c 7c05 	mla	ip, ip, r5, r7
 8017348:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801734c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017350:	fa1f fc8c 	uxth.w	ip, ip
 8017354:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017358:	fa5f fe8e 	uxtb.w	lr, lr
 801735c:	fb07 a705 	mla	r7, r7, r5, sl
 8017360:	fb0e 0005 	mla	r0, lr, r5, r0
 8017364:	f10c 0501 	add.w	r5, ip, #1
 8017368:	b2bf      	uxth	r7, r7
 801736a:	b280      	uxth	r0, r0
 801736c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017370:	f100 0a01 	add.w	sl, r0, #1
 8017374:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017378:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801737c:	9802      	ldr	r0, [sp, #8]
 801737e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017382:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017386:	f107 0a01 	add.w	sl, r7, #1
 801738a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801738e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017392:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017396:	ea4c 0c0a 	orr.w	ip, ip, sl
 801739a:	f824 c000 	strh.w	ip, [r4, r0]
 801739e:	e7af      	b.n	8017300 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80173a0:	f04f 0e00 	mov.w	lr, #0
 80173a4:	eba3 000e 	sub.w	r0, r3, lr
 80173a8:	2800      	cmp	r0, #0
 80173aa:	f77f af43 	ble.w	8017234 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80173ae:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80173b2:	140d      	asrs	r5, r1, #16
 80173b4:	1410      	asrs	r0, r2, #16
 80173b6:	fb06 5000 	mla	r0, r6, r0, r5
 80173ba:	9d01      	ldr	r5, [sp, #4]
 80173bc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80173c0:	0e2e      	lsrs	r6, r5, #24
 80173c2:	2eff      	cmp	r6, #255	; 0xff
 80173c4:	d112      	bne.n	80173ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80173c6:	482c      	ldr	r0, [pc, #176]	; (8017478 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80173c8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80173cc:	0968      	lsrs	r0, r5, #5
 80173ce:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80173d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80173d6:	4330      	orrs	r0, r6
 80173d8:	4328      	orrs	r0, r5
 80173da:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80173de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80173e0:	f10e 0e01 	add.w	lr, lr, #1
 80173e4:	4401      	add	r1, r0
 80173e6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80173e8:	4402      	add	r2, r0
 80173ea:	e7db      	b.n	80173a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80173ec:	b2f0      	uxtb	r0, r6
 80173ee:	2e00      	cmp	r6, #0
 80173f0:	d0f5      	beq.n	80173de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80173f2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80173f6:	fa1f f980 	uxth.w	r9, r0
 80173fa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80173fe:	43c0      	mvns	r0, r0
 8017400:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017404:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017408:	fb16 f609 	smulbb	r6, r6, r9
 801740c:	b2c0      	uxtb	r0, r0
 801740e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017412:	b2ed      	uxtb	r5, r5
 8017414:	fb1a fa09 	smulbb	sl, sl, r9
 8017418:	fb07 6700 	mla	r7, r7, r0, r6
 801741c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017420:	fb15 f509 	smulbb	r5, r5, r9
 8017424:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017428:	b2bf      	uxth	r7, r7
 801742a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801742e:	fa5f fc8c 	uxtb.w	ip, ip
 8017432:	fb06 a600 	mla	r6, r6, r0, sl
 8017436:	fb0c 5500 	mla	r5, ip, r0, r5
 801743a:	1c78      	adds	r0, r7, #1
 801743c:	b2b6      	uxth	r6, r6
 801743e:	b2ad      	uxth	r5, r5
 8017440:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017444:	f105 0a01 	add.w	sl, r5, #1
 8017448:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801744c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017450:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017454:	ea4a 0707 	orr.w	r7, sl, r7
 8017458:	f106 0a01 	add.w	sl, r6, #1
 801745c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017460:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017464:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017468:	ea47 070a 	orr.w	r7, r7, sl
 801746c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8017470:	e7b5      	b.n	80173de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017472:	b005      	add	sp, #20
 8017474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017478:	fffff800 	.word	0xfffff800

0801747c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801747c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017480:	b087      	sub	sp, #28
 8017482:	468b      	mov	fp, r1
 8017484:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017488:	9815      	ldr	r0, [sp, #84]	; 0x54
 801748a:	9203      	str	r2, [sp, #12]
 801748c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017490:	6841      	ldr	r1, [r0, #4]
 8017492:	9204      	str	r2, [sp, #16]
 8017494:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8017498:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801749c:	fb01 2404 	mla	r4, r1, r4, r2
 80174a0:	6802      	ldr	r2, [r0, #0]
 80174a2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80174a6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80174aa:	3201      	adds	r2, #1
 80174ac:	f022 0201 	bic.w	r2, r2, #1
 80174b0:	9200      	str	r2, [sp, #0]
 80174b2:	f8d9 2000 	ldr.w	r2, [r9]
 80174b6:	9201      	str	r2, [sp, #4]
 80174b8:	f1bb 0f00 	cmp.w	fp, #0
 80174bc:	dc03      	bgt.n	80174c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80174be:	9a03      	ldr	r2, [sp, #12]
 80174c0:	2a00      	cmp	r2, #0
 80174c2:	f340 816a 	ble.w	801779a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80174c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80174c8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80174cc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80174d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80174d2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80174d6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80174da:	2b00      	cmp	r3, #0
 80174dc:	dd0e      	ble.n	80174fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80174de:	1402      	asrs	r2, r0, #16
 80174e0:	d405      	bmi.n	80174ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80174e2:	42ba      	cmp	r2, r7
 80174e4:	da03      	bge.n	80174ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80174e6:	140a      	asrs	r2, r1, #16
 80174e8:	d401      	bmi.n	80174ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80174ea:	42b2      	cmp	r2, r6
 80174ec:	db07      	blt.n	80174fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80174ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80174f0:	3b01      	subs	r3, #1
 80174f2:	3402      	adds	r4, #2
 80174f4:	4410      	add	r0, r2
 80174f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80174f8:	4411      	add	r1, r2
 80174fa:	e7ee      	b.n	80174da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80174fc:	d017      	beq.n	801752e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80174fe:	1e5a      	subs	r2, r3, #1
 8017500:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017502:	fb05 0502 	mla	r5, r5, r2, r0
 8017506:	142d      	asrs	r5, r5, #16
 8017508:	d409      	bmi.n	801751e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801750a:	42bd      	cmp	r5, r7
 801750c:	da07      	bge.n	801751e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801750e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017510:	fb05 1202 	mla	r2, r5, r2, r1
 8017514:	1412      	asrs	r2, r2, #16
 8017516:	d402      	bmi.n	801751e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017518:	42b2      	cmp	r2, r6
 801751a:	f2c0 80c8 	blt.w	80176ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801751e:	2700      	movs	r7, #0
 8017520:	19da      	adds	r2, r3, r7
 8017522:	2a00      	cmp	r2, #0
 8017524:	dc3e      	bgt.n	80175a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017526:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801752a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801752e:	f1bb 0f00 	cmp.w	fp, #0
 8017532:	f340 8132 	ble.w	801779a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8017536:	ee30 0a04 	vadd.f32	s0, s0, s8
 801753a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801753c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017540:	f1bb 0b01 	subs.w	fp, fp, #1
 8017544:	eeb0 6a62 	vmov.f32	s12, s5
 8017548:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801754c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017550:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017554:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017558:	eeb0 6a43 	vmov.f32	s12, s6
 801755c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017560:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017564:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017568:	ee61 7a27 	vmul.f32	s15, s2, s15
 801756c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017570:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017574:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017578:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801757c:	ee12 2a90 	vmov	r2, s5
 8017580:	eef0 2a47 	vmov.f32	s5, s14
 8017584:	fb92 f3f3 	sdiv	r3, r2, r3
 8017588:	ee13 2a10 	vmov	r2, s6
 801758c:	9313      	str	r3, [sp, #76]	; 0x4c
 801758e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017590:	eeb0 3a67 	vmov.f32	s6, s15
 8017594:	fb92 f3f3 	sdiv	r3, r2, r3
 8017598:	9a03      	ldr	r2, [sp, #12]
 801759a:	9314      	str	r3, [sp, #80]	; 0x50
 801759c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801759e:	bf08      	it	eq
 80175a0:	4613      	moveq	r3, r2
 80175a2:	e789      	b.n	80174b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80175a4:	1405      	asrs	r5, r0, #16
 80175a6:	d436      	bmi.n	8017616 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80175a8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80175ac:	42aa      	cmp	r2, r5
 80175ae:	dd32      	ble.n	8017616 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80175b0:	140e      	asrs	r6, r1, #16
 80175b2:	d430      	bmi.n	8017616 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80175b4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80175b8:	42b2      	cmp	r2, r6
 80175ba:	dd2c      	ble.n	8017616 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80175bc:	9a00      	ldr	r2, [sp, #0]
 80175be:	fb06 5502 	mla	r5, r6, r2, r5
 80175c2:	9e01      	ldr	r6, [sp, #4]
 80175c4:	086a      	lsrs	r2, r5, #1
 80175c6:	5cb2      	ldrb	r2, [r6, r2]
 80175c8:	07ee      	lsls	r6, r5, #31
 80175ca:	bf54      	ite	pl
 80175cc:	f002 020f 	andpl.w	r2, r2, #15
 80175d0:	1112      	asrmi	r2, r2, #4
 80175d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80175d6:	b2d2      	uxtb	r2, r2
 80175d8:	b1ea      	cbz	r2, 8017616 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80175da:	9d04      	ldr	r5, [sp, #16]
 80175dc:	436a      	muls	r2, r5
 80175de:	1c55      	adds	r5, r2, #1
 80175e0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80175e4:	4d6e      	ldr	r5, [pc, #440]	; (80177a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80175e6:	1212      	asrs	r2, r2, #8
 80175e8:	682d      	ldr	r5, [r5, #0]
 80175ea:	2aff      	cmp	r2, #255	; 0xff
 80175ec:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80175f0:	9605      	str	r6, [sp, #20]
 80175f2:	d116      	bne.n	8017622 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80175f4:	f06f 0201 	mvn.w	r2, #1
 80175f8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80175fc:	fb02 fc07 	mul.w	ip, r2, r7
 8017600:	096a      	lsrs	r2, r5, #5
 8017602:	f026 0607 	bic.w	r6, r6, #7
 8017606:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801760a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801760e:	4316      	orrs	r6, r2
 8017610:	432e      	orrs	r6, r5
 8017612:	f824 600c 	strh.w	r6, [r4, ip]
 8017616:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017618:	3f01      	subs	r7, #1
 801761a:	4410      	add	r0, r2
 801761c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801761e:	4411      	add	r1, r2
 8017620:	e77e      	b.n	8017520 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8017622:	f06f 0601 	mvn.w	r6, #1
 8017626:	fa1f fa82 	uxth.w	sl, r2
 801762a:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801762e:	43d2      	mvns	r2, r2
 8017630:	437e      	muls	r6, r7
 8017632:	b2ed      	uxtb	r5, r5
 8017634:	fb1c fc0a 	smulbb	ip, ip, sl
 8017638:	b2d2      	uxtb	r2, r2
 801763a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801763e:	fb15 f50a 	smulbb	r5, r5, sl
 8017642:	9602      	str	r6, [sp, #8]
 8017644:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017648:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801764c:	fb16 f60a 	smulbb	r6, r6, sl
 8017650:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8017654:	fb0e ce02 	mla	lr, lr, r2, ip
 8017658:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801765c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017660:	fa1f fe8e 	uxth.w	lr, lr
 8017664:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017668:	fa5f f888 	uxtb.w	r8, r8
 801766c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8017670:	fb08 5502 	mla	r5, r8, r2, r5
 8017674:	f10e 0201 	add.w	r2, lr, #1
 8017678:	fa1f fc8c 	uxth.w	ip, ip
 801767c:	b2ad      	uxth	r5, r5
 801767e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017682:	9a02      	ldr	r2, [sp, #8]
 8017684:	1c6e      	adds	r6, r5, #1
 8017686:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801768a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801768e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017692:	ea46 0e0e 	orr.w	lr, r6, lr
 8017696:	f10c 0601 	add.w	r6, ip, #1
 801769a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801769e:	0976      	lsrs	r6, r6, #5
 80176a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80176a4:	ea4e 0e06 	orr.w	lr, lr, r6
 80176a8:	f824 e002 	strh.w	lr, [r4, r2]
 80176ac:	e7b3      	b.n	8017616 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80176ae:	f04f 0800 	mov.w	r8, #0
 80176b2:	eba3 0208 	sub.w	r2, r3, r8
 80176b6:	2a00      	cmp	r2, #0
 80176b8:	f77f af35 	ble.w	8017526 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80176bc:	1402      	asrs	r2, r0, #16
 80176be:	9e00      	ldr	r6, [sp, #0]
 80176c0:	140d      	asrs	r5, r1, #16
 80176c2:	fb06 2505 	mla	r5, r6, r5, r2
 80176c6:	9e01      	ldr	r6, [sp, #4]
 80176c8:	086a      	lsrs	r2, r5, #1
 80176ca:	07ed      	lsls	r5, r5, #31
 80176cc:	5cb2      	ldrb	r2, [r6, r2]
 80176ce:	bf54      	ite	pl
 80176d0:	f002 020f 	andpl.w	r2, r2, #15
 80176d4:	1112      	asrmi	r2, r2, #4
 80176d6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80176da:	b2d2      	uxtb	r2, r2
 80176dc:	b1c2      	cbz	r2, 8017710 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80176de:	9d04      	ldr	r5, [sp, #16]
 80176e0:	436a      	muls	r2, r5
 80176e2:	1c55      	adds	r5, r2, #1
 80176e4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80176e8:	4d2d      	ldr	r5, [pc, #180]	; (80177a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80176ea:	1212      	asrs	r2, r2, #8
 80176ec:	682e      	ldr	r6, [r5, #0]
 80176ee:	2aff      	cmp	r2, #255	; 0xff
 80176f0:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80176f4:	d113      	bne.n	801771e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80176f6:	0972      	lsrs	r2, r6, #5
 80176f8:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80176fc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017700:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017704:	f025 0507 	bic.w	r5, r5, #7
 8017708:	4315      	orrs	r5, r2
 801770a:	4335      	orrs	r5, r6
 801770c:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8017710:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017712:	f108 0801 	add.w	r8, r8, #1
 8017716:	4410      	add	r0, r2
 8017718:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801771a:	4411      	add	r1, r2
 801771c:	e7c9      	b.n	80176b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801771e:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8017722:	fa1f fa82 	uxth.w	sl, r2
 8017726:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801772a:	43d2      	mvns	r2, r2
 801772c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017730:	fb17 f70a 	smulbb	r7, r7, sl
 8017734:	b2d2      	uxtb	r2, r2
 8017736:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801773a:	b2f6      	uxtb	r6, r6
 801773c:	b2ed      	uxtb	r5, r5
 801773e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8017742:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017746:	fb16 f60a 	smulbb	r6, r6, sl
 801774a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801774e:	fa1f fc8c 	uxth.w	ip, ip
 8017752:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017756:	fb15 f50a 	smulbb	r5, r5, sl
 801775a:	fa5f fe8e 	uxtb.w	lr, lr
 801775e:	fb0e 6602 	mla	r6, lr, r2, r6
 8017762:	fb07 5702 	mla	r7, r7, r2, r5
 8017766:	f10c 0201 	add.w	r2, ip, #1
 801776a:	b2b6      	uxth	r6, r6
 801776c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017770:	1c75      	adds	r5, r6, #1
 8017772:	b2bf      	uxth	r7, r7
 8017774:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017778:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801777c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017780:	ea45 0c0c 	orr.w	ip, r5, ip
 8017784:	1c7d      	adds	r5, r7, #1
 8017786:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801778a:	096d      	lsrs	r5, r5, #5
 801778c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017790:	ea4c 0c05 	orr.w	ip, ip, r5
 8017794:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8017798:	e7ba      	b.n	8017710 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801779a:	b007      	add	sp, #28
 801779c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177a0:	24001ee0 	.word	0x24001ee0

080177a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80177a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177a8:	b087      	sub	sp, #28
 80177aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80177ae:	f8df 8308 	ldr.w	r8, [pc, #776]	; 8017ab8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80177b2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80177b4:	9101      	str	r1, [sp, #4]
 80177b6:	9205      	str	r2, [sp, #20]
 80177b8:	6841      	ldr	r1, [r0, #4]
 80177ba:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80177be:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80177c2:	fb01 2404 	mla	r4, r1, r4, r2
 80177c6:	6802      	ldr	r2, [r0, #0]
 80177c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80177cc:	f8db 2008 	ldr.w	r2, [fp, #8]
 80177d0:	3201      	adds	r2, #1
 80177d2:	f022 0201 	bic.w	r2, r2, #1
 80177d6:	9202      	str	r2, [sp, #8]
 80177d8:	f8db 2000 	ldr.w	r2, [fp]
 80177dc:	9203      	str	r2, [sp, #12]
 80177de:	9a01      	ldr	r2, [sp, #4]
 80177e0:	2a00      	cmp	r2, #0
 80177e2:	dc03      	bgt.n	80177ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80177e4:	9a05      	ldr	r2, [sp, #20]
 80177e6:	2a00      	cmp	r2, #0
 80177e8:	f340 8162 	ble.w	8017ab0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80177ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80177ee:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80177f2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80177f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80177f8:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80177fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017800:	2b00      	cmp	r3, #0
 8017802:	dd0e      	ble.n	8017822 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017804:	1402      	asrs	r2, r0, #16
 8017806:	d405      	bmi.n	8017814 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017808:	42ba      	cmp	r2, r7
 801780a:	da03      	bge.n	8017814 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801780c:	140a      	asrs	r2, r1, #16
 801780e:	d401      	bmi.n	8017814 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017810:	42b2      	cmp	r2, r6
 8017812:	db07      	blt.n	8017824 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017814:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017816:	3b01      	subs	r3, #1
 8017818:	3402      	adds	r4, #2
 801781a:	4410      	add	r0, r2
 801781c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801781e:	4411      	add	r1, r2
 8017820:	e7ee      	b.n	8017800 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017822:	d017      	beq.n	8017854 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8017824:	1e5a      	subs	r2, r3, #1
 8017826:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017828:	fb05 0502 	mla	r5, r5, r2, r0
 801782c:	142d      	asrs	r5, r5, #16
 801782e:	d409      	bmi.n	8017844 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017830:	42bd      	cmp	r5, r7
 8017832:	da07      	bge.n	8017844 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017834:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017836:	fb05 1202 	mla	r2, r5, r2, r1
 801783a:	1412      	asrs	r2, r2, #16
 801783c:	d402      	bmi.n	8017844 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801783e:	42b2      	cmp	r2, r6
 8017840:	f2c0 80c3 	blt.w	80179ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8017844:	2500      	movs	r5, #0
 8017846:	195a      	adds	r2, r3, r5
 8017848:	2a00      	cmp	r2, #0
 801784a:	dc3f      	bgt.n	80178cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801784c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017850:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017854:	9b01      	ldr	r3, [sp, #4]
 8017856:	2b00      	cmp	r3, #0
 8017858:	f340 812a 	ble.w	8017ab0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801785c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017860:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017862:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017866:	eeb0 6a62 	vmov.f32	s12, s5
 801786a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801786e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017872:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017876:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801787a:	eeb0 6a43 	vmov.f32	s12, s6
 801787e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017882:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017886:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801788a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801788e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017892:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017896:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801789a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801789e:	ee12 2a90 	vmov	r2, s5
 80178a2:	eef0 2a47 	vmov.f32	s5, s14
 80178a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80178aa:	ee13 2a10 	vmov	r2, s6
 80178ae:	9313      	str	r3, [sp, #76]	; 0x4c
 80178b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178b2:	eeb0 3a67 	vmov.f32	s6, s15
 80178b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80178ba:	9314      	str	r3, [sp, #80]	; 0x50
 80178bc:	9b01      	ldr	r3, [sp, #4]
 80178be:	9a05      	ldr	r2, [sp, #20]
 80178c0:	3b01      	subs	r3, #1
 80178c2:	9301      	str	r3, [sp, #4]
 80178c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178c6:	bf08      	it	eq
 80178c8:	4613      	moveq	r3, r2
 80178ca:	e788      	b.n	80177de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80178cc:	1406      	asrs	r6, r0, #16
 80178ce:	d42c      	bmi.n	801792a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80178d0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80178d4:	42b2      	cmp	r2, r6
 80178d6:	dd28      	ble.n	801792a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80178d8:	140f      	asrs	r7, r1, #16
 80178da:	d426      	bmi.n	801792a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80178dc:	f8db 200c 	ldr.w	r2, [fp, #12]
 80178e0:	42ba      	cmp	r2, r7
 80178e2:	dd22      	ble.n	801792a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80178e4:	9a02      	ldr	r2, [sp, #8]
 80178e6:	fb07 6602 	mla	r6, r7, r2, r6
 80178ea:	9f03      	ldr	r7, [sp, #12]
 80178ec:	0872      	lsrs	r2, r6, #1
 80178ee:	07f6      	lsls	r6, r6, #31
 80178f0:	5cba      	ldrb	r2, [r7, r2]
 80178f2:	bf54      	ite	pl
 80178f4:	f002 020f 	andpl.w	r2, r2, #15
 80178f8:	1112      	asrmi	r2, r2, #4
 80178fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80178fe:	b2d2      	uxtb	r2, r2
 8017900:	2aff      	cmp	r2, #255	; 0xff
 8017902:	d118      	bne.n	8017936 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8017904:	f06f 0601 	mvn.w	r6, #1
 8017908:	f8d8 2000 	ldr.w	r2, [r8]
 801790c:	fb06 f705 	mul.w	r7, r6, r5
 8017910:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8017914:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8017918:	0956      	lsrs	r6, r2, #5
 801791a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801791e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017922:	ea4c 0606 	orr.w	r6, ip, r6
 8017926:	4316      	orrs	r6, r2
 8017928:	53e6      	strh	r6, [r4, r7]
 801792a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801792c:	3d01      	subs	r5, #1
 801792e:	4410      	add	r0, r2
 8017930:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017932:	4411      	add	r1, r2
 8017934:	e787      	b.n	8017846 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017936:	2a00      	cmp	r2, #0
 8017938:	d0f7      	beq.n	801792a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801793a:	f06f 0601 	mvn.w	r6, #1
 801793e:	f8d8 c000 	ldr.w	ip, [r8]
 8017942:	fa1f f982 	uxth.w	r9, r2
 8017946:	43d2      	mvns	r2, r2
 8017948:	436e      	muls	r6, r5
 801794a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801794e:	b2d2      	uxtb	r2, r2
 8017950:	f834 e006 	ldrh.w	lr, [r4, r6]
 8017954:	fb1a fa09 	smulbb	sl, sl, r9
 8017958:	9604      	str	r6, [sp, #16]
 801795a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801795e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017962:	fb16 f609 	smulbb	r6, r6, r9
 8017966:	fa5f fc8c 	uxtb.w	ip, ip
 801796a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801796e:	fb1c fc09 	smulbb	ip, ip, r9
 8017972:	fb07 6702 	mla	r7, r7, r2, r6
 8017976:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801797a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801797e:	b2bf      	uxth	r7, r7
 8017980:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017984:	fa5f fe8e 	uxtb.w	lr, lr
 8017988:	fb06 a602 	mla	r6, r6, r2, sl
 801798c:	fb0e cc02 	mla	ip, lr, r2, ip
 8017990:	1c7a      	adds	r2, r7, #1
 8017992:	b2b6      	uxth	r6, r6
 8017994:	fa1f fc8c 	uxth.w	ip, ip
 8017998:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801799c:	9a04      	ldr	r2, [sp, #16]
 801799e:	f10c 0a01 	add.w	sl, ip, #1
 80179a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80179a6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80179aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80179ae:	ea4a 0707 	orr.w	r7, sl, r7
 80179b2:	f106 0a01 	add.w	sl, r6, #1
 80179b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80179ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80179be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80179c2:	ea47 070a 	orr.w	r7, r7, sl
 80179c6:	52a7      	strh	r7, [r4, r2]
 80179c8:	e7af      	b.n	801792a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80179ca:	f04f 0e00 	mov.w	lr, #0
 80179ce:	eba3 020e 	sub.w	r2, r3, lr
 80179d2:	2a00      	cmp	r2, #0
 80179d4:	f77f af3a 	ble.w	801784c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80179d8:	1402      	asrs	r2, r0, #16
 80179da:	9e02      	ldr	r6, [sp, #8]
 80179dc:	140d      	asrs	r5, r1, #16
 80179de:	fb06 2505 	mla	r5, r6, r5, r2
 80179e2:	9e03      	ldr	r6, [sp, #12]
 80179e4:	086a      	lsrs	r2, r5, #1
 80179e6:	07ed      	lsls	r5, r5, #31
 80179e8:	5cb2      	ldrb	r2, [r6, r2]
 80179ea:	bf54      	ite	pl
 80179ec:	f002 020f 	andpl.w	r2, r2, #15
 80179f0:	1112      	asrmi	r2, r2, #4
 80179f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80179f6:	b2d2      	uxtb	r2, r2
 80179f8:	2aff      	cmp	r2, #255	; 0xff
 80179fa:	d115      	bne.n	8017a28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80179fc:	f8d8 5000 	ldr.w	r5, [r8]
 8017a00:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8017a04:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8017a08:	096a      	lsrs	r2, r5, #5
 8017a0a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017a0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a12:	4332      	orrs	r2, r6
 8017a14:	432a      	orrs	r2, r5
 8017a16:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8017a1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017a1c:	f10e 0e01 	add.w	lr, lr, #1
 8017a20:	4410      	add	r0, r2
 8017a22:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017a24:	4411      	add	r1, r2
 8017a26:	e7d2      	b.n	80179ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8017a28:	2a00      	cmp	r2, #0
 8017a2a:	d0f6      	beq.n	8017a1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017a2c:	f8d8 7000 	ldr.w	r7, [r8]
 8017a30:	fa1f f982 	uxth.w	r9, r2
 8017a34:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8017a38:	43d2      	mvns	r2, r2
 8017a3a:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8017a3e:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8017a42:	ea4f 262c 	mov.w	r6, ip, asr #8
 8017a46:	fb15 f509 	smulbb	r5, r5, r9
 8017a4a:	b2d2      	uxtb	r2, r2
 8017a4c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017a50:	b2ff      	uxtb	r7, r7
 8017a52:	fb1a fa09 	smulbb	sl, sl, r9
 8017a56:	fb06 5602 	mla	r6, r6, r2, r5
 8017a5a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017a5e:	fb17 f709 	smulbb	r7, r7, r9
 8017a62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017a66:	b2b6      	uxth	r6, r6
 8017a68:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017a6c:	fa5f fc8c 	uxtb.w	ip, ip
 8017a70:	fb05 a502 	mla	r5, r5, r2, sl
 8017a74:	fb0c 7702 	mla	r7, ip, r2, r7
 8017a78:	1c72      	adds	r2, r6, #1
 8017a7a:	b2ad      	uxth	r5, r5
 8017a7c:	b2bf      	uxth	r7, r7
 8017a7e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8017a82:	f107 0a01 	add.w	sl, r7, #1
 8017a86:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017a8a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017a8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017a92:	ea4a 0606 	orr.w	r6, sl, r6
 8017a96:	f105 0a01 	add.w	sl, r5, #1
 8017a9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017a9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017aa2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017aa6:	ea46 060a 	orr.w	r6, r6, sl
 8017aaa:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8017aae:	e7b4      	b.n	8017a1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017ab0:	b007      	add	sp, #28
 8017ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ab6:	bf00      	nop
 8017ab8:	24001ee0 	.word	0x24001ee0

08017abc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8017abc:	4770      	bx	lr

08017abe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8017abe:	4770      	bx	lr

08017ac0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8017ac0:	4770      	bx	lr

08017ac2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8017ac2:	4770      	bx	lr

08017ac4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8017ac4:	4770      	bx	lr

08017ac6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8017ac6:	4770      	bx	lr

08017ac8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8017ac8:	4770      	bx	lr

08017aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017aca:	4770      	bx	lr

08017acc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017acc:	4770      	bx	lr

08017ace <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017ace:	4770      	bx	lr

08017ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017ad0:	4770      	bx	lr

08017ad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017ad2:	4770      	bx	lr

08017ad4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017ad4:	4770      	bx	lr

08017ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017ad6:	4770      	bx	lr

08017ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017ad8:	4770      	bx	lr

08017ada <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017ada:	4770      	bx	lr

08017adc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017adc:	4770      	bx	lr

08017ade <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017ade:	4770      	bx	lr

08017ae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017ae0:	4770      	bx	lr

08017ae2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017ae2:	4770      	bx	lr

08017ae4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017ae4:	4770      	bx	lr

08017ae6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017ae6:	4770      	bx	lr

08017ae8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017ae8:	4770      	bx	lr

08017aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017aea:	4770      	bx	lr

08017aec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8017aec:	4770      	bx	lr

08017aee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017aee:	4770      	bx	lr

08017af0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8017af0:	4770      	bx	lr

08017af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017af2:	4770      	bx	lr

08017af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017af4:	4770      	bx	lr

08017af6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017af6:	4770      	bx	lr

08017af8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017af8:	4770      	bx	lr

08017afa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8017afa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017afe:	b088      	sub	sp, #32
 8017b00:	4606      	mov	r6, r0
 8017b02:	4688      	mov	r8, r1
 8017b04:	4691      	mov	r9, r2
 8017b06:	ac08      	add	r4, sp, #32
 8017b08:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8017b0c:	4620      	mov	r0, r4
 8017b0e:	f7fd fc63 	bl	80153d8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017b12:	6833      	ldr	r3, [r6, #0]
 8017b14:	4605      	mov	r5, r0
 8017b16:	4620      	mov	r0, r4
 8017b18:	699f      	ldr	r7, [r3, #24]
 8017b1a:	f7fd fb71 	bl	8015200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017b1e:	4682      	mov	sl, r0
 8017b20:	4620      	mov	r0, r4
 8017b22:	f7fd fba1 	bl	8015268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017b26:	9500      	str	r5, [sp, #0]
 8017b28:	464b      	mov	r3, r9
 8017b2a:	4642      	mov	r2, r8
 8017b2c:	4631      	mov	r1, r6
 8017b2e:	e9cd a001 	strd	sl, r0, [sp, #4]
 8017b32:	a806      	add	r0, sp, #24
 8017b34:	47b8      	blx	r7
 8017b36:	4628      	mov	r0, r5
 8017b38:	b008      	add	sp, #32
 8017b3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08017b40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8017b40:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8017b44:	2300      	movs	r3, #0
 8017b46:	9300      	str	r3, [sp, #0]
 8017b48:	4b3d      	ldr	r3, [pc, #244]	; (8017c40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8017b4a:	781b      	ldrb	r3, [r3, #0]
 8017b4c:	2b00      	cmp	r3, #0
 8017b4e:	d137      	bne.n	8017bc0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8017b50:	4a3c      	ldr	r2, [pc, #240]	; (8017c44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017b52:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017b56:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017b5a:	2b00      	cmp	r3, #0
 8017b5c:	d132      	bne.n	8017bc4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8017b5e:	4b3a      	ldr	r3, [pc, #232]	; (8017c48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8017b60:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017b64:	ac02      	add	r4, sp, #8
 8017b66:	6808      	ldr	r0, [r1, #0]
 8017b68:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017b6c:	ab02      	add	r3, sp, #8
 8017b6e:	6849      	ldr	r1, [r1, #4]
 8017b70:	4d36      	ldr	r5, [pc, #216]	; (8017c4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8017b72:	c303      	stmia	r3!, {r0, r1}
 8017b74:	4669      	mov	r1, sp
 8017b76:	4620      	mov	r0, r4
 8017b78:	f7fa fd00 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b7c:	4668      	mov	r0, sp
 8017b7e:	f7fa fcd5 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b82:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017b86:	f8bd 2000 	ldrh.w	r2, [sp]
 8017b8a:	462f      	mov	r7, r5
 8017b8c:	6828      	ldr	r0, [r5, #0]
 8017b8e:	4413      	add	r3, r2
 8017b90:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017b94:	f8ad 3008 	strh.w	r3, [sp, #8]
 8017b98:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017b9c:	4413      	add	r3, r2
 8017b9e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017ba2:	6803      	ldr	r3, [r0, #0]
 8017ba4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017ba6:	4798      	blx	r3
 8017ba8:	f010 0f01 	tst.w	r0, #1
 8017bac:	d00c      	beq.n	8017bc8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8017bae:	6828      	ldr	r0, [r5, #0]
 8017bb0:	6803      	ldr	r3, [r0, #0]
 8017bb2:	e894 0006 	ldmia.w	r4, {r1, r2}
 8017bb6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8017bb8:	4798      	blx	r3
 8017bba:	b004      	add	sp, #16
 8017bbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017bc0:	4a21      	ldr	r2, [pc, #132]	; (8017c48 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8017bc2:	e7c6      	b.n	8017b52 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8017bc4:	4b1f      	ldr	r3, [pc, #124]	; (8017c44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017bc6:	e7cb      	b.n	8017b60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8017bc8:	6838      	ldr	r0, [r7, #0]
 8017bca:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8017bce:	6803      	ldr	r3, [r0, #0]
 8017bd0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8017bd4:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8017bd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017bda:	4798      	blx	r3
 8017bdc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8017be0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017be4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8017be8:	fb16 3602 	smlabb	r6, r6, r2, r3
 8017bec:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017bf0:	6838      	ldr	r0, [r7, #0]
 8017bf2:	6803      	ldr	r3, [r0, #0]
 8017bf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017bf6:	4798      	blx	r3
 8017bf8:	4a12      	ldr	r2, [pc, #72]	; (8017c44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017bfa:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8017bfe:	8813      	ldrh	r3, [r2, #0]
 8017c00:	4691      	mov	r9, r2
 8017c02:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017c06:	435d      	muls	r5, r3
 8017c08:	fb03 1404 	mla	r4, r3, r4, r1
 8017c0c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017c10:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017c14:	6838      	ldr	r0, [r7, #0]
 8017c16:	42ac      	cmp	r4, r5
 8017c18:	6803      	ldr	r3, [r0, #0]
 8017c1a:	d20e      	bcs.n	8017c3a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8017c1c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8017c20:	4632      	mov	r2, r6
 8017c22:	4643      	mov	r3, r8
 8017c24:	4621      	mov	r1, r4
 8017c26:	47d0      	blx	sl
 8017c28:	f8b9 3000 	ldrh.w	r3, [r9]
 8017c2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017c30:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017c34:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017c38:	e7ec      	b.n	8017c14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8017c3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017c3c:	4798      	blx	r3
 8017c3e:	e7bc      	b.n	8017bba <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8017c40:	24001ed0 	.word	0x24001ed0
 8017c44:	24001ed2 	.word	0x24001ed2
 8017c48:	24001ed4 	.word	0x24001ed4
 8017c4c:	24001ed8 	.word	0x24001ed8

08017c50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8017c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c54:	b08b      	sub	sp, #44	; 0x2c
 8017c56:	460f      	mov	r7, r1
 8017c58:	4616      	mov	r6, r2
 8017c5a:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8017c5e:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8017c62:	f1bb 0f00 	cmp.w	fp, #0
 8017c66:	d04a      	beq.n	8017cfe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8017c68:	6810      	ldr	r0, [r2, #0]
 8017c6a:	ad06      	add	r5, sp, #24
 8017c6c:	6851      	ldr	r1, [r2, #4]
 8017c6e:	c503      	stmia	r5!, {r0, r1}
 8017c70:	6818      	ldr	r0, [r3, #0]
 8017c72:	ad08      	add	r5, sp, #32
 8017c74:	6859      	ldr	r1, [r3, #4]
 8017c76:	c503      	stmia	r5!, {r0, r1}
 8017c78:	a806      	add	r0, sp, #24
 8017c7a:	f7fa fc57 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c7e:	4631      	mov	r1, r6
 8017c80:	a808      	add	r0, sp, #32
 8017c82:	f7fa fc7b 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c86:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017c8a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8017c8e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8017c92:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017c96:	fb16 2103 	smlabb	r1, r6, r3, r2
 8017c9a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017c9e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8017ca2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017ca6:	4f5f      	ldr	r7, [pc, #380]	; (8017e24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017ca8:	440a      	add	r2, r1
 8017caa:	6838      	ldr	r0, [r7, #0]
 8017cac:	46b9      	mov	r9, r7
 8017cae:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017cb2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017cb6:	4413      	add	r3, r2
 8017cb8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017cbc:	6803      	ldr	r3, [r0, #0]
 8017cbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017cc0:	4798      	blx	r3
 8017cc2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017cc6:	d11d      	bne.n	8017d04 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8017cc8:	b9fc      	cbnz	r4, 8017d0a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017cca:	f010 0f01 	tst.w	r0, #1
 8017cce:	d01c      	beq.n	8017d0a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017cd0:	f8d9 0000 	ldr.w	r0, [r9]
 8017cd4:	2700      	movs	r7, #0
 8017cd6:	b2ad      	uxth	r5, r5
 8017cd8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8017cdc:	6801      	ldr	r1, [r0, #0]
 8017cde:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8017ce2:	f8cd b00c 	str.w	fp, [sp, #12]
 8017ce6:	9501      	str	r5, [sp, #4]
 8017ce8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8017cec:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8017cf0:	9402      	str	r4, [sp, #8]
 8017cf2:	fa1f f488 	uxth.w	r4, r8
 8017cf6:	9400      	str	r4, [sp, #0]
 8017cf8:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8017cfa:	4631      	mov	r1, r6
 8017cfc:	47a0      	blx	r4
 8017cfe:	b00b      	add	sp, #44	; 0x2c
 8017d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d04:	f010 0f04 	tst.w	r0, #4
 8017d08:	e7e1      	b.n	8017cce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8017d0a:	f8d9 0000 	ldr.w	r0, [r9]
 8017d0e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017d12:	6803      	ldr	r3, [r0, #0]
 8017d14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017d16:	4798      	blx	r3
 8017d18:	4b43      	ldr	r3, [pc, #268]	; (8017e28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8017d1a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8017d1e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017d22:	881a      	ldrh	r2, [r3, #0]
 8017d24:	469a      	mov	sl, r3
 8017d26:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8017d2a:	fb05 f502 	mul.w	r5, r5, r2
 8017d2e:	fb02 1404 	mla	r4, r2, r4, r1
 8017d32:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017d36:	d059      	beq.n	8017dec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017d38:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017d3c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017d40:	fa1f f28b 	uxth.w	r2, fp
 8017d44:	469e      	mov	lr, r3
 8017d46:	fa1f f989 	uxth.w	r9, r9
 8017d4a:	42ac      	cmp	r4, r5
 8017d4c:	d264      	bcs.n	8017e18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017d4e:	eb04 0a07 	add.w	sl, r4, r7
 8017d52:	4554      	cmp	r4, sl
 8017d54:	d23d      	bcs.n	8017dd2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017d56:	8821      	ldrh	r1, [r4, #0]
 8017d58:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017d5c:	1208      	asrs	r0, r1, #8
 8017d5e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017d62:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017d66:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8017d6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017d6e:	00c9      	lsls	r1, r1, #3
 8017d70:	fb10 f009 	smulbb	r0, r0, r9
 8017d74:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017d78:	b2c9      	uxtb	r1, r1
 8017d7a:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017d7e:	10d8      	asrs	r0, r3, #3
 8017d80:	fb1b fb09 	smulbb	fp, fp, r9
 8017d84:	00db      	lsls	r3, r3, #3
 8017d86:	fa1f fc8c 	uxth.w	ip, ip
 8017d8a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017d8e:	fb11 f109 	smulbb	r1, r1, r9
 8017d92:	b2db      	uxtb	r3, r3
 8017d94:	fb00 b002 	mla	r0, r0, r2, fp
 8017d98:	f10c 0b01 	add.w	fp, ip, #1
 8017d9c:	fb03 1302 	mla	r3, r3, r2, r1
 8017da0:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017da4:	b29b      	uxth	r3, r3
 8017da6:	b280      	uxth	r0, r0
 8017da8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017dac:	f103 0c01 	add.w	ip, r3, #1
 8017db0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017db4:	1c43      	adds	r3, r0, #1
 8017db6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017dba:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017dbe:	0940      	lsrs	r0, r0, #5
 8017dc0:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017dc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017dc8:	ea4c 0c00 	orr.w	ip, ip, r0
 8017dcc:	f824 cb02 	strh.w	ip, [r4], #2
 8017dd0:	e7bf      	b.n	8017d52 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8017dd2:	f8be 3000 	ldrh.w	r3, [lr]
 8017dd6:	eba3 0308 	sub.w	r3, r3, r8
 8017dda:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017dde:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017de2:	eba3 0308 	sub.w	r3, r3, r8
 8017de6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017dea:	e7ae      	b.n	8017d4a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8017dec:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017df0:	f8d9 0000 	ldr.w	r0, [r9]
 8017df4:	42ac      	cmp	r4, r5
 8017df6:	6803      	ldr	r3, [r0, #0]
 8017df8:	d20e      	bcs.n	8017e18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017dfa:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8017dfe:	4632      	mov	r2, r6
 8017e00:	463b      	mov	r3, r7
 8017e02:	4621      	mov	r1, r4
 8017e04:	47c0      	blx	r8
 8017e06:	f8ba 3000 	ldrh.w	r3, [sl]
 8017e0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017e0e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017e12:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017e16:	e7eb      	b.n	8017df0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8017e18:	4b02      	ldr	r3, [pc, #8]	; (8017e24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017e1a:	6818      	ldr	r0, [r3, #0]
 8017e1c:	6803      	ldr	r3, [r0, #0]
 8017e1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017e20:	4798      	blx	r3
 8017e22:	e76c      	b.n	8017cfe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8017e24:	24001ed8 	.word	0x24001ed8
 8017e28:	24001ed2 	.word	0x24001ed2

08017e2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8017e2c:	b510      	push	{r4, lr}
 8017e2e:	4604      	mov	r4, r0
 8017e30:	2104      	movs	r1, #4
 8017e32:	f00a fe2c 	bl	8022a8e <_ZdlPvj>
 8017e36:	4620      	mov	r0, r4
 8017e38:	bd10      	pop	{r4, pc}

08017e3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8017e3a:	b510      	push	{r4, lr}
 8017e3c:	4604      	mov	r4, r0
 8017e3e:	2104      	movs	r1, #4
 8017e40:	f00a fe25 	bl	8022a8e <_ZdlPvj>
 8017e44:	4620      	mov	r0, r4
 8017e46:	bd10      	pop	{r4, pc}

08017e48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8017e48:	b510      	push	{r4, lr}
 8017e4a:	4604      	mov	r4, r0
 8017e4c:	f640 0144 	movw	r1, #2116	; 0x844
 8017e50:	f00a fe1d 	bl	8022a8e <_ZdlPvj>
 8017e54:	4620      	mov	r0, r4
 8017e56:	bd10      	pop	{r4, pc}

08017e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017e58:	b510      	push	{r4, lr}
 8017e5a:	4604      	mov	r4, r0
 8017e5c:	2104      	movs	r1, #4
 8017e5e:	f00a fe16 	bl	8022a8e <_ZdlPvj>
 8017e62:	4620      	mov	r0, r4
 8017e64:	bd10      	pop	{r4, pc}

08017e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017e66:	b510      	push	{r4, lr}
 8017e68:	4604      	mov	r4, r0
 8017e6a:	2104      	movs	r1, #4
 8017e6c:	f00a fe0f 	bl	8022a8e <_ZdlPvj>
 8017e70:	4620      	mov	r0, r4
 8017e72:	bd10      	pop	{r4, pc}

08017e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017e74:	b510      	push	{r4, lr}
 8017e76:	4604      	mov	r4, r0
 8017e78:	2104      	movs	r1, #4
 8017e7a:	f00a fe08 	bl	8022a8e <_ZdlPvj>
 8017e7e:	4620      	mov	r0, r4
 8017e80:	bd10      	pop	{r4, pc}

08017e82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017e82:	b510      	push	{r4, lr}
 8017e84:	4604      	mov	r4, r0
 8017e86:	2104      	movs	r1, #4
 8017e88:	f00a fe01 	bl	8022a8e <_ZdlPvj>
 8017e8c:	4620      	mov	r0, r4
 8017e8e:	bd10      	pop	{r4, pc}

08017e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017e90:	b510      	push	{r4, lr}
 8017e92:	4604      	mov	r4, r0
 8017e94:	2104      	movs	r1, #4
 8017e96:	f00a fdfa 	bl	8022a8e <_ZdlPvj>
 8017e9a:	4620      	mov	r0, r4
 8017e9c:	bd10      	pop	{r4, pc}

08017e9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017e9e:	b510      	push	{r4, lr}
 8017ea0:	4604      	mov	r4, r0
 8017ea2:	2104      	movs	r1, #4
 8017ea4:	f00a fdf3 	bl	8022a8e <_ZdlPvj>
 8017ea8:	4620      	mov	r0, r4
 8017eaa:	bd10      	pop	{r4, pc}

08017eac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017eac:	b510      	push	{r4, lr}
 8017eae:	4604      	mov	r4, r0
 8017eb0:	2104      	movs	r1, #4
 8017eb2:	f00a fdec 	bl	8022a8e <_ZdlPvj>
 8017eb6:	4620      	mov	r0, r4
 8017eb8:	bd10      	pop	{r4, pc}

08017eba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017eba:	b510      	push	{r4, lr}
 8017ebc:	4604      	mov	r4, r0
 8017ebe:	2104      	movs	r1, #4
 8017ec0:	f00a fde5 	bl	8022a8e <_ZdlPvj>
 8017ec4:	4620      	mov	r0, r4
 8017ec6:	bd10      	pop	{r4, pc}

08017ec8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017ec8:	b510      	push	{r4, lr}
 8017eca:	4604      	mov	r4, r0
 8017ecc:	2104      	movs	r1, #4
 8017ece:	f00a fdde 	bl	8022a8e <_ZdlPvj>
 8017ed2:	4620      	mov	r0, r4
 8017ed4:	bd10      	pop	{r4, pc}

08017ed6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017ed6:	b510      	push	{r4, lr}
 8017ed8:	4604      	mov	r4, r0
 8017eda:	2104      	movs	r1, #4
 8017edc:	f00a fdd7 	bl	8022a8e <_ZdlPvj>
 8017ee0:	4620      	mov	r0, r4
 8017ee2:	bd10      	pop	{r4, pc}

08017ee4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017ee4:	b510      	push	{r4, lr}
 8017ee6:	4604      	mov	r4, r0
 8017ee8:	2104      	movs	r1, #4
 8017eea:	f00a fdd0 	bl	8022a8e <_ZdlPvj>
 8017eee:	4620      	mov	r0, r4
 8017ef0:	bd10      	pop	{r4, pc}

08017ef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017ef2:	b510      	push	{r4, lr}
 8017ef4:	4604      	mov	r4, r0
 8017ef6:	2104      	movs	r1, #4
 8017ef8:	f00a fdc9 	bl	8022a8e <_ZdlPvj>
 8017efc:	4620      	mov	r0, r4
 8017efe:	bd10      	pop	{r4, pc}

08017f00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017f00:	b510      	push	{r4, lr}
 8017f02:	4604      	mov	r4, r0
 8017f04:	2104      	movs	r1, #4
 8017f06:	f00a fdc2 	bl	8022a8e <_ZdlPvj>
 8017f0a:	4620      	mov	r0, r4
 8017f0c:	bd10      	pop	{r4, pc}

08017f0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017f0e:	b510      	push	{r4, lr}
 8017f10:	4604      	mov	r4, r0
 8017f12:	2104      	movs	r1, #4
 8017f14:	f00a fdbb 	bl	8022a8e <_ZdlPvj>
 8017f18:	4620      	mov	r0, r4
 8017f1a:	bd10      	pop	{r4, pc}

08017f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017f1c:	b510      	push	{r4, lr}
 8017f1e:	4604      	mov	r4, r0
 8017f20:	2104      	movs	r1, #4
 8017f22:	f00a fdb4 	bl	8022a8e <_ZdlPvj>
 8017f26:	4620      	mov	r0, r4
 8017f28:	bd10      	pop	{r4, pc}

08017f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017f2a:	b510      	push	{r4, lr}
 8017f2c:	4604      	mov	r4, r0
 8017f2e:	2104      	movs	r1, #4
 8017f30:	f00a fdad 	bl	8022a8e <_ZdlPvj>
 8017f34:	4620      	mov	r0, r4
 8017f36:	bd10      	pop	{r4, pc}

08017f38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017f38:	b510      	push	{r4, lr}
 8017f3a:	4604      	mov	r4, r0
 8017f3c:	2104      	movs	r1, #4
 8017f3e:	f00a fda6 	bl	8022a8e <_ZdlPvj>
 8017f42:	4620      	mov	r0, r4
 8017f44:	bd10      	pop	{r4, pc}

08017f46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017f46:	b510      	push	{r4, lr}
 8017f48:	4604      	mov	r4, r0
 8017f4a:	2104      	movs	r1, #4
 8017f4c:	f00a fd9f 	bl	8022a8e <_ZdlPvj>
 8017f50:	4620      	mov	r0, r4
 8017f52:	bd10      	pop	{r4, pc}

08017f54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017f54:	b510      	push	{r4, lr}
 8017f56:	4604      	mov	r4, r0
 8017f58:	2104      	movs	r1, #4
 8017f5a:	f00a fd98 	bl	8022a8e <_ZdlPvj>
 8017f5e:	4620      	mov	r0, r4
 8017f60:	bd10      	pop	{r4, pc}

08017f62 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017f62:	b510      	push	{r4, lr}
 8017f64:	4604      	mov	r4, r0
 8017f66:	2104      	movs	r1, #4
 8017f68:	f00a fd91 	bl	8022a8e <_ZdlPvj>
 8017f6c:	4620      	mov	r0, r4
 8017f6e:	bd10      	pop	{r4, pc}

08017f70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017f70:	b510      	push	{r4, lr}
 8017f72:	4604      	mov	r4, r0
 8017f74:	2104      	movs	r1, #4
 8017f76:	f00a fd8a 	bl	8022a8e <_ZdlPvj>
 8017f7a:	4620      	mov	r0, r4
 8017f7c:	bd10      	pop	{r4, pc}

08017f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017f7e:	b510      	push	{r4, lr}
 8017f80:	4604      	mov	r4, r0
 8017f82:	2104      	movs	r1, #4
 8017f84:	f00a fd83 	bl	8022a8e <_ZdlPvj>
 8017f88:	4620      	mov	r0, r4
 8017f8a:	bd10      	pop	{r4, pc}

08017f8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017f8c:	b510      	push	{r4, lr}
 8017f8e:	4604      	mov	r4, r0
 8017f90:	2104      	movs	r1, #4
 8017f92:	f00a fd7c 	bl	8022a8e <_ZdlPvj>
 8017f96:	4620      	mov	r0, r4
 8017f98:	bd10      	pop	{r4, pc}

08017f9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017f9a:	b510      	push	{r4, lr}
 8017f9c:	4604      	mov	r4, r0
 8017f9e:	2104      	movs	r1, #4
 8017fa0:	f00a fd75 	bl	8022a8e <_ZdlPvj>
 8017fa4:	4620      	mov	r0, r4
 8017fa6:	bd10      	pop	{r4, pc}

08017fa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017fa8:	b510      	push	{r4, lr}
 8017faa:	4604      	mov	r4, r0
 8017fac:	2104      	movs	r1, #4
 8017fae:	f00a fd6e 	bl	8022a8e <_ZdlPvj>
 8017fb2:	4620      	mov	r0, r4
 8017fb4:	bd10      	pop	{r4, pc}

08017fb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017fb6:	b510      	push	{r4, lr}
 8017fb8:	4604      	mov	r4, r0
 8017fba:	2104      	movs	r1, #4
 8017fbc:	f00a fd67 	bl	8022a8e <_ZdlPvj>
 8017fc0:	4620      	mov	r0, r4
 8017fc2:	bd10      	pop	{r4, pc}

08017fc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017fc4:	b510      	push	{r4, lr}
 8017fc6:	4604      	mov	r4, r0
 8017fc8:	2104      	movs	r1, #4
 8017fca:	f00a fd60 	bl	8022a8e <_ZdlPvj>
 8017fce:	4620      	mov	r0, r4
 8017fd0:	bd10      	pop	{r4, pc}

08017fd2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017fd2:	b510      	push	{r4, lr}
 8017fd4:	4604      	mov	r4, r0
 8017fd6:	2104      	movs	r1, #4
 8017fd8:	f00a fd59 	bl	8022a8e <_ZdlPvj>
 8017fdc:	4620      	mov	r0, r4
 8017fde:	bd10      	pop	{r4, pc}

08017fe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fe4:	b08f      	sub	sp, #60	; 0x3c
 8017fe6:	461c      	mov	r4, r3
 8017fe8:	9205      	str	r2, [sp, #20]
 8017fea:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017fee:	9100      	str	r1, [sp, #0]
 8017ff0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017ff2:	9201      	str	r2, [sp, #4]
 8017ff4:	2a00      	cmp	r2, #0
 8017ff6:	f000 8116 	beq.w	8018226 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8017ffa:	6820      	ldr	r0, [r4, #0]
 8017ffc:	aa0a      	add	r2, sp, #40	; 0x28
 8017ffe:	6861      	ldr	r1, [r4, #4]
 8018000:	c203      	stmia	r2!, {r0, r1}
 8018002:	6818      	ldr	r0, [r3, #0]
 8018004:	aa0c      	add	r2, sp, #48	; 0x30
 8018006:	6859      	ldr	r1, [r3, #4]
 8018008:	c203      	stmia	r2!, {r0, r1}
 801800a:	a80a      	add	r0, sp, #40	; 0x28
 801800c:	f7fa fa8e 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018010:	4621      	mov	r1, r4
 8018012:	a80c      	add	r0, sp, #48	; 0x30
 8018014:	f7fa fab2 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018018:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801801c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8018020:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8018024:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8018028:	bfdb      	ittet	le
 801802a:	b2b3      	uxthle	r3, r6
 801802c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8018030:	2301      	movgt	r3, #1
 8018032:	fb92 f3f3 	sdivle	r3, r2, r3
 8018036:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801803a:	441d      	add	r5, r3
 801803c:	fb92 f1f3 	sdiv	r1, r2, r3
 8018040:	fa1f fc81 	uxth.w	ip, r1
 8018044:	3d01      	subs	r5, #1
 8018046:	fb0c 2413 	mls	r4, ip, r3, r2
 801804a:	4661      	mov	r1, ip
 801804c:	fb14 f406 	smulbb	r4, r4, r6
 8018050:	4404      	add	r4, r0
 8018052:	fb95 f5f3 	sdiv	r5, r5, r3
 8018056:	b2a4      	uxth	r4, r4
 8018058:	b131      	cbz	r1, 8018068 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 801805a:	9b05      	ldr	r3, [sp, #20]
 801805c:	9900      	ldr	r1, [sp, #0]
 801805e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8018062:	ba1b      	rev	r3, r3
 8018064:	4419      	add	r1, r3
 8018066:	9100      	str	r1, [sp, #0]
 8018068:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801806c:	b2ad      	uxth	r5, r5
 801806e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8018072:	4418      	add	r0, r3
 8018074:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8018078:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801807c:	00ad      	lsls	r5, r5, #2
 801807e:	441a      	add	r2, r3
 8018080:	4b6a      	ldr	r3, [pc, #424]	; (801822c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8018082:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8018086:	6818      	ldr	r0, [r3, #0]
 8018088:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801808c:	6803      	ldr	r3, [r0, #0]
 801808e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018090:	4798      	blx	r3
 8018092:	4967      	ldr	r1, [pc, #412]	; (8018230 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8018094:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8018098:	2c00      	cmp	r4, #0
 801809a:	880b      	ldrh	r3, [r1, #0]
 801809c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80180a0:	bf0c      	ite	eq
 80180a2:	46c6      	moveq	lr, r8
 80180a4:	f04f 0e00 	movne.w	lr, #0
 80180a8:	9109      	str	r1, [sp, #36]	; 0x24
 80180aa:	fb03 c202 	mla	r2, r3, r2, ip
 80180ae:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80180b2:	4373      	muls	r3, r6
 80180b4:	fa1f fe8e 	uxth.w	lr, lr
 80180b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80180bc:	9103      	str	r1, [sp, #12]
 80180be:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80180c2:	9306      	str	r3, [sp, #24]
 80180c4:	1d2b      	adds	r3, r5, #4
 80180c6:	9307      	str	r3, [sp, #28]
 80180c8:	9b01      	ldr	r3, [sp, #4]
 80180ca:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 80180ce:	2300      	movs	r3, #0
 80180d0:	b292      	uxth	r2, r2
 80180d2:	9302      	str	r3, [sp, #8]
 80180d4:	9204      	str	r2, [sp, #16]
 80180d6:	9a06      	ldr	r2, [sp, #24]
 80180d8:	4282      	cmp	r2, r0
 80180da:	f240 809f 	bls.w	801821c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 80180de:	b963      	cbnz	r3, 80180fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 80180e0:	9b00      	ldr	r3, [sp, #0]
 80180e2:	781a      	ldrb	r2, [r3, #0]
 80180e4:	0993      	lsrs	r3, r2, #6
 80180e6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80180ea:	9202      	str	r2, [sp, #8]
 80180ec:	1e5a      	subs	r2, r3, #1
 80180ee:	2a02      	cmp	r2, #2
 80180f0:	d815      	bhi.n	801811e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80180f2:	9a00      	ldr	r2, [sp, #0]
 80180f4:	b29b      	uxth	r3, r3
 80180f6:	3201      	adds	r2, #1
 80180f8:	9200      	str	r2, [sp, #0]
 80180fa:	b1b4      	cbz	r4, 801812a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 80180fc:	429c      	cmp	r4, r3
 80180fe:	bf91      	iteee	ls
 8018100:	1b1c      	subls	r4, r3, r4
 8018102:	1ae4      	subhi	r4, r4, r3
 8018104:	4671      	movhi	r1, lr
 8018106:	f04f 0a00 	movhi.w	sl, #0
 801810a:	bf9b      	ittet	ls
 801810c:	fa1f fa84 	uxthls.w	sl, r4
 8018110:	2400      	movls	r4, #0
 8018112:	b2a4      	uxthhi	r4, r4
 8018114:	fa1f f188 	uxthls.w	r1, r8
 8018118:	4653      	mov	r3, sl
 801811a:	468e      	mov	lr, r1
 801811c:	e7db      	b.n	80180d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 801811e:	9a00      	ldr	r2, [sp, #0]
 8018120:	9b00      	ldr	r3, [sp, #0]
 8018122:	3202      	adds	r2, #2
 8018124:	785b      	ldrb	r3, [r3, #1]
 8018126:	9200      	str	r2, [sp, #0]
 8018128:	e7e7      	b.n	80180fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801812a:	2202      	movs	r2, #2
 801812c:	9907      	ldr	r1, [sp, #28]
 801812e:	4573      	cmp	r3, lr
 8018130:	4615      	mov	r5, r2
 8018132:	9a02      	ldr	r2, [sp, #8]
 8018134:	bf24      	itt	cs
 8018136:	eba3 0a0e 	subcs.w	sl, r3, lr
 801813a:	46f1      	movcs	r9, lr
 801813c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018140:	9905      	ldr	r1, [sp, #20]
 8018142:	bf34      	ite	cc
 8018144:	4699      	movcc	r9, r3
 8018146:	fa1f fa8a 	uxthcs.w	sl, sl
 801814a:	f831 c002 	ldrh.w	ip, [r1, r2]
 801814e:	bf38      	it	cc
 8018150:	ebae 0103 	subcc.w	r1, lr, r3
 8018154:	9a01      	ldr	r2, [sp, #4]
 8018156:	bf2e      	itee	cs
 8018158:	4621      	movcs	r1, r4
 801815a:	b289      	uxthcc	r1, r1
 801815c:	46a2      	movcc	sl, r4
 801815e:	2aff      	cmp	r2, #255	; 0xff
 8018160:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018164:	d105      	bne.n	8018172 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8018166:	4481      	add	r9, r0
 8018168:	4581      	cmp	r9, r0
 801816a:	d045      	beq.n	80181f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801816c:	f820 cb02 	strh.w	ip, [r0], #2
 8018170:	e7fa      	b.n	8018168 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8018172:	ea4f 222c 	mov.w	r2, ip, asr #8
 8018176:	9d03      	ldr	r5, [sp, #12]
 8018178:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801817c:	4481      	add	r9, r0
 801817e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018182:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018186:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801818a:	fa5f fc8c 	uxtb.w	ip, ip
 801818e:	436a      	muls	r2, r5
 8018190:	fb0b fb05 	mul.w	fp, fp, r5
 8018194:	fb0c fc05 	mul.w	ip, ip, r5
 8018198:	9208      	str	r2, [sp, #32]
 801819a:	4581      	cmp	r9, r0
 801819c:	d02c      	beq.n	80181f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801819e:	8802      	ldrh	r2, [r0, #0]
 80181a0:	9d04      	ldr	r5, [sp, #16]
 80181a2:	1216      	asrs	r6, r2, #8
 80181a4:	9f04      	ldr	r7, [sp, #16]
 80181a6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80181aa:	fb16 f605 	smulbb	r6, r6, r5
 80181ae:	9d08      	ldr	r5, [sp, #32]
 80181b0:	442e      	add	r6, r5
 80181b2:	10d5      	asrs	r5, r2, #3
 80181b4:	00d2      	lsls	r2, r2, #3
 80181b6:	b2b6      	uxth	r6, r6
 80181b8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80181bc:	b2d2      	uxtb	r2, r2
 80181be:	fb15 f507 	smulbb	r5, r5, r7
 80181c2:	fb12 f207 	smulbb	r2, r2, r7
 80181c6:	1c77      	adds	r7, r6, #1
 80181c8:	445d      	add	r5, fp
 80181ca:	4462      	add	r2, ip
 80181cc:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80181d0:	b2ad      	uxth	r5, r5
 80181d2:	b292      	uxth	r2, r2
 80181d4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80181d8:	1c57      	adds	r7, r2, #1
 80181da:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 80181de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80181e2:	4316      	orrs	r6, r2
 80181e4:	1c6a      	adds	r2, r5, #1
 80181e6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80181ea:	096d      	lsrs	r5, r5, #5
 80181ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80181f0:	432e      	orrs	r6, r5
 80181f2:	f820 6b02 	strh.w	r6, [r0], #2
 80181f6:	e7d0      	b.n	801819a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 80181f8:	4573      	cmp	r3, lr
 80181fa:	d38d      	bcc.n	8018118 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 80181fc:	fa1f f188 	uxth.w	r1, r8
 8018200:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8018204:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018206:	1a64      	subs	r4, r4, r1
 8018208:	881b      	ldrh	r3, [r3, #0]
 801820a:	b2a4      	uxth	r4, r4
 801820c:	eba3 0308 	sub.w	r3, r3, r8
 8018210:	2c00      	cmp	r4, #0
 8018212:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018216:	bf18      	it	ne
 8018218:	2100      	movne	r1, #0
 801821a:	e77d      	b.n	8018118 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801821c:	4b03      	ldr	r3, [pc, #12]	; (801822c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801821e:	6818      	ldr	r0, [r3, #0]
 8018220:	6803      	ldr	r3, [r0, #0]
 8018222:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018224:	4798      	blx	r3
 8018226:	b00f      	add	sp, #60	; 0x3c
 8018228:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801822c:	24001ed8 	.word	0x24001ed8
 8018230:	24001ed2 	.word	0x24001ed2

08018234 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018238:	b09f      	sub	sp, #124	; 0x7c
 801823a:	461d      	mov	r5, r3
 801823c:	4604      	mov	r4, r0
 801823e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018240:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8018244:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8018248:	9209      	str	r2, [sp, #36]	; 0x24
 801824a:	2a00      	cmp	r2, #0
 801824c:	f000 81ed 	beq.w	801862a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8018250:	6828      	ldr	r0, [r5, #0]
 8018252:	aa1a      	add	r2, sp, #104	; 0x68
 8018254:	6869      	ldr	r1, [r5, #4]
 8018256:	c203      	stmia	r2!, {r0, r1}
 8018258:	6818      	ldr	r0, [r3, #0]
 801825a:	aa1c      	add	r2, sp, #112	; 0x70
 801825c:	6859      	ldr	r1, [r3, #4]
 801825e:	c203      	stmia	r2!, {r0, r1}
 8018260:	a81a      	add	r0, sp, #104	; 0x68
 8018262:	f7fa f963 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018266:	4629      	mov	r1, r5
 8018268:	a81c      	add	r0, sp, #112	; 0x70
 801826a:	f7fa f987 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801826e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8018272:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8018276:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801827a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801827e:	bfdb      	ittet	le
 8018280:	b29a      	uxthle	r2, r3
 8018282:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8018286:	2201      	movgt	r2, #1
 8018288:	fb91 f2f2 	sdivle	r2, r1, r2
 801828c:	9202      	str	r2, [sp, #8]
 801828e:	9802      	ldr	r0, [sp, #8]
 8018290:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8018294:	9902      	ldr	r1, [sp, #8]
 8018296:	fb92 f0f0 	sdiv	r0, r2, r0
 801829a:	b280      	uxth	r0, r0
 801829c:	4488      	add	r8, r1
 801829e:	9010      	str	r0, [sp, #64]	; 0x40
 80182a0:	f108 38ff 	add.w	r8, r8, #4294967295
 80182a4:	9802      	ldr	r0, [sp, #8]
 80182a6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80182a8:	fb05 2510 	mls	r5, r5, r0, r2
 80182ac:	fb98 f8f1 	sdiv	r8, r8, r1
 80182b0:	fb15 f503 	smulbb	r5, r5, r3
 80182b4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 80182b8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80182bc:	f108 0801 	add.w	r8, r8, #1
 80182c0:	440d      	add	r5, r1
 80182c2:	4419      	add	r1, r3
 80182c4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 80182c8:	fa1f f888 	uxth.w	r8, r8
 80182cc:	441a      	add	r2, r3
 80182ce:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 80182d2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 80182d6:	b2ad      	uxth	r5, r5
 80182d8:	9304      	str	r3, [sp, #16]
 80182da:	4b94      	ldr	r3, [pc, #592]	; (801852c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80182dc:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 80182e0:	6818      	ldr	r0, [r3, #0]
 80182e2:	6803      	ldr	r3, [r0, #0]
 80182e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80182e6:	4798      	blx	r3
 80182e8:	4b91      	ldr	r3, [pc, #580]	; (8018530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 80182ea:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 80182ee:	2d00      	cmp	r5, #0
 80182f0:	881a      	ldrh	r2, [r3, #0]
 80182f2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80182f6:	fb02 f606 	mul.w	r6, r2, r6
 80182fa:	fb02 7101 	mla	r1, r2, r1, r7
 80182fe:	9318      	str	r3, [sp, #96]	; 0x60
 8018300:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018304:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8018308:	f04f 0100 	mov.w	r1, #0
 801830c:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8018310:	930f      	str	r3, [sp, #60]	; 0x3c
 8018312:	4b88      	ldr	r3, [pc, #544]	; (8018534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 8018314:	920a      	str	r2, [sp, #40]	; 0x28
 8018316:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018318:	eba3 0304 	sub.w	r3, r3, r4
 801831c:	910d      	str	r1, [sp, #52]	; 0x34
 801831e:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8018322:	9319      	str	r3, [sp, #100]	; 0x64
 8018324:	f108 0204 	add.w	r2, r8, #4
 8018328:	9211      	str	r2, [sp, #68]	; 0x44
 801832a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801832c:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 8018330:	9215      	str	r2, [sp, #84]	; 0x54
 8018332:	9a04      	ldr	r2, [sp, #16]
 8018334:	bf18      	it	ne
 8018336:	2200      	movne	r2, #0
 8018338:	b292      	uxth	r2, r2
 801833a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801833c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801833e:	fa11 f383 	uxtah	r3, r1, r3
 8018342:	9914      	ldr	r1, [sp, #80]	; 0x50
 8018344:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018348:	3304      	adds	r3, #4
 801834a:	9306      	str	r3, [sp, #24]
 801834c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801834e:	4283      	cmp	r3, r0
 8018350:	f240 8166 	bls.w	8018620 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8018354:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8018358:	f04f 0a01 	mov.w	sl, #1
 801835c:	9902      	ldr	r1, [sp, #8]
 801835e:	9e06      	ldr	r6, [sp, #24]
 8018360:	46d3      	mov	fp, sl
 8018362:	4657      	mov	r7, sl
 8018364:	7836      	ldrb	r6, [r6, #0]
 8018366:	fbb5 f3f3 	udiv	r3, r5, r3
 801836a:	1acb      	subs	r3, r1, r3
 801836c:	9612      	str	r6, [sp, #72]	; 0x48
 801836e:	3601      	adds	r6, #1
 8018370:	b29b      	uxth	r3, r3
 8018372:	9605      	str	r6, [sp, #20]
 8018374:	9316      	str	r3, [sp, #88]	; 0x58
 8018376:	9b06      	ldr	r3, [sp, #24]
 8018378:	7859      	ldrb	r1, [r3, #1]
 801837a:	789b      	ldrb	r3, [r3, #2]
 801837c:	021b      	lsls	r3, r3, #8
 801837e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8018382:	9906      	ldr	r1, [sp, #24]
 8018384:	78c9      	ldrb	r1, [r1, #3]
 8018386:	430b      	orrs	r3, r1
 8018388:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801838a:	4419      	add	r1, r3
 801838c:	1c4e      	adds	r6, r1, #1
 801838e:	7849      	ldrb	r1, [r1, #1]
 8018390:	9603      	str	r6, [sp, #12]
 8018392:	0209      	lsls	r1, r1, #8
 8018394:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018396:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801839a:	5cf3      	ldrb	r3, [r6, r3]
 801839c:	4319      	orrs	r1, r3
 801839e:	b28b      	uxth	r3, r1
 80183a0:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 80183a4:	930c      	str	r3, [sp, #48]	; 0x30
 80183a6:	2300      	movs	r3, #0
 80183a8:	9307      	str	r3, [sp, #28]
 80183aa:	469c      	mov	ip, r3
 80183ac:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80183b0:	930e      	str	r3, [sp, #56]	; 0x38
 80183b2:	2d00      	cmp	r5, #0
 80183b4:	d07e      	beq.n	80184b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 80183b6:	42af      	cmp	r7, r5
 80183b8:	d26e      	bcs.n	8018498 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 80183ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80183bc:	1bed      	subs	r5, r5, r7
 80183be:	9201      	str	r2, [sp, #4]
 80183c0:	4283      	cmp	r3, r0
 80183c2:	b2ad      	uxth	r5, r5
 80183c4:	d802      	bhi.n	80183cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 80183c6:	e073      	b.n	80184b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 80183c8:	2b00      	cmp	r3, #0
 80183ca:	d15f      	bne.n	801848c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 80183cc:	9b03      	ldr	r3, [sp, #12]
 80183ce:	f1cb 0207 	rsb	r2, fp, #7
 80183d2:	785b      	ldrb	r3, [r3, #1]
 80183d4:	4093      	lsls	r3, r2
 80183d6:	005b      	lsls	r3, r3, #1
 80183d8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80183dc:	9b03      	ldr	r3, [sp, #12]
 80183de:	781b      	ldrb	r3, [r3, #0]
 80183e0:	fa43 f30b 	asr.w	r3, r3, fp
 80183e4:	b2db      	uxtb	r3, r3
 80183e6:	4313      	orrs	r3, r2
 80183e8:	f10b 0201 	add.w	r2, fp, #1
 80183ec:	fa5f fb82 	uxtb.w	fp, r2
 80183f0:	9a03      	ldr	r2, [sp, #12]
 80183f2:	b29f      	uxth	r7, r3
 80183f4:	f1bb 0f08 	cmp.w	fp, #8
 80183f8:	bf13      	iteet	ne
 80183fa:	3201      	addne	r2, #1
 80183fc:	3202      	addeq	r2, #2
 80183fe:	f04f 0b00 	moveq.w	fp, #0
 8018402:	9203      	strne	r2, [sp, #12]
 8018404:	bf08      	it	eq
 8018406:	9203      	streq	r2, [sp, #12]
 8018408:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801840a:	42ba      	cmp	r2, r7
 801840c:	d309      	bcc.n	8018422 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 801840e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8018412:	2301      	movs	r3, #1
 8018414:	9a05      	ldr	r2, [sp, #20]
 8018416:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801841a:	d30e      	bcc.n	801843a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801841c:	469a      	mov	sl, r3
 801841e:	2600      	movs	r6, #0
 8018420:	e035      	b.n	801848e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 8018422:	9b05      	ldr	r3, [sp, #20]
 8018424:	429f      	cmp	r7, r3
 8018426:	d318      	bcc.n	801845a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 8018428:	eb04 030a 	add.w	r3, r4, sl
 801842c:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 8018430:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 8018434:	f10a 0301 	add.w	r3, sl, #1
 8018438:	b29b      	uxth	r3, r3
 801843a:	9a05      	ldr	r2, [sp, #20]
 801843c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8018440:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018444:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018446:	7116      	strb	r6, [r2, #4]
 8018448:	f10a 0601 	add.w	r6, sl, #1
 801844c:	80d1      	strh	r1, [r2, #6]
 801844e:	7156      	strb	r6, [r2, #5]
 8018450:	9a05      	ldr	r2, [sp, #20]
 8018452:	3201      	adds	r2, #1
 8018454:	b292      	uxth	r2, r2
 8018456:	9205      	str	r2, [sp, #20]
 8018458:	e7e0      	b.n	801841c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801845a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801845e:	463a      	mov	r2, r7
 8018460:	795b      	ldrb	r3, [r3, #5]
 8018462:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8018466:	4426      	add	r6, r4
 8018468:	9919      	ldr	r1, [sp, #100]	; 0x64
 801846a:	eb01 0c06 	add.w	ip, r1, r6
 801846e:	f1bc 0f00 	cmp.w	ip, #0
 8018472:	dd07      	ble.n	8018484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8018474:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018478:	f892 c004 	ldrb.w	ip, [r2, #4]
 801847c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8018480:	88d2      	ldrh	r2, [r2, #6]
 8018482:	e7f1      	b.n	8018468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8018484:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8018488:	b29b      	uxth	r3, r3
 801848a:	e7c3      	b.n	8018414 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 801848c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801848e:	970c      	str	r7, [sp, #48]	; 0x30
 8018490:	46b4      	mov	ip, r6
 8018492:	9a01      	ldr	r2, [sp, #4]
 8018494:	461f      	mov	r7, r3
 8018496:	e78c      	b.n	80183b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 8018498:	1b7b      	subs	r3, r7, r5
 801849a:	eb0c 0605 	add.w	r6, ip, r5
 801849e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80184a2:	b29b      	uxth	r3, r3
 80184a4:	b2b6      	uxth	r6, r6
 80184a6:	9201      	str	r2, [sp, #4]
 80184a8:	2500      	movs	r5, #0
 80184aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80184ac:	4282      	cmp	r2, r0
 80184ae:	d88b      	bhi.n	80183c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 80184b0:	9a01      	ldr	r2, [sp, #4]
 80184b2:	e74b      	b.n	801834c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 80184b4:	4297      	cmp	r7, r2
 80184b6:	d332      	bcc.n	801851e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 80184b8:	1abb      	subs	r3, r7, r2
 80184ba:	9208      	str	r2, [sp, #32]
 80184bc:	9501      	str	r5, [sp, #4]
 80184be:	b29b      	uxth	r3, r3
 80184c0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80184c2:	29ff      	cmp	r1, #255	; 0xff
 80184c4:	9908      	ldr	r1, [sp, #32]
 80184c6:	eb0c 0601 	add.w	r6, ip, r1
 80184ca:	d135      	bne.n	8018538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80184cc:	f1a0 0e02 	sub.w	lr, r0, #2
 80184d0:	b2b6      	uxth	r6, r6
 80184d2:	45b4      	cmp	ip, r6
 80184d4:	f040 808c 	bne.w	80185f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 80184d8:	9908      	ldr	r1, [sp, #32]
 80184da:	4297      	cmp	r7, r2
 80184dc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80184e0:	d3e2      	bcc.n	80184a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 80184e2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80184e4:	9904      	ldr	r1, [sp, #16]
 80184e6:	8812      	ldrh	r2, [r2, #0]
 80184e8:	1a52      	subs	r2, r2, r1
 80184ea:	9916      	ldr	r1, [sp, #88]	; 0x58
 80184ec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80184f0:	9a07      	ldr	r2, [sp, #28]
 80184f2:	3201      	adds	r2, #1
 80184f4:	428a      	cmp	r2, r1
 80184f6:	9207      	str	r2, [sp, #28]
 80184f8:	f040 8087 	bne.w	801860a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 80184fc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8018500:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 8018504:	9b04      	ldr	r3, [sp, #16]
 8018506:	1bed      	subs	r5, r5, r7
 8018508:	b2ad      	uxth	r5, r5
 801850a:	2d00      	cmp	r5, #0
 801850c:	bf08      	it	eq
 801850e:	461a      	moveq	r2, r3
 8018510:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018512:	bf18      	it	ne
 8018514:	2200      	movne	r2, #0
 8018516:	3301      	adds	r3, #1
 8018518:	b292      	uxth	r2, r2
 801851a:	930d      	str	r3, [sp, #52]	; 0x34
 801851c:	e70d      	b.n	801833a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 801851e:	1bd1      	subs	r1, r2, r7
 8018520:	9708      	str	r7, [sp, #32]
 8018522:	b28b      	uxth	r3, r1
 8018524:	9301      	str	r3, [sp, #4]
 8018526:	462b      	mov	r3, r5
 8018528:	e7ca      	b.n	80184c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 801852a:	bf00      	nop
 801852c:	24001ed8 	.word	0x24001ed8
 8018530:	24001ed2 	.word	0x24001ed2
 8018534:	fffff7fb 	.word	0xfffff7fb
 8018538:	b2b6      	uxth	r6, r6
 801853a:	900b      	str	r0, [sp, #44]	; 0x2c
 801853c:	45b4      	cmp	ip, r6
 801853e:	d0cb      	beq.n	80184d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8018540:	f10c 0101 	add.w	r1, ip, #1
 8018544:	44a4      	add	ip, r4
 8018546:	9117      	str	r1, [sp, #92]	; 0x5c
 8018548:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801854c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801854e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018552:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8018554:	ea4f 2825 	mov.w	r8, r5, asr #8
 8018558:	f8b1 c000 	ldrh.w	ip, [r1]
 801855c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801855e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8018562:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8018566:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801856a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801856e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018572:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018576:	fb1e fe01 	smulbb	lr, lr, r1
 801857a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801857c:	fa5f fc8c 	uxtb.w	ip, ip
 8018580:	fb08 e801 	mla	r8, r8, r1, lr
 8018584:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8018588:	990e      	ldr	r1, [sp, #56]	; 0x38
 801858a:	00ed      	lsls	r5, r5, #3
 801858c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018590:	fa1f f888 	uxth.w	r8, r8
 8018594:	fb19 f901 	smulbb	r9, r9, r1
 8018598:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801859a:	b2ed      	uxtb	r5, r5
 801859c:	fb0e 9e01 	mla	lr, lr, r1, r9
 80185a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80185a2:	fb1c fc01 	smulbb	ip, ip, r1
 80185a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80185a8:	fa1f fe8e 	uxth.w	lr, lr
 80185ac:	fb05 c501 	mla	r5, r5, r1, ip
 80185b0:	f108 0c01 	add.w	ip, r8, #1
 80185b4:	f10e 0901 	add.w	r9, lr, #1
 80185b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80185ba:	b2ad      	uxth	r5, r5
 80185bc:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80185c0:	f105 0c01 	add.w	ip, r5, #1
 80185c4:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 80185c8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80185cc:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80185d0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80185d4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80185d8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80185dc:	ea4c 0808 	orr.w	r8, ip, r8
 80185e0:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 80185e4:	ea48 0809 	orr.w	r8, r8, r9
 80185e8:	f821 8b02 	strh.w	r8, [r1], #2
 80185ec:	910b      	str	r1, [sp, #44]	; 0x2c
 80185ee:	e7a5      	b.n	801853c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 80185f0:	f10c 0801 	add.w	r8, ip, #1
 80185f4:	44a4      	add	ip, r4
 80185f6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80185f8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 80185fc:	fa1f fc88 	uxth.w	ip, r8
 8018600:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018604:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8018608:	e763      	b.n	80184d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 801860a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801860e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8018612:	1aad      	subs	r5, r5, r2
 8018614:	b2ad      	uxth	r5, r5
 8018616:	2d00      	cmp	r5, #0
 8018618:	bf18      	it	ne
 801861a:	2200      	movne	r2, #0
 801861c:	9201      	str	r2, [sp, #4]
 801861e:	e744      	b.n	80184aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 8018620:	4b03      	ldr	r3, [pc, #12]	; (8018630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 8018622:	6818      	ldr	r0, [r3, #0]
 8018624:	6803      	ldr	r3, [r0, #0]
 8018626:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018628:	4798      	blx	r3
 801862a:	b01f      	add	sp, #124	; 0x7c
 801862c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018630:	24001ed8 	.word	0x24001ed8

08018634 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8018634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018638:	b08f      	sub	sp, #60	; 0x3c
 801863a:	461c      	mov	r4, r3
 801863c:	460f      	mov	r7, r1
 801863e:	9203      	str	r2, [sp, #12]
 8018640:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018644:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018646:	9202      	str	r2, [sp, #8]
 8018648:	2a00      	cmp	r2, #0
 801864a:	f000 8128 	beq.w	801889e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801864e:	6820      	ldr	r0, [r4, #0]
 8018650:	aa0a      	add	r2, sp, #40	; 0x28
 8018652:	6861      	ldr	r1, [r4, #4]
 8018654:	c203      	stmia	r2!, {r0, r1}
 8018656:	6818      	ldr	r0, [r3, #0]
 8018658:	aa0c      	add	r2, sp, #48	; 0x30
 801865a:	6859      	ldr	r1, [r3, #4]
 801865c:	c203      	stmia	r2!, {r0, r1}
 801865e:	a80a      	add	r0, sp, #40	; 0x28
 8018660:	f7f9 ff64 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018664:	4621      	mov	r1, r4
 8018666:	a80c      	add	r0, sp, #48	; 0x30
 8018668:	f7f9 ff88 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801866c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8018670:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8018674:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8018678:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801867c:	bfdb      	ittet	le
 801867e:	b2b3      	uxthle	r3, r6
 8018680:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8018684:	2301      	movgt	r3, #1
 8018686:	fb92 f3f3 	sdivle	r3, r2, r3
 801868a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801868e:	441d      	add	r5, r3
 8018690:	fb92 f1f3 	sdiv	r1, r2, r3
 8018694:	fa1f fc81 	uxth.w	ip, r1
 8018698:	3d01      	subs	r5, #1
 801869a:	fb0c 2413 	mls	r4, ip, r3, r2
 801869e:	4661      	mov	r1, ip
 80186a0:	fb14 f406 	smulbb	r4, r4, r6
 80186a4:	4404      	add	r4, r0
 80186a6:	fb95 f5f3 	sdiv	r5, r5, r3
 80186aa:	b2a4      	uxth	r4, r4
 80186ac:	b121      	cbz	r1, 80186b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 80186ae:	9b03      	ldr	r3, [sp, #12]
 80186b0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80186b4:	ba1b      	rev	r3, r3
 80186b6:	441f      	add	r7, r3
 80186b8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80186bc:	b2ad      	uxth	r5, r5
 80186be:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80186c2:	4418      	add	r0, r3
 80186c4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80186c8:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80186cc:	00ad      	lsls	r5, r5, #2
 80186ce:	441a      	add	r2, r3
 80186d0:	4b74      	ldr	r3, [pc, #464]	; (80188a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80186d2:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 80186d6:	6818      	ldr	r0, [r3, #0]
 80186d8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80186dc:	6803      	ldr	r3, [r0, #0]
 80186de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80186e0:	4798      	blx	r3
 80186e2:	4a71      	ldr	r2, [pc, #452]	; (80188a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80186e4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80186e8:	2c00      	cmp	r4, #0
 80186ea:	8813      	ldrh	r3, [r2, #0]
 80186ec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80186f0:	bf0c      	ite	eq
 80186f2:	46c8      	moveq	r8, r9
 80186f4:	f04f 0800 	movne.w	r8, #0
 80186f8:	9209      	str	r2, [sp, #36]	; 0x24
 80186fa:	fb03 c101 	mla	r1, r3, r1, ip
 80186fe:	4373      	muls	r3, r6
 8018700:	fa1f f888 	uxth.w	r8, r8
 8018704:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018708:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801870c:	9304      	str	r3, [sp, #16]
 801870e:	1d2b      	adds	r3, r5, #4
 8018710:	9305      	str	r3, [sp, #20]
 8018712:	2300      	movs	r3, #0
 8018714:	9301      	str	r3, [sp, #4]
 8018716:	9a04      	ldr	r2, [sp, #16]
 8018718:	4282      	cmp	r2, r0
 801871a:	f240 80bb 	bls.w	8018894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801871e:	b95b      	cbnz	r3, 8018738 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 8018720:	783a      	ldrb	r2, [r7, #0]
 8018722:	0993      	lsrs	r3, r2, #6
 8018724:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8018728:	9201      	str	r2, [sp, #4]
 801872a:	1e5a      	subs	r2, r3, #1
 801872c:	2a02      	cmp	r2, #2
 801872e:	bf8d      	iteet	hi
 8018730:	787b      	ldrbhi	r3, [r7, #1]
 8018732:	3701      	addls	r7, #1
 8018734:	b29b      	uxthls	r3, r3
 8018736:	3702      	addhi	r7, #2
 8018738:	b184      	cbz	r4, 801875c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801873a:	429c      	cmp	r4, r3
 801873c:	bf91      	iteee	ls
 801873e:	1b1c      	subls	r4, r3, r4
 8018740:	1ae4      	subhi	r4, r4, r3
 8018742:	46c4      	movhi	ip, r8
 8018744:	f04f 0a00 	movhi.w	sl, #0
 8018748:	bf9b      	ittet	ls
 801874a:	fa1f fa84 	uxthls.w	sl, r4
 801874e:	2400      	movls	r4, #0
 8018750:	b2a4      	uxthhi	r4, r4
 8018752:	fa1f fc89 	uxthls.w	ip, r9
 8018756:	4653      	mov	r3, sl
 8018758:	46e0      	mov	r8, ip
 801875a:	e7dc      	b.n	8018716 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 801875c:	2204      	movs	r2, #4
 801875e:	9905      	ldr	r1, [sp, #20]
 8018760:	4543      	cmp	r3, r8
 8018762:	4615      	mov	r5, r2
 8018764:	9a01      	ldr	r2, [sp, #4]
 8018766:	bf24      	itt	cs
 8018768:	eba3 0a08 	subcs.w	sl, r3, r8
 801876c:	46c6      	movcs	lr, r8
 801876e:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018772:	9903      	ldr	r1, [sp, #12]
 8018774:	bf3c      	itt	cc
 8018776:	eba8 0c03 	subcc.w	ip, r8, r3
 801877a:	469e      	movcc	lr, r3
 801877c:	588a      	ldr	r2, [r1, r2]
 801877e:	bf26      	itte	cs
 8018780:	fa1f fa8a 	uxthcs.w	sl, sl
 8018784:	46a4      	movcs	ip, r4
 8018786:	fa1f fc8c 	uxthcc.w	ip, ip
 801878a:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801878e:	bf38      	it	cc
 8018790:	46a2      	movcc	sl, r4
 8018792:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8018796:	2900      	cmp	r1, #0
 8018798:	d066      	beq.n	8018868 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801879a:	29ff      	cmp	r1, #255	; 0xff
 801879c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80187a0:	d114      	bne.n	80187cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80187a2:	9d02      	ldr	r5, [sp, #8]
 80187a4:	2dff      	cmp	r5, #255	; 0xff
 80187a6:	d111      	bne.n	80187cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80187a8:	0951      	lsrs	r1, r2, #5
 80187aa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80187ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80187b2:	4486      	add	lr, r0
 80187b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80187b8:	f026 0607 	bic.w	r6, r6, #7
 80187bc:	430e      	orrs	r6, r1
 80187be:	4316      	orrs	r6, r2
 80187c0:	b2b6      	uxth	r6, r6
 80187c2:	4586      	cmp	lr, r0
 80187c4:	d051      	beq.n	801886a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80187c6:	f820 6b02 	strh.w	r6, [r0], #2
 80187ca:	e7fa      	b.n	80187c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80187cc:	9d02      	ldr	r5, [sp, #8]
 80187ce:	b2f6      	uxtb	r6, r6
 80187d0:	4486      	add	lr, r0
 80187d2:	4369      	muls	r1, r5
 80187d4:	1c4d      	adds	r5, r1, #1
 80187d6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80187da:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80187de:	b2d2      	uxtb	r2, r2
 80187e0:	122d      	asrs	r5, r5, #8
 80187e2:	ea6f 0b05 	mvn.w	fp, r5
 80187e6:	b2ad      	uxth	r5, r5
 80187e8:	fb11 f105 	smulbb	r1, r1, r5
 80187ec:	fa5f fb8b 	uxtb.w	fp, fp
 80187f0:	fb16 f605 	smulbb	r6, r6, r5
 80187f4:	fb12 f205 	smulbb	r2, r2, r5
 80187f8:	b289      	uxth	r1, r1
 80187fa:	b2b6      	uxth	r6, r6
 80187fc:	b292      	uxth	r2, r2
 80187fe:	9106      	str	r1, [sp, #24]
 8018800:	9607      	str	r6, [sp, #28]
 8018802:	9208      	str	r2, [sp, #32]
 8018804:	4586      	cmp	lr, r0
 8018806:	d030      	beq.n	801886a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018808:	8802      	ldrh	r2, [r0, #0]
 801880a:	9906      	ldr	r1, [sp, #24]
 801880c:	1216      	asrs	r6, r2, #8
 801880e:	10d5      	asrs	r5, r2, #3
 8018810:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018814:	00d2      	lsls	r2, r2, #3
 8018816:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801881a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801881e:	b2d2      	uxtb	r2, r2
 8018820:	fb06 160b 	mla	r6, r6, fp, r1
 8018824:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018828:	9907      	ldr	r1, [sp, #28]
 801882a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801882e:	b2b6      	uxth	r6, r6
 8018830:	fb05 150b 	mla	r5, r5, fp, r1
 8018834:	9908      	ldr	r1, [sp, #32]
 8018836:	fb02 120b 	mla	r2, r2, fp, r1
 801883a:	1c71      	adds	r1, r6, #1
 801883c:	b2ad      	uxth	r5, r5
 801883e:	b292      	uxth	r2, r2
 8018840:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8018844:	1c51      	adds	r1, r2, #1
 8018846:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801884a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801884e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018852:	4316      	orrs	r6, r2
 8018854:	1c6a      	adds	r2, r5, #1
 8018856:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801885a:	096d      	lsrs	r5, r5, #5
 801885c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018860:	432e      	orrs	r6, r5
 8018862:	f820 6b02 	strh.w	r6, [r0], #2
 8018866:	e7cd      	b.n	8018804 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8018868:	4470      	add	r0, lr
 801886a:	4543      	cmp	r3, r8
 801886c:	f4ff af73 	bcc.w	8018756 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8018870:	fa1f fc89 	uxth.w	ip, r9
 8018874:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8018878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801887a:	eba4 040c 	sub.w	r4, r4, ip
 801887e:	881b      	ldrh	r3, [r3, #0]
 8018880:	b2a4      	uxth	r4, r4
 8018882:	eba3 0309 	sub.w	r3, r3, r9
 8018886:	2c00      	cmp	r4, #0
 8018888:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801888c:	bf18      	it	ne
 801888e:	f04f 0c00 	movne.w	ip, #0
 8018892:	e760      	b.n	8018756 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8018894:	4b03      	ldr	r3, [pc, #12]	; (80188a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8018896:	6818      	ldr	r0, [r3, #0]
 8018898:	6803      	ldr	r3, [r0, #0]
 801889a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801889c:	4798      	blx	r3
 801889e:	b00f      	add	sp, #60	; 0x3c
 80188a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188a4:	24001ed8 	.word	0x24001ed8
 80188a8:	24001ed2 	.word	0x24001ed2

080188ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80188ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188b0:	b093      	sub	sp, #76	; 0x4c
 80188b2:	461c      	mov	r4, r3
 80188b4:	9205      	str	r2, [sp, #20]
 80188b6:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 80188ba:	9101      	str	r1, [sp, #4]
 80188bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80188be:	9202      	str	r2, [sp, #8]
 80188c0:	2a00      	cmp	r2, #0
 80188c2:	f000 812e 	beq.w	8018b22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 80188c6:	6820      	ldr	r0, [r4, #0]
 80188c8:	aa0e      	add	r2, sp, #56	; 0x38
 80188ca:	6861      	ldr	r1, [r4, #4]
 80188cc:	c203      	stmia	r2!, {r0, r1}
 80188ce:	6818      	ldr	r0, [r3, #0]
 80188d0:	aa10      	add	r2, sp, #64	; 0x40
 80188d2:	6859      	ldr	r1, [r3, #4]
 80188d4:	c203      	stmia	r2!, {r0, r1}
 80188d6:	a80e      	add	r0, sp, #56	; 0x38
 80188d8:	f7f9 fe28 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80188dc:	4621      	mov	r1, r4
 80188de:	a810      	add	r0, sp, #64	; 0x40
 80188e0:	f7f9 fe4c 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80188e4:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80188e8:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80188ec:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80188f0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80188f4:	bfdb      	ittet	le
 80188f6:	b2b3      	uxthle	r3, r6
 80188f8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 80188fc:	2301      	movgt	r3, #1
 80188fe:	fb92 f3f3 	sdivle	r3, r2, r3
 8018902:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8018906:	441d      	add	r5, r3
 8018908:	fb92 f1f3 	sdiv	r1, r2, r3
 801890c:	fa1f fc81 	uxth.w	ip, r1
 8018910:	3d01      	subs	r5, #1
 8018912:	fb0c 2413 	mls	r4, ip, r3, r2
 8018916:	4661      	mov	r1, ip
 8018918:	fb14 f406 	smulbb	r4, r4, r6
 801891c:	4404      	add	r4, r0
 801891e:	fb95 f5f3 	sdiv	r5, r5, r3
 8018922:	b2a4      	uxth	r4, r4
 8018924:	b131      	cbz	r1, 8018934 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 8018926:	9b05      	ldr	r3, [sp, #20]
 8018928:	9901      	ldr	r1, [sp, #4]
 801892a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801892e:	ba1b      	rev	r3, r3
 8018930:	4419      	add	r1, r3
 8018932:	9101      	str	r1, [sp, #4]
 8018934:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018938:	b2ad      	uxth	r5, r5
 801893a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801893e:	4418      	add	r0, r3
 8018940:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8018944:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 8018948:	00ad      	lsls	r5, r5, #2
 801894a:	441a      	add	r2, r3
 801894c:	4b76      	ldr	r3, [pc, #472]	; (8018b28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801894e:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 8018952:	6818      	ldr	r0, [r3, #0]
 8018954:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8018958:	6803      	ldr	r3, [r0, #0]
 801895a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801895c:	4798      	blx	r3
 801895e:	4973      	ldr	r1, [pc, #460]	; (8018b2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8018960:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 8018964:	2c00      	cmp	r4, #0
 8018966:	880b      	ldrh	r3, [r1, #0]
 8018968:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801896c:	910d      	str	r1, [sp, #52]	; 0x34
 801896e:	fb03 c202 	mla	r2, r3, r2, ip
 8018972:	bf08      	it	eq
 8018974:	46dc      	moveq	ip, fp
 8018976:	fb03 f306 	mul.w	r3, r3, r6
 801897a:	bf18      	it	ne
 801897c:	f04f 0c00 	movne.w	ip, #0
 8018980:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018984:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018988:	fa1f fc8c 	uxth.w	ip, ip
 801898c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018990:	9106      	str	r1, [sp, #24]
 8018992:	9308      	str	r3, [sp, #32]
 8018994:	1d2b      	adds	r3, r5, #4
 8018996:	9309      	str	r3, [sp, #36]	; 0x24
 8018998:	9b02      	ldr	r3, [sp, #8]
 801899a:	43da      	mvns	r2, r3
 801899c:	2300      	movs	r3, #0
 801899e:	b2d2      	uxtb	r2, r2
 80189a0:	9303      	str	r3, [sp, #12]
 80189a2:	9207      	str	r2, [sp, #28]
 80189a4:	9a08      	ldr	r2, [sp, #32]
 80189a6:	4282      	cmp	r2, r0
 80189a8:	f240 80b6 	bls.w	8018b18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 80189ac:	b963      	cbnz	r3, 80189c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80189ae:	9b01      	ldr	r3, [sp, #4]
 80189b0:	781a      	ldrb	r2, [r3, #0]
 80189b2:	0993      	lsrs	r3, r2, #6
 80189b4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80189b8:	9203      	str	r2, [sp, #12]
 80189ba:	1e5a      	subs	r2, r3, #1
 80189bc:	2a02      	cmp	r2, #2
 80189be:	d815      	bhi.n	80189ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 80189c0:	9a01      	ldr	r2, [sp, #4]
 80189c2:	b29b      	uxth	r3, r3
 80189c4:	3201      	adds	r2, #1
 80189c6:	9201      	str	r2, [sp, #4]
 80189c8:	b1b4      	cbz	r4, 80189f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 80189ca:	429c      	cmp	r4, r3
 80189cc:	bf91      	iteee	ls
 80189ce:	1b1c      	subls	r4, r3, r4
 80189d0:	1ae4      	subhi	r4, r4, r3
 80189d2:	4666      	movhi	r6, ip
 80189d4:	f04f 0800 	movhi.w	r8, #0
 80189d8:	bf9b      	ittet	ls
 80189da:	fa1f f884 	uxthls.w	r8, r4
 80189de:	2400      	movls	r4, #0
 80189e0:	b2a4      	uxthhi	r4, r4
 80189e2:	fa1f f68b 	uxthls.w	r6, fp
 80189e6:	4643      	mov	r3, r8
 80189e8:	46b4      	mov	ip, r6
 80189ea:	e7db      	b.n	80189a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 80189ec:	9a01      	ldr	r2, [sp, #4]
 80189ee:	9b01      	ldr	r3, [sp, #4]
 80189f0:	3202      	adds	r2, #2
 80189f2:	785b      	ldrb	r3, [r3, #1]
 80189f4:	9201      	str	r2, [sp, #4]
 80189f6:	e7e7      	b.n	80189c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80189f8:	2203      	movs	r2, #3
 80189fa:	9909      	ldr	r1, [sp, #36]	; 0x24
 80189fc:	4563      	cmp	r3, ip
 80189fe:	4615      	mov	r5, r2
 8018a00:	9a03      	ldr	r2, [sp, #12]
 8018a02:	bf2c      	ite	cs
 8018a04:	eba3 080c 	subcs.w	r8, r3, ip
 8018a08:	ebac 0603 	subcc.w	r6, ip, r3
 8018a0c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018a10:	9905      	ldr	r1, [sp, #20]
 8018a12:	bf24      	itt	cs
 8018a14:	fa1f f888 	uxthcs.w	r8, r8
 8018a18:	46e1      	movcs	r9, ip
 8018a1a:	eb01 0502 	add.w	r5, r1, r2
 8018a1e:	9902      	ldr	r1, [sp, #8]
 8018a20:	bf2f      	iteee	cs
 8018a22:	4626      	movcs	r6, r4
 8018a24:	b2b6      	uxthcc	r6, r6
 8018a26:	4699      	movcc	r9, r3
 8018a28:	46a0      	movcc	r8, r4
 8018a2a:	29ff      	cmp	r1, #255	; 0xff
 8018a2c:	d04a      	beq.n	8018ac4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8018a2e:	9f06      	ldr	r7, [sp, #24]
 8018a30:	46ca      	mov	sl, r9
 8018a32:	78a9      	ldrb	r1, [r5, #2]
 8018a34:	9004      	str	r0, [sp, #16]
 8018a36:	4379      	muls	r1, r7
 8018a38:	910a      	str	r1, [sp, #40]	; 0x28
 8018a3a:	7869      	ldrb	r1, [r5, #1]
 8018a3c:	4379      	muls	r1, r7
 8018a3e:	910b      	str	r1, [sp, #44]	; 0x2c
 8018a40:	9905      	ldr	r1, [sp, #20]
 8018a42:	5c8a      	ldrb	r2, [r1, r2]
 8018a44:	437a      	muls	r2, r7
 8018a46:	920c      	str	r2, [sp, #48]	; 0x30
 8018a48:	f1ba 0f00 	cmp.w	sl, #0
 8018a4c:	d03d      	beq.n	8018aca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8018a4e:	9a04      	ldr	r2, [sp, #16]
 8018a50:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018a54:	9f07      	ldr	r7, [sp, #28]
 8018a56:	8812      	ldrh	r2, [r2, #0]
 8018a58:	fa1f fa8a 	uxth.w	sl, sl
 8018a5c:	46be      	mov	lr, r7
 8018a5e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018a60:	1215      	asrs	r5, r2, #8
 8018a62:	10d1      	asrs	r1, r2, #3
 8018a64:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018a68:	00d2      	lsls	r2, r2, #3
 8018a6a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018a6e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018a72:	b2d2      	uxtb	r2, r2
 8018a74:	fb05 750e 	mla	r5, r5, lr, r7
 8018a78:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018a7c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8018a7e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018a82:	b2ad      	uxth	r5, r5
 8018a84:	fb01 710e 	mla	r1, r1, lr, r7
 8018a88:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8018a8a:	fb02 720e 	mla	r2, r2, lr, r7
 8018a8e:	f105 0e01 	add.w	lr, r5, #1
 8018a92:	b289      	uxth	r1, r1
 8018a94:	b292      	uxth	r2, r2
 8018a96:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018a9a:	f102 0e01 	add.w	lr, r2, #1
 8018a9e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018aa2:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018aa6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018aaa:	4315      	orrs	r5, r2
 8018aac:	1c4a      	adds	r2, r1, #1
 8018aae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018ab2:	9a04      	ldr	r2, [sp, #16]
 8018ab4:	0949      	lsrs	r1, r1, #5
 8018ab6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018aba:	430d      	orrs	r5, r1
 8018abc:	f822 5b02 	strh.w	r5, [r2], #2
 8018ac0:	9204      	str	r2, [sp, #16]
 8018ac2:	e7c1      	b.n	8018a48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8018ac4:	4649      	mov	r1, r9
 8018ac6:	4686      	mov	lr, r0
 8018ac8:	b999      	cbnz	r1, 8018af2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 8018aca:	4563      	cmp	r3, ip
 8018acc:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8018ad0:	d389      	bcc.n	80189e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8018ad2:	fa1f f68b 	uxth.w	r6, fp
 8018ad6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 8018ada:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018adc:	1ba4      	subs	r4, r4, r6
 8018ade:	881b      	ldrh	r3, [r3, #0]
 8018ae0:	b2a4      	uxth	r4, r4
 8018ae2:	eba3 030b 	sub.w	r3, r3, fp
 8018ae6:	2c00      	cmp	r4, #0
 8018ae8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018aec:	bf18      	it	ne
 8018aee:	2600      	movne	r6, #0
 8018af0:	e779      	b.n	80189e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8018af2:	78aa      	ldrb	r2, [r5, #2]
 8018af4:	3901      	subs	r1, #1
 8018af6:	4f0e      	ldr	r7, [pc, #56]	; (8018b30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8018af8:	b289      	uxth	r1, r1
 8018afa:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8018afe:	786a      	ldrb	r2, [r5, #1]
 8018b00:	00d2      	lsls	r2, r2, #3
 8018b02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018b06:	ea4a 0202 	orr.w	r2, sl, r2
 8018b0a:	f895 a000 	ldrb.w	sl, [r5]
 8018b0e:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8018b12:	f82e 2b02 	strh.w	r2, [lr], #2
 8018b16:	e7d7      	b.n	8018ac8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8018b18:	4b03      	ldr	r3, [pc, #12]	; (8018b28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8018b1a:	6818      	ldr	r0, [r3, #0]
 8018b1c:	6803      	ldr	r3, [r0, #0]
 8018b1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018b20:	4798      	blx	r3
 8018b22:	b013      	add	sp, #76	; 0x4c
 8018b24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b28:	24001ed8 	.word	0x24001ed8
 8018b2c:	24001ed2 	.word	0x24001ed2
 8018b30:	fffff800 	.word	0xfffff800

08018b34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8018b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b38:	b09d      	sub	sp, #116	; 0x74
 8018b3a:	461c      	mov	r4, r3
 8018b3c:	4683      	mov	fp, r0
 8018b3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018b40:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 8018b44:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 8018b48:	920e      	str	r2, [sp, #56]	; 0x38
 8018b4a:	2a00      	cmp	r2, #0
 8018b4c:	f000 81e4 	beq.w	8018f18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8018b50:	6820      	ldr	r0, [r4, #0]
 8018b52:	aa18      	add	r2, sp, #96	; 0x60
 8018b54:	6861      	ldr	r1, [r4, #4]
 8018b56:	c203      	stmia	r2!, {r0, r1}
 8018b58:	6818      	ldr	r0, [r3, #0]
 8018b5a:	aa1a      	add	r2, sp, #104	; 0x68
 8018b5c:	6859      	ldr	r1, [r3, #4]
 8018b5e:	c203      	stmia	r2!, {r0, r1}
 8018b60:	a818      	add	r0, sp, #96	; 0x60
 8018b62:	f7f9 fce3 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018b66:	4621      	mov	r1, r4
 8018b68:	a81a      	add	r0, sp, #104	; 0x68
 8018b6a:	f7f9 fd07 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018b6e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8018b72:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 8018b76:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8018b7a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8018b7e:	bfdb      	ittet	le
 8018b80:	b29a      	uxthle	r2, r3
 8018b82:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8018b86:	2201      	movgt	r2, #1
 8018b88:	fb91 f2f2 	sdivle	r2, r1, r2
 8018b8c:	9202      	str	r2, [sp, #8]
 8018b8e:	9802      	ldr	r0, [sp, #8]
 8018b90:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8018b94:	9902      	ldr	r1, [sp, #8]
 8018b96:	fb92 f0f0 	sdiv	r0, r2, r0
 8018b9a:	b280      	uxth	r0, r0
 8018b9c:	440c      	add	r4, r1
 8018b9e:	900f      	str	r0, [sp, #60]	; 0x3c
 8018ba0:	3c01      	subs	r4, #1
 8018ba2:	9802      	ldr	r0, [sp, #8]
 8018ba4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018ba6:	fb05 2510 	mls	r5, r5, r0, r2
 8018baa:	fb94 f4f1 	sdiv	r4, r4, r1
 8018bae:	fb15 f503 	smulbb	r5, r5, r3
 8018bb2:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 8018bb6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 8018bba:	3401      	adds	r4, #1
 8018bbc:	440d      	add	r5, r1
 8018bbe:	4419      	add	r1, r3
 8018bc0:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8018bc4:	b2a4      	uxth	r4, r4
 8018bc6:	441a      	add	r2, r3
 8018bc8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8018bcc:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 8018bd0:	00a4      	lsls	r4, r4, #2
 8018bd2:	9306      	str	r3, [sp, #24]
 8018bd4:	b2ad      	uxth	r5, r5
 8018bd6:	4bb3      	ldr	r3, [pc, #716]	; (8018ea4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8018bd8:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 8018bdc:	6818      	ldr	r0, [r3, #0]
 8018bde:	6803      	ldr	r3, [r0, #0]
 8018be0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018be2:	4798      	blx	r3
 8018be4:	4bb0      	ldr	r3, [pc, #704]	; (8018ea8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8018be6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 8018bea:	2d00      	cmp	r5, #0
 8018bec:	881a      	ldrh	r2, [r3, #0]
 8018bee:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 8018bf2:	fb02 f606 	mul.w	r6, r2, r6
 8018bf6:	fb02 7101 	mla	r1, r2, r1, r7
 8018bfa:	9316      	str	r3, [sp, #88]	; 0x58
 8018bfc:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8018c00:	4baa      	ldr	r3, [pc, #680]	; (8018eac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8018c02:	bf18      	it	ne
 8018c04:	2100      	movne	r1, #0
 8018c06:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8018c0a:	eba3 030b 	sub.w	r3, r3, fp
 8018c0e:	920a      	str	r2, [sp, #40]	; 0x28
 8018c10:	f104 0204 	add.w	r2, r4, #4
 8018c14:	9317      	str	r3, [sp, #92]	; 0x5c
 8018c16:	9213      	str	r2, [sp, #76]	; 0x4c
 8018c18:	9a06      	ldr	r2, [sp, #24]
 8018c1a:	bf08      	it	eq
 8018c1c:	4611      	moveq	r1, r2
 8018c1e:	2200      	movs	r2, #0
 8018c20:	b289      	uxth	r1, r1
 8018c22:	920d      	str	r2, [sp, #52]	; 0x34
 8018c24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018c26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c28:	fa12 f383 	uxtah	r3, r2, r3
 8018c2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018c2e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8018c32:	3304      	adds	r3, #4
 8018c34:	9308      	str	r3, [sp, #32]
 8018c36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c38:	4543      	cmp	r3, r8
 8018c3a:	f240 8168 	bls.w	8018f0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8018c3e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8018c42:	f04f 0e01 	mov.w	lr, #1
 8018c46:	9a02      	ldr	r2, [sp, #8]
 8018c48:	9808      	ldr	r0, [sp, #32]
 8018c4a:	fbb5 f3f3 	udiv	r3, r5, r3
 8018c4e:	1ad3      	subs	r3, r2, r3
 8018c50:	7800      	ldrb	r0, [r0, #0]
 8018c52:	b29b      	uxth	r3, r3
 8018c54:	9010      	str	r0, [sp, #64]	; 0x40
 8018c56:	3001      	adds	r0, #1
 8018c58:	9314      	str	r3, [sp, #80]	; 0x50
 8018c5a:	9b08      	ldr	r3, [sp, #32]
 8018c5c:	9007      	str	r0, [sp, #28]
 8018c5e:	785a      	ldrb	r2, [r3, #1]
 8018c60:	789b      	ldrb	r3, [r3, #2]
 8018c62:	021b      	lsls	r3, r3, #8
 8018c64:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8018c68:	9a08      	ldr	r2, [sp, #32]
 8018c6a:	78d2      	ldrb	r2, [r2, #3]
 8018c6c:	4313      	orrs	r3, r2
 8018c6e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018c70:	441a      	add	r2, r3
 8018c72:	1c50      	adds	r0, r2, #1
 8018c74:	7852      	ldrb	r2, [r2, #1]
 8018c76:	9005      	str	r0, [sp, #20]
 8018c78:	0212      	lsls	r2, r2, #8
 8018c7a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018c7c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8018c80:	5cc3      	ldrb	r3, [r0, r3]
 8018c82:	431a      	orrs	r2, r3
 8018c84:	b293      	uxth	r3, r2
 8018c86:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 8018c8a:	930b      	str	r3, [sp, #44]	; 0x2c
 8018c8c:	2300      	movs	r3, #0
 8018c8e:	9309      	str	r3, [sp, #36]	; 0x24
 8018c90:	2301      	movs	r3, #1
 8018c92:	9301      	str	r3, [sp, #4]
 8018c94:	9304      	str	r3, [sp, #16]
 8018c96:	2300      	movs	r3, #0
 8018c98:	9303      	str	r3, [sp, #12]
 8018c9a:	2d00      	cmp	r5, #0
 8018c9c:	d07d      	beq.n	8018d9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8018c9e:	45ae      	cmp	lr, r5
 8018ca0:	d26c      	bcs.n	8018d7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8018ca2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ca4:	eba5 050e 	sub.w	r5, r5, lr
 8018ca8:	460c      	mov	r4, r1
 8018caa:	4543      	cmp	r3, r8
 8018cac:	b2ad      	uxth	r5, r5
 8018cae:	d802      	bhi.n	8018cb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8018cb0:	e071      	b.n	8018d96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8018cb2:	2b00      	cmp	r3, #0
 8018cb4:	d15d      	bne.n	8018d72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8018cb6:	9b05      	ldr	r3, [sp, #20]
 8018cb8:	9a04      	ldr	r2, [sp, #16]
 8018cba:	785b      	ldrb	r3, [r3, #1]
 8018cbc:	f1c2 0207 	rsb	r2, r2, #7
 8018cc0:	9904      	ldr	r1, [sp, #16]
 8018cc2:	4093      	lsls	r3, r2
 8018cc4:	005b      	lsls	r3, r3, #1
 8018cc6:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8018cca:	9b05      	ldr	r3, [sp, #20]
 8018ccc:	781b      	ldrb	r3, [r3, #0]
 8018cce:	410b      	asrs	r3, r1
 8018cd0:	3101      	adds	r1, #1
 8018cd2:	b2c9      	uxtb	r1, r1
 8018cd4:	b2db      	uxtb	r3, r3
 8018cd6:	2908      	cmp	r1, #8
 8018cd8:	9104      	str	r1, [sp, #16]
 8018cda:	9905      	ldr	r1, [sp, #20]
 8018cdc:	ea43 0302 	orr.w	r3, r3, r2
 8018ce0:	bf0c      	ite	eq
 8018ce2:	3102      	addeq	r1, #2
 8018ce4:	3101      	addne	r1, #1
 8018ce6:	b29a      	uxth	r2, r3
 8018ce8:	bf05      	ittet	eq
 8018cea:	9105      	streq	r1, [sp, #20]
 8018cec:	2100      	moveq	r1, #0
 8018cee:	9105      	strne	r1, [sp, #20]
 8018cf0:	9104      	streq	r1, [sp, #16]
 8018cf2:	9910      	ldr	r1, [sp, #64]	; 0x40
 8018cf4:	4291      	cmp	r1, r2
 8018cf6:	d30a      	bcc.n	8018d0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8018cf8:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8018cfc:	2301      	movs	r3, #1
 8018cfe:	9907      	ldr	r1, [sp, #28]
 8018d00:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8018d04:	d30f      	bcc.n	8018d26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8018d06:	2100      	movs	r1, #0
 8018d08:	9301      	str	r3, [sp, #4]
 8018d0a:	9103      	str	r1, [sp, #12]
 8018d0c:	e032      	b.n	8018d74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8018d0e:	9b07      	ldr	r3, [sp, #28]
 8018d10:	429a      	cmp	r2, r3
 8018d12:	d318      	bcc.n	8018d46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8018d14:	9b01      	ldr	r3, [sp, #4]
 8018d16:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8018d1a:	445b      	add	r3, fp
 8018d1c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8018d20:	9b01      	ldr	r3, [sp, #4]
 8018d22:	3301      	adds	r3, #1
 8018d24:	b29b      	uxth	r3, r3
 8018d26:	9907      	ldr	r1, [sp, #28]
 8018d28:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8018d2c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018d30:	7108      	strb	r0, [r1, #4]
 8018d32:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018d34:	80c8      	strh	r0, [r1, #6]
 8018d36:	9801      	ldr	r0, [sp, #4]
 8018d38:	3001      	adds	r0, #1
 8018d3a:	7148      	strb	r0, [r1, #5]
 8018d3c:	9907      	ldr	r1, [sp, #28]
 8018d3e:	3101      	adds	r1, #1
 8018d40:	b289      	uxth	r1, r1
 8018d42:	9107      	str	r1, [sp, #28]
 8018d44:	e7df      	b.n	8018d06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8018d46:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8018d4a:	4611      	mov	r1, r2
 8018d4c:	795b      	ldrb	r3, [r3, #5]
 8018d4e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 8018d52:	4458      	add	r0, fp
 8018d54:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8018d56:	4406      	add	r6, r0
 8018d58:	2e00      	cmp	r6, #0
 8018d5a:	dd06      	ble.n	8018d6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018d5c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018d60:	790e      	ldrb	r6, [r1, #4]
 8018d62:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8018d66:	88c9      	ldrh	r1, [r1, #6]
 8018d68:	e7f4      	b.n	8018d54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8018d6a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 8018d6e:	b29b      	uxth	r3, r3
 8018d70:	e7c5      	b.n	8018cfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8018d72:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018d74:	4621      	mov	r1, r4
 8018d76:	920b      	str	r2, [sp, #44]	; 0x2c
 8018d78:	469e      	mov	lr, r3
 8018d7a:	e78e      	b.n	8018c9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8018d7c:	9a03      	ldr	r2, [sp, #12]
 8018d7e:	ebae 0305 	sub.w	r3, lr, r5
 8018d82:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018d86:	442a      	add	r2, r5
 8018d88:	b29b      	uxth	r3, r3
 8018d8a:	b292      	uxth	r2, r2
 8018d8c:	9203      	str	r2, [sp, #12]
 8018d8e:	2500      	movs	r5, #0
 8018d90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018d92:	4542      	cmp	r2, r8
 8018d94:	d88d      	bhi.n	8018cb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8018d96:	4621      	mov	r1, r4
 8018d98:	e74d      	b.n	8018c36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8018d9a:	458e      	cmp	lr, r1
 8018d9c:	f04f 0900 	mov.w	r9, #0
 8018da0:	bf2b      	itete	cs
 8018da2:	ebae 0301 	subcs.w	r3, lr, r1
 8018da6:	eba1 040e 	subcc.w	r4, r1, lr
 8018daa:	462c      	movcs	r4, r5
 8018dac:	462b      	movcc	r3, r5
 8018dae:	bf27      	ittee	cs
 8018db0:	b29b      	uxthcs	r3, r3
 8018db2:	910c      	strcs	r1, [sp, #48]	; 0x30
 8018db4:	b2a4      	uxthcc	r4, r4
 8018db6:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 8018dba:	9a03      	ldr	r2, [sp, #12]
 8018dbc:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018dbe:	444a      	add	r2, r9
 8018dc0:	4548      	cmp	r0, r9
 8018dc2:	b292      	uxth	r2, r2
 8018dc4:	d074      	beq.n	8018eb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8018dc6:	2004      	movs	r0, #4
 8018dc8:	445a      	add	r2, fp
 8018dca:	4605      	mov	r5, r0
 8018dcc:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8018dd0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018dd2:	fb15 0202 	smlabb	r2, r5, r2, r0
 8018dd6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018dd8:	5880      	ldr	r0, [r0, r2]
 8018dda:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8018dde:	d014      	beq.n	8018e0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8018de0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018de4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8018de8:	d112      	bne.n	8018e10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8018dea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018dec:	2aff      	cmp	r2, #255	; 0xff
 8018dee:	d10f      	bne.n	8018e10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8018df0:	0942      	lsrs	r2, r0, #5
 8018df2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8018df6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018dfa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018dfe:	f025 0507 	bic.w	r5, r5, #7
 8018e02:	4315      	orrs	r5, r2
 8018e04:	4305      	orrs	r5, r0
 8018e06:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8018e0a:	f109 0901 	add.w	r9, r9, #1
 8018e0e:	e7d4      	b.n	8018dba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8018e10:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8018e14:	b2ed      	uxtb	r5, r5
 8018e16:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018e1a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018e1e:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8018e22:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018e26:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8018e2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018e2e:	9215      	str	r2, [sp, #84]	; 0x54
 8018e30:	fa5f fc8c 	uxtb.w	ip, ip
 8018e34:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018e36:	b2c0      	uxtb	r0, r0
 8018e38:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018e3c:	fb02 fa0a 	mul.w	sl, r2, sl
 8018e40:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8018e44:	f10a 0201 	add.w	r2, sl, #1
 8018e48:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8018e4c:	1212      	asrs	r2, r2, #8
 8018e4e:	fa1f fa82 	uxth.w	sl, r2
 8018e52:	43d2      	mvns	r2, r2
 8018e54:	fb16 f60a 	smulbb	r6, r6, sl
 8018e58:	b2d2      	uxtb	r2, r2
 8018e5a:	fb10 f00a 	smulbb	r0, r0, sl
 8018e5e:	fb07 6702 	mla	r7, r7, r2, r6
 8018e62:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8018e64:	fb0c 0002 	mla	r0, ip, r2, r0
 8018e68:	fb15 f50a 	smulbb	r5, r5, sl
 8018e6c:	b2bf      	uxth	r7, r7
 8018e6e:	b280      	uxth	r0, r0
 8018e70:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018e74:	fb06 5602 	mla	r6, r6, r2, r5
 8018e78:	1c7a      	adds	r2, r7, #1
 8018e7a:	1c45      	adds	r5, r0, #1
 8018e7c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018e80:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018e84:	b2b6      	uxth	r6, r6
 8018e86:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018e8a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018e8e:	432f      	orrs	r7, r5
 8018e90:	1c75      	adds	r5, r6, #1
 8018e92:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8018e96:	096d      	lsrs	r5, r5, #5
 8018e98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018e9c:	432f      	orrs	r7, r5
 8018e9e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8018ea2:	e7b2      	b.n	8018e0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8018ea4:	24001ed8 	.word	0x24001ed8
 8018ea8:	24001ed2 	.word	0x24001ed2
 8018eac:	fffff7fb 	.word	0xfffff7fb
 8018eb0:	9203      	str	r2, [sp, #12]
 8018eb2:	458e      	cmp	lr, r1
 8018eb4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018eb6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018eba:	f4ff af68 	bcc.w	8018d8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8018ebe:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018ec0:	9906      	ldr	r1, [sp, #24]
 8018ec2:	8812      	ldrh	r2, [r2, #0]
 8018ec4:	1a52      	subs	r2, r2, r1
 8018ec6:	9914      	ldr	r1, [sp, #80]	; 0x50
 8018ec8:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018ecc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018ece:	3201      	adds	r2, #1
 8018ed0:	428a      	cmp	r2, r1
 8018ed2:	9209      	str	r2, [sp, #36]	; 0x24
 8018ed4:	d111      	bne.n	8018efa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8018ed6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8018eda:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8018ede:	9b06      	ldr	r3, [sp, #24]
 8018ee0:	eba5 0509 	sub.w	r5, r5, r9
 8018ee4:	b2ad      	uxth	r5, r5
 8018ee6:	2d00      	cmp	r5, #0
 8018ee8:	bf08      	it	eq
 8018eea:	4619      	moveq	r1, r3
 8018eec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018eee:	bf18      	it	ne
 8018ef0:	2100      	movne	r1, #0
 8018ef2:	3301      	adds	r3, #1
 8018ef4:	b289      	uxth	r1, r1
 8018ef6:	930d      	str	r3, [sp, #52]	; 0x34
 8018ef8:	e694      	b.n	8018c24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8018efa:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018efe:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8018f02:	1b2d      	subs	r5, r5, r4
 8018f04:	b2ad      	uxth	r5, r5
 8018f06:	2d00      	cmp	r5, #0
 8018f08:	bf18      	it	ne
 8018f0a:	2400      	movne	r4, #0
 8018f0c:	e740      	b.n	8018d90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8018f0e:	4b04      	ldr	r3, [pc, #16]	; (8018f20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8018f10:	6818      	ldr	r0, [r3, #0]
 8018f12:	6803      	ldr	r3, [r0, #0]
 8018f14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018f16:	4798      	blx	r3
 8018f18:	b01d      	add	sp, #116	; 0x74
 8018f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f1e:	bf00      	nop
 8018f20:	24001ed8 	.word	0x24001ed8

08018f24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8018f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f28:	b09f      	sub	sp, #124	; 0x7c
 8018f2a:	461d      	mov	r5, r3
 8018f2c:	4604      	mov	r4, r0
 8018f2e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f30:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8018f34:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8018f38:	920a      	str	r2, [sp, #40]	; 0x28
 8018f3a:	2a00      	cmp	r2, #0
 8018f3c:	f000 81fe 	beq.w	801933c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8018f40:	6828      	ldr	r0, [r5, #0]
 8018f42:	aa1a      	add	r2, sp, #104	; 0x68
 8018f44:	6869      	ldr	r1, [r5, #4]
 8018f46:	c203      	stmia	r2!, {r0, r1}
 8018f48:	6818      	ldr	r0, [r3, #0]
 8018f4a:	aa1c      	add	r2, sp, #112	; 0x70
 8018f4c:	6859      	ldr	r1, [r3, #4]
 8018f4e:	c203      	stmia	r2!, {r0, r1}
 8018f50:	a81a      	add	r0, sp, #104	; 0x68
 8018f52:	f7f9 faeb 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018f56:	4629      	mov	r1, r5
 8018f58:	a81c      	add	r0, sp, #112	; 0x70
 8018f5a:	f7f9 fb0f 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018f5e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8018f62:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8018f66:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8018f6a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8018f6e:	bfdb      	ittet	le
 8018f70:	b29a      	uxthle	r2, r3
 8018f72:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8018f76:	2201      	movgt	r2, #1
 8018f78:	fb91 f2f2 	sdivle	r2, r1, r2
 8018f7c:	9201      	str	r2, [sp, #4]
 8018f7e:	9801      	ldr	r0, [sp, #4]
 8018f80:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8018f84:	9901      	ldr	r1, [sp, #4]
 8018f86:	fb92 f0f0 	sdiv	r0, r2, r0
 8018f8a:	b280      	uxth	r0, r0
 8018f8c:	440e      	add	r6, r1
 8018f8e:	9010      	str	r0, [sp, #64]	; 0x40
 8018f90:	3e01      	subs	r6, #1
 8018f92:	9801      	ldr	r0, [sp, #4]
 8018f94:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018f96:	fb05 2510 	mls	r5, r5, r0, r2
 8018f9a:	fb96 f6f1 	sdiv	r6, r6, r1
 8018f9e:	fb15 f503 	smulbb	r5, r5, r3
 8018fa2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8018fa6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8018faa:	3601      	adds	r6, #1
 8018fac:	440d      	add	r5, r1
 8018fae:	4419      	add	r1, r3
 8018fb0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8018fb4:	b2b6      	uxth	r6, r6
 8018fb6:	441a      	add	r2, r3
 8018fb8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8018fbc:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8018fc0:	b2ad      	uxth	r5, r5
 8018fc2:	9304      	str	r3, [sp, #16]
 8018fc4:	4b96      	ldr	r3, [pc, #600]	; (8019220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8018fc6:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8018fca:	6818      	ldr	r0, [r3, #0]
 8018fcc:	6803      	ldr	r3, [r0, #0]
 8018fce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018fd0:	4798      	blx	r3
 8018fd2:	4b94      	ldr	r3, [pc, #592]	; (8019224 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8018fd4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8018fd8:	2d00      	cmp	r5, #0
 8018fda:	881a      	ldrh	r2, [r3, #0]
 8018fdc:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8018fe0:	fb02 f707 	mul.w	r7, r2, r7
 8018fe4:	fb02 c101 	mla	r1, r2, r1, ip
 8018fe8:	9318      	str	r3, [sp, #96]	; 0x60
 8018fea:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8018fee:	4b8e      	ldr	r3, [pc, #568]	; (8019228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8018ff0:	bf18      	it	ne
 8018ff2:	2100      	movne	r1, #0
 8018ff4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8018ff8:	eba3 0304 	sub.w	r3, r3, r4
 8018ffc:	920b      	str	r2, [sp, #44]	; 0x2c
 8018ffe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019000:	9319      	str	r3, [sp, #100]	; 0x64
 8019002:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8019006:	f106 0204 	add.w	r2, r6, #4
 801900a:	9206      	str	r2, [sp, #24]
 801900c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801900e:	ea6f 0202 	mvn.w	r2, r2
 8019012:	b2d2      	uxtb	r2, r2
 8019014:	9215      	str	r2, [sp, #84]	; 0x54
 8019016:	9a04      	ldr	r2, [sp, #16]
 8019018:	bf08      	it	eq
 801901a:	4611      	moveq	r1, r2
 801901c:	2200      	movs	r2, #0
 801901e:	b289      	uxth	r1, r1
 8019020:	920d      	str	r2, [sp, #52]	; 0x34
 8019022:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019024:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019026:	fa12 f383 	uxtah	r3, r2, r3
 801902a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801902c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019030:	3304      	adds	r3, #4
 8019032:	9307      	str	r3, [sp, #28]
 8019034:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019036:	455b      	cmp	r3, fp
 8019038:	f240 817b 	bls.w	8019332 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 801903c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8019040:	f04f 0801 	mov.w	r8, #1
 8019044:	9a01      	ldr	r2, [sp, #4]
 8019046:	9807      	ldr	r0, [sp, #28]
 8019048:	46c4      	mov	ip, r8
 801904a:	f8cd 8008 	str.w	r8, [sp, #8]
 801904e:	7800      	ldrb	r0, [r0, #0]
 8019050:	fbb5 f3f3 	udiv	r3, r5, r3
 8019054:	1ad3      	subs	r3, r2, r3
 8019056:	9011      	str	r0, [sp, #68]	; 0x44
 8019058:	3001      	adds	r0, #1
 801905a:	b29b      	uxth	r3, r3
 801905c:	9005      	str	r0, [sp, #20]
 801905e:	9316      	str	r3, [sp, #88]	; 0x58
 8019060:	9b07      	ldr	r3, [sp, #28]
 8019062:	785a      	ldrb	r2, [r3, #1]
 8019064:	789b      	ldrb	r3, [r3, #2]
 8019066:	021b      	lsls	r3, r3, #8
 8019068:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801906c:	9a07      	ldr	r2, [sp, #28]
 801906e:	78d2      	ldrb	r2, [r2, #3]
 8019070:	4313      	orrs	r3, r2
 8019072:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019074:	441a      	add	r2, r3
 8019076:	1c50      	adds	r0, r2, #1
 8019078:	7852      	ldrb	r2, [r2, #1]
 801907a:	9003      	str	r0, [sp, #12]
 801907c:	0212      	lsls	r2, r2, #8
 801907e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019080:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8019084:	5cc3      	ldrb	r3, [r0, r3]
 8019086:	431a      	orrs	r2, r3
 8019088:	b293      	uxth	r3, r2
 801908a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801908e:	930c      	str	r3, [sp, #48]	; 0x30
 8019090:	2300      	movs	r3, #0
 8019092:	9308      	str	r3, [sp, #32]
 8019094:	461a      	mov	r2, r3
 8019096:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801909a:	930e      	str	r3, [sp, #56]	; 0x38
 801909c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80190a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80190a2:	2d00      	cmp	r5, #0
 80190a4:	d07d      	beq.n	80191a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 80190a6:	45ac      	cmp	ip, r5
 80190a8:	d26d      	bcs.n	8019186 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 80190aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80190ac:	eba5 050c 	sub.w	r5, r5, ip
 80190b0:	4608      	mov	r0, r1
 80190b2:	455b      	cmp	r3, fp
 80190b4:	b2ad      	uxth	r5, r5
 80190b6:	d802      	bhi.n	80190be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 80190b8:	e071      	b.n	801919e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 80190ba:	2b00      	cmp	r3, #0
 80190bc:	d15d      	bne.n	801917a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80190be:	9b03      	ldr	r3, [sp, #12]
 80190c0:	9a02      	ldr	r2, [sp, #8]
 80190c2:	785b      	ldrb	r3, [r3, #1]
 80190c4:	f1c2 0207 	rsb	r2, r2, #7
 80190c8:	9902      	ldr	r1, [sp, #8]
 80190ca:	4093      	lsls	r3, r2
 80190cc:	005b      	lsls	r3, r3, #1
 80190ce:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80190d2:	9b03      	ldr	r3, [sp, #12]
 80190d4:	781b      	ldrb	r3, [r3, #0]
 80190d6:	410b      	asrs	r3, r1
 80190d8:	3101      	adds	r1, #1
 80190da:	b2c9      	uxtb	r1, r1
 80190dc:	b2db      	uxtb	r3, r3
 80190de:	2908      	cmp	r1, #8
 80190e0:	9102      	str	r1, [sp, #8]
 80190e2:	9903      	ldr	r1, [sp, #12]
 80190e4:	ea43 0302 	orr.w	r3, r3, r2
 80190e8:	bf0c      	ite	eq
 80190ea:	3102      	addeq	r1, #2
 80190ec:	3101      	addne	r1, #1
 80190ee:	b29a      	uxth	r2, r3
 80190f0:	bf05      	ittet	eq
 80190f2:	9103      	streq	r1, [sp, #12]
 80190f4:	2100      	moveq	r1, #0
 80190f6:	9103      	strne	r1, [sp, #12]
 80190f8:	9102      	streq	r1, [sp, #8]
 80190fa:	9911      	ldr	r1, [sp, #68]	; 0x44
 80190fc:	4291      	cmp	r1, r2
 80190fe:	d30a      	bcc.n	8019116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8019100:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8019104:	2301      	movs	r3, #1
 8019106:	9905      	ldr	r1, [sp, #20]
 8019108:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801910c:	d30f      	bcc.n	801912e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 801910e:	2100      	movs	r1, #0
 8019110:	4698      	mov	r8, r3
 8019112:	9100      	str	r1, [sp, #0]
 8019114:	e032      	b.n	801917c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8019116:	9b05      	ldr	r3, [sp, #20]
 8019118:	429a      	cmp	r2, r3
 801911a:	d318      	bcc.n	801914e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 801911c:	eb04 0308 	add.w	r3, r4, r8
 8019120:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8019124:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8019128:	f108 0301 	add.w	r3, r8, #1
 801912c:	b29b      	uxth	r3, r3
 801912e:	9905      	ldr	r1, [sp, #20]
 8019130:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8019134:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019138:	710e      	strb	r6, [r1, #4]
 801913a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801913c:	80ce      	strh	r6, [r1, #6]
 801913e:	f108 0601 	add.w	r6, r8, #1
 8019142:	714e      	strb	r6, [r1, #5]
 8019144:	9905      	ldr	r1, [sp, #20]
 8019146:	3101      	adds	r1, #1
 8019148:	b289      	uxth	r1, r1
 801914a:	9105      	str	r1, [sp, #20]
 801914c:	e7df      	b.n	801910e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801914e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8019152:	4611      	mov	r1, r2
 8019154:	795b      	ldrb	r3, [r3, #5]
 8019156:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801915a:	4426      	add	r6, r4
 801915c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801915e:	4437      	add	r7, r6
 8019160:	2f00      	cmp	r7, #0
 8019162:	dd06      	ble.n	8019172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8019164:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019168:	790f      	ldrb	r7, [r1, #4]
 801916a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801916e:	88c9      	ldrh	r1, [r1, #6]
 8019170:	e7f4      	b.n	801915c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8019172:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8019176:	b29b      	uxth	r3, r3
 8019178:	e7c5      	b.n	8019106 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801917a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801917c:	920c      	str	r2, [sp, #48]	; 0x30
 801917e:	4601      	mov	r1, r0
 8019180:	9a00      	ldr	r2, [sp, #0]
 8019182:	469c      	mov	ip, r3
 8019184:	e78d      	b.n	80190a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8019186:	ebac 0305 	sub.w	r3, ip, r5
 801918a:	1957      	adds	r7, r2, r5
 801918c:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8019190:	b2ba      	uxth	r2, r7
 8019192:	b29b      	uxth	r3, r3
 8019194:	9200      	str	r2, [sp, #0]
 8019196:	2500      	movs	r5, #0
 8019198:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801919a:	455a      	cmp	r2, fp
 801919c:	d88d      	bhi.n	80190ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801919e:	4601      	mov	r1, r0
 80191a0:	e748      	b.n	8019034 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 80191a2:	458c      	cmp	ip, r1
 80191a4:	bf27      	ittee	cs
 80191a6:	ebac 0301 	subcs.w	r3, ip, r1
 80191aa:	4628      	movcs	r0, r5
 80191ac:	eba1 000c 	subcc.w	r0, r1, ip
 80191b0:	462b      	movcc	r3, r5
 80191b2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80191b4:	bf27      	ittee	cs
 80191b6:	b29b      	uxthcs	r3, r3
 80191b8:	9109      	strcs	r1, [sp, #36]	; 0x24
 80191ba:	b280      	uxthcc	r0, r0
 80191bc:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 80191c0:	2dff      	cmp	r5, #255	; 0xff
 80191c2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80191c4:	eb02 0705 	add.w	r7, r2, r5
 80191c8:	b2bd      	uxth	r5, r7
 80191ca:	9500      	str	r5, [sp, #0]
 80191cc:	d12e      	bne.n	801922c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 80191ce:	465e      	mov	r6, fp
 80191d0:	9d00      	ldr	r5, [sp, #0]
 80191d2:	42aa      	cmp	r2, r5
 80191d4:	f040 8083 	bne.w	80192de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 80191d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80191da:	458c      	cmp	ip, r1
 80191dc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80191e0:	d3d9      	bcc.n	8019196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80191e2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80191e4:	9904      	ldr	r1, [sp, #16]
 80191e6:	8812      	ldrh	r2, [r2, #0]
 80191e8:	1a52      	subs	r2, r2, r1
 80191ea:	9916      	ldr	r1, [sp, #88]	; 0x58
 80191ec:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80191f0:	9a08      	ldr	r2, [sp, #32]
 80191f2:	3201      	adds	r2, #1
 80191f4:	428a      	cmp	r2, r1
 80191f6:	9208      	str	r2, [sp, #32]
 80191f8:	f040 8091 	bne.w	801931e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 80191fc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8019200:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8019204:	9b04      	ldr	r3, [sp, #16]
 8019206:	eba5 050c 	sub.w	r5, r5, ip
 801920a:	b2ad      	uxth	r5, r5
 801920c:	2d00      	cmp	r5, #0
 801920e:	bf08      	it	eq
 8019210:	4619      	moveq	r1, r3
 8019212:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019214:	bf18      	it	ne
 8019216:	2100      	movne	r1, #0
 8019218:	3301      	adds	r3, #1
 801921a:	b289      	uxth	r1, r1
 801921c:	930d      	str	r3, [sp, #52]	; 0x34
 801921e:	e700      	b.n	8019022 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8019220:	24001ed8 	.word	0x24001ed8
 8019224:	24001ed2 	.word	0x24001ed2
 8019228:	fffff7fb 	.word	0xfffff7fb
 801922c:	46d9      	mov	r9, fp
 801922e:	9d00      	ldr	r5, [sp, #0]
 8019230:	42aa      	cmp	r2, r5
 8019232:	d0d1      	beq.n	80191d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8019234:	1c55      	adds	r5, r2, #1
 8019236:	4422      	add	r2, r4
 8019238:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801923c:	9a06      	ldr	r2, [sp, #24]
 801923e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019242:	9517      	str	r5, [sp, #92]	; 0x5c
 8019244:	4472      	add	r2, lr
 8019246:	9212      	str	r2, [sp, #72]	; 0x48
 8019248:	f8b9 2000 	ldrh.w	r2, [r9]
 801924c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801924e:	1216      	asrs	r6, r2, #8
 8019250:	f897 a002 	ldrb.w	sl, [r7, #2]
 8019254:	10d5      	asrs	r5, r2, #3
 8019256:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019258:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801925c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019260:	00d2      	lsls	r2, r2, #3
 8019262:	fb1a fa07 	smulbb	sl, sl, r7
 8019266:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801926a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801926c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019270:	b2d2      	uxtb	r2, r2
 8019272:	fb06 a607 	mla	r6, r6, r7, sl
 8019276:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8019278:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801927c:	f897 a001 	ldrb.w	sl, [r7, #1]
 8019280:	b2b6      	uxth	r6, r6
 8019282:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019284:	fb1a fa07 	smulbb	sl, sl, r7
 8019288:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801928a:	fb05 a507 	mla	r5, r5, r7, sl
 801928e:	9f06      	ldr	r7, [sp, #24]
 8019290:	f106 0a01 	add.w	sl, r6, #1
 8019294:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019298:	b2ad      	uxth	r5, r5
 801929a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801929c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80192a0:	f105 0a01 	add.w	sl, r5, #1
 80192a4:	fb1e fe07 	smulbb	lr, lr, r7
 80192a8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80192aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80192ae:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80192b2:	fb02 e207 	mla	r2, r2, r7, lr
 80192b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80192ba:	b292      	uxth	r2, r2
 80192bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80192c0:	f102 0e01 	add.w	lr, r2, #1
 80192c4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80192c8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80192cc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80192d0:	ea4e 0606 	orr.w	r6, lr, r6
 80192d4:	ea46 060a 	orr.w	r6, r6, sl
 80192d8:	f829 6b02 	strh.w	r6, [r9], #2
 80192dc:	e7a7      	b.n	801922e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 80192de:	f102 0e01 	add.w	lr, r2, #1
 80192e2:	4422      	add	r2, r4
 80192e4:	9f06      	ldr	r7, [sp, #24]
 80192e6:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 80192ea:	9a06      	ldr	r2, [sp, #24]
 80192ec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80192f0:	eb02 0a05 	add.w	sl, r2, r5
 80192f4:	4a13      	ldr	r2, [pc, #76]	; (8019344 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 80192f6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80192fa:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80192fe:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019302:	00d2      	lsls	r2, r2, #3
 8019304:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019308:	ea49 0202 	orr.w	r2, r9, r2
 801930c:	f817 9005 	ldrb.w	r9, [r7, r5]
 8019310:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8019314:	f826 2b02 	strh.w	r2, [r6], #2
 8019318:	fa1f f28e 	uxth.w	r2, lr
 801931c:	e758      	b.n	80191d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 801931e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8019322:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8019326:	1a2d      	subs	r5, r5, r0
 8019328:	b2ad      	uxth	r5, r5
 801932a:	2d00      	cmp	r5, #0
 801932c:	bf18      	it	ne
 801932e:	2000      	movne	r0, #0
 8019330:	e732      	b.n	8019198 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8019332:	4b05      	ldr	r3, [pc, #20]	; (8019348 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8019334:	6818      	ldr	r0, [r3, #0]
 8019336:	6803      	ldr	r3, [r0, #0]
 8019338:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801933a:	4798      	blx	r3
 801933c:	b01f      	add	sp, #124	; 0x7c
 801933e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019342:	bf00      	nop
 8019344:	fffff800 	.word	0xfffff800
 8019348:	24001ed8 	.word	0x24001ed8

0801934c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801934c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019350:	b091      	sub	sp, #68	; 0x44
 8019352:	469b      	mov	fp, r3
 8019354:	4616      	mov	r6, r2
 8019356:	f9b3 2000 	ldrsh.w	r2, [r3]
 801935a:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801935e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8019362:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8019366:	4604      	mov	r4, r0
 8019368:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801936c:	4640      	mov	r0, r8
 801936e:	460d      	mov	r5, r1
 8019370:	4659      	mov	r1, fp
 8019372:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8019376:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801937a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801937e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8019382:	f7f6 f97f 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 8019386:	4631      	mov	r1, r6
 8019388:	4640      	mov	r0, r8
 801938a:	f7f6 f97b 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 801938e:	4b74      	ldr	r3, [pc, #464]	; (8019560 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8019390:	8818      	ldrh	r0, [r3, #0]
 8019392:	4b74      	ldr	r3, [pc, #464]	; (8019564 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8019394:	b202      	sxth	r2, r0
 8019396:	8819      	ldrh	r1, [r3, #0]
 8019398:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801939c:	b20e      	sxth	r6, r1
 801939e:	2b00      	cmp	r3, #0
 80193a0:	da07      	bge.n	80193b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80193a2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80193a6:	4463      	add	r3, ip
 80193a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80193ac:	2300      	movs	r3, #0
 80193ae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80193b2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80193b6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80193ba:	1ad2      	subs	r2, r2, r3
 80193bc:	4594      	cmp	ip, r2
 80193be:	bfc4      	itt	gt
 80193c0:	1ac2      	subgt	r2, r0, r3
 80193c2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80193c6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80193ca:	2a00      	cmp	r2, #0
 80193cc:	da07      	bge.n	80193de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80193ce:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80193d2:	4462      	add	r2, ip
 80193d4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80193d8:	2200      	movs	r2, #0
 80193da:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80193de:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80193e2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80193e6:	eba6 060a 	sub.w	r6, r6, sl
 80193ea:	42b2      	cmp	r2, r6
 80193ec:	bfc4      	itt	gt
 80193ee:	eba1 020a 	subgt.w	r2, r1, sl
 80193f2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80193f6:	4a5c      	ldr	r2, [pc, #368]	; (8019568 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80193f8:	7812      	ldrb	r2, [r2, #0]
 80193fa:	b9a2      	cbnz	r2, 8019426 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80193fc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8019400:	4286      	cmp	r6, r0
 8019402:	4640      	mov	r0, r8
 8019404:	9303      	str	r3, [sp, #12]
 8019406:	bf14      	ite	ne
 8019408:	2600      	movne	r6, #0
 801940a:	2601      	moveq	r6, #1
 801940c:	f7f6 f97d 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019410:	9b03      	ldr	r3, [sp, #12]
 8019412:	b160      	cbz	r0, 801942e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8019414:	2300      	movs	r3, #0
 8019416:	8023      	strh	r3, [r4, #0]
 8019418:	8063      	strh	r3, [r4, #2]
 801941a:	80a3      	strh	r3, [r4, #4]
 801941c:	4620      	mov	r0, r4
 801941e:	80e3      	strh	r3, [r4, #6]
 8019420:	b011      	add	sp, #68	; 0x44
 8019422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019426:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801942a:	428e      	cmp	r6, r1
 801942c:	e7e9      	b.n	8019402 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801942e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8019432:	a90e      	add	r1, sp, #56	; 0x38
 8019434:	900e      	str	r0, [sp, #56]	; 0x38
 8019436:	a80c      	add	r0, sp, #48	; 0x30
 8019438:	9205      	str	r2, [sp, #20]
 801943a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801943e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8019442:	9206      	str	r2, [sp, #24]
 8019444:	f8bb 2000 	ldrh.w	r2, [fp]
 8019448:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801944c:	1a9b      	subs	r3, r3, r2
 801944e:	b21b      	sxth	r3, r3
 8019450:	9303      	str	r3, [sp, #12]
 8019452:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019456:	f8df b118 	ldr.w	fp, [pc, #280]	; 8019570 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801945a:	ebaa 0a03 	sub.w	sl, sl, r3
 801945e:	fa0f f38a 	sxth.w	r3, sl
 8019462:	9304      	str	r3, [sp, #16]
 8019464:	9b03      	ldr	r3, [sp, #12]
 8019466:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801946a:	9b04      	ldr	r3, [sp, #16]
 801946c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019470:	9b05      	ldr	r3, [sp, #20]
 8019472:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8019476:	9b06      	ldr	r3, [sp, #24]
 8019478:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801947c:	f7f9 f87e 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019480:	4640      	mov	r0, r8
 8019482:	f7f9 f853 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019486:	a80e      	add	r0, sp, #56	; 0x38
 8019488:	f7f9 f850 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801948c:	4b37      	ldr	r3, [pc, #220]	; (801956c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801948e:	4628      	mov	r0, r5
 8019490:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8019494:	881b      	ldrh	r3, [r3, #0]
 8019496:	9307      	str	r3, [sp, #28]
 8019498:	682b      	ldr	r3, [r5, #0]
 801949a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801949c:	4798      	blx	r3
 801949e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80194a2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80194a6:	4681      	mov	r9, r0
 80194a8:	f8db 0000 	ldr.w	r0, [fp]
 80194ac:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80194b0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80194b2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80194b6:	6803      	ldr	r3, [r0, #0]
 80194b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80194ba:	4798      	blx	r3
 80194bc:	4607      	mov	r7, r0
 80194be:	f8db 0000 	ldr.w	r0, [fp]
 80194c2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80194c6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80194ca:	6803      	ldr	r3, [r0, #0]
 80194cc:	9109      	str	r1, [sp, #36]	; 0x24
 80194ce:	9208      	str	r2, [sp, #32]
 80194d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80194d2:	4798      	blx	r3
 80194d4:	f010 0f01 	tst.w	r0, #1
 80194d8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80194dc:	d012      	beq.n	8019504 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80194de:	f8db 0000 	ldr.w	r0, [fp]
 80194e2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80194e6:	6803      	ldr	r3, [r0, #0]
 80194e8:	9200      	str	r2, [sp, #0]
 80194ea:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80194ec:	462b      	mov	r3, r5
 80194ee:	e898 0006 	ldmia.w	r8, {r1, r2}
 80194f2:	47b0      	blx	r6
 80194f4:	9b03      	ldr	r3, [sp, #12]
 80194f6:	8023      	strh	r3, [r4, #0]
 80194f8:	9b04      	ldr	r3, [sp, #16]
 80194fa:	8063      	strh	r3, [r4, #2]
 80194fc:	9b05      	ldr	r3, [sp, #20]
 80194fe:	80a3      	strh	r3, [r4, #4]
 8019500:	9b06      	ldr	r3, [sp, #24]
 8019502:	e78b      	b.n	801941c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8019504:	fb09 f202 	mul.w	r2, r9, r2
 8019508:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801950c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8019510:	440f      	add	r7, r1
 8019512:	b166      	cbz	r6, 801952e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8019514:	9a07      	ldr	r2, [sp, #28]
 8019516:	4592      	cmp	sl, r2
 8019518:	d109      	bne.n	801952e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801951a:	f8db 0000 	ldr.w	r0, [fp]
 801951e:	fb09 f303 	mul.w	r3, r9, r3
 8019522:	4629      	mov	r1, r5
 8019524:	6802      	ldr	r2, [r0, #0]
 8019526:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8019528:	463a      	mov	r2, r7
 801952a:	47b0      	blx	r6
 801952c:	e7e2      	b.n	80194f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801952e:	fb0a f303 	mul.w	r3, sl, r3
 8019532:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8019536:	f8df b038 	ldr.w	fp, [pc, #56]	; 8019570 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801953a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801953e:	4545      	cmp	r5, r8
 8019540:	d2d8      	bcs.n	80194f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8019542:	f8db 0000 	ldr.w	r0, [fp]
 8019546:	4629      	mov	r1, r5
 8019548:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801954c:	4435      	add	r5, r6
 801954e:	6802      	ldr	r2, [r0, #0]
 8019550:	005b      	lsls	r3, r3, #1
 8019552:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8019556:	463a      	mov	r2, r7
 8019558:	47d0      	blx	sl
 801955a:	444f      	add	r7, r9
 801955c:	e7ef      	b.n	801953e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801955e:	bf00      	nop
 8019560:	24001ecc 	.word	0x24001ecc
 8019564:	24001ece 	.word	0x24001ece
 8019568:	24001ed0 	.word	0x24001ed0
 801956c:	24001ed2 	.word	0x24001ed2
 8019570:	24001ed8 	.word	0x24001ed8

08019574 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8019574:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019576:	4606      	mov	r6, r0
 8019578:	b087      	sub	sp, #28
 801957a:	460c      	mov	r4, r1
 801957c:	4617      	mov	r7, r2
 801957e:	461d      	mov	r5, r3
 8019580:	b333      	cbz	r3, 80195d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019582:	4608      	mov	r0, r1
 8019584:	f7f6 f8c1 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019588:	bb10      	cbnz	r0, 80195d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801958a:	6820      	ldr	r0, [r4, #0]
 801958c:	ab04      	add	r3, sp, #16
 801958e:	6861      	ldr	r1, [r4, #4]
 8019590:	4c1b      	ldr	r4, [pc, #108]	; (8019600 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8019592:	c303      	stmia	r3!, {r0, r1}
 8019594:	a804      	add	r0, sp, #16
 8019596:	f7f8 ffc9 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801959a:	6820      	ldr	r0, [r4, #0]
 801959c:	6803      	ldr	r3, [r0, #0]
 801959e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80195a0:	4798      	blx	r3
 80195a2:	2dff      	cmp	r5, #255	; 0xff
 80195a4:	d016      	beq.n	80195d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80195a6:	f010 0f08 	tst.w	r0, #8
 80195aa:	6820      	ldr	r0, [r4, #0]
 80195ac:	d015      	beq.n	80195da <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80195ae:	2400      	movs	r4, #0
 80195b0:	6801      	ldr	r1, [r0, #0]
 80195b2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80195b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80195ba:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80195be:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80195c2:	9401      	str	r4, [sp, #4]
 80195c4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80195c8:	9400      	str	r4, [sp, #0]
 80195ca:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80195cc:	4639      	mov	r1, r7
 80195ce:	47a0      	blx	r4
 80195d0:	b007      	add	sp, #28
 80195d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80195d4:	f010 0f02 	tst.w	r0, #2
 80195d8:	e7e7      	b.n	80195aa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80195da:	6803      	ldr	r3, [r0, #0]
 80195dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80195de:	4798      	blx	r3
 80195e0:	4b08      	ldr	r3, [pc, #32]	; (8019604 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80195e2:	4601      	mov	r1, r0
 80195e4:	4630      	mov	r0, r6
 80195e6:	881a      	ldrh	r2, [r3, #0]
 80195e8:	6833      	ldr	r3, [r6, #0]
 80195ea:	e9cd 7500 	strd	r7, r5, [sp]
 80195ee:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80195f0:	ab04      	add	r3, sp, #16
 80195f2:	47a8      	blx	r5
 80195f4:	6820      	ldr	r0, [r4, #0]
 80195f6:	6803      	ldr	r3, [r0, #0]
 80195f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80195fa:	4798      	blx	r3
 80195fc:	e7e8      	b.n	80195d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80195fe:	bf00      	nop
 8019600:	24001ed8 	.word	0x24001ed8
 8019604:	24001ed2 	.word	0x24001ed2

08019608 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8019608:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801960c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8019610:	4688      	mov	r8, r1
 8019612:	4614      	mov	r4, r2
 8019614:	461d      	mov	r5, r3
 8019616:	9e08      	ldr	r6, [sp, #32]
 8019618:	2f00      	cmp	r7, #0
 801961a:	f000 80ab 	beq.w	8019774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801961e:	4618      	mov	r0, r3
 8019620:	f7f6 f873 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 8019624:	2800      	cmp	r0, #0
 8019626:	f040 80a5 	bne.w	8019774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801962a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801962e:	2fff      	cmp	r7, #255	; 0xff
 8019630:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8019634:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8019638:	fb04 1303 	mla	r3, r4, r3, r1
 801963c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8019640:	eba4 0200 	sub.w	r2, r4, r0
 8019644:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8019648:	fb04 f505 	mul.w	r5, r4, r5
 801964c:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8019650:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8019654:	d04a      	beq.n	80196ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8019656:	b2bc      	uxth	r4, r7
 8019658:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801965c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8019660:	fa5f f788 	uxtb.w	r7, r8
 8019664:	b2f3      	uxtb	r3, r6
 8019666:	0040      	lsls	r0, r0, #1
 8019668:	fb0e fe04 	mul.w	lr, lr, r4
 801966c:	4367      	muls	r7, r4
 801966e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8019672:	4363      	muls	r3, r4
 8019674:	fa1f fc8c 	uxth.w	ip, ip
 8019678:	42a9      	cmp	r1, r5
 801967a:	d27b      	bcs.n	8019774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801967c:	eb01 0900 	add.w	r9, r1, r0
 8019680:	4549      	cmp	r1, r9
 8019682:	d231      	bcs.n	80196e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8019684:	880a      	ldrh	r2, [r1, #0]
 8019686:	1214      	asrs	r4, r2, #8
 8019688:	10d6      	asrs	r6, r2, #3
 801968a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801968e:	00d2      	lsls	r2, r2, #3
 8019690:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019694:	b2d2      	uxtb	r2, r2
 8019696:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801969a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801969e:	fb14 f40c 	smulbb	r4, r4, ip
 80196a2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80196a6:	fb12 f20c 	smulbb	r2, r2, ip
 80196aa:	fb16 f60c 	smulbb	r6, r6, ip
 80196ae:	4474      	add	r4, lr
 80196b0:	441a      	add	r2, r3
 80196b2:	b2a4      	uxth	r4, r4
 80196b4:	443e      	add	r6, r7
 80196b6:	b292      	uxth	r2, r2
 80196b8:	f104 0a01 	add.w	sl, r4, #1
 80196bc:	b2b6      	uxth	r6, r6
 80196be:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80196c2:	f102 0a01 	add.w	sl, r2, #1
 80196c6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80196ca:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80196ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80196d2:	4322      	orrs	r2, r4
 80196d4:	1c74      	adds	r4, r6, #1
 80196d6:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80196da:	0976      	lsrs	r6, r6, #5
 80196dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80196e0:	4332      	orrs	r2, r6
 80196e2:	f821 2b02 	strh.w	r2, [r1], #2
 80196e6:	e7cb      	b.n	8019680 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 80196e8:	4441      	add	r1, r8
 80196ea:	e7c5      	b.n	8019678 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 80196ec:	0973      	lsrs	r3, r6, #5
 80196ee:	4f22      	ldr	r7, [pc, #136]	; (8019778 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 80196f0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80196f4:	ea08 0707 	and.w	r7, r8, r7
 80196f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80196fc:	433b      	orrs	r3, r7
 80196fe:	07e7      	lsls	r7, r4, #31
 8019700:	ea43 0306 	orr.w	r3, r3, r6
 8019704:	b29b      	uxth	r3, r3
 8019706:	d50b      	bpl.n	8019720 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8019708:	0040      	lsls	r0, r0, #1
 801970a:	0052      	lsls	r2, r2, #1
 801970c:	42a9      	cmp	r1, r5
 801970e:	d231      	bcs.n	8019774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8019710:	180c      	adds	r4, r1, r0
 8019712:	42a1      	cmp	r1, r4
 8019714:	d202      	bcs.n	801971c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8019716:	f821 3b02 	strh.w	r3, [r1], #2
 801971a:	e7fa      	b.n	8019712 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801971c:	4411      	add	r1, r2
 801971e:	e7f5      	b.n	801970c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 8019720:	078e      	lsls	r6, r1, #30
 8019722:	d008      	beq.n	8019736 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 8019724:	0066      	lsls	r6, r4, #1
 8019726:	460a      	mov	r2, r1
 8019728:	42aa      	cmp	r2, r5
 801972a:	d202      	bcs.n	8019732 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801972c:	8013      	strh	r3, [r2, #0]
 801972e:	4432      	add	r2, r6
 8019730:	e7fa      	b.n	8019728 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 8019732:	3102      	adds	r1, #2
 8019734:	3801      	subs	r0, #1
 8019736:	07c2      	lsls	r2, r0, #31
 8019738:	d50b      	bpl.n	8019752 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801973a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801973e:	0066      	lsls	r6, r4, #1
 8019740:	3a01      	subs	r2, #1
 8019742:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8019746:	42aa      	cmp	r2, r5
 8019748:	d202      	bcs.n	8019750 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801974a:	8013      	strh	r3, [r2, #0]
 801974c:	4432      	add	r2, r6
 801974e:	e7fa      	b.n	8019746 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8019750:	3801      	subs	r0, #1
 8019752:	b178      	cbz	r0, 8019774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8019754:	1040      	asrs	r0, r0, #1
 8019756:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801975a:	0080      	lsls	r0, r0, #2
 801975c:	0064      	lsls	r4, r4, #1
 801975e:	42a9      	cmp	r1, r5
 8019760:	d208      	bcs.n	8019774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8019762:	180e      	adds	r6, r1, r0
 8019764:	460a      	mov	r2, r1
 8019766:	42b2      	cmp	r2, r6
 8019768:	d202      	bcs.n	8019770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801976a:	f842 3b04 	str.w	r3, [r2], #4
 801976e:	e7fa      	b.n	8019766 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 8019770:	4421      	add	r1, r4
 8019772:	e7f4      	b.n	801975e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8019774:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019778:	00fff800 	.word	0x00fff800

0801977c <_ZN8touchgfx8LCD16bppC1Ev>:
 801977c:	2200      	movs	r2, #0
 801977e:	4912      	ldr	r1, [pc, #72]	; (80197c8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8019780:	6042      	str	r2, [r0, #4]
 8019782:	6001      	str	r1, [r0, #0]
 8019784:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8019788:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801978c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8019790:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8019794:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8019798:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801979c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80197a0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80197a4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80197a8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80197ac:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80197b0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80197b4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80197b8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80197bc:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 80197c0:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80197c4:	4770      	bx	lr
 80197c6:	bf00      	nop
 80197c8:	080259dc 	.word	0x080259dc

080197cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80197cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197d0:	b08d      	sub	sp, #52	; 0x34
 80197d2:	460d      	mov	r5, r1
 80197d4:	4604      	mov	r4, r0
 80197d6:	4699      	mov	r9, r3
 80197d8:	6808      	ldr	r0, [r1, #0]
 80197da:	ab08      	add	r3, sp, #32
 80197dc:	6849      	ldr	r1, [r1, #4]
 80197de:	c303      	stmia	r3!, {r0, r1}
 80197e0:	6810      	ldr	r0, [r2, #0]
 80197e2:	ab0a      	add	r3, sp, #40	; 0x28
 80197e4:	6851      	ldr	r1, [r2, #4]
 80197e6:	c303      	stmia	r3!, {r0, r1}
 80197e8:	a808      	add	r0, sp, #32
 80197ea:	f7f8 fe9f 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80197ee:	4629      	mov	r1, r5
 80197f0:	a80a      	add	r0, sp, #40	; 0x28
 80197f2:	4d67      	ldr	r5, [pc, #412]	; (8019990 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80197f4:	f7f8 fec2 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80197f8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80197fc:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8019800:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8019804:	6828      	ldr	r0, [r5, #0]
 8019806:	fb11 2103 	smlabb	r1, r1, r3, r2
 801980a:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801980e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8019812:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8019816:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801981a:	440a      	add	r2, r1
 801981c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8019820:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019824:	4413      	add	r3, r2
 8019826:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801982a:	6803      	ldr	r3, [r0, #0]
 801982c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801982e:	4798      	blx	r3
 8019830:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019834:	d119      	bne.n	801986a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8019836:	f010 0f20 	tst.w	r0, #32
 801983a:	6828      	ldr	r0, [r5, #0]
 801983c:	d018      	beq.n	8019870 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801983e:	2500      	movs	r5, #0
 8019840:	6801      	ldr	r1, [r0, #0]
 8019842:	b2b6      	uxth	r6, r6
 8019844:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8019848:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801984c:	9601      	str	r6, [sp, #4]
 801984e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8019852:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8019856:	9502      	str	r5, [sp, #8]
 8019858:	fa1f f588 	uxth.w	r5, r8
 801985c:	9500      	str	r5, [sp, #0]
 801985e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8019860:	4621      	mov	r1, r4
 8019862:	47a8      	blx	r5
 8019864:	b00d      	add	sp, #52	; 0x34
 8019866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801986a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801986e:	e7e4      	b.n	801983a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8019870:	6803      	ldr	r3, [r0, #0]
 8019872:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019874:	4798      	blx	r3
 8019876:	4947      	ldr	r1, [pc, #284]	; (8019994 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8019878:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801987c:	880b      	ldrh	r3, [r1, #0]
 801987e:	468a      	mov	sl, r1
 8019880:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8019884:	fb03 5202 	mla	r2, r3, r2, r5
 8019888:	4373      	muls	r3, r6
 801988a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801988e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019892:	9307      	str	r3, [sp, #28]
 8019894:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8019898:	9306      	str	r3, [sp, #24]
 801989a:	9b07      	ldr	r3, [sp, #28]
 801989c:	4298      	cmp	r0, r3
 801989e:	d270      	bcs.n	8019982 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80198a0:	9b06      	ldr	r3, [sp, #24]
 80198a2:	4621      	mov	r1, r4
 80198a4:	eb00 0b03 	add.w	fp, r0, r3
 80198a8:	4558      	cmp	r0, fp
 80198aa:	d25d      	bcs.n	8019968 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80198ac:	f851 4b04 	ldr.w	r4, [r1], #4
 80198b0:	0e23      	lsrs	r3, r4, #24
 80198b2:	d014      	beq.n	80198de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80198b4:	2bff      	cmp	r3, #255	; 0xff
 80198b6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80198ba:	d112      	bne.n	80198e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80198bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80198c0:	d10f      	bne.n	80198e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80198c2:	0963      	lsrs	r3, r4, #5
 80198c4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80198c8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80198cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80198d0:	f02c 0c07 	bic.w	ip, ip, #7
 80198d4:	ea43 0c0c 	orr.w	ip, r3, ip
 80198d8:	ea4c 0404 	orr.w	r4, ip, r4
 80198dc:	8004      	strh	r4, [r0, #0]
 80198de:	3002      	adds	r0, #2
 80198e0:	e7e2      	b.n	80198a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80198e2:	fb09 f303 	mul.w	r3, r9, r3
 80198e6:	8807      	ldrh	r7, [r0, #0]
 80198e8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80198ec:	fa5f fc8c 	uxtb.w	ip, ip
 80198f0:	1c5a      	adds	r2, r3, #1
 80198f2:	123e      	asrs	r6, r7, #8
 80198f4:	10fd      	asrs	r5, r7, #3
 80198f6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80198fa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80198fe:	00ff      	lsls	r7, r7, #3
 8019900:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019904:	1212      	asrs	r2, r2, #8
 8019906:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801990a:	b293      	uxth	r3, r2
 801990c:	43d2      	mvns	r2, r2
 801990e:	b2ff      	uxtb	r7, r7
 8019910:	fb1e fe03 	smulbb	lr, lr, r3
 8019914:	b2d2      	uxtb	r2, r2
 8019916:	fb1c fc03 	smulbb	ip, ip, r3
 801991a:	b2e4      	uxtb	r4, r4
 801991c:	fb06 e602 	mla	r6, r6, r2, lr
 8019920:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019924:	fb14 f403 	smulbb	r4, r4, r3
 8019928:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801992c:	b2b6      	uxth	r6, r6
 801992e:	fb05 c502 	mla	r5, r5, r2, ip
 8019932:	fb07 4702 	mla	r7, r7, r2, r4
 8019936:	f106 0e01 	add.w	lr, r6, #1
 801993a:	b2ad      	uxth	r5, r5
 801993c:	b2bf      	uxth	r7, r7
 801993e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8019942:	f105 0c01 	add.w	ip, r5, #1
 8019946:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801994a:	1c7e      	adds	r6, r7, #1
 801994c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019950:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019954:	096d      	lsrs	r5, r5, #5
 8019956:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801995a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801995e:	ea46 060e 	orr.w	r6, r6, lr
 8019962:	432e      	orrs	r6, r5
 8019964:	8006      	strh	r6, [r0, #0]
 8019966:	e7ba      	b.n	80198de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8019968:	f8ba 3000 	ldrh.w	r3, [sl]
 801996c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8019970:	eba3 0308 	sub.w	r3, r3, r8
 8019974:	eba4 0408 	sub.w	r4, r4, r8
 8019978:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801997c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8019980:	e78b      	b.n	801989a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8019982:	4b03      	ldr	r3, [pc, #12]	; (8019990 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8019984:	6818      	ldr	r0, [r3, #0]
 8019986:	6803      	ldr	r3, [r0, #0]
 8019988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801998a:	4798      	blx	r3
 801998c:	e76a      	b.n	8019864 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801998e:	bf00      	nop
 8019990:	24001ed8 	.word	0x24001ed8
 8019994:	24001ed2 	.word	0x24001ed2

08019998 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8019998:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801999c:	b085      	sub	sp, #20
 801999e:	6810      	ldr	r0, [r2, #0]
 80199a0:	460c      	mov	r4, r1
 80199a2:	6851      	ldr	r1, [r2, #4]
 80199a4:	466d      	mov	r5, sp
 80199a6:	4616      	mov	r6, r2
 80199a8:	c503      	stmia	r5!, {r0, r1}
 80199aa:	6818      	ldr	r0, [r3, #0]
 80199ac:	6859      	ldr	r1, [r3, #4]
 80199ae:	c503      	stmia	r5!, {r0, r1}
 80199b0:	4668      	mov	r0, sp
 80199b2:	4d2e      	ldr	r5, [pc, #184]	; (8019a6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80199b4:	f7f8 fdba 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80199b8:	4631      	mov	r1, r6
 80199ba:	a802      	add	r0, sp, #8
 80199bc:	4e2c      	ldr	r6, [pc, #176]	; (8019a70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80199be:	f7f8 fddd 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80199c2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80199c6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80199ca:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80199ce:	6828      	ldr	r0, [r5, #0]
 80199d0:	fb11 2103 	smlabb	r1, r1, r3, r2
 80199d4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80199d8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80199dc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80199e0:	f8bd 1000 	ldrh.w	r1, [sp]
 80199e4:	440a      	add	r2, r1
 80199e6:	f8ad 2008 	strh.w	r2, [sp, #8]
 80199ea:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80199ee:	4413      	add	r3, r2
 80199f0:	f8ad 300a 	strh.w	r3, [sp, #10]
 80199f4:	6803      	ldr	r3, [r0, #0]
 80199f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80199f8:	4798      	blx	r3
 80199fa:	8833      	ldrh	r3, [r6, #0]
 80199fc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8019a00:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8019a04:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019a08:	f8df e068 	ldr.w	lr, [pc, #104]	; 8019a74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8019a0c:	fb03 1202 	mla	r2, r3, r2, r1
 8019a10:	fb08 f303 	mul.w	r3, r8, r3
 8019a14:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019a18:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019a1c:	4298      	cmp	r0, r3
 8019a1e:	d21d      	bcs.n	8019a5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8019a20:	eb00 080c 	add.w	r8, r0, ip
 8019a24:	4540      	cmp	r0, r8
 8019a26:	d20f      	bcs.n	8019a48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8019a28:	f854 1b04 	ldr.w	r1, [r4], #4
 8019a2c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8019a30:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8019a34:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8019a38:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019a3c:	ea42 0209 	orr.w	r2, r2, r9
 8019a40:	430a      	orrs	r2, r1
 8019a42:	f820 2b02 	strh.w	r2, [r0], #2
 8019a46:	e7ed      	b.n	8019a24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8019a48:	8832      	ldrh	r2, [r6, #0]
 8019a4a:	1bd2      	subs	r2, r2, r7
 8019a4c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019a50:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8019a54:	1bd2      	subs	r2, r2, r7
 8019a56:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8019a5a:	e7df      	b.n	8019a1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8019a5c:	6828      	ldr	r0, [r5, #0]
 8019a5e:	6803      	ldr	r3, [r0, #0]
 8019a60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019a62:	4798      	blx	r3
 8019a64:	b005      	add	sp, #20
 8019a66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019a6a:	bf00      	nop
 8019a6c:	24001ed8 	.word	0x24001ed8
 8019a70:	24001ed2 	.word	0x24001ed2
 8019a74:	fffff800 	.word	0xfffff800

08019a78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8019a78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019a7c:	b08e      	sub	sp, #56	; 0x38
 8019a7e:	460e      	mov	r6, r1
 8019a80:	4604      	mov	r4, r0
 8019a82:	461d      	mov	r5, r3
 8019a84:	6808      	ldr	r0, [r1, #0]
 8019a86:	ab0a      	add	r3, sp, #40	; 0x28
 8019a88:	6849      	ldr	r1, [r1, #4]
 8019a8a:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 8019c60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8019a8e:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 8019c64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8019a92:	c303      	stmia	r3!, {r0, r1}
 8019a94:	6810      	ldr	r0, [r2, #0]
 8019a96:	ab0c      	add	r3, sp, #48	; 0x30
 8019a98:	6851      	ldr	r1, [r2, #4]
 8019a9a:	c303      	stmia	r3!, {r0, r1}
 8019a9c:	a80a      	add	r0, sp, #40	; 0x28
 8019a9e:	f7f8 fd45 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019aa2:	4631      	mov	r1, r6
 8019aa4:	a80c      	add	r0, sp, #48	; 0x30
 8019aa6:	f7f8 fd69 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019aaa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8019aae:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8019ab2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8019ab6:	f8d8 0000 	ldr.w	r0, [r8]
 8019aba:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019abe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8019ac2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8019ac6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019aca:	440c      	add	r4, r1
 8019acc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8019ad0:	440a      	add	r2, r1
 8019ad2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8019ad6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8019ada:	4413      	add	r3, r2
 8019adc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019ae0:	6803      	ldr	r3, [r0, #0]
 8019ae2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019ae4:	4798      	blx	r3
 8019ae6:	2dff      	cmp	r5, #255	; 0xff
 8019ae8:	d124      	bne.n	8019b34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8019aea:	f010 0f01 	tst.w	r0, #1
 8019aee:	f8d8 0000 	ldr.w	r0, [r8]
 8019af2:	d022      	beq.n	8019b3a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8019af4:	2100      	movs	r1, #0
 8019af6:	f04f 0e01 	mov.w	lr, #1
 8019afa:	f8d0 c000 	ldr.w	ip, [r0]
 8019afe:	b2b6      	uxth	r6, r6
 8019b00:	f8cd e018 	str.w	lr, [sp, #24]
 8019b04:	b2bf      	uxth	r7, r7
 8019b06:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8019b0a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8019b0e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8019b12:	f8b9 e000 	ldrh.w	lr, [r9]
 8019b16:	9503      	str	r5, [sp, #12]
 8019b18:	9601      	str	r6, [sp, #4]
 8019b1a:	9700      	str	r7, [sp, #0]
 8019b1c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8019b20:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8019b24:	9102      	str	r1, [sp, #8]
 8019b26:	4621      	mov	r1, r4
 8019b28:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8019b2c:	47a8      	blx	r5
 8019b2e:	b00e      	add	sp, #56	; 0x38
 8019b30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019b34:	f010 0f04 	tst.w	r0, #4
 8019b38:	e7d9      	b.n	8019aee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8019b3a:	6803      	ldr	r3, [r0, #0]
 8019b3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019b3e:	4798      	blx	r3
 8019b40:	f8b9 3000 	ldrh.w	r3, [r9]
 8019b44:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8019b48:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8019b4c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8019b50:	435e      	muls	r6, r3
 8019b52:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8019b56:	2dff      	cmp	r5, #255	; 0xff
 8019b58:	fb03 1202 	mla	r2, r3, r2, r1
 8019b5c:	ebac 0c07 	sub.w	ip, ip, r7
 8019b60:	eba3 0707 	sub.w	r7, r3, r7
 8019b64:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019b68:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019b6c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019b70:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8019b74:	d049      	beq.n	8019c0a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8019b76:	43eb      	mvns	r3, r5
 8019b78:	fa1f f985 	uxth.w	r9, r5
 8019b7c:	b2db      	uxtb	r3, r3
 8019b7e:	42b0      	cmp	r0, r6
 8019b80:	d266      	bcs.n	8019c50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8019b82:	eb00 0a0e 	add.w	sl, r0, lr
 8019b86:	4550      	cmp	r0, sl
 8019b88:	4621      	mov	r1, r4
 8019b8a:	f104 0403 	add.w	r4, r4, #3
 8019b8e:	d25b      	bcs.n	8019c48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8019b90:	8802      	ldrh	r2, [r0, #0]
 8019b92:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8019b96:	ea4f 2822 	mov.w	r8, r2, asr #8
 8019b9a:	fb11 f109 	smulbb	r1, r1, r9
 8019b9e:	10d5      	asrs	r5, r2, #3
 8019ba0:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8019ba4:	00d2      	lsls	r2, r2, #3
 8019ba6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019baa:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8019bae:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019bb2:	fb08 1803 	mla	r8, r8, r3, r1
 8019bb6:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8019bba:	b2d2      	uxtb	r2, r2
 8019bbc:	fb11 f109 	smulbb	r1, r1, r9
 8019bc0:	fa1f f888 	uxth.w	r8, r8
 8019bc4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019bc8:	fb05 1503 	mla	r5, r5, r3, r1
 8019bcc:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8019bd0:	fb11 f109 	smulbb	r1, r1, r9
 8019bd4:	b2ad      	uxth	r5, r5
 8019bd6:	fb02 1203 	mla	r2, r2, r3, r1
 8019bda:	f108 0101 	add.w	r1, r8, #1
 8019bde:	b292      	uxth	r2, r2
 8019be0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8019be4:	1c51      	adds	r1, r2, #1
 8019be6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8019bea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019bee:	1c69      	adds	r1, r5, #1
 8019bf0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019bf4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019bf8:	096d      	lsrs	r5, r5, #5
 8019bfa:	ea42 0208 	orr.w	r2, r2, r8
 8019bfe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019c02:	432a      	orrs	r2, r5
 8019c04:	f820 2b02 	strh.w	r2, [r0], #2
 8019c08:	e7bd      	b.n	8019b86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8019c0a:	4a14      	ldr	r2, [pc, #80]	; (8019c5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8019c0c:	42b0      	cmp	r0, r6
 8019c0e:	d21f      	bcs.n	8019c50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8019c10:	eb00 050e 	add.w	r5, r0, lr
 8019c14:	42a8      	cmp	r0, r5
 8019c16:	4621      	mov	r1, r4
 8019c18:	f104 0403 	add.w	r4, r4, #3
 8019c1c:	d210      	bcs.n	8019c40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8019c1e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8019c22:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8019c26:	00db      	lsls	r3, r3, #3
 8019c28:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8019c2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019c30:	430b      	orrs	r3, r1
 8019c32:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8019c36:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8019c3a:	f820 3b02 	strh.w	r3, [r0], #2
 8019c3e:	e7e9      	b.n	8019c14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8019c40:	4438      	add	r0, r7
 8019c42:	eb01 040c 	add.w	r4, r1, ip
 8019c46:	e7e1      	b.n	8019c0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8019c48:	4438      	add	r0, r7
 8019c4a:	eb01 040c 	add.w	r4, r1, ip
 8019c4e:	e796      	b.n	8019b7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8019c50:	4b03      	ldr	r3, [pc, #12]	; (8019c60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8019c52:	6818      	ldr	r0, [r3, #0]
 8019c54:	6803      	ldr	r3, [r0, #0]
 8019c56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019c58:	4798      	blx	r3
 8019c5a:	e768      	b.n	8019b2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8019c5c:	fffff800 	.word	0xfffff800
 8019c60:	24001ed8 	.word	0x24001ed8
 8019c64:	24001ed2 	.word	0x24001ed2

08019c68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8019c68:	b4f0      	push	{r4, r5, r6, r7}
 8019c6a:	4616      	mov	r6, r2
 8019c6c:	461c      	mov	r4, r3
 8019c6e:	460d      	mov	r5, r1
 8019c70:	9a04      	ldr	r2, [sp, #16]
 8019c72:	2e01      	cmp	r6, #1
 8019c74:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019c78:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8019c7c:	d012      	beq.n	8019ca4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8019c7e:	d303      	bcc.n	8019c88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8019c80:	2e02      	cmp	r6, #2
 8019c82:	d00a      	beq.n	8019c9a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8019c84:	bcf0      	pop	{r4, r5, r6, r7}
 8019c86:	4770      	bx	lr
 8019c88:	6805      	ldr	r5, [r0, #0]
 8019c8a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8019c8e:	68ed      	ldr	r5, [r5, #12]
 8019c90:	4613      	mov	r3, r2
 8019c92:	4622      	mov	r2, r4
 8019c94:	46ac      	mov	ip, r5
 8019c96:	bcf0      	pop	{r4, r5, r6, r7}
 8019c98:	4760      	bx	ip
 8019c9a:	4621      	mov	r1, r4
 8019c9c:	4628      	mov	r0, r5
 8019c9e:	bcf0      	pop	{r4, r5, r6, r7}
 8019ca0:	f7ff bd94 	b.w	80197cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019ca4:	4621      	mov	r1, r4
 8019ca6:	4628      	mov	r0, r5
 8019ca8:	bcf0      	pop	{r4, r5, r6, r7}
 8019caa:	f7ff bee5 	b.w	8019a78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08019cb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8019cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cb4:	b093      	sub	sp, #76	; 0x4c
 8019cb6:	4681      	mov	r9, r0
 8019cb8:	4688      	mov	r8, r1
 8019cba:	6810      	ldr	r0, [r2, #0]
 8019cbc:	6851      	ldr	r1, [r2, #4]
 8019cbe:	ac0e      	add	r4, sp, #56	; 0x38
 8019cc0:	4616      	mov	r6, r2
 8019cc2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8019cc6:	4f6b      	ldr	r7, [pc, #428]	; (8019e74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8019cc8:	c403      	stmia	r4!, {r0, r1}
 8019cca:	6818      	ldr	r0, [r3, #0]
 8019ccc:	ac10      	add	r4, sp, #64	; 0x40
 8019cce:	6859      	ldr	r1, [r3, #4]
 8019cd0:	c403      	stmia	r4!, {r0, r1}
 8019cd2:	a80e      	add	r0, sp, #56	; 0x38
 8019cd4:	f7f8 fc2a 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019cd8:	4631      	mov	r1, r6
 8019cda:	a810      	add	r0, sp, #64	; 0x40
 8019cdc:	4e66      	ldr	r6, [pc, #408]	; (8019e78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019cde:	f7f8 fc4d 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019ce2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8019ce6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8019cea:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8019cee:	6830      	ldr	r0, [r6, #0]
 8019cf0:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019cf4:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8019cf8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8019cfc:	4489      	add	r9, r1
 8019cfe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8019d02:	440a      	add	r2, r1
 8019d04:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8019d08:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8019d0c:	4413      	add	r3, r2
 8019d0e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8019d12:	6803      	ldr	r3, [r0, #0]
 8019d14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019d16:	4798      	blx	r3
 8019d18:	f010 0f80 	tst.w	r0, #128	; 0x80
 8019d1c:	6830      	ldr	r0, [r6, #0]
 8019d1e:	d01d      	beq.n	8019d5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8019d20:	2200      	movs	r2, #0
 8019d22:	6801      	ldr	r1, [r0, #0]
 8019d24:	b2a4      	uxth	r4, r4
 8019d26:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8019d2a:	b2ad      	uxth	r5, r5
 8019d2c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019d30:	220b      	movs	r2, #11
 8019d32:	9207      	str	r2, [sp, #28]
 8019d34:	883a      	ldrh	r2, [r7, #0]
 8019d36:	9502      	str	r5, [sp, #8]
 8019d38:	9206      	str	r2, [sp, #24]
 8019d3a:	2201      	movs	r2, #1
 8019d3c:	9401      	str	r4, [sp, #4]
 8019d3e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8019d42:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8019d46:	9203      	str	r2, [sp, #12]
 8019d48:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8019d4c:	9200      	str	r2, [sp, #0]
 8019d4e:	4642      	mov	r2, r8
 8019d50:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8019d52:	4649      	mov	r1, r9
 8019d54:	47a0      	blx	r4
 8019d56:	b013      	add	sp, #76	; 0x4c
 8019d58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d5c:	6803      	ldr	r3, [r0, #0]
 8019d5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019d60:	4798      	blx	r3
 8019d62:	883b      	ldrh	r3, [r7, #0]
 8019d64:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8019d68:	f04f 0e04 	mov.w	lr, #4
 8019d6c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8019d70:	435d      	muls	r5, r3
 8019d72:	fb03 1202 	mla	r2, r3, r2, r1
 8019d76:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019d7a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8019d7e:	920c      	str	r2, [sp, #48]	; 0x30
 8019d80:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8019d84:	1b12      	subs	r2, r2, r4
 8019d86:	920d      	str	r2, [sp, #52]	; 0x34
 8019d88:	0062      	lsls	r2, r4, #1
 8019d8a:	1b1c      	subs	r4, r3, r4
 8019d8c:	920a      	str	r2, [sp, #40]	; 0x28
 8019d8e:	0063      	lsls	r3, r4, #1
 8019d90:	930b      	str	r3, [sp, #44]	; 0x2c
 8019d92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019d94:	4298      	cmp	r0, r3
 8019d96:	d266      	bcs.n	8019e66 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8019d98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019d9a:	eb00 0b03 	add.w	fp, r0, r3
 8019d9e:	4558      	cmp	r0, fp
 8019da0:	d25c      	bcs.n	8019e5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8019da2:	f819 3b01 	ldrb.w	r3, [r9], #1
 8019da6:	fb1e e303 	smlabb	r3, lr, r3, lr
 8019daa:	f858 2003 	ldr.w	r2, [r8, r3]
 8019dae:	0e11      	lsrs	r1, r2, #24
 8019db0:	d012      	beq.n	8019dd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019db2:	29ff      	cmp	r1, #255	; 0xff
 8019db4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8019db8:	d110      	bne.n	8019ddc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019dba:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019dbe:	d10d      	bne.n	8019ddc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019dc0:	0953      	lsrs	r3, r2, #5
 8019dc2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8019dc6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019dca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019dce:	f027 0707 	bic.w	r7, r7, #7
 8019dd2:	431f      	orrs	r7, r3
 8019dd4:	433a      	orrs	r2, r7
 8019dd6:	8002      	strh	r2, [r0, #0]
 8019dd8:	3002      	adds	r0, #2
 8019dda:	e7e0      	b.n	8019d9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8019ddc:	fb0a f101 	mul.w	r1, sl, r1
 8019de0:	8806      	ldrh	r6, [r0, #0]
 8019de2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8019de6:	b2d2      	uxtb	r2, r2
 8019de8:	1c4b      	adds	r3, r1, #1
 8019dea:	1235      	asrs	r5, r6, #8
 8019dec:	10f4      	asrs	r4, r6, #3
 8019dee:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8019df2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019df6:	00f6      	lsls	r6, r6, #3
 8019df8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8019dfc:	121b      	asrs	r3, r3, #8
 8019dfe:	b2f6      	uxtb	r6, r6
 8019e00:	b299      	uxth	r1, r3
 8019e02:	43db      	mvns	r3, r3
 8019e04:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019e08:	fb1c fc01 	smulbb	ip, ip, r1
 8019e0c:	b2db      	uxtb	r3, r3
 8019e0e:	fb12 f201 	smulbb	r2, r2, r1
 8019e12:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019e16:	fb05 c503 	mla	r5, r5, r3, ip
 8019e1a:	b2ff      	uxtb	r7, r7
 8019e1c:	fb06 2203 	mla	r2, r6, r3, r2
 8019e20:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8019e24:	fb17 f701 	smulbb	r7, r7, r1
 8019e28:	b2ad      	uxth	r5, r5
 8019e2a:	b292      	uxth	r2, r2
 8019e2c:	fb04 7403 	mla	r4, r4, r3, r7
 8019e30:	f105 0c01 	add.w	ip, r5, #1
 8019e34:	1c57      	adds	r7, r2, #1
 8019e36:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019e3a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019e3e:	b2a4      	uxth	r4, r4
 8019e40:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019e44:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019e48:	433d      	orrs	r5, r7
 8019e4a:	1c67      	adds	r7, r4, #1
 8019e4c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8019e50:	0964      	lsrs	r4, r4, #5
 8019e52:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019e56:	4325      	orrs	r5, r4
 8019e58:	8005      	strh	r5, [r0, #0]
 8019e5a:	e7bd      	b.n	8019dd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019e5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019e5e:	4418      	add	r0, r3
 8019e60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019e62:	4499      	add	r9, r3
 8019e64:	e795      	b.n	8019d92 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8019e66:	4b04      	ldr	r3, [pc, #16]	; (8019e78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019e68:	6818      	ldr	r0, [r3, #0]
 8019e6a:	6803      	ldr	r3, [r0, #0]
 8019e6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019e6e:	4798      	blx	r3
 8019e70:	e771      	b.n	8019d56 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8019e72:	bf00      	nop
 8019e74:	24001ed2 	.word	0x24001ed2
 8019e78:	24001ed8 	.word	0x24001ed8

08019e7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8019e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e80:	b087      	sub	sp, #28
 8019e82:	4680      	mov	r8, r0
 8019e84:	460d      	mov	r5, r1
 8019e86:	4614      	mov	r4, r2
 8019e88:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8019e8c:	2e00      	cmp	r6, #0
 8019e8e:	f000 80b9 	beq.w	801a004 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8019e92:	6810      	ldr	r0, [r2, #0]
 8019e94:	af02      	add	r7, sp, #8
 8019e96:	6851      	ldr	r1, [r2, #4]
 8019e98:	c703      	stmia	r7!, {r0, r1}
 8019e9a:	6818      	ldr	r0, [r3, #0]
 8019e9c:	af04      	add	r7, sp, #16
 8019e9e:	6859      	ldr	r1, [r3, #4]
 8019ea0:	c703      	stmia	r7!, {r0, r1}
 8019ea2:	a802      	add	r0, sp, #8
 8019ea4:	f7f8 fb42 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019ea8:	4621      	mov	r1, r4
 8019eaa:	a804      	add	r0, sp, #16
 8019eac:	f7f8 fb66 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019eb0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019eb4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019eb8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8019ebc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8019ec0:	fb14 2103 	smlabb	r1, r4, r3, r2
 8019ec4:	eb08 0401 	add.w	r4, r8, r1
 8019ec8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019ecc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8019ed0:	440a      	add	r2, r1
 8019ed2:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8019ed6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019eda:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019ede:	4413      	add	r3, r2
 8019ee0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019ee4:	4b49      	ldr	r3, [pc, #292]	; (801a00c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8019ee6:	6818      	ldr	r0, [r3, #0]
 8019ee8:	6803      	ldr	r3, [r0, #0]
 8019eea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019eec:	4798      	blx	r3
 8019eee:	4b48      	ldr	r3, [pc, #288]	; (801a010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8019ef0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8019ef4:	2eff      	cmp	r6, #255	; 0xff
 8019ef6:	881a      	ldrh	r2, [r3, #0]
 8019ef8:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8019efc:	fb02 c101 	mla	r1, r2, r1, ip
 8019f00:	fb02 f207 	mul.w	r2, r2, r7
 8019f04:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019f08:	f105 0104 	add.w	r1, r5, #4
 8019f0c:	461d      	mov	r5, r3
 8019f0e:	d05a      	beq.n	8019fc6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8019f10:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8019f14:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019f18:	b2b6      	uxth	r6, r6
 8019f1a:	9301      	str	r3, [sp, #4]
 8019f1c:	fa1f fe8e 	uxth.w	lr, lr
 8019f20:	4282      	cmp	r2, r0
 8019f22:	d96a      	bls.n	8019ffa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8019f24:	eb00 0b0a 	add.w	fp, r0, sl
 8019f28:	4583      	cmp	fp, r0
 8019f2a:	d940      	bls.n	8019fae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8019f2c:	8805      	ldrh	r5, [r0, #0]
 8019f2e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019f32:	122f      	asrs	r7, r5, #8
 8019f34:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8019f38:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019f3c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019f40:	00ed      	lsls	r5, r5, #3
 8019f42:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019f46:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019f4a:	fb17 f70e 	smulbb	r7, r7, lr
 8019f4e:	b2ed      	uxtb	r5, r5
 8019f50:	fb19 f90e 	smulbb	r9, r9, lr
 8019f54:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019f58:	fb15 f50e 	smulbb	r5, r5, lr
 8019f5c:	fb0c 7c06 	mla	ip, ip, r6, r7
 8019f60:	10df      	asrs	r7, r3, #3
 8019f62:	00db      	lsls	r3, r3, #3
 8019f64:	fa1f fc8c 	uxth.w	ip, ip
 8019f68:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019f6c:	b2db      	uxtb	r3, r3
 8019f6e:	fb07 9706 	mla	r7, r7, r6, r9
 8019f72:	f10c 0901 	add.w	r9, ip, #1
 8019f76:	fb03 5306 	mla	r3, r3, r6, r5
 8019f7a:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8019f7e:	b29b      	uxth	r3, r3
 8019f80:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8019f84:	b2bf      	uxth	r7, r7
 8019f86:	f103 0c01 	add.w	ip, r3, #1
 8019f8a:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019f8e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019f92:	ea4c 0c09 	orr.w	ip, ip, r9
 8019f96:	f107 0901 	add.w	r9, r7, #1
 8019f9a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8019f9e:	097f      	lsrs	r7, r7, #5
 8019fa0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019fa4:	ea4c 0c07 	orr.w	ip, ip, r7
 8019fa8:	f820 cb02 	strh.w	ip, [r0], #2
 8019fac:	e7bc      	b.n	8019f28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8019fae:	9b01      	ldr	r3, [sp, #4]
 8019fb0:	881b      	ldrh	r3, [r3, #0]
 8019fb2:	eba3 0308 	sub.w	r3, r3, r8
 8019fb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019fba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019fbe:	eba3 0308 	sub.w	r3, r3, r8
 8019fc2:	441c      	add	r4, r3
 8019fc4:	e7ac      	b.n	8019f20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8019fc6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019fca:	4282      	cmp	r2, r0
 8019fcc:	d915      	bls.n	8019ffa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8019fce:	eb00 060a 	add.w	r6, r0, sl
 8019fd2:	4286      	cmp	r6, r0
 8019fd4:	d906      	bls.n	8019fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8019fd6:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019fda:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8019fde:	f820 3b02 	strh.w	r3, [r0], #2
 8019fe2:	e7f6      	b.n	8019fd2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8019fe4:	882b      	ldrh	r3, [r5, #0]
 8019fe6:	eba3 0308 	sub.w	r3, r3, r8
 8019fea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019fee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019ff2:	eba3 0308 	sub.w	r3, r3, r8
 8019ff6:	441c      	add	r4, r3
 8019ff8:	e7e7      	b.n	8019fca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8019ffa:	4b04      	ldr	r3, [pc, #16]	; (801a00c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8019ffc:	6818      	ldr	r0, [r3, #0]
 8019ffe:	6803      	ldr	r3, [r0, #0]
 801a000:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a002:	4798      	blx	r3
 801a004:	b007      	add	sp, #28
 801a006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a00a:	bf00      	nop
 801a00c:	24001ed8 	.word	0x24001ed8
 801a010:	24001ed2 	.word	0x24001ed2

0801a014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801a014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a018:	b091      	sub	sp, #68	; 0x44
 801a01a:	4680      	mov	r8, r0
 801a01c:	460f      	mov	r7, r1
 801a01e:	4614      	mov	r4, r2
 801a020:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801a024:	2d00      	cmp	r5, #0
 801a026:	d051      	beq.n	801a0cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801a028:	6810      	ldr	r0, [r2, #0]
 801a02a:	ae0c      	add	r6, sp, #48	; 0x30
 801a02c:	6851      	ldr	r1, [r2, #4]
 801a02e:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801a230 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801a032:	c603      	stmia	r6!, {r0, r1}
 801a034:	6818      	ldr	r0, [r3, #0]
 801a036:	ae0e      	add	r6, sp, #56	; 0x38
 801a038:	6859      	ldr	r1, [r3, #4]
 801a03a:	c603      	stmia	r6!, {r0, r1}
 801a03c:	a80c      	add	r0, sp, #48	; 0x30
 801a03e:	f7f8 fa75 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a042:	4621      	mov	r1, r4
 801a044:	a80e      	add	r0, sp, #56	; 0x38
 801a046:	f7f8 fa99 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a04a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801a04e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801a052:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801a056:	f8d9 0000 	ldr.w	r0, [r9]
 801a05a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a05e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801a062:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801a066:	eb08 0401 	add.w	r4, r8, r1
 801a06a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801a06e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801a234 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801a072:	440a      	add	r2, r1
 801a074:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801a078:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801a07c:	4413      	add	r3, r2
 801a07e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801a082:	6803      	ldr	r3, [r0, #0]
 801a084:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a086:	4798      	blx	r3
 801a088:	f010 0f80 	tst.w	r0, #128	; 0x80
 801a08c:	f8d9 0000 	ldr.w	r0, [r9]
 801a090:	d01f      	beq.n	801a0d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801a092:	2200      	movs	r2, #0
 801a094:	6801      	ldr	r1, [r0, #0]
 801a096:	b2b6      	uxth	r6, r6
 801a098:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801a09c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801a0a0:	220b      	movs	r2, #11
 801a0a2:	9207      	str	r2, [sp, #28]
 801a0a4:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0a8:	9601      	str	r6, [sp, #4]
 801a0aa:	9206      	str	r2, [sp, #24]
 801a0ac:	2201      	movs	r2, #1
 801a0ae:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801a0b2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801a0b6:	9203      	str	r2, [sp, #12]
 801a0b8:	fa1f f28a 	uxth.w	r2, sl
 801a0bc:	9202      	str	r2, [sp, #8]
 801a0be:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801a0c2:	9200      	str	r2, [sp, #0]
 801a0c4:	463a      	mov	r2, r7
 801a0c6:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801a0c8:	4621      	mov	r1, r4
 801a0ca:	47a8      	blx	r5
 801a0cc:	b011      	add	sp, #68	; 0x44
 801a0ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0d2:	6803      	ldr	r3, [r0, #0]
 801a0d4:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801a0d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a0da:	4798      	blx	r3
 801a0dc:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0e0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801a0e4:	2dff      	cmp	r5, #255	; 0xff
 801a0e6:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801a0ea:	fb0a fa02 	mul.w	sl, sl, r2
 801a0ee:	fb02 1303 	mla	r3, r2, r3, r1
 801a0f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a0f6:	d062      	beq.n	801a1be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801a0f8:	ea6f 0c05 	mvn.w	ip, r5
 801a0fc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801a100:	b2ad      	uxth	r5, r5
 801a102:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801a106:	fa5f fc8c 	uxtb.w	ip, ip
 801a10a:	930a      	str	r3, [sp, #40]	; 0x28
 801a10c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a10e:	4298      	cmp	r0, r3
 801a110:	f080 8085 	bcs.w	801a21e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801a114:	eb00 0b09 	add.w	fp, r0, r9
 801a118:	4558      	cmp	r0, fp
 801a11a:	d246      	bcs.n	801a1aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801a11c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801a120:	2303      	movs	r3, #3
 801a122:	2204      	movs	r2, #4
 801a124:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801a128:	8803      	ldrh	r3, [r0, #0]
 801a12a:	eb07 0a0e 	add.w	sl, r7, lr
 801a12e:	1219      	asrs	r1, r3, #8
 801a130:	10da      	asrs	r2, r3, #3
 801a132:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a136:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801a13a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a13e:	00db      	lsls	r3, r3, #3
 801a140:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a144:	fb18 f805 	smulbb	r8, r8, r5
 801a148:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801a14c:	fb1e fe05 	smulbb	lr, lr, r5
 801a150:	b2db      	uxtb	r3, r3
 801a152:	fb01 810c 	mla	r1, r1, ip, r8
 801a156:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a15a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801a15e:	fb18 f805 	smulbb	r8, r8, r5
 801a162:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801a166:	b289      	uxth	r1, r1
 801a168:	fb02 820c 	mla	r2, r2, ip, r8
 801a16c:	fb03 e30c 	mla	r3, r3, ip, lr
 801a170:	f101 0801 	add.w	r8, r1, #1
 801a174:	b292      	uxth	r2, r2
 801a176:	b29b      	uxth	r3, r3
 801a178:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801a17c:	f102 0801 	add.w	r8, r2, #1
 801a180:	f103 0e01 	add.w	lr, r3, #1
 801a184:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801a188:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a18c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801a190:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a194:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a198:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a19c:	ea4e 0101 	orr.w	r1, lr, r1
 801a1a0:	ea41 0108 	orr.w	r1, r1, r8
 801a1a4:	f820 1b02 	strh.w	r1, [r0], #2
 801a1a8:	e7b6      	b.n	801a118 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801a1aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a1ac:	881b      	ldrh	r3, [r3, #0]
 801a1ae:	1b9b      	subs	r3, r3, r6
 801a1b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a1b4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801a1b8:	1b9b      	subs	r3, r3, r6
 801a1ba:	441c      	add	r4, r3
 801a1bc:	e7a6      	b.n	801a10c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801a1be:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801a1c2:	2203      	movs	r2, #3
 801a1c4:	2504      	movs	r5, #4
 801a1c6:	4919      	ldr	r1, [pc, #100]	; (801a22c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801a1c8:	4550      	cmp	r0, sl
 801a1ca:	d228      	bcs.n	801a21e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801a1cc:	eb00 0c09 	add.w	ip, r0, r9
 801a1d0:	4560      	cmp	r0, ip
 801a1d2:	4623      	mov	r3, r4
 801a1d4:	d219      	bcs.n	801a20a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801a1d6:	f893 e000 	ldrb.w	lr, [r3]
 801a1da:	3401      	adds	r4, #1
 801a1dc:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801a1e0:	eb07 0b0e 	add.w	fp, r7, lr
 801a1e4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a1e8:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801a1ec:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a1f0:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801a1f4:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801a1f8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a1fc:	ea43 030b 	orr.w	r3, r3, fp
 801a200:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801a204:	f820 3b02 	strh.w	r3, [r0], #2
 801a208:	e7e2      	b.n	801a1d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801a20a:	f8b8 3000 	ldrh.w	r3, [r8]
 801a20e:	1b9b      	subs	r3, r3, r6
 801a210:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a214:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801a218:	1b9b      	subs	r3, r3, r6
 801a21a:	441c      	add	r4, r3
 801a21c:	e7d4      	b.n	801a1c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801a21e:	4b04      	ldr	r3, [pc, #16]	; (801a230 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801a220:	6818      	ldr	r0, [r3, #0]
 801a222:	6803      	ldr	r3, [r0, #0]
 801a224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a226:	4798      	blx	r3
 801a228:	e750      	b.n	801a0cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801a22a:	bf00      	nop
 801a22c:	fffff800 	.word	0xfffff800
 801a230:	24001ed8 	.word	0x24001ed8
 801a234:	24001ed2 	.word	0x24001ed2

0801a238 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801a238:	b4f0      	push	{r4, r5, r6, r7}
 801a23a:	460c      	mov	r4, r1
 801a23c:	4611      	mov	r1, r2
 801a23e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801a242:	461a      	mov	r2, r3
 801a244:	780f      	ldrb	r7, [r1, #0]
 801a246:	9b04      	ldr	r3, [sp, #16]
 801a248:	2f01      	cmp	r7, #1
 801a24a:	784e      	ldrb	r6, [r1, #1]
 801a24c:	d036      	beq.n	801a2bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801a24e:	d31e      	bcc.n	801a28e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801a250:	2f02      	cmp	r7, #2
 801a252:	d14a      	bne.n	801a2ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801a254:	2e03      	cmp	r6, #3
 801a256:	d848      	bhi.n	801a2ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801a258:	e8df f006 	tbb	[pc, r6]
 801a25c:	16140702 	.word	0x16140702
 801a260:	9504      	str	r5, [sp, #16]
 801a262:	4620      	mov	r0, r4
 801a264:	bcf0      	pop	{r4, r5, r6, r7}
 801a266:	f7ff be09 	b.w	8019e7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801a26a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801a26c:	2800      	cmp	r0, #0
 801a26e:	d03c      	beq.n	801a2ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801a270:	6806      	ldr	r6, [r0, #0]
 801a272:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a276:	68b5      	ldr	r5, [r6, #8]
 801a278:	4613      	mov	r3, r2
 801a27a:	46ac      	mov	ip, r5
 801a27c:	460a      	mov	r2, r1
 801a27e:	4621      	mov	r1, r4
 801a280:	bcf0      	pop	{r4, r5, r6, r7}
 801a282:	4760      	bx	ip
 801a284:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801a286:	e7f1      	b.n	801a26c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801a288:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801a28c:	e7ee      	b.n	801a26c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801a28e:	2e03      	cmp	r6, #3
 801a290:	d82b      	bhi.n	801a2ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801a292:	e8df f006 	tbb	[pc, r6]
 801a296:	0702      	.short	0x0702
 801a298:	100e      	.short	0x100e
 801a29a:	9504      	str	r5, [sp, #16]
 801a29c:	4620      	mov	r0, r4
 801a29e:	bcf0      	pop	{r4, r5, r6, r7}
 801a2a0:	f7ff bd06 	b.w	8019cb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801a2a4:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801a2a6:	b300      	cbz	r0, 801a2ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801a2a8:	6806      	ldr	r6, [r0, #0]
 801a2aa:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a2ae:	68f5      	ldr	r5, [r6, #12]
 801a2b0:	e7e2      	b.n	801a278 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801a2b2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801a2b4:	e7f7      	b.n	801a2a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801a2b6:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801a2ba:	e7f4      	b.n	801a2a6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801a2bc:	2e03      	cmp	r6, #3
 801a2be:	d814      	bhi.n	801a2ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801a2c0:	e8df f006 	tbb	[pc, r6]
 801a2c4:	100e0702 	.word	0x100e0702
 801a2c8:	9504      	str	r5, [sp, #16]
 801a2ca:	4620      	mov	r0, r4
 801a2cc:	bcf0      	pop	{r4, r5, r6, r7}
 801a2ce:	f7ff bea1 	b.w	801a014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801a2d2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801a2d4:	b148      	cbz	r0, 801a2ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801a2d6:	6806      	ldr	r6, [r0, #0]
 801a2d8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a2dc:	6935      	ldr	r5, [r6, #16]
 801a2de:	e7cb      	b.n	801a278 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801a2e0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801a2e2:	e7f7      	b.n	801a2d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801a2e4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801a2e8:	e7f4      	b.n	801a2d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801a2ea:	bcf0      	pop	{r4, r5, r6, r7}
 801a2ec:	4770      	bx	lr
	...

0801a2f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801a2f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2f4:	b087      	sub	sp, #28
 801a2f6:	4604      	mov	r4, r0
 801a2f8:	460e      	mov	r6, r1
 801a2fa:	6810      	ldr	r0, [r2, #0]
 801a2fc:	6851      	ldr	r1, [r2, #4]
 801a2fe:	ad02      	add	r5, sp, #8
 801a300:	4617      	mov	r7, r2
 801a302:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801a306:	f8df 9230 	ldr.w	r9, [pc, #560]	; 801a538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801a30a:	c503      	stmia	r5!, {r0, r1}
 801a30c:	6818      	ldr	r0, [r3, #0]
 801a30e:	ad04      	add	r5, sp, #16
 801a310:	6859      	ldr	r1, [r3, #4]
 801a312:	c503      	stmia	r5!, {r0, r1}
 801a314:	a802      	add	r0, sp, #8
 801a316:	f7f8 f909 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a31a:	4639      	mov	r1, r7
 801a31c:	a804      	add	r0, sp, #16
 801a31e:	f7f8 f92d 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a322:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a326:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a32a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801a32e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801a332:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a336:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801a33a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801a33e:	440e      	add	r6, r1
 801a340:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a344:	440a      	add	r2, r1
 801a346:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a34a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a34e:	4413      	add	r3, r2
 801a350:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a354:	4b77      	ldr	r3, [pc, #476]	; (801a534 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801a356:	6818      	ldr	r0, [r3, #0]
 801a358:	6803      	ldr	r3, [r0, #0]
 801a35a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a35c:	4798      	blx	r3
 801a35e:	f8b9 b000 	ldrh.w	fp, [r9]
 801a362:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a366:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a36a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a36e:	fb05 f50b 	mul.w	r5, r5, fp
 801a372:	fb0b 2303 	mla	r3, fp, r3, r2
 801a376:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a37a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a37e:	9300      	str	r3, [sp, #0]
 801a380:	d069      	beq.n	801a456 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801a382:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801a386:	4558      	cmp	r0, fp
 801a388:	f080 80cc 	bcs.w	801a524 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801a38c:	9b00      	ldr	r3, [sp, #0]
 801a38e:	4631      	mov	r1, r6
 801a390:	18c3      	adds	r3, r0, r3
 801a392:	9301      	str	r3, [sp, #4]
 801a394:	9b01      	ldr	r3, [sp, #4]
 801a396:	4298      	cmp	r0, r3
 801a398:	d24f      	bcs.n	801a43a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801a39a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801a39e:	2a00      	cmp	r2, #0
 801a3a0:	d048      	beq.n	801a434 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801a3a2:	fb0a f202 	mul.w	r2, sl, r2
 801a3a6:	1c53      	adds	r3, r2, #1
 801a3a8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a3ac:	121b      	asrs	r3, r3, #8
 801a3ae:	d041      	beq.n	801a434 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801a3b0:	8802      	ldrh	r2, [r0, #0]
 801a3b2:	b29e      	uxth	r6, r3
 801a3b4:	f8b4 c000 	ldrh.w	ip, [r4]
 801a3b8:	43db      	mvns	r3, r3
 801a3ba:	1215      	asrs	r5, r2, #8
 801a3bc:	b2db      	uxtb	r3, r3
 801a3be:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a3c2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a3c6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801a3ca:	fb15 f503 	smulbb	r5, r5, r3
 801a3ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a3d2:	00d2      	lsls	r2, r2, #3
 801a3d4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a3d8:	fb07 5706 	mla	r7, r7, r6, r5
 801a3dc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a3e0:	b2d2      	uxtb	r2, r2
 801a3e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a3e6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a3ea:	fb1e fe03 	smulbb	lr, lr, r3
 801a3ee:	b2bf      	uxth	r7, r7
 801a3f0:	fb12 f203 	smulbb	r2, r2, r3
 801a3f4:	fa5f fc8c 	uxtb.w	ip, ip
 801a3f8:	fb05 e506 	mla	r5, r5, r6, lr
 801a3fc:	f107 0e01 	add.w	lr, r7, #1
 801a400:	fb0c 2c06 	mla	ip, ip, r6, r2
 801a404:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801a408:	fa1f fc8c 	uxth.w	ip, ip
 801a40c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801a410:	b2ad      	uxth	r5, r5
 801a412:	f10c 0701 	add.w	r7, ip, #1
 801a416:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a41a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a41e:	ea47 070e 	orr.w	r7, r7, lr
 801a422:	f105 0e01 	add.w	lr, r5, #1
 801a426:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801a42a:	096d      	lsrs	r5, r5, #5
 801a42c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a430:	432f      	orrs	r7, r5
 801a432:	8007      	strh	r7, [r0, #0]
 801a434:	3002      	adds	r0, #2
 801a436:	3402      	adds	r4, #2
 801a438:	e7ac      	b.n	801a394 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801a43a:	f8b9 3000 	ldrh.w	r3, [r9]
 801a43e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801a442:	eba3 0308 	sub.w	r3, r3, r8
 801a446:	eba6 0608 	sub.w	r6, r6, r8
 801a44a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a44e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801a452:	440e      	add	r6, r1
 801a454:	e797      	b.n	801a386 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801a456:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801a45a:	42a8      	cmp	r0, r5
 801a45c:	d262      	bcs.n	801a524 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801a45e:	9b00      	ldr	r3, [sp, #0]
 801a460:	4631      	mov	r1, r6
 801a462:	eb00 0b03 	add.w	fp, r0, r3
 801a466:	4558      	cmp	r0, fp
 801a468:	d24e      	bcs.n	801a508 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801a46a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a46e:	b12b      	cbz	r3, 801a47c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801a470:	2bff      	cmp	r3, #255	; 0xff
 801a472:	f8b4 e000 	ldrh.w	lr, [r4]
 801a476:	d104      	bne.n	801a482 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801a478:	f8a0 e000 	strh.w	lr, [r0]
 801a47c:	3002      	adds	r0, #2
 801a47e:	3402      	adds	r4, #2
 801a480:	e7f1      	b.n	801a466 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801a482:	8802      	ldrh	r2, [r0, #0]
 801a484:	b29f      	uxth	r7, r3
 801a486:	43db      	mvns	r3, r3
 801a488:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a48c:	1216      	asrs	r6, r2, #8
 801a48e:	b2db      	uxtb	r3, r3
 801a490:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a494:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a498:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801a49c:	00d2      	lsls	r2, r2, #3
 801a49e:	fb16 f603 	smulbb	r6, r6, r3
 801a4a2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a4a6:	b2d2      	uxtb	r2, r2
 801a4a8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a4ac:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a4b0:	fb1a fa03 	smulbb	sl, sl, r3
 801a4b4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4b8:	fa1f fc8c 	uxth.w	ip, ip
 801a4bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a4c0:	fb12 f303 	smulbb	r3, r2, r3
 801a4c4:	fa5f fe8e 	uxtb.w	lr, lr
 801a4c8:	fb06 a607 	mla	r6, r6, r7, sl
 801a4cc:	f10c 0201 	add.w	r2, ip, #1
 801a4d0:	fb0e 3307 	mla	r3, lr, r7, r3
 801a4d4:	b2b6      	uxth	r6, r6
 801a4d6:	b29b      	uxth	r3, r3
 801a4d8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a4dc:	f106 0a01 	add.w	sl, r6, #1
 801a4e0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801a4e4:	f103 0c01 	add.w	ip, r3, #1
 801a4e8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a4ec:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a4f0:	0976      	lsrs	r6, r6, #5
 801a4f2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a4f6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a4fa:	ea4c 0c02 	orr.w	ip, ip, r2
 801a4fe:	ea4c 0c06 	orr.w	ip, ip, r6
 801a502:	f8a0 c000 	strh.w	ip, [r0]
 801a506:	e7b9      	b.n	801a47c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801a508:	f8b9 3000 	ldrh.w	r3, [r9]
 801a50c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801a510:	eba3 0308 	sub.w	r3, r3, r8
 801a514:	eba6 0608 	sub.w	r6, r6, r8
 801a518:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a51c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801a520:	440e      	add	r6, r1
 801a522:	e79a      	b.n	801a45a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801a524:	4b03      	ldr	r3, [pc, #12]	; (801a534 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801a526:	6818      	ldr	r0, [r3, #0]
 801a528:	6803      	ldr	r3, [r0, #0]
 801a52a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a52c:	4798      	blx	r3
 801a52e:	b007      	add	sp, #28
 801a530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a534:	24001ed8 	.word	0x24001ed8
 801a538:	24001ed2 	.word	0x24001ed2

0801a53c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801a53c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a540:	b089      	sub	sp, #36	; 0x24
 801a542:	4682      	mov	sl, r0
 801a544:	460f      	mov	r7, r1
 801a546:	4691      	mov	r9, r2
 801a548:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801a54c:	4698      	mov	r8, r3
 801a54e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a550:	2e00      	cmp	r6, #0
 801a552:	d03d      	beq.n	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a554:	4608      	mov	r0, r1
 801a556:	f7fa fe53 	bl	8015200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a55a:	4605      	mov	r5, r0
 801a55c:	4638      	mov	r0, r7
 801a55e:	f7fa fe83 	bl	8015268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a562:	f8ad 000e 	strh.w	r0, [sp, #14]
 801a566:	4638      	mov	r0, r7
 801a568:	f8ad 9008 	strh.w	r9, [sp, #8]
 801a56c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a570:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a574:	f7fa ff30 	bl	80153d8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a578:	4605      	mov	r5, r0
 801a57a:	4638      	mov	r0, r7
 801a57c:	f7fa ff5c 	bl	8015438 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801a580:	4681      	mov	r9, r0
 801a582:	4638      	mov	r0, r7
 801a584:	f7fa ffac 	bl	80154e0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a588:	280b      	cmp	r0, #11
 801a58a:	d821      	bhi.n	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a58c:	e8df f000 	tbb	[pc, r0]
 801a590:	2006aebe 	.word	0x2006aebe
 801a594:	20202020 	.word	0x20202020
 801a598:	b5202020 	.word	0xb5202020
 801a59c:	4bb0      	ldr	r3, [pc, #704]	; (801a860 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801a59e:	6818      	ldr	r0, [r3, #0]
 801a5a0:	6803      	ldr	r3, [r0, #0]
 801a5a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a5a4:	4798      	blx	r3
 801a5a6:	2eff      	cmp	r6, #255	; 0xff
 801a5a8:	d101      	bne.n	801a5ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801a5aa:	0683      	lsls	r3, r0, #26
 801a5ac:	d506      	bpl.n	801a5bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801a5ae:	4633      	mov	r3, r6
 801a5b0:	4622      	mov	r2, r4
 801a5b2:	a902      	add	r1, sp, #8
 801a5b4:	4628      	mov	r0, r5
 801a5b6:	f7ff f909 	bl	80197cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a5ba:	e009      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a5bc:	4638      	mov	r0, r7
 801a5be:	f7fa fed3 	bl	8015368 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a5c2:	b940      	cbnz	r0, 801a5d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801a5c4:	4623      	mov	r3, r4
 801a5c6:	aa02      	add	r2, sp, #8
 801a5c8:	4629      	mov	r1, r5
 801a5ca:	4650      	mov	r0, sl
 801a5cc:	f7ff f9e4 	bl	8019998 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801a5d0:	b009      	add	sp, #36	; 0x24
 801a5d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5d6:	f10d 0818 	add.w	r8, sp, #24
 801a5da:	4639      	mov	r1, r7
 801a5dc:	af04      	add	r7, sp, #16
 801a5de:	4640      	mov	r0, r8
 801a5e0:	f7fa fe76 	bl	80152d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801a5e4:	e898 0003 	ldmia.w	r8, {r0, r1}
 801a5e8:	e887 0003 	stmia.w	r7, {r0, r1}
 801a5ec:	4638      	mov	r0, r7
 801a5ee:	4621      	mov	r1, r4
 801a5f0:	f7f5 f848 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 801a5f4:	4638      	mov	r0, r7
 801a5f6:	f7f5 f888 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a5fa:	2800      	cmp	r0, #0
 801a5fc:	d1d7      	bne.n	801a5ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801a5fe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a602:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a606:	4293      	cmp	r3, r2
 801a608:	dd12      	ble.n	801a630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801a60a:	1a9b      	subs	r3, r3, r2
 801a60c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a610:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a614:	f8ad 0018 	strh.w	r0, [sp, #24]
 801a618:	4628      	mov	r0, r5
 801a61a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801a61e:	4642      	mov	r2, r8
 801a620:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a624:	a902      	add	r1, sp, #8
 801a626:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a62a:	4633      	mov	r3, r6
 801a62c:	f7ff f8ce 	bl	80197cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a630:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801a634:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a638:	4293      	cmp	r3, r2
 801a63a:	dd12      	ble.n	801a662 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801a63c:	1a9b      	subs	r3, r3, r2
 801a63e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801a642:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801a646:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a64a:	4642      	mov	r2, r8
 801a64c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801a650:	4628      	mov	r0, r5
 801a652:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a656:	23ff      	movs	r3, #255	; 0xff
 801a658:	f8ad 101e 	strh.w	r1, [sp, #30]
 801a65c:	a902      	add	r1, sp, #8
 801a65e:	f7ff f8b5 	bl	80197cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a662:	463b      	mov	r3, r7
 801a664:	aa02      	add	r2, sp, #8
 801a666:	4629      	mov	r1, r5
 801a668:	4650      	mov	r0, sl
 801a66a:	f7ff f995 	bl	8019998 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801a66e:	88a2      	ldrh	r2, [r4, #4]
 801a670:	8823      	ldrh	r3, [r4, #0]
 801a672:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801a676:	4413      	add	r3, r2
 801a678:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a67c:	440a      	add	r2, r1
 801a67e:	b29b      	uxth	r3, r3
 801a680:	b292      	uxth	r2, r2
 801a682:	b218      	sxth	r0, r3
 801a684:	b211      	sxth	r1, r2
 801a686:	4288      	cmp	r0, r1
 801a688:	dd12      	ble.n	801a6b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801a68a:	1a9b      	subs	r3, r3, r2
 801a68c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801a690:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801a694:	4642      	mov	r2, r8
 801a696:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a69a:	a902      	add	r1, sp, #8
 801a69c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a6a0:	23ff      	movs	r3, #255	; 0xff
 801a6a2:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a6a6:	4628      	mov	r0, r5
 801a6a8:	f8ad 601a 	strh.w	r6, [sp, #26]
 801a6ac:	f7ff f88e 	bl	80197cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a6b0:	88e2      	ldrh	r2, [r4, #6]
 801a6b2:	8863      	ldrh	r3, [r4, #2]
 801a6b4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a6b8:	4413      	add	r3, r2
 801a6ba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a6be:	440a      	add	r2, r1
 801a6c0:	b29b      	uxth	r3, r3
 801a6c2:	b292      	uxth	r2, r2
 801a6c4:	b218      	sxth	r0, r3
 801a6c6:	b211      	sxth	r1, r2
 801a6c8:	4288      	cmp	r0, r1
 801a6ca:	dd81      	ble.n	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a6cc:	1a9b      	subs	r3, r3, r2
 801a6ce:	f9b4 6000 	ldrsh.w	r6, [r4]
 801a6d2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a6d6:	4642      	mov	r2, r8
 801a6d8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a6dc:	23ff      	movs	r3, #255	; 0xff
 801a6de:	f8ad 6018 	strh.w	r6, [sp, #24]
 801a6e2:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a6e6:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a6ea:	e762      	b.n	801a5b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801a6ec:	4633      	mov	r3, r6
 801a6ee:	4622      	mov	r2, r4
 801a6f0:	a902      	add	r1, sp, #8
 801a6f2:	4628      	mov	r0, r5
 801a6f4:	f7ff f9c0 	bl	8019a78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801a6f8:	e76a      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a6fa:	e9cd 4600 	strd	r4, r6, [sp]
 801a6fe:	ab02      	add	r3, sp, #8
 801a700:	464a      	mov	r2, r9
 801a702:	4629      	mov	r1, r5
 801a704:	4650      	mov	r0, sl
 801a706:	f7ff fd97 	bl	801a238 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801a70a:	e761      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a70c:	4638      	mov	r0, r7
 801a70e:	f7fa fe2b 	bl	8015368 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a712:	b950      	cbnz	r0, 801a72a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801a714:	f8da 3000 	ldr.w	r3, [sl]
 801a718:	aa02      	add	r2, sp, #8
 801a71a:	4629      	mov	r1, r5
 801a71c:	e9cd 6000 	strd	r6, r0, [sp]
 801a720:	4650      	mov	r0, sl
 801a722:	68de      	ldr	r6, [r3, #12]
 801a724:	4623      	mov	r3, r4
 801a726:	47b0      	blx	r6
 801a728:	e752      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a72a:	f10d 0818 	add.w	r8, sp, #24
 801a72e:	4639      	mov	r1, r7
 801a730:	af04      	add	r7, sp, #16
 801a732:	4640      	mov	r0, r8
 801a734:	f7fa fdcc 	bl	80152d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801a738:	e898 0003 	ldmia.w	r8, {r0, r1}
 801a73c:	e887 0003 	stmia.w	r7, {r0, r1}
 801a740:	4638      	mov	r0, r7
 801a742:	4621      	mov	r1, r4
 801a744:	f7f4 ff9e 	bl	800f684 <_ZN8touchgfx4RectaNERKS0_>
 801a748:	4638      	mov	r0, r7
 801a74a:	f7f4 ffde 	bl	800f70a <_ZNK8touchgfx4Rect7isEmptyEv>
 801a74e:	b138      	cbz	r0, 801a760 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801a750:	4623      	mov	r3, r4
 801a752:	9600      	str	r6, [sp, #0]
 801a754:	aa02      	add	r2, sp, #8
 801a756:	4649      	mov	r1, r9
 801a758:	4628      	mov	r0, r5
 801a75a:	f7ff fdc9 	bl	801a2f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a75e:	e737      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a760:	f8da 3000 	ldr.w	r3, [sl]
 801a764:	aa02      	add	r2, sp, #8
 801a766:	4629      	mov	r1, r5
 801a768:	e9cd 6000 	strd	r6, r0, [sp]
 801a76c:	4650      	mov	r0, sl
 801a76e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801a772:	463b      	mov	r3, r7
 801a774:	47d8      	blx	fp
 801a776:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a77a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a77e:	4293      	cmp	r3, r2
 801a780:	dd13      	ble.n	801a7aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801a782:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a786:	1a9b      	subs	r3, r3, r2
 801a788:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a78c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801a790:	4628      	mov	r0, r5
 801a792:	f8ad 201a 	strh.w	r2, [sp, #26]
 801a796:	aa02      	add	r2, sp, #8
 801a798:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a79c:	4649      	mov	r1, r9
 801a79e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a7a2:	4643      	mov	r3, r8
 801a7a4:	9600      	str	r6, [sp, #0]
 801a7a6:	f7ff fda3 	bl	801a2f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a7aa:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801a7ae:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a7b2:	4293      	cmp	r3, r2
 801a7b4:	dd13      	ble.n	801a7de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801a7b6:	1a9b      	subs	r3, r3, r2
 801a7b8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801a7bc:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801a7c0:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a7c4:	aa02      	add	r2, sp, #8
 801a7c6:	f8ad 001a 	strh.w	r0, [sp, #26]
 801a7ca:	4628      	mov	r0, r5
 801a7cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a7d0:	4643      	mov	r3, r8
 801a7d2:	f8ad 101e 	strh.w	r1, [sp, #30]
 801a7d6:	4649      	mov	r1, r9
 801a7d8:	9600      	str	r6, [sp, #0]
 801a7da:	f7ff fd89 	bl	801a2f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a7de:	88a2      	ldrh	r2, [r4, #4]
 801a7e0:	8823      	ldrh	r3, [r4, #0]
 801a7e2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801a7e6:	4413      	add	r3, r2
 801a7e8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a7ec:	440a      	add	r2, r1
 801a7ee:	b29b      	uxth	r3, r3
 801a7f0:	b292      	uxth	r2, r2
 801a7f2:	b218      	sxth	r0, r3
 801a7f4:	b211      	sxth	r1, r2
 801a7f6:	4288      	cmp	r0, r1
 801a7f8:	dd13      	ble.n	801a822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801a7fa:	1a9b      	subs	r3, r3, r2
 801a7fc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801a800:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801a804:	aa02      	add	r2, sp, #8
 801a806:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a80a:	4649      	mov	r1, r9
 801a80c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a810:	4643      	mov	r3, r8
 801a812:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a816:	4628      	mov	r0, r5
 801a818:	9600      	str	r6, [sp, #0]
 801a81a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801a81e:	f7ff fd67 	bl	801a2f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a822:	88e2      	ldrh	r2, [r4, #6]
 801a824:	8863      	ldrh	r3, [r4, #2]
 801a826:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a82a:	4413      	add	r3, r2
 801a82c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a830:	440a      	add	r2, r1
 801a832:	b29b      	uxth	r3, r3
 801a834:	b292      	uxth	r2, r2
 801a836:	b218      	sxth	r0, r3
 801a838:	b211      	sxth	r1, r2
 801a83a:	4288      	cmp	r0, r1
 801a83c:	f77f aec8 	ble.w	801a5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801a840:	f9b4 7000 	ldrsh.w	r7, [r4]
 801a844:	1a9b      	subs	r3, r3, r2
 801a846:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a84a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a84e:	4643      	mov	r3, r8
 801a850:	f8ad 7018 	strh.w	r7, [sp, #24]
 801a854:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a858:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a85c:	9600      	str	r6, [sp, #0]
 801a85e:	e779      	b.n	801a754 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801a860:	24001ed8 	.word	0x24001ed8

0801a864 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801a864:	b180      	cbz	r0, 801a888 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801a866:	2903      	cmp	r1, #3
 801a868:	d81c      	bhi.n	801a8a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a86a:	e8df f001 	tbb	[pc, r1]
 801a86e:	1d02      	.short	0x1d02
 801a870:	1f08      	.short	0x1f08
 801a872:	4b10      	ldr	r3, [pc, #64]	; (801a8b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a874:	8818      	ldrh	r0, [r3, #0]
 801a876:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a87a:	4240      	negs	r0, r0
 801a87c:	4770      	bx	lr
 801a87e:	4b0d      	ldr	r3, [pc, #52]	; (801a8b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a880:	8818      	ldrh	r0, [r3, #0]
 801a882:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a886:	4770      	bx	lr
 801a888:	2903      	cmp	r1, #3
 801a88a:	d80b      	bhi.n	801a8a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a88c:	a301      	add	r3, pc, #4	; (adr r3, 801a894 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801a88e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a892:	bf00      	nop
 801a894:	0801a8a9 	.word	0x0801a8a9
 801a898:	0801a87f 	.word	0x0801a87f
 801a89c:	0801a8ad 	.word	0x0801a8ad
 801a8a0:	0801a873 	.word	0x0801a873
 801a8a4:	2000      	movs	r0, #0
 801a8a6:	4770      	bx	lr
 801a8a8:	2001      	movs	r0, #1
 801a8aa:	4770      	bx	lr
 801a8ac:	f04f 30ff 	mov.w	r0, #4294967295
 801a8b0:	4770      	bx	lr
 801a8b2:	bf00      	nop
 801a8b4:	24001ed2 	.word	0x24001ed2

0801a8b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801a8b8:	b180      	cbz	r0, 801a8dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801a8ba:	2903      	cmp	r1, #3
 801a8bc:	d81c      	bhi.n	801a8f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a8be:	e8df f001 	tbb	[pc, r1]
 801a8c2:	021d      	.short	0x021d
 801a8c4:	071f      	.short	0x071f
 801a8c6:	4b10      	ldr	r3, [pc, #64]	; (801a908 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a8c8:	8818      	ldrh	r0, [r3, #0]
 801a8ca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a8ce:	4770      	bx	lr
 801a8d0:	4b0d      	ldr	r3, [pc, #52]	; (801a908 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a8d2:	8818      	ldrh	r0, [r3, #0]
 801a8d4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a8d8:	4240      	negs	r0, r0
 801a8da:	4770      	bx	lr
 801a8dc:	2903      	cmp	r1, #3
 801a8de:	d80b      	bhi.n	801a8f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a8e0:	a301      	add	r3, pc, #4	; (adr r3, 801a8e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801a8e2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a8e6:	bf00      	nop
 801a8e8:	0801a8c7 	.word	0x0801a8c7
 801a8ec:	0801a901 	.word	0x0801a901
 801a8f0:	0801a8d1 	.word	0x0801a8d1
 801a8f4:	0801a8fd 	.word	0x0801a8fd
 801a8f8:	2000      	movs	r0, #0
 801a8fa:	4770      	bx	lr
 801a8fc:	2001      	movs	r0, #1
 801a8fe:	4770      	bx	lr
 801a900:	f04f 30ff 	mov.w	r0, #4294967295
 801a904:	4770      	bx	lr
 801a906:	bf00      	nop
 801a908:	24001ed2 	.word	0x24001ed2

0801a90c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801a90c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a910:	b099      	sub	sp, #100	; 0x64
 801a912:	910b      	str	r1, [sp, #44]	; 0x2c
 801a914:	a914      	add	r1, sp, #80	; 0x50
 801a916:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801a91a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801a91e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801a922:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801a926:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801a92a:	e881 000c 	stmia.w	r1, {r2, r3}
 801a92e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801a932:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801a936:	9309      	str	r3, [sp, #36]	; 0x24
 801a938:	f891 900d 	ldrb.w	r9, [r1, #13]
 801a93c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801a940:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801a944:	9310      	str	r3, [sp, #64]	; 0x40
 801a946:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801a94a:	930c      	str	r3, [sp, #48]	; 0x30
 801a94c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801a950:	798f      	ldrb	r7, [r1, #6]
 801a952:	431f      	orrs	r7, r3
 801a954:	f000 8195 	beq.w	801ac82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a958:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801a95c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801a960:	f891 9007 	ldrb.w	r9, [r1, #7]
 801a964:	ea59 0903 	orrs.w	r9, r9, r3
 801a968:	f000 818b 	beq.w	801ac82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a96c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801a970:	b29b      	uxth	r3, r3
 801a972:	2d00      	cmp	r5, #0
 801a974:	f000 812e 	beq.w	801abd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801a978:	1aed      	subs	r5, r5, r3
 801a97a:	b2ad      	uxth	r5, r5
 801a97c:	042b      	lsls	r3, r5, #16
 801a97e:	d502      	bpl.n	801a986 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801a980:	1b64      	subs	r4, r4, r5
 801a982:	2500      	movs	r5, #0
 801a984:	b224      	sxth	r4, r4
 801a986:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a98a:	a814      	add	r0, sp, #80	; 0x50
 801a98c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801a990:	428c      	cmp	r4, r1
 801a992:	b28b      	uxth	r3, r1
 801a994:	bfbf      	itttt	lt
 801a996:	18ed      	addlt	r5, r5, r3
 801a998:	1b2c      	sublt	r4, r5, r4
 801a99a:	b2a5      	uxthlt	r5, r4
 801a99c:	460c      	movlt	r4, r1
 801a99e:	8891      	ldrh	r1, [r2, #4]
 801a9a0:	440b      	add	r3, r1
 801a9a2:	4621      	mov	r1, r4
 801a9a4:	b21b      	sxth	r3, r3
 801a9a6:	930f      	str	r3, [sp, #60]	; 0x3c
 801a9a8:	88d3      	ldrh	r3, [r2, #6]
 801a9aa:	8852      	ldrh	r2, [r2, #2]
 801a9ac:	4413      	add	r3, r2
 801a9ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a9b0:	b21b      	sxth	r3, r3
 801a9b2:	930d      	str	r3, [sp, #52]	; 0x34
 801a9b4:	4bbd      	ldr	r3, [pc, #756]	; (801acac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801a9b6:	f893 b000 	ldrb.w	fp, [r3]
 801a9ba:	f10b 3cff 	add.w	ip, fp, #4294967295
 801a9be:	f1dc 0300 	rsbs	r3, ip, #0
 801a9c2:	eb43 030c 	adc.w	r3, r3, ip
 801a9c6:	930e      	str	r3, [sp, #56]	; 0x38
 801a9c8:	4653      	mov	r3, sl
 801a9ca:	f7f7 fc24 	bl	8012216 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801a9ce:	4621      	mov	r1, r4
 801a9d0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801a9d4:	4653      	mov	r3, sl
 801a9d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a9d8:	a814      	add	r0, sp, #80	; 0x50
 801a9da:	f7f7 fc39 	bl	8012250 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801a9de:	a918      	add	r1, sp, #96	; 0x60
 801a9e0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801a9e4:	a817      	add	r0, sp, #92	; 0x5c
 801a9e6:	f7f7 fd5f 	bl	80124a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801a9ea:	f1ba 0f00 	cmp.w	sl, #0
 801a9ee:	f040 80f4 	bne.w	801abda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801a9f2:	f1bb 0f01 	cmp.w	fp, #1
 801a9f6:	f040 80f8 	bne.w	801abea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801a9fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9fc:	2b00      	cmp	r3, #0
 801a9fe:	f040 8145 	bne.w	801ac8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801aa02:	b2ba      	uxth	r2, r7
 801aa04:	b905      	cbnz	r5, 801aa08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801aa06:	b16e      	cbz	r6, 801aa24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801aa08:	fb06 5302 	mla	r3, r6, r2, r5
 801aa0c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801aa0e:	4631      	mov	r1, r6
 801aa10:	fb08 f303 	mul.w	r3, r8, r3
 801aa14:	f003 0607 	and.w	r6, r3, #7
 801aa18:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801aa1c:	9328      	str	r3, [sp, #160]	; 0xa0
 801aa1e:	eba9 0301 	sub.w	r3, r9, r1
 801aa22:	930a      	str	r3, [sp, #40]	; 0x28
 801aa24:	4651      	mov	r1, sl
 801aa26:	980e      	ldr	r0, [sp, #56]	; 0x38
 801aa28:	f7ff ff1c 	bl	801a864 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801aa2c:	4681      	mov	r9, r0
 801aa2e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801aa30:	f7ff ff42 	bl	801a8b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801aa34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aa36:	9909      	ldr	r1, [sp, #36]	; 0x24
 801aa38:	4683      	mov	fp, r0
 801aa3a:	eba3 0a01 	sub.w	sl, r3, r1
 801aa3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa40:	459a      	cmp	sl, r3
 801aa42:	bfa8      	it	ge
 801aa44:	469a      	movge	sl, r3
 801aa46:	f1ba 0f00 	cmp.w	sl, #0
 801aa4a:	f340 811a 	ble.w	801ac82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801aa4e:	1b64      	subs	r4, r4, r5
 801aa50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801aa52:	1b1c      	subs	r4, r3, r4
 801aa54:	42bc      	cmp	r4, r7
 801aa56:	bfd4      	ite	le
 801aa58:	ebc5 0504 	rsble	r5, r5, r4
 801aa5c:	ebc5 0507 	rsbgt	r5, r5, r7
 801aa60:	2d00      	cmp	r5, #0
 801aa62:	f340 810e 	ble.w	801ac82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801aa66:	1b52      	subs	r2, r2, r5
 801aa68:	fb08 f302 	mul.w	r3, r8, r2
 801aa6c:	930f      	str	r3, [sp, #60]	; 0x3c
 801aa6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aa70:	2b00      	cmp	r3, #0
 801aa72:	f040 8116 	bne.w	801aca2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801aa76:	4b8e      	ldr	r3, [pc, #568]	; (801acb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801aa78:	6818      	ldr	r0, [r3, #0]
 801aa7a:	6803      	ldr	r3, [r0, #0]
 801aa7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aa7e:	4798      	blx	r3
 801aa80:	2301      	movs	r3, #1
 801aa82:	4a8c      	ldr	r2, [pc, #560]	; (801acb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801aa84:	fa03 f308 	lsl.w	r3, r3, r8
 801aa88:	8811      	ldrh	r1, [r2, #0]
 801aa8a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801aa8e:	3b01      	subs	r3, #1
 801aa90:	b2db      	uxtb	r3, r3
 801aa92:	930e      	str	r3, [sp, #56]	; 0x38
 801aa94:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801aa98:	fb01 2303 	mla	r3, r1, r3, r2
 801aa9c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801aaa0:	930a      	str	r3, [sp, #40]	; 0x28
 801aaa2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aaa4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801aaa8:	9313      	str	r3, [sp, #76]	; 0x4c
 801aaaa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aaac:	0a19      	lsrs	r1, r3, #8
 801aaae:	b2cb      	uxtb	r3, r1
 801aab0:	9312      	str	r3, [sp, #72]	; 0x48
 801aab2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aab4:	b2db      	uxtb	r3, r3
 801aab6:	9311      	str	r3, [sp, #68]	; 0x44
 801aab8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aaba:	095a      	lsrs	r2, r3, #5
 801aabc:	4b7e      	ldr	r3, [pc, #504]	; (801acb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801aabe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aac2:	400b      	ands	r3, r1
 801aac4:	4313      	orrs	r3, r2
 801aac6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801aac8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801aacc:	4313      	orrs	r3, r2
 801aace:	b29b      	uxth	r3, r3
 801aad0:	9310      	str	r3, [sp, #64]	; 0x40
 801aad2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aad4:	781a      	ldrb	r2, [r3, #0]
 801aad6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801aada:	fb05 b919 	mls	r9, r5, r9, fp
 801aade:	4132      	asrs	r2, r6
 801aae0:	fb03 fb05 	mul.w	fp, r3, r5
 801aae4:	930d      	str	r3, [sp, #52]	; 0x34
 801aae6:	b2d2      	uxtb	r2, r2
 801aae8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801aaec:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801aaf0:	f0c0 80f5 	bcc.w	801acde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801aaf4:	46ae      	mov	lr, r5
 801aaf6:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801aafa:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801aafe:	f0c0 80dd 	bcc.w	801acbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801ab02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ab04:	4013      	ands	r3, r2
 801ab06:	d055      	beq.n	801abb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801ab08:	20ff      	movs	r0, #255	; 0xff
 801ab0a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ab0c:	fb90 f1f1 	sdiv	r1, r0, r1
 801ab10:	434b      	muls	r3, r1
 801ab12:	2bfe      	cmp	r3, #254	; 0xfe
 801ab14:	dd03      	ble.n	801ab1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801ab16:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ab18:	4281      	cmp	r1, r0
 801ab1a:	f000 80c4 	beq.w	801aca6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801ab1e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ab20:	f8bc 4000 	ldrh.w	r4, [ip]
 801ab24:	fb11 f303 	smulbb	r3, r1, r3
 801ab28:	1220      	asrs	r0, r4, #8
 801ab2a:	b29b      	uxth	r3, r3
 801ab2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ab30:	1c59      	adds	r1, r3, #1
 801ab32:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ab36:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ab3a:	10e1      	asrs	r1, r4, #3
 801ab3c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ab40:	00e4      	lsls	r4, r4, #3
 801ab42:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ab46:	b29f      	uxth	r7, r3
 801ab48:	43db      	mvns	r3, r3
 801ab4a:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ab4e:	b2db      	uxtb	r3, r3
 801ab50:	b2e4      	uxtb	r4, r4
 801ab52:	9309      	str	r3, [sp, #36]	; 0x24
 801ab54:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ab56:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ab5a:	fb13 f907 	smulbb	r9, r3, r7
 801ab5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab60:	fb00 9003 	mla	r0, r0, r3, r9
 801ab64:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ab66:	fb13 f907 	smulbb	r9, r3, r7
 801ab6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab6c:	b280      	uxth	r0, r0
 801ab6e:	fb01 9103 	mla	r1, r1, r3, r9
 801ab72:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ab74:	fb13 f707 	smulbb	r7, r3, r7
 801ab78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab7a:	b289      	uxth	r1, r1
 801ab7c:	fb04 7403 	mla	r4, r4, r3, r7
 801ab80:	1c43      	adds	r3, r0, #1
 801ab82:	b2a4      	uxth	r4, r4
 801ab84:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ab88:	f104 0901 	add.w	r9, r4, #1
 801ab8c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ab90:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801ab94:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801ab98:	ea49 0000 	orr.w	r0, r9, r0
 801ab9c:	f101 0901 	add.w	r9, r1, #1
 801aba0:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801aba4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801aba8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801abac:	ea40 0009 	orr.w	r0, r0, r9
 801abb0:	f8ac 0000 	strh.w	r0, [ip]
 801abb4:	4446      	add	r6, r8
 801abb6:	b2b6      	uxth	r6, r6
 801abb8:	2e07      	cmp	r6, #7
 801abba:	bf89      	itett	hi
 801abbc:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801abbe:	fa42 f208 	asrls.w	r2, r2, r8
 801abc2:	2600      	movhi	r6, #0
 801abc4:	785a      	ldrbhi	r2, [r3, #1]
 801abc6:	bf8a      	itet	hi
 801abc8:	3301      	addhi	r3, #1
 801abca:	b2d2      	uxtbls	r2, r2
 801abcc:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801abce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801abd0:	449c      	add	ip, r3
 801abd2:	e792      	b.n	801aafa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801abd4:	441c      	add	r4, r3
 801abd6:	b224      	sxth	r4, r4
 801abd8:	e6d5      	b.n	801a986 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801abda:	f1ba 0f01 	cmp.w	sl, #1
 801abde:	f47f af0c 	bne.w	801a9fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801abe2:	f1bb 0f01 	cmp.w	fp, #1
 801abe6:	f47f af08 	bne.w	801a9fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801abea:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 801acb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801abee:	f8db 0000 	ldr.w	r0, [fp]
 801abf2:	6803      	ldr	r3, [r0, #0]
 801abf4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801abf6:	4798      	blx	r3
 801abf8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801abfc:	465a      	mov	r2, fp
 801abfe:	d006      	beq.n	801ac0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ac00:	f1b8 0f04 	cmp.w	r8, #4
 801ac04:	d140      	bne.n	801ac88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ac06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac08:	3300      	adds	r3, #0
 801ac0a:	bf18      	it	ne
 801ac0c:	2301      	movne	r3, #1
 801ac0e:	0580      	lsls	r0, r0, #22
 801ac10:	d56e      	bpl.n	801acf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ac12:	f1b8 0f08 	cmp.w	r8, #8
 801ac16:	d16b      	bne.n	801acf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ac18:	2b00      	cmp	r3, #0
 801ac1a:	bf0c      	ite	eq
 801ac1c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ac20:	f44f 7180 	movne.w	r1, #256	; 0x100
 801ac24:	2d00      	cmp	r5, #0
 801ac26:	f47f aee8 	bne.w	801a9fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ac2a:	2e00      	cmp	r6, #0
 801ac2c:	f47f aee5 	bne.w	801a9fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ac30:	19e3      	adds	r3, r4, r7
 801ac32:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ac34:	4283      	cmp	r3, r0
 801ac36:	f73f aee0 	bgt.w	801a9fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ac3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac3c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ac3e:	444b      	add	r3, r9
 801ac40:	4283      	cmp	r3, r0
 801ac42:	f73f aeda 	bgt.w	801a9fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ac46:	b2bf      	uxth	r7, r7
 801ac48:	f1b8 0f08 	cmp.w	r8, #8
 801ac4c:	6810      	ldr	r0, [r2, #0]
 801ac4e:	f04f 0500 	mov.w	r5, #0
 801ac52:	bf18      	it	ne
 801ac54:	3701      	addne	r7, #1
 801ac56:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ac5a:	6804      	ldr	r4, [r0, #0]
 801ac5c:	bf18      	it	ne
 801ac5e:	f027 0701 	bicne.w	r7, r7, #1
 801ac62:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ac66:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ac6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ac6c:	bf18      	it	ne
 801ac6e:	b2bf      	uxthne	r7, r7
 801ac70:	9104      	str	r1, [sp, #16]
 801ac72:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ac74:	e9cd 7900 	strd	r7, r9, [sp]
 801ac78:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ac7c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ac7e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ac80:	47a0      	blx	r4
 801ac82:	b019      	add	sp, #100	; 0x64
 801ac84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac88:	2300      	movs	r3, #0
 801ac8a:	e7c0      	b.n	801ac0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ac8c:	2208      	movs	r2, #8
 801ac8e:	fb92 f3f8 	sdiv	r3, r2, r8
 801ac92:	1e5a      	subs	r2, r3, #1
 801ac94:	443a      	add	r2, r7
 801ac96:	fb92 f2f3 	sdiv	r2, r2, r3
 801ac9a:	fb12 f203 	smulbb	r2, r2, r3
 801ac9e:	b292      	uxth	r2, r2
 801aca0:	e6b0      	b.n	801aa04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801aca2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801aca4:	e6ec      	b.n	801aa80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801aca6:	9810      	ldr	r0, [sp, #64]	; 0x40
 801aca8:	e782      	b.n	801abb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801acaa:	bf00      	nop
 801acac:	24001ed0 	.word	0x24001ed0
 801acb0:	24001ed8 	.word	0x24001ed8
 801acb4:	24001ed2 	.word	0x24001ed2
 801acb8:	00fff800 	.word	0x00fff800
 801acbc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801acbe:	b153      	cbz	r3, 801acd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801acc0:	441e      	add	r6, r3
 801acc2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801acc4:	b2b6      	uxth	r6, r6
 801acc6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801acca:	f006 0607 	and.w	r6, r6, #7
 801acce:	781a      	ldrb	r2, [r3, #0]
 801acd0:	9328      	str	r3, [sp, #160]	; 0xa0
 801acd2:	4132      	asrs	r2, r6
 801acd4:	b2d2      	uxtb	r2, r2
 801acd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801acd8:	445b      	add	r3, fp
 801acda:	930a      	str	r3, [sp, #40]	; 0x28
 801acdc:	e706      	b.n	801aaec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801acde:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ace0:	2b00      	cmp	r3, #0
 801ace2:	d1ce      	bne.n	801ac82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ace4:	4b05      	ldr	r3, [pc, #20]	; (801acfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801ace6:	6818      	ldr	r0, [r3, #0]
 801ace8:	6803      	ldr	r3, [r0, #0]
 801acea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801acec:	4798      	blx	r3
 801acee:	e7c8      	b.n	801ac82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801acf0:	2b00      	cmp	r3, #0
 801acf2:	f43f ae82 	beq.w	801a9fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801acf6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801acfa:	e793      	b.n	801ac24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801acfc:	24001ed8 	.word	0x24001ed8

0801ad00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ad00:	b538      	push	{r3, r4, r5, lr}
 801ad02:	4c15      	ldr	r4, [pc, #84]	; (801ad58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ad04:	4605      	mov	r5, r0
 801ad06:	7823      	ldrb	r3, [r4, #0]
 801ad08:	f3bf 8f5b 	dmb	ish
 801ad0c:	07da      	lsls	r2, r3, #31
 801ad0e:	d40b      	bmi.n	801ad28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ad10:	4620      	mov	r0, r4
 801ad12:	f007 febe 	bl	8022a92 <__cxa_guard_acquire>
 801ad16:	b138      	cbz	r0, 801ad28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ad18:	4620      	mov	r0, r4
 801ad1a:	f007 fec6 	bl	8022aaa <__cxa_guard_release>
 801ad1e:	4a0f      	ldr	r2, [pc, #60]	; (801ad5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ad20:	490f      	ldr	r1, [pc, #60]	; (801ad60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801ad22:	4810      	ldr	r0, [pc, #64]	; (801ad64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ad24:	f007 feae 	bl	8022a84 <__aeabi_atexit>
 801ad28:	4c0f      	ldr	r4, [pc, #60]	; (801ad68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801ad2a:	7823      	ldrb	r3, [r4, #0]
 801ad2c:	f3bf 8f5b 	dmb	ish
 801ad30:	07db      	lsls	r3, r3, #31
 801ad32:	d40b      	bmi.n	801ad4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ad34:	4620      	mov	r0, r4
 801ad36:	f007 feac 	bl	8022a92 <__cxa_guard_acquire>
 801ad3a:	b138      	cbz	r0, 801ad4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ad3c:	4620      	mov	r0, r4
 801ad3e:	f007 feb4 	bl	8022aaa <__cxa_guard_release>
 801ad42:	4a06      	ldr	r2, [pc, #24]	; (801ad5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ad44:	4909      	ldr	r1, [pc, #36]	; (801ad6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801ad46:	480a      	ldr	r0, [pc, #40]	; (801ad70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ad48:	f007 fe9c 	bl	8022a84 <__aeabi_atexit>
 801ad4c:	4b05      	ldr	r3, [pc, #20]	; (801ad64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ad4e:	612b      	str	r3, [r5, #16]
 801ad50:	4b07      	ldr	r3, [pc, #28]	; (801ad70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ad52:	616b      	str	r3, [r5, #20]
 801ad54:	bd38      	pop	{r3, r4, r5, pc}
 801ad56:	bf00      	nop
 801ad58:	24001fb0 	.word	0x24001fb0
 801ad5c:	24000000 	.word	0x24000000
 801ad60:	08017af5 	.word	0x08017af5
 801ad64:	24000064 	.word	0x24000064
 801ad68:	24001fb4 	.word	0x24001fb4
 801ad6c:	08017af3 	.word	0x08017af3
 801ad70:	24000068 	.word	0x24000068

0801ad74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801ad74:	b538      	push	{r3, r4, r5, lr}
 801ad76:	4c15      	ldr	r4, [pc, #84]	; (801adcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801ad78:	4605      	mov	r5, r0
 801ad7a:	7823      	ldrb	r3, [r4, #0]
 801ad7c:	f3bf 8f5b 	dmb	ish
 801ad80:	07da      	lsls	r2, r3, #31
 801ad82:	d40b      	bmi.n	801ad9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ad84:	4620      	mov	r0, r4
 801ad86:	f007 fe84 	bl	8022a92 <__cxa_guard_acquire>
 801ad8a:	b138      	cbz	r0, 801ad9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ad8c:	4620      	mov	r0, r4
 801ad8e:	f007 fe8c 	bl	8022aaa <__cxa_guard_release>
 801ad92:	4a0f      	ldr	r2, [pc, #60]	; (801add0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801ad94:	490f      	ldr	r1, [pc, #60]	; (801add4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801ad96:	4810      	ldr	r0, [pc, #64]	; (801add8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801ad98:	f007 fe74 	bl	8022a84 <__aeabi_atexit>
 801ad9c:	4c0f      	ldr	r4, [pc, #60]	; (801addc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801ad9e:	7823      	ldrb	r3, [r4, #0]
 801ada0:	f3bf 8f5b 	dmb	ish
 801ada4:	07db      	lsls	r3, r3, #31
 801ada6:	d40b      	bmi.n	801adc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801ada8:	4620      	mov	r0, r4
 801adaa:	f007 fe72 	bl	8022a92 <__cxa_guard_acquire>
 801adae:	b138      	cbz	r0, 801adc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801adb0:	4620      	mov	r0, r4
 801adb2:	f007 fe7a 	bl	8022aaa <__cxa_guard_release>
 801adb6:	4a06      	ldr	r2, [pc, #24]	; (801add0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801adb8:	4909      	ldr	r1, [pc, #36]	; (801ade0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801adba:	480a      	ldr	r0, [pc, #40]	; (801ade4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801adbc:	f007 fe62 	bl	8022a84 <__aeabi_atexit>
 801adc0:	4b05      	ldr	r3, [pc, #20]	; (801add8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801adc2:	60ab      	str	r3, [r5, #8]
 801adc4:	4b07      	ldr	r3, [pc, #28]	; (801ade4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801adc6:	60eb      	str	r3, [r5, #12]
 801adc8:	bd38      	pop	{r3, r4, r5, pc}
 801adca:	bf00      	nop
 801adcc:	24001f88 	.word	0x24001f88
 801add0:	24000000 	.word	0x24000000
 801add4:	08017af9 	.word	0x08017af9
 801add8:	2400003c 	.word	0x2400003c
 801addc:	24001f8c 	.word	0x24001f8c
 801ade0:	08017af7 	.word	0x08017af7
 801ade4:	24000040 	.word	0x24000040

0801ade8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801ade8:	b510      	push	{r4, lr}
 801adea:	4604      	mov	r4, r0
 801adec:	f7ff ff88 	bl	801ad00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801adf0:	4620      	mov	r0, r4
 801adf2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801adf6:	f7ff bfbd 	b.w	801ad74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801adfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801adfc:	b538      	push	{r3, r4, r5, lr}
 801adfe:	4c15      	ldr	r4, [pc, #84]	; (801ae54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801ae00:	4605      	mov	r5, r0
 801ae02:	7823      	ldrb	r3, [r4, #0]
 801ae04:	f3bf 8f5b 	dmb	ish
 801ae08:	07da      	lsls	r2, r3, #31
 801ae0a:	d40b      	bmi.n	801ae24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ae0c:	4620      	mov	r0, r4
 801ae0e:	f007 fe40 	bl	8022a92 <__cxa_guard_acquire>
 801ae12:	b138      	cbz	r0, 801ae24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ae14:	4620      	mov	r0, r4
 801ae16:	f007 fe48 	bl	8022aaa <__cxa_guard_release>
 801ae1a:	4a0f      	ldr	r2, [pc, #60]	; (801ae58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ae1c:	490f      	ldr	r1, [pc, #60]	; (801ae5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801ae1e:	4810      	ldr	r0, [pc, #64]	; (801ae60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ae20:	f007 fe30 	bl	8022a84 <__aeabi_atexit>
 801ae24:	4c0f      	ldr	r4, [pc, #60]	; (801ae64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801ae26:	7823      	ldrb	r3, [r4, #0]
 801ae28:	f3bf 8f5b 	dmb	ish
 801ae2c:	07db      	lsls	r3, r3, #31
 801ae2e:	d40b      	bmi.n	801ae48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ae30:	4620      	mov	r0, r4
 801ae32:	f007 fe2e 	bl	8022a92 <__cxa_guard_acquire>
 801ae36:	b138      	cbz	r0, 801ae48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ae38:	4620      	mov	r0, r4
 801ae3a:	f007 fe36 	bl	8022aaa <__cxa_guard_release>
 801ae3e:	4a06      	ldr	r2, [pc, #24]	; (801ae58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ae40:	4909      	ldr	r1, [pc, #36]	; (801ae68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801ae42:	480a      	ldr	r0, [pc, #40]	; (801ae6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ae44:	f007 fe1e 	bl	8022a84 <__aeabi_atexit>
 801ae48:	4b05      	ldr	r3, [pc, #20]	; (801ae60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ae4a:	622b      	str	r3, [r5, #32]
 801ae4c:	4b07      	ldr	r3, [pc, #28]	; (801ae6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ae4e:	626b      	str	r3, [r5, #36]	; 0x24
 801ae50:	bd38      	pop	{r3, r4, r5, pc}
 801ae52:	bf00      	nop
 801ae54:	24001fb8 	.word	0x24001fb8
 801ae58:	24000000 	.word	0x24000000
 801ae5c:	08017aed 	.word	0x08017aed
 801ae60:	2400006c 	.word	0x2400006c
 801ae64:	24001fbc 	.word	0x24001fbc
 801ae68:	08017aeb 	.word	0x08017aeb
 801ae6c:	24000070 	.word	0x24000070

0801ae70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801ae70:	b538      	push	{r3, r4, r5, lr}
 801ae72:	4c15      	ldr	r4, [pc, #84]	; (801aec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801ae74:	4605      	mov	r5, r0
 801ae76:	7823      	ldrb	r3, [r4, #0]
 801ae78:	f3bf 8f5b 	dmb	ish
 801ae7c:	07da      	lsls	r2, r3, #31
 801ae7e:	d40b      	bmi.n	801ae98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ae80:	4620      	mov	r0, r4
 801ae82:	f007 fe06 	bl	8022a92 <__cxa_guard_acquire>
 801ae86:	b138      	cbz	r0, 801ae98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ae88:	4620      	mov	r0, r4
 801ae8a:	f007 fe0e 	bl	8022aaa <__cxa_guard_release>
 801ae8e:	4a0f      	ldr	r2, [pc, #60]	; (801aecc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ae90:	490f      	ldr	r1, [pc, #60]	; (801aed0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801ae92:	4810      	ldr	r0, [pc, #64]	; (801aed4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ae94:	f007 fdf6 	bl	8022a84 <__aeabi_atexit>
 801ae98:	4c0f      	ldr	r4, [pc, #60]	; (801aed8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801ae9a:	7823      	ldrb	r3, [r4, #0]
 801ae9c:	f3bf 8f5b 	dmb	ish
 801aea0:	07db      	lsls	r3, r3, #31
 801aea2:	d40b      	bmi.n	801aebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801aea4:	4620      	mov	r0, r4
 801aea6:	f007 fdf4 	bl	8022a92 <__cxa_guard_acquire>
 801aeaa:	b138      	cbz	r0, 801aebc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801aeac:	4620      	mov	r0, r4
 801aeae:	f007 fdfc 	bl	8022aaa <__cxa_guard_release>
 801aeb2:	4a06      	ldr	r2, [pc, #24]	; (801aecc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801aeb4:	4909      	ldr	r1, [pc, #36]	; (801aedc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801aeb6:	480a      	ldr	r0, [pc, #40]	; (801aee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801aeb8:	f007 fde4 	bl	8022a84 <__aeabi_atexit>
 801aebc:	4b05      	ldr	r3, [pc, #20]	; (801aed4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801aebe:	61ab      	str	r3, [r5, #24]
 801aec0:	4b07      	ldr	r3, [pc, #28]	; (801aee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801aec2:	61eb      	str	r3, [r5, #28]
 801aec4:	bd38      	pop	{r3, r4, r5, pc}
 801aec6:	bf00      	nop
 801aec8:	24001f90 	.word	0x24001f90
 801aecc:	24000000 	.word	0x24000000
 801aed0:	08017af1 	.word	0x08017af1
 801aed4:	24000044 	.word	0x24000044
 801aed8:	24001f94 	.word	0x24001f94
 801aedc:	08017aef 	.word	0x08017aef
 801aee0:	24000048 	.word	0x24000048

0801aee4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801aee4:	b510      	push	{r4, lr}
 801aee6:	4604      	mov	r4, r0
 801aee8:	f7ff ff88 	bl	801adfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801aeec:	4620      	mov	r0, r4
 801aeee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aef2:	f7ff bfbd 	b.w	801ae70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801aef8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801aef8:	b538      	push	{r3, r4, r5, lr}
 801aefa:	4c15      	ldr	r4, [pc, #84]	; (801af50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801aefc:	4605      	mov	r5, r0
 801aefe:	7823      	ldrb	r3, [r4, #0]
 801af00:	f3bf 8f5b 	dmb	ish
 801af04:	07da      	lsls	r2, r3, #31
 801af06:	d40b      	bmi.n	801af20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801af08:	4620      	mov	r0, r4
 801af0a:	f007 fdc2 	bl	8022a92 <__cxa_guard_acquire>
 801af0e:	b138      	cbz	r0, 801af20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801af10:	4620      	mov	r0, r4
 801af12:	f007 fdca 	bl	8022aaa <__cxa_guard_release>
 801af16:	4a0f      	ldr	r2, [pc, #60]	; (801af54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801af18:	490f      	ldr	r1, [pc, #60]	; (801af58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801af1a:	4810      	ldr	r0, [pc, #64]	; (801af5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801af1c:	f007 fdb2 	bl	8022a84 <__aeabi_atexit>
 801af20:	4c0f      	ldr	r4, [pc, #60]	; (801af60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801af22:	7823      	ldrb	r3, [r4, #0]
 801af24:	f3bf 8f5b 	dmb	ish
 801af28:	07db      	lsls	r3, r3, #31
 801af2a:	d40b      	bmi.n	801af44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801af2c:	4620      	mov	r0, r4
 801af2e:	f007 fdb0 	bl	8022a92 <__cxa_guard_acquire>
 801af32:	b138      	cbz	r0, 801af44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801af34:	4620      	mov	r0, r4
 801af36:	f007 fdb8 	bl	8022aaa <__cxa_guard_release>
 801af3a:	4a06      	ldr	r2, [pc, #24]	; (801af54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801af3c:	4909      	ldr	r1, [pc, #36]	; (801af64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801af3e:	480a      	ldr	r0, [pc, #40]	; (801af68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801af40:	f007 fda0 	bl	8022a84 <__aeabi_atexit>
 801af44:	4b05      	ldr	r3, [pc, #20]	; (801af5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801af46:	632b      	str	r3, [r5, #48]	; 0x30
 801af48:	4b07      	ldr	r3, [pc, #28]	; (801af68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801af4a:	636b      	str	r3, [r5, #52]	; 0x34
 801af4c:	bd38      	pop	{r3, r4, r5, pc}
 801af4e:	bf00      	nop
 801af50:	24001fc8 	.word	0x24001fc8
 801af54:	24000000 	.word	0x24000000
 801af58:	08017ae5 	.word	0x08017ae5
 801af5c:	2400007c 	.word	0x2400007c
 801af60:	24001fcc 	.word	0x24001fcc
 801af64:	08017ae3 	.word	0x08017ae3
 801af68:	24000080 	.word	0x24000080

0801af6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801af6c:	b538      	push	{r3, r4, r5, lr}
 801af6e:	4c15      	ldr	r4, [pc, #84]	; (801afc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801af70:	4605      	mov	r5, r0
 801af72:	7823      	ldrb	r3, [r4, #0]
 801af74:	f3bf 8f5b 	dmb	ish
 801af78:	07da      	lsls	r2, r3, #31
 801af7a:	d40b      	bmi.n	801af94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801af7c:	4620      	mov	r0, r4
 801af7e:	f007 fd88 	bl	8022a92 <__cxa_guard_acquire>
 801af82:	b138      	cbz	r0, 801af94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801af84:	4620      	mov	r0, r4
 801af86:	f007 fd90 	bl	8022aaa <__cxa_guard_release>
 801af8a:	4a0f      	ldr	r2, [pc, #60]	; (801afc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801af8c:	490f      	ldr	r1, [pc, #60]	; (801afcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801af8e:	4810      	ldr	r0, [pc, #64]	; (801afd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801af90:	f007 fd78 	bl	8022a84 <__aeabi_atexit>
 801af94:	4c0f      	ldr	r4, [pc, #60]	; (801afd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801af96:	7823      	ldrb	r3, [r4, #0]
 801af98:	f3bf 8f5b 	dmb	ish
 801af9c:	07db      	lsls	r3, r3, #31
 801af9e:	d40b      	bmi.n	801afb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801afa0:	4620      	mov	r0, r4
 801afa2:	f007 fd76 	bl	8022a92 <__cxa_guard_acquire>
 801afa6:	b138      	cbz	r0, 801afb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801afa8:	4620      	mov	r0, r4
 801afaa:	f007 fd7e 	bl	8022aaa <__cxa_guard_release>
 801afae:	4a06      	ldr	r2, [pc, #24]	; (801afc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801afb0:	4909      	ldr	r1, [pc, #36]	; (801afd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801afb2:	480a      	ldr	r0, [pc, #40]	; (801afdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801afb4:	f007 fd66 	bl	8022a84 <__aeabi_atexit>
 801afb8:	4b05      	ldr	r3, [pc, #20]	; (801afd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801afba:	62ab      	str	r3, [r5, #40]	; 0x28
 801afbc:	4b07      	ldr	r3, [pc, #28]	; (801afdc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801afbe:	62eb      	str	r3, [r5, #44]	; 0x2c
 801afc0:	bd38      	pop	{r3, r4, r5, pc}
 801afc2:	bf00      	nop
 801afc4:	24001f98 	.word	0x24001f98
 801afc8:	24000000 	.word	0x24000000
 801afcc:	08017ae9 	.word	0x08017ae9
 801afd0:	2400004c 	.word	0x2400004c
 801afd4:	24001f9c 	.word	0x24001f9c
 801afd8:	08017ae7 	.word	0x08017ae7
 801afdc:	24000050 	.word	0x24000050

0801afe0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801afe0:	b510      	push	{r4, lr}
 801afe2:	4604      	mov	r4, r0
 801afe4:	f7ff ff88 	bl	801aef8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801afe8:	4620      	mov	r0, r4
 801afea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801afee:	f7ff bfbd 	b.w	801af6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801aff4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801aff4:	b538      	push	{r3, r4, r5, lr}
 801aff6:	4c15      	ldr	r4, [pc, #84]	; (801b04c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801aff8:	4605      	mov	r5, r0
 801affa:	7823      	ldrb	r3, [r4, #0]
 801affc:	f3bf 8f5b 	dmb	ish
 801b000:	07da      	lsls	r2, r3, #31
 801b002:	d40b      	bmi.n	801b01c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b004:	4620      	mov	r0, r4
 801b006:	f007 fd44 	bl	8022a92 <__cxa_guard_acquire>
 801b00a:	b138      	cbz	r0, 801b01c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b00c:	4620      	mov	r0, r4
 801b00e:	f007 fd4c 	bl	8022aaa <__cxa_guard_release>
 801b012:	4a0f      	ldr	r2, [pc, #60]	; (801b050 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b014:	490f      	ldr	r1, [pc, #60]	; (801b054 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801b016:	4810      	ldr	r0, [pc, #64]	; (801b058 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b018:	f007 fd34 	bl	8022a84 <__aeabi_atexit>
 801b01c:	4c0f      	ldr	r4, [pc, #60]	; (801b05c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801b01e:	7823      	ldrb	r3, [r4, #0]
 801b020:	f3bf 8f5b 	dmb	ish
 801b024:	07db      	lsls	r3, r3, #31
 801b026:	d40b      	bmi.n	801b040 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b028:	4620      	mov	r0, r4
 801b02a:	f007 fd32 	bl	8022a92 <__cxa_guard_acquire>
 801b02e:	b138      	cbz	r0, 801b040 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b030:	4620      	mov	r0, r4
 801b032:	f007 fd3a 	bl	8022aaa <__cxa_guard_release>
 801b036:	4a06      	ldr	r2, [pc, #24]	; (801b050 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b038:	4909      	ldr	r1, [pc, #36]	; (801b060 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801b03a:	480a      	ldr	r0, [pc, #40]	; (801b064 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b03c:	f007 fd22 	bl	8022a84 <__aeabi_atexit>
 801b040:	4b05      	ldr	r3, [pc, #20]	; (801b058 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b042:	652b      	str	r3, [r5, #80]	; 0x50
 801b044:	4b07      	ldr	r3, [pc, #28]	; (801b064 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b046:	656b      	str	r3, [r5, #84]	; 0x54
 801b048:	bd38      	pop	{r3, r4, r5, pc}
 801b04a:	bf00      	nop
 801b04c:	24001fd0 	.word	0x24001fd0
 801b050:	24000000 	.word	0x24000000
 801b054:	08017ad5 	.word	0x08017ad5
 801b058:	24000084 	.word	0x24000084
 801b05c:	24001fd4 	.word	0x24001fd4
 801b060:	08017ad3 	.word	0x08017ad3
 801b064:	24000088 	.word	0x24000088

0801b068 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801b068:	b538      	push	{r3, r4, r5, lr}
 801b06a:	4c15      	ldr	r4, [pc, #84]	; (801b0c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801b06c:	4605      	mov	r5, r0
 801b06e:	7823      	ldrb	r3, [r4, #0]
 801b070:	f3bf 8f5b 	dmb	ish
 801b074:	07da      	lsls	r2, r3, #31
 801b076:	d40b      	bmi.n	801b090 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b078:	4620      	mov	r0, r4
 801b07a:	f007 fd0a 	bl	8022a92 <__cxa_guard_acquire>
 801b07e:	b138      	cbz	r0, 801b090 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b080:	4620      	mov	r0, r4
 801b082:	f007 fd12 	bl	8022aaa <__cxa_guard_release>
 801b086:	4a0f      	ldr	r2, [pc, #60]	; (801b0c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b088:	490f      	ldr	r1, [pc, #60]	; (801b0c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801b08a:	4810      	ldr	r0, [pc, #64]	; (801b0cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b08c:	f007 fcfa 	bl	8022a84 <__aeabi_atexit>
 801b090:	4c0f      	ldr	r4, [pc, #60]	; (801b0d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801b092:	7823      	ldrb	r3, [r4, #0]
 801b094:	f3bf 8f5b 	dmb	ish
 801b098:	07db      	lsls	r3, r3, #31
 801b09a:	d40b      	bmi.n	801b0b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b09c:	4620      	mov	r0, r4
 801b09e:	f007 fcf8 	bl	8022a92 <__cxa_guard_acquire>
 801b0a2:	b138      	cbz	r0, 801b0b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b0a4:	4620      	mov	r0, r4
 801b0a6:	f007 fd00 	bl	8022aaa <__cxa_guard_release>
 801b0aa:	4a06      	ldr	r2, [pc, #24]	; (801b0c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b0ac:	4909      	ldr	r1, [pc, #36]	; (801b0d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801b0ae:	480a      	ldr	r0, [pc, #40]	; (801b0d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b0b0:	f007 fce8 	bl	8022a84 <__aeabi_atexit>
 801b0b4:	4b05      	ldr	r3, [pc, #20]	; (801b0cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b0b6:	64ab      	str	r3, [r5, #72]	; 0x48
 801b0b8:	4b07      	ldr	r3, [pc, #28]	; (801b0d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b0ba:	64eb      	str	r3, [r5, #76]	; 0x4c
 801b0bc:	bd38      	pop	{r3, r4, r5, pc}
 801b0be:	bf00      	nop
 801b0c0:	24001fd8 	.word	0x24001fd8
 801b0c4:	24000000 	.word	0x24000000
 801b0c8:	08017ad9 	.word	0x08017ad9
 801b0cc:	2400008c 	.word	0x2400008c
 801b0d0:	24001fdc 	.word	0x24001fdc
 801b0d4:	08017ad7 	.word	0x08017ad7
 801b0d8:	24000090 	.word	0x24000090

0801b0dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801b0dc:	b538      	push	{r3, r4, r5, lr}
 801b0de:	4c15      	ldr	r4, [pc, #84]	; (801b134 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801b0e0:	4605      	mov	r5, r0
 801b0e2:	7823      	ldrb	r3, [r4, #0]
 801b0e4:	f3bf 8f5b 	dmb	ish
 801b0e8:	07da      	lsls	r2, r3, #31
 801b0ea:	d40b      	bmi.n	801b104 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801b0ec:	4620      	mov	r0, r4
 801b0ee:	f007 fcd0 	bl	8022a92 <__cxa_guard_acquire>
 801b0f2:	b138      	cbz	r0, 801b104 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801b0f4:	4620      	mov	r0, r4
 801b0f6:	f007 fcd8 	bl	8022aaa <__cxa_guard_release>
 801b0fa:	4a0f      	ldr	r2, [pc, #60]	; (801b138 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801b0fc:	490f      	ldr	r1, [pc, #60]	; (801b13c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801b0fe:	4810      	ldr	r0, [pc, #64]	; (801b140 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801b100:	f007 fcc0 	bl	8022a84 <__aeabi_atexit>
 801b104:	4c0f      	ldr	r4, [pc, #60]	; (801b144 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801b106:	7823      	ldrb	r3, [r4, #0]
 801b108:	f3bf 8f5b 	dmb	ish
 801b10c:	07db      	lsls	r3, r3, #31
 801b10e:	d40b      	bmi.n	801b128 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801b110:	4620      	mov	r0, r4
 801b112:	f007 fcbe 	bl	8022a92 <__cxa_guard_acquire>
 801b116:	b138      	cbz	r0, 801b128 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801b118:	4620      	mov	r0, r4
 801b11a:	f007 fcc6 	bl	8022aaa <__cxa_guard_release>
 801b11e:	4a06      	ldr	r2, [pc, #24]	; (801b138 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801b120:	4909      	ldr	r1, [pc, #36]	; (801b148 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801b122:	480a      	ldr	r0, [pc, #40]	; (801b14c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801b124:	f007 fcae 	bl	8022a84 <__aeabi_atexit>
 801b128:	4b05      	ldr	r3, [pc, #20]	; (801b140 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801b12a:	642b      	str	r3, [r5, #64]	; 0x40
 801b12c:	4b07      	ldr	r3, [pc, #28]	; (801b14c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801b12e:	646b      	str	r3, [r5, #68]	; 0x44
 801b130:	bd38      	pop	{r3, r4, r5, pc}
 801b132:	bf00      	nop
 801b134:	24001fa0 	.word	0x24001fa0
 801b138:	24000000 	.word	0x24000000
 801b13c:	08017add 	.word	0x08017add
 801b140:	24000054 	.word	0x24000054
 801b144:	24001fa4 	.word	0x24001fa4
 801b148:	08017adb 	.word	0x08017adb
 801b14c:	24000058 	.word	0x24000058

0801b150 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801b150:	b538      	push	{r3, r4, r5, lr}
 801b152:	4c15      	ldr	r4, [pc, #84]	; (801b1a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801b154:	4605      	mov	r5, r0
 801b156:	7823      	ldrb	r3, [r4, #0]
 801b158:	f3bf 8f5b 	dmb	ish
 801b15c:	07da      	lsls	r2, r3, #31
 801b15e:	d40b      	bmi.n	801b178 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801b160:	4620      	mov	r0, r4
 801b162:	f007 fc96 	bl	8022a92 <__cxa_guard_acquire>
 801b166:	b138      	cbz	r0, 801b178 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801b168:	4620      	mov	r0, r4
 801b16a:	f007 fc9e 	bl	8022aaa <__cxa_guard_release>
 801b16e:	4a0f      	ldr	r2, [pc, #60]	; (801b1ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801b170:	490f      	ldr	r1, [pc, #60]	; (801b1b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801b172:	4810      	ldr	r0, [pc, #64]	; (801b1b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801b174:	f007 fc86 	bl	8022a84 <__aeabi_atexit>
 801b178:	4c0f      	ldr	r4, [pc, #60]	; (801b1b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801b17a:	7823      	ldrb	r3, [r4, #0]
 801b17c:	f3bf 8f5b 	dmb	ish
 801b180:	07db      	lsls	r3, r3, #31
 801b182:	d40b      	bmi.n	801b19c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801b184:	4620      	mov	r0, r4
 801b186:	f007 fc84 	bl	8022a92 <__cxa_guard_acquire>
 801b18a:	b138      	cbz	r0, 801b19c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801b18c:	4620      	mov	r0, r4
 801b18e:	f007 fc8c 	bl	8022aaa <__cxa_guard_release>
 801b192:	4a06      	ldr	r2, [pc, #24]	; (801b1ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801b194:	4909      	ldr	r1, [pc, #36]	; (801b1bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801b196:	480a      	ldr	r0, [pc, #40]	; (801b1c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801b198:	f007 fc74 	bl	8022a84 <__aeabi_atexit>
 801b19c:	4b05      	ldr	r3, [pc, #20]	; (801b1b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801b19e:	63ab      	str	r3, [r5, #56]	; 0x38
 801b1a0:	4b07      	ldr	r3, [pc, #28]	; (801b1c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801b1a2:	63eb      	str	r3, [r5, #60]	; 0x3c
 801b1a4:	bd38      	pop	{r3, r4, r5, pc}
 801b1a6:	bf00      	nop
 801b1a8:	24001fc0 	.word	0x24001fc0
 801b1ac:	24000000 	.word	0x24000000
 801b1b0:	08017ae1 	.word	0x08017ae1
 801b1b4:	24000074 	.word	0x24000074
 801b1b8:	24001fc4 	.word	0x24001fc4
 801b1bc:	08017adf 	.word	0x08017adf
 801b1c0:	24000078 	.word	0x24000078

0801b1c4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801b1c4:	b510      	push	{r4, lr}
 801b1c6:	4604      	mov	r4, r0
 801b1c8:	f7ff ff14 	bl	801aff4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801b1cc:	4620      	mov	r0, r4
 801b1ce:	f7ff ff85 	bl	801b0dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801b1d2:	4620      	mov	r0, r4
 801b1d4:	f7ff ff48 	bl	801b068 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801b1d8:	4620      	mov	r0, r4
 801b1da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b1de:	f7ff bfb7 	b.w	801b150 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801b1e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801b1e4:	b538      	push	{r3, r4, r5, lr}
 801b1e6:	4c15      	ldr	r4, [pc, #84]	; (801b23c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801b1e8:	4605      	mov	r5, r0
 801b1ea:	7823      	ldrb	r3, [r4, #0]
 801b1ec:	f3bf 8f5b 	dmb	ish
 801b1f0:	07da      	lsls	r2, r3, #31
 801b1f2:	d40b      	bmi.n	801b20c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801b1f4:	4620      	mov	r0, r4
 801b1f6:	f007 fc4c 	bl	8022a92 <__cxa_guard_acquire>
 801b1fa:	b138      	cbz	r0, 801b20c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801b1fc:	4620      	mov	r0, r4
 801b1fe:	f007 fc54 	bl	8022aaa <__cxa_guard_release>
 801b202:	4a0f      	ldr	r2, [pc, #60]	; (801b240 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801b204:	490f      	ldr	r1, [pc, #60]	; (801b244 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801b206:	4810      	ldr	r0, [pc, #64]	; (801b248 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801b208:	f007 fc3c 	bl	8022a84 <__aeabi_atexit>
 801b20c:	4c0f      	ldr	r4, [pc, #60]	; (801b24c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801b20e:	7823      	ldrb	r3, [r4, #0]
 801b210:	f3bf 8f5b 	dmb	ish
 801b214:	07db      	lsls	r3, r3, #31
 801b216:	d40b      	bmi.n	801b230 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801b218:	4620      	mov	r0, r4
 801b21a:	f007 fc3a 	bl	8022a92 <__cxa_guard_acquire>
 801b21e:	b138      	cbz	r0, 801b230 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801b220:	4620      	mov	r0, r4
 801b222:	f007 fc42 	bl	8022aaa <__cxa_guard_release>
 801b226:	4a06      	ldr	r2, [pc, #24]	; (801b240 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801b228:	4909      	ldr	r1, [pc, #36]	; (801b250 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801b22a:	480a      	ldr	r0, [pc, #40]	; (801b254 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801b22c:	f007 fc2a 	bl	8022a84 <__aeabi_atexit>
 801b230:	4b05      	ldr	r3, [pc, #20]	; (801b248 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801b232:	662b      	str	r3, [r5, #96]	; 0x60
 801b234:	4b07      	ldr	r3, [pc, #28]	; (801b254 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801b236:	666b      	str	r3, [r5, #100]	; 0x64
 801b238:	bd38      	pop	{r3, r4, r5, pc}
 801b23a:	bf00      	nop
 801b23c:	24001fa8 	.word	0x24001fa8
 801b240:	24000000 	.word	0x24000000
 801b244:	08017acd 	.word	0x08017acd
 801b248:	2400005c 	.word	0x2400005c
 801b24c:	24001fac 	.word	0x24001fac
 801b250:	08017acb 	.word	0x08017acb
 801b254:	24000060 	.word	0x24000060

0801b258 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801b258:	b538      	push	{r3, r4, r5, lr}
 801b25a:	4c15      	ldr	r4, [pc, #84]	; (801b2b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801b25c:	4605      	mov	r5, r0
 801b25e:	7823      	ldrb	r3, [r4, #0]
 801b260:	f3bf 8f5b 	dmb	ish
 801b264:	07da      	lsls	r2, r3, #31
 801b266:	d40b      	bmi.n	801b280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801b268:	4620      	mov	r0, r4
 801b26a:	f007 fc12 	bl	8022a92 <__cxa_guard_acquire>
 801b26e:	b138      	cbz	r0, 801b280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801b270:	4620      	mov	r0, r4
 801b272:	f007 fc1a 	bl	8022aaa <__cxa_guard_release>
 801b276:	4a0f      	ldr	r2, [pc, #60]	; (801b2b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801b278:	490f      	ldr	r1, [pc, #60]	; (801b2b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801b27a:	4810      	ldr	r0, [pc, #64]	; (801b2bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801b27c:	f007 fc02 	bl	8022a84 <__aeabi_atexit>
 801b280:	4c0f      	ldr	r4, [pc, #60]	; (801b2c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801b282:	7823      	ldrb	r3, [r4, #0]
 801b284:	f3bf 8f5b 	dmb	ish
 801b288:	07db      	lsls	r3, r3, #31
 801b28a:	d40b      	bmi.n	801b2a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801b28c:	4620      	mov	r0, r4
 801b28e:	f007 fc00 	bl	8022a92 <__cxa_guard_acquire>
 801b292:	b138      	cbz	r0, 801b2a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801b294:	4620      	mov	r0, r4
 801b296:	f007 fc08 	bl	8022aaa <__cxa_guard_release>
 801b29a:	4a06      	ldr	r2, [pc, #24]	; (801b2b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801b29c:	4909      	ldr	r1, [pc, #36]	; (801b2c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801b29e:	480a      	ldr	r0, [pc, #40]	; (801b2c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801b2a0:	f007 fbf0 	bl	8022a84 <__aeabi_atexit>
 801b2a4:	4b05      	ldr	r3, [pc, #20]	; (801b2bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801b2a6:	65ab      	str	r3, [r5, #88]	; 0x58
 801b2a8:	4b07      	ldr	r3, [pc, #28]	; (801b2c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801b2aa:	65eb      	str	r3, [r5, #92]	; 0x5c
 801b2ac:	bd38      	pop	{r3, r4, r5, pc}
 801b2ae:	bf00      	nop
 801b2b0:	24001f80 	.word	0x24001f80
 801b2b4:	24000000 	.word	0x24000000
 801b2b8:	08017ad1 	.word	0x08017ad1
 801b2bc:	24000034 	.word	0x24000034
 801b2c0:	24001f84 	.word	0x24001f84
 801b2c4:	08017acf 	.word	0x08017acf
 801b2c8:	24000038 	.word	0x24000038

0801b2cc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801b2cc:	b510      	push	{r4, lr}
 801b2ce:	4604      	mov	r4, r0
 801b2d0:	f7ff ff88 	bl	801b1e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801b2d4:	4620      	mov	r0, r4
 801b2d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b2da:	f7ff bfbd 	b.w	801b258 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801b2e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801b2e0:	b538      	push	{r3, r4, r5, lr}
 801b2e2:	4c15      	ldr	r4, [pc, #84]	; (801b338 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801b2e4:	4605      	mov	r5, r0
 801b2e6:	7823      	ldrb	r3, [r4, #0]
 801b2e8:	f3bf 8f5b 	dmb	ish
 801b2ec:	07da      	lsls	r2, r3, #31
 801b2ee:	d40b      	bmi.n	801b308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801b2f0:	4620      	mov	r0, r4
 801b2f2:	f007 fbce 	bl	8022a92 <__cxa_guard_acquire>
 801b2f6:	b138      	cbz	r0, 801b308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801b2f8:	4620      	mov	r0, r4
 801b2fa:	f007 fbd6 	bl	8022aaa <__cxa_guard_release>
 801b2fe:	4a0f      	ldr	r2, [pc, #60]	; (801b33c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801b300:	490f      	ldr	r1, [pc, #60]	; (801b340 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801b302:	4810      	ldr	r0, [pc, #64]	; (801b344 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801b304:	f007 fbbe 	bl	8022a84 <__aeabi_atexit>
 801b308:	4c0f      	ldr	r4, [pc, #60]	; (801b348 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801b30a:	7823      	ldrb	r3, [r4, #0]
 801b30c:	f3bf 8f5b 	dmb	ish
 801b310:	07db      	lsls	r3, r3, #31
 801b312:	d40b      	bmi.n	801b32c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801b314:	4620      	mov	r0, r4
 801b316:	f007 fbbc 	bl	8022a92 <__cxa_guard_acquire>
 801b31a:	b138      	cbz	r0, 801b32c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801b31c:	4620      	mov	r0, r4
 801b31e:	f007 fbc4 	bl	8022aaa <__cxa_guard_release>
 801b322:	4a06      	ldr	r2, [pc, #24]	; (801b33c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801b324:	4909      	ldr	r1, [pc, #36]	; (801b34c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801b326:	480a      	ldr	r0, [pc, #40]	; (801b350 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801b328:	f007 fbac 	bl	8022a84 <__aeabi_atexit>
 801b32c:	4b05      	ldr	r3, [pc, #20]	; (801b344 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801b32e:	672b      	str	r3, [r5, #112]	; 0x70
 801b330:	4b07      	ldr	r3, [pc, #28]	; (801b350 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801b332:	676b      	str	r3, [r5, #116]	; 0x74
 801b334:	bd38      	pop	{r3, r4, r5, pc}
 801b336:	bf00      	nop
 801b338:	24001f78 	.word	0x24001f78
 801b33c:	24000000 	.word	0x24000000
 801b340:	08017ac5 	.word	0x08017ac5
 801b344:	2400002c 	.word	0x2400002c
 801b348:	24001f7c 	.word	0x24001f7c
 801b34c:	08017ac3 	.word	0x08017ac3
 801b350:	24000030 	.word	0x24000030

0801b354 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801b354:	b538      	push	{r3, r4, r5, lr}
 801b356:	4c15      	ldr	r4, [pc, #84]	; (801b3ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801b358:	4605      	mov	r5, r0
 801b35a:	7823      	ldrb	r3, [r4, #0]
 801b35c:	f3bf 8f5b 	dmb	ish
 801b360:	07da      	lsls	r2, r3, #31
 801b362:	d40b      	bmi.n	801b37c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801b364:	4620      	mov	r0, r4
 801b366:	f007 fb94 	bl	8022a92 <__cxa_guard_acquire>
 801b36a:	b138      	cbz	r0, 801b37c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801b36c:	4620      	mov	r0, r4
 801b36e:	f007 fb9c 	bl	8022aaa <__cxa_guard_release>
 801b372:	4a0f      	ldr	r2, [pc, #60]	; (801b3b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801b374:	490f      	ldr	r1, [pc, #60]	; (801b3b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801b376:	4810      	ldr	r0, [pc, #64]	; (801b3b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801b378:	f007 fb84 	bl	8022a84 <__aeabi_atexit>
 801b37c:	4c0f      	ldr	r4, [pc, #60]	; (801b3bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801b37e:	7823      	ldrb	r3, [r4, #0]
 801b380:	f3bf 8f5b 	dmb	ish
 801b384:	07db      	lsls	r3, r3, #31
 801b386:	d40b      	bmi.n	801b3a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801b388:	4620      	mov	r0, r4
 801b38a:	f007 fb82 	bl	8022a92 <__cxa_guard_acquire>
 801b38e:	b138      	cbz	r0, 801b3a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801b390:	4620      	mov	r0, r4
 801b392:	f007 fb8a 	bl	8022aaa <__cxa_guard_release>
 801b396:	4a06      	ldr	r2, [pc, #24]	; (801b3b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801b398:	4909      	ldr	r1, [pc, #36]	; (801b3c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801b39a:	480a      	ldr	r0, [pc, #40]	; (801b3c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801b39c:	f007 fb72 	bl	8022a84 <__aeabi_atexit>
 801b3a0:	4b05      	ldr	r3, [pc, #20]	; (801b3b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801b3a2:	66ab      	str	r3, [r5, #104]	; 0x68
 801b3a4:	4b07      	ldr	r3, [pc, #28]	; (801b3c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801b3a6:	66eb      	str	r3, [r5, #108]	; 0x6c
 801b3a8:	bd38      	pop	{r3, r4, r5, pc}
 801b3aa:	bf00      	nop
 801b3ac:	24001f70 	.word	0x24001f70
 801b3b0:	24000000 	.word	0x24000000
 801b3b4:	08017ac9 	.word	0x08017ac9
 801b3b8:	24000024 	.word	0x24000024
 801b3bc:	24001f74 	.word	0x24001f74
 801b3c0:	08017ac7 	.word	0x08017ac7
 801b3c4:	24000028 	.word	0x24000028

0801b3c8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801b3c8:	b510      	push	{r4, lr}
 801b3ca:	4604      	mov	r4, r0
 801b3cc:	f7ff ff88 	bl	801b2e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801b3d0:	4620      	mov	r0, r4
 801b3d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b3d6:	f7ff bfbd 	b.w	801b354 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801b3da <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801b3da:	b510      	push	{r4, lr}
 801b3dc:	4604      	mov	r4, r0
 801b3de:	f7ff fff3 	bl	801b3c8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801b3e2:	4620      	mov	r0, r4
 801b3e4:	f7ff ff72 	bl	801b2cc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801b3e8:	4620      	mov	r0, r4
 801b3ea:	f7ff fdf9 	bl	801afe0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801b3ee:	4620      	mov	r0, r4
 801b3f0:	f7ff fcfa 	bl	801ade8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801b3f4:	4620      	mov	r0, r4
 801b3f6:	f7ff fd75 	bl	801aee4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801b3fa:	4620      	mov	r0, r4
 801b3fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b400:	f7ff bee0 	b.w	801b1c4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801b404 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801b404:	b538      	push	{r3, r4, r5, lr}
 801b406:	4c0b      	ldr	r4, [pc, #44]	; (801b434 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801b408:	4605      	mov	r5, r0
 801b40a:	7823      	ldrb	r3, [r4, #0]
 801b40c:	f3bf 8f5b 	dmb	ish
 801b410:	07db      	lsls	r3, r3, #31
 801b412:	d40b      	bmi.n	801b42c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801b414:	4620      	mov	r0, r4
 801b416:	f007 fb3c 	bl	8022a92 <__cxa_guard_acquire>
 801b41a:	b138      	cbz	r0, 801b42c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801b41c:	4620      	mov	r0, r4
 801b41e:	f007 fb44 	bl	8022aaa <__cxa_guard_release>
 801b422:	4a05      	ldr	r2, [pc, #20]	; (801b438 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801b424:	4905      	ldr	r1, [pc, #20]	; (801b43c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801b426:	4806      	ldr	r0, [pc, #24]	; (801b440 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801b428:	f007 fb2c 	bl	8022a84 <__aeabi_atexit>
 801b42c:	4b04      	ldr	r3, [pc, #16]	; (801b440 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801b42e:	67ab      	str	r3, [r5, #120]	; 0x78
 801b430:	bd38      	pop	{r3, r4, r5, pc}
 801b432:	bf00      	nop
 801b434:	24001f64 	.word	0x24001f64
 801b438:	24000000 	.word	0x24000000
 801b43c:	08017ac1 	.word	0x08017ac1
 801b440:	2400001c 	.word	0x2400001c

0801b444 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801b444:	b538      	push	{r3, r4, r5, lr}
 801b446:	4c0b      	ldr	r4, [pc, #44]	; (801b474 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801b448:	4605      	mov	r5, r0
 801b44a:	7823      	ldrb	r3, [r4, #0]
 801b44c:	f3bf 8f5b 	dmb	ish
 801b450:	07db      	lsls	r3, r3, #31
 801b452:	d40b      	bmi.n	801b46c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801b454:	4620      	mov	r0, r4
 801b456:	f007 fb1c 	bl	8022a92 <__cxa_guard_acquire>
 801b45a:	b138      	cbz	r0, 801b46c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801b45c:	4620      	mov	r0, r4
 801b45e:	f007 fb24 	bl	8022aaa <__cxa_guard_release>
 801b462:	4a05      	ldr	r2, [pc, #20]	; (801b478 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801b464:	4905      	ldr	r1, [pc, #20]	; (801b47c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801b466:	4806      	ldr	r0, [pc, #24]	; (801b480 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801b468:	f007 fb0c 	bl	8022a84 <__aeabi_atexit>
 801b46c:	4b04      	ldr	r3, [pc, #16]	; (801b480 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801b46e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801b470:	bd38      	pop	{r3, r4, r5, pc}
 801b472:	bf00      	nop
 801b474:	24001f68 	.word	0x24001f68
 801b478:	24000000 	.word	0x24000000
 801b47c:	08017abf 	.word	0x08017abf
 801b480:	24000020 	.word	0x24000020

0801b484 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801b484:	b570      	push	{r4, r5, r6, lr}
 801b486:	4d0d      	ldr	r5, [pc, #52]	; (801b4bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801b488:	4606      	mov	r6, r0
 801b48a:	4c0d      	ldr	r4, [pc, #52]	; (801b4c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801b48c:	782b      	ldrb	r3, [r5, #0]
 801b48e:	f3bf 8f5b 	dmb	ish
 801b492:	f013 0f01 	tst.w	r3, #1
 801b496:	d10d      	bne.n	801b4b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801b498:	4628      	mov	r0, r5
 801b49a:	f007 fafa 	bl	8022a92 <__cxa_guard_acquire>
 801b49e:	b148      	cbz	r0, 801b4b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801b4a0:	4b08      	ldr	r3, [pc, #32]	; (801b4c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801b4a2:	4628      	mov	r0, r5
 801b4a4:	6023      	str	r3, [r4, #0]
 801b4a6:	f007 fb00 	bl	8022aaa <__cxa_guard_release>
 801b4aa:	4a07      	ldr	r2, [pc, #28]	; (801b4c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801b4ac:	4620      	mov	r0, r4
 801b4ae:	4907      	ldr	r1, [pc, #28]	; (801b4cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801b4b0:	f007 fae8 	bl	8022a84 <__aeabi_atexit>
 801b4b4:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801b4b8:	bd70      	pop	{r4, r5, r6, pc}
 801b4ba:	bf00      	nop
 801b4bc:	24001f6c 	.word	0x24001f6c
 801b4c0:	24001fe0 	.word	0x24001fe0
 801b4c4:	08025790 	.word	0x08025790
 801b4c8:	24000000 	.word	0x24000000
 801b4cc:	08017abd 	.word	0x08017abd

0801b4d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801b4d0:	b510      	push	{r4, lr}
 801b4d2:	4604      	mov	r4, r0
 801b4d4:	f7ff ff96 	bl	801b404 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801b4d8:	4620      	mov	r0, r4
 801b4da:	f7ff ffb3 	bl	801b444 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801b4de:	4620      	mov	r0, r4
 801b4e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b4e4:	f7ff bfce 	b.w	801b484 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801b4e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801b4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4ec:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801b4f0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801b4f4:	2d00      	cmp	r5, #0
 801b4f6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801b4fa:	fb05 4c0e 	mla	ip, r5, lr, r4
 801b4fe:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801b502:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801b506:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801b50a:	eb02 0a0c 	add.w	sl, r2, ip
 801b50e:	8808      	ldrh	r0, [r1, #0]
 801b510:	f2c0 80b0 	blt.w	801b674 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801b514:	45ab      	cmp	fp, r5
 801b516:	f340 80ad 	ble.w	801b674 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801b51a:	2c00      	cmp	r4, #0
 801b51c:	f2c0 80a8 	blt.w	801b670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801b520:	45a6      	cmp	lr, r4
 801b522:	f340 80a5 	ble.w	801b670 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801b526:	f812 200c 	ldrb.w	r2, [r2, ip]
 801b52a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801b52e:	1c62      	adds	r2, r4, #1
 801b530:	f100 80a3 	bmi.w	801b67a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b534:	4596      	cmp	lr, r2
 801b536:	f340 80a0 	ble.w	801b67a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b53a:	f1b9 0f00 	cmp.w	r9, #0
 801b53e:	f000 809c 	beq.w	801b67a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b542:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b546:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801b54a:	3501      	adds	r5, #1
 801b54c:	f100 8099 	bmi.w	801b682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b550:	45ab      	cmp	fp, r5
 801b552:	f340 8096 	ble.w	801b682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b556:	2f00      	cmp	r7, #0
 801b558:	f000 8093 	beq.w	801b682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b55c:	2c00      	cmp	r4, #0
 801b55e:	f2c0 808e 	blt.w	801b67e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801b562:	45a6      	cmp	lr, r4
 801b564:	f340 808b 	ble.w	801b67e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801b568:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801b56c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801b570:	3401      	adds	r4, #1
 801b572:	f100 8089 	bmi.w	801b688 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b576:	45a6      	cmp	lr, r4
 801b578:	f340 8086 	ble.w	801b688 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b57c:	f1b9 0f00 	cmp.w	r9, #0
 801b580:	f000 8082 	beq.w	801b688 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b584:	44d6      	add	lr, sl
 801b586:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b58a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801b58e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801b592:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801b596:	fb19 fe07 	smulbb	lr, r9, r7
 801b59a:	f1c7 0210 	rsb	r2, r7, #16
 801b59e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b5a2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801b5a6:	eba2 0209 	sub.w	r2, r2, r9
 801b5aa:	ea44 0808 	orr.w	r8, r4, r8
 801b5ae:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801b5b2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b5b6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801b5ba:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b5be:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801b5c2:	ea44 0c0c 	orr.w	ip, r4, ip
 801b5c6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801b5ca:	fb04 f40c 	mul.w	r4, r4, ip
 801b5ce:	fb02 4808 	mla	r8, r2, r8, r4
 801b5d2:	041a      	lsls	r2, r3, #16
 801b5d4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b5d8:	b2b4      	uxth	r4, r6
 801b5da:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b5de:	43f6      	mvns	r6, r6
 801b5e0:	4313      	orrs	r3, r2
 801b5e2:	042a      	lsls	r2, r5, #16
 801b5e4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801b5e8:	b2f6      	uxtb	r6, r6
 801b5ea:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b5ee:	fb0e 8303 	mla	r3, lr, r3, r8
 801b5f2:	432a      	orrs	r2, r5
 801b5f4:	fb07 3202 	mla	r2, r7, r2, r3
 801b5f8:	10c7      	asrs	r7, r0, #3
 801b5fa:	0d53      	lsrs	r3, r2, #21
 801b5fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b600:	0952      	lsrs	r2, r2, #5
 801b602:	fb17 f706 	smulbb	r7, r7, r6
 801b606:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b60a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b60e:	431a      	orrs	r2, r3
 801b610:	b293      	uxth	r3, r2
 801b612:	1202      	asrs	r2, r0, #8
 801b614:	121d      	asrs	r5, r3, #8
 801b616:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b61a:	00c0      	lsls	r0, r0, #3
 801b61c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b620:	fb12 f206 	smulbb	r2, r2, r6
 801b624:	b2c0      	uxtb	r0, r0
 801b626:	fb05 2504 	mla	r5, r5, r4, r2
 801b62a:	10da      	asrs	r2, r3, #3
 801b62c:	fb10 f006 	smulbb	r0, r0, r6
 801b630:	00db      	lsls	r3, r3, #3
 801b632:	b2ad      	uxth	r5, r5
 801b634:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b638:	b2db      	uxtb	r3, r3
 801b63a:	fb02 7204 	mla	r2, r2, r4, r7
 801b63e:	fb03 0004 	mla	r0, r3, r4, r0
 801b642:	1c6b      	adds	r3, r5, #1
 801b644:	b292      	uxth	r2, r2
 801b646:	b280      	uxth	r0, r0
 801b648:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b64c:	1c43      	adds	r3, r0, #1
 801b64e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b652:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b656:	1c50      	adds	r0, r2, #1
 801b658:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b65c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b660:	0952      	lsrs	r2, r2, #5
 801b662:	432b      	orrs	r3, r5
 801b664:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b668:	4313      	orrs	r3, r2
 801b66a:	800b      	strh	r3, [r1, #0]
 801b66c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b670:	4680      	mov	r8, r0
 801b672:	e75c      	b.n	801b52e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801b674:	4684      	mov	ip, r0
 801b676:	4680      	mov	r8, r0
 801b678:	e767      	b.n	801b54a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801b67a:	4684      	mov	ip, r0
 801b67c:	e765      	b.n	801b54a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801b67e:	4605      	mov	r5, r0
 801b680:	e776      	b.n	801b570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801b682:	4603      	mov	r3, r0
 801b684:	4605      	mov	r5, r0
 801b686:	e782      	b.n	801b58e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801b688:	4603      	mov	r3, r0
 801b68a:	e780      	b.n	801b58e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801b68c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b68c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b690:	b099      	sub	sp, #100	; 0x64
 801b692:	9215      	str	r2, [sp, #84]	; 0x54
 801b694:	9309      	str	r3, [sp, #36]	; 0x24
 801b696:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801b698:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801b69c:	9016      	str	r0, [sp, #88]	; 0x58
 801b69e:	930d      	str	r3, [sp, #52]	; 0x34
 801b6a0:	6850      	ldr	r0, [r2, #4]
 801b6a2:	910c      	str	r1, [sp, #48]	; 0x30
 801b6a4:	6812      	ldr	r2, [r2, #0]
 801b6a6:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801b6aa:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801b6ae:	fb00 1303 	mla	r3, r0, r3, r1
 801b6b2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801b6b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b6b8:	681b      	ldr	r3, [r3, #0]
 801b6ba:	930b      	str	r3, [sp, #44]	; 0x2c
 801b6bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b6be:	685e      	ldr	r6, [r3, #4]
 801b6c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b6c2:	3604      	adds	r6, #4
 801b6c4:	43db      	mvns	r3, r3
 801b6c6:	b2db      	uxtb	r3, r3
 801b6c8:	930a      	str	r3, [sp, #40]	; 0x28
 801b6ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b6cc:	2b00      	cmp	r3, #0
 801b6ce:	dc03      	bgt.n	801b6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b6d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801b6d2:	2b00      	cmp	r3, #0
 801b6d4:	f340 8225 	ble.w	801bb22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801b6d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b6da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b6e2:	1e48      	subs	r0, r1, #1
 801b6e4:	1e57      	subs	r7, r2, #1
 801b6e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b6e8:	2b00      	cmp	r3, #0
 801b6ea:	f340 80e3 	ble.w	801b8b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b6ee:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801b6f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b6f6:	d406      	bmi.n	801b706 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b6f8:	4584      	cmp	ip, r0
 801b6fa:	da04      	bge.n	801b706 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b6fc:	2b00      	cmp	r3, #0
 801b6fe:	db02      	blt.n	801b706 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b700:	42bb      	cmp	r3, r7
 801b702:	f2c0 80d8 	blt.w	801b8b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b706:	f11c 0c01 	adds.w	ip, ip, #1
 801b70a:	f100 80c9 	bmi.w	801b8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b70e:	4561      	cmp	r1, ip
 801b710:	f2c0 80c6 	blt.w	801b8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b714:	3301      	adds	r3, #1
 801b716:	f100 80c3 	bmi.w	801b8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b71a:	429a      	cmp	r2, r3
 801b71c:	f2c0 80c0 	blt.w	801b8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b720:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b724:	4647      	mov	r7, r8
 801b726:	f1bb 0f00 	cmp.w	fp, #0
 801b72a:	f340 80e3 	ble.w	801b8f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801b72e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b730:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b734:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b736:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801b73a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b73e:	ea5f 422a 	movs.w	r2, sl, asr #16
 801b742:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b746:	689b      	ldr	r3, [r3, #8]
 801b748:	f100 8121 	bmi.w	801b98e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b74c:	f103 39ff 	add.w	r9, r3, #4294967295
 801b750:	454a      	cmp	r2, r9
 801b752:	f280 811c 	bge.w	801b98e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b756:	f1bc 0f00 	cmp.w	ip, #0
 801b75a:	f2c0 8118 	blt.w	801b98e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b75e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801b762:	45cc      	cmp	ip, r9
 801b764:	f280 8113 	bge.w	801b98e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b768:	b21b      	sxth	r3, r3
 801b76a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b76c:	fb0c 2203 	mla	r2, ip, r3, r2
 801b770:	eb04 0902 	add.w	r9, r4, r2
 801b774:	5ca2      	ldrb	r2, [r4, r2]
 801b776:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801b77a:	2800      	cmp	r0, #0
 801b77c:	f000 80fe 	beq.w	801b97c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b780:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b784:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801b788:	9211      	str	r2, [sp, #68]	; 0x44
 801b78a:	b151      	cbz	r1, 801b7a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b78c:	eb09 0203 	add.w	r2, r9, r3
 801b790:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b794:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b798:	930f      	str	r3, [sp, #60]	; 0x3c
 801b79a:	7853      	ldrb	r3, [r2, #1]
 801b79c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b7a0:	9312      	str	r3, [sp, #72]	; 0x48
 801b7a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b7a4:	fb10 f201 	smulbb	r2, r0, r1
 801b7a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7aa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b7ae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b7b2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801b7b6:	10d2      	asrs	r2, r2, #3
 801b7b8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b7bc:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801b7c0:	ea4c 0c03 	orr.w	ip, ip, r3
 801b7c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b7c6:	041b      	lsls	r3, r3, #16
 801b7c8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801b7cc:	4323      	orrs	r3, r4
 801b7ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b7d0:	4353      	muls	r3, r2
 801b7d2:	fb09 330c 	mla	r3, r9, ip, r3
 801b7d6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801b7da:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b7de:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b7e2:	ea4c 0e0e 	orr.w	lr, ip, lr
 801b7e6:	f1c1 0c10 	rsb	ip, r1, #16
 801b7ea:	ebac 0c00 	sub.w	ip, ip, r0
 801b7ee:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b7f2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801b7f6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801b7fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b7fc:	0418      	lsls	r0, r3, #16
 801b7fe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b802:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b806:	4318      	orrs	r0, r3
 801b808:	fb02 c200 	mla	r2, r2, r0, ip
 801b80c:	8838      	ldrh	r0, [r7, #0]
 801b80e:	0d53      	lsrs	r3, r2, #21
 801b810:	0952      	lsrs	r2, r2, #5
 801b812:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b816:	1201      	asrs	r1, r0, #8
 801b818:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b81c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b820:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b824:	00c0      	lsls	r0, r0, #3
 801b826:	431a      	orrs	r2, r3
 801b828:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801b82c:	fb11 f104 	smulbb	r1, r1, r4
 801b830:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b834:	b292      	uxth	r2, r2
 801b836:	fb1e fe04 	smulbb	lr, lr, r4
 801b83a:	b2c0      	uxtb	r0, r0
 801b83c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801b840:	fb10 f004 	smulbb	r0, r0, r4
 801b844:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b848:	fb0c 1c03 	mla	ip, ip, r3, r1
 801b84c:	10d1      	asrs	r1, r2, #3
 801b84e:	00d2      	lsls	r2, r2, #3
 801b850:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b854:	fa1f fc8c 	uxth.w	ip, ip
 801b858:	b2d2      	uxtb	r2, r2
 801b85a:	fb01 e103 	mla	r1, r1, r3, lr
 801b85e:	fb02 0303 	mla	r3, r2, r3, r0
 801b862:	b289      	uxth	r1, r1
 801b864:	b29a      	uxth	r2, r3
 801b866:	f10c 0301 	add.w	r3, ip, #1
 801b86a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b86e:	1c53      	adds	r3, r2, #1
 801b870:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b874:	1c4a      	adds	r2, r1, #1
 801b876:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b87a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b87e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b882:	0949      	lsrs	r1, r1, #5
 801b884:	ea43 030c 	orr.w	r3, r3, ip
 801b888:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b88c:	430b      	orrs	r3, r1
 801b88e:	803b      	strh	r3, [r7, #0]
 801b890:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b892:	3702      	adds	r7, #2
 801b894:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b898:	449a      	add	sl, r3
 801b89a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b89c:	441d      	add	r5, r3
 801b89e:	e742      	b.n	801b726 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b8a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b8a2:	f108 0802 	add.w	r8, r8, #2
 801b8a6:	449a      	add	sl, r3
 801b8a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b8aa:	441d      	add	r5, r3
 801b8ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b8ae:	3b01      	subs	r3, #1
 801b8b0:	9309      	str	r3, [sp, #36]	; 0x24
 801b8b2:	e718      	b.n	801b6e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b8b4:	d023      	beq.n	801b8fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801b8b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b8b8:	9825      	ldr	r0, [sp, #148]	; 0x94
 801b8ba:	3b01      	subs	r3, #1
 801b8bc:	fb00 a003 	mla	r0, r0, r3, sl
 801b8c0:	1400      	asrs	r0, r0, #16
 801b8c2:	f53f af2d 	bmi.w	801b720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b8c6:	3901      	subs	r1, #1
 801b8c8:	4288      	cmp	r0, r1
 801b8ca:	f6bf af29 	bge.w	801b720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b8ce:	9926      	ldr	r1, [sp, #152]	; 0x98
 801b8d0:	fb01 5303 	mla	r3, r1, r3, r5
 801b8d4:	141b      	asrs	r3, r3, #16
 801b8d6:	f53f af23 	bmi.w	801b720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b8da:	3a01      	subs	r2, #1
 801b8dc:	4293      	cmp	r3, r2
 801b8de:	f6bf af1f 	bge.w	801b720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b8e2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801b8e6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801b8ea:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801b8ee:	f1be 0f00 	cmp.w	lr, #0
 801b8f2:	dc6c      	bgt.n	801b9ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b8f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b8f6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b8fa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b8fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b900:	2b00      	cmp	r3, #0
 801b902:	f340 810e 	ble.w	801bb22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801b906:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b90a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b90c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b910:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b914:	eef0 6a62 	vmov.f32	s13, s5
 801b918:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b91c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b920:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b924:	ee16 aa90 	vmov	sl, s13
 801b928:	eef0 6a43 	vmov.f32	s13, s6
 801b92c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b930:	ee16 5a90 	vmov	r5, s13
 801b934:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b938:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b93c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b940:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b944:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b948:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b94c:	ee12 2a90 	vmov	r2, s5
 801b950:	eef0 2a47 	vmov.f32	s5, s14
 801b954:	fb92 f3f3 	sdiv	r3, r2, r3
 801b958:	ee13 2a10 	vmov	r2, s6
 801b95c:	9325      	str	r3, [sp, #148]	; 0x94
 801b95e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b960:	eeb0 3a67 	vmov.f32	s6, s15
 801b964:	fb92 f3f3 	sdiv	r3, r2, r3
 801b968:	9326      	str	r3, [sp, #152]	; 0x98
 801b96a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b96c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801b96e:	3b01      	subs	r3, #1
 801b970:	930c      	str	r3, [sp, #48]	; 0x30
 801b972:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b974:	bf08      	it	eq
 801b976:	4613      	moveq	r3, r2
 801b978:	9309      	str	r3, [sp, #36]	; 0x24
 801b97a:	e6a6      	b.n	801b6ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b97c:	2900      	cmp	r1, #0
 801b97e:	f43f af10 	beq.w	801b7a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b982:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b986:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b98a:	930f      	str	r3, [sp, #60]	; 0x3c
 801b98c:	e709      	b.n	801b7a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b98e:	f112 0901 	adds.w	r9, r2, #1
 801b992:	f53f af7d 	bmi.w	801b890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b996:	454b      	cmp	r3, r9
 801b998:	f6ff af7a 	blt.w	801b890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b99c:	f11c 0901 	adds.w	r9, ip, #1
 801b9a0:	f53f af76 	bmi.w	801b890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b9a4:	45ce      	cmp	lr, r9
 801b9a6:	f6ff af73 	blt.w	801b890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b9aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b9ac:	b21b      	sxth	r3, r3
 801b9ae:	9202      	str	r2, [sp, #8]
 801b9b0:	fa0f f28e 	sxth.w	r2, lr
 801b9b4:	9300      	str	r3, [sp, #0]
 801b9b6:	4633      	mov	r3, r6
 801b9b8:	9201      	str	r2, [sp, #4]
 801b9ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b9bc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b9c0:	e9cd c003 	strd	ip, r0, [sp, #12]
 801b9c4:	4639      	mov	r1, r7
 801b9c6:	9816      	ldr	r0, [sp, #88]	; 0x58
 801b9c8:	f7ff fd8e 	bl	801b4e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801b9cc:	e760      	b.n	801b890 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b9ce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b9d0:	ea4f 422a 	mov.w	r2, sl, asr #16
 801b9d4:	1429      	asrs	r1, r5, #16
 801b9d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b9d8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b9dc:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801b9e0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b9e4:	fb03 2101 	mla	r1, r3, r1, r2
 801b9e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b9ea:	440a      	add	r2, r1
 801b9ec:	5c61      	ldrb	r1, [r4, r1]
 801b9ee:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801b9f2:	f1bc 0f00 	cmp.w	ip, #0
 801b9f6:	f000 808c 	beq.w	801bb12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801b9fa:	7857      	ldrb	r7, [r2, #1]
 801b9fc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ba00:	9413      	str	r4, [sp, #76]	; 0x4c
 801ba02:	b140      	cbz	r0, 801ba16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ba04:	18d7      	adds	r7, r2, r3
 801ba06:	5cd3      	ldrb	r3, [r2, r3]
 801ba08:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ba0c:	9310      	str	r3, [sp, #64]	; 0x40
 801ba0e:	787b      	ldrb	r3, [r7, #1]
 801ba10:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ba14:	9314      	str	r3, [sp, #80]	; 0x50
 801ba16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ba18:	fb1c f200 	smulbb	r2, ip, r0
 801ba1c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ba1e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ba22:	041f      	lsls	r7, r3, #16
 801ba24:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ba28:	10d2      	asrs	r2, r2, #3
 801ba2a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ba2e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ba32:	431f      	orrs	r7, r3
 801ba34:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ba38:	9317      	str	r3, [sp, #92]	; 0x5c
 801ba3a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ba3c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ba3e:	041b      	lsls	r3, r3, #16
 801ba40:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ba44:	ea43 030b 	orr.w	r3, r3, fp
 801ba48:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ba4c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ba50:	4353      	muls	r3, r2
 801ba52:	fb04 3707 	mla	r7, r4, r7, r3
 801ba56:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ba5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ba5c:	ea43 0b01 	orr.w	fp, r3, r1
 801ba60:	f1c0 0110 	rsb	r1, r0, #16
 801ba64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba66:	eba1 0c0c 	sub.w	ip, r1, ip
 801ba6a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ba6e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ba72:	fb0c 770b 	mla	r7, ip, fp, r7
 801ba76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ba7a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ba7e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ba82:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ba86:	fb02 770c 	mla	r7, r2, ip, r7
 801ba8a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ba8c:	0d79      	lsrs	r1, r7, #21
 801ba8e:	8812      	ldrh	r2, [r2, #0]
 801ba90:	097f      	lsrs	r7, r7, #5
 801ba92:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ba96:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ba9a:	430f      	orrs	r7, r1
 801ba9c:	1211      	asrs	r1, r2, #8
 801ba9e:	b2bb      	uxth	r3, r7
 801baa0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801baa4:	10d7      	asrs	r7, r2, #3
 801baa6:	fb11 f104 	smulbb	r1, r1, r4
 801baaa:	1218      	asrs	r0, r3, #8
 801baac:	00d2      	lsls	r2, r2, #3
 801baae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bab2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bab6:	fb17 f704 	smulbb	r7, r7, r4
 801baba:	b2d2      	uxtb	r2, r2
 801babc:	fb00 1009 	mla	r0, r0, r9, r1
 801bac0:	10d9      	asrs	r1, r3, #3
 801bac2:	fb12 f204 	smulbb	r2, r2, r4
 801bac6:	00db      	lsls	r3, r3, #3
 801bac8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bacc:	b280      	uxth	r0, r0
 801bace:	b2db      	uxtb	r3, r3
 801bad0:	fb01 7109 	mla	r1, r1, r9, r7
 801bad4:	fb03 2309 	mla	r3, r3, r9, r2
 801bad8:	1c42      	adds	r2, r0, #1
 801bada:	b289      	uxth	r1, r1
 801badc:	b29b      	uxth	r3, r3
 801bade:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bae2:	1c4f      	adds	r7, r1, #1
 801bae4:	1c5a      	adds	r2, r3, #1
 801bae6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801baea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801baee:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801baf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801baf4:	0949      	lsrs	r1, r1, #5
 801baf6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bafa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bafe:	4310      	orrs	r0, r2
 801bb00:	4308      	orrs	r0, r1
 801bb02:	f823 0b02 	strh.w	r0, [r3], #2
 801bb06:	930e      	str	r3, [sp, #56]	; 0x38
 801bb08:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bb0a:	449a      	add	sl, r3
 801bb0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bb0e:	441d      	add	r5, r3
 801bb10:	e6ed      	b.n	801b8ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801bb12:	2800      	cmp	r0, #0
 801bb14:	f43f af7f 	beq.w	801ba16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bb18:	5cd3      	ldrb	r3, [r2, r3]
 801bb1a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bb1e:	9310      	str	r3, [sp, #64]	; 0x40
 801bb20:	e779      	b.n	801ba16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bb22:	b019      	add	sp, #100	; 0x64
 801bb24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801bb28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bb2c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801bb30:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801bb34:	f1b8 0f00 	cmp.w	r8, #0
 801bb38:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801bb3c:	fb08 470e 	mla	r7, r8, lr, r4
 801bb40:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801bb44:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801bb48:	eb02 0907 	add.w	r9, r2, r7
 801bb4c:	8808      	ldrh	r0, [r1, #0]
 801bb4e:	db67      	blt.n	801bc20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801bb50:	45c2      	cmp	sl, r8
 801bb52:	dd65      	ble.n	801bc20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801bb54:	2c00      	cmp	r4, #0
 801bb56:	db61      	blt.n	801bc1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801bb58:	45a6      	cmp	lr, r4
 801bb5a:	dd5f      	ble.n	801bc1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801bb5c:	5dd2      	ldrb	r2, [r2, r7]
 801bb5e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801bb62:	1c62      	adds	r2, r4, #1
 801bb64:	d45f      	bmi.n	801bc26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bb66:	4596      	cmp	lr, r2
 801bb68:	dd5d      	ble.n	801bc26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bb6a:	2d00      	cmp	r5, #0
 801bb6c:	d05b      	beq.n	801bc26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bb6e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801bb72:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801bb76:	f118 0801 	adds.w	r8, r8, #1
 801bb7a:	d458      	bmi.n	801bc2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bb7c:	45c2      	cmp	sl, r8
 801bb7e:	dd56      	ble.n	801bc2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bb80:	2e00      	cmp	r6, #0
 801bb82:	d054      	beq.n	801bc2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bb84:	2c00      	cmp	r4, #0
 801bb86:	db50      	blt.n	801bc2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801bb88:	45a6      	cmp	lr, r4
 801bb8a:	dd4e      	ble.n	801bc2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801bb8c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801bb90:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801bb94:	3401      	adds	r4, #1
 801bb96:	d407      	bmi.n	801bba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bb98:	45a6      	cmp	lr, r4
 801bb9a:	dd05      	ble.n	801bba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bb9c:	b125      	cbz	r5, 801bba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bb9e:	44ce      	add	lr, r9
 801bba0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801bba4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801bba8:	fb15 f406 	smulbb	r4, r5, r6
 801bbac:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801bbb0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801bbb4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801bbb8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801bbbc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801bbc0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801bbc4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801bbc8:	ea43 0c0c 	orr.w	ip, r3, ip
 801bbcc:	f1c6 0310 	rsb	r3, r6, #16
 801bbd0:	ea4e 0707 	orr.w	r7, lr, r7
 801bbd4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801bbd8:	1b5b      	subs	r3, r3, r5
 801bbda:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801bbde:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801bbe2:	437d      	muls	r5, r7
 801bbe4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801bbe8:	0403      	lsls	r3, r0, #16
 801bbea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bbee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801bbf2:	4318      	orrs	r0, r3
 801bbf4:	0413      	lsls	r3, r2, #16
 801bbf6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bbfa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801bbfe:	fb04 c000 	mla	r0, r4, r0, ip
 801bc02:	4313      	orrs	r3, r2
 801bc04:	fb06 0003 	mla	r0, r6, r3, r0
 801bc08:	0d43      	lsrs	r3, r0, #21
 801bc0a:	0940      	lsrs	r0, r0, #5
 801bc0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bc10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bc14:	4318      	orrs	r0, r3
 801bc16:	8008      	strh	r0, [r1, #0]
 801bc18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bc1c:	4684      	mov	ip, r0
 801bc1e:	e7a0      	b.n	801bb62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801bc20:	4607      	mov	r7, r0
 801bc22:	4684      	mov	ip, r0
 801bc24:	e7a7      	b.n	801bb76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801bc26:	4607      	mov	r7, r0
 801bc28:	e7a5      	b.n	801bb76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801bc2a:	4602      	mov	r2, r0
 801bc2c:	e7b2      	b.n	801bb94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801bc2e:	4602      	mov	r2, r0
 801bc30:	e7ba      	b.n	801bba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801bc32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc36:	b093      	sub	sp, #76	; 0x4c
 801bc38:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bc3c:	920f      	str	r2, [sp, #60]	; 0x3c
 801bc3e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801bc40:	9010      	str	r0, [sp, #64]	; 0x40
 801bc42:	9108      	str	r1, [sp, #32]
 801bc44:	6850      	ldr	r0, [r2, #4]
 801bc46:	9306      	str	r3, [sp, #24]
 801bc48:	6812      	ldr	r2, [r2, #0]
 801bc4a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801bc4e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801bc52:	fb00 1303 	mla	r3, r0, r3, r1
 801bc56:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801bc5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc5c:	681b      	ldr	r3, [r3, #0]
 801bc5e:	9307      	str	r3, [sp, #28]
 801bc60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc62:	685f      	ldr	r7, [r3, #4]
 801bc64:	3704      	adds	r7, #4
 801bc66:	9b08      	ldr	r3, [sp, #32]
 801bc68:	2b00      	cmp	r3, #0
 801bc6a:	dc03      	bgt.n	801bc74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801bc6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bc6e:	2b00      	cmp	r3, #0
 801bc70:	f340 81b2 	ble.w	801bfd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801bc74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bc76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bc7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bc7e:	1e48      	subs	r0, r1, #1
 801bc80:	f102 3cff 	add.w	ip, r2, #4294967295
 801bc84:	9b06      	ldr	r3, [sp, #24]
 801bc86:	2b00      	cmp	r3, #0
 801bc88:	f340 80a9 	ble.w	801bdde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801bc8c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801bc90:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bc94:	d406      	bmi.n	801bca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bc96:	4586      	cmp	lr, r0
 801bc98:	da04      	bge.n	801bca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bc9a:	2b00      	cmp	r3, #0
 801bc9c:	db02      	blt.n	801bca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bc9e:	4563      	cmp	r3, ip
 801bca0:	f2c0 809e 	blt.w	801bde0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bca4:	f11e 0e01 	adds.w	lr, lr, #1
 801bca8:	f100 808f 	bmi.w	801bdca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bcac:	4571      	cmp	r1, lr
 801bcae:	f2c0 808c 	blt.w	801bdca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bcb2:	3301      	adds	r3, #1
 801bcb4:	f100 8089 	bmi.w	801bdca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bcb8:	429a      	cmp	r2, r3
 801bcba:	f2c0 8086 	blt.w	801bdca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bcbe:	f8dd b018 	ldr.w	fp, [sp, #24]
 801bcc2:	46c8      	mov	r8, r9
 801bcc4:	f1bb 0f00 	cmp.w	fp, #0
 801bcc8:	f340 80a6 	ble.w	801be18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801bccc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801bcce:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801bcd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bcd4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801bcd8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801bcdc:	1422      	asrs	r2, r4, #16
 801bcde:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801bce2:	689b      	ldr	r3, [r3, #8]
 801bce4:	f100 80e3 	bmi.w	801beae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801bce8:	f103 3aff 	add.w	sl, r3, #4294967295
 801bcec:	4552      	cmp	r2, sl
 801bcee:	f280 80de 	bge.w	801beae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801bcf2:	f1bc 0f00 	cmp.w	ip, #0
 801bcf6:	f2c0 80da 	blt.w	801beae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801bcfa:	f10e 3aff 	add.w	sl, lr, #4294967295
 801bcfe:	45d4      	cmp	ip, sl
 801bd00:	f280 80d5 	bge.w	801beae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801bd04:	b21b      	sxth	r3, r3
 801bd06:	9d07      	ldr	r5, [sp, #28]
 801bd08:	fb0c 2203 	mla	r2, ip, r3, r2
 801bd0c:	eb05 0a02 	add.w	sl, r5, r2
 801bd10:	5caa      	ldrb	r2, [r5, r2]
 801bd12:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801bd16:	2800      	cmp	r0, #0
 801bd18:	f000 80c0 	beq.w	801be9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801bd1c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801bd20:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801bd24:	920b      	str	r2, [sp, #44]	; 0x2c
 801bd26:	b151      	cbz	r1, 801bd3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801bd28:	eb0a 0203 	add.w	r2, sl, r3
 801bd2c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801bd30:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bd34:	9309      	str	r3, [sp, #36]	; 0x24
 801bd36:	7853      	ldrb	r3, [r2, #1]
 801bd38:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bd3c:	930c      	str	r3, [sp, #48]	; 0x30
 801bd3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bd40:	fb10 f201 	smulbb	r2, r0, r1
 801bd44:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bd46:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801bd4a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bd4e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801bd52:	10d2      	asrs	r2, r2, #3
 801bd54:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bd58:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801bd5c:	ea4c 0c03 	orr.w	ip, ip, r3
 801bd60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bd62:	041b      	lsls	r3, r3, #16
 801bd64:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801bd68:	432b      	orrs	r3, r5
 801bd6a:	4353      	muls	r3, r2
 801bd6c:	fb0a 330c 	mla	r3, sl, ip, r3
 801bd70:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801bd74:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bd78:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bd7c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801bd80:	f1c1 0c10 	rsb	ip, r1, #16
 801bd84:	ebac 0c00 	sub.w	ip, ip, r0
 801bd88:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801bd8c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801bd90:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801bd94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd96:	0418      	lsls	r0, r3, #16
 801bd98:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bd9c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801bda0:	4318      	orrs	r0, r3
 801bda2:	fb02 c200 	mla	r2, r2, r0, ip
 801bda6:	0d53      	lsrs	r3, r2, #21
 801bda8:	0952      	lsrs	r2, r2, #5
 801bdaa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bdae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bdb2:	431a      	orrs	r2, r3
 801bdb4:	f8a8 2000 	strh.w	r2, [r8]
 801bdb8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801bdba:	f108 0802 	add.w	r8, r8, #2
 801bdbe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bdc2:	441c      	add	r4, r3
 801bdc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bdc6:	441e      	add	r6, r3
 801bdc8:	e77c      	b.n	801bcc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bdca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801bdcc:	f109 0902 	add.w	r9, r9, #2
 801bdd0:	441c      	add	r4, r3
 801bdd2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bdd4:	441e      	add	r6, r3
 801bdd6:	9b06      	ldr	r3, [sp, #24]
 801bdd8:	3b01      	subs	r3, #1
 801bdda:	9306      	str	r3, [sp, #24]
 801bddc:	e752      	b.n	801bc84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bdde:	d020      	beq.n	801be22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bde0:	9b06      	ldr	r3, [sp, #24]
 801bde2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801bde4:	3b01      	subs	r3, #1
 801bde6:	fb00 4003 	mla	r0, r0, r3, r4
 801bdea:	1400      	asrs	r0, r0, #16
 801bdec:	f53f af67 	bmi.w	801bcbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bdf0:	3901      	subs	r1, #1
 801bdf2:	4288      	cmp	r0, r1
 801bdf4:	f6bf af63 	bge.w	801bcbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bdf8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801bdfa:	fb01 6303 	mla	r3, r1, r3, r6
 801bdfe:	141b      	asrs	r3, r3, #16
 801be00:	f53f af5d 	bmi.w	801bcbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801be04:	3a01      	subs	r2, #1
 801be06:	4293      	cmp	r3, r2
 801be08:	f6bf af59 	bge.w	801bcbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801be0c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801be10:	46ca      	mov	sl, r9
 801be12:	f1b8 0f00 	cmp.w	r8, #0
 801be16:	dc67      	bgt.n	801bee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801be18:	9b06      	ldr	r3, [sp, #24]
 801be1a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801be1e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801be22:	9b08      	ldr	r3, [sp, #32]
 801be24:	2b00      	cmp	r3, #0
 801be26:	f340 80d7 	ble.w	801bfd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801be2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801be2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801be30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801be34:	eeb0 6a62 	vmov.f32	s12, s5
 801be38:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801be3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801be40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801be44:	ee16 4a10 	vmov	r4, s12
 801be48:	eeb0 6a43 	vmov.f32	s12, s6
 801be4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801be50:	ee16 6a10 	vmov	r6, s12
 801be54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801be58:	ee61 7a27 	vmul.f32	s15, s2, s15
 801be5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801be60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801be64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801be68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801be6c:	ee12 2a90 	vmov	r2, s5
 801be70:	eef0 2a47 	vmov.f32	s5, s14
 801be74:	fb92 f3f3 	sdiv	r3, r2, r3
 801be78:	ee13 2a10 	vmov	r2, s6
 801be7c:	931f      	str	r3, [sp, #124]	; 0x7c
 801be7e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801be80:	eeb0 3a67 	vmov.f32	s6, s15
 801be84:	fb92 f3f3 	sdiv	r3, r2, r3
 801be88:	9320      	str	r3, [sp, #128]	; 0x80
 801be8a:	9b08      	ldr	r3, [sp, #32]
 801be8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be8e:	3b01      	subs	r3, #1
 801be90:	9308      	str	r3, [sp, #32]
 801be92:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801be94:	bf08      	it	eq
 801be96:	4613      	moveq	r3, r2
 801be98:	9306      	str	r3, [sp, #24]
 801be9a:	e6e4      	b.n	801bc66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801be9c:	2900      	cmp	r1, #0
 801be9e:	f43f af4e 	beq.w	801bd3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801bea2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801bea6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801beaa:	9309      	str	r3, [sp, #36]	; 0x24
 801beac:	e747      	b.n	801bd3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801beae:	f112 0a01 	adds.w	sl, r2, #1
 801beb2:	d481      	bmi.n	801bdb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801beb4:	4553      	cmp	r3, sl
 801beb6:	f6ff af7f 	blt.w	801bdb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801beba:	f11c 0a01 	adds.w	sl, ip, #1
 801bebe:	f53f af7b 	bmi.w	801bdb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bec2:	45d6      	cmp	lr, sl
 801bec4:	f6ff af78 	blt.w	801bdb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bec8:	b21b      	sxth	r3, r3
 801beca:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801bece:	fa0f f28e 	sxth.w	r2, lr
 801bed2:	9300      	str	r3, [sp, #0]
 801bed4:	463b      	mov	r3, r7
 801bed6:	9201      	str	r2, [sp, #4]
 801bed8:	9a07      	ldr	r2, [sp, #28]
 801beda:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801bede:	4641      	mov	r1, r8
 801bee0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801bee2:	f7ff fe21 	bl	801bb28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801bee6:	e767      	b.n	801bdb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bee8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801beea:	1422      	asrs	r2, r4, #16
 801beec:	1431      	asrs	r1, r6, #16
 801beee:	9d07      	ldr	r5, [sp, #28]
 801bef0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801bef4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801bef8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801befc:	fb03 2101 	mla	r1, r3, r1, r2
 801bf00:	9a07      	ldr	r2, [sp, #28]
 801bf02:	440a      	add	r2, r1
 801bf04:	5c69      	ldrb	r1, [r5, r1]
 801bf06:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801bf0a:	f1be 0f00 	cmp.w	lr, #0
 801bf0e:	d05c      	beq.n	801bfca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801bf10:	f892 c001 	ldrb.w	ip, [r2, #1]
 801bf14:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801bf18:	950d      	str	r5, [sp, #52]	; 0x34
 801bf1a:	b150      	cbz	r0, 801bf32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801bf1c:	eb02 0c03 	add.w	ip, r2, r3
 801bf20:	5cd3      	ldrb	r3, [r2, r3]
 801bf22:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bf26:	930a      	str	r3, [sp, #40]	; 0x28
 801bf28:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801bf2c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bf30:	930e      	str	r3, [sp, #56]	; 0x38
 801bf32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf34:	fb1e f200 	smulbb	r2, lr, r0
 801bf38:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bf3a:	f108 38ff 	add.w	r8, r8, #4294967295
 801bf3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801bf42:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bf46:	10d2      	asrs	r2, r2, #3
 801bf48:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801bf4c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bf50:	ea4c 0c03 	orr.w	ip, ip, r3
 801bf54:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801bf58:	9311      	str	r3, [sp, #68]	; 0x44
 801bf5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf5c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bf5e:	041b      	lsls	r3, r3, #16
 801bf60:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801bf64:	ea43 030b 	orr.w	r3, r3, fp
 801bf68:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801bf6c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801bf70:	4353      	muls	r3, r2
 801bf72:	fb05 3c0c 	mla	ip, r5, ip, r3
 801bf76:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801bf7a:	ea43 0b01 	orr.w	fp, r3, r1
 801bf7e:	f1c0 0110 	rsb	r1, r0, #16
 801bf82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bf84:	eba1 0e0e 	sub.w	lr, r1, lr
 801bf88:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801bf8c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801bf90:	fb0e cc0b 	mla	ip, lr, fp, ip
 801bf94:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801bf98:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801bf9c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bfa0:	ea4b 0e0e 	orr.w	lr, fp, lr
 801bfa4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bfa8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801bfac:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801bfb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bfb4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801bfb8:	ea43 0c0c 	orr.w	ip, r3, ip
 801bfbc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801bfbe:	441c      	add	r4, r3
 801bfc0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bfc2:	f82a cb02 	strh.w	ip, [sl], #2
 801bfc6:	441e      	add	r6, r3
 801bfc8:	e723      	b.n	801be12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801bfca:	2800      	cmp	r0, #0
 801bfcc:	d0b1      	beq.n	801bf32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801bfce:	5cd3      	ldrb	r3, [r2, r3]
 801bfd0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bfd4:	930a      	str	r3, [sp, #40]	; 0x28
 801bfd6:	e7ac      	b.n	801bf32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801bfd8:	b013      	add	sp, #76	; 0x4c
 801bfda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bfde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801bfde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfe2:	880d      	ldrh	r5, [r1, #0]
 801bfe4:	b087      	sub	sp, #28
 801bfe6:	10ef      	asrs	r7, r5, #3
 801bfe8:	9103      	str	r1, [sp, #12]
 801bfea:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801bfee:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801bff2:	00ed      	lsls	r5, r5, #3
 801bff4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bff8:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801bffc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801c000:	b2ed      	uxtb	r5, r5
 801c002:	9701      	str	r7, [sp, #4]
 801c004:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801c008:	9502      	str	r5, [sp, #8]
 801c00a:	9d01      	ldr	r5, [sp, #4]
 801c00c:	9902      	ldr	r1, [sp, #8]
 801c00e:	022d      	lsls	r5, r5, #8
 801c010:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801c014:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801c018:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801c01c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801c020:	430d      	orrs	r5, r1
 801c022:	fb06 0709 	mla	r7, r6, r9, r0
 801c026:	2e00      	cmp	r6, #0
 801c028:	9505      	str	r5, [sp, #20]
 801c02a:	eb02 0c07 	add.w	ip, r2, r7
 801c02e:	f2c0 80b6 	blt.w	801c19e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801c032:	45b3      	cmp	fp, r6
 801c034:	f340 80b3 	ble.w	801c19e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801c038:	2800      	cmp	r0, #0
 801c03a:	f2c0 80ae 	blt.w	801c19a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801c03e:	4581      	cmp	r9, r0
 801c040:	f340 80ab 	ble.w	801c19a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801c044:	5dd7      	ldrb	r7, [r2, r7]
 801c046:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c04a:	441f      	add	r7, r3
 801c04c:	1c42      	adds	r2, r0, #1
 801c04e:	f100 80a9 	bmi.w	801c1a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c052:	4591      	cmp	r9, r2
 801c054:	f340 80a6 	ble.w	801c1a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c058:	2c00      	cmp	r4, #0
 801c05a:	f000 80a3 	beq.w	801c1a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c05e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801c062:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c066:	441d      	add	r5, r3
 801c068:	3601      	adds	r6, #1
 801c06a:	f100 809f 	bmi.w	801c1ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c06e:	45b3      	cmp	fp, r6
 801c070:	f340 809c 	ble.w	801c1ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c074:	f1be 0f00 	cmp.w	lr, #0
 801c078:	f000 8098 	beq.w	801c1ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c07c:	2800      	cmp	r0, #0
 801c07e:	f2c0 8093 	blt.w	801c1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801c082:	4581      	cmp	r9, r0
 801c084:	f340 8090 	ble.w	801c1a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801c088:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801c08c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c090:	441e      	add	r6, r3
 801c092:	3001      	adds	r0, #1
 801c094:	f100 808d 	bmi.w	801c1b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c098:	4581      	cmp	r9, r0
 801c09a:	f340 808a 	ble.w	801c1b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c09e:	2c00      	cmp	r4, #0
 801c0a0:	f000 8087 	beq.w	801c1b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c0a4:	44e1      	add	r9, ip
 801c0a6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c0aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c0ae:	4413      	add	r3, r2
 801c0b0:	b2a4      	uxth	r4, r4
 801c0b2:	f897 c002 	ldrb.w	ip, [r7, #2]
 801c0b6:	fa1f fe8e 	uxth.w	lr, lr
 801c0ba:	9901      	ldr	r1, [sp, #4]
 801c0bc:	fb04 fb0e 	mul.w	fp, r4, lr
 801c0c0:	0124      	lsls	r4, r4, #4
 801c0c2:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801c0c6:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801c0ca:	eba4 040b 	sub.w	r4, r4, fp
 801c0ce:	fa1f f08e 	uxth.w	r0, lr
 801c0d2:	b2a2      	uxth	r2, r4
 801c0d4:	78ac      	ldrb	r4, [r5, #2]
 801c0d6:	eba9 0900 	sub.w	r9, r9, r0
 801c0da:	fa1f fe88 	uxth.w	lr, r8
 801c0de:	4354      	muls	r4, r2
 801c0e0:	ea6f 0808 	mvn.w	r8, r8
 801c0e4:	fa1f f989 	uxth.w	r9, r9
 801c0e8:	fa5f f888 	uxtb.w	r8, r8
 801c0ec:	fb09 440c 	mla	r4, r9, ip, r4
 801c0f0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801c0f4:	fb1a fa08 	smulbb	sl, sl, r8
 801c0f8:	fb00 440c 	mla	r4, r0, ip, r4
 801c0fc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801c100:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801c104:	787c      	ldrb	r4, [r7, #1]
 801c106:	783f      	ldrb	r7, [r7, #0]
 801c108:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801c10c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801c110:	f895 a001 	ldrb.w	sl, [r5, #1]
 801c114:	782d      	ldrb	r5, [r5, #0]
 801c116:	fb02 fa0a 	mul.w	sl, r2, sl
 801c11a:	fa1f fc8c 	uxth.w	ip, ip
 801c11e:	436a      	muls	r2, r5
 801c120:	7835      	ldrb	r5, [r6, #0]
 801c122:	fb09 aa04 	mla	sl, r9, r4, sl
 801c126:	7874      	ldrb	r4, [r6, #1]
 801c128:	fb09 2207 	mla	r2, r9, r7, r2
 801c12c:	fb00 aa04 	mla	sl, r0, r4, sl
 801c130:	785c      	ldrb	r4, [r3, #1]
 801c132:	fb00 2005 	mla	r0, r0, r5, r2
 801c136:	781b      	ldrb	r3, [r3, #0]
 801c138:	fb0b a404 	mla	r4, fp, r4, sl
 801c13c:	fb11 fa08 	smulbb	sl, r1, r8
 801c140:	fb0b 0b03 	mla	fp, fp, r3, r0
 801c144:	9b02      	ldr	r3, [sp, #8]
 801c146:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801c14a:	fb13 f808 	smulbb	r8, r3, r8
 801c14e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801c152:	fb04 a40e 	mla	r4, r4, lr, sl
 801c156:	f10c 0301 	add.w	r3, ip, #1
 801c15a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801c15e:	b2a4      	uxth	r4, r4
 801c160:	fa1f fe8e 	uxth.w	lr, lr
 801c164:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c168:	f104 0a01 	add.w	sl, r4, #1
 801c16c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801c170:	f10e 0c01 	add.w	ip, lr, #1
 801c174:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c178:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c17c:	0964      	lsrs	r4, r4, #5
 801c17e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c182:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c186:	ea4c 0c03 	orr.w	ip, ip, r3
 801c18a:	9b03      	ldr	r3, [sp, #12]
 801c18c:	ea4c 0c04 	orr.w	ip, ip, r4
 801c190:	f8a3 c000 	strh.w	ip, [r3]
 801c194:	b007      	add	sp, #28
 801c196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c19a:	af05      	add	r7, sp, #20
 801c19c:	e756      	b.n	801c04c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801c19e:	ad05      	add	r5, sp, #20
 801c1a0:	462f      	mov	r7, r5
 801c1a2:	e761      	b.n	801c068 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801c1a4:	ad05      	add	r5, sp, #20
 801c1a6:	e75f      	b.n	801c068 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801c1a8:	ae05      	add	r6, sp, #20
 801c1aa:	e772      	b.n	801c092 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801c1ac:	ab05      	add	r3, sp, #20
 801c1ae:	461e      	mov	r6, r3
 801c1b0:	e77e      	b.n	801c0b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801c1b2:	ab05      	add	r3, sp, #20
 801c1b4:	e77c      	b.n	801c0b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801c1b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c1b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1ba:	b095      	sub	sp, #84	; 0x54
 801c1bc:	9212      	str	r2, [sp, #72]	; 0x48
 801c1be:	9309      	str	r3, [sp, #36]	; 0x24
 801c1c0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c1c2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801c1c6:	9013      	str	r0, [sp, #76]	; 0x4c
 801c1c8:	930f      	str	r3, [sp, #60]	; 0x3c
 801c1ca:	6850      	ldr	r0, [r2, #4]
 801c1cc:	910e      	str	r1, [sp, #56]	; 0x38
 801c1ce:	6812      	ldr	r2, [r2, #0]
 801c1d0:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801c1d4:	fb00 1303 	mla	r3, r0, r3, r1
 801c1d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c1dc:	930a      	str	r3, [sp, #40]	; 0x28
 801c1de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c1e0:	681b      	ldr	r3, [r3, #0]
 801c1e2:	930d      	str	r3, [sp, #52]	; 0x34
 801c1e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c1e6:	685c      	ldr	r4, [r3, #4]
 801c1e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c1ea:	3404      	adds	r4, #4
 801c1ec:	43db      	mvns	r3, r3
 801c1ee:	b2db      	uxtb	r3, r3
 801c1f0:	930b      	str	r3, [sp, #44]	; 0x2c
 801c1f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c1f4:	2b00      	cmp	r3, #0
 801c1f6:	dc03      	bgt.n	801c200 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c1f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801c1fa:	2b00      	cmp	r3, #0
 801c1fc:	f340 8255 	ble.w	801c6aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801c200:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c202:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c206:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c20a:	1e48      	subs	r0, r1, #1
 801c20c:	1e55      	subs	r5, r2, #1
 801c20e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c210:	2b00      	cmp	r3, #0
 801c212:	f340 80f9 	ble.w	801c408 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c216:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801c218:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c21a:	1436      	asrs	r6, r6, #16
 801c21c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c220:	d406      	bmi.n	801c230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c222:	4286      	cmp	r6, r0
 801c224:	da04      	bge.n	801c230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c226:	2b00      	cmp	r3, #0
 801c228:	db02      	blt.n	801c230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c22a:	42ab      	cmp	r3, r5
 801c22c:	f2c0 80ed 	blt.w	801c40a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801c230:	3601      	adds	r6, #1
 801c232:	f100 80da 	bmi.w	801c3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c236:	42b1      	cmp	r1, r6
 801c238:	f2c0 80d7 	blt.w	801c3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c23c:	3301      	adds	r3, #1
 801c23e:	f100 80d4 	bmi.w	801c3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c242:	429a      	cmp	r2, r3
 801c244:	f2c0 80d1 	blt.w	801c3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c248:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c24a:	9311      	str	r3, [sp, #68]	; 0x44
 801c24c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c24e:	930c      	str	r3, [sp, #48]	; 0x30
 801c250:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c252:	2b00      	cmp	r3, #0
 801c254:	f340 80fa 	ble.w	801c44c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801c258:	9826      	ldr	r0, [sp, #152]	; 0x98
 801c25a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c25c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801c25e:	68c6      	ldr	r6, [r0, #12]
 801c260:	141d      	asrs	r5, r3, #16
 801c262:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801c264:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801c268:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c26a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801c26c:	1400      	asrs	r0, r0, #16
 801c26e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801c272:	6892      	ldr	r2, [r2, #8]
 801c274:	f100 813e 	bmi.w	801c4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c278:	1e57      	subs	r7, r2, #1
 801c27a:	42b8      	cmp	r0, r7
 801c27c:	f280 813a 	bge.w	801c4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c280:	2d00      	cmp	r5, #0
 801c282:	f2c0 8137 	blt.w	801c4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c286:	1e77      	subs	r7, r6, #1
 801c288:	42bd      	cmp	r5, r7
 801c28a:	f280 8133 	bge.w	801c4f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c28e:	b212      	sxth	r2, r2
 801c290:	fb05 0002 	mla	r0, r5, r2, r0
 801c294:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c296:	f815 a000 	ldrb.w	sl, [r5, r0]
 801c29a:	182e      	adds	r6, r5, r0
 801c29c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801c2a0:	eb04 050a 	add.w	r5, r4, sl
 801c2a4:	2b00      	cmp	r3, #0
 801c2a6:	f000 8117 	beq.w	801c4d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801c2aa:	f896 c001 	ldrb.w	ip, [r6, #1]
 801c2ae:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c2b2:	44a4      	add	ip, r4
 801c2b4:	2900      	cmp	r1, #0
 801c2b6:	f000 8117 	beq.w	801c4e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801c2ba:	18b0      	adds	r0, r6, r2
 801c2bc:	5cb2      	ldrb	r2, [r6, r2]
 801c2be:	7840      	ldrb	r0, [r0, #1]
 801c2c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c2c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c2c8:	4422      	add	r2, r4
 801c2ca:	4420      	add	r0, r4
 801c2cc:	b29b      	uxth	r3, r3
 801c2ce:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801c2d2:	b289      	uxth	r1, r1
 801c2d4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801c2d8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c2da:	fb03 f901 	mul.w	r9, r3, r1
 801c2de:	011b      	lsls	r3, r3, #4
 801c2e0:	f8b6 e000 	ldrh.w	lr, [r6]
 801c2e4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c2e8:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801c2ec:	eba3 0309 	sub.w	r3, r3, r9
 801c2f0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801c2f4:	b289      	uxth	r1, r1
 801c2f6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801c2fa:	b29b      	uxth	r3, r3
 801c2fc:	eba8 0801 	sub.w	r8, r8, r1
 801c300:	435f      	muls	r7, r3
 801c302:	fa1f f888 	uxth.w	r8, r8
 801c306:	9310      	str	r3, [sp, #64]	; 0x40
 801c308:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c30a:	fb08 770b 	mla	r7, r8, fp, r7
 801c30e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801c312:	fb01 770b 	mla	r7, r1, fp, r7
 801c316:	f890 b002 	ldrb.w	fp, [r0, #2]
 801c31a:	fb09 770b 	mla	r7, r9, fp, r7
 801c31e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801c322:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801c326:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c32a:	fb1b fb03 	smulbb	fp, fp, r3
 801c32e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c330:	fb07 b706 	mla	r7, r7, r6, fp
 801c334:	f895 b001 	ldrb.w	fp, [r5, #1]
 801c338:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801c33c:	f89c c000 	ldrb.w	ip, [ip]
 801c340:	b2bf      	uxth	r7, r7
 801c342:	435d      	muls	r5, r3
 801c344:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c346:	fb08 550b 	mla	r5, r8, fp, r5
 801c34a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801c34e:	fb01 550b 	mla	r5, r1, fp, r5
 801c352:	f890 b001 	ldrb.w	fp, [r0, #1]
 801c356:	fb09 550b 	mla	r5, r9, fp, r5
 801c35a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801c35e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c362:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c366:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c36a:	fa5f fe8e 	uxtb.w	lr, lr
 801c36e:	fb1b fb03 	smulbb	fp, fp, r3
 801c372:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c374:	fb03 f30c 	mul.w	r3, r3, ip
 801c378:	f892 c000 	ldrb.w	ip, [r2]
 801c37c:	fb05 b506 	mla	r5, r5, r6, fp
 801c380:	fb08 330a 	mla	r3, r8, sl, r3
 801c384:	b2ad      	uxth	r5, r5
 801c386:	fb01 330c 	mla	r3, r1, ip, r3
 801c38a:	f890 c000 	ldrb.w	ip, [r0]
 801c38e:	f105 0b01 	add.w	fp, r5, #1
 801c392:	fb09 3c0c 	mla	ip, r9, ip, r3
 801c396:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c398:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c39c:	fb1e fe03 	smulbb	lr, lr, r3
 801c3a0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801c3a4:	1c7b      	adds	r3, r7, #1
 801c3a6:	096d      	lsrs	r5, r5, #5
 801c3a8:	fb0c e606 	mla	r6, ip, r6, lr
 801c3ac:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c3b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3b4:	b2b6      	uxth	r6, r6
 801c3b6:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801c3ba:	1c77      	adds	r7, r6, #1
 801c3bc:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801c3c0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c3c4:	431f      	orrs	r7, r3
 801c3c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c3c8:	433d      	orrs	r5, r7
 801c3ca:	801d      	strh	r5, [r3, #0]
 801c3cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c3ce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c3d0:	3302      	adds	r3, #2
 801c3d2:	930c      	str	r3, [sp, #48]	; 0x30
 801c3d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c3d6:	4413      	add	r3, r2
 801c3d8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c3da:	931f      	str	r3, [sp, #124]	; 0x7c
 801c3dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c3de:	4413      	add	r3, r2
 801c3e0:	9320      	str	r3, [sp, #128]	; 0x80
 801c3e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c3e4:	3b01      	subs	r3, #1
 801c3e6:	9311      	str	r3, [sp, #68]	; 0x44
 801c3e8:	e732      	b.n	801c250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c3ea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c3ec:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c3ee:	4433      	add	r3, r6
 801c3f0:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801c3f2:	931f      	str	r3, [sp, #124]	; 0x7c
 801c3f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c3f6:	4433      	add	r3, r6
 801c3f8:	9320      	str	r3, [sp, #128]	; 0x80
 801c3fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c3fc:	3b01      	subs	r3, #1
 801c3fe:	9309      	str	r3, [sp, #36]	; 0x24
 801c400:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c402:	3302      	adds	r3, #2
 801c404:	930a      	str	r3, [sp, #40]	; 0x28
 801c406:	e702      	b.n	801c20e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c408:	d027      	beq.n	801c45a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801c40a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c40c:	9821      	ldr	r0, [sp, #132]	; 0x84
 801c40e:	3b01      	subs	r3, #1
 801c410:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801c412:	fb00 5003 	mla	r0, r0, r3, r5
 801c416:	1400      	asrs	r0, r0, #16
 801c418:	f53f af16 	bmi.w	801c248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c41c:	3901      	subs	r1, #1
 801c41e:	4288      	cmp	r0, r1
 801c420:	f6bf af12 	bge.w	801c248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c424:	9922      	ldr	r1, [sp, #136]	; 0x88
 801c426:	9820      	ldr	r0, [sp, #128]	; 0x80
 801c428:	fb01 0303 	mla	r3, r1, r3, r0
 801c42c:	141b      	asrs	r3, r3, #16
 801c42e:	f53f af0b 	bmi.w	801c248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c432:	3a01      	subs	r2, #1
 801c434:	4293      	cmp	r3, r2
 801c436:	f6bf af07 	bge.w	801c248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c43a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c43c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801c440:	9311      	str	r3, [sp, #68]	; 0x44
 801c442:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c444:	930c      	str	r3, [sp, #48]	; 0x30
 801c446:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c448:	2b00      	cmp	r3, #0
 801c44a:	dc70      	bgt.n	801c52e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801c44c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c44e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c450:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c454:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c458:	930a      	str	r3, [sp, #40]	; 0x28
 801c45a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c45c:	2b00      	cmp	r3, #0
 801c45e:	f340 8124 	ble.w	801c6aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801c462:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c466:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c468:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c46c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c470:	eef0 6a62 	vmov.f32	s13, s5
 801c474:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c478:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c47c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c480:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801c484:	eef0 6a43 	vmov.f32	s13, s6
 801c488:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c48c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801c490:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c494:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c498:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c49c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4a8:	ee12 2a90 	vmov	r2, s5
 801c4ac:	eef0 2a47 	vmov.f32	s5, s14
 801c4b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4b4:	ee13 2a10 	vmov	r2, s6
 801c4b8:	9321      	str	r3, [sp, #132]	; 0x84
 801c4ba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c4bc:	eeb0 3a67 	vmov.f32	s6, s15
 801c4c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4c4:	9322      	str	r3, [sp, #136]	; 0x88
 801c4c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c4c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c4ca:	3b01      	subs	r3, #1
 801c4cc:	930e      	str	r3, [sp, #56]	; 0x38
 801c4ce:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c4d0:	bf08      	it	eq
 801c4d2:	4613      	moveq	r3, r2
 801c4d4:	9309      	str	r3, [sp, #36]	; 0x24
 801c4d6:	e68c      	b.n	801c1f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c4d8:	b149      	cbz	r1, 801c4ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801c4da:	5cb2      	ldrb	r2, [r6, r2]
 801c4dc:	4628      	mov	r0, r5
 801c4de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c4e2:	4422      	add	r2, r4
 801c4e4:	46ac      	mov	ip, r5
 801c4e6:	e6f1      	b.n	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c4e8:	4628      	mov	r0, r5
 801c4ea:	462a      	mov	r2, r5
 801c4ec:	e6ee      	b.n	801c2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c4ee:	4628      	mov	r0, r5
 801c4f0:	462a      	mov	r2, r5
 801c4f2:	e7f7      	b.n	801c4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801c4f4:	1c47      	adds	r7, r0, #1
 801c4f6:	f53f af69 	bmi.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c4fa:	42ba      	cmp	r2, r7
 801c4fc:	f6ff af66 	blt.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c500:	1c6f      	adds	r7, r5, #1
 801c502:	f53f af63 	bmi.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c506:	42be      	cmp	r6, r7
 801c508:	f6ff af60 	blt.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c50c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c50e:	b236      	sxth	r6, r6
 801c510:	b212      	sxth	r2, r2
 801c512:	9002      	str	r0, [sp, #8]
 801c514:	9601      	str	r6, [sp, #4]
 801c516:	9200      	str	r2, [sp, #0]
 801c518:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c51a:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801c51e:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801c522:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801c526:	4623      	mov	r3, r4
 801c528:	f7ff fd59 	bl	801bfde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801c52c:	e74e      	b.n	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c52e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801c530:	9820      	ldr	r0, [sp, #128]	; 0x80
 801c532:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801c536:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801c538:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801c53a:	1400      	asrs	r0, r0, #16
 801c53c:	142d      	asrs	r5, r5, #16
 801c53e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c540:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801c544:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801c548:	fb02 5000 	mla	r0, r2, r0, r5
 801c54c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c54e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801c552:	182e      	adds	r6, r5, r0
 801c554:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801c558:	eb04 0509 	add.w	r5, r4, r9
 801c55c:	2b00      	cmp	r3, #0
 801c55e:	f000 8096 	beq.w	801c68e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c562:	7877      	ldrb	r7, [r6, #1]
 801c564:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c568:	4427      	add	r7, r4
 801c56a:	2900      	cmp	r1, #0
 801c56c:	f000 8097 	beq.w	801c69e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801c570:	18b0      	adds	r0, r6, r2
 801c572:	5cb2      	ldrb	r2, [r6, r2]
 801c574:	7840      	ldrb	r0, [r0, #1]
 801c576:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c57a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c57e:	4422      	add	r2, r4
 801c580:	4420      	add	r0, r4
 801c582:	b29b      	uxth	r3, r3
 801c584:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c586:	b289      	uxth	r1, r1
 801c588:	f895 b002 	ldrb.w	fp, [r5, #2]
 801c58c:	f8b6 c000 	ldrh.w	ip, [r6]
 801c590:	fb03 f801 	mul.w	r8, r3, r1
 801c594:	011b      	lsls	r3, r3, #4
 801c596:	78be      	ldrb	r6, [r7, #2]
 801c598:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801c59c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801c5a0:	eba3 0308 	sub.w	r3, r3, r8
 801c5a4:	f814 9009 	ldrb.w	r9, [r4, r9]
 801c5a8:	b289      	uxth	r1, r1
 801c5aa:	b29b      	uxth	r3, r3
 801c5ac:	ebae 0e01 	sub.w	lr, lr, r1
 801c5b0:	435e      	muls	r6, r3
 801c5b2:	fa1f fe8e 	uxth.w	lr, lr
 801c5b6:	9310      	str	r3, [sp, #64]	; 0x40
 801c5b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c5ba:	fb0e 660b 	mla	r6, lr, fp, r6
 801c5be:	f892 b002 	ldrb.w	fp, [r2, #2]
 801c5c2:	fb01 660b 	mla	r6, r1, fp, r6
 801c5c6:	f890 b002 	ldrb.w	fp, [r0, #2]
 801c5ca:	fb08 660b 	mla	r6, r8, fp, r6
 801c5ce:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801c5d2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801c5d6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c5da:	fb1b fb03 	smulbb	fp, fp, r3
 801c5de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c5e0:	fb06 b60a 	mla	r6, r6, sl, fp
 801c5e4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801c5e8:	787d      	ldrb	r5, [r7, #1]
 801c5ea:	783f      	ldrb	r7, [r7, #0]
 801c5ec:	b2b6      	uxth	r6, r6
 801c5ee:	435d      	muls	r5, r3
 801c5f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c5f2:	fb0e 550b 	mla	r5, lr, fp, r5
 801c5f6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801c5fa:	fb01 550b 	mla	r5, r1, fp, r5
 801c5fe:	f890 b001 	ldrb.w	fp, [r0, #1]
 801c602:	fb08 550b 	mla	r5, r8, fp, r5
 801c606:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c60a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c60e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c612:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c616:	fa5f fc8c 	uxtb.w	ip, ip
 801c61a:	fb1b fb03 	smulbb	fp, fp, r3
 801c61e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c620:	437b      	muls	r3, r7
 801c622:	7817      	ldrb	r7, [r2, #0]
 801c624:	fb05 b50a 	mla	r5, r5, sl, fp
 801c628:	fb0e 3309 	mla	r3, lr, r9, r3
 801c62c:	b2ad      	uxth	r5, r5
 801c62e:	fb01 3307 	mla	r3, r1, r7, r3
 801c632:	7807      	ldrb	r7, [r0, #0]
 801c634:	f105 0b01 	add.w	fp, r5, #1
 801c638:	fb08 3707 	mla	r7, r8, r7, r3
 801c63c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c63e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c642:	fb1c fc03 	smulbb	ip, ip, r3
 801c646:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c64a:	1c73      	adds	r3, r6, #1
 801c64c:	096d      	lsrs	r5, r5, #5
 801c64e:	fb07 c70a 	mla	r7, r7, sl, ip
 801c652:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c656:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c65a:	b2bf      	uxth	r7, r7
 801c65c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c65e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c662:	1c7a      	adds	r2, r7, #1
 801c664:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c668:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c66c:	4316      	orrs	r6, r2
 801c66e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c670:	432e      	orrs	r6, r5
 801c672:	f823 6b02 	strh.w	r6, [r3], #2
 801c676:	930c      	str	r3, [sp, #48]	; 0x30
 801c678:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c67a:	4413      	add	r3, r2
 801c67c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c67e:	931f      	str	r3, [sp, #124]	; 0x7c
 801c680:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c682:	4413      	add	r3, r2
 801c684:	9320      	str	r3, [sp, #128]	; 0x80
 801c686:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c688:	3b01      	subs	r3, #1
 801c68a:	9311      	str	r3, [sp, #68]	; 0x44
 801c68c:	e6db      	b.n	801c446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801c68e:	b149      	cbz	r1, 801c6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c690:	5cb2      	ldrb	r2, [r6, r2]
 801c692:	4628      	mov	r0, r5
 801c694:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c698:	4422      	add	r2, r4
 801c69a:	462f      	mov	r7, r5
 801c69c:	e771      	b.n	801c582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801c69e:	4628      	mov	r0, r5
 801c6a0:	462a      	mov	r2, r5
 801c6a2:	e76e      	b.n	801c582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801c6a4:	4628      	mov	r0, r5
 801c6a6:	462a      	mov	r2, r5
 801c6a8:	e7f7      	b.n	801c69a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c6aa:	b015      	add	sp, #84	; 0x54
 801c6ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801c6b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6b4:	880f      	ldrh	r7, [r1, #0]
 801c6b6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801c6ba:	023c      	lsls	r4, r7, #8
 801c6bc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c6c0:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801c6c4:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801c6c8:	017c      	lsls	r4, r7, #5
 801c6ca:	00ff      	lsls	r7, r7, #3
 801c6cc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801c6d0:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801c6d4:	b2ff      	uxtb	r7, r7
 801c6d6:	ea4b 0404 	orr.w	r4, fp, r4
 801c6da:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801c6de:	4327      	orrs	r7, r4
 801c6e0:	fb05 ca0e 	mla	sl, r5, lr, ip
 801c6e4:	2d00      	cmp	r5, #0
 801c6e6:	9701      	str	r7, [sp, #4]
 801c6e8:	eb02 080a 	add.w	r8, r2, sl
 801c6ec:	db7e      	blt.n	801c7ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801c6ee:	45a9      	cmp	r9, r5
 801c6f0:	dd7c      	ble.n	801c7ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801c6f2:	f1bc 0f00 	cmp.w	ip, #0
 801c6f6:	db77      	blt.n	801c7e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801c6f8:	45e6      	cmp	lr, ip
 801c6fa:	dd75      	ble.n	801c7e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801c6fc:	f812 700a 	ldrb.w	r7, [r2, sl]
 801c700:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c704:	441f      	add	r7, r3
 801c706:	f11c 0201 	adds.w	r2, ip, #1
 801c70a:	d472      	bmi.n	801c7f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c70c:	4596      	cmp	lr, r2
 801c70e:	dd70      	ble.n	801c7f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c710:	2800      	cmp	r0, #0
 801c712:	d06e      	beq.n	801c7f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c714:	f898 4001 	ldrb.w	r4, [r8, #1]
 801c718:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801c71c:	441c      	add	r4, r3
 801c71e:	3501      	adds	r5, #1
 801c720:	d46b      	bmi.n	801c7fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c722:	45a9      	cmp	r9, r5
 801c724:	dd69      	ble.n	801c7fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c726:	2e00      	cmp	r6, #0
 801c728:	d067      	beq.n	801c7fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c72a:	f1bc 0f00 	cmp.w	ip, #0
 801c72e:	db62      	blt.n	801c7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801c730:	45e6      	cmp	lr, ip
 801c732:	dd60      	ble.n	801c7f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801c734:	f818 500e 	ldrb.w	r5, [r8, lr]
 801c738:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c73c:	441d      	add	r5, r3
 801c73e:	f11c 0201 	adds.w	r2, ip, #1
 801c742:	d45d      	bmi.n	801c800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c744:	4596      	cmp	lr, r2
 801c746:	dd5b      	ble.n	801c800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c748:	2800      	cmp	r0, #0
 801c74a:	d059      	beq.n	801c800 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c74c:	44c6      	add	lr, r8
 801c74e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c752:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c756:	4413      	add	r3, r2
 801c758:	b280      	uxth	r0, r0
 801c75a:	f897 e002 	ldrb.w	lr, [r7, #2]
 801c75e:	b2b2      	uxth	r2, r6
 801c760:	f897 9000 	ldrb.w	r9, [r7]
 801c764:	787f      	ldrb	r7, [r7, #1]
 801c766:	fb00 f602 	mul.w	r6, r0, r2
 801c76a:	0100      	lsls	r0, r0, #4
 801c76c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801c770:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801c774:	1b80      	subs	r0, r0, r6
 801c776:	fa1f fc82 	uxth.w	ip, r2
 801c77a:	b282      	uxth	r2, r0
 801c77c:	78a0      	ldrb	r0, [r4, #2]
 801c77e:	eba8 080c 	sub.w	r8, r8, ip
 801c782:	4350      	muls	r0, r2
 801c784:	fa1f f888 	uxth.w	r8, r8
 801c788:	fb08 0e0e 	mla	lr, r8, lr, r0
 801c78c:	78a8      	ldrb	r0, [r5, #2]
 801c78e:	fb0c e000 	mla	r0, ip, r0, lr
 801c792:	f893 e002 	ldrb.w	lr, [r3, #2]
 801c796:	fb06 0e0e 	mla	lr, r6, lr, r0
 801c79a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801c79e:	f894 e000 	ldrb.w	lr, [r4]
 801c7a2:	fb02 fe0e 	mul.w	lr, r2, lr
 801c7a6:	fb08 e909 	mla	r9, r8, r9, lr
 801c7aa:	f895 e000 	ldrb.w	lr, [r5]
 801c7ae:	fb0c 990e 	mla	r9, ip, lr, r9
 801c7b2:	f893 e000 	ldrb.w	lr, [r3]
 801c7b6:	785b      	ldrb	r3, [r3, #1]
 801c7b8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801c7bc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c7c0:	ea4e 0e00 	orr.w	lr, lr, r0
 801c7c4:	7860      	ldrb	r0, [r4, #1]
 801c7c6:	4350      	muls	r0, r2
 801c7c8:	786a      	ldrb	r2, [r5, #1]
 801c7ca:	fb08 0007 	mla	r0, r8, r7, r0
 801c7ce:	fb0c 0202 	mla	r2, ip, r2, r0
 801c7d2:	fb06 2303 	mla	r3, r6, r3, r2
 801c7d6:	095b      	lsrs	r3, r3, #5
 801c7d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c7dc:	ea4e 0303 	orr.w	r3, lr, r3
 801c7e0:	800b      	strh	r3, [r1, #0]
 801c7e2:	b003      	add	sp, #12
 801c7e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7e8:	af01      	add	r7, sp, #4
 801c7ea:	e78c      	b.n	801c706 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801c7ec:	ac01      	add	r4, sp, #4
 801c7ee:	4627      	mov	r7, r4
 801c7f0:	e795      	b.n	801c71e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c7f2:	ac01      	add	r4, sp, #4
 801c7f4:	e793      	b.n	801c71e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c7f6:	ad01      	add	r5, sp, #4
 801c7f8:	e7a1      	b.n	801c73e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801c7fa:	ab01      	add	r3, sp, #4
 801c7fc:	461d      	mov	r5, r3
 801c7fe:	e7ab      	b.n	801c758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801c800:	ab01      	add	r3, sp, #4
 801c802:	e7a9      	b.n	801c758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801c804 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c808:	b08f      	sub	sp, #60	; 0x3c
 801c80a:	920c      	str	r2, [sp, #48]	; 0x30
 801c80c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801c80e:	900d      	str	r0, [sp, #52]	; 0x34
 801c810:	910a      	str	r1, [sp, #40]	; 0x28
 801c812:	6850      	ldr	r0, [r2, #4]
 801c814:	9306      	str	r3, [sp, #24]
 801c816:	6812      	ldr	r2, [r2, #0]
 801c818:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801c81c:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801c820:	fb00 1303 	mla	r3, r0, r3, r1
 801c824:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c828:	9307      	str	r3, [sp, #28]
 801c82a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c82c:	681b      	ldr	r3, [r3, #0]
 801c82e:	9308      	str	r3, [sp, #32]
 801c830:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c832:	685c      	ldr	r4, [r3, #4]
 801c834:	3404      	adds	r4, #4
 801c836:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c838:	2b00      	cmp	r3, #0
 801c83a:	dc03      	bgt.n	801c844 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801c83c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c83e:	2b00      	cmp	r3, #0
 801c840:	f340 81d5 	ble.w	801cbee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c844:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c846:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c84a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c84e:	1e48      	subs	r0, r1, #1
 801c850:	1e56      	subs	r6, r2, #1
 801c852:	9b06      	ldr	r3, [sp, #24]
 801c854:	2b00      	cmp	r3, #0
 801c856:	f340 80b6 	ble.w	801c9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c85a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801c85e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c862:	d406      	bmi.n	801c872 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c864:	4287      	cmp	r7, r0
 801c866:	da04      	bge.n	801c872 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c868:	2b00      	cmp	r3, #0
 801c86a:	db02      	blt.n	801c872 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c86c:	42b3      	cmp	r3, r6
 801c86e:	f2c0 80ab 	blt.w	801c9c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801c872:	3701      	adds	r7, #1
 801c874:	f100 809c 	bmi.w	801c9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c878:	42b9      	cmp	r1, r7
 801c87a:	f2c0 8099 	blt.w	801c9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c87e:	3301      	adds	r3, #1
 801c880:	f100 8096 	bmi.w	801c9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c884:	429a      	cmp	r2, r3
 801c886:	f2c0 8093 	blt.w	801c9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c88a:	9b06      	ldr	r3, [sp, #24]
 801c88c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c88e:	9b07      	ldr	r3, [sp, #28]
 801c890:	9309      	str	r3, [sp, #36]	; 0x24
 801c892:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c894:	2b00      	cmp	r3, #0
 801c896:	f340 80b4 	ble.w	801ca02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801c89a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801c89c:	142e      	asrs	r6, r5, #16
 801c89e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801c8a0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801c8a4:	68c7      	ldr	r7, [r0, #12]
 801c8a6:	ea5f 402b 	movs.w	r0, fp, asr #16
 801c8aa:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c8ae:	6892      	ldr	r2, [r2, #8]
 801c8b0:	f100 80fb 	bmi.w	801caaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c8b4:	f102 3cff 	add.w	ip, r2, #4294967295
 801c8b8:	4560      	cmp	r0, ip
 801c8ba:	f280 80f6 	bge.w	801caaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c8be:	2e00      	cmp	r6, #0
 801c8c0:	f2c0 80f3 	blt.w	801caaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c8c4:	f107 3cff 	add.w	ip, r7, #4294967295
 801c8c8:	4566      	cmp	r6, ip
 801c8ca:	f280 80ee 	bge.w	801caaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c8ce:	b212      	sxth	r2, r2
 801c8d0:	fb06 0002 	mla	r0, r6, r2, r0
 801c8d4:	9e08      	ldr	r6, [sp, #32]
 801c8d6:	1837      	adds	r7, r6, r0
 801c8d8:	5c30      	ldrb	r0, [r6, r0]
 801c8da:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801c8de:	eb04 0c08 	add.w	ip, r4, r8
 801c8e2:	2b00      	cmp	r3, #0
 801c8e4:	f000 80d3 	beq.w	801ca8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801c8e8:	787e      	ldrb	r6, [r7, #1]
 801c8ea:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c8ee:	4426      	add	r6, r4
 801c8f0:	2900      	cmp	r1, #0
 801c8f2:	f000 80d4 	beq.w	801ca9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c8f6:	18b8      	adds	r0, r7, r2
 801c8f8:	5cba      	ldrb	r2, [r7, r2]
 801c8fa:	7840      	ldrb	r0, [r0, #1]
 801c8fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c900:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c904:	4422      	add	r2, r4
 801c906:	4420      	add	r0, r4
 801c908:	b29b      	uxth	r3, r3
 801c90a:	78b7      	ldrb	r7, [r6, #2]
 801c90c:	b289      	uxth	r1, r1
 801c90e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801c912:	f89c c001 	ldrb.w	ip, [ip, #1]
 801c916:	fb03 f901 	mul.w	r9, r3, r1
 801c91a:	011b      	lsls	r3, r3, #4
 801c91c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c920:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801c924:	eba3 0309 	sub.w	r3, r3, r9
 801c928:	b289      	uxth	r1, r1
 801c92a:	b29b      	uxth	r3, r3
 801c92c:	ebae 0e01 	sub.w	lr, lr, r1
 801c930:	435f      	muls	r7, r3
 801c932:	fa1f fe8e 	uxth.w	lr, lr
 801c936:	fb0e 770a 	mla	r7, lr, sl, r7
 801c93a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801c93e:	fb01 770a 	mla	r7, r1, sl, r7
 801c942:	f890 a002 	ldrb.w	sl, [r0, #2]
 801c946:	fb09 7a0a 	mla	sl, r9, sl, r7
 801c94a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801c94e:	f896 8000 	ldrb.w	r8, [r6]
 801c952:	7876      	ldrb	r6, [r6, #1]
 801c954:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801c958:	fb03 f808 	mul.w	r8, r3, r8
 801c95c:	4373      	muls	r3, r6
 801c95e:	fb0e 8807 	mla	r8, lr, r7, r8
 801c962:	7817      	ldrb	r7, [r2, #0]
 801c964:	fb0e 330c 	mla	r3, lr, ip, r3
 801c968:	fb01 8807 	mla	r8, r1, r7, r8
 801c96c:	7807      	ldrb	r7, [r0, #0]
 801c96e:	fb09 8707 	mla	r7, r9, r7, r8
 801c972:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c976:	ea47 070a 	orr.w	r7, r7, sl
 801c97a:	f892 a001 	ldrb.w	sl, [r2, #1]
 801c97e:	fb01 310a 	mla	r1, r1, sl, r3
 801c982:	f890 a001 	ldrb.w	sl, [r0, #1]
 801c986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c988:	fb09 1a0a 	mla	sl, r9, sl, r1
 801c98c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c990:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c994:	ea47 070a 	orr.w	r7, r7, sl
 801c998:	801f      	strh	r7, [r3, #0]
 801c99a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c99c:	3302      	adds	r3, #2
 801c99e:	9309      	str	r3, [sp, #36]	; 0x24
 801c9a0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c9a2:	449b      	add	fp, r3
 801c9a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c9a6:	441d      	add	r5, r3
 801c9a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c9aa:	3b01      	subs	r3, #1
 801c9ac:	930b      	str	r3, [sp, #44]	; 0x2c
 801c9ae:	e770      	b.n	801c892 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c9b0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c9b2:	449b      	add	fp, r3
 801c9b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c9b6:	441d      	add	r5, r3
 801c9b8:	9b06      	ldr	r3, [sp, #24]
 801c9ba:	3b01      	subs	r3, #1
 801c9bc:	9306      	str	r3, [sp, #24]
 801c9be:	9b07      	ldr	r3, [sp, #28]
 801c9c0:	3302      	adds	r3, #2
 801c9c2:	9307      	str	r3, [sp, #28]
 801c9c4:	e745      	b.n	801c852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801c9c6:	d023      	beq.n	801ca10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801c9c8:	9b06      	ldr	r3, [sp, #24]
 801c9ca:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801c9cc:	3b01      	subs	r3, #1
 801c9ce:	fb00 b003 	mla	r0, r0, r3, fp
 801c9d2:	1400      	asrs	r0, r0, #16
 801c9d4:	f53f af59 	bmi.w	801c88a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c9d8:	3901      	subs	r1, #1
 801c9da:	4288      	cmp	r0, r1
 801c9dc:	f6bf af55 	bge.w	801c88a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c9e0:	991c      	ldr	r1, [sp, #112]	; 0x70
 801c9e2:	fb01 5303 	mla	r3, r1, r3, r5
 801c9e6:	141b      	asrs	r3, r3, #16
 801c9e8:	f53f af4f 	bmi.w	801c88a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c9ec:	3a01      	subs	r2, #1
 801c9ee:	4293      	cmp	r3, r2
 801c9f0:	f6bf af4b 	bge.w	801c88a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c9f4:	9b06      	ldr	r3, [sp, #24]
 801c9f6:	9309      	str	r3, [sp, #36]	; 0x24
 801c9f8:	9b07      	ldr	r3, [sp, #28]
 801c9fa:	930b      	str	r3, [sp, #44]	; 0x2c
 801c9fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c9fe:	2b00      	cmp	r3, #0
 801ca00:	dc70      	bgt.n	801cae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ca02:	9b06      	ldr	r3, [sp, #24]
 801ca04:	9a07      	ldr	r2, [sp, #28]
 801ca06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ca0a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ca0e:	9307      	str	r3, [sp, #28]
 801ca10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca12:	2b00      	cmp	r3, #0
 801ca14:	f340 80eb 	ble.w	801cbee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ca18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ca1c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ca1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca26:	eef0 6a62 	vmov.f32	s13, s5
 801ca2a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ca2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca36:	ee16 ba90 	vmov	fp, s13
 801ca3a:	eef0 6a43 	vmov.f32	s13, s6
 801ca3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca42:	ee16 5a90 	vmov	r5, s13
 801ca46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca5e:	ee12 2a90 	vmov	r2, s5
 801ca62:	eef0 2a47 	vmov.f32	s5, s14
 801ca66:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca6a:	ee13 2a10 	vmov	r2, s6
 801ca6e:	931b      	str	r3, [sp, #108]	; 0x6c
 801ca70:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ca72:	eeb0 3a67 	vmov.f32	s6, s15
 801ca76:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca7a:	931c      	str	r3, [sp, #112]	; 0x70
 801ca7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ca80:	3b01      	subs	r3, #1
 801ca82:	930a      	str	r3, [sp, #40]	; 0x28
 801ca84:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ca86:	bf08      	it	eq
 801ca88:	4613      	moveq	r3, r2
 801ca8a:	9306      	str	r3, [sp, #24]
 801ca8c:	e6d3      	b.n	801c836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ca8e:	b149      	cbz	r1, 801caa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ca90:	5cba      	ldrb	r2, [r7, r2]
 801ca92:	4660      	mov	r0, ip
 801ca94:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ca98:	4422      	add	r2, r4
 801ca9a:	4666      	mov	r6, ip
 801ca9c:	e734      	b.n	801c908 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801ca9e:	4660      	mov	r0, ip
 801caa0:	4662      	mov	r2, ip
 801caa2:	e731      	b.n	801c908 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801caa4:	4660      	mov	r0, ip
 801caa6:	4662      	mov	r2, ip
 801caa8:	e7f7      	b.n	801ca9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801caaa:	f110 0c01 	adds.w	ip, r0, #1
 801caae:	f53f af74 	bmi.w	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cab2:	4562      	cmp	r2, ip
 801cab4:	f6ff af71 	blt.w	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cab8:	f116 0c01 	adds.w	ip, r6, #1
 801cabc:	f53f af6d 	bmi.w	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cac0:	4567      	cmp	r7, ip
 801cac2:	f6ff af6a 	blt.w	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cac6:	b23f      	sxth	r7, r7
 801cac8:	b212      	sxth	r2, r2
 801caca:	9701      	str	r7, [sp, #4]
 801cacc:	9200      	str	r2, [sp, #0]
 801cace:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801cad2:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801cad6:	4623      	mov	r3, r4
 801cad8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801cada:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801cade:	f7ff fde7 	bl	801c6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801cae2:	e75a      	b.n	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cae4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801cae6:	ea4f 462b 	mov.w	r6, fp, asr #16
 801caea:	1428      	asrs	r0, r5, #16
 801caec:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801caf0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801caf4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801caf8:	fb02 6000 	mla	r0, r2, r0, r6
 801cafc:	9e08      	ldr	r6, [sp, #32]
 801cafe:	f816 8000 	ldrb.w	r8, [r6, r0]
 801cb02:	1837      	adds	r7, r6, r0
 801cb04:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cb08:	eb04 0c08 	add.w	ip, r4, r8
 801cb0c:	2b00      	cmp	r3, #0
 801cb0e:	d060      	beq.n	801cbd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801cb10:	787e      	ldrb	r6, [r7, #1]
 801cb12:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801cb16:	4426      	add	r6, r4
 801cb18:	2900      	cmp	r1, #0
 801cb1a:	d062      	beq.n	801cbe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801cb1c:	18b8      	adds	r0, r7, r2
 801cb1e:	5cba      	ldrb	r2, [r7, r2]
 801cb20:	7840      	ldrb	r0, [r0, #1]
 801cb22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cb26:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cb2a:	4422      	add	r2, r4
 801cb2c:	4420      	add	r0, r4
 801cb2e:	b29b      	uxth	r3, r3
 801cb30:	78b7      	ldrb	r7, [r6, #2]
 801cb32:	b289      	uxth	r1, r1
 801cb34:	f89c a002 	ldrb.w	sl, [ip, #2]
 801cb38:	f89c c001 	ldrb.w	ip, [ip, #1]
 801cb3c:	fb03 f901 	mul.w	r9, r3, r1
 801cb40:	011b      	lsls	r3, r3, #4
 801cb42:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cb46:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801cb4a:	eba3 0309 	sub.w	r3, r3, r9
 801cb4e:	b289      	uxth	r1, r1
 801cb50:	b29b      	uxth	r3, r3
 801cb52:	ebae 0e01 	sub.w	lr, lr, r1
 801cb56:	435f      	muls	r7, r3
 801cb58:	fa1f fe8e 	uxth.w	lr, lr
 801cb5c:	fb0e 770a 	mla	r7, lr, sl, r7
 801cb60:	f892 a002 	ldrb.w	sl, [r2, #2]
 801cb64:	fb01 770a 	mla	r7, r1, sl, r7
 801cb68:	f890 a002 	ldrb.w	sl, [r0, #2]
 801cb6c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801cb70:	f814 7008 	ldrb.w	r7, [r4, r8]
 801cb74:	f896 8000 	ldrb.w	r8, [r6]
 801cb78:	7876      	ldrb	r6, [r6, #1]
 801cb7a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801cb7e:	fb03 f808 	mul.w	r8, r3, r8
 801cb82:	4373      	muls	r3, r6
 801cb84:	7856      	ldrb	r6, [r2, #1]
 801cb86:	fb0e 8807 	mla	r8, lr, r7, r8
 801cb8a:	7817      	ldrb	r7, [r2, #0]
 801cb8c:	fb0e 330c 	mla	r3, lr, ip, r3
 801cb90:	fb01 8807 	mla	r8, r1, r7, r8
 801cb94:	7807      	ldrb	r7, [r0, #0]
 801cb96:	fb01 3306 	mla	r3, r1, r6, r3
 801cb9a:	fb09 8707 	mla	r7, r9, r7, r8
 801cb9e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cba2:	ea47 070a 	orr.w	r7, r7, sl
 801cba6:	f890 a001 	ldrb.w	sl, [r0, #1]
 801cbaa:	fb09 3a0a 	mla	sl, r9, sl, r3
 801cbae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cbb0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cbb4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cbb8:	ea47 070a 	orr.w	r7, r7, sl
 801cbbc:	f823 7b02 	strh.w	r7, [r3], #2
 801cbc0:	930b      	str	r3, [sp, #44]	; 0x2c
 801cbc2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801cbc4:	449b      	add	fp, r3
 801cbc6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cbc8:	441d      	add	r5, r3
 801cbca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbcc:	3b01      	subs	r3, #1
 801cbce:	9309      	str	r3, [sp, #36]	; 0x24
 801cbd0:	e714      	b.n	801c9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801cbd2:	b149      	cbz	r1, 801cbe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801cbd4:	5cba      	ldrb	r2, [r7, r2]
 801cbd6:	4660      	mov	r0, ip
 801cbd8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cbdc:	4422      	add	r2, r4
 801cbde:	4666      	mov	r6, ip
 801cbe0:	e7a5      	b.n	801cb2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801cbe2:	4660      	mov	r0, ip
 801cbe4:	4662      	mov	r2, ip
 801cbe6:	e7a2      	b.n	801cb2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801cbe8:	4660      	mov	r0, ip
 801cbea:	4662      	mov	r2, ip
 801cbec:	e7f7      	b.n	801cbde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801cbee:	b00f      	add	sp, #60	; 0x3c
 801cbf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cbf4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801cbf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbf8:	b085      	sub	sp, #20
 801cbfa:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801cbfe:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801cc02:	9102      	str	r1, [sp, #8]
 801cc04:	2c00      	cmp	r4, #0
 801cc06:	fb04 710c 	mla	r1, r4, ip, r7
 801cc0a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801cc0e:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801cc12:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801cc16:	eb02 0e01 	add.w	lr, r2, r1
 801cc1a:	f2c0 8122 	blt.w	801ce62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801cc1e:	45a0      	cmp	r8, r4
 801cc20:	f340 811f 	ble.w	801ce62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801cc24:	2f00      	cmp	r7, #0
 801cc26:	f2c0 811a 	blt.w	801ce5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801cc2a:	45bc      	cmp	ip, r7
 801cc2c:	f340 8117 	ble.w	801ce5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801cc30:	5c52      	ldrb	r2, [r2, r1]
 801cc32:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801cc36:	1c7a      	adds	r2, r7, #1
 801cc38:	f100 8116 	bmi.w	801ce68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801cc3c:	4594      	cmp	ip, r2
 801cc3e:	f340 8113 	ble.w	801ce68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801cc42:	2e00      	cmp	r6, #0
 801cc44:	f000 8112 	beq.w	801ce6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801cc48:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801cc4c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801cc50:	3401      	adds	r4, #1
 801cc52:	f100 810f 	bmi.w	801ce74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801cc56:	45a0      	cmp	r8, r4
 801cc58:	f340 810c 	ble.w	801ce74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801cc5c:	2800      	cmp	r0, #0
 801cc5e:	f000 810c 	beq.w	801ce7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801cc62:	2f00      	cmp	r7, #0
 801cc64:	f2c0 8104 	blt.w	801ce70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801cc68:	45bc      	cmp	ip, r7
 801cc6a:	f340 8101 	ble.w	801ce70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801cc6e:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801cc72:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801cc76:	3701      	adds	r7, #1
 801cc78:	f100 8102 	bmi.w	801ce80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801cc7c:	45bc      	cmp	ip, r7
 801cc7e:	f340 80ff 	ble.w	801ce80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801cc82:	2e00      	cmp	r6, #0
 801cc84:	f000 80fe 	beq.w	801ce84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801cc88:	44f4      	add	ip, lr
 801cc8a:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801cc8e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801cc92:	b2b6      	uxth	r6, r6
 801cc94:	b280      	uxth	r0, r0
 801cc96:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801cc9a:	fb00 fe06 	mul.w	lr, r0, r6
 801cc9e:	0136      	lsls	r6, r6, #4
 801cca0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801cca4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801cca8:	eba6 070e 	sub.w	r7, r6, lr
 801ccac:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ccb0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ccb4:	b280      	uxth	r0, r0
 801ccb6:	b2bf      	uxth	r7, r7
 801ccb8:	1a1b      	subs	r3, r3, r0
 801ccba:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ccbe:	fb0a f607 	mul.w	r6, sl, r7
 801ccc2:	b29b      	uxth	r3, r3
 801ccc4:	fb0b 6603 	mla	r6, fp, r3, r6
 801ccc8:	fb00 6609 	mla	r6, r0, r9, r6
 801cccc:	fb0e 6608 	mla	r6, lr, r8, r6
 801ccd0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ccd4:	9600      	str	r6, [sp, #0]
 801ccd6:	2e00      	cmp	r6, #0
 801ccd8:	f000 80be 	beq.w	801ce58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ccdc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801cce0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801cce4:	9e02      	ldr	r6, [sp, #8]
 801cce6:	fb0b fc0c 	mul.w	ip, fp, ip
 801ccea:	fb0b f505 	mul.w	r5, fp, r5
 801ccee:	8836      	ldrh	r6, [r6, #0]
 801ccf0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ccf4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ccf8:	9501      	str	r5, [sp, #4]
 801ccfa:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ccfe:	44dc      	add	ip, fp
 801cd00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd04:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801cd08:	9503      	str	r5, [sp, #12]
 801cd0a:	9d01      	ldr	r5, [sp, #4]
 801cd0c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801cd10:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cd14:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801cd18:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801cd1c:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd20:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801cd24:	fb0a fa01 	mul.w	sl, sl, r1
 801cd28:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801cd2c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cd30:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801cd34:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801cd38:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801cd3c:	4465      	add	r5, ip
 801cd3e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801cd42:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801cd46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cd4a:	fb09 fc0c 	mul.w	ip, r9, ip
 801cd4e:	0a2d      	lsrs	r5, r5, #8
 801cd50:	fb09 f904 	mul.w	r9, r9, r4
 801cd54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cd58:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801cd5c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801cd60:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801cd64:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cd68:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801cd6c:	437d      	muls	r5, r7
 801cd6e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801cd72:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801cd76:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801cd7a:	4461      	add	r1, ip
 801cd7c:	fb08 f404 	mul.w	r4, r8, r4
 801cd80:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cd84:	fb08 f802 	mul.w	r8, r8, r2
 801cd88:	0a09      	lsrs	r1, r1, #8
 801cd8a:	0a22      	lsrs	r2, r4, #8
 801cd8c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801cd90:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801cd94:	fb07 f70a 	mul.w	r7, r7, sl
 801cd98:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cd9c:	4414      	add	r4, r2
 801cd9e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801cda2:	0a24      	lsrs	r4, r4, #8
 801cda4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801cda8:	9a03      	ldr	r2, [sp, #12]
 801cdaa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801cdae:	fb02 5503 	mla	r5, r2, r3, r5
 801cdb2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801cdb6:	9a00      	ldr	r2, [sp, #0]
 801cdb8:	fb04 540e 	mla	r4, r4, lr, r5
 801cdbc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801cdc0:	1235      	asrs	r5, r6, #8
 801cdc2:	fb01 4100 	mla	r1, r1, r0, r4
 801cdc6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cdca:	0a09      	lsrs	r1, r1, #8
 801cdcc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801cdd0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801cdd4:	fb03 7101 	mla	r1, r3, r1, r7
 801cdd8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801cddc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801cde0:	fb00 e101 	mla	r1, r0, r1, lr
 801cde4:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801cde8:	b287      	uxth	r7, r0
 801cdea:	0a09      	lsrs	r1, r1, #8
 801cdec:	437a      	muls	r2, r7
 801cdee:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801cdf2:	1c53      	adds	r3, r2, #1
 801cdf4:	4321      	orrs	r1, r4
 801cdf6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cdfa:	0c0a      	lsrs	r2, r1, #16
 801cdfc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ce00:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ce04:	b2c8      	uxtb	r0, r1
 801ce06:	fb12 f207 	smulbb	r2, r2, r7
 801ce0a:	fb14 f407 	smulbb	r4, r4, r7
 801ce0e:	b2db      	uxtb	r3, r3
 801ce10:	fb10 f007 	smulbb	r0, r0, r7
 801ce14:	fb05 2503 	mla	r5, r5, r3, r2
 801ce18:	10f2      	asrs	r2, r6, #3
 801ce1a:	00f6      	lsls	r6, r6, #3
 801ce1c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ce20:	b2ad      	uxth	r5, r5
 801ce22:	b2f6      	uxtb	r6, r6
 801ce24:	fb02 4203 	mla	r2, r2, r3, r4
 801ce28:	fb06 0303 	mla	r3, r6, r3, r0
 801ce2c:	b294      	uxth	r4, r2
 801ce2e:	b299      	uxth	r1, r3
 801ce30:	1c6b      	adds	r3, r5, #1
 801ce32:	1c62      	adds	r2, r4, #1
 801ce34:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ce38:	1c4b      	adds	r3, r1, #1
 801ce3a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ce3e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ce42:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ce46:	0952      	lsrs	r2, r2, #5
 801ce48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ce4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce50:	432b      	orrs	r3, r5
 801ce52:	4313      	orrs	r3, r2
 801ce54:	9a02      	ldr	r2, [sp, #8]
 801ce56:	8013      	strh	r3, [r2, #0]
 801ce58:	b005      	add	sp, #20
 801ce5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce5e:	2500      	movs	r5, #0
 801ce60:	e6e9      	b.n	801cc36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ce62:	2100      	movs	r1, #0
 801ce64:	460d      	mov	r5, r1
 801ce66:	e6f3      	b.n	801cc50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ce68:	2100      	movs	r1, #0
 801ce6a:	e6f1      	b.n	801cc50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ce6c:	4631      	mov	r1, r6
 801ce6e:	e6ef      	b.n	801cc50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ce70:	2400      	movs	r4, #0
 801ce72:	e700      	b.n	801cc76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ce74:	2200      	movs	r2, #0
 801ce76:	4614      	mov	r4, r2
 801ce78:	e70b      	b.n	801cc92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ce7a:	4602      	mov	r2, r0
 801ce7c:	4604      	mov	r4, r0
 801ce7e:	e708      	b.n	801cc92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ce80:	2200      	movs	r2, #0
 801ce82:	e706      	b.n	801cc92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ce84:	4632      	mov	r2, r6
 801ce86:	e704      	b.n	801cc92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ce88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ce88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce8c:	b09f      	sub	sp, #124	; 0x7c
 801ce8e:	921b      	str	r2, [sp, #108]	; 0x6c
 801ce90:	9309      	str	r3, [sp, #36]	; 0x24
 801ce92:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ce94:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ce98:	901d      	str	r0, [sp, #116]	; 0x74
 801ce9a:	931c      	str	r3, [sp, #112]	; 0x70
 801ce9c:	6850      	ldr	r0, [r2, #4]
 801ce9e:	9119      	str	r1, [sp, #100]	; 0x64
 801cea0:	6812      	ldr	r2, [r2, #0]
 801cea2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801cea4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801cea8:	fb00 1303 	mla	r3, r0, r3, r1
 801ceac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ceb0:	930c      	str	r3, [sp, #48]	; 0x30
 801ceb2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ceb4:	681b      	ldr	r3, [r3, #0]
 801ceb6:	9312      	str	r3, [sp, #72]	; 0x48
 801ceb8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ceba:	685e      	ldr	r6, [r3, #4]
 801cebc:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801cec0:	3604      	adds	r6, #4
 801cec2:	930d      	str	r3, [sp, #52]	; 0x34
 801cec4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801cec6:	2b00      	cmp	r3, #0
 801cec8:	dc03      	bgt.n	801ced2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ceca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801cecc:	2b00      	cmp	r3, #0
 801cece:	f340 8387 	ble.w	801d5e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801ced2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ced4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ced8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cedc:	1e48      	subs	r0, r1, #1
 801cede:	1e57      	subs	r7, r2, #1
 801cee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cee2:	2b00      	cmp	r3, #0
 801cee4:	f340 8194 	ble.w	801d210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801cee8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ceea:	142b      	asrs	r3, r5, #16
 801ceec:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801cef0:	d406      	bmi.n	801cf00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cef2:	4584      	cmp	ip, r0
 801cef4:	da04      	bge.n	801cf00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cef6:	2b00      	cmp	r3, #0
 801cef8:	db02      	blt.n	801cf00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cefa:	42bb      	cmp	r3, r7
 801cefc:	f2c0 8189 	blt.w	801d212 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cf00:	f11c 0c01 	adds.w	ip, ip, #1
 801cf04:	f100 8177 	bmi.w	801d1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801cf08:	4561      	cmp	r1, ip
 801cf0a:	f2c0 8174 	blt.w	801d1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801cf0e:	3301      	adds	r3, #1
 801cf10:	f100 8171 	bmi.w	801d1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801cf14:	429a      	cmp	r2, r3
 801cf16:	f2c0 816e 	blt.w	801d1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801cf1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf1c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cf1e:	931a      	str	r3, [sp, #104]	; 0x68
 801cf20:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801cf22:	2b00      	cmp	r3, #0
 801cf24:	f340 8193 	ble.w	801d24e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801cf28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801cf2a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801cf2e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801cf32:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cf36:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cf38:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801cf3c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801cf3e:	141b      	asrs	r3, r3, #16
 801cf40:	f100 81d6 	bmi.w	801d2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801cf44:	f100 38ff 	add.w	r8, r0, #4294967295
 801cf48:	4543      	cmp	r3, r8
 801cf4a:	f280 81d1 	bge.w	801d2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801cf4e:	f1bc 0f00 	cmp.w	ip, #0
 801cf52:	f2c0 81cd 	blt.w	801d2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801cf56:	f10e 38ff 	add.w	r8, lr, #4294967295
 801cf5a:	45c4      	cmp	ip, r8
 801cf5c:	f280 81c8 	bge.w	801d2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801cf60:	b200      	sxth	r0, r0
 801cf62:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cf64:	fb0c 3300 	mla	r3, ip, r0, r3
 801cf68:	eb04 0803 	add.w	r8, r4, r3
 801cf6c:	5ce3      	ldrb	r3, [r4, r3]
 801cf6e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801cf72:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801cf76:	2a00      	cmp	r2, #0
 801cf78:	f000 81af 	beq.w	801d2da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801cf7c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801cf80:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801cf84:	940e      	str	r4, [sp, #56]	; 0x38
 801cf86:	0e24      	lsrs	r4, r4, #24
 801cf88:	9415      	str	r4, [sp, #84]	; 0x54
 801cf8a:	b179      	cbz	r1, 801cfac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801cf8c:	eb08 0c00 	add.w	ip, r8, r0
 801cf90:	f818 0000 	ldrb.w	r0, [r8, r0]
 801cf94:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801cf98:	900a      	str	r0, [sp, #40]	; 0x28
 801cf9a:	0e00      	lsrs	r0, r0, #24
 801cf9c:	9013      	str	r0, [sp, #76]	; 0x4c
 801cf9e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801cfa2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801cfa6:	900f      	str	r0, [sp, #60]	; 0x3c
 801cfa8:	0e00      	lsrs	r0, r0, #24
 801cfaa:	9016      	str	r0, [sp, #88]	; 0x58
 801cfac:	b292      	uxth	r2, r2
 801cfae:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cfb0:	b289      	uxth	r1, r1
 801cfb2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cfb4:	fb02 f901 	mul.w	r9, r2, r1
 801cfb8:	0112      	lsls	r2, r2, #4
 801cfba:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cfbe:	eba2 0809 	sub.w	r8, r2, r9
 801cfc2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801cfc6:	b289      	uxth	r1, r1
 801cfc8:	fa1f f888 	uxth.w	r8, r8
 801cfcc:	1a52      	subs	r2, r2, r1
 801cfce:	fb08 f000 	mul.w	r0, r8, r0
 801cfd2:	b292      	uxth	r2, r2
 801cfd4:	fb02 000e 	mla	r0, r2, lr, r0
 801cfd8:	fb01 0004 	mla	r0, r1, r4, r0
 801cfdc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801cfde:	fb09 0004 	mla	r0, r9, r4, r0
 801cfe2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801cfe6:	2800      	cmp	r0, #0
 801cfe8:	f000 80fa 	beq.w	801d1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801cfec:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801cff0:	d01b      	beq.n	801d02a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801cff2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801cff6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cffa:	fb0e fa0a 	mul.w	sl, lr, sl
 801cffe:	fb0e fe03 	mul.w	lr, lr, r3
 801d002:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d006:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d00a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d00e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d012:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d016:	4453      	add	r3, sl
 801d018:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d01c:	0a1b      	lsrs	r3, r3, #8
 801d01e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d022:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d026:	ea43 030c 	orr.w	r3, r3, ip
 801d02a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d02c:	2cff      	cmp	r4, #255	; 0xff
 801d02e:	d021      	beq.n	801d074 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801d030:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d032:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d036:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d038:	fb04 fb0b 	mul.w	fp, r4, fp
 801d03c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d03e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d042:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d044:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d048:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d04c:	fb04 fa0a 	mul.w	sl, r4, sl
 801d050:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d054:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d058:	44de      	add	lr, fp
 801d05a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d05e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d062:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d066:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d06a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d06e:	ea4e 040a 	orr.w	r4, lr, sl
 801d072:	940e      	str	r4, [sp, #56]	; 0x38
 801d074:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d076:	2cff      	cmp	r4, #255	; 0xff
 801d078:	d021      	beq.n	801d0be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d07a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d07c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d080:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d082:	fb04 fb0b 	mul.w	fp, r4, fp
 801d086:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d088:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d08c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d08e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d092:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d096:	fb04 fa0a 	mul.w	sl, r4, sl
 801d09a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d09e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d0a2:	44de      	add	lr, fp
 801d0a4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d0a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d0ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d0b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d0b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d0b8:	ea4e 040a 	orr.w	r4, lr, sl
 801d0bc:	940a      	str	r4, [sp, #40]	; 0x28
 801d0be:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801d0c0:	2cff      	cmp	r4, #255	; 0xff
 801d0c2:	d021      	beq.n	801d108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801d0c4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d0c6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d0ca:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801d0cc:	fb04 fb0b 	mul.w	fp, r4, fp
 801d0d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d0d2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d0d6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801d0d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d0dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d0e0:	fb04 fa0a 	mul.w	sl, r4, sl
 801d0e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d0e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d0ec:	44de      	add	lr, fp
 801d0ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d0f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d0f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d0fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d0fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d102:	ea4e 040a 	orr.w	r4, lr, sl
 801d106:	940f      	str	r4, [sp, #60]	; 0x3c
 801d108:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d10a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801d10e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d112:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d116:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d118:	fb08 fc0c 	mul.w	ip, r8, ip
 801d11c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d120:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801d124:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d126:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d12a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801d12e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d130:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d134:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801d138:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d13a:	fb08 f80e 	mul.w	r8, r8, lr
 801d13e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d142:	fb02 8303 	mla	r3, r2, r3, r8
 801d146:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d148:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d14c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d150:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d152:	fb01 330a 	mla	r3, r1, sl, r3
 801d156:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801d15a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d15c:	fb09 3901 	mla	r9, r9, r1, r3
 801d160:	883b      	ldrh	r3, [r7, #0]
 801d162:	4342      	muls	r2, r0
 801d164:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d168:	1c50      	adds	r0, r2, #1
 801d16a:	1219      	asrs	r1, r3, #8
 801d16c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d170:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d174:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d178:	ea4c 0c09 	orr.w	ip, ip, r9
 801d17c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d180:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d184:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d188:	b2c0      	uxtb	r0, r0
 801d18a:	fb12 f204 	smulbb	r2, r2, r4
 801d18e:	fa5f fc8c 	uxtb.w	ip, ip
 801d192:	fb1e fe04 	smulbb	lr, lr, r4
 801d196:	fb01 2100 	mla	r1, r1, r0, r2
 801d19a:	10da      	asrs	r2, r3, #3
 801d19c:	fb1c fc04 	smulbb	ip, ip, r4
 801d1a0:	00db      	lsls	r3, r3, #3
 801d1a2:	b289      	uxth	r1, r1
 801d1a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d1a8:	b2db      	uxtb	r3, r3
 801d1aa:	fb02 e200 	mla	r2, r2, r0, lr
 801d1ae:	fb03 c300 	mla	r3, r3, r0, ip
 801d1b2:	b292      	uxth	r2, r2
 801d1b4:	fa1f fc83 	uxth.w	ip, r3
 801d1b8:	1c4b      	adds	r3, r1, #1
 801d1ba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d1be:	f10c 0301 	add.w	r3, ip, #1
 801d1c2:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d1c6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d1ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d1ce:	430b      	orrs	r3, r1
 801d1d0:	1c51      	adds	r1, r2, #1
 801d1d2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d1d6:	0952      	lsrs	r2, r2, #5
 801d1d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d1dc:	4313      	orrs	r3, r2
 801d1de:	803b      	strh	r3, [r7, #0]
 801d1e0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801d1e2:	3702      	adds	r7, #2
 801d1e4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d1e6:	441a      	add	r2, r3
 801d1e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d1ea:	441d      	add	r5, r3
 801d1ec:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801d1ee:	9229      	str	r2, [sp, #164]	; 0xa4
 801d1f0:	3b01      	subs	r3, #1
 801d1f2:	931a      	str	r3, [sp, #104]	; 0x68
 801d1f4:	e694      	b.n	801cf20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d1f6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801d1f8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801d1fa:	441c      	add	r4, r3
 801d1fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d1fe:	441d      	add	r5, r3
 801d200:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d202:	9429      	str	r4, [sp, #164]	; 0xa4
 801d204:	3b01      	subs	r3, #1
 801d206:	9309      	str	r3, [sp, #36]	; 0x24
 801d208:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d20a:	3302      	adds	r3, #2
 801d20c:	930c      	str	r3, [sp, #48]	; 0x30
 801d20e:	e667      	b.n	801cee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d210:	d024      	beq.n	801d25c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801d212:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d214:	982b      	ldr	r0, [sp, #172]	; 0xac
 801d216:	3b01      	subs	r3, #1
 801d218:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801d21a:	fb00 4003 	mla	r0, r0, r3, r4
 801d21e:	1400      	asrs	r0, r0, #16
 801d220:	f53f ae7b 	bmi.w	801cf1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d224:	3901      	subs	r1, #1
 801d226:	4288      	cmp	r0, r1
 801d228:	f6bf ae77 	bge.w	801cf1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d22c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801d22e:	fb01 5303 	mla	r3, r1, r3, r5
 801d232:	141b      	asrs	r3, r3, #16
 801d234:	f53f ae71 	bmi.w	801cf1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d238:	3a01      	subs	r2, #1
 801d23a:	4293      	cmp	r3, r2
 801d23c:	f6bf ae6d 	bge.w	801cf1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d240:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801d244:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801d248:	f1bb 0f00 	cmp.w	fp, #0
 801d24c:	dc70      	bgt.n	801d330 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801d24e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d250:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d254:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d256:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d25a:	930c      	str	r3, [sp, #48]	; 0x30
 801d25c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d25e:	2b00      	cmp	r3, #0
 801d260:	f340 81be 	ble.w	801d5e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801d264:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d268:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d26a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d26e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d272:	eef0 6a62 	vmov.f32	s13, s5
 801d276:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d27a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d27e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d282:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801d286:	eef0 6a43 	vmov.f32	s13, s6
 801d28a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d28e:	ee16 5a90 	vmov	r5, s13
 801d292:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d296:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d29a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d29e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d2a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d2a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d2aa:	ee12 2a90 	vmov	r2, s5
 801d2ae:	eef0 2a47 	vmov.f32	s5, s14
 801d2b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2b6:	ee13 2a10 	vmov	r2, s6
 801d2ba:	932b      	str	r3, [sp, #172]	; 0xac
 801d2bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d2be:	eeb0 3a67 	vmov.f32	s6, s15
 801d2c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2c6:	932c      	str	r3, [sp, #176]	; 0xb0
 801d2c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d2ca:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801d2cc:	3b01      	subs	r3, #1
 801d2ce:	9319      	str	r3, [sp, #100]	; 0x64
 801d2d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d2d2:	bf08      	it	eq
 801d2d4:	4613      	moveq	r3, r2
 801d2d6:	9309      	str	r3, [sp, #36]	; 0x24
 801d2d8:	e5f4      	b.n	801cec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d2da:	2900      	cmp	r1, #0
 801d2dc:	f43f ae66 	beq.w	801cfac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801d2e0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d2e4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d2e8:	900a      	str	r0, [sp, #40]	; 0x28
 801d2ea:	0e00      	lsrs	r0, r0, #24
 801d2ec:	9013      	str	r0, [sp, #76]	; 0x4c
 801d2ee:	e65d      	b.n	801cfac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801d2f0:	f113 0801 	adds.w	r8, r3, #1
 801d2f4:	f53f af74 	bmi.w	801d1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d2f8:	4540      	cmp	r0, r8
 801d2fa:	f6ff af71 	blt.w	801d1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d2fe:	f11c 0801 	adds.w	r8, ip, #1
 801d302:	f53f af6d 	bmi.w	801d1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d306:	45c6      	cmp	lr, r8
 801d308:	f6ff af6a 	blt.w	801d1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d30c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801d30e:	b200      	sxth	r0, r0
 801d310:	9302      	str	r3, [sp, #8]
 801d312:	fa0f f38e 	sxth.w	r3, lr
 801d316:	9000      	str	r0, [sp, #0]
 801d318:	9301      	str	r3, [sp, #4]
 801d31a:	4633      	mov	r3, r6
 801d31c:	981d      	ldr	r0, [sp, #116]	; 0x74
 801d31e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d322:	e9cd c203 	strd	ip, r2, [sp, #12]
 801d326:	4639      	mov	r1, r7
 801d328:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d32a:	f7ff fc63 	bl	801cbf4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801d32e:	e757      	b.n	801d1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d330:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d332:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d336:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801d338:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d33c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801d33e:	1427      	asrs	r7, r4, #16
 801d340:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d342:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d346:	142b      	asrs	r3, r5, #16
 801d348:	fb01 7303 	mla	r3, r1, r3, r7
 801d34c:	18e7      	adds	r7, r4, r3
 801d34e:	5ce3      	ldrb	r3, [r4, r3]
 801d350:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d354:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d358:	2a00      	cmp	r2, #0
 801d35a:	f000 8137 	beq.w	801d5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801d35e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801d362:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801d366:	9410      	str	r4, [sp, #64]	; 0x40
 801d368:	0e24      	lsrs	r4, r4, #24
 801d36a:	9417      	str	r4, [sp, #92]	; 0x5c
 801d36c:	b170      	cbz	r0, 801d38c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801d36e:	eb07 0e01 	add.w	lr, r7, r1
 801d372:	5c79      	ldrb	r1, [r7, r1]
 801d374:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d378:	910b      	str	r1, [sp, #44]	; 0x2c
 801d37a:	0e09      	lsrs	r1, r1, #24
 801d37c:	9114      	str	r1, [sp, #80]	; 0x50
 801d37e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801d382:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d386:	9111      	str	r1, [sp, #68]	; 0x44
 801d388:	0e09      	lsrs	r1, r1, #24
 801d38a:	9118      	str	r1, [sp, #96]	; 0x60
 801d38c:	b292      	uxth	r2, r2
 801d38e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801d390:	b280      	uxth	r0, r0
 801d392:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d394:	fb02 f800 	mul.w	r8, r2, r0
 801d398:	0112      	lsls	r2, r2, #4
 801d39a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d39e:	eba2 0e08 	sub.w	lr, r2, r8
 801d3a2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d3a6:	b280      	uxth	r0, r0
 801d3a8:	fa1f fe8e 	uxth.w	lr, lr
 801d3ac:	1a12      	subs	r2, r2, r0
 801d3ae:	fb0e f101 	mul.w	r1, lr, r1
 801d3b2:	b292      	uxth	r2, r2
 801d3b4:	fb02 110c 	mla	r1, r2, ip, r1
 801d3b8:	fb00 1104 	mla	r1, r0, r4, r1
 801d3bc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801d3be:	fb08 1104 	mla	r1, r8, r4, r1
 801d3c2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d3c6:	2900      	cmp	r1, #0
 801d3c8:	f000 80f5 	beq.w	801d5b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801d3cc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801d3d0:	d019      	beq.n	801d406 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801d3d2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d3d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d3da:	fb0c fa0a 	mul.w	sl, ip, sl
 801d3de:	fb0c fc03 	mul.w	ip, ip, r3
 801d3e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d3e6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d3ea:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801d3ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d3f2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d3f6:	4453      	add	r3, sl
 801d3f8:	0a3f      	lsrs	r7, r7, #8
 801d3fa:	0a1b      	lsrs	r3, r3, #8
 801d3fc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d400:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d404:	433b      	orrs	r3, r7
 801d406:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d408:	2cff      	cmp	r4, #255	; 0xff
 801d40a:	d020      	beq.n	801d44e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801d40c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d40e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d412:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d414:	4367      	muls	r7, r4
 801d416:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d418:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d41c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d420:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d422:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d426:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d42a:	fb04 fa0a 	mul.w	sl, r4, sl
 801d42e:	44bc      	add	ip, r7
 801d430:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d434:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d438:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d43c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d440:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d444:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d448:	ea4c 040a 	orr.w	r4, ip, sl
 801d44c:	9410      	str	r4, [sp, #64]	; 0x40
 801d44e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d450:	2cff      	cmp	r4, #255	; 0xff
 801d452:	d020      	beq.n	801d496 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801d454:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d456:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d45a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d45c:	4367      	muls	r7, r4
 801d45e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d460:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d464:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d468:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d46a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d46e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d472:	fb04 fa0a 	mul.w	sl, r4, sl
 801d476:	44bc      	add	ip, r7
 801d478:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d47c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d480:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d484:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d488:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d48c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d490:	ea4c 040a 	orr.w	r4, ip, sl
 801d494:	940b      	str	r4, [sp, #44]	; 0x2c
 801d496:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801d498:	2cff      	cmp	r4, #255	; 0xff
 801d49a:	d020      	beq.n	801d4de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801d49c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d49e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d4a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801d4a4:	4367      	muls	r7, r4
 801d4a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d4a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d4ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d4b0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801d4b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d4b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d4ba:	fb04 fa0a 	mul.w	sl, r4, sl
 801d4be:	44bc      	add	ip, r7
 801d4c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d4c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d4c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d4cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d4d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d4d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d4d8:	ea4c 040a 	orr.w	r4, ip, sl
 801d4dc:	9411      	str	r4, [sp, #68]	; 0x44
 801d4de:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d4e0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801d4e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d4e8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d4ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d4ee:	fb0e f707 	mul.w	r7, lr, r7
 801d4f2:	fb02 770c 	mla	r7, r2, ip, r7
 801d4f6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d4fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d4fc:	fb00 770c 	mla	r7, r0, ip, r7
 801d500:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d504:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d506:	fb08 770c 	mla	r7, r8, ip, r7
 801d50a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801d50e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d510:	fb0e fe0c 	mul.w	lr, lr, ip
 801d514:	0a3f      	lsrs	r7, r7, #8
 801d516:	fb02 e303 	mla	r3, r2, r3, lr
 801d51a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d51c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801d520:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d524:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d526:	fb00 330a 	mla	r3, r0, sl, r3
 801d52a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801d52e:	f8b9 0000 	ldrh.w	r0, [r9]
 801d532:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d536:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d538:	1202      	asrs	r2, r0, #8
 801d53a:	434b      	muls	r3, r1
 801d53c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d540:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d544:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d548:	1c59      	adds	r1, r3, #1
 801d54a:	ea47 070c 	orr.w	r7, r7, ip
 801d54e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d552:	0c3b      	lsrs	r3, r7, #16
 801d554:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d558:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d55c:	b2ff      	uxtb	r7, r7
 801d55e:	fb13 f304 	smulbb	r3, r3, r4
 801d562:	b2c9      	uxtb	r1, r1
 801d564:	fb1c fc04 	smulbb	ip, ip, r4
 801d568:	fb02 3201 	mla	r2, r2, r1, r3
 801d56c:	10c3      	asrs	r3, r0, #3
 801d56e:	fb17 f704 	smulbb	r7, r7, r4
 801d572:	00c0      	lsls	r0, r0, #3
 801d574:	b292      	uxth	r2, r2
 801d576:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d57a:	b2c0      	uxtb	r0, r0
 801d57c:	fb03 c301 	mla	r3, r3, r1, ip
 801d580:	f102 0c01 	add.w	ip, r2, #1
 801d584:	fb00 7001 	mla	r0, r0, r1, r7
 801d588:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801d58c:	b280      	uxth	r0, r0
 801d58e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801d592:	b29b      	uxth	r3, r3
 801d594:	1c42      	adds	r2, r0, #1
 801d596:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801d59a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d59e:	ea42 020c 	orr.w	r2, r2, ip
 801d5a2:	f103 0c01 	add.w	ip, r3, #1
 801d5a6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d5aa:	095b      	lsrs	r3, r3, #5
 801d5ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d5b0:	431a      	orrs	r2, r3
 801d5b2:	f8a9 2000 	strh.w	r2, [r9]
 801d5b6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801d5b8:	f109 0902 	add.w	r9, r9, #2
 801d5bc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d5be:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d5c2:	441a      	add	r2, r3
 801d5c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d5c6:	9229      	str	r2, [sp, #164]	; 0xa4
 801d5c8:	441d      	add	r5, r3
 801d5ca:	e63d      	b.n	801d248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801d5cc:	2800      	cmp	r0, #0
 801d5ce:	f43f aedd 	beq.w	801d38c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801d5d2:	5c79      	ldrb	r1, [r7, r1]
 801d5d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d5d8:	910b      	str	r1, [sp, #44]	; 0x2c
 801d5da:	0e09      	lsrs	r1, r1, #24
 801d5dc:	9114      	str	r1, [sp, #80]	; 0x50
 801d5de:	e6d5      	b.n	801d38c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801d5e0:	b01f      	add	sp, #124	; 0x7c
 801d5e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d5e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801d5e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5ea:	b089      	sub	sp, #36	; 0x24
 801d5ec:	9101      	str	r1, [sp, #4]
 801d5ee:	9801      	ldr	r0, [sp, #4]
 801d5f0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801d5f4:	8800      	ldrh	r0, [r0, #0]
 801d5f6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801d5fa:	1206      	asrs	r6, r0, #8
 801d5fc:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801d600:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801d604:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d608:	9602      	str	r6, [sp, #8]
 801d60a:	10c6      	asrs	r6, r0, #3
 801d60c:	00c0      	lsls	r0, r0, #3
 801d60e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d612:	b2c0      	uxtb	r0, r0
 801d614:	9603      	str	r6, [sp, #12]
 801d616:	9004      	str	r0, [sp, #16]
 801d618:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801d61c:	fb07 100c 	mla	r0, r7, ip, r1
 801d620:	2f00      	cmp	r7, #0
 801d622:	eb02 0e00 	add.w	lr, r2, r0
 801d626:	f2c0 810a 	blt.w	801d83e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801d62a:	45b8      	cmp	r8, r7
 801d62c:	f340 8107 	ble.w	801d83e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801d630:	2900      	cmp	r1, #0
 801d632:	f2c0 8102 	blt.w	801d83a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801d636:	458c      	cmp	ip, r1
 801d638:	f340 80ff 	ble.w	801d83a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801d63c:	5c12      	ldrb	r2, [r2, r0]
 801d63e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801d642:	1c4a      	adds	r2, r1, #1
 801d644:	f100 80fe 	bmi.w	801d844 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801d648:	4594      	cmp	ip, r2
 801d64a:	f340 80fb 	ble.w	801d844 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801d64e:	2d00      	cmp	r5, #0
 801d650:	f000 80fa 	beq.w	801d848 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801d654:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d658:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801d65c:	3701      	adds	r7, #1
 801d65e:	f100 80f7 	bmi.w	801d850 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801d662:	45b8      	cmp	r8, r7
 801d664:	f340 80f4 	ble.w	801d850 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801d668:	2c00      	cmp	r4, #0
 801d66a:	f000 80f4 	beq.w	801d856 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801d66e:	2900      	cmp	r1, #0
 801d670:	eb0e 020c 	add.w	r2, lr, ip
 801d674:	f2c0 80ea 	blt.w	801d84c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801d678:	458c      	cmp	ip, r1
 801d67a:	f340 80e7 	ble.w	801d84c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801d67e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801d682:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801d686:	3101      	adds	r1, #1
 801d688:	f100 80e8 	bmi.w	801d85c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801d68c:	458c      	cmp	ip, r1
 801d68e:	f340 80e5 	ble.w	801d85c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801d692:	2d00      	cmp	r5, #0
 801d694:	f000 80e4 	beq.w	801d860 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801d698:	7852      	ldrb	r2, [r2, #1]
 801d69a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801d69e:	0e0b      	lsrs	r3, r1, #24
 801d6a0:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801d6a4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801d6a8:	9300      	str	r3, [sp, #0]
 801d6aa:	b2a4      	uxth	r4, r4
 801d6ac:	b2ab      	uxth	r3, r5
 801d6ae:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801d6b2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801d6b6:	fb03 f904 	mul.w	r9, r3, r4
 801d6ba:	011b      	lsls	r3, r3, #4
 801d6bc:	fb0a f505 	mul.w	r5, sl, r5
 801d6c0:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801d6c4:	eba3 0e09 	sub.w	lr, r3, r9
 801d6c8:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801d6cc:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801d6d0:	0a28      	lsrs	r0, r5, #8
 801d6d2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801d6d6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d6da:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801d6de:	fb0a f303 	mul.w	r3, sl, r3
 801d6e2:	fb08 f707 	mul.w	r7, r8, r7
 801d6e6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801d6ea:	4405      	add	r5, r0
 801d6ec:	fb08 fc0c 	mul.w	ip, r8, ip
 801d6f0:	b2a4      	uxth	r4, r4
 801d6f2:	0a2d      	lsrs	r5, r5, #8
 801d6f4:	fa1f fe8e 	uxth.w	lr, lr
 801d6f8:	1b12      	subs	r2, r2, r4
 801d6fa:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801d6fe:	b292      	uxth	r2, r2
 801d700:	9005      	str	r0, [sp, #20]
 801d702:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801d706:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d70a:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801d70e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d712:	0a1b      	lsrs	r3, r3, #8
 801d714:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801d718:	9306      	str	r3, [sp, #24]
 801d71a:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801d71e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d722:	4460      	add	r0, ip
 801d724:	fb0b f303 	mul.w	r3, fp, r3
 801d728:	fb0b f606 	mul.w	r6, fp, r6
 801d72c:	0a00      	lsrs	r0, r0, #8
 801d72e:	0a1d      	lsrs	r5, r3, #8
 801d730:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801d734:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801d738:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d73c:	441d      	add	r5, r3
 801d73e:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801d742:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801d746:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801d74a:	0a2d      	lsrs	r5, r5, #8
 801d74c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801d750:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801d754:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d758:	0a36      	lsrs	r6, r6, #8
 801d75a:	0a1b      	lsrs	r3, r3, #8
 801d75c:	fb05 f50e 	mul.w	r5, r5, lr
 801d760:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801d764:	9307      	str	r3, [sp, #28]
 801d766:	0e0b      	lsrs	r3, r1, #24
 801d768:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d76c:	fb0e f606 	mul.w	r6, lr, r6
 801d770:	435f      	muls	r7, r3
 801d772:	4359      	muls	r1, r3
 801d774:	9b05      	ldr	r3, [sp, #20]
 801d776:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d77a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d77e:	fb03 5502 	mla	r5, r3, r2, r5
 801d782:	9b06      	ldr	r3, [sp, #24]
 801d784:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d788:	fb0e fe0b 	mul.w	lr, lr, fp
 801d78c:	44bc      	add	ip, r7
 801d78e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801d792:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d796:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801d79a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d79e:	0a09      	lsrs	r1, r1, #8
 801d7a0:	fb0c 5509 	mla	r5, ip, r9, r5
 801d7a4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d7a8:	fb00 5504 	mla	r5, r0, r4, r5
 801d7ac:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801d7b0:	9b07      	ldr	r3, [sp, #28]
 801d7b2:	fb02 6000 	mla	r0, r2, r0, r6
 801d7b6:	0a2d      	lsrs	r5, r5, #8
 801d7b8:	fb02 e20a 	mla	r2, r2, sl, lr
 801d7bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d7c0:	fb09 0001 	mla	r0, r9, r1, r0
 801d7c4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d7c8:	fb04 0003 	mla	r0, r4, r3, r0
 801d7cc:	9b00      	ldr	r3, [sp, #0]
 801d7ce:	fb04 2408 	mla	r4, r4, r8, r2
 801d7d2:	9a04      	ldr	r2, [sp, #16]
 801d7d4:	0a00      	lsrs	r0, r0, #8
 801d7d6:	fb09 4903 	mla	r9, r9, r3, r4
 801d7da:	9b02      	ldr	r3, [sp, #8]
 801d7dc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801d7e0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801d7e4:	4305      	orrs	r5, r0
 801d7e6:	fa5f f989 	uxtb.w	r9, r9
 801d7ea:	fb03 f109 	mul.w	r1, r3, r9
 801d7ee:	9b03      	ldr	r3, [sp, #12]
 801d7f0:	fb03 f309 	mul.w	r3, r3, r9
 801d7f4:	fb02 f909 	mul.w	r9, r2, r9
 801d7f8:	1c4a      	adds	r2, r1, #1
 801d7fa:	1c58      	adds	r0, r3, #1
 801d7fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d800:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d804:	0c2a      	lsrs	r2, r5, #16
 801d806:	0a2b      	lsrs	r3, r5, #8
 801d808:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801d80c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d810:	0212      	lsls	r2, r2, #8
 801d812:	00db      	lsls	r3, r3, #3
 801d814:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801d818:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d81c:	4313      	orrs	r3, r2
 801d81e:	f109 0201 	add.w	r2, r9, #1
 801d822:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801d826:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801d82a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d82e:	431d      	orrs	r5, r3
 801d830:	9b01      	ldr	r3, [sp, #4]
 801d832:	801d      	strh	r5, [r3, #0]
 801d834:	b009      	add	sp, #36	; 0x24
 801d836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d83a:	2000      	movs	r0, #0
 801d83c:	e701      	b.n	801d642 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801d83e:	2600      	movs	r6, #0
 801d840:	4630      	mov	r0, r6
 801d842:	e70b      	b.n	801d65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d844:	2600      	movs	r6, #0
 801d846:	e709      	b.n	801d65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d848:	462e      	mov	r6, r5
 801d84a:	e707      	b.n	801d65c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d84c:	2700      	movs	r7, #0
 801d84e:	e71a      	b.n	801d686 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801d850:	2100      	movs	r1, #0
 801d852:	460f      	mov	r7, r1
 801d854:	e723      	b.n	801d69e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d856:	4621      	mov	r1, r4
 801d858:	4627      	mov	r7, r4
 801d85a:	e720      	b.n	801d69e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d85c:	2100      	movs	r1, #0
 801d85e:	e71e      	b.n	801d69e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d860:	4629      	mov	r1, r5
 801d862:	e71c      	b.n	801d69e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801d864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d868:	b09b      	sub	sp, #108	; 0x6c
 801d86a:	9218      	str	r2, [sp, #96]	; 0x60
 801d86c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d86e:	9019      	str	r0, [sp, #100]	; 0x64
 801d870:	9116      	str	r1, [sp, #88]	; 0x58
 801d872:	6850      	ldr	r0, [r2, #4]
 801d874:	9307      	str	r3, [sp, #28]
 801d876:	6812      	ldr	r2, [r2, #0]
 801d878:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801d87a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801d87e:	fb00 1303 	mla	r3, r0, r3, r1
 801d882:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d886:	930a      	str	r3, [sp, #40]	; 0x28
 801d888:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d88a:	681b      	ldr	r3, [r3, #0]
 801d88c:	930f      	str	r3, [sp, #60]	; 0x3c
 801d88e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d890:	685e      	ldr	r6, [r3, #4]
 801d892:	3604      	adds	r6, #4
 801d894:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801d896:	2b00      	cmp	r3, #0
 801d898:	dc03      	bgt.n	801d8a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d89a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d89c:	2b00      	cmp	r3, #0
 801d89e:	f340 8373 	ble.w	801df88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801d8a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d8a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d8a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d8ac:	1e48      	subs	r0, r1, #1
 801d8ae:	1e57      	subs	r7, r2, #1
 801d8b0:	9b07      	ldr	r3, [sp, #28]
 801d8b2:	2b00      	cmp	r3, #0
 801d8b4:	f340 818f 	ble.w	801dbd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801d8b8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801d8ba:	142b      	asrs	r3, r5, #16
 801d8bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d8c0:	d406      	bmi.n	801d8d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d8c2:	4584      	cmp	ip, r0
 801d8c4:	da04      	bge.n	801d8d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d8c6:	2b00      	cmp	r3, #0
 801d8c8:	db02      	blt.n	801d8d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d8ca:	42bb      	cmp	r3, r7
 801d8cc:	f2c0 8184 	blt.w	801dbd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d8d0:	f11c 0c01 	adds.w	ip, ip, #1
 801d8d4:	f100 8172 	bmi.w	801dbbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d8d8:	4561      	cmp	r1, ip
 801d8da:	f2c0 816f 	blt.w	801dbbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d8de:	3301      	adds	r3, #1
 801d8e0:	f100 816c 	bmi.w	801dbbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d8e4:	429a      	cmp	r2, r3
 801d8e6:	f2c0 8169 	blt.w	801dbbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d8ea:	9b07      	ldr	r3, [sp, #28]
 801d8ec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d8ee:	9317      	str	r3, [sp, #92]	; 0x5c
 801d8f0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d8f2:	2b00      	cmp	r3, #0
 801d8f4:	f340 818e 	ble.w	801dc14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801d8f8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d8fa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d8fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d902:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d906:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d908:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801d90c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d90e:	141b      	asrs	r3, r3, #16
 801d910:	f100 81d1 	bmi.w	801dcb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d914:	f101 38ff 	add.w	r8, r1, #4294967295
 801d918:	4543      	cmp	r3, r8
 801d91a:	f280 81cc 	bge.w	801dcb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d91e:	f1bc 0f00 	cmp.w	ip, #0
 801d922:	f2c0 81c8 	blt.w	801dcb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d926:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d92a:	45c4      	cmp	ip, r8
 801d92c:	f280 81c3 	bge.w	801dcb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d930:	b209      	sxth	r1, r1
 801d932:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d934:	fb0c 3301 	mla	r3, ip, r1, r3
 801d938:	eb04 0803 	add.w	r8, r4, r3
 801d93c:	5ce3      	ldrb	r3, [r4, r3]
 801d93e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d942:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801d946:	2a00      	cmp	r2, #0
 801d948:	f000 81aa 	beq.w	801dca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801d94c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801d950:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801d954:	940b      	str	r4, [sp, #44]	; 0x2c
 801d956:	0e24      	lsrs	r4, r4, #24
 801d958:	9412      	str	r4, [sp, #72]	; 0x48
 801d95a:	b178      	cbz	r0, 801d97c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801d95c:	eb08 0c01 	add.w	ip, r8, r1
 801d960:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d964:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d968:	9108      	str	r1, [sp, #32]
 801d96a:	0e09      	lsrs	r1, r1, #24
 801d96c:	9110      	str	r1, [sp, #64]	; 0x40
 801d96e:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801d972:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d976:	910c      	str	r1, [sp, #48]	; 0x30
 801d978:	0e09      	lsrs	r1, r1, #24
 801d97a:	9113      	str	r1, [sp, #76]	; 0x4c
 801d97c:	b292      	uxth	r2, r2
 801d97e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d980:	b280      	uxth	r0, r0
 801d982:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d984:	fb02 f900 	mul.w	r9, r2, r0
 801d988:	0112      	lsls	r2, r2, #4
 801d98a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801d98e:	eba2 0809 	sub.w	r8, r2, r9
 801d992:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d996:	b280      	uxth	r0, r0
 801d998:	fa1f f888 	uxth.w	r8, r8
 801d99c:	1a12      	subs	r2, r2, r0
 801d99e:	fb08 f101 	mul.w	r1, r8, r1
 801d9a2:	b292      	uxth	r2, r2
 801d9a4:	fb02 110e 	mla	r1, r2, lr, r1
 801d9a8:	fb00 1104 	mla	r1, r0, r4, r1
 801d9ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d9ae:	fb09 1104 	mla	r1, r9, r4, r1
 801d9b2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d9b6:	2900      	cmp	r1, #0
 801d9b8:	f000 80f5 	beq.w	801dba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801d9bc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d9c0:	d01b      	beq.n	801d9fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d9c2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d9c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d9ca:	fb0e fa0a 	mul.w	sl, lr, sl
 801d9ce:	fb0e fe03 	mul.w	lr, lr, r3
 801d9d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d9d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d9da:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d9de:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d9e2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d9e6:	4453      	add	r3, sl
 801d9e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d9ec:	0a1b      	lsrs	r3, r3, #8
 801d9ee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d9f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d9f6:	ea43 030c 	orr.w	r3, r3, ip
 801d9fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d9fc:	2cff      	cmp	r4, #255	; 0xff
 801d9fe:	d021      	beq.n	801da44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801da00:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801da02:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801da06:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da08:	fb04 fb0b 	mul.w	fp, r4, fp
 801da0c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801da0e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801da12:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801da18:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801da1c:	fb04 fa0a 	mul.w	sl, r4, sl
 801da20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801da24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801da28:	44de      	add	lr, fp
 801da2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801da2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801da32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801da36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801da3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801da3e:	ea4e 040a 	orr.w	r4, lr, sl
 801da42:	940b      	str	r4, [sp, #44]	; 0x2c
 801da44:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801da46:	2cff      	cmp	r4, #255	; 0xff
 801da48:	d021      	beq.n	801da8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801da4a:	9c08      	ldr	r4, [sp, #32]
 801da4c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801da50:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801da52:	fb04 fb0b 	mul.w	fp, r4, fp
 801da56:	9c08      	ldr	r4, [sp, #32]
 801da58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801da5c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801da5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801da62:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801da66:	fb04 fa0a 	mul.w	sl, r4, sl
 801da6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801da6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801da72:	44de      	add	lr, fp
 801da74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801da78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801da7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801da80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801da84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801da88:	ea4e 040a 	orr.w	r4, lr, sl
 801da8c:	9408      	str	r4, [sp, #32]
 801da8e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801da90:	2cff      	cmp	r4, #255	; 0xff
 801da92:	d021      	beq.n	801dad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801da94:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801da96:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801da9a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801da9c:	fb04 fb0b 	mul.w	fp, r4, fp
 801daa0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801daa2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801daa6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801daa8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801daac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dab0:	fb04 fa0a 	mul.w	sl, r4, sl
 801dab4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dab8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dabc:	44de      	add	lr, fp
 801dabe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dac2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dac6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801daca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dace:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dad2:	ea4e 040a 	orr.w	r4, lr, sl
 801dad6:	940c      	str	r4, [sp, #48]	; 0x30
 801dad8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801dada:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801dade:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dae2:	43c9      	mvns	r1, r1
 801dae4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dae8:	9c08      	ldr	r4, [sp, #32]
 801daea:	fb08 fc0c 	mul.w	ip, r8, ip
 801daee:	fb02 cc0e 	mla	ip, r2, lr, ip
 801daf2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801daf6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801daf8:	fb00 cc0e 	mla	ip, r0, lr, ip
 801dafc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801db00:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801db02:	fb09 cc0e 	mla	ip, r9, lr, ip
 801db06:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801db0a:	fb08 f80e 	mul.w	r8, r8, lr
 801db0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801db12:	fa5f fe81 	uxtb.w	lr, r1
 801db16:	fb02 8303 	mla	r3, r2, r3, r8
 801db1a:	9a08      	ldr	r2, [sp, #32]
 801db1c:	f8b7 8000 	ldrh.w	r8, [r7]
 801db20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801db24:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801db28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801db2a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801db2e:	fb00 330a 	mla	r3, r0, sl, r3
 801db32:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801db36:	ea4f 2228 	mov.w	r2, r8, asr #8
 801db3a:	fb09 3900 	mla	r9, r9, r0, r3
 801db3e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801db42:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801db46:	b2c9      	uxtb	r1, r1
 801db48:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801db4c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801db50:	fb02 f20e 	mul.w	r2, r2, lr
 801db54:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801db58:	fb00 f00e 	mul.w	r0, r0, lr
 801db5c:	1c53      	adds	r3, r2, #1
 801db5e:	fb01 f10e 	mul.w	r1, r1, lr
 801db62:	ea4c 0c09 	orr.w	ip, ip, r9
 801db66:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801db6a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801db6e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801db72:	4a60      	ldr	r2, [pc, #384]	; (801dcf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801db74:	b2db      	uxtb	r3, r3
 801db76:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801db7a:	1c43      	adds	r3, r0, #1
 801db7c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801db80:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801db84:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801db88:	00db      	lsls	r3, r3, #3
 801db8a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801db8e:	4313      	orrs	r3, r2
 801db90:	1c4a      	adds	r2, r1, #1
 801db92:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801db96:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801db9a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801db9e:	ea4c 0c03 	orr.w	ip, ip, r3
 801dba2:	f8a7 c000 	strh.w	ip, [r7]
 801dba6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801dba8:	3702      	adds	r7, #2
 801dbaa:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801dbac:	441a      	add	r2, r3
 801dbae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dbb0:	441d      	add	r5, r3
 801dbb2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dbb4:	9225      	str	r2, [sp, #148]	; 0x94
 801dbb6:	3b01      	subs	r3, #1
 801dbb8:	9317      	str	r3, [sp, #92]	; 0x5c
 801dbba:	e699      	b.n	801d8f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dbbc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801dbbe:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801dbc0:	441c      	add	r4, r3
 801dbc2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dbc4:	441d      	add	r5, r3
 801dbc6:	9b07      	ldr	r3, [sp, #28]
 801dbc8:	9425      	str	r4, [sp, #148]	; 0x94
 801dbca:	3b01      	subs	r3, #1
 801dbcc:	9307      	str	r3, [sp, #28]
 801dbce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dbd0:	3302      	adds	r3, #2
 801dbd2:	930a      	str	r3, [sp, #40]	; 0x28
 801dbd4:	e66c      	b.n	801d8b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801dbd6:	d024      	beq.n	801dc22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801dbd8:	9b07      	ldr	r3, [sp, #28]
 801dbda:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801dbdc:	3b01      	subs	r3, #1
 801dbde:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801dbe0:	fb00 4003 	mla	r0, r0, r3, r4
 801dbe4:	1400      	asrs	r0, r0, #16
 801dbe6:	f53f ae80 	bmi.w	801d8ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801dbea:	3901      	subs	r1, #1
 801dbec:	4288      	cmp	r0, r1
 801dbee:	f6bf ae7c 	bge.w	801d8ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801dbf2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801dbf4:	fb01 5303 	mla	r3, r1, r3, r5
 801dbf8:	141b      	asrs	r3, r3, #16
 801dbfa:	f53f ae76 	bmi.w	801d8ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801dbfe:	3a01      	subs	r2, #1
 801dc00:	4293      	cmp	r3, r2
 801dc02:	f6bf ae72 	bge.w	801d8ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801dc06:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801dc0a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801dc0e:	f1bb 0f00 	cmp.w	fp, #0
 801dc12:	dc71      	bgt.n	801dcf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801dc14:	9b07      	ldr	r3, [sp, #28]
 801dc16:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801dc1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dc1c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801dc20:	930a      	str	r3, [sp, #40]	; 0x28
 801dc22:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801dc24:	2b00      	cmp	r3, #0
 801dc26:	f340 81af 	ble.w	801df88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801dc2a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dc2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc30:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc34:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc38:	eef0 6a62 	vmov.f32	s13, s5
 801dc3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dc40:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc48:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801dc4c:	eef0 6a43 	vmov.f32	s13, s6
 801dc50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc54:	ee16 5a90 	vmov	r5, s13
 801dc58:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dc5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dc60:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dc64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dc70:	ee12 2a90 	vmov	r2, s5
 801dc74:	eef0 2a47 	vmov.f32	s5, s14
 801dc78:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc7c:	ee13 2a10 	vmov	r2, s6
 801dc80:	9327      	str	r3, [sp, #156]	; 0x9c
 801dc82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc84:	eeb0 3a67 	vmov.f32	s6, s15
 801dc88:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc8c:	9328      	str	r3, [sp, #160]	; 0xa0
 801dc8e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801dc90:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801dc92:	3b01      	subs	r3, #1
 801dc94:	9316      	str	r3, [sp, #88]	; 0x58
 801dc96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dc98:	bf08      	it	eq
 801dc9a:	4613      	moveq	r3, r2
 801dc9c:	9307      	str	r3, [sp, #28]
 801dc9e:	e5f9      	b.n	801d894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801dca0:	2800      	cmp	r0, #0
 801dca2:	f43f ae6b 	beq.w	801d97c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801dca6:	f818 1001 	ldrb.w	r1, [r8, r1]
 801dcaa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dcae:	9108      	str	r1, [sp, #32]
 801dcb0:	0e09      	lsrs	r1, r1, #24
 801dcb2:	9110      	str	r1, [sp, #64]	; 0x40
 801dcb4:	e662      	b.n	801d97c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801dcb6:	f113 0801 	adds.w	r8, r3, #1
 801dcba:	f53f af74 	bmi.w	801dba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801dcbe:	4541      	cmp	r1, r8
 801dcc0:	f6ff af71 	blt.w	801dba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801dcc4:	f11c 0801 	adds.w	r8, ip, #1
 801dcc8:	f53f af6d 	bmi.w	801dba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801dccc:	45c6      	cmp	lr, r8
 801dcce:	f6ff af6a 	blt.w	801dba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801dcd2:	b209      	sxth	r1, r1
 801dcd4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801dcd8:	fa0f f38e 	sxth.w	r3, lr
 801dcdc:	9100      	str	r1, [sp, #0]
 801dcde:	4639      	mov	r1, r7
 801dce0:	9301      	str	r3, [sp, #4]
 801dce2:	4633      	mov	r3, r6
 801dce4:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801dce8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dcea:	9819      	ldr	r0, [sp, #100]	; 0x64
 801dcec:	f7ff fc7b 	bl	801d5e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801dcf0:	e759      	b.n	801dba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801dcf2:	bf00      	nop
 801dcf4:	fffff800 	.word	0xfffff800
 801dcf8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801dcfa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801dcfe:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801dd00:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801dd04:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801dd06:	1427      	asrs	r7, r4, #16
 801dd08:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801dd0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dd0e:	142b      	asrs	r3, r5, #16
 801dd10:	fb01 7303 	mla	r3, r1, r3, r7
 801dd14:	18e7      	adds	r7, r4, r3
 801dd16:	5ce3      	ldrb	r3, [r4, r3]
 801dd18:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801dd1c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801dd20:	2a00      	cmp	r2, #0
 801dd22:	f000 8127 	beq.w	801df74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801dd26:	f897 e001 	ldrb.w	lr, [r7, #1]
 801dd2a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801dd2e:	940d      	str	r4, [sp, #52]	; 0x34
 801dd30:	0e24      	lsrs	r4, r4, #24
 801dd32:	9414      	str	r4, [sp, #80]	; 0x50
 801dd34:	b170      	cbz	r0, 801dd54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801dd36:	eb07 0e01 	add.w	lr, r7, r1
 801dd3a:	5c79      	ldrb	r1, [r7, r1]
 801dd3c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dd40:	9109      	str	r1, [sp, #36]	; 0x24
 801dd42:	0e09      	lsrs	r1, r1, #24
 801dd44:	9111      	str	r1, [sp, #68]	; 0x44
 801dd46:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801dd4a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dd4e:	910e      	str	r1, [sp, #56]	; 0x38
 801dd50:	0e09      	lsrs	r1, r1, #24
 801dd52:	9115      	str	r1, [sp, #84]	; 0x54
 801dd54:	b292      	uxth	r2, r2
 801dd56:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dd58:	b280      	uxth	r0, r0
 801dd5a:	fb02 f800 	mul.w	r8, r2, r0
 801dd5e:	0112      	lsls	r2, r2, #4
 801dd60:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801dd64:	eba2 0e08 	sub.w	lr, r2, r8
 801dd68:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801dd6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dd6e:	b280      	uxth	r0, r0
 801dd70:	fa1f fe8e 	uxth.w	lr, lr
 801dd74:	1a09      	subs	r1, r1, r0
 801dd76:	fb0e f202 	mul.w	r2, lr, r2
 801dd7a:	b289      	uxth	r1, r1
 801dd7c:	fb01 220c 	mla	r2, r1, ip, r2
 801dd80:	fb00 2204 	mla	r2, r0, r4, r2
 801dd84:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801dd86:	fb08 2204 	mla	r2, r8, r4, r2
 801dd8a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801dd8e:	2a00      	cmp	r2, #0
 801dd90:	f000 80e5 	beq.w	801df5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801dd94:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801dd98:	d019      	beq.n	801ddce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801dd9a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801dd9e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dda2:	fb0c fa0a 	mul.w	sl, ip, sl
 801dda6:	fb0c fc03 	mul.w	ip, ip, r3
 801ddaa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ddae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ddb2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ddb6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ddba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ddbe:	4453      	add	r3, sl
 801ddc0:	0a3f      	lsrs	r7, r7, #8
 801ddc2:	0a1b      	lsrs	r3, r3, #8
 801ddc4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ddc8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ddcc:	433b      	orrs	r3, r7
 801ddce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ddd0:	2cff      	cmp	r4, #255	; 0xff
 801ddd2:	d020      	beq.n	801de16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801ddd4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ddd6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ddda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dddc:	4367      	muls	r7, r4
 801ddde:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801dde0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dde4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801dde8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ddea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ddee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ddf2:	fb04 fa0a 	mul.w	sl, r4, sl
 801ddf6:	44bc      	add	ip, r7
 801ddf8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ddfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de00:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801de04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801de08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801de10:	ea4c 040a 	orr.w	r4, ip, sl
 801de14:	940d      	str	r4, [sp, #52]	; 0x34
 801de16:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801de18:	2cff      	cmp	r4, #255	; 0xff
 801de1a:	d020      	beq.n	801de5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801de1c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801de1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801de22:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801de24:	4367      	muls	r7, r4
 801de26:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801de28:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801de2c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801de30:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801de32:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801de36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801de3a:	fb04 fa0a 	mul.w	sl, r4, sl
 801de3e:	44bc      	add	ip, r7
 801de40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801de44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801de4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801de50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801de58:	ea4c 040a 	orr.w	r4, ip, sl
 801de5c:	9409      	str	r4, [sp, #36]	; 0x24
 801de5e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801de60:	2cff      	cmp	r4, #255	; 0xff
 801de62:	d020      	beq.n	801dea6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801de64:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801de66:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801de6a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801de6c:	4367      	muls	r7, r4
 801de6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801de70:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801de74:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801de78:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801de7a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801de7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801de82:	fb04 fa0a 	mul.w	sl, r4, sl
 801de86:	44bc      	add	ip, r7
 801de88:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801de8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801de94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801de98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dea0:	ea4c 040a 	orr.w	r4, ip, sl
 801dea4:	940e      	str	r4, [sp, #56]	; 0x38
 801dea6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801dea8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801deac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801deb0:	43d2      	mvns	r2, r2
 801deb2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801deb6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801deb8:	b2d2      	uxtb	r2, r2
 801deba:	fb0e f707 	mul.w	r7, lr, r7
 801debe:	fb01 770c 	mla	r7, r1, ip, r7
 801dec2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801dec6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801dec8:	fb00 770c 	mla	r7, r0, ip, r7
 801decc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ded0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ded2:	fb08 770c 	mla	r7, r8, ip, r7
 801ded6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801deda:	fb0e fe0c 	mul.w	lr, lr, ip
 801dede:	0a3f      	lsrs	r7, r7, #8
 801dee0:	fb01 e303 	mla	r3, r1, r3, lr
 801dee4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dee6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801deea:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801deee:	990e      	ldr	r1, [sp, #56]	; 0x38
 801def0:	fb00 330a 	mla	r3, r0, sl, r3
 801def4:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801def8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801defc:	f8b9 3000 	ldrh.w	r3, [r9]
 801df00:	1218      	asrs	r0, r3, #8
 801df02:	10d9      	asrs	r1, r3, #3
 801df04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801df08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801df0c:	00db      	lsls	r3, r3, #3
 801df0e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801df12:	4350      	muls	r0, r2
 801df14:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801df18:	b2db      	uxtb	r3, r3
 801df1a:	4351      	muls	r1, r2
 801df1c:	ea47 070c 	orr.w	r7, r7, ip
 801df20:	4353      	muls	r3, r2
 801df22:	1c42      	adds	r2, r0, #1
 801df24:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801df28:	0c3a      	lsrs	r2, r7, #16
 801df2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801df2e:	4a18      	ldr	r2, [pc, #96]	; (801df90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801df30:	b2c0      	uxtb	r0, r0
 801df32:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801df36:	1c4a      	adds	r2, r1, #1
 801df38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801df3c:	0a3a      	lsrs	r2, r7, #8
 801df3e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801df42:	00c9      	lsls	r1, r1, #3
 801df44:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801df48:	4301      	orrs	r1, r0
 801df4a:	1c58      	adds	r0, r3, #1
 801df4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801df50:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801df54:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801df58:	4308      	orrs	r0, r1
 801df5a:	f8a9 0000 	strh.w	r0, [r9]
 801df5e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801df60:	f109 0902 	add.w	r9, r9, #2
 801df64:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801df66:	f10b 3bff 	add.w	fp, fp, #4294967295
 801df6a:	441a      	add	r2, r3
 801df6c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801df6e:	9225      	str	r2, [sp, #148]	; 0x94
 801df70:	441d      	add	r5, r3
 801df72:	e64c      	b.n	801dc0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801df74:	2800      	cmp	r0, #0
 801df76:	f43f aeed 	beq.w	801dd54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801df7a:	5c79      	ldrb	r1, [r7, r1]
 801df7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801df80:	9109      	str	r1, [sp, #36]	; 0x24
 801df82:	0e09      	lsrs	r1, r1, #24
 801df84:	9111      	str	r1, [sp, #68]	; 0x44
 801df86:	e6e5      	b.n	801dd54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801df88:	b01b      	add	sp, #108	; 0x6c
 801df8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df8e:	bf00      	nop
 801df90:	fffff800 	.word	0xfffff800

0801df94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801df94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df98:	b085      	sub	sp, #20
 801df9a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801df9e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801dfa2:	2800      	cmp	r0, #0
 801dfa4:	9103      	str	r1, [sp, #12]
 801dfa6:	fb00 7406 	mla	r4, r0, r6, r7
 801dfaa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801dfae:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801dfb2:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801dfb6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801dfba:	eb03 0904 	add.w	r9, r3, r4
 801dfbe:	9501      	str	r5, [sp, #4]
 801dfc0:	f2c0 8150 	blt.w	801e264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801dfc4:	4583      	cmp	fp, r0
 801dfc6:	f340 814d 	ble.w	801e264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801dfca:	2f00      	cmp	r7, #0
 801dfcc:	f2c0 8146 	blt.w	801e25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801dfd0:	42be      	cmp	r6, r7
 801dfd2:	f340 8143 	ble.w	801e25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801dfd6:	f813 c004 	ldrb.w	ip, [r3, r4]
 801dfda:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801dfde:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801dfe2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801dfe6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801dfea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dfee:	4355      	muls	r5, r2
 801dff0:	fb0c f203 	mul.w	r2, ip, r3
 801dff4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801dff8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801dffc:	441d      	add	r5, r3
 801dffe:	f102 0320 	add.w	r3, r2, #32
 801e002:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e006:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801e00a:	0a1b      	lsrs	r3, r3, #8
 801e00c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e010:	431c      	orrs	r4, r3
 801e012:	1c7b      	adds	r3, r7, #1
 801e014:	f100 812b 	bmi.w	801e26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801e018:	429e      	cmp	r6, r3
 801e01a:	f340 8128 	ble.w	801e26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801e01e:	2900      	cmp	r1, #0
 801e020:	f000 8128 	beq.w	801e274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801e024:	9a01      	ldr	r2, [sp, #4]
 801e026:	f899 3001 	ldrb.w	r3, [r9, #1]
 801e02a:	8855      	ldrh	r5, [r2, #2]
 801e02c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801e030:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801e034:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e038:	fb08 f802 	mul.w	r8, r8, r2
 801e03c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801e040:	435d      	muls	r5, r3
 801e042:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801e046:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e04a:	44d0      	add	r8, sl
 801e04c:	f105 0a20 	add.w	sl, r5, #32
 801e050:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801e054:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801e058:	0a2d      	lsrs	r5, r5, #8
 801e05a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e05e:	432a      	orrs	r2, r5
 801e060:	3001      	adds	r0, #1
 801e062:	f100 810d 	bmi.w	801e280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801e066:	4583      	cmp	fp, r0
 801e068:	f340 810a 	ble.w	801e280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801e06c:	f1be 0f00 	cmp.w	lr, #0
 801e070:	f000 810b 	beq.w	801e28a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801e074:	2f00      	cmp	r7, #0
 801e076:	f2c0 8100 	blt.w	801e27a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801e07a:	42be      	cmp	r6, r7
 801e07c:	f340 80fd 	ble.w	801e27a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801e080:	9801      	ldr	r0, [sp, #4]
 801e082:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801e086:	f819 5006 	ldrb.w	r5, [r9, r6]
 801e08a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801e08e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e092:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801e096:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e09a:	fb0a fa00 	mul.w	sl, sl, r0
 801e09e:	fb05 f808 	mul.w	r8, r5, r8
 801e0a2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801e0a6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801e0aa:	4482      	add	sl, r0
 801e0ac:	f108 0020 	add.w	r0, r8, #32
 801e0b0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e0b4:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801e0b8:	0a00      	lsrs	r0, r0, #8
 801e0ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e0be:	ea4b 0b00 	orr.w	fp, fp, r0
 801e0c2:	3701      	adds	r7, #1
 801e0c4:	f100 80e6 	bmi.w	801e294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801e0c8:	42be      	cmp	r6, r7
 801e0ca:	f340 80e3 	ble.w	801e294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801e0ce:	2900      	cmp	r1, #0
 801e0d0:	f000 80e3 	beq.w	801e29a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801e0d4:	3601      	adds	r6, #1
 801e0d6:	9801      	ldr	r0, [sp, #4]
 801e0d8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801e0dc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801e0e0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801e0e4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801e0e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e0ec:	fb09 f906 	mul.w	r9, r9, r6
 801e0f0:	fb07 f800 	mul.w	r8, r7, r0
 801e0f4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801e0f8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801e0fc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801e100:	44d1      	add	r9, sl
 801e102:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801e106:	f108 0020 	add.w	r0, r8, #32
 801e10a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e10e:	0a00      	lsrs	r0, r0, #8
 801e110:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e114:	4330      	orrs	r0, r6
 801e116:	b28e      	uxth	r6, r1
 801e118:	fa1f f98e 	uxth.w	r9, lr
 801e11c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801e120:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e124:	fb06 f809 	mul.w	r8, r6, r9
 801e128:	0136      	lsls	r6, r6, #4
 801e12a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e12e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801e132:	9601      	str	r6, [sp, #4]
 801e134:	ea4a 0404 	orr.w	r4, sl, r4
 801e138:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e13c:	fa1f f689 	uxth.w	r6, r9
 801e140:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e144:	fb11 f90e 	smulbb	r9, r1, lr
 801e148:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e14c:	9602      	str	r6, [sp, #8]
 801e14e:	4626      	mov	r6, r4
 801e150:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801e154:	f1ce 0410 	rsb	r4, lr, #16
 801e158:	ea4a 0202 	orr.w	r2, sl, r2
 801e15c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e160:	1a64      	subs	r4, r4, r1
 801e162:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801e166:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e16a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e16e:	434a      	muls	r2, r1
 801e170:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e174:	ea4a 0000 	orr.w	r0, sl, r0
 801e178:	9903      	ldr	r1, [sp, #12]
 801e17a:	fb04 2406 	mla	r4, r4, r6, r2
 801e17e:	9e02      	ldr	r6, [sp, #8]
 801e180:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801e184:	fb09 4200 	mla	r2, r9, r0, r4
 801e188:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801e18c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801e190:	8808      	ldrh	r0, [r1, #0]
 801e192:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e196:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801e19a:	ea44 0b0b 	orr.w	fp, r4, fp
 801e19e:	9c01      	ldr	r4, [sp, #4]
 801e1a0:	b289      	uxth	r1, r1
 801e1a2:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801e1a6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801e1aa:	1ba4      	subs	r4, r4, r6
 801e1ac:	9e01      	ldr	r6, [sp, #4]
 801e1ae:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e1b2:	eba6 0608 	sub.w	r6, r6, r8
 801e1b6:	b2a4      	uxth	r4, r4
 801e1b8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e1bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e1c0:	b2b6      	uxth	r6, r6
 801e1c2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e1c6:	4373      	muls	r3, r6
 801e1c8:	ea42 0e0e 	orr.w	lr, r2, lr
 801e1cc:	fb0c 3304 	mla	r3, ip, r4, r3
 801e1d0:	9c02      	ldr	r4, [sp, #8]
 801e1d2:	fa1f f28e 	uxth.w	r2, lr
 801e1d6:	fb04 3505 	mla	r5, r4, r5, r3
 801e1da:	10d4      	asrs	r4, r2, #3
 801e1dc:	fb08 5707 	mla	r7, r8, r7, r5
 801e1e0:	1215      	asrs	r5, r2, #8
 801e1e2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801e1e6:	00d2      	lsls	r2, r2, #3
 801e1e8:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e1ec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e1f0:	b2d2      	uxtb	r2, r2
 801e1f2:	434f      	muls	r7, r1
 801e1f4:	1c7b      	adds	r3, r7, #1
 801e1f6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801e1fa:	1203      	asrs	r3, r0, #8
 801e1fc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801e200:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e204:	b2ff      	uxtb	r7, r7
 801e206:	fb13 f307 	smulbb	r3, r3, r7
 801e20a:	fb05 3501 	mla	r5, r5, r1, r3
 801e20e:	10c3      	asrs	r3, r0, #3
 801e210:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e214:	b2ad      	uxth	r5, r5
 801e216:	fb13 f307 	smulbb	r3, r3, r7
 801e21a:	fb04 3401 	mla	r4, r4, r1, r3
 801e21e:	00c3      	lsls	r3, r0, #3
 801e220:	b2db      	uxtb	r3, r3
 801e222:	b2a4      	uxth	r4, r4
 801e224:	fb13 f307 	smulbb	r3, r3, r7
 801e228:	fb02 3101 	mla	r1, r2, r1, r3
 801e22c:	1c6b      	adds	r3, r5, #1
 801e22e:	1c62      	adds	r2, r4, #1
 801e230:	b289      	uxth	r1, r1
 801e232:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e236:	1c4b      	adds	r3, r1, #1
 801e238:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e23c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e240:	9a03      	ldr	r2, [sp, #12]
 801e242:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e246:	0964      	lsrs	r4, r4, #5
 801e248:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e24c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801e250:	432b      	orrs	r3, r5
 801e252:	4323      	orrs	r3, r4
 801e254:	8013      	strh	r3, [r2, #0]
 801e256:	b005      	add	sp, #20
 801e258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e25c:	f04f 0c00 	mov.w	ip, #0
 801e260:	4664      	mov	r4, ip
 801e262:	e6d6      	b.n	801e012 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801e264:	2300      	movs	r3, #0
 801e266:	469c      	mov	ip, r3
 801e268:	461a      	mov	r2, r3
 801e26a:	461c      	mov	r4, r3
 801e26c:	e6f8      	b.n	801e060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e26e:	2300      	movs	r3, #0
 801e270:	461a      	mov	r2, r3
 801e272:	e6f5      	b.n	801e060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e274:	460b      	mov	r3, r1
 801e276:	460a      	mov	r2, r1
 801e278:	e6f2      	b.n	801e060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e27a:	2500      	movs	r5, #0
 801e27c:	46ab      	mov	fp, r5
 801e27e:	e720      	b.n	801e0c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801e280:	2700      	movs	r7, #0
 801e282:	463d      	mov	r5, r7
 801e284:	4638      	mov	r0, r7
 801e286:	46bb      	mov	fp, r7
 801e288:	e745      	b.n	801e116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e28a:	4677      	mov	r7, lr
 801e28c:	4675      	mov	r5, lr
 801e28e:	4670      	mov	r0, lr
 801e290:	46f3      	mov	fp, lr
 801e292:	e740      	b.n	801e116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e294:	2700      	movs	r7, #0
 801e296:	4638      	mov	r0, r7
 801e298:	e73d      	b.n	801e116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e29a:	460f      	mov	r7, r1
 801e29c:	4608      	mov	r0, r1
 801e29e:	e73a      	b.n	801e116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801e2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2a4:	b097      	sub	sp, #92	; 0x5c
 801e2a6:	9214      	str	r2, [sp, #80]	; 0x50
 801e2a8:	9308      	str	r3, [sp, #32]
 801e2aa:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801e2ac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e2b0:	9015      	str	r0, [sp, #84]	; 0x54
 801e2b2:	9312      	str	r3, [sp, #72]	; 0x48
 801e2b4:	6850      	ldr	r0, [r2, #4]
 801e2b6:	9111      	str	r1, [sp, #68]	; 0x44
 801e2b8:	6812      	ldr	r2, [r2, #0]
 801e2ba:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801e2be:	fb00 1303 	mla	r3, r0, r3, r1
 801e2c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e2c6:	9309      	str	r3, [sp, #36]	; 0x24
 801e2c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e2ca:	681b      	ldr	r3, [r3, #0]
 801e2cc:	930b      	str	r3, [sp, #44]	; 0x2c
 801e2ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e2d0:	685b      	ldr	r3, [r3, #4]
 801e2d2:	930c      	str	r3, [sp, #48]	; 0x30
 801e2d4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801e2d8:	930a      	str	r3, [sp, #40]	; 0x28
 801e2da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e2dc:	2b00      	cmp	r3, #0
 801e2de:	dc03      	bgt.n	801e2e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e2e0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e2e2:	2b00      	cmp	r3, #0
 801e2e4:	f340 83cd 	ble.w	801ea82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801e2e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e2ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e2ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e2f2:	1e48      	subs	r0, r1, #1
 801e2f4:	1e55      	subs	r5, r2, #1
 801e2f6:	9b08      	ldr	r3, [sp, #32]
 801e2f8:	2b00      	cmp	r3, #0
 801e2fa:	f340 81a5 	ble.w	801e648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801e2fe:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801e300:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e302:	1436      	asrs	r6, r6, #16
 801e304:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e308:	d406      	bmi.n	801e318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e30a:	4286      	cmp	r6, r0
 801e30c:	da04      	bge.n	801e318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e30e:	2b00      	cmp	r3, #0
 801e310:	db02      	blt.n	801e318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e312:	42ab      	cmp	r3, r5
 801e314:	f2c0 8199 	blt.w	801e64a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801e318:	3601      	adds	r6, #1
 801e31a:	f100 8186 	bmi.w	801e62a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e31e:	42b1      	cmp	r1, r6
 801e320:	f2c0 8183 	blt.w	801e62a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e324:	3301      	adds	r3, #1
 801e326:	f100 8180 	bmi.w	801e62a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e32a:	429a      	cmp	r2, r3
 801e32c:	f2c0 817d 	blt.w	801e62a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e330:	9b08      	ldr	r3, [sp, #32]
 801e332:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801e336:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801e338:	9313      	str	r3, [sp, #76]	; 0x4c
 801e33a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e33c:	2b00      	cmp	r3, #0
 801e33e:	f340 81a6 	ble.w	801e68e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801e342:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e344:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801e346:	1418      	asrs	r0, r3, #16
 801e348:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e34a:	142d      	asrs	r5, r5, #16
 801e34c:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801e350:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e352:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801e356:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e358:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801e35c:	f100 81fa 	bmi.w	801e754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e360:	f102 3eff 	add.w	lr, r2, #4294967295
 801e364:	4575      	cmp	r5, lr
 801e366:	f280 81f5 	bge.w	801e754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e36a:	2800      	cmp	r0, #0
 801e36c:	f2c0 81f2 	blt.w	801e754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e370:	f103 3eff 	add.w	lr, r3, #4294967295
 801e374:	4570      	cmp	r0, lr
 801e376:	f280 81ed 	bge.w	801e754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801e37a:	b212      	sxth	r2, r2
 801e37c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e37e:	fa1f fe81 	uxth.w	lr, r1
 801e382:	fb00 5002 	mla	r0, r0, r2, r5
 801e386:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801e38a:	eb03 0a00 	add.w	sl, r3, r0
 801e38e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801e392:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801e396:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e39a:	b29b      	uxth	r3, r3
 801e39c:	f1bc 0f00 	cmp.w	ip, #0
 801e3a0:	f000 81bb 	beq.w	801e71a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801e3a4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801e3a8:	eb0a 0b02 	add.w	fp, sl, r2
 801e3ac:	fa1f fa8c 	uxth.w	sl, ip
 801e3b0:	940d      	str	r4, [sp, #52]	; 0x34
 801e3b2:	fb0a fe0e 	mul.w	lr, sl, lr
 801e3b6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e3ba:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801e3be:	eba5 050e 	sub.w	r5, r5, lr
 801e3c2:	940e      	str	r4, [sp, #56]	; 0x38
 801e3c4:	fa1f fa8a 	uxth.w	sl, sl
 801e3c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e3ca:	b2ad      	uxth	r5, r5
 801e3cc:	eba3 030a 	sub.w	r3, r3, sl
 801e3d0:	fb08 f505 	mul.w	r5, r8, r5
 801e3d4:	b29b      	uxth	r3, r3
 801e3d6:	fb09 5303 	mla	r3, r9, r3, r5
 801e3da:	fb0a 3304 	mla	r3, sl, r4, r3
 801e3de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e3e0:	fb0e 3304 	mla	r3, lr, r4, r3
 801e3e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e3e8:	2b00      	cmp	r3, #0
 801e3ea:	f000 8111 	beq.w	801e610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e3ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e3f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e3f4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801e3f8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801e3fc:	f000 8192 	beq.w	801e724 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801e400:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801e404:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e408:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e40c:	fb0a fe0e 	mul.w	lr, sl, lr
 801e410:	fb09 f000 	mul.w	r0, r9, r0
 801e414:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801e418:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801e41c:	f100 0b20 	add.w	fp, r0, #32
 801e420:	44ce      	add	lr, r9
 801e422:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801e426:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e42a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e42e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e432:	ea4e 0909 	orr.w	r9, lr, r9
 801e436:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801e43a:	8868      	ldrh	r0, [r5, #2]
 801e43c:	d019      	beq.n	801e472 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e43e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801e442:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e446:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e44a:	fb0a fe0e 	mul.w	lr, sl, lr
 801e44e:	fb08 f800 	mul.w	r8, r8, r0
 801e452:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801e456:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801e45a:	f108 0b20 	add.w	fp, r8, #32
 801e45e:	4486      	add	lr, r0
 801e460:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801e464:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e468:	0a00      	lsrs	r0, r0, #8
 801e46a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e46e:	ea4e 0000 	orr.w	r0, lr, r0
 801e472:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801e476:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e47a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e47e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e482:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801e486:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e48a:	ea4e 0909 	orr.w	r9, lr, r9
 801e48e:	ea4a 0000 	orr.w	r0, sl, r0
 801e492:	f1bc 0f00 	cmp.w	ip, #0
 801e496:	f000 8147 	beq.w	801e728 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801e49a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801e49e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e4a0:	3a01      	subs	r2, #1
 801e4a2:	2cff      	cmp	r4, #255	; 0xff
 801e4a4:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801e4a8:	f102 0202 	add.w	r2, r2, #2
 801e4ac:	eb05 0e02 	add.w	lr, r5, r2
 801e4b0:	5aaa      	ldrh	r2, [r5, r2]
 801e4b2:	d018      	beq.n	801e4e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801e4b4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801e4b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e4bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e4c0:	fb04 fa02 	mul.w	sl, r4, r2
 801e4c4:	fb08 f805 	mul.w	r8, r8, r5
 801e4c8:	f10a 0520 	add.w	r5, sl, #32
 801e4cc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801e4d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e4d4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801e4d8:	4442      	add	r2, r8
 801e4da:	0a2d      	lsrs	r5, r5, #8
 801e4dc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801e4e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e4e4:	432a      	orrs	r2, r5
 801e4e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e4e8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801e4ec:	2cff      	cmp	r4, #255	; 0xff
 801e4ee:	d01a      	beq.n	801e526 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801e4f0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801e4f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e4f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e4fc:	fb04 fa05 	mul.w	sl, r4, r5
 801e500:	fb08 f80e 	mul.w	r8, r8, lr
 801e504:	f10a 0e20 	add.w	lr, sl, #32
 801e508:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801e50c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e510:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801e514:	4445      	add	r5, r8
 801e516:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e51a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801e51e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801e522:	ea45 050e 	orr.w	r5, r5, lr
 801e526:	fb1c fe01 	smulbb	lr, ip, r1
 801e52a:	f1cc 0810 	rsb	r8, ip, #16
 801e52e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e532:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e536:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801e53a:	eba8 0801 	sub.w	r8, r8, r1
 801e53e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801e542:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e546:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801e54a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e54e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801e552:	ea4a 0202 	orr.w	r2, sl, r2
 801e556:	4341      	muls	r1, r0
 801e558:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801e55c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e560:	fb09 1108 	mla	r1, r9, r8, r1
 801e564:	ea4b 0505 	orr.w	r5, fp, r5
 801e568:	fb0c 1102 	mla	r1, ip, r2, r1
 801e56c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801e570:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e574:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e578:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e57c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e580:	ea42 0e0e 	orr.w	lr, r2, lr
 801e584:	fa1f f28e 	uxth.w	r2, lr
 801e588:	2bff      	cmp	r3, #255	; 0xff
 801e58a:	d103      	bne.n	801e594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e58c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801e58e:	29ff      	cmp	r1, #255	; 0xff
 801e590:	f000 80de 	beq.w	801e750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e594:	990a      	ldr	r1, [sp, #40]	; 0x28
 801e596:	1215      	asrs	r5, r2, #8
 801e598:	8838      	ldrh	r0, [r7, #0]
 801e59a:	434b      	muls	r3, r1
 801e59c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e5a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e5a2:	f103 0c01 	add.w	ip, r3, #1
 801e5a6:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801e5aa:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801e5ae:	fa5f fc83 	uxtb.w	ip, r3
 801e5b2:	1203      	asrs	r3, r0, #8
 801e5b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e5b8:	fb13 f30c 	smulbb	r3, r3, ip
 801e5bc:	fb05 3501 	mla	r5, r5, r1, r3
 801e5c0:	10c3      	asrs	r3, r0, #3
 801e5c2:	10d1      	asrs	r1, r2, #3
 801e5c4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e5c8:	00d2      	lsls	r2, r2, #3
 801e5ca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e5ce:	b2ad      	uxth	r5, r5
 801e5d0:	fb13 f30c 	smulbb	r3, r3, ip
 801e5d4:	b2d2      	uxtb	r2, r2
 801e5d6:	fb01 3104 	mla	r1, r1, r4, r3
 801e5da:	00c3      	lsls	r3, r0, #3
 801e5dc:	b2db      	uxtb	r3, r3
 801e5de:	b289      	uxth	r1, r1
 801e5e0:	fb13 f30c 	smulbb	r3, r3, ip
 801e5e4:	fb02 3304 	mla	r3, r2, r4, r3
 801e5e8:	b29a      	uxth	r2, r3
 801e5ea:	1c6b      	adds	r3, r5, #1
 801e5ec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e5f0:	1c53      	adds	r3, r2, #1
 801e5f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e5f6:	1c4a      	adds	r2, r1, #1
 801e5f8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e5fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e600:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e604:	0949      	lsrs	r1, r1, #5
 801e606:	432b      	orrs	r3, r5
 801e608:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e60c:	430b      	orrs	r3, r1
 801e60e:	803b      	strh	r3, [r7, #0]
 801e610:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e612:	3702      	adds	r7, #2
 801e614:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801e616:	4413      	add	r3, r2
 801e618:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801e61a:	9321      	str	r3, [sp, #132]	; 0x84
 801e61c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e61e:	441a      	add	r2, r3
 801e620:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e622:	3b01      	subs	r3, #1
 801e624:	9222      	str	r2, [sp, #136]	; 0x88
 801e626:	9313      	str	r3, [sp, #76]	; 0x4c
 801e628:	e687      	b.n	801e33a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e62a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e62c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801e62e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801e630:	4433      	add	r3, r6
 801e632:	9321      	str	r3, [sp, #132]	; 0x84
 801e634:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e636:	441c      	add	r4, r3
 801e638:	9b08      	ldr	r3, [sp, #32]
 801e63a:	3b01      	subs	r3, #1
 801e63c:	9422      	str	r4, [sp, #136]	; 0x88
 801e63e:	9308      	str	r3, [sp, #32]
 801e640:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e642:	3302      	adds	r3, #2
 801e644:	9309      	str	r3, [sp, #36]	; 0x24
 801e646:	e656      	b.n	801e2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801e648:	d028      	beq.n	801e69c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801e64a:	9b08      	ldr	r3, [sp, #32]
 801e64c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801e64e:	3b01      	subs	r3, #1
 801e650:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801e652:	fb00 5003 	mla	r0, r0, r3, r5
 801e656:	1400      	asrs	r0, r0, #16
 801e658:	f53f ae6a 	bmi.w	801e330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e65c:	3901      	subs	r1, #1
 801e65e:	4288      	cmp	r0, r1
 801e660:	f6bf ae66 	bge.w	801e330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e664:	9924      	ldr	r1, [sp, #144]	; 0x90
 801e666:	9822      	ldr	r0, [sp, #136]	; 0x88
 801e668:	fb01 0303 	mla	r3, r1, r3, r0
 801e66c:	141b      	asrs	r3, r3, #16
 801e66e:	f53f ae5f 	bmi.w	801e330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e672:	3a01      	subs	r2, #1
 801e674:	4293      	cmp	r3, r2
 801e676:	f6bf ae5b 	bge.w	801e330 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e67a:	9b08      	ldr	r3, [sp, #32]
 801e67c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801e680:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e684:	9313      	str	r3, [sp, #76]	; 0x4c
 801e686:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e688:	2b00      	cmp	r3, #0
 801e68a:	f300 8082 	bgt.w	801e792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801e68e:	9b08      	ldr	r3, [sp, #32]
 801e690:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e694:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e696:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e69a:	9309      	str	r3, [sp, #36]	; 0x24
 801e69c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e69e:	2b00      	cmp	r3, #0
 801e6a0:	f340 81ef 	ble.w	801ea82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801e6a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e6a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e6aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e6ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e6b2:	eef0 6a62 	vmov.f32	s13, s5
 801e6b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e6ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e6be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e6c2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801e6c6:	eef0 6a43 	vmov.f32	s13, s6
 801e6ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e6ce:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801e6d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e6d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e6da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e6de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e6e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e6e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e6ea:	ee12 2a90 	vmov	r2, s5
 801e6ee:	eef0 2a47 	vmov.f32	s5, s14
 801e6f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e6f6:	ee13 2a10 	vmov	r2, s6
 801e6fa:	9323      	str	r3, [sp, #140]	; 0x8c
 801e6fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e6fe:	eeb0 3a67 	vmov.f32	s6, s15
 801e702:	fb92 f3f3 	sdiv	r3, r2, r3
 801e706:	9324      	str	r3, [sp, #144]	; 0x90
 801e708:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e70a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e70c:	3b01      	subs	r3, #1
 801e70e:	9311      	str	r3, [sp, #68]	; 0x44
 801e710:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e712:	bf08      	it	eq
 801e714:	4613      	moveq	r3, r2
 801e716:	9308      	str	r3, [sp, #32]
 801e718:	e5df      	b.n	801e2da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e71a:	fb08 f505 	mul.w	r5, r8, r5
 801e71e:	fb09 5303 	mla	r3, r9, r3, r5
 801e722:	e65f      	b.n	801e3e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801e724:	4681      	mov	r9, r0
 801e726:	e686      	b.n	801e436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801e728:	f1c1 0210 	rsb	r2, r1, #16
 801e72c:	4341      	muls	r1, r0
 801e72e:	fb09 1902 	mla	r9, r9, r2, r1
 801e732:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e736:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e73a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e73e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e742:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e746:	ea42 0909 	orr.w	r9, r2, r9
 801e74a:	fa1f f289 	uxth.w	r2, r9
 801e74e:	e71b      	b.n	801e588 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801e750:	803a      	strh	r2, [r7, #0]
 801e752:	e75d      	b.n	801e610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e754:	f115 0e01 	adds.w	lr, r5, #1
 801e758:	f53f af5a 	bmi.w	801e610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e75c:	4572      	cmp	r2, lr
 801e75e:	f6ff af57 	blt.w	801e610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e762:	f110 0e01 	adds.w	lr, r0, #1
 801e766:	f53f af53 	bmi.w	801e610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e76a:	4573      	cmp	r3, lr
 801e76c:	f6ff af50 	blt.w	801e610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e770:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e772:	b21b      	sxth	r3, r3
 801e774:	b212      	sxth	r2, r2
 801e776:	9502      	str	r5, [sp, #8]
 801e778:	9301      	str	r3, [sp, #4]
 801e77a:	9200      	str	r2, [sp, #0]
 801e77c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801e780:	e9cd c405 	strd	ip, r4, [sp, #20]
 801e784:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801e788:	4639      	mov	r1, r7
 801e78a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e78c:	f7ff fc02 	bl	801df94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801e790:	e73e      	b.n	801e610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e792:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e794:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e798:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e79a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e79e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e7a0:	fa1f fc82 	uxth.w	ip, r2
 801e7a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e7a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e7aa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e7ae:	141f      	asrs	r7, r3, #16
 801e7b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e7b2:	141b      	asrs	r3, r3, #16
 801e7b4:	fb01 3707 	mla	r7, r1, r7, r3
 801e7b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e7ba:	eb03 0a07 	add.w	sl, r3, r7
 801e7be:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e7c2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e7c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e7ca:	b29b      	uxth	r3, r3
 801e7cc:	2d00      	cmp	r5, #0
 801e7ce:	f000 813d 	beq.w	801ea4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801e7d2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e7d6:	eb0a 0b01 	add.w	fp, sl, r1
 801e7da:	fa1f fa85 	uxth.w	sl, r5
 801e7de:	940f      	str	r4, [sp, #60]	; 0x3c
 801e7e0:	fb0a fc0c 	mul.w	ip, sl, ip
 801e7e4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e7e8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e7ec:	eba0 000c 	sub.w	r0, r0, ip
 801e7f0:	9410      	str	r4, [sp, #64]	; 0x40
 801e7f2:	fa1f fa8a 	uxth.w	sl, sl
 801e7f6:	b280      	uxth	r0, r0
 801e7f8:	eba3 030a 	sub.w	r3, r3, sl
 801e7fc:	fb08 f000 	mul.w	r0, r8, r0
 801e800:	b29b      	uxth	r3, r3
 801e802:	fb09 0303 	mla	r3, r9, r3, r0
 801e806:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e808:	fb0a 3300 	mla	r3, sl, r0, r3
 801e80c:	fb0c 3304 	mla	r3, ip, r4, r3
 801e810:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e814:	2b00      	cmp	r3, #0
 801e816:	f000 810b 	beq.w	801ea30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801e81a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e81c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e820:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e822:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e826:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e82a:	f000 8114 	beq.w	801ea56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801e82e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801e832:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e836:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e83a:	fb0a fc0c 	mul.w	ip, sl, ip
 801e83e:	fb09 f707 	mul.w	r7, r9, r7
 801e842:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e846:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801e84a:	f107 0b20 	add.w	fp, r7, #32
 801e84e:	44cc      	add	ip, r9
 801e850:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e854:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e858:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e85c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e860:	ea4c 0909 	orr.w	r9, ip, r9
 801e864:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801e868:	8847      	ldrh	r7, [r0, #2]
 801e86a:	d019      	beq.n	801e8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801e86c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801e870:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e874:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e878:	fb0a fc0c 	mul.w	ip, sl, ip
 801e87c:	fb08 f807 	mul.w	r8, r8, r7
 801e880:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e884:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801e888:	f108 0b20 	add.w	fp, r8, #32
 801e88c:	44bc      	add	ip, r7
 801e88e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e892:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e896:	0a3f      	lsrs	r7, r7, #8
 801e898:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e89c:	ea4c 0707 	orr.w	r7, ip, r7
 801e8a0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e8a4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e8a8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e8ac:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e8b0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e8b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e8b8:	ea4c 0909 	orr.w	r9, ip, r9
 801e8bc:	ea4a 0707 	orr.w	r7, sl, r7
 801e8c0:	2d00      	cmp	r5, #0
 801e8c2:	f000 80ca 	beq.w	801ea5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801e8c6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801e8ca:	3901      	subs	r1, #1
 801e8cc:	0049      	lsls	r1, r1, #1
 801e8ce:	3102      	adds	r1, #2
 801e8d0:	eb00 0c01 	add.w	ip, r0, r1
 801e8d4:	5a41      	ldrh	r1, [r0, r1]
 801e8d6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e8d8:	28ff      	cmp	r0, #255	; 0xff
 801e8da:	d019      	beq.n	801e910 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801e8dc:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801e8e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801e8e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e8e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e8ea:	fb04 fa01 	mul.w	sl, r4, r1
 801e8ee:	fb08 f800 	mul.w	r8, r8, r0
 801e8f2:	f10a 0020 	add.w	r0, sl, #32
 801e8f6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e8fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e8fe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e902:	4441      	add	r1, r8
 801e904:	0a00      	lsrs	r0, r0, #8
 801e906:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e90a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e90e:	4301      	orrs	r1, r0
 801e910:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e912:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e916:	2cff      	cmp	r4, #255	; 0xff
 801e918:	d01a      	beq.n	801e950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801e91a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801e91e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e922:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e926:	fb04 fa00 	mul.w	sl, r4, r0
 801e92a:	fb08 f80c 	mul.w	r8, r8, ip
 801e92e:	f10a 0c20 	add.w	ip, sl, #32
 801e932:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e936:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e93a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e93e:	4440      	add	r0, r8
 801e940:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e944:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e948:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e94c:	ea40 000c 	orr.w	r0, r0, ip
 801e950:	fb15 fc02 	smulbb	ip, r5, r2
 801e954:	f1c5 0810 	rsb	r8, r5, #16
 801e958:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e95c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e960:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e964:	eba8 0802 	sub.w	r8, r8, r2
 801e968:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e96c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e970:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e974:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e978:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e97c:	ea4a 0101 	orr.w	r1, sl, r1
 801e980:	437a      	muls	r2, r7
 801e982:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e986:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e98a:	fb09 2208 	mla	r2, r9, r8, r2
 801e98e:	ea4b 0000 	orr.w	r0, fp, r0
 801e992:	fb05 2201 	mla	r2, r5, r1, r2
 801e996:	fb0c 2200 	mla	r2, ip, r0, r2
 801e99a:	0d57      	lsrs	r7, r2, #21
 801e99c:	0952      	lsrs	r2, r2, #5
 801e99e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e9a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e9a6:	433a      	orrs	r2, r7
 801e9a8:	2bff      	cmp	r3, #255	; 0xff
 801e9aa:	b292      	uxth	r2, r2
 801e9ac:	d102      	bne.n	801e9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801e9ae:	9912      	ldr	r1, [sp, #72]	; 0x48
 801e9b0:	29ff      	cmp	r1, #255	; 0xff
 801e9b2:	d063      	beq.n	801ea7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801e9b4:	980a      	ldr	r0, [sp, #40]	; 0x28
 801e9b6:	1215      	asrs	r5, r2, #8
 801e9b8:	f8be 1000 	ldrh.w	r1, [lr]
 801e9bc:	4343      	muls	r3, r0
 801e9be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e9c0:	10cf      	asrs	r7, r1, #3
 801e9c2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e9c6:	1c58      	adds	r0, r3, #1
 801e9c8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e9cc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801e9d0:	1208      	asrs	r0, r1, #8
 801e9d2:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801e9d6:	00c9      	lsls	r1, r1, #3
 801e9d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e9dc:	b2db      	uxtb	r3, r3
 801e9de:	b2c9      	uxtb	r1, r1
 801e9e0:	fb10 f003 	smulbb	r0, r0, r3
 801e9e4:	fb11 f103 	smulbb	r1, r1, r3
 801e9e8:	fb05 0504 	mla	r5, r5, r4, r0
 801e9ec:	10d0      	asrs	r0, r2, #3
 801e9ee:	fb17 f703 	smulbb	r7, r7, r3
 801e9f2:	00d2      	lsls	r2, r2, #3
 801e9f4:	b2ad      	uxth	r5, r5
 801e9f6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e9fa:	b2d2      	uxtb	r2, r2
 801e9fc:	fb00 7004 	mla	r0, r0, r4, r7
 801ea00:	1c6b      	adds	r3, r5, #1
 801ea02:	fb02 1204 	mla	r2, r2, r4, r1
 801ea06:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ea0a:	b292      	uxth	r2, r2
 801ea0c:	b280      	uxth	r0, r0
 801ea0e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ea12:	1c57      	adds	r7, r2, #1
 801ea14:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ea18:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ea1c:	433d      	orrs	r5, r7
 801ea1e:	1c47      	adds	r7, r0, #1
 801ea20:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801ea24:	097f      	lsrs	r7, r7, #5
 801ea26:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ea2a:	433d      	orrs	r5, r7
 801ea2c:	f8ae 5000 	strh.w	r5, [lr]
 801ea30:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ea32:	f10e 0e02 	add.w	lr, lr, #2
 801ea36:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801ea38:	4413      	add	r3, r2
 801ea3a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801ea3c:	9321      	str	r3, [sp, #132]	; 0x84
 801ea3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ea40:	441a      	add	r2, r3
 801ea42:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ea44:	3b01      	subs	r3, #1
 801ea46:	9222      	str	r2, [sp, #136]	; 0x88
 801ea48:	9313      	str	r3, [sp, #76]	; 0x4c
 801ea4a:	e61c      	b.n	801e686 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ea4c:	fb08 f000 	mul.w	r0, r8, r0
 801ea50:	fb09 0303 	mla	r3, r9, r3, r0
 801ea54:	e6dc      	b.n	801e810 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801ea56:	46b9      	mov	r9, r7
 801ea58:	e704      	b.n	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801ea5a:	f1c2 0110 	rsb	r1, r2, #16
 801ea5e:	437a      	muls	r2, r7
 801ea60:	fb09 2901 	mla	r9, r9, r1, r2
 801ea64:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ea68:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ea6c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ea70:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ea74:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ea78:	4302      	orrs	r2, r0
 801ea7a:	e795      	b.n	801e9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801ea7c:	f8ae 2000 	strh.w	r2, [lr]
 801ea80:	e7d6      	b.n	801ea30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801ea82:	b017      	add	sp, #92	; 0x5c
 801ea84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ea88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ea88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea8c:	b085      	sub	sp, #20
 801ea8e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ea92:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ea96:	2800      	cmp	r0, #0
 801ea98:	9103      	str	r1, [sp, #12]
 801ea9a:	fb00 7406 	mla	r4, r0, r6, r7
 801ea9e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801eaa2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801eaa6:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801eaaa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801eaae:	eb02 0904 	add.w	r9, r2, r4
 801eab2:	9501      	str	r5, [sp, #4]
 801eab4:	f2c0 8141 	blt.w	801ed3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801eab8:	4583      	cmp	fp, r0
 801eaba:	f340 813e 	ble.w	801ed3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801eabe:	2f00      	cmp	r7, #0
 801eac0:	f2c0 8137 	blt.w	801ed32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801eac4:	42be      	cmp	r6, r7
 801eac6:	f340 8134 	ble.w	801ed32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801eaca:	f812 c004 	ldrb.w	ip, [r2, r4]
 801eace:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801ead2:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801ead6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801eada:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801eade:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eae2:	4355      	muls	r5, r2
 801eae4:	fb0c f203 	mul.w	r2, ip, r3
 801eae8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801eaec:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801eaf0:	441d      	add	r5, r3
 801eaf2:	f102 0320 	add.w	r3, r2, #32
 801eaf6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eafa:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801eafe:	0a1b      	lsrs	r3, r3, #8
 801eb00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb04:	431c      	orrs	r4, r3
 801eb06:	1c7b      	adds	r3, r7, #1
 801eb08:	f100 811c 	bmi.w	801ed44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801eb0c:	429e      	cmp	r6, r3
 801eb0e:	f340 8119 	ble.w	801ed44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801eb12:	2900      	cmp	r1, #0
 801eb14:	f000 8119 	beq.w	801ed4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801eb18:	9a01      	ldr	r2, [sp, #4]
 801eb1a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801eb1e:	8855      	ldrh	r5, [r2, #2]
 801eb20:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801eb24:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801eb28:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801eb2c:	fb08 f802 	mul.w	r8, r8, r2
 801eb30:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801eb34:	435d      	muls	r5, r3
 801eb36:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801eb3a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801eb3e:	44d0      	add	r8, sl
 801eb40:	f105 0a20 	add.w	sl, r5, #32
 801eb44:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801eb48:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801eb4c:	0a2d      	lsrs	r5, r5, #8
 801eb4e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801eb52:	432a      	orrs	r2, r5
 801eb54:	3001      	adds	r0, #1
 801eb56:	f100 80fe 	bmi.w	801ed56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801eb5a:	4583      	cmp	fp, r0
 801eb5c:	f340 80fb 	ble.w	801ed56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801eb60:	f1be 0f00 	cmp.w	lr, #0
 801eb64:	f000 80fc 	beq.w	801ed60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801eb68:	2f00      	cmp	r7, #0
 801eb6a:	f2c0 80f1 	blt.w	801ed50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801eb6e:	42be      	cmp	r6, r7
 801eb70:	f340 80ee 	ble.w	801ed50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801eb74:	9801      	ldr	r0, [sp, #4]
 801eb76:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801eb7a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801eb7e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801eb82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801eb86:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801eb8a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801eb8e:	fb0a fa00 	mul.w	sl, sl, r0
 801eb92:	fb05 f808 	mul.w	r8, r5, r8
 801eb96:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801eb9a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801eb9e:	4482      	add	sl, r0
 801eba0:	f108 0020 	add.w	r0, r8, #32
 801eba4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801eba8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ebac:	0a00      	lsrs	r0, r0, #8
 801ebae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ebb2:	ea4b 0b00 	orr.w	fp, fp, r0
 801ebb6:	3701      	adds	r7, #1
 801ebb8:	f100 80d7 	bmi.w	801ed6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ebbc:	42be      	cmp	r6, r7
 801ebbe:	f340 80d4 	ble.w	801ed6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ebc2:	2900      	cmp	r1, #0
 801ebc4:	f000 80d4 	beq.w	801ed70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ebc8:	3601      	adds	r6, #1
 801ebca:	9801      	ldr	r0, [sp, #4]
 801ebcc:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ebd0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ebd4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ebd8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801ebdc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ebe0:	fb09 f906 	mul.w	r9, r9, r6
 801ebe4:	fb07 f800 	mul.w	r8, r7, r0
 801ebe8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801ebec:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ebf0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801ebf4:	44d1      	add	r9, sl
 801ebf6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ebfa:	f108 0020 	add.w	r0, r8, #32
 801ebfe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ec02:	0a00      	lsrs	r0, r0, #8
 801ec04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ec08:	4330      	orrs	r0, r6
 801ec0a:	b28e      	uxth	r6, r1
 801ec0c:	fa1f f98e 	uxth.w	r9, lr
 801ec10:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ec14:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ec18:	fb06 f809 	mul.w	r8, r6, r9
 801ec1c:	0136      	lsls	r6, r6, #4
 801ec1e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ec22:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ec26:	9601      	str	r6, [sp, #4]
 801ec28:	ea4a 0404 	orr.w	r4, sl, r4
 801ec2c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ec30:	fa1f f689 	uxth.w	r6, r9
 801ec34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ec38:	fb11 f90e 	smulbb	r9, r1, lr
 801ec3c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ec40:	9602      	str	r6, [sp, #8]
 801ec42:	4626      	mov	r6, r4
 801ec44:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ec48:	f1ce 0410 	rsb	r4, lr, #16
 801ec4c:	ea4a 0202 	orr.w	r2, sl, r2
 801ec50:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ec54:	1a64      	subs	r4, r4, r1
 801ec56:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ec5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ec5e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ec62:	434a      	muls	r2, r1
 801ec64:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ec68:	ea4a 0000 	orr.w	r0, sl, r0
 801ec6c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801ec70:	fb04 2406 	mla	r4, r4, r6, r2
 801ec74:	9903      	ldr	r1, [sp, #12]
 801ec76:	fb09 4200 	mla	r2, r9, r0, r4
 801ec7a:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ec7e:	9801      	ldr	r0, [sp, #4]
 801ec80:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ec84:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ec88:	8809      	ldrh	r1, [r1, #0]
 801ec8a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801ec8e:	ea44 0b0b 	orr.w	fp, r4, fp
 801ec92:	9c02      	ldr	r4, [sp, #8]
 801ec94:	1b00      	subs	r0, r0, r4
 801ec96:	9c01      	ldr	r4, [sp, #4]
 801ec98:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ec9c:	eba4 0608 	sub.w	r6, r4, r8
 801eca0:	b280      	uxth	r0, r0
 801eca2:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801eca6:	b2b6      	uxth	r6, r6
 801eca8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ecac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ecb0:	4373      	muls	r3, r6
 801ecb2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ecb6:	fb0c 3300 	mla	r3, ip, r0, r3
 801ecba:	9802      	ldr	r0, [sp, #8]
 801ecbc:	ea42 0e0e 	orr.w	lr, r2, lr
 801ecc0:	fb00 3505 	mla	r5, r0, r5, r3
 801ecc4:	120b      	asrs	r3, r1, #8
 801ecc6:	10c8      	asrs	r0, r1, #3
 801ecc8:	fb08 5707 	mla	r7, r8, r7, r5
 801eccc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ecd0:	00c9      	lsls	r1, r1, #3
 801ecd2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ecd6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ecda:	fa1f f28e 	uxth.w	r2, lr
 801ecde:	b2c9      	uxtb	r1, r1
 801ece0:	b2ff      	uxtb	r7, r7
 801ece2:	437b      	muls	r3, r7
 801ece4:	4378      	muls	r0, r7
 801ece6:	434f      	muls	r7, r1
 801ece8:	1c59      	adds	r1, r3, #1
 801ecea:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ecee:	1213      	asrs	r3, r2, #8
 801ecf0:	f023 0307 	bic.w	r3, r3, #7
 801ecf4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ecf8:	1c41      	adds	r1, r0, #1
 801ecfa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ecfe:	10d1      	asrs	r1, r2, #3
 801ed00:	021b      	lsls	r3, r3, #8
 801ed02:	f021 0103 	bic.w	r1, r1, #3
 801ed06:	00d2      	lsls	r2, r2, #3
 801ed08:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801ed0c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ed10:	00c9      	lsls	r1, r1, #3
 801ed12:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ed16:	430b      	orrs	r3, r1
 801ed18:	1c79      	adds	r1, r7, #1
 801ed1a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801ed1e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ed22:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ed26:	431a      	orrs	r2, r3
 801ed28:	9b03      	ldr	r3, [sp, #12]
 801ed2a:	801a      	strh	r2, [r3, #0]
 801ed2c:	b005      	add	sp, #20
 801ed2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed32:	f04f 0c00 	mov.w	ip, #0
 801ed36:	4664      	mov	r4, ip
 801ed38:	e6e5      	b.n	801eb06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801ed3a:	2300      	movs	r3, #0
 801ed3c:	469c      	mov	ip, r3
 801ed3e:	461a      	mov	r2, r3
 801ed40:	461c      	mov	r4, r3
 801ed42:	e707      	b.n	801eb54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ed44:	2300      	movs	r3, #0
 801ed46:	461a      	mov	r2, r3
 801ed48:	e704      	b.n	801eb54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ed4a:	460b      	mov	r3, r1
 801ed4c:	460a      	mov	r2, r1
 801ed4e:	e701      	b.n	801eb54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ed50:	2500      	movs	r5, #0
 801ed52:	46ab      	mov	fp, r5
 801ed54:	e72f      	b.n	801ebb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801ed56:	2700      	movs	r7, #0
 801ed58:	463d      	mov	r5, r7
 801ed5a:	4638      	mov	r0, r7
 801ed5c:	46bb      	mov	fp, r7
 801ed5e:	e754      	b.n	801ec0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ed60:	4677      	mov	r7, lr
 801ed62:	4675      	mov	r5, lr
 801ed64:	4670      	mov	r0, lr
 801ed66:	46f3      	mov	fp, lr
 801ed68:	e74f      	b.n	801ec0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ed6a:	2700      	movs	r7, #0
 801ed6c:	4638      	mov	r0, r7
 801ed6e:	e74c      	b.n	801ec0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ed70:	460f      	mov	r7, r1
 801ed72:	4608      	mov	r0, r1
 801ed74:	e749      	b.n	801ec0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801ed78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ed78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed7c:	b093      	sub	sp, #76	; 0x4c
 801ed7e:	9210      	str	r2, [sp, #64]	; 0x40
 801ed80:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ed82:	9011      	str	r0, [sp, #68]	; 0x44
 801ed84:	910e      	str	r1, [sp, #56]	; 0x38
 801ed86:	6850      	ldr	r0, [r2, #4]
 801ed88:	9306      	str	r3, [sp, #24]
 801ed8a:	6812      	ldr	r2, [r2, #0]
 801ed8c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ed90:	fb00 1303 	mla	r3, r0, r3, r1
 801ed94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ed98:	9307      	str	r3, [sp, #28]
 801ed9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed9c:	681b      	ldr	r3, [r3, #0]
 801ed9e:	9308      	str	r3, [sp, #32]
 801eda0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eda2:	685b      	ldr	r3, [r3, #4]
 801eda4:	9309      	str	r3, [sp, #36]	; 0x24
 801eda6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eda8:	2b00      	cmp	r3, #0
 801edaa:	dc03      	bgt.n	801edb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801edac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801edae:	2b00      	cmp	r3, #0
 801edb0:	f340 83b6 	ble.w	801f520 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801edb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801edb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801edba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801edbe:	1e48      	subs	r0, r1, #1
 801edc0:	1e55      	subs	r5, r2, #1
 801edc2:	9b06      	ldr	r3, [sp, #24]
 801edc4:	2b00      	cmp	r3, #0
 801edc6:	f340 8165 	ble.w	801f094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801edca:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801edcc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801edce:	1436      	asrs	r6, r6, #16
 801edd0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801edd4:	d406      	bmi.n	801ede4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801edd6:	4286      	cmp	r6, r0
 801edd8:	da04      	bge.n	801ede4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801edda:	2b00      	cmp	r3, #0
 801eddc:	db02      	blt.n	801ede4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801edde:	42ab      	cmp	r3, r5
 801ede0:	f2c0 8159 	blt.w	801f096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ede4:	3601      	adds	r6, #1
 801ede6:	f100 8146 	bmi.w	801f076 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801edea:	42b1      	cmp	r1, r6
 801edec:	f2c0 8143 	blt.w	801f076 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801edf0:	3301      	adds	r3, #1
 801edf2:	f100 8140 	bmi.w	801f076 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801edf6:	429a      	cmp	r2, r3
 801edf8:	f2c0 813d 	blt.w	801f076 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801edfc:	9b06      	ldr	r3, [sp, #24]
 801edfe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ee02:	9f07      	ldr	r7, [sp, #28]
 801ee04:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ee08:	2b00      	cmp	r3, #0
 801ee0a:	f340 8166 	ble.w	801f0da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ee0e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ee10:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ee12:	1418      	asrs	r0, r3, #16
 801ee14:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ee16:	142d      	asrs	r5, r5, #16
 801ee18:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ee1c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ee1e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ee22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee24:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ee28:	f100 81f0 	bmi.w	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ee2c:	f102 3eff 	add.w	lr, r2, #4294967295
 801ee30:	4575      	cmp	r5, lr
 801ee32:	f280 81eb 	bge.w	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ee36:	2800      	cmp	r0, #0
 801ee38:	f2c0 81e8 	blt.w	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ee3c:	f103 3eff 	add.w	lr, r3, #4294967295
 801ee40:	4570      	cmp	r0, lr
 801ee42:	f280 81e3 	bge.w	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ee46:	b212      	sxth	r2, r2
 801ee48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee4a:	fa1f fe81 	uxth.w	lr, r1
 801ee4e:	fb00 5002 	mla	r0, r0, r2, r5
 801ee52:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ee56:	eb03 0a00 	add.w	sl, r3, r0
 801ee5a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ee5e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ee62:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ee66:	b29b      	uxth	r3, r3
 801ee68:	f1bc 0f00 	cmp.w	ip, #0
 801ee6c:	f000 817b 	beq.w	801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801ee70:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ee74:	eb0a 0b02 	add.w	fp, sl, r2
 801ee78:	fa1f fa8c 	uxth.w	sl, ip
 801ee7c:	940a      	str	r4, [sp, #40]	; 0x28
 801ee7e:	fb0a fe0e 	mul.w	lr, sl, lr
 801ee82:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ee86:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ee8a:	eba5 050e 	sub.w	r5, r5, lr
 801ee8e:	940b      	str	r4, [sp, #44]	; 0x2c
 801ee90:	fa1f fa8a 	uxth.w	sl, sl
 801ee94:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ee96:	b2ad      	uxth	r5, r5
 801ee98:	eba3 030a 	sub.w	r3, r3, sl
 801ee9c:	fb08 f505 	mul.w	r5, r8, r5
 801eea0:	b29b      	uxth	r3, r3
 801eea2:	fb09 5303 	mla	r3, r9, r3, r5
 801eea6:	fb0a 3304 	mla	r3, sl, r4, r3
 801eeaa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801eeac:	fb0e 3304 	mla	r3, lr, r4, r3
 801eeb0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eeb4:	2b00      	cmp	r3, #0
 801eeb6:	f000 80d1 	beq.w	801f05c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801eeba:	9c08      	ldr	r4, [sp, #32]
 801eebc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801eec0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801eec4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801eec8:	f000 8152 	beq.w	801f170 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801eecc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801eed0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801eed4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801eed8:	fb0a fe0e 	mul.w	lr, sl, lr
 801eedc:	fb09 f000 	mul.w	r0, r9, r0
 801eee0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801eee4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801eee8:	f100 0b20 	add.w	fp, r0, #32
 801eeec:	44ce      	add	lr, r9
 801eeee:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801eef2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801eef6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801eefa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801eefe:	ea4e 0909 	orr.w	r9, lr, r9
 801ef02:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ef06:	8868      	ldrh	r0, [r5, #2]
 801ef08:	d019      	beq.n	801ef3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ef0a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ef0e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ef12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ef16:	fb0a fe0e 	mul.w	lr, sl, lr
 801ef1a:	fb08 f800 	mul.w	r8, r8, r0
 801ef1e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ef22:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ef26:	f108 0b20 	add.w	fp, r8, #32
 801ef2a:	4486      	add	lr, r0
 801ef2c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ef30:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ef34:	0a00      	lsrs	r0, r0, #8
 801ef36:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ef3a:	ea4e 0000 	orr.w	r0, lr, r0
 801ef3e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ef42:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ef46:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ef4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ef4e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ef52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ef56:	ea4e 0909 	orr.w	r9, lr, r9
 801ef5a:	ea4a 0000 	orr.w	r0, sl, r0
 801ef5e:	f1bc 0f00 	cmp.w	ip, #0
 801ef62:	f000 8107 	beq.w	801f174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801ef66:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801ef6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ef6c:	3a01      	subs	r2, #1
 801ef6e:	2cff      	cmp	r4, #255	; 0xff
 801ef70:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801ef74:	f102 0202 	add.w	r2, r2, #2
 801ef78:	eb05 0e02 	add.w	lr, r5, r2
 801ef7c:	5aaa      	ldrh	r2, [r5, r2]
 801ef7e:	d018      	beq.n	801efb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801ef80:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801ef84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ef88:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ef8c:	fb04 fa02 	mul.w	sl, r4, r2
 801ef90:	fb08 f805 	mul.w	r8, r8, r5
 801ef94:	f10a 0520 	add.w	r5, sl, #32
 801ef98:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ef9c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801efa0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801efa4:	4442      	add	r2, r8
 801efa6:	0a2d      	lsrs	r5, r5, #8
 801efa8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801efac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801efb0:	432a      	orrs	r2, r5
 801efb2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801efb4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801efb8:	2cff      	cmp	r4, #255	; 0xff
 801efba:	d01a      	beq.n	801eff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801efbc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801efc0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801efc4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801efc8:	fb04 fa05 	mul.w	sl, r4, r5
 801efcc:	fb08 f80e 	mul.w	r8, r8, lr
 801efd0:	f10a 0e20 	add.w	lr, sl, #32
 801efd4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801efd8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801efdc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801efe0:	4445      	add	r5, r8
 801efe2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801efe6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801efea:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801efee:	ea45 050e 	orr.w	r5, r5, lr
 801eff2:	fb1c fe01 	smulbb	lr, ip, r1
 801eff6:	f1cc 0810 	rsb	r8, ip, #16
 801effa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801effe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f002:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f006:	eba8 0801 	sub.w	r8, r8, r1
 801f00a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f00e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f012:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f016:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f01a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f01e:	ea4a 0202 	orr.w	r2, sl, r2
 801f022:	4341      	muls	r1, r0
 801f024:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f028:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f02c:	fb09 1108 	mla	r1, r9, r8, r1
 801f030:	ea4b 0505 	orr.w	r5, fp, r5
 801f034:	fb0c 1102 	mla	r1, ip, r2, r1
 801f038:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f03c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f040:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f044:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f048:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f04c:	ea42 0e0e 	orr.w	lr, r2, lr
 801f050:	fa1f f28e 	uxth.w	r2, lr
 801f054:	2bff      	cmp	r3, #255	; 0xff
 801f056:	f040 80a1 	bne.w	801f19c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801f05a:	803a      	strh	r2, [r7, #0]
 801f05c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f05e:	3702      	adds	r7, #2
 801f060:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801f062:	4413      	add	r3, r2
 801f064:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801f066:	931d      	str	r3, [sp, #116]	; 0x74
 801f068:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f06a:	441a      	add	r2, r3
 801f06c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f06e:	3b01      	subs	r3, #1
 801f070:	921e      	str	r2, [sp, #120]	; 0x78
 801f072:	930f      	str	r3, [sp, #60]	; 0x3c
 801f074:	e6c7      	b.n	801ee06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f076:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f078:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f07a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801f07c:	4433      	add	r3, r6
 801f07e:	931d      	str	r3, [sp, #116]	; 0x74
 801f080:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f082:	441c      	add	r4, r3
 801f084:	9b06      	ldr	r3, [sp, #24]
 801f086:	3b01      	subs	r3, #1
 801f088:	941e      	str	r4, [sp, #120]	; 0x78
 801f08a:	9306      	str	r3, [sp, #24]
 801f08c:	9b07      	ldr	r3, [sp, #28]
 801f08e:	3302      	adds	r3, #2
 801f090:	9307      	str	r3, [sp, #28]
 801f092:	e696      	b.n	801edc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f094:	d028      	beq.n	801f0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f096:	9b06      	ldr	r3, [sp, #24]
 801f098:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f09a:	3b01      	subs	r3, #1
 801f09c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801f09e:	fb00 5003 	mla	r0, r0, r3, r5
 801f0a2:	1400      	asrs	r0, r0, #16
 801f0a4:	f53f aeaa 	bmi.w	801edfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f0a8:	3901      	subs	r1, #1
 801f0aa:	4288      	cmp	r0, r1
 801f0ac:	f6bf aea6 	bge.w	801edfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f0b0:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f0b2:	981e      	ldr	r0, [sp, #120]	; 0x78
 801f0b4:	fb01 0303 	mla	r3, r1, r3, r0
 801f0b8:	141b      	asrs	r3, r3, #16
 801f0ba:	f53f ae9f 	bmi.w	801edfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f0be:	3a01      	subs	r2, #1
 801f0c0:	4293      	cmp	r3, r2
 801f0c2:	f6bf ae9b 	bge.w	801edfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f0c6:	9b06      	ldr	r3, [sp, #24]
 801f0c8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801f0cc:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801f0d0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f0d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f0d4:	2b00      	cmp	r3, #0
 801f0d6:	f300 80b6 	bgt.w	801f246 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801f0da:	9b06      	ldr	r3, [sp, #24]
 801f0dc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f0e0:	9b07      	ldr	r3, [sp, #28]
 801f0e2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f0e6:	9307      	str	r3, [sp, #28]
 801f0e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f0ea:	2b00      	cmp	r3, #0
 801f0ec:	f340 8218 	ble.w	801f520 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801f0f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f0f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f0f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f0fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f0fe:	eef0 6a62 	vmov.f32	s13, s5
 801f102:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f106:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f10a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f10e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801f112:	eef0 6a43 	vmov.f32	s13, s6
 801f116:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f11a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801f11e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f122:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f126:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f12a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f12e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f132:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f136:	ee12 2a90 	vmov	r2, s5
 801f13a:	eef0 2a47 	vmov.f32	s5, s14
 801f13e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f142:	ee13 2a10 	vmov	r2, s6
 801f146:	931f      	str	r3, [sp, #124]	; 0x7c
 801f148:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f14a:	eeb0 3a67 	vmov.f32	s6, s15
 801f14e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f152:	9320      	str	r3, [sp, #128]	; 0x80
 801f154:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f156:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f158:	3b01      	subs	r3, #1
 801f15a:	930e      	str	r3, [sp, #56]	; 0x38
 801f15c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f15e:	bf08      	it	eq
 801f160:	4613      	moveq	r3, r2
 801f162:	9306      	str	r3, [sp, #24]
 801f164:	e61f      	b.n	801eda6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801f166:	fb08 f505 	mul.w	r5, r8, r5
 801f16a:	fb09 5303 	mla	r3, r9, r3, r5
 801f16e:	e69f      	b.n	801eeb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801f170:	4681      	mov	r9, r0
 801f172:	e6c6      	b.n	801ef02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801f174:	f1c1 0210 	rsb	r2, r1, #16
 801f178:	4341      	muls	r1, r0
 801f17a:	fb09 1902 	mla	r9, r9, r2, r1
 801f17e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f182:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801f186:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f18a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f18e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f192:	ea42 0909 	orr.w	r9, r2, r9
 801f196:	fa1f f289 	uxth.w	r2, r9
 801f19a:	e75b      	b.n	801f054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801f19c:	f8b7 c000 	ldrh.w	ip, [r7]
 801f1a0:	43db      	mvns	r3, r3
 801f1a2:	ea4f 202c 	mov.w	r0, ip, asr #8
 801f1a6:	fa5f fe83 	uxtb.w	lr, r3
 801f1aa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f1ae:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f1b2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801f1b6:	fb00 f00e 	mul.w	r0, r0, lr
 801f1ba:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f1be:	b2db      	uxtb	r3, r3
 801f1c0:	1c41      	adds	r1, r0, #1
 801f1c2:	fb05 f50e 	mul.w	r5, r5, lr
 801f1c6:	fb03 f30e 	mul.w	r3, r3, lr
 801f1ca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f1ce:	1211      	asrs	r1, r2, #8
 801f1d0:	f021 0107 	bic.w	r1, r1, #7
 801f1d4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f1d8:	48d3      	ldr	r0, [pc, #844]	; (801f528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801f1da:	b2c9      	uxtb	r1, r1
 801f1dc:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801f1e0:	1c69      	adds	r1, r5, #1
 801f1e2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801f1e6:	10d1      	asrs	r1, r2, #3
 801f1e8:	00d2      	lsls	r2, r2, #3
 801f1ea:	f021 0103 	bic.w	r1, r1, #3
 801f1ee:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801f1f2:	00c9      	lsls	r1, r1, #3
 801f1f4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f1f8:	4301      	orrs	r1, r0
 801f1fa:	1c58      	adds	r0, r3, #1
 801f1fc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801f200:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f204:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f208:	430a      	orrs	r2, r1
 801f20a:	e726      	b.n	801f05a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801f20c:	f115 0e01 	adds.w	lr, r5, #1
 801f210:	f53f af24 	bmi.w	801f05c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801f214:	4572      	cmp	r2, lr
 801f216:	f6ff af21 	blt.w	801f05c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801f21a:	f110 0e01 	adds.w	lr, r0, #1
 801f21e:	f53f af1d 	bmi.w	801f05c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801f222:	4573      	cmp	r3, lr
 801f224:	f6ff af1a 	blt.w	801f05c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801f228:	b21b      	sxth	r3, r3
 801f22a:	b212      	sxth	r2, r2
 801f22c:	9301      	str	r3, [sp, #4]
 801f22e:	9200      	str	r2, [sp, #0]
 801f230:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801f234:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801f238:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801f23c:	4639      	mov	r1, r7
 801f23e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f240:	f7ff fc22 	bl	801ea88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f244:	e70a      	b.n	801f05c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801f246:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f248:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f24c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f24e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801f252:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f254:	fa1f fc82 	uxth.w	ip, r2
 801f258:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f25c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f25e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801f262:	141f      	asrs	r7, r3, #16
 801f264:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f266:	141b      	asrs	r3, r3, #16
 801f268:	fb01 3707 	mla	r7, r1, r7, r3
 801f26c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f26e:	eb03 0a07 	add.w	sl, r3, r7
 801f272:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f276:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801f27a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f27e:	b29b      	uxth	r3, r3
 801f280:	2d00      	cmp	r5, #0
 801f282:	f000 80fe 	beq.w	801f482 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801f286:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f28a:	eb0a 0b01 	add.w	fp, sl, r1
 801f28e:	fa1f fa85 	uxth.w	sl, r5
 801f292:	940c      	str	r4, [sp, #48]	; 0x30
 801f294:	fb0a fc0c 	mul.w	ip, sl, ip
 801f298:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f29c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f2a0:	eba0 000c 	sub.w	r0, r0, ip
 801f2a4:	940d      	str	r4, [sp, #52]	; 0x34
 801f2a6:	fa1f fa8a 	uxth.w	sl, sl
 801f2aa:	b280      	uxth	r0, r0
 801f2ac:	eba3 030a 	sub.w	r3, r3, sl
 801f2b0:	fb08 f000 	mul.w	r0, r8, r0
 801f2b4:	b29b      	uxth	r3, r3
 801f2b6:	fb09 0303 	mla	r3, r9, r3, r0
 801f2ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 801f2bc:	fb0a 3300 	mla	r3, sl, r0, r3
 801f2c0:	fb0c 3304 	mla	r3, ip, r4, r3
 801f2c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f2c8:	2b00      	cmp	r3, #0
 801f2ca:	f000 80cc 	beq.w	801f466 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801f2ce:	9808      	ldr	r0, [sp, #32]
 801f2d0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f2d4:	9c08      	ldr	r4, [sp, #32]
 801f2d6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f2da:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f2de:	f000 80d5 	beq.w	801f48c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801f2e2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f2e6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f2ea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f2ee:	fb0a fc0c 	mul.w	ip, sl, ip
 801f2f2:	fb09 f707 	mul.w	r7, r9, r7
 801f2f6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f2fa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f2fe:	f107 0b20 	add.w	fp, r7, #32
 801f302:	44cc      	add	ip, r9
 801f304:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f308:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f30c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f310:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f314:	ea4c 0909 	orr.w	r9, ip, r9
 801f318:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f31c:	8847      	ldrh	r7, [r0, #2]
 801f31e:	d019      	beq.n	801f354 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801f320:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f324:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f328:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f32c:	fb0a fc0c 	mul.w	ip, sl, ip
 801f330:	fb08 f807 	mul.w	r8, r8, r7
 801f334:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f338:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f33c:	f108 0b20 	add.w	fp, r8, #32
 801f340:	44bc      	add	ip, r7
 801f342:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f346:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f34a:	0a3f      	lsrs	r7, r7, #8
 801f34c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f350:	ea4c 0707 	orr.w	r7, ip, r7
 801f354:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f358:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f35c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f360:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f364:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f368:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f36c:	ea4c 0909 	orr.w	r9, ip, r9
 801f370:	ea4a 0707 	orr.w	r7, sl, r7
 801f374:	2d00      	cmp	r5, #0
 801f376:	f000 808b 	beq.w	801f490 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801f37a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801f37e:	3901      	subs	r1, #1
 801f380:	0049      	lsls	r1, r1, #1
 801f382:	3102      	adds	r1, #2
 801f384:	eb00 0c01 	add.w	ip, r0, r1
 801f388:	5a41      	ldrh	r1, [r0, r1]
 801f38a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801f38c:	28ff      	cmp	r0, #255	; 0xff
 801f38e:	d019      	beq.n	801f3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801f390:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801f394:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f396:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f39a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f39e:	fb04 fa01 	mul.w	sl, r4, r1
 801f3a2:	fb08 f800 	mul.w	r8, r8, r0
 801f3a6:	f10a 0020 	add.w	r0, sl, #32
 801f3aa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801f3ae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f3b2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f3b6:	4441      	add	r1, r8
 801f3b8:	0a00      	lsrs	r0, r0, #8
 801f3ba:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801f3be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f3c2:	4301      	orrs	r1, r0
 801f3c4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f3c6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801f3ca:	2cff      	cmp	r4, #255	; 0xff
 801f3cc:	d01a      	beq.n	801f404 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801f3ce:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801f3d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f3d6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f3da:	fb04 fa00 	mul.w	sl, r4, r0
 801f3de:	fb08 f80c 	mul.w	r8, r8, ip
 801f3e2:	f10a 0c20 	add.w	ip, sl, #32
 801f3e6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801f3ea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f3ee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801f3f2:	4440      	add	r0, r8
 801f3f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3f8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801f3fc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f400:	ea40 000c 	orr.w	r0, r0, ip
 801f404:	fb15 fc02 	smulbb	ip, r5, r2
 801f408:	f1c5 0810 	rsb	r8, r5, #16
 801f40c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f410:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f414:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f418:	eba8 0802 	sub.w	r8, r8, r2
 801f41c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f420:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f424:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801f428:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f42c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801f430:	ea4a 0101 	orr.w	r1, sl, r1
 801f434:	437a      	muls	r2, r7
 801f436:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801f43a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f43e:	fb09 2208 	mla	r2, r9, r8, r2
 801f442:	ea4b 0000 	orr.w	r0, fp, r0
 801f446:	fb05 2201 	mla	r2, r5, r1, r2
 801f44a:	fb0c 2200 	mla	r2, ip, r0, r2
 801f44e:	0d57      	lsrs	r7, r2, #21
 801f450:	0952      	lsrs	r2, r2, #5
 801f452:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f456:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f45a:	433a      	orrs	r2, r7
 801f45c:	2bff      	cmp	r3, #255	; 0xff
 801f45e:	b292      	uxth	r2, r2
 801f460:	d127      	bne.n	801f4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801f462:	f8ae 2000 	strh.w	r2, [lr]
 801f466:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f468:	f10e 0e02 	add.w	lr, lr, #2
 801f46c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801f46e:	4413      	add	r3, r2
 801f470:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801f472:	931d      	str	r3, [sp, #116]	; 0x74
 801f474:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f476:	441a      	add	r2, r3
 801f478:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f47a:	3b01      	subs	r3, #1
 801f47c:	921e      	str	r2, [sp, #120]	; 0x78
 801f47e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f480:	e627      	b.n	801f0d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f482:	fb08 f000 	mul.w	r0, r8, r0
 801f486:	fb09 0303 	mla	r3, r9, r3, r0
 801f48a:	e71b      	b.n	801f2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801f48c:	46b9      	mov	r9, r7
 801f48e:	e743      	b.n	801f318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801f490:	f1c2 0110 	rsb	r1, r2, #16
 801f494:	437a      	muls	r2, r7
 801f496:	fb09 2901 	mla	r9, r9, r1, r2
 801f49a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f49e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801f4a2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801f4a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f4aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f4ae:	4302      	orrs	r2, r0
 801f4b0:	e7d4      	b.n	801f45c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801f4b2:	f8be 7000 	ldrh.w	r7, [lr]
 801f4b6:	43db      	mvns	r3, r3
 801f4b8:	4c1b      	ldr	r4, [pc, #108]	; (801f528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801f4ba:	1238      	asrs	r0, r7, #8
 801f4bc:	fa5f fc83 	uxtb.w	ip, r3
 801f4c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f4c4:	10fd      	asrs	r5, r7, #3
 801f4c6:	00fb      	lsls	r3, r7, #3
 801f4c8:	fb00 f00c 	mul.w	r0, r0, ip
 801f4cc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f4d0:	b2db      	uxtb	r3, r3
 801f4d2:	fb05 f10c 	mul.w	r1, r5, ip
 801f4d6:	1c45      	adds	r5, r0, #1
 801f4d8:	fb03 f30c 	mul.w	r3, r3, ip
 801f4dc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801f4e0:	1215      	asrs	r5, r2, #8
 801f4e2:	f025 0507 	bic.w	r5, r5, #7
 801f4e6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801f4ea:	1c4d      	adds	r5, r1, #1
 801f4ec:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801f4f0:	10d1      	asrs	r1, r2, #3
 801f4f2:	b2c0      	uxtb	r0, r0
 801f4f4:	f021 0103 	bic.w	r1, r1, #3
 801f4f8:	00d2      	lsls	r2, r2, #3
 801f4fa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801f4fe:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801f502:	00c9      	lsls	r1, r1, #3
 801f504:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f508:	4308      	orrs	r0, r1
 801f50a:	1c59      	adds	r1, r3, #1
 801f50c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f510:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f514:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801f518:	4318      	orrs	r0, r3
 801f51a:	f8ae 0000 	strh.w	r0, [lr]
 801f51e:	e7a2      	b.n	801f466 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801f520:	b013      	add	sp, #76	; 0x4c
 801f522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f526:	bf00      	nop
 801f528:	fffff800 	.word	0xfffff800

0801f52c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801f52c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f530:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801f534:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801f538:	fb05 4c03 	mla	ip, r5, r3, r4
 801f53c:	2d00      	cmp	r5, #0
 801f53e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801f542:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f546:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801f54a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801f54e:	8808      	ldrh	r0, [r1, #0]
 801f550:	f2c0 80a7 	blt.w	801f6a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801f554:	45aa      	cmp	sl, r5
 801f556:	f340 80a4 	ble.w	801f6a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801f55a:	2c00      	cmp	r4, #0
 801f55c:	f2c0 809f 	blt.w	801f69e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801f560:	42a3      	cmp	r3, r4
 801f562:	f340 809c 	ble.w	801f69e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801f566:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801f56a:	1c62      	adds	r2, r4, #1
 801f56c:	f100 809c 	bmi.w	801f6a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f570:	4293      	cmp	r3, r2
 801f572:	f340 8099 	ble.w	801f6a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f576:	f1b9 0f00 	cmp.w	r9, #0
 801f57a:	f000 8095 	beq.w	801f6a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f57e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801f582:	3501      	adds	r5, #1
 801f584:	f100 8094 	bmi.w	801f6b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f588:	45aa      	cmp	sl, r5
 801f58a:	f340 8091 	ble.w	801f6b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f58e:	2f00      	cmp	r7, #0
 801f590:	f000 808e 	beq.w	801f6b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f594:	2c00      	cmp	r4, #0
 801f596:	f2c0 8089 	blt.w	801f6ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801f59a:	42a3      	cmp	r3, r4
 801f59c:	f340 8086 	ble.w	801f6ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801f5a0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801f5a4:	3401      	adds	r4, #1
 801f5a6:	f100 8086 	bmi.w	801f6b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f5aa:	42a3      	cmp	r3, r4
 801f5ac:	f340 8083 	ble.w	801f6b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f5b0:	f1b9 0f00 	cmp.w	r9, #0
 801f5b4:	d07f      	beq.n	801f6b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f5b6:	3301      	adds	r3, #1
 801f5b8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801f5bc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f5c0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f5c4:	fb19 fe07 	smulbb	lr, r9, r7
 801f5c8:	f1c7 0210 	rsb	r2, r7, #16
 801f5cc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f5d0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f5d4:	eba2 0209 	sub.w	r2, r2, r9
 801f5d8:	ea44 0808 	orr.w	r8, r4, r8
 801f5dc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f5e0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f5e4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f5e8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f5ec:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f5f0:	ea44 0c0c 	orr.w	ip, r4, ip
 801f5f4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f5f8:	fb04 f40c 	mul.w	r4, r4, ip
 801f5fc:	fb02 4808 	mla	r8, r2, r8, r4
 801f600:	041a      	lsls	r2, r3, #16
 801f602:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f606:	b2b4      	uxth	r4, r6
 801f608:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f60c:	43f6      	mvns	r6, r6
 801f60e:	4313      	orrs	r3, r2
 801f610:	042a      	lsls	r2, r5, #16
 801f612:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f616:	b2f6      	uxtb	r6, r6
 801f618:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f61c:	fb0e 8303 	mla	r3, lr, r3, r8
 801f620:	432a      	orrs	r2, r5
 801f622:	fb07 3202 	mla	r2, r7, r2, r3
 801f626:	10c7      	asrs	r7, r0, #3
 801f628:	0d53      	lsrs	r3, r2, #21
 801f62a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f62e:	0952      	lsrs	r2, r2, #5
 801f630:	fb17 f706 	smulbb	r7, r7, r6
 801f634:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f638:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f63c:	431a      	orrs	r2, r3
 801f63e:	b293      	uxth	r3, r2
 801f640:	1202      	asrs	r2, r0, #8
 801f642:	121d      	asrs	r5, r3, #8
 801f644:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f648:	00c0      	lsls	r0, r0, #3
 801f64a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f64e:	fb12 f206 	smulbb	r2, r2, r6
 801f652:	b2c0      	uxtb	r0, r0
 801f654:	fb05 2504 	mla	r5, r5, r4, r2
 801f658:	10da      	asrs	r2, r3, #3
 801f65a:	fb10 f006 	smulbb	r0, r0, r6
 801f65e:	00db      	lsls	r3, r3, #3
 801f660:	b2ad      	uxth	r5, r5
 801f662:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f666:	b2db      	uxtb	r3, r3
 801f668:	fb02 7204 	mla	r2, r2, r4, r7
 801f66c:	fb03 0004 	mla	r0, r3, r4, r0
 801f670:	1c6b      	adds	r3, r5, #1
 801f672:	b292      	uxth	r2, r2
 801f674:	b280      	uxth	r0, r0
 801f676:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f67a:	1c43      	adds	r3, r0, #1
 801f67c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f680:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f684:	1c50      	adds	r0, r2, #1
 801f686:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f68a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f68e:	0952      	lsrs	r2, r2, #5
 801f690:	432b      	orrs	r3, r5
 801f692:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f696:	4313      	orrs	r3, r2
 801f698:	800b      	strh	r3, [r1, #0]
 801f69a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f69e:	4680      	mov	r8, r0
 801f6a0:	e763      	b.n	801f56a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801f6a2:	4684      	mov	ip, r0
 801f6a4:	4680      	mov	r8, r0
 801f6a6:	e76c      	b.n	801f582 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801f6a8:	4684      	mov	ip, r0
 801f6aa:	e76a      	b.n	801f582 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801f6ac:	4605      	mov	r5, r0
 801f6ae:	e779      	b.n	801f5a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801f6b0:	4603      	mov	r3, r0
 801f6b2:	4605      	mov	r5, r0
 801f6b4:	e782      	b.n	801f5bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801f6b6:	4603      	mov	r3, r0
 801f6b8:	e780      	b.n	801f5bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801f6ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f6ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6be:	b093      	sub	sp, #76	; 0x4c
 801f6c0:	461d      	mov	r5, r3
 801f6c2:	9210      	str	r2, [sp, #64]	; 0x40
 801f6c4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f6c6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801f6ca:	910a      	str	r1, [sp, #40]	; 0x28
 801f6cc:	920b      	str	r2, [sp, #44]	; 0x2c
 801f6ce:	6859      	ldr	r1, [r3, #4]
 801f6d0:	681b      	ldr	r3, [r3, #0]
 801f6d2:	9011      	str	r0, [sp, #68]	; 0x44
 801f6d4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801f6d8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f6dc:	fb01 2707 	mla	r7, r1, r7, r2
 801f6e0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801f6e4:	9307      	str	r3, [sp, #28]
 801f6e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6e8:	681b      	ldr	r3, [r3, #0]
 801f6ea:	9309      	str	r3, [sp, #36]	; 0x24
 801f6ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f6ee:	43db      	mvns	r3, r3
 801f6f0:	b2db      	uxtb	r3, r3
 801f6f2:	9308      	str	r3, [sp, #32]
 801f6f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f6f6:	2b00      	cmp	r3, #0
 801f6f8:	dc03      	bgt.n	801f702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f6fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f6fc:	2b00      	cmp	r3, #0
 801f6fe:	f340 8205 	ble.w	801fb0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f702:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f704:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f708:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f70c:	1e48      	subs	r0, r1, #1
 801f70e:	f102 3cff 	add.w	ip, r2, #4294967295
 801f712:	2d00      	cmp	r5, #0
 801f714:	f340 80da 	ble.w	801f8cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801f718:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f71c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f720:	d406      	bmi.n	801f730 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f722:	4586      	cmp	lr, r0
 801f724:	da04      	bge.n	801f730 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f726:	2b00      	cmp	r3, #0
 801f728:	db02      	blt.n	801f730 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f72a:	4563      	cmp	r3, ip
 801f72c:	f2c0 80cf 	blt.w	801f8ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f730:	f11e 0e01 	adds.w	lr, lr, #1
 801f734:	f100 80c1 	bmi.w	801f8ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f738:	4571      	cmp	r1, lr
 801f73a:	f2c0 80be 	blt.w	801f8ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f73e:	3301      	adds	r3, #1
 801f740:	f100 80bb 	bmi.w	801f8ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f744:	429a      	cmp	r2, r3
 801f746:	f2c0 80b8 	blt.w	801f8ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f74a:	46a9      	mov	r9, r5
 801f74c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801f750:	f1b9 0f00 	cmp.w	r9, #0
 801f754:	f340 80d8 	ble.w	801f908 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801f758:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f75a:	1421      	asrs	r1, r4, #16
 801f75c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f760:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f764:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f768:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801f76c:	f100 8112 	bmi.w	801f994 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f770:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f774:	4551      	cmp	r1, sl
 801f776:	f280 810d 	bge.w	801f994 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f77a:	2800      	cmp	r0, #0
 801f77c:	f2c0 810a 	blt.w	801f994 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f780:	f103 3aff 	add.w	sl, r3, #4294967295
 801f784:	4550      	cmp	r0, sl
 801f786:	f280 8105 	bge.w	801f994 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801f78a:	fa0f f38e 	sxth.w	r3, lr
 801f78e:	fb00 1103 	mla	r1, r0, r3, r1
 801f792:	9809      	ldr	r0, [sp, #36]	; 0x24
 801f794:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801f798:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801f79c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801f7a0:	f1bc 0f00 	cmp.w	ip, #0
 801f7a4:	d007      	beq.n	801f7b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801f7a6:	005b      	lsls	r3, r3, #1
 801f7a8:	eb0a 0003 	add.w	r0, sl, r3
 801f7ac:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801f7b0:	930c      	str	r3, [sp, #48]	; 0x30
 801f7b2:	8843      	ldrh	r3, [r0, #2]
 801f7b4:	930d      	str	r3, [sp, #52]	; 0x34
 801f7b6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801f7ba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f7be:	fb12 f30c 	smulbb	r3, r2, ip
 801f7c2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f7c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f7ca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f7ce:	10db      	asrs	r3, r3, #3
 801f7d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f7d4:	ea40 000e 	orr.w	r0, r0, lr
 801f7d8:	f1cc 0e10 	rsb	lr, ip, #16
 801f7dc:	ea4a 0101 	orr.w	r1, sl, r1
 801f7e0:	9f08      	ldr	r7, [sp, #32]
 801f7e2:	ebae 0e02 	sub.w	lr, lr, r2
 801f7e6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f7ea:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801f7ee:	4351      	muls	r1, r2
 801f7f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801f7f2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801f7f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f7f8:	0410      	lsls	r0, r2, #16
 801f7fa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f7fe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f802:	4310      	orrs	r0, r2
 801f804:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f806:	0412      	lsls	r2, r2, #16
 801f808:	fb03 e000 	mla	r0, r3, r0, lr
 801f80c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801f810:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f814:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f818:	ea42 020e 	orr.w	r2, r2, lr
 801f81c:	fb03 0302 	mla	r3, r3, r2, r0
 801f820:	f8b8 0000 	ldrh.w	r0, [r8]
 801f824:	0d5a      	lsrs	r2, r3, #21
 801f826:	095b      	lsrs	r3, r3, #5
 801f828:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f82c:	1201      	asrs	r1, r0, #8
 801f82e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f832:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f836:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f83a:	00c0      	lsls	r0, r0, #3
 801f83c:	4313      	orrs	r3, r2
 801f83e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801f842:	fb11 f107 	smulbb	r1, r1, r7
 801f846:	b2c0      	uxtb	r0, r0
 801f848:	b29b      	uxth	r3, r3
 801f84a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f84e:	fb10 f007 	smulbb	r0, r0, r7
 801f852:	fb1e fe07 	smulbb	lr, lr, r7
 801f856:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f85a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f85e:	fb0c 1c02 	mla	ip, ip, r2, r1
 801f862:	10d9      	asrs	r1, r3, #3
 801f864:	00db      	lsls	r3, r3, #3
 801f866:	fa1f fc8c 	uxth.w	ip, ip
 801f86a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f86e:	b2db      	uxtb	r3, r3
 801f870:	fb01 e102 	mla	r1, r1, r2, lr
 801f874:	fb03 0302 	mla	r3, r3, r2, r0
 801f878:	b289      	uxth	r1, r1
 801f87a:	b29a      	uxth	r2, r3
 801f87c:	f10c 0301 	add.w	r3, ip, #1
 801f880:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f884:	1c53      	adds	r3, r2, #1
 801f886:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f88a:	1c4a      	adds	r2, r1, #1
 801f88c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801f890:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f894:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f898:	0949      	lsrs	r1, r1, #5
 801f89a:	ea43 030c 	orr.w	r3, r3, ip
 801f89e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f8a2:	430b      	orrs	r3, r1
 801f8a4:	f8a8 3000 	strh.w	r3, [r8]
 801f8a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f8aa:	f108 0802 	add.w	r8, r8, #2
 801f8ae:	f109 39ff 	add.w	r9, r9, #4294967295
 801f8b2:	441c      	add	r4, r3
 801f8b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8b6:	441e      	add	r6, r3
 801f8b8:	e74a      	b.n	801f750 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f8ba:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f8bc:	3d01      	subs	r5, #1
 801f8be:	441c      	add	r4, r3
 801f8c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8c2:	441e      	add	r6, r3
 801f8c4:	9b07      	ldr	r3, [sp, #28]
 801f8c6:	3302      	adds	r3, #2
 801f8c8:	9307      	str	r3, [sp, #28]
 801f8ca:	e722      	b.n	801f712 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f8cc:	d022      	beq.n	801f914 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801f8ce:	1e6b      	subs	r3, r5, #1
 801f8d0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f8d2:	fb00 4003 	mla	r0, r0, r3, r4
 801f8d6:	1400      	asrs	r0, r0, #16
 801f8d8:	f53f af37 	bmi.w	801f74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f8dc:	3901      	subs	r1, #1
 801f8de:	4288      	cmp	r0, r1
 801f8e0:	f6bf af33 	bge.w	801f74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f8e4:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f8e6:	fb01 6303 	mla	r3, r1, r3, r6
 801f8ea:	141b      	asrs	r3, r3, #16
 801f8ec:	f53f af2d 	bmi.w	801f74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f8f0:	3a01      	subs	r2, #1
 801f8f2:	4293      	cmp	r3, r2
 801f8f4:	f6bf af29 	bge.w	801f74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f8f8:	46a8      	mov	r8, r5
 801f8fa:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801f8fe:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801f902:	f1b8 0f00 	cmp.w	r8, #0
 801f906:	dc60      	bgt.n	801f9ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801f908:	9b07      	ldr	r3, [sp, #28]
 801f90a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f90e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f912:	9307      	str	r3, [sp, #28]
 801f914:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f916:	2b00      	cmp	r3, #0
 801f918:	f340 80f8 	ble.w	801fb0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f91c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f920:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f922:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f926:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f92a:	eef0 6a62 	vmov.f32	s13, s5
 801f92e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f932:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f936:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f93a:	ee16 4a90 	vmov	r4, s13
 801f93e:	eef0 6a43 	vmov.f32	s13, s6
 801f942:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f946:	ee16 6a90 	vmov	r6, s13
 801f94a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f94e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f952:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f956:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f95a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f95e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f962:	ee12 2a90 	vmov	r2, s5
 801f966:	eef0 2a47 	vmov.f32	s5, s14
 801f96a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f96e:	ee13 2a10 	vmov	r2, s6
 801f972:	931f      	str	r3, [sp, #124]	; 0x7c
 801f974:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f976:	eeb0 3a67 	vmov.f32	s6, s15
 801f97a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f97e:	9320      	str	r3, [sp, #128]	; 0x80
 801f980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f982:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f984:	3b01      	subs	r3, #1
 801f986:	930a      	str	r3, [sp, #40]	; 0x28
 801f988:	bf08      	it	eq
 801f98a:	4615      	moveq	r5, r2
 801f98c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f98e:	bf18      	it	ne
 801f990:	461d      	movne	r5, r3
 801f992:	e6af      	b.n	801f6f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f994:	f111 0a01 	adds.w	sl, r1, #1
 801f998:	d486      	bmi.n	801f8a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f99a:	45d6      	cmp	lr, sl
 801f99c:	db84      	blt.n	801f8a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f99e:	f110 0a01 	adds.w	sl, r0, #1
 801f9a2:	d481      	bmi.n	801f8a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f9a4:	4553      	cmp	r3, sl
 801f9a6:	f6ff af7f 	blt.w	801f8a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f9aa:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801f9ac:	b21b      	sxth	r3, r3
 801f9ae:	9101      	str	r1, [sp, #4]
 801f9b0:	4641      	mov	r1, r8
 801f9b2:	9300      	str	r3, [sp, #0]
 801f9b4:	fa0f f38e 	sxth.w	r3, lr
 801f9b8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801f9bc:	e9cd c704 	strd	ip, r7, [sp, #16]
 801f9c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f9c2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f9c4:	f7ff fdb2 	bl	801f52c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801f9c8:	e76e      	b.n	801f8a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f9ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9cc:	1430      	asrs	r0, r6, #16
 801f9ce:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801f9d0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801f9d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f9d8:	1423      	asrs	r3, r4, #16
 801f9da:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f9de:	fb01 3000 	mla	r0, r1, r0, r3
 801f9e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9e4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801f9e8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801f9ec:	8858      	ldrh	r0, [r3, #2]
 801f9ee:	f1be 0f00 	cmp.w	lr, #0
 801f9f2:	d00b      	beq.n	801fa0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f9f4:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801f9f8:	3901      	subs	r1, #1
 801f9fa:	0049      	lsls	r1, r1, #1
 801f9fc:	3102      	adds	r1, #2
 801f9fe:	eb03 0b01 	add.w	fp, r3, r1
 801fa02:	5a5b      	ldrh	r3, [r3, r1]
 801fa04:	930e      	str	r3, [sp, #56]	; 0x38
 801fa06:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801fa0a:	930f      	str	r3, [sp, #60]	; 0x3c
 801fa0c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801fa10:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fa14:	fb12 f30e 	smulbb	r3, r2, lr
 801fa18:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801fa1c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801fa20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fa24:	10db      	asrs	r3, r3, #3
 801fa26:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fa2a:	ea41 010c 	orr.w	r1, r1, ip
 801fa2e:	f1ce 0c10 	rsb	ip, lr, #16
 801fa32:	ea4b 0000 	orr.w	r0, fp, r0
 801fa36:	9f08      	ldr	r7, [sp, #32]
 801fa38:	ebac 0c02 	sub.w	ip, ip, r2
 801fa3c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fa40:	f108 38ff 	add.w	r8, r8, #4294967295
 801fa44:	4350      	muls	r0, r2
 801fa46:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801fa4a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fa4c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801fa50:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fa52:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801fa56:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801fa5a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fa5c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fa60:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fa64:	0412      	lsls	r2, r2, #16
 801fa66:	ea4b 0101 	orr.w	r1, fp, r1
 801fa6a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fa6e:	fb03 c101 	mla	r1, r3, r1, ip
 801fa72:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801fa76:	4302      	orrs	r2, r0
 801fa78:	fb03 1202 	mla	r2, r3, r2, r1
 801fa7c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801fa80:	0952      	lsrs	r2, r2, #5
 801fa82:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801fa86:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801fa8a:	f8b9 2000 	ldrh.w	r2, [r9]
 801fa8e:	ea4b 0303 	orr.w	r3, fp, r3
 801fa92:	1211      	asrs	r1, r2, #8
 801fa94:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801fa98:	b29b      	uxth	r3, r3
 801fa9a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fa9e:	00d2      	lsls	r2, r2, #3
 801faa0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801faa4:	fb11 f107 	smulbb	r1, r1, r7
 801faa8:	1218      	asrs	r0, r3, #8
 801faaa:	fb1c fc07 	smulbb	ip, ip, r7
 801faae:	b2d2      	uxtb	r2, r2
 801fab0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fab4:	fb12 f207 	smulbb	r2, r2, r7
 801fab8:	fb00 100a 	mla	r0, r0, sl, r1
 801fabc:	10d9      	asrs	r1, r3, #3
 801fabe:	00db      	lsls	r3, r3, #3
 801fac0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fac4:	b280      	uxth	r0, r0
 801fac6:	b2db      	uxtb	r3, r3
 801fac8:	fb01 c10a 	mla	r1, r1, sl, ip
 801facc:	fb03 230a 	mla	r3, r3, sl, r2
 801fad0:	1c42      	adds	r2, r0, #1
 801fad2:	b289      	uxth	r1, r1
 801fad4:	b29b      	uxth	r3, r3
 801fad6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fada:	f101 0c01 	add.w	ip, r1, #1
 801fade:	1c5a      	adds	r2, r3, #1
 801fae0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801fae4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fae8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801faec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801faee:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801faf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801faf6:	441c      	add	r4, r3
 801faf8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801fafc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fafe:	4310      	orrs	r0, r2
 801fb00:	441e      	add	r6, r3
 801fb02:	ea40 000c 	orr.w	r0, r0, ip
 801fb06:	f829 0b02 	strh.w	r0, [r9], #2
 801fb0a:	e6fa      	b.n	801f902 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801fb0c:	b013      	add	sp, #76	; 0x4c
 801fb0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fb12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801fb12:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801fb16:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801fb1a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801fb1e:	fb0e 4703 	mla	r7, lr, r3, r4
 801fb22:	f1be 0f00 	cmp.w	lr, #0
 801fb26:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801fb2a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801fb2e:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801fb32:	8808      	ldrh	r0, [r1, #0]
 801fb34:	db60      	blt.n	801fbf8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801fb36:	45f1      	cmp	r9, lr
 801fb38:	dd5e      	ble.n	801fbf8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801fb3a:	2c00      	cmp	r4, #0
 801fb3c:	db5a      	blt.n	801fbf4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801fb3e:	42a3      	cmp	r3, r4
 801fb40:	dd58      	ble.n	801fbf4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801fb42:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801fb46:	1c62      	adds	r2, r4, #1
 801fb48:	d459      	bmi.n	801fbfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fb4a:	4293      	cmp	r3, r2
 801fb4c:	dd57      	ble.n	801fbfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fb4e:	2d00      	cmp	r5, #0
 801fb50:	d055      	beq.n	801fbfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fb52:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801fb56:	f11e 0e01 	adds.w	lr, lr, #1
 801fb5a:	d454      	bmi.n	801fc06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fb5c:	45f1      	cmp	r9, lr
 801fb5e:	dd52      	ble.n	801fc06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fb60:	2e00      	cmp	r6, #0
 801fb62:	d050      	beq.n	801fc06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fb64:	2c00      	cmp	r4, #0
 801fb66:	db4c      	blt.n	801fc02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801fb68:	42a3      	cmp	r3, r4
 801fb6a:	dd4a      	ble.n	801fc02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801fb6c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801fb70:	3401      	adds	r4, #1
 801fb72:	d405      	bmi.n	801fb80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fb74:	42a3      	cmp	r3, r4
 801fb76:	dd03      	ble.n	801fb80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fb78:	b115      	cbz	r5, 801fb80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fb7a:	3301      	adds	r3, #1
 801fb7c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801fb80:	fb15 f406 	smulbb	r4, r5, r6
 801fb84:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fb88:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fb8c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fb90:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fb94:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fb98:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801fb9c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fba0:	ea43 0c0c 	orr.w	ip, r3, ip
 801fba4:	f1c6 0310 	rsb	r3, r6, #16
 801fba8:	ea4e 0707 	orr.w	r7, lr, r7
 801fbac:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801fbb0:	1b5b      	subs	r3, r3, r5
 801fbb2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801fbb6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801fbba:	437d      	muls	r5, r7
 801fbbc:	fb03 5c0c 	mla	ip, r3, ip, r5
 801fbc0:	0403      	lsls	r3, r0, #16
 801fbc2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fbc6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fbca:	4318      	orrs	r0, r3
 801fbcc:	0413      	lsls	r3, r2, #16
 801fbce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fbd2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fbd6:	fb04 c000 	mla	r0, r4, r0, ip
 801fbda:	4313      	orrs	r3, r2
 801fbdc:	fb06 0003 	mla	r0, r6, r3, r0
 801fbe0:	0d43      	lsrs	r3, r0, #21
 801fbe2:	0940      	lsrs	r0, r0, #5
 801fbe4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fbe8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fbec:	4318      	orrs	r0, r3
 801fbee:	8008      	strh	r0, [r1, #0]
 801fbf0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801fbf4:	4684      	mov	ip, r0
 801fbf6:	e7a6      	b.n	801fb46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801fbf8:	4607      	mov	r7, r0
 801fbfa:	4684      	mov	ip, r0
 801fbfc:	e7ab      	b.n	801fb56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801fbfe:	4607      	mov	r7, r0
 801fc00:	e7a9      	b.n	801fb56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801fc02:	4602      	mov	r2, r0
 801fc04:	e7b4      	b.n	801fb70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801fc06:	4602      	mov	r2, r0
 801fc08:	e7ba      	b.n	801fb80 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801fc0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc0e:	b08f      	sub	sp, #60	; 0x3c
 801fc10:	461d      	mov	r5, r3
 801fc12:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801fc14:	9107      	str	r1, [sp, #28]
 801fc16:	920c      	str	r2, [sp, #48]	; 0x30
 801fc18:	6859      	ldr	r1, [r3, #4]
 801fc1a:	681b      	ldr	r3, [r3, #0]
 801fc1c:	900d      	str	r0, [sp, #52]	; 0x34
 801fc1e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801fc22:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801fc26:	fb01 2707 	mla	r7, r1, r7, r2
 801fc2a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801fc2e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fc30:	f8d3 8000 	ldr.w	r8, [r3]
 801fc34:	9b07      	ldr	r3, [sp, #28]
 801fc36:	2b00      	cmp	r3, #0
 801fc38:	dc03      	bgt.n	801fc42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801fc3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fc3c:	2b00      	cmp	r3, #0
 801fc3e:	f340 8182 	ble.w	801ff46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801fc42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fc44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc48:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fc4c:	1e48      	subs	r0, r1, #1
 801fc4e:	f102 3cff 	add.w	ip, r2, #4294967295
 801fc52:	2d00      	cmp	r5, #0
 801fc54:	f340 809b 	ble.w	801fd8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801fc58:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fc5c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fc60:	d406      	bmi.n	801fc70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fc62:	4586      	cmp	lr, r0
 801fc64:	da04      	bge.n	801fc70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fc66:	2b00      	cmp	r3, #0
 801fc68:	db02      	blt.n	801fc70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fc6a:	4563      	cmp	r3, ip
 801fc6c:	f2c0 8090 	blt.w	801fd90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801fc70:	f11e 0e01 	adds.w	lr, lr, #1
 801fc74:	f100 8084 	bmi.w	801fd80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fc78:	4571      	cmp	r1, lr
 801fc7a:	f2c0 8081 	blt.w	801fd80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fc7e:	3301      	adds	r3, #1
 801fc80:	d47e      	bmi.n	801fd80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fc82:	429a      	cmp	r2, r3
 801fc84:	db7c      	blt.n	801fd80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fc86:	46aa      	mov	sl, r5
 801fc88:	46b9      	mov	r9, r7
 801fc8a:	f1ba 0f00 	cmp.w	sl, #0
 801fc8e:	f340 8099 	ble.w	801fdc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801fc92:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fc94:	1421      	asrs	r1, r4, #16
 801fc96:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fc9a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fc9e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fca2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801fca6:	f100 80d1 	bmi.w	801fe4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801fcaa:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fcae:	4559      	cmp	r1, fp
 801fcb0:	f280 80cc 	bge.w	801fe4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801fcb4:	2800      	cmp	r0, #0
 801fcb6:	f2c0 80c9 	blt.w	801fe4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801fcba:	f103 3bff 	add.w	fp, r3, #4294967295
 801fcbe:	4558      	cmp	r0, fp
 801fcc0:	f280 80c4 	bge.w	801fe4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801fcc4:	fa0f fe8e 	sxth.w	lr, lr
 801fcc8:	fb00 110e 	mla	r1, r0, lr, r1
 801fccc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801fcd0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801fcd4:	8841      	ldrh	r1, [r0, #2]
 801fcd6:	f1bc 0f00 	cmp.w	ip, #0
 801fcda:	d00b      	beq.n	801fcf4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801fcdc:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801fce0:	3b01      	subs	r3, #1
 801fce2:	005b      	lsls	r3, r3, #1
 801fce4:	3302      	adds	r3, #2
 801fce6:	eb00 0e03 	add.w	lr, r0, r3
 801fcea:	5ac3      	ldrh	r3, [r0, r3]
 801fcec:	9308      	str	r3, [sp, #32]
 801fcee:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801fcf2:	9309      	str	r3, [sp, #36]	; 0x24
 801fcf4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801fcf8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801fcfc:	fb12 f30c 	smulbb	r3, r2, ip
 801fd00:	f1cc 0e10 	rsb	lr, ip, #16
 801fd04:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fd08:	10db      	asrs	r3, r3, #3
 801fd0a:	ebae 0e02 	sub.w	lr, lr, r2
 801fd0e:	ea40 000b 	orr.w	r0, r0, fp
 801fd12:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fd16:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fd1a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fd1e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fd22:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801fd26:	ea4b 0101 	orr.w	r1, fp, r1
 801fd2a:	4351      	muls	r1, r2
 801fd2c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fd2e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801fd32:	0410      	lsls	r0, r2, #16
 801fd34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fd38:	9908      	ldr	r1, [sp, #32]
 801fd3a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fd3e:	4310      	orrs	r0, r2
 801fd40:	9a08      	ldr	r2, [sp, #32]
 801fd42:	0412      	lsls	r2, r2, #16
 801fd44:	fb03 e000 	mla	r0, r3, r0, lr
 801fd48:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801fd4c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801fd50:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801fd54:	ea42 020e 	orr.w	r2, r2, lr
 801fd58:	fb03 0302 	mla	r3, r3, r2, r0
 801fd5c:	0d5a      	lsrs	r2, r3, #21
 801fd5e:	095b      	lsrs	r3, r3, #5
 801fd60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fd64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fd68:	4313      	orrs	r3, r2
 801fd6a:	f8a9 3000 	strh.w	r3, [r9]
 801fd6e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fd70:	f109 0902 	add.w	r9, r9, #2
 801fd74:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fd78:	441c      	add	r4, r3
 801fd7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fd7c:	441e      	add	r6, r3
 801fd7e:	e784      	b.n	801fc8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801fd80:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fd82:	3d01      	subs	r5, #1
 801fd84:	3702      	adds	r7, #2
 801fd86:	441c      	add	r4, r3
 801fd88:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fd8a:	441e      	add	r6, r3
 801fd8c:	e761      	b.n	801fc52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fd8e:	d01d      	beq.n	801fdcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801fd90:	1e6b      	subs	r3, r5, #1
 801fd92:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fd94:	fb00 4003 	mla	r0, r0, r3, r4
 801fd98:	1400      	asrs	r0, r0, #16
 801fd9a:	f53f af74 	bmi.w	801fc86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fd9e:	3901      	subs	r1, #1
 801fda0:	4288      	cmp	r0, r1
 801fda2:	f6bf af70 	bge.w	801fc86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fda6:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fda8:	fb01 6303 	mla	r3, r1, r3, r6
 801fdac:	141b      	asrs	r3, r3, #16
 801fdae:	f53f af6a 	bmi.w	801fc86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fdb2:	3a01      	subs	r2, #1
 801fdb4:	4293      	cmp	r3, r2
 801fdb6:	f6bf af66 	bge.w	801fc86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fdba:	46a9      	mov	r9, r5
 801fdbc:	46ba      	mov	sl, r7
 801fdbe:	f1b9 0f00 	cmp.w	r9, #0
 801fdc2:	dc5b      	bgt.n	801fe7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fdc4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fdc8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801fdcc:	9b07      	ldr	r3, [sp, #28]
 801fdce:	2b00      	cmp	r3, #0
 801fdd0:	f340 80b9 	ble.w	801ff46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801fdd4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fdd8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fdda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fdde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fde2:	eef0 6a62 	vmov.f32	s13, s5
 801fde6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fdea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fdee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdf2:	ee16 4a90 	vmov	r4, s13
 801fdf6:	eef0 6a43 	vmov.f32	s13, s6
 801fdfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fdfe:	ee16 6a90 	vmov	r6, s13
 801fe02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fe06:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fe0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fe0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fe12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fe16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fe1a:	ee12 2a90 	vmov	r2, s5
 801fe1e:	eef0 2a47 	vmov.f32	s5, s14
 801fe22:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe26:	ee13 2a10 	vmov	r2, s6
 801fe2a:	931b      	str	r3, [sp, #108]	; 0x6c
 801fe2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fe2e:	eeb0 3a67 	vmov.f32	s6, s15
 801fe32:	fb92 f3f3 	sdiv	r3, r2, r3
 801fe36:	931c      	str	r3, [sp, #112]	; 0x70
 801fe38:	9b07      	ldr	r3, [sp, #28]
 801fe3a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fe3c:	3b01      	subs	r3, #1
 801fe3e:	9307      	str	r3, [sp, #28]
 801fe40:	bf08      	it	eq
 801fe42:	4615      	moveq	r5, r2
 801fe44:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fe46:	bf18      	it	ne
 801fe48:	461d      	movne	r5, r3
 801fe4a:	e6f3      	b.n	801fc34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801fe4c:	f111 0b01 	adds.w	fp, r1, #1
 801fe50:	d48d      	bmi.n	801fd6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fe52:	45de      	cmp	lr, fp
 801fe54:	db8b      	blt.n	801fd6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fe56:	f110 0b01 	adds.w	fp, r0, #1
 801fe5a:	d488      	bmi.n	801fd6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fe5c:	455b      	cmp	r3, fp
 801fe5e:	db86      	blt.n	801fd6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fe60:	b21b      	sxth	r3, r3
 801fe62:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801fe66:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801fe6a:	9300      	str	r3, [sp, #0]
 801fe6c:	4642      	mov	r2, r8
 801fe6e:	fa0f f38e 	sxth.w	r3, lr
 801fe72:	4649      	mov	r1, r9
 801fe74:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fe76:	f7ff fe4c 	bl	801fb12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801fe7a:	e778      	b.n	801fd6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801fe7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fe7e:	1420      	asrs	r0, r4, #16
 801fe80:	1431      	asrs	r1, r6, #16
 801fe82:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801fe86:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fe8a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fe8e:	fb03 0101 	mla	r1, r3, r1, r0
 801fe92:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801fe96:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801fe9a:	8841      	ldrh	r1, [r0, #2]
 801fe9c:	f1be 0f00 	cmp.w	lr, #0
 801fea0:	d00b      	beq.n	801feba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801fea2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801fea6:	3b01      	subs	r3, #1
 801fea8:	005b      	lsls	r3, r3, #1
 801feaa:	3302      	adds	r3, #2
 801feac:	eb00 0b03 	add.w	fp, r0, r3
 801feb0:	5ac3      	ldrh	r3, [r0, r3]
 801feb2:	930a      	str	r3, [sp, #40]	; 0x28
 801feb4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801feb8:	930b      	str	r3, [sp, #44]	; 0x2c
 801feba:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801febe:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fec2:	fb12 f30e 	smulbb	r3, r2, lr
 801fec6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801feca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fece:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fed2:	10db      	asrs	r3, r3, #3
 801fed4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fed8:	ea40 000c 	orr.w	r0, r0, ip
 801fedc:	f1ce 0c10 	rsb	ip, lr, #16
 801fee0:	ea4b 0101 	orr.w	r1, fp, r1
 801fee4:	f109 39ff 	add.w	r9, r9, #4294967295
 801fee8:	ebac 0c02 	sub.w	ip, ip, r2
 801feec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fef0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801fef4:	4351      	muls	r1, r2
 801fef6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fef8:	fb0c 1c00 	mla	ip, ip, r0, r1
 801fefc:	990a      	ldr	r1, [sp, #40]	; 0x28
 801fefe:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ff02:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801ff06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ff08:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ff0c:	0412      	lsls	r2, r2, #16
 801ff0e:	ea4b 0000 	orr.w	r0, fp, r0
 801ff12:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801ff16:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ff1a:	fb03 c000 	mla	r0, r3, r0, ip
 801ff1e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801ff22:	ea42 0b0b 	orr.w	fp, r2, fp
 801ff26:	fb03 000b 	mla	r0, r3, fp, r0
 801ff2a:	0d43      	lsrs	r3, r0, #21
 801ff2c:	0940      	lsrs	r0, r0, #5
 801ff2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ff32:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ff36:	4318      	orrs	r0, r3
 801ff38:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ff3a:	441c      	add	r4, r3
 801ff3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ff3e:	f82a 0b02 	strh.w	r0, [sl], #2
 801ff42:	441e      	add	r6, r3
 801ff44:	e73b      	b.n	801fdbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801ff46:	b00f      	add	sp, #60	; 0x3c
 801ff48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ff4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801ff4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff50:	b085      	sub	sp, #20
 801ff52:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801ff56:	9102      	str	r1, [sp, #8]
 801ff58:	2c00      	cmp	r4, #0
 801ff5a:	fb04 7103 	mla	r1, r4, r3, r7
 801ff5e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801ff62:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801ff66:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ff6a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801ff6e:	f2c0 811b 	blt.w	80201a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ff72:	45a6      	cmp	lr, r4
 801ff74:	f340 8118 	ble.w	80201a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ff78:	2f00      	cmp	r7, #0
 801ff7a:	f2c0 8113 	blt.w	80201a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ff7e:	42bb      	cmp	r3, r7
 801ff80:	f340 8110 	ble.w	80201a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ff84:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ff88:	1c7a      	adds	r2, r7, #1
 801ff8a:	f100 8110 	bmi.w	80201ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ff8e:	4293      	cmp	r3, r2
 801ff90:	f340 810d 	ble.w	80201ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ff94:	2e00      	cmp	r6, #0
 801ff96:	f000 810c 	beq.w	80201b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801ff9a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ff9e:	3401      	adds	r4, #1
 801ffa0:	f100 810b 	bmi.w	80201ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ffa4:	45a6      	cmp	lr, r4
 801ffa6:	f340 8108 	ble.w	80201ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ffaa:	2800      	cmp	r0, #0
 801ffac:	f000 8108 	beq.w	80201c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801ffb0:	2f00      	cmp	r7, #0
 801ffb2:	f2c0 8100 	blt.w	80201b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ffb6:	42bb      	cmp	r3, r7
 801ffb8:	f340 80fd 	ble.w	80201b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ffbc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ffc0:	3701      	adds	r7, #1
 801ffc2:	f100 8100 	bmi.w	80201c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ffc6:	42bb      	cmp	r3, r7
 801ffc8:	f340 80fd 	ble.w	80201c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ffcc:	2e00      	cmp	r6, #0
 801ffce:	f000 80fc 	beq.w	80201ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801ffd2:	3301      	adds	r3, #1
 801ffd4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801ffd8:	b2b6      	uxth	r6, r6
 801ffda:	b280      	uxth	r0, r0
 801ffdc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ffe0:	fb00 fe06 	mul.w	lr, r0, r6
 801ffe4:	0136      	lsls	r6, r6, #4
 801ffe6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ffea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ffee:	eba6 070e 	sub.w	r7, r6, lr
 801fff2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801fff6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fffa:	b280      	uxth	r0, r0
 801fffc:	b2bf      	uxth	r7, r7
 801fffe:	1a1b      	subs	r3, r3, r0
 8020000:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020004:	fb0a f607 	mul.w	r6, sl, r7
 8020008:	b29b      	uxth	r3, r3
 802000a:	fb0b 6603 	mla	r6, fp, r3, r6
 802000e:	fb00 6609 	mla	r6, r0, r9, r6
 8020012:	fb0e 6608 	mla	r6, lr, r8, r6
 8020016:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802001a:	9600      	str	r6, [sp, #0]
 802001c:	2e00      	cmp	r6, #0
 802001e:	f000 80be 	beq.w	802019e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8020022:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020026:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802002a:	9e02      	ldr	r6, [sp, #8]
 802002c:	fb0b fc0c 	mul.w	ip, fp, ip
 8020030:	fb0b f505 	mul.w	r5, fp, r5
 8020034:	8836      	ldrh	r6, [r6, #0]
 8020036:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802003a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802003e:	9501      	str	r5, [sp, #4]
 8020040:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020044:	44dc      	add	ip, fp
 8020046:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802004a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802004e:	9503      	str	r5, [sp, #12]
 8020050:	9d01      	ldr	r5, [sp, #4]
 8020052:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020056:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802005a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802005e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020062:	fb0a fc0c 	mul.w	ip, sl, ip
 8020066:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802006a:	fb0a fa01 	mul.w	sl, sl, r1
 802006e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020072:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020076:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802007a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802007e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020082:	4465      	add	r5, ip
 8020084:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020088:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802008c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020090:	fb09 fc0c 	mul.w	ip, r9, ip
 8020094:	0a2d      	lsrs	r5, r5, #8
 8020096:	fb09 f904 	mul.w	r9, r9, r4
 802009a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802009e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80200a2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80200a6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80200aa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80200ae:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80200b2:	437d      	muls	r5, r7
 80200b4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80200b8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80200bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80200c0:	4461      	add	r1, ip
 80200c2:	fb08 f404 	mul.w	r4, r8, r4
 80200c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80200ca:	fb08 f802 	mul.w	r8, r8, r2
 80200ce:	0a09      	lsrs	r1, r1, #8
 80200d0:	0a22      	lsrs	r2, r4, #8
 80200d2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80200d6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80200da:	fb07 f70a 	mul.w	r7, r7, sl
 80200de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80200e2:	4414      	add	r4, r2
 80200e4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80200e8:	0a24      	lsrs	r4, r4, #8
 80200ea:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80200ee:	9a03      	ldr	r2, [sp, #12]
 80200f0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80200f4:	fb02 5503 	mla	r5, r2, r3, r5
 80200f8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80200fc:	9a00      	ldr	r2, [sp, #0]
 80200fe:	fb04 540e 	mla	r4, r4, lr, r5
 8020102:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020106:	1235      	asrs	r5, r6, #8
 8020108:	fb01 4100 	mla	r1, r1, r0, r4
 802010c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020110:	0a09      	lsrs	r1, r1, #8
 8020112:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020116:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802011a:	fb03 7101 	mla	r1, r3, r1, r7
 802011e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020122:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020126:	fb00 e101 	mla	r1, r0, r1, lr
 802012a:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802012e:	b287      	uxth	r7, r0
 8020130:	0a09      	lsrs	r1, r1, #8
 8020132:	437a      	muls	r2, r7
 8020134:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020138:	1c53      	adds	r3, r2, #1
 802013a:	4321      	orrs	r1, r4
 802013c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020140:	0c0a      	lsrs	r2, r1, #16
 8020142:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020146:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802014a:	b2c8      	uxtb	r0, r1
 802014c:	fb12 f207 	smulbb	r2, r2, r7
 8020150:	fb14 f407 	smulbb	r4, r4, r7
 8020154:	b2db      	uxtb	r3, r3
 8020156:	fb10 f007 	smulbb	r0, r0, r7
 802015a:	fb05 2503 	mla	r5, r5, r3, r2
 802015e:	10f2      	asrs	r2, r6, #3
 8020160:	00f6      	lsls	r6, r6, #3
 8020162:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020166:	b2ad      	uxth	r5, r5
 8020168:	b2f6      	uxtb	r6, r6
 802016a:	fb02 4203 	mla	r2, r2, r3, r4
 802016e:	fb06 0303 	mla	r3, r6, r3, r0
 8020172:	b294      	uxth	r4, r2
 8020174:	b299      	uxth	r1, r3
 8020176:	1c6b      	adds	r3, r5, #1
 8020178:	1c62      	adds	r2, r4, #1
 802017a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802017e:	1c4b      	adds	r3, r1, #1
 8020180:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020184:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020188:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802018c:	0952      	lsrs	r2, r2, #5
 802018e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020192:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020196:	432b      	orrs	r3, r5
 8020198:	4313      	orrs	r3, r2
 802019a:	9a02      	ldr	r2, [sp, #8]
 802019c:	8013      	strh	r3, [r2, #0]
 802019e:	b005      	add	sp, #20
 80201a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201a4:	2500      	movs	r5, #0
 80201a6:	e6ef      	b.n	801ff88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80201a8:	2100      	movs	r1, #0
 80201aa:	460d      	mov	r5, r1
 80201ac:	e6f7      	b.n	801ff9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80201ae:	2100      	movs	r1, #0
 80201b0:	e6f5      	b.n	801ff9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80201b2:	4631      	mov	r1, r6
 80201b4:	e6f3      	b.n	801ff9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80201b6:	2400      	movs	r4, #0
 80201b8:	e702      	b.n	801ffc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80201ba:	2200      	movs	r2, #0
 80201bc:	4614      	mov	r4, r2
 80201be:	e70b      	b.n	801ffd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80201c0:	4602      	mov	r2, r0
 80201c2:	4604      	mov	r4, r0
 80201c4:	e708      	b.n	801ffd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80201c6:	2200      	movs	r2, #0
 80201c8:	e706      	b.n	801ffd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80201ca:	4632      	mov	r2, r6
 80201cc:	e704      	b.n	801ffd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080201ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80201ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201d2:	b09d      	sub	sp, #116	; 0x74
 80201d4:	9219      	str	r2, [sp, #100]	; 0x64
 80201d6:	9307      	str	r3, [sp, #28]
 80201d8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80201da:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80201de:	901b      	str	r0, [sp, #108]	; 0x6c
 80201e0:	931a      	str	r3, [sp, #104]	; 0x68
 80201e2:	6850      	ldr	r0, [r2, #4]
 80201e4:	9117      	str	r1, [sp, #92]	; 0x5c
 80201e6:	6812      	ldr	r2, [r2, #0]
 80201e8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80201ec:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80201f0:	fb00 1303 	mla	r3, r0, r3, r1
 80201f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80201f8:	930a      	str	r3, [sp, #40]	; 0x28
 80201fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80201fc:	681b      	ldr	r3, [r3, #0]
 80201fe:	9310      	str	r3, [sp, #64]	; 0x40
 8020200:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8020204:	930b      	str	r3, [sp, #44]	; 0x2c
 8020206:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020208:	2b00      	cmp	r3, #0
 802020a:	dc03      	bgt.n	8020214 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802020c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802020e:	2b00      	cmp	r3, #0
 8020210:	f340 8375 	ble.w	80208fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020214:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020216:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802021a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802021e:	1e48      	subs	r0, r1, #1
 8020220:	1e57      	subs	r7, r2, #1
 8020222:	9b07      	ldr	r3, [sp, #28]
 8020224:	2b00      	cmp	r3, #0
 8020226:	f340 818e 	ble.w	8020546 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802022a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802022e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020232:	d406      	bmi.n	8020242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8020234:	4584      	cmp	ip, r0
 8020236:	da04      	bge.n	8020242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8020238:	2b00      	cmp	r3, #0
 802023a:	db02      	blt.n	8020242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802023c:	42bb      	cmp	r3, r7
 802023e:	f2c0 8183 	blt.w	8020548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8020242:	f11c 0c01 	adds.w	ip, ip, #1
 8020246:	f100 8173 	bmi.w	8020530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802024a:	4561      	cmp	r1, ip
 802024c:	f2c0 8170 	blt.w	8020530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020250:	3301      	adds	r3, #1
 8020252:	f100 816d 	bmi.w	8020530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020256:	429a      	cmp	r2, r3
 8020258:	f2c0 816a 	blt.w	8020530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802025c:	9b07      	ldr	r3, [sp, #28]
 802025e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020260:	9318      	str	r3, [sp, #96]	; 0x60
 8020262:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020264:	2b00      	cmp	r3, #0
 8020266:	f340 818c 	ble.w	8020582 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802026a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802026c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020270:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020272:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020276:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802027a:	1422      	asrs	r2, r4, #16
 802027c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020280:	689b      	ldr	r3, [r3, #8]
 8020282:	f100 81cd 	bmi.w	8020620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020286:	f103 38ff 	add.w	r8, r3, #4294967295
 802028a:	4542      	cmp	r2, r8
 802028c:	f280 81c8 	bge.w	8020620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020290:	f1bc 0f00 	cmp.w	ip, #0
 8020294:	f2c0 81c4 	blt.w	8020620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020298:	f10e 38ff 	add.w	r8, lr, #4294967295
 802029c:	45c4      	cmp	ip, r8
 802029e:	f280 81bf 	bge.w	8020620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80202a2:	b21b      	sxth	r3, r3
 80202a4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80202a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80202aa:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80202ae:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80202b2:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80202b6:	2800      	cmp	r0, #0
 80202b8:	f000 81a9 	beq.w	802060e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80202bc:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80202c0:	950c      	str	r5, [sp, #48]	; 0x30
 80202c2:	0e2d      	lsrs	r5, r5, #24
 80202c4:	9513      	str	r5, [sp, #76]	; 0x4c
 80202c6:	b181      	cbz	r1, 80202ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80202c8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80202cc:	3b01      	subs	r3, #1
 80202ce:	009b      	lsls	r3, r3, #2
 80202d0:	3304      	adds	r3, #4
 80202d2:	eb08 0c03 	add.w	ip, r8, r3
 80202d6:	f858 3003 	ldr.w	r3, [r8, r3]
 80202da:	9308      	str	r3, [sp, #32]
 80202dc:	0e1b      	lsrs	r3, r3, #24
 80202de:	9311      	str	r3, [sp, #68]	; 0x44
 80202e0:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80202e4:	930d      	str	r3, [sp, #52]	; 0x34
 80202e6:	0e1b      	lsrs	r3, r3, #24
 80202e8:	9314      	str	r3, [sp, #80]	; 0x50
 80202ea:	b280      	uxth	r0, r0
 80202ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80202ee:	b289      	uxth	r1, r1
 80202f0:	fb00 f901 	mul.w	r9, r0, r1
 80202f4:	0100      	lsls	r0, r0, #4
 80202f6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80202fa:	eba0 0809 	sub.w	r8, r0, r9
 80202fe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8020302:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020304:	b289      	uxth	r1, r1
 8020306:	fa1f f888 	uxth.w	r8, r8
 802030a:	1a5b      	subs	r3, r3, r1
 802030c:	fb08 f000 	mul.w	r0, r8, r0
 8020310:	b29b      	uxth	r3, r3
 8020312:	fb03 000e 	mla	r0, r3, lr, r0
 8020316:	fb01 0005 	mla	r0, r1, r5, r0
 802031a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802031c:	fb09 0005 	mla	r0, r9, r5, r0
 8020320:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020324:	2800      	cmp	r0, #0
 8020326:	f000 80fa 	beq.w	802051e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802032a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802032e:	d01b      	beq.n	8020368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8020330:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8020334:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020338:	fb0e fa0a 	mul.w	sl, lr, sl
 802033c:	fb0e fe02 	mul.w	lr, lr, r2
 8020340:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020344:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020348:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802034c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020350:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020354:	4452      	add	r2, sl
 8020356:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802035a:	0a12      	lsrs	r2, r2, #8
 802035c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020360:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020364:	ea42 020c 	orr.w	r2, r2, ip
 8020368:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802036a:	2dff      	cmp	r5, #255	; 0xff
 802036c:	d021      	beq.n	80203b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802036e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020370:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020374:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020376:	fb05 fb0b 	mul.w	fp, r5, fp
 802037a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802037c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020380:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020382:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020386:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802038a:	fb05 fa0a 	mul.w	sl, r5, sl
 802038e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020392:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020396:	44de      	add	lr, fp
 8020398:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802039c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80203a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80203a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80203a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80203ac:	ea4e 050a 	orr.w	r5, lr, sl
 80203b0:	950c      	str	r5, [sp, #48]	; 0x30
 80203b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80203b4:	2dff      	cmp	r5, #255	; 0xff
 80203b6:	d021      	beq.n	80203fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80203b8:	9d08      	ldr	r5, [sp, #32]
 80203ba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80203be:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80203c0:	fb05 fb0b 	mul.w	fp, r5, fp
 80203c4:	9d08      	ldr	r5, [sp, #32]
 80203c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80203ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80203cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80203d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80203d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80203d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80203dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80203e0:	44de      	add	lr, fp
 80203e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80203e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80203ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80203ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80203f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80203f6:	ea4e 050a 	orr.w	r5, lr, sl
 80203fa:	9508      	str	r5, [sp, #32]
 80203fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80203fe:	2dff      	cmp	r5, #255	; 0xff
 8020400:	d021      	beq.n	8020446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8020402:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020404:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020408:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802040a:	fb05 fb0b 	mul.w	fp, r5, fp
 802040e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020410:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020414:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020416:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802041a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802041e:	fb05 fa0a 	mul.w	sl, r5, sl
 8020422:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020426:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802042a:	44de      	add	lr, fp
 802042c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020430:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020434:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020438:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802043c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020440:	ea4e 050a 	orr.w	r5, lr, sl
 8020444:	950d      	str	r5, [sp, #52]	; 0x34
 8020446:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020448:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802044c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020450:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020454:	9d08      	ldr	r5, [sp, #32]
 8020456:	fb08 fc0c 	mul.w	ip, r8, ip
 802045a:	fb03 cc0e 	mla	ip, r3, lr, ip
 802045e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020462:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020464:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020468:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802046c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802046e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020472:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8020476:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020478:	fb08 f80e 	mul.w	r8, r8, lr
 802047c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020480:	fb03 8202 	mla	r2, r3, r2, r8
 8020484:	9b08      	ldr	r3, [sp, #32]
 8020486:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802048a:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802048e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020490:	fb01 220a 	mla	r2, r1, sl, r2
 8020494:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8020498:	883b      	ldrh	r3, [r7, #0]
 802049a:	fb09 2901 	mla	r9, r9, r1, r2
 802049e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80204a0:	1219      	asrs	r1, r3, #8
 80204a2:	4342      	muls	r2, r0
 80204a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80204a8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80204ac:	1c50      	adds	r0, r2, #1
 80204ae:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80204b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80204b6:	ea4c 0c09 	orr.w	ip, ip, r9
 80204ba:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80204be:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80204c2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80204c6:	fa5f fc8c 	uxtb.w	ip, ip
 80204ca:	fb12 f205 	smulbb	r2, r2, r5
 80204ce:	b2c0      	uxtb	r0, r0
 80204d0:	fb1c fc05 	smulbb	ip, ip, r5
 80204d4:	fb01 2100 	mla	r1, r1, r0, r2
 80204d8:	10da      	asrs	r2, r3, #3
 80204da:	fb1e fe05 	smulbb	lr, lr, r5
 80204de:	00db      	lsls	r3, r3, #3
 80204e0:	b289      	uxth	r1, r1
 80204e2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80204e6:	b2db      	uxtb	r3, r3
 80204e8:	fb02 e200 	mla	r2, r2, r0, lr
 80204ec:	fb03 c300 	mla	r3, r3, r0, ip
 80204f0:	b292      	uxth	r2, r2
 80204f2:	fa1f fc83 	uxth.w	ip, r3
 80204f6:	1c4b      	adds	r3, r1, #1
 80204f8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80204fc:	f10c 0301 	add.w	r3, ip, #1
 8020500:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020504:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020508:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802050c:	430b      	orrs	r3, r1
 802050e:	1c51      	adds	r1, r2, #1
 8020510:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020514:	0952      	lsrs	r2, r2, #5
 8020516:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802051a:	4313      	orrs	r3, r2
 802051c:	803b      	strh	r3, [r7, #0]
 802051e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020520:	3702      	adds	r7, #2
 8020522:	441c      	add	r4, r3
 8020524:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020526:	441e      	add	r6, r3
 8020528:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802052a:	3b01      	subs	r3, #1
 802052c:	9318      	str	r3, [sp, #96]	; 0x60
 802052e:	e698      	b.n	8020262 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020530:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020532:	441c      	add	r4, r3
 8020534:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020536:	441e      	add	r6, r3
 8020538:	9b07      	ldr	r3, [sp, #28]
 802053a:	3b01      	subs	r3, #1
 802053c:	9307      	str	r3, [sp, #28]
 802053e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020540:	3302      	adds	r3, #2
 8020542:	930a      	str	r3, [sp, #40]	; 0x28
 8020544:	e66d      	b.n	8020222 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8020546:	d023      	beq.n	8020590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020548:	9b07      	ldr	r3, [sp, #28]
 802054a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802054c:	3b01      	subs	r3, #1
 802054e:	fb00 4003 	mla	r0, r0, r3, r4
 8020552:	1400      	asrs	r0, r0, #16
 8020554:	f53f ae82 	bmi.w	802025c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020558:	3901      	subs	r1, #1
 802055a:	4288      	cmp	r0, r1
 802055c:	f6bf ae7e 	bge.w	802025c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020560:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8020562:	fb01 6303 	mla	r3, r1, r3, r6
 8020566:	141b      	asrs	r3, r3, #16
 8020568:	f53f ae78 	bmi.w	802025c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802056c:	3a01      	subs	r2, #1
 802056e:	4293      	cmp	r3, r2
 8020570:	f6bf ae74 	bge.w	802025c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020574:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020578:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802057c:	f1bb 0f00 	cmp.w	fp, #0
 8020580:	dc6c      	bgt.n	802065c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020582:	9b07      	ldr	r3, [sp, #28]
 8020584:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020588:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802058a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802058e:	930a      	str	r3, [sp, #40]	; 0x28
 8020590:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020592:	2b00      	cmp	r3, #0
 8020594:	f340 81b3 	ble.w	80208fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020598:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802059c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802059e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80205a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80205a6:	eef0 6a62 	vmov.f32	s13, s5
 80205aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80205ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80205b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205b6:	ee16 4a90 	vmov	r4, s13
 80205ba:	eef0 6a43 	vmov.f32	s13, s6
 80205be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205c2:	ee16 6a90 	vmov	r6, s13
 80205c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80205ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80205ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80205d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80205d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80205da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80205de:	ee12 2a90 	vmov	r2, s5
 80205e2:	eef0 2a47 	vmov.f32	s5, s14
 80205e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80205ea:	ee13 2a10 	vmov	r2, s6
 80205ee:	9329      	str	r3, [sp, #164]	; 0xa4
 80205f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80205f2:	eeb0 3a67 	vmov.f32	s6, s15
 80205f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80205fa:	932a      	str	r3, [sp, #168]	; 0xa8
 80205fc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80205fe:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8020600:	3b01      	subs	r3, #1
 8020602:	9317      	str	r3, [sp, #92]	; 0x5c
 8020604:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020606:	bf08      	it	eq
 8020608:	4613      	moveq	r3, r2
 802060a:	9307      	str	r3, [sp, #28]
 802060c:	e5fb      	b.n	8020206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802060e:	2900      	cmp	r1, #0
 8020610:	f43f ae6b 	beq.w	80202ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020614:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8020618:	9308      	str	r3, [sp, #32]
 802061a:	0e1b      	lsrs	r3, r3, #24
 802061c:	9311      	str	r3, [sp, #68]	; 0x44
 802061e:	e664      	b.n	80202ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020620:	f112 0801 	adds.w	r8, r2, #1
 8020624:	f53f af7b 	bmi.w	802051e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020628:	4543      	cmp	r3, r8
 802062a:	f6ff af78 	blt.w	802051e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802062e:	f11c 0801 	adds.w	r8, ip, #1
 8020632:	f53f af74 	bmi.w	802051e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020636:	45c6      	cmp	lr, r8
 8020638:	f6ff af71 	blt.w	802051e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802063c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802063e:	b21b      	sxth	r3, r3
 8020640:	9201      	str	r2, [sp, #4]
 8020642:	fa0f f28e 	sxth.w	r2, lr
 8020646:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802064a:	e9cd c002 	strd	ip, r0, [sp, #8]
 802064e:	9200      	str	r2, [sp, #0]
 8020650:	4639      	mov	r1, r7
 8020652:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020654:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020656:	f7ff fc79 	bl	801ff4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802065a:	e760      	b.n	802051e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802065c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802065e:	1427      	asrs	r7, r4, #16
 8020660:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020662:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020666:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802066a:	1433      	asrs	r3, r6, #16
 802066c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020670:	fb01 7303 	mla	r3, r1, r3, r7
 8020674:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8020678:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802067c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020680:	2a00      	cmp	r2, #0
 8020682:	f000 8133 	beq.w	80208ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8020686:	687d      	ldr	r5, [r7, #4]
 8020688:	950e      	str	r5, [sp, #56]	; 0x38
 802068a:	0e2d      	lsrs	r5, r5, #24
 802068c:	9515      	str	r5, [sp, #84]	; 0x54
 802068e:	b178      	cbz	r0, 80206b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020690:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8020694:	3901      	subs	r1, #1
 8020696:	0089      	lsls	r1, r1, #2
 8020698:	3104      	adds	r1, #4
 802069a:	eb07 0e01 	add.w	lr, r7, r1
 802069e:	5879      	ldr	r1, [r7, r1]
 80206a0:	9109      	str	r1, [sp, #36]	; 0x24
 80206a2:	0e09      	lsrs	r1, r1, #24
 80206a4:	9112      	str	r1, [sp, #72]	; 0x48
 80206a6:	f8de 1004 	ldr.w	r1, [lr, #4]
 80206aa:	910f      	str	r1, [sp, #60]	; 0x3c
 80206ac:	0e09      	lsrs	r1, r1, #24
 80206ae:	9116      	str	r1, [sp, #88]	; 0x58
 80206b0:	b292      	uxth	r2, r2
 80206b2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80206b4:	b280      	uxth	r0, r0
 80206b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80206b8:	fb02 f800 	mul.w	r8, r2, r0
 80206bc:	0112      	lsls	r2, r2, #4
 80206be:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80206c2:	eba2 0e08 	sub.w	lr, r2, r8
 80206c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80206ca:	b280      	uxth	r0, r0
 80206cc:	fa1f fe8e 	uxth.w	lr, lr
 80206d0:	1a12      	subs	r2, r2, r0
 80206d2:	fb0e f101 	mul.w	r1, lr, r1
 80206d6:	b292      	uxth	r2, r2
 80206d8:	fb02 110c 	mla	r1, r2, ip, r1
 80206dc:	fb00 1105 	mla	r1, r0, r5, r1
 80206e0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80206e2:	fb08 1105 	mla	r1, r8, r5, r1
 80206e6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80206ea:	2900      	cmp	r1, #0
 80206ec:	f000 80f5 	beq.w	80208da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80206f0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80206f4:	d019      	beq.n	802072a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80206f6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80206fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80206fe:	fb0c fa0a 	mul.w	sl, ip, sl
 8020702:	fb0c fc03 	mul.w	ip, ip, r3
 8020706:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802070a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802070e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020712:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020716:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802071a:	4453      	add	r3, sl
 802071c:	0a3f      	lsrs	r7, r7, #8
 802071e:	0a1b      	lsrs	r3, r3, #8
 8020720:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020724:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020728:	433b      	orrs	r3, r7
 802072a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802072c:	2dff      	cmp	r5, #255	; 0xff
 802072e:	d020      	beq.n	8020772 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8020730:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020732:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020736:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020738:	436f      	muls	r7, r5
 802073a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802073c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020740:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020744:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8020746:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802074a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802074e:	fb05 fa0a 	mul.w	sl, r5, sl
 8020752:	44bc      	add	ip, r7
 8020754:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020758:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802075c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020760:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020764:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020768:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802076c:	ea4c 050a 	orr.w	r5, ip, sl
 8020770:	950e      	str	r5, [sp, #56]	; 0x38
 8020772:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020774:	2dff      	cmp	r5, #255	; 0xff
 8020776:	d020      	beq.n	80207ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8020778:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802077a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802077e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020780:	436f      	muls	r7, r5
 8020782:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020784:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020788:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802078c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802078e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020792:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020796:	fb05 fa0a 	mul.w	sl, r5, sl
 802079a:	44bc      	add	ip, r7
 802079c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80207a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80207a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80207a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80207ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80207b4:	ea4c 050a 	orr.w	r5, ip, sl
 80207b8:	9509      	str	r5, [sp, #36]	; 0x24
 80207ba:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80207bc:	2dff      	cmp	r5, #255	; 0xff
 80207be:	d020      	beq.n	8020802 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80207c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80207c2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80207c6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80207c8:	436f      	muls	r7, r5
 80207ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80207cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80207d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80207d4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80207d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80207da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80207de:	fb05 fa0a 	mul.w	sl, r5, sl
 80207e2:	44bc      	add	ip, r7
 80207e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80207e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80207ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80207f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80207f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80207fc:	ea4c 050a 	orr.w	r5, ip, sl
 8020800:	950f      	str	r5, [sp, #60]	; 0x3c
 8020802:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020804:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020808:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802080c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020810:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020812:	fb0e f707 	mul.w	r7, lr, r7
 8020816:	fb02 770c 	mla	r7, r2, ip, r7
 802081a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802081e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8020820:	fb00 770c 	mla	r7, r0, ip, r7
 8020824:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020828:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802082a:	fb08 770c 	mla	r7, r8, ip, r7
 802082e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8020832:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020834:	fb0e fe0c 	mul.w	lr, lr, ip
 8020838:	0a3f      	lsrs	r7, r7, #8
 802083a:	fb02 e303 	mla	r3, r2, r3, lr
 802083e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020840:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020844:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020848:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802084a:	fb00 330a 	mla	r3, r0, sl, r3
 802084e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020852:	f8b9 0000 	ldrh.w	r0, [r9]
 8020856:	fb08 3c0c 	mla	ip, r8, ip, r3
 802085a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802085c:	1202      	asrs	r2, r0, #8
 802085e:	4359      	muls	r1, r3
 8020860:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020864:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020868:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802086c:	1c4b      	adds	r3, r1, #1
 802086e:	ea47 070c 	orr.w	r7, r7, ip
 8020872:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020876:	0c3b      	lsrs	r3, r7, #16
 8020878:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802087c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020880:	b2ff      	uxtb	r7, r7
 8020882:	fb13 f305 	smulbb	r3, r3, r5
 8020886:	b2c9      	uxtb	r1, r1
 8020888:	fb17 f705 	smulbb	r7, r7, r5
 802088c:	fb02 3201 	mla	r2, r2, r1, r3
 8020890:	10c3      	asrs	r3, r0, #3
 8020892:	fb1c fc05 	smulbb	ip, ip, r5
 8020896:	00c0      	lsls	r0, r0, #3
 8020898:	b292      	uxth	r2, r2
 802089a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802089e:	b2c0      	uxtb	r0, r0
 80208a0:	fb03 c301 	mla	r3, r3, r1, ip
 80208a4:	fb00 7001 	mla	r0, r0, r1, r7
 80208a8:	1c51      	adds	r1, r2, #1
 80208aa:	b29b      	uxth	r3, r3
 80208ac:	b280      	uxth	r0, r0
 80208ae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80208b2:	f100 0c01 	add.w	ip, r0, #1
 80208b6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80208ba:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80208be:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80208c2:	ea4c 0202 	orr.w	r2, ip, r2
 80208c6:	f103 0c01 	add.w	ip, r3, #1
 80208ca:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80208ce:	095b      	lsrs	r3, r3, #5
 80208d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80208d4:	431a      	orrs	r2, r3
 80208d6:	f8a9 2000 	strh.w	r2, [r9]
 80208da:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80208dc:	f109 0902 	add.w	r9, r9, #2
 80208e0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80208e4:	441c      	add	r4, r3
 80208e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80208e8:	441e      	add	r6, r3
 80208ea:	e647      	b.n	802057c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80208ec:	2800      	cmp	r0, #0
 80208ee:	f43f aedf 	beq.w	80206b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80208f2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80208f6:	9109      	str	r1, [sp, #36]	; 0x24
 80208f8:	0e09      	lsrs	r1, r1, #24
 80208fa:	9112      	str	r1, [sp, #72]	; 0x48
 80208fc:	e6d8      	b.n	80206b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80208fe:	b01d      	add	sp, #116	; 0x74
 8020900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020904 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8020904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020908:	b085      	sub	sp, #20
 802090a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802090e:	9102      	str	r1, [sp, #8]
 8020910:	2c00      	cmp	r4, #0
 8020912:	fb04 7103 	mla	r1, r4, r3, r7
 8020916:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802091a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802091e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8020922:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8020926:	f2c0 810c 	blt.w	8020b42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802092a:	45a6      	cmp	lr, r4
 802092c:	f340 8109 	ble.w	8020b42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8020930:	2f00      	cmp	r7, #0
 8020932:	f2c0 8104 	blt.w	8020b3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8020936:	42bb      	cmp	r3, r7
 8020938:	f340 8101 	ble.w	8020b3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802093c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8020940:	1c7a      	adds	r2, r7, #1
 8020942:	f100 8101 	bmi.w	8020b48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8020946:	4293      	cmp	r3, r2
 8020948:	f340 80fe 	ble.w	8020b48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802094c:	2e00      	cmp	r6, #0
 802094e:	f000 80fd 	beq.w	8020b4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8020952:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8020956:	3401      	adds	r4, #1
 8020958:	f100 80fc 	bmi.w	8020b54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802095c:	45a6      	cmp	lr, r4
 802095e:	f340 80f9 	ble.w	8020b54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8020962:	2800      	cmp	r0, #0
 8020964:	f000 80f9 	beq.w	8020b5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8020968:	2f00      	cmp	r7, #0
 802096a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 802096e:	f2c0 80ef 	blt.w	8020b50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8020972:	42bb      	cmp	r3, r7
 8020974:	f340 80ec 	ble.w	8020b50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8020978:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802097c:	3701      	adds	r7, #1
 802097e:	f100 80ef 	bmi.w	8020b60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8020982:	42bb      	cmp	r3, r7
 8020984:	f340 80ec 	ble.w	8020b60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8020988:	2e00      	cmp	r6, #0
 802098a:	f000 80eb 	beq.w	8020b64 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802098e:	6852      	ldr	r2, [r2, #4]
 8020990:	b2b6      	uxth	r6, r6
 8020992:	b280      	uxth	r0, r0
 8020994:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020998:	fb00 fe06 	mul.w	lr, r0, r6
 802099c:	0136      	lsls	r6, r6, #4
 802099e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80209a2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80209a6:	eba6 070e 	sub.w	r7, r6, lr
 80209aa:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80209ae:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80209b2:	b280      	uxth	r0, r0
 80209b4:	b2bf      	uxth	r7, r7
 80209b6:	1a1b      	subs	r3, r3, r0
 80209b8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80209bc:	fb07 f60a 	mul.w	r6, r7, sl
 80209c0:	b29b      	uxth	r3, r3
 80209c2:	fb0b 6603 	mla	r6, fp, r3, r6
 80209c6:	fb00 6609 	mla	r6, r0, r9, r6
 80209ca:	fb0e 6608 	mla	r6, lr, r8, r6
 80209ce:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80209d2:	9600      	str	r6, [sp, #0]
 80209d4:	2e00      	cmp	r6, #0
 80209d6:	f000 80af 	beq.w	8020b38 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80209da:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80209de:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80209e2:	9e02      	ldr	r6, [sp, #8]
 80209e4:	fb0b fc0c 	mul.w	ip, fp, ip
 80209e8:	fb0b f505 	mul.w	r5, fp, r5
 80209ec:	8836      	ldrh	r6, [r6, #0]
 80209ee:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80209f2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80209f6:	9501      	str	r5, [sp, #4]
 80209f8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80209fc:	44dc      	add	ip, fp
 80209fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020a02:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8020a06:	9503      	str	r5, [sp, #12]
 8020a08:	9d01      	ldr	r5, [sp, #4]
 8020a0a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020a0e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020a12:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020a16:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020a1a:	fb0a fc0c 	mul.w	ip, sl, ip
 8020a1e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020a22:	fb0a fa01 	mul.w	sl, sl, r1
 8020a26:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020a2a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020a2e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020a32:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020a36:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020a3a:	4465      	add	r5, ip
 8020a3c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020a40:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020a44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a48:	fb09 fc0c 	mul.w	ip, r9, ip
 8020a4c:	0a2d      	lsrs	r5, r5, #8
 8020a4e:	fb09 f904 	mul.w	r9, r9, r4
 8020a52:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020a56:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020a5a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020a5e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8020a62:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020a66:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020a6a:	437d      	muls	r5, r7
 8020a6c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020a70:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020a74:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020a78:	4461      	add	r1, ip
 8020a7a:	fb08 f404 	mul.w	r4, r8, r4
 8020a7e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020a82:	fb08 f802 	mul.w	r8, r8, r2
 8020a86:	0a09      	lsrs	r1, r1, #8
 8020a88:	0a22      	lsrs	r2, r4, #8
 8020a8a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020a8e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020a92:	fb07 f70a 	mul.w	r7, r7, sl
 8020a96:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020a9a:	4414      	add	r4, r2
 8020a9c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020aa0:	0a24      	lsrs	r4, r4, #8
 8020aa2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020aa6:	9a03      	ldr	r2, [sp, #12]
 8020aa8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020aac:	fb02 5503 	mla	r5, r2, r3, r5
 8020ab0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020ab4:	fb04 540e 	mla	r4, r4, lr, r5
 8020ab8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020abc:	fb01 4100 	mla	r1, r1, r0, r4
 8020ac0:	0a09      	lsrs	r1, r1, #8
 8020ac2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020ac6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020aca:	fb03 7101 	mla	r1, r3, r1, r7
 8020ace:	9b00      	ldr	r3, [sp, #0]
 8020ad0:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020ad4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020ad8:	43da      	mvns	r2, r3
 8020ada:	1233      	asrs	r3, r6, #8
 8020adc:	fb00 e101 	mla	r1, r0, r1, lr
 8020ae0:	10f0      	asrs	r0, r6, #3
 8020ae2:	b2d2      	uxtb	r2, r2
 8020ae4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020ae8:	0a09      	lsrs	r1, r1, #8
 8020aea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020aee:	00f6      	lsls	r6, r6, #3
 8020af0:	4353      	muls	r3, r2
 8020af2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020af6:	4350      	muls	r0, r2
 8020af8:	b2f6      	uxtb	r6, r6
 8020afa:	4321      	orrs	r1, r4
 8020afc:	4356      	muls	r6, r2
 8020afe:	1c5a      	adds	r2, r3, #1
 8020b00:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020b04:	0c0b      	lsrs	r3, r1, #16
 8020b06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020b0a:	1c42      	adds	r2, r0, #1
 8020b0c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020b10:	0a0a      	lsrs	r2, r1, #8
 8020b12:	021b      	lsls	r3, r3, #8
 8020b14:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020b18:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8020b1c:	00d2      	lsls	r2, r2, #3
 8020b1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020b22:	4313      	orrs	r3, r2
 8020b24:	1c72      	adds	r2, r6, #1
 8020b26:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8020b2a:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8020b2e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020b32:	4319      	orrs	r1, r3
 8020b34:	9b02      	ldr	r3, [sp, #8]
 8020b36:	8019      	strh	r1, [r3, #0]
 8020b38:	b005      	add	sp, #20
 8020b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b3e:	2500      	movs	r5, #0
 8020b40:	e6fe      	b.n	8020940 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8020b42:	2100      	movs	r1, #0
 8020b44:	460d      	mov	r5, r1
 8020b46:	e706      	b.n	8020956 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020b48:	2100      	movs	r1, #0
 8020b4a:	e704      	b.n	8020956 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020b4c:	4631      	mov	r1, r6
 8020b4e:	e702      	b.n	8020956 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020b50:	2400      	movs	r4, #0
 8020b52:	e713      	b.n	802097c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8020b54:	2200      	movs	r2, #0
 8020b56:	4614      	mov	r4, r2
 8020b58:	e71a      	b.n	8020990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020b5a:	4602      	mov	r2, r0
 8020b5c:	4604      	mov	r4, r0
 8020b5e:	e717      	b.n	8020990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020b60:	2200      	movs	r2, #0
 8020b62:	e715      	b.n	8020990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020b64:	4632      	mov	r2, r6
 8020b66:	e713      	b.n	8020990 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

08020b68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b6c:	b09b      	sub	sp, #108	; 0x6c
 8020b6e:	9218      	str	r2, [sp, #96]	; 0x60
 8020b70:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020b72:	9019      	str	r0, [sp, #100]	; 0x64
 8020b74:	9116      	str	r1, [sp, #88]	; 0x58
 8020b76:	6850      	ldr	r0, [r2, #4]
 8020b78:	9307      	str	r3, [sp, #28]
 8020b7a:	6812      	ldr	r2, [r2, #0]
 8020b7c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020b80:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8020b84:	fb00 1303 	mla	r3, r0, r3, r1
 8020b88:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020b8c:	930a      	str	r3, [sp, #40]	; 0x28
 8020b8e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020b90:	681b      	ldr	r3, [r3, #0]
 8020b92:	930f      	str	r3, [sp, #60]	; 0x3c
 8020b94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020b96:	2b00      	cmp	r3, #0
 8020b98:	dc03      	bgt.n	8020ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020b9a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020b9c:	2b00      	cmp	r3, #0
 8020b9e:	f340 8387 	ble.w	80212b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8020ba2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020ba4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ba8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020bac:	1e48      	subs	r0, r1, #1
 8020bae:	1e57      	subs	r7, r2, #1
 8020bb0:	9b07      	ldr	r3, [sp, #28]
 8020bb2:	2b00      	cmp	r3, #0
 8020bb4:	f340 8166 	ble.w	8020e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8020bb8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020bbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020bc0:	d406      	bmi.n	8020bd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020bc2:	4584      	cmp	ip, r0
 8020bc4:	da04      	bge.n	8020bd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020bc6:	2b00      	cmp	r3, #0
 8020bc8:	db02      	blt.n	8020bd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020bca:	42bb      	cmp	r3, r7
 8020bcc:	f2c0 815b 	blt.w	8020e86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020bd0:	f11c 0c01 	adds.w	ip, ip, #1
 8020bd4:	f100 814b 	bmi.w	8020e6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020bd8:	4561      	cmp	r1, ip
 8020bda:	f2c0 8148 	blt.w	8020e6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020bde:	3301      	adds	r3, #1
 8020be0:	f100 8145 	bmi.w	8020e6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020be4:	429a      	cmp	r2, r3
 8020be6:	f2c0 8142 	blt.w	8020e6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020bea:	9b07      	ldr	r3, [sp, #28]
 8020bec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020bee:	9317      	str	r3, [sp, #92]	; 0x5c
 8020bf0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020bf2:	2b00      	cmp	r3, #0
 8020bf4:	f340 8165 	ble.w	8020ec2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020bf8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8020bfa:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020bfe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020c00:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020c04:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020c08:	1422      	asrs	r2, r4, #16
 8020c0a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020c0e:	689b      	ldr	r3, [r3, #8]
 8020c10:	f100 81d5 	bmi.w	8020fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020c14:	f103 38ff 	add.w	r8, r3, #4294967295
 8020c18:	4542      	cmp	r2, r8
 8020c1a:	f280 81d0 	bge.w	8020fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020c1e:	f1bc 0f00 	cmp.w	ip, #0
 8020c22:	f2c0 81cc 	blt.w	8020fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020c26:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020c2a:	45c4      	cmp	ip, r8
 8020c2c:	f280 81c7 	bge.w	8020fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020c30:	b21b      	sxth	r3, r3
 8020c32:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8020c34:	fb0c 2203 	mla	r2, ip, r3, r2
 8020c38:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8020c3c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8020c40:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8020c44:	2900      	cmp	r1, #0
 8020c46:	f000 8182 	beq.w	8020f4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020c4a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8020c4e:	950b      	str	r5, [sp, #44]	; 0x2c
 8020c50:	0e2d      	lsrs	r5, r5, #24
 8020c52:	9512      	str	r5, [sp, #72]	; 0x48
 8020c54:	b180      	cbz	r0, 8020c78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8020c56:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8020c5a:	3b01      	subs	r3, #1
 8020c5c:	009b      	lsls	r3, r3, #2
 8020c5e:	3304      	adds	r3, #4
 8020c60:	eb08 0c03 	add.w	ip, r8, r3
 8020c64:	f858 3003 	ldr.w	r3, [r8, r3]
 8020c68:	9308      	str	r3, [sp, #32]
 8020c6a:	0e1b      	lsrs	r3, r3, #24
 8020c6c:	9310      	str	r3, [sp, #64]	; 0x40
 8020c6e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8020c72:	930c      	str	r3, [sp, #48]	; 0x30
 8020c74:	0e1b      	lsrs	r3, r3, #24
 8020c76:	9313      	str	r3, [sp, #76]	; 0x4c
 8020c78:	b289      	uxth	r1, r1
 8020c7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020c7c:	b280      	uxth	r0, r0
 8020c7e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020c80:	fb01 f900 	mul.w	r9, r1, r0
 8020c84:	0109      	lsls	r1, r1, #4
 8020c86:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020c8a:	eba1 0809 	sub.w	r8, r1, r9
 8020c8e:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8020c92:	b280      	uxth	r0, r0
 8020c94:	fa1f f888 	uxth.w	r8, r8
 8020c98:	1a09      	subs	r1, r1, r0
 8020c9a:	fb08 f303 	mul.w	r3, r8, r3
 8020c9e:	b289      	uxth	r1, r1
 8020ca0:	fb01 330e 	mla	r3, r1, lr, r3
 8020ca4:	fb00 3305 	mla	r3, r0, r5, r3
 8020ca8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020caa:	fb09 3305 	mla	r3, r9, r5, r3
 8020cae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020cb2:	2b00      	cmp	r3, #0
 8020cb4:	f000 80d2 	beq.w	8020e5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020cb8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020cbc:	d01b      	beq.n	8020cf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8020cbe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8020cc2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020cc6:	fb0e fa0a 	mul.w	sl, lr, sl
 8020cca:	fb0e fe02 	mul.w	lr, lr, r2
 8020cce:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020cd2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020cd6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020cda:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020cde:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020ce2:	4452      	add	r2, sl
 8020ce4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ce8:	0a12      	lsrs	r2, r2, #8
 8020cea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020cee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020cf2:	ea42 020c 	orr.w	r2, r2, ip
 8020cf6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020cf8:	2dff      	cmp	r5, #255	; 0xff
 8020cfa:	d021      	beq.n	8020d40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020cfc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020cfe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020d02:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020d04:	fb05 fb0b 	mul.w	fp, r5, fp
 8020d08:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020d0a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020d0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020d10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020d14:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020d18:	fb05 fa0a 	mul.w	sl, r5, sl
 8020d1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d20:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020d24:	44de      	add	lr, fp
 8020d26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020d2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020d2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020d3a:	ea4e 050a 	orr.w	r5, lr, sl
 8020d3e:	950b      	str	r5, [sp, #44]	; 0x2c
 8020d40:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020d42:	2dff      	cmp	r5, #255	; 0xff
 8020d44:	d021      	beq.n	8020d8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8020d46:	9d08      	ldr	r5, [sp, #32]
 8020d48:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020d4c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020d4e:	fb05 fb0b 	mul.w	fp, r5, fp
 8020d52:	9d08      	ldr	r5, [sp, #32]
 8020d54:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8020d58:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020d5a:	fb05 fa0e 	mul.w	sl, r5, lr
 8020d5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020d62:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020d66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d6a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020d6e:	44de      	add	lr, fp
 8020d70:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020d74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020d78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d80:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020d84:	ea4e 050a 	orr.w	r5, lr, sl
 8020d88:	9508      	str	r5, [sp, #32]
 8020d8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020d8c:	2dff      	cmp	r5, #255	; 0xff
 8020d8e:	d021      	beq.n	8020dd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8020d90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020d92:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020d96:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020d98:	fb05 fb0b 	mul.w	fp, r5, fp
 8020d9c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020d9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020da2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020da4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020da8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020dac:	fb05 fa0a 	mul.w	sl, r5, sl
 8020db0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020db4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020db8:	44de      	add	lr, fp
 8020dba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020dbe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020dc2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020dc6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020dca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020dce:	ea4e 050a 	orr.w	r5, lr, sl
 8020dd2:	950c      	str	r5, [sp, #48]	; 0x30
 8020dd4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020dd6:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8020dda:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020dde:	2bff      	cmp	r3, #255	; 0xff
 8020de0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020de4:	9d08      	ldr	r5, [sp, #32]
 8020de6:	fb08 fc0c 	mul.w	ip, r8, ip
 8020dea:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020dee:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020df2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020df4:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020df8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020dfc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020dfe:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020e02:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8020e06:	fb08 f80e 	mul.w	r8, r8, lr
 8020e0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e0e:	fb01 8202 	mla	r2, r1, r2, r8
 8020e12:	9908      	ldr	r1, [sp, #32]
 8020e14:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020e18:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020e1c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020e1e:	fb00 220a 	mla	r2, r0, sl, r2
 8020e22:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8020e26:	fb09 2900 	mla	r9, r9, r0, r2
 8020e2a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020e2e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020e32:	ea4c 0c09 	orr.w	ip, ip, r9
 8020e36:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8020e3a:	f040 8091 	bne.w	8020f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020e3e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8020e42:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8020e46:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020e4a:	f022 0207 	bic.w	r2, r2, #7
 8020e4e:	431a      	orrs	r2, r3
 8020e50:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020e54:	ea4c 0c02 	orr.w	ip, ip, r2
 8020e58:	f8a7 c000 	strh.w	ip, [r7]
 8020e5c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020e5e:	3702      	adds	r7, #2
 8020e60:	441c      	add	r4, r3
 8020e62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020e64:	441e      	add	r6, r3
 8020e66:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020e68:	3b01      	subs	r3, #1
 8020e6a:	9317      	str	r3, [sp, #92]	; 0x5c
 8020e6c:	e6c0      	b.n	8020bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e6e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020e70:	441c      	add	r4, r3
 8020e72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020e74:	441e      	add	r6, r3
 8020e76:	9b07      	ldr	r3, [sp, #28]
 8020e78:	3b01      	subs	r3, #1
 8020e7a:	9307      	str	r3, [sp, #28]
 8020e7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e7e:	3302      	adds	r3, #2
 8020e80:	930a      	str	r3, [sp, #40]	; 0x28
 8020e82:	e695      	b.n	8020bb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020e84:	d024      	beq.n	8020ed0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020e86:	9b07      	ldr	r3, [sp, #28]
 8020e88:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020e8a:	3b01      	subs	r3, #1
 8020e8c:	fb00 4003 	mla	r0, r0, r3, r4
 8020e90:	1400      	asrs	r0, r0, #16
 8020e92:	f53f aeaa 	bmi.w	8020bea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020e96:	3901      	subs	r1, #1
 8020e98:	4288      	cmp	r0, r1
 8020e9a:	f6bf aea6 	bge.w	8020bea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020e9e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020ea0:	fb01 6303 	mla	r3, r1, r3, r6
 8020ea4:	141b      	asrs	r3, r3, #16
 8020ea6:	f53f aea0 	bmi.w	8020bea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020eaa:	3a01      	subs	r2, #1
 8020eac:	4293      	cmp	r3, r2
 8020eae:	f6bf ae9c 	bge.w	8020bea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020eb2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020eb6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8020eba:	f1bb 0f00 	cmp.w	fp, #0
 8020ebe:	f300 809a 	bgt.w	8020ff6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020ec2:	9b07      	ldr	r3, [sp, #28]
 8020ec4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020ec8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020eca:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020ece:	930a      	str	r3, [sp, #40]	; 0x28
 8020ed0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020ed2:	2b00      	cmp	r3, #0
 8020ed4:	f340 81ec 	ble.w	80212b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8020ed8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020edc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ede:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020ee2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020ee6:	eef0 6a62 	vmov.f32	s13, s5
 8020eea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020eee:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020ef2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020ef6:	ee16 4a90 	vmov	r4, s13
 8020efa:	eef0 6a43 	vmov.f32	s13, s6
 8020efe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f02:	ee16 6a90 	vmov	r6, s13
 8020f06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020f0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020f0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020f12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020f16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020f1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020f1e:	ee12 2a90 	vmov	r2, s5
 8020f22:	eef0 2a47 	vmov.f32	s5, s14
 8020f26:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f2a:	ee13 2a10 	vmov	r2, s6
 8020f2e:	9327      	str	r3, [sp, #156]	; 0x9c
 8020f30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020f32:	eeb0 3a67 	vmov.f32	s6, s15
 8020f36:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f3a:	9328      	str	r3, [sp, #160]	; 0xa0
 8020f3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020f3e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020f40:	3b01      	subs	r3, #1
 8020f42:	9316      	str	r3, [sp, #88]	; 0x58
 8020f44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020f46:	bf08      	it	eq
 8020f48:	4613      	moveq	r3, r2
 8020f4a:	9307      	str	r3, [sp, #28]
 8020f4c:	e622      	b.n	8020b94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8020f4e:	2800      	cmp	r0, #0
 8020f50:	f43f ae92 	beq.w	8020c78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8020f54:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8020f58:	9308      	str	r3, [sp, #32]
 8020f5a:	0e1b      	lsrs	r3, r3, #24
 8020f5c:	9310      	str	r3, [sp, #64]	; 0x40
 8020f5e:	e68b      	b.n	8020c78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8020f60:	8839      	ldrh	r1, [r7, #0]
 8020f62:	43db      	mvns	r3, r3
 8020f64:	4dd4      	ldr	r5, [pc, #848]	; (80212b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8020f66:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8020f6a:	fa5f f883 	uxtb.w	r8, r3
 8020f6e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8020f72:	10c8      	asrs	r0, r1, #3
 8020f74:	00cb      	lsls	r3, r1, #3
 8020f76:	fb0e fe08 	mul.w	lr, lr, r8
 8020f7a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020f7e:	b2db      	uxtb	r3, r3
 8020f80:	f10e 0101 	add.w	r1, lr, #1
 8020f84:	fb00 f008 	mul.w	r0, r0, r8
 8020f88:	fb03 f308 	mul.w	r3, r3, r8
 8020f8c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8020f90:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8020f94:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8020f98:	f100 0e01 	add.w	lr, r0, #1
 8020f9c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8020fa0:	b2c9      	uxtb	r1, r1
 8020fa2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020fa6:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8020faa:	00d2      	lsls	r2, r2, #3
 8020fac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020fb0:	430a      	orrs	r2, r1
 8020fb2:	1c59      	adds	r1, r3, #1
 8020fb4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020fb8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020fbc:	e748      	b.n	8020e50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8020fbe:	f112 0801 	adds.w	r8, r2, #1
 8020fc2:	f53f af4b 	bmi.w	8020e5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020fc6:	4543      	cmp	r3, r8
 8020fc8:	f6ff af48 	blt.w	8020e5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020fcc:	f11c 0801 	adds.w	r8, ip, #1
 8020fd0:	f53f af44 	bmi.w	8020e5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020fd4:	45c6      	cmp	lr, r8
 8020fd6:	f6ff af41 	blt.w	8020e5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020fda:	b21b      	sxth	r3, r3
 8020fdc:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8020fe0:	fa0f f28e 	sxth.w	r2, lr
 8020fe4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8020fe8:	9200      	str	r2, [sp, #0]
 8020fea:	4639      	mov	r1, r7
 8020fec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020fee:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020ff0:	f7ff fc88 	bl	8020904 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8020ff4:	e732      	b.n	8020e5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020ff6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020ff8:	1421      	asrs	r1, r4, #16
 8020ffa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8020ffc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021000:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8021004:	1433      	asrs	r3, r6, #16
 8021006:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802100a:	fb07 1303 	mla	r3, r7, r3, r1
 802100e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8021010:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8021014:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021018:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802101c:	2a00      	cmp	r2, #0
 802101e:	f000 8108 	beq.w	8021232 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8021022:	684d      	ldr	r5, [r1, #4]
 8021024:	950d      	str	r5, [sp, #52]	; 0x34
 8021026:	0e2d      	lsrs	r5, r5, #24
 8021028:	9514      	str	r5, [sp, #80]	; 0x50
 802102a:	b178      	cbz	r0, 802104c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802102c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8021030:	3f01      	subs	r7, #1
 8021032:	00bf      	lsls	r7, r7, #2
 8021034:	3704      	adds	r7, #4
 8021036:	eb01 0e07 	add.w	lr, r1, r7
 802103a:	59c9      	ldr	r1, [r1, r7]
 802103c:	9109      	str	r1, [sp, #36]	; 0x24
 802103e:	0e09      	lsrs	r1, r1, #24
 8021040:	9111      	str	r1, [sp, #68]	; 0x44
 8021042:	f8de 1004 	ldr.w	r1, [lr, #4]
 8021046:	910e      	str	r1, [sp, #56]	; 0x38
 8021048:	0e09      	lsrs	r1, r1, #24
 802104a:	9115      	str	r1, [sp, #84]	; 0x54
 802104c:	b292      	uxth	r2, r2
 802104e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021050:	b280      	uxth	r0, r0
 8021052:	fb02 f900 	mul.w	r9, r2, r0
 8021056:	0112      	lsls	r2, r2, #4
 8021058:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802105c:	eba2 0e09 	sub.w	lr, r2, r9
 8021060:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021064:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021066:	b280      	uxth	r0, r0
 8021068:	fa1f fe8e 	uxth.w	lr, lr
 802106c:	1a09      	subs	r1, r1, r0
 802106e:	fb0e f202 	mul.w	r2, lr, r2
 8021072:	b289      	uxth	r1, r1
 8021074:	fb01 220c 	mla	r2, r1, ip, r2
 8021078:	fb00 2205 	mla	r2, r0, r5, r2
 802107c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802107e:	fb09 2205 	mla	r2, r9, r5, r2
 8021082:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021086:	2a00      	cmp	r2, #0
 8021088:	f000 80ca 	beq.w	8021220 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 802108c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021090:	d019      	beq.n	80210c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8021092:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021096:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802109a:	fb0c fa0a 	mul.w	sl, ip, sl
 802109e:	fb0c fc03 	mul.w	ip, ip, r3
 80210a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80210a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80210aa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80210ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80210b2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80210b6:	4453      	add	r3, sl
 80210b8:	0a3f      	lsrs	r7, r7, #8
 80210ba:	0a1b      	lsrs	r3, r3, #8
 80210bc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80210c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80210c4:	433b      	orrs	r3, r7
 80210c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80210c8:	2dff      	cmp	r5, #255	; 0xff
 80210ca:	d020      	beq.n	802110e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80210cc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80210ce:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80210d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80210d4:	436f      	muls	r7, r5
 80210d6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80210d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80210dc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80210e0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80210e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80210e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80210ee:	44bc      	add	ip, r7
 80210f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80210f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80210fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021100:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021104:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021108:	ea4c 050a 	orr.w	r5, ip, sl
 802110c:	950d      	str	r5, [sp, #52]	; 0x34
 802110e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021110:	2dff      	cmp	r5, #255	; 0xff
 8021112:	d020      	beq.n	8021156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8021114:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021116:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802111a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802111c:	436f      	muls	r7, r5
 802111e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021120:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8021124:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021126:	fb05 fa0c 	mul.w	sl, r5, ip
 802112a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802112e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021132:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021136:	44bc      	add	ip, r7
 8021138:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802113c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021140:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021144:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021148:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802114c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021150:	ea4c 050a 	orr.w	r5, ip, sl
 8021154:	9509      	str	r5, [sp, #36]	; 0x24
 8021156:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021158:	2dff      	cmp	r5, #255	; 0xff
 802115a:	d020      	beq.n	802119e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802115c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802115e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021162:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021164:	436f      	muls	r7, r5
 8021166:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021168:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802116c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021170:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021172:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021176:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802117a:	fb05 fa0a 	mul.w	sl, r5, sl
 802117e:	44bc      	add	ip, r7
 8021180:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021184:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021188:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802118c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021190:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021194:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021198:	ea4c 050a 	orr.w	r5, ip, sl
 802119c:	950e      	str	r5, [sp, #56]	; 0x38
 802119e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80211a0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80211a4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80211a8:	2aff      	cmp	r2, #255	; 0xff
 80211aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80211ae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80211b0:	fb0e f707 	mul.w	r7, lr, r7
 80211b4:	fb01 770c 	mla	r7, r1, ip, r7
 80211b8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80211bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80211be:	fb00 770c 	mla	r7, r0, ip, r7
 80211c2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80211c6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80211c8:	fb09 770c 	mla	r7, r9, ip, r7
 80211cc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80211d0:	fb0e fe0c 	mul.w	lr, lr, ip
 80211d4:	ea4f 2717 	mov.w	r7, r7, lsr #8
 80211d8:	fb01 e303 	mla	r3, r1, r3, lr
 80211dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80211de:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80211e2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80211e6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80211e8:	fb00 330a 	mla	r3, r0, sl, r3
 80211ec:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80211f0:	fb09 3c0c 	mla	ip, r9, ip, r3
 80211f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80211f8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80211fc:	ea47 070c 	orr.w	r7, r7, ip
 8021200:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8021204:	d11e      	bne.n	8021244 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8021206:	097a      	lsrs	r2, r7, #5
 8021208:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802120c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8021210:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021214:	f023 0307 	bic.w	r3, r3, #7
 8021218:	4313      	orrs	r3, r2
 802121a:	431f      	orrs	r7, r3
 802121c:	f8a8 7000 	strh.w	r7, [r8]
 8021220:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021222:	f108 0802 	add.w	r8, r8, #2
 8021226:	f10b 3bff 	add.w	fp, fp, #4294967295
 802122a:	441c      	add	r4, r3
 802122c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802122e:	441e      	add	r6, r3
 8021230:	e643      	b.n	8020eba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8021232:	2800      	cmp	r0, #0
 8021234:	f43f af0a 	beq.w	802104c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021238:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802123c:	9109      	str	r1, [sp, #36]	; 0x24
 802123e:	0e09      	lsrs	r1, r1, #24
 8021240:	9111      	str	r1, [sp, #68]	; 0x44
 8021242:	e703      	b.n	802104c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021244:	f8b8 1000 	ldrh.w	r1, [r8]
 8021248:	43d2      	mvns	r2, r2
 802124a:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802124e:	fa5f fe82 	uxtb.w	lr, r2
 8021252:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021256:	10c8      	asrs	r0, r1, #3
 8021258:	00ca      	lsls	r2, r1, #3
 802125a:	fb0c fc0e 	mul.w	ip, ip, lr
 802125e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021262:	b2d2      	uxtb	r2, r2
 8021264:	f10c 0101 	add.w	r1, ip, #1
 8021268:	fb00 f00e 	mul.w	r0, r0, lr
 802126c:	fb02 f20e 	mul.w	r2, r2, lr
 8021270:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021274:	0c39      	lsrs	r1, r7, #16
 8021276:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802127a:	490f      	ldr	r1, [pc, #60]	; (80212b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 802127c:	fa5f fc8c 	uxtb.w	ip, ip
 8021280:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8021284:	1c41      	adds	r1, r0, #1
 8021286:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802128a:	1c51      	adds	r1, r2, #1
 802128c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021290:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021294:	00c0      	lsls	r0, r0, #3
 8021296:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802129a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802129e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80212a2:	ea4c 0c00 	orr.w	ip, ip, r0
 80212a6:	ea47 0c0c 	orr.w	ip, r7, ip
 80212aa:	f8a8 c000 	strh.w	ip, [r8]
 80212ae:	e7b7      	b.n	8021220 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 80212b0:	b01b      	add	sp, #108	; 0x6c
 80212b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80212b6:	bf00      	nop
 80212b8:	fffff800 	.word	0xfffff800

080212bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80212bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80212c0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80212c4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80212c8:	2d00      	cmp	r5, #0
 80212ca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80212ce:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80212d2:	fb05 0e03 	mla	lr, r5, r3, r0
 80212d6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80212da:	f2c0 808c 	blt.w	80213f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80212de:	45a9      	cmp	r9, r5
 80212e0:	f340 8089 	ble.w	80213f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80212e4:	2800      	cmp	r0, #0
 80212e6:	f2c0 8084 	blt.w	80213f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80212ea:	4580      	cmp	r8, r0
 80212ec:	f340 8081 	ble.w	80213f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80212f0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80212f4:	f01e 0f01 	tst.w	lr, #1
 80212f8:	5d16      	ldrb	r6, [r2, r4]
 80212fa:	bf0c      	ite	eq
 80212fc:	f006 060f 	andeq.w	r6, r6, #15
 8021300:	1136      	asrne	r6, r6, #4
 8021302:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8021306:	b2f6      	uxtb	r6, r6
 8021308:	1c44      	adds	r4, r0, #1
 802130a:	d477      	bmi.n	80213fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802130c:	45a0      	cmp	r8, r4
 802130e:	dd75      	ble.n	80213fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8021310:	2f00      	cmp	r7, #0
 8021312:	d075      	beq.n	8021400 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8021314:	f10e 0a01 	add.w	sl, lr, #1
 8021318:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802131c:	f01a 0f01 	tst.w	sl, #1
 8021320:	5d14      	ldrb	r4, [r2, r4]
 8021322:	bf0c      	ite	eq
 8021324:	f004 040f 	andeq.w	r4, r4, #15
 8021328:	1124      	asrne	r4, r4, #4
 802132a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802132e:	b2e4      	uxtb	r4, r4
 8021330:	3501      	adds	r5, #1
 8021332:	d469      	bmi.n	8021408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8021334:	45a9      	cmp	r9, r5
 8021336:	dd67      	ble.n	8021408 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8021338:	f1bc 0f00 	cmp.w	ip, #0
 802133c:	d067      	beq.n	802140e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802133e:	2800      	cmp	r0, #0
 8021340:	db60      	blt.n	8021404 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8021342:	4580      	cmp	r8, r0
 8021344:	dd5e      	ble.n	8021404 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8021346:	eb03 090e 	add.w	r9, r3, lr
 802134a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802134e:	f019 0f01 	tst.w	r9, #1
 8021352:	5d55      	ldrb	r5, [r2, r5]
 8021354:	bf0c      	ite	eq
 8021356:	f005 050f 	andeq.w	r5, r5, #15
 802135a:	112d      	asrne	r5, r5, #4
 802135c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8021360:	b2ed      	uxtb	r5, r5
 8021362:	3001      	adds	r0, #1
 8021364:	d456      	bmi.n	8021414 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8021366:	4580      	cmp	r8, r0
 8021368:	dd54      	ble.n	8021414 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802136a:	2f00      	cmp	r7, #0
 802136c:	d054      	beq.n	8021418 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802136e:	3301      	adds	r3, #1
 8021370:	449e      	add	lr, r3
 8021372:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8021376:	f01e 0f01 	tst.w	lr, #1
 802137a:	5cd0      	ldrb	r0, [r2, r3]
 802137c:	bf0c      	ite	eq
 802137e:	f000 000f 	andeq.w	r0, r0, #15
 8021382:	1100      	asrne	r0, r0, #4
 8021384:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021388:	b2c3      	uxtb	r3, r0
 802138a:	b2ba      	uxth	r2, r7
 802138c:	fa1f fc8c 	uxth.w	ip, ip
 8021390:	fb02 f00c 	mul.w	r0, r2, ip
 8021394:	0112      	lsls	r2, r2, #4
 8021396:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802139a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802139e:	1a12      	subs	r2, r2, r0
 80213a0:	fa1f fc8c 	uxth.w	ip, ip
 80213a4:	b292      	uxth	r2, r2
 80213a6:	eba7 070c 	sub.w	r7, r7, ip
 80213aa:	4362      	muls	r2, r4
 80213ac:	b2bf      	uxth	r7, r7
 80213ae:	fb06 2207 	mla	r2, r6, r7, r2
 80213b2:	fb0c 2505 	mla	r5, ip, r5, r2
 80213b6:	fb00 5303 	mla	r3, r0, r3, r5
 80213ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80213be:	b1b3      	cbz	r3, 80213ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80213c0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80213c4:	435a      	muls	r2, r3
 80213c6:	1c53      	adds	r3, r2, #1
 80213c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80213cc:	4a2d      	ldr	r2, [pc, #180]	; (8021484 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80213ce:	121b      	asrs	r3, r3, #8
 80213d0:	6812      	ldr	r2, [r2, #0]
 80213d2:	2bff      	cmp	r3, #255	; 0xff
 80213d4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80213d8:	d120      	bne.n	802141c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80213da:	0950      	lsrs	r0, r2, #5
 80213dc:	4b2a      	ldr	r3, [pc, #168]	; (8021488 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80213de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80213e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80213e6:	4033      	ands	r3, r6
 80213e8:	4318      	orrs	r0, r3
 80213ea:	4302      	orrs	r2, r0
 80213ec:	800a      	strh	r2, [r1, #0]
 80213ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80213f2:	2600      	movs	r6, #0
 80213f4:	e788      	b.n	8021308 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80213f6:	2400      	movs	r4, #0
 80213f8:	4626      	mov	r6, r4
 80213fa:	e799      	b.n	8021330 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80213fc:	2400      	movs	r4, #0
 80213fe:	e797      	b.n	8021330 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021400:	463c      	mov	r4, r7
 8021402:	e795      	b.n	8021330 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021404:	2500      	movs	r5, #0
 8021406:	e7ac      	b.n	8021362 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8021408:	2300      	movs	r3, #0
 802140a:	461d      	mov	r5, r3
 802140c:	e7bd      	b.n	802138a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802140e:	4663      	mov	r3, ip
 8021410:	4665      	mov	r5, ip
 8021412:	e7ba      	b.n	802138a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021414:	2300      	movs	r3, #0
 8021416:	e7b8      	b.n	802138a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021418:	463b      	mov	r3, r7
 802141a:	e7b6      	b.n	802138a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802141c:	880d      	ldrh	r5, [r1, #0]
 802141e:	b29f      	uxth	r7, r3
 8021420:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8021424:	43db      	mvns	r3, r3
 8021426:	122c      	asrs	r4, r5, #8
 8021428:	fb10 f007 	smulbb	r0, r0, r7
 802142c:	b2db      	uxtb	r3, r3
 802142e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8021432:	b2f6      	uxtb	r6, r6
 8021434:	b2d2      	uxtb	r2, r2
 8021436:	fb04 0403 	mla	r4, r4, r3, r0
 802143a:	10e8      	asrs	r0, r5, #3
 802143c:	fb12 f207 	smulbb	r2, r2, r7
 8021440:	00ed      	lsls	r5, r5, #3
 8021442:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021446:	b2a4      	uxth	r4, r4
 8021448:	fb16 f607 	smulbb	r6, r6, r7
 802144c:	b2ed      	uxtb	r5, r5
 802144e:	fb00 6603 	mla	r6, r0, r3, r6
 8021452:	fb05 2303 	mla	r3, r5, r3, r2
 8021456:	b2b0      	uxth	r0, r6
 8021458:	b29a      	uxth	r2, r3
 802145a:	1c63      	adds	r3, r4, #1
 802145c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8021460:	1c53      	adds	r3, r2, #1
 8021462:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021466:	1c42      	adds	r2, r0, #1
 8021468:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802146c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021470:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021474:	0940      	lsrs	r0, r0, #5
 8021476:	4323      	orrs	r3, r4
 8021478:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802147c:	4303      	orrs	r3, r0
 802147e:	800b      	strh	r3, [r1, #0]
 8021480:	e7b5      	b.n	80213ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8021482:	bf00      	nop
 8021484:	24001ee0 	.word	0x24001ee0
 8021488:	00fff800 	.word	0x00fff800

0802148c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802148c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021490:	b097      	sub	sp, #92	; 0x5c
 8021492:	9214      	str	r2, [sp, #80]	; 0x50
 8021494:	9309      	str	r3, [sp, #36]	; 0x24
 8021496:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021498:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802149c:	9015      	str	r0, [sp, #84]	; 0x54
 802149e:	910d      	str	r1, [sp, #52]	; 0x34
 80214a0:	6850      	ldr	r0, [r2, #4]
 80214a2:	930f      	str	r3, [sp, #60]	; 0x3c
 80214a4:	6812      	ldr	r2, [r2, #0]
 80214a6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80214aa:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80214ae:	fb00 1303 	mla	r3, r0, r3, r1
 80214b2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80214b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214b8:	689b      	ldr	r3, [r3, #8]
 80214ba:	3301      	adds	r3, #1
 80214bc:	f023 0301 	bic.w	r3, r3, #1
 80214c0:	930a      	str	r3, [sp, #40]	; 0x28
 80214c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214c4:	681f      	ldr	r7, [r3, #0]
 80214c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80214c8:	2b00      	cmp	r3, #0
 80214ca:	dc03      	bgt.n	80214d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80214cc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80214ce:	2b00      	cmp	r3, #0
 80214d0:	f340 8289 	ble.w	80219e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 80214d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80214da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80214de:	1e48      	subs	r0, r1, #1
 80214e0:	f102 3cff 	add.w	ip, r2, #4294967295
 80214e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214e6:	2b00      	cmp	r3, #0
 80214e8:	f340 80c5 	ble.w	8021676 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80214ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80214f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80214f4:	d406      	bmi.n	8021504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80214f6:	4586      	cmp	lr, r0
 80214f8:	da04      	bge.n	8021504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80214fa:	2b00      	cmp	r3, #0
 80214fc:	db02      	blt.n	8021504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80214fe:	4563      	cmp	r3, ip
 8021500:	f2c0 80ba 	blt.w	8021678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8021504:	f11e 0e01 	adds.w	lr, lr, #1
 8021508:	f100 80ab 	bmi.w	8021662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 802150c:	4571      	cmp	r1, lr
 802150e:	f2c0 80a8 	blt.w	8021662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8021512:	3301      	adds	r3, #1
 8021514:	f100 80a5 	bmi.w	8021662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8021518:	429a      	cmp	r2, r3
 802151a:	f2c0 80a2 	blt.w	8021662 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 802151e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021520:	46c8      	mov	r8, r9
 8021522:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8021526:	930e      	str	r3, [sp, #56]	; 0x38
 8021528:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802152a:	2b00      	cmp	r3, #0
 802152c:	f340 80c4 	ble.w	80216b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021530:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021532:	1430      	asrs	r0, r6, #16
 8021534:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021538:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802153c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8021540:	1423      	asrs	r3, r4, #16
 8021542:	f100 814f 	bmi.w	80217e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021546:	f10c 3bff 	add.w	fp, ip, #4294967295
 802154a:	455b      	cmp	r3, fp
 802154c:	f280 814a 	bge.w	80217e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021550:	2800      	cmp	r0, #0
 8021552:	f2c0 8147 	blt.w	80217e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021556:	f10e 3bff 	add.w	fp, lr, #4294967295
 802155a:	4558      	cmp	r0, fp
 802155c:	f280 8142 	bge.w	80217e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021560:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8021562:	fb00 3305 	mla	r3, r0, r5, r3
 8021566:	0858      	lsrs	r0, r3, #1
 8021568:	07dd      	lsls	r5, r3, #31
 802156a:	f817 c000 	ldrb.w	ip, [r7, r0]
 802156e:	bf54      	ite	pl
 8021570:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021574:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021578:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802157c:	fa5f fc8c 	uxtb.w	ip, ip
 8021580:	2a00      	cmp	r2, #0
 8021582:	f000 80dd 	beq.w	8021740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8021586:	1c58      	adds	r0, r3, #1
 8021588:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802158c:	07c0      	lsls	r0, r0, #31
 802158e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021592:	bf54      	ite	pl
 8021594:	f00e 0e0f 	andpl.w	lr, lr, #15
 8021598:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802159c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80215a0:	fa5f f08e 	uxtb.w	r0, lr
 80215a4:	9010      	str	r0, [sp, #64]	; 0x40
 80215a6:	b1d9      	cbz	r1, 80215e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80215a8:	4453      	add	r3, sl
 80215aa:	0858      	lsrs	r0, r3, #1
 80215ac:	07dd      	lsls	r5, r3, #31
 80215ae:	f103 0301 	add.w	r3, r3, #1
 80215b2:	5c38      	ldrb	r0, [r7, r0]
 80215b4:	bf54      	ite	pl
 80215b6:	f000 000f 	andpl.w	r0, r0, #15
 80215ba:	1100      	asrmi	r0, r0, #4
 80215bc:	07dd      	lsls	r5, r3, #31
 80215be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80215c2:	b2c0      	uxtb	r0, r0
 80215c4:	900b      	str	r0, [sp, #44]	; 0x2c
 80215c6:	ea4f 0053 	mov.w	r0, r3, lsr #1
 80215ca:	f817 e000 	ldrb.w	lr, [r7, r0]
 80215ce:	bf54      	ite	pl
 80215d0:	f00e 030f 	andpl.w	r3, lr, #15
 80215d4:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80215d8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80215dc:	b2db      	uxtb	r3, r3
 80215de:	9311      	str	r3, [sp, #68]	; 0x44
 80215e0:	b292      	uxth	r2, r2
 80215e2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80215e4:	b289      	uxth	r1, r1
 80215e6:	fb02 f301 	mul.w	r3, r2, r1
 80215ea:	0112      	lsls	r2, r2, #4
 80215ec:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80215f0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80215f4:	1ad2      	subs	r2, r2, r3
 80215f6:	b289      	uxth	r1, r1
 80215f8:	b292      	uxth	r2, r2
 80215fa:	1a40      	subs	r0, r0, r1
 80215fc:	436a      	muls	r2, r5
 80215fe:	b280      	uxth	r0, r0
 8021600:	fb0c 2c00 	mla	ip, ip, r0, r2
 8021604:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021606:	fb01 c102 	mla	r1, r1, r2, ip
 802160a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802160c:	fb03 1302 	mla	r3, r3, r2, r1
 8021610:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021614:	b1db      	cbz	r3, 802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021616:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021618:	4353      	muls	r3, r2
 802161a:	1c5a      	adds	r2, r3, #1
 802161c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021620:	4ac6      	ldr	r2, [pc, #792]	; (802193c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8021622:	121b      	asrs	r3, r3, #8
 8021624:	6812      	ldr	r2, [r2, #0]
 8021626:	2bff      	cmp	r3, #255	; 0xff
 8021628:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802162c:	f040 8099 	bne.w	8021762 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8021630:	0953      	lsrs	r3, r2, #5
 8021632:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8021636:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802163a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802163e:	f02c 0c07 	bic.w	ip, ip, #7
 8021642:	ea43 0c0c 	orr.w	ip, r3, ip
 8021646:	ea4c 0202 	orr.w	r2, ip, r2
 802164a:	f8a8 2000 	strh.w	r2, [r8]
 802164e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021650:	f108 0802 	add.w	r8, r8, #2
 8021654:	441c      	add	r4, r3
 8021656:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021658:	441e      	add	r6, r3
 802165a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802165c:	3b01      	subs	r3, #1
 802165e:	930e      	str	r3, [sp, #56]	; 0x38
 8021660:	e762      	b.n	8021528 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8021662:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021664:	f109 0902 	add.w	r9, r9, #2
 8021668:	441c      	add	r4, r3
 802166a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802166c:	441e      	add	r6, r3
 802166e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021670:	3b01      	subs	r3, #1
 8021672:	9309      	str	r3, [sp, #36]	; 0x24
 8021674:	e736      	b.n	80214e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021676:	d024      	beq.n	80216c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8021678:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802167a:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802167c:	3b01      	subs	r3, #1
 802167e:	fb00 4003 	mla	r0, r0, r3, r4
 8021682:	1400      	asrs	r0, r0, #16
 8021684:	f53f af4b 	bmi.w	802151e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021688:	3901      	subs	r1, #1
 802168a:	4288      	cmp	r0, r1
 802168c:	f6bf af47 	bge.w	802151e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021690:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021692:	fb01 6303 	mla	r3, r1, r3, r6
 8021696:	141b      	asrs	r3, r3, #16
 8021698:	f53f af41 	bmi.w	802151e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802169c:	3a01      	subs	r2, #1
 802169e:	4293      	cmp	r3, r2
 80216a0:	f6bf af3d 	bge.w	802151e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80216a4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80216a8:	46c8      	mov	r8, r9
 80216aa:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80216ae:	930e      	str	r3, [sp, #56]	; 0x38
 80216b0:	f1bb 0f00 	cmp.w	fp, #0
 80216b4:	f300 80b7 	bgt.w	8021826 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 80216b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80216ba:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80216be:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80216c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80216c4:	2b00      	cmp	r3, #0
 80216c6:	f340 818e 	ble.w	80219e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 80216ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80216ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80216d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80216d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80216d8:	eef0 6a62 	vmov.f32	s13, s5
 80216dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80216e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80216e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80216e8:	ee16 4a90 	vmov	r4, s13
 80216ec:	eef0 6a43 	vmov.f32	s13, s6
 80216f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80216f4:	ee16 6a90 	vmov	r6, s13
 80216f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80216fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021700:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021704:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021708:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802170c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021710:	ee12 2a90 	vmov	r2, s5
 8021714:	eef0 2a47 	vmov.f32	s5, s14
 8021718:	fb92 f3f3 	sdiv	r3, r2, r3
 802171c:	ee13 2a10 	vmov	r2, s6
 8021720:	9323      	str	r3, [sp, #140]	; 0x8c
 8021722:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021724:	eeb0 3a67 	vmov.f32	s6, s15
 8021728:	fb92 f3f3 	sdiv	r3, r2, r3
 802172c:	9324      	str	r3, [sp, #144]	; 0x90
 802172e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021730:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021732:	3b01      	subs	r3, #1
 8021734:	930d      	str	r3, [sp, #52]	; 0x34
 8021736:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021738:	bf08      	it	eq
 802173a:	4613      	moveq	r3, r2
 802173c:	9309      	str	r3, [sp, #36]	; 0x24
 802173e:	e6c2      	b.n	80214c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021740:	2900      	cmp	r1, #0
 8021742:	f43f af4d 	beq.w	80215e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8021746:	eb0a 0003 	add.w	r0, sl, r3
 802174a:	0843      	lsrs	r3, r0, #1
 802174c:	07c0      	lsls	r0, r0, #31
 802174e:	5cfb      	ldrb	r3, [r7, r3]
 8021750:	bf54      	ite	pl
 8021752:	f003 030f 	andpl.w	r3, r3, #15
 8021756:	111b      	asrmi	r3, r3, #4
 8021758:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802175c:	b2db      	uxtb	r3, r3
 802175e:	930b      	str	r3, [sp, #44]	; 0x2c
 8021760:	e73e      	b.n	80215e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8021762:	f8b8 e000 	ldrh.w	lr, [r8]
 8021766:	fa1f fb83 	uxth.w	fp, r3
 802176a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802176e:	43db      	mvns	r3, r3
 8021770:	ea4f 202e 	mov.w	r0, lr, asr #8
 8021774:	fb11 f10b 	smulbb	r1, r1, fp
 8021778:	b2db      	uxtb	r3, r3
 802177a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802177e:	fa5f fc8c 	uxtb.w	ip, ip
 8021782:	b2d2      	uxtb	r2, r2
 8021784:	fb00 1003 	mla	r0, r0, r3, r1
 8021788:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802178c:	fb1c fc0b 	smulbb	ip, ip, fp
 8021790:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021794:	b280      	uxth	r0, r0
 8021796:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802179a:	fb12 fb0b 	smulbb	fp, r2, fp
 802179e:	fa5f fe8e 	uxtb.w	lr, lr
 80217a2:	fb01 cc03 	mla	ip, r1, r3, ip
 80217a6:	fb0e bb03 	mla	fp, lr, r3, fp
 80217aa:	1c43      	adds	r3, r0, #1
 80217ac:	fa1f fc8c 	uxth.w	ip, ip
 80217b0:	fa1f fb8b 	uxth.w	fp, fp
 80217b4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80217b8:	f10c 0101 	add.w	r1, ip, #1
 80217bc:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80217c0:	f10b 0001 	add.w	r0, fp, #1
 80217c4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80217c8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80217cc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80217d0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80217d4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80217d8:	4318      	orrs	r0, r3
 80217da:	ea40 000c 	orr.w	r0, r0, ip
 80217de:	f8a8 0000 	strh.w	r0, [r8]
 80217e2:	e734      	b.n	802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80217e4:	f113 0b01 	adds.w	fp, r3, #1
 80217e8:	f53f af31 	bmi.w	802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80217ec:	45dc      	cmp	ip, fp
 80217ee:	f6ff af2e 	blt.w	802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80217f2:	f110 0b01 	adds.w	fp, r0, #1
 80217f6:	f53f af2a 	bmi.w	802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80217fa:	45de      	cmp	lr, fp
 80217fc:	f6ff af27 	blt.w	802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021800:	9302      	str	r3, [sp, #8]
 8021802:	fa0f f38e 	sxth.w	r3, lr
 8021806:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021808:	9301      	str	r3, [sp, #4]
 802180a:	fa0f f38c 	sxth.w	r3, ip
 802180e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8021812:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021816:	9300      	str	r3, [sp, #0]
 8021818:	463a      	mov	r2, r7
 802181a:	4653      	mov	r3, sl
 802181c:	4641      	mov	r1, r8
 802181e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021820:	f7ff fd4c 	bl	80212bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8021824:	e713      	b.n	802164e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021826:	1422      	asrs	r2, r4, #16
 8021828:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802182a:	1433      	asrs	r3, r6, #16
 802182c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021830:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021834:	fb05 2303 	mla	r3, r5, r3, r2
 8021838:	085a      	lsrs	r2, r3, #1
 802183a:	07dd      	lsls	r5, r3, #31
 802183c:	5cba      	ldrb	r2, [r7, r2]
 802183e:	bf54      	ite	pl
 8021840:	f002 020f 	andpl.w	r2, r2, #15
 8021844:	1112      	asrmi	r2, r2, #4
 8021846:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802184a:	b2d2      	uxtb	r2, r2
 802184c:	2900      	cmp	r1, #0
 802184e:	d077      	beq.n	8021940 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8021850:	f103 0e01 	add.w	lr, r3, #1
 8021854:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8021858:	f01e 0f01 	tst.w	lr, #1
 802185c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021860:	bf0c      	ite	eq
 8021862:	f00c 0c0f 	andeq.w	ip, ip, #15
 8021866:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802186a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802186e:	fa5f f58c 	uxtb.w	r5, ip
 8021872:	9512      	str	r5, [sp, #72]	; 0x48
 8021874:	b308      	cbz	r0, 80218ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8021876:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021878:	442b      	add	r3, r5
 802187a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802187e:	07dd      	lsls	r5, r3, #31
 8021880:	f103 0301 	add.w	r3, r3, #1
 8021884:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021888:	bf54      	ite	pl
 802188a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802188e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021892:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021896:	fa5f f58c 	uxtb.w	r5, ip
 802189a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802189e:	950c      	str	r5, [sp, #48]	; 0x30
 80218a0:	07dd      	lsls	r5, r3, #31
 80218a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80218a6:	bf54      	ite	pl
 80218a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80218ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80218b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80218b4:	fa5f f38c 	uxtb.w	r3, ip
 80218b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80218ba:	b289      	uxth	r1, r1
 80218bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80218be:	b280      	uxth	r0, r0
 80218c0:	fb01 f300 	mul.w	r3, r1, r0
 80218c4:	0109      	lsls	r1, r1, #4
 80218c6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80218ca:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80218ce:	1ac9      	subs	r1, r1, r3
 80218d0:	b280      	uxth	r0, r0
 80218d2:	b289      	uxth	r1, r1
 80218d4:	ebac 0c00 	sub.w	ip, ip, r0
 80218d8:	4369      	muls	r1, r5
 80218da:	fa1f fc8c 	uxth.w	ip, ip
 80218de:	fb02 120c 	mla	r2, r2, ip, r1
 80218e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80218e4:	fb00 2001 	mla	r0, r0, r1, r2
 80218e8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80218ea:	fb03 0302 	mla	r3, r3, r2, r0
 80218ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80218f2:	b1d3      	cbz	r3, 802192a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80218f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80218f6:	4353      	muls	r3, r2
 80218f8:	1c5a      	adds	r2, r3, #1
 80218fa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80218fe:	4a0f      	ldr	r2, [pc, #60]	; (802193c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8021900:	121b      	asrs	r3, r3, #8
 8021902:	6812      	ldr	r2, [r2, #0]
 8021904:	2bff      	cmp	r3, #255	; 0xff
 8021906:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802190a:	d12d      	bne.n	8021968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 802190c:	0953      	lsrs	r3, r2, #5
 802190e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8021912:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021916:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802191a:	f02c 0c07 	bic.w	ip, ip, #7
 802191e:	ea43 0c0c 	orr.w	ip, r3, ip
 8021922:	ea4c 0202 	orr.w	r2, ip, r2
 8021926:	f8a8 2000 	strh.w	r2, [r8]
 802192a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802192c:	f108 0802 	add.w	r8, r8, #2
 8021930:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021934:	441c      	add	r4, r3
 8021936:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021938:	441e      	add	r6, r3
 802193a:	e6b9      	b.n	80216b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 802193c:	24001ee0 	.word	0x24001ee0
 8021940:	2800      	cmp	r0, #0
 8021942:	d0ba      	beq.n	80218ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8021944:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021946:	442b      	add	r3, r5
 8021948:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802194c:	07db      	lsls	r3, r3, #31
 802194e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021952:	bf54      	ite	pl
 8021954:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021958:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802195c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021960:	fa5f f38c 	uxtb.w	r3, ip
 8021964:	930c      	str	r3, [sp, #48]	; 0x30
 8021966:	e7a8      	b.n	80218ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8021968:	f8b8 e000 	ldrh.w	lr, [r8]
 802196c:	fa1f fa83 	uxth.w	sl, r3
 8021970:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8021974:	43db      	mvns	r3, r3
 8021976:	ea4f 202e 	mov.w	r0, lr, asr #8
 802197a:	fb11 f10a 	smulbb	r1, r1, sl
 802197e:	b2db      	uxtb	r3, r3
 8021980:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021984:	b2d2      	uxtb	r2, r2
 8021986:	fa5f fc8c 	uxtb.w	ip, ip
 802198a:	fb00 1003 	mla	r0, r0, r3, r1
 802198e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8021992:	fb12 f20a 	smulbb	r2, r2, sl
 8021996:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802199a:	b280      	uxth	r0, r0
 802199c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80219a0:	fb1c fc0a 	smulbb	ip, ip, sl
 80219a4:	fa5f fe8e 	uxtb.w	lr, lr
 80219a8:	fb0e 2203 	mla	r2, lr, r3, r2
 80219ac:	fb01 cc03 	mla	ip, r1, r3, ip
 80219b0:	1c43      	adds	r3, r0, #1
 80219b2:	b292      	uxth	r2, r2
 80219b4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80219b8:	1c51      	adds	r1, r2, #1
 80219ba:	fa1f fc8c 	uxth.w	ip, ip
 80219be:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80219c2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80219c6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80219ca:	4308      	orrs	r0, r1
 80219cc:	f10c 0101 	add.w	r1, ip, #1
 80219d0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80219d4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80219d8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80219dc:	ea40 000c 	orr.w	r0, r0, ip
 80219e0:	f8a8 0000 	strh.w	r0, [r8]
 80219e4:	e7a1      	b.n	802192a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80219e6:	b017      	add	sp, #92	; 0x5c
 80219e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080219ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80219ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80219f0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80219f4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80219f8:	2d00      	cmp	r5, #0
 80219fa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80219fe:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8021a02:	fb05 0e03 	mla	lr, r5, r3, r0
 8021a06:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8021a0a:	f2c0 80b0 	blt.w	8021b6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8021a0e:	45a9      	cmp	r9, r5
 8021a10:	f340 80ad 	ble.w	8021b6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8021a14:	2800      	cmp	r0, #0
 8021a16:	f2c0 80a8 	blt.w	8021b6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021a1a:	4580      	cmp	r8, r0
 8021a1c:	f340 80a5 	ble.w	8021b6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021a20:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8021a24:	f01e 0f01 	tst.w	lr, #1
 8021a28:	5d16      	ldrb	r6, [r2, r4]
 8021a2a:	bf0c      	ite	eq
 8021a2c:	f006 060f 	andeq.w	r6, r6, #15
 8021a30:	1136      	asrne	r6, r6, #4
 8021a32:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8021a36:	b2f6      	uxtb	r6, r6
 8021a38:	1c44      	adds	r4, r0, #1
 8021a3a:	f100 809b 	bmi.w	8021b74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8021a3e:	45a0      	cmp	r8, r4
 8021a40:	f340 8098 	ble.w	8021b74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8021a44:	2f00      	cmp	r7, #0
 8021a46:	f000 8097 	beq.w	8021b78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8021a4a:	f10e 0a01 	add.w	sl, lr, #1
 8021a4e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8021a52:	f01a 0f01 	tst.w	sl, #1
 8021a56:	5d14      	ldrb	r4, [r2, r4]
 8021a58:	bf0c      	ite	eq
 8021a5a:	f004 040f 	andeq.w	r4, r4, #15
 8021a5e:	1124      	asrne	r4, r4, #4
 8021a60:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8021a64:	b2e4      	uxtb	r4, r4
 8021a66:	3501      	adds	r5, #1
 8021a68:	f100 808a 	bmi.w	8021b80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021a6c:	45a9      	cmp	r9, r5
 8021a6e:	f340 8087 	ble.w	8021b80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021a72:	f1bc 0f00 	cmp.w	ip, #0
 8021a76:	f000 8086 	beq.w	8021b86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8021a7a:	2800      	cmp	r0, #0
 8021a7c:	db7e      	blt.n	8021b7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021a7e:	4580      	cmp	r8, r0
 8021a80:	dd7c      	ble.n	8021b7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021a82:	eb03 090e 	add.w	r9, r3, lr
 8021a86:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8021a8a:	f019 0f01 	tst.w	r9, #1
 8021a8e:	5d55      	ldrb	r5, [r2, r5]
 8021a90:	bf0c      	ite	eq
 8021a92:	f005 050f 	andeq.w	r5, r5, #15
 8021a96:	112d      	asrne	r5, r5, #4
 8021a98:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8021a9c:	b2ed      	uxtb	r5, r5
 8021a9e:	3001      	adds	r0, #1
 8021aa0:	d474      	bmi.n	8021b8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8021aa2:	4580      	cmp	r8, r0
 8021aa4:	dd72      	ble.n	8021b8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8021aa6:	2f00      	cmp	r7, #0
 8021aa8:	d072      	beq.n	8021b90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8021aaa:	3301      	adds	r3, #1
 8021aac:	449e      	add	lr, r3
 8021aae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8021ab2:	f01e 0f01 	tst.w	lr, #1
 8021ab6:	5cd0      	ldrb	r0, [r2, r3]
 8021ab8:	bf0c      	ite	eq
 8021aba:	f000 000f 	andeq.w	r0, r0, #15
 8021abe:	1100      	asrne	r0, r0, #4
 8021ac0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021ac4:	b2c3      	uxtb	r3, r0
 8021ac6:	b2ba      	uxth	r2, r7
 8021ac8:	fa1f fc8c 	uxth.w	ip, ip
 8021acc:	fb02 f00c 	mul.w	r0, r2, ip
 8021ad0:	0112      	lsls	r2, r2, #4
 8021ad2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8021ad6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8021ada:	1a12      	subs	r2, r2, r0
 8021adc:	fa1f fc8c 	uxth.w	ip, ip
 8021ae0:	b292      	uxth	r2, r2
 8021ae2:	eba7 070c 	sub.w	r7, r7, ip
 8021ae6:	4362      	muls	r2, r4
 8021ae8:	b2bf      	uxth	r7, r7
 8021aea:	fb06 2207 	mla	r2, r6, r7, r2
 8021aee:	fb0c 2505 	mla	r5, ip, r5, r2
 8021af2:	fb00 5303 	mla	r3, r0, r3, r5
 8021af6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021afa:	b3a3      	cbz	r3, 8021b66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8021afc:	4a25      	ldr	r2, [pc, #148]	; (8021b94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8021afe:	880e      	ldrh	r6, [r1, #0]
 8021b00:	6815      	ldr	r5, [r2, #0]
 8021b02:	b29a      	uxth	r2, r3
 8021b04:	1234      	asrs	r4, r6, #8
 8021b06:	43db      	mvns	r3, r3
 8021b08:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8021b0c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8021b10:	b2db      	uxtb	r3, r3
 8021b12:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8021b16:	fb10 f002 	smulbb	r0, r0, r2
 8021b1a:	b2ed      	uxtb	r5, r5
 8021b1c:	fb17 f702 	smulbb	r7, r7, r2
 8021b20:	fb04 0403 	mla	r4, r4, r3, r0
 8021b24:	10f0      	asrs	r0, r6, #3
 8021b26:	fb15 f202 	smulbb	r2, r5, r2
 8021b2a:	00f6      	lsls	r6, r6, #3
 8021b2c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021b30:	b2a4      	uxth	r4, r4
 8021b32:	b2f6      	uxtb	r6, r6
 8021b34:	fb00 7003 	mla	r0, r0, r3, r7
 8021b38:	fb06 2303 	mla	r3, r6, r3, r2
 8021b3c:	b280      	uxth	r0, r0
 8021b3e:	b29a      	uxth	r2, r3
 8021b40:	1c63      	adds	r3, r4, #1
 8021b42:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8021b46:	1c53      	adds	r3, r2, #1
 8021b48:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021b4c:	1c42      	adds	r2, r0, #1
 8021b4e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8021b52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021b56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021b5a:	0940      	lsrs	r0, r0, #5
 8021b5c:	4323      	orrs	r3, r4
 8021b5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b62:	4303      	orrs	r3, r0
 8021b64:	800b      	strh	r3, [r1, #0]
 8021b66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021b6a:	2600      	movs	r6, #0
 8021b6c:	e764      	b.n	8021a38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8021b6e:	2400      	movs	r4, #0
 8021b70:	4626      	mov	r6, r4
 8021b72:	e778      	b.n	8021a66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021b74:	2400      	movs	r4, #0
 8021b76:	e776      	b.n	8021a66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021b78:	463c      	mov	r4, r7
 8021b7a:	e774      	b.n	8021a66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021b7c:	2500      	movs	r5, #0
 8021b7e:	e78e      	b.n	8021a9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8021b80:	2300      	movs	r3, #0
 8021b82:	461d      	mov	r5, r3
 8021b84:	e79f      	b.n	8021ac6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021b86:	4663      	mov	r3, ip
 8021b88:	4665      	mov	r5, ip
 8021b8a:	e79c      	b.n	8021ac6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021b8c:	2300      	movs	r3, #0
 8021b8e:	e79a      	b.n	8021ac6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021b90:	463b      	mov	r3, r7
 8021b92:	e798      	b.n	8021ac6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021b94:	24001ee0 	.word	0x24001ee0

08021b98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b9c:	b093      	sub	sp, #76	; 0x4c
 8021b9e:	461d      	mov	r5, r3
 8021ba0:	920c      	str	r2, [sp, #48]	; 0x30
 8021ba2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021ba4:	9011      	str	r0, [sp, #68]	; 0x44
 8021ba6:	9107      	str	r1, [sp, #28]
 8021ba8:	6850      	ldr	r0, [r2, #4]
 8021baa:	6812      	ldr	r2, [r2, #0]
 8021bac:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021bb0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8021bb4:	fb00 1303 	mla	r3, r0, r3, r1
 8021bb8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021bbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021bbe:	689b      	ldr	r3, [r3, #8]
 8021bc0:	3301      	adds	r3, #1
 8021bc2:	f023 0301 	bic.w	r3, r3, #1
 8021bc6:	9306      	str	r3, [sp, #24]
 8021bc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021bca:	681f      	ldr	r7, [r3, #0]
 8021bcc:	9b07      	ldr	r3, [sp, #28]
 8021bce:	2b00      	cmp	r3, #0
 8021bd0:	dc03      	bgt.n	8021bda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021bd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021bd4:	2b00      	cmp	r3, #0
 8021bd6:	f340 8267 	ble.w	80220a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021bda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021bdc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021be0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021be4:	1e48      	subs	r0, r1, #1
 8021be6:	f102 3cff 	add.w	ip, r2, #4294967295
 8021bea:	2d00      	cmp	r5, #0
 8021bec:	f340 80b7 	ble.w	8021d5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021bf0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021bf4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021bf8:	d406      	bmi.n	8021c08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021bfa:	4586      	cmp	lr, r0
 8021bfc:	da04      	bge.n	8021c08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021bfe:	2b00      	cmp	r3, #0
 8021c00:	db02      	blt.n	8021c08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021c02:	4563      	cmp	r3, ip
 8021c04:	f2c0 80ac 	blt.w	8021d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8021c08:	f11e 0e01 	adds.w	lr, lr, #1
 8021c0c:	f100 809f 	bmi.w	8021d4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021c10:	4571      	cmp	r1, lr
 8021c12:	f2c0 809c 	blt.w	8021d4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021c16:	3301      	adds	r3, #1
 8021c18:	f100 8099 	bmi.w	8021d4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021c1c:	429a      	cmp	r2, r3
 8021c1e:	f2c0 8096 	blt.w	8021d4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8021c22:	46c8      	mov	r8, r9
 8021c24:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8021c28:	9509      	str	r5, [sp, #36]	; 0x24
 8021c2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c2c:	2b00      	cmp	r3, #0
 8021c2e:	f340 80b5 	ble.w	8021d9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021c32:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8021c36:	1430      	asrs	r0, r6, #16
 8021c38:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021c3c:	9308      	str	r3, [sp, #32]
 8021c3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021c40:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8021c44:	1423      	asrs	r3, r4, #16
 8021c46:	f100 813f 	bmi.w	8021ec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021c4a:	f10c 3bff 	add.w	fp, ip, #4294967295
 8021c4e:	455b      	cmp	r3, fp
 8021c50:	f280 813a 	bge.w	8021ec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021c54:	2800      	cmp	r0, #0
 8021c56:	f2c0 8137 	blt.w	8021ec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021c5a:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021c5e:	4558      	cmp	r0, fp
 8021c60:	f280 8132 	bge.w	8021ec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021c64:	9a06      	ldr	r2, [sp, #24]
 8021c66:	fb00 3302 	mla	r3, r0, r2, r3
 8021c6a:	0858      	lsrs	r0, r3, #1
 8021c6c:	07da      	lsls	r2, r3, #31
 8021c6e:	9a08      	ldr	r2, [sp, #32]
 8021c70:	f817 c000 	ldrb.w	ip, [r7, r0]
 8021c74:	bf54      	ite	pl
 8021c76:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021c7a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021c7e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021c82:	fa5f fc8c 	uxtb.w	ip, ip
 8021c86:	2a00      	cmp	r2, #0
 8021c88:	f000 80cc 	beq.w	8021e24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021c8c:	1c58      	adds	r0, r3, #1
 8021c8e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8021c92:	07c0      	lsls	r0, r0, #31
 8021c94:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021c98:	bf54      	ite	pl
 8021c9a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8021c9e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8021ca2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8021ca6:	fa5f fe8e 	uxtb.w	lr, lr
 8021caa:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8021cae:	b1b9      	cbz	r1, 8021ce0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8021cb0:	4453      	add	r3, sl
 8021cb2:	0858      	lsrs	r0, r3, #1
 8021cb4:	07da      	lsls	r2, r3, #31
 8021cb6:	5c38      	ldrb	r0, [r7, r0]
 8021cb8:	bf54      	ite	pl
 8021cba:	f000 000f 	andpl.w	r0, r0, #15
 8021cbe:	1100      	asrmi	r0, r0, #4
 8021cc0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021cc4:	b2c0      	uxtb	r0, r0
 8021cc6:	900a      	str	r0, [sp, #40]	; 0x28
 8021cc8:	1c58      	adds	r0, r3, #1
 8021cca:	0843      	lsrs	r3, r0, #1
 8021ccc:	07c2      	lsls	r2, r0, #31
 8021cce:	5cfb      	ldrb	r3, [r7, r3]
 8021cd0:	bf54      	ite	pl
 8021cd2:	f003 030f 	andpl.w	r3, r3, #15
 8021cd6:	111b      	asrmi	r3, r3, #4
 8021cd8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021cdc:	b2db      	uxtb	r3, r3
 8021cde:	930e      	str	r3, [sp, #56]	; 0x38
 8021ce0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8021ce4:	b289      	uxth	r1, r1
 8021ce6:	fb02 f301 	mul.w	r3, r2, r1
 8021cea:	0112      	lsls	r2, r2, #4
 8021cec:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8021cf0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8021cf4:	1ad2      	subs	r2, r2, r3
 8021cf6:	b289      	uxth	r1, r1
 8021cf8:	b292      	uxth	r2, r2
 8021cfa:	1a40      	subs	r0, r0, r1
 8021cfc:	fa1f fe80 	uxth.w	lr, r0
 8021d00:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021d02:	4342      	muls	r2, r0
 8021d04:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8021d08:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021d0a:	fb01 c102 	mla	r1, r1, r2, ip
 8021d0e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8021d10:	fb03 1302 	mla	r3, r3, r2, r1
 8021d14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021d18:	2bff      	cmp	r3, #255	; 0xff
 8021d1a:	f040 8094 	bne.w	8021e46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021d1e:	4bbf      	ldr	r3, [pc, #764]	; (802201c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021d20:	681a      	ldr	r2, [r3, #0]
 8021d22:	4bbf      	ldr	r3, [pc, #764]	; (8022020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021d24:	0951      	lsrs	r1, r2, #5
 8021d26:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021d2a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021d2e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021d32:	430b      	orrs	r3, r1
 8021d34:	4313      	orrs	r3, r2
 8021d36:	f8a8 3000 	strh.w	r3, [r8]
 8021d3a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021d3c:	f108 0802 	add.w	r8, r8, #2
 8021d40:	441c      	add	r4, r3
 8021d42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d44:	441e      	add	r6, r3
 8021d46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d48:	3b01      	subs	r3, #1
 8021d4a:	9309      	str	r3, [sp, #36]	; 0x24
 8021d4c:	e76d      	b.n	8021c2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021d4e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021d50:	3d01      	subs	r5, #1
 8021d52:	f109 0902 	add.w	r9, r9, #2
 8021d56:	441c      	add	r4, r3
 8021d58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d5a:	441e      	add	r6, r3
 8021d5c:	e745      	b.n	8021bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021d5e:	d021      	beq.n	8021da4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8021d60:	1e6b      	subs	r3, r5, #1
 8021d62:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021d64:	fb00 4003 	mla	r0, r0, r3, r4
 8021d68:	1400      	asrs	r0, r0, #16
 8021d6a:	f53f af5a 	bmi.w	8021c22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021d6e:	3901      	subs	r1, #1
 8021d70:	4288      	cmp	r0, r1
 8021d72:	f6bf af56 	bge.w	8021c22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021d76:	9920      	ldr	r1, [sp, #128]	; 0x80
 8021d78:	fb01 6303 	mla	r3, r1, r3, r6
 8021d7c:	141b      	asrs	r3, r3, #16
 8021d7e:	f53f af50 	bmi.w	8021c22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021d82:	3a01      	subs	r2, #1
 8021d84:	4293      	cmp	r3, r2
 8021d86:	f6bf af4c 	bge.w	8021c22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021d8a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8021d8e:	46a8      	mov	r8, r5
 8021d90:	46ce      	mov	lr, r9
 8021d92:	9308      	str	r3, [sp, #32]
 8021d94:	f1b8 0f00 	cmp.w	r8, #0
 8021d98:	f300 80b6 	bgt.w	8021f08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021d9c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021da0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021da4:	9b07      	ldr	r3, [sp, #28]
 8021da6:	2b00      	cmp	r3, #0
 8021da8:	f340 817e 	ble.w	80220a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021dac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021db0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021db2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021db6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021dba:	eef0 6a62 	vmov.f32	s13, s5
 8021dbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021dc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021dc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dca:	ee16 4a90 	vmov	r4, s13
 8021dce:	eef0 6a43 	vmov.f32	s13, s6
 8021dd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dd6:	ee16 6a90 	vmov	r6, s13
 8021dda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021dde:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021de2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021de6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021dea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021dee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021df2:	ee12 2a90 	vmov	r2, s5
 8021df6:	eef0 2a47 	vmov.f32	s5, s14
 8021dfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dfe:	ee13 2a10 	vmov	r2, s6
 8021e02:	931f      	str	r3, [sp, #124]	; 0x7c
 8021e04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e06:	eeb0 3a67 	vmov.f32	s6, s15
 8021e0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e0e:	9320      	str	r3, [sp, #128]	; 0x80
 8021e10:	9b07      	ldr	r3, [sp, #28]
 8021e12:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021e14:	3b01      	subs	r3, #1
 8021e16:	9307      	str	r3, [sp, #28]
 8021e18:	bf08      	it	eq
 8021e1a:	4615      	moveq	r5, r2
 8021e1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e1e:	bf18      	it	ne
 8021e20:	461d      	movne	r5, r3
 8021e22:	e6d3      	b.n	8021bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021e24:	2900      	cmp	r1, #0
 8021e26:	f43f af5b 	beq.w	8021ce0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8021e2a:	eb0a 0003 	add.w	r0, sl, r3
 8021e2e:	0843      	lsrs	r3, r0, #1
 8021e30:	07c0      	lsls	r0, r0, #31
 8021e32:	5cfb      	ldrb	r3, [r7, r3]
 8021e34:	bf54      	ite	pl
 8021e36:	f003 030f 	andpl.w	r3, r3, #15
 8021e3a:	111b      	asrmi	r3, r3, #4
 8021e3c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021e40:	b2db      	uxtb	r3, r3
 8021e42:	930a      	str	r3, [sp, #40]	; 0x28
 8021e44:	e74c      	b.n	8021ce0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8021e46:	2b00      	cmp	r3, #0
 8021e48:	f43f af77 	beq.w	8021d3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021e4c:	4a73      	ldr	r2, [pc, #460]	; (802201c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021e4e:	fa1f fe83 	uxth.w	lr, r3
 8021e52:	f8b8 c000 	ldrh.w	ip, [r8]
 8021e56:	43db      	mvns	r3, r3
 8021e58:	6810      	ldr	r0, [r2, #0]
 8021e5a:	ea4f 212c 	mov.w	r1, ip, asr #8
 8021e5e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8021e62:	b2db      	uxtb	r3, r3
 8021e64:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021e68:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8021e6c:	fb12 f20e 	smulbb	r2, r2, lr
 8021e70:	b2c0      	uxtb	r0, r0
 8021e72:	fb1b fb0e 	smulbb	fp, fp, lr
 8021e76:	fb01 2103 	mla	r1, r1, r3, r2
 8021e7a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021e7e:	fb10 fe0e 	smulbb	lr, r0, lr
 8021e82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021e86:	b289      	uxth	r1, r1
 8021e88:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021e8c:	fa5f fc8c 	uxtb.w	ip, ip
 8021e90:	fb02 b203 	mla	r2, r2, r3, fp
 8021e94:	1c48      	adds	r0, r1, #1
 8021e96:	fb0c e303 	mla	r3, ip, r3, lr
 8021e9a:	b292      	uxth	r2, r2
 8021e9c:	b29b      	uxth	r3, r3
 8021e9e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8021ea2:	f102 0b01 	add.w	fp, r2, #1
 8021ea6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8021eaa:	1c59      	adds	r1, r3, #1
 8021eac:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8021eb0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021eb4:	0952      	lsrs	r2, r2, #5
 8021eb6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8021eba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021ebe:	4301      	orrs	r1, r0
 8021ec0:	4311      	orrs	r1, r2
 8021ec2:	f8a8 1000 	strh.w	r1, [r8]
 8021ec6:	e738      	b.n	8021d3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021ec8:	f113 0b01 	adds.w	fp, r3, #1
 8021ecc:	f53f af35 	bmi.w	8021d3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021ed0:	45dc      	cmp	ip, fp
 8021ed2:	f6ff af32 	blt.w	8021d3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021ed6:	f110 0b01 	adds.w	fp, r0, #1
 8021eda:	f53f af2e 	bmi.w	8021d3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021ede:	45de      	cmp	lr, fp
 8021ee0:	f6ff af2b 	blt.w	8021d3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021ee4:	9302      	str	r3, [sp, #8]
 8021ee6:	fa0f f38e 	sxth.w	r3, lr
 8021eea:	9a08      	ldr	r2, [sp, #32]
 8021eec:	9301      	str	r3, [sp, #4]
 8021eee:	fa0f f38c 	sxth.w	r3, ip
 8021ef2:	9105      	str	r1, [sp, #20]
 8021ef4:	4641      	mov	r1, r8
 8021ef6:	9300      	str	r3, [sp, #0]
 8021ef8:	4653      	mov	r3, sl
 8021efa:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8021efe:	463a      	mov	r2, r7
 8021f00:	9811      	ldr	r0, [sp, #68]	; 0x44
 8021f02:	f7ff fd73 	bl	80219ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8021f06:	e718      	b.n	8021d3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8021f08:	1422      	asrs	r2, r4, #16
 8021f0a:	9906      	ldr	r1, [sp, #24]
 8021f0c:	1433      	asrs	r3, r6, #16
 8021f0e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021f12:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021f16:	fb01 2303 	mla	r3, r1, r3, r2
 8021f1a:	085a      	lsrs	r2, r3, #1
 8021f1c:	07d9      	lsls	r1, r3, #31
 8021f1e:	5cba      	ldrb	r2, [r7, r2]
 8021f20:	bf54      	ite	pl
 8021f22:	f002 020f 	andpl.w	r2, r2, #15
 8021f26:	1112      	asrmi	r2, r2, #4
 8021f28:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8021f2c:	b2d2      	uxtb	r2, r2
 8021f2e:	2800      	cmp	r0, #0
 8021f30:	d063      	beq.n	8021ffa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8021f32:	f103 0a01 	add.w	sl, r3, #1
 8021f36:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8021f3a:	f01a 0f01 	tst.w	sl, #1
 8021f3e:	5c79      	ldrb	r1, [r7, r1]
 8021f40:	bf0c      	ite	eq
 8021f42:	f001 010f 	andeq.w	r1, r1, #15
 8021f46:	1109      	asrne	r1, r1, #4
 8021f48:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021f4c:	b2c9      	uxtb	r1, r1
 8021f4e:	910f      	str	r1, [sp, #60]	; 0x3c
 8021f50:	f1bc 0f00 	cmp.w	ip, #0
 8021f54:	d01a      	beq.n	8021f8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021f56:	9908      	ldr	r1, [sp, #32]
 8021f58:	440b      	add	r3, r1
 8021f5a:	0859      	lsrs	r1, r3, #1
 8021f5c:	f013 0f01 	tst.w	r3, #1
 8021f60:	f103 0301 	add.w	r3, r3, #1
 8021f64:	5c79      	ldrb	r1, [r7, r1]
 8021f66:	bf0c      	ite	eq
 8021f68:	f001 010f 	andeq.w	r1, r1, #15
 8021f6c:	1109      	asrne	r1, r1, #4
 8021f6e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021f72:	b2c9      	uxtb	r1, r1
 8021f74:	910b      	str	r1, [sp, #44]	; 0x2c
 8021f76:	0859      	lsrs	r1, r3, #1
 8021f78:	07db      	lsls	r3, r3, #31
 8021f7a:	5c79      	ldrb	r1, [r7, r1]
 8021f7c:	bf54      	ite	pl
 8021f7e:	f001 010f 	andpl.w	r1, r1, #15
 8021f82:	1109      	asrmi	r1, r1, #4
 8021f84:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021f88:	b2c9      	uxtb	r1, r1
 8021f8a:	9110      	str	r1, [sp, #64]	; 0x40
 8021f8c:	b280      	uxth	r0, r0
 8021f8e:	fa1f fc8c 	uxth.w	ip, ip
 8021f92:	fb00 f30c 	mul.w	r3, r0, ip
 8021f96:	0100      	lsls	r0, r0, #4
 8021f98:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8021f9c:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8021fa0:	1ac0      	subs	r0, r0, r3
 8021fa2:	fa1f fc8c 	uxth.w	ip, ip
 8021fa6:	b280      	uxth	r0, r0
 8021fa8:	eba1 010c 	sub.w	r1, r1, ip
 8021fac:	fa1f fa81 	uxth.w	sl, r1
 8021fb0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8021fb2:	4348      	muls	r0, r1
 8021fb4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8021fb6:	fb02 020a 	mla	r2, r2, sl, r0
 8021fba:	fb0c 2c01 	mla	ip, ip, r1, r2
 8021fbe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021fc0:	fb03 c302 	mla	r3, r3, r2, ip
 8021fc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021fc8:	2bff      	cmp	r3, #255	; 0xff
 8021fca:	d12b      	bne.n	8022024 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8021fcc:	4b13      	ldr	r3, [pc, #76]	; (802201c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021fce:	681a      	ldr	r2, [r3, #0]
 8021fd0:	4b13      	ldr	r3, [pc, #76]	; (8022020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021fd2:	0951      	lsrs	r1, r2, #5
 8021fd4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021fd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021fdc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021fe0:	430b      	orrs	r3, r1
 8021fe2:	4313      	orrs	r3, r2
 8021fe4:	f8ae 3000 	strh.w	r3, [lr]
 8021fe8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021fea:	f10e 0e02 	add.w	lr, lr, #2
 8021fee:	f108 38ff 	add.w	r8, r8, #4294967295
 8021ff2:	441c      	add	r4, r3
 8021ff4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021ff6:	441e      	add	r6, r3
 8021ff8:	e6cc      	b.n	8021d94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8021ffa:	f1bc 0f00 	cmp.w	ip, #0
 8021ffe:	d0c5      	beq.n	8021f8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022000:	9908      	ldr	r1, [sp, #32]
 8022002:	440b      	add	r3, r1
 8022004:	0859      	lsrs	r1, r3, #1
 8022006:	07db      	lsls	r3, r3, #31
 8022008:	5c79      	ldrb	r1, [r7, r1]
 802200a:	bf54      	ite	pl
 802200c:	f001 010f 	andpl.w	r1, r1, #15
 8022010:	1109      	asrmi	r1, r1, #4
 8022012:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022016:	b2c9      	uxtb	r1, r1
 8022018:	910b      	str	r1, [sp, #44]	; 0x2c
 802201a:	e7b7      	b.n	8021f8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802201c:	24001ee0 	.word	0x24001ee0
 8022020:	fffff800 	.word	0xfffff800
 8022024:	2b00      	cmp	r3, #0
 8022026:	d0df      	beq.n	8021fe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8022028:	4a21      	ldr	r2, [pc, #132]	; (80220b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802202a:	fa1f fa83 	uxth.w	sl, r3
 802202e:	f8be c000 	ldrh.w	ip, [lr]
 8022032:	43db      	mvns	r3, r3
 8022034:	6810      	ldr	r0, [r2, #0]
 8022036:	ea4f 212c 	mov.w	r1, ip, asr #8
 802203a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802203e:	b2db      	uxtb	r3, r3
 8022040:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022044:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022048:	fb12 f20a 	smulbb	r2, r2, sl
 802204c:	b2c0      	uxtb	r0, r0
 802204e:	fb1b fb0a 	smulbb	fp, fp, sl
 8022052:	fb01 2103 	mla	r1, r1, r3, r2
 8022056:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802205a:	fb10 f00a 	smulbb	r0, r0, sl
 802205e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022062:	b289      	uxth	r1, r1
 8022064:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022068:	fa5f fc8c 	uxtb.w	ip, ip
 802206c:	fb02 b203 	mla	r2, r2, r3, fp
 8022070:	fb0c 0003 	mla	r0, ip, r3, r0
 8022074:	1c4b      	adds	r3, r1, #1
 8022076:	b292      	uxth	r2, r2
 8022078:	b280      	uxth	r0, r0
 802207a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802207e:	f100 0b01 	add.w	fp, r0, #1
 8022082:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022086:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802208a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802208e:	ea4b 0101 	orr.w	r1, fp, r1
 8022092:	f102 0b01 	add.w	fp, r2, #1
 8022096:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802209a:	0952      	lsrs	r2, r2, #5
 802209c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80220a0:	4311      	orrs	r1, r2
 80220a2:	f8ae 1000 	strh.w	r1, [lr]
 80220a6:	e79f      	b.n	8021fe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 80220a8:	b013      	add	sp, #76	; 0x4c
 80220aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80220ae:	bf00      	nop
 80220b0:	24001ee0 	.word	0x24001ee0

080220b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80220b4:	b570      	push	{r4, r5, r6, lr}
 80220b6:	1208      	asrs	r0, r1, #8
 80220b8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80220bc:	b29e      	uxth	r6, r3
 80220be:	1213      	asrs	r3, r2, #8
 80220c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80220c4:	10cc      	asrs	r4, r1, #3
 80220c6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80220ca:	00c9      	lsls	r1, r1, #3
 80220cc:	fb10 f006 	smulbb	r0, r0, r6
 80220d0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80220d4:	fb13 f305 	smulbb	r3, r3, r5
 80220d8:	fb14 f406 	smulbb	r4, r4, r6
 80220dc:	4418      	add	r0, r3
 80220de:	10d3      	asrs	r3, r2, #3
 80220e0:	00d2      	lsls	r2, r2, #3
 80220e2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80220e6:	b280      	uxth	r0, r0
 80220e8:	b2d2      	uxtb	r2, r2
 80220ea:	fb13 f305 	smulbb	r3, r3, r5
 80220ee:	fb12 f205 	smulbb	r2, r2, r5
 80220f2:	441c      	add	r4, r3
 80220f4:	b2cb      	uxtb	r3, r1
 80220f6:	fb13 f306 	smulbb	r3, r3, r6
 80220fa:	b2a4      	uxth	r4, r4
 80220fc:	4413      	add	r3, r2
 80220fe:	1c42      	adds	r2, r0, #1
 8022100:	b29b      	uxth	r3, r3
 8022102:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022106:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802210a:	1c58      	adds	r0, r3, #1
 802210c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022110:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022114:	4310      	orrs	r0, r2
 8022116:	1c62      	adds	r2, r4, #1
 8022118:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802211c:	0964      	lsrs	r4, r4, #5
 802211e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022122:	4320      	orrs	r0, r4
 8022124:	bd70      	pop	{r4, r5, r6, pc}
	...

08022128 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8022128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802212c:	b08f      	sub	sp, #60	; 0x3c
 802212e:	461c      	mov	r4, r3
 8022130:	460d      	mov	r5, r1
 8022132:	4616      	mov	r6, r2
 8022134:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8022138:	9004      	str	r0, [sp, #16]
 802213a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802213c:	2f00      	cmp	r7, #0
 802213e:	f000 80f6 	beq.w	802232e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8022142:	6820      	ldr	r0, [r4, #0]
 8022144:	aa0a      	add	r2, sp, #40	; 0x28
 8022146:	6861      	ldr	r1, [r4, #4]
 8022148:	f04f 0802 	mov.w	r8, #2
 802214c:	3604      	adds	r6, #4
 802214e:	c203      	stmia	r2!, {r0, r1}
 8022150:	6818      	ldr	r0, [r3, #0]
 8022152:	aa0c      	add	r2, sp, #48	; 0x30
 8022154:	6859      	ldr	r1, [r3, #4]
 8022156:	c203      	stmia	r2!, {r0, r1}
 8022158:	a80a      	add	r0, sp, #40	; 0x28
 802215a:	f7f0 f9e7 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802215e:	4621      	mov	r1, r4
 8022160:	a80c      	add	r0, sp, #48	; 0x30
 8022162:	f7f0 fa0b 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022166:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802216a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802216e:	f002 0301 	and.w	r3, r2, #1
 8022172:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8022176:	9306      	str	r3, [sp, #24]
 8022178:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802217c:	f003 0101 	and.w	r1, r3, #1
 8022180:	9105      	str	r1, [sp, #20]
 8022182:	9805      	ldr	r0, [sp, #20]
 8022184:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8022188:	4403      	add	r3, r0
 802218a:	fb01 2303 	mla	r3, r1, r3, r2
 802218e:	fb93 f3f8 	sdiv	r3, r3, r8
 8022192:	441d      	add	r5, r3
 8022194:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8022198:	441a      	add	r2, r3
 802219a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802219e:	4419      	add	r1, r3
 80221a0:	4b64      	ldr	r3, [pc, #400]	; (8022334 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80221a2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80221a6:	6818      	ldr	r0, [r3, #0]
 80221a8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80221ac:	6803      	ldr	r3, [r0, #0]
 80221ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80221b0:	4798      	blx	r3
 80221b2:	4a61      	ldr	r2, [pc, #388]	; (8022338 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80221b4:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80221b8:	2fff      	cmp	r7, #255	; 0xff
 80221ba:	8813      	ldrh	r3, [r2, #0]
 80221bc:	4611      	mov	r1, r2
 80221be:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80221c2:	fb03 fb0b 	mul.w	fp, r3, fp
 80221c6:	fb03 a404 	mla	r4, r3, r4, sl
 80221ca:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80221ce:	d06b      	beq.n	80222a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 80221d0:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80221d4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80221d8:	9303      	str	r3, [sp, #12]
 80221da:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80221de:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80221e2:	9b07      	ldr	r3, [sp, #28]
 80221e4:	42a3      	cmp	r3, r4
 80221e6:	f240 809d 	bls.w	8022324 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80221ea:	9b06      	ldr	r3, [sp, #24]
 80221ec:	2b00      	cmp	r3, #0
 80221ee:	d039      	beq.n	8022264 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 80221f0:	782b      	ldrb	r3, [r5, #0]
 80221f2:	f105 0801 	add.w	r8, r5, #1
 80221f6:	f109 3bff 	add.w	fp, r9, #4294967295
 80221fa:	8822      	ldrh	r2, [r4, #0]
 80221fc:	f003 030f 	and.w	r3, r3, #15
 8022200:	9804      	ldr	r0, [sp, #16]
 8022202:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022206:	9b03      	ldr	r3, [sp, #12]
 8022208:	9300      	str	r3, [sp, #0]
 802220a:	463b      	mov	r3, r7
 802220c:	f7ff ff52 	bl	80220b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022210:	f824 0b02 	strh.w	r0, [r4], #2
 8022214:	f1bb 0f01 	cmp.w	fp, #1
 8022218:	46a2      	mov	sl, r4
 802221a:	f104 0404 	add.w	r4, r4, #4
 802221e:	dd24      	ble.n	802226a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8022220:	f898 3000 	ldrb.w	r3, [r8]
 8022224:	f1ab 0b02 	sub.w	fp, fp, #2
 8022228:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802222c:	091b      	lsrs	r3, r3, #4
 802222e:	9804      	ldr	r0, [sp, #16]
 8022230:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022234:	9b03      	ldr	r3, [sp, #12]
 8022236:	9300      	str	r3, [sp, #0]
 8022238:	463b      	mov	r3, r7
 802223a:	f7ff ff3b 	bl	80220b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802223e:	f824 0c04 	strh.w	r0, [r4, #-4]
 8022242:	f818 3b01 	ldrb.w	r3, [r8], #1
 8022246:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802224a:	f003 030f 	and.w	r3, r3, #15
 802224e:	9804      	ldr	r0, [sp, #16]
 8022250:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022254:	9b03      	ldr	r3, [sp, #12]
 8022256:	9300      	str	r3, [sp, #0]
 8022258:	463b      	mov	r3, r7
 802225a:	f7ff ff2b 	bl	80220b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802225e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8022262:	e7d7      	b.n	8022214 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8022264:	46a8      	mov	r8, r5
 8022266:	46cb      	mov	fp, r9
 8022268:	e7d4      	b.n	8022214 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 802226a:	d10e      	bne.n	802228a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 802226c:	f898 3000 	ldrb.w	r3, [r8]
 8022270:	f8ba 2000 	ldrh.w	r2, [sl]
 8022274:	091b      	lsrs	r3, r3, #4
 8022276:	9804      	ldr	r0, [sp, #16]
 8022278:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802227c:	9b03      	ldr	r3, [sp, #12]
 802227e:	9300      	str	r3, [sp, #0]
 8022280:	463b      	mov	r3, r7
 8022282:	f7ff ff17 	bl	80220b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022286:	f82a 0b02 	strh.w	r0, [sl], #2
 802228a:	9b08      	ldr	r3, [sp, #32]
 802228c:	9a05      	ldr	r2, [sp, #20]
 802228e:	881c      	ldrh	r4, [r3, #0]
 8022290:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8022294:	eba4 0409 	sub.w	r4, r4, r9
 8022298:	4413      	add	r3, r2
 802229a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802229c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80222a0:	fb93 f3f2 	sdiv	r3, r3, r2
 80222a4:	441d      	add	r5, r3
 80222a6:	e79c      	b.n	80221e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 80222a8:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80222ac:	45a3      	cmp	fp, r4
 80222ae:	d939      	bls.n	8022324 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80222b0:	9b06      	ldr	r3, [sp, #24]
 80222b2:	b1fb      	cbz	r3, 80222f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80222b4:	782b      	ldrb	r3, [r5, #0]
 80222b6:	1c6a      	adds	r2, r5, #1
 80222b8:	f109 30ff 	add.w	r0, r9, #4294967295
 80222bc:	3402      	adds	r4, #2
 80222be:	f003 030f 	and.w	r3, r3, #15
 80222c2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80222c6:	f824 3c02 	strh.w	r3, [r4, #-2]
 80222ca:	2801      	cmp	r0, #1
 80222cc:	4623      	mov	r3, r4
 80222ce:	f104 0404 	add.w	r4, r4, #4
 80222d2:	dd12      	ble.n	80222fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80222d4:	7813      	ldrb	r3, [r2, #0]
 80222d6:	3802      	subs	r0, #2
 80222d8:	091b      	lsrs	r3, r3, #4
 80222da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80222de:	f824 3c04 	strh.w	r3, [r4, #-4]
 80222e2:	f812 3b01 	ldrb.w	r3, [r2], #1
 80222e6:	f003 030f 	and.w	r3, r3, #15
 80222ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80222ee:	f824 3c02 	strh.w	r3, [r4, #-2]
 80222f2:	e7ea      	b.n	80222ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80222f4:	462a      	mov	r2, r5
 80222f6:	4648      	mov	r0, r9
 80222f8:	e7e7      	b.n	80222ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80222fa:	d106      	bne.n	802230a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80222fc:	7812      	ldrb	r2, [r2, #0]
 80222fe:	3302      	adds	r3, #2
 8022300:	0912      	lsrs	r2, r2, #4
 8022302:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8022306:	f823 2c02 	strh.w	r2, [r3, #-2]
 802230a:	880c      	ldrh	r4, [r1, #0]
 802230c:	9a05      	ldr	r2, [sp, #20]
 802230e:	eba4 0409 	sub.w	r4, r4, r9
 8022312:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8022316:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802231a:	4413      	add	r3, r2
 802231c:	fb93 f3f8 	sdiv	r3, r3, r8
 8022320:	441d      	add	r5, r3
 8022322:	e7c3      	b.n	80222ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 8022324:	4b03      	ldr	r3, [pc, #12]	; (8022334 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8022326:	6818      	ldr	r0, [r3, #0]
 8022328:	6803      	ldr	r3, [r0, #0]
 802232a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802232c:	4798      	blx	r3
 802232e:	b00f      	add	sp, #60	; 0x3c
 8022330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022334:	24001ed8 	.word	0x24001ed8
 8022338:	24001ed2 	.word	0x24001ed2

0802233c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802233c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802233e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8022342:	0a0f      	lsrs	r7, r1, #8
 8022344:	2dff      	cmp	r5, #255	; 0xff
 8022346:	d10c      	bne.n	8022362 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8022348:	2bff      	cmp	r3, #255	; 0xff
 802234a:	d10a      	bne.n	8022362 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802234c:	0948      	lsrs	r0, r1, #5
 802234e:	4b25      	ldr	r3, [pc, #148]	; (80223e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8022350:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8022354:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022358:	403b      	ands	r3, r7
 802235a:	4318      	orrs	r0, r3
 802235c:	4308      	orrs	r0, r1
 802235e:	b280      	uxth	r0, r0
 8022360:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022362:	fb15 f503 	smulbb	r5, r5, r3
 8022366:	1214      	asrs	r4, r2, #8
 8022368:	10d6      	asrs	r6, r2, #3
 802236a:	b2ab      	uxth	r3, r5
 802236c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8022370:	00d0      	lsls	r0, r2, #3
 8022372:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8022376:	1c5d      	adds	r5, r3, #1
 8022378:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802237c:	b2c0      	uxtb	r0, r0
 802237e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022382:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8022386:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802238a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802238e:	fa1f fc85 	uxth.w	ip, r5
 8022392:	43ed      	mvns	r5, r5
 8022394:	fb12 f20c 	smulbb	r2, r2, ip
 8022398:	b2eb      	uxtb	r3, r5
 802239a:	b2fd      	uxtb	r5, r7
 802239c:	fb04 2403 	mla	r4, r4, r3, r2
 80223a0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80223a4:	fb15 f50c 	smulbb	r5, r5, ip
 80223a8:	b2c8      	uxtb	r0, r1
 80223aa:	b2a4      	uxth	r4, r4
 80223ac:	fb10 f00c 	smulbb	r0, r0, ip
 80223b0:	fb06 5503 	mla	r5, r6, r3, r5
 80223b4:	fb02 0003 	mla	r0, r2, r3, r0
 80223b8:	b2ad      	uxth	r5, r5
 80223ba:	b283      	uxth	r3, r0
 80223bc:	1c60      	adds	r0, r4, #1
 80223be:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80223c2:	1c58      	adds	r0, r3, #1
 80223c4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80223c8:	1c6b      	adds	r3, r5, #1
 80223ca:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80223ce:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80223d2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80223d6:	096d      	lsrs	r5, r5, #5
 80223d8:	4320      	orrs	r0, r4
 80223da:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80223de:	4328      	orrs	r0, r5
 80223e0:	e7be      	b.n	8022360 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 80223e2:	bf00      	nop
 80223e4:	00fff800 	.word	0x00fff800

080223e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80223e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223ec:	461c      	mov	r4, r3
 80223ee:	b08d      	sub	sp, #52	; 0x34
 80223f0:	460d      	mov	r5, r1
 80223f2:	4616      	mov	r6, r2
 80223f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80223f6:	4680      	mov	r8, r0
 80223f8:	6861      	ldr	r1, [r4, #4]
 80223fa:	aa08      	add	r2, sp, #32
 80223fc:	6820      	ldr	r0, [r4, #0]
 80223fe:	f04f 0a02 	mov.w	sl, #2
 8022402:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8022406:	3604      	adds	r6, #4
 8022408:	c203      	stmia	r2!, {r0, r1}
 802240a:	6818      	ldr	r0, [r3, #0]
 802240c:	aa0a      	add	r2, sp, #40	; 0x28
 802240e:	6859      	ldr	r1, [r3, #4]
 8022410:	c203      	stmia	r2!, {r0, r1}
 8022412:	a808      	add	r0, sp, #32
 8022414:	f7f0 f88a 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022418:	4621      	mov	r1, r4
 802241a:	a80a      	add	r0, sp, #40	; 0x28
 802241c:	f7f0 f8ae 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022420:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8022424:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8022428:	f002 0301 	and.w	r3, r2, #1
 802242c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8022430:	9303      	str	r3, [sp, #12]
 8022432:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8022436:	f003 0101 	and.w	r1, r3, #1
 802243a:	9102      	str	r1, [sp, #8]
 802243c:	9802      	ldr	r0, [sp, #8]
 802243e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8022442:	4403      	add	r3, r0
 8022444:	fb01 2303 	mla	r3, r1, r3, r2
 8022448:	fb93 f3fa 	sdiv	r3, r3, sl
 802244c:	441d      	add	r5, r3
 802244e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8022452:	441a      	add	r2, r3
 8022454:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8022458:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802245c:	4419      	add	r1, r3
 802245e:	4a3e      	ldr	r2, [pc, #248]	; (8022558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8022460:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8022464:	6810      	ldr	r0, [r2, #0]
 8022466:	9205      	str	r2, [sp, #20]
 8022468:	6803      	ldr	r3, [r0, #0]
 802246a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802246c:	4798      	blx	r3
 802246e:	4b3b      	ldr	r3, [pc, #236]	; (802255c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8022470:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8022474:	8819      	ldrh	r1, [r3, #0]
 8022476:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802247a:	434f      	muls	r7, r1
 802247c:	fb01 c404 	mla	r4, r1, r4, ip
 8022480:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022484:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8022488:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802248c:	9204      	str	r2, [sp, #16]
 802248e:	9b04      	ldr	r3, [sp, #16]
 8022490:	429c      	cmp	r4, r3
 8022492:	d258      	bcs.n	8022546 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8022494:	9b03      	ldr	r3, [sp, #12]
 8022496:	2b00      	cmp	r3, #0
 8022498:	d034      	beq.n	8022504 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802249a:	782b      	ldrb	r3, [r5, #0]
 802249c:	1c6f      	adds	r7, r5, #1
 802249e:	f003 030f 	and.w	r3, r3, #15
 80224a2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80224a6:	0e0b      	lsrs	r3, r1, #24
 80224a8:	d006      	beq.n	80224b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80224aa:	8822      	ldrh	r2, [r4, #0]
 80224ac:	4640      	mov	r0, r8
 80224ae:	9300      	str	r3, [sp, #0]
 80224b0:	464b      	mov	r3, r9
 80224b2:	f7ff ff43 	bl	802233c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80224b6:	8020      	strh	r0, [r4, #0]
 80224b8:	3402      	adds	r4, #2
 80224ba:	f10b 3aff 	add.w	sl, fp, #4294967295
 80224be:	f1ba 0f01 	cmp.w	sl, #1
 80224c2:	dd22      	ble.n	802250a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80224c4:	783b      	ldrb	r3, [r7, #0]
 80224c6:	091b      	lsrs	r3, r3, #4
 80224c8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80224cc:	0e0b      	lsrs	r3, r1, #24
 80224ce:	d006      	beq.n	80224de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80224d0:	8822      	ldrh	r2, [r4, #0]
 80224d2:	4640      	mov	r0, r8
 80224d4:	9300      	str	r3, [sp, #0]
 80224d6:	464b      	mov	r3, r9
 80224d8:	f7ff ff30 	bl	802233c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80224dc:	8020      	strh	r0, [r4, #0]
 80224de:	f817 3b01 	ldrb.w	r3, [r7], #1
 80224e2:	f003 030f 	and.w	r3, r3, #15
 80224e6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80224ea:	0e0b      	lsrs	r3, r1, #24
 80224ec:	d006      	beq.n	80224fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80224ee:	8862      	ldrh	r2, [r4, #2]
 80224f0:	4640      	mov	r0, r8
 80224f2:	9300      	str	r3, [sp, #0]
 80224f4:	464b      	mov	r3, r9
 80224f6:	f7ff ff21 	bl	802233c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80224fa:	8060      	strh	r0, [r4, #2]
 80224fc:	3404      	adds	r4, #4
 80224fe:	f1aa 0a02 	sub.w	sl, sl, #2
 8022502:	e7dc      	b.n	80224be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8022504:	462f      	mov	r7, r5
 8022506:	46da      	mov	sl, fp
 8022508:	e7d9      	b.n	80224be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802250a:	d10d      	bne.n	8022528 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802250c:	783b      	ldrb	r3, [r7, #0]
 802250e:	091b      	lsrs	r3, r3, #4
 8022510:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8022514:	0e0b      	lsrs	r3, r1, #24
 8022516:	d006      	beq.n	8022526 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8022518:	8822      	ldrh	r2, [r4, #0]
 802251a:	4640      	mov	r0, r8
 802251c:	9300      	str	r3, [sp, #0]
 802251e:	464b      	mov	r3, r9
 8022520:	f7ff ff0c 	bl	802233c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8022524:	8020      	strh	r0, [r4, #0]
 8022526:	3402      	adds	r4, #2
 8022528:	9b06      	ldr	r3, [sp, #24]
 802252a:	9a02      	ldr	r2, [sp, #8]
 802252c:	881b      	ldrh	r3, [r3, #0]
 802252e:	eba3 030b 	sub.w	r3, r3, fp
 8022532:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022536:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802253a:	4413      	add	r3, r2
 802253c:	9a07      	ldr	r2, [sp, #28]
 802253e:	fb93 f3f2 	sdiv	r3, r3, r2
 8022542:	441d      	add	r5, r3
 8022544:	e7a3      	b.n	802248e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8022546:	9b05      	ldr	r3, [sp, #20]
 8022548:	6818      	ldr	r0, [r3, #0]
 802254a:	6803      	ldr	r3, [r0, #0]
 802254c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802254e:	4798      	blx	r3
 8022550:	b00d      	add	sp, #52	; 0x34
 8022552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022556:	bf00      	nop
 8022558:	24001ed8 	.word	0x24001ed8
 802255c:	24001ed2 	.word	0x24001ed2

08022560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8022560:	b570      	push	{r4, r5, r6, lr}
 8022562:	1214      	asrs	r4, r2, #8
 8022564:	788d      	ldrb	r5, [r1, #2]
 8022566:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802256a:	10d0      	asrs	r0, r2, #3
 802256c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8022570:	00d2      	lsls	r2, r2, #3
 8022572:	fb15 f503 	smulbb	r5, r5, r3
 8022576:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802257a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802257e:	b2d2      	uxtb	r2, r2
 8022580:	fb04 5506 	mla	r5, r4, r6, r5
 8022584:	784c      	ldrb	r4, [r1, #1]
 8022586:	7809      	ldrb	r1, [r1, #0]
 8022588:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802258c:	fb14 f403 	smulbb	r4, r4, r3
 8022590:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022594:	fb11 f303 	smulbb	r3, r1, r3
 8022598:	b2ad      	uxth	r5, r5
 802259a:	fb00 4406 	mla	r4, r0, r6, r4
 802259e:	fb02 3306 	mla	r3, r2, r6, r3
 80225a2:	1c68      	adds	r0, r5, #1
 80225a4:	b2a4      	uxth	r4, r4
 80225a6:	b29b      	uxth	r3, r3
 80225a8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80225ac:	1c62      	adds	r2, r4, #1
 80225ae:	1c58      	adds	r0, r3, #1
 80225b0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80225b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80225b8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80225bc:	0964      	lsrs	r4, r4, #5
 80225be:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80225c2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80225c6:	4328      	orrs	r0, r5
 80225c8:	4320      	orrs	r0, r4
 80225ca:	bd70      	pop	{r4, r5, r6, pc}

080225cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80225cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225d0:	b08f      	sub	sp, #60	; 0x3c
 80225d2:	461c      	mov	r4, r3
 80225d4:	4682      	mov	sl, r0
 80225d6:	460e      	mov	r6, r1
 80225d8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80225dc:	4615      	mov	r5, r2
 80225de:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80225e0:	2f00      	cmp	r7, #0
 80225e2:	f000 8141 	beq.w	8022868 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 80225e6:	6820      	ldr	r0, [r4, #0]
 80225e8:	aa0a      	add	r2, sp, #40	; 0x28
 80225ea:	6861      	ldr	r1, [r4, #4]
 80225ec:	f04f 0802 	mov.w	r8, #2
 80225f0:	3504      	adds	r5, #4
 80225f2:	c203      	stmia	r2!, {r0, r1}
 80225f4:	6818      	ldr	r0, [r3, #0]
 80225f6:	aa0c      	add	r2, sp, #48	; 0x30
 80225f8:	6859      	ldr	r1, [r3, #4]
 80225fa:	c203      	stmia	r2!, {r0, r1}
 80225fc:	a80a      	add	r0, sp, #40	; 0x28
 80225fe:	f7ef ff95 	bl	801252c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022602:	4621      	mov	r1, r4
 8022604:	a80c      	add	r0, sp, #48	; 0x30
 8022606:	f7ef ffb9 	bl	801257c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802260a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802260e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8022612:	f002 0301 	and.w	r3, r2, #1
 8022616:	9306      	str	r3, [sp, #24]
 8022618:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802261c:	f003 0101 	and.w	r1, r3, #1
 8022620:	9105      	str	r1, [sp, #20]
 8022622:	9805      	ldr	r0, [sp, #20]
 8022624:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8022628:	4403      	add	r3, r0
 802262a:	fb01 2303 	mla	r3, r1, r3, r2
 802262e:	fb93 f3f8 	sdiv	r3, r3, r8
 8022632:	441e      	add	r6, r3
 8022634:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8022638:	441a      	add	r2, r3
 802263a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802263e:	4419      	add	r1, r3
 8022640:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8022644:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8022648:	9303      	str	r3, [sp, #12]
 802264a:	4b89      	ldr	r3, [pc, #548]	; (8022870 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802264c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8022650:	6818      	ldr	r0, [r3, #0]
 8022652:	6803      	ldr	r3, [r0, #0]
 8022654:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8022656:	4798      	blx	r3
 8022658:	4a86      	ldr	r2, [pc, #536]	; (8022874 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802265a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802265e:	2fff      	cmp	r7, #255	; 0xff
 8022660:	8813      	ldrh	r3, [r2, #0]
 8022662:	4694      	mov	ip, r2
 8022664:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8022668:	fb03 9404 	mla	r4, r3, r4, r9
 802266c:	fb03 f30b 	mul.w	r3, r3, fp
 8022670:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022674:	d071      	beq.n	802275a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 8022676:	43f9      	mvns	r1, r7
 8022678:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802267c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8022680:	b2c9      	uxtb	r1, r1
 8022682:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8022686:	9104      	str	r1, [sp, #16]
 8022688:	9b07      	ldr	r3, [sp, #28]
 802268a:	42a3      	cmp	r3, r4
 802268c:	f240 80e7 	bls.w	802285e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8022690:	9b06      	ldr	r3, [sp, #24]
 8022692:	2b00      	cmp	r3, #0
 8022694:	d03d      	beq.n	8022712 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8022696:	7831      	ldrb	r1, [r6, #0]
 8022698:	4650      	mov	r0, sl
 802269a:	9b04      	ldr	r3, [sp, #16]
 802269c:	f106 0801 	add.w	r8, r6, #1
 80226a0:	f001 010f 	and.w	r1, r1, #15
 80226a4:	8822      	ldrh	r2, [r4, #0]
 80226a6:	9300      	str	r3, [sp, #0]
 80226a8:	463b      	mov	r3, r7
 80226aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80226ae:	4429      	add	r1, r5
 80226b0:	f7ff ff56 	bl	8022560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80226b4:	9b03      	ldr	r3, [sp, #12]
 80226b6:	f824 0b02 	strh.w	r0, [r4], #2
 80226ba:	f103 3bff 	add.w	fp, r3, #4294967295
 80226be:	f1bb 0f01 	cmp.w	fp, #1
 80226c2:	46a1      	mov	r9, r4
 80226c4:	f104 0404 	add.w	r4, r4, #4
 80226c8:	dd27      	ble.n	802271a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 80226ca:	f898 1000 	ldrb.w	r1, [r8]
 80226ce:	4650      	mov	r0, sl
 80226d0:	9b04      	ldr	r3, [sp, #16]
 80226d2:	f1ab 0b02 	sub.w	fp, fp, #2
 80226d6:	0909      	lsrs	r1, r1, #4
 80226d8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80226dc:	9300      	str	r3, [sp, #0]
 80226de:	463b      	mov	r3, r7
 80226e0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80226e4:	4429      	add	r1, r5
 80226e6:	f7ff ff3b 	bl	8022560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80226ea:	f824 0c04 	strh.w	r0, [r4, #-4]
 80226ee:	f818 1b01 	ldrb.w	r1, [r8], #1
 80226f2:	4650      	mov	r0, sl
 80226f4:	9b04      	ldr	r3, [sp, #16]
 80226f6:	f001 010f 	and.w	r1, r1, #15
 80226fa:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80226fe:	9300      	str	r3, [sp, #0]
 8022700:	463b      	mov	r3, r7
 8022702:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022706:	4429      	add	r1, r5
 8022708:	f7ff ff2a 	bl	8022560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802270c:	f824 0c02 	strh.w	r0, [r4, #-2]
 8022710:	e7d5      	b.n	80226be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8022712:	46b0      	mov	r8, r6
 8022714:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8022718:	e7d1      	b.n	80226be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 802271a:	d10f      	bne.n	802273c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 802271c:	f898 1000 	ldrb.w	r1, [r8]
 8022720:	4650      	mov	r0, sl
 8022722:	9b04      	ldr	r3, [sp, #16]
 8022724:	0909      	lsrs	r1, r1, #4
 8022726:	f8b9 2000 	ldrh.w	r2, [r9]
 802272a:	9300      	str	r3, [sp, #0]
 802272c:	463b      	mov	r3, r7
 802272e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022732:	4429      	add	r1, r5
 8022734:	f7ff ff14 	bl	8022560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8022738:	f829 0b02 	strh.w	r0, [r9], #2
 802273c:	9b08      	ldr	r3, [sp, #32]
 802273e:	9a05      	ldr	r2, [sp, #20]
 8022740:	881c      	ldrh	r4, [r3, #0]
 8022742:	9b03      	ldr	r3, [sp, #12]
 8022744:	1ae4      	subs	r4, r4, r3
 8022746:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802274a:	4413      	add	r3, r2
 802274c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802274e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022752:	fb93 f3f2 	sdiv	r3, r3, r2
 8022756:	441e      	add	r6, r3
 8022758:	e796      	b.n	8022688 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 802275a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802275e:	4f46      	ldr	r7, [pc, #280]	; (8022878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8022760:	42a3      	cmp	r3, r4
 8022762:	d97c      	bls.n	802285e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8022764:	9a06      	ldr	r2, [sp, #24]
 8022766:	2a00      	cmp	r2, #0
 8022768:	d054      	beq.n	8022814 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 802276a:	7830      	ldrb	r0, [r6, #0]
 802276c:	1c71      	adds	r1, r6, #1
 802276e:	f000 000f 	and.w	r0, r0, #15
 8022772:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022776:	eb05 0e00 	add.w	lr, r5, r0
 802277a:	5c28      	ldrb	r0, [r5, r0]
 802277c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8022780:	f89e e001 	ldrb.w	lr, [lr, #1]
 8022784:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8022788:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802278c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022790:	ea42 020e 	orr.w	r2, r2, lr
 8022794:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8022798:	f824 2b02 	strh.w	r2, [r4], #2
 802279c:	9a03      	ldr	r2, [sp, #12]
 802279e:	f102 3eff 	add.w	lr, r2, #4294967295
 80227a2:	f1be 0f01 	cmp.w	lr, #1
 80227a6:	4620      	mov	r0, r4
 80227a8:	f104 0404 	add.w	r4, r4, #4
 80227ac:	dd36      	ble.n	802281c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 80227ae:	7808      	ldrb	r0, [r1, #0]
 80227b0:	f1ae 0e02 	sub.w	lr, lr, #2
 80227b4:	0900      	lsrs	r0, r0, #4
 80227b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80227ba:	eb05 0a00 	add.w	sl, r5, r0
 80227be:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80227c2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80227c6:	00d2      	lsls	r2, r2, #3
 80227c8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80227cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80227d0:	ea49 0202 	orr.w	r2, r9, r2
 80227d4:	f815 9000 	ldrb.w	r9, [r5, r0]
 80227d8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80227dc:	f824 2c04 	strh.w	r2, [r4, #-4]
 80227e0:	f811 0b01 	ldrb.w	r0, [r1], #1
 80227e4:	f000 000f 	and.w	r0, r0, #15
 80227e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80227ec:	eb05 0a00 	add.w	sl, r5, r0
 80227f0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80227f4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80227f8:	00d2      	lsls	r2, r2, #3
 80227fa:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80227fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022802:	ea49 0202 	orr.w	r2, r9, r2
 8022806:	f815 9000 	ldrb.w	r9, [r5, r0]
 802280a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802280e:	f824 2c02 	strh.w	r2, [r4, #-2]
 8022812:	e7c6      	b.n	80227a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8022814:	4631      	mov	r1, r6
 8022816:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802281a:	e7c2      	b.n	80227a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802281c:	d111      	bne.n	8022842 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 802281e:	7809      	ldrb	r1, [r1, #0]
 8022820:	0909      	lsrs	r1, r1, #4
 8022822:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022826:	186c      	adds	r4, r5, r1
 8022828:	5c69      	ldrb	r1, [r5, r1]
 802282a:	78a2      	ldrb	r2, [r4, #2]
 802282c:	7864      	ldrb	r4, [r4, #1]
 802282e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8022832:	00e4      	lsls	r4, r4, #3
 8022834:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022838:	4322      	orrs	r2, r4
 802283a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802283e:	f820 2b02 	strh.w	r2, [r0], #2
 8022842:	9a03      	ldr	r2, [sp, #12]
 8022844:	f8bc 4000 	ldrh.w	r4, [ip]
 8022848:	9905      	ldr	r1, [sp, #20]
 802284a:	1aa4      	subs	r4, r4, r2
 802284c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8022850:	440a      	add	r2, r1
 8022852:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022856:	fb92 f2f8 	sdiv	r2, r2, r8
 802285a:	4416      	add	r6, r2
 802285c:	e780      	b.n	8022760 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 802285e:	4b04      	ldr	r3, [pc, #16]	; (8022870 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8022860:	6818      	ldr	r0, [r3, #0]
 8022862:	6803      	ldr	r3, [r0, #0]
 8022864:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8022866:	4798      	blx	r3
 8022868:	b00f      	add	sp, #60	; 0x3c
 802286a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802286e:	bf00      	nop
 8022870:	24001ed8 	.word	0x24001ed8
 8022874:	24001ed2 	.word	0x24001ed2
 8022878:	fffff800 	.word	0xfffff800

0802287c <CRC_Lock>:
 802287c:	4a20      	ldr	r2, [pc, #128]	; (8022900 <CRC_Lock+0x84>)
 802287e:	b530      	push	{r4, r5, lr}
 8022880:	6813      	ldr	r3, [r2, #0]
 8022882:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8022886:	f24c 2540 	movw	r5, #49728	; 0xc240
 802288a:	f023 0301 	bic.w	r3, r3, #1
 802288e:	6013      	str	r3, [r2, #0]
 8022890:	4b1c      	ldr	r3, [pc, #112]	; (8022904 <CRC_Lock+0x88>)
 8022892:	681a      	ldr	r2, [r3, #0]
 8022894:	4022      	ands	r2, r4
 8022896:	42aa      	cmp	r2, r5
 8022898:	d005      	beq.n	80228a6 <CRC_Lock+0x2a>
 802289a:	681b      	ldr	r3, [r3, #0]
 802289c:	f24c 2270 	movw	r2, #49776	; 0xc270
 80228a0:	4023      	ands	r3, r4
 80228a2:	4293      	cmp	r3, r2
 80228a4:	d124      	bne.n	80228f0 <CRC_Lock+0x74>
 80228a6:	4b18      	ldr	r3, [pc, #96]	; (8022908 <CRC_Lock+0x8c>)
 80228a8:	681b      	ldr	r3, [r3, #0]
 80228aa:	bb0b      	cbnz	r3, 80228f0 <CRC_Lock+0x74>
 80228ac:	4b17      	ldr	r3, [pc, #92]	; (802290c <CRC_Lock+0x90>)
 80228ae:	681a      	ldr	r2, [r3, #0]
 80228b0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80228b4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80228b8:	d00d      	beq.n	80228d6 <CRC_Lock+0x5a>
 80228ba:	681a      	ldr	r2, [r3, #0]
 80228bc:	f240 4483 	movw	r4, #1155	; 0x483
 80228c0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80228c4:	42a2      	cmp	r2, r4
 80228c6:	d006      	beq.n	80228d6 <CRC_Lock+0x5a>
 80228c8:	681b      	ldr	r3, [r3, #0]
 80228ca:	f240 4285 	movw	r2, #1157	; 0x485
 80228ce:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80228d2:	4293      	cmp	r3, r2
 80228d4:	d10c      	bne.n	80228f0 <CRC_Lock+0x74>
 80228d6:	4b0e      	ldr	r3, [pc, #56]	; (8022910 <CRC_Lock+0x94>)
 80228d8:	2201      	movs	r2, #1
 80228da:	601a      	str	r2, [r3, #0]
 80228dc:	681a      	ldr	r2, [r3, #0]
 80228de:	2a00      	cmp	r2, #0
 80228e0:	d1fc      	bne.n	80228dc <CRC_Lock+0x60>
 80228e2:	4b0c      	ldr	r3, [pc, #48]	; (8022914 <CRC_Lock+0x98>)
 80228e4:	6018      	str	r0, [r3, #0]
 80228e6:	6818      	ldr	r0, [r3, #0]
 80228e8:	1a43      	subs	r3, r0, r1
 80228ea:	4258      	negs	r0, r3
 80228ec:	4158      	adcs	r0, r3
 80228ee:	bd30      	pop	{r4, r5, pc}
 80228f0:	4b09      	ldr	r3, [pc, #36]	; (8022918 <CRC_Lock+0x9c>)
 80228f2:	2201      	movs	r2, #1
 80228f4:	601a      	str	r2, [r3, #0]
 80228f6:	681a      	ldr	r2, [r3, #0]
 80228f8:	2a00      	cmp	r2, #0
 80228fa:	d1fc      	bne.n	80228f6 <CRC_Lock+0x7a>
 80228fc:	4b07      	ldr	r3, [pc, #28]	; (802291c <CRC_Lock+0xa0>)
 80228fe:	e7f1      	b.n	80228e4 <CRC_Lock+0x68>
 8022900:	e0002000 	.word	0xe0002000
 8022904:	e000ed00 	.word	0xe000ed00
 8022908:	e0042000 	.word	0xe0042000
 802290c:	5c001000 	.word	0x5c001000
 8022910:	58024c08 	.word	0x58024c08
 8022914:	58024c00 	.word	0x58024c00
 8022918:	40023008 	.word	0x40023008
 802291c:	40023000 	.word	0x40023000

08022920 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8022920:	6101      	str	r1, [r0, #16]
 8022922:	4770      	bx	lr

08022924 <_ZN8touchgfx8Gestures4tickEv>:
 8022924:	7b83      	ldrb	r3, [r0, #14]
 8022926:	b14b      	cbz	r3, 802293c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8022928:	8903      	ldrh	r3, [r0, #8]
 802292a:	3301      	adds	r3, #1
 802292c:	b29b      	uxth	r3, r3
 802292e:	2b07      	cmp	r3, #7
 8022930:	8103      	strh	r3, [r0, #8]
 8022932:	bf81      	itttt	hi
 8022934:	2300      	movhi	r3, #0
 8022936:	8143      	strhhi	r3, [r0, #10]
 8022938:	8183      	strhhi	r3, [r0, #12]
 802293a:	7383      	strbhi	r3, [r0, #14]
 802293c:	4770      	bx	lr
	...

08022940 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8022940:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8022944:	4698      	mov	r8, r3
 8022946:	8883      	ldrh	r3, [r0, #4]
 8022948:	4604      	mov	r4, r0
 802294a:	4617      	mov	r7, r2
 802294c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8022950:	eba8 0303 	sub.w	r3, r8, r3
 8022954:	4a19      	ldr	r2, [pc, #100]	; (80229bc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8022956:	460e      	mov	r6, r1
 8022958:	b21b      	sxth	r3, r3
 802295a:	88c1      	ldrh	r1, [r0, #6]
 802295c:	9200      	str	r2, [sp, #0]
 802295e:	2000      	movs	r0, #0
 8022960:	2b00      	cmp	r3, #0
 8022962:	8aa2      	ldrh	r2, [r4, #20]
 8022964:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8022968:	bfb8      	it	lt
 802296a:	425b      	neglt	r3, r3
 802296c:	f88d 0004 	strb.w	r0, [sp, #4]
 8022970:	f8ad 1008 	strh.w	r1, [sp, #8]
 8022974:	b21b      	sxth	r3, r3
 8022976:	f8ad 800a 	strh.w	r8, [sp, #10]
 802297a:	f8ad 500c 	strh.w	r5, [sp, #12]
 802297e:	4293      	cmp	r3, r2
 8022980:	dc07      	bgt.n	8022992 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8022982:	1a69      	subs	r1, r5, r1
 8022984:	b209      	sxth	r1, r1
 8022986:	2900      	cmp	r1, #0
 8022988:	bfb8      	it	lt
 802298a:	4249      	neglt	r1, r1
 802298c:	b209      	sxth	r1, r1
 802298e:	428a      	cmp	r2, r1
 8022990:	da10      	bge.n	80229b4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8022992:	6920      	ldr	r0, [r4, #16]
 8022994:	4669      	mov	r1, sp
 8022996:	eba8 0606 	sub.w	r6, r8, r6
 802299a:	1bef      	subs	r7, r5, r7
 802299c:	6803      	ldr	r3, [r0, #0]
 802299e:	685b      	ldr	r3, [r3, #4]
 80229a0:	4798      	blx	r3
 80229a2:	2300      	movs	r3, #0
 80229a4:	2001      	movs	r0, #1
 80229a6:	8166      	strh	r6, [r4, #10]
 80229a8:	8123      	strh	r3, [r4, #8]
 80229aa:	81a7      	strh	r7, [r4, #12]
 80229ac:	f8a4 8004 	strh.w	r8, [r4, #4]
 80229b0:	80e5      	strh	r5, [r4, #6]
 80229b2:	73a0      	strb	r0, [r4, #14]
 80229b4:	b004      	add	sp, #16
 80229b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80229ba:	bf00      	nop
 80229bc:	080256fc 	.word	0x080256fc

080229c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80229c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80229c2:	461e      	mov	r6, r3
 80229c4:	1e4b      	subs	r3, r1, #1
 80229c6:	b085      	sub	sp, #20
 80229c8:	4604      	mov	r4, r0
 80229ca:	2b01      	cmp	r3, #1
 80229cc:	460d      	mov	r5, r1
 80229ce:	4617      	mov	r7, r2
 80229d0:	d84b      	bhi.n	8022a6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80229d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80229d6:	1cd3      	adds	r3, r2, #3
 80229d8:	b29b      	uxth	r3, r3
 80229da:	2b06      	cmp	r3, #6
 80229dc:	d916      	bls.n	8022a0c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80229de:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8022a80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80229e2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80229e6:	f8cd c004 	str.w	ip, [sp, #4]
 80229ea:	f04f 0c00 	mov.w	ip, #0
 80229ee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80229f2:	6900      	ldr	r0, [r0, #16]
 80229f4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80229f8:	a901      	add	r1, sp, #4
 80229fa:	f88d c008 	strb.w	ip, [sp, #8]
 80229fe:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022a02:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022a06:	6803      	ldr	r3, [r0, #0]
 8022a08:	689b      	ldr	r3, [r3, #8]
 8022a0a:	4798      	blx	r3
 8022a0c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022a10:	1cd3      	adds	r3, r2, #3
 8022a12:	b29b      	uxth	r3, r3
 8022a14:	2b06      	cmp	r3, #6
 8022a16:	d916      	bls.n	8022a46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022a18:	f8df c064 	ldr.w	ip, [pc, #100]	; 8022a80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022a1c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022a20:	f8cd c004 	str.w	ip, [sp, #4]
 8022a24:	f04f 0c01 	mov.w	ip, #1
 8022a28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022a2c:	6920      	ldr	r0, [r4, #16]
 8022a2e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8022a32:	a901      	add	r1, sp, #4
 8022a34:	f88d c008 	strb.w	ip, [sp, #8]
 8022a38:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022a3c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022a40:	6803      	ldr	r3, [r0, #0]
 8022a42:	689b      	ldr	r3, [r3, #8]
 8022a44:	4798      	blx	r3
 8022a46:	4b0d      	ldr	r3, [pc, #52]	; (8022a7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8022a48:	a901      	add	r1, sp, #4
 8022a4a:	6920      	ldr	r0, [r4, #16]
 8022a4c:	9301      	str	r3, [sp, #4]
 8022a4e:	2300      	movs	r3, #0
 8022a50:	f88d 5008 	strb.w	r5, [sp, #8]
 8022a54:	f8ad 700a 	strh.w	r7, [sp, #10]
 8022a58:	f8ad 600c 	strh.w	r6, [sp, #12]
 8022a5c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022a60:	6803      	ldr	r3, [r0, #0]
 8022a62:	681b      	ldr	r3, [r3, #0]
 8022a64:	4798      	blx	r3
 8022a66:	b005      	add	sp, #20
 8022a68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022a6a:	2900      	cmp	r1, #0
 8022a6c:	d1eb      	bne.n	8022a46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022a6e:	80a2      	strh	r2, [r4, #4]
 8022a70:	80c6      	strh	r6, [r0, #6]
 8022a72:	60a1      	str	r1, [r4, #8]
 8022a74:	81a1      	strh	r1, [r4, #12]
 8022a76:	73a1      	strb	r1, [r4, #14]
 8022a78:	e7e5      	b.n	8022a46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022a7a:	bf00      	nop
 8022a7c:	080256e8 	.word	0x080256e8
 8022a80:	08025710 	.word	0x08025710

08022a84 <__aeabi_atexit>:
 8022a84:	460b      	mov	r3, r1
 8022a86:	4601      	mov	r1, r0
 8022a88:	4618      	mov	r0, r3
 8022a8a:	f000 b90f 	b.w	8022cac <__cxa_atexit>

08022a8e <_ZdlPvj>:
 8022a8e:	f000 b812 	b.w	8022ab6 <_ZdlPv>

08022a92 <__cxa_guard_acquire>:
 8022a92:	6803      	ldr	r3, [r0, #0]
 8022a94:	07db      	lsls	r3, r3, #31
 8022a96:	d406      	bmi.n	8022aa6 <__cxa_guard_acquire+0x14>
 8022a98:	7843      	ldrb	r3, [r0, #1]
 8022a9a:	b103      	cbz	r3, 8022a9e <__cxa_guard_acquire+0xc>
 8022a9c:	deff      	udf	#255	; 0xff
 8022a9e:	2301      	movs	r3, #1
 8022aa0:	7043      	strb	r3, [r0, #1]
 8022aa2:	4618      	mov	r0, r3
 8022aa4:	4770      	bx	lr
 8022aa6:	2000      	movs	r0, #0
 8022aa8:	4770      	bx	lr

08022aaa <__cxa_guard_release>:
 8022aaa:	2301      	movs	r3, #1
 8022aac:	6003      	str	r3, [r0, #0]
 8022aae:	4770      	bx	lr

08022ab0 <__cxa_pure_virtual>:
 8022ab0:	b508      	push	{r3, lr}
 8022ab2:	f000 f80f 	bl	8022ad4 <_ZSt9terminatev>

08022ab6 <_ZdlPv>:
 8022ab6:	f000 b845 	b.w	8022b44 <free>

08022aba <_ZN10__cxxabiv111__terminateEPFvvE>:
 8022aba:	b508      	push	{r3, lr}
 8022abc:	4780      	blx	r0
 8022abe:	f000 f80e 	bl	8022ade <abort>
	...

08022ac4 <_ZSt13get_terminatev>:
 8022ac4:	4b02      	ldr	r3, [pc, #8]	; (8022ad0 <_ZSt13get_terminatev+0xc>)
 8022ac6:	6818      	ldr	r0, [r3, #0]
 8022ac8:	f3bf 8f5b 	dmb	ish
 8022acc:	4770      	bx	lr
 8022ace:	bf00      	nop
 8022ad0:	24000094 	.word	0x24000094

08022ad4 <_ZSt9terminatev>:
 8022ad4:	b508      	push	{r3, lr}
 8022ad6:	f7ff fff5 	bl	8022ac4 <_ZSt13get_terminatev>
 8022ada:	f7ff ffee 	bl	8022aba <_ZN10__cxxabiv111__terminateEPFvvE>

08022ade <abort>:
 8022ade:	b508      	push	{r3, lr}
 8022ae0:	2006      	movs	r0, #6
 8022ae2:	f000 fa39 	bl	8022f58 <raise>
 8022ae6:	2001      	movs	r0, #1
 8022ae8:	f7de fdfc 	bl	80016e4 <_exit>

08022aec <__assert_func>:
 8022aec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022aee:	4614      	mov	r4, r2
 8022af0:	461a      	mov	r2, r3
 8022af2:	4b09      	ldr	r3, [pc, #36]	; (8022b18 <__assert_func+0x2c>)
 8022af4:	681b      	ldr	r3, [r3, #0]
 8022af6:	4605      	mov	r5, r0
 8022af8:	68d8      	ldr	r0, [r3, #12]
 8022afa:	b14c      	cbz	r4, 8022b10 <__assert_func+0x24>
 8022afc:	4b07      	ldr	r3, [pc, #28]	; (8022b1c <__assert_func+0x30>)
 8022afe:	9100      	str	r1, [sp, #0]
 8022b00:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8022b04:	4906      	ldr	r1, [pc, #24]	; (8022b20 <__assert_func+0x34>)
 8022b06:	462b      	mov	r3, r5
 8022b08:	f000 f982 	bl	8022e10 <fiprintf>
 8022b0c:	f7ff ffe7 	bl	8022ade <abort>
 8022b10:	4b04      	ldr	r3, [pc, #16]	; (8022b24 <__assert_func+0x38>)
 8022b12:	461c      	mov	r4, r3
 8022b14:	e7f3      	b.n	8022afe <__assert_func+0x12>
 8022b16:	bf00      	nop
 8022b18:	240000f0 	.word	0x240000f0
 8022b1c:	08025a2c 	.word	0x08025a2c
 8022b20:	08025a39 	.word	0x08025a39
 8022b24:	08025a67 	.word	0x08025a67

08022b28 <atexit>:
 8022b28:	2300      	movs	r3, #0
 8022b2a:	4601      	mov	r1, r0
 8022b2c:	461a      	mov	r2, r3
 8022b2e:	4618      	mov	r0, r3
 8022b30:	f000 bac0 	b.w	80230b4 <__register_exitproc>

08022b34 <malloc>:
 8022b34:	4b02      	ldr	r3, [pc, #8]	; (8022b40 <malloc+0xc>)
 8022b36:	4601      	mov	r1, r0
 8022b38:	6818      	ldr	r0, [r3, #0]
 8022b3a:	f000 b82b 	b.w	8022b94 <_malloc_r>
 8022b3e:	bf00      	nop
 8022b40:	240000f0 	.word	0x240000f0

08022b44 <free>:
 8022b44:	4b02      	ldr	r3, [pc, #8]	; (8022b50 <free+0xc>)
 8022b46:	4601      	mov	r1, r0
 8022b48:	6818      	ldr	r0, [r3, #0]
 8022b4a:	f000 bb11 	b.w	8023170 <_free_r>
 8022b4e:	bf00      	nop
 8022b50:	240000f0 	.word	0x240000f0

08022b54 <sbrk_aligned>:
 8022b54:	b570      	push	{r4, r5, r6, lr}
 8022b56:	4e0e      	ldr	r6, [pc, #56]	; (8022b90 <sbrk_aligned+0x3c>)
 8022b58:	460c      	mov	r4, r1
 8022b5a:	6831      	ldr	r1, [r6, #0]
 8022b5c:	4605      	mov	r5, r0
 8022b5e:	b911      	cbnz	r1, 8022b66 <sbrk_aligned+0x12>
 8022b60:	f000 fa4a 	bl	8022ff8 <_sbrk_r>
 8022b64:	6030      	str	r0, [r6, #0]
 8022b66:	4621      	mov	r1, r4
 8022b68:	4628      	mov	r0, r5
 8022b6a:	f000 fa45 	bl	8022ff8 <_sbrk_r>
 8022b6e:	1c43      	adds	r3, r0, #1
 8022b70:	d00a      	beq.n	8022b88 <sbrk_aligned+0x34>
 8022b72:	1cc4      	adds	r4, r0, #3
 8022b74:	f024 0403 	bic.w	r4, r4, #3
 8022b78:	42a0      	cmp	r0, r4
 8022b7a:	d007      	beq.n	8022b8c <sbrk_aligned+0x38>
 8022b7c:	1a21      	subs	r1, r4, r0
 8022b7e:	4628      	mov	r0, r5
 8022b80:	f000 fa3a 	bl	8022ff8 <_sbrk_r>
 8022b84:	3001      	adds	r0, #1
 8022b86:	d101      	bne.n	8022b8c <sbrk_aligned+0x38>
 8022b88:	f04f 34ff 	mov.w	r4, #4294967295
 8022b8c:	4620      	mov	r0, r4
 8022b8e:	bd70      	pop	{r4, r5, r6, pc}
 8022b90:	24002828 	.word	0x24002828

08022b94 <_malloc_r>:
 8022b94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022b98:	1ccd      	adds	r5, r1, #3
 8022b9a:	f025 0503 	bic.w	r5, r5, #3
 8022b9e:	3508      	adds	r5, #8
 8022ba0:	2d0c      	cmp	r5, #12
 8022ba2:	bf38      	it	cc
 8022ba4:	250c      	movcc	r5, #12
 8022ba6:	2d00      	cmp	r5, #0
 8022ba8:	4607      	mov	r7, r0
 8022baa:	db01      	blt.n	8022bb0 <_malloc_r+0x1c>
 8022bac:	42a9      	cmp	r1, r5
 8022bae:	d905      	bls.n	8022bbc <_malloc_r+0x28>
 8022bb0:	230c      	movs	r3, #12
 8022bb2:	603b      	str	r3, [r7, #0]
 8022bb4:	2600      	movs	r6, #0
 8022bb6:	4630      	mov	r0, r6
 8022bb8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022bbc:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8022c90 <_malloc_r+0xfc>
 8022bc0:	f000 f868 	bl	8022c94 <__malloc_lock>
 8022bc4:	f8d8 3000 	ldr.w	r3, [r8]
 8022bc8:	461c      	mov	r4, r3
 8022bca:	bb5c      	cbnz	r4, 8022c24 <_malloc_r+0x90>
 8022bcc:	4629      	mov	r1, r5
 8022bce:	4638      	mov	r0, r7
 8022bd0:	f7ff ffc0 	bl	8022b54 <sbrk_aligned>
 8022bd4:	1c43      	adds	r3, r0, #1
 8022bd6:	4604      	mov	r4, r0
 8022bd8:	d155      	bne.n	8022c86 <_malloc_r+0xf2>
 8022bda:	f8d8 4000 	ldr.w	r4, [r8]
 8022bde:	4626      	mov	r6, r4
 8022be0:	2e00      	cmp	r6, #0
 8022be2:	d145      	bne.n	8022c70 <_malloc_r+0xdc>
 8022be4:	2c00      	cmp	r4, #0
 8022be6:	d048      	beq.n	8022c7a <_malloc_r+0xe6>
 8022be8:	6823      	ldr	r3, [r4, #0]
 8022bea:	4631      	mov	r1, r6
 8022bec:	4638      	mov	r0, r7
 8022bee:	eb04 0903 	add.w	r9, r4, r3
 8022bf2:	f000 fa01 	bl	8022ff8 <_sbrk_r>
 8022bf6:	4581      	cmp	r9, r0
 8022bf8:	d13f      	bne.n	8022c7a <_malloc_r+0xe6>
 8022bfa:	6821      	ldr	r1, [r4, #0]
 8022bfc:	1a6d      	subs	r5, r5, r1
 8022bfe:	4629      	mov	r1, r5
 8022c00:	4638      	mov	r0, r7
 8022c02:	f7ff ffa7 	bl	8022b54 <sbrk_aligned>
 8022c06:	3001      	adds	r0, #1
 8022c08:	d037      	beq.n	8022c7a <_malloc_r+0xe6>
 8022c0a:	6823      	ldr	r3, [r4, #0]
 8022c0c:	442b      	add	r3, r5
 8022c0e:	6023      	str	r3, [r4, #0]
 8022c10:	f8d8 3000 	ldr.w	r3, [r8]
 8022c14:	2b00      	cmp	r3, #0
 8022c16:	d038      	beq.n	8022c8a <_malloc_r+0xf6>
 8022c18:	685a      	ldr	r2, [r3, #4]
 8022c1a:	42a2      	cmp	r2, r4
 8022c1c:	d12b      	bne.n	8022c76 <_malloc_r+0xe2>
 8022c1e:	2200      	movs	r2, #0
 8022c20:	605a      	str	r2, [r3, #4]
 8022c22:	e00f      	b.n	8022c44 <_malloc_r+0xb0>
 8022c24:	6822      	ldr	r2, [r4, #0]
 8022c26:	1b52      	subs	r2, r2, r5
 8022c28:	d41f      	bmi.n	8022c6a <_malloc_r+0xd6>
 8022c2a:	2a0b      	cmp	r2, #11
 8022c2c:	d917      	bls.n	8022c5e <_malloc_r+0xca>
 8022c2e:	1961      	adds	r1, r4, r5
 8022c30:	42a3      	cmp	r3, r4
 8022c32:	6025      	str	r5, [r4, #0]
 8022c34:	bf18      	it	ne
 8022c36:	6059      	strne	r1, [r3, #4]
 8022c38:	6863      	ldr	r3, [r4, #4]
 8022c3a:	bf08      	it	eq
 8022c3c:	f8c8 1000 	streq.w	r1, [r8]
 8022c40:	5162      	str	r2, [r4, r5]
 8022c42:	604b      	str	r3, [r1, #4]
 8022c44:	4638      	mov	r0, r7
 8022c46:	f104 060b 	add.w	r6, r4, #11
 8022c4a:	f000 f829 	bl	8022ca0 <__malloc_unlock>
 8022c4e:	f026 0607 	bic.w	r6, r6, #7
 8022c52:	1d23      	adds	r3, r4, #4
 8022c54:	1af2      	subs	r2, r6, r3
 8022c56:	d0ae      	beq.n	8022bb6 <_malloc_r+0x22>
 8022c58:	1b9b      	subs	r3, r3, r6
 8022c5a:	50a3      	str	r3, [r4, r2]
 8022c5c:	e7ab      	b.n	8022bb6 <_malloc_r+0x22>
 8022c5e:	42a3      	cmp	r3, r4
 8022c60:	6862      	ldr	r2, [r4, #4]
 8022c62:	d1dd      	bne.n	8022c20 <_malloc_r+0x8c>
 8022c64:	f8c8 2000 	str.w	r2, [r8]
 8022c68:	e7ec      	b.n	8022c44 <_malloc_r+0xb0>
 8022c6a:	4623      	mov	r3, r4
 8022c6c:	6864      	ldr	r4, [r4, #4]
 8022c6e:	e7ac      	b.n	8022bca <_malloc_r+0x36>
 8022c70:	4634      	mov	r4, r6
 8022c72:	6876      	ldr	r6, [r6, #4]
 8022c74:	e7b4      	b.n	8022be0 <_malloc_r+0x4c>
 8022c76:	4613      	mov	r3, r2
 8022c78:	e7cc      	b.n	8022c14 <_malloc_r+0x80>
 8022c7a:	230c      	movs	r3, #12
 8022c7c:	603b      	str	r3, [r7, #0]
 8022c7e:	4638      	mov	r0, r7
 8022c80:	f000 f80e 	bl	8022ca0 <__malloc_unlock>
 8022c84:	e797      	b.n	8022bb6 <_malloc_r+0x22>
 8022c86:	6025      	str	r5, [r4, #0]
 8022c88:	e7dc      	b.n	8022c44 <_malloc_r+0xb0>
 8022c8a:	605b      	str	r3, [r3, #4]
 8022c8c:	deff      	udf	#255	; 0xff
 8022c8e:	bf00      	nop
 8022c90:	24002824 	.word	0x24002824

08022c94 <__malloc_lock>:
 8022c94:	4801      	ldr	r0, [pc, #4]	; (8022c9c <__malloc_lock+0x8>)
 8022c96:	f000 b9fc 	b.w	8023092 <__retarget_lock_acquire_recursive>
 8022c9a:	bf00      	nop
 8022c9c:	2400296d 	.word	0x2400296d

08022ca0 <__malloc_unlock>:
 8022ca0:	4801      	ldr	r0, [pc, #4]	; (8022ca8 <__malloc_unlock+0x8>)
 8022ca2:	f000 b9f7 	b.w	8023094 <__retarget_lock_release_recursive>
 8022ca6:	bf00      	nop
 8022ca8:	2400296d 	.word	0x2400296d

08022cac <__cxa_atexit>:
 8022cac:	b510      	push	{r4, lr}
 8022cae:	4c05      	ldr	r4, [pc, #20]	; (8022cc4 <__cxa_atexit+0x18>)
 8022cb0:	4613      	mov	r3, r2
 8022cb2:	b12c      	cbz	r4, 8022cc0 <__cxa_atexit+0x14>
 8022cb4:	460a      	mov	r2, r1
 8022cb6:	4601      	mov	r1, r0
 8022cb8:	2002      	movs	r0, #2
 8022cba:	f000 f9fb 	bl	80230b4 <__register_exitproc>
 8022cbe:	bd10      	pop	{r4, pc}
 8022cc0:	4620      	mov	r0, r4
 8022cc2:	e7fc      	b.n	8022cbe <__cxa_atexit+0x12>
 8022cc4:	080230b5 	.word	0x080230b5

08022cc8 <std>:
 8022cc8:	2300      	movs	r3, #0
 8022cca:	b510      	push	{r4, lr}
 8022ccc:	4604      	mov	r4, r0
 8022cce:	e9c0 3300 	strd	r3, r3, [r0]
 8022cd2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022cd6:	6083      	str	r3, [r0, #8]
 8022cd8:	8181      	strh	r1, [r0, #12]
 8022cda:	6643      	str	r3, [r0, #100]	; 0x64
 8022cdc:	81c2      	strh	r2, [r0, #14]
 8022cde:	6183      	str	r3, [r0, #24]
 8022ce0:	4619      	mov	r1, r3
 8022ce2:	2208      	movs	r2, #8
 8022ce4:	305c      	adds	r0, #92	; 0x5c
 8022ce6:	f000 f906 	bl	8022ef6 <memset>
 8022cea:	4b0d      	ldr	r3, [pc, #52]	; (8022d20 <std+0x58>)
 8022cec:	6263      	str	r3, [r4, #36]	; 0x24
 8022cee:	4b0d      	ldr	r3, [pc, #52]	; (8022d24 <std+0x5c>)
 8022cf0:	62a3      	str	r3, [r4, #40]	; 0x28
 8022cf2:	4b0d      	ldr	r3, [pc, #52]	; (8022d28 <std+0x60>)
 8022cf4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8022cf6:	4b0d      	ldr	r3, [pc, #52]	; (8022d2c <std+0x64>)
 8022cf8:	6323      	str	r3, [r4, #48]	; 0x30
 8022cfa:	4b0d      	ldr	r3, [pc, #52]	; (8022d30 <std+0x68>)
 8022cfc:	6224      	str	r4, [r4, #32]
 8022cfe:	429c      	cmp	r4, r3
 8022d00:	d006      	beq.n	8022d10 <std+0x48>
 8022d02:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8022d06:	4294      	cmp	r4, r2
 8022d08:	d002      	beq.n	8022d10 <std+0x48>
 8022d0a:	33d0      	adds	r3, #208	; 0xd0
 8022d0c:	429c      	cmp	r4, r3
 8022d0e:	d105      	bne.n	8022d1c <std+0x54>
 8022d10:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8022d14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022d18:	f000 b9ba 	b.w	8023090 <__retarget_lock_init_recursive>
 8022d1c:	bd10      	pop	{r4, pc}
 8022d1e:	bf00      	nop
 8022d20:	08022e71 	.word	0x08022e71
 8022d24:	08022e93 	.word	0x08022e93
 8022d28:	08022ecb 	.word	0x08022ecb
 8022d2c:	08022eef 	.word	0x08022eef
 8022d30:	2400282c 	.word	0x2400282c

08022d34 <stdio_exit_handler>:
 8022d34:	4a02      	ldr	r2, [pc, #8]	; (8022d40 <stdio_exit_handler+0xc>)
 8022d36:	4903      	ldr	r1, [pc, #12]	; (8022d44 <stdio_exit_handler+0x10>)
 8022d38:	4803      	ldr	r0, [pc, #12]	; (8022d48 <stdio_exit_handler+0x14>)
 8022d3a:	f000 b87b 	b.w	8022e34 <_fwalk_sglue>
 8022d3e:	bf00      	nop
 8022d40:	24000098 	.word	0x24000098
 8022d44:	080238bd 	.word	0x080238bd
 8022d48:	240000a4 	.word	0x240000a4

08022d4c <cleanup_stdio>:
 8022d4c:	6841      	ldr	r1, [r0, #4]
 8022d4e:	4b0c      	ldr	r3, [pc, #48]	; (8022d80 <cleanup_stdio+0x34>)
 8022d50:	4299      	cmp	r1, r3
 8022d52:	b510      	push	{r4, lr}
 8022d54:	4604      	mov	r4, r0
 8022d56:	d001      	beq.n	8022d5c <cleanup_stdio+0x10>
 8022d58:	f000 fdb0 	bl	80238bc <_fflush_r>
 8022d5c:	68a1      	ldr	r1, [r4, #8]
 8022d5e:	4b09      	ldr	r3, [pc, #36]	; (8022d84 <cleanup_stdio+0x38>)
 8022d60:	4299      	cmp	r1, r3
 8022d62:	d002      	beq.n	8022d6a <cleanup_stdio+0x1e>
 8022d64:	4620      	mov	r0, r4
 8022d66:	f000 fda9 	bl	80238bc <_fflush_r>
 8022d6a:	68e1      	ldr	r1, [r4, #12]
 8022d6c:	4b06      	ldr	r3, [pc, #24]	; (8022d88 <cleanup_stdio+0x3c>)
 8022d6e:	4299      	cmp	r1, r3
 8022d70:	d004      	beq.n	8022d7c <cleanup_stdio+0x30>
 8022d72:	4620      	mov	r0, r4
 8022d74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022d78:	f000 bda0 	b.w	80238bc <_fflush_r>
 8022d7c:	bd10      	pop	{r4, pc}
 8022d7e:	bf00      	nop
 8022d80:	2400282c 	.word	0x2400282c
 8022d84:	24002894 	.word	0x24002894
 8022d88:	240028fc 	.word	0x240028fc

08022d8c <global_stdio_init.part.0>:
 8022d8c:	b510      	push	{r4, lr}
 8022d8e:	4b0b      	ldr	r3, [pc, #44]	; (8022dbc <global_stdio_init.part.0+0x30>)
 8022d90:	4c0b      	ldr	r4, [pc, #44]	; (8022dc0 <global_stdio_init.part.0+0x34>)
 8022d92:	4a0c      	ldr	r2, [pc, #48]	; (8022dc4 <global_stdio_init.part.0+0x38>)
 8022d94:	601a      	str	r2, [r3, #0]
 8022d96:	4620      	mov	r0, r4
 8022d98:	2200      	movs	r2, #0
 8022d9a:	2104      	movs	r1, #4
 8022d9c:	f7ff ff94 	bl	8022cc8 <std>
 8022da0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8022da4:	2201      	movs	r2, #1
 8022da6:	2109      	movs	r1, #9
 8022da8:	f7ff ff8e 	bl	8022cc8 <std>
 8022dac:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8022db0:	2202      	movs	r2, #2
 8022db2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022db6:	2112      	movs	r1, #18
 8022db8:	f7ff bf86 	b.w	8022cc8 <std>
 8022dbc:	24002964 	.word	0x24002964
 8022dc0:	2400282c 	.word	0x2400282c
 8022dc4:	08022d35 	.word	0x08022d35

08022dc8 <__sfp_lock_acquire>:
 8022dc8:	4801      	ldr	r0, [pc, #4]	; (8022dd0 <__sfp_lock_acquire+0x8>)
 8022dca:	f000 b962 	b.w	8023092 <__retarget_lock_acquire_recursive>
 8022dce:	bf00      	nop
 8022dd0:	2400296e 	.word	0x2400296e

08022dd4 <__sfp_lock_release>:
 8022dd4:	4801      	ldr	r0, [pc, #4]	; (8022ddc <__sfp_lock_release+0x8>)
 8022dd6:	f000 b95d 	b.w	8023094 <__retarget_lock_release_recursive>
 8022dda:	bf00      	nop
 8022ddc:	2400296e 	.word	0x2400296e

08022de0 <__sinit>:
 8022de0:	b510      	push	{r4, lr}
 8022de2:	4604      	mov	r4, r0
 8022de4:	f7ff fff0 	bl	8022dc8 <__sfp_lock_acquire>
 8022de8:	6a23      	ldr	r3, [r4, #32]
 8022dea:	b11b      	cbz	r3, 8022df4 <__sinit+0x14>
 8022dec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022df0:	f7ff bff0 	b.w	8022dd4 <__sfp_lock_release>
 8022df4:	4b04      	ldr	r3, [pc, #16]	; (8022e08 <__sinit+0x28>)
 8022df6:	6223      	str	r3, [r4, #32]
 8022df8:	4b04      	ldr	r3, [pc, #16]	; (8022e0c <__sinit+0x2c>)
 8022dfa:	681b      	ldr	r3, [r3, #0]
 8022dfc:	2b00      	cmp	r3, #0
 8022dfe:	d1f5      	bne.n	8022dec <__sinit+0xc>
 8022e00:	f7ff ffc4 	bl	8022d8c <global_stdio_init.part.0>
 8022e04:	e7f2      	b.n	8022dec <__sinit+0xc>
 8022e06:	bf00      	nop
 8022e08:	08022d4d 	.word	0x08022d4d
 8022e0c:	24002964 	.word	0x24002964

08022e10 <fiprintf>:
 8022e10:	b40e      	push	{r1, r2, r3}
 8022e12:	b503      	push	{r0, r1, lr}
 8022e14:	4601      	mov	r1, r0
 8022e16:	ab03      	add	r3, sp, #12
 8022e18:	4805      	ldr	r0, [pc, #20]	; (8022e30 <fiprintf+0x20>)
 8022e1a:	f853 2b04 	ldr.w	r2, [r3], #4
 8022e1e:	6800      	ldr	r0, [r0, #0]
 8022e20:	9301      	str	r3, [sp, #4]
 8022e22:	f000 fa1b 	bl	802325c <_vfiprintf_r>
 8022e26:	b002      	add	sp, #8
 8022e28:	f85d eb04 	ldr.w	lr, [sp], #4
 8022e2c:	b003      	add	sp, #12
 8022e2e:	4770      	bx	lr
 8022e30:	240000f0 	.word	0x240000f0

08022e34 <_fwalk_sglue>:
 8022e34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022e38:	4607      	mov	r7, r0
 8022e3a:	4688      	mov	r8, r1
 8022e3c:	4614      	mov	r4, r2
 8022e3e:	2600      	movs	r6, #0
 8022e40:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8022e44:	f1b9 0901 	subs.w	r9, r9, #1
 8022e48:	d505      	bpl.n	8022e56 <_fwalk_sglue+0x22>
 8022e4a:	6824      	ldr	r4, [r4, #0]
 8022e4c:	2c00      	cmp	r4, #0
 8022e4e:	d1f7      	bne.n	8022e40 <_fwalk_sglue+0xc>
 8022e50:	4630      	mov	r0, r6
 8022e52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022e56:	89ab      	ldrh	r3, [r5, #12]
 8022e58:	2b01      	cmp	r3, #1
 8022e5a:	d907      	bls.n	8022e6c <_fwalk_sglue+0x38>
 8022e5c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8022e60:	3301      	adds	r3, #1
 8022e62:	d003      	beq.n	8022e6c <_fwalk_sglue+0x38>
 8022e64:	4629      	mov	r1, r5
 8022e66:	4638      	mov	r0, r7
 8022e68:	47c0      	blx	r8
 8022e6a:	4306      	orrs	r6, r0
 8022e6c:	3568      	adds	r5, #104	; 0x68
 8022e6e:	e7e9      	b.n	8022e44 <_fwalk_sglue+0x10>

08022e70 <__sread>:
 8022e70:	b510      	push	{r4, lr}
 8022e72:	460c      	mov	r4, r1
 8022e74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022e78:	f000 f898 	bl	8022fac <_read_r>
 8022e7c:	2800      	cmp	r0, #0
 8022e7e:	bfab      	itete	ge
 8022e80:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8022e82:	89a3      	ldrhlt	r3, [r4, #12]
 8022e84:	181b      	addge	r3, r3, r0
 8022e86:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8022e8a:	bfac      	ite	ge
 8022e8c:	6563      	strge	r3, [r4, #84]	; 0x54
 8022e8e:	81a3      	strhlt	r3, [r4, #12]
 8022e90:	bd10      	pop	{r4, pc}

08022e92 <__swrite>:
 8022e92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022e96:	461f      	mov	r7, r3
 8022e98:	898b      	ldrh	r3, [r1, #12]
 8022e9a:	05db      	lsls	r3, r3, #23
 8022e9c:	4605      	mov	r5, r0
 8022e9e:	460c      	mov	r4, r1
 8022ea0:	4616      	mov	r6, r2
 8022ea2:	d505      	bpl.n	8022eb0 <__swrite+0x1e>
 8022ea4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022ea8:	2302      	movs	r3, #2
 8022eaa:	2200      	movs	r2, #0
 8022eac:	f000 f86c 	bl	8022f88 <_lseek_r>
 8022eb0:	89a3      	ldrh	r3, [r4, #12]
 8022eb2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022eb6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8022eba:	81a3      	strh	r3, [r4, #12]
 8022ebc:	4632      	mov	r2, r6
 8022ebe:	463b      	mov	r3, r7
 8022ec0:	4628      	mov	r0, r5
 8022ec2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8022ec6:	f000 b8a7 	b.w	8023018 <_write_r>

08022eca <__sseek>:
 8022eca:	b510      	push	{r4, lr}
 8022ecc:	460c      	mov	r4, r1
 8022ece:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022ed2:	f000 f859 	bl	8022f88 <_lseek_r>
 8022ed6:	1c43      	adds	r3, r0, #1
 8022ed8:	89a3      	ldrh	r3, [r4, #12]
 8022eda:	bf15      	itete	ne
 8022edc:	6560      	strne	r0, [r4, #84]	; 0x54
 8022ede:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8022ee2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8022ee6:	81a3      	strheq	r3, [r4, #12]
 8022ee8:	bf18      	it	ne
 8022eea:	81a3      	strhne	r3, [r4, #12]
 8022eec:	bd10      	pop	{r4, pc}

08022eee <__sclose>:
 8022eee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022ef2:	f000 b839 	b.w	8022f68 <_close_r>

08022ef6 <memset>:
 8022ef6:	4402      	add	r2, r0
 8022ef8:	4603      	mov	r3, r0
 8022efa:	4293      	cmp	r3, r2
 8022efc:	d100      	bne.n	8022f00 <memset+0xa>
 8022efe:	4770      	bx	lr
 8022f00:	f803 1b01 	strb.w	r1, [r3], #1
 8022f04:	e7f9      	b.n	8022efa <memset+0x4>

08022f06 <_raise_r>:
 8022f06:	291f      	cmp	r1, #31
 8022f08:	b538      	push	{r3, r4, r5, lr}
 8022f0a:	4604      	mov	r4, r0
 8022f0c:	460d      	mov	r5, r1
 8022f0e:	d904      	bls.n	8022f1a <_raise_r+0x14>
 8022f10:	2316      	movs	r3, #22
 8022f12:	6003      	str	r3, [r0, #0]
 8022f14:	f04f 30ff 	mov.w	r0, #4294967295
 8022f18:	bd38      	pop	{r3, r4, r5, pc}
 8022f1a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8022f1c:	b112      	cbz	r2, 8022f24 <_raise_r+0x1e>
 8022f1e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8022f22:	b94b      	cbnz	r3, 8022f38 <_raise_r+0x32>
 8022f24:	4620      	mov	r0, r4
 8022f26:	f000 f865 	bl	8022ff4 <_getpid_r>
 8022f2a:	462a      	mov	r2, r5
 8022f2c:	4601      	mov	r1, r0
 8022f2e:	4620      	mov	r0, r4
 8022f30:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022f34:	f000 b84c 	b.w	8022fd0 <_kill_r>
 8022f38:	2b01      	cmp	r3, #1
 8022f3a:	d00a      	beq.n	8022f52 <_raise_r+0x4c>
 8022f3c:	1c59      	adds	r1, r3, #1
 8022f3e:	d103      	bne.n	8022f48 <_raise_r+0x42>
 8022f40:	2316      	movs	r3, #22
 8022f42:	6003      	str	r3, [r0, #0]
 8022f44:	2001      	movs	r0, #1
 8022f46:	e7e7      	b.n	8022f18 <_raise_r+0x12>
 8022f48:	2400      	movs	r4, #0
 8022f4a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8022f4e:	4628      	mov	r0, r5
 8022f50:	4798      	blx	r3
 8022f52:	2000      	movs	r0, #0
 8022f54:	e7e0      	b.n	8022f18 <_raise_r+0x12>
	...

08022f58 <raise>:
 8022f58:	4b02      	ldr	r3, [pc, #8]	; (8022f64 <raise+0xc>)
 8022f5a:	4601      	mov	r1, r0
 8022f5c:	6818      	ldr	r0, [r3, #0]
 8022f5e:	f7ff bfd2 	b.w	8022f06 <_raise_r>
 8022f62:	bf00      	nop
 8022f64:	240000f0 	.word	0x240000f0

08022f68 <_close_r>:
 8022f68:	b538      	push	{r3, r4, r5, lr}
 8022f6a:	4d06      	ldr	r5, [pc, #24]	; (8022f84 <_close_r+0x1c>)
 8022f6c:	2300      	movs	r3, #0
 8022f6e:	4604      	mov	r4, r0
 8022f70:	4608      	mov	r0, r1
 8022f72:	602b      	str	r3, [r5, #0]
 8022f74:	f7de fbf9 	bl	800176a <_close>
 8022f78:	1c43      	adds	r3, r0, #1
 8022f7a:	d102      	bne.n	8022f82 <_close_r+0x1a>
 8022f7c:	682b      	ldr	r3, [r5, #0]
 8022f7e:	b103      	cbz	r3, 8022f82 <_close_r+0x1a>
 8022f80:	6023      	str	r3, [r4, #0]
 8022f82:	bd38      	pop	{r3, r4, r5, pc}
 8022f84:	24002968 	.word	0x24002968

08022f88 <_lseek_r>:
 8022f88:	b538      	push	{r3, r4, r5, lr}
 8022f8a:	4d07      	ldr	r5, [pc, #28]	; (8022fa8 <_lseek_r+0x20>)
 8022f8c:	4604      	mov	r4, r0
 8022f8e:	4608      	mov	r0, r1
 8022f90:	4611      	mov	r1, r2
 8022f92:	2200      	movs	r2, #0
 8022f94:	602a      	str	r2, [r5, #0]
 8022f96:	461a      	mov	r2, r3
 8022f98:	f7de fc0e 	bl	80017b8 <_lseek>
 8022f9c:	1c43      	adds	r3, r0, #1
 8022f9e:	d102      	bne.n	8022fa6 <_lseek_r+0x1e>
 8022fa0:	682b      	ldr	r3, [r5, #0]
 8022fa2:	b103      	cbz	r3, 8022fa6 <_lseek_r+0x1e>
 8022fa4:	6023      	str	r3, [r4, #0]
 8022fa6:	bd38      	pop	{r3, r4, r5, pc}
 8022fa8:	24002968 	.word	0x24002968

08022fac <_read_r>:
 8022fac:	b538      	push	{r3, r4, r5, lr}
 8022fae:	4d07      	ldr	r5, [pc, #28]	; (8022fcc <_read_r+0x20>)
 8022fb0:	4604      	mov	r4, r0
 8022fb2:	4608      	mov	r0, r1
 8022fb4:	4611      	mov	r1, r2
 8022fb6:	2200      	movs	r2, #0
 8022fb8:	602a      	str	r2, [r5, #0]
 8022fba:	461a      	mov	r2, r3
 8022fbc:	f7de fb9c 	bl	80016f8 <_read>
 8022fc0:	1c43      	adds	r3, r0, #1
 8022fc2:	d102      	bne.n	8022fca <_read_r+0x1e>
 8022fc4:	682b      	ldr	r3, [r5, #0]
 8022fc6:	b103      	cbz	r3, 8022fca <_read_r+0x1e>
 8022fc8:	6023      	str	r3, [r4, #0]
 8022fca:	bd38      	pop	{r3, r4, r5, pc}
 8022fcc:	24002968 	.word	0x24002968

08022fd0 <_kill_r>:
 8022fd0:	b538      	push	{r3, r4, r5, lr}
 8022fd2:	4d07      	ldr	r5, [pc, #28]	; (8022ff0 <_kill_r+0x20>)
 8022fd4:	2300      	movs	r3, #0
 8022fd6:	4604      	mov	r4, r0
 8022fd8:	4608      	mov	r0, r1
 8022fda:	4611      	mov	r1, r2
 8022fdc:	602b      	str	r3, [r5, #0]
 8022fde:	f7de fb71 	bl	80016c4 <_kill>
 8022fe2:	1c43      	adds	r3, r0, #1
 8022fe4:	d102      	bne.n	8022fec <_kill_r+0x1c>
 8022fe6:	682b      	ldr	r3, [r5, #0]
 8022fe8:	b103      	cbz	r3, 8022fec <_kill_r+0x1c>
 8022fea:	6023      	str	r3, [r4, #0]
 8022fec:	bd38      	pop	{r3, r4, r5, pc}
 8022fee:	bf00      	nop
 8022ff0:	24002968 	.word	0x24002968

08022ff4 <_getpid_r>:
 8022ff4:	f7de bb5e 	b.w	80016b4 <_getpid>

08022ff8 <_sbrk_r>:
 8022ff8:	b538      	push	{r3, r4, r5, lr}
 8022ffa:	4d06      	ldr	r5, [pc, #24]	; (8023014 <_sbrk_r+0x1c>)
 8022ffc:	2300      	movs	r3, #0
 8022ffe:	4604      	mov	r4, r0
 8023000:	4608      	mov	r0, r1
 8023002:	602b      	str	r3, [r5, #0]
 8023004:	f7de fbe6 	bl	80017d4 <_sbrk>
 8023008:	1c43      	adds	r3, r0, #1
 802300a:	d102      	bne.n	8023012 <_sbrk_r+0x1a>
 802300c:	682b      	ldr	r3, [r5, #0]
 802300e:	b103      	cbz	r3, 8023012 <_sbrk_r+0x1a>
 8023010:	6023      	str	r3, [r4, #0]
 8023012:	bd38      	pop	{r3, r4, r5, pc}
 8023014:	24002968 	.word	0x24002968

08023018 <_write_r>:
 8023018:	b538      	push	{r3, r4, r5, lr}
 802301a:	4d07      	ldr	r5, [pc, #28]	; (8023038 <_write_r+0x20>)
 802301c:	4604      	mov	r4, r0
 802301e:	4608      	mov	r0, r1
 8023020:	4611      	mov	r1, r2
 8023022:	2200      	movs	r2, #0
 8023024:	602a      	str	r2, [r5, #0]
 8023026:	461a      	mov	r2, r3
 8023028:	f7de fb83 	bl	8001732 <_write>
 802302c:	1c43      	adds	r3, r0, #1
 802302e:	d102      	bne.n	8023036 <_write_r+0x1e>
 8023030:	682b      	ldr	r3, [r5, #0]
 8023032:	b103      	cbz	r3, 8023036 <_write_r+0x1e>
 8023034:	6023      	str	r3, [r4, #0]
 8023036:	bd38      	pop	{r3, r4, r5, pc}
 8023038:	24002968 	.word	0x24002968

0802303c <__errno>:
 802303c:	4b01      	ldr	r3, [pc, #4]	; (8023044 <__errno+0x8>)
 802303e:	6818      	ldr	r0, [r3, #0]
 8023040:	4770      	bx	lr
 8023042:	bf00      	nop
 8023044:	240000f0 	.word	0x240000f0

08023048 <__libc_init_array>:
 8023048:	b570      	push	{r4, r5, r6, lr}
 802304a:	4d0d      	ldr	r5, [pc, #52]	; (8023080 <__libc_init_array+0x38>)
 802304c:	4c0d      	ldr	r4, [pc, #52]	; (8023084 <__libc_init_array+0x3c>)
 802304e:	1b64      	subs	r4, r4, r5
 8023050:	10a4      	asrs	r4, r4, #2
 8023052:	2600      	movs	r6, #0
 8023054:	42a6      	cmp	r6, r4
 8023056:	d109      	bne.n	802306c <__libc_init_array+0x24>
 8023058:	4d0b      	ldr	r5, [pc, #44]	; (8023088 <__libc_init_array+0x40>)
 802305a:	4c0c      	ldr	r4, [pc, #48]	; (802308c <__libc_init_array+0x44>)
 802305c:	f000 fd70 	bl	8023b40 <_init>
 8023060:	1b64      	subs	r4, r4, r5
 8023062:	10a4      	asrs	r4, r4, #2
 8023064:	2600      	movs	r6, #0
 8023066:	42a6      	cmp	r6, r4
 8023068:	d105      	bne.n	8023076 <__libc_init_array+0x2e>
 802306a:	bd70      	pop	{r4, r5, r6, pc}
 802306c:	f855 3b04 	ldr.w	r3, [r5], #4
 8023070:	4798      	blx	r3
 8023072:	3601      	adds	r6, #1
 8023074:	e7ee      	b.n	8023054 <__libc_init_array+0xc>
 8023076:	f855 3b04 	ldr.w	r3, [r5], #4
 802307a:	4798      	blx	r3
 802307c:	3601      	adds	r6, #1
 802307e:	e7f2      	b.n	8023066 <__libc_init_array+0x1e>
 8023080:	08025e30 	.word	0x08025e30
 8023084:	08025e30 	.word	0x08025e30
 8023088:	08025e30 	.word	0x08025e30
 802308c:	08025e48 	.word	0x08025e48

08023090 <__retarget_lock_init_recursive>:
 8023090:	4770      	bx	lr

08023092 <__retarget_lock_acquire_recursive>:
 8023092:	4770      	bx	lr

08023094 <__retarget_lock_release_recursive>:
 8023094:	4770      	bx	lr

08023096 <memcpy>:
 8023096:	440a      	add	r2, r1
 8023098:	4291      	cmp	r1, r2
 802309a:	f100 33ff 	add.w	r3, r0, #4294967295
 802309e:	d100      	bne.n	80230a2 <memcpy+0xc>
 80230a0:	4770      	bx	lr
 80230a2:	b510      	push	{r4, lr}
 80230a4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80230a8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80230ac:	4291      	cmp	r1, r2
 80230ae:	d1f9      	bne.n	80230a4 <memcpy+0xe>
 80230b0:	bd10      	pop	{r4, pc}
	...

080230b4 <__register_exitproc>:
 80230b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80230b8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802316c <__register_exitproc+0xb8>
 80230bc:	4606      	mov	r6, r0
 80230be:	f8d8 0000 	ldr.w	r0, [r8]
 80230c2:	461f      	mov	r7, r3
 80230c4:	460d      	mov	r5, r1
 80230c6:	4691      	mov	r9, r2
 80230c8:	f7ff ffe3 	bl	8023092 <__retarget_lock_acquire_recursive>
 80230cc:	4b23      	ldr	r3, [pc, #140]	; (802315c <__register_exitproc+0xa8>)
 80230ce:	681c      	ldr	r4, [r3, #0]
 80230d0:	b934      	cbnz	r4, 80230e0 <__register_exitproc+0x2c>
 80230d2:	4c23      	ldr	r4, [pc, #140]	; (8023160 <__register_exitproc+0xac>)
 80230d4:	601c      	str	r4, [r3, #0]
 80230d6:	4b23      	ldr	r3, [pc, #140]	; (8023164 <__register_exitproc+0xb0>)
 80230d8:	b113      	cbz	r3, 80230e0 <__register_exitproc+0x2c>
 80230da:	681b      	ldr	r3, [r3, #0]
 80230dc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80230e0:	6863      	ldr	r3, [r4, #4]
 80230e2:	2b1f      	cmp	r3, #31
 80230e4:	dd07      	ble.n	80230f6 <__register_exitproc+0x42>
 80230e6:	f8d8 0000 	ldr.w	r0, [r8]
 80230ea:	f7ff ffd3 	bl	8023094 <__retarget_lock_release_recursive>
 80230ee:	f04f 30ff 	mov.w	r0, #4294967295
 80230f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80230f6:	b32e      	cbz	r6, 8023144 <__register_exitproc+0x90>
 80230f8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80230fc:	b968      	cbnz	r0, 802311a <__register_exitproc+0x66>
 80230fe:	4b1a      	ldr	r3, [pc, #104]	; (8023168 <__register_exitproc+0xb4>)
 8023100:	2b00      	cmp	r3, #0
 8023102:	d0f0      	beq.n	80230e6 <__register_exitproc+0x32>
 8023104:	f44f 7084 	mov.w	r0, #264	; 0x108
 8023108:	f7ff fd14 	bl	8022b34 <malloc>
 802310c:	2800      	cmp	r0, #0
 802310e:	d0ea      	beq.n	80230e6 <__register_exitproc+0x32>
 8023110:	2300      	movs	r3, #0
 8023112:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8023116:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802311a:	6863      	ldr	r3, [r4, #4]
 802311c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8023120:	2201      	movs	r2, #1
 8023122:	409a      	lsls	r2, r3
 8023124:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8023128:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802312c:	4313      	orrs	r3, r2
 802312e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8023132:	2e02      	cmp	r6, #2
 8023134:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8023138:	bf02      	ittt	eq
 802313a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802313e:	4313      	orreq	r3, r2
 8023140:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8023144:	6863      	ldr	r3, [r4, #4]
 8023146:	f8d8 0000 	ldr.w	r0, [r8]
 802314a:	1c5a      	adds	r2, r3, #1
 802314c:	3302      	adds	r3, #2
 802314e:	6062      	str	r2, [r4, #4]
 8023150:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8023154:	f7ff ff9e 	bl	8023094 <__retarget_lock_release_recursive>
 8023158:	2000      	movs	r0, #0
 802315a:	e7ca      	b.n	80230f2 <__register_exitproc+0x3e>
 802315c:	240029fc 	.word	0x240029fc
 8023160:	24002970 	.word	0x24002970
 8023164:	08025a68 	.word	0x08025a68
 8023168:	08022b35 	.word	0x08022b35
 802316c:	240000f4 	.word	0x240000f4

08023170 <_free_r>:
 8023170:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023172:	2900      	cmp	r1, #0
 8023174:	d044      	beq.n	8023200 <_free_r+0x90>
 8023176:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802317a:	9001      	str	r0, [sp, #4]
 802317c:	2b00      	cmp	r3, #0
 802317e:	f1a1 0404 	sub.w	r4, r1, #4
 8023182:	bfb8      	it	lt
 8023184:	18e4      	addlt	r4, r4, r3
 8023186:	f7ff fd85 	bl	8022c94 <__malloc_lock>
 802318a:	4a1e      	ldr	r2, [pc, #120]	; (8023204 <_free_r+0x94>)
 802318c:	9801      	ldr	r0, [sp, #4]
 802318e:	6813      	ldr	r3, [r2, #0]
 8023190:	b933      	cbnz	r3, 80231a0 <_free_r+0x30>
 8023192:	6063      	str	r3, [r4, #4]
 8023194:	6014      	str	r4, [r2, #0]
 8023196:	b003      	add	sp, #12
 8023198:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802319c:	f7ff bd80 	b.w	8022ca0 <__malloc_unlock>
 80231a0:	42a3      	cmp	r3, r4
 80231a2:	d908      	bls.n	80231b6 <_free_r+0x46>
 80231a4:	6825      	ldr	r5, [r4, #0]
 80231a6:	1961      	adds	r1, r4, r5
 80231a8:	428b      	cmp	r3, r1
 80231aa:	bf01      	itttt	eq
 80231ac:	6819      	ldreq	r1, [r3, #0]
 80231ae:	685b      	ldreq	r3, [r3, #4]
 80231b0:	1949      	addeq	r1, r1, r5
 80231b2:	6021      	streq	r1, [r4, #0]
 80231b4:	e7ed      	b.n	8023192 <_free_r+0x22>
 80231b6:	461a      	mov	r2, r3
 80231b8:	685b      	ldr	r3, [r3, #4]
 80231ba:	b10b      	cbz	r3, 80231c0 <_free_r+0x50>
 80231bc:	42a3      	cmp	r3, r4
 80231be:	d9fa      	bls.n	80231b6 <_free_r+0x46>
 80231c0:	6811      	ldr	r1, [r2, #0]
 80231c2:	1855      	adds	r5, r2, r1
 80231c4:	42a5      	cmp	r5, r4
 80231c6:	d10b      	bne.n	80231e0 <_free_r+0x70>
 80231c8:	6824      	ldr	r4, [r4, #0]
 80231ca:	4421      	add	r1, r4
 80231cc:	1854      	adds	r4, r2, r1
 80231ce:	42a3      	cmp	r3, r4
 80231d0:	6011      	str	r1, [r2, #0]
 80231d2:	d1e0      	bne.n	8023196 <_free_r+0x26>
 80231d4:	681c      	ldr	r4, [r3, #0]
 80231d6:	685b      	ldr	r3, [r3, #4]
 80231d8:	6053      	str	r3, [r2, #4]
 80231da:	440c      	add	r4, r1
 80231dc:	6014      	str	r4, [r2, #0]
 80231de:	e7da      	b.n	8023196 <_free_r+0x26>
 80231e0:	d902      	bls.n	80231e8 <_free_r+0x78>
 80231e2:	230c      	movs	r3, #12
 80231e4:	6003      	str	r3, [r0, #0]
 80231e6:	e7d6      	b.n	8023196 <_free_r+0x26>
 80231e8:	6825      	ldr	r5, [r4, #0]
 80231ea:	1961      	adds	r1, r4, r5
 80231ec:	428b      	cmp	r3, r1
 80231ee:	bf04      	itt	eq
 80231f0:	6819      	ldreq	r1, [r3, #0]
 80231f2:	685b      	ldreq	r3, [r3, #4]
 80231f4:	6063      	str	r3, [r4, #4]
 80231f6:	bf04      	itt	eq
 80231f8:	1949      	addeq	r1, r1, r5
 80231fa:	6021      	streq	r1, [r4, #0]
 80231fc:	6054      	str	r4, [r2, #4]
 80231fe:	e7ca      	b.n	8023196 <_free_r+0x26>
 8023200:	b003      	add	sp, #12
 8023202:	bd30      	pop	{r4, r5, pc}
 8023204:	24002824 	.word	0x24002824

08023208 <__sfputc_r>:
 8023208:	6893      	ldr	r3, [r2, #8]
 802320a:	3b01      	subs	r3, #1
 802320c:	2b00      	cmp	r3, #0
 802320e:	b410      	push	{r4}
 8023210:	6093      	str	r3, [r2, #8]
 8023212:	da08      	bge.n	8023226 <__sfputc_r+0x1e>
 8023214:	6994      	ldr	r4, [r2, #24]
 8023216:	42a3      	cmp	r3, r4
 8023218:	db01      	blt.n	802321e <__sfputc_r+0x16>
 802321a:	290a      	cmp	r1, #10
 802321c:	d103      	bne.n	8023226 <__sfputc_r+0x1e>
 802321e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023222:	f000 bb73 	b.w	802390c <__swbuf_r>
 8023226:	6813      	ldr	r3, [r2, #0]
 8023228:	1c58      	adds	r0, r3, #1
 802322a:	6010      	str	r0, [r2, #0]
 802322c:	7019      	strb	r1, [r3, #0]
 802322e:	4608      	mov	r0, r1
 8023230:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023234:	4770      	bx	lr

08023236 <__sfputs_r>:
 8023236:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023238:	4606      	mov	r6, r0
 802323a:	460f      	mov	r7, r1
 802323c:	4614      	mov	r4, r2
 802323e:	18d5      	adds	r5, r2, r3
 8023240:	42ac      	cmp	r4, r5
 8023242:	d101      	bne.n	8023248 <__sfputs_r+0x12>
 8023244:	2000      	movs	r0, #0
 8023246:	e007      	b.n	8023258 <__sfputs_r+0x22>
 8023248:	f814 1b01 	ldrb.w	r1, [r4], #1
 802324c:	463a      	mov	r2, r7
 802324e:	4630      	mov	r0, r6
 8023250:	f7ff ffda 	bl	8023208 <__sfputc_r>
 8023254:	1c43      	adds	r3, r0, #1
 8023256:	d1f3      	bne.n	8023240 <__sfputs_r+0xa>
 8023258:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802325c <_vfiprintf_r>:
 802325c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023260:	460d      	mov	r5, r1
 8023262:	b09d      	sub	sp, #116	; 0x74
 8023264:	4614      	mov	r4, r2
 8023266:	4698      	mov	r8, r3
 8023268:	4606      	mov	r6, r0
 802326a:	b118      	cbz	r0, 8023274 <_vfiprintf_r+0x18>
 802326c:	6a03      	ldr	r3, [r0, #32]
 802326e:	b90b      	cbnz	r3, 8023274 <_vfiprintf_r+0x18>
 8023270:	f7ff fdb6 	bl	8022de0 <__sinit>
 8023274:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023276:	07d9      	lsls	r1, r3, #31
 8023278:	d405      	bmi.n	8023286 <_vfiprintf_r+0x2a>
 802327a:	89ab      	ldrh	r3, [r5, #12]
 802327c:	059a      	lsls	r2, r3, #22
 802327e:	d402      	bmi.n	8023286 <_vfiprintf_r+0x2a>
 8023280:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023282:	f7ff ff06 	bl	8023092 <__retarget_lock_acquire_recursive>
 8023286:	89ab      	ldrh	r3, [r5, #12]
 8023288:	071b      	lsls	r3, r3, #28
 802328a:	d501      	bpl.n	8023290 <_vfiprintf_r+0x34>
 802328c:	692b      	ldr	r3, [r5, #16]
 802328e:	b99b      	cbnz	r3, 80232b8 <_vfiprintf_r+0x5c>
 8023290:	4629      	mov	r1, r5
 8023292:	4630      	mov	r0, r6
 8023294:	f000 fb78 	bl	8023988 <__swsetup_r>
 8023298:	b170      	cbz	r0, 80232b8 <_vfiprintf_r+0x5c>
 802329a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802329c:	07dc      	lsls	r4, r3, #31
 802329e:	d504      	bpl.n	80232aa <_vfiprintf_r+0x4e>
 80232a0:	f04f 30ff 	mov.w	r0, #4294967295
 80232a4:	b01d      	add	sp, #116	; 0x74
 80232a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232aa:	89ab      	ldrh	r3, [r5, #12]
 80232ac:	0598      	lsls	r0, r3, #22
 80232ae:	d4f7      	bmi.n	80232a0 <_vfiprintf_r+0x44>
 80232b0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80232b2:	f7ff feef 	bl	8023094 <__retarget_lock_release_recursive>
 80232b6:	e7f3      	b.n	80232a0 <_vfiprintf_r+0x44>
 80232b8:	2300      	movs	r3, #0
 80232ba:	9309      	str	r3, [sp, #36]	; 0x24
 80232bc:	2320      	movs	r3, #32
 80232be:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80232c2:	f8cd 800c 	str.w	r8, [sp, #12]
 80232c6:	2330      	movs	r3, #48	; 0x30
 80232c8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802347c <_vfiprintf_r+0x220>
 80232cc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80232d0:	f04f 0901 	mov.w	r9, #1
 80232d4:	4623      	mov	r3, r4
 80232d6:	469a      	mov	sl, r3
 80232d8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80232dc:	b10a      	cbz	r2, 80232e2 <_vfiprintf_r+0x86>
 80232de:	2a25      	cmp	r2, #37	; 0x25
 80232e0:	d1f9      	bne.n	80232d6 <_vfiprintf_r+0x7a>
 80232e2:	ebba 0b04 	subs.w	fp, sl, r4
 80232e6:	d00b      	beq.n	8023300 <_vfiprintf_r+0xa4>
 80232e8:	465b      	mov	r3, fp
 80232ea:	4622      	mov	r2, r4
 80232ec:	4629      	mov	r1, r5
 80232ee:	4630      	mov	r0, r6
 80232f0:	f7ff ffa1 	bl	8023236 <__sfputs_r>
 80232f4:	3001      	adds	r0, #1
 80232f6:	f000 80a9 	beq.w	802344c <_vfiprintf_r+0x1f0>
 80232fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80232fc:	445a      	add	r2, fp
 80232fe:	9209      	str	r2, [sp, #36]	; 0x24
 8023300:	f89a 3000 	ldrb.w	r3, [sl]
 8023304:	2b00      	cmp	r3, #0
 8023306:	f000 80a1 	beq.w	802344c <_vfiprintf_r+0x1f0>
 802330a:	2300      	movs	r3, #0
 802330c:	f04f 32ff 	mov.w	r2, #4294967295
 8023310:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023314:	f10a 0a01 	add.w	sl, sl, #1
 8023318:	9304      	str	r3, [sp, #16]
 802331a:	9307      	str	r3, [sp, #28]
 802331c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8023320:	931a      	str	r3, [sp, #104]	; 0x68
 8023322:	4654      	mov	r4, sl
 8023324:	2205      	movs	r2, #5
 8023326:	f814 1b01 	ldrb.w	r1, [r4], #1
 802332a:	4854      	ldr	r0, [pc, #336]	; (802347c <_vfiprintf_r+0x220>)
 802332c:	f7dc fff0 	bl	8000310 <memchr>
 8023330:	9a04      	ldr	r2, [sp, #16]
 8023332:	b9d8      	cbnz	r0, 802336c <_vfiprintf_r+0x110>
 8023334:	06d1      	lsls	r1, r2, #27
 8023336:	bf44      	itt	mi
 8023338:	2320      	movmi	r3, #32
 802333a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802333e:	0713      	lsls	r3, r2, #28
 8023340:	bf44      	itt	mi
 8023342:	232b      	movmi	r3, #43	; 0x2b
 8023344:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023348:	f89a 3000 	ldrb.w	r3, [sl]
 802334c:	2b2a      	cmp	r3, #42	; 0x2a
 802334e:	d015      	beq.n	802337c <_vfiprintf_r+0x120>
 8023350:	9a07      	ldr	r2, [sp, #28]
 8023352:	4654      	mov	r4, sl
 8023354:	2000      	movs	r0, #0
 8023356:	f04f 0c0a 	mov.w	ip, #10
 802335a:	4621      	mov	r1, r4
 802335c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023360:	3b30      	subs	r3, #48	; 0x30
 8023362:	2b09      	cmp	r3, #9
 8023364:	d94d      	bls.n	8023402 <_vfiprintf_r+0x1a6>
 8023366:	b1b0      	cbz	r0, 8023396 <_vfiprintf_r+0x13a>
 8023368:	9207      	str	r2, [sp, #28]
 802336a:	e014      	b.n	8023396 <_vfiprintf_r+0x13a>
 802336c:	eba0 0308 	sub.w	r3, r0, r8
 8023370:	fa09 f303 	lsl.w	r3, r9, r3
 8023374:	4313      	orrs	r3, r2
 8023376:	9304      	str	r3, [sp, #16]
 8023378:	46a2      	mov	sl, r4
 802337a:	e7d2      	b.n	8023322 <_vfiprintf_r+0xc6>
 802337c:	9b03      	ldr	r3, [sp, #12]
 802337e:	1d19      	adds	r1, r3, #4
 8023380:	681b      	ldr	r3, [r3, #0]
 8023382:	9103      	str	r1, [sp, #12]
 8023384:	2b00      	cmp	r3, #0
 8023386:	bfbb      	ittet	lt
 8023388:	425b      	neglt	r3, r3
 802338a:	f042 0202 	orrlt.w	r2, r2, #2
 802338e:	9307      	strge	r3, [sp, #28]
 8023390:	9307      	strlt	r3, [sp, #28]
 8023392:	bfb8      	it	lt
 8023394:	9204      	strlt	r2, [sp, #16]
 8023396:	7823      	ldrb	r3, [r4, #0]
 8023398:	2b2e      	cmp	r3, #46	; 0x2e
 802339a:	d10c      	bne.n	80233b6 <_vfiprintf_r+0x15a>
 802339c:	7863      	ldrb	r3, [r4, #1]
 802339e:	2b2a      	cmp	r3, #42	; 0x2a
 80233a0:	d134      	bne.n	802340c <_vfiprintf_r+0x1b0>
 80233a2:	9b03      	ldr	r3, [sp, #12]
 80233a4:	1d1a      	adds	r2, r3, #4
 80233a6:	681b      	ldr	r3, [r3, #0]
 80233a8:	9203      	str	r2, [sp, #12]
 80233aa:	2b00      	cmp	r3, #0
 80233ac:	bfb8      	it	lt
 80233ae:	f04f 33ff 	movlt.w	r3, #4294967295
 80233b2:	3402      	adds	r4, #2
 80233b4:	9305      	str	r3, [sp, #20]
 80233b6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802348c <_vfiprintf_r+0x230>
 80233ba:	7821      	ldrb	r1, [r4, #0]
 80233bc:	2203      	movs	r2, #3
 80233be:	4650      	mov	r0, sl
 80233c0:	f7dc ffa6 	bl	8000310 <memchr>
 80233c4:	b138      	cbz	r0, 80233d6 <_vfiprintf_r+0x17a>
 80233c6:	9b04      	ldr	r3, [sp, #16]
 80233c8:	eba0 000a 	sub.w	r0, r0, sl
 80233cc:	2240      	movs	r2, #64	; 0x40
 80233ce:	4082      	lsls	r2, r0
 80233d0:	4313      	orrs	r3, r2
 80233d2:	3401      	adds	r4, #1
 80233d4:	9304      	str	r3, [sp, #16]
 80233d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80233da:	4829      	ldr	r0, [pc, #164]	; (8023480 <_vfiprintf_r+0x224>)
 80233dc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80233e0:	2206      	movs	r2, #6
 80233e2:	f7dc ff95 	bl	8000310 <memchr>
 80233e6:	2800      	cmp	r0, #0
 80233e8:	d03f      	beq.n	802346a <_vfiprintf_r+0x20e>
 80233ea:	4b26      	ldr	r3, [pc, #152]	; (8023484 <_vfiprintf_r+0x228>)
 80233ec:	bb1b      	cbnz	r3, 8023436 <_vfiprintf_r+0x1da>
 80233ee:	9b03      	ldr	r3, [sp, #12]
 80233f0:	3307      	adds	r3, #7
 80233f2:	f023 0307 	bic.w	r3, r3, #7
 80233f6:	3308      	adds	r3, #8
 80233f8:	9303      	str	r3, [sp, #12]
 80233fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80233fc:	443b      	add	r3, r7
 80233fe:	9309      	str	r3, [sp, #36]	; 0x24
 8023400:	e768      	b.n	80232d4 <_vfiprintf_r+0x78>
 8023402:	fb0c 3202 	mla	r2, ip, r2, r3
 8023406:	460c      	mov	r4, r1
 8023408:	2001      	movs	r0, #1
 802340a:	e7a6      	b.n	802335a <_vfiprintf_r+0xfe>
 802340c:	2300      	movs	r3, #0
 802340e:	3401      	adds	r4, #1
 8023410:	9305      	str	r3, [sp, #20]
 8023412:	4619      	mov	r1, r3
 8023414:	f04f 0c0a 	mov.w	ip, #10
 8023418:	4620      	mov	r0, r4
 802341a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802341e:	3a30      	subs	r2, #48	; 0x30
 8023420:	2a09      	cmp	r2, #9
 8023422:	d903      	bls.n	802342c <_vfiprintf_r+0x1d0>
 8023424:	2b00      	cmp	r3, #0
 8023426:	d0c6      	beq.n	80233b6 <_vfiprintf_r+0x15a>
 8023428:	9105      	str	r1, [sp, #20]
 802342a:	e7c4      	b.n	80233b6 <_vfiprintf_r+0x15a>
 802342c:	fb0c 2101 	mla	r1, ip, r1, r2
 8023430:	4604      	mov	r4, r0
 8023432:	2301      	movs	r3, #1
 8023434:	e7f0      	b.n	8023418 <_vfiprintf_r+0x1bc>
 8023436:	ab03      	add	r3, sp, #12
 8023438:	9300      	str	r3, [sp, #0]
 802343a:	462a      	mov	r2, r5
 802343c:	4b12      	ldr	r3, [pc, #72]	; (8023488 <_vfiprintf_r+0x22c>)
 802343e:	a904      	add	r1, sp, #16
 8023440:	4630      	mov	r0, r6
 8023442:	f3af 8000 	nop.w
 8023446:	4607      	mov	r7, r0
 8023448:	1c78      	adds	r0, r7, #1
 802344a:	d1d6      	bne.n	80233fa <_vfiprintf_r+0x19e>
 802344c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802344e:	07d9      	lsls	r1, r3, #31
 8023450:	d405      	bmi.n	802345e <_vfiprintf_r+0x202>
 8023452:	89ab      	ldrh	r3, [r5, #12]
 8023454:	059a      	lsls	r2, r3, #22
 8023456:	d402      	bmi.n	802345e <_vfiprintf_r+0x202>
 8023458:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802345a:	f7ff fe1b 	bl	8023094 <__retarget_lock_release_recursive>
 802345e:	89ab      	ldrh	r3, [r5, #12]
 8023460:	065b      	lsls	r3, r3, #25
 8023462:	f53f af1d 	bmi.w	80232a0 <_vfiprintf_r+0x44>
 8023466:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023468:	e71c      	b.n	80232a4 <_vfiprintf_r+0x48>
 802346a:	ab03      	add	r3, sp, #12
 802346c:	9300      	str	r3, [sp, #0]
 802346e:	462a      	mov	r2, r5
 8023470:	4b05      	ldr	r3, [pc, #20]	; (8023488 <_vfiprintf_r+0x22c>)
 8023472:	a904      	add	r1, sp, #16
 8023474:	4630      	mov	r0, r6
 8023476:	f000 f879 	bl	802356c <_printf_i>
 802347a:	e7e4      	b.n	8023446 <_vfiprintf_r+0x1ea>
 802347c:	08025a6c 	.word	0x08025a6c
 8023480:	08025a76 	.word	0x08025a76
 8023484:	00000000 	.word	0x00000000
 8023488:	08023237 	.word	0x08023237
 802348c:	08025a72 	.word	0x08025a72

08023490 <_printf_common>:
 8023490:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023494:	4616      	mov	r6, r2
 8023496:	4699      	mov	r9, r3
 8023498:	688a      	ldr	r2, [r1, #8]
 802349a:	690b      	ldr	r3, [r1, #16]
 802349c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80234a0:	4293      	cmp	r3, r2
 80234a2:	bfb8      	it	lt
 80234a4:	4613      	movlt	r3, r2
 80234a6:	6033      	str	r3, [r6, #0]
 80234a8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80234ac:	4607      	mov	r7, r0
 80234ae:	460c      	mov	r4, r1
 80234b0:	b10a      	cbz	r2, 80234b6 <_printf_common+0x26>
 80234b2:	3301      	adds	r3, #1
 80234b4:	6033      	str	r3, [r6, #0]
 80234b6:	6823      	ldr	r3, [r4, #0]
 80234b8:	0699      	lsls	r1, r3, #26
 80234ba:	bf42      	ittt	mi
 80234bc:	6833      	ldrmi	r3, [r6, #0]
 80234be:	3302      	addmi	r3, #2
 80234c0:	6033      	strmi	r3, [r6, #0]
 80234c2:	6825      	ldr	r5, [r4, #0]
 80234c4:	f015 0506 	ands.w	r5, r5, #6
 80234c8:	d106      	bne.n	80234d8 <_printf_common+0x48>
 80234ca:	f104 0a19 	add.w	sl, r4, #25
 80234ce:	68e3      	ldr	r3, [r4, #12]
 80234d0:	6832      	ldr	r2, [r6, #0]
 80234d2:	1a9b      	subs	r3, r3, r2
 80234d4:	42ab      	cmp	r3, r5
 80234d6:	dc26      	bgt.n	8023526 <_printf_common+0x96>
 80234d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80234dc:	1e13      	subs	r3, r2, #0
 80234de:	6822      	ldr	r2, [r4, #0]
 80234e0:	bf18      	it	ne
 80234e2:	2301      	movne	r3, #1
 80234e4:	0692      	lsls	r2, r2, #26
 80234e6:	d42b      	bmi.n	8023540 <_printf_common+0xb0>
 80234e8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80234ec:	4649      	mov	r1, r9
 80234ee:	4638      	mov	r0, r7
 80234f0:	47c0      	blx	r8
 80234f2:	3001      	adds	r0, #1
 80234f4:	d01e      	beq.n	8023534 <_printf_common+0xa4>
 80234f6:	6823      	ldr	r3, [r4, #0]
 80234f8:	6922      	ldr	r2, [r4, #16]
 80234fa:	f003 0306 	and.w	r3, r3, #6
 80234fe:	2b04      	cmp	r3, #4
 8023500:	bf02      	ittt	eq
 8023502:	68e5      	ldreq	r5, [r4, #12]
 8023504:	6833      	ldreq	r3, [r6, #0]
 8023506:	1aed      	subeq	r5, r5, r3
 8023508:	68a3      	ldr	r3, [r4, #8]
 802350a:	bf0c      	ite	eq
 802350c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8023510:	2500      	movne	r5, #0
 8023512:	4293      	cmp	r3, r2
 8023514:	bfc4      	itt	gt
 8023516:	1a9b      	subgt	r3, r3, r2
 8023518:	18ed      	addgt	r5, r5, r3
 802351a:	2600      	movs	r6, #0
 802351c:	341a      	adds	r4, #26
 802351e:	42b5      	cmp	r5, r6
 8023520:	d11a      	bne.n	8023558 <_printf_common+0xc8>
 8023522:	2000      	movs	r0, #0
 8023524:	e008      	b.n	8023538 <_printf_common+0xa8>
 8023526:	2301      	movs	r3, #1
 8023528:	4652      	mov	r2, sl
 802352a:	4649      	mov	r1, r9
 802352c:	4638      	mov	r0, r7
 802352e:	47c0      	blx	r8
 8023530:	3001      	adds	r0, #1
 8023532:	d103      	bne.n	802353c <_printf_common+0xac>
 8023534:	f04f 30ff 	mov.w	r0, #4294967295
 8023538:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802353c:	3501      	adds	r5, #1
 802353e:	e7c6      	b.n	80234ce <_printf_common+0x3e>
 8023540:	18e1      	adds	r1, r4, r3
 8023542:	1c5a      	adds	r2, r3, #1
 8023544:	2030      	movs	r0, #48	; 0x30
 8023546:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802354a:	4422      	add	r2, r4
 802354c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8023550:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8023554:	3302      	adds	r3, #2
 8023556:	e7c7      	b.n	80234e8 <_printf_common+0x58>
 8023558:	2301      	movs	r3, #1
 802355a:	4622      	mov	r2, r4
 802355c:	4649      	mov	r1, r9
 802355e:	4638      	mov	r0, r7
 8023560:	47c0      	blx	r8
 8023562:	3001      	adds	r0, #1
 8023564:	d0e6      	beq.n	8023534 <_printf_common+0xa4>
 8023566:	3601      	adds	r6, #1
 8023568:	e7d9      	b.n	802351e <_printf_common+0x8e>
	...

0802356c <_printf_i>:
 802356c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023570:	7e0f      	ldrb	r7, [r1, #24]
 8023572:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023574:	2f78      	cmp	r7, #120	; 0x78
 8023576:	4691      	mov	r9, r2
 8023578:	4680      	mov	r8, r0
 802357a:	460c      	mov	r4, r1
 802357c:	469a      	mov	sl, r3
 802357e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8023582:	d807      	bhi.n	8023594 <_printf_i+0x28>
 8023584:	2f62      	cmp	r7, #98	; 0x62
 8023586:	d80a      	bhi.n	802359e <_printf_i+0x32>
 8023588:	2f00      	cmp	r7, #0
 802358a:	f000 80d4 	beq.w	8023736 <_printf_i+0x1ca>
 802358e:	2f58      	cmp	r7, #88	; 0x58
 8023590:	f000 80c0 	beq.w	8023714 <_printf_i+0x1a8>
 8023594:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8023598:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802359c:	e03a      	b.n	8023614 <_printf_i+0xa8>
 802359e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80235a2:	2b15      	cmp	r3, #21
 80235a4:	d8f6      	bhi.n	8023594 <_printf_i+0x28>
 80235a6:	a101      	add	r1, pc, #4	; (adr r1, 80235ac <_printf_i+0x40>)
 80235a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80235ac:	08023605 	.word	0x08023605
 80235b0:	08023619 	.word	0x08023619
 80235b4:	08023595 	.word	0x08023595
 80235b8:	08023595 	.word	0x08023595
 80235bc:	08023595 	.word	0x08023595
 80235c0:	08023595 	.word	0x08023595
 80235c4:	08023619 	.word	0x08023619
 80235c8:	08023595 	.word	0x08023595
 80235cc:	08023595 	.word	0x08023595
 80235d0:	08023595 	.word	0x08023595
 80235d4:	08023595 	.word	0x08023595
 80235d8:	0802371d 	.word	0x0802371d
 80235dc:	08023645 	.word	0x08023645
 80235e0:	080236d7 	.word	0x080236d7
 80235e4:	08023595 	.word	0x08023595
 80235e8:	08023595 	.word	0x08023595
 80235ec:	0802373f 	.word	0x0802373f
 80235f0:	08023595 	.word	0x08023595
 80235f4:	08023645 	.word	0x08023645
 80235f8:	08023595 	.word	0x08023595
 80235fc:	08023595 	.word	0x08023595
 8023600:	080236df 	.word	0x080236df
 8023604:	682b      	ldr	r3, [r5, #0]
 8023606:	1d1a      	adds	r2, r3, #4
 8023608:	681b      	ldr	r3, [r3, #0]
 802360a:	602a      	str	r2, [r5, #0]
 802360c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8023610:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8023614:	2301      	movs	r3, #1
 8023616:	e09f      	b.n	8023758 <_printf_i+0x1ec>
 8023618:	6820      	ldr	r0, [r4, #0]
 802361a:	682b      	ldr	r3, [r5, #0]
 802361c:	0607      	lsls	r7, r0, #24
 802361e:	f103 0104 	add.w	r1, r3, #4
 8023622:	6029      	str	r1, [r5, #0]
 8023624:	d501      	bpl.n	802362a <_printf_i+0xbe>
 8023626:	681e      	ldr	r6, [r3, #0]
 8023628:	e003      	b.n	8023632 <_printf_i+0xc6>
 802362a:	0646      	lsls	r6, r0, #25
 802362c:	d5fb      	bpl.n	8023626 <_printf_i+0xba>
 802362e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8023632:	2e00      	cmp	r6, #0
 8023634:	da03      	bge.n	802363e <_printf_i+0xd2>
 8023636:	232d      	movs	r3, #45	; 0x2d
 8023638:	4276      	negs	r6, r6
 802363a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802363e:	485a      	ldr	r0, [pc, #360]	; (80237a8 <_printf_i+0x23c>)
 8023640:	230a      	movs	r3, #10
 8023642:	e012      	b.n	802366a <_printf_i+0xfe>
 8023644:	682b      	ldr	r3, [r5, #0]
 8023646:	6820      	ldr	r0, [r4, #0]
 8023648:	1d19      	adds	r1, r3, #4
 802364a:	6029      	str	r1, [r5, #0]
 802364c:	0605      	lsls	r5, r0, #24
 802364e:	d501      	bpl.n	8023654 <_printf_i+0xe8>
 8023650:	681e      	ldr	r6, [r3, #0]
 8023652:	e002      	b.n	802365a <_printf_i+0xee>
 8023654:	0641      	lsls	r1, r0, #25
 8023656:	d5fb      	bpl.n	8023650 <_printf_i+0xe4>
 8023658:	881e      	ldrh	r6, [r3, #0]
 802365a:	4853      	ldr	r0, [pc, #332]	; (80237a8 <_printf_i+0x23c>)
 802365c:	2f6f      	cmp	r7, #111	; 0x6f
 802365e:	bf0c      	ite	eq
 8023660:	2308      	moveq	r3, #8
 8023662:	230a      	movne	r3, #10
 8023664:	2100      	movs	r1, #0
 8023666:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802366a:	6865      	ldr	r5, [r4, #4]
 802366c:	60a5      	str	r5, [r4, #8]
 802366e:	2d00      	cmp	r5, #0
 8023670:	bfa2      	ittt	ge
 8023672:	6821      	ldrge	r1, [r4, #0]
 8023674:	f021 0104 	bicge.w	r1, r1, #4
 8023678:	6021      	strge	r1, [r4, #0]
 802367a:	b90e      	cbnz	r6, 8023680 <_printf_i+0x114>
 802367c:	2d00      	cmp	r5, #0
 802367e:	d04b      	beq.n	8023718 <_printf_i+0x1ac>
 8023680:	4615      	mov	r5, r2
 8023682:	fbb6 f1f3 	udiv	r1, r6, r3
 8023686:	fb03 6711 	mls	r7, r3, r1, r6
 802368a:	5dc7      	ldrb	r7, [r0, r7]
 802368c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8023690:	4637      	mov	r7, r6
 8023692:	42bb      	cmp	r3, r7
 8023694:	460e      	mov	r6, r1
 8023696:	d9f4      	bls.n	8023682 <_printf_i+0x116>
 8023698:	2b08      	cmp	r3, #8
 802369a:	d10b      	bne.n	80236b4 <_printf_i+0x148>
 802369c:	6823      	ldr	r3, [r4, #0]
 802369e:	07de      	lsls	r6, r3, #31
 80236a0:	d508      	bpl.n	80236b4 <_printf_i+0x148>
 80236a2:	6923      	ldr	r3, [r4, #16]
 80236a4:	6861      	ldr	r1, [r4, #4]
 80236a6:	4299      	cmp	r1, r3
 80236a8:	bfde      	ittt	le
 80236aa:	2330      	movle	r3, #48	; 0x30
 80236ac:	f805 3c01 	strble.w	r3, [r5, #-1]
 80236b0:	f105 35ff 	addle.w	r5, r5, #4294967295
 80236b4:	1b52      	subs	r2, r2, r5
 80236b6:	6122      	str	r2, [r4, #16]
 80236b8:	f8cd a000 	str.w	sl, [sp]
 80236bc:	464b      	mov	r3, r9
 80236be:	aa03      	add	r2, sp, #12
 80236c0:	4621      	mov	r1, r4
 80236c2:	4640      	mov	r0, r8
 80236c4:	f7ff fee4 	bl	8023490 <_printf_common>
 80236c8:	3001      	adds	r0, #1
 80236ca:	d14a      	bne.n	8023762 <_printf_i+0x1f6>
 80236cc:	f04f 30ff 	mov.w	r0, #4294967295
 80236d0:	b004      	add	sp, #16
 80236d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80236d6:	6823      	ldr	r3, [r4, #0]
 80236d8:	f043 0320 	orr.w	r3, r3, #32
 80236dc:	6023      	str	r3, [r4, #0]
 80236de:	4833      	ldr	r0, [pc, #204]	; (80237ac <_printf_i+0x240>)
 80236e0:	2778      	movs	r7, #120	; 0x78
 80236e2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80236e6:	6823      	ldr	r3, [r4, #0]
 80236e8:	6829      	ldr	r1, [r5, #0]
 80236ea:	061f      	lsls	r7, r3, #24
 80236ec:	f851 6b04 	ldr.w	r6, [r1], #4
 80236f0:	d402      	bmi.n	80236f8 <_printf_i+0x18c>
 80236f2:	065f      	lsls	r7, r3, #25
 80236f4:	bf48      	it	mi
 80236f6:	b2b6      	uxthmi	r6, r6
 80236f8:	07df      	lsls	r7, r3, #31
 80236fa:	bf48      	it	mi
 80236fc:	f043 0320 	orrmi.w	r3, r3, #32
 8023700:	6029      	str	r1, [r5, #0]
 8023702:	bf48      	it	mi
 8023704:	6023      	strmi	r3, [r4, #0]
 8023706:	b91e      	cbnz	r6, 8023710 <_printf_i+0x1a4>
 8023708:	6823      	ldr	r3, [r4, #0]
 802370a:	f023 0320 	bic.w	r3, r3, #32
 802370e:	6023      	str	r3, [r4, #0]
 8023710:	2310      	movs	r3, #16
 8023712:	e7a7      	b.n	8023664 <_printf_i+0xf8>
 8023714:	4824      	ldr	r0, [pc, #144]	; (80237a8 <_printf_i+0x23c>)
 8023716:	e7e4      	b.n	80236e2 <_printf_i+0x176>
 8023718:	4615      	mov	r5, r2
 802371a:	e7bd      	b.n	8023698 <_printf_i+0x12c>
 802371c:	682b      	ldr	r3, [r5, #0]
 802371e:	6826      	ldr	r6, [r4, #0]
 8023720:	6961      	ldr	r1, [r4, #20]
 8023722:	1d18      	adds	r0, r3, #4
 8023724:	6028      	str	r0, [r5, #0]
 8023726:	0635      	lsls	r5, r6, #24
 8023728:	681b      	ldr	r3, [r3, #0]
 802372a:	d501      	bpl.n	8023730 <_printf_i+0x1c4>
 802372c:	6019      	str	r1, [r3, #0]
 802372e:	e002      	b.n	8023736 <_printf_i+0x1ca>
 8023730:	0670      	lsls	r0, r6, #25
 8023732:	d5fb      	bpl.n	802372c <_printf_i+0x1c0>
 8023734:	8019      	strh	r1, [r3, #0]
 8023736:	2300      	movs	r3, #0
 8023738:	6123      	str	r3, [r4, #16]
 802373a:	4615      	mov	r5, r2
 802373c:	e7bc      	b.n	80236b8 <_printf_i+0x14c>
 802373e:	682b      	ldr	r3, [r5, #0]
 8023740:	1d1a      	adds	r2, r3, #4
 8023742:	602a      	str	r2, [r5, #0]
 8023744:	681d      	ldr	r5, [r3, #0]
 8023746:	6862      	ldr	r2, [r4, #4]
 8023748:	2100      	movs	r1, #0
 802374a:	4628      	mov	r0, r5
 802374c:	f7dc fde0 	bl	8000310 <memchr>
 8023750:	b108      	cbz	r0, 8023756 <_printf_i+0x1ea>
 8023752:	1b40      	subs	r0, r0, r5
 8023754:	6060      	str	r0, [r4, #4]
 8023756:	6863      	ldr	r3, [r4, #4]
 8023758:	6123      	str	r3, [r4, #16]
 802375a:	2300      	movs	r3, #0
 802375c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8023760:	e7aa      	b.n	80236b8 <_printf_i+0x14c>
 8023762:	6923      	ldr	r3, [r4, #16]
 8023764:	462a      	mov	r2, r5
 8023766:	4649      	mov	r1, r9
 8023768:	4640      	mov	r0, r8
 802376a:	47d0      	blx	sl
 802376c:	3001      	adds	r0, #1
 802376e:	d0ad      	beq.n	80236cc <_printf_i+0x160>
 8023770:	6823      	ldr	r3, [r4, #0]
 8023772:	079b      	lsls	r3, r3, #30
 8023774:	d413      	bmi.n	802379e <_printf_i+0x232>
 8023776:	68e0      	ldr	r0, [r4, #12]
 8023778:	9b03      	ldr	r3, [sp, #12]
 802377a:	4298      	cmp	r0, r3
 802377c:	bfb8      	it	lt
 802377e:	4618      	movlt	r0, r3
 8023780:	e7a6      	b.n	80236d0 <_printf_i+0x164>
 8023782:	2301      	movs	r3, #1
 8023784:	4632      	mov	r2, r6
 8023786:	4649      	mov	r1, r9
 8023788:	4640      	mov	r0, r8
 802378a:	47d0      	blx	sl
 802378c:	3001      	adds	r0, #1
 802378e:	d09d      	beq.n	80236cc <_printf_i+0x160>
 8023790:	3501      	adds	r5, #1
 8023792:	68e3      	ldr	r3, [r4, #12]
 8023794:	9903      	ldr	r1, [sp, #12]
 8023796:	1a5b      	subs	r3, r3, r1
 8023798:	42ab      	cmp	r3, r5
 802379a:	dcf2      	bgt.n	8023782 <_printf_i+0x216>
 802379c:	e7eb      	b.n	8023776 <_printf_i+0x20a>
 802379e:	2500      	movs	r5, #0
 80237a0:	f104 0619 	add.w	r6, r4, #25
 80237a4:	e7f5      	b.n	8023792 <_printf_i+0x226>
 80237a6:	bf00      	nop
 80237a8:	08025a7d 	.word	0x08025a7d
 80237ac:	08025a8e 	.word	0x08025a8e

080237b0 <__sflush_r>:
 80237b0:	898a      	ldrh	r2, [r1, #12]
 80237b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80237b6:	4605      	mov	r5, r0
 80237b8:	0710      	lsls	r0, r2, #28
 80237ba:	460c      	mov	r4, r1
 80237bc:	d458      	bmi.n	8023870 <__sflush_r+0xc0>
 80237be:	684b      	ldr	r3, [r1, #4]
 80237c0:	2b00      	cmp	r3, #0
 80237c2:	dc05      	bgt.n	80237d0 <__sflush_r+0x20>
 80237c4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80237c6:	2b00      	cmp	r3, #0
 80237c8:	dc02      	bgt.n	80237d0 <__sflush_r+0x20>
 80237ca:	2000      	movs	r0, #0
 80237cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80237d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80237d2:	2e00      	cmp	r6, #0
 80237d4:	d0f9      	beq.n	80237ca <__sflush_r+0x1a>
 80237d6:	2300      	movs	r3, #0
 80237d8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80237dc:	682f      	ldr	r7, [r5, #0]
 80237de:	6a21      	ldr	r1, [r4, #32]
 80237e0:	602b      	str	r3, [r5, #0]
 80237e2:	d032      	beq.n	802384a <__sflush_r+0x9a>
 80237e4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80237e6:	89a3      	ldrh	r3, [r4, #12]
 80237e8:	075a      	lsls	r2, r3, #29
 80237ea:	d505      	bpl.n	80237f8 <__sflush_r+0x48>
 80237ec:	6863      	ldr	r3, [r4, #4]
 80237ee:	1ac0      	subs	r0, r0, r3
 80237f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80237f2:	b10b      	cbz	r3, 80237f8 <__sflush_r+0x48>
 80237f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80237f6:	1ac0      	subs	r0, r0, r3
 80237f8:	2300      	movs	r3, #0
 80237fa:	4602      	mov	r2, r0
 80237fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80237fe:	6a21      	ldr	r1, [r4, #32]
 8023800:	4628      	mov	r0, r5
 8023802:	47b0      	blx	r6
 8023804:	1c43      	adds	r3, r0, #1
 8023806:	89a3      	ldrh	r3, [r4, #12]
 8023808:	d106      	bne.n	8023818 <__sflush_r+0x68>
 802380a:	6829      	ldr	r1, [r5, #0]
 802380c:	291d      	cmp	r1, #29
 802380e:	d82b      	bhi.n	8023868 <__sflush_r+0xb8>
 8023810:	4a29      	ldr	r2, [pc, #164]	; (80238b8 <__sflush_r+0x108>)
 8023812:	410a      	asrs	r2, r1
 8023814:	07d6      	lsls	r6, r2, #31
 8023816:	d427      	bmi.n	8023868 <__sflush_r+0xb8>
 8023818:	2200      	movs	r2, #0
 802381a:	6062      	str	r2, [r4, #4]
 802381c:	04d9      	lsls	r1, r3, #19
 802381e:	6922      	ldr	r2, [r4, #16]
 8023820:	6022      	str	r2, [r4, #0]
 8023822:	d504      	bpl.n	802382e <__sflush_r+0x7e>
 8023824:	1c42      	adds	r2, r0, #1
 8023826:	d101      	bne.n	802382c <__sflush_r+0x7c>
 8023828:	682b      	ldr	r3, [r5, #0]
 802382a:	b903      	cbnz	r3, 802382e <__sflush_r+0x7e>
 802382c:	6560      	str	r0, [r4, #84]	; 0x54
 802382e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8023830:	602f      	str	r7, [r5, #0]
 8023832:	2900      	cmp	r1, #0
 8023834:	d0c9      	beq.n	80237ca <__sflush_r+0x1a>
 8023836:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802383a:	4299      	cmp	r1, r3
 802383c:	d002      	beq.n	8023844 <__sflush_r+0x94>
 802383e:	4628      	mov	r0, r5
 8023840:	f7ff fc96 	bl	8023170 <_free_r>
 8023844:	2000      	movs	r0, #0
 8023846:	6360      	str	r0, [r4, #52]	; 0x34
 8023848:	e7c0      	b.n	80237cc <__sflush_r+0x1c>
 802384a:	2301      	movs	r3, #1
 802384c:	4628      	mov	r0, r5
 802384e:	47b0      	blx	r6
 8023850:	1c41      	adds	r1, r0, #1
 8023852:	d1c8      	bne.n	80237e6 <__sflush_r+0x36>
 8023854:	682b      	ldr	r3, [r5, #0]
 8023856:	2b00      	cmp	r3, #0
 8023858:	d0c5      	beq.n	80237e6 <__sflush_r+0x36>
 802385a:	2b1d      	cmp	r3, #29
 802385c:	d001      	beq.n	8023862 <__sflush_r+0xb2>
 802385e:	2b16      	cmp	r3, #22
 8023860:	d101      	bne.n	8023866 <__sflush_r+0xb6>
 8023862:	602f      	str	r7, [r5, #0]
 8023864:	e7b1      	b.n	80237ca <__sflush_r+0x1a>
 8023866:	89a3      	ldrh	r3, [r4, #12]
 8023868:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802386c:	81a3      	strh	r3, [r4, #12]
 802386e:	e7ad      	b.n	80237cc <__sflush_r+0x1c>
 8023870:	690f      	ldr	r7, [r1, #16]
 8023872:	2f00      	cmp	r7, #0
 8023874:	d0a9      	beq.n	80237ca <__sflush_r+0x1a>
 8023876:	0793      	lsls	r3, r2, #30
 8023878:	680e      	ldr	r6, [r1, #0]
 802387a:	bf08      	it	eq
 802387c:	694b      	ldreq	r3, [r1, #20]
 802387e:	600f      	str	r7, [r1, #0]
 8023880:	bf18      	it	ne
 8023882:	2300      	movne	r3, #0
 8023884:	eba6 0807 	sub.w	r8, r6, r7
 8023888:	608b      	str	r3, [r1, #8]
 802388a:	f1b8 0f00 	cmp.w	r8, #0
 802388e:	dd9c      	ble.n	80237ca <__sflush_r+0x1a>
 8023890:	6a21      	ldr	r1, [r4, #32]
 8023892:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8023894:	4643      	mov	r3, r8
 8023896:	463a      	mov	r2, r7
 8023898:	4628      	mov	r0, r5
 802389a:	47b0      	blx	r6
 802389c:	2800      	cmp	r0, #0
 802389e:	dc06      	bgt.n	80238ae <__sflush_r+0xfe>
 80238a0:	89a3      	ldrh	r3, [r4, #12]
 80238a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80238a6:	81a3      	strh	r3, [r4, #12]
 80238a8:	f04f 30ff 	mov.w	r0, #4294967295
 80238ac:	e78e      	b.n	80237cc <__sflush_r+0x1c>
 80238ae:	4407      	add	r7, r0
 80238b0:	eba8 0800 	sub.w	r8, r8, r0
 80238b4:	e7e9      	b.n	802388a <__sflush_r+0xda>
 80238b6:	bf00      	nop
 80238b8:	dfbffffe 	.word	0xdfbffffe

080238bc <_fflush_r>:
 80238bc:	b538      	push	{r3, r4, r5, lr}
 80238be:	690b      	ldr	r3, [r1, #16]
 80238c0:	4605      	mov	r5, r0
 80238c2:	460c      	mov	r4, r1
 80238c4:	b913      	cbnz	r3, 80238cc <_fflush_r+0x10>
 80238c6:	2500      	movs	r5, #0
 80238c8:	4628      	mov	r0, r5
 80238ca:	bd38      	pop	{r3, r4, r5, pc}
 80238cc:	b118      	cbz	r0, 80238d6 <_fflush_r+0x1a>
 80238ce:	6a03      	ldr	r3, [r0, #32]
 80238d0:	b90b      	cbnz	r3, 80238d6 <_fflush_r+0x1a>
 80238d2:	f7ff fa85 	bl	8022de0 <__sinit>
 80238d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80238da:	2b00      	cmp	r3, #0
 80238dc:	d0f3      	beq.n	80238c6 <_fflush_r+0xa>
 80238de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80238e0:	07d0      	lsls	r0, r2, #31
 80238e2:	d404      	bmi.n	80238ee <_fflush_r+0x32>
 80238e4:	0599      	lsls	r1, r3, #22
 80238e6:	d402      	bmi.n	80238ee <_fflush_r+0x32>
 80238e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80238ea:	f7ff fbd2 	bl	8023092 <__retarget_lock_acquire_recursive>
 80238ee:	4628      	mov	r0, r5
 80238f0:	4621      	mov	r1, r4
 80238f2:	f7ff ff5d 	bl	80237b0 <__sflush_r>
 80238f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80238f8:	07da      	lsls	r2, r3, #31
 80238fa:	4605      	mov	r5, r0
 80238fc:	d4e4      	bmi.n	80238c8 <_fflush_r+0xc>
 80238fe:	89a3      	ldrh	r3, [r4, #12]
 8023900:	059b      	lsls	r3, r3, #22
 8023902:	d4e1      	bmi.n	80238c8 <_fflush_r+0xc>
 8023904:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8023906:	f7ff fbc5 	bl	8023094 <__retarget_lock_release_recursive>
 802390a:	e7dd      	b.n	80238c8 <_fflush_r+0xc>

0802390c <__swbuf_r>:
 802390c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802390e:	460e      	mov	r6, r1
 8023910:	4614      	mov	r4, r2
 8023912:	4605      	mov	r5, r0
 8023914:	b118      	cbz	r0, 802391e <__swbuf_r+0x12>
 8023916:	6a03      	ldr	r3, [r0, #32]
 8023918:	b90b      	cbnz	r3, 802391e <__swbuf_r+0x12>
 802391a:	f7ff fa61 	bl	8022de0 <__sinit>
 802391e:	69a3      	ldr	r3, [r4, #24]
 8023920:	60a3      	str	r3, [r4, #8]
 8023922:	89a3      	ldrh	r3, [r4, #12]
 8023924:	071a      	lsls	r2, r3, #28
 8023926:	d525      	bpl.n	8023974 <__swbuf_r+0x68>
 8023928:	6923      	ldr	r3, [r4, #16]
 802392a:	b31b      	cbz	r3, 8023974 <__swbuf_r+0x68>
 802392c:	6823      	ldr	r3, [r4, #0]
 802392e:	6922      	ldr	r2, [r4, #16]
 8023930:	1a98      	subs	r0, r3, r2
 8023932:	6963      	ldr	r3, [r4, #20]
 8023934:	b2f6      	uxtb	r6, r6
 8023936:	4283      	cmp	r3, r0
 8023938:	4637      	mov	r7, r6
 802393a:	dc04      	bgt.n	8023946 <__swbuf_r+0x3a>
 802393c:	4621      	mov	r1, r4
 802393e:	4628      	mov	r0, r5
 8023940:	f7ff ffbc 	bl	80238bc <_fflush_r>
 8023944:	b9e0      	cbnz	r0, 8023980 <__swbuf_r+0x74>
 8023946:	68a3      	ldr	r3, [r4, #8]
 8023948:	3b01      	subs	r3, #1
 802394a:	60a3      	str	r3, [r4, #8]
 802394c:	6823      	ldr	r3, [r4, #0]
 802394e:	1c5a      	adds	r2, r3, #1
 8023950:	6022      	str	r2, [r4, #0]
 8023952:	701e      	strb	r6, [r3, #0]
 8023954:	6962      	ldr	r2, [r4, #20]
 8023956:	1c43      	adds	r3, r0, #1
 8023958:	429a      	cmp	r2, r3
 802395a:	d004      	beq.n	8023966 <__swbuf_r+0x5a>
 802395c:	89a3      	ldrh	r3, [r4, #12]
 802395e:	07db      	lsls	r3, r3, #31
 8023960:	d506      	bpl.n	8023970 <__swbuf_r+0x64>
 8023962:	2e0a      	cmp	r6, #10
 8023964:	d104      	bne.n	8023970 <__swbuf_r+0x64>
 8023966:	4621      	mov	r1, r4
 8023968:	4628      	mov	r0, r5
 802396a:	f7ff ffa7 	bl	80238bc <_fflush_r>
 802396e:	b938      	cbnz	r0, 8023980 <__swbuf_r+0x74>
 8023970:	4638      	mov	r0, r7
 8023972:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023974:	4621      	mov	r1, r4
 8023976:	4628      	mov	r0, r5
 8023978:	f000 f806 	bl	8023988 <__swsetup_r>
 802397c:	2800      	cmp	r0, #0
 802397e:	d0d5      	beq.n	802392c <__swbuf_r+0x20>
 8023980:	f04f 37ff 	mov.w	r7, #4294967295
 8023984:	e7f4      	b.n	8023970 <__swbuf_r+0x64>
	...

08023988 <__swsetup_r>:
 8023988:	b538      	push	{r3, r4, r5, lr}
 802398a:	4b2a      	ldr	r3, [pc, #168]	; (8023a34 <__swsetup_r+0xac>)
 802398c:	4605      	mov	r5, r0
 802398e:	6818      	ldr	r0, [r3, #0]
 8023990:	460c      	mov	r4, r1
 8023992:	b118      	cbz	r0, 802399c <__swsetup_r+0x14>
 8023994:	6a03      	ldr	r3, [r0, #32]
 8023996:	b90b      	cbnz	r3, 802399c <__swsetup_r+0x14>
 8023998:	f7ff fa22 	bl	8022de0 <__sinit>
 802399c:	89a3      	ldrh	r3, [r4, #12]
 802399e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80239a2:	0718      	lsls	r0, r3, #28
 80239a4:	d422      	bmi.n	80239ec <__swsetup_r+0x64>
 80239a6:	06d9      	lsls	r1, r3, #27
 80239a8:	d407      	bmi.n	80239ba <__swsetup_r+0x32>
 80239aa:	2309      	movs	r3, #9
 80239ac:	602b      	str	r3, [r5, #0]
 80239ae:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80239b2:	81a3      	strh	r3, [r4, #12]
 80239b4:	f04f 30ff 	mov.w	r0, #4294967295
 80239b8:	e034      	b.n	8023a24 <__swsetup_r+0x9c>
 80239ba:	0758      	lsls	r0, r3, #29
 80239bc:	d512      	bpl.n	80239e4 <__swsetup_r+0x5c>
 80239be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80239c0:	b141      	cbz	r1, 80239d4 <__swsetup_r+0x4c>
 80239c2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80239c6:	4299      	cmp	r1, r3
 80239c8:	d002      	beq.n	80239d0 <__swsetup_r+0x48>
 80239ca:	4628      	mov	r0, r5
 80239cc:	f7ff fbd0 	bl	8023170 <_free_r>
 80239d0:	2300      	movs	r3, #0
 80239d2:	6363      	str	r3, [r4, #52]	; 0x34
 80239d4:	89a3      	ldrh	r3, [r4, #12]
 80239d6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80239da:	81a3      	strh	r3, [r4, #12]
 80239dc:	2300      	movs	r3, #0
 80239de:	6063      	str	r3, [r4, #4]
 80239e0:	6923      	ldr	r3, [r4, #16]
 80239e2:	6023      	str	r3, [r4, #0]
 80239e4:	89a3      	ldrh	r3, [r4, #12]
 80239e6:	f043 0308 	orr.w	r3, r3, #8
 80239ea:	81a3      	strh	r3, [r4, #12]
 80239ec:	6923      	ldr	r3, [r4, #16]
 80239ee:	b94b      	cbnz	r3, 8023a04 <__swsetup_r+0x7c>
 80239f0:	89a3      	ldrh	r3, [r4, #12]
 80239f2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80239f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80239fa:	d003      	beq.n	8023a04 <__swsetup_r+0x7c>
 80239fc:	4621      	mov	r1, r4
 80239fe:	4628      	mov	r0, r5
 8023a00:	f000 f840 	bl	8023a84 <__smakebuf_r>
 8023a04:	89a0      	ldrh	r0, [r4, #12]
 8023a06:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023a0a:	f010 0301 	ands.w	r3, r0, #1
 8023a0e:	d00a      	beq.n	8023a26 <__swsetup_r+0x9e>
 8023a10:	2300      	movs	r3, #0
 8023a12:	60a3      	str	r3, [r4, #8]
 8023a14:	6963      	ldr	r3, [r4, #20]
 8023a16:	425b      	negs	r3, r3
 8023a18:	61a3      	str	r3, [r4, #24]
 8023a1a:	6923      	ldr	r3, [r4, #16]
 8023a1c:	b943      	cbnz	r3, 8023a30 <__swsetup_r+0xa8>
 8023a1e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8023a22:	d1c4      	bne.n	80239ae <__swsetup_r+0x26>
 8023a24:	bd38      	pop	{r3, r4, r5, pc}
 8023a26:	0781      	lsls	r1, r0, #30
 8023a28:	bf58      	it	pl
 8023a2a:	6963      	ldrpl	r3, [r4, #20]
 8023a2c:	60a3      	str	r3, [r4, #8]
 8023a2e:	e7f4      	b.n	8023a1a <__swsetup_r+0x92>
 8023a30:	2000      	movs	r0, #0
 8023a32:	e7f7      	b.n	8023a24 <__swsetup_r+0x9c>
 8023a34:	240000f0 	.word	0x240000f0

08023a38 <__swhatbuf_r>:
 8023a38:	b570      	push	{r4, r5, r6, lr}
 8023a3a:	460c      	mov	r4, r1
 8023a3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023a40:	2900      	cmp	r1, #0
 8023a42:	b096      	sub	sp, #88	; 0x58
 8023a44:	4615      	mov	r5, r2
 8023a46:	461e      	mov	r6, r3
 8023a48:	da0d      	bge.n	8023a66 <__swhatbuf_r+0x2e>
 8023a4a:	89a3      	ldrh	r3, [r4, #12]
 8023a4c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8023a50:	f04f 0100 	mov.w	r1, #0
 8023a54:	bf0c      	ite	eq
 8023a56:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8023a5a:	2340      	movne	r3, #64	; 0x40
 8023a5c:	2000      	movs	r0, #0
 8023a5e:	6031      	str	r1, [r6, #0]
 8023a60:	602b      	str	r3, [r5, #0]
 8023a62:	b016      	add	sp, #88	; 0x58
 8023a64:	bd70      	pop	{r4, r5, r6, pc}
 8023a66:	466a      	mov	r2, sp
 8023a68:	f000 f848 	bl	8023afc <_fstat_r>
 8023a6c:	2800      	cmp	r0, #0
 8023a6e:	dbec      	blt.n	8023a4a <__swhatbuf_r+0x12>
 8023a70:	9901      	ldr	r1, [sp, #4]
 8023a72:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8023a76:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8023a7a:	4259      	negs	r1, r3
 8023a7c:	4159      	adcs	r1, r3
 8023a7e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8023a82:	e7eb      	b.n	8023a5c <__swhatbuf_r+0x24>

08023a84 <__smakebuf_r>:
 8023a84:	898b      	ldrh	r3, [r1, #12]
 8023a86:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023a88:	079d      	lsls	r5, r3, #30
 8023a8a:	4606      	mov	r6, r0
 8023a8c:	460c      	mov	r4, r1
 8023a8e:	d507      	bpl.n	8023aa0 <__smakebuf_r+0x1c>
 8023a90:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8023a94:	6023      	str	r3, [r4, #0]
 8023a96:	6123      	str	r3, [r4, #16]
 8023a98:	2301      	movs	r3, #1
 8023a9a:	6163      	str	r3, [r4, #20]
 8023a9c:	b002      	add	sp, #8
 8023a9e:	bd70      	pop	{r4, r5, r6, pc}
 8023aa0:	ab01      	add	r3, sp, #4
 8023aa2:	466a      	mov	r2, sp
 8023aa4:	f7ff ffc8 	bl	8023a38 <__swhatbuf_r>
 8023aa8:	9900      	ldr	r1, [sp, #0]
 8023aaa:	4605      	mov	r5, r0
 8023aac:	4630      	mov	r0, r6
 8023aae:	f7ff f871 	bl	8022b94 <_malloc_r>
 8023ab2:	b948      	cbnz	r0, 8023ac8 <__smakebuf_r+0x44>
 8023ab4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023ab8:	059a      	lsls	r2, r3, #22
 8023aba:	d4ef      	bmi.n	8023a9c <__smakebuf_r+0x18>
 8023abc:	f023 0303 	bic.w	r3, r3, #3
 8023ac0:	f043 0302 	orr.w	r3, r3, #2
 8023ac4:	81a3      	strh	r3, [r4, #12]
 8023ac6:	e7e3      	b.n	8023a90 <__smakebuf_r+0xc>
 8023ac8:	89a3      	ldrh	r3, [r4, #12]
 8023aca:	6020      	str	r0, [r4, #0]
 8023acc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8023ad0:	81a3      	strh	r3, [r4, #12]
 8023ad2:	9b00      	ldr	r3, [sp, #0]
 8023ad4:	6163      	str	r3, [r4, #20]
 8023ad6:	9b01      	ldr	r3, [sp, #4]
 8023ad8:	6120      	str	r0, [r4, #16]
 8023ada:	b15b      	cbz	r3, 8023af4 <__smakebuf_r+0x70>
 8023adc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023ae0:	4630      	mov	r0, r6
 8023ae2:	f000 f81d 	bl	8023b20 <_isatty_r>
 8023ae6:	b128      	cbz	r0, 8023af4 <__smakebuf_r+0x70>
 8023ae8:	89a3      	ldrh	r3, [r4, #12]
 8023aea:	f023 0303 	bic.w	r3, r3, #3
 8023aee:	f043 0301 	orr.w	r3, r3, #1
 8023af2:	81a3      	strh	r3, [r4, #12]
 8023af4:	89a3      	ldrh	r3, [r4, #12]
 8023af6:	431d      	orrs	r5, r3
 8023af8:	81a5      	strh	r5, [r4, #12]
 8023afa:	e7cf      	b.n	8023a9c <__smakebuf_r+0x18>

08023afc <_fstat_r>:
 8023afc:	b538      	push	{r3, r4, r5, lr}
 8023afe:	4d07      	ldr	r5, [pc, #28]	; (8023b1c <_fstat_r+0x20>)
 8023b00:	2300      	movs	r3, #0
 8023b02:	4604      	mov	r4, r0
 8023b04:	4608      	mov	r0, r1
 8023b06:	4611      	mov	r1, r2
 8023b08:	602b      	str	r3, [r5, #0]
 8023b0a:	f7dd fe3a 	bl	8001782 <_fstat>
 8023b0e:	1c43      	adds	r3, r0, #1
 8023b10:	d102      	bne.n	8023b18 <_fstat_r+0x1c>
 8023b12:	682b      	ldr	r3, [r5, #0]
 8023b14:	b103      	cbz	r3, 8023b18 <_fstat_r+0x1c>
 8023b16:	6023      	str	r3, [r4, #0]
 8023b18:	bd38      	pop	{r3, r4, r5, pc}
 8023b1a:	bf00      	nop
 8023b1c:	24002968 	.word	0x24002968

08023b20 <_isatty_r>:
 8023b20:	b538      	push	{r3, r4, r5, lr}
 8023b22:	4d06      	ldr	r5, [pc, #24]	; (8023b3c <_isatty_r+0x1c>)
 8023b24:	2300      	movs	r3, #0
 8023b26:	4604      	mov	r4, r0
 8023b28:	4608      	mov	r0, r1
 8023b2a:	602b      	str	r3, [r5, #0]
 8023b2c:	f7dd fe39 	bl	80017a2 <_isatty>
 8023b30:	1c43      	adds	r3, r0, #1
 8023b32:	d102      	bne.n	8023b3a <_isatty_r+0x1a>
 8023b34:	682b      	ldr	r3, [r5, #0]
 8023b36:	b103      	cbz	r3, 8023b3a <_isatty_r+0x1a>
 8023b38:	6023      	str	r3, [r4, #0]
 8023b3a:	bd38      	pop	{r3, r4, r5, pc}
 8023b3c:	24002968 	.word	0x24002968

08023b40 <_init>:
 8023b40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023b42:	bf00      	nop
 8023b44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023b46:	bc08      	pop	{r3}
 8023b48:	469e      	mov	lr, r3
 8023b4a:	4770      	bx	lr

08023b4c <_fini>:
 8023b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023b4e:	bf00      	nop
 8023b50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8023b52:	bc08      	pop	{r3}
 8023b54:	469e      	mov	lr, r3
 8023b56:	4770      	bx	lr
