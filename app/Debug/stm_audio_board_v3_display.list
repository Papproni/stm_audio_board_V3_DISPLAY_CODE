
stm_audio_board_v3_display.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000241cc  080002d0  080002d0  000102d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002218  0802449c  0802449c  0003449c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000417a  080266b4  080266b4  000366b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000064  0802a830  0802a830  0003a830  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00019500  0802a894  0802a894  0003a894  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 000000a0  08043d94  08043d94  00053d94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .init_array   00000018  08043e34  08043e34  00053e34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   0000000c  08043e4c  08043e4c  00053e4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         000000f8  24000000  08043e58  00060000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00002bac  240000f8  08043f50  000600f8  2**2
                  ALLOC
 11 ._user_heap_stack 00006004  24002ca4  08043f50  00062ca4  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  000600f8  2**0
                  CONTENTS, READONLY
 13 .comment      000000c2  00000000  00000000  00060126  2**0
                  CONTENTS, READONLY
 14 .debug_info   00075aca  00000000  00000000  000601e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000e56d  00000000  00000000  000d5cb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00002748  00000000  00000000  000e4220  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00001c79  00000000  00000000  000e6968  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0003d1f1  00000000  00000000  000e85e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00031733  00000000  00000000  001257d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00172153  00000000  00000000  00156f05  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000ab90  00000000  00000000  002c9058  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000075  00000000  00000000  002d3be8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	; (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	; (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	; (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	240000f8 	.word	0x240000f8
 80002ec:	00000000 	.word	0x00000000
 80002f0:	08024484 	.word	0x08024484

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	; (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	; (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	; (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	240000fc 	.word	0x240000fc
 800030c:	08024484 	.word	0x08024484

08000310 <memchr>:
 8000310:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000314:	2a10      	cmp	r2, #16
 8000316:	db2b      	blt.n	8000370 <memchr+0x60>
 8000318:	f010 0f07 	tst.w	r0, #7
 800031c:	d008      	beq.n	8000330 <memchr+0x20>
 800031e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000322:	3a01      	subs	r2, #1
 8000324:	428b      	cmp	r3, r1
 8000326:	d02d      	beq.n	8000384 <memchr+0x74>
 8000328:	f010 0f07 	tst.w	r0, #7
 800032c:	b342      	cbz	r2, 8000380 <memchr+0x70>
 800032e:	d1f6      	bne.n	800031e <memchr+0xe>
 8000330:	b4f0      	push	{r4, r5, r6, r7}
 8000332:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000336:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800033a:	f022 0407 	bic.w	r4, r2, #7
 800033e:	f07f 0700 	mvns.w	r7, #0
 8000342:	2300      	movs	r3, #0
 8000344:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000348:	3c08      	subs	r4, #8
 800034a:	ea85 0501 	eor.w	r5, r5, r1
 800034e:	ea86 0601 	eor.w	r6, r6, r1
 8000352:	fa85 f547 	uadd8	r5, r5, r7
 8000356:	faa3 f587 	sel	r5, r3, r7
 800035a:	fa86 f647 	uadd8	r6, r6, r7
 800035e:	faa5 f687 	sel	r6, r5, r7
 8000362:	b98e      	cbnz	r6, 8000388 <memchr+0x78>
 8000364:	d1ee      	bne.n	8000344 <memchr+0x34>
 8000366:	bcf0      	pop	{r4, r5, r6, r7}
 8000368:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800036c:	f002 0207 	and.w	r2, r2, #7
 8000370:	b132      	cbz	r2, 8000380 <memchr+0x70>
 8000372:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000376:	3a01      	subs	r2, #1
 8000378:	ea83 0301 	eor.w	r3, r3, r1
 800037c:	b113      	cbz	r3, 8000384 <memchr+0x74>
 800037e:	d1f8      	bne.n	8000372 <memchr+0x62>
 8000380:	2000      	movs	r0, #0
 8000382:	4770      	bx	lr
 8000384:	3801      	subs	r0, #1
 8000386:	4770      	bx	lr
 8000388:	2d00      	cmp	r5, #0
 800038a:	bf06      	itte	eq
 800038c:	4635      	moveq	r5, r6
 800038e:	3803      	subeq	r0, #3
 8000390:	3807      	subne	r0, #7
 8000392:	f015 0f01 	tst.w	r5, #1
 8000396:	d107      	bne.n	80003a8 <memchr+0x98>
 8000398:	3001      	adds	r0, #1
 800039a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800039e:	bf02      	ittt	eq
 80003a0:	3001      	addeq	r0, #1
 80003a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80003a6:	3001      	addeq	r0, #1
 80003a8:	bcf0      	pop	{r4, r5, r6, r7}
 80003aa:	3801      	subs	r0, #1
 80003ac:	4770      	bx	lr
 80003ae:	bf00      	nop

080003b0 <ILI9341_Init>:
static void DC_H(void);
static void LED_H(void);

// Initialization
void ILI9341_Init(void)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	af00      	add	r7, sp, #0
	ILI9341_Reset();
 80003b4:	f000 f99d 	bl	80006f2 <ILI9341_Reset>
	ILI9341_SoftReset();
 80003b8:	f000 f9ae 	bl	8000718 <ILI9341_SoftReset>

	/* Power Control A */
	LCD_WR_REG(0xCB);
 80003bc:	20cb      	movs	r0, #203	; 0xcb
 80003be:	f000 f9c5 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 80003c2:	2039      	movs	r0, #57	; 0x39
 80003c4:	f000 f9dc 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 80003c8:	202c      	movs	r0, #44	; 0x2c
 80003ca:	f000 f9d9 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80003ce:	2000      	movs	r0, #0
 80003d0:	f000 f9d6 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 80003d4:	2034      	movs	r0, #52	; 0x34
 80003d6:	f000 f9d3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 80003da:	2002      	movs	r0, #2
 80003dc:	f000 f9d0 	bl	8000780 <LCD_WR_DATA>
	/* Power Control B */
	LCD_WR_REG(0xCF);
 80003e0:	20cf      	movs	r0, #207	; 0xcf
 80003e2:	f000 f9b3 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80003e6:	2000      	movs	r0, #0
 80003e8:	f000 f9ca 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 80003ec:	20c1      	movs	r0, #193	; 0xc1
 80003ee:	f000 f9c7 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x30);
 80003f2:	2030      	movs	r0, #48	; 0x30
 80003f4:	f000 f9c4 	bl	8000780 <LCD_WR_DATA>
	/* Driver timing control A */
	LCD_WR_REG(0xE8);
 80003f8:	20e8      	movs	r0, #232	; 0xe8
 80003fa:	f000 f9a7 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 80003fe:	2085      	movs	r0, #133	; 0x85
 8000400:	f000 f9be 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f9bb 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x78);
 800040a:	2078      	movs	r0, #120	; 0x78
 800040c:	f000 f9b8 	bl	8000780 <LCD_WR_DATA>
	/* Driver timing control B */
	LCD_WR_REG(0xEA);
 8000410:	20ea      	movs	r0, #234	; 0xea
 8000412:	f000 f99b 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8000416:	2000      	movs	r0, #0
 8000418:	f000 f9b2 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 800041c:	2000      	movs	r0, #0
 800041e:	f000 f9af 	bl	8000780 <LCD_WR_DATA>
	/* Power on Sequence control */
	LCD_WR_REG(0xED);
 8000422:	20ed      	movs	r0, #237	; 0xed
 8000424:	f000 f992 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 8000428:	2064      	movs	r0, #100	; 0x64
 800042a:	f000 f9a9 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 800042e:	2003      	movs	r0, #3
 8000430:	f000 f9a6 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x12);
 8000434:	2012      	movs	r0, #18
 8000436:	f000 f9a3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x81);
 800043a:	2081      	movs	r0, #129	; 0x81
 800043c:	f000 f9a0 	bl	8000780 <LCD_WR_DATA>
	/* Pump ratio control */
	LCD_WR_REG(0xF7);
 8000440:	20f7      	movs	r0, #247	; 0xf7
 8000442:	f000 f983 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 8000446:	2020      	movs	r0, #32
 8000448:	f000 f99a 	bl	8000780 <LCD_WR_DATA>
	/* Power Control 1 */
	LCD_WR_REG(0xC0);
 800044c:	20c0      	movs	r0, #192	; 0xc0
 800044e:	f000 f97d 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 8000452:	2010      	movs	r0, #16
 8000454:	f000 f994 	bl	8000780 <LCD_WR_DATA>
	/* Power Control 2 */
	LCD_WR_REG(0xC1);
 8000458:	20c1      	movs	r0, #193	; 0xc1
 800045a:	f000 f977 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 800045e:	2010      	movs	r0, #16
 8000460:	f000 f98e 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 1 */
	LCD_WR_REG(0xC5);
 8000464:	20c5      	movs	r0, #197	; 0xc5
 8000466:	f000 f971 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x3E);
 800046a:	203e      	movs	r0, #62	; 0x3e
 800046c:	f000 f988 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 8000470:	2028      	movs	r0, #40	; 0x28
 8000472:	f000 f985 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0xC7);
 8000476:	20c7      	movs	r0, #199	; 0xc7
 8000478:	f000 f968 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x86);
 800047c:	2086      	movs	r0, #134	; 0x86
 800047e:	f000 f97f 	bl	8000780 <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0x36);
 8000482:	2036      	movs	r0, #54	; 0x36
 8000484:	f000 f962 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x48);
 8000488:	2048      	movs	r0, #72	; 0x48
 800048a:	f000 f979 	bl	8000780 <LCD_WR_DATA>
	/* Pixel Format Set */
	LCD_WR_REG(0x3A);
 800048e:	203a      	movs	r0, #58	; 0x3a
 8000490:	f000 f95c 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x55);    //16bit
 8000494:	2055      	movs	r0, #85	; 0x55
 8000496:	f000 f973 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 800049a:	20b1      	movs	r0, #177	; 0xb1
 800049c:	f000 f956 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80004a0:	2000      	movs	r0, #0
 80004a2:	f000 f96d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x18);
 80004a6:	2018      	movs	r0, #24
 80004a8:	f000 f96a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x20); // Little Endian
#endif
	/* Display Function Control */
	LCD_WR_REG(0xB6);
 80004ac:	20b6      	movs	r0, #182	; 0xb6
 80004ae:	f000 f94d 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x08);
 80004b2:	2008      	movs	r0, #8
 80004b4:	f000 f964 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x82);
 80004b8:	2082      	movs	r0, #130	; 0x82
 80004ba:	f000 f961 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x27);
 80004be:	2027      	movs	r0, #39	; 0x27
 80004c0:	f000 f95e 	bl	8000780 <LCD_WR_DATA>
	/* 3GAMMA FUNCTION DISABLE */
	LCD_WR_REG(0xF2);
 80004c4:	20f2      	movs	r0, #242	; 0xf2
 80004c6:	f000 f941 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80004ca:	2000      	movs	r0, #0
 80004cc:	f000 f958 	bl	8000780 <LCD_WR_DATA>
	/* GAMMA CURVE SELECTED */
	LCD_WR_REG(0x26); //Gamma set
 80004d0:	2026      	movs	r0, #38	; 0x26
 80004d2:	f000 f93b 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x01); 	//Gamma Curve (G2.2)
 80004d6:	2001      	movs	r0, #1
 80004d8:	f000 f952 	bl	8000780 <LCD_WR_DATA>
	//Positive Gamma  Correction
	LCD_WR_REG(0xE0);
 80004dc:	20e0      	movs	r0, #224	; 0xe0
 80004de:	f000 f935 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 80004e2:	200f      	movs	r0, #15
 80004e4:	f000 f94c 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 80004e8:	2031      	movs	r0, #49	; 0x31
 80004ea:	f000 f949 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 80004ee:	202b      	movs	r0, #43	; 0x2b
 80004f0:	f000 f946 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 80004f4:	200c      	movs	r0, #12
 80004f6:	f000 f943 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 80004fa:	200e      	movs	r0, #14
 80004fc:	f000 f940 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000500:	2008      	movs	r0, #8
 8000502:	f000 f93d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x4E);
 8000506:	204e      	movs	r0, #78	; 0x4e
 8000508:	f000 f93a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xF1);
 800050c:	20f1      	movs	r0, #241	; 0xf1
 800050e:	f000 f937 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x37);
 8000512:	2037      	movs	r0, #55	; 0x37
 8000514:	f000 f934 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8000518:	2007      	movs	r0, #7
 800051a:	f000 f931 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 800051e:	2010      	movs	r0, #16
 8000520:	f000 f92e 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000524:	2003      	movs	r0, #3
 8000526:	f000 f92b 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 800052a:	200e      	movs	r0, #14
 800052c:	f000 f928 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x09);
 8000530:	2009      	movs	r0, #9
 8000532:	f000 f925 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000536:	2000      	movs	r0, #0
 8000538:	f000 f922 	bl	8000780 <LCD_WR_DATA>
	//Negative Gamma  Correction
	LCD_WR_REG(0xE1);
 800053c:	20e1      	movs	r0, #225	; 0xe1
 800053e:	f000 f905 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 8000542:	2000      	movs	r0, #0
 8000544:	f000 f91c 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8000548:	200e      	movs	r0, #14
 800054a:	f000 f919 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x14);
 800054e:	2014      	movs	r0, #20
 8000550:	f000 f916 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000554:	2003      	movs	r0, #3
 8000556:	f000 f913 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 800055a:	2011      	movs	r0, #17
 800055c:	f000 f910 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 8000560:	2007      	movs	r0, #7
 8000562:	f000 f90d 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8000566:	2031      	movs	r0, #49	; 0x31
 8000568:	f000 f90a 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 800056c:	20c1      	movs	r0, #193	; 0xc1
 800056e:	f000 f907 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x48);
 8000572:	2048      	movs	r0, #72	; 0x48
 8000574:	f000 f904 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000578:	2008      	movs	r0, #8
 800057a:	f000 f901 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 800057e:	200f      	movs	r0, #15
 8000580:	f000 f8fe 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 8000584:	200c      	movs	r0, #12
 8000586:	f000 f8fb 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 800058a:	2031      	movs	r0, #49	; 0x31
 800058c:	f000 f8f8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x36);
 8000590:	2036      	movs	r0, #54	; 0x36
 8000592:	f000 f8f5 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8000596:	200f      	movs	r0, #15
 8000598:	f000 f8f2 	bl	8000780 <LCD_WR_DATA>
	//EXIT SLEEP
	LCD_WR_REG(0x11);
 800059c:	2011      	movs	r0, #17
 800059e:	f000 f8d5 	bl	800074c <LCD_WR_REG>

	HAL_Delay(120);
 80005a2:	2078      	movs	r0, #120	; 0x78
 80005a4:	f001 fa80 	bl	8001aa8 <HAL_Delay>

	//TURN ON DISPLAY
	LCD_WR_REG(0x29);
 80005a8:	2029      	movs	r0, #41	; 0x29
 80005aa:	f000 f8cf 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(0x2C);
 80005ae:	202c      	movs	r0, #44	; 0x2c
 80005b0:	f000 f8e6 	bl	8000780 <LCD_WR_DATA>

	LCD_direction(ROTATE_90);
 80005b4:	2001      	movs	r0, #1
 80005b6:	f000 f8fd 	bl	80007b4 <LCD_direction>

}
 80005ba:	bf00      	nop
 80005bc:	bd80      	pop	{r7, pc}

080005be <ILI9341_SetWindow>:

void ILI9341_SetWindow(uint16_t start_x, uint16_t start_y, uint16_t end_x, uint16_t end_y)
{
 80005be:	b590      	push	{r4, r7, lr}
 80005c0:	b083      	sub	sp, #12
 80005c2:	af00      	add	r7, sp, #0
 80005c4:	4604      	mov	r4, r0
 80005c6:	4608      	mov	r0, r1
 80005c8:	4611      	mov	r1, r2
 80005ca:	461a      	mov	r2, r3
 80005cc:	4623      	mov	r3, r4
 80005ce:	80fb      	strh	r3, [r7, #6]
 80005d0:	4603      	mov	r3, r0
 80005d2:	80bb      	strh	r3, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	807b      	strh	r3, [r7, #2]
 80005d8:	4613      	mov	r3, r2
 80005da:	803b      	strh	r3, [r7, #0]
	// Set Window
	LCD_WR_REG(0x2a);
 80005dc:	202a      	movs	r0, #42	; 0x2a
 80005de:	f000 f8b5 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(start_x >> 8);
 80005e2:	88fb      	ldrh	r3, [r7, #6]
 80005e4:	0a1b      	lsrs	r3, r3, #8
 80005e6:	b29b      	uxth	r3, r3
 80005e8:	b2db      	uxtb	r3, r3
 80005ea:	4618      	mov	r0, r3
 80005ec:	f000 f8c8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_x);
 80005f0:	88fb      	ldrh	r3, [r7, #6]
 80005f2:	b2db      	uxtb	r3, r3
 80005f4:	4618      	mov	r0, r3
 80005f6:	f000 f8c3 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(end_x >> 8);
 80005fa:	887b      	ldrh	r3, [r7, #2]
 80005fc:	0a1b      	lsrs	r3, r3, #8
 80005fe:	b29b      	uxth	r3, r3
 8000600:	b2db      	uxtb	r3, r3
 8000602:	4618      	mov	r0, r3
 8000604:	f000 f8bc 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_x);
 8000608:	887b      	ldrh	r3, [r7, #2]
 800060a:	b2db      	uxtb	r3, r3
 800060c:	4618      	mov	r0, r3
 800060e:	f000 f8b7 	bl	8000780 <LCD_WR_DATA>

	LCD_WR_REG(0x2b);
 8000612:	202b      	movs	r0, #43	; 0x2b
 8000614:	f000 f89a 	bl	800074c <LCD_WR_REG>
	LCD_WR_DATA(start_y >> 8);
 8000618:	88bb      	ldrh	r3, [r7, #4]
 800061a:	0a1b      	lsrs	r3, r3, #8
 800061c:	b29b      	uxth	r3, r3
 800061e:	b2db      	uxtb	r3, r3
 8000620:	4618      	mov	r0, r3
 8000622:	f000 f8ad 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_y);
 8000626:	88bb      	ldrh	r3, [r7, #4]
 8000628:	b2db      	uxtb	r3, r3
 800062a:	4618      	mov	r0, r3
 800062c:	f000 f8a8 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(end_y >> 8);
 8000630:	883b      	ldrh	r3, [r7, #0]
 8000632:	0a1b      	lsrs	r3, r3, #8
 8000634:	b29b      	uxth	r3, r3
 8000636:	b2db      	uxtb	r3, r3
 8000638:	4618      	mov	r0, r3
 800063a:	f000 f8a1 	bl	8000780 <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_y);
 800063e:	883b      	ldrh	r3, [r7, #0]
 8000640:	b2db      	uxtb	r3, r3
 8000642:	4618      	mov	r0, r3
 8000644:	f000 f89c 	bl	8000780 <LCD_WR_DATA>

}
 8000648:	bf00      	nop
 800064a:	370c      	adds	r7, #12
 800064c:	46bd      	mov	sp, r7
 800064e:	bd90      	pop	{r4, r7, pc}

08000650 <ConvHL>:
		Error_Handler();
	}
}

static void ConvHL(uint8_t *s, int32_t l)
{
 8000650:	b480      	push	{r7}
 8000652:	b085      	sub	sp, #20
 8000654:	af00      	add	r7, sp, #0
 8000656:	6078      	str	r0, [r7, #4]
 8000658:	6039      	str	r1, [r7, #0]
	uint8_t v;
	while (l > 0) {
 800065a:	e010      	b.n	800067e <ConvHL+0x2e>
		v = *(s+1);
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	785b      	ldrb	r3, [r3, #1]
 8000660:	73fb      	strb	r3, [r7, #15]
		*(s+1) = *s;
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	3301      	adds	r3, #1
 8000666:	687a      	ldr	r2, [r7, #4]
 8000668:	7812      	ldrb	r2, [r2, #0]
 800066a:	701a      	strb	r2, [r3, #0]
		*s = v;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	7bfa      	ldrb	r2, [r7, #15]
 8000670:	701a      	strb	r2, [r3, #0]
		s += 2;
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	3302      	adds	r3, #2
 8000676:	607b      	str	r3, [r7, #4]
		l -= 2;
 8000678:	683b      	ldr	r3, [r7, #0]
 800067a:	3b02      	subs	r3, #2
 800067c:	603b      	str	r3, [r7, #0]
	while (l > 0) {
 800067e:	683b      	ldr	r3, [r7, #0]
 8000680:	2b00      	cmp	r3, #0
 8000682:	dceb      	bgt.n	800065c <ConvHL+0xc>
	}
}
 8000684:	bf00      	nop
 8000686:	bf00      	nop
 8000688:	3714      	adds	r7, #20
 800068a:	46bd      	mov	sp, r7
 800068c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000690:	4770      	bx	lr
	...

08000694 <ILI9341_DrawBitmap>:

// Call this function after ILI9341_SetWindow
// This function is non blocked
// The variable for Callback is open. User should set by himself
void ILI9341_DrawBitmap(uint16_t w, uint16_t h, uint8_t *s)
{
 8000694:	b580      	push	{r7, lr}
 8000696:	b082      	sub	sp, #8
 8000698:	af00      	add	r7, sp, #0
 800069a:	4603      	mov	r3, r0
 800069c:	603a      	str	r2, [r7, #0]
 800069e:	80fb      	strh	r3, [r7, #6]
 80006a0:	460b      	mov	r3, r1
 80006a2:	80bb      	strh	r3, [r7, #4]
	// Enable to access GRAM
	LCD_WR_REG(0x2c);
 80006a4:	202c      	movs	r0, #44	; 0x2c
 80006a6:	f000 f851 	bl	800074c <LCD_WR_REG>

	DC_H();
 80006aa:	f000 f8e7 	bl	800087c <DC_H>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
	ConvHL(s, (int32_t)w*h*2);
 80006ae:	88fb      	ldrh	r3, [r7, #6]
 80006b0:	88ba      	ldrh	r2, [r7, #4]
 80006b2:	fb02 f303 	mul.w	r3, r2, r3
 80006b6:	005b      	lsls	r3, r3, #1
 80006b8:	4619      	mov	r1, r3
 80006ba:	6838      	ldr	r0, [r7, #0]
 80006bc:	f7ff ffc8 	bl	8000650 <ConvHL>
	HAL_SPI_Transmit_DMA(&hspi5, (uint8_t*)s, w * h *2);
 80006c0:	88fa      	ldrh	r2, [r7, #6]
 80006c2:	88bb      	ldrh	r3, [r7, #4]
 80006c4:	fb12 f303 	smulbb	r3, r2, r3
 80006c8:	b29b      	uxth	r3, r3
 80006ca:	005b      	lsls	r3, r3, #1
 80006cc:	b29b      	uxth	r3, r3
 80006ce:	461a      	mov	r2, r3
 80006d0:	6839      	ldr	r1, [r7, #0]
 80006d2:	4803      	ldr	r0, [pc, #12]	; (80006e0 <ILI9341_DrawBitmap+0x4c>)
 80006d4:	f00a f992 	bl	800a9fc <HAL_SPI_Transmit_DMA>
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 80006d8:	bf00      	nop
 80006da:	3708      	adds	r7, #8
 80006dc:	46bd      	mov	sp, r7
 80006de:	bd80      	pop	{r7, pc}
 80006e0:	2400028c 	.word	0x2400028c

080006e4 <ILI9341_EndOfDrawBitmap>:

// User should call it at callback
void ILI9341_EndOfDrawBitmap(void)
{
 80006e4:	b480      	push	{r7}
 80006e6:	af00      	add	r7, sp, #0
#if 0
	__HAL_SPI_DISABLE(&hspi5);
	hspi5.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi5);
#endif
}
 80006e8:	bf00      	nop
 80006ea:	46bd      	mov	sp, r7
 80006ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f0:	4770      	bx	lr

080006f2 <ILI9341_Reset>:

void ILI9341_Reset(void)
{
 80006f2:	b580      	push	{r7, lr}
 80006f4:	af00      	add	r7, sp, #0
	RESET_L();
 80006f6:	f000 f891 	bl	800081c <RESET_L>
	HAL_Delay(100);
 80006fa:	2064      	movs	r0, #100	; 0x64
 80006fc:	f001 f9d4 	bl	8001aa8 <HAL_Delay>
	RESET_H();
 8000700:	f000 f898 	bl	8000834 <RESET_H>
	HAL_Delay(100);
 8000704:	2064      	movs	r0, #100	; 0x64
 8000706:	f001 f9cf 	bl	8001aa8 <HAL_Delay>
	CS_L();
 800070a:	f000 f89f 	bl	800084c <CS_L>
	LED_H();
 800070e:	f000 f8c1 	bl	8000894 <LED_H>
}
 8000712:	bf00      	nop
 8000714:	bd80      	pop	{r7, pc}
	...

08000718 <ILI9341_SoftReset>:

void ILI9341_SoftReset(void)
{
 8000718:	b580      	push	{r7, lr}
 800071a:	b082      	sub	sp, #8
 800071c:	af00      	add	r7, sp, #0
	uint8_t cmd;
	cmd = 0x01; //Software reset
 800071e:	2301      	movs	r3, #1
 8000720:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8000722:	f000 f89f 	bl	8000864 <DC_L>
	if (HAL_SPI_Transmit(&hspi5, &cmd, 1, 1000) != HAL_OK) {
 8000726:	1df9      	adds	r1, r7, #7
 8000728:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800072c:	2201      	movs	r2, #1
 800072e:	4806      	ldr	r0, [pc, #24]	; (8000748 <ILI9341_SoftReset+0x30>)
 8000730:	f009 ff76 	bl	800a620 <HAL_SPI_Transmit>
 8000734:	4603      	mov	r3, r0
 8000736:	2b00      	cmp	r3, #0
 8000738:	d001      	beq.n	800073e <ILI9341_SoftReset+0x26>
		Error_Handler();
 800073a:	f000 fbe5 	bl	8000f08 <Error_Handler>
	}

}
 800073e:	bf00      	nop
 8000740:	3708      	adds	r7, #8
 8000742:	46bd      	mov	sp, r7
 8000744:	bd80      	pop	{r7, pc}
 8000746:	bf00      	nop
 8000748:	2400028c 	.word	0x2400028c

0800074c <LCD_WR_REG>:


void LCD_WR_REG(uint8_t data)
{
 800074c:	b580      	push	{r7, lr}
 800074e:	b082      	sub	sp, #8
 8000750:	af00      	add	r7, sp, #0
 8000752:	4603      	mov	r3, r0
 8000754:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8000756:	f000 f885 	bl	8000864 <DC_L>
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 800075a:	1df9      	adds	r1, r7, #7
 800075c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000760:	2201      	movs	r2, #1
 8000762:	4806      	ldr	r0, [pc, #24]	; (800077c <LCD_WR_REG+0x30>)
 8000764:	f009 ff5c 	bl	800a620 <HAL_SPI_Transmit>
 8000768:	4603      	mov	r3, r0
 800076a:	2b00      	cmp	r3, #0
 800076c:	d001      	beq.n	8000772 <LCD_WR_REG+0x26>
		Error_Handler();
 800076e:	f000 fbcb 	bl	8000f08 <Error_Handler>
	}
}
 8000772:	bf00      	nop
 8000774:	3708      	adds	r7, #8
 8000776:	46bd      	mov	sp, r7
 8000778:	bd80      	pop	{r7, pc}
 800077a:	bf00      	nop
 800077c:	2400028c 	.word	0x2400028c

08000780 <LCD_WR_DATA>:

static void LCD_WR_DATA(uint8_t data)
{
 8000780:	b580      	push	{r7, lr}
 8000782:	b082      	sub	sp, #8
 8000784:	af00      	add	r7, sp, #0
 8000786:	4603      	mov	r3, r0
 8000788:	71fb      	strb	r3, [r7, #7]
	DC_H();
 800078a:	f000 f877 	bl	800087c <DC_H>
	if (HAL_SPI_Transmit(&hspi5, &data, 1, 1000) != HAL_OK) {
 800078e:	1df9      	adds	r1, r7, #7
 8000790:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000794:	2201      	movs	r2, #1
 8000796:	4806      	ldr	r0, [pc, #24]	; (80007b0 <LCD_WR_DATA+0x30>)
 8000798:	f009 ff42 	bl	800a620 <HAL_SPI_Transmit>
 800079c:	4603      	mov	r3, r0
 800079e:	2b00      	cmp	r3, #0
 80007a0:	d001      	beq.n	80007a6 <LCD_WR_DATA+0x26>
		Error_Handler();
 80007a2:	f000 fbb1 	bl	8000f08 <Error_Handler>
	}
}
 80007a6:	bf00      	nop
 80007a8:	3708      	adds	r7, #8
 80007aa:	46bd      	mov	sp, r7
 80007ac:	bd80      	pop	{r7, pc}
 80007ae:	bf00      	nop
 80007b0:	2400028c 	.word	0x2400028c

080007b4 <LCD_direction>:
	spiDmaTransferComplete = 1;
}
*/

static void LCD_direction(LCD_Horizontal_t direction)
{
 80007b4:	b580      	push	{r7, lr}
 80007b6:	b082      	sub	sp, #8
 80007b8:	af00      	add	r7, sp, #0
 80007ba:	4603      	mov	r3, r0
 80007bc:	71fb      	strb	r3, [r7, #7]
	switch (direction) {
 80007be:	79fb      	ldrb	r3, [r7, #7]
 80007c0:	2b03      	cmp	r3, #3
 80007c2:	d827      	bhi.n	8000814 <LCD_direction+0x60>
 80007c4:	a201      	add	r2, pc, #4	; (adr r2, 80007cc <LCD_direction+0x18>)
 80007c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007ca:	bf00      	nop
 80007cc:	080007dd 	.word	0x080007dd
 80007d0:	080007eb 	.word	0x080007eb
 80007d4:	080007f9 	.word	0x080007f9
 80007d8:	08000807 	.word	0x08000807
	case ROTATE_0:
		LCD_WR_REG(0x36);
 80007dc:	2036      	movs	r0, #54	; 0x36
 80007de:	f7ff ffb5 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x48);
 80007e2:	2048      	movs	r0, #72	; 0x48
 80007e4:	f7ff ffcc 	bl	8000780 <LCD_WR_DATA>
		break;
 80007e8:	e014      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_90:
		LCD_WR_REG(0x36);
 80007ea:	2036      	movs	r0, #54	; 0x36
 80007ec:	f7ff ffae 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x28);
 80007f0:	2028      	movs	r0, #40	; 0x28
 80007f2:	f7ff ffc5 	bl	8000780 <LCD_WR_DATA>
		break;
 80007f6:	e00d      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_180:
		LCD_WR_REG(0x36);
 80007f8:	2036      	movs	r0, #54	; 0x36
 80007fa:	f7ff ffa7 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0x88);
 80007fe:	2088      	movs	r0, #136	; 0x88
 8000800:	f7ff ffbe 	bl	8000780 <LCD_WR_DATA>
		break;
 8000804:	e006      	b.n	8000814 <LCD_direction+0x60>
	case ROTATE_270:
		LCD_WR_REG(0x36);
 8000806:	2036      	movs	r0, #54	; 0x36
 8000808:	f7ff ffa0 	bl	800074c <LCD_WR_REG>
		LCD_WR_DATA(0xE8);
 800080c:	20e8      	movs	r0, #232	; 0xe8
 800080e:	f7ff ffb7 	bl	8000780 <LCD_WR_DATA>
		break;
 8000812:	bf00      	nop
	}
}
 8000814:	bf00      	nop
 8000816:	3708      	adds	r7, #8
 8000818:	46bd      	mov	sp, r7
 800081a:	bd80      	pop	{r7, pc}

0800081c <RESET_L>:

static void RESET_L(void)
{
 800081c:	b580      	push	{r7, lr}
 800081e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 8000820:	2200      	movs	r2, #0
 8000822:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000826:	4802      	ldr	r0, [pc, #8]	; (8000830 <RESET_L+0x14>)
 8000828:	f005 fba6 	bl	8005f78 <HAL_GPIO_WritePin>
}
 800082c:	bf00      	nop
 800082e:	bd80      	pop	{r7, pc}
 8000830:	58021800 	.word	0x58021800

08000834 <RESET_H>:

static void RESET_H(void)
{
 8000834:	b580      	push	{r7, lr}
 8000836:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_SET);
 8000838:	2201      	movs	r2, #1
 800083a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800083e:	4802      	ldr	r0, [pc, #8]	; (8000848 <RESET_H+0x14>)
 8000840:	f005 fb9a 	bl	8005f78 <HAL_GPIO_WritePin>
}
 8000844:	bf00      	nop
 8000846:	bd80      	pop	{r7, pc}
 8000848:	58021800 	.word	0x58021800

0800084c <CS_L>:

static void CS_L(void)
{
 800084c:	b580      	push	{r7, lr}
 800084e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SPI5_NSS_GPIO_Port, SPI5_NSS_Pin, GPIO_PIN_RESET);
 8000850:	2200      	movs	r2, #0
 8000852:	2140      	movs	r1, #64	; 0x40
 8000854:	4802      	ldr	r0, [pc, #8]	; (8000860 <CS_L+0x14>)
 8000856:	f005 fb8f 	bl	8005f78 <HAL_GPIO_WritePin>
}
 800085a:	bf00      	nop
 800085c:	bd80      	pop	{r7, pc}
 800085e:	bf00      	nop
 8000860:	58021400 	.word	0x58021400

08000864 <DC_L>:

static void DC_L(void)
{
 8000864:	b580      	push	{r7, lr}
 8000866:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_RESET);
 8000868:	2200      	movs	r2, #0
 800086a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800086e:	4802      	ldr	r0, [pc, #8]	; (8000878 <DC_L+0x14>)
 8000870:	f005 fb82 	bl	8005f78 <HAL_GPIO_WritePin>
}
 8000874:	bf00      	nop
 8000876:	bd80      	pop	{r7, pc}
 8000878:	58020800 	.word	0x58020800

0800087c <DC_H>:

static void DC_H(void)
{
 800087c:	b580      	push	{r7, lr}
 800087e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_SET);
 8000880:	2201      	movs	r2, #1
 8000882:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000886:	4802      	ldr	r0, [pc, #8]	; (8000890 <DC_H+0x14>)
 8000888:	f005 fb76 	bl	8005f78 <HAL_GPIO_WritePin>
}
 800088c:	bf00      	nop
 800088e:	bd80      	pop	{r7, pc}
 8000890:	58020800 	.word	0x58020800

08000894 <LED_H>:

static void LED_H(void)
{
 8000894:	b480      	push	{r7}
 8000896:	af00      	add	r7, sp, #0
	//HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
}
 8000898:	bf00      	nop
 800089a:	46bd      	mov	sp, r7
 800089c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a0:	4770      	bx	lr

080008a2 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008a2:	b580      	push	{r7, lr}
 80008a4:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80008a6:	f001 f86d 	bl	8001984 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008aa:	f000 f81d 	bl	80008e8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80008ae:	f000 fa4f 	bl	8000d50 <MX_GPIO_Init>
  MX_DMA_Init();
 80008b2:	f000 fa2d 	bl	8000d10 <MX_DMA_Init>
  MX_SPI1_Init();
 80008b6:	f000 f97f 	bl	8000bb8 <MX_SPI1_Init>
  MX_SPI5_Init();
 80008ba:	f000 f9d3 	bl	8000c64 <MX_SPI5_Init>
  MX_CRC_Init();
 80008be:	f000 f8fb 	bl	8000ab8 <MX_CRC_Init>
  MX_ADC1_Init();
 80008c2:	f000 f881 	bl	80009c8 <MX_ADC1_Init>
  MX_OCTOSPI1_Init();
 80008c6:	f000 f919 	bl	8000afc <MX_OCTOSPI1_Init>
  MX_TouchGFX_Init();
 80008ca:	f00a fd30 	bl	800b32e <MX_TouchGFX_Init>
//	  uint8_t cmd = 0x01;
//	  HAL_SPI_Transmit(&hspi5, &cmd, 1, 1000);
//  }


  ILI9341_Init();
 80008ce:	f7ff fd6f 	bl	80003b0 <ILI9341_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  MX_TouchGFX_Process();
 80008d2:	f00a fd34 	bl	800b33e <MX_TouchGFX_Process>
	  HAL_Delay(1);
 80008d6:	2001      	movs	r0, #1
 80008d8:	f001 f8e6 	bl	8001aa8 <HAL_Delay>
	  touchgfxSignalVSync();
 80008dc:	f00e fd5f 	bl	800f39e <touchgfxSignalVSync>
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80008e0:	f00a fd2d 	bl	800b33e <MX_TouchGFX_Process>
  {
 80008e4:	e7f5      	b.n	80008d2 <main+0x30>
	...

080008e8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80008e8:	b580      	push	{r7, lr}
 80008ea:	b09c      	sub	sp, #112	; 0x70
 80008ec:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80008ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80008f2:	224c      	movs	r2, #76	; 0x4c
 80008f4:	2100      	movs	r1, #0
 80008f6:	4618      	mov	r0, r3
 80008f8:	f022 ff9f 	bl	802383a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80008fc:	1d3b      	adds	r3, r7, #4
 80008fe:	2220      	movs	r2, #32
 8000900:	2100      	movs	r1, #0
 8000902:	4618      	mov	r0, r3
 8000904:	f022 ff99 	bl	802383a <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8000908:	2002      	movs	r0, #2
 800090a:	f006 f9f5 	bl	8006cf8 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 800090e:	2300      	movs	r3, #0
 8000910:	603b      	str	r3, [r7, #0]
 8000912:	4b2c      	ldr	r3, [pc, #176]	; (80009c4 <SystemClock_Config+0xdc>)
 8000914:	699b      	ldr	r3, [r3, #24]
 8000916:	4a2b      	ldr	r2, [pc, #172]	; (80009c4 <SystemClock_Config+0xdc>)
 8000918:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800091c:	6193      	str	r3, [r2, #24]
 800091e:	4b29      	ldr	r3, [pc, #164]	; (80009c4 <SystemClock_Config+0xdc>)
 8000920:	699b      	ldr	r3, [r3, #24]
 8000922:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000926:	603b      	str	r3, [r7, #0]
 8000928:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 800092a:	bf00      	nop
 800092c:	4b25      	ldr	r3, [pc, #148]	; (80009c4 <SystemClock_Config+0xdc>)
 800092e:	699b      	ldr	r3, [r3, #24]
 8000930:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000934:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000938:	d1f8      	bne.n	800092c <SystemClock_Config+0x44>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800093a:	2302      	movs	r3, #2
 800093c:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 800093e:	2301      	movs	r3, #1
 8000940:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSICalibrationValue = 64;
 8000942:	2340      	movs	r3, #64	; 0x40
 8000944:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000946:	2302      	movs	r3, #2
 8000948:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800094a:	2300      	movs	r3, #0
 800094c:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 4;
 800094e:	2304      	movs	r3, #4
 8000950:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 34;
 8000952:	2322      	movs	r3, #34	; 0x22
 8000954:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 1;
 8000956:	2301      	movs	r3, #1
 8000958:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800095a:	2302      	movs	r3, #2
 800095c:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 800095e:	2302      	movs	r3, #2
 8000960:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 8000962:	230c      	movs	r3, #12
 8000964:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000966:	2300      	movs	r3, #0
 8000968:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 3072;
 800096a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800096e:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000970:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000974:	4618      	mov	r0, r3
 8000976:	f006 f9f9 	bl	8006d6c <HAL_RCC_OscConfig>
 800097a:	4603      	mov	r3, r0
 800097c:	2b00      	cmp	r3, #0
 800097e:	d001      	beq.n	8000984 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000980:	f000 fac2 	bl	8000f08 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000984:	233f      	movs	r3, #63	; 0x3f
 8000986:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000988:	2303      	movs	r3, #3
 800098a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 800098c:	2300      	movs	r3, #0
 800098e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000990:	2308      	movs	r3, #8
 8000992:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000994:	2340      	movs	r3, #64	; 0x40
 8000996:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8000998:	2340      	movs	r3, #64	; 0x40
 800099a:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 800099c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009a0:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 80009a2:	2340      	movs	r3, #64	; 0x40
 80009a4:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 80009a6:	1d3b      	adds	r3, r7, #4
 80009a8:	2103      	movs	r1, #3
 80009aa:	4618      	mov	r0, r3
 80009ac:	f006 fdb8 	bl	8007520 <HAL_RCC_ClockConfig>
 80009b0:	4603      	mov	r3, r0
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d001      	beq.n	80009ba <SystemClock_Config+0xd2>
  {
    Error_Handler();
 80009b6:	f000 faa7 	bl	8000f08 <Error_Handler>
  }
}
 80009ba:	bf00      	nop
 80009bc:	3770      	adds	r7, #112	; 0x70
 80009be:	46bd      	mov	sp, r7
 80009c0:	bd80      	pop	{r7, pc}
 80009c2:	bf00      	nop
 80009c4:	58024800 	.word	0x58024800

080009c8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80009c8:	b580      	push	{r7, lr}
 80009ca:	b08c      	sub	sp, #48	; 0x30
 80009cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 80009ce:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80009d2:	2200      	movs	r2, #0
 80009d4:	601a      	str	r2, [r3, #0]
 80009d6:	605a      	str	r2, [r3, #4]
 80009d8:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 80009da:	463b      	mov	r3, r7
 80009dc:	2224      	movs	r2, #36	; 0x24
 80009de:	2100      	movs	r1, #0
 80009e0:	4618      	mov	r0, r3
 80009e2:	f022 ff2a 	bl	802383a <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 80009e6:	4b31      	ldr	r3, [pc, #196]	; (8000aac <MX_ADC1_Init+0xe4>)
 80009e8:	4a31      	ldr	r2, [pc, #196]	; (8000ab0 <MX_ADC1_Init+0xe8>)
 80009ea:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 80009ec:	4b2f      	ldr	r3, [pc, #188]	; (8000aac <MX_ADC1_Init+0xe4>)
 80009ee:	2200      	movs	r2, #0
 80009f0:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 80009f2:	4b2e      	ldr	r3, [pc, #184]	; (8000aac <MX_ADC1_Init+0xe4>)
 80009f4:	2200      	movs	r2, #0
 80009f6:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80009f8:	4b2c      	ldr	r3, [pc, #176]	; (8000aac <MX_ADC1_Init+0xe4>)
 80009fa:	2200      	movs	r2, #0
 80009fc:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80009fe:	4b2b      	ldr	r3, [pc, #172]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a00:	2204      	movs	r2, #4
 8000a02:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000a04:	4b29      	ldr	r3, [pc, #164]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a06:	2200      	movs	r2, #0
 8000a08:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000a0a:	4b28      	ldr	r3, [pc, #160]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a0c:	2200      	movs	r2, #0
 8000a0e:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 8000a10:	4b26      	ldr	r3, [pc, #152]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a12:	2201      	movs	r2, #1
 8000a14:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000a16:	4b25      	ldr	r3, [pc, #148]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a18:	2200      	movs	r2, #0
 8000a1a:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000a1e:	4b23      	ldr	r3, [pc, #140]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a20:	2200      	movs	r2, #0
 8000a22:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000a24:	4b21      	ldr	r3, [pc, #132]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a26:	2200      	movs	r2, #0
 8000a28:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 8000a2a:	4b20      	ldr	r3, [pc, #128]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a2c:	2200      	movs	r2, #0
 8000a2e:	631a      	str	r2, [r3, #48]	; 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000a30:	4b1e      	ldr	r3, [pc, #120]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a32:	2200      	movs	r2, #0
 8000a34:	63da      	str	r2, [r3, #60]	; 0x3c
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000a36:	4b1d      	ldr	r3, [pc, #116]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a38:	2200      	movs	r2, #0
 8000a3a:	641a      	str	r2, [r3, #64]	; 0x40
  hadc1.Init.OversamplingMode = DISABLE;
 8000a3c:	4b1b      	ldr	r3, [pc, #108]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a3e:	2200      	movs	r2, #0
 8000a40:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000a44:	4819      	ldr	r0, [pc, #100]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a46:	f001 fa99 	bl	8001f7c <HAL_ADC_Init>
 8000a4a:	4603      	mov	r3, r0
 8000a4c:	2b00      	cmp	r3, #0
 8000a4e:	d001      	beq.n	8000a54 <MX_ADC1_Init+0x8c>
  {
    Error_Handler();
 8000a50:	f000 fa5a 	bl	8000f08 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000a54:	2300      	movs	r3, #0
 8000a56:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000a58:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a5c:	4619      	mov	r1, r3
 8000a5e:	4813      	ldr	r0, [pc, #76]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a60:	f002 fad8 	bl	8003014 <HAL_ADCEx_MultiModeConfigChannel>
 8000a64:	4603      	mov	r3, r0
 8000a66:	2b00      	cmp	r3, #0
 8000a68:	d001      	beq.n	8000a6e <MX_ADC1_Init+0xa6>
  {
    Error_Handler();
 8000a6a:	f000 fa4d 	bl	8000f08 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000a6e:	4b11      	ldr	r3, [pc, #68]	; (8000ab4 <MX_ADC1_Init+0xec>)
 8000a70:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000a72:	2306      	movs	r3, #6
 8000a74:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000a76:	2300      	movs	r3, #0
 8000a78:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000a7a:	f240 73ff 	movw	r3, #2047	; 0x7ff
 8000a7e:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000a80:	2304      	movs	r3, #4
 8000a82:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000a84:	2300      	movs	r3, #0
 8000a86:	617b      	str	r3, [r7, #20]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000a88:	2300      	movs	r3, #0
 8000a8a:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000a8e:	463b      	mov	r3, r7
 8000a90:	4619      	mov	r1, r3
 8000a92:	4806      	ldr	r0, [pc, #24]	; (8000aac <MX_ADC1_Init+0xe4>)
 8000a94:	f001 fc7a 	bl	800238c <HAL_ADC_ConfigChannel>
 8000a98:	4603      	mov	r3, r0
 8000a9a:	2b00      	cmp	r3, #0
 8000a9c:	d001      	beq.n	8000aa2 <MX_ADC1_Init+0xda>
  {
    Error_Handler();
 8000a9e:	f000 fa33 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000aa2:	bf00      	nop
 8000aa4:	3730      	adds	r7, #48	; 0x30
 8000aa6:	46bd      	mov	sp, r7
 8000aa8:	bd80      	pop	{r7, pc}
 8000aaa:	bf00      	nop
 8000aac:	24000114 	.word	0x24000114
 8000ab0:	40022000 	.word	0x40022000
 8000ab4:	0c900008 	.word	0x0c900008

08000ab8 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000abc:	4b0d      	ldr	r3, [pc, #52]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000abe:	4a0e      	ldr	r2, [pc, #56]	; (8000af8 <MX_CRC_Init+0x40>)
 8000ac0:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000ac2:	4b0c      	ldr	r3, [pc, #48]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000ac4:	2200      	movs	r2, #0
 8000ac6:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 8000ac8:	4b0a      	ldr	r3, [pc, #40]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000aca:	2200      	movs	r2, #0
 8000acc:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000ace:	4b09      	ldr	r3, [pc, #36]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000ad6:	2200      	movs	r2, #0
 8000ad8:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000ada:	4b06      	ldr	r3, [pc, #24]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000adc:	2201      	movs	r2, #1
 8000ade:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000ae0:	4804      	ldr	r0, [pc, #16]	; (8000af4 <MX_CRC_Init+0x3c>)
 8000ae2:	f002 fc89 	bl	80033f8 <HAL_CRC_Init>
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	2b00      	cmp	r3, #0
 8000aea:	d001      	beq.n	8000af0 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8000aec:	f000 fa0c 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000af0:	bf00      	nop
 8000af2:	bd80      	pop	{r7, pc}
 8000af4:	24000184 	.word	0x24000184
 8000af8:	58024c00 	.word	0x58024c00

08000afc <MX_OCTOSPI1_Init>:
  * @brief OCTOSPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_OCTOSPI1_Init(void)
{
 8000afc:	b580      	push	{r7, lr}
 8000afe:	b086      	sub	sp, #24
 8000b00:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN OCTOSPI1_Init 0 */

  /* USER CODE END OCTOSPI1_Init 0 */

  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000b02:	463b      	mov	r3, r7
 8000b04:	2200      	movs	r2, #0
 8000b06:	601a      	str	r2, [r3, #0]
 8000b08:	605a      	str	r2, [r3, #4]
 8000b0a:	609a      	str	r2, [r3, #8]
 8000b0c:	60da      	str	r2, [r3, #12]
 8000b0e:	611a      	str	r2, [r3, #16]
 8000b10:	615a      	str	r2, [r3, #20]

  /* USER CODE BEGIN OCTOSPI1_Init 1 */

  /* USER CODE END OCTOSPI1_Init 1 */
  /* OCTOSPI1 parameter configuration*/
  hospi1.Instance = OCTOSPI1;
 8000b12:	4b27      	ldr	r3, [pc, #156]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b14:	4a27      	ldr	r2, [pc, #156]	; (8000bb4 <MX_OCTOSPI1_Init+0xb8>)
 8000b16:	601a      	str	r2, [r3, #0]
  hospi1.Init.FifoThreshold = 1;
 8000b18:	4b25      	ldr	r3, [pc, #148]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b1a:	2201      	movs	r2, #1
 8000b1c:	605a      	str	r2, [r3, #4]
  hospi1.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 8000b1e:	4b24      	ldr	r3, [pc, #144]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b20:	2200      	movs	r2, #0
 8000b22:	609a      	str	r2, [r3, #8]
  hospi1.Init.MemoryType = HAL_OSPI_MEMTYPE_MICRON;
 8000b24:	4b22      	ldr	r3, [pc, #136]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b26:	2200      	movs	r2, #0
 8000b28:	60da      	str	r2, [r3, #12]
  hospi1.Init.DeviceSize = 32;
 8000b2a:	4b21      	ldr	r3, [pc, #132]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b2c:	2220      	movs	r2, #32
 8000b2e:	611a      	str	r2, [r3, #16]
  hospi1.Init.ChipSelectHighTime = 1;
 8000b30:	4b1f      	ldr	r3, [pc, #124]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b32:	2201      	movs	r2, #1
 8000b34:	615a      	str	r2, [r3, #20]
  hospi1.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 8000b36:	4b1e      	ldr	r3, [pc, #120]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b38:	2200      	movs	r2, #0
 8000b3a:	619a      	str	r2, [r3, #24]
  hospi1.Init.ClockMode = HAL_OSPI_CLOCK_MODE_0;
 8000b3c:	4b1c      	ldr	r3, [pc, #112]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b3e:	2200      	movs	r2, #0
 8000b40:	61da      	str	r2, [r3, #28]
  hospi1.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8000b42:	4b1b      	ldr	r3, [pc, #108]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b44:	2200      	movs	r2, #0
 8000b46:	621a      	str	r2, [r3, #32]
  hospi1.Init.ClockPrescaler = 1;
 8000b48:	4b19      	ldr	r3, [pc, #100]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b4a:	2201      	movs	r2, #1
 8000b4c:	625a      	str	r2, [r3, #36]	; 0x24
  hospi1.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8000b4e:	4b18      	ldr	r3, [pc, #96]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b50:	2200      	movs	r2, #0
 8000b52:	629a      	str	r2, [r3, #40]	; 0x28
  hospi1.Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 8000b54:	4b16      	ldr	r3, [pc, #88]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b56:	2200      	movs	r2, #0
 8000b58:	62da      	str	r2, [r3, #44]	; 0x2c
  hospi1.Init.ChipSelectBoundary = 0;
 8000b5a:	4b15      	ldr	r3, [pc, #84]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b5c:	2200      	movs	r2, #0
 8000b5e:	631a      	str	r2, [r3, #48]	; 0x30
  hospi1.Init.DelayBlockBypass = HAL_OSPI_DELAY_BLOCK_BYPASSED;
 8000b60:	4b13      	ldr	r3, [pc, #76]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b62:	2208      	movs	r2, #8
 8000b64:	635a      	str	r2, [r3, #52]	; 0x34
  hospi1.Init.MaxTran = 0;
 8000b66:	4b12      	ldr	r3, [pc, #72]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b68:	2200      	movs	r2, #0
 8000b6a:	639a      	str	r2, [r3, #56]	; 0x38
  hospi1.Init.Refresh = 0;
 8000b6c:	4b10      	ldr	r3, [pc, #64]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b6e:	2200      	movs	r2, #0
 8000b70:	63da      	str	r2, [r3, #60]	; 0x3c
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 8000b72:	480f      	ldr	r0, [pc, #60]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b74:	f005 fa1a 	bl	8005fac <HAL_OSPI_Init>
 8000b78:	4603      	mov	r3, r0
 8000b7a:	2b00      	cmp	r3, #0
 8000b7c:	d001      	beq.n	8000b82 <MX_OCTOSPI1_Init+0x86>
  {
    Error_Handler();
 8000b7e:	f000 f9c3 	bl	8000f08 <Error_Handler>
  }
  sOspiManagerCfg.ClkPort = 1;
 8000b82:	2301      	movs	r3, #1
 8000b84:	603b      	str	r3, [r7, #0]
  sOspiManagerCfg.NCSPort = 1;
 8000b86:	2301      	movs	r3, #1
 8000b88:	60bb      	str	r3, [r7, #8]
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000b8a:	f04f 1301 	mov.w	r3, #65537	; 0x10001
 8000b8e:	60fb      	str	r3, [r7, #12]
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000b90:	463b      	mov	r3, r7
 8000b92:	f241 3288 	movw	r2, #5000	; 0x1388
 8000b96:	4619      	mov	r1, r3
 8000b98:	4805      	ldr	r0, [pc, #20]	; (8000bb0 <MX_OCTOSPI1_Init+0xb4>)
 8000b9a:	f005 fad3 	bl	8006144 <HAL_OSPIM_Config>
 8000b9e:	4603      	mov	r3, r0
 8000ba0:	2b00      	cmp	r3, #0
 8000ba2:	d001      	beq.n	8000ba8 <MX_OCTOSPI1_Init+0xac>
  {
    Error_Handler();
 8000ba4:	f000 f9b0 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN OCTOSPI1_Init 2 */

  /* USER CODE END OCTOSPI1_Init 2 */

}
 8000ba8:	bf00      	nop
 8000baa:	3718      	adds	r7, #24
 8000bac:	46bd      	mov	sp, r7
 8000bae:	bd80      	pop	{r7, pc}
 8000bb0:	240001a8 	.word	0x240001a8
 8000bb4:	52005000 	.word	0x52005000

08000bb8 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000bbc:	4b27      	ldr	r3, [pc, #156]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bbe:	4a28      	ldr	r2, [pc, #160]	; (8000c60 <MX_SPI1_Init+0xa8>)
 8000bc0:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000bc2:	4b26      	ldr	r3, [pc, #152]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bc4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000bc8:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000bca:	4b24      	ldr	r3, [pc, #144]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bcc:	2200      	movs	r2, #0
 8000bce:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 8000bd0:	4b22      	ldr	r3, [pc, #136]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bd2:	2203      	movs	r2, #3
 8000bd4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000bd6:	4b21      	ldr	r3, [pc, #132]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bd8:	2200      	movs	r2, #0
 8000bda:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000bdc:	4b1f      	ldr	r3, [pc, #124]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bde:	2200      	movs	r2, #0
 8000be0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 8000be2:	4b1e      	ldr	r3, [pc, #120]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000be4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8000be8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000bea:	4b1c      	ldr	r3, [pc, #112]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bec:	2200      	movs	r2, #0
 8000bee:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000bf0:	4b1a      	ldr	r3, [pc, #104]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bf2:	2200      	movs	r2, #0
 8000bf4:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000bf6:	4b19      	ldr	r3, [pc, #100]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bf8:	2200      	movs	r2, #0
 8000bfa:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000bfc:	4b17      	ldr	r3, [pc, #92]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000bfe:	2200      	movs	r2, #0
 8000c00:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 0x0;
 8000c02:	4b16      	ldr	r3, [pc, #88]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c04:	2200      	movs	r2, #0
 8000c06:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000c08:	4b14      	ldr	r3, [pc, #80]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c0a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000c0e:	635a      	str	r2, [r3, #52]	; 0x34
  hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000c10:	4b12      	ldr	r3, [pc, #72]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c12:	2200      	movs	r2, #0
 8000c14:	639a      	str	r2, [r3, #56]	; 0x38
  hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000c16:	4b11      	ldr	r3, [pc, #68]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c18:	2200      	movs	r2, #0
 8000c1a:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000c1c:	4b0f      	ldr	r3, [pc, #60]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c1e:	2200      	movs	r2, #0
 8000c20:	641a      	str	r2, [r3, #64]	; 0x40
  hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000c22:	4b0e      	ldr	r3, [pc, #56]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c24:	2200      	movs	r2, #0
 8000c26:	645a      	str	r2, [r3, #68]	; 0x44
  hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000c28:	4b0c      	ldr	r3, [pc, #48]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	649a      	str	r2, [r3, #72]	; 0x48
  hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000c2e:	4b0b      	ldr	r3, [pc, #44]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c30:	2200      	movs	r2, #0
 8000c32:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000c34:	4b09      	ldr	r3, [pc, #36]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c36:	2200      	movs	r2, #0
 8000c38:	651a      	str	r2, [r3, #80]	; 0x50
  hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000c3a:	4b08      	ldr	r3, [pc, #32]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c3c:	2200      	movs	r2, #0
 8000c3e:	655a      	str	r2, [r3, #84]	; 0x54
  hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000c40:	4b06      	ldr	r3, [pc, #24]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c42:	2200      	movs	r2, #0
 8000c44:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000c46:	4805      	ldr	r0, [pc, #20]	; (8000c5c <MX_SPI1_Init+0xa4>)
 8000c48:	f009 fbc6 	bl	800a3d8 <HAL_SPI_Init>
 8000c4c:	4603      	mov	r3, r0
 8000c4e:	2b00      	cmp	r3, #0
 8000c50:	d001      	beq.n	8000c56 <MX_SPI1_Init+0x9e>
  {
    Error_Handler();
 8000c52:	f000 f959 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000c56:	bf00      	nop
 8000c58:	bd80      	pop	{r7, pc}
 8000c5a:	bf00      	nop
 8000c5c:	24000204 	.word	0x24000204
 8000c60:	40013000 	.word	0x40013000

08000c64 <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 8000c64:	b580      	push	{r7, lr}
 8000c66:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 8000c68:	4b27      	ldr	r3, [pc, #156]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c6a:	4a28      	ldr	r2, [pc, #160]	; (8000d0c <MX_SPI5_Init+0xa8>)
 8000c6c:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000c6e:	4b26      	ldr	r3, [pc, #152]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c70:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8000c74:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 8000c76:	4b24      	ldr	r3, [pc, #144]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c78:	2200      	movs	r2, #0
 8000c7a:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000c7c:	4b22      	ldr	r3, [pc, #136]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c7e:	2207      	movs	r2, #7
 8000c80:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000c82:	4b21      	ldr	r3, [pc, #132]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c84:	2200      	movs	r2, #0
 8000c86:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000c88:	4b1f      	ldr	r3, [pc, #124]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 8000c8e:	4b1e      	ldr	r3, [pc, #120]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c90:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000c94:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000c96:	4b1c      	ldr	r3, [pc, #112]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c98:	2200      	movs	r2, #0
 8000c9a:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000c9c:	4b1a      	ldr	r3, [pc, #104]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000c9e:	2200      	movs	r2, #0
 8000ca0:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000ca2:	4b19      	ldr	r3, [pc, #100]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000ca4:	2200      	movs	r2, #0
 8000ca6:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000ca8:	4b17      	ldr	r3, [pc, #92]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000caa:	2200      	movs	r2, #0
 8000cac:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 0x0;
 8000cae:	4b16      	ldr	r3, [pc, #88]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cb0:	2200      	movs	r2, #0
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi5.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000cb4:	4b14      	ldr	r3, [pc, #80]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cb6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000cba:	635a      	str	r2, [r3, #52]	; 0x34
  hspi5.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000cbc:	4b12      	ldr	r3, [pc, #72]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cbe:	2200      	movs	r2, #0
 8000cc0:	639a      	str	r2, [r3, #56]	; 0x38
  hspi5.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8000cc2:	4b11      	ldr	r3, [pc, #68]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cc4:	2200      	movs	r2, #0
 8000cc6:	63da      	str	r2, [r3, #60]	; 0x3c
  hspi5.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000cc8:	4b0f      	ldr	r3, [pc, #60]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cca:	2200      	movs	r2, #0
 8000ccc:	641a      	str	r2, [r3, #64]	; 0x40
  hspi5.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8000cce:	4b0e      	ldr	r3, [pc, #56]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cd0:	2200      	movs	r2, #0
 8000cd2:	645a      	str	r2, [r3, #68]	; 0x44
  hspi5.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000cd4:	4b0c      	ldr	r3, [pc, #48]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	649a      	str	r2, [r3, #72]	; 0x48
  hspi5.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 8000cda:	4b0b      	ldr	r3, [pc, #44]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cdc:	2200      	movs	r2, #0
 8000cde:	64da      	str	r2, [r3, #76]	; 0x4c
  hspi5.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000ce0:	4b09      	ldr	r3, [pc, #36]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	651a      	str	r2, [r3, #80]	; 0x50
  hspi5.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000ce6:	4b08      	ldr	r3, [pc, #32]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000ce8:	2200      	movs	r2, #0
 8000cea:	655a      	str	r2, [r3, #84]	; 0x54
  hspi5.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 8000cec:	4b06      	ldr	r3, [pc, #24]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cee:	2200      	movs	r2, #0
 8000cf0:	659a      	str	r2, [r3, #88]	; 0x58
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000cf2:	4805      	ldr	r0, [pc, #20]	; (8000d08 <MX_SPI5_Init+0xa4>)
 8000cf4:	f009 fb70 	bl	800a3d8 <HAL_SPI_Init>
 8000cf8:	4603      	mov	r3, r0
 8000cfa:	2b00      	cmp	r3, #0
 8000cfc:	d001      	beq.n	8000d02 <MX_SPI5_Init+0x9e>
  {
    Error_Handler();
 8000cfe:	f000 f903 	bl	8000f08 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */

  /* USER CODE END SPI5_Init 2 */

}
 8000d02:	bf00      	nop
 8000d04:	bd80      	pop	{r7, pc}
 8000d06:	bf00      	nop
 8000d08:	2400028c 	.word	0x2400028c
 8000d0c:	40015000 	.word	0x40015000

08000d10 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000d10:	b580      	push	{r7, lr}
 8000d12:	b082      	sub	sp, #8
 8000d14:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000d16:	4b0d      	ldr	r3, [pc, #52]	; (8000d4c <MX_DMA_Init+0x3c>)
 8000d18:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000d1c:	4a0b      	ldr	r2, [pc, #44]	; (8000d4c <MX_DMA_Init+0x3c>)
 8000d1e:	f043 0301 	orr.w	r3, r3, #1
 8000d22:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000d26:	4b09      	ldr	r3, [pc, #36]	; (8000d4c <MX_DMA_Init+0x3c>)
 8000d28:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000d2c:	f003 0301 	and.w	r3, r3, #1
 8000d30:	607b      	str	r3, [r7, #4]
 8000d32:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8000d34:	2200      	movs	r2, #0
 8000d36:	2100      	movs	r1, #0
 8000d38:	200b      	movs	r0, #11
 8000d3a:	f002 fb28 	bl	800338e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8000d3e:	200b      	movs	r0, #11
 8000d40:	f002 fb3f 	bl	80033c2 <HAL_NVIC_EnableIRQ>

}
 8000d44:	bf00      	nop
 8000d46:	3708      	adds	r7, #8
 8000d48:	46bd      	mov	sp, r7
 8000d4a:	bd80      	pop	{r7, pc}
 8000d4c:	58024400 	.word	0x58024400

08000d50 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000d50:	b580      	push	{r7, lr}
 8000d52:	b08e      	sub	sp, #56	; 0x38
 8000d54:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d56:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000d5a:	2200      	movs	r2, #0
 8000d5c:	601a      	str	r2, [r3, #0]
 8000d5e:	605a      	str	r2, [r3, #4]
 8000d60:	609a      	str	r2, [r3, #8]
 8000d62:	60da      	str	r2, [r3, #12]
 8000d64:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000d66:	4b63      	ldr	r3, [pc, #396]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d68:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d6c:	4a61      	ldr	r2, [pc, #388]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d6e:	f043 0310 	orr.w	r3, r3, #16
 8000d72:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d76:	4b5f      	ldr	r3, [pc, #380]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d78:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d7c:	f003 0310 	and.w	r3, r3, #16
 8000d80:	623b      	str	r3, [r7, #32]
 8000d82:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d84:	4b5b      	ldr	r3, [pc, #364]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d86:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d8a:	4a5a      	ldr	r2, [pc, #360]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d8c:	f043 0304 	orr.w	r3, r3, #4
 8000d90:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000d94:	4b57      	ldr	r3, [pc, #348]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000d96:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000d9a:	f003 0304 	and.w	r3, r3, #4
 8000d9e:	61fb      	str	r3, [r7, #28]
 8000da0:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000da2:	4b54      	ldr	r3, [pc, #336]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000da4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000da8:	4a52      	ldr	r2, [pc, #328]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000daa:	f043 0320 	orr.w	r3, r3, #32
 8000dae:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000db2:	4b50      	ldr	r3, [pc, #320]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000db4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000db8:	f003 0320 	and.w	r3, r3, #32
 8000dbc:	61bb      	str	r3, [r7, #24]
 8000dbe:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000dc0:	4b4c      	ldr	r3, [pc, #304]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000dc2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000dc6:	4a4b      	ldr	r2, [pc, #300]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000dc8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000dcc:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000dd0:	4b48      	ldr	r3, [pc, #288]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000dd2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000dd6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000dda:	617b      	str	r3, [r7, #20]
 8000ddc:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000dde:	4b45      	ldr	r3, [pc, #276]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000de0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000de4:	4a43      	ldr	r2, [pc, #268]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000de6:	f043 0301 	orr.w	r3, r3, #1
 8000dea:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000dee:	4b41      	ldr	r3, [pc, #260]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000df0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000df4:	f003 0301 	and.w	r3, r3, #1
 8000df8:	613b      	str	r3, [r7, #16]
 8000dfa:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000dfc:	4b3d      	ldr	r3, [pc, #244]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000dfe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e02:	4a3c      	ldr	r2, [pc, #240]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e04:	f043 0302 	orr.w	r3, r3, #2
 8000e08:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e0c:	4b39      	ldr	r3, [pc, #228]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e0e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e12:	f003 0302 	and.w	r3, r3, #2
 8000e16:	60fb      	str	r3, [r7, #12]
 8000e18:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000e1a:	4b36      	ldr	r3, [pc, #216]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e1c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e20:	4a34      	ldr	r2, [pc, #208]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e22:	f043 0308 	orr.w	r3, r3, #8
 8000e26:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e2a:	4b32      	ldr	r3, [pc, #200]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e2c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e30:	f003 0308 	and.w	r3, r3, #8
 8000e34:	60bb      	str	r3, [r7, #8]
 8000e36:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e38:	4b2e      	ldr	r3, [pc, #184]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e3a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e3e:	4a2d      	ldr	r2, [pc, #180]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e40:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e44:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000e48:	4b2a      	ldr	r3, [pc, #168]	; (8000ef4 <MX_GPIO_Init+0x1a4>)
 8000e4a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000e4e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000e52:	607b      	str	r3, [r7, #4]
 8000e54:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_OK_GPIO_Port, LED_OK_Pin, GPIO_PIN_SET);
 8000e56:	2201      	movs	r2, #1
 8000e58:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000e5c:	4826      	ldr	r0, [pc, #152]	; (8000ef8 <MX_GPIO_Init+0x1a8>)
 8000e5e:	f005 f88b 	bl	8005f78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ILI9341_CS_GPIO_Port, ILI9341_CS_Pin, GPIO_PIN_SET);
 8000e62:	2201      	movs	r2, #1
 8000e64:	2140      	movs	r1, #64	; 0x40
 8000e66:	4825      	ldr	r0, [pc, #148]	; (8000efc <MX_GPIO_Init+0x1ac>)
 8000e68:	f005 f886 	bl	8005f78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ILI9341_RESET_GPIO_Port, ILI9341_RESET_Pin, GPIO_PIN_SET);
 8000e6c:	2201      	movs	r2, #1
 8000e6e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e72:	4823      	ldr	r0, [pc, #140]	; (8000f00 <MX_GPIO_Init+0x1b0>)
 8000e74:	f005 f880 	bl	8005f78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_OK_Pin */
  GPIO_InitStruct.Pin = LED_OK_Pin;
 8000e78:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000e7c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e7e:	2301      	movs	r3, #1
 8000e80:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e82:	2300      	movs	r3, #0
 8000e84:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e86:	2300      	movs	r3, #0
 8000e88:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(LED_OK_GPIO_Port, &GPIO_InitStruct);
 8000e8a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e8e:	4619      	mov	r1, r3
 8000e90:	4819      	ldr	r0, [pc, #100]	; (8000ef8 <MX_GPIO_Init+0x1a8>)
 8000e92:	f004 fec9 	bl	8005c28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_CS_Pin */
  GPIO_InitStruct.Pin = ILI9341_CS_Pin;
 8000e96:	2340      	movs	r3, #64	; 0x40
 8000e98:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e9a:	2301      	movs	r3, #1
 8000e9c:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e9e:	2301      	movs	r3, #1
 8000ea0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ea2:	2303      	movs	r3, #3
 8000ea4:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(ILI9341_CS_GPIO_Port, &GPIO_InitStruct);
 8000ea6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000eaa:	4619      	mov	r1, r3
 8000eac:	4813      	ldr	r0, [pc, #76]	; (8000efc <MX_GPIO_Init+0x1ac>)
 8000eae:	f004 febb 	bl	8005c28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_TOUCH_IQR_Pin */
  GPIO_InitStruct.Pin = ILI9341_TOUCH_IQR_Pin;
 8000eb2:	2340      	movs	r3, #64	; 0x40
 8000eb4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000eb6:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8000eba:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(ILI9341_TOUCH_IQR_GPIO_Port, &GPIO_InitStruct);
 8000ec0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000ec4:	4619      	mov	r1, r3
 8000ec6:	480f      	ldr	r0, [pc, #60]	; (8000f04 <MX_GPIO_Init+0x1b4>)
 8000ec8:	f004 feae 	bl	8005c28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ILI9341_RESET_Pin */
  GPIO_InitStruct.Pin = ILI9341_RESET_Pin;
 8000ecc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ed0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000ed6:	2301      	movs	r3, #1
 8000ed8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000eda:	2303      	movs	r3, #3
 8000edc:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(ILI9341_RESET_GPIO_Port, &GPIO_InitStruct);
 8000ede:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000ee2:	4619      	mov	r1, r3
 8000ee4:	4806      	ldr	r0, [pc, #24]	; (8000f00 <MX_GPIO_Init+0x1b0>)
 8000ee6:	f004 fe9f 	bl	8005c28 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000eea:	bf00      	nop
 8000eec:	3738      	adds	r7, #56	; 0x38
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	bd80      	pop	{r7, pc}
 8000ef2:	bf00      	nop
 8000ef4:	58024400 	.word	0x58024400
 8000ef8:	58020800 	.word	0x58020800
 8000efc:	58021400 	.word	0x58021400
 8000f00:	58021800 	.word	0x58021800
 8000f04:	58020c00 	.word	0x58020c00

08000f08 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000f08:	b480      	push	{r7}
 8000f0a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000f0c:	b672      	cpsid	i
}
 8000f0e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000f10:	e7fe      	b.n	8000f10 <Error_Handler+0x8>
	...

08000f14 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000f14:	b480      	push	{r7}
 8000f16:	b083      	sub	sp, #12
 8000f18:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f1a:	4b0a      	ldr	r3, [pc, #40]	; (8000f44 <HAL_MspInit+0x30>)
 8000f1c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000f20:	4a08      	ldr	r2, [pc, #32]	; (8000f44 <HAL_MspInit+0x30>)
 8000f22:	f043 0302 	orr.w	r3, r3, #2
 8000f26:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8000f2a:	4b06      	ldr	r3, [pc, #24]	; (8000f44 <HAL_MspInit+0x30>)
 8000f2c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8000f30:	f003 0302 	and.w	r3, r3, #2
 8000f34:	607b      	str	r3, [r7, #4]
 8000f36:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000f38:	bf00      	nop
 8000f3a:	370c      	adds	r7, #12
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f42:	4770      	bx	lr
 8000f44:	58024400 	.word	0x58024400

08000f48 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000f48:	b580      	push	{r7, lr}
 8000f4a:	b0bc      	sub	sp, #240	; 0xf0
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f50:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000f54:	2200      	movs	r2, #0
 8000f56:	601a      	str	r2, [r3, #0]
 8000f58:	605a      	str	r2, [r3, #4]
 8000f5a:	609a      	str	r2, [r3, #8]
 8000f5c:	60da      	str	r2, [r3, #12]
 8000f5e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000f60:	f107 0320 	add.w	r3, r7, #32
 8000f64:	22b8      	movs	r2, #184	; 0xb8
 8000f66:	2100      	movs	r1, #0
 8000f68:	4618      	mov	r0, r3
 8000f6a:	f022 fc66 	bl	802383a <memset>
  if(hadc->Instance==ADC1)
 8000f6e:	687b      	ldr	r3, [r7, #4]
 8000f70:	681b      	ldr	r3, [r3, #0]
 8000f72:	4a59      	ldr	r2, [pc, #356]	; (80010d8 <HAL_ADC_MspInit+0x190>)
 8000f74:	4293      	cmp	r3, r2
 8000f76:	f040 80ab 	bne.w	80010d0 <HAL_ADC_MspInit+0x188>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8000f7a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8000f7e:	f04f 0300 	mov.w	r3, #0
 8000f82:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.PLL2.PLL2M = 4;
 8000f86:	2304      	movs	r3, #4
 8000f88:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.PLL2.PLL2N = 12;
 8000f8a:	230c      	movs	r3, #12
 8000f8c:	62fb      	str	r3, [r7, #44]	; 0x2c
    PeriphClkInitStruct.PLL2.PLL2P = 2;
 8000f8e:	2302      	movs	r3, #2
 8000f90:	633b      	str	r3, [r7, #48]	; 0x30
    PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8000f92:	2302      	movs	r3, #2
 8000f94:	637b      	str	r3, [r7, #52]	; 0x34
    PeriphClkInitStruct.PLL2.PLL2R = 2;
 8000f96:	2302      	movs	r3, #2
 8000f98:	63bb      	str	r3, [r7, #56]	; 0x38
    PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 8000f9a:	23c0      	movs	r3, #192	; 0xc0
 8000f9c:	63fb      	str	r3, [r7, #60]	; 0x3c
    PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	643b      	str	r3, [r7, #64]	; 0x40
    PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8000fa2:	2300      	movs	r3, #0
 8000fa4:	647b      	str	r3, [r7, #68]	; 0x44
    PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000fac:	f107 0320 	add.w	r3, r7, #32
 8000fb0:	4618      	mov	r0, r3
 8000fb2:	f006 fe2b 	bl	8007c0c <HAL_RCCEx_PeriphCLKConfig>
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d001      	beq.n	8000fc0 <HAL_ADC_MspInit+0x78>
    {
      Error_Handler();
 8000fbc:	f7ff ffa4 	bl	8000f08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 8000fc0:	4b46      	ldr	r3, [pc, #280]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fc2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000fc6:	4a45      	ldr	r2, [pc, #276]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fc8:	f043 0320 	orr.w	r3, r3, #32
 8000fcc:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8000fd0:	4b42      	ldr	r3, [pc, #264]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fd2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8000fd6:	f003 0320 	and.w	r3, r3, #32
 8000fda:	61fb      	str	r3, [r7, #28]
 8000fdc:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000fde:	4b3f      	ldr	r3, [pc, #252]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fe0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000fe4:	4a3d      	ldr	r2, [pc, #244]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000fe6:	f043 0301 	orr.w	r3, r3, #1
 8000fea:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8000fee:	4b3b      	ldr	r3, [pc, #236]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000ff0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8000ff4:	f003 0301 	and.w	r3, r3, #1
 8000ff8:	61bb      	str	r3, [r7, #24]
 8000ffa:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ffc:	4b37      	ldr	r3, [pc, #220]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8000ffe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001002:	4a36      	ldr	r2, [pc, #216]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8001004:	f043 0304 	orr.w	r3, r3, #4
 8001008:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800100c:	4b33      	ldr	r3, [pc, #204]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800100e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001012:	f003 0304 	and.w	r3, r3, #4
 8001016:	617b      	str	r3, [r7, #20]
 8001018:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800101a:	4b30      	ldr	r3, [pc, #192]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800101c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001020:	4a2e      	ldr	r2, [pc, #184]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8001022:	f043 0302 	orr.w	r3, r3, #2
 8001026:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800102a:	4b2c      	ldr	r3, [pc, #176]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800102c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001030:	f003 0302 	and.w	r3, r3, #2
 8001034:	613b      	str	r3, [r7, #16]
 8001036:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001038:	4b28      	ldr	r3, [pc, #160]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800103a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800103e:	4a27      	ldr	r2, [pc, #156]	; (80010dc <HAL_ADC_MspInit+0x194>)
 8001040:	f043 0320 	orr.w	r3, r3, #32
 8001044:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001048:	4b24      	ldr	r3, [pc, #144]	; (80010dc <HAL_ADC_MspInit+0x194>)
 800104a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800104e:	f003 0320 	and.w	r3, r3, #32
 8001052:	60fb      	str	r3, [r7, #12]
 8001054:	68fb      	ldr	r3, [r7, #12]
    PC4     ------> ADC1_INP4
    PB1     ------> ADC1_INP5
    PF11     ------> ADC1_INP2
    PF12     ------> ADC1_INP6
    */
    GPIO_InitStruct.Pin = POT1_Pin|POT2_Pin;
 8001056:	23c0      	movs	r3, #192	; 0xc0
 8001058:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800105c:	2303      	movs	r3, #3
 800105e:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001062:	2300      	movs	r3, #0
 8001064:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001068:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800106c:	4619      	mov	r1, r3
 800106e:	481c      	ldr	r0, [pc, #112]	; (80010e0 <HAL_ADC_MspInit+0x198>)
 8001070:	f004 fdda 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT4_Pin;
 8001074:	2310      	movs	r3, #16
 8001076:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800107a:	2303      	movs	r3, #3
 800107c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001080:	2300      	movs	r3, #0
 8001082:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(POT4_GPIO_Port, &GPIO_InitStruct);
 8001086:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800108a:	4619      	mov	r1, r3
 800108c:	4815      	ldr	r0, [pc, #84]	; (80010e4 <HAL_ADC_MspInit+0x19c>)
 800108e:	f004 fdcb 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT3_Pin;
 8001092:	2302      	movs	r3, #2
 8001094:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001098:	2303      	movs	r3, #3
 800109a:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800109e:	2300      	movs	r3, #0
 80010a0:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(POT3_GPIO_Port, &GPIO_InitStruct);
 80010a4:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80010a8:	4619      	mov	r1, r3
 80010aa:	480f      	ldr	r0, [pc, #60]	; (80010e8 <HAL_ADC_MspInit+0x1a0>)
 80010ac:	f004 fdbc 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = POT5_Pin|POT6_Pin;
 80010b0:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80010b4:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80010b8:	2303      	movs	r3, #3
 80010ba:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010be:	2300      	movs	r3, #0
 80010c0:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80010c4:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80010c8:	4619      	mov	r1, r3
 80010ca:	4808      	ldr	r0, [pc, #32]	; (80010ec <HAL_ADC_MspInit+0x1a4>)
 80010cc:	f004 fdac 	bl	8005c28 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80010d0:	bf00      	nop
 80010d2:	37f0      	adds	r7, #240	; 0xf0
 80010d4:	46bd      	mov	sp, r7
 80010d6:	bd80      	pop	{r7, pc}
 80010d8:	40022000 	.word	0x40022000
 80010dc:	58024400 	.word	0x58024400
 80010e0:	58020000 	.word	0x58020000
 80010e4:	58020800 	.word	0x58020800
 80010e8:	58020400 	.word	0x58020400
 80010ec:	58021400 	.word	0x58021400

080010f0 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 80010f0:	b480      	push	{r7}
 80010f2:	b085      	sub	sp, #20
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 80010f8:	687b      	ldr	r3, [r7, #4]
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	4a0b      	ldr	r2, [pc, #44]	; (800112c <HAL_CRC_MspInit+0x3c>)
 80010fe:	4293      	cmp	r3, r2
 8001100:	d10e      	bne.n	8001120 <HAL_CRC_MspInit+0x30>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001102:	4b0b      	ldr	r3, [pc, #44]	; (8001130 <HAL_CRC_MspInit+0x40>)
 8001104:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001108:	4a09      	ldr	r2, [pc, #36]	; (8001130 <HAL_CRC_MspInit+0x40>)
 800110a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800110e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001112:	4b07      	ldr	r3, [pc, #28]	; (8001130 <HAL_CRC_MspInit+0x40>)
 8001114:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001118:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800111c:	60fb      	str	r3, [r7, #12]
 800111e:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001120:	bf00      	nop
 8001122:	3714      	adds	r7, #20
 8001124:	46bd      	mov	sp, r7
 8001126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800112a:	4770      	bx	lr
 800112c:	58024c00 	.word	0x58024c00
 8001130:	58024400 	.word	0x58024400

08001134 <HAL_OSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspInit(OSPI_HandleTypeDef* hospi)
{
 8001134:	b580      	push	{r7, lr}
 8001136:	b0be      	sub	sp, #248	; 0xf8
 8001138:	af00      	add	r7, sp, #0
 800113a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800113c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001140:	2200      	movs	r2, #0
 8001142:	601a      	str	r2, [r3, #0]
 8001144:	605a      	str	r2, [r3, #4]
 8001146:	609a      	str	r2, [r3, #8]
 8001148:	60da      	str	r2, [r3, #12]
 800114a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800114c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001150:	22b8      	movs	r2, #184	; 0xb8
 8001152:	2100      	movs	r1, #0
 8001154:	4618      	mov	r0, r3
 8001156:	f022 fb70 	bl	802383a <memset>
  if(hospi->Instance==OCTOSPI1)
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	4a81      	ldr	r2, [pc, #516]	; (8001364 <HAL_OSPI_MspInit+0x230>)
 8001160:	4293      	cmp	r3, r2
 8001162:	f040 80fb 	bne.w	800135c <HAL_OSPI_MspInit+0x228>

  /* USER CODE END OCTOSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 8001166:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800116a:	f04f 0300 	mov.w	r3, #0
 800116e:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_D1HCLK;
 8001172:	2300      	movs	r3, #0
 8001174:	677b      	str	r3, [r7, #116]	; 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001176:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800117a:	4618      	mov	r0, r3
 800117c:	f006 fd46 	bl	8007c0c <HAL_RCCEx_PeriphCLKConfig>
 8001180:	4603      	mov	r3, r0
 8001182:	2b00      	cmp	r3, #0
 8001184:	d001      	beq.n	800118a <HAL_OSPI_MspInit+0x56>
    {
      Error_Handler();
 8001186:	f7ff febf 	bl	8000f08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 800118a:	4b77      	ldr	r3, [pc, #476]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 800118c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8001190:	4a75      	ldr	r2, [pc, #468]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001192:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001196:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 800119a:	4b73      	ldr	r3, [pc, #460]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 800119c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011a0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80011a4:	627b      	str	r3, [r7, #36]	; 0x24
 80011a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    __HAL_RCC_OSPI1_CLK_ENABLE();
 80011a8:	4b6f      	ldr	r3, [pc, #444]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011aa:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011ae:	4a6e      	ldr	r2, [pc, #440]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011b0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80011b4:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 80011b8:	4b6b      	ldr	r3, [pc, #428]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011ba:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80011be:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80011c2:	623b      	str	r3, [r7, #32]
 80011c4:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 80011c6:	4b68      	ldr	r3, [pc, #416]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011c8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011cc:	4a66      	ldr	r2, [pc, #408]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011ce:	f043 0310 	orr.w	r3, r3, #16
 80011d2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011d6:	4b64      	ldr	r3, [pc, #400]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011d8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011dc:	f003 0310 	and.w	r3, r3, #16
 80011e0:	61fb      	str	r3, [r7, #28]
 80011e2:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80011e4:	4b60      	ldr	r3, [pc, #384]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011ea:	4a5f      	ldr	r2, [pc, #380]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011ec:	f043 0320 	orr.w	r3, r3, #32
 80011f0:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011f4:	4b5c      	ldr	r3, [pc, #368]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 80011f6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011fa:	f003 0320 	and.w	r3, r3, #32
 80011fe:	61bb      	str	r3, [r7, #24]
 8001200:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001202:	4b59      	ldr	r3, [pc, #356]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001204:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001208:	4a57      	ldr	r2, [pc, #348]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 800120a:	f043 0304 	orr.w	r3, r3, #4
 800120e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001212:	4b55      	ldr	r3, [pc, #340]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001214:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001218:	f003 0304 	and.w	r3, r3, #4
 800121c:	617b      	str	r3, [r7, #20]
 800121e:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001220:	4b51      	ldr	r3, [pc, #324]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001222:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001226:	4a50      	ldr	r2, [pc, #320]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001228:	f043 0301 	orr.w	r3, r3, #1
 800122c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001230:	4b4d      	ldr	r3, [pc, #308]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001232:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001236:	f003 0301 	and.w	r3, r3, #1
 800123a:	613b      	str	r3, [r7, #16]
 800123c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800123e:	4b4a      	ldr	r3, [pc, #296]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001240:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001244:	4a48      	ldr	r2, [pc, #288]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001246:	f043 0302 	orr.w	r3, r3, #2
 800124a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800124e:	4b46      	ldr	r3, [pc, #280]	; (8001368 <HAL_OSPI_MspInit+0x234>)
 8001250:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001254:	f003 0302 	and.w	r3, r3, #2
 8001258:	60fb      	str	r3, [r7, #12]
 800125a:	68fb      	ldr	r3, [r7, #12]
    PC3_C     ------> OCTOSPIM_P1_IO0
    PA1     ------> OCTOSPIM_P1_IO3
    PB0     ------> OCTOSPIM_P1_IO1
    PE11     ------> OCTOSPIM_P1_NCS
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800125c:	2304      	movs	r3, #4
 800125e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001262:	2302      	movs	r3, #2
 8001264:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001268:	2300      	movs	r3, #0
 800126a:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800126e:	2303      	movs	r3, #3
 8001270:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001274:	2309      	movs	r3, #9
 8001276:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800127a:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 800127e:	4619      	mov	r1, r3
 8001280:	483a      	ldr	r0, [pc, #232]	; (800136c <HAL_OSPI_MspInit+0x238>)
 8001282:	f004 fcd1 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001286:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800128a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800128e:	2302      	movs	r3, #2
 8001290:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001294:	2300      	movs	r3, #0
 8001296:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800129a:	2303      	movs	r3, #3
 800129c:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80012a0:	2309      	movs	r3, #9
 80012a2:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80012a6:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80012aa:	4619      	mov	r1, r3
 80012ac:	4830      	ldr	r0, [pc, #192]	; (8001370 <HAL_OSPI_MspInit+0x23c>)
 80012ae:	f004 fcbb 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80012b2:	2308      	movs	r3, #8
 80012b4:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012b8:	2302      	movs	r3, #2
 80012ba:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012be:	2300      	movs	r3, #0
 80012c0:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012c4:	2303      	movs	r3, #3
 80012c6:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80012ca:	2309      	movs	r3, #9
 80012cc:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012d0:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80012d4:	4619      	mov	r1, r3
 80012d6:	4827      	ldr	r0, [pc, #156]	; (8001374 <HAL_OSPI_MspInit+0x240>)
 80012d8:	f004 fca6 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_1;
 80012dc:	2302      	movs	r3, #2
 80012de:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012e2:	2302      	movs	r3, #2
 80012e4:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012e8:	2300      	movs	r3, #0
 80012ea:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012ee:	2303      	movs	r3, #3
 80012f0:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80012f4:	2309      	movs	r3, #9
 80012f6:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012fa:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80012fe:	4619      	mov	r1, r3
 8001300:	481d      	ldr	r0, [pc, #116]	; (8001378 <HAL_OSPI_MspInit+0x244>)
 8001302:	f004 fc91 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001306:	2301      	movs	r3, #1
 8001308:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800130c:	2302      	movs	r3, #2
 800130e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001312:	2300      	movs	r3, #0
 8001314:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001318:	2303      	movs	r3, #3
 800131a:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF4_OCTOSPIM_P1;
 800131e:	2304      	movs	r3, #4
 8001320:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001324:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001328:	4619      	mov	r1, r3
 800132a:	4814      	ldr	r0, [pc, #80]	; (800137c <HAL_OSPI_MspInit+0x248>)
 800132c:	f004 fc7c 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001330:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001334:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001338:	2302      	movs	r3, #2
 800133a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800133e:	2300      	movs	r3, #0
 8001340:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001344:	2303      	movs	r3, #3
 8001346:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF11_OCTOSPIM_P1;
 800134a:	230b      	movs	r3, #11
 800134c:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001350:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8001354:	4619      	mov	r1, r3
 8001356:	4805      	ldr	r0, [pc, #20]	; (800136c <HAL_OSPI_MspInit+0x238>)
 8001358:	f004 fc66 	bl	8005c28 <HAL_GPIO_Init>
  /* USER CODE BEGIN OCTOSPI1_MspInit 1 */

  /* USER CODE END OCTOSPI1_MspInit 1 */
  }

}
 800135c:	bf00      	nop
 800135e:	37f8      	adds	r7, #248	; 0xf8
 8001360:	46bd      	mov	sp, r7
 8001362:	bd80      	pop	{r7, pc}
 8001364:	52005000 	.word	0x52005000
 8001368:	58024400 	.word	0x58024400
 800136c:	58021000 	.word	0x58021000
 8001370:	58021400 	.word	0x58021400
 8001374:	58020800 	.word	0x58020800
 8001378:	58020000 	.word	0x58020000
 800137c:	58020400 	.word	0x58020400

08001380 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001380:	b580      	push	{r7, lr}
 8001382:	b0bc      	sub	sp, #240	; 0xf0
 8001384:	af00      	add	r7, sp, #0
 8001386:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001388:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 800138c:	2200      	movs	r2, #0
 800138e:	601a      	str	r2, [r3, #0]
 8001390:	605a      	str	r2, [r3, #4]
 8001392:	609a      	str	r2, [r3, #8]
 8001394:	60da      	str	r2, [r3, #12]
 8001396:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001398:	f107 0320 	add.w	r3, r7, #32
 800139c:	22b8      	movs	r2, #184	; 0xb8
 800139e:	2100      	movs	r1, #0
 80013a0:	4618      	mov	r0, r3
 80013a2:	f022 fa4a 	bl	802383a <memset>
  if(hspi->Instance==SPI1)
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	681b      	ldr	r3, [r3, #0]
 80013aa:	4a9a      	ldr	r2, [pc, #616]	; (8001614 <HAL_SPI_MspInit+0x294>)
 80013ac:	4293      	cmp	r3, r2
 80013ae:	f040 80a1 	bne.w	80014f4 <HAL_SPI_MspInit+0x174>

  /* USER CODE END SPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI1;
 80013b2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80013b6:	f04f 0300 	mov.w	r3, #0
 80013ba:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.PLL3.PLL3M = 32;
 80013be:	2320      	movs	r3, #32
 80013c0:	64bb      	str	r3, [r7, #72]	; 0x48
    PeriphClkInitStruct.PLL3.PLL3N = 100;
 80013c2:	2364      	movs	r3, #100	; 0x64
 80013c4:	64fb      	str	r3, [r7, #76]	; 0x4c
    PeriphClkInitStruct.PLL3.PLL3P = 1;
 80013c6:	2301      	movs	r3, #1
 80013c8:	653b      	str	r3, [r7, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 80013ca:	2302      	movs	r3, #2
 80013cc:	657b      	str	r3, [r7, #84]	; 0x54
    PeriphClkInitStruct.PLL3.PLL3R = 2;
 80013ce:	2302      	movs	r3, #2
 80013d0:	65bb      	str	r3, [r7, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_1;
 80013d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013d6:	65fb      	str	r3, [r7, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
 80013d8:	2300      	movs	r3, #0
 80013da:	663b      	str	r3, [r7, #96]	; 0x60
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 80013dc:	2300      	movs	r3, #0
 80013de:	667b      	str	r3, [r7, #100]	; 0x64
    PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL3;
 80013e0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80013e4:	67fb      	str	r3, [r7, #124]	; 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013e6:	f107 0320 	add.w	r3, r7, #32
 80013ea:	4618      	mov	r0, r3
 80013ec:	f006 fc0e 	bl	8007c0c <HAL_RCCEx_PeriphCLKConfig>
 80013f0:	4603      	mov	r3, r0
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d001      	beq.n	80013fa <HAL_SPI_MspInit+0x7a>
    {
      Error_Handler();
 80013f6:	f7ff fd87 	bl	8000f08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80013fa:	4b87      	ldr	r3, [pc, #540]	; (8001618 <HAL_SPI_MspInit+0x298>)
 80013fc:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8001400:	4a85      	ldr	r2, [pc, #532]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001402:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001406:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 800140a:	4b83      	ldr	r3, [pc, #524]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800140c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8001410:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001414:	61fb      	str	r3, [r7, #28]
 8001416:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001418:	4b7f      	ldr	r3, [pc, #508]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800141a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800141e:	4a7e      	ldr	r2, [pc, #504]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001420:	f043 0301 	orr.w	r3, r3, #1
 8001424:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001428:	4b7b      	ldr	r3, [pc, #492]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800142a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800142e:	f003 0301 	and.w	r3, r3, #1
 8001432:	61bb      	str	r3, [r7, #24]
 8001434:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001436:	4b78      	ldr	r3, [pc, #480]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001438:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800143c:	4a76      	ldr	r2, [pc, #472]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800143e:	f043 0308 	orr.w	r3, r3, #8
 8001442:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001446:	4b74      	ldr	r3, [pc, #464]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001448:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800144c:	f003 0308 	and.w	r3, r3, #8
 8001450:	617b      	str	r3, [r7, #20]
 8001452:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001454:	4b70      	ldr	r3, [pc, #448]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001456:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800145a:	4a6f      	ldr	r2, [pc, #444]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800145c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001460:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001464:	4b6c      	ldr	r3, [pc, #432]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001466:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800146a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800146e:	613b      	str	r3, [r7, #16]
 8001470:	693b      	ldr	r3, [r7, #16]
    PA4     ------> SPI1_NSS
    PA5     ------> SPI1_SCK
    PD7     ------> SPI1_MOSI
    PG9     ------> SPI1_MISO
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8001472:	2330      	movs	r3, #48	; 0x30
 8001474:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001478:	2302      	movs	r3, #2
 800147a:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800147e:	2300      	movs	r3, #0
 8001480:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001484:	2300      	movs	r3, #0
 8001486:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800148a:	2305      	movs	r3, #5
 800148c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001490:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001494:	4619      	mov	r1, r3
 8001496:	4861      	ldr	r0, [pc, #388]	; (800161c <HAL_SPI_MspInit+0x29c>)
 8001498:	f004 fbc6 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7;
 800149c:	2380      	movs	r3, #128	; 0x80
 800149e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014a2:	2302      	movs	r3, #2
 80014a4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014a8:	2300      	movs	r3, #0
 80014aa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014ae:	2300      	movs	r3, #0
 80014b0:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80014b4:	2305      	movs	r3, #5
 80014b6:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014ba:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80014be:	4619      	mov	r1, r3
 80014c0:	4857      	ldr	r0, [pc, #348]	; (8001620 <HAL_SPI_MspInit+0x2a0>)
 80014c2:	f004 fbb1 	bl	8005c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80014c6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80014ca:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014ce:	2302      	movs	r3, #2
 80014d0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014d4:	2300      	movs	r3, #0
 80014d6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014da:	2300      	movs	r3, #0
 80014dc:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80014e0:	2305      	movs	r3, #5
 80014e2:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80014e6:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 80014ea:	4619      	mov	r1, r3
 80014ec:	484d      	ldr	r0, [pc, #308]	; (8001624 <HAL_SPI_MspInit+0x2a4>)
 80014ee:	f004 fb9b 	bl	8005c28 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80014f2:	e08b      	b.n	800160c <HAL_SPI_MspInit+0x28c>
  else if(hspi->Instance==SPI5)
 80014f4:	687b      	ldr	r3, [r7, #4]
 80014f6:	681b      	ldr	r3, [r3, #0]
 80014f8:	4a4b      	ldr	r2, [pc, #300]	; (8001628 <HAL_SPI_MspInit+0x2a8>)
 80014fa:	4293      	cmp	r3, r2
 80014fc:	f040 8086 	bne.w	800160c <HAL_SPI_MspInit+0x28c>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI5;
 8001500:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001504:	f04f 0300 	mov.w	r3, #0
 8001508:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_HSI;
 800150c:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8001510:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001514:	f107 0320 	add.w	r3, r7, #32
 8001518:	4618      	mov	r0, r3
 800151a:	f006 fb77 	bl	8007c0c <HAL_RCCEx_PeriphCLKConfig>
 800151e:	4603      	mov	r3, r0
 8001520:	2b00      	cmp	r3, #0
 8001522:	d001      	beq.n	8001528 <HAL_SPI_MspInit+0x1a8>
      Error_Handler();
 8001524:	f7ff fcf0 	bl	8000f08 <Error_Handler>
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001528:	4b3b      	ldr	r3, [pc, #236]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800152a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800152e:	4a3a      	ldr	r2, [pc, #232]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001530:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8001534:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8001538:	4b37      	ldr	r3, [pc, #220]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800153a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800153e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001542:	60fb      	str	r3, [r7, #12]
 8001544:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001546:	4b34      	ldr	r3, [pc, #208]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001548:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800154c:	4a32      	ldr	r2, [pc, #200]	; (8001618 <HAL_SPI_MspInit+0x298>)
 800154e:	f043 0320 	orr.w	r3, r3, #32
 8001552:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001556:	4b30      	ldr	r3, [pc, #192]	; (8001618 <HAL_SPI_MspInit+0x298>)
 8001558:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800155c:	f003 0320 	and.w	r3, r3, #32
 8001560:	60bb      	str	r3, [r7, #8]
 8001562:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001564:	f44f 7360 	mov.w	r3, #896	; 0x380
 8001568:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800156c:	2302      	movs	r3, #2
 800156e:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001572:	2300      	movs	r3, #0
 8001574:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001578:	2300      	movs	r3, #0
 800157a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800157e:	2305      	movs	r3, #5
 8001580:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001584:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8001588:	4619      	mov	r1, r3
 800158a:	4828      	ldr	r0, [pc, #160]	; (800162c <HAL_SPI_MspInit+0x2ac>)
 800158c:	f004 fb4c 	bl	8005c28 <HAL_GPIO_Init>
    hdma_spi5_tx.Instance = DMA1_Stream0;
 8001590:	4b27      	ldr	r3, [pc, #156]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 8001592:	4a28      	ldr	r2, [pc, #160]	; (8001634 <HAL_SPI_MspInit+0x2b4>)
 8001594:	601a      	str	r2, [r3, #0]
    hdma_spi5_tx.Init.Request = DMA_REQUEST_SPI5_TX;
 8001596:	4b26      	ldr	r3, [pc, #152]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 8001598:	2256      	movs	r2, #86	; 0x56
 800159a:	605a      	str	r2, [r3, #4]
    hdma_spi5_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 800159c:	4b24      	ldr	r3, [pc, #144]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 800159e:	2240      	movs	r2, #64	; 0x40
 80015a0:	609a      	str	r2, [r3, #8]
    hdma_spi5_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80015a2:	4b23      	ldr	r3, [pc, #140]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015a4:	2200      	movs	r2, #0
 80015a6:	60da      	str	r2, [r3, #12]
    hdma_spi5_tx.Init.MemInc = DMA_MINC_ENABLE;
 80015a8:	4b21      	ldr	r3, [pc, #132]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015aa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80015ae:	611a      	str	r2, [r3, #16]
    hdma_spi5_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80015b0:	4b1f      	ldr	r3, [pc, #124]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015b2:	2200      	movs	r2, #0
 80015b4:	615a      	str	r2, [r3, #20]
    hdma_spi5_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80015b6:	4b1e      	ldr	r3, [pc, #120]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015b8:	2200      	movs	r2, #0
 80015ba:	619a      	str	r2, [r3, #24]
    hdma_spi5_tx.Init.Mode = DMA_NORMAL;
 80015bc:	4b1c      	ldr	r3, [pc, #112]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015be:	2200      	movs	r2, #0
 80015c0:	61da      	str	r2, [r3, #28]
    hdma_spi5_tx.Init.Priority = DMA_PRIORITY_LOW;
 80015c2:	4b1b      	ldr	r3, [pc, #108]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015c4:	2200      	movs	r2, #0
 80015c6:	621a      	str	r2, [r3, #32]
    hdma_spi5_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 80015c8:	4b19      	ldr	r3, [pc, #100]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015ca:	2204      	movs	r2, #4
 80015cc:	625a      	str	r2, [r3, #36]	; 0x24
    hdma_spi5_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 80015ce:	4b18      	ldr	r3, [pc, #96]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015d0:	2203      	movs	r2, #3
 80015d2:	629a      	str	r2, [r3, #40]	; 0x28
    hdma_spi5_tx.Init.MemBurst = DMA_MBURST_SINGLE;
 80015d4:	4b16      	ldr	r3, [pc, #88]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015d6:	2200      	movs	r2, #0
 80015d8:	62da      	str	r2, [r3, #44]	; 0x2c
    hdma_spi5_tx.Init.PeriphBurst = DMA_PBURST_SINGLE;
 80015da:	4b15      	ldr	r3, [pc, #84]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015dc:	2200      	movs	r2, #0
 80015de:	631a      	str	r2, [r3, #48]	; 0x30
    if (HAL_DMA_Init(&hdma_spi5_tx) != HAL_OK)
 80015e0:	4813      	ldr	r0, [pc, #76]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015e2:	f001 fffb 	bl	80035dc <HAL_DMA_Init>
 80015e6:	4603      	mov	r3, r0
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d001      	beq.n	80015f0 <HAL_SPI_MspInit+0x270>
      Error_Handler();
 80015ec:	f7ff fc8c 	bl	8000f08 <Error_Handler>
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi5_tx);
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	4a0f      	ldr	r2, [pc, #60]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015f4:	679a      	str	r2, [r3, #120]	; 0x78
 80015f6:	4a0e      	ldr	r2, [pc, #56]	; (8001630 <HAL_SPI_MspInit+0x2b0>)
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_NVIC_SetPriority(SPI5_IRQn, 0, 0);
 80015fc:	2200      	movs	r2, #0
 80015fe:	2100      	movs	r1, #0
 8001600:	2055      	movs	r0, #85	; 0x55
 8001602:	f001 fec4 	bl	800338e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI5_IRQn);
 8001606:	2055      	movs	r0, #85	; 0x55
 8001608:	f001 fedb 	bl	80033c2 <HAL_NVIC_EnableIRQ>
}
 800160c:	bf00      	nop
 800160e:	37f0      	adds	r7, #240	; 0xf0
 8001610:	46bd      	mov	sp, r7
 8001612:	bd80      	pop	{r7, pc}
 8001614:	40013000 	.word	0x40013000
 8001618:	58024400 	.word	0x58024400
 800161c:	58020000 	.word	0x58020000
 8001620:	58020c00 	.word	0x58020c00
 8001624:	58021800 	.word	0x58021800
 8001628:	40015000 	.word	0x40015000
 800162c:	58021400 	.word	0x58021400
 8001630:	24000314 	.word	0x24000314
 8001634:	40020010 	.word	0x40020010

08001638 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001638:	b480      	push	{r7}
 800163a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800163c:	e7fe      	b.n	800163c <NMI_Handler+0x4>

0800163e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800163e:	b480      	push	{r7}
 8001640:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001642:	e7fe      	b.n	8001642 <HardFault_Handler+0x4>

08001644 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001644:	b480      	push	{r7}
 8001646:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001648:	e7fe      	b.n	8001648 <MemManage_Handler+0x4>

0800164a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800164a:	b480      	push	{r7}
 800164c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800164e:	e7fe      	b.n	800164e <BusFault_Handler+0x4>

08001650 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001650:	b480      	push	{r7}
 8001652:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001654:	e7fe      	b.n	8001654 <UsageFault_Handler+0x4>

08001656 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001656:	b480      	push	{r7}
 8001658:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800165a:	bf00      	nop
 800165c:	46bd      	mov	sp, r7
 800165e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001662:	4770      	bx	lr

08001664 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001664:	b480      	push	{r7}
 8001666:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001668:	bf00      	nop
 800166a:	46bd      	mov	sp, r7
 800166c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001670:	4770      	bx	lr

08001672 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001672:	b480      	push	{r7}
 8001674:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001676:	bf00      	nop
 8001678:	46bd      	mov	sp, r7
 800167a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800167e:	4770      	bx	lr

08001680 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001680:	b580      	push	{r7, lr}
 8001682:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001684:	f000 f9f0 	bl	8001a68 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001688:	bf00      	nop
 800168a:	bd80      	pop	{r7, pc}

0800168c <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 800168c:	b580      	push	{r7, lr}
 800168e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi5_tx);
 8001690:	4802      	ldr	r0, [pc, #8]	; (800169c <DMA1_Stream0_IRQHandler+0x10>)
 8001692:	f002 ffab 	bl	80045ec <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 8001696:	bf00      	nop
 8001698:	bd80      	pop	{r7, pc}
 800169a:	bf00      	nop
 800169c:	24000314 	.word	0x24000314

080016a0 <SPI5_IRQHandler>:

/**
  * @brief This function handles SPI5 global interrupt.
  */
void SPI5_IRQHandler(void)
{
 80016a0:	b580      	push	{r7, lr}
 80016a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI5_IRQn 0 */

  /* USER CODE END SPI5_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi5);
 80016a4:	4802      	ldr	r0, [pc, #8]	; (80016b0 <SPI5_IRQHandler+0x10>)
 80016a6:	f009 faeb 	bl	800ac80 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI5_IRQn 1 */

  /* USER CODE END SPI5_IRQn 1 */
}
 80016aa:	bf00      	nop
 80016ac:	bd80      	pop	{r7, pc}
 80016ae:	bf00      	nop
 80016b0:	2400028c 	.word	0x2400028c

080016b4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80016b4:	b480      	push	{r7}
 80016b6:	af00      	add	r7, sp, #0
  return 1;
 80016b8:	2301      	movs	r3, #1
}
 80016ba:	4618      	mov	r0, r3
 80016bc:	46bd      	mov	sp, r7
 80016be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016c2:	4770      	bx	lr

080016c4 <_kill>:

int _kill(int pid, int sig)
{
 80016c4:	b580      	push	{r7, lr}
 80016c6:	b082      	sub	sp, #8
 80016c8:	af00      	add	r7, sp, #0
 80016ca:	6078      	str	r0, [r7, #4]
 80016cc:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80016ce:	f022 f957 	bl	8023980 <__errno>
 80016d2:	4603      	mov	r3, r0
 80016d4:	2216      	movs	r2, #22
 80016d6:	601a      	str	r2, [r3, #0]
  return -1;
 80016d8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80016dc:	4618      	mov	r0, r3
 80016de:	3708      	adds	r7, #8
 80016e0:	46bd      	mov	sp, r7
 80016e2:	bd80      	pop	{r7, pc}

080016e4 <_exit>:

void _exit (int status)
{
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b082      	sub	sp, #8
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80016ec:	f04f 31ff 	mov.w	r1, #4294967295
 80016f0:	6878      	ldr	r0, [r7, #4]
 80016f2:	f7ff ffe7 	bl	80016c4 <_kill>
  while (1) {}    /* Make sure we hang here */
 80016f6:	e7fe      	b.n	80016f6 <_exit+0x12>

080016f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80016f8:	b580      	push	{r7, lr}
 80016fa:	b086      	sub	sp, #24
 80016fc:	af00      	add	r7, sp, #0
 80016fe:	60f8      	str	r0, [r7, #12]
 8001700:	60b9      	str	r1, [r7, #8]
 8001702:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001704:	2300      	movs	r3, #0
 8001706:	617b      	str	r3, [r7, #20]
 8001708:	e00a      	b.n	8001720 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800170a:	f3af 8000 	nop.w
 800170e:	4601      	mov	r1, r0
 8001710:	68bb      	ldr	r3, [r7, #8]
 8001712:	1c5a      	adds	r2, r3, #1
 8001714:	60ba      	str	r2, [r7, #8]
 8001716:	b2ca      	uxtb	r2, r1
 8001718:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800171a:	697b      	ldr	r3, [r7, #20]
 800171c:	3301      	adds	r3, #1
 800171e:	617b      	str	r3, [r7, #20]
 8001720:	697a      	ldr	r2, [r7, #20]
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	429a      	cmp	r2, r3
 8001726:	dbf0      	blt.n	800170a <_read+0x12>
  }

  return len;
 8001728:	687b      	ldr	r3, [r7, #4]
}
 800172a:	4618      	mov	r0, r3
 800172c:	3718      	adds	r7, #24
 800172e:	46bd      	mov	sp, r7
 8001730:	bd80      	pop	{r7, pc}

08001732 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001732:	b580      	push	{r7, lr}
 8001734:	b086      	sub	sp, #24
 8001736:	af00      	add	r7, sp, #0
 8001738:	60f8      	str	r0, [r7, #12]
 800173a:	60b9      	str	r1, [r7, #8]
 800173c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800173e:	2300      	movs	r3, #0
 8001740:	617b      	str	r3, [r7, #20]
 8001742:	e009      	b.n	8001758 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001744:	68bb      	ldr	r3, [r7, #8]
 8001746:	1c5a      	adds	r2, r3, #1
 8001748:	60ba      	str	r2, [r7, #8]
 800174a:	781b      	ldrb	r3, [r3, #0]
 800174c:	4618      	mov	r0, r3
 800174e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001752:	697b      	ldr	r3, [r7, #20]
 8001754:	3301      	adds	r3, #1
 8001756:	617b      	str	r3, [r7, #20]
 8001758:	697a      	ldr	r2, [r7, #20]
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	429a      	cmp	r2, r3
 800175e:	dbf1      	blt.n	8001744 <_write+0x12>
  }
  return len;
 8001760:	687b      	ldr	r3, [r7, #4]
}
 8001762:	4618      	mov	r0, r3
 8001764:	3718      	adds	r7, #24
 8001766:	46bd      	mov	sp, r7
 8001768:	bd80      	pop	{r7, pc}

0800176a <_close>:

int _close(int file)
{
 800176a:	b480      	push	{r7}
 800176c:	b083      	sub	sp, #12
 800176e:	af00      	add	r7, sp, #0
 8001770:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001772:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001776:	4618      	mov	r0, r3
 8001778:	370c      	adds	r7, #12
 800177a:	46bd      	mov	sp, r7
 800177c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001780:	4770      	bx	lr

08001782 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001782:	b480      	push	{r7}
 8001784:	b083      	sub	sp, #12
 8001786:	af00      	add	r7, sp, #0
 8001788:	6078      	str	r0, [r7, #4]
 800178a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800178c:	683b      	ldr	r3, [r7, #0]
 800178e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001792:	605a      	str	r2, [r3, #4]
  return 0;
 8001794:	2300      	movs	r3, #0
}
 8001796:	4618      	mov	r0, r3
 8001798:	370c      	adds	r7, #12
 800179a:	46bd      	mov	sp, r7
 800179c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a0:	4770      	bx	lr

080017a2 <_isatty>:

int _isatty(int file)
{
 80017a2:	b480      	push	{r7}
 80017a4:	b083      	sub	sp, #12
 80017a6:	af00      	add	r7, sp, #0
 80017a8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80017aa:	2301      	movs	r3, #1
}
 80017ac:	4618      	mov	r0, r3
 80017ae:	370c      	adds	r7, #12
 80017b0:	46bd      	mov	sp, r7
 80017b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017b6:	4770      	bx	lr

080017b8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80017b8:	b480      	push	{r7}
 80017ba:	b085      	sub	sp, #20
 80017bc:	af00      	add	r7, sp, #0
 80017be:	60f8      	str	r0, [r7, #12]
 80017c0:	60b9      	str	r1, [r7, #8]
 80017c2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80017c4:	2300      	movs	r3, #0
}
 80017c6:	4618      	mov	r0, r3
 80017c8:	3714      	adds	r7, #20
 80017ca:	46bd      	mov	sp, r7
 80017cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017d0:	4770      	bx	lr
	...

080017d4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80017d4:	b580      	push	{r7, lr}
 80017d6:	b086      	sub	sp, #24
 80017d8:	af00      	add	r7, sp, #0
 80017da:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80017dc:	4a14      	ldr	r2, [pc, #80]	; (8001830 <_sbrk+0x5c>)
 80017de:	4b15      	ldr	r3, [pc, #84]	; (8001834 <_sbrk+0x60>)
 80017e0:	1ad3      	subs	r3, r2, r3
 80017e2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80017e4:	697b      	ldr	r3, [r7, #20]
 80017e6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80017e8:	4b13      	ldr	r3, [pc, #76]	; (8001838 <_sbrk+0x64>)
 80017ea:	681b      	ldr	r3, [r3, #0]
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	d102      	bne.n	80017f6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80017f0:	4b11      	ldr	r3, [pc, #68]	; (8001838 <_sbrk+0x64>)
 80017f2:	4a12      	ldr	r2, [pc, #72]	; (800183c <_sbrk+0x68>)
 80017f4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80017f6:	4b10      	ldr	r3, [pc, #64]	; (8001838 <_sbrk+0x64>)
 80017f8:	681a      	ldr	r2, [r3, #0]
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	4413      	add	r3, r2
 80017fe:	693a      	ldr	r2, [r7, #16]
 8001800:	429a      	cmp	r2, r3
 8001802:	d207      	bcs.n	8001814 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001804:	f022 f8bc 	bl	8023980 <__errno>
 8001808:	4603      	mov	r3, r0
 800180a:	220c      	movs	r2, #12
 800180c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800180e:	f04f 33ff 	mov.w	r3, #4294967295
 8001812:	e009      	b.n	8001828 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001814:	4b08      	ldr	r3, [pc, #32]	; (8001838 <_sbrk+0x64>)
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800181a:	4b07      	ldr	r3, [pc, #28]	; (8001838 <_sbrk+0x64>)
 800181c:	681a      	ldr	r2, [r3, #0]
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	4413      	add	r3, r2
 8001822:	4a05      	ldr	r2, [pc, #20]	; (8001838 <_sbrk+0x64>)
 8001824:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001826:	68fb      	ldr	r3, [r7, #12]
}
 8001828:	4618      	mov	r0, r3
 800182a:	3718      	adds	r7, #24
 800182c:	46bd      	mov	sp, r7
 800182e:	bd80      	pop	{r7, pc}
 8001830:	24050000 	.word	0x24050000
 8001834:	00004000 	.word	0x00004000
 8001838:	2400038c 	.word	0x2400038c
 800183c:	24002ca8 	.word	0x24002ca8

08001840 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001840:	b480      	push	{r7}
 8001842:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8001844:	4b32      	ldr	r3, [pc, #200]	; (8001910 <SystemInit+0xd0>)
 8001846:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800184a:	4a31      	ldr	r2, [pc, #196]	; (8001910 <SystemInit+0xd0>)
 800184c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001850:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8001854:	4b2f      	ldr	r3, [pc, #188]	; (8001914 <SystemInit+0xd4>)
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	f003 030f 	and.w	r3, r3, #15
 800185c:	2b06      	cmp	r3, #6
 800185e:	d807      	bhi.n	8001870 <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8001860:	4b2c      	ldr	r3, [pc, #176]	; (8001914 <SystemInit+0xd4>)
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	f023 030f 	bic.w	r3, r3, #15
 8001868:	4a2a      	ldr	r2, [pc, #168]	; (8001914 <SystemInit+0xd4>)
 800186a:	f043 0307 	orr.w	r3, r3, #7
 800186e:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 8001870:	4b29      	ldr	r3, [pc, #164]	; (8001918 <SystemInit+0xd8>)
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	4a28      	ldr	r2, [pc, #160]	; (8001918 <SystemInit+0xd8>)
 8001876:	f043 0301 	orr.w	r3, r3, #1
 800187a:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800187c:	4b26      	ldr	r3, [pc, #152]	; (8001918 <SystemInit+0xd8>)
 800187e:	2200      	movs	r2, #0
 8001880:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 8001882:	4b25      	ldr	r3, [pc, #148]	; (8001918 <SystemInit+0xd8>)
 8001884:	681a      	ldr	r2, [r3, #0]
 8001886:	4924      	ldr	r1, [pc, #144]	; (8001918 <SystemInit+0xd8>)
 8001888:	4b24      	ldr	r3, [pc, #144]	; (800191c <SystemInit+0xdc>)
 800188a:	4013      	ands	r3, r2
 800188c:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 800188e:	4b21      	ldr	r3, [pc, #132]	; (8001914 <SystemInit+0xd4>)
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	f003 0308 	and.w	r3, r3, #8
 8001896:	2b00      	cmp	r3, #0
 8001898:	d007      	beq.n	80018aa <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 800189a:	4b1e      	ldr	r3, [pc, #120]	; (8001914 <SystemInit+0xd4>)
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	f023 030f 	bic.w	r3, r3, #15
 80018a2:	4a1c      	ldr	r2, [pc, #112]	; (8001914 <SystemInit+0xd4>)
 80018a4:	f043 0307 	orr.w	r3, r3, #7
 80018a8:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 80018aa:	4b1b      	ldr	r3, [pc, #108]	; (8001918 <SystemInit+0xd8>)
 80018ac:	2200      	movs	r2, #0
 80018ae:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 80018b0:	4b19      	ldr	r3, [pc, #100]	; (8001918 <SystemInit+0xd8>)
 80018b2:	2200      	movs	r2, #0
 80018b4:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 80018b6:	4b18      	ldr	r3, [pc, #96]	; (8001918 <SystemInit+0xd8>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 80018bc:	4b16      	ldr	r3, [pc, #88]	; (8001918 <SystemInit+0xd8>)
 80018be:	4a18      	ldr	r2, [pc, #96]	; (8001920 <SystemInit+0xe0>)
 80018c0:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 80018c2:	4b15      	ldr	r3, [pc, #84]	; (8001918 <SystemInit+0xd8>)
 80018c4:	4a17      	ldr	r2, [pc, #92]	; (8001924 <SystemInit+0xe4>)
 80018c6:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 80018c8:	4b13      	ldr	r3, [pc, #76]	; (8001918 <SystemInit+0xd8>)
 80018ca:	4a17      	ldr	r2, [pc, #92]	; (8001928 <SystemInit+0xe8>)
 80018cc:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80018ce:	4b12      	ldr	r3, [pc, #72]	; (8001918 <SystemInit+0xd8>)
 80018d0:	2200      	movs	r2, #0
 80018d2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 80018d4:	4b10      	ldr	r3, [pc, #64]	; (8001918 <SystemInit+0xd8>)
 80018d6:	4a14      	ldr	r2, [pc, #80]	; (8001928 <SystemInit+0xe8>)
 80018d8:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 80018da:	4b0f      	ldr	r3, [pc, #60]	; (8001918 <SystemInit+0xd8>)
 80018dc:	2200      	movs	r2, #0
 80018de:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 80018e0:	4b0d      	ldr	r3, [pc, #52]	; (8001918 <SystemInit+0xd8>)
 80018e2:	4a11      	ldr	r2, [pc, #68]	; (8001928 <SystemInit+0xe8>)
 80018e4:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 80018e6:	4b0c      	ldr	r3, [pc, #48]	; (8001918 <SystemInit+0xd8>)
 80018e8:	2200      	movs	r2, #0
 80018ea:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 80018ec:	4b0a      	ldr	r3, [pc, #40]	; (8001918 <SystemInit+0xd8>)
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	4a09      	ldr	r2, [pc, #36]	; (8001918 <SystemInit+0xd8>)
 80018f2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018f6:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 80018f8:	4b07      	ldr	r3, [pc, #28]	; (8001918 <SystemInit+0xd8>)
 80018fa:	2200      	movs	r2, #0
 80018fc:	661a      	str	r2, [r3, #96]	; 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 80018fe:	4b0b      	ldr	r3, [pc, #44]	; (800192c <SystemInit+0xec>)
 8001900:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8001904:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8001906:	bf00      	nop
 8001908:	46bd      	mov	sp, r7
 800190a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800190e:	4770      	bx	lr
 8001910:	e000ed00 	.word	0xe000ed00
 8001914:	52002000 	.word	0x52002000
 8001918:	58024400 	.word	0x58024400
 800191c:	eaf6ed7f 	.word	0xeaf6ed7f
 8001920:	02020200 	.word	0x02020200
 8001924:	01ff0000 	.word	0x01ff0000
 8001928:	01010280 	.word	0x01010280
 800192c:	52004000 	.word	0x52004000

08001930 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8001930:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001968 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8001934:	f7ff ff84 	bl	8001840 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001938:	480c      	ldr	r0, [pc, #48]	; (800196c <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800193a:	490d      	ldr	r1, [pc, #52]	; (8001970 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 800193c:	4a0d      	ldr	r2, [pc, #52]	; (8001974 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800193e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001940:	e002      	b.n	8001948 <LoopCopyDataInit>

08001942 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001942:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001944:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001946:	3304      	adds	r3, #4

08001948 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001948:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800194a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800194c:	d3f9      	bcc.n	8001942 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800194e:	4a0a      	ldr	r2, [pc, #40]	; (8001978 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001950:	4c0a      	ldr	r4, [pc, #40]	; (800197c <LoopFillZerobss+0x22>)
  movs r3, #0
 8001952:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001954:	e001      	b.n	800195a <LoopFillZerobss>

08001956 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001956:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001958:	3204      	adds	r2, #4

0800195a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800195a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800195c:	d3fb      	bcc.n	8001956 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800195e:	f022 f815 	bl	802398c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001962:	f7fe ff9e 	bl	80008a2 <main>
  bx  lr
 8001966:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001968:	24050000 	.word	0x24050000
  ldr r0, =_sdata
 800196c:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8001970:	240000f8 	.word	0x240000f8
  ldr r2, =_sidata
 8001974:	08043e58 	.word	0x08043e58
  ldr r2, =_sbss
 8001978:	240000f8 	.word	0x240000f8
  ldr r4, =_ebss
 800197c:	24002ca4 	.word	0x24002ca4

08001980 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001980:	e7fe      	b.n	8001980 <ADC3_IRQHandler>
	...

08001984 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001984:	b580      	push	{r7, lr}
 8001986:	b082      	sub	sp, #8
 8001988:	af00      	add	r7, sp, #0
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800198a:	2003      	movs	r0, #3
 800198c:	f001 fcf4 	bl	8003378 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8001990:	f005 ff7c 	bl	800788c <HAL_RCC_GetSysClockFreq>
 8001994:	4602      	mov	r2, r0
 8001996:	4b15      	ldr	r3, [pc, #84]	; (80019ec <HAL_Init+0x68>)
 8001998:	699b      	ldr	r3, [r3, #24]
 800199a:	0a1b      	lsrs	r3, r3, #8
 800199c:	f003 030f 	and.w	r3, r3, #15
 80019a0:	4913      	ldr	r1, [pc, #76]	; (80019f0 <HAL_Init+0x6c>)
 80019a2:	5ccb      	ldrb	r3, [r1, r3]
 80019a4:	f003 031f 	and.w	r3, r3, #31
 80019a8:	fa22 f303 	lsr.w	r3, r2, r3
 80019ac:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80019ae:	4b0f      	ldr	r3, [pc, #60]	; (80019ec <HAL_Init+0x68>)
 80019b0:	699b      	ldr	r3, [r3, #24]
 80019b2:	f003 030f 	and.w	r3, r3, #15
 80019b6:	4a0e      	ldr	r2, [pc, #56]	; (80019f0 <HAL_Init+0x6c>)
 80019b8:	5cd3      	ldrb	r3, [r2, r3]
 80019ba:	f003 031f 	and.w	r3, r3, #31
 80019be:	687a      	ldr	r2, [r7, #4]
 80019c0:	fa22 f303 	lsr.w	r3, r2, r3
 80019c4:	4a0b      	ldr	r2, [pc, #44]	; (80019f4 <HAL_Init+0x70>)
 80019c6:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80019c8:	4a0b      	ldr	r2, [pc, #44]	; (80019f8 <HAL_Init+0x74>)
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80019ce:	200f      	movs	r0, #15
 80019d0:	f000 f814 	bl	80019fc <HAL_InitTick>
 80019d4:	4603      	mov	r3, r0
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	d001      	beq.n	80019de <HAL_Init+0x5a>
  {
    return HAL_ERROR;
 80019da:	2301      	movs	r3, #1
 80019dc:	e002      	b.n	80019e4 <HAL_Init+0x60>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80019de:	f7ff fa99 	bl	8000f14 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80019e2:	2300      	movs	r3, #0
}
 80019e4:	4618      	mov	r0, r3
 80019e6:	3708      	adds	r7, #8
 80019e8:	46bd      	mov	sp, r7
 80019ea:	bd80      	pop	{r7, pc}
 80019ec:	58024400 	.word	0x58024400
 80019f0:	0802555c 	.word	0x0802555c
 80019f4:	24000008 	.word	0x24000008
 80019f8:	24000004 	.word	0x24000004

080019fc <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80019fc:	b580      	push	{r7, lr}
 80019fe:	b082      	sub	sp, #8
 8001a00:	af00      	add	r7, sp, #0
 8001a02:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 8001a04:	4b15      	ldr	r3, [pc, #84]	; (8001a5c <HAL_InitTick+0x60>)
 8001a06:	781b      	ldrb	r3, [r3, #0]
 8001a08:	2b00      	cmp	r3, #0
 8001a0a:	d101      	bne.n	8001a10 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 8001a0c:	2301      	movs	r3, #1
 8001a0e:	e021      	b.n	8001a54 <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8001a10:	4b13      	ldr	r3, [pc, #76]	; (8001a60 <HAL_InitTick+0x64>)
 8001a12:	681a      	ldr	r2, [r3, #0]
 8001a14:	4b11      	ldr	r3, [pc, #68]	; (8001a5c <HAL_InitTick+0x60>)
 8001a16:	781b      	ldrb	r3, [r3, #0]
 8001a18:	4619      	mov	r1, r3
 8001a1a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001a1e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001a22:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a26:	4618      	mov	r0, r3
 8001a28:	f001 fcd9 	bl	80033de <HAL_SYSTICK_Config>
 8001a2c:	4603      	mov	r3, r0
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	d001      	beq.n	8001a36 <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 8001a32:	2301      	movs	r3, #1
 8001a34:	e00e      	b.n	8001a54 <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	2b0f      	cmp	r3, #15
 8001a3a:	d80a      	bhi.n	8001a52 <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001a3c:	2200      	movs	r2, #0
 8001a3e:	6879      	ldr	r1, [r7, #4]
 8001a40:	f04f 30ff 	mov.w	r0, #4294967295
 8001a44:	f001 fca3 	bl	800338e <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001a48:	4a06      	ldr	r2, [pc, #24]	; (8001a64 <HAL_InitTick+0x68>)
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8001a4e:	2300      	movs	r3, #0
 8001a50:	e000      	b.n	8001a54 <HAL_InitTick+0x58>
    return HAL_ERROR;
 8001a52:	2301      	movs	r3, #1
}
 8001a54:	4618      	mov	r0, r3
 8001a56:	3708      	adds	r7, #8
 8001a58:	46bd      	mov	sp, r7
 8001a5a:	bd80      	pop	{r7, pc}
 8001a5c:	24000010 	.word	0x24000010
 8001a60:	24000004 	.word	0x24000004
 8001a64:	2400000c 	.word	0x2400000c

08001a68 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001a68:	b480      	push	{r7}
 8001a6a:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8001a6c:	4b06      	ldr	r3, [pc, #24]	; (8001a88 <HAL_IncTick+0x20>)
 8001a6e:	781b      	ldrb	r3, [r3, #0]
 8001a70:	461a      	mov	r2, r3
 8001a72:	4b06      	ldr	r3, [pc, #24]	; (8001a8c <HAL_IncTick+0x24>)
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	4413      	add	r3, r2
 8001a78:	4a04      	ldr	r2, [pc, #16]	; (8001a8c <HAL_IncTick+0x24>)
 8001a7a:	6013      	str	r3, [r2, #0]
}
 8001a7c:	bf00      	nop
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a84:	4770      	bx	lr
 8001a86:	bf00      	nop
 8001a88:	24000010 	.word	0x24000010
 8001a8c:	24000390 	.word	0x24000390

08001a90 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001a90:	b480      	push	{r7}
 8001a92:	af00      	add	r7, sp, #0
  return uwTick;
 8001a94:	4b03      	ldr	r3, [pc, #12]	; (8001aa4 <HAL_GetTick+0x14>)
 8001a96:	681b      	ldr	r3, [r3, #0]
}
 8001a98:	4618      	mov	r0, r3
 8001a9a:	46bd      	mov	sp, r7
 8001a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aa0:	4770      	bx	lr
 8001aa2:	bf00      	nop
 8001aa4:	24000390 	.word	0x24000390

08001aa8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001aa8:	b580      	push	{r7, lr}
 8001aaa:	b084      	sub	sp, #16
 8001aac:	af00      	add	r7, sp, #0
 8001aae:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001ab0:	f7ff ffee 	bl	8001a90 <HAL_GetTick>
 8001ab4:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001aba:	68fb      	ldr	r3, [r7, #12]
 8001abc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001ac0:	d005      	beq.n	8001ace <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001ac2:	4b0a      	ldr	r3, [pc, #40]	; (8001aec <HAL_Delay+0x44>)
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	461a      	mov	r2, r3
 8001ac8:	68fb      	ldr	r3, [r7, #12]
 8001aca:	4413      	add	r3, r2
 8001acc:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8001ace:	bf00      	nop
 8001ad0:	f7ff ffde 	bl	8001a90 <HAL_GetTick>
 8001ad4:	4602      	mov	r2, r0
 8001ad6:	68bb      	ldr	r3, [r7, #8]
 8001ad8:	1ad3      	subs	r3, r2, r3
 8001ada:	68fa      	ldr	r2, [r7, #12]
 8001adc:	429a      	cmp	r2, r3
 8001ade:	d8f7      	bhi.n	8001ad0 <HAL_Delay+0x28>
  {
  }
}
 8001ae0:	bf00      	nop
 8001ae2:	bf00      	nop
 8001ae4:	3710      	adds	r7, #16
 8001ae6:	46bd      	mov	sp, r7
 8001ae8:	bd80      	pop	{r7, pc}
 8001aea:	bf00      	nop
 8001aec:	24000010 	.word	0x24000010

08001af0 <LL_ADC_SetCommonClock>:
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
{
 8001af0:	b480      	push	{r7}
 8001af2:	b083      	sub	sp, #12
 8001af4:	af00      	add	r7, sp, #0
 8001af6:	6078      	str	r0, [r7, #4]
 8001af8:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
 8001afa:	687b      	ldr	r3, [r7, #4]
 8001afc:	689b      	ldr	r3, [r3, #8]
 8001afe:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8001b02:	683b      	ldr	r3, [r7, #0]
 8001b04:	431a      	orrs	r2, r3
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	609a      	str	r2, [r3, #8]
}
 8001b0a:	bf00      	nop
 8001b0c:	370c      	adds	r7, #12
 8001b0e:	46bd      	mov	sp, r7
 8001b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b14:	4770      	bx	lr

08001b16 <LL_ADC_SetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t PathInternal)
{
 8001b16:	b480      	push	{r7}
 8001b18:	b083      	sub	sp, #12
 8001b1a:	af00      	add	r7, sp, #0
 8001b1c:	6078      	str	r0, [r7, #4]
 8001b1e:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	689b      	ldr	r3, [r3, #8]
 8001b24:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8001b28:	683b      	ldr	r3, [r7, #0]
 8001b2a:	431a      	orrs	r2, r3
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	609a      	str	r2, [r3, #8]
}
 8001b30:	bf00      	nop
 8001b32:	370c      	adds	r7, #12
 8001b34:	46bd      	mov	sp, r7
 8001b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b3a:	4770      	bx	lr

08001b3c <LL_ADC_GetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  */
__STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
{
 8001b3c:	b480      	push	{r7}
 8001b3e:	b083      	sub	sp, #12
 8001b40:	af00      	add	r7, sp, #0
 8001b42:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	689b      	ldr	r3, [r3, #8]
 8001b48:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
}
 8001b4c:	4618      	mov	r0, r3
 8001b4e:	370c      	adds	r7, #12
 8001b50:	46bd      	mov	sp, r7
 8001b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b56:	4770      	bx	lr

08001b58 <LL_ADC_SetOffset>:
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32_t OffsetLevel)
{
 8001b58:	b480      	push	{r7}
 8001b5a:	b087      	sub	sp, #28
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	60f8      	str	r0, [r7, #12]
 8001b60:	60b9      	str	r1, [r7, #8]
 8001b62:	607a      	str	r2, [r7, #4]
 8001b64:	603b      	str	r3, [r7, #0]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001b66:	68fb      	ldr	r3, [r7, #12]
 8001b68:	3360      	adds	r3, #96	; 0x60
 8001b6a:	461a      	mov	r2, r3
 8001b6c:	68bb      	ldr	r3, [r7, #8]
 8001b6e:	009b      	lsls	r3, r3, #2
 8001b70:	4413      	add	r3, r2
 8001b72:	617b      	str	r3, [r7, #20]
#if defined(ADC_VER_V5_V90)
  if (ADCx == ADC3)
 8001b74:	68fb      	ldr	r3, [r7, #12]
 8001b76:	4a10      	ldr	r2, [pc, #64]	; (8001bb8 <LL_ADC_SetOffset+0x60>)
 8001b78:	4293      	cmp	r3, r2
 8001b7a:	d10b      	bne.n	8001b94 <LL_ADC_SetOffset+0x3c>
  {
    MODIFY_REG(*preg,
 8001b7c:	697b      	ldr	r3, [r7, #20]
 8001b7e:	681b      	ldr	r3, [r3, #0]
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8001b86:	683b      	ldr	r3, [r7, #0]
 8001b88:	4313      	orrs	r3, r2
 8001b8a:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8001b8e:	697b      	ldr	r3, [r7, #20]
 8001b90:	601a      	str	r2, [r3, #0]
  {
    MODIFY_REG(*preg,
               ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
               (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
  }
}
 8001b92:	e00b      	b.n	8001bac <LL_ADC_SetOffset+0x54>
    MODIFY_REG(*preg,
 8001b94:	697b      	ldr	r3, [r7, #20]
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	f003 4200 	and.w	r2, r3, #2147483648	; 0x80000000
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	f003 41f8 	and.w	r1, r3, #2080374784	; 0x7c000000
 8001ba2:	683b      	ldr	r3, [r7, #0]
 8001ba4:	430b      	orrs	r3, r1
 8001ba6:	431a      	orrs	r2, r3
 8001ba8:	697b      	ldr	r3, [r7, #20]
 8001baa:	601a      	str	r2, [r3, #0]
}
 8001bac:	bf00      	nop
 8001bae:	371c      	adds	r7, #28
 8001bb0:	46bd      	mov	sp, r7
 8001bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb6:	4770      	bx	lr
 8001bb8:	58026000 	.word	0x58026000

08001bbc <LL_ADC_GetOffsetChannel>:
  *         (1, 2) For ADC channel read back from ADC register,
  *                comparison with internal channel parameter to be done
  *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
  */
__STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
{
 8001bbc:	b480      	push	{r7}
 8001bbe:	b085      	sub	sp, #20
 8001bc0:	af00      	add	r7, sp, #0
 8001bc2:	6078      	str	r0, [r7, #4]
 8001bc4:	6039      	str	r1, [r7, #0]
  const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	3360      	adds	r3, #96	; 0x60
 8001bca:	461a      	mov	r2, r3
 8001bcc:	683b      	ldr	r3, [r7, #0]
 8001bce:	009b      	lsls	r3, r3, #2
 8001bd0:	4413      	add	r3, r2
 8001bd2:	60fb      	str	r3, [r7, #12]

  return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
 8001bd4:	68fb      	ldr	r3, [r7, #12]
 8001bd6:	681b      	ldr	r3, [r3, #0]
 8001bd8:	f003 43f8 	and.w	r3, r3, #2080374784	; 0x7c000000
}
 8001bdc:	4618      	mov	r0, r3
 8001bde:	3714      	adds	r7, #20
 8001be0:	46bd      	mov	sp, r7
 8001be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001be6:	4770      	bx	lr

08001be8 <LL_ADC_SetDataRightShift>:
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
  *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthShift)
{
 8001be8:	b480      	push	{r7}
 8001bea:	b085      	sub	sp, #20
 8001bec:	af00      	add	r7, sp, #0
 8001bee:	60f8      	str	r0, [r7, #12]
 8001bf0:	60b9      	str	r1, [r7, #8]
 8001bf2:	607a      	str	r2, [r7, #4]
  MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RSHIFT4), RigthShift << (Offsety & 0x1FUL));
 8001bf4:	68fb      	ldr	r3, [r7, #12]
 8001bf6:	691b      	ldr	r3, [r3, #16]
 8001bf8:	f423 42f0 	bic.w	r2, r3, #30720	; 0x7800
 8001bfc:	68bb      	ldr	r3, [r7, #8]
 8001bfe:	f003 031f 	and.w	r3, r3, #31
 8001c02:	6879      	ldr	r1, [r7, #4]
 8001c04:	fa01 f303 	lsl.w	r3, r1, r3
 8001c08:	431a      	orrs	r2, r3
 8001c0a:	68fb      	ldr	r3, [r7, #12]
 8001c0c:	611a      	str	r2, [r3, #16]
}
 8001c0e:	bf00      	nop
 8001c10:	3714      	adds	r7, #20
 8001c12:	46bd      	mov	sp, r7
 8001c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c18:	4770      	bx	lr
	...

08001c1c <LL_ADC_SetOffsetSignedSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
  * @retval Returned None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSignedSaturation)
{
 8001c1c:	b480      	push	{r7}
 8001c1e:	b087      	sub	sp, #28
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	60f8      	str	r0, [r7, #12]
 8001c24:	60b9      	str	r1, [r7, #8]
 8001c26:	607a      	str	r2, [r7, #4]
#if defined(ADC_VER_V5_V90)
  if (ADCx == ADC3)
 8001c28:	68fb      	ldr	r3, [r7, #12]
 8001c2a:	4a0c      	ldr	r2, [pc, #48]	; (8001c5c <LL_ADC_SetOffsetSignedSaturation+0x40>)
 8001c2c:	4293      	cmp	r3, r2
 8001c2e:	d00e      	beq.n	8001c4e <LL_ADC_SetOffsetSignedSaturation+0x32>
    /* Function not available on this instance */
  }
  else
#endif  /* ADC_VER_V5_V90 */
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	3360      	adds	r3, #96	; 0x60
 8001c34:	461a      	mov	r2, r3
 8001c36:	68bb      	ldr	r3, [r7, #8]
 8001c38:	009b      	lsls	r3, r3, #2
 8001c3a:	4413      	add	r3, r2
 8001c3c:	617b      	str	r3, [r7, #20]
    MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 8001c3e:	697b      	ldr	r3, [r7, #20]
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	431a      	orrs	r2, r3
 8001c4a:	697b      	ldr	r3, [r7, #20]
 8001c4c:	601a      	str	r2, [r3, #0]
  }
}
 8001c4e:	bf00      	nop
 8001c50:	371c      	adds	r7, #28
 8001c52:	46bd      	mov	sp, r7
 8001c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c58:	4770      	bx	lr
 8001c5a:	bf00      	nop
 8001c5c:	58026000 	.word	0x58026000

08001c60 <LL_ADC_SetOffsetSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSaturation)
{
 8001c60:	b480      	push	{r7}
 8001c62:	b087      	sub	sp, #28
 8001c64:	af00      	add	r7, sp, #0
 8001c66:	60f8      	str	r0, [r7, #12]
 8001c68:	60b9      	str	r1, [r7, #8]
 8001c6a:	607a      	str	r2, [r7, #4]
  if (ADCx == ADC3)
 8001c6c:	68fb      	ldr	r3, [r7, #12]
 8001c6e:	4a0c      	ldr	r2, [pc, #48]	; (8001ca0 <LL_ADC_SetOffsetSaturation+0x40>)
 8001c70:	4293      	cmp	r3, r2
 8001c72:	d10e      	bne.n	8001c92 <LL_ADC_SetOffsetSaturation+0x32>
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001c74:	68fb      	ldr	r3, [r7, #12]
 8001c76:	3360      	adds	r3, #96	; 0x60
 8001c78:	461a      	mov	r2, r3
 8001c7a:	68bb      	ldr	r3, [r7, #8]
 8001c7c:	009b      	lsls	r3, r3, #2
 8001c7e:	4413      	add	r3, r2
 8001c80:	617b      	str	r3, [r7, #20]

    MODIFY_REG(*preg,
 8001c82:	697b      	ldr	r3, [r7, #20]
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	431a      	orrs	r2, r3
 8001c8e:	697b      	ldr	r3, [r7, #20]
 8001c90:	601a      	str	r2, [r3, #0]
               ADC3_OFR1_SATEN,
               OffsetSaturation);
  }
}
 8001c92:	bf00      	nop
 8001c94:	371c      	adds	r7, #28
 8001c96:	46bd      	mov	sp, r7
 8001c98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c9c:	4770      	bx	lr
 8001c9e:	bf00      	nop
 8001ca0:	58026000 	.word	0x58026000

08001ca4 <LL_ADC_SetOffsetSign>:
  *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
  *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
{
 8001ca4:	b480      	push	{r7}
 8001ca6:	b087      	sub	sp, #28
 8001ca8:	af00      	add	r7, sp, #0
 8001caa:	60f8      	str	r0, [r7, #12]
 8001cac:	60b9      	str	r1, [r7, #8]
 8001cae:	607a      	str	r2, [r7, #4]
  if (ADCx == ADC3)
 8001cb0:	68fb      	ldr	r3, [r7, #12]
 8001cb2:	4a0c      	ldr	r2, [pc, #48]	; (8001ce4 <LL_ADC_SetOffsetSign+0x40>)
 8001cb4:	4293      	cmp	r3, r2
 8001cb6:	d10e      	bne.n	8001cd6 <LL_ADC_SetOffsetSign+0x32>
  {
    __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001cb8:	68fb      	ldr	r3, [r7, #12]
 8001cba:	3360      	adds	r3, #96	; 0x60
 8001cbc:	461a      	mov	r2, r3
 8001cbe:	68bb      	ldr	r3, [r7, #8]
 8001cc0:	009b      	lsls	r3, r3, #2
 8001cc2:	4413      	add	r3, r2
 8001cc4:	617b      	str	r3, [r7, #20]

    MODIFY_REG(*preg,
 8001cc6:	697b      	ldr	r3, [r7, #20]
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	431a      	orrs	r2, r3
 8001cd2:	697b      	ldr	r3, [r7, #20]
 8001cd4:	601a      	str	r2, [r3, #0]
               ADC3_OFR1_OFFSETPOS,
               OffsetSign);
  }
}
 8001cd6:	bf00      	nop
 8001cd8:	371c      	adds	r7, #28
 8001cda:	46bd      	mov	sp, r7
 8001cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce0:	4770      	bx	lr
 8001ce2:	bf00      	nop
 8001ce4:	58026000 	.word	0x58026000

08001ce8 <LL_ADC_SetOffsetState>:
  *         @arg @ref LL_ADC_OFFSET_DISABLE
  *         @arg @ref LL_ADC_OFFSET_ENABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetState)
{
 8001ce8:	b480      	push	{r7}
 8001cea:	b087      	sub	sp, #28
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	60f8      	str	r0, [r7, #12]
 8001cf0:	60b9      	str	r1, [r7, #8]
 8001cf2:	607a      	str	r2, [r7, #4]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001cf4:	68fb      	ldr	r3, [r7, #12]
 8001cf6:	3360      	adds	r3, #96	; 0x60
 8001cf8:	461a      	mov	r2, r3
 8001cfa:	68bb      	ldr	r3, [r7, #8]
 8001cfc:	009b      	lsls	r3, r3, #2
 8001cfe:	4413      	add	r3, r2
 8001d00:	617b      	str	r3, [r7, #20]
  if (ADCx == ADC3)
 8001d02:	68fb      	ldr	r3, [r7, #12]
 8001d04:	4a0c      	ldr	r2, [pc, #48]	; (8001d38 <LL_ADC_SetOffsetState+0x50>)
 8001d06:	4293      	cmp	r3, r2
 8001d08:	d108      	bne.n	8001d1c <LL_ADC_SetOffsetState+0x34>
  {
    MODIFY_REG(*preg,
 8001d0a:	697b      	ldr	r3, [r7, #20]
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	431a      	orrs	r2, r3
 8001d16:	697b      	ldr	r3, [r7, #20]
 8001d18:	601a      	str	r2, [r3, #0]
  {
    MODIFY_REG(*preg,
               ADC_OFR1_SSATE,
               OffsetState);
  }
}
 8001d1a:	e007      	b.n	8001d2c <LL_ADC_SetOffsetState+0x44>
    MODIFY_REG(*preg,
 8001d1c:	697b      	ldr	r3, [r7, #20]
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	431a      	orrs	r2, r3
 8001d28:	697b      	ldr	r3, [r7, #20]
 8001d2a:	601a      	str	r2, [r3, #0]
}
 8001d2c:	bf00      	nop
 8001d2e:	371c      	adds	r7, #28
 8001d30:	46bd      	mov	sp, r7
 8001d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d36:	4770      	bx	lr
 8001d38:	58026000 	.word	0x58026000

08001d3c <LL_ADC_REG_SetSequencerRanks>:
  *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to 8 Ms/s)).
  *             Other channels are slow channels (conversion rate: refer to reference manual).
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channel)
{
 8001d3c:	b480      	push	{r7}
 8001d3e:	b087      	sub	sp, #28
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	60f8      	str	r0, [r7, #12]
 8001d44:	60b9      	str	r1, [r7, #8]
 8001d46:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "Channel" with bits position          */
  /* in register and register position depending on parameter "Rank".         */
  /* Parameters "Rank" and "Channel" are used with masks because containing   */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGOFFSET_POS));
 8001d48:	68fb      	ldr	r3, [r7, #12]
 8001d4a:	3330      	adds	r3, #48	; 0x30
 8001d4c:	461a      	mov	r2, r3
 8001d4e:	68bb      	ldr	r3, [r7, #8]
 8001d50:	0a1b      	lsrs	r3, r3, #8
 8001d52:	009b      	lsls	r3, r3, #2
 8001d54:	f003 030c 	and.w	r3, r3, #12
 8001d58:	4413      	add	r3, r2
 8001d5a:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001d5c:	697b      	ldr	r3, [r7, #20]
 8001d5e:	681a      	ldr	r2, [r3, #0]
 8001d60:	68bb      	ldr	r3, [r7, #8]
 8001d62:	f003 031f 	and.w	r3, r3, #31
 8001d66:	211f      	movs	r1, #31
 8001d68:	fa01 f303 	lsl.w	r3, r1, r3
 8001d6c:	43db      	mvns	r3, r3
 8001d6e:	401a      	ands	r2, r3
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	0e9b      	lsrs	r3, r3, #26
 8001d74:	f003 011f 	and.w	r1, r3, #31
 8001d78:	68bb      	ldr	r3, [r7, #8]
 8001d7a:	f003 031f 	and.w	r3, r3, #31
 8001d7e:	fa01 f303 	lsl.w	r3, r1, r3
 8001d82:	431a      	orrs	r2, r3
 8001d84:	697b      	ldr	r3, [r7, #20]
 8001d86:	601a      	str	r2, [r3, #0]
             ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
             ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
}
 8001d88:	bf00      	nop
 8001d8a:	371c      	adds	r7, #28
 8001d8c:	46bd      	mov	sp, r7
 8001d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d92:	4770      	bx	lr

08001d94 <LL_ADC_SetChannelSamplingTime>:
  *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
  *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SamplingTime)
{
 8001d94:	b480      	push	{r7}
 8001d96:	b087      	sub	sp, #28
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	60f8      	str	r0, [r7, #12]
 8001d9c:	60b9      	str	r1, [r7, #8]
 8001d9e:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "SamplingTime" with bits position     */
  /* in register and register position depending on parameter "Channel".      */
  /* Parameter "Channel" is used with masks because containing                */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
 8001da0:	68fb      	ldr	r3, [r7, #12]
 8001da2:	3314      	adds	r3, #20
 8001da4:	461a      	mov	r2, r3
 8001da6:	68bb      	ldr	r3, [r7, #8]
 8001da8:	0e5b      	lsrs	r3, r3, #25
 8001daa:	009b      	lsls	r3, r3, #2
 8001dac:	f003 0304 	and.w	r3, r3, #4
 8001db0:	4413      	add	r3, r2
 8001db2:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001db4:	697b      	ldr	r3, [r7, #20]
 8001db6:	681a      	ldr	r2, [r3, #0]
 8001db8:	68bb      	ldr	r3, [r7, #8]
 8001dba:	0d1b      	lsrs	r3, r3, #20
 8001dbc:	f003 031f 	and.w	r3, r3, #31
 8001dc0:	2107      	movs	r1, #7
 8001dc2:	fa01 f303 	lsl.w	r3, r1, r3
 8001dc6:	43db      	mvns	r3, r3
 8001dc8:	401a      	ands	r2, r3
 8001dca:	68bb      	ldr	r3, [r7, #8]
 8001dcc:	0d1b      	lsrs	r3, r3, #20
 8001dce:	f003 031f 	and.w	r3, r3, #31
 8001dd2:	6879      	ldr	r1, [r7, #4]
 8001dd4:	fa01 f303 	lsl.w	r3, r1, r3
 8001dd8:	431a      	orrs	r2, r3
 8001dda:	697b      	ldr	r3, [r7, #20]
 8001ddc:	601a      	str	r2, [r3, #0]
             ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS),
             SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS));
}
 8001dde:	bf00      	nop
 8001de0:	371c      	adds	r7, #28
 8001de2:	46bd      	mov	sp, r7
 8001de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001de8:	4770      	bx	lr
	...

08001dec <LL_ADC_SetChannelSingleDiff>:
  *         @arg @ref LL_ADC_SINGLE_ENDED
  *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SingleDiff)
{
 8001dec:	b480      	push	{r7}
 8001dee:	b085      	sub	sp, #20
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	60f8      	str	r0, [r7, #12]
 8001df4:	60b9      	str	r1, [r7, #8]
 8001df6:	607a      	str	r2, [r7, #4]
#if defined(ADC_VER_V5_V90)
  /* Bits of channels in single or differential mode are set only for         */
  /* differential mode (for single mode, mask of bits allowed to be set is    */
  /* shifted out of range of bits of channels in single or differential mode. */
  if (ADCx == ADC3)
 8001df8:	68fb      	ldr	r3, [r7, #12]
 8001dfa:	4a1a      	ldr	r2, [pc, #104]	; (8001e64 <LL_ADC_SetChannelSingleDiff+0x78>)
 8001dfc:	4293      	cmp	r3, r2
 8001dfe:	d115      	bne.n	8001e2c <LL_ADC_SetChannelSingleDiff+0x40>
  {
    MODIFY_REG(ADCx->LTR2_DIFSEL,
 8001e00:	68fb      	ldr	r3, [r7, #12]
 8001e02:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 8001e06:	68bb      	ldr	r3, [r7, #8]
 8001e08:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001e0c:	43db      	mvns	r3, r3
 8001e0e:	401a      	ands	r2, r3
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	f003 0318 	and.w	r3, r3, #24
 8001e16:	4914      	ldr	r1, [pc, #80]	; (8001e68 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8001e18:	40d9      	lsrs	r1, r3
 8001e1a:	68bb      	ldr	r3, [r7, #8]
 8001e1c:	400b      	ands	r3, r1
 8001e1e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001e22:	431a      	orrs	r2, r3
 8001e24:	68fb      	ldr	r3, [r7, #12]
 8001e26:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  /* shifted out of range of bits of channels in single or differential mode. */
  MODIFY_REG(ADCx->DIFSEL,
             Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
             (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
#endif /* ADC_VER_V5_V90 */
}
 8001e2a:	e014      	b.n	8001e56 <LL_ADC_SetChannelSingleDiff+0x6a>
    MODIFY_REG(ADCx->DIFSEL_RES12,
 8001e2c:	68fb      	ldr	r3, [r7, #12]
 8001e2e:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 8001e32:	68bb      	ldr	r3, [r7, #8]
 8001e34:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001e38:	43db      	mvns	r3, r3
 8001e3a:	401a      	ands	r2, r3
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	f003 0318 	and.w	r3, r3, #24
 8001e42:	4909      	ldr	r1, [pc, #36]	; (8001e68 <LL_ADC_SetChannelSingleDiff+0x7c>)
 8001e44:	40d9      	lsrs	r1, r3
 8001e46:	68bb      	ldr	r3, [r7, #8]
 8001e48:	400b      	ands	r3, r1
 8001e4a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001e4e:	431a      	orrs	r2, r3
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
}
 8001e56:	bf00      	nop
 8001e58:	3714      	adds	r7, #20
 8001e5a:	46bd      	mov	sp, r7
 8001e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e60:	4770      	bx	lr
 8001e62:	bf00      	nop
 8001e64:	58026000 	.word	0x58026000
 8001e68:	000fffff 	.word	0x000fffff

08001e6c <LL_ADC_DisableDeepPowerDown>:
  * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
{
 8001e6c:	b480      	push	{r7}
 8001e6e:	b083      	sub	sp, #12
 8001e70:	af00      	add	r7, sp, #0
 8001e72:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	689a      	ldr	r2, [r3, #8]
 8001e78:	4b04      	ldr	r3, [pc, #16]	; (8001e8c <LL_ADC_DisableDeepPowerDown+0x20>)
 8001e7a:	4013      	ands	r3, r2
 8001e7c:	687a      	ldr	r2, [r7, #4]
 8001e7e:	6093      	str	r3, [r2, #8]
}
 8001e80:	bf00      	nop
 8001e82:	370c      	adds	r7, #12
 8001e84:	46bd      	mov	sp, r7
 8001e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e8a:	4770      	bx	lr
 8001e8c:	5fffffc0 	.word	0x5fffffc0

08001e90 <LL_ADC_IsDeepPowerDownEnabled>:
  * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
  * @param  ADCx ADC instance
  * @retval 0: deep power down is disabled, 1: deep power down is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
{
 8001e90:	b480      	push	{r7}
 8001e92:	b083      	sub	sp, #12
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	689b      	ldr	r3, [r3, #8]
 8001e9c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8001ea0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8001ea4:	d101      	bne.n	8001eaa <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8001ea6:	2301      	movs	r3, #1
 8001ea8:	e000      	b.n	8001eac <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8001eaa:	2300      	movs	r3, #0
}
 8001eac:	4618      	mov	r0, r3
 8001eae:	370c      	adds	r7, #12
 8001eb0:	46bd      	mov	sp, r7
 8001eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eb6:	4770      	bx	lr

08001eb8 <LL_ADC_EnableInternalRegulator>:
  * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
{
 8001eb8:	b480      	push	{r7}
 8001eba:	b083      	sub	sp, #12
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	689a      	ldr	r2, [r3, #8]
 8001ec4:	4b05      	ldr	r3, [pc, #20]	; (8001edc <LL_ADC_EnableInternalRegulator+0x24>)
 8001ec6:	4013      	ands	r3, r2
 8001ec8:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	609a      	str	r2, [r3, #8]
             ADC_CR_BITS_PROPERTY_RS,
             ADC_CR_ADVREGEN);
}
 8001ed0:	bf00      	nop
 8001ed2:	370c      	adds	r7, #12
 8001ed4:	46bd      	mov	sp, r7
 8001ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eda:	4770      	bx	lr
 8001edc:	6fffffc0 	.word	0x6fffffc0

08001ee0 <LL_ADC_IsInternalRegulatorEnabled>:
  * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
  * @param  ADCx ADC instance
  * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
{
 8001ee0:	b480      	push	{r7}
 8001ee2:	b083      	sub	sp, #12
 8001ee4:	af00      	add	r7, sp, #0
 8001ee6:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	689b      	ldr	r3, [r3, #8]
 8001eec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ef0:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8001ef4:	d101      	bne.n	8001efa <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8001ef6:	2301      	movs	r3, #1
 8001ef8:	e000      	b.n	8001efc <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8001efa:	2300      	movs	r3, #0
}
 8001efc:	4618      	mov	r0, r3
 8001efe:	370c      	adds	r7, #12
 8001f00:	46bd      	mov	sp, r7
 8001f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f06:	4770      	bx	lr

08001f08 <LL_ADC_IsEnabled>:
  * @rmtoll CR       ADEN           LL_ADC_IsEnabled
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
{
 8001f08:	b480      	push	{r7}
 8001f0a:	b083      	sub	sp, #12
 8001f0c:	af00      	add	r7, sp, #0
 8001f0e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	689b      	ldr	r3, [r3, #8]
 8001f14:	f003 0301 	and.w	r3, r3, #1
 8001f18:	2b01      	cmp	r3, #1
 8001f1a:	d101      	bne.n	8001f20 <LL_ADC_IsEnabled+0x18>
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	e000      	b.n	8001f22 <LL_ADC_IsEnabled+0x1a>
 8001f20:	2300      	movs	r3, #0
}
 8001f22:	4618      	mov	r0, r3
 8001f24:	370c      	adds	r7, #12
 8001f26:	46bd      	mov	sp, r7
 8001f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f2c:	4770      	bx	lr

08001f2e <LL_ADC_REG_IsConversionOngoing>:
  * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group regular.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8001f2e:	b480      	push	{r7}
 8001f30:	b083      	sub	sp, #12
 8001f32:	af00      	add	r7, sp, #0
 8001f34:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	689b      	ldr	r3, [r3, #8]
 8001f3a:	f003 0304 	and.w	r3, r3, #4
 8001f3e:	2b04      	cmp	r3, #4
 8001f40:	d101      	bne.n	8001f46 <LL_ADC_REG_IsConversionOngoing+0x18>
 8001f42:	2301      	movs	r3, #1
 8001f44:	e000      	b.n	8001f48 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8001f46:	2300      	movs	r3, #0
}
 8001f48:	4618      	mov	r0, r3
 8001f4a:	370c      	adds	r7, #12
 8001f4c:	46bd      	mov	sp, r7
 8001f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f52:	4770      	bx	lr

08001f54 <LL_ADC_INJ_IsConversionOngoing>:
  * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group injected.
  */
__STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8001f54:	b480      	push	{r7}
 8001f56:	b083      	sub	sp, #12
 8001f58:	af00      	add	r7, sp, #0
 8001f5a:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	689b      	ldr	r3, [r3, #8]
 8001f60:	f003 0308 	and.w	r3, r3, #8
 8001f64:	2b08      	cmp	r3, #8
 8001f66:	d101      	bne.n	8001f6c <LL_ADC_INJ_IsConversionOngoing+0x18>
 8001f68:	2301      	movs	r3, #1
 8001f6a:	e000      	b.n	8001f6e <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8001f6c:	2300      	movs	r3, #0
}
 8001f6e:	4618      	mov	r0, r3
 8001f70:	370c      	adds	r7, #12
 8001f72:	46bd      	mov	sp, r7
 8001f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f78:	4770      	bx	lr
	...

08001f7c <HAL_ADC_Init>:
  *         without  disabling the other ADCs.
  * @param hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8001f7c:	b590      	push	{r4, r7, lr}
 8001f7e:	b089      	sub	sp, #36	; 0x24
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8001f84:	2300      	movs	r3, #0
 8001f86:	77fb      	strb	r3, [r7, #31]
  uint32_t tmpCFGR;
  uint32_t tmp_adc_reg_is_conversion_on_going;
  __IO uint32_t wait_loop_index = 0UL;
 8001f88:	2300      	movs	r3, #0
 8001f8a:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_adc_is_conversion_on_going_regular;
  uint32_t tmp_adc_is_conversion_on_going_injected;

  /* Check ADC handle */
  if (hadc == NULL)
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d101      	bne.n	8001f96 <HAL_ADC_Init+0x1a>
  {
    return HAL_ERROR;
 8001f92:	2301      	movs	r3, #1
 8001f94:	e1ee      	b.n	8002374 <HAL_ADC_Init+0x3f8>
  assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));

  if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	691b      	ldr	r3, [r3, #16]
 8001f9a:	2b00      	cmp	r3, #0
  /* DISCEN and CONT bits cannot be set at the same time */
  assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == ENABLE)));

  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  if (hadc->State == HAL_ADC_STATE_RESET)
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d109      	bne.n	8001fb8 <HAL_ADC_Init+0x3c>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8001fa4:	6878      	ldr	r0, [r7, #4]
 8001fa6:	f7fe ffcf 	bl	8000f48 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	2200      	movs	r2, #0
 8001fae:	665a      	str	r2, [r3, #100]	; 0x64

    /* Initialize Lock */
    hadc->Lock = HAL_UNLOCKED;
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	2200      	movs	r2, #0
 8001fb4:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  }

  /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
  if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	4618      	mov	r0, r3
 8001fbe:	f7ff ff67 	bl	8001e90 <LL_ADC_IsDeepPowerDownEnabled>
 8001fc2:	4603      	mov	r3, r0
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d004      	beq.n	8001fd2 <HAL_ADC_Init+0x56>
  {
    /* Disable ADC deep power down mode */
    LL_ADC_DisableDeepPowerDown(hadc->Instance);
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	4618      	mov	r0, r3
 8001fce:	f7ff ff4d 	bl	8001e6c <LL_ADC_DisableDeepPowerDown>
    /* System was in deep power down mode, calibration must
     be relaunched or a previously saved calibration factor
     re-applied once the ADC voltage regulator is enabled */
  }

  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	681b      	ldr	r3, [r3, #0]
 8001fd6:	4618      	mov	r0, r3
 8001fd8:	f7ff ff82 	bl	8001ee0 <LL_ADC_IsInternalRegulatorEnabled>
 8001fdc:	4603      	mov	r3, r0
 8001fde:	2b00      	cmp	r3, #0
 8001fe0:	d114      	bne.n	800200c <HAL_ADC_Init+0x90>
  {
    /* Enable ADC internal voltage regulator */
    LL_ADC_EnableInternalRegulator(hadc->Instance);
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	4618      	mov	r0, r3
 8001fe8:	f7ff ff66 	bl	8001eb8 <LL_ADC_EnableInternalRegulator>

    /* Note: Variable divided by 2 to compensate partially              */
    /*       CPU processing cycles, scaling in us split to not          */
    /*       exceed 32 bits register capacity and handle low frequency. */
    wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 8001fec:	4b8e      	ldr	r3, [pc, #568]	; (8002228 <HAL_ADC_Init+0x2ac>)
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	099b      	lsrs	r3, r3, #6
 8001ff2:	4a8e      	ldr	r2, [pc, #568]	; (800222c <HAL_ADC_Init+0x2b0>)
 8001ff4:	fba2 2303 	umull	r2, r3, r2, r3
 8001ff8:	099b      	lsrs	r3, r3, #6
 8001ffa:	3301      	adds	r3, #1
 8001ffc:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 8001ffe:	e002      	b.n	8002006 <HAL_ADC_Init+0x8a>
    {
      wait_loop_index--;
 8002000:	68bb      	ldr	r3, [r7, #8]
 8002002:	3b01      	subs	r3, #1
 8002004:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 8002006:	68bb      	ldr	r3, [r7, #8]
 8002008:	2b00      	cmp	r3, #0
 800200a:	d1f9      	bne.n	8002000 <HAL_ADC_Init+0x84>
  }

  /* Verification that ADC voltage regulator is correctly enabled, whether    */
  /* or not ADC is coming from state reset (if any potential problem of       */
  /* clocking, voltage regulator would not be enabled).                       */
  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	4618      	mov	r0, r3
 8002012:	f7ff ff65 	bl	8001ee0 <LL_ADC_IsInternalRegulatorEnabled>
 8002016:	4603      	mov	r3, r0
 8002018:	2b00      	cmp	r3, #0
 800201a:	d10d      	bne.n	8002038 <HAL_ADC_Init+0xbc>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002020:	f043 0210 	orr.w	r2, r3, #16
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	661a      	str	r2, [r3, #96]	; 0x60

    /* Set ADC error code to ADC peripheral internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800202c:	f043 0201 	orr.w	r2, r3, #1
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	665a      	str	r2, [r3, #100]	; 0x64

    tmp_hal_status = HAL_ERROR;
 8002034:	2301      	movs	r3, #1
 8002036:	77fb      	strb	r3, [r7, #31]

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed and if there is no conversion on going on regular    */
  /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
  /* called to update a parameter on the fly).                                */
  tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	4618      	mov	r0, r3
 800203e:	f7ff ff76 	bl	8001f2e <LL_ADC_REG_IsConversionOngoing>
 8002042:	6178      	str	r0, [r7, #20]

  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002048:	f003 0310 	and.w	r3, r3, #16
 800204c:	2b00      	cmp	r3, #0
 800204e:	f040 8188 	bne.w	8002362 <HAL_ADC_Init+0x3e6>
      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 8002052:	697b      	ldr	r3, [r7, #20]
 8002054:	2b00      	cmp	r3, #0
 8002056:	f040 8184 	bne.w	8002362 <HAL_ADC_Init+0x3e6>
     )
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800205e:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 8002062:	f043 0202 	orr.w	r2, r3, #2
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	661a      	str	r2, [r3, #96]	; 0x60
    /* Configuration of common ADC parameters                                 */

    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - clock configuration                                                 */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	4618      	mov	r0, r3
 8002070:	f7ff ff4a 	bl	8001f08 <LL_ADC_IsEnabled>
 8002074:	4603      	mov	r3, r0
 8002076:	2b00      	cmp	r3, #0
 8002078:	d136      	bne.n	80020e8 <HAL_ADC_Init+0x16c>
    {
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	4a6c      	ldr	r2, [pc, #432]	; (8002230 <HAL_ADC_Init+0x2b4>)
 8002080:	4293      	cmp	r3, r2
 8002082:	d004      	beq.n	800208e <HAL_ADC_Init+0x112>
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	4a6a      	ldr	r2, [pc, #424]	; (8002234 <HAL_ADC_Init+0x2b8>)
 800208a:	4293      	cmp	r3, r2
 800208c:	d10e      	bne.n	80020ac <HAL_ADC_Init+0x130>
 800208e:	4868      	ldr	r0, [pc, #416]	; (8002230 <HAL_ADC_Init+0x2b4>)
 8002090:	f7ff ff3a 	bl	8001f08 <LL_ADC_IsEnabled>
 8002094:	4604      	mov	r4, r0
 8002096:	4867      	ldr	r0, [pc, #412]	; (8002234 <HAL_ADC_Init+0x2b8>)
 8002098:	f7ff ff36 	bl	8001f08 <LL_ADC_IsEnabled>
 800209c:	4603      	mov	r3, r0
 800209e:	4323      	orrs	r3, r4
 80020a0:	2b00      	cmp	r3, #0
 80020a2:	bf0c      	ite	eq
 80020a4:	2301      	moveq	r3, #1
 80020a6:	2300      	movne	r3, #0
 80020a8:	b2db      	uxtb	r3, r3
 80020aa:	e008      	b.n	80020be <HAL_ADC_Init+0x142>
 80020ac:	4862      	ldr	r0, [pc, #392]	; (8002238 <HAL_ADC_Init+0x2bc>)
 80020ae:	f7ff ff2b 	bl	8001f08 <LL_ADC_IsEnabled>
 80020b2:	4603      	mov	r3, r0
 80020b4:	2b00      	cmp	r3, #0
 80020b6:	bf0c      	ite	eq
 80020b8:	2301      	moveq	r3, #1
 80020ba:	2300      	movne	r3, #0
 80020bc:	b2db      	uxtb	r3, r3
 80020be:	2b00      	cmp	r3, #0
 80020c0:	d012      	beq.n	80020e8 <HAL_ADC_Init+0x16c>
        /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
        /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
        /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
        /*     (set into HAL_ADC_ConfigChannel() or                             */
        /*     HAL_ADCEx_InjectedConfigChannel() )                              */
        LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	4a5a      	ldr	r2, [pc, #360]	; (8002230 <HAL_ADC_Init+0x2b4>)
 80020c8:	4293      	cmp	r3, r2
 80020ca:	d004      	beq.n	80020d6 <HAL_ADC_Init+0x15a>
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	4a58      	ldr	r2, [pc, #352]	; (8002234 <HAL_ADC_Init+0x2b8>)
 80020d2:	4293      	cmp	r3, r2
 80020d4:	d101      	bne.n	80020da <HAL_ADC_Init+0x15e>
 80020d6:	4a59      	ldr	r2, [pc, #356]	; (800223c <HAL_ADC_Init+0x2c0>)
 80020d8:	e000      	b.n	80020dc <HAL_ADC_Init+0x160>
 80020da:	4a59      	ldr	r2, [pc, #356]	; (8002240 <HAL_ADC_Init+0x2c4>)
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	685b      	ldr	r3, [r3, #4]
 80020e0:	4619      	mov	r1, r3
 80020e2:	4610      	mov	r0, r2
 80020e4:	f7ff fd04 	bl	8001af0 <LL_ADC_SetCommonClock>
                hadc->Init.Overrun                                                    |
                hadc->Init.Resolution                                                 |
                ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));

#elif defined(ADC_VER_V5_V90)
    if (hadc->Instance == ADC3)
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	681b      	ldr	r3, [r3, #0]
 80020ec:	4a52      	ldr	r2, [pc, #328]	; (8002238 <HAL_ADC_Init+0x2bc>)
 80020ee:	4293      	cmp	r3, r2
 80020f0:	d129      	bne.n	8002146 <HAL_ADC_Init+0x1ca>
    {
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	7e5b      	ldrb	r3, [r3, #25]
 80020f6:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                     |
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 80020fc:	431a      	orrs	r2, r3
                  hadc->Init.DataAlign                                                   |
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	68db      	ldr	r3, [r3, #12]
                  hadc->Init.Overrun                                                     |
 8002102:	431a      	orrs	r2, r3
                  ((__LL_ADC12_RESOLUTION_TO_ADC3(hadc->Init.Resolution)  & (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)) << 1UL)                                                   |
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	689b      	ldr	r3, [r3, #8]
 8002108:	2b08      	cmp	r3, #8
 800210a:	d013      	beq.n	8002134 <HAL_ADC_Init+0x1b8>
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	689b      	ldr	r3, [r3, #8]
 8002110:	2b0c      	cmp	r3, #12
 8002112:	d00d      	beq.n	8002130 <HAL_ADC_Init+0x1b4>
 8002114:	687b      	ldr	r3, [r7, #4]
 8002116:	689b      	ldr	r3, [r3, #8]
 8002118:	2b1c      	cmp	r3, #28
 800211a:	d007      	beq.n	800212c <HAL_ADC_Init+0x1b0>
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	689b      	ldr	r3, [r3, #8]
 8002120:	2b18      	cmp	r3, #24
 8002122:	d101      	bne.n	8002128 <HAL_ADC_Init+0x1ac>
 8002124:	2318      	movs	r3, #24
 8002126:	e006      	b.n	8002136 <HAL_ADC_Init+0x1ba>
 8002128:	2300      	movs	r3, #0
 800212a:	e004      	b.n	8002136 <HAL_ADC_Init+0x1ba>
 800212c:	2310      	movs	r3, #16
 800212e:	e002      	b.n	8002136 <HAL_ADC_Init+0x1ba>
 8002130:	2308      	movs	r3, #8
 8002132:	e000      	b.n	8002136 <HAL_ADC_Init+0x1ba>
 8002134:	2300      	movs	r3, #0
                  hadc->Init.DataAlign                                                   |
 8002136:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800213e:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 8002140:	4313      	orrs	r3, r2
 8002142:	61bb      	str	r3, [r7, #24]
 8002144:	e00e      	b.n	8002164 <HAL_ADC_Init+0x1e8>
    }
    else
    {
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	7e5b      	ldrb	r3, [r3, #25]
 800214a:	035a      	lsls	r2, r3, #13
                  hadc->Init.Overrun                                                    |
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002150:	431a      	orrs	r2, r3
                  hadc->Init.Resolution                                                 |
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	689b      	ldr	r3, [r3, #8]
                  hadc->Init.Overrun                                                    |
 8002156:	431a      	orrs	r2, r3
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800215e:	041b      	lsls	r3, r3, #16
      tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 8002160:	4313      	orrs	r3, r2
 8002162:	61bb      	str	r3, [r7, #24]
                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
    }

#endif /* ADC_VER_V5_3 */

    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	f893 3020 	ldrb.w	r3, [r3, #32]
 800216a:	2b01      	cmp	r3, #1
 800216c:	d106      	bne.n	800217c <HAL_ADC_Init+0x200>
    {
      tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002172:	3b01      	subs	r3, #1
 8002174:	045b      	lsls	r3, r3, #17
 8002176:	69ba      	ldr	r2, [r7, #24]
 8002178:	4313      	orrs	r3, r2
 800217a:	61bb      	str	r3, [r7, #24]
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002180:	2b00      	cmp	r3, #0
 8002182:	d009      	beq.n	8002198 <HAL_ADC_Init+0x21c>
    {
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002188:	f403 7278 	and.w	r2, r3, #992	; 0x3e0
                  | hadc->Init.ExternalTrigConvEdge
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002190:	4313      	orrs	r3, r2
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 8002192:	69ba      	ldr	r2, [r7, #24]
 8002194:	4313      	orrs	r3, r2
 8002196:	61bb      	str	r3, [r7, #24]
                 );
    }


#if defined(ADC_VER_V5_V90)
    if (hadc->Instance == ADC3)
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	4a26      	ldr	r2, [pc, #152]	; (8002238 <HAL_ADC_Init+0x2bc>)
 800219e:	4293      	cmp	r3, r2
 80021a0:	d115      	bne.n	80021ce <HAL_ADC_Init+0x252>
    {
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC3_CFGR_FIELDS_1, tmpCFGR);
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	68da      	ldr	r2, [r3, #12]
 80021a8:	4b26      	ldr	r3, [pc, #152]	; (8002244 <HAL_ADC_Init+0x2c8>)
 80021aa:	4013      	ands	r3, r2
 80021ac:	687a      	ldr	r2, [r7, #4]
 80021ae:	6812      	ldr	r2, [r2, #0]
 80021b0:	69b9      	ldr	r1, [r7, #24]
 80021b2:	430b      	orrs	r3, r1
 80021b4:	60d3      	str	r3, [r2, #12]
      /* Configuration of sampling mode */
      MODIFY_REG(hadc->Instance->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	691b      	ldr	r3, [r3, #16]
 80021bc:	f023 6140 	bic.w	r1, r3, #201326592	; 0xc000000
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	430a      	orrs	r2, r1
 80021ca:	611a      	str	r2, [r3, #16]
 80021cc:	e009      	b.n	80021e2 <HAL_ADC_Init+0x266>
    }
    else
    {
      /* Update Configuration Register CFGR */
      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	68da      	ldr	r2, [r3, #12]
 80021d4:	4b1c      	ldr	r3, [pc, #112]	; (8002248 <HAL_ADC_Init+0x2cc>)
 80021d6:	4013      	ands	r3, r2
 80021d8:	687a      	ldr	r2, [r7, #4]
 80021da:	6812      	ldr	r2, [r2, #0]
 80021dc:	69b9      	ldr	r1, [r7, #24]
 80021de:	430b      	orrs	r3, r1
 80021e0:	60d3      	str	r3, [r2, #12]
    /* Parameters that can be updated when ADC is disabled or enabled without */
    /* conversion on going on regular and injected groups:                    */
    /*  - Conversion data management      Init.ConversionDataManagement       */
    /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
    /*  - Oversampling parameters         Init.Oversampling                   */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	4618      	mov	r0, r3
 80021e8:	f7ff fea1 	bl	8001f2e <LL_ADC_REG_IsConversionOngoing>
 80021ec:	6138      	str	r0, [r7, #16]
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	681b      	ldr	r3, [r3, #0]
 80021f2:	4618      	mov	r0, r3
 80021f4:	f7ff feae 	bl	8001f54 <LL_ADC_INJ_IsConversionOngoing>
 80021f8:	60f8      	str	r0, [r7, #12]
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 80021fa:	693b      	ldr	r3, [r7, #16]
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	f040 808e 	bne.w	800231e <HAL_ADC_Init+0x3a2>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 8002202:	68fb      	ldr	r3, [r7, #12]
 8002204:	2b00      	cmp	r3, #0
 8002206:	f040 808a 	bne.w	800231e <HAL_ADC_Init+0x3a2>
       )
    {
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance == ADC3)
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	4a0a      	ldr	r2, [pc, #40]	; (8002238 <HAL_ADC_Init+0x2bc>)
 8002210:	4293      	cmp	r3, r2
 8002212:	d11b      	bne.n	800224c <HAL_ADC_Init+0x2d0>
      {
        tmpCFGR = (
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	7e1b      	ldrb	r3, [r3, #24]
 8002218:	039a      	lsls	r2, r3, #14
                    ADC3_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002220:	005b      	lsls	r3, r3, #1
        tmpCFGR = (
 8002222:	4313      	orrs	r3, r2
 8002224:	61bb      	str	r3, [r7, #24]
 8002226:	e018      	b.n	800225a <HAL_ADC_Init+0x2de>
 8002228:	24000004 	.word	0x24000004
 800222c:	053e2d63 	.word	0x053e2d63
 8002230:	40022000 	.word	0x40022000
 8002234:	40022100 	.word	0x40022100
 8002238:	58026000 	.word	0x58026000
 800223c:	40022300 	.word	0x40022300
 8002240:	58026300 	.word	0x58026300
 8002244:	fff04007 	.word	0xfff04007
 8002248:	fff0c003 	.word	0xfff0c003
      }
      else
      {
        tmpCFGR = (
                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	7e1b      	ldrb	r3, [r3, #24]
 8002250:	039a      	lsls	r2, r3, #14
                    ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        tmpCFGR = (
 8002256:	4313      	orrs	r3, r2
 8002258:	61bb      	str	r3, [r7, #24]
      tmpCFGR = (
                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
#endif

      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	681b      	ldr	r3, [r3, #0]
 800225e:	68da      	ldr	r2, [r3, #12]
 8002260:	4b46      	ldr	r3, [pc, #280]	; (800237c <HAL_ADC_Init+0x400>)
 8002262:	4013      	ands	r3, r2
 8002264:	687a      	ldr	r2, [r7, #4]
 8002266:	6812      	ldr	r2, [r2, #0]
 8002268:	69b9      	ldr	r1, [r7, #24]
 800226a:	430b      	orrs	r3, r1
 800226c:	60d3      	str	r3, [r2, #12]

      if (hadc->Init.OversamplingMode == ENABLE)
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8002274:	2b01      	cmp	r3, #1
 8002276:	d137      	bne.n	80022e8 <HAL_ADC_Init+0x36c>
#endif
        assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
        assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
        assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));

        if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800227c:	2b00      	cmp	r3, #0
          /* Multi trigger is not applicable to software-triggered conversions */
          assert_param((hadc->Init.Oversampling.TriggeredMode == ADC_TRIGGEREDMODE_SINGLE_TRIGGER));
        }

#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	4a3f      	ldr	r2, [pc, #252]	; (8002380 <HAL_ADC_Init+0x404>)
 8002284:	4293      	cmp	r3, r2
 8002286:	d116      	bne.n	80022b6 <HAL_ADC_Init+0x33a>
          /* Configuration of Oversampler:                                      */
          /*  - Oversampling Ratio                                              */
          /*  - Right bit shift                                                 */
          /*  - Triggered mode                                                  */
          /*  - Oversampling mode (continued/resumed)                           */
          MODIFY_REG(hadc->Instance->CFGR2,
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	691a      	ldr	r2, [r3, #16]
 800228e:	4b3d      	ldr	r3, [pc, #244]	; (8002384 <HAL_ADC_Init+0x408>)
 8002290:	4013      	ands	r3, r2
 8002292:	687a      	ldr	r2, [r7, #4]
 8002294:	6c91      	ldr	r1, [r2, #72]	; 0x48
 8002296:	687a      	ldr	r2, [r7, #4]
 8002298:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800229a:	4311      	orrs	r1, r2
 800229c:	687a      	ldr	r2, [r7, #4]
 800229e:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80022a0:	4311      	orrs	r1, r2
 80022a2:	687a      	ldr	r2, [r7, #4]
 80022a4:	6d52      	ldr	r2, [r2, #84]	; 0x54
 80022a6:	430a      	orrs	r2, r1
 80022a8:	431a      	orrs	r2, r3
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	f042 0201 	orr.w	r2, r2, #1
 80022b2:	611a      	str	r2, [r3, #16]
 80022b4:	e020      	b.n	80022f8 <HAL_ADC_Init+0x37c>
          /*  - Oversampling Ratio                                               */
          /*  - Right bit shift                                                  */
          /*  - Left bit shift                                                   */
          /*  - Triggered mode                                                   */
          /*  - Oversampling mode (continued/resumed)                            */
          MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	691a      	ldr	r2, [r3, #16]
 80022bc:	4b32      	ldr	r3, [pc, #200]	; (8002388 <HAL_ADC_Init+0x40c>)
 80022be:	4013      	ands	r3, r2
 80022c0:	687a      	ldr	r2, [r7, #4]
 80022c2:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80022c4:	3a01      	subs	r2, #1
 80022c6:	0411      	lsls	r1, r2, #16
 80022c8:	687a      	ldr	r2, [r7, #4]
 80022ca:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 80022cc:	4311      	orrs	r1, r2
 80022ce:	687a      	ldr	r2, [r7, #4]
 80022d0:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80022d2:	4311      	orrs	r1, r2
 80022d4:	687a      	ldr	r2, [r7, #4]
 80022d6:	6d52      	ldr	r2, [r2, #84]	; 0x54
 80022d8:	430a      	orrs	r2, r1
 80022da:	431a      	orrs	r2, r3
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	f042 0201 	orr.w	r2, r2, #1
 80022e4:	611a      	str	r2, [r3, #16]
 80022e6:	e007      	b.n	80022f8 <HAL_ADC_Init+0x37c>

      }
      else
      {
        /* Disable ADC oversampling scope on ADC group regular */
        CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	691a      	ldr	r2, [r3, #16]
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	f022 0201 	bic.w	r2, r2, #1
 80022f6:	611a      	str	r2, [r3, #16]
      }

      /* Set the LeftShift parameter: it is applied to the final result with or without oversampling */
      MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	691b      	ldr	r3, [r3, #16]
 80022fe:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	430a      	orrs	r2, r1
 800230c:	611a      	str	r2, [r3, #16]
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance != ADC3)
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4a1b      	ldr	r2, [pc, #108]	; (8002380 <HAL_ADC_Init+0x404>)
 8002314:	4293      	cmp	r3, r2
 8002316:	d002      	beq.n	800231e <HAL_ADC_Init+0x3a2>
      {
        /* Configure the BOOST Mode */
        ADC_ConfigureBoostMode(hadc);
 8002318:	6878      	ldr	r0, [r7, #4]
 800231a:	f000 fd67 	bl	8002dec <ADC_ConfigureBoostMode>
    /*   Note: Scan mode is not present by hardware on this device, but       */
    /*   emulated by software for alignment over all STM32 devices.           */
    /* - if scan mode is enabled, regular channels sequence length is set to  */
    /*   parameter "NbrOfConversion".                                         */

    if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	691b      	ldr	r3, [r3, #16]
 8002322:	2b01      	cmp	r3, #1
 8002324:	d10c      	bne.n	8002340 <HAL_ADC_Init+0x3c4>
    {
      /* Set number of ranks in regular group sequencer */
      MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800232c:	f023 010f 	bic.w	r1, r3, #15
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	69db      	ldr	r3, [r3, #28]
 8002334:	1e5a      	subs	r2, r3, #1
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	430a      	orrs	r2, r1
 800233c:	631a      	str	r2, [r3, #48]	; 0x30
 800233e:	e007      	b.n	8002350 <HAL_ADC_Init+0x3d4>
    }
    else
    {
      CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	f022 020f 	bic.w	r2, r2, #15
 800234e:	631a      	str	r2, [r3, #48]	; 0x30
    }

    /* Initialize the ADC state */
    /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
    ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002354:	f023 0303 	bic.w	r3, r3, #3
 8002358:	f043 0201 	orr.w	r2, r3, #1
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	661a      	str	r2, [r3, #96]	; 0x60
 8002360:	e007      	b.n	8002372 <HAL_ADC_Init+0x3f6>
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002362:	687b      	ldr	r3, [r7, #4]
 8002364:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002366:	f043 0210 	orr.w	r2, r3, #16
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 800236e:	2301      	movs	r3, #1
 8002370:	77fb      	strb	r3, [r7, #31]
  }

  /* Return function status */
  return tmp_hal_status;
 8002372:	7ffb      	ldrb	r3, [r7, #31]
}
 8002374:	4618      	mov	r0, r3
 8002376:	3724      	adds	r7, #36	; 0x24
 8002378:	46bd      	mov	sp, r7
 800237a:	bd90      	pop	{r4, r7, pc}
 800237c:	ffffbffc 	.word	0xffffbffc
 8002380:	58026000 	.word	0x58026000
 8002384:	fc00f81f 	.word	0xfc00f81f
 8002388:	fc00f81e 	.word	0xfc00f81e

0800238c <HAL_ADC_ConfigChannel>:
  * @param hadc ADC handle
  * @param sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 800238c:	b590      	push	{r4, r7, lr}
 800238e:	b0b9      	sub	sp, #228	; 0xe4
 8002390:	af00      	add	r7, sp, #0
 8002392:	6078      	str	r0, [r7, #4]
 8002394:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002396:	2300      	movs	r3, #0
 8002398:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
  uint32_t tmpOffsetShifted;
  uint32_t tmp_config_internal_channel;
  __IO uint32_t wait_loop_index = 0;
 800239c:	2300      	movs	r3, #0
 800239e:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
  assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
  /* Check offset range according to oversampling setting */
  if (hadc->Init.OversamplingMode == ENABLE)
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80023a6:	2b01      	cmp	r3, #1
  /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
     ignored (considered as reset) */
  assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENABLE)));

  /* Verification of channel number */
  if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
 80023a8:	683b      	ldr	r3, [r7, #0]
 80023aa:	68db      	ldr	r3, [r3, #12]
 80023ac:	4aab      	ldr	r2, [pc, #684]	; (800265c <HAL_ADC_ConfigChannel+0x2d0>)
 80023ae:	4293      	cmp	r3, r2
    }
#endif
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80023b6:	2b01      	cmp	r3, #1
 80023b8:	d102      	bne.n	80023c0 <HAL_ADC_ConfigChannel+0x34>
 80023ba:	2302      	movs	r3, #2
 80023bc:	f000 bcfe 	b.w	8002dbc <HAL_ADC_ConfigChannel+0xa30>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	2201      	movs	r2, #1
 80023c4:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel rank                                                          */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	4618      	mov	r0, r3
 80023ce:	f7ff fdae 	bl	8001f2e <LL_ADC_REG_IsConversionOngoing>
 80023d2:	4603      	mov	r3, r0
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	f040 84e2 	bne.w	8002d9e <HAL_ADC_ConfigChannel+0xa12>
  {
    if (!(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel)))
 80023da:	683b      	ldr	r3, [r7, #0]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	2b00      	cmp	r3, #0
 80023e0:	db38      	blt.n	8002454 <HAL_ADC_ConfigChannel+0xc8>
    {
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance != ADC3)
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	4a9e      	ldr	r2, [pc, #632]	; (8002660 <HAL_ADC_ConfigChannel+0x2d4>)
 80023e8:	4293      	cmp	r3, r2
 80023ea:	d033      	beq.n	8002454 <HAL_ADC_ConfigChannel+0xc8>
      {
        /* ADC channels preselection */
        hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
 80023ec:	683b      	ldr	r3, [r7, #0]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80023f4:	2b00      	cmp	r3, #0
 80023f6:	d108      	bne.n	800240a <HAL_ADC_ConfigChannel+0x7e>
 80023f8:	683b      	ldr	r3, [r7, #0]
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	0e9b      	lsrs	r3, r3, #26
 80023fe:	f003 031f 	and.w	r3, r3, #31
 8002402:	2201      	movs	r2, #1
 8002404:	fa02 f303 	lsl.w	r3, r2, r3
 8002408:	e01d      	b.n	8002446 <HAL_ADC_ConfigChannel+0xba>
 800240a:	683b      	ldr	r3, [r7, #0]
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002412:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002416:	fa93 f3a3 	rbit	r3, r3
 800241a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 800241e:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8002422:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 8002426:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800242a:	2b00      	cmp	r3, #0
 800242c:	d101      	bne.n	8002432 <HAL_ADC_ConfigChannel+0xa6>
  {
    return 32U;
 800242e:	2320      	movs	r3, #32
 8002430:	e004      	b.n	800243c <HAL_ADC_ConfigChannel+0xb0>
  }
  return __builtin_clz(value);
 8002432:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8002436:	fab3 f383 	clz	r3, r3
 800243a:	b2db      	uxtb	r3, r3
 800243c:	f003 031f 	and.w	r3, r3, #31
 8002440:	2201      	movs	r2, #1
 8002442:	fa02 f303 	lsl.w	r3, r2, r3
 8002446:	687a      	ldr	r2, [r7, #4]
 8002448:	6812      	ldr	r2, [r2, #0]
 800244a:	69d1      	ldr	r1, [r2, #28]
 800244c:	687a      	ldr	r2, [r7, #4]
 800244e:	6812      	ldr	r2, [r2, #0]
 8002450:	430b      	orrs	r3, r1
 8002452:	61d3      	str	r3, [r2, #28]
      hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 0x1FUL));
#endif /* ADC_VER_V5_V90 */
    }

    /* Set ADC group regular sequence: channel on the selected scan sequence rank */
    LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	6818      	ldr	r0, [r3, #0]
 8002458:	683b      	ldr	r3, [r7, #0]
 800245a:	6859      	ldr	r1, [r3, #4]
 800245c:	683b      	ldr	r3, [r7, #0]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	461a      	mov	r2, r3
 8002462:	f7ff fc6b 	bl	8001d3c <LL_ADC_REG_SetSequencerRanks>
    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated when ADC is disabled or enabled without   */
    /* conversion on going on regular group:                                    */
    /*  - Channel sampling time                                                 */
    /*  - Channel offset                                                        */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	4618      	mov	r0, r3
 800246c:	f7ff fd5f 	bl	8001f2e <LL_ADC_REG_IsConversionOngoing>
 8002470:	f8c7 00d4 	str.w	r0, [r7, #212]	; 0xd4
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	4618      	mov	r0, r3
 800247a:	f7ff fd6b 	bl	8001f54 <LL_ADC_INJ_IsConversionOngoing>
 800247e:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 8002482:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8002486:	2b00      	cmp	r3, #0
 8002488:	f040 8270 	bne.w	800296c <HAL_ADC_ConfigChannel+0x5e0>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 800248c:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 8002490:	2b00      	cmp	r3, #0
 8002492:	f040 826b 	bne.w	800296c <HAL_ADC_ConfigChannel+0x5e0>
       )
    {
      /* Set sampling time of the selected ADC channel */
      LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	6818      	ldr	r0, [r3, #0]
 800249a:	683b      	ldr	r3, [r7, #0]
 800249c:	6819      	ldr	r1, [r3, #0]
 800249e:	683b      	ldr	r3, [r7, #0]
 80024a0:	689b      	ldr	r3, [r3, #8]
 80024a2:	461a      	mov	r2, r3
 80024a4:	f7ff fc76 	bl	8001d94 <LL_ADC_SetChannelSamplingTime>
      /* Configure the offset: offset enable/disable, channel, offset value */

      /* Shift the offset with respect to the selected ADC resolution. */
      /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
#if defined(ADC_VER_V5_V90)
      if (hadc->Instance == ADC3)
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	4a6c      	ldr	r2, [pc, #432]	; (8002660 <HAL_ADC_ConfigChannel+0x2d4>)
 80024ae:	4293      	cmp	r3, r2
 80024b0:	d10d      	bne.n	80024ce <HAL_ADC_ConfigChannel+0x142>
      {
        tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 80024b2:	683b      	ldr	r3, [r7, #0]
 80024b4:	695a      	ldr	r2, [r3, #20]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	68db      	ldr	r3, [r3, #12]
 80024bc:	08db      	lsrs	r3, r3, #3
 80024be:	f003 0303 	and.w	r3, r3, #3
 80024c2:	005b      	lsls	r3, r3, #1
 80024c4:	fa02 f303 	lsl.w	r3, r2, r3
 80024c8:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80024cc:	e032      	b.n	8002534 <HAL_ADC_ConfigChannel+0x1a8>
      }
      else
#endif /* ADC_VER_V5_V90 */
      {
        tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 80024ce:	4b65      	ldr	r3, [pc, #404]	; (8002664 <HAL_ADC_ConfigChannel+0x2d8>)
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 80024d6:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80024da:	d10b      	bne.n	80024f4 <HAL_ADC_ConfigChannel+0x168>
 80024dc:	683b      	ldr	r3, [r7, #0]
 80024de:	695a      	ldr	r2, [r3, #20]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	68db      	ldr	r3, [r3, #12]
 80024e6:	089b      	lsrs	r3, r3, #2
 80024e8:	f003 0307 	and.w	r3, r3, #7
 80024ec:	005b      	lsls	r3, r3, #1
 80024ee:	fa02 f303 	lsl.w	r3, r2, r3
 80024f2:	e01d      	b.n	8002530 <HAL_ADC_ConfigChannel+0x1a4>
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	68db      	ldr	r3, [r3, #12]
 80024fa:	f003 0310 	and.w	r3, r3, #16
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d10b      	bne.n	800251a <HAL_ADC_ConfigChannel+0x18e>
 8002502:	683b      	ldr	r3, [r7, #0]
 8002504:	695a      	ldr	r2, [r3, #20]
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	68db      	ldr	r3, [r3, #12]
 800250c:	089b      	lsrs	r3, r3, #2
 800250e:	f003 0307 	and.w	r3, r3, #7
 8002512:	005b      	lsls	r3, r3, #1
 8002514:	fa02 f303 	lsl.w	r3, r2, r3
 8002518:	e00a      	b.n	8002530 <HAL_ADC_ConfigChannel+0x1a4>
 800251a:	683b      	ldr	r3, [r7, #0]
 800251c:	695a      	ldr	r2, [r3, #20]
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	68db      	ldr	r3, [r3, #12]
 8002524:	089b      	lsrs	r3, r3, #2
 8002526:	f003 0304 	and.w	r3, r3, #4
 800252a:	005b      	lsls	r3, r3, #1
 800252c:	fa02 f303 	lsl.w	r3, r2, r3
 8002530:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
      }
      
      if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
 8002534:	683b      	ldr	r3, [r7, #0]
 8002536:	691b      	ldr	r3, [r3, #16]
 8002538:	2b04      	cmp	r3, #4
 800253a:	d048      	beq.n	80025ce <HAL_ADC_ConfigChannel+0x242>
      {
        /* Set ADC selected offset number */
        LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted);
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	6818      	ldr	r0, [r3, #0]
 8002540:	683b      	ldr	r3, [r7, #0]
 8002542:	6919      	ldr	r1, [r3, #16]
 8002544:	683b      	ldr	r3, [r7, #0]
 8002546:	681a      	ldr	r2, [r3, #0]
 8002548:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800254c:	f7ff fb04 	bl	8001b58 <LL_ADC_SetOffset>

#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	4a42      	ldr	r2, [pc, #264]	; (8002660 <HAL_ADC_ConfigChannel+0x2d4>)
 8002556:	4293      	cmp	r3, r2
 8002558:	d119      	bne.n	800258e <HAL_ADC_ConfigChannel+0x202>
        {
          assert_param(IS_ADC3_OFFSET_SIGN(sConfig->OffsetSign));
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
          /* Set ADC selected offset sign & saturation */
          LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	6818      	ldr	r0, [r3, #0]
 800255e:	683b      	ldr	r3, [r7, #0]
 8002560:	6919      	ldr	r1, [r3, #16]
 8002562:	683b      	ldr	r3, [r7, #0]
 8002564:	69db      	ldr	r3, [r3, #28]
 8002566:	461a      	mov	r2, r3
 8002568:	f7ff fb9c 	bl	8001ca4 <LL_ADC_SetOffsetSign>
          LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturation == ENABLE) ? LL_ADC_OFFSET_SATURATION_ENABLE : LL_ADC_OFFSET_SATURATION_DISABLE);
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	6818      	ldr	r0, [r3, #0]
 8002570:	683b      	ldr	r3, [r7, #0]
 8002572:	6919      	ldr	r1, [r3, #16]
 8002574:	683b      	ldr	r3, [r7, #0]
 8002576:	f893 3020 	ldrb.w	r3, [r3, #32]
 800257a:	2b01      	cmp	r3, #1
 800257c:	d102      	bne.n	8002584 <HAL_ADC_ConfigChannel+0x1f8>
 800257e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002582:	e000      	b.n	8002586 <HAL_ADC_ConfigChannel+0x1fa>
 8002584:	2300      	movs	r3, #0
 8002586:	461a      	mov	r2, r3
 8002588:	f7ff fb6a 	bl	8001c60 <LL_ADC_SetOffsetSaturation>
 800258c:	e1ee      	b.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
        else
#endif /* ADC_VER_V5_V90 */
        {
          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSignedSaturation));
          /* Set ADC selected offset signed saturation */
          LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSignedSaturation == ENABLE) ? LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE : LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE);
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	6818      	ldr	r0, [r3, #0]
 8002592:	683b      	ldr	r3, [r7, #0]
 8002594:	6919      	ldr	r1, [r3, #16]
 8002596:	683b      	ldr	r3, [r7, #0]
 8002598:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800259c:	2b01      	cmp	r3, #1
 800259e:	d102      	bne.n	80025a6 <HAL_ADC_ConfigChannel+0x21a>
 80025a0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80025a4:	e000      	b.n	80025a8 <HAL_ADC_ConfigChannel+0x21c>
 80025a6:	2300      	movs	r3, #0
 80025a8:	461a      	mov	r2, r3
 80025aa:	f7ff fb37 	bl	8001c1c <LL_ADC_SetOffsetSignedSaturation>

          assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetRightShift));
          /* Set ADC selected offset right shift */
          LL_ADC_SetDataRightShift(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetRightShift == ENABLE) ? LL_ADC_OFFSET_RSHIFT_ENABLE : LL_ADC_OFFSET_RSHIFT_DISABLE);
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	6818      	ldr	r0, [r3, #0]
 80025b2:	683b      	ldr	r3, [r7, #0]
 80025b4:	6919      	ldr	r1, [r3, #16]
 80025b6:	683b      	ldr	r3, [r7, #0]
 80025b8:	7e1b      	ldrb	r3, [r3, #24]
 80025ba:	2b01      	cmp	r3, #1
 80025bc:	d102      	bne.n	80025c4 <HAL_ADC_ConfigChannel+0x238>
 80025be:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80025c2:	e000      	b.n	80025c6 <HAL_ADC_ConfigChannel+0x23a>
 80025c4:	2300      	movs	r3, #0
 80025c6:	461a      	mov	r2, r3
 80025c8:	f7ff fb0e 	bl	8001be8 <LL_ADC_SetDataRightShift>
 80025cc:	e1ce      	b.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
      {
        /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is enabled.
          If this is the case, offset OFRx is disabled since
          sConfig->OffsetNumber = ADC_OFFSET_NONE. */
#if defined(ADC_VER_V5_V90)
        if (hadc->Instance == ADC3)
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	4a23      	ldr	r2, [pc, #140]	; (8002660 <HAL_ADC_ConfigChannel+0x2d4>)
 80025d4:	4293      	cmp	r3, r2
 80025d6:	f040 8181 	bne.w	80028dc <HAL_ADC_ConfigChannel+0x550>
        {
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	2100      	movs	r1, #0
 80025e0:	4618      	mov	r0, r3
 80025e2:	f7ff faeb 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80025e6:	4603      	mov	r3, r0
 80025e8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d10a      	bne.n	8002606 <HAL_ADC_ConfigChannel+0x27a>
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	2100      	movs	r1, #0
 80025f6:	4618      	mov	r0, r3
 80025f8:	f7ff fae0 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80025fc:	4603      	mov	r3, r0
 80025fe:	0e9b      	lsrs	r3, r3, #26
 8002600:	f003 021f 	and.w	r2, r3, #31
 8002604:	e01e      	b.n	8002644 <HAL_ADC_ConfigChannel+0x2b8>
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	2100      	movs	r1, #0
 800260c:	4618      	mov	r0, r3
 800260e:	f7ff fad5 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 8002612:	4603      	mov	r3, r0
 8002614:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002618:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800261c:	fa93 f3a3 	rbit	r3, r3
 8002620:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  return result;
 8002624:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8002628:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  if (value == 0U)
 800262c:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 8002630:	2b00      	cmp	r3, #0
 8002632:	d101      	bne.n	8002638 <HAL_ADC_ConfigChannel+0x2ac>
    return 32U;
 8002634:	2320      	movs	r3, #32
 8002636:	e004      	b.n	8002642 <HAL_ADC_ConfigChannel+0x2b6>
  return __builtin_clz(value);
 8002638:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800263c:	fab3 f383 	clz	r3, r3
 8002640:	b2db      	uxtb	r3, r3
 8002642:	461a      	mov	r2, r3
 8002644:	683b      	ldr	r3, [r7, #0]
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800264c:	2b00      	cmp	r3, #0
 800264e:	d10b      	bne.n	8002668 <HAL_ADC_ConfigChannel+0x2dc>
 8002650:	683b      	ldr	r3, [r7, #0]
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	0e9b      	lsrs	r3, r3, #26
 8002656:	f003 031f 	and.w	r3, r3, #31
 800265a:	e01e      	b.n	800269a <HAL_ADC_ConfigChannel+0x30e>
 800265c:	47ff0000 	.word	0x47ff0000
 8002660:	58026000 	.word	0x58026000
 8002664:	5c001000 	.word	0x5c001000
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002670:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002674:	fa93 f3a3 	rbit	r3, r3
 8002678:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
  return result;
 800267c:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8002680:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  if (value == 0U)
 8002684:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8002688:	2b00      	cmp	r3, #0
 800268a:	d101      	bne.n	8002690 <HAL_ADC_ConfigChannel+0x304>
    return 32U;
 800268c:	2320      	movs	r3, #32
 800268e:	e004      	b.n	800269a <HAL_ADC_ConfigChannel+0x30e>
  return __builtin_clz(value);
 8002690:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8002694:	fab3 f383 	clz	r3, r3
 8002698:	b2db      	uxtb	r3, r3
 800269a:	429a      	cmp	r2, r3
 800269c:	d106      	bne.n	80026ac <HAL_ADC_ConfigChannel+0x320>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	2200      	movs	r2, #0
 80026a4:	2100      	movs	r1, #0
 80026a6:	4618      	mov	r0, r3
 80026a8:	f7ff fb1e 	bl	8001ce8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	2101      	movs	r1, #1
 80026b2:	4618      	mov	r0, r3
 80026b4:	f7ff fa82 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80026b8:	4603      	mov	r3, r0
 80026ba:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80026be:	2b00      	cmp	r3, #0
 80026c0:	d10a      	bne.n	80026d8 <HAL_ADC_ConfigChannel+0x34c>
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	2101      	movs	r1, #1
 80026c8:	4618      	mov	r0, r3
 80026ca:	f7ff fa77 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80026ce:	4603      	mov	r3, r0
 80026d0:	0e9b      	lsrs	r3, r3, #26
 80026d2:	f003 021f 	and.w	r2, r3, #31
 80026d6:	e01e      	b.n	8002716 <HAL_ADC_ConfigChannel+0x38a>
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	2101      	movs	r1, #1
 80026de:	4618      	mov	r0, r3
 80026e0:	f7ff fa6c 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80026e4:	4603      	mov	r3, r0
 80026e6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80026ea:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80026ee:	fa93 f3a3 	rbit	r3, r3
 80026f2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  return result;
 80026f6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80026fa:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  if (value == 0U)
 80026fe:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8002702:	2b00      	cmp	r3, #0
 8002704:	d101      	bne.n	800270a <HAL_ADC_ConfigChannel+0x37e>
    return 32U;
 8002706:	2320      	movs	r3, #32
 8002708:	e004      	b.n	8002714 <HAL_ADC_ConfigChannel+0x388>
  return __builtin_clz(value);
 800270a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800270e:	fab3 f383 	clz	r3, r3
 8002712:	b2db      	uxtb	r3, r3
 8002714:	461a      	mov	r2, r3
 8002716:	683b      	ldr	r3, [r7, #0]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800271e:	2b00      	cmp	r3, #0
 8002720:	d105      	bne.n	800272e <HAL_ADC_ConfigChannel+0x3a2>
 8002722:	683b      	ldr	r3, [r7, #0]
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	0e9b      	lsrs	r3, r3, #26
 8002728:	f003 031f 	and.w	r3, r3, #31
 800272c:	e018      	b.n	8002760 <HAL_ADC_ConfigChannel+0x3d4>
 800272e:	683b      	ldr	r3, [r7, #0]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002736:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800273a:	fa93 f3a3 	rbit	r3, r3
 800273e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  return result;
 8002742:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002746:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  if (value == 0U)
 800274a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800274e:	2b00      	cmp	r3, #0
 8002750:	d101      	bne.n	8002756 <HAL_ADC_ConfigChannel+0x3ca>
    return 32U;
 8002752:	2320      	movs	r3, #32
 8002754:	e004      	b.n	8002760 <HAL_ADC_ConfigChannel+0x3d4>
  return __builtin_clz(value);
 8002756:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800275a:	fab3 f383 	clz	r3, r3
 800275e:	b2db      	uxtb	r3, r3
 8002760:	429a      	cmp	r2, r3
 8002762:	d106      	bne.n	8002772 <HAL_ADC_ConfigChannel+0x3e6>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	2200      	movs	r2, #0
 800276a:	2101      	movs	r1, #1
 800276c:	4618      	mov	r0, r3
 800276e:	f7ff fabb 	bl	8001ce8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	2102      	movs	r1, #2
 8002778:	4618      	mov	r0, r3
 800277a:	f7ff fa1f 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 800277e:	4603      	mov	r3, r0
 8002780:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002784:	2b00      	cmp	r3, #0
 8002786:	d10a      	bne.n	800279e <HAL_ADC_ConfigChannel+0x412>
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	2102      	movs	r1, #2
 800278e:	4618      	mov	r0, r3
 8002790:	f7ff fa14 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 8002794:	4603      	mov	r3, r0
 8002796:	0e9b      	lsrs	r3, r3, #26
 8002798:	f003 021f 	and.w	r2, r3, #31
 800279c:	e01e      	b.n	80027dc <HAL_ADC_ConfigChannel+0x450>
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	2102      	movs	r1, #2
 80027a4:	4618      	mov	r0, r3
 80027a6:	f7ff fa09 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 80027aa:	4603      	mov	r3, r0
 80027ac:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80027b0:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80027b4:	fa93 f3a3 	rbit	r3, r3
 80027b8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  return result;
 80027bc:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80027c0:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  if (value == 0U)
 80027c4:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80027c8:	2b00      	cmp	r3, #0
 80027ca:	d101      	bne.n	80027d0 <HAL_ADC_ConfigChannel+0x444>
    return 32U;
 80027cc:	2320      	movs	r3, #32
 80027ce:	e004      	b.n	80027da <HAL_ADC_ConfigChannel+0x44e>
  return __builtin_clz(value);
 80027d0:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80027d4:	fab3 f383 	clz	r3, r3
 80027d8:	b2db      	uxtb	r3, r3
 80027da:	461a      	mov	r2, r3
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80027e4:	2b00      	cmp	r3, #0
 80027e6:	d105      	bne.n	80027f4 <HAL_ADC_ConfigChannel+0x468>
 80027e8:	683b      	ldr	r3, [r7, #0]
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	0e9b      	lsrs	r3, r3, #26
 80027ee:	f003 031f 	and.w	r3, r3, #31
 80027f2:	e014      	b.n	800281e <HAL_ADC_ConfigChannel+0x492>
 80027f4:	683b      	ldr	r3, [r7, #0]
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	67fb      	str	r3, [r7, #124]	; 0x7c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80027fa:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80027fc:	fa93 f3a3 	rbit	r3, r3
 8002800:	67bb      	str	r3, [r7, #120]	; 0x78
  return result;
 8002802:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002804:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
  if (value == 0U)
 8002808:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800280c:	2b00      	cmp	r3, #0
 800280e:	d101      	bne.n	8002814 <HAL_ADC_ConfigChannel+0x488>
    return 32U;
 8002810:	2320      	movs	r3, #32
 8002812:	e004      	b.n	800281e <HAL_ADC_ConfigChannel+0x492>
  return __builtin_clz(value);
 8002814:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002818:	fab3 f383 	clz	r3, r3
 800281c:	b2db      	uxtb	r3, r3
 800281e:	429a      	cmp	r2, r3
 8002820:	d106      	bne.n	8002830 <HAL_ADC_ConfigChannel+0x4a4>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	2200      	movs	r2, #0
 8002828:	2102      	movs	r1, #2
 800282a:	4618      	mov	r0, r3
 800282c:	f7ff fa5c 	bl	8001ce8 <LL_ADC_SetOffsetState>
          }
          if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)) == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	2103      	movs	r1, #3
 8002836:	4618      	mov	r0, r3
 8002838:	f7ff f9c0 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 800283c:	4603      	mov	r3, r0
 800283e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002842:	2b00      	cmp	r3, #0
 8002844:	d10a      	bne.n	800285c <HAL_ADC_ConfigChannel+0x4d0>
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	2103      	movs	r1, #3
 800284c:	4618      	mov	r0, r3
 800284e:	f7ff f9b5 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 8002852:	4603      	mov	r3, r0
 8002854:	0e9b      	lsrs	r3, r3, #26
 8002856:	f003 021f 	and.w	r2, r3, #31
 800285a:	e017      	b.n	800288c <HAL_ADC_ConfigChannel+0x500>
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	2103      	movs	r1, #3
 8002862:	4618      	mov	r0, r3
 8002864:	f7ff f9aa 	bl	8001bbc <LL_ADC_GetOffsetChannel>
 8002868:	4603      	mov	r3, r0
 800286a:	673b      	str	r3, [r7, #112]	; 0x70
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800286c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800286e:	fa93 f3a3 	rbit	r3, r3
 8002872:	66fb      	str	r3, [r7, #108]	; 0x6c
  return result;
 8002874:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002876:	677b      	str	r3, [r7, #116]	; 0x74
  if (value == 0U)
 8002878:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800287a:	2b00      	cmp	r3, #0
 800287c:	d101      	bne.n	8002882 <HAL_ADC_ConfigChannel+0x4f6>
    return 32U;
 800287e:	2320      	movs	r3, #32
 8002880:	e003      	b.n	800288a <HAL_ADC_ConfigChannel+0x4fe>
  return __builtin_clz(value);
 8002882:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002884:	fab3 f383 	clz	r3, r3
 8002888:	b2db      	uxtb	r3, r3
 800288a:	461a      	mov	r2, r3
 800288c:	683b      	ldr	r3, [r7, #0]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002894:	2b00      	cmp	r3, #0
 8002896:	d105      	bne.n	80028a4 <HAL_ADC_ConfigChannel+0x518>
 8002898:	683b      	ldr	r3, [r7, #0]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	0e9b      	lsrs	r3, r3, #26
 800289e:	f003 031f 	and.w	r3, r3, #31
 80028a2:	e011      	b.n	80028c8 <HAL_ADC_ConfigChannel+0x53c>
 80028a4:	683b      	ldr	r3, [r7, #0]
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	667b      	str	r3, [r7, #100]	; 0x64
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80028aa:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80028ac:	fa93 f3a3 	rbit	r3, r3
 80028b0:	663b      	str	r3, [r7, #96]	; 0x60
  return result;
 80028b2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80028b4:	66bb      	str	r3, [r7, #104]	; 0x68
  if (value == 0U)
 80028b6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80028b8:	2b00      	cmp	r3, #0
 80028ba:	d101      	bne.n	80028c0 <HAL_ADC_ConfigChannel+0x534>
    return 32U;
 80028bc:	2320      	movs	r3, #32
 80028be:	e003      	b.n	80028c8 <HAL_ADC_ConfigChannel+0x53c>
  return __builtin_clz(value);
 80028c0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80028c2:	fab3 f383 	clz	r3, r3
 80028c6:	b2db      	uxtb	r3, r3
 80028c8:	429a      	cmp	r2, r3
 80028ca:	d14f      	bne.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
          {
            LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	2200      	movs	r2, #0
 80028d2:	2103      	movs	r1, #3
 80028d4:	4618      	mov	r0, r3
 80028d6:	f7ff fa07 	bl	8001ce8 <LL_ADC_SetOffsetState>
 80028da:	e047      	b.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
          }
        }
        else
#endif /* ADC_VER_V5_V90 */
        {
          if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80028e2:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 80028e6:	683b      	ldr	r3, [r7, #0]
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	069b      	lsls	r3, r3, #26
 80028ec:	429a      	cmp	r2, r3
 80028ee:	d107      	bne.n	8002900 <HAL_ADC_ConfigChannel+0x574>
          {
            CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 80028fe:	661a      	str	r2, [r3, #96]	; 0x60
          }
          if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	681b      	ldr	r3, [r3, #0]
 8002904:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002906:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 800290a:	683b      	ldr	r3, [r7, #0]
 800290c:	681b      	ldr	r3, [r3, #0]
 800290e:	069b      	lsls	r3, r3, #26
 8002910:	429a      	cmp	r2, r3
 8002912:	d107      	bne.n	8002924 <HAL_ADC_ConfigChannel+0x598>
          {
            CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002922:	665a      	str	r2, [r3, #100]	; 0x64
          }
          if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800292a:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 800292e:	683b      	ldr	r3, [r7, #0]
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	069b      	lsls	r3, r3, #26
 8002934:	429a      	cmp	r2, r3
 8002936:	d107      	bne.n	8002948 <HAL_ADC_ConfigChannel+0x5bc>
          {
            CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	681b      	ldr	r3, [r3, #0]
 8002942:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8002946:	669a      	str	r2, [r3, #104]	; 0x68
          }
          if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800294e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002952:	683b      	ldr	r3, [r7, #0]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	069b      	lsls	r3, r3, #26
 8002958:	429a      	cmp	r2, r3
 800295a:	d107      	bne.n	800296c <HAL_ADC_ConfigChannel+0x5e0>
          {
            CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 800296a:	66da      	str	r2, [r3, #108]	; 0x6c

    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated only when ADC is disabled:                */
    /*  - Single or differential mode                                           */
    /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	4618      	mov	r0, r3
 8002972:	f7ff fac9 	bl	8001f08 <LL_ADC_IsEnabled>
 8002976:	4603      	mov	r3, r0
 8002978:	2b00      	cmp	r3, #0
 800297a:	f040 8219 	bne.w	8002db0 <HAL_ADC_ConfigChannel+0xa24>
    {
      /* Set mode single-ended or differential input of the selected ADC channel */
      LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	6818      	ldr	r0, [r3, #0]
 8002982:	683b      	ldr	r3, [r7, #0]
 8002984:	6819      	ldr	r1, [r3, #0]
 8002986:	683b      	ldr	r3, [r7, #0]
 8002988:	68db      	ldr	r3, [r3, #12]
 800298a:	461a      	mov	r2, r3
 800298c:	f7ff fa2e 	bl	8001dec <LL_ADC_SetChannelSingleDiff>

      /* Configuration of differential mode */
      if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
 8002990:	683b      	ldr	r3, [r7, #0]
 8002992:	68db      	ldr	r3, [r3, #12]
 8002994:	4aa1      	ldr	r2, [pc, #644]	; (8002c1c <HAL_ADC_ConfigChannel+0x890>)
 8002996:	4293      	cmp	r3, r2
 8002998:	f040 812e 	bne.w	8002bf8 <HAL_ADC_ConfigChannel+0x86c>
      {
        /* Set sampling time of the selected ADC channel */
        /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range */
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	6818      	ldr	r0, [r3, #0]
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 80029a0:	683b      	ldr	r3, [r7, #0]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d10b      	bne.n	80029c4 <HAL_ADC_ConfigChannel+0x638>
 80029ac:	683b      	ldr	r3, [r7, #0]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	0e9b      	lsrs	r3, r3, #26
 80029b2:	3301      	adds	r3, #1
 80029b4:	f003 031f 	and.w	r3, r3, #31
 80029b8:	2b09      	cmp	r3, #9
 80029ba:	bf94      	ite	ls
 80029bc:	2301      	movls	r3, #1
 80029be:	2300      	movhi	r3, #0
 80029c0:	b2db      	uxtb	r3, r3
 80029c2:	e019      	b.n	80029f8 <HAL_ADC_ConfigChannel+0x66c>
 80029c4:	683b      	ldr	r3, [r7, #0]
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	65bb      	str	r3, [r7, #88]	; 0x58
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80029ca:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80029cc:	fa93 f3a3 	rbit	r3, r3
 80029d0:	657b      	str	r3, [r7, #84]	; 0x54
  return result;
 80029d2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80029d4:	65fb      	str	r3, [r7, #92]	; 0x5c
  if (value == 0U)
 80029d6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d101      	bne.n	80029e0 <HAL_ADC_ConfigChannel+0x654>
    return 32U;
 80029dc:	2320      	movs	r3, #32
 80029de:	e003      	b.n	80029e8 <HAL_ADC_ConfigChannel+0x65c>
  return __builtin_clz(value);
 80029e0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80029e2:	fab3 f383 	clz	r3, r3
 80029e6:	b2db      	uxtb	r3, r3
 80029e8:	3301      	adds	r3, #1
 80029ea:	f003 031f 	and.w	r3, r3, #31
 80029ee:	2b09      	cmp	r3, #9
 80029f0:	bf94      	ite	ls
 80029f2:	2301      	movls	r3, #1
 80029f4:	2300      	movhi	r3, #0
 80029f6:	b2db      	uxtb	r3, r3
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	d079      	beq.n	8002af0 <HAL_ADC_ConfigChannel+0x764>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 80029fc:	683b      	ldr	r3, [r7, #0]
 80029fe:	681b      	ldr	r3, [r3, #0]
 8002a00:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a04:	2b00      	cmp	r3, #0
 8002a06:	d107      	bne.n	8002a18 <HAL_ADC_ConfigChannel+0x68c>
 8002a08:	683b      	ldr	r3, [r7, #0]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	0e9b      	lsrs	r3, r3, #26
 8002a0e:	3301      	adds	r3, #1
 8002a10:	069b      	lsls	r3, r3, #26
 8002a12:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002a16:	e015      	b.n	8002a44 <HAL_ADC_ConfigChannel+0x6b8>
 8002a18:	683b      	ldr	r3, [r7, #0]
 8002a1a:	681b      	ldr	r3, [r3, #0]
 8002a1c:	64fb      	str	r3, [r7, #76]	; 0x4c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002a1e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002a20:	fa93 f3a3 	rbit	r3, r3
 8002a24:	64bb      	str	r3, [r7, #72]	; 0x48
  return result;
 8002a26:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002a28:	653b      	str	r3, [r7, #80]	; 0x50
  if (value == 0U)
 8002a2a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	d101      	bne.n	8002a34 <HAL_ADC_ConfigChannel+0x6a8>
    return 32U;
 8002a30:	2320      	movs	r3, #32
 8002a32:	e003      	b.n	8002a3c <HAL_ADC_ConfigChannel+0x6b0>
  return __builtin_clz(value);
 8002a34:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002a36:	fab3 f383 	clz	r3, r3
 8002a3a:	b2db      	uxtb	r3, r3
 8002a3c:	3301      	adds	r3, #1
 8002a3e:	069b      	lsls	r3, r3, #26
 8002a40:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002a44:	683b      	ldr	r3, [r7, #0]
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002a4c:	2b00      	cmp	r3, #0
 8002a4e:	d109      	bne.n	8002a64 <HAL_ADC_ConfigChannel+0x6d8>
 8002a50:	683b      	ldr	r3, [r7, #0]
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	0e9b      	lsrs	r3, r3, #26
 8002a56:	3301      	adds	r3, #1
 8002a58:	f003 031f 	and.w	r3, r3, #31
 8002a5c:	2101      	movs	r1, #1
 8002a5e:	fa01 f303 	lsl.w	r3, r1, r3
 8002a62:	e017      	b.n	8002a94 <HAL_ADC_ConfigChannel+0x708>
 8002a64:	683b      	ldr	r3, [r7, #0]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	643b      	str	r3, [r7, #64]	; 0x40
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002a6a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002a6c:	fa93 f3a3 	rbit	r3, r3
 8002a70:	63fb      	str	r3, [r7, #60]	; 0x3c
  return result;
 8002a72:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002a74:	647b      	str	r3, [r7, #68]	; 0x44
  if (value == 0U)
 8002a76:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002a78:	2b00      	cmp	r3, #0
 8002a7a:	d101      	bne.n	8002a80 <HAL_ADC_ConfigChannel+0x6f4>
    return 32U;
 8002a7c:	2320      	movs	r3, #32
 8002a7e:	e003      	b.n	8002a88 <HAL_ADC_ConfigChannel+0x6fc>
  return __builtin_clz(value);
 8002a80:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002a82:	fab3 f383 	clz	r3, r3
 8002a86:	b2db      	uxtb	r3, r3
 8002a88:	3301      	adds	r3, #1
 8002a8a:	f003 031f 	and.w	r3, r3, #31
 8002a8e:	2101      	movs	r1, #1
 8002a90:	fa01 f303 	lsl.w	r3, r1, r3
 8002a94:	ea42 0103 	orr.w	r1, r2, r3
 8002a98:	683b      	ldr	r3, [r7, #0]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d10a      	bne.n	8002aba <HAL_ADC_ConfigChannel+0x72e>
 8002aa4:	683b      	ldr	r3, [r7, #0]
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	0e9b      	lsrs	r3, r3, #26
 8002aaa:	3301      	adds	r3, #1
 8002aac:	f003 021f 	and.w	r2, r3, #31
 8002ab0:	4613      	mov	r3, r2
 8002ab2:	005b      	lsls	r3, r3, #1
 8002ab4:	4413      	add	r3, r2
 8002ab6:	051b      	lsls	r3, r3, #20
 8002ab8:	e018      	b.n	8002aec <HAL_ADC_ConfigChannel+0x760>
 8002aba:	683b      	ldr	r3, [r7, #0]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002ac0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002ac2:	fa93 f3a3 	rbit	r3, r3
 8002ac6:	633b      	str	r3, [r7, #48]	; 0x30
  return result;
 8002ac8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002aca:	63bb      	str	r3, [r7, #56]	; 0x38
  if (value == 0U)
 8002acc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002ace:	2b00      	cmp	r3, #0
 8002ad0:	d101      	bne.n	8002ad6 <HAL_ADC_ConfigChannel+0x74a>
    return 32U;
 8002ad2:	2320      	movs	r3, #32
 8002ad4:	e003      	b.n	8002ade <HAL_ADC_ConfigChannel+0x752>
  return __builtin_clz(value);
 8002ad6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002ad8:	fab3 f383 	clz	r3, r3
 8002adc:	b2db      	uxtb	r3, r3
 8002ade:	3301      	adds	r3, #1
 8002ae0:	f003 021f 	and.w	r2, r3, #31
 8002ae4:	4613      	mov	r3, r2
 8002ae6:	005b      	lsls	r3, r3, #1
 8002ae8:	4413      	add	r3, r2
 8002aea:	051b      	lsls	r3, r3, #20
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002aec:	430b      	orrs	r3, r1
 8002aee:	e07e      	b.n	8002bee <HAL_ADC_ConfigChannel+0x862>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002af0:	683b      	ldr	r3, [r7, #0]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	d107      	bne.n	8002b0c <HAL_ADC_ConfigChannel+0x780>
 8002afc:	683b      	ldr	r3, [r7, #0]
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	0e9b      	lsrs	r3, r3, #26
 8002b02:	3301      	adds	r3, #1
 8002b04:	069b      	lsls	r3, r3, #26
 8002b06:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002b0a:	e015      	b.n	8002b38 <HAL_ADC_ConfigChannel+0x7ac>
 8002b0c:	683b      	ldr	r3, [r7, #0]
 8002b0e:	681b      	ldr	r3, [r3, #0]
 8002b10:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b12:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002b14:	fa93 f3a3 	rbit	r3, r3
 8002b18:	627b      	str	r3, [r7, #36]	; 0x24
  return result;
 8002b1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b1c:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (value == 0U)
 8002b1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002b20:	2b00      	cmp	r3, #0
 8002b22:	d101      	bne.n	8002b28 <HAL_ADC_ConfigChannel+0x79c>
    return 32U;
 8002b24:	2320      	movs	r3, #32
 8002b26:	e003      	b.n	8002b30 <HAL_ADC_ConfigChannel+0x7a4>
  return __builtin_clz(value);
 8002b28:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002b2a:	fab3 f383 	clz	r3, r3
 8002b2e:	b2db      	uxtb	r3, r3
 8002b30:	3301      	adds	r3, #1
 8002b32:	069b      	lsls	r3, r3, #26
 8002b34:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002b38:	683b      	ldr	r3, [r7, #0]
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b40:	2b00      	cmp	r3, #0
 8002b42:	d109      	bne.n	8002b58 <HAL_ADC_ConfigChannel+0x7cc>
 8002b44:	683b      	ldr	r3, [r7, #0]
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	0e9b      	lsrs	r3, r3, #26
 8002b4a:	3301      	adds	r3, #1
 8002b4c:	f003 031f 	and.w	r3, r3, #31
 8002b50:	2101      	movs	r1, #1
 8002b52:	fa01 f303 	lsl.w	r3, r1, r3
 8002b56:	e017      	b.n	8002b88 <HAL_ADC_ConfigChannel+0x7fc>
 8002b58:	683b      	ldr	r3, [r7, #0]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b5e:	69fb      	ldr	r3, [r7, #28]
 8002b60:	fa93 f3a3 	rbit	r3, r3
 8002b64:	61bb      	str	r3, [r7, #24]
  return result;
 8002b66:	69bb      	ldr	r3, [r7, #24]
 8002b68:	623b      	str	r3, [r7, #32]
  if (value == 0U)
 8002b6a:	6a3b      	ldr	r3, [r7, #32]
 8002b6c:	2b00      	cmp	r3, #0
 8002b6e:	d101      	bne.n	8002b74 <HAL_ADC_ConfigChannel+0x7e8>
    return 32U;
 8002b70:	2320      	movs	r3, #32
 8002b72:	e003      	b.n	8002b7c <HAL_ADC_ConfigChannel+0x7f0>
  return __builtin_clz(value);
 8002b74:	6a3b      	ldr	r3, [r7, #32]
 8002b76:	fab3 f383 	clz	r3, r3
 8002b7a:	b2db      	uxtb	r3, r3
 8002b7c:	3301      	adds	r3, #1
 8002b7e:	f003 031f 	and.w	r3, r3, #31
 8002b82:	2101      	movs	r1, #1
 8002b84:	fa01 f303 	lsl.w	r3, r1, r3
 8002b88:	ea42 0103 	orr.w	r1, r2, r3
 8002b8c:	683b      	ldr	r3, [r7, #0]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d10d      	bne.n	8002bb4 <HAL_ADC_ConfigChannel+0x828>
 8002b98:	683b      	ldr	r3, [r7, #0]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	0e9b      	lsrs	r3, r3, #26
 8002b9e:	3301      	adds	r3, #1
 8002ba0:	f003 021f 	and.w	r2, r3, #31
 8002ba4:	4613      	mov	r3, r2
 8002ba6:	005b      	lsls	r3, r3, #1
 8002ba8:	4413      	add	r3, r2
 8002baa:	3b1e      	subs	r3, #30
 8002bac:	051b      	lsls	r3, r3, #20
 8002bae:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002bb2:	e01b      	b.n	8002bec <HAL_ADC_ConfigChannel+0x860>
 8002bb4:	683b      	ldr	r3, [r7, #0]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	613b      	str	r3, [r7, #16]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002bba:	693b      	ldr	r3, [r7, #16]
 8002bbc:	fa93 f3a3 	rbit	r3, r3
 8002bc0:	60fb      	str	r3, [r7, #12]
  return result;
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	617b      	str	r3, [r7, #20]
  if (value == 0U)
 8002bc6:	697b      	ldr	r3, [r7, #20]
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d101      	bne.n	8002bd0 <HAL_ADC_ConfigChannel+0x844>
    return 32U;
 8002bcc:	2320      	movs	r3, #32
 8002bce:	e003      	b.n	8002bd8 <HAL_ADC_ConfigChannel+0x84c>
  return __builtin_clz(value);
 8002bd0:	697b      	ldr	r3, [r7, #20]
 8002bd2:	fab3 f383 	clz	r3, r3
 8002bd6:	b2db      	uxtb	r3, r3
 8002bd8:	3301      	adds	r3, #1
 8002bda:	f003 021f 	and.w	r2, r3, #31
 8002bde:	4613      	mov	r3, r2
 8002be0:	005b      	lsls	r3, r3, #1
 8002be2:	4413      	add	r3, r2
 8002be4:	3b1e      	subs	r3, #30
 8002be6:	051b      	lsls	r3, r3, #20
 8002be8:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002bec:	430b      	orrs	r3, r1
 8002bee:	683a      	ldr	r2, [r7, #0]
 8002bf0:	6892      	ldr	r2, [r2, #8]
 8002bf2:	4619      	mov	r1, r3
 8002bf4:	f7ff f8ce 	bl	8001d94 <LL_ADC_SetChannelSamplingTime>
      /* If internal channel selected, enable dedicated internal buffers and    */
      /* paths.                                                                 */
      /* Note: these internal measurement paths can be disabled using           */
      /* HAL_ADC_DeInit().                                                      */

      if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002bf8:	683b      	ldr	r3, [r7, #0]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	2b00      	cmp	r3, #0
 8002bfe:	f280 80d7 	bge.w	8002db0 <HAL_ADC_ConfigChannel+0xa24>
      {
        /* Configuration of common ADC parameters                                 */

        tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	4a06      	ldr	r2, [pc, #24]	; (8002c20 <HAL_ADC_ConfigChannel+0x894>)
 8002c08:	4293      	cmp	r3, r2
 8002c0a:	d004      	beq.n	8002c16 <HAL_ADC_ConfigChannel+0x88a>
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	4a04      	ldr	r2, [pc, #16]	; (8002c24 <HAL_ADC_ConfigChannel+0x898>)
 8002c12:	4293      	cmp	r3, r2
 8002c14:	d10a      	bne.n	8002c2c <HAL_ADC_ConfigChannel+0x8a0>
 8002c16:	4b04      	ldr	r3, [pc, #16]	; (8002c28 <HAL_ADC_ConfigChannel+0x89c>)
 8002c18:	e009      	b.n	8002c2e <HAL_ADC_ConfigChannel+0x8a2>
 8002c1a:	bf00      	nop
 8002c1c:	47ff0000 	.word	0x47ff0000
 8002c20:	40022000 	.word	0x40022000
 8002c24:	40022100 	.word	0x40022100
 8002c28:	40022300 	.word	0x40022300
 8002c2c:	4b65      	ldr	r3, [pc, #404]	; (8002dc4 <HAL_ADC_ConfigChannel+0xa38>)
 8002c2e:	4618      	mov	r0, r3
 8002c30:	f7fe ff84 	bl	8001b3c <LL_ADC_GetCommonPathInternalCh>
 8002c34:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc

        /* Software is allowed to change common parameters only when all ADCs   */
        /* of the common group are disabled.                                    */
        if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4a62      	ldr	r2, [pc, #392]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002c3e:	4293      	cmp	r3, r2
 8002c40:	d004      	beq.n	8002c4c <HAL_ADC_ConfigChannel+0x8c0>
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	681b      	ldr	r3, [r3, #0]
 8002c46:	4a61      	ldr	r2, [pc, #388]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002c48:	4293      	cmp	r3, r2
 8002c4a:	d10e      	bne.n	8002c6a <HAL_ADC_ConfigChannel+0x8de>
 8002c4c:	485e      	ldr	r0, [pc, #376]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002c4e:	f7ff f95b 	bl	8001f08 <LL_ADC_IsEnabled>
 8002c52:	4604      	mov	r4, r0
 8002c54:	485d      	ldr	r0, [pc, #372]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002c56:	f7ff f957 	bl	8001f08 <LL_ADC_IsEnabled>
 8002c5a:	4603      	mov	r3, r0
 8002c5c:	4323      	orrs	r3, r4
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	bf0c      	ite	eq
 8002c62:	2301      	moveq	r3, #1
 8002c64:	2300      	movne	r3, #0
 8002c66:	b2db      	uxtb	r3, r3
 8002c68:	e008      	b.n	8002c7c <HAL_ADC_ConfigChannel+0x8f0>
 8002c6a:	4859      	ldr	r0, [pc, #356]	; (8002dd0 <HAL_ADC_ConfigChannel+0xa44>)
 8002c6c:	f7ff f94c 	bl	8001f08 <LL_ADC_IsEnabled>
 8002c70:	4603      	mov	r3, r0
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	bf0c      	ite	eq
 8002c76:	2301      	moveq	r3, #1
 8002c78:	2300      	movne	r3, #0
 8002c7a:	b2db      	uxtb	r3, r3
 8002c7c:	2b00      	cmp	r3, #0
 8002c7e:	f000 8084 	beq.w	8002d8a <HAL_ADC_ConfigChannel+0x9fe>
        {
          /* If the requested internal measurement path has already been enabled, */
          /* bypass the configuration processing.                                 */
          if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 8002c82:	683b      	ldr	r3, [r7, #0]
 8002c84:	681b      	ldr	r3, [r3, #0]
 8002c86:	4a53      	ldr	r2, [pc, #332]	; (8002dd4 <HAL_ADC_ConfigChannel+0xa48>)
 8002c88:	4293      	cmp	r3, r2
 8002c8a:	d132      	bne.n	8002cf2 <HAL_ADC_ConfigChannel+0x966>
 8002c8c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002c90:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d12c      	bne.n	8002cf2 <HAL_ADC_ConfigChannel+0x966>
          {
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4a4c      	ldr	r2, [pc, #304]	; (8002dd0 <HAL_ADC_ConfigChannel+0xa44>)
 8002c9e:	4293      	cmp	r3, r2
 8002ca0:	f040 8086 	bne.w	8002db0 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channel);
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	4a47      	ldr	r2, [pc, #284]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002caa:	4293      	cmp	r3, r2
 8002cac:	d004      	beq.n	8002cb8 <HAL_ADC_ConfigChannel+0x92c>
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	4a46      	ldr	r2, [pc, #280]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002cb4:	4293      	cmp	r3, r2
 8002cb6:	d101      	bne.n	8002cbc <HAL_ADC_ConfigChannel+0x930>
 8002cb8:	4a47      	ldr	r2, [pc, #284]	; (8002dd8 <HAL_ADC_ConfigChannel+0xa4c>)
 8002cba:	e000      	b.n	8002cbe <HAL_ADC_ConfigChannel+0x932>
 8002cbc:	4a41      	ldr	r2, [pc, #260]	; (8002dc4 <HAL_ADC_ConfigChannel+0xa38>)
 8002cbe:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002cc2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002cc6:	4619      	mov	r1, r3
 8002cc8:	4610      	mov	r0, r2
 8002cca:	f7fe ff24 	bl	8001b16 <LL_ADC_SetCommonPathInternalCh>
              /* Delay for temperature sensor stabilization time */
              /* Wait loop initialization and execution */
              /* Note: Variable divided by 2 to compensate partially              */
              /*       CPU processing cycles, scaling in us split to not          */
              /*       exceed 32 bits register capacity and handle low frequency. */
              wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 8002cce:	4b43      	ldr	r3, [pc, #268]	; (8002ddc <HAL_ADC_ConfigChannel+0xa50>)
 8002cd0:	681b      	ldr	r3, [r3, #0]
 8002cd2:	099b      	lsrs	r3, r3, #6
 8002cd4:	4a42      	ldr	r2, [pc, #264]	; (8002de0 <HAL_ADC_ConfigChannel+0xa54>)
 8002cd6:	fba2 2303 	umull	r2, r3, r2, r3
 8002cda:	099b      	lsrs	r3, r3, #6
 8002cdc:	3301      	adds	r3, #1
 8002cde:	005b      	lsls	r3, r3, #1
 8002ce0:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 8002ce2:	e002      	b.n	8002cea <HAL_ADC_ConfigChannel+0x95e>
              {
                wait_loop_index--;
 8002ce4:	68bb      	ldr	r3, [r7, #8]
 8002ce6:	3b01      	subs	r3, #1
 8002ce8:	60bb      	str	r3, [r7, #8]
              while (wait_loop_index != 0UL)
 8002cea:	68bb      	ldr	r3, [r7, #8]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d1f9      	bne.n	8002ce4 <HAL_ADC_ConfigChannel+0x958>
            if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8002cf0:	e05e      	b.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
              }
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 8002cf2:	683b      	ldr	r3, [r7, #0]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	4a3b      	ldr	r2, [pc, #236]	; (8002de4 <HAL_ADC_ConfigChannel+0xa58>)
 8002cf8:	4293      	cmp	r3, r2
 8002cfa:	d120      	bne.n	8002d3e <HAL_ADC_ConfigChannel+0x9b2>
 8002cfc:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002d00:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002d04:	2b00      	cmp	r3, #0
 8002d06:	d11a      	bne.n	8002d3e <HAL_ADC_ConfigChannel+0x9b2>
          {
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	4a30      	ldr	r2, [pc, #192]	; (8002dd0 <HAL_ADC_ConfigChannel+0xa44>)
 8002d0e:	4293      	cmp	r3, r2
 8002d10:	d14e      	bne.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	4a2c      	ldr	r2, [pc, #176]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002d18:	4293      	cmp	r3, r2
 8002d1a:	d004      	beq.n	8002d26 <HAL_ADC_ConfigChannel+0x99a>
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	4a2a      	ldr	r2, [pc, #168]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002d22:	4293      	cmp	r3, r2
 8002d24:	d101      	bne.n	8002d2a <HAL_ADC_ConfigChannel+0x99e>
 8002d26:	4a2c      	ldr	r2, [pc, #176]	; (8002dd8 <HAL_ADC_ConfigChannel+0xa4c>)
 8002d28:	e000      	b.n	8002d2c <HAL_ADC_ConfigChannel+0x9a0>
 8002d2a:	4a26      	ldr	r2, [pc, #152]	; (8002dc4 <HAL_ADC_ConfigChannel+0xa38>)
 8002d2c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002d30:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002d34:	4619      	mov	r1, r3
 8002d36:	4610      	mov	r0, r2
 8002d38:	f7fe feed 	bl	8001b16 <LL_ADC_SetCommonPathInternalCh>
            if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8002d3c:	e038      	b.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
            }
          }
          else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 8002d3e:	683b      	ldr	r3, [r7, #0]
 8002d40:	681b      	ldr	r3, [r3, #0]
 8002d42:	4a29      	ldr	r2, [pc, #164]	; (8002de8 <HAL_ADC_ConfigChannel+0xa5c>)
 8002d44:	4293      	cmp	r3, r2
 8002d46:	d133      	bne.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
 8002d48:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002d4c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002d50:	2b00      	cmp	r3, #0
 8002d52:	d12d      	bne.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
          {
            if (ADC_VREFINT_INSTANCE(hadc))
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	4a1d      	ldr	r2, [pc, #116]	; (8002dd0 <HAL_ADC_ConfigChannel+0xa44>)
 8002d5a:	4293      	cmp	r3, r2
 8002d5c:	d128      	bne.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
            {
              LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	4a19      	ldr	r2, [pc, #100]	; (8002dc8 <HAL_ADC_ConfigChannel+0xa3c>)
 8002d64:	4293      	cmp	r3, r2
 8002d66:	d004      	beq.n	8002d72 <HAL_ADC_ConfigChannel+0x9e6>
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	681b      	ldr	r3, [r3, #0]
 8002d6c:	4a17      	ldr	r2, [pc, #92]	; (8002dcc <HAL_ADC_ConfigChannel+0xa40>)
 8002d6e:	4293      	cmp	r3, r2
 8002d70:	d101      	bne.n	8002d76 <HAL_ADC_ConfigChannel+0x9ea>
 8002d72:	4a19      	ldr	r2, [pc, #100]	; (8002dd8 <HAL_ADC_ConfigChannel+0xa4c>)
 8002d74:	e000      	b.n	8002d78 <HAL_ADC_ConfigChannel+0x9ec>
 8002d76:	4a13      	ldr	r2, [pc, #76]	; (8002dc4 <HAL_ADC_ConfigChannel+0xa38>)
 8002d78:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002d7c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002d80:	4619      	mov	r1, r3
 8002d82:	4610      	mov	r0, r2
 8002d84:	f7fe fec7 	bl	8001b16 <LL_ADC_SetCommonPathInternalCh>
 8002d88:	e012      	b.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
        /* enabled and other ADC of the common group are enabled, internal      */
        /* measurement paths cannot be enabled.                                 */
        else
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002d8e:	f043 0220 	orr.w	r2, r3, #32
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	661a      	str	r2, [r3, #96]	; 0x60

          tmp_hal_status = HAL_ERROR;
 8002d96:	2301      	movs	r3, #1
 8002d98:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002d9c:	e008      	b.n	8002db0 <HAL_ADC_ConfigChannel+0xa24>
  /* channel could be done on neither of the channel configuration structure  */
  /* parameters.                                                              */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002da2:	f043 0220 	orr.w	r2, r3, #32
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 8002daa:	2301      	movs	r3, #1
 8002dac:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	2200      	movs	r2, #0
 8002db4:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Return function status */
  return tmp_hal_status;
 8002db8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
}
 8002dbc:	4618      	mov	r0, r3
 8002dbe:	37e4      	adds	r7, #228	; 0xe4
 8002dc0:	46bd      	mov	sp, r7
 8002dc2:	bd90      	pop	{r4, r7, pc}
 8002dc4:	58026300 	.word	0x58026300
 8002dc8:	40022000 	.word	0x40022000
 8002dcc:	40022100 	.word	0x40022100
 8002dd0:	58026000 	.word	0x58026000
 8002dd4:	c7520000 	.word	0xc7520000
 8002dd8:	40022300 	.word	0x40022300
 8002ddc:	24000004 	.word	0x24000004
 8002de0:	053e2d63 	.word	0x053e2d63
 8002de4:	c3210000 	.word	0xc3210000
 8002de8:	cb840000 	.word	0xcb840000

08002dec <ADC_ConfigureBoostMode>:
  *         stopped.
  * @param  hadc ADC handle
  * @retval None.
  */
void ADC_ConfigureBoostMode(ADC_HandleTypeDef *hadc)
{
 8002dec:	b580      	push	{r7, lr}
 8002dee:	b084      	sub	sp, #16
 8002df0:	af00      	add	r7, sp, #0
 8002df2:	6078      	str	r0, [r7, #4]
  uint32_t freq;
  if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	681b      	ldr	r3, [r3, #0]
 8002df8:	4a6c      	ldr	r2, [pc, #432]	; (8002fac <ADC_ConfigureBoostMode+0x1c0>)
 8002dfa:	4293      	cmp	r3, r2
 8002dfc:	d004      	beq.n	8002e08 <ADC_ConfigureBoostMode+0x1c>
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	4a6b      	ldr	r2, [pc, #428]	; (8002fb0 <ADC_ConfigureBoostMode+0x1c4>)
 8002e04:	4293      	cmp	r3, r2
 8002e06:	d109      	bne.n	8002e1c <ADC_ConfigureBoostMode+0x30>
 8002e08:	4b6a      	ldr	r3, [pc, #424]	; (8002fb4 <ADC_ConfigureBoostMode+0x1c8>)
 8002e0a:	689b      	ldr	r3, [r3, #8]
 8002e0c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	bf14      	ite	ne
 8002e14:	2301      	movne	r3, #1
 8002e16:	2300      	moveq	r3, #0
 8002e18:	b2db      	uxtb	r3, r3
 8002e1a:	e008      	b.n	8002e2e <ADC_ConfigureBoostMode+0x42>
 8002e1c:	4b66      	ldr	r3, [pc, #408]	; (8002fb8 <ADC_ConfigureBoostMode+0x1cc>)
 8002e1e:	689b      	ldr	r3, [r3, #8]
 8002e20:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	bf14      	ite	ne
 8002e28:	2301      	movne	r3, #1
 8002e2a:	2300      	moveq	r3, #0
 8002e2c:	b2db      	uxtb	r3, r3
 8002e2e:	2b00      	cmp	r3, #0
 8002e30:	d01c      	beq.n	8002e6c <ADC_ConfigureBoostMode+0x80>
  {
    freq = HAL_RCC_GetHCLKFreq();
 8002e32:	f004 fea5 	bl	8007b80 <HAL_RCC_GetHCLKFreq>
 8002e36:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	685b      	ldr	r3, [r3, #4]
 8002e3c:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002e40:	d010      	beq.n	8002e64 <ADC_ConfigureBoostMode+0x78>
 8002e42:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8002e46:	d873      	bhi.n	8002f30 <ADC_ConfigureBoostMode+0x144>
 8002e48:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002e4c:	d002      	beq.n	8002e54 <ADC_ConfigureBoostMode+0x68>
 8002e4e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8002e52:	d16d      	bne.n	8002f30 <ADC_ConfigureBoostMode+0x144>
    {
      case ADC_CLOCK_SYNC_PCLK_DIV1:
      case ADC_CLOCK_SYNC_PCLK_DIV2:
        freq /= (hadc->Init.ClockPrescaler >> ADC_CCR_CKMODE_Pos);
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	685b      	ldr	r3, [r3, #4]
 8002e58:	0c1b      	lsrs	r3, r3, #16
 8002e5a:	68fa      	ldr	r2, [r7, #12]
 8002e5c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e60:	60fb      	str	r3, [r7, #12]
        break;
 8002e62:	e068      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_SYNC_PCLK_DIV4:
        freq /= 4UL;
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	089b      	lsrs	r3, r3, #2
 8002e68:	60fb      	str	r3, [r7, #12]
        break;
 8002e6a:	e064      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
        break;
    }
  }
  else
  {
    freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
 8002e6c:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8002e70:	f04f 0100 	mov.w	r1, #0
 8002e74:	f006 f86a 	bl	8008f4c <HAL_RCCEx_GetPeriphCLKFreq>
 8002e78:	60f8      	str	r0, [r7, #12]
    switch (hadc->Init.ClockPrescaler)
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	685b      	ldr	r3, [r3, #4]
 8002e7e:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 8002e82:	d051      	beq.n	8002f28 <ADC_ConfigureBoostMode+0x13c>
 8002e84:	f5b3 1f30 	cmp.w	r3, #2883584	; 0x2c0000
 8002e88:	d854      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002e8a:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 8002e8e:	d047      	beq.n	8002f20 <ADC_ConfigureBoostMode+0x134>
 8002e90:	f5b3 1f20 	cmp.w	r3, #2621440	; 0x280000
 8002e94:	d84e      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002e96:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 8002e9a:	d03d      	beq.n	8002f18 <ADC_ConfigureBoostMode+0x12c>
 8002e9c:	f5b3 1f10 	cmp.w	r3, #2359296	; 0x240000
 8002ea0:	d848      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002ea2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8002ea6:	d033      	beq.n	8002f10 <ADC_ConfigureBoostMode+0x124>
 8002ea8:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8002eac:	d842      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002eae:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8002eb2:	d029      	beq.n	8002f08 <ADC_ConfigureBoostMode+0x11c>
 8002eb4:	f5b3 1fe0 	cmp.w	r3, #1835008	; 0x1c0000
 8002eb8:	d83c      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002eba:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 8002ebe:	d01a      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ec0:	f5b3 1fc0 	cmp.w	r3, #1572864	; 0x180000
 8002ec4:	d836      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002ec6:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8002eca:	d014      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ecc:	f5b3 1fa0 	cmp.w	r3, #1310720	; 0x140000
 8002ed0:	d830      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002ed2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002ed6:	d00e      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ed8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8002edc:	d82a      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002ede:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8002ee2:	d008      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ee4:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8002ee8:	d824      	bhi.n	8002f34 <ADC_ConfigureBoostMode+0x148>
 8002eea:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8002eee:	d002      	beq.n	8002ef6 <ADC_ConfigureBoostMode+0x10a>
 8002ef0:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 8002ef4:	d11e      	bne.n	8002f34 <ADC_ConfigureBoostMode+0x148>
      case ADC_CLOCK_ASYNC_DIV4:
      case ADC_CLOCK_ASYNC_DIV6:
      case ADC_CLOCK_ASYNC_DIV8:
      case ADC_CLOCK_ASYNC_DIV10:
      case ADC_CLOCK_ASYNC_DIV12:
        freq /= ((hadc->Init.ClockPrescaler >> ADC_CCR_PRESC_Pos) << 1UL);
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	685b      	ldr	r3, [r3, #4]
 8002efa:	0c9b      	lsrs	r3, r3, #18
 8002efc:	005b      	lsls	r3, r3, #1
 8002efe:	68fa      	ldr	r2, [r7, #12]
 8002f00:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f04:	60fb      	str	r3, [r7, #12]
        break;
 8002f06:	e016      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV16:
        freq /= 16UL;
 8002f08:	68fb      	ldr	r3, [r7, #12]
 8002f0a:	091b      	lsrs	r3, r3, #4
 8002f0c:	60fb      	str	r3, [r7, #12]
        break;
 8002f0e:	e012      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV32:
        freq /= 32UL;
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	095b      	lsrs	r3, r3, #5
 8002f14:	60fb      	str	r3, [r7, #12]
        break;
 8002f16:	e00e      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV64:
        freq /= 64UL;
 8002f18:	68fb      	ldr	r3, [r7, #12]
 8002f1a:	099b      	lsrs	r3, r3, #6
 8002f1c:	60fb      	str	r3, [r7, #12]
        break;
 8002f1e:	e00a      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV128:
        freq /= 128UL;
 8002f20:	68fb      	ldr	r3, [r7, #12]
 8002f22:	09db      	lsrs	r3, r3, #7
 8002f24:	60fb      	str	r3, [r7, #12]
        break;
 8002f26:	e006      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      case ADC_CLOCK_ASYNC_DIV256:
        freq /= 256UL;
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	0a1b      	lsrs	r3, r3, #8
 8002f2c:	60fb      	str	r3, [r7, #12]
        break;
 8002f2e:	e002      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
        break;
 8002f30:	bf00      	nop
 8002f32:	e000      	b.n	8002f36 <ADC_ConfigureBoostMode+0x14a>
      default:
        break;
 8002f34:	bf00      	nop
    }
  }

#if defined(ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
  freq /= 2U;
 8002f36:	68fb      	ldr	r3, [r7, #12]
 8002f38:	085b      	lsrs	r3, r3, #1
 8002f3a:	60fb      	str	r3, [r7, #12]
  if (freq <= 6250000UL)
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	4a1f      	ldr	r2, [pc, #124]	; (8002fbc <ADC_ConfigureBoostMode+0x1d0>)
 8002f40:	4293      	cmp	r3, r2
 8002f42:	d808      	bhi.n	8002f56 <ADC_ConfigureBoostMode+0x16a>
  {
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	689a      	ldr	r2, [r3, #8]
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8002f52:	609a      	str	r2, [r3, #8]
    {
      MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
    }
  }
#endif /* ADC_VER_V5_3 */
}
 8002f54:	e025      	b.n	8002fa2 <ADC_ConfigureBoostMode+0x1b6>
  else if (freq <= 12500000UL)
 8002f56:	68fb      	ldr	r3, [r7, #12]
 8002f58:	4a19      	ldr	r2, [pc, #100]	; (8002fc0 <ADC_ConfigureBoostMode+0x1d4>)
 8002f5a:	4293      	cmp	r3, r2
 8002f5c:	d80a      	bhi.n	8002f74 <ADC_ConfigureBoostMode+0x188>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	689b      	ldr	r3, [r3, #8]
 8002f64:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002f70:	609a      	str	r2, [r3, #8]
}
 8002f72:	e016      	b.n	8002fa2 <ADC_ConfigureBoostMode+0x1b6>
  else if (freq <= 25000000UL)
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	4a13      	ldr	r2, [pc, #76]	; (8002fc4 <ADC_ConfigureBoostMode+0x1d8>)
 8002f78:	4293      	cmp	r3, r2
 8002f7a:	d80a      	bhi.n	8002f92 <ADC_ConfigureBoostMode+0x1a6>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	681b      	ldr	r3, [r3, #0]
 8002f80:	689b      	ldr	r3, [r3, #8]
 8002f82:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002f8e:	609a      	str	r2, [r3, #8]
}
 8002f90:	e007      	b.n	8002fa2 <ADC_ConfigureBoostMode+0x1b6>
    MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	689a      	ldr	r2, [r3, #8]
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	681b      	ldr	r3, [r3, #0]
 8002f9c:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8002fa0:	609a      	str	r2, [r3, #8]
}
 8002fa2:	bf00      	nop
 8002fa4:	3710      	adds	r7, #16
 8002fa6:	46bd      	mov	sp, r7
 8002fa8:	bd80      	pop	{r7, pc}
 8002faa:	bf00      	nop
 8002fac:	40022000 	.word	0x40022000
 8002fb0:	40022100 	.word	0x40022100
 8002fb4:	40022300 	.word	0x40022300
 8002fb8:	58026300 	.word	0x58026300
 8002fbc:	005f5e10 	.word	0x005f5e10
 8002fc0:	00bebc20 	.word	0x00bebc20
 8002fc4:	017d7840 	.word	0x017d7840

08002fc8 <LL_ADC_IsEnabled>:
{
 8002fc8:	b480      	push	{r7}
 8002fca:	b083      	sub	sp, #12
 8002fcc:	af00      	add	r7, sp, #0
 8002fce:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	689b      	ldr	r3, [r3, #8]
 8002fd4:	f003 0301 	and.w	r3, r3, #1
 8002fd8:	2b01      	cmp	r3, #1
 8002fda:	d101      	bne.n	8002fe0 <LL_ADC_IsEnabled+0x18>
 8002fdc:	2301      	movs	r3, #1
 8002fde:	e000      	b.n	8002fe2 <LL_ADC_IsEnabled+0x1a>
 8002fe0:	2300      	movs	r3, #0
}
 8002fe2:	4618      	mov	r0, r3
 8002fe4:	370c      	adds	r7, #12
 8002fe6:	46bd      	mov	sp, r7
 8002fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fec:	4770      	bx	lr

08002fee <LL_ADC_REG_IsConversionOngoing>:
{
 8002fee:	b480      	push	{r7}
 8002ff0:	b083      	sub	sp, #12
 8002ff2:	af00      	add	r7, sp, #0
 8002ff4:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	f003 0304 	and.w	r3, r3, #4
 8002ffe:	2b04      	cmp	r3, #4
 8003000:	d101      	bne.n	8003006 <LL_ADC_REG_IsConversionOngoing+0x18>
 8003002:	2301      	movs	r3, #1
 8003004:	e000      	b.n	8003008 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003006:	2300      	movs	r3, #0
}
 8003008:	4618      	mov	r0, r3
 800300a:	370c      	adds	r7, #12
 800300c:	46bd      	mov	sp, r7
 800300e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003012:	4770      	bx	lr

08003014 <HAL_ADCEx_MultiModeConfigChannel>:
  * @param hadc Master ADC handle
  * @param multimode Structure of ADC multimode configuration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *multimode)
{
 8003014:	b590      	push	{r4, r7, lr}
 8003016:	b0a3      	sub	sp, #140	; 0x8c
 8003018:	af00      	add	r7, sp, #0
 800301a:	6078      	str	r0, [r7, #4]
 800301c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 800301e:	2300      	movs	r3, #0
 8003020:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
    assert_param(IS_ADC_DUAL_DATA_MODE(multimode->DualModeData));
    assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 800302a:	2b01      	cmp	r3, #1
 800302c:	d101      	bne.n	8003032 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 800302e:	2302      	movs	r3, #2
 8003030:	e0c1      	b.n	80031b6 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	2201      	movs	r2, #1
 8003036:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  tmphadcSlave.State = HAL_ADC_STATE_RESET;
 800303a:	2300      	movs	r3, #0
 800303c:	66fb      	str	r3, [r7, #108]	; 0x6c
  tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 800303e:	2300      	movs	r3, #0
 8003040:	673b      	str	r3, [r7, #112]	; 0x70

  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	4a5e      	ldr	r2, [pc, #376]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003048:	4293      	cmp	r3, r2
 800304a:	d102      	bne.n	8003052 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 800304c:	4b5d      	ldr	r3, [pc, #372]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800304e:	60fb      	str	r3, [r7, #12]
 8003050:	e001      	b.n	8003056 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8003052:	2300      	movs	r3, #0
 8003054:	60fb      	str	r3, [r7, #12]

  if (tmphadcSlave.Instance == NULL)
 8003056:	68fb      	ldr	r3, [r7, #12]
 8003058:	2b00      	cmp	r3, #0
 800305a:	d10b      	bne.n	8003074 <HAL_ADCEx_MultiModeConfigChannel+0x60>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003060:	f043 0220 	orr.w	r2, r3, #32
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	661a      	str	r2, [r3, #96]	; 0x60

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	2200      	movs	r2, #0
 800306c:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    return HAL_ERROR;
 8003070:	2301      	movs	r3, #1
 8003072:	e0a0      	b.n	80031b6 <HAL_ADCEx_MultiModeConfigChannel+0x1a2>

  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Multimode DATA Format configuration                                   */
  tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	4618      	mov	r0, r3
 8003078:	f7ff ffb9 	bl	8002fee <LL_ADC_REG_IsConversionOngoing>
 800307c:	f8c7 0080 	str.w	r0, [r7, #128]	; 0x80
  if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	681b      	ldr	r3, [r3, #0]
 8003084:	4618      	mov	r0, r3
 8003086:	f7ff ffb2 	bl	8002fee <LL_ADC_REG_IsConversionOngoing>
 800308a:	4603      	mov	r3, r0
 800308c:	2b00      	cmp	r3, #0
 800308e:	f040 8081 	bne.w	8003194 <HAL_ADCEx_MultiModeConfigChannel+0x180>
      && (tmphadcSlave_conversion_on_going == 0UL))
 8003092:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8003096:	2b00      	cmp	r3, #0
 8003098:	d17c      	bne.n	8003194 <HAL_ADCEx_MultiModeConfigChannel+0x180>
  {
    /* Pointer to the common control register */
    tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	4a48      	ldr	r2, [pc, #288]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80030a0:	4293      	cmp	r3, r2
 80030a2:	d004      	beq.n	80030ae <HAL_ADCEx_MultiModeConfigChannel+0x9a>
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	4a46      	ldr	r2, [pc, #280]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80030aa:	4293      	cmp	r3, r2
 80030ac:	d101      	bne.n	80030b2 <HAL_ADCEx_MultiModeConfigChannel+0x9e>
 80030ae:	4b46      	ldr	r3, [pc, #280]	; (80031c8 <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 80030b0:	e000      	b.n	80030b4 <HAL_ADCEx_MultiModeConfigChannel+0xa0>
 80030b2:	4b46      	ldr	r3, [pc, #280]	; (80031cc <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 80030b4:	67fb      	str	r3, [r7, #124]	; 0x7c

    /* If multimode is selected, configure all multimode parameters.          */
    /* Otherwise, reset multimode parameters (can be used in case of          */
    /* transition from multimode to independent mode).                        */
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	d039      	beq.n	8003132 <HAL_ADCEx_MultiModeConfigChannel+0x11e>
    {
      MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DAMDF, multimode->DualModeData);
 80030be:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80030c0:	689b      	ldr	r3, [r3, #8]
 80030c2:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80030c6:	683b      	ldr	r3, [r7, #0]
 80030c8:	685b      	ldr	r3, [r3, #4]
 80030ca:	431a      	orrs	r2, r3
 80030cc:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80030ce:	609a      	str	r2, [r3, #8]
      /*      from 1 to 8 clock cycles for 12 bits                              */
      /*      from 1 to 6 clock cycles for 10 and 8 bits                        */
      /*    If a higher delay is selected, it will be clipped to maximum delay  */
      /*    range                                                               */

      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	4a3a      	ldr	r2, [pc, #232]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80030d6:	4293      	cmp	r3, r2
 80030d8:	d004      	beq.n	80030e4 <HAL_ADCEx_MultiModeConfigChannel+0xd0>
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	4a39      	ldr	r2, [pc, #228]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80030e0:	4293      	cmp	r3, r2
 80030e2:	d10e      	bne.n	8003102 <HAL_ADCEx_MultiModeConfigChannel+0xee>
 80030e4:	4836      	ldr	r0, [pc, #216]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 80030e6:	f7ff ff6f 	bl	8002fc8 <LL_ADC_IsEnabled>
 80030ea:	4604      	mov	r4, r0
 80030ec:	4835      	ldr	r0, [pc, #212]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 80030ee:	f7ff ff6b 	bl	8002fc8 <LL_ADC_IsEnabled>
 80030f2:	4603      	mov	r3, r0
 80030f4:	4323      	orrs	r3, r4
 80030f6:	2b00      	cmp	r3, #0
 80030f8:	bf0c      	ite	eq
 80030fa:	2301      	moveq	r3, #1
 80030fc:	2300      	movne	r3, #0
 80030fe:	b2db      	uxtb	r3, r3
 8003100:	e008      	b.n	8003114 <HAL_ADCEx_MultiModeConfigChannel+0x100>
 8003102:	4833      	ldr	r0, [pc, #204]	; (80031d0 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 8003104:	f7ff ff60 	bl	8002fc8 <LL_ADC_IsEnabled>
 8003108:	4603      	mov	r3, r0
 800310a:	2b00      	cmp	r3, #0
 800310c:	bf0c      	ite	eq
 800310e:	2301      	moveq	r3, #1
 8003110:	2300      	movne	r3, #0
 8003112:	b2db      	uxtb	r3, r3
 8003114:	2b00      	cmp	r3, #0
 8003116:	d047      	beq.n	80031a8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
      {
        MODIFY_REG(tmpADC_Common->CCR,
 8003118:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800311a:	689a      	ldr	r2, [r3, #8]
 800311c:	4b2d      	ldr	r3, [pc, #180]	; (80031d4 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 800311e:	4013      	ands	r3, r2
 8003120:	683a      	ldr	r2, [r7, #0]
 8003122:	6811      	ldr	r1, [r2, #0]
 8003124:	683a      	ldr	r2, [r7, #0]
 8003126:	6892      	ldr	r2, [r2, #8]
 8003128:	430a      	orrs	r2, r1
 800312a:	431a      	orrs	r2, r3
 800312c:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800312e:	609a      	str	r2, [r3, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003130:	e03a      	b.n	80031a8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
                  );
      }
    }
    else /* ADC_MODE_INDEPENDENT */
    {
      CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF);
 8003132:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8003134:	689b      	ldr	r3, [r3, #8]
 8003136:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 800313a:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800313c:	609a      	str	r2, [r3, #8]

      /* Parameters that can be updated only when ADC is disabled:                */
      /*  - Multimode mode selection                                              */
      /*  - Multimode delay                                                       */
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	4a1f      	ldr	r2, [pc, #124]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003144:	4293      	cmp	r3, r2
 8003146:	d004      	beq.n	8003152 <HAL_ADCEx_MultiModeConfigChannel+0x13e>
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	4a1d      	ldr	r2, [pc, #116]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800314e:	4293      	cmp	r3, r2
 8003150:	d10e      	bne.n	8003170 <HAL_ADCEx_MultiModeConfigChannel+0x15c>
 8003152:	481b      	ldr	r0, [pc, #108]	; (80031c0 <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003154:	f7ff ff38 	bl	8002fc8 <LL_ADC_IsEnabled>
 8003158:	4604      	mov	r4, r0
 800315a:	481a      	ldr	r0, [pc, #104]	; (80031c4 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800315c:	f7ff ff34 	bl	8002fc8 <LL_ADC_IsEnabled>
 8003160:	4603      	mov	r3, r0
 8003162:	4323      	orrs	r3, r4
 8003164:	2b00      	cmp	r3, #0
 8003166:	bf0c      	ite	eq
 8003168:	2301      	moveq	r3, #1
 800316a:	2300      	movne	r3, #0
 800316c:	b2db      	uxtb	r3, r3
 800316e:	e008      	b.n	8003182 <HAL_ADCEx_MultiModeConfigChannel+0x16e>
 8003170:	4817      	ldr	r0, [pc, #92]	; (80031d0 <HAL_ADCEx_MultiModeConfigChannel+0x1bc>)
 8003172:	f7ff ff29 	bl	8002fc8 <LL_ADC_IsEnabled>
 8003176:	4603      	mov	r3, r0
 8003178:	2b00      	cmp	r3, #0
 800317a:	bf0c      	ite	eq
 800317c:	2301      	moveq	r3, #1
 800317e:	2300      	movne	r3, #0
 8003180:	b2db      	uxtb	r3, r3
 8003182:	2b00      	cmp	r3, #0
 8003184:	d010      	beq.n	80031a8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
      {
        CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 8003186:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8003188:	689a      	ldr	r2, [r3, #8]
 800318a:	4b12      	ldr	r3, [pc, #72]	; (80031d4 <HAL_ADCEx_MultiModeConfigChannel+0x1c0>)
 800318c:	4013      	ands	r3, r2
 800318e:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8003190:	6093      	str	r3, [r2, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003192:	e009      	b.n	80031a8 <HAL_ADCEx_MultiModeConfigChannel+0x194>
  /* If one of the ADC sharing the same common group is enabled, no update    */
  /* could be done on neither of the multimode structure parameters.          */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003198:	f043 0220 	orr.w	r2, r3, #32
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 80031a0:	2301      	movs	r3, #1
 80031a2:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 80031a6:	e000      	b.n	80031aa <HAL_ADCEx_MultiModeConfigChannel+0x196>
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 80031a8:	bf00      	nop
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	2200      	movs	r2, #0
 80031ae:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Return function status */
  return tmp_hal_status;
 80031b2:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
}
 80031b6:	4618      	mov	r0, r3
 80031b8:	378c      	adds	r7, #140	; 0x8c
 80031ba:	46bd      	mov	sp, r7
 80031bc:	bd90      	pop	{r4, r7, pc}
 80031be:	bf00      	nop
 80031c0:	40022000 	.word	0x40022000
 80031c4:	40022100 	.word	0x40022100
 80031c8:	40022300 	.word	0x40022300
 80031cc:	58026300 	.word	0x58026300
 80031d0:	58026000 	.word	0x58026000
 80031d4:	fffff0e0 	.word	0xfffff0e0

080031d8 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80031d8:	b480      	push	{r7}
 80031da:	b085      	sub	sp, #20
 80031dc:	af00      	add	r7, sp, #0
 80031de:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	f003 0307 	and.w	r3, r3, #7
 80031e6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80031e8:	4b0b      	ldr	r3, [pc, #44]	; (8003218 <__NVIC_SetPriorityGrouping+0x40>)
 80031ea:	68db      	ldr	r3, [r3, #12]
 80031ec:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80031ee:	68ba      	ldr	r2, [r7, #8]
 80031f0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80031f4:	4013      	ands	r3, r2
 80031f6:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80031fc:	68bb      	ldr	r3, [r7, #8]
 80031fe:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8003200:	4b06      	ldr	r3, [pc, #24]	; (800321c <__NVIC_SetPriorityGrouping+0x44>)
 8003202:	4313      	orrs	r3, r2
 8003204:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003206:	4a04      	ldr	r2, [pc, #16]	; (8003218 <__NVIC_SetPriorityGrouping+0x40>)
 8003208:	68bb      	ldr	r3, [r7, #8]
 800320a:	60d3      	str	r3, [r2, #12]
}
 800320c:	bf00      	nop
 800320e:	3714      	adds	r7, #20
 8003210:	46bd      	mov	sp, r7
 8003212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003216:	4770      	bx	lr
 8003218:	e000ed00 	.word	0xe000ed00
 800321c:	05fa0000 	.word	0x05fa0000

08003220 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003220:	b480      	push	{r7}
 8003222:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003224:	4b04      	ldr	r3, [pc, #16]	; (8003238 <__NVIC_GetPriorityGrouping+0x18>)
 8003226:	68db      	ldr	r3, [r3, #12]
 8003228:	0a1b      	lsrs	r3, r3, #8
 800322a:	f003 0307 	and.w	r3, r3, #7
}
 800322e:	4618      	mov	r0, r3
 8003230:	46bd      	mov	sp, r7
 8003232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003236:	4770      	bx	lr
 8003238:	e000ed00 	.word	0xe000ed00

0800323c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800323c:	b480      	push	{r7}
 800323e:	b083      	sub	sp, #12
 8003240:	af00      	add	r7, sp, #0
 8003242:	4603      	mov	r3, r0
 8003244:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8003246:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800324a:	2b00      	cmp	r3, #0
 800324c:	db0b      	blt.n	8003266 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800324e:	88fb      	ldrh	r3, [r7, #6]
 8003250:	f003 021f 	and.w	r2, r3, #31
 8003254:	4907      	ldr	r1, [pc, #28]	; (8003274 <__NVIC_EnableIRQ+0x38>)
 8003256:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800325a:	095b      	lsrs	r3, r3, #5
 800325c:	2001      	movs	r0, #1
 800325e:	fa00 f202 	lsl.w	r2, r0, r2
 8003262:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8003266:	bf00      	nop
 8003268:	370c      	adds	r7, #12
 800326a:	46bd      	mov	sp, r7
 800326c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003270:	4770      	bx	lr
 8003272:	bf00      	nop
 8003274:	e000e100 	.word	0xe000e100

08003278 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003278:	b480      	push	{r7}
 800327a:	b083      	sub	sp, #12
 800327c:	af00      	add	r7, sp, #0
 800327e:	4603      	mov	r3, r0
 8003280:	6039      	str	r1, [r7, #0]
 8003282:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8003284:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003288:	2b00      	cmp	r3, #0
 800328a:	db0a      	blt.n	80032a2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800328c:	683b      	ldr	r3, [r7, #0]
 800328e:	b2da      	uxtb	r2, r3
 8003290:	490c      	ldr	r1, [pc, #48]	; (80032c4 <__NVIC_SetPriority+0x4c>)
 8003292:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003296:	0112      	lsls	r2, r2, #4
 8003298:	b2d2      	uxtb	r2, r2
 800329a:	440b      	add	r3, r1
 800329c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80032a0:	e00a      	b.n	80032b8 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80032a2:	683b      	ldr	r3, [r7, #0]
 80032a4:	b2da      	uxtb	r2, r3
 80032a6:	4908      	ldr	r1, [pc, #32]	; (80032c8 <__NVIC_SetPriority+0x50>)
 80032a8:	88fb      	ldrh	r3, [r7, #6]
 80032aa:	f003 030f 	and.w	r3, r3, #15
 80032ae:	3b04      	subs	r3, #4
 80032b0:	0112      	lsls	r2, r2, #4
 80032b2:	b2d2      	uxtb	r2, r2
 80032b4:	440b      	add	r3, r1
 80032b6:	761a      	strb	r2, [r3, #24]
}
 80032b8:	bf00      	nop
 80032ba:	370c      	adds	r7, #12
 80032bc:	46bd      	mov	sp, r7
 80032be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032c2:	4770      	bx	lr
 80032c4:	e000e100 	.word	0xe000e100
 80032c8:	e000ed00 	.word	0xe000ed00

080032cc <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80032cc:	b480      	push	{r7}
 80032ce:	b089      	sub	sp, #36	; 0x24
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	60f8      	str	r0, [r7, #12]
 80032d4:	60b9      	str	r1, [r7, #8]
 80032d6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80032d8:	68fb      	ldr	r3, [r7, #12]
 80032da:	f003 0307 	and.w	r3, r3, #7
 80032de:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80032e0:	69fb      	ldr	r3, [r7, #28]
 80032e2:	f1c3 0307 	rsb	r3, r3, #7
 80032e6:	2b04      	cmp	r3, #4
 80032e8:	bf28      	it	cs
 80032ea:	2304      	movcs	r3, #4
 80032ec:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80032ee:	69fb      	ldr	r3, [r7, #28]
 80032f0:	3304      	adds	r3, #4
 80032f2:	2b06      	cmp	r3, #6
 80032f4:	d902      	bls.n	80032fc <NVIC_EncodePriority+0x30>
 80032f6:	69fb      	ldr	r3, [r7, #28]
 80032f8:	3b03      	subs	r3, #3
 80032fa:	e000      	b.n	80032fe <NVIC_EncodePriority+0x32>
 80032fc:	2300      	movs	r3, #0
 80032fe:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003300:	f04f 32ff 	mov.w	r2, #4294967295
 8003304:	69bb      	ldr	r3, [r7, #24]
 8003306:	fa02 f303 	lsl.w	r3, r2, r3
 800330a:	43da      	mvns	r2, r3
 800330c:	68bb      	ldr	r3, [r7, #8]
 800330e:	401a      	ands	r2, r3
 8003310:	697b      	ldr	r3, [r7, #20]
 8003312:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003314:	f04f 31ff 	mov.w	r1, #4294967295
 8003318:	697b      	ldr	r3, [r7, #20]
 800331a:	fa01 f303 	lsl.w	r3, r1, r3
 800331e:	43d9      	mvns	r1, r3
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003324:	4313      	orrs	r3, r2
         );
}
 8003326:	4618      	mov	r0, r3
 8003328:	3724      	adds	r7, #36	; 0x24
 800332a:	46bd      	mov	sp, r7
 800332c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003330:	4770      	bx	lr
	...

08003334 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003334:	b580      	push	{r7, lr}
 8003336:	b082      	sub	sp, #8
 8003338:	af00      	add	r7, sp, #0
 800333a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	3b01      	subs	r3, #1
 8003340:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003344:	d301      	bcc.n	800334a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003346:	2301      	movs	r3, #1
 8003348:	e00f      	b.n	800336a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800334a:	4a0a      	ldr	r2, [pc, #40]	; (8003374 <SysTick_Config+0x40>)
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	3b01      	subs	r3, #1
 8003350:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003352:	210f      	movs	r1, #15
 8003354:	f04f 30ff 	mov.w	r0, #4294967295
 8003358:	f7ff ff8e 	bl	8003278 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800335c:	4b05      	ldr	r3, [pc, #20]	; (8003374 <SysTick_Config+0x40>)
 800335e:	2200      	movs	r2, #0
 8003360:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003362:	4b04      	ldr	r3, [pc, #16]	; (8003374 <SysTick_Config+0x40>)
 8003364:	2207      	movs	r2, #7
 8003366:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003368:	2300      	movs	r3, #0
}
 800336a:	4618      	mov	r0, r3
 800336c:	3708      	adds	r7, #8
 800336e:	46bd      	mov	sp, r7
 8003370:	bd80      	pop	{r7, pc}
 8003372:	bf00      	nop
 8003374:	e000e010 	.word	0xe000e010

08003378 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003378:	b580      	push	{r7, lr}
 800337a:	b082      	sub	sp, #8
 800337c:	af00      	add	r7, sp, #0
 800337e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003380:	6878      	ldr	r0, [r7, #4]
 8003382:	f7ff ff29 	bl	80031d8 <__NVIC_SetPriorityGrouping>
}
 8003386:	bf00      	nop
 8003388:	3708      	adds	r7, #8
 800338a:	46bd      	mov	sp, r7
 800338c:	bd80      	pop	{r7, pc}

0800338e <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800338e:	b580      	push	{r7, lr}
 8003390:	b086      	sub	sp, #24
 8003392:	af00      	add	r7, sp, #0
 8003394:	4603      	mov	r3, r0
 8003396:	60b9      	str	r1, [r7, #8]
 8003398:	607a      	str	r2, [r7, #4]
 800339a:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 800339c:	f7ff ff40 	bl	8003220 <__NVIC_GetPriorityGrouping>
 80033a0:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80033a2:	687a      	ldr	r2, [r7, #4]
 80033a4:	68b9      	ldr	r1, [r7, #8]
 80033a6:	6978      	ldr	r0, [r7, #20]
 80033a8:	f7ff ff90 	bl	80032cc <NVIC_EncodePriority>
 80033ac:	4602      	mov	r2, r0
 80033ae:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80033b2:	4611      	mov	r1, r2
 80033b4:	4618      	mov	r0, r3
 80033b6:	f7ff ff5f 	bl	8003278 <__NVIC_SetPriority>
}
 80033ba:	bf00      	nop
 80033bc:	3718      	adds	r7, #24
 80033be:	46bd      	mov	sp, r7
 80033c0:	bd80      	pop	{r7, pc}

080033c2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80033c2:	b580      	push	{r7, lr}
 80033c4:	b082      	sub	sp, #8
 80033c6:	af00      	add	r7, sp, #0
 80033c8:	4603      	mov	r3, r0
 80033ca:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80033cc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80033d0:	4618      	mov	r0, r3
 80033d2:	f7ff ff33 	bl	800323c <__NVIC_EnableIRQ>
}
 80033d6:	bf00      	nop
 80033d8:	3708      	adds	r7, #8
 80033da:	46bd      	mov	sp, r7
 80033dc:	bd80      	pop	{r7, pc}

080033de <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80033de:	b580      	push	{r7, lr}
 80033e0:	b082      	sub	sp, #8
 80033e2:	af00      	add	r7, sp, #0
 80033e4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80033e6:	6878      	ldr	r0, [r7, #4]
 80033e8:	f7ff ffa4 	bl	8003334 <SysTick_Config>
 80033ec:	4603      	mov	r3, r0
}
 80033ee:	4618      	mov	r0, r3
 80033f0:	3708      	adds	r7, #8
 80033f2:	46bd      	mov	sp, r7
 80033f4:	bd80      	pop	{r7, pc}
	...

080033f8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80033f8:	b580      	push	{r7, lr}
 80033fa:	b082      	sub	sp, #8
 80033fc:	af00      	add	r7, sp, #0
 80033fe:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	2b00      	cmp	r3, #0
 8003404:	d101      	bne.n	800340a <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003406:	2301      	movs	r3, #1
 8003408:	e054      	b.n	80034b4 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	7f5b      	ldrb	r3, [r3, #29]
 800340e:	b2db      	uxtb	r3, r3
 8003410:	2b00      	cmp	r3, #0
 8003412:	d105      	bne.n	8003420 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	2200      	movs	r2, #0
 8003418:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800341a:	6878      	ldr	r0, [r7, #4]
 800341c:	f7fd fe68 	bl	80010f0 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	2202      	movs	r2, #2
 8003424:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	791b      	ldrb	r3, [r3, #4]
 800342a:	2b00      	cmp	r3, #0
 800342c:	d10c      	bne.n	8003448 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	4a22      	ldr	r2, [pc, #136]	; (80034bc <HAL_CRC_Init+0xc4>)
 8003434:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	689a      	ldr	r2, [r3, #8]
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	f022 0218 	bic.w	r2, r2, #24
 8003444:	609a      	str	r2, [r3, #8]
 8003446:	e00c      	b.n	8003462 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	6899      	ldr	r1, [r3, #8]
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	68db      	ldr	r3, [r3, #12]
 8003450:	461a      	mov	r2, r3
 8003452:	6878      	ldr	r0, [r7, #4]
 8003454:	f000 f834 	bl	80034c0 <HAL_CRCEx_Polynomial_Set>
 8003458:	4603      	mov	r3, r0
 800345a:	2b00      	cmp	r3, #0
 800345c:	d001      	beq.n	8003462 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800345e:	2301      	movs	r3, #1
 8003460:	e028      	b.n	80034b4 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	795b      	ldrb	r3, [r3, #5]
 8003466:	2b00      	cmp	r3, #0
 8003468:	d105      	bne.n	8003476 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	f04f 32ff 	mov.w	r2, #4294967295
 8003472:	611a      	str	r2, [r3, #16]
 8003474:	e004      	b.n	8003480 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	687a      	ldr	r2, [r7, #4]
 800347c:	6912      	ldr	r2, [r2, #16]
 800347e:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	689b      	ldr	r3, [r3, #8]
 8003486:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	695a      	ldr	r2, [r3, #20]
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	430a      	orrs	r2, r1
 8003494:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	689b      	ldr	r3, [r3, #8]
 800349c:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	699a      	ldr	r2, [r3, #24]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	430a      	orrs	r2, r1
 80034aa:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	2201      	movs	r2, #1
 80034b0:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 80034b2:	2300      	movs	r3, #0
}
 80034b4:	4618      	mov	r0, r3
 80034b6:	3708      	adds	r7, #8
 80034b8:	46bd      	mov	sp, r7
 80034ba:	bd80      	pop	{r7, pc}
 80034bc:	04c11db7 	.word	0x04c11db7

080034c0 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80034c0:	b480      	push	{r7}
 80034c2:	b087      	sub	sp, #28
 80034c4:	af00      	add	r7, sp, #0
 80034c6:	60f8      	str	r0, [r7, #12]
 80034c8:	60b9      	str	r1, [r7, #8]
 80034ca:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80034cc:	2300      	movs	r3, #0
 80034ce:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80034d0:	231f      	movs	r3, #31
 80034d2:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 80034d4:	68bb      	ldr	r3, [r7, #8]
 80034d6:	f003 0301 	and.w	r3, r3, #1
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d102      	bne.n	80034e4 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 80034de:	2301      	movs	r3, #1
 80034e0:	75fb      	strb	r3, [r7, #23]
 80034e2:	e063      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80034e4:	bf00      	nop
 80034e6:	693b      	ldr	r3, [r7, #16]
 80034e8:	1e5a      	subs	r2, r3, #1
 80034ea:	613a      	str	r2, [r7, #16]
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d009      	beq.n	8003504 <HAL_CRCEx_Polynomial_Set+0x44>
 80034f0:	693b      	ldr	r3, [r7, #16]
 80034f2:	f003 031f 	and.w	r3, r3, #31
 80034f6:	68ba      	ldr	r2, [r7, #8]
 80034f8:	fa22 f303 	lsr.w	r3, r2, r3
 80034fc:	f003 0301 	and.w	r3, r3, #1
 8003500:	2b00      	cmp	r3, #0
 8003502:	d0f0      	beq.n	80034e6 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	2b18      	cmp	r3, #24
 8003508:	d846      	bhi.n	8003598 <HAL_CRCEx_Polynomial_Set+0xd8>
 800350a:	a201      	add	r2, pc, #4	; (adr r2, 8003510 <HAL_CRCEx_Polynomial_Set+0x50>)
 800350c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003510:	0800359f 	.word	0x0800359f
 8003514:	08003599 	.word	0x08003599
 8003518:	08003599 	.word	0x08003599
 800351c:	08003599 	.word	0x08003599
 8003520:	08003599 	.word	0x08003599
 8003524:	08003599 	.word	0x08003599
 8003528:	08003599 	.word	0x08003599
 800352c:	08003599 	.word	0x08003599
 8003530:	0800358d 	.word	0x0800358d
 8003534:	08003599 	.word	0x08003599
 8003538:	08003599 	.word	0x08003599
 800353c:	08003599 	.word	0x08003599
 8003540:	08003599 	.word	0x08003599
 8003544:	08003599 	.word	0x08003599
 8003548:	08003599 	.word	0x08003599
 800354c:	08003599 	.word	0x08003599
 8003550:	08003581 	.word	0x08003581
 8003554:	08003599 	.word	0x08003599
 8003558:	08003599 	.word	0x08003599
 800355c:	08003599 	.word	0x08003599
 8003560:	08003599 	.word	0x08003599
 8003564:	08003599 	.word	0x08003599
 8003568:	08003599 	.word	0x08003599
 800356c:	08003599 	.word	0x08003599
 8003570:	08003575 	.word	0x08003575
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8003574:	693b      	ldr	r3, [r7, #16]
 8003576:	2b06      	cmp	r3, #6
 8003578:	d913      	bls.n	80035a2 <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 800357a:	2301      	movs	r3, #1
 800357c:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800357e:	e010      	b.n	80035a2 <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8003580:	693b      	ldr	r3, [r7, #16]
 8003582:	2b07      	cmp	r3, #7
 8003584:	d90f      	bls.n	80035a6 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8003586:	2301      	movs	r3, #1
 8003588:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800358a:	e00c      	b.n	80035a6 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 800358c:	693b      	ldr	r3, [r7, #16]
 800358e:	2b0f      	cmp	r3, #15
 8003590:	d90b      	bls.n	80035aa <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 8003592:	2301      	movs	r3, #1
 8003594:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8003596:	e008      	b.n	80035aa <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8003598:	2301      	movs	r3, #1
 800359a:	75fb      	strb	r3, [r7, #23]
        break;
 800359c:	e006      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800359e:	bf00      	nop
 80035a0:	e004      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035a2:	bf00      	nop
 80035a4:	e002      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035a6:	bf00      	nop
 80035a8:	e000      	b.n	80035ac <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035aa:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 80035ac:	7dfb      	ldrb	r3, [r7, #23]
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d10d      	bne.n	80035ce <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 80035b2:	68fb      	ldr	r3, [r7, #12]
 80035b4:	681b      	ldr	r3, [r3, #0]
 80035b6:	68ba      	ldr	r2, [r7, #8]
 80035b8:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	689b      	ldr	r3, [r3, #8]
 80035c0:	f023 0118 	bic.w	r1, r3, #24
 80035c4:	68fb      	ldr	r3, [r7, #12]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	687a      	ldr	r2, [r7, #4]
 80035ca:	430a      	orrs	r2, r1
 80035cc:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 80035ce:	7dfb      	ldrb	r3, [r7, #23]
}
 80035d0:	4618      	mov	r0, r3
 80035d2:	371c      	adds	r7, #28
 80035d4:	46bd      	mov	sp, r7
 80035d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035da:	4770      	bx	lr

080035dc <HAL_DMA_Init>:
  * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80035dc:	b580      	push	{r7, lr}
 80035de:	b086      	sub	sp, #24
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	6078      	str	r0, [r7, #4]
  uint32_t registerValue;
  uint32_t tickstart = HAL_GetTick();
 80035e4:	f7fe fa54 	bl	8001a90 <HAL_GetTick>
 80035e8:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d101      	bne.n	80035f4 <HAL_DMA_Init+0x18>
  {
    return HAL_ERROR;
 80035f0:	2301      	movs	r3, #1
 80035f2:	e312      	b.n	8003c1a <HAL_DMA_Init+0x63e>
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	4a66      	ldr	r2, [pc, #408]	; (8003794 <HAL_DMA_Init+0x1b8>)
 80035fa:	4293      	cmp	r3, r2
 80035fc:	d04a      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	4a65      	ldr	r2, [pc, #404]	; (8003798 <HAL_DMA_Init+0x1bc>)
 8003604:	4293      	cmp	r3, r2
 8003606:	d045      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	4a63      	ldr	r2, [pc, #396]	; (800379c <HAL_DMA_Init+0x1c0>)
 800360e:	4293      	cmp	r3, r2
 8003610:	d040      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	4a62      	ldr	r2, [pc, #392]	; (80037a0 <HAL_DMA_Init+0x1c4>)
 8003618:	4293      	cmp	r3, r2
 800361a:	d03b      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	681b      	ldr	r3, [r3, #0]
 8003620:	4a60      	ldr	r2, [pc, #384]	; (80037a4 <HAL_DMA_Init+0x1c8>)
 8003622:	4293      	cmp	r3, r2
 8003624:	d036      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	4a5f      	ldr	r2, [pc, #380]	; (80037a8 <HAL_DMA_Init+0x1cc>)
 800362c:	4293      	cmp	r3, r2
 800362e:	d031      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	4a5d      	ldr	r2, [pc, #372]	; (80037ac <HAL_DMA_Init+0x1d0>)
 8003636:	4293      	cmp	r3, r2
 8003638:	d02c      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800363a:	687b      	ldr	r3, [r7, #4]
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	4a5c      	ldr	r2, [pc, #368]	; (80037b0 <HAL_DMA_Init+0x1d4>)
 8003640:	4293      	cmp	r3, r2
 8003642:	d027      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	4a5a      	ldr	r2, [pc, #360]	; (80037b4 <HAL_DMA_Init+0x1d8>)
 800364a:	4293      	cmp	r3, r2
 800364c:	d022      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	681b      	ldr	r3, [r3, #0]
 8003652:	4a59      	ldr	r2, [pc, #356]	; (80037b8 <HAL_DMA_Init+0x1dc>)
 8003654:	4293      	cmp	r3, r2
 8003656:	d01d      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	681b      	ldr	r3, [r3, #0]
 800365c:	4a57      	ldr	r2, [pc, #348]	; (80037bc <HAL_DMA_Init+0x1e0>)
 800365e:	4293      	cmp	r3, r2
 8003660:	d018      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	681b      	ldr	r3, [r3, #0]
 8003666:	4a56      	ldr	r2, [pc, #344]	; (80037c0 <HAL_DMA_Init+0x1e4>)
 8003668:	4293      	cmp	r3, r2
 800366a:	d013      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	4a54      	ldr	r2, [pc, #336]	; (80037c4 <HAL_DMA_Init+0x1e8>)
 8003672:	4293      	cmp	r3, r2
 8003674:	d00e      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	4a53      	ldr	r2, [pc, #332]	; (80037c8 <HAL_DMA_Init+0x1ec>)
 800367c:	4293      	cmp	r3, r2
 800367e:	d009      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	4a51      	ldr	r2, [pc, #324]	; (80037cc <HAL_DMA_Init+0x1f0>)
 8003686:	4293      	cmp	r3, r2
 8003688:	d004      	beq.n	8003694 <HAL_DMA_Init+0xb8>
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	4a50      	ldr	r2, [pc, #320]	; (80037d0 <HAL_DMA_Init+0x1f4>)
 8003690:	4293      	cmp	r3, r2
 8003692:	d101      	bne.n	8003698 <HAL_DMA_Init+0xbc>
 8003694:	2301      	movs	r3, #1
 8003696:	e000      	b.n	800369a <HAL_DMA_Init+0xbe>
 8003698:	2300      	movs	r3, #0
 800369a:	2b00      	cmp	r3, #0
 800369c:	f000 813c 	beq.w	8003918 <HAL_DMA_Init+0x33c>
      assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
      assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	2202      	movs	r2, #2
 80036a4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	2200      	movs	r2, #0
 80036ac:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	4a37      	ldr	r2, [pc, #220]	; (8003794 <HAL_DMA_Init+0x1b8>)
 80036b6:	4293      	cmp	r3, r2
 80036b8:	d04a      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	4a36      	ldr	r2, [pc, #216]	; (8003798 <HAL_DMA_Init+0x1bc>)
 80036c0:	4293      	cmp	r3, r2
 80036c2:	d045      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	4a34      	ldr	r2, [pc, #208]	; (800379c <HAL_DMA_Init+0x1c0>)
 80036ca:	4293      	cmp	r3, r2
 80036cc:	d040      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	4a33      	ldr	r2, [pc, #204]	; (80037a0 <HAL_DMA_Init+0x1c4>)
 80036d4:	4293      	cmp	r3, r2
 80036d6:	d03b      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	681b      	ldr	r3, [r3, #0]
 80036dc:	4a31      	ldr	r2, [pc, #196]	; (80037a4 <HAL_DMA_Init+0x1c8>)
 80036de:	4293      	cmp	r3, r2
 80036e0:	d036      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	4a30      	ldr	r2, [pc, #192]	; (80037a8 <HAL_DMA_Init+0x1cc>)
 80036e8:	4293      	cmp	r3, r2
 80036ea:	d031      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	4a2e      	ldr	r2, [pc, #184]	; (80037ac <HAL_DMA_Init+0x1d0>)
 80036f2:	4293      	cmp	r3, r2
 80036f4:	d02c      	beq.n	8003750 <HAL_DMA_Init+0x174>
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	4a2d      	ldr	r2, [pc, #180]	; (80037b0 <HAL_DMA_Init+0x1d4>)
 80036fc:	4293      	cmp	r3, r2
 80036fe:	d027      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	4a2b      	ldr	r2, [pc, #172]	; (80037b4 <HAL_DMA_Init+0x1d8>)
 8003706:	4293      	cmp	r3, r2
 8003708:	d022      	beq.n	8003750 <HAL_DMA_Init+0x174>
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	4a2a      	ldr	r2, [pc, #168]	; (80037b8 <HAL_DMA_Init+0x1dc>)
 8003710:	4293      	cmp	r3, r2
 8003712:	d01d      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	4a28      	ldr	r2, [pc, #160]	; (80037bc <HAL_DMA_Init+0x1e0>)
 800371a:	4293      	cmp	r3, r2
 800371c:	d018      	beq.n	8003750 <HAL_DMA_Init+0x174>
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	681b      	ldr	r3, [r3, #0]
 8003722:	4a27      	ldr	r2, [pc, #156]	; (80037c0 <HAL_DMA_Init+0x1e4>)
 8003724:	4293      	cmp	r3, r2
 8003726:	d013      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	4a25      	ldr	r2, [pc, #148]	; (80037c4 <HAL_DMA_Init+0x1e8>)
 800372e:	4293      	cmp	r3, r2
 8003730:	d00e      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	4a24      	ldr	r2, [pc, #144]	; (80037c8 <HAL_DMA_Init+0x1ec>)
 8003738:	4293      	cmp	r3, r2
 800373a:	d009      	beq.n	8003750 <HAL_DMA_Init+0x174>
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	4a22      	ldr	r2, [pc, #136]	; (80037cc <HAL_DMA_Init+0x1f0>)
 8003742:	4293      	cmp	r3, r2
 8003744:	d004      	beq.n	8003750 <HAL_DMA_Init+0x174>
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	4a21      	ldr	r2, [pc, #132]	; (80037d0 <HAL_DMA_Init+0x1f4>)
 800374c:	4293      	cmp	r3, r2
 800374e:	d108      	bne.n	8003762 <HAL_DMA_Init+0x186>
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	681a      	ldr	r2, [r3, #0]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	f022 0201 	bic.w	r2, r2, #1
 800375e:	601a      	str	r2, [r3, #0]
 8003760:	e007      	b.n	8003772 <HAL_DMA_Init+0x196>
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	681a      	ldr	r2, [r3, #0]
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	f022 0201 	bic.w	r2, r2, #1
 8003770:	601a      	str	r2, [r3, #0]

    /* Check if the DMA Stream is effectively disabled */
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8003772:	e02f      	b.n	80037d4 <HAL_DMA_Init+0x1f8>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003774:	f7fe f98c 	bl	8001a90 <HAL_GetTick>
 8003778:	4602      	mov	r2, r0
 800377a:	693b      	ldr	r3, [r7, #16]
 800377c:	1ad3      	subs	r3, r2, r3
 800377e:	2b05      	cmp	r3, #5
 8003780:	d928      	bls.n	80037d4 <HAL_DMA_Init+0x1f8>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	2220      	movs	r2, #32
 8003786:	655a      	str	r2, [r3, #84]	; 0x54

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_ERROR;
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	2203      	movs	r2, #3
 800378c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        return HAL_ERROR;
 8003790:	2301      	movs	r3, #1
 8003792:	e242      	b.n	8003c1a <HAL_DMA_Init+0x63e>
 8003794:	40020010 	.word	0x40020010
 8003798:	40020028 	.word	0x40020028
 800379c:	40020040 	.word	0x40020040
 80037a0:	40020058 	.word	0x40020058
 80037a4:	40020070 	.word	0x40020070
 80037a8:	40020088 	.word	0x40020088
 80037ac:	400200a0 	.word	0x400200a0
 80037b0:	400200b8 	.word	0x400200b8
 80037b4:	40020410 	.word	0x40020410
 80037b8:	40020428 	.word	0x40020428
 80037bc:	40020440 	.word	0x40020440
 80037c0:	40020458 	.word	0x40020458
 80037c4:	40020470 	.word	0x40020470
 80037c8:	40020488 	.word	0x40020488
 80037cc:	400204a0 	.word	0x400204a0
 80037d0:	400204b8 	.word	0x400204b8
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	f003 0301 	and.w	r3, r3, #1
 80037de:	2b00      	cmp	r3, #0
 80037e0:	d1c8      	bne.n	8003774 <HAL_DMA_Init+0x198>
      }
    }

    /* Get the CR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->CR;
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	617b      	str	r3, [r7, #20]

    /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
    registerValue &= ((uint32_t)~(DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80037ea:	697a      	ldr	r2, [r7, #20]
 80037ec:	4b83      	ldr	r3, [pc, #524]	; (80039fc <HAL_DMA_Init+0x420>)
 80037ee:	4013      	ands	r3, r2
 80037f0:	617b      	str	r3, [r7, #20]
                        DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                        DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                        DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

    /* Prepare the DMA Stream configuration */
    registerValue |=  hdma->Init.Direction           |
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	689a      	ldr	r2, [r3, #8]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	68db      	ldr	r3, [r3, #12]
    registerValue |=  hdma->Init.Direction           |
 80037fa:	431a      	orrs	r2, r3
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	691b      	ldr	r3, [r3, #16]
 8003800:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	695b      	ldr	r3, [r3, #20]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003806:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	699b      	ldr	r3, [r3, #24]
 800380c:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	69db      	ldr	r3, [r3, #28]
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003812:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	6a1b      	ldr	r3, [r3, #32]
 8003818:	4313      	orrs	r3, r2
    registerValue |=  hdma->Init.Direction           |
 800381a:	697a      	ldr	r2, [r7, #20]
 800381c:	4313      	orrs	r3, r2
 800381e:	617b      	str	r3, [r7, #20]

    /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003824:	2b04      	cmp	r3, #4
 8003826:	d107      	bne.n	8003838 <HAL_DMA_Init+0x25c>
    {
      /* Get memory burst and peripheral burst */
      registerValue |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003830:	4313      	orrs	r3, r2
 8003832:	697a      	ldr	r2, [r7, #20]
 8003834:	4313      	orrs	r3, r2
 8003836:	617b      	str	r3, [r7, #20]
                                    lock when transferring data to/from USART/UART */
#if (STM32H7_DEV_ID == 0x450UL)
    if((DBGMCU->IDCODE & 0xFFFF0000U) >= 0x20000000U)
    {
#endif /* STM32H7_DEV_ID == 0x450UL */
      if(IS_DMA_UART_USART_REQUEST(hdma->Init.Request) != 0U)
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	685b      	ldr	r3, [r3, #4]
 800383c:	2b28      	cmp	r3, #40	; 0x28
 800383e:	d903      	bls.n	8003848 <HAL_DMA_Init+0x26c>
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	685b      	ldr	r3, [r3, #4]
 8003844:	2b2e      	cmp	r3, #46	; 0x2e
 8003846:	d91f      	bls.n	8003888 <HAL_DMA_Init+0x2ac>
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	685b      	ldr	r3, [r3, #4]
 800384c:	2b3e      	cmp	r3, #62	; 0x3e
 800384e:	d903      	bls.n	8003858 <HAL_DMA_Init+0x27c>
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	685b      	ldr	r3, [r3, #4]
 8003854:	2b42      	cmp	r3, #66	; 0x42
 8003856:	d917      	bls.n	8003888 <HAL_DMA_Init+0x2ac>
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	685b      	ldr	r3, [r3, #4]
 800385c:	2b46      	cmp	r3, #70	; 0x46
 800385e:	d903      	bls.n	8003868 <HAL_DMA_Init+0x28c>
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	685b      	ldr	r3, [r3, #4]
 8003864:	2b48      	cmp	r3, #72	; 0x48
 8003866:	d90f      	bls.n	8003888 <HAL_DMA_Init+0x2ac>
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	685b      	ldr	r3, [r3, #4]
 800386c:	2b4e      	cmp	r3, #78	; 0x4e
 800386e:	d903      	bls.n	8003878 <HAL_DMA_Init+0x29c>
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	685b      	ldr	r3, [r3, #4]
 8003874:	2b52      	cmp	r3, #82	; 0x52
 8003876:	d907      	bls.n	8003888 <HAL_DMA_Init+0x2ac>
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	685b      	ldr	r3, [r3, #4]
 800387c:	2b73      	cmp	r3, #115	; 0x73
 800387e:	d905      	bls.n	800388c <HAL_DMA_Init+0x2b0>
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	685b      	ldr	r3, [r3, #4]
 8003884:	2b77      	cmp	r3, #119	; 0x77
 8003886:	d801      	bhi.n	800388c <HAL_DMA_Init+0x2b0>
 8003888:	2301      	movs	r3, #1
 800388a:	e000      	b.n	800388e <HAL_DMA_Init+0x2b2>
 800388c:	2300      	movs	r3, #0
 800388e:	2b00      	cmp	r3, #0
 8003890:	d003      	beq.n	800389a <HAL_DMA_Init+0x2be>
      {
        registerValue |= DMA_SxCR_TRBUFF;
 8003892:	697b      	ldr	r3, [r7, #20]
 8003894:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003898:	617b      	str	r3, [r7, #20]
#if (STM32H7_DEV_ID == 0x450UL)
    }
#endif /* STM32H7_DEV_ID == 0x450UL */

    /* Write to DMA Stream CR register */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->CR = registerValue;
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	697a      	ldr	r2, [r7, #20]
 80038a0:	601a      	str	r2, [r3, #0]

    /* Get the FCR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR;
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	695b      	ldr	r3, [r3, #20]
 80038a8:	617b      	str	r3, [r7, #20]

    /* Clear Direct mode and FIFO threshold bits */
    registerValue &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80038aa:	697b      	ldr	r3, [r7, #20]
 80038ac:	f023 0307 	bic.w	r3, r3, #7
 80038b0:	617b      	str	r3, [r7, #20]

    /* Prepare the DMA Stream FIFO configuration */
    registerValue |= hdma->Init.FIFOMode;
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038b6:	697a      	ldr	r2, [r7, #20]
 80038b8:	4313      	orrs	r3, r2
 80038ba:	617b      	str	r3, [r7, #20]

    /* the FIFO threshold is not used when the FIFO mode is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038c0:	2b04      	cmp	r3, #4
 80038c2:	d117      	bne.n	80038f4 <HAL_DMA_Init+0x318>
    {
      /* Get the FIFO threshold */
      registerValue |= hdma->Init.FIFOThreshold;
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80038c8:	697a      	ldr	r2, [r7, #20]
 80038ca:	4313      	orrs	r3, r2
 80038cc:	617b      	str	r3, [r7, #20]

      /* Check compatibility between FIFO threshold level and size of the memory burst */
      /* for INCR4, INCR8, INCR16 */
      if(hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038d2:	2b00      	cmp	r3, #0
 80038d4:	d00e      	beq.n	80038f4 <HAL_DMA_Init+0x318>
      {
        if (DMA_CheckFifoParam(hdma) != HAL_OK)
 80038d6:	6878      	ldr	r0, [r7, #4]
 80038d8:	f002 f81c 	bl	8005914 <DMA_CheckFifoParam>
 80038dc:	4603      	mov	r3, r0
 80038de:	2b00      	cmp	r3, #0
 80038e0:	d008      	beq.n	80038f4 <HAL_DMA_Init+0x318>
        {
          /* Update error code */
          hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	2240      	movs	r2, #64	; 0x40
 80038e6:	655a      	str	r2, [r3, #84]	; 0x54

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	2201      	movs	r2, #1
 80038ec:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          return HAL_ERROR;
 80038f0:	2301      	movs	r3, #1
 80038f2:	e192      	b.n	8003c1a <HAL_DMA_Init+0x63e>
        }
      }
    }

    /* Write to DMA Stream FCR */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR = registerValue;
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	697a      	ldr	r2, [r7, #20]
 80038fa:	615a      	str	r2, [r3, #20]

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
       DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_dma = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80038fc:	6878      	ldr	r0, [r7, #4]
 80038fe:	f001 ff57 	bl	80057b0 <DMA_CalcBaseAndBitshift>
 8003902:	4603      	mov	r3, r0
 8003904:	60bb      	str	r3, [r7, #8]

    /* Clear all interrupt flags */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800390a:	f003 031f 	and.w	r3, r3, #31
 800390e:	223f      	movs	r2, #63	; 0x3f
 8003910:	409a      	lsls	r2, r3
 8003912:	68bb      	ldr	r3, [r7, #8]
 8003914:	609a      	str	r2, [r3, #8]
 8003916:	e0c8      	b.n	8003aaa <HAL_DMA_Init+0x4ce>
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	681b      	ldr	r3, [r3, #0]
 800391c:	4a38      	ldr	r2, [pc, #224]	; (8003a00 <HAL_DMA_Init+0x424>)
 800391e:	4293      	cmp	r3, r2
 8003920:	d022      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	4a37      	ldr	r2, [pc, #220]	; (8003a04 <HAL_DMA_Init+0x428>)
 8003928:	4293      	cmp	r3, r2
 800392a:	d01d      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	4a35      	ldr	r2, [pc, #212]	; (8003a08 <HAL_DMA_Init+0x42c>)
 8003932:	4293      	cmp	r3, r2
 8003934:	d018      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	4a34      	ldr	r2, [pc, #208]	; (8003a0c <HAL_DMA_Init+0x430>)
 800393c:	4293      	cmp	r3, r2
 800393e:	d013      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	4a32      	ldr	r2, [pc, #200]	; (8003a10 <HAL_DMA_Init+0x434>)
 8003946:	4293      	cmp	r3, r2
 8003948:	d00e      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	4a31      	ldr	r2, [pc, #196]	; (8003a14 <HAL_DMA_Init+0x438>)
 8003950:	4293      	cmp	r3, r2
 8003952:	d009      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	4a2f      	ldr	r2, [pc, #188]	; (8003a18 <HAL_DMA_Init+0x43c>)
 800395a:	4293      	cmp	r3, r2
 800395c:	d004      	beq.n	8003968 <HAL_DMA_Init+0x38c>
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	4a2e      	ldr	r2, [pc, #184]	; (8003a1c <HAL_DMA_Init+0x440>)
 8003964:	4293      	cmp	r3, r2
 8003966:	d101      	bne.n	800396c <HAL_DMA_Init+0x390>
 8003968:	2301      	movs	r3, #1
 800396a:	e000      	b.n	800396e <HAL_DMA_Init+0x392>
 800396c:	2300      	movs	r3, #0
 800396e:	2b00      	cmp	r3, #0
 8003970:	f000 8092 	beq.w	8003a98 <HAL_DMA_Init+0x4bc>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	4a21      	ldr	r2, [pc, #132]	; (8003a00 <HAL_DMA_Init+0x424>)
 800397a:	4293      	cmp	r3, r2
 800397c:	d021      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	681b      	ldr	r3, [r3, #0]
 8003982:	4a20      	ldr	r2, [pc, #128]	; (8003a04 <HAL_DMA_Init+0x428>)
 8003984:	4293      	cmp	r3, r2
 8003986:	d01c      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	681b      	ldr	r3, [r3, #0]
 800398c:	4a1e      	ldr	r2, [pc, #120]	; (8003a08 <HAL_DMA_Init+0x42c>)
 800398e:	4293      	cmp	r3, r2
 8003990:	d017      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	4a1d      	ldr	r2, [pc, #116]	; (8003a0c <HAL_DMA_Init+0x430>)
 8003998:	4293      	cmp	r3, r2
 800399a:	d012      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	681b      	ldr	r3, [r3, #0]
 80039a0:	4a1b      	ldr	r2, [pc, #108]	; (8003a10 <HAL_DMA_Init+0x434>)
 80039a2:	4293      	cmp	r3, r2
 80039a4:	d00d      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	4a1a      	ldr	r2, [pc, #104]	; (8003a14 <HAL_DMA_Init+0x438>)
 80039ac:	4293      	cmp	r3, r2
 80039ae:	d008      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	4a18      	ldr	r2, [pc, #96]	; (8003a18 <HAL_DMA_Init+0x43c>)
 80039b6:	4293      	cmp	r3, r2
 80039b8:	d003      	beq.n	80039c2 <HAL_DMA_Init+0x3e6>
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	4a17      	ldr	r2, [pc, #92]	; (8003a1c <HAL_DMA_Init+0x440>)
 80039c0:	4293      	cmp	r3, r2
      /* Check the request parameter */
      assert_param(IS_BDMA_REQUEST(hdma->Init.Request));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	2202      	movs	r2, #2
 80039c6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	2200      	movs	r2, #0
 80039ce:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Get the CR register value */
    registerValue = ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR;
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	617b      	str	r3, [r7, #20]

    /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, MEM2MEM, DBM and CT bits */
    registerValue &= ((uint32_t)~(BDMA_CCR_PL    | BDMA_CCR_MSIZE   | BDMA_CCR_PSIZE  | \
 80039da:	697a      	ldr	r2, [r7, #20]
 80039dc:	4b10      	ldr	r3, [pc, #64]	; (8003a20 <HAL_DMA_Init+0x444>)
 80039de:	4013      	ands	r3, r2
 80039e0:	617b      	str	r3, [r7, #20]
                                  BDMA_CCR_MINC  | BDMA_CCR_PINC    | BDMA_CCR_CIRC   | \
                                  BDMA_CCR_DIR   | BDMA_CCR_MEM2MEM | BDMA_CCR_DBM    | \
                                  BDMA_CCR_CT));

    /* Prepare the DMA Channel configuration */
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	689b      	ldr	r3, [r3, #8]
 80039e6:	2b40      	cmp	r3, #64	; 0x40
 80039e8:	d01c      	beq.n	8003a24 <HAL_DMA_Init+0x448>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	689b      	ldr	r3, [r3, #8]
 80039ee:	2b80      	cmp	r3, #128	; 0x80
 80039f0:	d102      	bne.n	80039f8 <HAL_DMA_Init+0x41c>
 80039f2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80039f6:	e016      	b.n	8003a26 <HAL_DMA_Init+0x44a>
 80039f8:	2300      	movs	r3, #0
 80039fa:	e014      	b.n	8003a26 <HAL_DMA_Init+0x44a>
 80039fc:	fe10803f 	.word	0xfe10803f
 8003a00:	58025408 	.word	0x58025408
 8003a04:	5802541c 	.word	0x5802541c
 8003a08:	58025430 	.word	0x58025430
 8003a0c:	58025444 	.word	0x58025444
 8003a10:	58025458 	.word	0x58025458
 8003a14:	5802546c 	.word	0x5802546c
 8003a18:	58025480 	.word	0x58025480
 8003a1c:	58025494 	.word	0x58025494
 8003a20:	fffe000f 	.word	0xfffe000f
 8003a24:	2310      	movs	r3, #16
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8003a26:	687a      	ldr	r2, [r7, #4]
 8003a28:	68d2      	ldr	r2, [r2, #12]
 8003a2a:	08d2      	lsrs	r2, r2, #3
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8003a2c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	691b      	ldr	r3, [r3, #16]
 8003a32:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8003a34:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	695b      	ldr	r3, [r3, #20]
 8003a3a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8003a3c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	699b      	ldr	r3, [r3, #24]
 8003a42:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8003a44:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	69db      	ldr	r3, [r3, #28]
 8003a4a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8003a4c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PRIORITY(hdma->Init.Priority);
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	6a1b      	ldr	r3, [r3, #32]
 8003a52:	091b      	lsrs	r3, r3, #4
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8003a54:	4313      	orrs	r3, r2
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8003a56:	697a      	ldr	r2, [r7, #20]
 8003a58:	4313      	orrs	r3, r2
 8003a5a:	617b      	str	r3, [r7, #20]

    /* Write to DMA Channel CR register */
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR = registerValue;
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	697a      	ldr	r2, [r7, #20]
 8003a62:	601a      	str	r2, [r3, #0]

    /* calculation of the channel index */
    hdma->StreamIndex = (((uint32_t)((uint32_t*)hdma->Instance) - (uint32_t)BDMA_Channel0) / ((uint32_t)BDMA_Channel1 - (uint32_t)BDMA_Channel0)) << 2U;
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	461a      	mov	r2, r3
 8003a6a:	4b6e      	ldr	r3, [pc, #440]	; (8003c24 <HAL_DMA_Init+0x648>)
 8003a6c:	4413      	add	r3, r2
 8003a6e:	4a6e      	ldr	r2, [pc, #440]	; (8003c28 <HAL_DMA_Init+0x64c>)
 8003a70:	fba2 2303 	umull	r2, r3, r2, r3
 8003a74:	091b      	lsrs	r3, r3, #4
 8003a76:	009a      	lsls	r2, r3, #2
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
    DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_bdma = (BDMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003a7c:	6878      	ldr	r0, [r7, #4]
 8003a7e:	f001 fe97 	bl	80057b0 <DMA_CalcBaseAndBitshift>
 8003a82:	4603      	mov	r3, r0
 8003a84:	60fb      	str	r3, [r7, #12]

    /* Clear all interrupt flags */
    regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003a8a:	f003 031f 	and.w	r3, r3, #31
 8003a8e:	2201      	movs	r2, #1
 8003a90:	409a      	lsls	r2, r3
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	605a      	str	r2, [r3, #4]
 8003a96:	e008      	b.n	8003aaa <HAL_DMA_Init+0x4ce>
  }
  else
  {
    hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	2240      	movs	r2, #64	; 0x40
 8003a9c:	655a      	str	r2, [r3, #84]	; 0x54
    hdma->State     = HAL_DMA_STATE_ERROR;
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	2203      	movs	r2, #3
 8003aa2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    return HAL_ERROR;
 8003aa6:	2301      	movs	r3, #1
 8003aa8:	e0b7      	b.n	8003c1a <HAL_DMA_Init+0x63e>
  }

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	4a5f      	ldr	r2, [pc, #380]	; (8003c2c <HAL_DMA_Init+0x650>)
 8003ab0:	4293      	cmp	r3, r2
 8003ab2:	d072      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	4a5d      	ldr	r2, [pc, #372]	; (8003c30 <HAL_DMA_Init+0x654>)
 8003aba:	4293      	cmp	r3, r2
 8003abc:	d06d      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	4a5c      	ldr	r2, [pc, #368]	; (8003c34 <HAL_DMA_Init+0x658>)
 8003ac4:	4293      	cmp	r3, r2
 8003ac6:	d068      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	4a5a      	ldr	r2, [pc, #360]	; (8003c38 <HAL_DMA_Init+0x65c>)
 8003ace:	4293      	cmp	r3, r2
 8003ad0:	d063      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	4a59      	ldr	r2, [pc, #356]	; (8003c3c <HAL_DMA_Init+0x660>)
 8003ad8:	4293      	cmp	r3, r2
 8003ada:	d05e      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	4a57      	ldr	r2, [pc, #348]	; (8003c40 <HAL_DMA_Init+0x664>)
 8003ae2:	4293      	cmp	r3, r2
 8003ae4:	d059      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	4a56      	ldr	r2, [pc, #344]	; (8003c44 <HAL_DMA_Init+0x668>)
 8003aec:	4293      	cmp	r3, r2
 8003aee:	d054      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	4a54      	ldr	r2, [pc, #336]	; (8003c48 <HAL_DMA_Init+0x66c>)
 8003af6:	4293      	cmp	r3, r2
 8003af8:	d04f      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	4a53      	ldr	r2, [pc, #332]	; (8003c4c <HAL_DMA_Init+0x670>)
 8003b00:	4293      	cmp	r3, r2
 8003b02:	d04a      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	681b      	ldr	r3, [r3, #0]
 8003b08:	4a51      	ldr	r2, [pc, #324]	; (8003c50 <HAL_DMA_Init+0x674>)
 8003b0a:	4293      	cmp	r3, r2
 8003b0c:	d045      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	4a50      	ldr	r2, [pc, #320]	; (8003c54 <HAL_DMA_Init+0x678>)
 8003b14:	4293      	cmp	r3, r2
 8003b16:	d040      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	4a4e      	ldr	r2, [pc, #312]	; (8003c58 <HAL_DMA_Init+0x67c>)
 8003b1e:	4293      	cmp	r3, r2
 8003b20:	d03b      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	4a4d      	ldr	r2, [pc, #308]	; (8003c5c <HAL_DMA_Init+0x680>)
 8003b28:	4293      	cmp	r3, r2
 8003b2a:	d036      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	4a4b      	ldr	r2, [pc, #300]	; (8003c60 <HAL_DMA_Init+0x684>)
 8003b32:	4293      	cmp	r3, r2
 8003b34:	d031      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	681b      	ldr	r3, [r3, #0]
 8003b3a:	4a4a      	ldr	r2, [pc, #296]	; (8003c64 <HAL_DMA_Init+0x688>)
 8003b3c:	4293      	cmp	r3, r2
 8003b3e:	d02c      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	681b      	ldr	r3, [r3, #0]
 8003b44:	4a48      	ldr	r2, [pc, #288]	; (8003c68 <HAL_DMA_Init+0x68c>)
 8003b46:	4293      	cmp	r3, r2
 8003b48:	d027      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	4a47      	ldr	r2, [pc, #284]	; (8003c6c <HAL_DMA_Init+0x690>)
 8003b50:	4293      	cmp	r3, r2
 8003b52:	d022      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	4a45      	ldr	r2, [pc, #276]	; (8003c70 <HAL_DMA_Init+0x694>)
 8003b5a:	4293      	cmp	r3, r2
 8003b5c:	d01d      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	4a44      	ldr	r2, [pc, #272]	; (8003c74 <HAL_DMA_Init+0x698>)
 8003b64:	4293      	cmp	r3, r2
 8003b66:	d018      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	681b      	ldr	r3, [r3, #0]
 8003b6c:	4a42      	ldr	r2, [pc, #264]	; (8003c78 <HAL_DMA_Init+0x69c>)
 8003b6e:	4293      	cmp	r3, r2
 8003b70:	d013      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	4a41      	ldr	r2, [pc, #260]	; (8003c7c <HAL_DMA_Init+0x6a0>)
 8003b78:	4293      	cmp	r3, r2
 8003b7a:	d00e      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	4a3f      	ldr	r2, [pc, #252]	; (8003c80 <HAL_DMA_Init+0x6a4>)
 8003b82:	4293      	cmp	r3, r2
 8003b84:	d009      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	4a3e      	ldr	r2, [pc, #248]	; (8003c84 <HAL_DMA_Init+0x6a8>)
 8003b8c:	4293      	cmp	r3, r2
 8003b8e:	d004      	beq.n	8003b9a <HAL_DMA_Init+0x5be>
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	681b      	ldr	r3, [r3, #0]
 8003b94:	4a3c      	ldr	r2, [pc, #240]	; (8003c88 <HAL_DMA_Init+0x6ac>)
 8003b96:	4293      	cmp	r3, r2
 8003b98:	d101      	bne.n	8003b9e <HAL_DMA_Init+0x5c2>
 8003b9a:	2301      	movs	r3, #1
 8003b9c:	e000      	b.n	8003ba0 <HAL_DMA_Init+0x5c4>
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	2b00      	cmp	r3, #0
 8003ba2:	d032      	beq.n	8003c0a <HAL_DMA_Init+0x62e>
  {
    /* Initialize parameters for DMAMUX channel :
    DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
    */
    DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8003ba4:	6878      	ldr	r0, [r7, #4]
 8003ba6:	f001 ff31 	bl	8005a0c <DMA_CalcDMAMUXChannelBaseAndMask>

    if(hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	689b      	ldr	r3, [r3, #8]
 8003bae:	2b80      	cmp	r3, #128	; 0x80
 8003bb0:	d102      	bne.n	8003bb8 <HAL_DMA_Init+0x5dc>
    {
      /* if memory to memory force the request to 0*/
      hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	2200      	movs	r2, #0
 8003bb6:	605a      	str	r2, [r3, #4]
    }

    /* Set peripheral request  to DMAMUX channel */
    hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	685a      	ldr	r2, [r3, #4]
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003bc0:	b2d2      	uxtb	r2, r2
 8003bc2:	601a      	str	r2, [r3, #0]

    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003bc8:	687a      	ldr	r2, [r7, #4]
 8003bca:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8003bcc:	605a      	str	r2, [r3, #4]

    /* Initialize parameters for DMAMUX request generator :
    if the DMA request is DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR7
    */
    if((hdma->Init.Request >= DMA_REQUEST_GENERATOR0) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR7))
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	685b      	ldr	r3, [r3, #4]
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	d010      	beq.n	8003bf8 <HAL_DMA_Init+0x61c>
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	685b      	ldr	r3, [r3, #4]
 8003bda:	2b08      	cmp	r3, #8
 8003bdc:	d80c      	bhi.n	8003bf8 <HAL_DMA_Init+0x61c>
    {
      /* Initialize parameters for DMAMUX request generator :
      DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask */
      DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 8003bde:	6878      	ldr	r0, [r7, #4]
 8003be0:	f001 ffae 	bl	8005b40 <DMA_CalcDMAMUXRequestGenBaseAndMask>

      /* Reset the DMAMUX request generator register */
      hdma->DMAmuxRequestGen->RGCR = 0U;
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8003be8:	2200      	movs	r2, #0
 8003bea:	601a      	str	r2, [r3, #0]

      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003bf0:	687a      	ldr	r2, [r7, #4]
 8003bf2:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8003bf4:	605a      	str	r2, [r3, #4]
 8003bf6:	e008      	b.n	8003c0a <HAL_DMA_Init+0x62e>
    }
    else
    {
      hdma->DMAmuxRequestGen = 0U;
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	2200      	movs	r2, #0
 8003bfc:	66da      	str	r2, [r3, #108]	; 0x6c
      hdma->DMAmuxRequestGenStatus = 0U;
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	2200      	movs	r2, #0
 8003c02:	671a      	str	r2, [r3, #112]	; 0x70
      hdma->DMAmuxRequestGenStatusMask = 0U;
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	2200      	movs	r2, #0
 8003c08:	675a      	str	r2, [r3, #116]	; 0x74
    }
  }

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	2200      	movs	r2, #0
 8003c0e:	655a      	str	r2, [r3, #84]	; 0x54

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	2201      	movs	r2, #1
 8003c14:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 8003c18:	2300      	movs	r3, #0
}
 8003c1a:	4618      	mov	r0, r3
 8003c1c:	3718      	adds	r7, #24
 8003c1e:	46bd      	mov	sp, r7
 8003c20:	bd80      	pop	{r7, pc}
 8003c22:	bf00      	nop
 8003c24:	a7fdabf8 	.word	0xa7fdabf8
 8003c28:	cccccccd 	.word	0xcccccccd
 8003c2c:	40020010 	.word	0x40020010
 8003c30:	40020028 	.word	0x40020028
 8003c34:	40020040 	.word	0x40020040
 8003c38:	40020058 	.word	0x40020058
 8003c3c:	40020070 	.word	0x40020070
 8003c40:	40020088 	.word	0x40020088
 8003c44:	400200a0 	.word	0x400200a0
 8003c48:	400200b8 	.word	0x400200b8
 8003c4c:	40020410 	.word	0x40020410
 8003c50:	40020428 	.word	0x40020428
 8003c54:	40020440 	.word	0x40020440
 8003c58:	40020458 	.word	0x40020458
 8003c5c:	40020470 	.word	0x40020470
 8003c60:	40020488 	.word	0x40020488
 8003c64:	400204a0 	.word	0x400204a0
 8003c68:	400204b8 	.word	0x400204b8
 8003c6c:	58025408 	.word	0x58025408
 8003c70:	5802541c 	.word	0x5802541c
 8003c74:	58025430 	.word	0x58025430
 8003c78:	58025444 	.word	0x58025444
 8003c7c:	58025458 	.word	0x58025458
 8003c80:	5802546c 	.word	0x5802546c
 8003c84:	58025480 	.word	0x58025480
 8003c88:	58025494 	.word	0x58025494

08003c8c <HAL_DMA_Start_IT>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	b086      	sub	sp, #24
 8003c90:	af00      	add	r7, sp, #0
 8003c92:	60f8      	str	r0, [r7, #12]
 8003c94:	60b9      	str	r1, [r7, #8]
 8003c96:	607a      	str	r2, [r7, #4]
 8003c98:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003c9a:	2300      	movs	r3, #0
 8003c9c:	75fb      	strb	r3, [r7, #23]

  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 8003c9e:	68fb      	ldr	r3, [r7, #12]
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d101      	bne.n	8003ca8 <HAL_DMA_Start_IT+0x1c>
  {
    return HAL_ERROR;
 8003ca4:	2301      	movs	r3, #1
 8003ca6:	e226      	b.n	80040f6 <HAL_DMA_Start_IT+0x46a>
  }

  /* Process locked */
  __HAL_LOCK(hdma);
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003cae:	2b01      	cmp	r3, #1
 8003cb0:	d101      	bne.n	8003cb6 <HAL_DMA_Start_IT+0x2a>
 8003cb2:	2302      	movs	r3, #2
 8003cb4:	e21f      	b.n	80040f6 <HAL_DMA_Start_IT+0x46a>
 8003cb6:	68fb      	ldr	r3, [r7, #12]
 8003cb8:	2201      	movs	r2, #1
 8003cba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  if(HAL_DMA_STATE_READY == hdma->State)
 8003cbe:	68fb      	ldr	r3, [r7, #12]
 8003cc0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003cc4:	b2db      	uxtb	r3, r3
 8003cc6:	2b01      	cmp	r3, #1
 8003cc8:	f040 820a 	bne.w	80040e0 <HAL_DMA_Start_IT+0x454>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8003ccc:	68fb      	ldr	r3, [r7, #12]
 8003cce:	2202      	movs	r2, #2
 8003cd0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	655a      	str	r2, [r3, #84]	; 0x54

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	4a68      	ldr	r2, [pc, #416]	; (8003e80 <HAL_DMA_Start_IT+0x1f4>)
 8003ce0:	4293      	cmp	r3, r2
 8003ce2:	d04a      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003ce4:	68fb      	ldr	r3, [r7, #12]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	4a66      	ldr	r2, [pc, #408]	; (8003e84 <HAL_DMA_Start_IT+0x1f8>)
 8003cea:	4293      	cmp	r3, r2
 8003cec:	d045      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003cee:	68fb      	ldr	r3, [r7, #12]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	4a65      	ldr	r2, [pc, #404]	; (8003e88 <HAL_DMA_Start_IT+0x1fc>)
 8003cf4:	4293      	cmp	r3, r2
 8003cf6:	d040      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	4a63      	ldr	r2, [pc, #396]	; (8003e8c <HAL_DMA_Start_IT+0x200>)
 8003cfe:	4293      	cmp	r3, r2
 8003d00:	d03b      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	4a62      	ldr	r2, [pc, #392]	; (8003e90 <HAL_DMA_Start_IT+0x204>)
 8003d08:	4293      	cmp	r3, r2
 8003d0a:	d036      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	4a60      	ldr	r2, [pc, #384]	; (8003e94 <HAL_DMA_Start_IT+0x208>)
 8003d12:	4293      	cmp	r3, r2
 8003d14:	d031      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	4a5f      	ldr	r2, [pc, #380]	; (8003e98 <HAL_DMA_Start_IT+0x20c>)
 8003d1c:	4293      	cmp	r3, r2
 8003d1e:	d02c      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d20:	68fb      	ldr	r3, [r7, #12]
 8003d22:	681b      	ldr	r3, [r3, #0]
 8003d24:	4a5d      	ldr	r2, [pc, #372]	; (8003e9c <HAL_DMA_Start_IT+0x210>)
 8003d26:	4293      	cmp	r3, r2
 8003d28:	d027      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	4a5c      	ldr	r2, [pc, #368]	; (8003ea0 <HAL_DMA_Start_IT+0x214>)
 8003d30:	4293      	cmp	r3, r2
 8003d32:	d022      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	4a5a      	ldr	r2, [pc, #360]	; (8003ea4 <HAL_DMA_Start_IT+0x218>)
 8003d3a:	4293      	cmp	r3, r2
 8003d3c:	d01d      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d3e:	68fb      	ldr	r3, [r7, #12]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	4a59      	ldr	r2, [pc, #356]	; (8003ea8 <HAL_DMA_Start_IT+0x21c>)
 8003d44:	4293      	cmp	r3, r2
 8003d46:	d018      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d48:	68fb      	ldr	r3, [r7, #12]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	4a57      	ldr	r2, [pc, #348]	; (8003eac <HAL_DMA_Start_IT+0x220>)
 8003d4e:	4293      	cmp	r3, r2
 8003d50:	d013      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d52:	68fb      	ldr	r3, [r7, #12]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	4a56      	ldr	r2, [pc, #344]	; (8003eb0 <HAL_DMA_Start_IT+0x224>)
 8003d58:	4293      	cmp	r3, r2
 8003d5a:	d00e      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d5c:	68fb      	ldr	r3, [r7, #12]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	4a54      	ldr	r2, [pc, #336]	; (8003eb4 <HAL_DMA_Start_IT+0x228>)
 8003d62:	4293      	cmp	r3, r2
 8003d64:	d009      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	4a53      	ldr	r2, [pc, #332]	; (8003eb8 <HAL_DMA_Start_IT+0x22c>)
 8003d6c:	4293      	cmp	r3, r2
 8003d6e:	d004      	beq.n	8003d7a <HAL_DMA_Start_IT+0xee>
 8003d70:	68fb      	ldr	r3, [r7, #12]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	4a51      	ldr	r2, [pc, #324]	; (8003ebc <HAL_DMA_Start_IT+0x230>)
 8003d76:	4293      	cmp	r3, r2
 8003d78:	d108      	bne.n	8003d8c <HAL_DMA_Start_IT+0x100>
 8003d7a:	68fb      	ldr	r3, [r7, #12]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	681a      	ldr	r2, [r3, #0]
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	f022 0201 	bic.w	r2, r2, #1
 8003d88:	601a      	str	r2, [r3, #0]
 8003d8a:	e007      	b.n	8003d9c <HAL_DMA_Start_IT+0x110>
 8003d8c:	68fb      	ldr	r3, [r7, #12]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	681a      	ldr	r2, [r3, #0]
 8003d92:	68fb      	ldr	r3, [r7, #12]
 8003d94:	681b      	ldr	r3, [r3, #0]
 8003d96:	f022 0201 	bic.w	r2, r2, #1
 8003d9a:	601a      	str	r2, [r3, #0]

    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8003d9c:	683b      	ldr	r3, [r7, #0]
 8003d9e:	687a      	ldr	r2, [r7, #4]
 8003da0:	68b9      	ldr	r1, [r7, #8]
 8003da2:	68f8      	ldr	r0, [r7, #12]
 8003da4:	f001 fb58 	bl	8005458 <DMA_SetConfig>

    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	4a34      	ldr	r2, [pc, #208]	; (8003e80 <HAL_DMA_Start_IT+0x1f4>)
 8003dae:	4293      	cmp	r3, r2
 8003db0:	d04a      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	4a33      	ldr	r2, [pc, #204]	; (8003e84 <HAL_DMA_Start_IT+0x1f8>)
 8003db8:	4293      	cmp	r3, r2
 8003dba:	d045      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dbc:	68fb      	ldr	r3, [r7, #12]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	4a31      	ldr	r2, [pc, #196]	; (8003e88 <HAL_DMA_Start_IT+0x1fc>)
 8003dc2:	4293      	cmp	r3, r2
 8003dc4:	d040      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	4a30      	ldr	r2, [pc, #192]	; (8003e8c <HAL_DMA_Start_IT+0x200>)
 8003dcc:	4293      	cmp	r3, r2
 8003dce:	d03b      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	681b      	ldr	r3, [r3, #0]
 8003dd4:	4a2e      	ldr	r2, [pc, #184]	; (8003e90 <HAL_DMA_Start_IT+0x204>)
 8003dd6:	4293      	cmp	r3, r2
 8003dd8:	d036      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	681b      	ldr	r3, [r3, #0]
 8003dde:	4a2d      	ldr	r2, [pc, #180]	; (8003e94 <HAL_DMA_Start_IT+0x208>)
 8003de0:	4293      	cmp	r3, r2
 8003de2:	d031      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003de4:	68fb      	ldr	r3, [r7, #12]
 8003de6:	681b      	ldr	r3, [r3, #0]
 8003de8:	4a2b      	ldr	r2, [pc, #172]	; (8003e98 <HAL_DMA_Start_IT+0x20c>)
 8003dea:	4293      	cmp	r3, r2
 8003dec:	d02c      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	4a2a      	ldr	r2, [pc, #168]	; (8003e9c <HAL_DMA_Start_IT+0x210>)
 8003df4:	4293      	cmp	r3, r2
 8003df6:	d027      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	4a28      	ldr	r2, [pc, #160]	; (8003ea0 <HAL_DMA_Start_IT+0x214>)
 8003dfe:	4293      	cmp	r3, r2
 8003e00:	d022      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e02:	68fb      	ldr	r3, [r7, #12]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	4a27      	ldr	r2, [pc, #156]	; (8003ea4 <HAL_DMA_Start_IT+0x218>)
 8003e08:	4293      	cmp	r3, r2
 8003e0a:	d01d      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	4a25      	ldr	r2, [pc, #148]	; (8003ea8 <HAL_DMA_Start_IT+0x21c>)
 8003e12:	4293      	cmp	r3, r2
 8003e14:	d018      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e16:	68fb      	ldr	r3, [r7, #12]
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	4a24      	ldr	r2, [pc, #144]	; (8003eac <HAL_DMA_Start_IT+0x220>)
 8003e1c:	4293      	cmp	r3, r2
 8003e1e:	d013      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	4a22      	ldr	r2, [pc, #136]	; (8003eb0 <HAL_DMA_Start_IT+0x224>)
 8003e26:	4293      	cmp	r3, r2
 8003e28:	d00e      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	4a21      	ldr	r2, [pc, #132]	; (8003eb4 <HAL_DMA_Start_IT+0x228>)
 8003e30:	4293      	cmp	r3, r2
 8003e32:	d009      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	681b      	ldr	r3, [r3, #0]
 8003e38:	4a1f      	ldr	r2, [pc, #124]	; (8003eb8 <HAL_DMA_Start_IT+0x22c>)
 8003e3a:	4293      	cmp	r3, r2
 8003e3c:	d004      	beq.n	8003e48 <HAL_DMA_Start_IT+0x1bc>
 8003e3e:	68fb      	ldr	r3, [r7, #12]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	4a1e      	ldr	r2, [pc, #120]	; (8003ebc <HAL_DMA_Start_IT+0x230>)
 8003e44:	4293      	cmp	r3, r2
 8003e46:	d101      	bne.n	8003e4c <HAL_DMA_Start_IT+0x1c0>
 8003e48:	2301      	movs	r3, #1
 8003e4a:	e000      	b.n	8003e4e <HAL_DMA_Start_IT+0x1c2>
 8003e4c:	2300      	movs	r3, #0
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d036      	beq.n	8003ec0 <HAL_DMA_Start_IT+0x234>
    {
      /* Enable Common interrupts*/
      MODIFY_REG(((DMA_Stream_TypeDef   *)hdma->Instance)->CR, (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME | DMA_IT_HT), (DMA_IT_TC | DMA_IT_TE | DMA_IT_DME));
 8003e52:	68fb      	ldr	r3, [r7, #12]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	f023 021e 	bic.w	r2, r3, #30
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	f042 0216 	orr.w	r2, r2, #22
 8003e64:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d03e      	beq.n	8003eec <HAL_DMA_Start_IT+0x260>
      {
        /* Enable Half Transfer IT if corresponding Callback is set */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  |= DMA_IT_HT;
 8003e6e:	68fb      	ldr	r3, [r7, #12]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	681a      	ldr	r2, [r3, #0]
 8003e74:	68fb      	ldr	r3, [r7, #12]
 8003e76:	681b      	ldr	r3, [r3, #0]
 8003e78:	f042 0208 	orr.w	r2, r2, #8
 8003e7c:	601a      	str	r2, [r3, #0]
 8003e7e:	e035      	b.n	8003eec <HAL_DMA_Start_IT+0x260>
 8003e80:	40020010 	.word	0x40020010
 8003e84:	40020028 	.word	0x40020028
 8003e88:	40020040 	.word	0x40020040
 8003e8c:	40020058 	.word	0x40020058
 8003e90:	40020070 	.word	0x40020070
 8003e94:	40020088 	.word	0x40020088
 8003e98:	400200a0 	.word	0x400200a0
 8003e9c:	400200b8 	.word	0x400200b8
 8003ea0:	40020410 	.word	0x40020410
 8003ea4:	40020428 	.word	0x40020428
 8003ea8:	40020440 	.word	0x40020440
 8003eac:	40020458 	.word	0x40020458
 8003eb0:	40020470 	.word	0x40020470
 8003eb4:	40020488 	.word	0x40020488
 8003eb8:	400204a0 	.word	0x400204a0
 8003ebc:	400204b8 	.word	0x400204b8
      }
    }
    else /* BDMA channel */
    {
      /* Enable Common interrupts */
      MODIFY_REG(((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR, (BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE), (BDMA_CCR_TCIE | BDMA_CCR_TEIE));
 8003ec0:	68fb      	ldr	r3, [r7, #12]
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f023 020e 	bic.w	r2, r3, #14
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	f042 020a 	orr.w	r2, r2, #10
 8003ed2:	601a      	str	r2, [r3, #0]

      if(hdma->XferHalfCpltCallback != NULL)
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d007      	beq.n	8003eec <HAL_DMA_Start_IT+0x260>
      {
        /*Enable Half Transfer IT if corresponding Callback is set */
        ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  |= BDMA_CCR_HTIE;
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	681a      	ldr	r2, [r3, #0]
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	681b      	ldr	r3, [r3, #0]
 8003ee6:	f042 0204 	orr.w	r2, r2, #4
 8003eea:	601a      	str	r2, [r3, #0]
      }
    }

    if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	4a83      	ldr	r2, [pc, #524]	; (8004100 <HAL_DMA_Start_IT+0x474>)
 8003ef2:	4293      	cmp	r3, r2
 8003ef4:	d072      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003ef6:	68fb      	ldr	r3, [r7, #12]
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	4a82      	ldr	r2, [pc, #520]	; (8004104 <HAL_DMA_Start_IT+0x478>)
 8003efc:	4293      	cmp	r3, r2
 8003efe:	d06d      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	4a80      	ldr	r2, [pc, #512]	; (8004108 <HAL_DMA_Start_IT+0x47c>)
 8003f06:	4293      	cmp	r3, r2
 8003f08:	d068      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f0a:	68fb      	ldr	r3, [r7, #12]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	4a7f      	ldr	r2, [pc, #508]	; (800410c <HAL_DMA_Start_IT+0x480>)
 8003f10:	4293      	cmp	r3, r2
 8003f12:	d063      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	4a7d      	ldr	r2, [pc, #500]	; (8004110 <HAL_DMA_Start_IT+0x484>)
 8003f1a:	4293      	cmp	r3, r2
 8003f1c:	d05e      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	4a7c      	ldr	r2, [pc, #496]	; (8004114 <HAL_DMA_Start_IT+0x488>)
 8003f24:	4293      	cmp	r3, r2
 8003f26:	d059      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f28:	68fb      	ldr	r3, [r7, #12]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	4a7a      	ldr	r2, [pc, #488]	; (8004118 <HAL_DMA_Start_IT+0x48c>)
 8003f2e:	4293      	cmp	r3, r2
 8003f30:	d054      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f32:	68fb      	ldr	r3, [r7, #12]
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	4a79      	ldr	r2, [pc, #484]	; (800411c <HAL_DMA_Start_IT+0x490>)
 8003f38:	4293      	cmp	r3, r2
 8003f3a:	d04f      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	681b      	ldr	r3, [r3, #0]
 8003f40:	4a77      	ldr	r2, [pc, #476]	; (8004120 <HAL_DMA_Start_IT+0x494>)
 8003f42:	4293      	cmp	r3, r2
 8003f44:	d04a      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	4a76      	ldr	r2, [pc, #472]	; (8004124 <HAL_DMA_Start_IT+0x498>)
 8003f4c:	4293      	cmp	r3, r2
 8003f4e:	d045      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	4a74      	ldr	r2, [pc, #464]	; (8004128 <HAL_DMA_Start_IT+0x49c>)
 8003f56:	4293      	cmp	r3, r2
 8003f58:	d040      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	681b      	ldr	r3, [r3, #0]
 8003f5e:	4a73      	ldr	r2, [pc, #460]	; (800412c <HAL_DMA_Start_IT+0x4a0>)
 8003f60:	4293      	cmp	r3, r2
 8003f62:	d03b      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f64:	68fb      	ldr	r3, [r7, #12]
 8003f66:	681b      	ldr	r3, [r3, #0]
 8003f68:	4a71      	ldr	r2, [pc, #452]	; (8004130 <HAL_DMA_Start_IT+0x4a4>)
 8003f6a:	4293      	cmp	r3, r2
 8003f6c:	d036      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f6e:	68fb      	ldr	r3, [r7, #12]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	4a70      	ldr	r2, [pc, #448]	; (8004134 <HAL_DMA_Start_IT+0x4a8>)
 8003f74:	4293      	cmp	r3, r2
 8003f76:	d031      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	4a6e      	ldr	r2, [pc, #440]	; (8004138 <HAL_DMA_Start_IT+0x4ac>)
 8003f7e:	4293      	cmp	r3, r2
 8003f80:	d02c      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f82:	68fb      	ldr	r3, [r7, #12]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4a6d      	ldr	r2, [pc, #436]	; (800413c <HAL_DMA_Start_IT+0x4b0>)
 8003f88:	4293      	cmp	r3, r2
 8003f8a:	d027      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	4a6b      	ldr	r2, [pc, #428]	; (8004140 <HAL_DMA_Start_IT+0x4b4>)
 8003f92:	4293      	cmp	r3, r2
 8003f94:	d022      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003f96:	68fb      	ldr	r3, [r7, #12]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	4a6a      	ldr	r2, [pc, #424]	; (8004144 <HAL_DMA_Start_IT+0x4b8>)
 8003f9c:	4293      	cmp	r3, r2
 8003f9e:	d01d      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	4a68      	ldr	r2, [pc, #416]	; (8004148 <HAL_DMA_Start_IT+0x4bc>)
 8003fa6:	4293      	cmp	r3, r2
 8003fa8:	d018      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	4a67      	ldr	r2, [pc, #412]	; (800414c <HAL_DMA_Start_IT+0x4c0>)
 8003fb0:	4293      	cmp	r3, r2
 8003fb2:	d013      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	681b      	ldr	r3, [r3, #0]
 8003fb8:	4a65      	ldr	r2, [pc, #404]	; (8004150 <HAL_DMA_Start_IT+0x4c4>)
 8003fba:	4293      	cmp	r3, r2
 8003fbc:	d00e      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fbe:	68fb      	ldr	r3, [r7, #12]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	4a64      	ldr	r2, [pc, #400]	; (8004154 <HAL_DMA_Start_IT+0x4c8>)
 8003fc4:	4293      	cmp	r3, r2
 8003fc6:	d009      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	4a62      	ldr	r2, [pc, #392]	; (8004158 <HAL_DMA_Start_IT+0x4cc>)
 8003fce:	4293      	cmp	r3, r2
 8003fd0:	d004      	beq.n	8003fdc <HAL_DMA_Start_IT+0x350>
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	4a61      	ldr	r2, [pc, #388]	; (800415c <HAL_DMA_Start_IT+0x4d0>)
 8003fd8:	4293      	cmp	r3, r2
 8003fda:	d101      	bne.n	8003fe0 <HAL_DMA_Start_IT+0x354>
 8003fdc:	2301      	movs	r3, #1
 8003fde:	e000      	b.n	8003fe2 <HAL_DMA_Start_IT+0x356>
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	2b00      	cmp	r3, #0
 8003fe4:	d01a      	beq.n	800401c <HAL_DMA_Start_IT+0x390>
    {
      /* Check if DMAMUX Synchronization is enabled */
      if((hdma->DMAmuxChannel->CCR & DMAMUX_CxCR_SE) != 0U)
 8003fe6:	68fb      	ldr	r3, [r7, #12]
 8003fe8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003ff0:	2b00      	cmp	r3, #0
 8003ff2:	d007      	beq.n	8004004 <HAL_DMA_Start_IT+0x378>
      {
        /* Enable DMAMUX sync overrun IT*/
        hdma->DMAmuxChannel->CCR |= DMAMUX_CxCR_SOIE;
 8003ff4:	68fb      	ldr	r3, [r7, #12]
 8003ff6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003ff8:	681a      	ldr	r2, [r3, #0]
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003ffe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004002:	601a      	str	r2, [r3, #0]
      }

      if(hdma->DMAmuxRequestGen != 0U)
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004008:	2b00      	cmp	r3, #0
 800400a:	d007      	beq.n	800401c <HAL_DMA_Start_IT+0x390>
      {
        /* if using DMAMUX request generator, enable the DMAMUX request generator overrun IT*/
        /* enable the request gen overrun IT */
        hdma->DMAmuxRequestGen->RGCR |= DMAMUX_RGxCR_OIE;
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004010:	681a      	ldr	r2, [r3, #0]
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004016:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800401a:	601a      	str	r2, [r3, #0]
      }
    }

    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	4a37      	ldr	r2, [pc, #220]	; (8004100 <HAL_DMA_Start_IT+0x474>)
 8004022:	4293      	cmp	r3, r2
 8004024:	d04a      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004026:	68fb      	ldr	r3, [r7, #12]
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	4a36      	ldr	r2, [pc, #216]	; (8004104 <HAL_DMA_Start_IT+0x478>)
 800402c:	4293      	cmp	r3, r2
 800402e:	d045      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004030:	68fb      	ldr	r3, [r7, #12]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	4a34      	ldr	r2, [pc, #208]	; (8004108 <HAL_DMA_Start_IT+0x47c>)
 8004036:	4293      	cmp	r3, r2
 8004038:	d040      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	681b      	ldr	r3, [r3, #0]
 800403e:	4a33      	ldr	r2, [pc, #204]	; (800410c <HAL_DMA_Start_IT+0x480>)
 8004040:	4293      	cmp	r3, r2
 8004042:	d03b      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	4a31      	ldr	r2, [pc, #196]	; (8004110 <HAL_DMA_Start_IT+0x484>)
 800404a:	4293      	cmp	r3, r2
 800404c:	d036      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	4a30      	ldr	r2, [pc, #192]	; (8004114 <HAL_DMA_Start_IT+0x488>)
 8004054:	4293      	cmp	r3, r2
 8004056:	d031      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004058:	68fb      	ldr	r3, [r7, #12]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	4a2e      	ldr	r2, [pc, #184]	; (8004118 <HAL_DMA_Start_IT+0x48c>)
 800405e:	4293      	cmp	r3, r2
 8004060:	d02c      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004062:	68fb      	ldr	r3, [r7, #12]
 8004064:	681b      	ldr	r3, [r3, #0]
 8004066:	4a2d      	ldr	r2, [pc, #180]	; (800411c <HAL_DMA_Start_IT+0x490>)
 8004068:	4293      	cmp	r3, r2
 800406a:	d027      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4a2b      	ldr	r2, [pc, #172]	; (8004120 <HAL_DMA_Start_IT+0x494>)
 8004072:	4293      	cmp	r3, r2
 8004074:	d022      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	4a2a      	ldr	r2, [pc, #168]	; (8004124 <HAL_DMA_Start_IT+0x498>)
 800407c:	4293      	cmp	r3, r2
 800407e:	d01d      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004080:	68fb      	ldr	r3, [r7, #12]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	4a28      	ldr	r2, [pc, #160]	; (8004128 <HAL_DMA_Start_IT+0x49c>)
 8004086:	4293      	cmp	r3, r2
 8004088:	d018      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800408a:	68fb      	ldr	r3, [r7, #12]
 800408c:	681b      	ldr	r3, [r3, #0]
 800408e:	4a27      	ldr	r2, [pc, #156]	; (800412c <HAL_DMA_Start_IT+0x4a0>)
 8004090:	4293      	cmp	r3, r2
 8004092:	d013      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	4a25      	ldr	r2, [pc, #148]	; (8004130 <HAL_DMA_Start_IT+0x4a4>)
 800409a:	4293      	cmp	r3, r2
 800409c:	d00e      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	681b      	ldr	r3, [r3, #0]
 80040a2:	4a24      	ldr	r2, [pc, #144]	; (8004134 <HAL_DMA_Start_IT+0x4a8>)
 80040a4:	4293      	cmp	r3, r2
 80040a6:	d009      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 80040a8:	68fb      	ldr	r3, [r7, #12]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	4a22      	ldr	r2, [pc, #136]	; (8004138 <HAL_DMA_Start_IT+0x4ac>)
 80040ae:	4293      	cmp	r3, r2
 80040b0:	d004      	beq.n	80040bc <HAL_DMA_Start_IT+0x430>
 80040b2:	68fb      	ldr	r3, [r7, #12]
 80040b4:	681b      	ldr	r3, [r3, #0]
 80040b6:	4a21      	ldr	r2, [pc, #132]	; (800413c <HAL_DMA_Start_IT+0x4b0>)
 80040b8:	4293      	cmp	r3, r2
 80040ba:	d108      	bne.n	80040ce <HAL_DMA_Start_IT+0x442>
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	681a      	ldr	r2, [r3, #0]
 80040c2:	68fb      	ldr	r3, [r7, #12]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	f042 0201 	orr.w	r2, r2, #1
 80040ca:	601a      	str	r2, [r3, #0]
 80040cc:	e012      	b.n	80040f4 <HAL_DMA_Start_IT+0x468>
 80040ce:	68fb      	ldr	r3, [r7, #12]
 80040d0:	681b      	ldr	r3, [r3, #0]
 80040d2:	681a      	ldr	r2, [r3, #0]
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	681b      	ldr	r3, [r3, #0]
 80040d8:	f042 0201 	orr.w	r2, r2, #1
 80040dc:	601a      	str	r2, [r3, #0]
 80040de:	e009      	b.n	80040f4 <HAL_DMA_Start_IT+0x468>
  }
  else
  {
    /* Set the error code to busy */
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 80040e0:	68fb      	ldr	r3, [r7, #12]
 80040e2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80040e6:	655a      	str	r2, [r3, #84]	; 0x54

    /* Process unlocked */
    __HAL_UNLOCK(hdma);
 80040e8:	68fb      	ldr	r3, [r7, #12]
 80040ea:	2200      	movs	r2, #0
 80040ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Return error status */
    status = HAL_ERROR;
 80040f0:	2301      	movs	r3, #1
 80040f2:	75fb      	strb	r3, [r7, #23]
  }

  return status;
 80040f4:	7dfb      	ldrb	r3, [r7, #23]
}
 80040f6:	4618      	mov	r0, r3
 80040f8:	3718      	adds	r7, #24
 80040fa:	46bd      	mov	sp, r7
 80040fc:	bd80      	pop	{r7, pc}
 80040fe:	bf00      	nop
 8004100:	40020010 	.word	0x40020010
 8004104:	40020028 	.word	0x40020028
 8004108:	40020040 	.word	0x40020040
 800410c:	40020058 	.word	0x40020058
 8004110:	40020070 	.word	0x40020070
 8004114:	40020088 	.word	0x40020088
 8004118:	400200a0 	.word	0x400200a0
 800411c:	400200b8 	.word	0x400200b8
 8004120:	40020410 	.word	0x40020410
 8004124:	40020428 	.word	0x40020428
 8004128:	40020440 	.word	0x40020440
 800412c:	40020458 	.word	0x40020458
 8004130:	40020470 	.word	0x40020470
 8004134:	40020488 	.word	0x40020488
 8004138:	400204a0 	.word	0x400204a0
 800413c:	400204b8 	.word	0x400204b8
 8004140:	58025408 	.word	0x58025408
 8004144:	5802541c 	.word	0x5802541c
 8004148:	58025430 	.word	0x58025430
 800414c:	58025444 	.word	0x58025444
 8004150:	58025458 	.word	0x58025458
 8004154:	5802546c 	.word	0x5802546c
 8004158:	58025480 	.word	0x58025480
 800415c:	58025494 	.word	0x58025494

08004160 <HAL_DMA_Abort_IT>:
  * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8004160:	b580      	push	{r7, lr}
 8004162:	b084      	sub	sp, #16
 8004164:	af00      	add	r7, sp, #0
 8004166:	6078      	str	r0, [r7, #4]
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	2b00      	cmp	r3, #0
 800416c:	d101      	bne.n	8004172 <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 800416e:	2301      	movs	r3, #1
 8004170:	e237      	b.n	80045e2 <HAL_DMA_Abort_IT+0x482>
  }

  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004178:	b2db      	uxtb	r3, r3
 800417a:	2b02      	cmp	r3, #2
 800417c:	d004      	beq.n	8004188 <HAL_DMA_Abort_IT+0x28>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	2280      	movs	r2, #128	; 0x80
 8004182:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8004184:	2301      	movs	r3, #1
 8004186:	e22c      	b.n	80045e2 <HAL_DMA_Abort_IT+0x482>
  }
  else
  {
    if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	681b      	ldr	r3, [r3, #0]
 800418c:	4a5c      	ldr	r2, [pc, #368]	; (8004300 <HAL_DMA_Abort_IT+0x1a0>)
 800418e:	4293      	cmp	r3, r2
 8004190:	d04a      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	681b      	ldr	r3, [r3, #0]
 8004196:	4a5b      	ldr	r2, [pc, #364]	; (8004304 <HAL_DMA_Abort_IT+0x1a4>)
 8004198:	4293      	cmp	r3, r2
 800419a:	d045      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	4a59      	ldr	r2, [pc, #356]	; (8004308 <HAL_DMA_Abort_IT+0x1a8>)
 80041a2:	4293      	cmp	r3, r2
 80041a4:	d040      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	4a58      	ldr	r2, [pc, #352]	; (800430c <HAL_DMA_Abort_IT+0x1ac>)
 80041ac:	4293      	cmp	r3, r2
 80041ae:	d03b      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	4a56      	ldr	r2, [pc, #344]	; (8004310 <HAL_DMA_Abort_IT+0x1b0>)
 80041b6:	4293      	cmp	r3, r2
 80041b8:	d036      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	4a55      	ldr	r2, [pc, #340]	; (8004314 <HAL_DMA_Abort_IT+0x1b4>)
 80041c0:	4293      	cmp	r3, r2
 80041c2:	d031      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	4a53      	ldr	r2, [pc, #332]	; (8004318 <HAL_DMA_Abort_IT+0x1b8>)
 80041ca:	4293      	cmp	r3, r2
 80041cc:	d02c      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	4a52      	ldr	r2, [pc, #328]	; (800431c <HAL_DMA_Abort_IT+0x1bc>)
 80041d4:	4293      	cmp	r3, r2
 80041d6:	d027      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	4a50      	ldr	r2, [pc, #320]	; (8004320 <HAL_DMA_Abort_IT+0x1c0>)
 80041de:	4293      	cmp	r3, r2
 80041e0:	d022      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	681b      	ldr	r3, [r3, #0]
 80041e6:	4a4f      	ldr	r2, [pc, #316]	; (8004324 <HAL_DMA_Abort_IT+0x1c4>)
 80041e8:	4293      	cmp	r3, r2
 80041ea:	d01d      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	4a4d      	ldr	r2, [pc, #308]	; (8004328 <HAL_DMA_Abort_IT+0x1c8>)
 80041f2:	4293      	cmp	r3, r2
 80041f4:	d018      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	4a4c      	ldr	r2, [pc, #304]	; (800432c <HAL_DMA_Abort_IT+0x1cc>)
 80041fc:	4293      	cmp	r3, r2
 80041fe:	d013      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	4a4a      	ldr	r2, [pc, #296]	; (8004330 <HAL_DMA_Abort_IT+0x1d0>)
 8004206:	4293      	cmp	r3, r2
 8004208:	d00e      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	681b      	ldr	r3, [r3, #0]
 800420e:	4a49      	ldr	r2, [pc, #292]	; (8004334 <HAL_DMA_Abort_IT+0x1d4>)
 8004210:	4293      	cmp	r3, r2
 8004212:	d009      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	4a47      	ldr	r2, [pc, #284]	; (8004338 <HAL_DMA_Abort_IT+0x1d8>)
 800421a:	4293      	cmp	r3, r2
 800421c:	d004      	beq.n	8004228 <HAL_DMA_Abort_IT+0xc8>
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	4a46      	ldr	r2, [pc, #280]	; (800433c <HAL_DMA_Abort_IT+0x1dc>)
 8004224:	4293      	cmp	r3, r2
 8004226:	d101      	bne.n	800422c <HAL_DMA_Abort_IT+0xcc>
 8004228:	2301      	movs	r3, #1
 800422a:	e000      	b.n	800422e <HAL_DMA_Abort_IT+0xce>
 800422c:	2300      	movs	r3, #0
 800422e:	2b00      	cmp	r3, #0
 8004230:	f000 8086 	beq.w	8004340 <HAL_DMA_Abort_IT+0x1e0>
    {
      /* Set Abort State  */
      hdma->State = HAL_DMA_STATE_ABORT;
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	2204      	movs	r2, #4
 8004238:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	4a2f      	ldr	r2, [pc, #188]	; (8004300 <HAL_DMA_Abort_IT+0x1a0>)
 8004242:	4293      	cmp	r3, r2
 8004244:	d04a      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	4a2e      	ldr	r2, [pc, #184]	; (8004304 <HAL_DMA_Abort_IT+0x1a4>)
 800424c:	4293      	cmp	r3, r2
 800424e:	d045      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	4a2c      	ldr	r2, [pc, #176]	; (8004308 <HAL_DMA_Abort_IT+0x1a8>)
 8004256:	4293      	cmp	r3, r2
 8004258:	d040      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	4a2b      	ldr	r2, [pc, #172]	; (800430c <HAL_DMA_Abort_IT+0x1ac>)
 8004260:	4293      	cmp	r3, r2
 8004262:	d03b      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	4a29      	ldr	r2, [pc, #164]	; (8004310 <HAL_DMA_Abort_IT+0x1b0>)
 800426a:	4293      	cmp	r3, r2
 800426c:	d036      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	4a28      	ldr	r2, [pc, #160]	; (8004314 <HAL_DMA_Abort_IT+0x1b4>)
 8004274:	4293      	cmp	r3, r2
 8004276:	d031      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	681b      	ldr	r3, [r3, #0]
 800427c:	4a26      	ldr	r2, [pc, #152]	; (8004318 <HAL_DMA_Abort_IT+0x1b8>)
 800427e:	4293      	cmp	r3, r2
 8004280:	d02c      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	4a25      	ldr	r2, [pc, #148]	; (800431c <HAL_DMA_Abort_IT+0x1bc>)
 8004288:	4293      	cmp	r3, r2
 800428a:	d027      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	4a23      	ldr	r2, [pc, #140]	; (8004320 <HAL_DMA_Abort_IT+0x1c0>)
 8004292:	4293      	cmp	r3, r2
 8004294:	d022      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	4a22      	ldr	r2, [pc, #136]	; (8004324 <HAL_DMA_Abort_IT+0x1c4>)
 800429c:	4293      	cmp	r3, r2
 800429e:	d01d      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	4a20      	ldr	r2, [pc, #128]	; (8004328 <HAL_DMA_Abort_IT+0x1c8>)
 80042a6:	4293      	cmp	r3, r2
 80042a8:	d018      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	4a1f      	ldr	r2, [pc, #124]	; (800432c <HAL_DMA_Abort_IT+0x1cc>)
 80042b0:	4293      	cmp	r3, r2
 80042b2:	d013      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	4a1d      	ldr	r2, [pc, #116]	; (8004330 <HAL_DMA_Abort_IT+0x1d0>)
 80042ba:	4293      	cmp	r3, r2
 80042bc:	d00e      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	4a1c      	ldr	r2, [pc, #112]	; (8004334 <HAL_DMA_Abort_IT+0x1d4>)
 80042c4:	4293      	cmp	r3, r2
 80042c6:	d009      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	4a1a      	ldr	r2, [pc, #104]	; (8004338 <HAL_DMA_Abort_IT+0x1d8>)
 80042ce:	4293      	cmp	r3, r2
 80042d0:	d004      	beq.n	80042dc <HAL_DMA_Abort_IT+0x17c>
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	4a19      	ldr	r2, [pc, #100]	; (800433c <HAL_DMA_Abort_IT+0x1dc>)
 80042d8:	4293      	cmp	r3, r2
 80042da:	d108      	bne.n	80042ee <HAL_DMA_Abort_IT+0x18e>
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	681a      	ldr	r2, [r3, #0]
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	681b      	ldr	r3, [r3, #0]
 80042e6:	f022 0201 	bic.w	r2, r2, #1
 80042ea:	601a      	str	r2, [r3, #0]
 80042ec:	e178      	b.n	80045e0 <HAL_DMA_Abort_IT+0x480>
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	681a      	ldr	r2, [r3, #0]
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	f022 0201 	bic.w	r2, r2, #1
 80042fc:	601a      	str	r2, [r3, #0]
 80042fe:	e16f      	b.n	80045e0 <HAL_DMA_Abort_IT+0x480>
 8004300:	40020010 	.word	0x40020010
 8004304:	40020028 	.word	0x40020028
 8004308:	40020040 	.word	0x40020040
 800430c:	40020058 	.word	0x40020058
 8004310:	40020070 	.word	0x40020070
 8004314:	40020088 	.word	0x40020088
 8004318:	400200a0 	.word	0x400200a0
 800431c:	400200b8 	.word	0x400200b8
 8004320:	40020410 	.word	0x40020410
 8004324:	40020428 	.word	0x40020428
 8004328:	40020440 	.word	0x40020440
 800432c:	40020458 	.word	0x40020458
 8004330:	40020470 	.word	0x40020470
 8004334:	40020488 	.word	0x40020488
 8004338:	400204a0 	.word	0x400204a0
 800433c:	400204b8 	.word	0x400204b8
    }
    else /* BDMA channel */
    {
      /* Disable DMA All Interrupts  */
      ((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR  &= ~(BDMA_CCR_TCIE | BDMA_CCR_HTIE | BDMA_CCR_TEIE);
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	681a      	ldr	r2, [r3, #0]
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	f022 020e 	bic.w	r2, r2, #14
 800434e:	601a      	str	r2, [r3, #0]

      /* Disable the channel */
      __HAL_DMA_DISABLE(hdma);
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	4a6c      	ldr	r2, [pc, #432]	; (8004508 <HAL_DMA_Abort_IT+0x3a8>)
 8004356:	4293      	cmp	r3, r2
 8004358:	d04a      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	4a6b      	ldr	r2, [pc, #428]	; (800450c <HAL_DMA_Abort_IT+0x3ac>)
 8004360:	4293      	cmp	r3, r2
 8004362:	d045      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	4a69      	ldr	r2, [pc, #420]	; (8004510 <HAL_DMA_Abort_IT+0x3b0>)
 800436a:	4293      	cmp	r3, r2
 800436c:	d040      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	4a68      	ldr	r2, [pc, #416]	; (8004514 <HAL_DMA_Abort_IT+0x3b4>)
 8004374:	4293      	cmp	r3, r2
 8004376:	d03b      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	4a66      	ldr	r2, [pc, #408]	; (8004518 <HAL_DMA_Abort_IT+0x3b8>)
 800437e:	4293      	cmp	r3, r2
 8004380:	d036      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	4a65      	ldr	r2, [pc, #404]	; (800451c <HAL_DMA_Abort_IT+0x3bc>)
 8004388:	4293      	cmp	r3, r2
 800438a:	d031      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	681b      	ldr	r3, [r3, #0]
 8004390:	4a63      	ldr	r2, [pc, #396]	; (8004520 <HAL_DMA_Abort_IT+0x3c0>)
 8004392:	4293      	cmp	r3, r2
 8004394:	d02c      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	4a62      	ldr	r2, [pc, #392]	; (8004524 <HAL_DMA_Abort_IT+0x3c4>)
 800439c:	4293      	cmp	r3, r2
 800439e:	d027      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	4a60      	ldr	r2, [pc, #384]	; (8004528 <HAL_DMA_Abort_IT+0x3c8>)
 80043a6:	4293      	cmp	r3, r2
 80043a8:	d022      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	4a5f      	ldr	r2, [pc, #380]	; (800452c <HAL_DMA_Abort_IT+0x3cc>)
 80043b0:	4293      	cmp	r3, r2
 80043b2:	d01d      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	4a5d      	ldr	r2, [pc, #372]	; (8004530 <HAL_DMA_Abort_IT+0x3d0>)
 80043ba:	4293      	cmp	r3, r2
 80043bc:	d018      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	4a5c      	ldr	r2, [pc, #368]	; (8004534 <HAL_DMA_Abort_IT+0x3d4>)
 80043c4:	4293      	cmp	r3, r2
 80043c6:	d013      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	681b      	ldr	r3, [r3, #0]
 80043cc:	4a5a      	ldr	r2, [pc, #360]	; (8004538 <HAL_DMA_Abort_IT+0x3d8>)
 80043ce:	4293      	cmp	r3, r2
 80043d0:	d00e      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	681b      	ldr	r3, [r3, #0]
 80043d6:	4a59      	ldr	r2, [pc, #356]	; (800453c <HAL_DMA_Abort_IT+0x3dc>)
 80043d8:	4293      	cmp	r3, r2
 80043da:	d009      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	4a57      	ldr	r2, [pc, #348]	; (8004540 <HAL_DMA_Abort_IT+0x3e0>)
 80043e2:	4293      	cmp	r3, r2
 80043e4:	d004      	beq.n	80043f0 <HAL_DMA_Abort_IT+0x290>
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	4a56      	ldr	r2, [pc, #344]	; (8004544 <HAL_DMA_Abort_IT+0x3e4>)
 80043ec:	4293      	cmp	r3, r2
 80043ee:	d108      	bne.n	8004402 <HAL_DMA_Abort_IT+0x2a2>
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	681a      	ldr	r2, [r3, #0]
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	f022 0201 	bic.w	r2, r2, #1
 80043fe:	601a      	str	r2, [r3, #0]
 8004400:	e007      	b.n	8004412 <HAL_DMA_Abort_IT+0x2b2>
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	681a      	ldr	r2, [r3, #0]
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	681b      	ldr	r3, [r3, #0]
 800440c:	f022 0201 	bic.w	r2, r2, #1
 8004410:	601a      	str	r2, [r3, #0]

      if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	4a3c      	ldr	r2, [pc, #240]	; (8004508 <HAL_DMA_Abort_IT+0x3a8>)
 8004418:	4293      	cmp	r3, r2
 800441a:	d072      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	4a3a      	ldr	r2, [pc, #232]	; (800450c <HAL_DMA_Abort_IT+0x3ac>)
 8004422:	4293      	cmp	r3, r2
 8004424:	d06d      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	4a39      	ldr	r2, [pc, #228]	; (8004510 <HAL_DMA_Abort_IT+0x3b0>)
 800442c:	4293      	cmp	r3, r2
 800442e:	d068      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	4a37      	ldr	r2, [pc, #220]	; (8004514 <HAL_DMA_Abort_IT+0x3b4>)
 8004436:	4293      	cmp	r3, r2
 8004438:	d063      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	4a36      	ldr	r2, [pc, #216]	; (8004518 <HAL_DMA_Abort_IT+0x3b8>)
 8004440:	4293      	cmp	r3, r2
 8004442:	d05e      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	4a34      	ldr	r2, [pc, #208]	; (800451c <HAL_DMA_Abort_IT+0x3bc>)
 800444a:	4293      	cmp	r3, r2
 800444c:	d059      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	4a33      	ldr	r2, [pc, #204]	; (8004520 <HAL_DMA_Abort_IT+0x3c0>)
 8004454:	4293      	cmp	r3, r2
 8004456:	d054      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	4a31      	ldr	r2, [pc, #196]	; (8004524 <HAL_DMA_Abort_IT+0x3c4>)
 800445e:	4293      	cmp	r3, r2
 8004460:	d04f      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	4a30      	ldr	r2, [pc, #192]	; (8004528 <HAL_DMA_Abort_IT+0x3c8>)
 8004468:	4293      	cmp	r3, r2
 800446a:	d04a      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	4a2e      	ldr	r2, [pc, #184]	; (800452c <HAL_DMA_Abort_IT+0x3cc>)
 8004472:	4293      	cmp	r3, r2
 8004474:	d045      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	681b      	ldr	r3, [r3, #0]
 800447a:	4a2d      	ldr	r2, [pc, #180]	; (8004530 <HAL_DMA_Abort_IT+0x3d0>)
 800447c:	4293      	cmp	r3, r2
 800447e:	d040      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	4a2b      	ldr	r2, [pc, #172]	; (8004534 <HAL_DMA_Abort_IT+0x3d4>)
 8004486:	4293      	cmp	r3, r2
 8004488:	d03b      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	4a2a      	ldr	r2, [pc, #168]	; (8004538 <HAL_DMA_Abort_IT+0x3d8>)
 8004490:	4293      	cmp	r3, r2
 8004492:	d036      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	4a28      	ldr	r2, [pc, #160]	; (800453c <HAL_DMA_Abort_IT+0x3dc>)
 800449a:	4293      	cmp	r3, r2
 800449c:	d031      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	4a27      	ldr	r2, [pc, #156]	; (8004540 <HAL_DMA_Abort_IT+0x3e0>)
 80044a4:	4293      	cmp	r3, r2
 80044a6:	d02c      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	4a25      	ldr	r2, [pc, #148]	; (8004544 <HAL_DMA_Abort_IT+0x3e4>)
 80044ae:	4293      	cmp	r3, r2
 80044b0:	d027      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	4a24      	ldr	r2, [pc, #144]	; (8004548 <HAL_DMA_Abort_IT+0x3e8>)
 80044b8:	4293      	cmp	r3, r2
 80044ba:	d022      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	4a22      	ldr	r2, [pc, #136]	; (800454c <HAL_DMA_Abort_IT+0x3ec>)
 80044c2:	4293      	cmp	r3, r2
 80044c4:	d01d      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	4a21      	ldr	r2, [pc, #132]	; (8004550 <HAL_DMA_Abort_IT+0x3f0>)
 80044cc:	4293      	cmp	r3, r2
 80044ce:	d018      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	4a1f      	ldr	r2, [pc, #124]	; (8004554 <HAL_DMA_Abort_IT+0x3f4>)
 80044d6:	4293      	cmp	r3, r2
 80044d8:	d013      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	4a1e      	ldr	r2, [pc, #120]	; (8004558 <HAL_DMA_Abort_IT+0x3f8>)
 80044e0:	4293      	cmp	r3, r2
 80044e2:	d00e      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	4a1c      	ldr	r2, [pc, #112]	; (800455c <HAL_DMA_Abort_IT+0x3fc>)
 80044ea:	4293      	cmp	r3, r2
 80044ec:	d009      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	4a1b      	ldr	r2, [pc, #108]	; (8004560 <HAL_DMA_Abort_IT+0x400>)
 80044f4:	4293      	cmp	r3, r2
 80044f6:	d004      	beq.n	8004502 <HAL_DMA_Abort_IT+0x3a2>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	4a19      	ldr	r2, [pc, #100]	; (8004564 <HAL_DMA_Abort_IT+0x404>)
 80044fe:	4293      	cmp	r3, r2
 8004500:	d132      	bne.n	8004568 <HAL_DMA_Abort_IT+0x408>
 8004502:	2301      	movs	r3, #1
 8004504:	e031      	b.n	800456a <HAL_DMA_Abort_IT+0x40a>
 8004506:	bf00      	nop
 8004508:	40020010 	.word	0x40020010
 800450c:	40020028 	.word	0x40020028
 8004510:	40020040 	.word	0x40020040
 8004514:	40020058 	.word	0x40020058
 8004518:	40020070 	.word	0x40020070
 800451c:	40020088 	.word	0x40020088
 8004520:	400200a0 	.word	0x400200a0
 8004524:	400200b8 	.word	0x400200b8
 8004528:	40020410 	.word	0x40020410
 800452c:	40020428 	.word	0x40020428
 8004530:	40020440 	.word	0x40020440
 8004534:	40020458 	.word	0x40020458
 8004538:	40020470 	.word	0x40020470
 800453c:	40020488 	.word	0x40020488
 8004540:	400204a0 	.word	0x400204a0
 8004544:	400204b8 	.word	0x400204b8
 8004548:	58025408 	.word	0x58025408
 800454c:	5802541c 	.word	0x5802541c
 8004550:	58025430 	.word	0x58025430
 8004554:	58025444 	.word	0x58025444
 8004558:	58025458 	.word	0x58025458
 800455c:	5802546c 	.word	0x5802546c
 8004560:	58025480 	.word	0x58025480
 8004564:	58025494 	.word	0x58025494
 8004568:	2300      	movs	r3, #0
 800456a:	2b00      	cmp	r3, #0
 800456c:	d028      	beq.n	80045c0 <HAL_DMA_Abort_IT+0x460>
      {
        /* disable the DMAMUX sync overrun IT */
        hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004572:	681a      	ldr	r2, [r3, #0]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004578:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800457c:	601a      	str	r2, [r3, #0]

        /* Clear all flags */
        regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004582:	60fb      	str	r3, [r7, #12]
        regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004588:	f003 031f 	and.w	r3, r3, #31
 800458c:	2201      	movs	r2, #1
 800458e:	409a      	lsls	r2, r3
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	605a      	str	r2, [r3, #4]

        /* Clear the DMAMUX synchro overrun flag */
        hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004598:	687a      	ldr	r2, [r7, #4]
 800459a:	6e92      	ldr	r2, [r2, #104]	; 0x68
 800459c:	605a      	str	r2, [r3, #4]

        if(hdma->DMAmuxRequestGen != 0U)
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	d00c      	beq.n	80045c0 <HAL_DMA_Abort_IT+0x460>
        {
          /* if using DMAMUX request generator, disable the DMAMUX request generator overrun IT*/
          /* disable the request gen overrun IT */
          hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80045aa:	681a      	ldr	r2, [r3, #0]
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80045b0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80045b4:	601a      	str	r2, [r3, #0]

          /* Clear the DMAMUX request generator overrun flag */
          hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80045ba:	687a      	ldr	r2, [r7, #4]
 80045bc:	6f52      	ldr	r2, [r2, #116]	; 0x74
 80045be:	605a      	str	r2, [r3, #4]
        }
      }

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	2201      	movs	r2, #1
 80045c4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	2200      	movs	r2, #0
 80045cc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      /* Call User Abort callback */
      if(hdma->XferAbortCallback != NULL)
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d003      	beq.n	80045e0 <HAL_DMA_Abort_IT+0x480>
      {
        hdma->XferAbortCallback(hdma);
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80045dc:	6878      	ldr	r0, [r7, #4]
 80045de:	4798      	blx	r3
      }
    }
  }

  return HAL_OK;
 80045e0:	2300      	movs	r3, #0
}
 80045e2:	4618      	mov	r0, r3
 80045e4:	3710      	adds	r7, #16
 80045e6:	46bd      	mov	sp, r7
 80045e8:	bd80      	pop	{r7, pc}
 80045ea:	bf00      	nop

080045ec <HAL_DMA_IRQHandler>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80045ec:	b580      	push	{r7, lr}
 80045ee:	b08a      	sub	sp, #40	; 0x28
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr_dma, tmpisr_bdma;
  uint32_t ccr_reg;
  __IO uint32_t count = 0U;
 80045f4:	2300      	movs	r3, #0
 80045f6:	60fb      	str	r3, [r7, #12]
  uint32_t timeout = SystemCoreClock / 9600U;
 80045f8:	4b67      	ldr	r3, [pc, #412]	; (8004798 <HAL_DMA_IRQHandler+0x1ac>)
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	4a67      	ldr	r2, [pc, #412]	; (800479c <HAL_DMA_IRQHandler+0x1b0>)
 80045fe:	fba2 2303 	umull	r2, r3, r2, r3
 8004602:	0a9b      	lsrs	r3, r3, #10
 8004604:	627b      	str	r3, [r7, #36]	; 0x24

  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800460a:	623b      	str	r3, [r7, #32]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004610:	61fb      	str	r3, [r7, #28]

  tmpisr_dma  = regs_dma->ISR;
 8004612:	6a3b      	ldr	r3, [r7, #32]
 8004614:	681b      	ldr	r3, [r3, #0]
 8004616:	61bb      	str	r3, [r7, #24]
  tmpisr_bdma = regs_bdma->ISR;
 8004618:	69fb      	ldr	r3, [r7, #28]
 800461a:	681b      	ldr	r3, [r3, #0]
 800461c:	617b      	str	r3, [r7, #20]

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U)  /* DMA1 or DMA2 instance */
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	4a5f      	ldr	r2, [pc, #380]	; (80047a0 <HAL_DMA_IRQHandler+0x1b4>)
 8004624:	4293      	cmp	r3, r2
 8004626:	d04a      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	4a5d      	ldr	r2, [pc, #372]	; (80047a4 <HAL_DMA_IRQHandler+0x1b8>)
 800462e:	4293      	cmp	r3, r2
 8004630:	d045      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	4a5c      	ldr	r2, [pc, #368]	; (80047a8 <HAL_DMA_IRQHandler+0x1bc>)
 8004638:	4293      	cmp	r3, r2
 800463a:	d040      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	4a5a      	ldr	r2, [pc, #360]	; (80047ac <HAL_DMA_IRQHandler+0x1c0>)
 8004642:	4293      	cmp	r3, r2
 8004644:	d03b      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	4a59      	ldr	r2, [pc, #356]	; (80047b0 <HAL_DMA_IRQHandler+0x1c4>)
 800464c:	4293      	cmp	r3, r2
 800464e:	d036      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	4a57      	ldr	r2, [pc, #348]	; (80047b4 <HAL_DMA_IRQHandler+0x1c8>)
 8004656:	4293      	cmp	r3, r2
 8004658:	d031      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	4a56      	ldr	r2, [pc, #344]	; (80047b8 <HAL_DMA_IRQHandler+0x1cc>)
 8004660:	4293      	cmp	r3, r2
 8004662:	d02c      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	4a54      	ldr	r2, [pc, #336]	; (80047bc <HAL_DMA_IRQHandler+0x1d0>)
 800466a:	4293      	cmp	r3, r2
 800466c:	d027      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	4a53      	ldr	r2, [pc, #332]	; (80047c0 <HAL_DMA_IRQHandler+0x1d4>)
 8004674:	4293      	cmp	r3, r2
 8004676:	d022      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	4a51      	ldr	r2, [pc, #324]	; (80047c4 <HAL_DMA_IRQHandler+0x1d8>)
 800467e:	4293      	cmp	r3, r2
 8004680:	d01d      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	681b      	ldr	r3, [r3, #0]
 8004686:	4a50      	ldr	r2, [pc, #320]	; (80047c8 <HAL_DMA_IRQHandler+0x1dc>)
 8004688:	4293      	cmp	r3, r2
 800468a:	d018      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	4a4e      	ldr	r2, [pc, #312]	; (80047cc <HAL_DMA_IRQHandler+0x1e0>)
 8004692:	4293      	cmp	r3, r2
 8004694:	d013      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	4a4d      	ldr	r2, [pc, #308]	; (80047d0 <HAL_DMA_IRQHandler+0x1e4>)
 800469c:	4293      	cmp	r3, r2
 800469e:	d00e      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	4a4b      	ldr	r2, [pc, #300]	; (80047d4 <HAL_DMA_IRQHandler+0x1e8>)
 80046a6:	4293      	cmp	r3, r2
 80046a8:	d009      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	681b      	ldr	r3, [r3, #0]
 80046ae:	4a4a      	ldr	r2, [pc, #296]	; (80047d8 <HAL_DMA_IRQHandler+0x1ec>)
 80046b0:	4293      	cmp	r3, r2
 80046b2:	d004      	beq.n	80046be <HAL_DMA_IRQHandler+0xd2>
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	4a48      	ldr	r2, [pc, #288]	; (80047dc <HAL_DMA_IRQHandler+0x1f0>)
 80046ba:	4293      	cmp	r3, r2
 80046bc:	d101      	bne.n	80046c2 <HAL_DMA_IRQHandler+0xd6>
 80046be:	2301      	movs	r3, #1
 80046c0:	e000      	b.n	80046c4 <HAL_DMA_IRQHandler+0xd8>
 80046c2:	2300      	movs	r3, #0
 80046c4:	2b00      	cmp	r3, #0
 80046c6:	f000 842b 	beq.w	8004f20 <HAL_DMA_IRQHandler+0x934>
  {
    /* Transfer Error Interrupt management ***************************************/
    if ((tmpisr_dma & (DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80046ce:	f003 031f 	and.w	r3, r3, #31
 80046d2:	2208      	movs	r2, #8
 80046d4:	409a      	lsls	r2, r3
 80046d6:	69bb      	ldr	r3, [r7, #24]
 80046d8:	4013      	ands	r3, r2
 80046da:	2b00      	cmp	r3, #0
 80046dc:	f000 80a2 	beq.w	8004824 <HAL_DMA_IRQHandler+0x238>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != 0U)
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	4a2e      	ldr	r2, [pc, #184]	; (80047a0 <HAL_DMA_IRQHandler+0x1b4>)
 80046e6:	4293      	cmp	r3, r2
 80046e8:	d04a      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 80046ea:	687b      	ldr	r3, [r7, #4]
 80046ec:	681b      	ldr	r3, [r3, #0]
 80046ee:	4a2d      	ldr	r2, [pc, #180]	; (80047a4 <HAL_DMA_IRQHandler+0x1b8>)
 80046f0:	4293      	cmp	r3, r2
 80046f2:	d045      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	4a2b      	ldr	r2, [pc, #172]	; (80047a8 <HAL_DMA_IRQHandler+0x1bc>)
 80046fa:	4293      	cmp	r3, r2
 80046fc:	d040      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	4a2a      	ldr	r2, [pc, #168]	; (80047ac <HAL_DMA_IRQHandler+0x1c0>)
 8004704:	4293      	cmp	r3, r2
 8004706:	d03b      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	4a28      	ldr	r2, [pc, #160]	; (80047b0 <HAL_DMA_IRQHandler+0x1c4>)
 800470e:	4293      	cmp	r3, r2
 8004710:	d036      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	4a27      	ldr	r2, [pc, #156]	; (80047b4 <HAL_DMA_IRQHandler+0x1c8>)
 8004718:	4293      	cmp	r3, r2
 800471a:	d031      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	4a25      	ldr	r2, [pc, #148]	; (80047b8 <HAL_DMA_IRQHandler+0x1cc>)
 8004722:	4293      	cmp	r3, r2
 8004724:	d02c      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	4a24      	ldr	r2, [pc, #144]	; (80047bc <HAL_DMA_IRQHandler+0x1d0>)
 800472c:	4293      	cmp	r3, r2
 800472e:	d027      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	4a22      	ldr	r2, [pc, #136]	; (80047c0 <HAL_DMA_IRQHandler+0x1d4>)
 8004736:	4293      	cmp	r3, r2
 8004738:	d022      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	681b      	ldr	r3, [r3, #0]
 800473e:	4a21      	ldr	r2, [pc, #132]	; (80047c4 <HAL_DMA_IRQHandler+0x1d8>)
 8004740:	4293      	cmp	r3, r2
 8004742:	d01d      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	4a1f      	ldr	r2, [pc, #124]	; (80047c8 <HAL_DMA_IRQHandler+0x1dc>)
 800474a:	4293      	cmp	r3, r2
 800474c:	d018      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	4a1e      	ldr	r2, [pc, #120]	; (80047cc <HAL_DMA_IRQHandler+0x1e0>)
 8004754:	4293      	cmp	r3, r2
 8004756:	d013      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	4a1c      	ldr	r2, [pc, #112]	; (80047d0 <HAL_DMA_IRQHandler+0x1e4>)
 800475e:	4293      	cmp	r3, r2
 8004760:	d00e      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	681b      	ldr	r3, [r3, #0]
 8004766:	4a1b      	ldr	r2, [pc, #108]	; (80047d4 <HAL_DMA_IRQHandler+0x1e8>)
 8004768:	4293      	cmp	r3, r2
 800476a:	d009      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	4a19      	ldr	r2, [pc, #100]	; (80047d8 <HAL_DMA_IRQHandler+0x1ec>)
 8004772:	4293      	cmp	r3, r2
 8004774:	d004      	beq.n	8004780 <HAL_DMA_IRQHandler+0x194>
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	4a18      	ldr	r2, [pc, #96]	; (80047dc <HAL_DMA_IRQHandler+0x1f0>)
 800477c:	4293      	cmp	r3, r2
 800477e:	d12f      	bne.n	80047e0 <HAL_DMA_IRQHandler+0x1f4>
 8004780:	687b      	ldr	r3, [r7, #4]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	f003 0304 	and.w	r3, r3, #4
 800478a:	2b00      	cmp	r3, #0
 800478c:	bf14      	ite	ne
 800478e:	2301      	movne	r3, #1
 8004790:	2300      	moveq	r3, #0
 8004792:	b2db      	uxtb	r3, r3
 8004794:	e02e      	b.n	80047f4 <HAL_DMA_IRQHandler+0x208>
 8004796:	bf00      	nop
 8004798:	24000004 	.word	0x24000004
 800479c:	1b4e81b5 	.word	0x1b4e81b5
 80047a0:	40020010 	.word	0x40020010
 80047a4:	40020028 	.word	0x40020028
 80047a8:	40020040 	.word	0x40020040
 80047ac:	40020058 	.word	0x40020058
 80047b0:	40020070 	.word	0x40020070
 80047b4:	40020088 	.word	0x40020088
 80047b8:	400200a0 	.word	0x400200a0
 80047bc:	400200b8 	.word	0x400200b8
 80047c0:	40020410 	.word	0x40020410
 80047c4:	40020428 	.word	0x40020428
 80047c8:	40020440 	.word	0x40020440
 80047cc:	40020458 	.word	0x40020458
 80047d0:	40020470 	.word	0x40020470
 80047d4:	40020488 	.word	0x40020488
 80047d8:	400204a0 	.word	0x400204a0
 80047dc:	400204b8 	.word	0x400204b8
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	681b      	ldr	r3, [r3, #0]
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	f003 0308 	and.w	r3, r3, #8
 80047ea:	2b00      	cmp	r3, #0
 80047ec:	bf14      	ite	ne
 80047ee:	2301      	movne	r3, #1
 80047f0:	2300      	moveq	r3, #0
 80047f2:	b2db      	uxtb	r3, r3
 80047f4:	2b00      	cmp	r3, #0
 80047f6:	d015      	beq.n	8004824 <HAL_DMA_IRQHandler+0x238>
      {
        /* Disable the transfer error interrupt */
        ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TE);
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	681a      	ldr	r2, [r3, #0]
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	f022 0204 	bic.w	r2, r2, #4
 8004806:	601a      	str	r2, [r3, #0]

        /* Clear the transfer error flag */
        regs_dma->IFCR = DMA_FLAG_TEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800480c:	f003 031f 	and.w	r3, r3, #31
 8004810:	2208      	movs	r2, #8
 8004812:	409a      	lsls	r2, r3
 8004814:	6a3b      	ldr	r3, [r7, #32]
 8004816:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800481c:	f043 0201 	orr.w	r2, r3, #1
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* FIFO Error Interrupt management ******************************************/
    if ((tmpisr_dma & (DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004828:	f003 031f 	and.w	r3, r3, #31
 800482c:	69ba      	ldr	r2, [r7, #24]
 800482e:	fa22 f303 	lsr.w	r3, r2, r3
 8004832:	f003 0301 	and.w	r3, r3, #1
 8004836:	2b00      	cmp	r3, #0
 8004838:	d06e      	beq.n	8004918 <HAL_DMA_IRQHandler+0x32c>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != 0U)
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	4a69      	ldr	r2, [pc, #420]	; (80049e4 <HAL_DMA_IRQHandler+0x3f8>)
 8004840:	4293      	cmp	r3, r2
 8004842:	d04a      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	4a67      	ldr	r2, [pc, #412]	; (80049e8 <HAL_DMA_IRQHandler+0x3fc>)
 800484a:	4293      	cmp	r3, r2
 800484c:	d045      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	4a66      	ldr	r2, [pc, #408]	; (80049ec <HAL_DMA_IRQHandler+0x400>)
 8004854:	4293      	cmp	r3, r2
 8004856:	d040      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	4a64      	ldr	r2, [pc, #400]	; (80049f0 <HAL_DMA_IRQHandler+0x404>)
 800485e:	4293      	cmp	r3, r2
 8004860:	d03b      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	4a63      	ldr	r2, [pc, #396]	; (80049f4 <HAL_DMA_IRQHandler+0x408>)
 8004868:	4293      	cmp	r3, r2
 800486a:	d036      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	4a61      	ldr	r2, [pc, #388]	; (80049f8 <HAL_DMA_IRQHandler+0x40c>)
 8004872:	4293      	cmp	r3, r2
 8004874:	d031      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	4a60      	ldr	r2, [pc, #384]	; (80049fc <HAL_DMA_IRQHandler+0x410>)
 800487c:	4293      	cmp	r3, r2
 800487e:	d02c      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	4a5e      	ldr	r2, [pc, #376]	; (8004a00 <HAL_DMA_IRQHandler+0x414>)
 8004886:	4293      	cmp	r3, r2
 8004888:	d027      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	4a5d      	ldr	r2, [pc, #372]	; (8004a04 <HAL_DMA_IRQHandler+0x418>)
 8004890:	4293      	cmp	r3, r2
 8004892:	d022      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	4a5b      	ldr	r2, [pc, #364]	; (8004a08 <HAL_DMA_IRQHandler+0x41c>)
 800489a:	4293      	cmp	r3, r2
 800489c:	d01d      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	4a5a      	ldr	r2, [pc, #360]	; (8004a0c <HAL_DMA_IRQHandler+0x420>)
 80048a4:	4293      	cmp	r3, r2
 80048a6:	d018      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	4a58      	ldr	r2, [pc, #352]	; (8004a10 <HAL_DMA_IRQHandler+0x424>)
 80048ae:	4293      	cmp	r3, r2
 80048b0:	d013      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	4a57      	ldr	r2, [pc, #348]	; (8004a14 <HAL_DMA_IRQHandler+0x428>)
 80048b8:	4293      	cmp	r3, r2
 80048ba:	d00e      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	4a55      	ldr	r2, [pc, #340]	; (8004a18 <HAL_DMA_IRQHandler+0x42c>)
 80048c2:	4293      	cmp	r3, r2
 80048c4:	d009      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	4a54      	ldr	r2, [pc, #336]	; (8004a1c <HAL_DMA_IRQHandler+0x430>)
 80048cc:	4293      	cmp	r3, r2
 80048ce:	d004      	beq.n	80048da <HAL_DMA_IRQHandler+0x2ee>
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	4a52      	ldr	r2, [pc, #328]	; (8004a20 <HAL_DMA_IRQHandler+0x434>)
 80048d6:	4293      	cmp	r3, r2
 80048d8:	d10a      	bne.n	80048f0 <HAL_DMA_IRQHandler+0x304>
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	695b      	ldr	r3, [r3, #20]
 80048e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80048e4:	2b00      	cmp	r3, #0
 80048e6:	bf14      	ite	ne
 80048e8:	2301      	movne	r3, #1
 80048ea:	2300      	moveq	r3, #0
 80048ec:	b2db      	uxtb	r3, r3
 80048ee:	e003      	b.n	80048f8 <HAL_DMA_IRQHandler+0x30c>
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	2300      	movs	r3, #0
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d00d      	beq.n	8004918 <HAL_DMA_IRQHandler+0x32c>
      {
        /* Clear the FIFO error flag */
        regs_dma->IFCR = DMA_FLAG_FEIF0_4 << (hdma->StreamIndex & 0x1FU);
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004900:	f003 031f 	and.w	r3, r3, #31
 8004904:	2201      	movs	r2, #1
 8004906:	409a      	lsls	r2, r3
 8004908:	6a3b      	ldr	r3, [r7, #32]
 800490a:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004910:	f043 0202 	orr.w	r2, r3, #2
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Direct Mode Error Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004918:	687b      	ldr	r3, [r7, #4]
 800491a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800491c:	f003 031f 	and.w	r3, r3, #31
 8004920:	2204      	movs	r2, #4
 8004922:	409a      	lsls	r2, r3
 8004924:	69bb      	ldr	r3, [r7, #24]
 8004926:	4013      	ands	r3, r2
 8004928:	2b00      	cmp	r3, #0
 800492a:	f000 808f 	beq.w	8004a4c <HAL_DMA_IRQHandler+0x460>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != 0U)
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	4a2c      	ldr	r2, [pc, #176]	; (80049e4 <HAL_DMA_IRQHandler+0x3f8>)
 8004934:	4293      	cmp	r3, r2
 8004936:	d04a      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	4a2a      	ldr	r2, [pc, #168]	; (80049e8 <HAL_DMA_IRQHandler+0x3fc>)
 800493e:	4293      	cmp	r3, r2
 8004940:	d045      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004942:	687b      	ldr	r3, [r7, #4]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	4a29      	ldr	r2, [pc, #164]	; (80049ec <HAL_DMA_IRQHandler+0x400>)
 8004948:	4293      	cmp	r3, r2
 800494a:	d040      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	4a27      	ldr	r2, [pc, #156]	; (80049f0 <HAL_DMA_IRQHandler+0x404>)
 8004952:	4293      	cmp	r3, r2
 8004954:	d03b      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004956:	687b      	ldr	r3, [r7, #4]
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	4a26      	ldr	r2, [pc, #152]	; (80049f4 <HAL_DMA_IRQHandler+0x408>)
 800495c:	4293      	cmp	r3, r2
 800495e:	d036      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	4a24      	ldr	r2, [pc, #144]	; (80049f8 <HAL_DMA_IRQHandler+0x40c>)
 8004966:	4293      	cmp	r3, r2
 8004968:	d031      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	4a23      	ldr	r2, [pc, #140]	; (80049fc <HAL_DMA_IRQHandler+0x410>)
 8004970:	4293      	cmp	r3, r2
 8004972:	d02c      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	4a21      	ldr	r2, [pc, #132]	; (8004a00 <HAL_DMA_IRQHandler+0x414>)
 800497a:	4293      	cmp	r3, r2
 800497c:	d027      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	4a20      	ldr	r2, [pc, #128]	; (8004a04 <HAL_DMA_IRQHandler+0x418>)
 8004984:	4293      	cmp	r3, r2
 8004986:	d022      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	681b      	ldr	r3, [r3, #0]
 800498c:	4a1e      	ldr	r2, [pc, #120]	; (8004a08 <HAL_DMA_IRQHandler+0x41c>)
 800498e:	4293      	cmp	r3, r2
 8004990:	d01d      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	4a1d      	ldr	r2, [pc, #116]	; (8004a0c <HAL_DMA_IRQHandler+0x420>)
 8004998:	4293      	cmp	r3, r2
 800499a:	d018      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	4a1b      	ldr	r2, [pc, #108]	; (8004a10 <HAL_DMA_IRQHandler+0x424>)
 80049a2:	4293      	cmp	r3, r2
 80049a4:	d013      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 80049a6:	687b      	ldr	r3, [r7, #4]
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	4a1a      	ldr	r2, [pc, #104]	; (8004a14 <HAL_DMA_IRQHandler+0x428>)
 80049ac:	4293      	cmp	r3, r2
 80049ae:	d00e      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	4a18      	ldr	r2, [pc, #96]	; (8004a18 <HAL_DMA_IRQHandler+0x42c>)
 80049b6:	4293      	cmp	r3, r2
 80049b8:	d009      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	4a17      	ldr	r2, [pc, #92]	; (8004a1c <HAL_DMA_IRQHandler+0x430>)
 80049c0:	4293      	cmp	r3, r2
 80049c2:	d004      	beq.n	80049ce <HAL_DMA_IRQHandler+0x3e2>
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	4a15      	ldr	r2, [pc, #84]	; (8004a20 <HAL_DMA_IRQHandler+0x434>)
 80049ca:	4293      	cmp	r3, r2
 80049cc:	d12a      	bne.n	8004a24 <HAL_DMA_IRQHandler+0x438>
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	681b      	ldr	r3, [r3, #0]
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	f003 0302 	and.w	r3, r3, #2
 80049d8:	2b00      	cmp	r3, #0
 80049da:	bf14      	ite	ne
 80049dc:	2301      	movne	r3, #1
 80049de:	2300      	moveq	r3, #0
 80049e0:	b2db      	uxtb	r3, r3
 80049e2:	e023      	b.n	8004a2c <HAL_DMA_IRQHandler+0x440>
 80049e4:	40020010 	.word	0x40020010
 80049e8:	40020028 	.word	0x40020028
 80049ec:	40020040 	.word	0x40020040
 80049f0:	40020058 	.word	0x40020058
 80049f4:	40020070 	.word	0x40020070
 80049f8:	40020088 	.word	0x40020088
 80049fc:	400200a0 	.word	0x400200a0
 8004a00:	400200b8 	.word	0x400200b8
 8004a04:	40020410 	.word	0x40020410
 8004a08:	40020428 	.word	0x40020428
 8004a0c:	40020440 	.word	0x40020440
 8004a10:	40020458 	.word	0x40020458
 8004a14:	40020470 	.word	0x40020470
 8004a18:	40020488 	.word	0x40020488
 8004a1c:	400204a0 	.word	0x400204a0
 8004a20:	400204b8 	.word	0x400204b8
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	2300      	movs	r3, #0
 8004a2c:	2b00      	cmp	r3, #0
 8004a2e:	d00d      	beq.n	8004a4c <HAL_DMA_IRQHandler+0x460>
      {
        /* Clear the direct mode error flag */
        regs_dma->IFCR = DMA_FLAG_DMEIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004a34:	f003 031f 	and.w	r3, r3, #31
 8004a38:	2204      	movs	r2, #4
 8004a3a:	409a      	lsls	r2, r3
 8004a3c:	6a3b      	ldr	r3, [r7, #32]
 8004a3e:	609a      	str	r2, [r3, #8]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004a44:	f043 0204 	orr.w	r2, r3, #4
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	655a      	str	r2, [r3, #84]	; 0x54
      }
    }
    /* Half Transfer Complete Interrupt management ******************************/
    if ((tmpisr_dma & (DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004a50:	f003 031f 	and.w	r3, r3, #31
 8004a54:	2210      	movs	r2, #16
 8004a56:	409a      	lsls	r2, r3
 8004a58:	69bb      	ldr	r3, [r7, #24]
 8004a5a:	4013      	ands	r3, r2
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	f000 80a6 	beq.w	8004bae <HAL_DMA_IRQHandler+0x5c2>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	4a85      	ldr	r2, [pc, #532]	; (8004c7c <HAL_DMA_IRQHandler+0x690>)
 8004a68:	4293      	cmp	r3, r2
 8004a6a:	d04a      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	4a83      	ldr	r2, [pc, #524]	; (8004c80 <HAL_DMA_IRQHandler+0x694>)
 8004a72:	4293      	cmp	r3, r2
 8004a74:	d045      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	681b      	ldr	r3, [r3, #0]
 8004a7a:	4a82      	ldr	r2, [pc, #520]	; (8004c84 <HAL_DMA_IRQHandler+0x698>)
 8004a7c:	4293      	cmp	r3, r2
 8004a7e:	d040      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	4a80      	ldr	r2, [pc, #512]	; (8004c88 <HAL_DMA_IRQHandler+0x69c>)
 8004a86:	4293      	cmp	r3, r2
 8004a88:	d03b      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	4a7f      	ldr	r2, [pc, #508]	; (8004c8c <HAL_DMA_IRQHandler+0x6a0>)
 8004a90:	4293      	cmp	r3, r2
 8004a92:	d036      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	4a7d      	ldr	r2, [pc, #500]	; (8004c90 <HAL_DMA_IRQHandler+0x6a4>)
 8004a9a:	4293      	cmp	r3, r2
 8004a9c:	d031      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	4a7c      	ldr	r2, [pc, #496]	; (8004c94 <HAL_DMA_IRQHandler+0x6a8>)
 8004aa4:	4293      	cmp	r3, r2
 8004aa6:	d02c      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	4a7a      	ldr	r2, [pc, #488]	; (8004c98 <HAL_DMA_IRQHandler+0x6ac>)
 8004aae:	4293      	cmp	r3, r2
 8004ab0:	d027      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	4a79      	ldr	r2, [pc, #484]	; (8004c9c <HAL_DMA_IRQHandler+0x6b0>)
 8004ab8:	4293      	cmp	r3, r2
 8004aba:	d022      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	4a77      	ldr	r2, [pc, #476]	; (8004ca0 <HAL_DMA_IRQHandler+0x6b4>)
 8004ac2:	4293      	cmp	r3, r2
 8004ac4:	d01d      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	681b      	ldr	r3, [r3, #0]
 8004aca:	4a76      	ldr	r2, [pc, #472]	; (8004ca4 <HAL_DMA_IRQHandler+0x6b8>)
 8004acc:	4293      	cmp	r3, r2
 8004ace:	d018      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	4a74      	ldr	r2, [pc, #464]	; (8004ca8 <HAL_DMA_IRQHandler+0x6bc>)
 8004ad6:	4293      	cmp	r3, r2
 8004ad8:	d013      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	4a73      	ldr	r2, [pc, #460]	; (8004cac <HAL_DMA_IRQHandler+0x6c0>)
 8004ae0:	4293      	cmp	r3, r2
 8004ae2:	d00e      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	4a71      	ldr	r2, [pc, #452]	; (8004cb0 <HAL_DMA_IRQHandler+0x6c4>)
 8004aea:	4293      	cmp	r3, r2
 8004aec:	d009      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	4a70      	ldr	r2, [pc, #448]	; (8004cb4 <HAL_DMA_IRQHandler+0x6c8>)
 8004af4:	4293      	cmp	r3, r2
 8004af6:	d004      	beq.n	8004b02 <HAL_DMA_IRQHandler+0x516>
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	681b      	ldr	r3, [r3, #0]
 8004afc:	4a6e      	ldr	r2, [pc, #440]	; (8004cb8 <HAL_DMA_IRQHandler+0x6cc>)
 8004afe:	4293      	cmp	r3, r2
 8004b00:	d10a      	bne.n	8004b18 <HAL_DMA_IRQHandler+0x52c>
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	681b      	ldr	r3, [r3, #0]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	f003 0308 	and.w	r3, r3, #8
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	bf14      	ite	ne
 8004b10:	2301      	movne	r3, #1
 8004b12:	2300      	moveq	r3, #0
 8004b14:	b2db      	uxtb	r3, r3
 8004b16:	e009      	b.n	8004b2c <HAL_DMA_IRQHandler+0x540>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	681b      	ldr	r3, [r3, #0]
 8004b1e:	f003 0304 	and.w	r3, r3, #4
 8004b22:	2b00      	cmp	r3, #0
 8004b24:	bf14      	ite	ne
 8004b26:	2301      	movne	r3, #1
 8004b28:	2300      	moveq	r3, #0
 8004b2a:	b2db      	uxtb	r3, r3
 8004b2c:	2b00      	cmp	r3, #0
 8004b2e:	d03e      	beq.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
      {
        /* Clear the half transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_HTIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004b34:	f003 031f 	and.w	r3, r3, #31
 8004b38:	2210      	movs	r2, #16
 8004b3a:	409a      	lsls	r2, r3
 8004b3c:	6a3b      	ldr	r3, [r7, #32]
 8004b3e:	609a      	str	r2, [r3, #8]

        /* Multi_Buffering mode enabled */
        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	681b      	ldr	r3, [r3, #0]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	d018      	beq.n	8004b80 <HAL_DMA_IRQHandler+0x594>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	681b      	ldr	r3, [r3, #0]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d108      	bne.n	8004b6e <HAL_DMA_IRQHandler+0x582>
          {
            if(hdma->XferHalfCpltCallback != NULL)
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	d024      	beq.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferHalfCpltCallback(hdma);
 8004b64:	687b      	ldr	r3, [r7, #4]
 8004b66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b68:	6878      	ldr	r0, [r7, #4]
 8004b6a:	4798      	blx	r3
 8004b6c:	e01f      	b.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferM1HalfCpltCallback != NULL)
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004b72:	2b00      	cmp	r3, #0
 8004b74:	d01b      	beq.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
            {
              /* Half transfer callback */
              hdma->XferM1HalfCpltCallback(hdma);
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004b7a:	6878      	ldr	r0, [r7, #4]
 8004b7c:	4798      	blx	r3
 8004b7e:	e016      	b.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
          }
        }
        else
        {
          /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	681b      	ldr	r3, [r3, #0]
 8004b84:	681b      	ldr	r3, [r3, #0]
 8004b86:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	d107      	bne.n	8004b9e <HAL_DMA_IRQHandler+0x5b2>
          {
            /* Disable the half transfer interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	681b      	ldr	r3, [r3, #0]
 8004b92:	681a      	ldr	r2, [r3, #0]
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	f022 0208 	bic.w	r2, r2, #8
 8004b9c:	601a      	str	r2, [r3, #0]
          }

          if(hdma->XferHalfCpltCallback != NULL)
 8004b9e:	687b      	ldr	r3, [r7, #4]
 8004ba0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d003      	beq.n	8004bae <HAL_DMA_IRQHandler+0x5c2>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004baa:	6878      	ldr	r0, [r7, #4]
 8004bac:	4798      	blx	r3
          }
        }
      }
    }
    /* Transfer Complete Interrupt management ***********************************/
    if ((tmpisr_dma & (DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU))) != 0U)
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004bb2:	f003 031f 	and.w	r3, r3, #31
 8004bb6:	2220      	movs	r2, #32
 8004bb8:	409a      	lsls	r2, r3
 8004bba:	69bb      	ldr	r3, [r7, #24]
 8004bbc:	4013      	ands	r3, r2
 8004bbe:	2b00      	cmp	r3, #0
 8004bc0:	f000 8110 	beq.w	8004de4 <HAL_DMA_IRQHandler+0x7f8>
    {
      if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	4a2c      	ldr	r2, [pc, #176]	; (8004c7c <HAL_DMA_IRQHandler+0x690>)
 8004bca:	4293      	cmp	r3, r2
 8004bcc:	d04a      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	4a2b      	ldr	r2, [pc, #172]	; (8004c80 <HAL_DMA_IRQHandler+0x694>)
 8004bd4:	4293      	cmp	r3, r2
 8004bd6:	d045      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	4a29      	ldr	r2, [pc, #164]	; (8004c84 <HAL_DMA_IRQHandler+0x698>)
 8004bde:	4293      	cmp	r3, r2
 8004be0:	d040      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	4a28      	ldr	r2, [pc, #160]	; (8004c88 <HAL_DMA_IRQHandler+0x69c>)
 8004be8:	4293      	cmp	r3, r2
 8004bea:	d03b      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	4a26      	ldr	r2, [pc, #152]	; (8004c8c <HAL_DMA_IRQHandler+0x6a0>)
 8004bf2:	4293      	cmp	r3, r2
 8004bf4:	d036      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004bf6:	687b      	ldr	r3, [r7, #4]
 8004bf8:	681b      	ldr	r3, [r3, #0]
 8004bfa:	4a25      	ldr	r2, [pc, #148]	; (8004c90 <HAL_DMA_IRQHandler+0x6a4>)
 8004bfc:	4293      	cmp	r3, r2
 8004bfe:	d031      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	4a23      	ldr	r2, [pc, #140]	; (8004c94 <HAL_DMA_IRQHandler+0x6a8>)
 8004c06:	4293      	cmp	r3, r2
 8004c08:	d02c      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	4a22      	ldr	r2, [pc, #136]	; (8004c98 <HAL_DMA_IRQHandler+0x6ac>)
 8004c10:	4293      	cmp	r3, r2
 8004c12:	d027      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4a20      	ldr	r2, [pc, #128]	; (8004c9c <HAL_DMA_IRQHandler+0x6b0>)
 8004c1a:	4293      	cmp	r3, r2
 8004c1c:	d022      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	4a1f      	ldr	r2, [pc, #124]	; (8004ca0 <HAL_DMA_IRQHandler+0x6b4>)
 8004c24:	4293      	cmp	r3, r2
 8004c26:	d01d      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	4a1d      	ldr	r2, [pc, #116]	; (8004ca4 <HAL_DMA_IRQHandler+0x6b8>)
 8004c2e:	4293      	cmp	r3, r2
 8004c30:	d018      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	4a1c      	ldr	r2, [pc, #112]	; (8004ca8 <HAL_DMA_IRQHandler+0x6bc>)
 8004c38:	4293      	cmp	r3, r2
 8004c3a:	d013      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	4a1a      	ldr	r2, [pc, #104]	; (8004cac <HAL_DMA_IRQHandler+0x6c0>)
 8004c42:	4293      	cmp	r3, r2
 8004c44:	d00e      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c46:	687b      	ldr	r3, [r7, #4]
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	4a19      	ldr	r2, [pc, #100]	; (8004cb0 <HAL_DMA_IRQHandler+0x6c4>)
 8004c4c:	4293      	cmp	r3, r2
 8004c4e:	d009      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	4a17      	ldr	r2, [pc, #92]	; (8004cb4 <HAL_DMA_IRQHandler+0x6c8>)
 8004c56:	4293      	cmp	r3, r2
 8004c58:	d004      	beq.n	8004c64 <HAL_DMA_IRQHandler+0x678>
 8004c5a:	687b      	ldr	r3, [r7, #4]
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	4a16      	ldr	r2, [pc, #88]	; (8004cb8 <HAL_DMA_IRQHandler+0x6cc>)
 8004c60:	4293      	cmp	r3, r2
 8004c62:	d12b      	bne.n	8004cbc <HAL_DMA_IRQHandler+0x6d0>
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	681b      	ldr	r3, [r3, #0]
 8004c68:	681b      	ldr	r3, [r3, #0]
 8004c6a:	f003 0310 	and.w	r3, r3, #16
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	bf14      	ite	ne
 8004c72:	2301      	movne	r3, #1
 8004c74:	2300      	moveq	r3, #0
 8004c76:	b2db      	uxtb	r3, r3
 8004c78:	e02a      	b.n	8004cd0 <HAL_DMA_IRQHandler+0x6e4>
 8004c7a:	bf00      	nop
 8004c7c:	40020010 	.word	0x40020010
 8004c80:	40020028 	.word	0x40020028
 8004c84:	40020040 	.word	0x40020040
 8004c88:	40020058 	.word	0x40020058
 8004c8c:	40020070 	.word	0x40020070
 8004c90:	40020088 	.word	0x40020088
 8004c94:	400200a0 	.word	0x400200a0
 8004c98:	400200b8 	.word	0x400200b8
 8004c9c:	40020410 	.word	0x40020410
 8004ca0:	40020428 	.word	0x40020428
 8004ca4:	40020440 	.word	0x40020440
 8004ca8:	40020458 	.word	0x40020458
 8004cac:	40020470 	.word	0x40020470
 8004cb0:	40020488 	.word	0x40020488
 8004cb4:	400204a0 	.word	0x400204a0
 8004cb8:	400204b8 	.word	0x400204b8
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	f003 0302 	and.w	r3, r3, #2
 8004cc6:	2b00      	cmp	r3, #0
 8004cc8:	bf14      	ite	ne
 8004cca:	2301      	movne	r3, #1
 8004ccc:	2300      	moveq	r3, #0
 8004cce:	b2db      	uxtb	r3, r3
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	f000 8087 	beq.w	8004de4 <HAL_DMA_IRQHandler+0x7f8>
      {
        /* Clear the transfer complete flag */
        regs_dma->IFCR = DMA_FLAG_TCIF0_4 << (hdma->StreamIndex & 0x1FU);
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004cda:	f003 031f 	and.w	r3, r3, #31
 8004cde:	2220      	movs	r2, #32
 8004ce0:	409a      	lsls	r2, r3
 8004ce2:	6a3b      	ldr	r3, [r7, #32]
 8004ce4:	609a      	str	r2, [r3, #8]

        if(HAL_DMA_STATE_ABORT == hdma->State)
 8004ce6:	687b      	ldr	r3, [r7, #4]
 8004ce8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004cec:	b2db      	uxtb	r3, r3
 8004cee:	2b04      	cmp	r3, #4
 8004cf0:	d139      	bne.n	8004d66 <HAL_DMA_IRQHandler+0x77a>
        {
          /* Disable all the transfer interrupts */
          ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	681a      	ldr	r2, [r3, #0]
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	f022 0216 	bic.w	r2, r2, #22
 8004d00:	601a      	str	r2, [r3, #0]
          ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR &= ~(DMA_IT_FE);
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	695a      	ldr	r2, [r3, #20]
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004d10:	615a      	str	r2, [r3, #20]

          if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d103      	bne.n	8004d22 <HAL_DMA_IRQHandler+0x736>
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004d1e:	2b00      	cmp	r3, #0
 8004d20:	d007      	beq.n	8004d32 <HAL_DMA_IRQHandler+0x746>
          {
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_HT);
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	681b      	ldr	r3, [r3, #0]
 8004d26:	681a      	ldr	r2, [r3, #0]
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	f022 0208 	bic.w	r2, r2, #8
 8004d30:	601a      	str	r2, [r3, #0]
          }

          /* Clear all interrupt flags at correct offset within the register */
          regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004d36:	f003 031f 	and.w	r3, r3, #31
 8004d3a:	223f      	movs	r2, #63	; 0x3f
 8004d3c:	409a      	lsls	r2, r3
 8004d3e:	6a3b      	ldr	r3, [r7, #32]
 8004d40:	609a      	str	r2, [r3, #8]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	2201      	movs	r2, #1
 8004d46:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	2200      	movs	r2, #0
 8004d4e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

          if(hdma->XferAbortCallback != NULL)
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004d56:	2b00      	cmp	r3, #0
 8004d58:	f000 834a 	beq.w	80053f0 <HAL_DMA_IRQHandler+0xe04>
          {
            hdma->XferAbortCallback(hdma);
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004d60:	6878      	ldr	r0, [r7, #4]
 8004d62:	4798      	blx	r3
          }
          return;
 8004d64:	e344      	b.n	80053f0 <HAL_DMA_IRQHandler+0xe04>
        }

        if(((((DMA_Stream_TypeDef   *)hdma->Instance)->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0U)
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004d70:	2b00      	cmp	r3, #0
 8004d72:	d018      	beq.n	8004da6 <HAL_DMA_IRQHandler+0x7ba>
        {
          /* Current memory buffer used is Memory 0 */
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CT) == 0U)
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	681b      	ldr	r3, [r3, #0]
 8004d7a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	d108      	bne.n	8004d94 <HAL_DMA_IRQHandler+0x7a8>
          {
            if(hdma->XferM1CpltCallback != NULL)
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004d86:	2b00      	cmp	r3, #0
 8004d88:	d02c      	beq.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory1 */
              hdma->XferM1CpltCallback(hdma);
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004d8e:	6878      	ldr	r0, [r7, #4]
 8004d90:	4798      	blx	r3
 8004d92:	e027      	b.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
            }
          }
          /* Current memory buffer used is Memory 1 */
          else
          {
            if(hdma->XferCpltCallback != NULL)
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004d98:	2b00      	cmp	r3, #0
 8004d9a:	d023      	beq.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
            {
              /* Transfer complete Callback for memory0 */
              hdma->XferCpltCallback(hdma);
 8004d9c:	687b      	ldr	r3, [r7, #4]
 8004d9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004da0:	6878      	ldr	r0, [r7, #4]
 8004da2:	4798      	blx	r3
 8004da4:	e01e      	b.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
          }
        }
        /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
        else
        {
          if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_CIRC) == 0U)
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004db0:	2b00      	cmp	r3, #0
 8004db2:	d10f      	bne.n	8004dd4 <HAL_DMA_IRQHandler+0x7e8>
          {
            /* Disable the transfer complete interrupt */
            ((DMA_Stream_TypeDef   *)hdma->Instance)->CR  &= ~(DMA_IT_TC);
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	681a      	ldr	r2, [r3, #0]
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	f022 0210 	bic.w	r2, r2, #16
 8004dc2:	601a      	str	r2, [r3, #0]

            /* Change the DMA state */
            hdma->State = HAL_DMA_STATE_READY;
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	2201      	movs	r2, #1
 8004dc8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

            /* Process Unlocked */
            __HAL_UNLOCK(hdma);
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	2200      	movs	r2, #0
 8004dd0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          }

          if(hdma->XferCpltCallback != NULL)
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004dd8:	2b00      	cmp	r3, #0
 8004dda:	d003      	beq.n	8004de4 <HAL_DMA_IRQHandler+0x7f8>
          {
            /* Transfer complete callback */
            hdma->XferCpltCallback(hdma);
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004de0:	6878      	ldr	r0, [r7, #4]
 8004de2:	4798      	blx	r3
        }
      }
    }

    /* manage error case */
    if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004de8:	2b00      	cmp	r3, #0
 8004dea:	f000 8306 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
    {
      if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != 0U)
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004df2:	f003 0301 	and.w	r3, r3, #1
 8004df6:	2b00      	cmp	r3, #0
 8004df8:	f000 8088 	beq.w	8004f0c <HAL_DMA_IRQHandler+0x920>
      {
        hdma->State = HAL_DMA_STATE_ABORT;
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	2204      	movs	r2, #4
 8004e00:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        /* Disable the stream */
        __HAL_DMA_DISABLE(hdma);
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	4a7a      	ldr	r2, [pc, #488]	; (8004ff4 <HAL_DMA_IRQHandler+0xa08>)
 8004e0a:	4293      	cmp	r3, r2
 8004e0c:	d04a      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	681b      	ldr	r3, [r3, #0]
 8004e12:	4a79      	ldr	r2, [pc, #484]	; (8004ff8 <HAL_DMA_IRQHandler+0xa0c>)
 8004e14:	4293      	cmp	r3, r2
 8004e16:	d045      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	681b      	ldr	r3, [r3, #0]
 8004e1c:	4a77      	ldr	r2, [pc, #476]	; (8004ffc <HAL_DMA_IRQHandler+0xa10>)
 8004e1e:	4293      	cmp	r3, r2
 8004e20:	d040      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	4a76      	ldr	r2, [pc, #472]	; (8005000 <HAL_DMA_IRQHandler+0xa14>)
 8004e28:	4293      	cmp	r3, r2
 8004e2a:	d03b      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	4a74      	ldr	r2, [pc, #464]	; (8005004 <HAL_DMA_IRQHandler+0xa18>)
 8004e32:	4293      	cmp	r3, r2
 8004e34:	d036      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	4a73      	ldr	r2, [pc, #460]	; (8005008 <HAL_DMA_IRQHandler+0xa1c>)
 8004e3c:	4293      	cmp	r3, r2
 8004e3e:	d031      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	4a71      	ldr	r2, [pc, #452]	; (800500c <HAL_DMA_IRQHandler+0xa20>)
 8004e46:	4293      	cmp	r3, r2
 8004e48:	d02c      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	4a70      	ldr	r2, [pc, #448]	; (8005010 <HAL_DMA_IRQHandler+0xa24>)
 8004e50:	4293      	cmp	r3, r2
 8004e52:	d027      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	4a6e      	ldr	r2, [pc, #440]	; (8005014 <HAL_DMA_IRQHandler+0xa28>)
 8004e5a:	4293      	cmp	r3, r2
 8004e5c:	d022      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	681b      	ldr	r3, [r3, #0]
 8004e62:	4a6d      	ldr	r2, [pc, #436]	; (8005018 <HAL_DMA_IRQHandler+0xa2c>)
 8004e64:	4293      	cmp	r3, r2
 8004e66:	d01d      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	4a6b      	ldr	r2, [pc, #428]	; (800501c <HAL_DMA_IRQHandler+0xa30>)
 8004e6e:	4293      	cmp	r3, r2
 8004e70:	d018      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	4a6a      	ldr	r2, [pc, #424]	; (8005020 <HAL_DMA_IRQHandler+0xa34>)
 8004e78:	4293      	cmp	r3, r2
 8004e7a:	d013      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	4a68      	ldr	r2, [pc, #416]	; (8005024 <HAL_DMA_IRQHandler+0xa38>)
 8004e82:	4293      	cmp	r3, r2
 8004e84:	d00e      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	4a67      	ldr	r2, [pc, #412]	; (8005028 <HAL_DMA_IRQHandler+0xa3c>)
 8004e8c:	4293      	cmp	r3, r2
 8004e8e:	d009      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	681b      	ldr	r3, [r3, #0]
 8004e94:	4a65      	ldr	r2, [pc, #404]	; (800502c <HAL_DMA_IRQHandler+0xa40>)
 8004e96:	4293      	cmp	r3, r2
 8004e98:	d004      	beq.n	8004ea4 <HAL_DMA_IRQHandler+0x8b8>
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	4a64      	ldr	r2, [pc, #400]	; (8005030 <HAL_DMA_IRQHandler+0xa44>)
 8004ea0:	4293      	cmp	r3, r2
 8004ea2:	d108      	bne.n	8004eb6 <HAL_DMA_IRQHandler+0x8ca>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	681a      	ldr	r2, [r3, #0]
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	f022 0201 	bic.w	r2, r2, #1
 8004eb2:	601a      	str	r2, [r3, #0]
 8004eb4:	e007      	b.n	8004ec6 <HAL_DMA_IRQHandler+0x8da>
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	681b      	ldr	r3, [r3, #0]
 8004eba:	681a      	ldr	r2, [r3, #0]
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	681b      	ldr	r3, [r3, #0]
 8004ec0:	f022 0201 	bic.w	r2, r2, #1
 8004ec4:	601a      	str	r2, [r3, #0]

        do
        {
          if (++count > timeout)
 8004ec6:	68fb      	ldr	r3, [r7, #12]
 8004ec8:	3301      	adds	r3, #1
 8004eca:	60fb      	str	r3, [r7, #12]
 8004ecc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004ece:	429a      	cmp	r2, r3
 8004ed0:	d307      	bcc.n	8004ee2 <HAL_DMA_IRQHandler+0x8f6>
          {
            break;
          }
        }
        while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U);
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	681b      	ldr	r3, [r3, #0]
 8004ed8:	f003 0301 	and.w	r3, r3, #1
 8004edc:	2b00      	cmp	r3, #0
 8004ede:	d1f2      	bne.n	8004ec6 <HAL_DMA_IRQHandler+0x8da>
 8004ee0:	e000      	b.n	8004ee4 <HAL_DMA_IRQHandler+0x8f8>
            break;
 8004ee2:	bf00      	nop

        if((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	681b      	ldr	r3, [r3, #0]
 8004eea:	f003 0301 	and.w	r3, r3, #1
 8004eee:	2b00      	cmp	r3, #0
 8004ef0:	d004      	beq.n	8004efc <HAL_DMA_IRQHandler+0x910>
        {
          /* Change the DMA state to error if DMA disable fails */
          hdma->State = HAL_DMA_STATE_ERROR;
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	2203      	movs	r2, #3
 8004ef6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004efa:	e003      	b.n	8004f04 <HAL_DMA_IRQHandler+0x918>
        }
        else
        {
          /* Change the DMA state to Ready if DMA disable success */
          hdma->State = HAL_DMA_STATE_READY;
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	2201      	movs	r2, #1
 8004f00:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        }

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	2200      	movs	r2, #0
 8004f08:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      }

      if(hdma->XferErrorCallback != NULL)
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004f10:	2b00      	cmp	r3, #0
 8004f12:	f000 8272 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 8004f16:	687b      	ldr	r3, [r7, #4]
 8004f18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004f1a:	6878      	ldr	r0, [r7, #4]
 8004f1c:	4798      	blx	r3
 8004f1e:	e26c      	b.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
      }
    }
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U)  /* BDMA instance(s) */
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	4a43      	ldr	r2, [pc, #268]	; (8005034 <HAL_DMA_IRQHandler+0xa48>)
 8004f26:	4293      	cmp	r3, r2
 8004f28:	d022      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	4a42      	ldr	r2, [pc, #264]	; (8005038 <HAL_DMA_IRQHandler+0xa4c>)
 8004f30:	4293      	cmp	r3, r2
 8004f32:	d01d      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	4a40      	ldr	r2, [pc, #256]	; (800503c <HAL_DMA_IRQHandler+0xa50>)
 8004f3a:	4293      	cmp	r3, r2
 8004f3c:	d018      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	4a3f      	ldr	r2, [pc, #252]	; (8005040 <HAL_DMA_IRQHandler+0xa54>)
 8004f44:	4293      	cmp	r3, r2
 8004f46:	d013      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	4a3d      	ldr	r2, [pc, #244]	; (8005044 <HAL_DMA_IRQHandler+0xa58>)
 8004f4e:	4293      	cmp	r3, r2
 8004f50:	d00e      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	4a3c      	ldr	r2, [pc, #240]	; (8005048 <HAL_DMA_IRQHandler+0xa5c>)
 8004f58:	4293      	cmp	r3, r2
 8004f5a:	d009      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	4a3a      	ldr	r2, [pc, #232]	; (800504c <HAL_DMA_IRQHandler+0xa60>)
 8004f62:	4293      	cmp	r3, r2
 8004f64:	d004      	beq.n	8004f70 <HAL_DMA_IRQHandler+0x984>
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	4a39      	ldr	r2, [pc, #228]	; (8005050 <HAL_DMA_IRQHandler+0xa64>)
 8004f6c:	4293      	cmp	r3, r2
 8004f6e:	d101      	bne.n	8004f74 <HAL_DMA_IRQHandler+0x988>
 8004f70:	2301      	movs	r3, #1
 8004f72:	e000      	b.n	8004f76 <HAL_DMA_IRQHandler+0x98a>
 8004f74:	2300      	movs	r3, #0
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	f000 823f 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
  {
    ccr_reg = (((BDMA_Channel_TypeDef   *)hdma->Instance)->CCR);
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	613b      	str	r3, [r7, #16]

    /* Half Transfer Complete Interrupt management ******************************/
    if (((tmpisr_bdma & (BDMA_FLAG_HT0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_HTIE) != 0U))
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f88:	f003 031f 	and.w	r3, r3, #31
 8004f8c:	2204      	movs	r2, #4
 8004f8e:	409a      	lsls	r2, r3
 8004f90:	697b      	ldr	r3, [r7, #20]
 8004f92:	4013      	ands	r3, r2
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	f000 80cd 	beq.w	8005134 <HAL_DMA_IRQHandler+0xb48>
 8004f9a:	693b      	ldr	r3, [r7, #16]
 8004f9c:	f003 0304 	and.w	r3, r3, #4
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	f000 80c7 	beq.w	8005134 <HAL_DMA_IRQHandler+0xb48>
    {
      /* Clear the half transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_HTIF0 << (hdma->StreamIndex & 0x1FU));
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004faa:	f003 031f 	and.w	r3, r3, #31
 8004fae:	2204      	movs	r2, #4
 8004fb0:	409a      	lsls	r2, r3
 8004fb2:	69fb      	ldr	r3, [r7, #28]
 8004fb4:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004fb6:	693b      	ldr	r3, [r7, #16]
 8004fb8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	d049      	beq.n	8005054 <HAL_DMA_IRQHandler+0xa68>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 8004fc0:	693b      	ldr	r3, [r7, #16]
 8004fc2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004fc6:	2b00      	cmp	r3, #0
 8004fc8:	d109      	bne.n	8004fde <HAL_DMA_IRQHandler+0x9f2>
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004fce:	2b00      	cmp	r3, #0
 8004fd0:	f000 8210 	beq.w	80053f4 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 1 */
            hdma->XferM1HalfCpltCallback(hdma);
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004fd8:	6878      	ldr	r0, [r7, #4]
 8004fda:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004fdc:	e20a      	b.n	80053f4 <HAL_DMA_IRQHandler+0xe08>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fe2:	2b00      	cmp	r3, #0
 8004fe4:	f000 8206 	beq.w	80053f4 <HAL_DMA_IRQHandler+0xe08>
          {
            /* Half transfer Callback for Memory 0 */
            hdma->XferHalfCpltCallback(hdma);
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fec:	6878      	ldr	r0, [r7, #4]
 8004fee:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8004ff0:	e200      	b.n	80053f4 <HAL_DMA_IRQHandler+0xe08>
 8004ff2:	bf00      	nop
 8004ff4:	40020010 	.word	0x40020010
 8004ff8:	40020028 	.word	0x40020028
 8004ffc:	40020040 	.word	0x40020040
 8005000:	40020058 	.word	0x40020058
 8005004:	40020070 	.word	0x40020070
 8005008:	40020088 	.word	0x40020088
 800500c:	400200a0 	.word	0x400200a0
 8005010:	400200b8 	.word	0x400200b8
 8005014:	40020410 	.word	0x40020410
 8005018:	40020428 	.word	0x40020428
 800501c:	40020440 	.word	0x40020440
 8005020:	40020458 	.word	0x40020458
 8005024:	40020470 	.word	0x40020470
 8005028:	40020488 	.word	0x40020488
 800502c:	400204a0 	.word	0x400204a0
 8005030:	400204b8 	.word	0x400204b8
 8005034:	58025408 	.word	0x58025408
 8005038:	5802541c 	.word	0x5802541c
 800503c:	58025430 	.word	0x58025430
 8005040:	58025444 	.word	0x58025444
 8005044:	58025458 	.word	0x58025458
 8005048:	5802546c 	.word	0x5802546c
 800504c:	58025480 	.word	0x58025480
 8005050:	58025494 	.word	0x58025494
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 8005054:	693b      	ldr	r3, [r7, #16]
 8005056:	f003 0320 	and.w	r3, r3, #32
 800505a:	2b00      	cmp	r3, #0
 800505c:	d160      	bne.n	8005120 <HAL_DMA_IRQHandler+0xb34>
        {
          /* Disable the half transfer interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	4a7f      	ldr	r2, [pc, #508]	; (8005260 <HAL_DMA_IRQHandler+0xc74>)
 8005064:	4293      	cmp	r3, r2
 8005066:	d04a      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	4a7d      	ldr	r2, [pc, #500]	; (8005264 <HAL_DMA_IRQHandler+0xc78>)
 800506e:	4293      	cmp	r3, r2
 8005070:	d045      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	4a7c      	ldr	r2, [pc, #496]	; (8005268 <HAL_DMA_IRQHandler+0xc7c>)
 8005078:	4293      	cmp	r3, r2
 800507a:	d040      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	4a7a      	ldr	r2, [pc, #488]	; (800526c <HAL_DMA_IRQHandler+0xc80>)
 8005082:	4293      	cmp	r3, r2
 8005084:	d03b      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	4a79      	ldr	r2, [pc, #484]	; (8005270 <HAL_DMA_IRQHandler+0xc84>)
 800508c:	4293      	cmp	r3, r2
 800508e:	d036      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	4a77      	ldr	r2, [pc, #476]	; (8005274 <HAL_DMA_IRQHandler+0xc88>)
 8005096:	4293      	cmp	r3, r2
 8005098:	d031      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	4a76      	ldr	r2, [pc, #472]	; (8005278 <HAL_DMA_IRQHandler+0xc8c>)
 80050a0:	4293      	cmp	r3, r2
 80050a2:	d02c      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	4a74      	ldr	r2, [pc, #464]	; (800527c <HAL_DMA_IRQHandler+0xc90>)
 80050aa:	4293      	cmp	r3, r2
 80050ac:	d027      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	4a73      	ldr	r2, [pc, #460]	; (8005280 <HAL_DMA_IRQHandler+0xc94>)
 80050b4:	4293      	cmp	r3, r2
 80050b6:	d022      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	4a71      	ldr	r2, [pc, #452]	; (8005284 <HAL_DMA_IRQHandler+0xc98>)
 80050be:	4293      	cmp	r3, r2
 80050c0:	d01d      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	4a70      	ldr	r2, [pc, #448]	; (8005288 <HAL_DMA_IRQHandler+0xc9c>)
 80050c8:	4293      	cmp	r3, r2
 80050ca:	d018      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	4a6e      	ldr	r2, [pc, #440]	; (800528c <HAL_DMA_IRQHandler+0xca0>)
 80050d2:	4293      	cmp	r3, r2
 80050d4:	d013      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	4a6d      	ldr	r2, [pc, #436]	; (8005290 <HAL_DMA_IRQHandler+0xca4>)
 80050dc:	4293      	cmp	r3, r2
 80050de:	d00e      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	4a6b      	ldr	r2, [pc, #428]	; (8005294 <HAL_DMA_IRQHandler+0xca8>)
 80050e6:	4293      	cmp	r3, r2
 80050e8:	d009      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	4a6a      	ldr	r2, [pc, #424]	; (8005298 <HAL_DMA_IRQHandler+0xcac>)
 80050f0:	4293      	cmp	r3, r2
 80050f2:	d004      	beq.n	80050fe <HAL_DMA_IRQHandler+0xb12>
 80050f4:	687b      	ldr	r3, [r7, #4]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	4a68      	ldr	r2, [pc, #416]	; (800529c <HAL_DMA_IRQHandler+0xcb0>)
 80050fa:	4293      	cmp	r3, r2
 80050fc:	d108      	bne.n	8005110 <HAL_DMA_IRQHandler+0xb24>
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	681b      	ldr	r3, [r3, #0]
 8005102:	681a      	ldr	r2, [r3, #0]
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	f022 0208 	bic.w	r2, r2, #8
 800510c:	601a      	str	r2, [r3, #0]
 800510e:	e007      	b.n	8005120 <HAL_DMA_IRQHandler+0xb34>
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	681a      	ldr	r2, [r3, #0]
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	f022 0204 	bic.w	r2, r2, #4
 800511e:	601a      	str	r2, [r3, #0]
        }

        /* DMA peripheral state is not updated in Half Transfer */
        /* but in Transfer Complete case */

       if(hdma->XferHalfCpltCallback != NULL)
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005124:	2b00      	cmp	r3, #0
 8005126:	f000 8165 	beq.w	80053f4 <HAL_DMA_IRQHandler+0xe08>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800512e:	6878      	ldr	r0, [r7, #4]
 8005130:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005132:	e15f      	b.n	80053f4 <HAL_DMA_IRQHandler+0xe08>
        }
      }
    }

    /* Transfer Complete Interrupt management ***********************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TC0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TCIE) != 0U))
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005138:	f003 031f 	and.w	r3, r3, #31
 800513c:	2202      	movs	r2, #2
 800513e:	409a      	lsls	r2, r3
 8005140:	697b      	ldr	r3, [r7, #20]
 8005142:	4013      	ands	r3, r2
 8005144:	2b00      	cmp	r3, #0
 8005146:	f000 80c5 	beq.w	80052d4 <HAL_DMA_IRQHandler+0xce8>
 800514a:	693b      	ldr	r3, [r7, #16]
 800514c:	f003 0302 	and.w	r3, r3, #2
 8005150:	2b00      	cmp	r3, #0
 8005152:	f000 80bf 	beq.w	80052d4 <HAL_DMA_IRQHandler+0xce8>
    {
      /* Clear the transfer complete flag */
      regs_bdma->IFCR = (BDMA_ISR_TCIF0) << (hdma->StreamIndex & 0x1FU);
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800515a:	f003 031f 	and.w	r3, r3, #31
 800515e:	2202      	movs	r2, #2
 8005160:	409a      	lsls	r2, r3
 8005162:	69fb      	ldr	r3, [r7, #28]
 8005164:	605a      	str	r2, [r3, #4]

      /* Disable the transfer complete interrupt if the DMA mode is Double Buffering */
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 8005166:	693b      	ldr	r3, [r7, #16]
 8005168:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800516c:	2b00      	cmp	r3, #0
 800516e:	d018      	beq.n	80051a2 <HAL_DMA_IRQHandler+0xbb6>
      {
        /* Current memory buffer used is Memory 0 */
        if((ccr_reg & BDMA_CCR_CT) == 0U)
 8005170:	693b      	ldr	r3, [r7, #16]
 8005172:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005176:	2b00      	cmp	r3, #0
 8005178:	d109      	bne.n	800518e <HAL_DMA_IRQHandler+0xba2>
        {
          if(hdma->XferM1CpltCallback != NULL)
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800517e:	2b00      	cmp	r3, #0
 8005180:	f000 813a 	beq.w	80053f8 <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 1 */
            hdma->XferM1CpltCallback(hdma);
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005188:	6878      	ldr	r0, [r7, #4]
 800518a:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 800518c:	e134      	b.n	80053f8 <HAL_DMA_IRQHandler+0xe0c>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005192:	2b00      	cmp	r3, #0
 8005194:	f000 8130 	beq.w	80053f8 <HAL_DMA_IRQHandler+0xe0c>
          {
            /* Transfer complete Callback for Memory 0 */
            hdma->XferCpltCallback(hdma);
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800519c:	6878      	ldr	r0, [r7, #4]
 800519e:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80051a0:	e12a      	b.n	80053f8 <HAL_DMA_IRQHandler+0xe0c>
          }
        }
      }
      else
      {
        if((ccr_reg & BDMA_CCR_CIRC) == 0U)
 80051a2:	693b      	ldr	r3, [r7, #16]
 80051a4:	f003 0320 	and.w	r3, r3, #32
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	f040 8089 	bne.w	80052c0 <HAL_DMA_IRQHandler+0xcd4>
        {
          /* Disable the transfer complete and error interrupt, if the DMA mode is not CIRCULAR */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	681b      	ldr	r3, [r3, #0]
 80051b2:	4a2b      	ldr	r2, [pc, #172]	; (8005260 <HAL_DMA_IRQHandler+0xc74>)
 80051b4:	4293      	cmp	r3, r2
 80051b6:	d04a      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	4a29      	ldr	r2, [pc, #164]	; (8005264 <HAL_DMA_IRQHandler+0xc78>)
 80051be:	4293      	cmp	r3, r2
 80051c0:	d045      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	4a28      	ldr	r2, [pc, #160]	; (8005268 <HAL_DMA_IRQHandler+0xc7c>)
 80051c8:	4293      	cmp	r3, r2
 80051ca:	d040      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	681b      	ldr	r3, [r3, #0]
 80051d0:	4a26      	ldr	r2, [pc, #152]	; (800526c <HAL_DMA_IRQHandler+0xc80>)
 80051d2:	4293      	cmp	r3, r2
 80051d4:	d03b      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	4a25      	ldr	r2, [pc, #148]	; (8005270 <HAL_DMA_IRQHandler+0xc84>)
 80051dc:	4293      	cmp	r3, r2
 80051de:	d036      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	4a23      	ldr	r2, [pc, #140]	; (8005274 <HAL_DMA_IRQHandler+0xc88>)
 80051e6:	4293      	cmp	r3, r2
 80051e8:	d031      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051ea:	687b      	ldr	r3, [r7, #4]
 80051ec:	681b      	ldr	r3, [r3, #0]
 80051ee:	4a22      	ldr	r2, [pc, #136]	; (8005278 <HAL_DMA_IRQHandler+0xc8c>)
 80051f0:	4293      	cmp	r3, r2
 80051f2:	d02c      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	681b      	ldr	r3, [r3, #0]
 80051f8:	4a20      	ldr	r2, [pc, #128]	; (800527c <HAL_DMA_IRQHandler+0xc90>)
 80051fa:	4293      	cmp	r3, r2
 80051fc:	d027      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	4a1f      	ldr	r2, [pc, #124]	; (8005280 <HAL_DMA_IRQHandler+0xc94>)
 8005204:	4293      	cmp	r3, r2
 8005206:	d022      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	4a1d      	ldr	r2, [pc, #116]	; (8005284 <HAL_DMA_IRQHandler+0xc98>)
 800520e:	4293      	cmp	r3, r2
 8005210:	d01d      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	4a1c      	ldr	r2, [pc, #112]	; (8005288 <HAL_DMA_IRQHandler+0xc9c>)
 8005218:	4293      	cmp	r3, r2
 800521a:	d018      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	681b      	ldr	r3, [r3, #0]
 8005220:	4a1a      	ldr	r2, [pc, #104]	; (800528c <HAL_DMA_IRQHandler+0xca0>)
 8005222:	4293      	cmp	r3, r2
 8005224:	d013      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	681b      	ldr	r3, [r3, #0]
 800522a:	4a19      	ldr	r2, [pc, #100]	; (8005290 <HAL_DMA_IRQHandler+0xca4>)
 800522c:	4293      	cmp	r3, r2
 800522e:	d00e      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	4a17      	ldr	r2, [pc, #92]	; (8005294 <HAL_DMA_IRQHandler+0xca8>)
 8005236:	4293      	cmp	r3, r2
 8005238:	d009      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	681b      	ldr	r3, [r3, #0]
 800523e:	4a16      	ldr	r2, [pc, #88]	; (8005298 <HAL_DMA_IRQHandler+0xcac>)
 8005240:	4293      	cmp	r3, r2
 8005242:	d004      	beq.n	800524e <HAL_DMA_IRQHandler+0xc62>
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	4a14      	ldr	r2, [pc, #80]	; (800529c <HAL_DMA_IRQHandler+0xcb0>)
 800524a:	4293      	cmp	r3, r2
 800524c:	d128      	bne.n	80052a0 <HAL_DMA_IRQHandler+0xcb4>
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	681a      	ldr	r2, [r3, #0]
 8005254:	687b      	ldr	r3, [r7, #4]
 8005256:	681b      	ldr	r3, [r3, #0]
 8005258:	f022 0214 	bic.w	r2, r2, #20
 800525c:	601a      	str	r2, [r3, #0]
 800525e:	e027      	b.n	80052b0 <HAL_DMA_IRQHandler+0xcc4>
 8005260:	40020010 	.word	0x40020010
 8005264:	40020028 	.word	0x40020028
 8005268:	40020040 	.word	0x40020040
 800526c:	40020058 	.word	0x40020058
 8005270:	40020070 	.word	0x40020070
 8005274:	40020088 	.word	0x40020088
 8005278:	400200a0 	.word	0x400200a0
 800527c:	400200b8 	.word	0x400200b8
 8005280:	40020410 	.word	0x40020410
 8005284:	40020428 	.word	0x40020428
 8005288:	40020440 	.word	0x40020440
 800528c:	40020458 	.word	0x40020458
 8005290:	40020470 	.word	0x40020470
 8005294:	40020488 	.word	0x40020488
 8005298:	400204a0 	.word	0x400204a0
 800529c:	400204b8 	.word	0x400204b8
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	681a      	ldr	r2, [r3, #0]
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	f022 020a 	bic.w	r2, r2, #10
 80052ae:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	2201      	movs	r2, #1
 80052b4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	2200      	movs	r2, #0
 80052bc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052c4:	2b00      	cmp	r3, #0
 80052c6:	f000 8097 	beq.w	80053f8 <HAL_DMA_IRQHandler+0xe0c>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052ce:	6878      	ldr	r0, [r7, #4]
 80052d0:	4798      	blx	r3
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80052d2:	e091      	b.n	80053f8 <HAL_DMA_IRQHandler+0xe0c>
        }
      }
    }
    /* Transfer Error Interrupt management **************************************/
    else if (((tmpisr_bdma & (BDMA_FLAG_TE0 << (hdma->StreamIndex & 0x1FU))) != 0U) && ((ccr_reg & BDMA_CCR_TEIE) != 0U))
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80052d8:	f003 031f 	and.w	r3, r3, #31
 80052dc:	2208      	movs	r2, #8
 80052de:	409a      	lsls	r2, r3
 80052e0:	697b      	ldr	r3, [r7, #20]
 80052e2:	4013      	ands	r3, r2
 80052e4:	2b00      	cmp	r3, #0
 80052e6:	f000 8088 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
 80052ea:	693b      	ldr	r3, [r7, #16]
 80052ec:	f003 0308 	and.w	r3, r3, #8
 80052f0:	2b00      	cmp	r3, #0
 80052f2:	f000 8082 	beq.w	80053fa <HAL_DMA_IRQHandler+0xe0e>
    {
      /* When a DMA transfer error occurs */
      /* A hardware clear of its EN bits is performed */
      /* Disable ALL DMA IT */
      __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	4a41      	ldr	r2, [pc, #260]	; (8005400 <HAL_DMA_IRQHandler+0xe14>)
 80052fc:	4293      	cmp	r3, r2
 80052fe:	d04a      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	4a3f      	ldr	r2, [pc, #252]	; (8005404 <HAL_DMA_IRQHandler+0xe18>)
 8005306:	4293      	cmp	r3, r2
 8005308:	d045      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800530a:	687b      	ldr	r3, [r7, #4]
 800530c:	681b      	ldr	r3, [r3, #0]
 800530e:	4a3e      	ldr	r2, [pc, #248]	; (8005408 <HAL_DMA_IRQHandler+0xe1c>)
 8005310:	4293      	cmp	r3, r2
 8005312:	d040      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	681b      	ldr	r3, [r3, #0]
 8005318:	4a3c      	ldr	r2, [pc, #240]	; (800540c <HAL_DMA_IRQHandler+0xe20>)
 800531a:	4293      	cmp	r3, r2
 800531c:	d03b      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	4a3b      	ldr	r2, [pc, #236]	; (8005410 <HAL_DMA_IRQHandler+0xe24>)
 8005324:	4293      	cmp	r3, r2
 8005326:	d036      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	4a39      	ldr	r2, [pc, #228]	; (8005414 <HAL_DMA_IRQHandler+0xe28>)
 800532e:	4293      	cmp	r3, r2
 8005330:	d031      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	4a38      	ldr	r2, [pc, #224]	; (8005418 <HAL_DMA_IRQHandler+0xe2c>)
 8005338:	4293      	cmp	r3, r2
 800533a:	d02c      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	4a36      	ldr	r2, [pc, #216]	; (800541c <HAL_DMA_IRQHandler+0xe30>)
 8005342:	4293      	cmp	r3, r2
 8005344:	d027      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	4a35      	ldr	r2, [pc, #212]	; (8005420 <HAL_DMA_IRQHandler+0xe34>)
 800534c:	4293      	cmp	r3, r2
 800534e:	d022      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005350:	687b      	ldr	r3, [r7, #4]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	4a33      	ldr	r2, [pc, #204]	; (8005424 <HAL_DMA_IRQHandler+0xe38>)
 8005356:	4293      	cmp	r3, r2
 8005358:	d01d      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	4a32      	ldr	r2, [pc, #200]	; (8005428 <HAL_DMA_IRQHandler+0xe3c>)
 8005360:	4293      	cmp	r3, r2
 8005362:	d018      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	681b      	ldr	r3, [r3, #0]
 8005368:	4a30      	ldr	r2, [pc, #192]	; (800542c <HAL_DMA_IRQHandler+0xe40>)
 800536a:	4293      	cmp	r3, r2
 800536c:	d013      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	4a2f      	ldr	r2, [pc, #188]	; (8005430 <HAL_DMA_IRQHandler+0xe44>)
 8005374:	4293      	cmp	r3, r2
 8005376:	d00e      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	4a2d      	ldr	r2, [pc, #180]	; (8005434 <HAL_DMA_IRQHandler+0xe48>)
 800537e:	4293      	cmp	r3, r2
 8005380:	d009      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	4a2c      	ldr	r2, [pc, #176]	; (8005438 <HAL_DMA_IRQHandler+0xe4c>)
 8005388:	4293      	cmp	r3, r2
 800538a:	d004      	beq.n	8005396 <HAL_DMA_IRQHandler+0xdaa>
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	4a2a      	ldr	r2, [pc, #168]	; (800543c <HAL_DMA_IRQHandler+0xe50>)
 8005392:	4293      	cmp	r3, r2
 8005394:	d108      	bne.n	80053a8 <HAL_DMA_IRQHandler+0xdbc>
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	681a      	ldr	r2, [r3, #0]
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	f022 021c 	bic.w	r2, r2, #28
 80053a4:	601a      	str	r2, [r3, #0]
 80053a6:	e007      	b.n	80053b8 <HAL_DMA_IRQHandler+0xdcc>
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	681b      	ldr	r3, [r3, #0]
 80053ac:	681a      	ldr	r2, [r3, #0]
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	f022 020e 	bic.w	r2, r2, #14
 80053b6:	601a      	str	r2, [r3, #0]

      /* Clear all flags */
      regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80053bc:	f003 031f 	and.w	r3, r3, #31
 80053c0:	2201      	movs	r2, #1
 80053c2:	409a      	lsls	r2, r3
 80053c4:	69fb      	ldr	r3, [r7, #28]
 80053c6:	605a      	str	r2, [r3, #4]

      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TE;
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	2201      	movs	r2, #1
 80053cc:	655a      	str	r2, [r3, #84]	; 0x54

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 80053ce:	687b      	ldr	r3, [r7, #4]
 80053d0:	2201      	movs	r2, #1
 80053d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	2200      	movs	r2, #0
 80053da:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      if (hdma->XferErrorCallback != NULL)
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80053e2:	2b00      	cmp	r3, #0
 80053e4:	d009      	beq.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80053ea:	6878      	ldr	r0, [r7, #4]
 80053ec:	4798      	blx	r3
 80053ee:	e004      	b.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
          return;
 80053f0:	bf00      	nop
 80053f2:	e002      	b.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80053f4:	bf00      	nop
 80053f6:	e000      	b.n	80053fa <HAL_DMA_IRQHandler+0xe0e>
      if((ccr_reg & BDMA_CCR_DBM) != 0U)
 80053f8:	bf00      	nop
  }
  else
  {
    /* Nothing To Do */
  }
}
 80053fa:	3728      	adds	r7, #40	; 0x28
 80053fc:	46bd      	mov	sp, r7
 80053fe:	bd80      	pop	{r7, pc}
 8005400:	40020010 	.word	0x40020010
 8005404:	40020028 	.word	0x40020028
 8005408:	40020040 	.word	0x40020040
 800540c:	40020058 	.word	0x40020058
 8005410:	40020070 	.word	0x40020070
 8005414:	40020088 	.word	0x40020088
 8005418:	400200a0 	.word	0x400200a0
 800541c:	400200b8 	.word	0x400200b8
 8005420:	40020410 	.word	0x40020410
 8005424:	40020428 	.word	0x40020428
 8005428:	40020440 	.word	0x40020440
 800542c:	40020458 	.word	0x40020458
 8005430:	40020470 	.word	0x40020470
 8005434:	40020488 	.word	0x40020488
 8005438:	400204a0 	.word	0x400204a0
 800543c:	400204b8 	.word	0x400204b8

08005440 <HAL_DMA_GetError>:
  * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
  *              the configuration information for the specified DMA Stream.
  * @retval DMA Error Code
  */
uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
{
 8005440:	b480      	push	{r7}
 8005442:	b083      	sub	sp, #12
 8005444:	af00      	add	r7, sp, #0
 8005446:	6078      	str	r0, [r7, #4]
  return hdma->ErrorCode;
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
}
 800544c:	4618      	mov	r0, r3
 800544e:	370c      	adds	r7, #12
 8005450:	46bd      	mov	sp, r7
 8005452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005456:	4770      	bx	lr

08005458 <DMA_SetConfig>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval None
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8005458:	b480      	push	{r7}
 800545a:	b087      	sub	sp, #28
 800545c:	af00      	add	r7, sp, #0
 800545e:	60f8      	str	r0, [r7, #12]
 8005460:	60b9      	str	r1, [r7, #8]
 8005462:	607a      	str	r2, [r7, #4]
 8005464:	603b      	str	r3, [r7, #0]
  /* calculate DMA base and stream number */
  DMA_Base_Registers  *regs_dma  = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8005466:	68fb      	ldr	r3, [r7, #12]
 8005468:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800546a:	617b      	str	r3, [r7, #20]
  BDMA_Base_Registers *regs_bdma = (BDMA_Base_Registers *)hdma->StreamBaseAddress;
 800546c:	68fb      	ldr	r3, [r7, #12]
 800546e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005470:	613b      	str	r3, [r7, #16]

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	681b      	ldr	r3, [r3, #0]
 8005476:	4a7f      	ldr	r2, [pc, #508]	; (8005674 <DMA_SetConfig+0x21c>)
 8005478:	4293      	cmp	r3, r2
 800547a:	d072      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800547c:	68fb      	ldr	r3, [r7, #12]
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	4a7d      	ldr	r2, [pc, #500]	; (8005678 <DMA_SetConfig+0x220>)
 8005482:	4293      	cmp	r3, r2
 8005484:	d06d      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	4a7c      	ldr	r2, [pc, #496]	; (800567c <DMA_SetConfig+0x224>)
 800548c:	4293      	cmp	r3, r2
 800548e:	d068      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	4a7a      	ldr	r2, [pc, #488]	; (8005680 <DMA_SetConfig+0x228>)
 8005496:	4293      	cmp	r3, r2
 8005498:	d063      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	4a79      	ldr	r2, [pc, #484]	; (8005684 <DMA_SetConfig+0x22c>)
 80054a0:	4293      	cmp	r3, r2
 80054a2:	d05e      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054a4:	68fb      	ldr	r3, [r7, #12]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	4a77      	ldr	r2, [pc, #476]	; (8005688 <DMA_SetConfig+0x230>)
 80054aa:	4293      	cmp	r3, r2
 80054ac:	d059      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054ae:	68fb      	ldr	r3, [r7, #12]
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	4a76      	ldr	r2, [pc, #472]	; (800568c <DMA_SetConfig+0x234>)
 80054b4:	4293      	cmp	r3, r2
 80054b6:	d054      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	4a74      	ldr	r2, [pc, #464]	; (8005690 <DMA_SetConfig+0x238>)
 80054be:	4293      	cmp	r3, r2
 80054c0:	d04f      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054c2:	68fb      	ldr	r3, [r7, #12]
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	4a73      	ldr	r2, [pc, #460]	; (8005694 <DMA_SetConfig+0x23c>)
 80054c8:	4293      	cmp	r3, r2
 80054ca:	d04a      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054cc:	68fb      	ldr	r3, [r7, #12]
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	4a71      	ldr	r2, [pc, #452]	; (8005698 <DMA_SetConfig+0x240>)
 80054d2:	4293      	cmp	r3, r2
 80054d4:	d045      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	4a70      	ldr	r2, [pc, #448]	; (800569c <DMA_SetConfig+0x244>)
 80054dc:	4293      	cmp	r3, r2
 80054de:	d040      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	4a6e      	ldr	r2, [pc, #440]	; (80056a0 <DMA_SetConfig+0x248>)
 80054e6:	4293      	cmp	r3, r2
 80054e8:	d03b      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	4a6d      	ldr	r2, [pc, #436]	; (80056a4 <DMA_SetConfig+0x24c>)
 80054f0:	4293      	cmp	r3, r2
 80054f2:	d036      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054f4:	68fb      	ldr	r3, [r7, #12]
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	4a6b      	ldr	r2, [pc, #428]	; (80056a8 <DMA_SetConfig+0x250>)
 80054fa:	4293      	cmp	r3, r2
 80054fc:	d031      	beq.n	8005562 <DMA_SetConfig+0x10a>
 80054fe:	68fb      	ldr	r3, [r7, #12]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	4a6a      	ldr	r2, [pc, #424]	; (80056ac <DMA_SetConfig+0x254>)
 8005504:	4293      	cmp	r3, r2
 8005506:	d02c      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	4a68      	ldr	r2, [pc, #416]	; (80056b0 <DMA_SetConfig+0x258>)
 800550e:	4293      	cmp	r3, r2
 8005510:	d027      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	681b      	ldr	r3, [r3, #0]
 8005516:	4a67      	ldr	r2, [pc, #412]	; (80056b4 <DMA_SetConfig+0x25c>)
 8005518:	4293      	cmp	r3, r2
 800551a:	d022      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800551c:	68fb      	ldr	r3, [r7, #12]
 800551e:	681b      	ldr	r3, [r3, #0]
 8005520:	4a65      	ldr	r2, [pc, #404]	; (80056b8 <DMA_SetConfig+0x260>)
 8005522:	4293      	cmp	r3, r2
 8005524:	d01d      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005526:	68fb      	ldr	r3, [r7, #12]
 8005528:	681b      	ldr	r3, [r3, #0]
 800552a:	4a64      	ldr	r2, [pc, #400]	; (80056bc <DMA_SetConfig+0x264>)
 800552c:	4293      	cmp	r3, r2
 800552e:	d018      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	681b      	ldr	r3, [r3, #0]
 8005534:	4a62      	ldr	r2, [pc, #392]	; (80056c0 <DMA_SetConfig+0x268>)
 8005536:	4293      	cmp	r3, r2
 8005538:	d013      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800553a:	68fb      	ldr	r3, [r7, #12]
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	4a61      	ldr	r2, [pc, #388]	; (80056c4 <DMA_SetConfig+0x26c>)
 8005540:	4293      	cmp	r3, r2
 8005542:	d00e      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005544:	68fb      	ldr	r3, [r7, #12]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	4a5f      	ldr	r2, [pc, #380]	; (80056c8 <DMA_SetConfig+0x270>)
 800554a:	4293      	cmp	r3, r2
 800554c:	d009      	beq.n	8005562 <DMA_SetConfig+0x10a>
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	4a5e      	ldr	r2, [pc, #376]	; (80056cc <DMA_SetConfig+0x274>)
 8005554:	4293      	cmp	r3, r2
 8005556:	d004      	beq.n	8005562 <DMA_SetConfig+0x10a>
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	4a5c      	ldr	r2, [pc, #368]	; (80056d0 <DMA_SetConfig+0x278>)
 800555e:	4293      	cmp	r3, r2
 8005560:	d101      	bne.n	8005566 <DMA_SetConfig+0x10e>
 8005562:	2301      	movs	r3, #1
 8005564:	e000      	b.n	8005568 <DMA_SetConfig+0x110>
 8005566:	2300      	movs	r3, #0
 8005568:	2b00      	cmp	r3, #0
 800556a:	d00d      	beq.n	8005588 <DMA_SetConfig+0x130>
  {
    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 800556c:	68fb      	ldr	r3, [r7, #12]
 800556e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005570:	68fa      	ldr	r2, [r7, #12]
 8005572:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8005574:	605a      	str	r2, [r3, #4]

    if(hdma->DMAmuxRequestGen != 0U)
 8005576:	68fb      	ldr	r3, [r7, #12]
 8005578:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800557a:	2b00      	cmp	r3, #0
 800557c:	d004      	beq.n	8005588 <DMA_SetConfig+0x130>
    {
      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 800557e:	68fb      	ldr	r3, [r7, #12]
 8005580:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005582:	68fa      	ldr	r2, [r7, #12]
 8005584:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8005586:	605a      	str	r2, [r3, #4]
    }
  }

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8005588:	68fb      	ldr	r3, [r7, #12]
 800558a:	681b      	ldr	r3, [r3, #0]
 800558c:	4a39      	ldr	r2, [pc, #228]	; (8005674 <DMA_SetConfig+0x21c>)
 800558e:	4293      	cmp	r3, r2
 8005590:	d04a      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	4a38      	ldr	r2, [pc, #224]	; (8005678 <DMA_SetConfig+0x220>)
 8005598:	4293      	cmp	r3, r2
 800559a:	d045      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	4a36      	ldr	r2, [pc, #216]	; (800567c <DMA_SetConfig+0x224>)
 80055a2:	4293      	cmp	r3, r2
 80055a4:	d040      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	4a35      	ldr	r2, [pc, #212]	; (8005680 <DMA_SetConfig+0x228>)
 80055ac:	4293      	cmp	r3, r2
 80055ae:	d03b      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	4a33      	ldr	r2, [pc, #204]	; (8005684 <DMA_SetConfig+0x22c>)
 80055b6:	4293      	cmp	r3, r2
 80055b8:	d036      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055ba:	68fb      	ldr	r3, [r7, #12]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	4a32      	ldr	r2, [pc, #200]	; (8005688 <DMA_SetConfig+0x230>)
 80055c0:	4293      	cmp	r3, r2
 80055c2:	d031      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055c4:	68fb      	ldr	r3, [r7, #12]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	4a30      	ldr	r2, [pc, #192]	; (800568c <DMA_SetConfig+0x234>)
 80055ca:	4293      	cmp	r3, r2
 80055cc:	d02c      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055ce:	68fb      	ldr	r3, [r7, #12]
 80055d0:	681b      	ldr	r3, [r3, #0]
 80055d2:	4a2f      	ldr	r2, [pc, #188]	; (8005690 <DMA_SetConfig+0x238>)
 80055d4:	4293      	cmp	r3, r2
 80055d6:	d027      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	681b      	ldr	r3, [r3, #0]
 80055dc:	4a2d      	ldr	r2, [pc, #180]	; (8005694 <DMA_SetConfig+0x23c>)
 80055de:	4293      	cmp	r3, r2
 80055e0:	d022      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	681b      	ldr	r3, [r3, #0]
 80055e6:	4a2c      	ldr	r2, [pc, #176]	; (8005698 <DMA_SetConfig+0x240>)
 80055e8:	4293      	cmp	r3, r2
 80055ea:	d01d      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055ec:	68fb      	ldr	r3, [r7, #12]
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	4a2a      	ldr	r2, [pc, #168]	; (800569c <DMA_SetConfig+0x244>)
 80055f2:	4293      	cmp	r3, r2
 80055f4:	d018      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 80055f6:	68fb      	ldr	r3, [r7, #12]
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	4a29      	ldr	r2, [pc, #164]	; (80056a0 <DMA_SetConfig+0x248>)
 80055fc:	4293      	cmp	r3, r2
 80055fe:	d013      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	4a27      	ldr	r2, [pc, #156]	; (80056a4 <DMA_SetConfig+0x24c>)
 8005606:	4293      	cmp	r3, r2
 8005608:	d00e      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 800560a:	68fb      	ldr	r3, [r7, #12]
 800560c:	681b      	ldr	r3, [r3, #0]
 800560e:	4a26      	ldr	r2, [pc, #152]	; (80056a8 <DMA_SetConfig+0x250>)
 8005610:	4293      	cmp	r3, r2
 8005612:	d009      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	681b      	ldr	r3, [r3, #0]
 8005618:	4a24      	ldr	r2, [pc, #144]	; (80056ac <DMA_SetConfig+0x254>)
 800561a:	4293      	cmp	r3, r2
 800561c:	d004      	beq.n	8005628 <DMA_SetConfig+0x1d0>
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	4a23      	ldr	r2, [pc, #140]	; (80056b0 <DMA_SetConfig+0x258>)
 8005624:	4293      	cmp	r3, r2
 8005626:	d101      	bne.n	800562c <DMA_SetConfig+0x1d4>
 8005628:	2301      	movs	r3, #1
 800562a:	e000      	b.n	800562e <DMA_SetConfig+0x1d6>
 800562c:	2300      	movs	r3, #0
 800562e:	2b00      	cmp	r3, #0
 8005630:	d059      	beq.n	80056e6 <DMA_SetConfig+0x28e>
  {
    /* Clear all interrupt flags at correct offset within the register */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8005632:	68fb      	ldr	r3, [r7, #12]
 8005634:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005636:	f003 031f 	and.w	r3, r3, #31
 800563a:	223f      	movs	r2, #63	; 0x3f
 800563c:	409a      	lsls	r2, r3
 800563e:	697b      	ldr	r3, [r7, #20]
 8005640:	609a      	str	r2, [r3, #8]

    /* Clear DBM bit */
    ((DMA_Stream_TypeDef *)hdma->Instance)->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8005642:	68fb      	ldr	r3, [r7, #12]
 8005644:	681b      	ldr	r3, [r3, #0]
 8005646:	681a      	ldr	r2, [r3, #0]
 8005648:	68fb      	ldr	r3, [r7, #12]
 800564a:	681b      	ldr	r3, [r3, #0]
 800564c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005650:	601a      	str	r2, [r3, #0]

    /* Configure DMA Stream data length */
    ((DMA_Stream_TypeDef *)hdma->Instance)->NDTR = DataLength;
 8005652:	68fb      	ldr	r3, [r7, #12]
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	683a      	ldr	r2, [r7, #0]
 8005658:	605a      	str	r2, [r3, #4]

    /* Peripheral to Memory */
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	689b      	ldr	r3, [r3, #8]
 800565e:	2b40      	cmp	r3, #64	; 0x40
 8005660:	d138      	bne.n	80056d4 <DMA_SetConfig+0x27c>
    {
      /* Configure DMA Stream destination address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = DstAddress;
 8005662:	68fb      	ldr	r3, [r7, #12]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	687a      	ldr	r2, [r7, #4]
 8005668:	609a      	str	r2, [r3, #8]

      /* Configure DMA Stream source address */
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = SrcAddress;
 800566a:	68fb      	ldr	r3, [r7, #12]
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	68ba      	ldr	r2, [r7, #8]
 8005670:	60da      	str	r2, [r3, #12]
  }
  else
  {
    /* Nothing To Do */
  }
}
 8005672:	e086      	b.n	8005782 <DMA_SetConfig+0x32a>
 8005674:	40020010 	.word	0x40020010
 8005678:	40020028 	.word	0x40020028
 800567c:	40020040 	.word	0x40020040
 8005680:	40020058 	.word	0x40020058
 8005684:	40020070 	.word	0x40020070
 8005688:	40020088 	.word	0x40020088
 800568c:	400200a0 	.word	0x400200a0
 8005690:	400200b8 	.word	0x400200b8
 8005694:	40020410 	.word	0x40020410
 8005698:	40020428 	.word	0x40020428
 800569c:	40020440 	.word	0x40020440
 80056a0:	40020458 	.word	0x40020458
 80056a4:	40020470 	.word	0x40020470
 80056a8:	40020488 	.word	0x40020488
 80056ac:	400204a0 	.word	0x400204a0
 80056b0:	400204b8 	.word	0x400204b8
 80056b4:	58025408 	.word	0x58025408
 80056b8:	5802541c 	.word	0x5802541c
 80056bc:	58025430 	.word	0x58025430
 80056c0:	58025444 	.word	0x58025444
 80056c4:	58025458 	.word	0x58025458
 80056c8:	5802546c 	.word	0x5802546c
 80056cc:	58025480 	.word	0x58025480
 80056d0:	58025494 	.word	0x58025494
      ((DMA_Stream_TypeDef *)hdma->Instance)->PAR = SrcAddress;
 80056d4:	68fb      	ldr	r3, [r7, #12]
 80056d6:	681b      	ldr	r3, [r3, #0]
 80056d8:	68ba      	ldr	r2, [r7, #8]
 80056da:	609a      	str	r2, [r3, #8]
      ((DMA_Stream_TypeDef *)hdma->Instance)->M0AR = DstAddress;
 80056dc:	68fb      	ldr	r3, [r7, #12]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	687a      	ldr	r2, [r7, #4]
 80056e2:	60da      	str	r2, [r3, #12]
}
 80056e4:	e04d      	b.n	8005782 <DMA_SetConfig+0x32a>
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	681b      	ldr	r3, [r3, #0]
 80056ea:	4a29      	ldr	r2, [pc, #164]	; (8005790 <DMA_SetConfig+0x338>)
 80056ec:	4293      	cmp	r3, r2
 80056ee:	d022      	beq.n	8005736 <DMA_SetConfig+0x2de>
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	4a27      	ldr	r2, [pc, #156]	; (8005794 <DMA_SetConfig+0x33c>)
 80056f6:	4293      	cmp	r3, r2
 80056f8:	d01d      	beq.n	8005736 <DMA_SetConfig+0x2de>
 80056fa:	68fb      	ldr	r3, [r7, #12]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	4a26      	ldr	r2, [pc, #152]	; (8005798 <DMA_SetConfig+0x340>)
 8005700:	4293      	cmp	r3, r2
 8005702:	d018      	beq.n	8005736 <DMA_SetConfig+0x2de>
 8005704:	68fb      	ldr	r3, [r7, #12]
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	4a24      	ldr	r2, [pc, #144]	; (800579c <DMA_SetConfig+0x344>)
 800570a:	4293      	cmp	r3, r2
 800570c:	d013      	beq.n	8005736 <DMA_SetConfig+0x2de>
 800570e:	68fb      	ldr	r3, [r7, #12]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	4a23      	ldr	r2, [pc, #140]	; (80057a0 <DMA_SetConfig+0x348>)
 8005714:	4293      	cmp	r3, r2
 8005716:	d00e      	beq.n	8005736 <DMA_SetConfig+0x2de>
 8005718:	68fb      	ldr	r3, [r7, #12]
 800571a:	681b      	ldr	r3, [r3, #0]
 800571c:	4a21      	ldr	r2, [pc, #132]	; (80057a4 <DMA_SetConfig+0x34c>)
 800571e:	4293      	cmp	r3, r2
 8005720:	d009      	beq.n	8005736 <DMA_SetConfig+0x2de>
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	4a20      	ldr	r2, [pc, #128]	; (80057a8 <DMA_SetConfig+0x350>)
 8005728:	4293      	cmp	r3, r2
 800572a:	d004      	beq.n	8005736 <DMA_SetConfig+0x2de>
 800572c:	68fb      	ldr	r3, [r7, #12]
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	4a1e      	ldr	r2, [pc, #120]	; (80057ac <DMA_SetConfig+0x354>)
 8005732:	4293      	cmp	r3, r2
 8005734:	d101      	bne.n	800573a <DMA_SetConfig+0x2e2>
 8005736:	2301      	movs	r3, #1
 8005738:	e000      	b.n	800573c <DMA_SetConfig+0x2e4>
 800573a:	2300      	movs	r3, #0
 800573c:	2b00      	cmp	r3, #0
 800573e:	d020      	beq.n	8005782 <DMA_SetConfig+0x32a>
    regs_bdma->IFCR = (BDMA_ISR_GIF0) << (hdma->StreamIndex & 0x1FU);
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005744:	f003 031f 	and.w	r3, r3, #31
 8005748:	2201      	movs	r2, #1
 800574a:	409a      	lsls	r2, r3
 800574c:	693b      	ldr	r3, [r7, #16]
 800574e:	605a      	str	r2, [r3, #4]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CNDTR = DataLength;
 8005750:	68fb      	ldr	r3, [r7, #12]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	683a      	ldr	r2, [r7, #0]
 8005756:	605a      	str	r2, [r3, #4]
    if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8005758:	68fb      	ldr	r3, [r7, #12]
 800575a:	689b      	ldr	r3, [r3, #8]
 800575c:	2b40      	cmp	r3, #64	; 0x40
 800575e:	d108      	bne.n	8005772 <DMA_SetConfig+0x31a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = DstAddress;
 8005760:	68fb      	ldr	r3, [r7, #12]
 8005762:	681b      	ldr	r3, [r3, #0]
 8005764:	687a      	ldr	r2, [r7, #4]
 8005766:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = SrcAddress;
 8005768:	68fb      	ldr	r3, [r7, #12]
 800576a:	681b      	ldr	r3, [r3, #0]
 800576c:	68ba      	ldr	r2, [r7, #8]
 800576e:	60da      	str	r2, [r3, #12]
}
 8005770:	e007      	b.n	8005782 <DMA_SetConfig+0x32a>
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR = SrcAddress;
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	68ba      	ldr	r2, [r7, #8]
 8005778:	609a      	str	r2, [r3, #8]
      ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = DstAddress;
 800577a:	68fb      	ldr	r3, [r7, #12]
 800577c:	681b      	ldr	r3, [r3, #0]
 800577e:	687a      	ldr	r2, [r7, #4]
 8005780:	60da      	str	r2, [r3, #12]
}
 8005782:	bf00      	nop
 8005784:	371c      	adds	r7, #28
 8005786:	46bd      	mov	sp, r7
 8005788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800578c:	4770      	bx	lr
 800578e:	bf00      	nop
 8005790:	58025408 	.word	0x58025408
 8005794:	5802541c 	.word	0x5802541c
 8005798:	58025430 	.word	0x58025430
 800579c:	58025444 	.word	0x58025444
 80057a0:	58025458 	.word	0x58025458
 80057a4:	5802546c 	.word	0x5802546c
 80057a8:	58025480 	.word	0x58025480
 80057ac:	58025494 	.word	0x58025494

080057b0 <DMA_CalcBaseAndBitshift>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 80057b0:	b480      	push	{r7}
 80057b2:	b085      	sub	sp, #20
 80057b4:	af00      	add	r7, sp, #0
 80057b6:	6078      	str	r0, [r7, #4]
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	4a42      	ldr	r2, [pc, #264]	; (80058c8 <DMA_CalcBaseAndBitshift+0x118>)
 80057be:	4293      	cmp	r3, r2
 80057c0:	d04a      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	4a41      	ldr	r2, [pc, #260]	; (80058cc <DMA_CalcBaseAndBitshift+0x11c>)
 80057c8:	4293      	cmp	r3, r2
 80057ca:	d045      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	4a3f      	ldr	r2, [pc, #252]	; (80058d0 <DMA_CalcBaseAndBitshift+0x120>)
 80057d2:	4293      	cmp	r3, r2
 80057d4:	d040      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	4a3e      	ldr	r2, [pc, #248]	; (80058d4 <DMA_CalcBaseAndBitshift+0x124>)
 80057dc:	4293      	cmp	r3, r2
 80057de:	d03b      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	4a3c      	ldr	r2, [pc, #240]	; (80058d8 <DMA_CalcBaseAndBitshift+0x128>)
 80057e6:	4293      	cmp	r3, r2
 80057e8:	d036      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	681b      	ldr	r3, [r3, #0]
 80057ee:	4a3b      	ldr	r2, [pc, #236]	; (80058dc <DMA_CalcBaseAndBitshift+0x12c>)
 80057f0:	4293      	cmp	r3, r2
 80057f2:	d031      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	4a39      	ldr	r2, [pc, #228]	; (80058e0 <DMA_CalcBaseAndBitshift+0x130>)
 80057fa:	4293      	cmp	r3, r2
 80057fc:	d02c      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	4a38      	ldr	r2, [pc, #224]	; (80058e4 <DMA_CalcBaseAndBitshift+0x134>)
 8005804:	4293      	cmp	r3, r2
 8005806:	d027      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	681b      	ldr	r3, [r3, #0]
 800580c:	4a36      	ldr	r2, [pc, #216]	; (80058e8 <DMA_CalcBaseAndBitshift+0x138>)
 800580e:	4293      	cmp	r3, r2
 8005810:	d022      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	4a35      	ldr	r2, [pc, #212]	; (80058ec <DMA_CalcBaseAndBitshift+0x13c>)
 8005818:	4293      	cmp	r3, r2
 800581a:	d01d      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	681b      	ldr	r3, [r3, #0]
 8005820:	4a33      	ldr	r2, [pc, #204]	; (80058f0 <DMA_CalcBaseAndBitshift+0x140>)
 8005822:	4293      	cmp	r3, r2
 8005824:	d018      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	4a32      	ldr	r2, [pc, #200]	; (80058f4 <DMA_CalcBaseAndBitshift+0x144>)
 800582c:	4293      	cmp	r3, r2
 800582e:	d013      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	681b      	ldr	r3, [r3, #0]
 8005834:	4a30      	ldr	r2, [pc, #192]	; (80058f8 <DMA_CalcBaseAndBitshift+0x148>)
 8005836:	4293      	cmp	r3, r2
 8005838:	d00e      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	4a2f      	ldr	r2, [pc, #188]	; (80058fc <DMA_CalcBaseAndBitshift+0x14c>)
 8005840:	4293      	cmp	r3, r2
 8005842:	d009      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	4a2d      	ldr	r2, [pc, #180]	; (8005900 <DMA_CalcBaseAndBitshift+0x150>)
 800584a:	4293      	cmp	r3, r2
 800584c:	d004      	beq.n	8005858 <DMA_CalcBaseAndBitshift+0xa8>
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	4a2c      	ldr	r2, [pc, #176]	; (8005904 <DMA_CalcBaseAndBitshift+0x154>)
 8005854:	4293      	cmp	r3, r2
 8005856:	d101      	bne.n	800585c <DMA_CalcBaseAndBitshift+0xac>
 8005858:	2301      	movs	r3, #1
 800585a:	e000      	b.n	800585e <DMA_CalcBaseAndBitshift+0xae>
 800585c:	2300      	movs	r3, #0
 800585e:	2b00      	cmp	r3, #0
 8005860:	d024      	beq.n	80058ac <DMA_CalcBaseAndBitshift+0xfc>
  {
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	b2db      	uxtb	r3, r3
 8005868:	3b10      	subs	r3, #16
 800586a:	4a27      	ldr	r2, [pc, #156]	; (8005908 <DMA_CalcBaseAndBitshift+0x158>)
 800586c:	fba2 2303 	umull	r2, r3, r2, r3
 8005870:	091b      	lsrs	r3, r3, #4
 8005872:	60fb      	str	r3, [r7, #12]

    /* lookup table for necessary bitshift of flags within status registers */
    static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 8005874:	68fb      	ldr	r3, [r7, #12]
 8005876:	f003 0307 	and.w	r3, r3, #7
 800587a:	4a24      	ldr	r2, [pc, #144]	; (800590c <DMA_CalcBaseAndBitshift+0x15c>)
 800587c:	5cd3      	ldrb	r3, [r2, r3]
 800587e:	461a      	mov	r2, r3
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	65da      	str	r2, [r3, #92]	; 0x5c

    if (stream_number > 3U)
 8005884:	68fb      	ldr	r3, [r7, #12]
 8005886:	2b03      	cmp	r3, #3
 8005888:	d908      	bls.n	800589c <DMA_CalcBaseAndBitshift+0xec>
    {
      /* return pointer to HISR and HIFCR */
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	461a      	mov	r2, r3
 8005890:	4b1f      	ldr	r3, [pc, #124]	; (8005910 <DMA_CalcBaseAndBitshift+0x160>)
 8005892:	4013      	ands	r3, r2
 8005894:	1d1a      	adds	r2, r3, #4
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	659a      	str	r2, [r3, #88]	; 0x58
 800589a:	e00d      	b.n	80058b8 <DMA_CalcBaseAndBitshift+0x108>
    }
    else
    {
      /* return pointer to LISR and LIFCR */
      hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU));
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	681b      	ldr	r3, [r3, #0]
 80058a0:	461a      	mov	r2, r3
 80058a2:	4b1b      	ldr	r3, [pc, #108]	; (8005910 <DMA_CalcBaseAndBitshift+0x160>)
 80058a4:	4013      	ands	r3, r2
 80058a6:	687a      	ldr	r2, [r7, #4]
 80058a8:	6593      	str	r3, [r2, #88]	; 0x58
 80058aa:	e005      	b.n	80058b8 <DMA_CalcBaseAndBitshift+0x108>
    }
  }
  else /* BDMA instance(s) */
  {
    /* return pointer to ISR and IFCR */
    hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0xFFU));
 80058ac:	687b      	ldr	r3, [r7, #4]
 80058ae:	681b      	ldr	r3, [r3, #0]
 80058b0:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 80058b4:	687b      	ldr	r3, [r7, #4]
 80058b6:	659a      	str	r2, [r3, #88]	; 0x58
  }

  return hdma->StreamBaseAddress;
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 80058bc:	4618      	mov	r0, r3
 80058be:	3714      	adds	r7, #20
 80058c0:	46bd      	mov	sp, r7
 80058c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058c6:	4770      	bx	lr
 80058c8:	40020010 	.word	0x40020010
 80058cc:	40020028 	.word	0x40020028
 80058d0:	40020040 	.word	0x40020040
 80058d4:	40020058 	.word	0x40020058
 80058d8:	40020070 	.word	0x40020070
 80058dc:	40020088 	.word	0x40020088
 80058e0:	400200a0 	.word	0x400200a0
 80058e4:	400200b8 	.word	0x400200b8
 80058e8:	40020410 	.word	0x40020410
 80058ec:	40020428 	.word	0x40020428
 80058f0:	40020440 	.word	0x40020440
 80058f4:	40020458 	.word	0x40020458
 80058f8:	40020470 	.word	0x40020470
 80058fc:	40020488 	.word	0x40020488
 8005900:	400204a0 	.word	0x400204a0
 8005904:	400204b8 	.word	0x400204b8
 8005908:	aaaaaaab 	.word	0xaaaaaaab
 800590c:	0802556c 	.word	0x0802556c
 8005910:	fffffc00 	.word	0xfffffc00

08005914 <DMA_CheckFifoParam>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8005914:	b480      	push	{r7}
 8005916:	b085      	sub	sp, #20
 8005918:	af00      	add	r7, sp, #0
 800591a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800591c:	2300      	movs	r3, #0
 800591e:	73fb      	strb	r3, [r7, #15]

  /* Memory Data size equal to Byte */
  if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	699b      	ldr	r3, [r3, #24]
 8005924:	2b00      	cmp	r3, #0
 8005926:	d120      	bne.n	800596a <DMA_CheckFifoParam+0x56>
  {
    switch (hdma->Init.FIFOThreshold)
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800592c:	2b03      	cmp	r3, #3
 800592e:	d858      	bhi.n	80059e2 <DMA_CheckFifoParam+0xce>
 8005930:	a201      	add	r2, pc, #4	; (adr r2, 8005938 <DMA_CheckFifoParam+0x24>)
 8005932:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005936:	bf00      	nop
 8005938:	08005949 	.word	0x08005949
 800593c:	0800595b 	.word	0x0800595b
 8005940:	08005949 	.word	0x08005949
 8005944:	080059e3 	.word	0x080059e3
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:

        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800594c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005950:	2b00      	cmp	r3, #0
 8005952:	d048      	beq.n	80059e6 <DMA_CheckFifoParam+0xd2>
        {
          status = HAL_ERROR;
 8005954:	2301      	movs	r3, #1
 8005956:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005958:	e045      	b.n	80059e6 <DMA_CheckFifoParam+0xd2>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800595e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005962:	d142      	bne.n	80059ea <DMA_CheckFifoParam+0xd6>
        {
          status = HAL_ERROR;
 8005964:	2301      	movs	r3, #1
 8005966:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8005968:	e03f      	b.n	80059ea <DMA_CheckFifoParam+0xd6>
        break;
    }
  }

  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	699b      	ldr	r3, [r3, #24]
 800596e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005972:	d123      	bne.n	80059bc <DMA_CheckFifoParam+0xa8>
  {
    switch (hdma->Init.FIFOThreshold)
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005978:	2b03      	cmp	r3, #3
 800597a:	d838      	bhi.n	80059ee <DMA_CheckFifoParam+0xda>
 800597c:	a201      	add	r2, pc, #4	; (adr r2, 8005984 <DMA_CheckFifoParam+0x70>)
 800597e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005982:	bf00      	nop
 8005984:	08005995 	.word	0x08005995
 8005988:	0800599b 	.word	0x0800599b
 800598c:	08005995 	.word	0x08005995
 8005990:	080059ad 	.word	0x080059ad
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
        status = HAL_ERROR;
 8005994:	2301      	movs	r3, #1
 8005996:	73fb      	strb	r3, [r7, #15]
        break;
 8005998:	e030      	b.n	80059fc <DMA_CheckFifoParam+0xe8>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800599e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80059a2:	2b00      	cmp	r3, #0
 80059a4:	d025      	beq.n	80059f2 <DMA_CheckFifoParam+0xde>
        {
          status = HAL_ERROR;
 80059a6:	2301      	movs	r3, #1
 80059a8:	73fb      	strb	r3, [r7, #15]
        }
        break;
 80059aa:	e022      	b.n	80059f2 <DMA_CheckFifoParam+0xde>

      case DMA_FIFO_THRESHOLD_FULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80059b0:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80059b4:	d11f      	bne.n	80059f6 <DMA_CheckFifoParam+0xe2>
        {
          status = HAL_ERROR;
 80059b6:	2301      	movs	r3, #1
 80059b8:	73fb      	strb	r3, [r7, #15]
        }
        break;
 80059ba:	e01c      	b.n	80059f6 <DMA_CheckFifoParam+0xe2>
  }

  /* Memory Data size equal to Word */
  else
  {
    switch (hdma->Init.FIFOThreshold)
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80059c0:	2b02      	cmp	r3, #2
 80059c2:	d902      	bls.n	80059ca <DMA_CheckFifoParam+0xb6>
 80059c4:	2b03      	cmp	r3, #3
 80059c6:	d003      	beq.n	80059d0 <DMA_CheckFifoParam+0xbc>
          status = HAL_ERROR;
        }
    break;

      default:
        break;
 80059c8:	e018      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        status = HAL_ERROR;
 80059ca:	2301      	movs	r3, #1
 80059cc:	73fb      	strb	r3, [r7, #15]
        break;
 80059ce:	e015      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80059d4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d00e      	beq.n	80059fa <DMA_CheckFifoParam+0xe6>
          status = HAL_ERROR;
 80059dc:	2301      	movs	r3, #1
 80059de:	73fb      	strb	r3, [r7, #15]
    break;
 80059e0:	e00b      	b.n	80059fa <DMA_CheckFifoParam+0xe6>
        break;
 80059e2:	bf00      	nop
 80059e4:	e00a      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059e6:	bf00      	nop
 80059e8:	e008      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059ea:	bf00      	nop
 80059ec:	e006      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059ee:	bf00      	nop
 80059f0:	e004      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059f2:	bf00      	nop
 80059f4:	e002      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
        break;
 80059f6:	bf00      	nop
 80059f8:	e000      	b.n	80059fc <DMA_CheckFifoParam+0xe8>
    break;
 80059fa:	bf00      	nop
    }
  }

  return status;
 80059fc:	7bfb      	ldrb	r3, [r7, #15]
}
 80059fe:	4618      	mov	r0, r3
 8005a00:	3714      	adds	r7, #20
 8005a02:	46bd      	mov	sp, r7
 8005a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a08:	4770      	bx	lr
 8005a0a:	bf00      	nop

08005a0c <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8005a0c:	b480      	push	{r7}
 8005a0e:	b085      	sub	sp, #20
 8005a10:	af00      	add	r7, sp, #0
 8005a12:	6078      	str	r0, [r7, #4]
  uint32_t stream_number;
  uint32_t stream_baseaddress = (uint32_t)((uint32_t*)hdma->Instance);
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	681b      	ldr	r3, [r3, #0]
 8005a18:	60bb      	str	r3, [r7, #8]

  if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	4a38      	ldr	r2, [pc, #224]	; (8005b00 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 8005a20:	4293      	cmp	r3, r2
 8005a22:	d022      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	4a36      	ldr	r2, [pc, #216]	; (8005b04 <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 8005a2a:	4293      	cmp	r3, r2
 8005a2c:	d01d      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	4a35      	ldr	r2, [pc, #212]	; (8005b08 <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 8005a34:	4293      	cmp	r3, r2
 8005a36:	d018      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	4a33      	ldr	r2, [pc, #204]	; (8005b0c <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 8005a3e:	4293      	cmp	r3, r2
 8005a40:	d013      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	4a32      	ldr	r2, [pc, #200]	; (8005b10 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 8005a48:	4293      	cmp	r3, r2
 8005a4a:	d00e      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	681b      	ldr	r3, [r3, #0]
 8005a50:	4a30      	ldr	r2, [pc, #192]	; (8005b14 <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 8005a52:	4293      	cmp	r3, r2
 8005a54:	d009      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	681b      	ldr	r3, [r3, #0]
 8005a5a:	4a2f      	ldr	r2, [pc, #188]	; (8005b18 <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 8005a5c:	4293      	cmp	r3, r2
 8005a5e:	d004      	beq.n	8005a6a <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	681b      	ldr	r3, [r3, #0]
 8005a64:	4a2d      	ldr	r2, [pc, #180]	; (8005b1c <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 8005a66:	4293      	cmp	r3, r2
 8005a68:	d101      	bne.n	8005a6e <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 8005a6a:	2301      	movs	r3, #1
 8005a6c:	e000      	b.n	8005a70 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 8005a6e:	2300      	movs	r3, #0
 8005a70:	2b00      	cmp	r3, #0
 8005a72:	d01a      	beq.n	8005aaa <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
  {
    /* BDMA Channels are connected to DMAMUX2 channels */
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 8U) / 20U;
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	b2db      	uxtb	r3, r3
 8005a7a:	3b08      	subs	r3, #8
 8005a7c:	4a28      	ldr	r2, [pc, #160]	; (8005b20 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 8005a7e:	fba2 2303 	umull	r2, r3, r2, r3
 8005a82:	091b      	lsrs	r3, r3, #4
 8005a84:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 8005a86:	68fa      	ldr	r2, [r7, #12]
 8005a88:	4b26      	ldr	r3, [pc, #152]	; (8005b24 <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 8005a8a:	4413      	add	r3, r2
 8005a8c:	009b      	lsls	r3, r3, #2
 8005a8e:	461a      	mov	r2, r3
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX2_ChannelStatus;
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	4a24      	ldr	r2, [pc, #144]	; (8005b28 <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 8005a98:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8005a9a:	68fb      	ldr	r3, [r7, #12]
 8005a9c:	f003 031f 	and.w	r3, r3, #31
 8005aa0:	2201      	movs	r2, #1
 8005aa2:	409a      	lsls	r2, r3
 8005aa4:	687b      	ldr	r3, [r7, #4]
 8005aa6:	669a      	str	r2, [r3, #104]	; 0x68
    }
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
  }
}
 8005aa8:	e024      	b.n	8005af4 <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	b2db      	uxtb	r3, r3
 8005ab0:	3b10      	subs	r3, #16
 8005ab2:	4a1e      	ldr	r2, [pc, #120]	; (8005b2c <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 8005ab4:	fba2 2303 	umull	r2, r3, r2, r3
 8005ab8:	091b      	lsrs	r3, r3, #4
 8005aba:	60fb      	str	r3, [r7, #12]
    if((stream_baseaddress <= ((uint32_t)DMA2_Stream7) ) && \
 8005abc:	68bb      	ldr	r3, [r7, #8]
 8005abe:	4a1c      	ldr	r2, [pc, #112]	; (8005b30 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 8005ac0:	4293      	cmp	r3, r2
 8005ac2:	d806      	bhi.n	8005ad2 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 8005ac4:	68bb      	ldr	r3, [r7, #8]
 8005ac6:	4a1b      	ldr	r2, [pc, #108]	; (8005b34 <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 8005ac8:	4293      	cmp	r3, r2
 8005aca:	d902      	bls.n	8005ad2 <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
      stream_number += 8U;
 8005acc:	68fb      	ldr	r3, [r7, #12]
 8005ace:	3308      	adds	r3, #8
 8005ad0:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 8005ad2:	68fa      	ldr	r2, [r7, #12]
 8005ad4:	4b18      	ldr	r3, [pc, #96]	; (8005b38 <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 8005ad6:	4413      	add	r3, r2
 8005ad8:	009b      	lsls	r3, r3, #2
 8005ada:	461a      	mov	r2, r3
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	4a16      	ldr	r2, [pc, #88]	; (8005b3c <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 8005ae4:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8005ae6:	68fb      	ldr	r3, [r7, #12]
 8005ae8:	f003 031f 	and.w	r3, r3, #31
 8005aec:	2201      	movs	r2, #1
 8005aee:	409a      	lsls	r2, r3
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	669a      	str	r2, [r3, #104]	; 0x68
}
 8005af4:	bf00      	nop
 8005af6:	3714      	adds	r7, #20
 8005af8:	46bd      	mov	sp, r7
 8005afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005afe:	4770      	bx	lr
 8005b00:	58025408 	.word	0x58025408
 8005b04:	5802541c 	.word	0x5802541c
 8005b08:	58025430 	.word	0x58025430
 8005b0c:	58025444 	.word	0x58025444
 8005b10:	58025458 	.word	0x58025458
 8005b14:	5802546c 	.word	0x5802546c
 8005b18:	58025480 	.word	0x58025480
 8005b1c:	58025494 	.word	0x58025494
 8005b20:	cccccccd 	.word	0xcccccccd
 8005b24:	16009600 	.word	0x16009600
 8005b28:	58025880 	.word	0x58025880
 8005b2c:	aaaaaaab 	.word	0xaaaaaaab
 8005b30:	400204b8 	.word	0x400204b8
 8005b34:	4002040f 	.word	0x4002040f
 8005b38:	10008200 	.word	0x10008200
 8005b3c:	40020880 	.word	0x40020880

08005b40 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
 8005b40:	b480      	push	{r7}
 8005b42:	b085      	sub	sp, #20
 8005b44:	af00      	add	r7, sp, #0
 8005b46:	6078      	str	r0, [r7, #4]
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	685b      	ldr	r3, [r3, #4]
 8005b4c:	b2db      	uxtb	r3, r3
 8005b4e:	60fb      	str	r3, [r7, #12]

  if((request >= DMA_REQUEST_GENERATOR0) && (request <= DMA_REQUEST_GENERATOR7))
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	2b00      	cmp	r3, #0
 8005b54:	d04a      	beq.n	8005bec <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 8005b56:	68fb      	ldr	r3, [r7, #12]
 8005b58:	2b08      	cmp	r3, #8
 8005b5a:	d847      	bhi.n	8005bec <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	4a25      	ldr	r2, [pc, #148]	; (8005bf8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 8005b62:	4293      	cmp	r3, r2
 8005b64:	d022      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	4a24      	ldr	r2, [pc, #144]	; (8005bfc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 8005b6c:	4293      	cmp	r3, r2
 8005b6e:	d01d      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	4a22      	ldr	r2, [pc, #136]	; (8005c00 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 8005b76:	4293      	cmp	r3, r2
 8005b78:	d018      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b7a:	687b      	ldr	r3, [r7, #4]
 8005b7c:	681b      	ldr	r3, [r3, #0]
 8005b7e:	4a21      	ldr	r2, [pc, #132]	; (8005c04 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 8005b80:	4293      	cmp	r3, r2
 8005b82:	d013      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b84:	687b      	ldr	r3, [r7, #4]
 8005b86:	681b      	ldr	r3, [r3, #0]
 8005b88:	4a1f      	ldr	r2, [pc, #124]	; (8005c08 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 8005b8a:	4293      	cmp	r3, r2
 8005b8c:	d00e      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	4a1e      	ldr	r2, [pc, #120]	; (8005c0c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 8005b94:	4293      	cmp	r3, r2
 8005b96:	d009      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	4a1c      	ldr	r2, [pc, #112]	; (8005c10 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 8005b9e:	4293      	cmp	r3, r2
 8005ba0:	d004      	beq.n	8005bac <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	4a1b      	ldr	r2, [pc, #108]	; (8005c14 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 8005ba8:	4293      	cmp	r3, r2
 8005baa:	d101      	bne.n	8005bb0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 8005bac:	2301      	movs	r3, #1
 8005bae:	e000      	b.n	8005bb2 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 8005bb0:	2300      	movs	r3, #0
 8005bb2:	2b00      	cmp	r3, #0
 8005bb4:	d00a      	beq.n	8005bcc <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
    {
      /* BDMA Channels are connected to DMAMUX2 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_RequestGenerator0) + ((request - 1U) * 4U)));
 8005bb6:	68fa      	ldr	r2, [r7, #12]
 8005bb8:	4b17      	ldr	r3, [pc, #92]	; (8005c18 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 8005bba:	4413      	add	r3, r2
 8005bbc:	009b      	lsls	r3, r3, #2
 8005bbe:	461a      	mov	r2, r3
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	4a15      	ldr	r2, [pc, #84]	; (8005c1c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 8005bc8:	671a      	str	r2, [r3, #112]	; 0x70
 8005bca:	e009      	b.n	8005be0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
    }
    else
    {
      /* DMA1 and DMA2 Streams use DMAMUX1 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8005bcc:	68fa      	ldr	r2, [r7, #12]
 8005bce:	4b14      	ldr	r3, [pc, #80]	; (8005c20 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 8005bd0:	4413      	add	r3, r2
 8005bd2:	009b      	lsls	r3, r3, #2
 8005bd4:	461a      	mov	r2, r3
 8005bd6:	687b      	ldr	r3, [r7, #4]
 8005bd8:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	4a11      	ldr	r2, [pc, #68]	; (8005c24 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 8005bde:	671a      	str	r2, [r3, #112]	; 0x70
    }

    hdma->DMAmuxRequestGenStatusMask = 1UL << (request - 1U);
 8005be0:	68fb      	ldr	r3, [r7, #12]
 8005be2:	3b01      	subs	r3, #1
 8005be4:	2201      	movs	r2, #1
 8005be6:	409a      	lsls	r2, r3
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	675a      	str	r2, [r3, #116]	; 0x74
  }
}
 8005bec:	bf00      	nop
 8005bee:	3714      	adds	r7, #20
 8005bf0:	46bd      	mov	sp, r7
 8005bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bf6:	4770      	bx	lr
 8005bf8:	58025408 	.word	0x58025408
 8005bfc:	5802541c 	.word	0x5802541c
 8005c00:	58025430 	.word	0x58025430
 8005c04:	58025444 	.word	0x58025444
 8005c08:	58025458 	.word	0x58025458
 8005c0c:	5802546c 	.word	0x5802546c
 8005c10:	58025480 	.word	0x58025480
 8005c14:	58025494 	.word	0x58025494
 8005c18:	1600963f 	.word	0x1600963f
 8005c1c:	58025940 	.word	0x58025940
 8005c20:	1000823f 	.word	0x1000823f
 8005c24:	40020940 	.word	0x40020940

08005c28 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005c28:	b480      	push	{r7}
 8005c2a:	b089      	sub	sp, #36	; 0x24
 8005c2c:	af00      	add	r7, sp, #0
 8005c2e:	6078      	str	r0, [r7, #4]
 8005c30:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8005c32:	2300      	movs	r3, #0
 8005c34:	61fb      	str	r3, [r7, #28]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
 8005c36:	4b86      	ldr	r3, [pc, #536]	; (8005e50 <HAL_GPIO_Init+0x228>)
 8005c38:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8005c3a:	e18c      	b.n	8005f56 <HAL_GPIO_Init+0x32e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8005c3c:	683b      	ldr	r3, [r7, #0]
 8005c3e:	681a      	ldr	r2, [r3, #0]
 8005c40:	2101      	movs	r1, #1
 8005c42:	69fb      	ldr	r3, [r7, #28]
 8005c44:	fa01 f303 	lsl.w	r3, r1, r3
 8005c48:	4013      	ands	r3, r2
 8005c4a:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 8005c4c:	693b      	ldr	r3, [r7, #16]
 8005c4e:	2b00      	cmp	r3, #0
 8005c50:	f000 817e 	beq.w	8005f50 <HAL_GPIO_Init+0x328>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005c54:	683b      	ldr	r3, [r7, #0]
 8005c56:	685b      	ldr	r3, [r3, #4]
 8005c58:	f003 0303 	and.w	r3, r3, #3
 8005c5c:	2b01      	cmp	r3, #1
 8005c5e:	d005      	beq.n	8005c6c <HAL_GPIO_Init+0x44>
 8005c60:	683b      	ldr	r3, [r7, #0]
 8005c62:	685b      	ldr	r3, [r3, #4]
 8005c64:	f003 0303 	and.w	r3, r3, #3
 8005c68:	2b02      	cmp	r3, #2
 8005c6a:	d130      	bne.n	8005cce <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	689b      	ldr	r3, [r3, #8]
 8005c70:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8005c72:	69fb      	ldr	r3, [r7, #28]
 8005c74:	005b      	lsls	r3, r3, #1
 8005c76:	2203      	movs	r2, #3
 8005c78:	fa02 f303 	lsl.w	r3, r2, r3
 8005c7c:	43db      	mvns	r3, r3
 8005c7e:	69ba      	ldr	r2, [r7, #24]
 8005c80:	4013      	ands	r3, r2
 8005c82:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005c84:	683b      	ldr	r3, [r7, #0]
 8005c86:	68da      	ldr	r2, [r3, #12]
 8005c88:	69fb      	ldr	r3, [r7, #28]
 8005c8a:	005b      	lsls	r3, r3, #1
 8005c8c:	fa02 f303 	lsl.w	r3, r2, r3
 8005c90:	69ba      	ldr	r2, [r7, #24]
 8005c92:	4313      	orrs	r3, r2
 8005c94:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	69ba      	ldr	r2, [r7, #24]
 8005c9a:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	685b      	ldr	r3, [r3, #4]
 8005ca0:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8005ca2:	2201      	movs	r2, #1
 8005ca4:	69fb      	ldr	r3, [r7, #28]
 8005ca6:	fa02 f303 	lsl.w	r3, r2, r3
 8005caa:	43db      	mvns	r3, r3
 8005cac:	69ba      	ldr	r2, [r7, #24]
 8005cae:	4013      	ands	r3, r2
 8005cb0:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005cb2:	683b      	ldr	r3, [r7, #0]
 8005cb4:	685b      	ldr	r3, [r3, #4]
 8005cb6:	091b      	lsrs	r3, r3, #4
 8005cb8:	f003 0201 	and.w	r2, r3, #1
 8005cbc:	69fb      	ldr	r3, [r7, #28]
 8005cbe:	fa02 f303 	lsl.w	r3, r2, r3
 8005cc2:	69ba      	ldr	r2, [r7, #24]
 8005cc4:	4313      	orrs	r3, r2
 8005cc6:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	69ba      	ldr	r2, [r7, #24]
 8005ccc:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005cce:	683b      	ldr	r3, [r7, #0]
 8005cd0:	685b      	ldr	r3, [r3, #4]
 8005cd2:	f003 0303 	and.w	r3, r3, #3
 8005cd6:	2b03      	cmp	r3, #3
 8005cd8:	d017      	beq.n	8005d0a <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	68db      	ldr	r3, [r3, #12]
 8005cde:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8005ce0:	69fb      	ldr	r3, [r7, #28]
 8005ce2:	005b      	lsls	r3, r3, #1
 8005ce4:	2203      	movs	r2, #3
 8005ce6:	fa02 f303 	lsl.w	r3, r2, r3
 8005cea:	43db      	mvns	r3, r3
 8005cec:	69ba      	ldr	r2, [r7, #24]
 8005cee:	4013      	ands	r3, r2
 8005cf0:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005cf2:	683b      	ldr	r3, [r7, #0]
 8005cf4:	689a      	ldr	r2, [r3, #8]
 8005cf6:	69fb      	ldr	r3, [r7, #28]
 8005cf8:	005b      	lsls	r3, r3, #1
 8005cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8005cfe:	69ba      	ldr	r2, [r7, #24]
 8005d00:	4313      	orrs	r3, r2
 8005d02:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	69ba      	ldr	r2, [r7, #24]
 8005d08:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005d0a:	683b      	ldr	r3, [r7, #0]
 8005d0c:	685b      	ldr	r3, [r3, #4]
 8005d0e:	f003 0303 	and.w	r3, r3, #3
 8005d12:	2b02      	cmp	r3, #2
 8005d14:	d123      	bne.n	8005d5e <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8005d16:	69fb      	ldr	r3, [r7, #28]
 8005d18:	08da      	lsrs	r2, r3, #3
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	3208      	adds	r2, #8
 8005d1e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005d22:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8005d24:	69fb      	ldr	r3, [r7, #28]
 8005d26:	f003 0307 	and.w	r3, r3, #7
 8005d2a:	009b      	lsls	r3, r3, #2
 8005d2c:	220f      	movs	r2, #15
 8005d2e:	fa02 f303 	lsl.w	r3, r2, r3
 8005d32:	43db      	mvns	r3, r3
 8005d34:	69ba      	ldr	r2, [r7, #24]
 8005d36:	4013      	ands	r3, r2
 8005d38:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8005d3a:	683b      	ldr	r3, [r7, #0]
 8005d3c:	691a      	ldr	r2, [r3, #16]
 8005d3e:	69fb      	ldr	r3, [r7, #28]
 8005d40:	f003 0307 	and.w	r3, r3, #7
 8005d44:	009b      	lsls	r3, r3, #2
 8005d46:	fa02 f303 	lsl.w	r3, r2, r3
 8005d4a:	69ba      	ldr	r2, [r7, #24]
 8005d4c:	4313      	orrs	r3, r2
 8005d4e:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8005d50:	69fb      	ldr	r3, [r7, #28]
 8005d52:	08da      	lsrs	r2, r3, #3
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	3208      	adds	r2, #8
 8005d58:	69b9      	ldr	r1, [r7, #24]
 8005d5a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8005d64:	69fb      	ldr	r3, [r7, #28]
 8005d66:	005b      	lsls	r3, r3, #1
 8005d68:	2203      	movs	r2, #3
 8005d6a:	fa02 f303 	lsl.w	r3, r2, r3
 8005d6e:	43db      	mvns	r3, r3
 8005d70:	69ba      	ldr	r2, [r7, #24]
 8005d72:	4013      	ands	r3, r2
 8005d74:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005d76:	683b      	ldr	r3, [r7, #0]
 8005d78:	685b      	ldr	r3, [r3, #4]
 8005d7a:	f003 0203 	and.w	r2, r3, #3
 8005d7e:	69fb      	ldr	r3, [r7, #28]
 8005d80:	005b      	lsls	r3, r3, #1
 8005d82:	fa02 f303 	lsl.w	r3, r2, r3
 8005d86:	69ba      	ldr	r2, [r7, #24]
 8005d88:	4313      	orrs	r3, r2
 8005d8a:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	69ba      	ldr	r2, [r7, #24]
 8005d90:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005d92:	683b      	ldr	r3, [r7, #0]
 8005d94:	685b      	ldr	r3, [r3, #4]
 8005d96:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	f000 80d8 	beq.w	8005f50 <HAL_GPIO_Init+0x328>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005da0:	4b2c      	ldr	r3, [pc, #176]	; (8005e54 <HAL_GPIO_Init+0x22c>)
 8005da2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8005da6:	4a2b      	ldr	r2, [pc, #172]	; (8005e54 <HAL_GPIO_Init+0x22c>)
 8005da8:	f043 0302 	orr.w	r3, r3, #2
 8005dac:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8005db0:	4b28      	ldr	r3, [pc, #160]	; (8005e54 <HAL_GPIO_Init+0x22c>)
 8005db2:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8005db6:	f003 0302 	and.w	r3, r3, #2
 8005dba:	60fb      	str	r3, [r7, #12]
 8005dbc:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8005dbe:	4a26      	ldr	r2, [pc, #152]	; (8005e58 <HAL_GPIO_Init+0x230>)
 8005dc0:	69fb      	ldr	r3, [r7, #28]
 8005dc2:	089b      	lsrs	r3, r3, #2
 8005dc4:	3302      	adds	r3, #2
 8005dc6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005dca:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8005dcc:	69fb      	ldr	r3, [r7, #28]
 8005dce:	f003 0303 	and.w	r3, r3, #3
 8005dd2:	009b      	lsls	r3, r3, #2
 8005dd4:	220f      	movs	r2, #15
 8005dd6:	fa02 f303 	lsl.w	r3, r2, r3
 8005dda:	43db      	mvns	r3, r3
 8005ddc:	69ba      	ldr	r2, [r7, #24]
 8005dde:	4013      	ands	r3, r2
 8005de0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	4a1d      	ldr	r2, [pc, #116]	; (8005e5c <HAL_GPIO_Init+0x234>)
 8005de6:	4293      	cmp	r3, r2
 8005de8:	d04a      	beq.n	8005e80 <HAL_GPIO_Init+0x258>
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	4a1c      	ldr	r2, [pc, #112]	; (8005e60 <HAL_GPIO_Init+0x238>)
 8005dee:	4293      	cmp	r3, r2
 8005df0:	d02b      	beq.n	8005e4a <HAL_GPIO_Init+0x222>
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	4a1b      	ldr	r2, [pc, #108]	; (8005e64 <HAL_GPIO_Init+0x23c>)
 8005df6:	4293      	cmp	r3, r2
 8005df8:	d025      	beq.n	8005e46 <HAL_GPIO_Init+0x21e>
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	4a1a      	ldr	r2, [pc, #104]	; (8005e68 <HAL_GPIO_Init+0x240>)
 8005dfe:	4293      	cmp	r3, r2
 8005e00:	d01f      	beq.n	8005e42 <HAL_GPIO_Init+0x21a>
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	4a19      	ldr	r2, [pc, #100]	; (8005e6c <HAL_GPIO_Init+0x244>)
 8005e06:	4293      	cmp	r3, r2
 8005e08:	d019      	beq.n	8005e3e <HAL_GPIO_Init+0x216>
 8005e0a:	687b      	ldr	r3, [r7, #4]
 8005e0c:	4a18      	ldr	r2, [pc, #96]	; (8005e70 <HAL_GPIO_Init+0x248>)
 8005e0e:	4293      	cmp	r3, r2
 8005e10:	d013      	beq.n	8005e3a <HAL_GPIO_Init+0x212>
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	4a17      	ldr	r2, [pc, #92]	; (8005e74 <HAL_GPIO_Init+0x24c>)
 8005e16:	4293      	cmp	r3, r2
 8005e18:	d00d      	beq.n	8005e36 <HAL_GPIO_Init+0x20e>
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	4a16      	ldr	r2, [pc, #88]	; (8005e78 <HAL_GPIO_Init+0x250>)
 8005e1e:	4293      	cmp	r3, r2
 8005e20:	d007      	beq.n	8005e32 <HAL_GPIO_Init+0x20a>
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	4a15      	ldr	r2, [pc, #84]	; (8005e7c <HAL_GPIO_Init+0x254>)
 8005e26:	4293      	cmp	r3, r2
 8005e28:	d101      	bne.n	8005e2e <HAL_GPIO_Init+0x206>
 8005e2a:	2309      	movs	r3, #9
 8005e2c:	e029      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e2e:	230a      	movs	r3, #10
 8005e30:	e027      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e32:	2307      	movs	r3, #7
 8005e34:	e025      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e36:	2306      	movs	r3, #6
 8005e38:	e023      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e3a:	2305      	movs	r3, #5
 8005e3c:	e021      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e3e:	2304      	movs	r3, #4
 8005e40:	e01f      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e42:	2303      	movs	r3, #3
 8005e44:	e01d      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e46:	2302      	movs	r3, #2
 8005e48:	e01b      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e4a:	2301      	movs	r3, #1
 8005e4c:	e019      	b.n	8005e82 <HAL_GPIO_Init+0x25a>
 8005e4e:	bf00      	nop
 8005e50:	58000080 	.word	0x58000080
 8005e54:	58024400 	.word	0x58024400
 8005e58:	58000400 	.word	0x58000400
 8005e5c:	58020000 	.word	0x58020000
 8005e60:	58020400 	.word	0x58020400
 8005e64:	58020800 	.word	0x58020800
 8005e68:	58020c00 	.word	0x58020c00
 8005e6c:	58021000 	.word	0x58021000
 8005e70:	58021400 	.word	0x58021400
 8005e74:	58021800 	.word	0x58021800
 8005e78:	58021c00 	.word	0x58021c00
 8005e7c:	58022400 	.word	0x58022400
 8005e80:	2300      	movs	r3, #0
 8005e82:	69fa      	ldr	r2, [r7, #28]
 8005e84:	f002 0203 	and.w	r2, r2, #3
 8005e88:	0092      	lsls	r2, r2, #2
 8005e8a:	4093      	lsls	r3, r2
 8005e8c:	69ba      	ldr	r2, [r7, #24]
 8005e8e:	4313      	orrs	r3, r2
 8005e90:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005e92:	4938      	ldr	r1, [pc, #224]	; (8005f74 <HAL_GPIO_Init+0x34c>)
 8005e94:	69fb      	ldr	r3, [r7, #28]
 8005e96:	089b      	lsrs	r3, r3, #2
 8005e98:	3302      	adds	r3, #2
 8005e9a:	69ba      	ldr	r2, [r7, #24]
 8005e9c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8005ea0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005ea4:	681b      	ldr	r3, [r3, #0]
 8005ea6:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005ea8:	693b      	ldr	r3, [r7, #16]
 8005eaa:	43db      	mvns	r3, r3
 8005eac:	69ba      	ldr	r2, [r7, #24]
 8005eae:	4013      	ands	r3, r2
 8005eb0:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8005eb2:	683b      	ldr	r3, [r7, #0]
 8005eb4:	685b      	ldr	r3, [r3, #4]
 8005eb6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d003      	beq.n	8005ec6 <HAL_GPIO_Init+0x29e>
        {
          temp |= iocurrent;
 8005ebe:	69ba      	ldr	r2, [r7, #24]
 8005ec0:	693b      	ldr	r3, [r7, #16]
 8005ec2:	4313      	orrs	r3, r2
 8005ec4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 8005ec6:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005eca:	69bb      	ldr	r3, [r7, #24]
 8005ecc:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 8005ece:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005ed2:	685b      	ldr	r3, [r3, #4]
 8005ed4:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005ed6:	693b      	ldr	r3, [r7, #16]
 8005ed8:	43db      	mvns	r3, r3
 8005eda:	69ba      	ldr	r2, [r7, #24]
 8005edc:	4013      	ands	r3, r2
 8005ede:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005ee0:	683b      	ldr	r3, [r7, #0]
 8005ee2:	685b      	ldr	r3, [r3, #4]
 8005ee4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005ee8:	2b00      	cmp	r3, #0
 8005eea:	d003      	beq.n	8005ef4 <HAL_GPIO_Init+0x2cc>
        {
          temp |= iocurrent;
 8005eec:	69ba      	ldr	r2, [r7, #24]
 8005eee:	693b      	ldr	r3, [r7, #16]
 8005ef0:	4313      	orrs	r3, r2
 8005ef2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 8005ef4:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005ef8:	69bb      	ldr	r3, [r7, #24]
 8005efa:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 8005efc:	697b      	ldr	r3, [r7, #20]
 8005efe:	685b      	ldr	r3, [r3, #4]
 8005f00:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005f02:	693b      	ldr	r3, [r7, #16]
 8005f04:	43db      	mvns	r3, r3
 8005f06:	69ba      	ldr	r2, [r7, #24]
 8005f08:	4013      	ands	r3, r2
 8005f0a:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005f0c:	683b      	ldr	r3, [r7, #0]
 8005f0e:	685b      	ldr	r3, [r3, #4]
 8005f10:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	d003      	beq.n	8005f20 <HAL_GPIO_Init+0x2f8>
        {
          temp |= iocurrent;
 8005f18:	69ba      	ldr	r2, [r7, #24]
 8005f1a:	693b      	ldr	r3, [r7, #16]
 8005f1c:	4313      	orrs	r3, r2
 8005f1e:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 8005f20:	697b      	ldr	r3, [r7, #20]
 8005f22:	69ba      	ldr	r2, [r7, #24]
 8005f24:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 8005f26:	697b      	ldr	r3, [r7, #20]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8005f2c:	693b      	ldr	r3, [r7, #16]
 8005f2e:	43db      	mvns	r3, r3
 8005f30:	69ba      	ldr	r2, [r7, #24]
 8005f32:	4013      	ands	r3, r2
 8005f34:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005f36:	683b      	ldr	r3, [r7, #0]
 8005f38:	685b      	ldr	r3, [r3, #4]
 8005f3a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005f3e:	2b00      	cmp	r3, #0
 8005f40:	d003      	beq.n	8005f4a <HAL_GPIO_Init+0x322>
        {
          temp |= iocurrent;
 8005f42:	69ba      	ldr	r2, [r7, #24]
 8005f44:	693b      	ldr	r3, [r7, #16]
 8005f46:	4313      	orrs	r3, r2
 8005f48:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 8005f4a:	697b      	ldr	r3, [r7, #20]
 8005f4c:	69ba      	ldr	r2, [r7, #24]
 8005f4e:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8005f50:	69fb      	ldr	r3, [r7, #28]
 8005f52:	3301      	adds	r3, #1
 8005f54:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8005f56:	683b      	ldr	r3, [r7, #0]
 8005f58:	681a      	ldr	r2, [r3, #0]
 8005f5a:	69fb      	ldr	r3, [r7, #28]
 8005f5c:	fa22 f303 	lsr.w	r3, r2, r3
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	f47f ae6b 	bne.w	8005c3c <HAL_GPIO_Init+0x14>
  }
}
 8005f66:	bf00      	nop
 8005f68:	bf00      	nop
 8005f6a:	3724      	adds	r7, #36	; 0x24
 8005f6c:	46bd      	mov	sp, r7
 8005f6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f72:	4770      	bx	lr
 8005f74:	58000400 	.word	0x58000400

08005f78 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8005f78:	b480      	push	{r7}
 8005f7a:	b083      	sub	sp, #12
 8005f7c:	af00      	add	r7, sp, #0
 8005f7e:	6078      	str	r0, [r7, #4]
 8005f80:	460b      	mov	r3, r1
 8005f82:	807b      	strh	r3, [r7, #2]
 8005f84:	4613      	mov	r3, r2
 8005f86:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8005f88:	787b      	ldrb	r3, [r7, #1]
 8005f8a:	2b00      	cmp	r3, #0
 8005f8c:	d003      	beq.n	8005f96 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8005f8e:	887a      	ldrh	r2, [r7, #2]
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 8005f94:	e003      	b.n	8005f9e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8005f96:	887b      	ldrh	r3, [r7, #2]
 8005f98:	041a      	lsls	r2, r3, #16
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	619a      	str	r2, [r3, #24]
}
 8005f9e:	bf00      	nop
 8005fa0:	370c      	adds	r7, #12
 8005fa2:	46bd      	mov	sp, r7
 8005fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fa8:	4770      	bx	lr
	...

08005fac <HAL_OSPI_Init>:
  *         in the OSPI_InitTypeDef and initialize the associated handle.
  * @param  hospi : OSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_Init(OSPI_HandleTypeDef *hospi)
{
 8005fac:	b580      	push	{r7, lr}
 8005fae:	b086      	sub	sp, #24
 8005fb0:	af02      	add	r7, sp, #8
 8005fb2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8005fb4:	2300      	movs	r3, #0
 8005fb6:	73fb      	strb	r3, [r7, #15]
  uint32_t tickstart = HAL_GetTick();
 8005fb8:	f7fb fd6a 	bl	8001a90 <HAL_GetTick>
 8005fbc:	60b8      	str	r0, [r7, #8]

  /* Check the OSPI handle allocation */
  if (hospi == NULL)
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	2b00      	cmp	r3, #0
 8005fc2:	d102      	bne.n	8005fca <HAL_OSPI_Init+0x1e>
  {
    status = HAL_ERROR;
 8005fc4:	2301      	movs	r3, #1
 8005fc6:	73fb      	strb	r3, [r7, #15]
 8005fc8:	e0a5      	b.n	8006116 <HAL_OSPI_Init+0x16a>
    assert_param(IS_OSPI_CS_BOUNDARY(hospi->Init.ChipSelectBoundary));
    assert_param(IS_OSPI_DLYBYP(hospi->Init.DelayBlockBypass));
    assert_param(IS_OSPI_MAXTRAN(hospi->Init.MaxTran));

    /* Initialize error code */
    hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	2200      	movs	r2, #0
 8005fce:	655a      	str	r2, [r3, #84]	; 0x54

    /* Check if the state is the reset state */
    if (hospi->State == HAL_OSPI_STATE_RESET)
 8005fd0:	687b      	ldr	r3, [r7, #4]
 8005fd2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005fd4:	2b00      	cmp	r3, #0
 8005fd6:	f040 809e 	bne.w	8006116 <HAL_OSPI_Init+0x16a>

      /* Init the low level hardware */
      hospi->MspInitCallback(hospi);
#else
      /* Initialization of the low level hardware */
      HAL_OSPI_MspInit(hospi);
 8005fda:	6878      	ldr	r0, [r7, #4]
 8005fdc:	f7fb f8aa 	bl	8001134 <HAL_OSPI_MspInit>
#endif /* defined (USE_HAL_OSPI_REGISTER_CALLBACKS) && (USE_HAL_OSPI_REGISTER_CALLBACKS == 1U) */

      /* Configure the default timeout for the OSPI memory access */
      (void)HAL_OSPI_SetTimeout(hospi, HAL_OSPI_TIMEOUT_DEFAULT_VALUE);
 8005fe0:	f241 3188 	movw	r1, #5000	; 0x1388
 8005fe4:	6878      	ldr	r0, [r7, #4]
 8005fe6:	f000 f89d 	bl	8006124 <HAL_OSPI_SetTimeout>

      /* Configure memory type, device size, chip select high time, delay block bypass,
         free running clock, clock mode */
      MODIFY_REG(hospi->Instance->DCR1,
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	681b      	ldr	r3, [r3, #0]
 8005fee:	689a      	ldr	r2, [r3, #8]
 8005ff0:	4b4b      	ldr	r3, [pc, #300]	; (8006120 <HAL_OSPI_Init+0x174>)
 8005ff2:	4013      	ands	r3, r2
 8005ff4:	687a      	ldr	r2, [r7, #4]
 8005ff6:	68d1      	ldr	r1, [r2, #12]
 8005ff8:	687a      	ldr	r2, [r7, #4]
 8005ffa:	6912      	ldr	r2, [r2, #16]
 8005ffc:	3a01      	subs	r2, #1
 8005ffe:	0412      	lsls	r2, r2, #16
 8006000:	4311      	orrs	r1, r2
 8006002:	687a      	ldr	r2, [r7, #4]
 8006004:	6952      	ldr	r2, [r2, #20]
 8006006:	3a01      	subs	r2, #1
 8006008:	0212      	lsls	r2, r2, #8
 800600a:	4311      	orrs	r1, r2
 800600c:	687a      	ldr	r2, [r7, #4]
 800600e:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8006010:	4311      	orrs	r1, r2
 8006012:	687a      	ldr	r2, [r7, #4]
 8006014:	69d2      	ldr	r2, [r2, #28]
 8006016:	4311      	orrs	r1, r2
 8006018:	687a      	ldr	r2, [r7, #4]
 800601a:	6812      	ldr	r2, [r2, #0]
 800601c:	430b      	orrs	r3, r1
 800601e:	6093      	str	r3, [r2, #8]
                 (hospi->Init.MemoryType | ((hospi->Init.DeviceSize - 1U) << OCTOSPI_DCR1_DEVSIZE_Pos) |
                  ((hospi->Init.ChipSelectHighTime - 1U) << OCTOSPI_DCR1_CSHT_Pos) |
                  hospi->Init.DelayBlockBypass | hospi->Init.ClockMode));

      /* Configure wrap size */
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	68db      	ldr	r3, [r3, #12]
 8006026:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 800602a:	687b      	ldr	r3, [r7, #4]
 800602c:	6a1a      	ldr	r2, [r3, #32]
 800602e:	687b      	ldr	r3, [r7, #4]
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	430a      	orrs	r2, r1
 8006034:	60da      	str	r2, [r3, #12]

      /* Configure chip select boundary and maximum transfer */
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800603a:	0419      	lsls	r1, r3, #16
                               (hospi->Init.MaxTran << OCTOSPI_DCR3_MAXTRAN_Pos));
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	430a      	orrs	r2, r1
 8006046:	611a      	str	r2, [r3, #16]

      /* Configure refresh */
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	681b      	ldr	r3, [r3, #0]
 800604c:	687a      	ldr	r2, [r7, #4]
 800604e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8006050:	615a      	str	r2, [r3, #20]

      /* Configure FIFO threshold */
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	681b      	ldr	r3, [r3, #0]
 8006056:	681b      	ldr	r3, [r3, #0]
 8006058:	f423 51f8 	bic.w	r1, r3, #7936	; 0x1f00
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	685b      	ldr	r3, [r3, #4]
 8006060:	3b01      	subs	r3, #1
 8006062:	021a      	lsls	r2, r3, #8
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	681b      	ldr	r3, [r3, #0]
 8006068:	430a      	orrs	r2, r1
 800606a:	601a      	str	r2, [r3, #0]

      /* Wait till busy flag is reset */
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006070:	9300      	str	r3, [sp, #0]
 8006072:	68bb      	ldr	r3, [r7, #8]
 8006074:	2200      	movs	r2, #0
 8006076:	2120      	movs	r1, #32
 8006078:	6878      	ldr	r0, [r7, #4]
 800607a:	f000 fd4b 	bl	8006b14 <OSPI_WaitFlagStateUntilTimeout>
 800607e:	4603      	mov	r3, r0
 8006080:	73fb      	strb	r3, [r7, #15]

      if (status == HAL_OK)
 8006082:	7bfb      	ldrb	r3, [r7, #15]
 8006084:	2b00      	cmp	r3, #0
 8006086:	d146      	bne.n	8006116 <HAL_OSPI_Init+0x16a>
      {
        /* Configure clock prescaler */
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8006088:	687b      	ldr	r3, [r7, #4]
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	68db      	ldr	r3, [r3, #12]
 800608e:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8006092:	687b      	ldr	r3, [r7, #4]
 8006094:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006096:	1e5a      	subs	r2, r3, #1
 8006098:	687b      	ldr	r3, [r7, #4]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	430a      	orrs	r2, r1
 800609e:	60da      	str	r2, [r3, #12]
                   ((hospi->Init.ClockPrescaler - 1U) << OCTOSPI_DCR2_PRESCALER_Pos));

        /* Configure Dual Quad mode */
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	681b      	ldr	r3, [r3, #0]
 80060a4:	681b      	ldr	r3, [r3, #0]
 80060a6:	f023 0140 	bic.w	r1, r3, #64	; 0x40
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	689a      	ldr	r2, [r3, #8]
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	681b      	ldr	r3, [r3, #0]
 80060b2:	430a      	orrs	r2, r1
 80060b4:	601a      	str	r2, [r3, #0]

        /* Configure sample shifting and delay hold quarter cycle */
        MODIFY_REG(hospi->Instance->TCR, (OCTOSPI_TCR_SSHIFT | OCTOSPI_TCR_DHQC),
 80060b6:	687b      	ldr	r3, [r7, #4]
 80060b8:	681b      	ldr	r3, [r3, #0]
 80060ba:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 80060be:	f023 41a0 	bic.w	r1, r3, #1342177280	; 0x50000000
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80060ca:	431a      	orrs	r2, r3
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	430a      	orrs	r2, r1
 80060d2:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
                   (hospi->Init.SampleShifting | hospi->Init.DelayHoldQuarterCycle));

        /* Enable OctoSPI */
        __HAL_OSPI_ENABLE(hospi);
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	681a      	ldr	r2, [r3, #0]
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	f042 0201 	orr.w	r2, r2, #1
 80060e4:	601a      	str	r2, [r3, #0]

        /* Enable free running clock if needed : must be done after OSPI enable */
        if (hospi->Init.FreeRunningClock == HAL_OSPI_FREERUNCLK_ENABLE)
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	699b      	ldr	r3, [r3, #24]
 80060ea:	2b02      	cmp	r3, #2
 80060ec:	d107      	bne.n	80060fe <HAL_OSPI_Init+0x152>
        {
          SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	689a      	ldr	r2, [r3, #8]
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	681b      	ldr	r3, [r3, #0]
 80060f8:	f042 0202 	orr.w	r2, r2, #2
 80060fc:	609a      	str	r2, [r3, #8]
        }

        /* Initialize the OSPI state */
        if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	68db      	ldr	r3, [r3, #12]
 8006102:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8006106:	d103      	bne.n	8006110 <HAL_OSPI_Init+0x164>
        {
          hospi->State = HAL_OSPI_STATE_HYPERBUS_INIT;
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	2201      	movs	r2, #1
 800610c:	651a      	str	r2, [r3, #80]	; 0x50
 800610e:	e002      	b.n	8006116 <HAL_OSPI_Init+0x16a>
        }
        else
        {
          hospi->State = HAL_OSPI_STATE_READY;
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	2202      	movs	r2, #2
 8006114:	651a      	str	r2, [r3, #80]	; 0x50
      }
    }
  }

  /* Return function status */
  return status;
 8006116:	7bfb      	ldrb	r3, [r7, #15]
}
 8006118:	4618      	mov	r0, r3
 800611a:	3710      	adds	r7, #16
 800611c:	46bd      	mov	sp, r7
 800611e:	bd80      	pop	{r7, pc}
 8006120:	f8e0f8f4 	.word	0xf8e0f8f4

08006124 <HAL_OSPI_SetTimeout>:
  * @param  hospi   : OSPI handle.
  * @param  Timeout : Timeout for the memory access.
  * @retval None
  */
HAL_StatusTypeDef HAL_OSPI_SetTimeout(OSPI_HandleTypeDef *hospi, uint32_t Timeout)
{
 8006124:	b480      	push	{r7}
 8006126:	b083      	sub	sp, #12
 8006128:	af00      	add	r7, sp, #0
 800612a:	6078      	str	r0, [r7, #4]
 800612c:	6039      	str	r1, [r7, #0]
  hospi->Timeout = Timeout;
 800612e:	687b      	ldr	r3, [r7, #4]
 8006130:	683a      	ldr	r2, [r7, #0]
 8006132:	659a      	str	r2, [r3, #88]	; 0x58
  return HAL_OK;
 8006134:	2300      	movs	r3, #0
}
 8006136:	4618      	mov	r0, r3
 8006138:	370c      	adds	r7, #12
 800613a:	46bd      	mov	sp, r7
 800613c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006140:	4770      	bx	lr
	...

08006144 <HAL_OSPIM_Config>:
  * @param  cfg     : Configuration of the IO Manager for the instance
  * @param  Timeout : Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPIM_Config(OSPI_HandleTypeDef *hospi, OSPIM_CfgTypeDef *cfg, uint32_t Timeout)
{
 8006144:	b580      	push	{r7, lr}
 8006146:	b094      	sub	sp, #80	; 0x50
 8006148:	af00      	add	r7, sp, #0
 800614a:	60f8      	str	r0, [r7, #12]
 800614c:	60b9      	str	r1, [r7, #8]
 800614e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8006150:	2300      	movs	r3, #0
 8006152:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
  uint32_t instance;
  uint8_t index;
  uint8_t ospi_enabled = 0U;
 8006156:	2300      	movs	r3, #0
 8006158:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
  assert_param(IS_OSPIM_PORT(cfg->NCSPort));
  assert_param(IS_OSPIM_IO_PORT(cfg->IOLowPort));
  assert_param(IS_OSPIM_IO_PORT(cfg->IOHighPort));
  assert_param(IS_OSPIM_REQ2ACKTIME(cfg->Req2AckTime));

  if (hospi->Instance == OCTOSPI1)
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	4a9d      	ldr	r2, [pc, #628]	; (80063d8 <HAL_OSPIM_Config+0x294>)
 8006162:	4293      	cmp	r3, r2
 8006164:	d105      	bne.n	8006172 <HAL_OSPIM_Config+0x2e>
  {
    instance = 0U;
 8006166:	2300      	movs	r3, #0
 8006168:	64bb      	str	r3, [r7, #72]	; 0x48
    other_instance = 1U;
 800616a:	2301      	movs	r3, #1
 800616c:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 8006170:	e004      	b.n	800617c <HAL_OSPIM_Config+0x38>
  }
  else
  {
    instance = 1U;
 8006172:	2301      	movs	r3, #1
 8006174:	64bb      	str	r3, [r7, #72]	; 0x48
    other_instance = 0U;
 8006176:	2300      	movs	r3, #0
 8006178:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
  }

  /**************** Get current configuration of the instances ****************/
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 800617c:	2300      	movs	r3, #0
 800617e:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 8006182:	e01d      	b.n	80061c0 <HAL_OSPIM_Config+0x7c>
  {
    if (OSPIM_GetConfig(index + 1U, &(IOM_cfg[index])) != HAL_OK)
 8006184:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8006188:	3301      	adds	r3, #1
 800618a:	b2d8      	uxtb	r0, r3
 800618c:	f897 2047 	ldrb.w	r2, [r7, #71]	; 0x47
 8006190:	f107 0114 	add.w	r1, r7, #20
 8006194:	4613      	mov	r3, r2
 8006196:	005b      	lsls	r3, r3, #1
 8006198:	4413      	add	r3, r2
 800619a:	00db      	lsls	r3, r3, #3
 800619c:	440b      	add	r3, r1
 800619e:	4619      	mov	r1, r3
 80061a0:	f000 fcf0 	bl	8006b84 <OSPIM_GetConfig>
 80061a4:	4603      	mov	r3, r0
 80061a6:	2b00      	cmp	r3, #0
 80061a8:	d005      	beq.n	80061b6 <HAL_OSPIM_Config+0x72>
    {
      status = HAL_ERROR;
 80061aa:	2301      	movs	r3, #1
 80061ac:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 80061b0:	68fb      	ldr	r3, [r7, #12]
 80061b2:	2208      	movs	r2, #8
 80061b4:	655a      	str	r2, [r3, #84]	; 0x54
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 80061b6:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80061ba:	3301      	adds	r3, #1
 80061bc:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80061c0:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80061c4:	2b01      	cmp	r3, #1
 80061c6:	d9dd      	bls.n	8006184 <HAL_OSPIM_Config+0x40>
    }
  }

  if (status == HAL_OK)
 80061c8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80061cc:	2b00      	cmp	r3, #0
 80061ce:	f040 8495 	bne.w	8006afc <HAL_OSPIM_Config+0x9b8>
  {
    /********** Disable both OctoSPI to configure OctoSPI IO Manager **********/
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 80061d2:	4b81      	ldr	r3, [pc, #516]	; (80063d8 <HAL_OSPIM_Config+0x294>)
 80061d4:	681b      	ldr	r3, [r3, #0]
 80061d6:	f003 0301 	and.w	r3, r3, #1
 80061da:	2b00      	cmp	r3, #0
 80061dc:	d00b      	beq.n	80061f6 <HAL_OSPIM_Config+0xb2>
    {
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 80061de:	4b7e      	ldr	r3, [pc, #504]	; (80063d8 <HAL_OSPIM_Config+0x294>)
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	4a7d      	ldr	r2, [pc, #500]	; (80063d8 <HAL_OSPIM_Config+0x294>)
 80061e4:	f023 0301 	bic.w	r3, r3, #1
 80061e8:	6013      	str	r3, [r2, #0]
      ospi_enabled |= 0x1U;
 80061ea:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 80061ee:	f043 0301 	orr.w	r3, r3, #1
 80061f2:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
    }
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 80061f6:	4b79      	ldr	r3, [pc, #484]	; (80063dc <HAL_OSPIM_Config+0x298>)
 80061f8:	681b      	ldr	r3, [r3, #0]
 80061fa:	f003 0301 	and.w	r3, r3, #1
 80061fe:	2b00      	cmp	r3, #0
 8006200:	d00b      	beq.n	800621a <HAL_OSPIM_Config+0xd6>
    {
      CLEAR_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8006202:	4b76      	ldr	r3, [pc, #472]	; (80063dc <HAL_OSPIM_Config+0x298>)
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	4a75      	ldr	r2, [pc, #468]	; (80063dc <HAL_OSPIM_Config+0x298>)
 8006208:	f023 0301 	bic.w	r3, r3, #1
 800620c:	6013      	str	r3, [r2, #0]
      ospi_enabled |= 0x2U;
 800620e:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8006212:	f043 0302 	orr.w	r3, r3, #2
 8006216:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
    }

    /***************** Deactivation of previous configuration *****************/
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 800621a:	4971      	ldr	r1, [pc, #452]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800621c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800621e:	4613      	mov	r3, r2
 8006220:	005b      	lsls	r3, r3, #1
 8006222:	4413      	add	r3, r2
 8006224:	00db      	lsls	r3, r3, #3
 8006226:	3350      	adds	r3, #80	; 0x50
 8006228:	443b      	add	r3, r7
 800622a:	3b34      	subs	r3, #52	; 0x34
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	3b01      	subs	r3, #1
 8006230:	009b      	lsls	r3, r3, #2
 8006232:	440b      	add	r3, r1
 8006234:	6859      	ldr	r1, [r3, #4]
 8006236:	486a      	ldr	r0, [pc, #424]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 8006238:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800623a:	4613      	mov	r3, r2
 800623c:	005b      	lsls	r3, r3, #1
 800623e:	4413      	add	r3, r2
 8006240:	00db      	lsls	r3, r3, #3
 8006242:	3350      	adds	r3, #80	; 0x50
 8006244:	443b      	add	r3, r7
 8006246:	3b34      	subs	r3, #52	; 0x34
 8006248:	681b      	ldr	r3, [r3, #0]
 800624a:	3b01      	subs	r3, #1
 800624c:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 8006250:	009b      	lsls	r3, r3, #2
 8006252:	4403      	add	r3, r0
 8006254:	605a      	str	r2, [r3, #4]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006256:	4b62      	ldr	r3, [pc, #392]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	f003 0301 	and.w	r3, r3, #1
 800625e:	2b00      	cmp	r3, #0
 8006260:	f000 80c0 	beq.w	80063e4 <HAL_OSPIM_Config+0x2a0>
    {
      /* De-multiplexing should be performed */
      CLEAR_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8006264:	4b5e      	ldr	r3, [pc, #376]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	4a5d      	ldr	r2, [pc, #372]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800626a:	f023 0301 	bic.w	r3, r3, #1
 800626e:	6013      	str	r3, [r2, #0]

      if (other_instance == 1U)
 8006270:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 8006274:	2b01      	cmp	r3, #1
 8006276:	f040 8162 	bne.w	800653e <HAL_OSPIM_Config+0x3fa>
      {
        SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKSRC);
 800627a:	4959      	ldr	r1, [pc, #356]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800627c:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006280:	4613      	mov	r3, r2
 8006282:	005b      	lsls	r3, r3, #1
 8006284:	4413      	add	r3, r2
 8006286:	00db      	lsls	r3, r3, #3
 8006288:	3350      	adds	r3, #80	; 0x50
 800628a:	443b      	add	r3, r7
 800628c:	3b3c      	subs	r3, #60	; 0x3c
 800628e:	681b      	ldr	r3, [r3, #0]
 8006290:	3b01      	subs	r3, #1
 8006292:	009b      	lsls	r3, r3, #2
 8006294:	440b      	add	r3, r1
 8006296:	6859      	ldr	r1, [r3, #4]
 8006298:	4851      	ldr	r0, [pc, #324]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800629a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800629e:	4613      	mov	r3, r2
 80062a0:	005b      	lsls	r3, r3, #1
 80062a2:	4413      	add	r3, r2
 80062a4:	00db      	lsls	r3, r3, #3
 80062a6:	3350      	adds	r3, #80	; 0x50
 80062a8:	443b      	add	r3, r7
 80062aa:	3b3c      	subs	r3, #60	; 0x3c
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	3b01      	subs	r3, #1
 80062b0:	f041 0202 	orr.w	r2, r1, #2
 80062b4:	009b      	lsls	r3, r3, #2
 80062b6:	4403      	add	r3, r0
 80062b8:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 80062ba:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80062be:	4613      	mov	r3, r2
 80062c0:	005b      	lsls	r3, r3, #1
 80062c2:	4413      	add	r3, r2
 80062c4:	00db      	lsls	r3, r3, #3
 80062c6:	3350      	adds	r3, #80	; 0x50
 80062c8:	443b      	add	r3, r7
 80062ca:	3b38      	subs	r3, #56	; 0x38
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	2b00      	cmp	r3, #0
 80062d0:	d01f      	beq.n	8006312 <HAL_OSPIM_Config+0x1ce>
        {
          SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSSRC);
 80062d2:	4943      	ldr	r1, [pc, #268]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 80062d4:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80062d8:	4613      	mov	r3, r2
 80062da:	005b      	lsls	r3, r3, #1
 80062dc:	4413      	add	r3, r2
 80062de:	00db      	lsls	r3, r3, #3
 80062e0:	3350      	adds	r3, #80	; 0x50
 80062e2:	443b      	add	r3, r7
 80062e4:	3b38      	subs	r3, #56	; 0x38
 80062e6:	681b      	ldr	r3, [r3, #0]
 80062e8:	3b01      	subs	r3, #1
 80062ea:	009b      	lsls	r3, r3, #2
 80062ec:	440b      	add	r3, r1
 80062ee:	6859      	ldr	r1, [r3, #4]
 80062f0:	483b      	ldr	r0, [pc, #236]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 80062f2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80062f6:	4613      	mov	r3, r2
 80062f8:	005b      	lsls	r3, r3, #1
 80062fa:	4413      	add	r3, r2
 80062fc:	00db      	lsls	r3, r3, #3
 80062fe:	3350      	adds	r3, #80	; 0x50
 8006300:	443b      	add	r3, r7
 8006302:	3b38      	subs	r3, #56	; 0x38
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	3b01      	subs	r3, #1
 8006308:	f041 0220 	orr.w	r2, r1, #32
 800630c:	009b      	lsls	r3, r3, #2
 800630e:	4403      	add	r3, r0
 8006310:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006312:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006316:	4613      	mov	r3, r2
 8006318:	005b      	lsls	r3, r3, #1
 800631a:	4413      	add	r3, r2
 800631c:	00db      	lsls	r3, r3, #3
 800631e:	3350      	adds	r3, #80	; 0x50
 8006320:	443b      	add	r3, r7
 8006322:	3b30      	subs	r3, #48	; 0x30
 8006324:	681b      	ldr	r3, [r3, #0]
 8006326:	2b00      	cmp	r3, #0
 8006328:	d023      	beq.n	8006372 <HAL_OSPIM_Config+0x22e>
        {
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], \
 800632a:	492d      	ldr	r1, [pc, #180]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800632c:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006330:	4613      	mov	r3, r2
 8006332:	005b      	lsls	r3, r3, #1
 8006334:	4413      	add	r3, r2
 8006336:	00db      	lsls	r3, r3, #3
 8006338:	3350      	adds	r3, #80	; 0x50
 800633a:	443b      	add	r3, r7
 800633c:	3b30      	subs	r3, #48	; 0x30
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	3b01      	subs	r3, #1
 8006342:	f003 0301 	and.w	r3, r3, #1
 8006346:	009b      	lsls	r3, r3, #2
 8006348:	440b      	add	r3, r1
 800634a:	6859      	ldr	r1, [r3, #4]
 800634c:	4824      	ldr	r0, [pc, #144]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800634e:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006352:	4613      	mov	r3, r2
 8006354:	005b      	lsls	r3, r3, #1
 8006356:	4413      	add	r3, r2
 8006358:	00db      	lsls	r3, r3, #3
 800635a:	3350      	adds	r3, #80	; 0x50
 800635c:	443b      	add	r3, r7
 800635e:	3b30      	subs	r3, #48	; 0x30
 8006360:	681b      	ldr	r3, [r3, #0]
 8006362:	3b01      	subs	r3, #1
 8006364:	f003 0301 	and.w	r3, r3, #1
 8006368:	f441 2280 	orr.w	r2, r1, #262144	; 0x40000
 800636c:	009b      	lsls	r3, r3, #2
 800636e:	4403      	add	r3, r0
 8006370:	605a      	str	r2, [r3, #4]
                  OCTOSPIM_PCR_IOLSRC_1);
        }
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006372:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006376:	4613      	mov	r3, r2
 8006378:	005b      	lsls	r3, r3, #1
 800637a:	4413      	add	r3, r2
 800637c:	00db      	lsls	r3, r3, #3
 800637e:	3350      	adds	r3, #80	; 0x50
 8006380:	443b      	add	r3, r7
 8006382:	3b2c      	subs	r3, #44	; 0x2c
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	2b00      	cmp	r3, #0
 8006388:	f000 80d9 	beq.w	800653e <HAL_OSPIM_Config+0x3fa>
        {
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], \
 800638c:	4914      	ldr	r1, [pc, #80]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 800638e:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006392:	4613      	mov	r3, r2
 8006394:	005b      	lsls	r3, r3, #1
 8006396:	4413      	add	r3, r2
 8006398:	00db      	lsls	r3, r3, #3
 800639a:	3350      	adds	r3, #80	; 0x50
 800639c:	443b      	add	r3, r7
 800639e:	3b2c      	subs	r3, #44	; 0x2c
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	3b01      	subs	r3, #1
 80063a4:	f003 0301 	and.w	r3, r3, #1
 80063a8:	009b      	lsls	r3, r3, #2
 80063aa:	440b      	add	r3, r1
 80063ac:	6859      	ldr	r1, [r3, #4]
 80063ae:	480c      	ldr	r0, [pc, #48]	; (80063e0 <HAL_OSPIM_Config+0x29c>)
 80063b0:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80063b4:	4613      	mov	r3, r2
 80063b6:	005b      	lsls	r3, r3, #1
 80063b8:	4413      	add	r3, r2
 80063ba:	00db      	lsls	r3, r3, #3
 80063bc:	3350      	adds	r3, #80	; 0x50
 80063be:	443b      	add	r3, r7
 80063c0:	3b2c      	subs	r3, #44	; 0x2c
 80063c2:	681b      	ldr	r3, [r3, #0]
 80063c4:	3b01      	subs	r3, #1
 80063c6:	f003 0301 	and.w	r3, r3, #1
 80063ca:	f041 6280 	orr.w	r2, r1, #67108864	; 0x4000000
 80063ce:	009b      	lsls	r3, r3, #2
 80063d0:	4403      	add	r3, r0
 80063d2:	605a      	str	r2, [r3, #4]
 80063d4:	e0b3      	b.n	800653e <HAL_OSPIM_Config+0x3fa>
 80063d6:	bf00      	nop
 80063d8:	52005000 	.word	0x52005000
 80063dc:	5200a000 	.word	0x5200a000
 80063e0:	5200b400 	.word	0x5200b400
        }
      }
    }
    else
    {
      if (IOM_cfg[instance].ClkPort != 0U)
 80063e4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80063e6:	4613      	mov	r3, r2
 80063e8:	005b      	lsls	r3, r3, #1
 80063ea:	4413      	add	r3, r2
 80063ec:	00db      	lsls	r3, r3, #3
 80063ee:	3350      	adds	r3, #80	; 0x50
 80063f0:	443b      	add	r3, r7
 80063f2:	3b3c      	subs	r3, #60	; 0x3c
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	2b00      	cmp	r3, #0
 80063f8:	f000 80a1 	beq.w	800653e <HAL_OSPIM_Config+0x3fa>
      {
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 80063fc:	4993      	ldr	r1, [pc, #588]	; (800664c <HAL_OSPIM_Config+0x508>)
 80063fe:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006400:	4613      	mov	r3, r2
 8006402:	005b      	lsls	r3, r3, #1
 8006404:	4413      	add	r3, r2
 8006406:	00db      	lsls	r3, r3, #3
 8006408:	3350      	adds	r3, #80	; 0x50
 800640a:	443b      	add	r3, r7
 800640c:	3b3c      	subs	r3, #60	; 0x3c
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	3b01      	subs	r3, #1
 8006412:	009b      	lsls	r3, r3, #2
 8006414:	440b      	add	r3, r1
 8006416:	6859      	ldr	r1, [r3, #4]
 8006418:	488c      	ldr	r0, [pc, #560]	; (800664c <HAL_OSPIM_Config+0x508>)
 800641a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800641c:	4613      	mov	r3, r2
 800641e:	005b      	lsls	r3, r3, #1
 8006420:	4413      	add	r3, r2
 8006422:	00db      	lsls	r3, r3, #3
 8006424:	3350      	adds	r3, #80	; 0x50
 8006426:	443b      	add	r3, r7
 8006428:	3b3c      	subs	r3, #60	; 0x3c
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	3b01      	subs	r3, #1
 800642e:	f021 0201 	bic.w	r2, r1, #1
 8006432:	009b      	lsls	r3, r3, #2
 8006434:	4403      	add	r3, r0
 8006436:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].DQSPort != 0U)
 8006438:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800643a:	4613      	mov	r3, r2
 800643c:	005b      	lsls	r3, r3, #1
 800643e:	4413      	add	r3, r2
 8006440:	00db      	lsls	r3, r3, #3
 8006442:	3350      	adds	r3, #80	; 0x50
 8006444:	443b      	add	r3, r7
 8006446:	3b38      	subs	r3, #56	; 0x38
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	2b00      	cmp	r3, #0
 800644c:	d01d      	beq.n	800648a <HAL_OSPIM_Config+0x346>
        {
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 800644e:	497f      	ldr	r1, [pc, #508]	; (800664c <HAL_OSPIM_Config+0x508>)
 8006450:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006452:	4613      	mov	r3, r2
 8006454:	005b      	lsls	r3, r3, #1
 8006456:	4413      	add	r3, r2
 8006458:	00db      	lsls	r3, r3, #3
 800645a:	3350      	adds	r3, #80	; 0x50
 800645c:	443b      	add	r3, r7
 800645e:	3b38      	subs	r3, #56	; 0x38
 8006460:	681b      	ldr	r3, [r3, #0]
 8006462:	3b01      	subs	r3, #1
 8006464:	009b      	lsls	r3, r3, #2
 8006466:	440b      	add	r3, r1
 8006468:	6859      	ldr	r1, [r3, #4]
 800646a:	4878      	ldr	r0, [pc, #480]	; (800664c <HAL_OSPIM_Config+0x508>)
 800646c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800646e:	4613      	mov	r3, r2
 8006470:	005b      	lsls	r3, r3, #1
 8006472:	4413      	add	r3, r2
 8006474:	00db      	lsls	r3, r3, #3
 8006476:	3350      	adds	r3, #80	; 0x50
 8006478:	443b      	add	r3, r7
 800647a:	3b38      	subs	r3, #56	; 0x38
 800647c:	681b      	ldr	r3, [r3, #0]
 800647e:	3b01      	subs	r3, #1
 8006480:	f021 0210 	bic.w	r2, r1, #16
 8006484:	009b      	lsls	r3, r3, #2
 8006486:	4403      	add	r3, r0
 8006488:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 800648a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800648c:	4613      	mov	r3, r2
 800648e:	005b      	lsls	r3, r3, #1
 8006490:	4413      	add	r3, r2
 8006492:	00db      	lsls	r3, r3, #3
 8006494:	3350      	adds	r3, #80	; 0x50
 8006496:	443b      	add	r3, r7
 8006498:	3b30      	subs	r3, #48	; 0x30
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	2b00      	cmp	r3, #0
 800649e:	d021      	beq.n	80064e4 <HAL_OSPIM_Config+0x3a0>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLEN);
 80064a0:	496a      	ldr	r1, [pc, #424]	; (800664c <HAL_OSPIM_Config+0x508>)
 80064a2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80064a4:	4613      	mov	r3, r2
 80064a6:	005b      	lsls	r3, r3, #1
 80064a8:	4413      	add	r3, r2
 80064aa:	00db      	lsls	r3, r3, #3
 80064ac:	3350      	adds	r3, #80	; 0x50
 80064ae:	443b      	add	r3, r7
 80064b0:	3b30      	subs	r3, #48	; 0x30
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	3b01      	subs	r3, #1
 80064b6:	f003 0301 	and.w	r3, r3, #1
 80064ba:	009b      	lsls	r3, r3, #2
 80064bc:	440b      	add	r3, r1
 80064be:	6859      	ldr	r1, [r3, #4]
 80064c0:	4862      	ldr	r0, [pc, #392]	; (800664c <HAL_OSPIM_Config+0x508>)
 80064c2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80064c4:	4613      	mov	r3, r2
 80064c6:	005b      	lsls	r3, r3, #1
 80064c8:	4413      	add	r3, r2
 80064ca:	00db      	lsls	r3, r3, #3
 80064cc:	3350      	adds	r3, #80	; 0x50
 80064ce:	443b      	add	r3, r7
 80064d0:	3b30      	subs	r3, #48	; 0x30
 80064d2:	681b      	ldr	r3, [r3, #0]
 80064d4:	3b01      	subs	r3, #1
 80064d6:	f003 0301 	and.w	r3, r3, #1
 80064da:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
 80064de:	009b      	lsls	r3, r3, #2
 80064e0:	4403      	add	r3, r0
 80064e2:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80064e4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80064e6:	4613      	mov	r3, r2
 80064e8:	005b      	lsls	r3, r3, #1
 80064ea:	4413      	add	r3, r2
 80064ec:	00db      	lsls	r3, r3, #3
 80064ee:	3350      	adds	r3, #80	; 0x50
 80064f0:	443b      	add	r3, r7
 80064f2:	3b2c      	subs	r3, #44	; 0x2c
 80064f4:	681b      	ldr	r3, [r3, #0]
 80064f6:	2b00      	cmp	r3, #0
 80064f8:	d021      	beq.n	800653e <HAL_OSPIM_Config+0x3fa>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 80064fa:	4954      	ldr	r1, [pc, #336]	; (800664c <HAL_OSPIM_Config+0x508>)
 80064fc:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80064fe:	4613      	mov	r3, r2
 8006500:	005b      	lsls	r3, r3, #1
 8006502:	4413      	add	r3, r2
 8006504:	00db      	lsls	r3, r3, #3
 8006506:	3350      	adds	r3, #80	; 0x50
 8006508:	443b      	add	r3, r7
 800650a:	3b2c      	subs	r3, #44	; 0x2c
 800650c:	681b      	ldr	r3, [r3, #0]
 800650e:	3b01      	subs	r3, #1
 8006510:	f003 0301 	and.w	r3, r3, #1
 8006514:	009b      	lsls	r3, r3, #2
 8006516:	440b      	add	r3, r1
 8006518:	6859      	ldr	r1, [r3, #4]
 800651a:	484c      	ldr	r0, [pc, #304]	; (800664c <HAL_OSPIM_Config+0x508>)
 800651c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800651e:	4613      	mov	r3, r2
 8006520:	005b      	lsls	r3, r3, #1
 8006522:	4413      	add	r3, r2
 8006524:	00db      	lsls	r3, r3, #3
 8006526:	3350      	adds	r3, #80	; 0x50
 8006528:	443b      	add	r3, r7
 800652a:	3b2c      	subs	r3, #44	; 0x2c
 800652c:	681b      	ldr	r3, [r3, #0]
 800652e:	3b01      	subs	r3, #1
 8006530:	f003 0301 	and.w	r3, r3, #1
 8006534:	f021 7280 	bic.w	r2, r1, #16777216	; 0x1000000
 8006538:	009b      	lsls	r3, r3, #2
 800653a:	4403      	add	r3, r0
 800653c:	605a      	str	r2, [r3, #4]
        }
      }
    }

    /********************* Deactivation of other instance *********************/
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 800653e:	68bb      	ldr	r3, [r7, #8]
 8006540:	6819      	ldr	r1, [r3, #0]
 8006542:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006546:	4613      	mov	r3, r2
 8006548:	005b      	lsls	r3, r3, #1
 800654a:	4413      	add	r3, r2
 800654c:	00db      	lsls	r3, r3, #3
 800654e:	3350      	adds	r3, #80	; 0x50
 8006550:	443b      	add	r3, r7
 8006552:	3b3c      	subs	r3, #60	; 0x3c
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	4299      	cmp	r1, r3
 8006558:	d038      	beq.n	80065cc <HAL_OSPIM_Config+0x488>
 800655a:	68bb      	ldr	r3, [r7, #8]
 800655c:	6859      	ldr	r1, [r3, #4]
 800655e:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006562:	4613      	mov	r3, r2
 8006564:	005b      	lsls	r3, r3, #1
 8006566:	4413      	add	r3, r2
 8006568:	00db      	lsls	r3, r3, #3
 800656a:	3350      	adds	r3, #80	; 0x50
 800656c:	443b      	add	r3, r7
 800656e:	3b38      	subs	r3, #56	; 0x38
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	4299      	cmp	r1, r3
 8006574:	d02a      	beq.n	80065cc <HAL_OSPIM_Config+0x488>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006576:	68bb      	ldr	r3, [r7, #8]
 8006578:	6899      	ldr	r1, [r3, #8]
 800657a:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800657e:	4613      	mov	r3, r2
 8006580:	005b      	lsls	r3, r3, #1
 8006582:	4413      	add	r3, r2
 8006584:	00db      	lsls	r3, r3, #3
 8006586:	3350      	adds	r3, #80	; 0x50
 8006588:	443b      	add	r3, r7
 800658a:	3b34      	subs	r3, #52	; 0x34
 800658c:	681b      	ldr	r3, [r3, #0]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 800658e:	4299      	cmp	r1, r3
 8006590:	d01c      	beq.n	80065cc <HAL_OSPIM_Config+0x488>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006592:	68bb      	ldr	r3, [r7, #8]
 8006594:	68d9      	ldr	r1, [r3, #12]
 8006596:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800659a:	4613      	mov	r3, r2
 800659c:	005b      	lsls	r3, r3, #1
 800659e:	4413      	add	r3, r2
 80065a0:	00db      	lsls	r3, r3, #3
 80065a2:	3350      	adds	r3, #80	; 0x50
 80065a4:	443b      	add	r3, r7
 80065a6:	3b30      	subs	r3, #48	; 0x30
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	4299      	cmp	r1, r3
 80065ac:	d00e      	beq.n	80065cc <HAL_OSPIM_Config+0x488>
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 80065ae:	68bb      	ldr	r3, [r7, #8]
 80065b0:	6919      	ldr	r1, [r3, #16]
 80065b2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80065b6:	4613      	mov	r3, r2
 80065b8:	005b      	lsls	r3, r3, #1
 80065ba:	4413      	add	r3, r2
 80065bc:	00db      	lsls	r3, r3, #3
 80065be:	3350      	adds	r3, #80	; 0x50
 80065c0:	443b      	add	r3, r7
 80065c2:	3b2c      	subs	r3, #44	; 0x2c
 80065c4:	681b      	ldr	r3, [r3, #0]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 80065c6:	4299      	cmp	r1, r3
 80065c8:	f040 810e 	bne.w	80067e8 <HAL_OSPIM_Config+0x6a4>
    {
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 80065cc:	68bb      	ldr	r3, [r7, #8]
 80065ce:	6819      	ldr	r1, [r3, #0]
 80065d0:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80065d4:	4613      	mov	r3, r2
 80065d6:	005b      	lsls	r3, r3, #1
 80065d8:	4413      	add	r3, r2
 80065da:	00db      	lsls	r3, r3, #3
 80065dc:	3350      	adds	r3, #80	; 0x50
 80065de:	443b      	add	r3, r7
 80065e0:	3b3c      	subs	r3, #60	; 0x3c
 80065e2:	681b      	ldr	r3, [r3, #0]
 80065e4:	4299      	cmp	r1, r3
 80065e6:	d133      	bne.n	8006650 <HAL_OSPIM_Config+0x50c>
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 80065e8:	68bb      	ldr	r3, [r7, #8]
 80065ea:	6859      	ldr	r1, [r3, #4]
 80065ec:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80065f0:	4613      	mov	r3, r2
 80065f2:	005b      	lsls	r3, r3, #1
 80065f4:	4413      	add	r3, r2
 80065f6:	00db      	lsls	r3, r3, #3
 80065f8:	3350      	adds	r3, #80	; 0x50
 80065fa:	443b      	add	r3, r7
 80065fc:	3b38      	subs	r3, #56	; 0x38
 80065fe:	681b      	ldr	r3, [r3, #0]
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 8006600:	4299      	cmp	r1, r3
 8006602:	d125      	bne.n	8006650 <HAL_OSPIM_Config+0x50c>
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006604:	68bb      	ldr	r3, [r7, #8]
 8006606:	68d9      	ldr	r1, [r3, #12]
 8006608:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800660c:	4613      	mov	r3, r2
 800660e:	005b      	lsls	r3, r3, #1
 8006610:	4413      	add	r3, r2
 8006612:	00db      	lsls	r3, r3, #3
 8006614:	3350      	adds	r3, #80	; 0x50
 8006616:	443b      	add	r3, r7
 8006618:	3b30      	subs	r3, #48	; 0x30
 800661a:	681b      	ldr	r3, [r3, #0]
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 800661c:	4299      	cmp	r1, r3
 800661e:	d117      	bne.n	8006650 <HAL_OSPIM_Config+0x50c>
          (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006620:	68bb      	ldr	r3, [r7, #8]
 8006622:	6919      	ldr	r1, [r3, #16]
 8006624:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006628:	4613      	mov	r3, r2
 800662a:	005b      	lsls	r3, r3, #1
 800662c:	4413      	add	r3, r2
 800662e:	00db      	lsls	r3, r3, #3
 8006630:	3350      	adds	r3, #80	; 0x50
 8006632:	443b      	add	r3, r7
 8006634:	3b2c      	subs	r3, #44	; 0x2c
 8006636:	681b      	ldr	r3, [r3, #0]
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006638:	4299      	cmp	r1, r3
 800663a:	d109      	bne.n	8006650 <HAL_OSPIM_Config+0x50c>
      {
        /* Multiplexing should be performed */
        SET_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 800663c:	4b03      	ldr	r3, [pc, #12]	; (800664c <HAL_OSPIM_Config+0x508>)
 800663e:	681b      	ldr	r3, [r3, #0]
 8006640:	4a02      	ldr	r2, [pc, #8]	; (800664c <HAL_OSPIM_Config+0x508>)
 8006642:	f043 0301 	orr.w	r3, r3, #1
 8006646:	6013      	str	r3, [r2, #0]
 8006648:	e0ce      	b.n	80067e8 <HAL_OSPIM_Config+0x6a4>
 800664a:	bf00      	nop
 800664c:	5200b400 	.word	0x5200b400
      }
      else
      {
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 8006650:	49bb      	ldr	r1, [pc, #748]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006652:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006656:	4613      	mov	r3, r2
 8006658:	005b      	lsls	r3, r3, #1
 800665a:	4413      	add	r3, r2
 800665c:	00db      	lsls	r3, r3, #3
 800665e:	3350      	adds	r3, #80	; 0x50
 8006660:	443b      	add	r3, r7
 8006662:	3b3c      	subs	r3, #60	; 0x3c
 8006664:	681b      	ldr	r3, [r3, #0]
 8006666:	3b01      	subs	r3, #1
 8006668:	009b      	lsls	r3, r3, #2
 800666a:	440b      	add	r3, r1
 800666c:	6859      	ldr	r1, [r3, #4]
 800666e:	48b4      	ldr	r0, [pc, #720]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006670:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006674:	4613      	mov	r3, r2
 8006676:	005b      	lsls	r3, r3, #1
 8006678:	4413      	add	r3, r2
 800667a:	00db      	lsls	r3, r3, #3
 800667c:	3350      	adds	r3, #80	; 0x50
 800667e:	443b      	add	r3, r7
 8006680:	3b3c      	subs	r3, #60	; 0x3c
 8006682:	681b      	ldr	r3, [r3, #0]
 8006684:	3b01      	subs	r3, #1
 8006686:	f021 0201 	bic.w	r2, r1, #1
 800668a:	009b      	lsls	r3, r3, #2
 800668c:	4403      	add	r3, r0
 800668e:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8006690:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006694:	4613      	mov	r3, r2
 8006696:	005b      	lsls	r3, r3, #1
 8006698:	4413      	add	r3, r2
 800669a:	00db      	lsls	r3, r3, #3
 800669c:	3350      	adds	r3, #80	; 0x50
 800669e:	443b      	add	r3, r7
 80066a0:	3b38      	subs	r3, #56	; 0x38
 80066a2:	681b      	ldr	r3, [r3, #0]
 80066a4:	2b00      	cmp	r3, #0
 80066a6:	d01f      	beq.n	80066e8 <HAL_OSPIM_Config+0x5a4>
        {
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 80066a8:	49a5      	ldr	r1, [pc, #660]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80066aa:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066ae:	4613      	mov	r3, r2
 80066b0:	005b      	lsls	r3, r3, #1
 80066b2:	4413      	add	r3, r2
 80066b4:	00db      	lsls	r3, r3, #3
 80066b6:	3350      	adds	r3, #80	; 0x50
 80066b8:	443b      	add	r3, r7
 80066ba:	3b38      	subs	r3, #56	; 0x38
 80066bc:	681b      	ldr	r3, [r3, #0]
 80066be:	3b01      	subs	r3, #1
 80066c0:	009b      	lsls	r3, r3, #2
 80066c2:	440b      	add	r3, r1
 80066c4:	6859      	ldr	r1, [r3, #4]
 80066c6:	489e      	ldr	r0, [pc, #632]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80066c8:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066cc:	4613      	mov	r3, r2
 80066ce:	005b      	lsls	r3, r3, #1
 80066d0:	4413      	add	r3, r2
 80066d2:	00db      	lsls	r3, r3, #3
 80066d4:	3350      	adds	r3, #80	; 0x50
 80066d6:	443b      	add	r3, r7
 80066d8:	3b38      	subs	r3, #56	; 0x38
 80066da:	681b      	ldr	r3, [r3, #0]
 80066dc:	3b01      	subs	r3, #1
 80066de:	f021 0210 	bic.w	r2, r1, #16
 80066e2:	009b      	lsls	r3, r3, #2
 80066e4:	4403      	add	r3, r0
 80066e6:	605a      	str	r2, [r3, #4]
        }
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 80066e8:	4995      	ldr	r1, [pc, #596]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80066ea:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80066ee:	4613      	mov	r3, r2
 80066f0:	005b      	lsls	r3, r3, #1
 80066f2:	4413      	add	r3, r2
 80066f4:	00db      	lsls	r3, r3, #3
 80066f6:	3350      	adds	r3, #80	; 0x50
 80066f8:	443b      	add	r3, r7
 80066fa:	3b34      	subs	r3, #52	; 0x34
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	3b01      	subs	r3, #1
 8006700:	009b      	lsls	r3, r3, #2
 8006702:	440b      	add	r3, r1
 8006704:	6859      	ldr	r1, [r3, #4]
 8006706:	488e      	ldr	r0, [pc, #568]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006708:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800670c:	4613      	mov	r3, r2
 800670e:	005b      	lsls	r3, r3, #1
 8006710:	4413      	add	r3, r2
 8006712:	00db      	lsls	r3, r3, #3
 8006714:	3350      	adds	r3, #80	; 0x50
 8006716:	443b      	add	r3, r7
 8006718:	3b34      	subs	r3, #52	; 0x34
 800671a:	681b      	ldr	r3, [r3, #0]
 800671c:	3b01      	subs	r3, #1
 800671e:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 8006722:	009b      	lsls	r3, r3, #2
 8006724:	4403      	add	r3, r0
 8006726:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006728:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800672c:	4613      	mov	r3, r2
 800672e:	005b      	lsls	r3, r3, #1
 8006730:	4413      	add	r3, r2
 8006732:	00db      	lsls	r3, r3, #3
 8006734:	3350      	adds	r3, #80	; 0x50
 8006736:	443b      	add	r3, r7
 8006738:	3b30      	subs	r3, #48	; 0x30
 800673a:	681b      	ldr	r3, [r3, #0]
 800673c:	2b00      	cmp	r3, #0
 800673e:	d023      	beq.n	8006788 <HAL_OSPIM_Config+0x644>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006740:	497f      	ldr	r1, [pc, #508]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006742:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006746:	4613      	mov	r3, r2
 8006748:	005b      	lsls	r3, r3, #1
 800674a:	4413      	add	r3, r2
 800674c:	00db      	lsls	r3, r3, #3
 800674e:	3350      	adds	r3, #80	; 0x50
 8006750:	443b      	add	r3, r7
 8006752:	3b30      	subs	r3, #48	; 0x30
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	3b01      	subs	r3, #1
 8006758:	f003 0301 	and.w	r3, r3, #1
 800675c:	009b      	lsls	r3, r3, #2
 800675e:	440b      	add	r3, r1
 8006760:	6859      	ldr	r1, [r3, #4]
 8006762:	4877      	ldr	r0, [pc, #476]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006764:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 8006768:	4613      	mov	r3, r2
 800676a:	005b      	lsls	r3, r3, #1
 800676c:	4413      	add	r3, r2
 800676e:	00db      	lsls	r3, r3, #3
 8006770:	3350      	adds	r3, #80	; 0x50
 8006772:	443b      	add	r3, r7
 8006774:	3b30      	subs	r3, #48	; 0x30
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	3b01      	subs	r3, #1
 800677a:	f003 0301 	and.w	r3, r3, #1
 800677e:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
 8006782:	009b      	lsls	r3, r3, #2
 8006784:	4403      	add	r3, r0
 8006786:	605a      	str	r2, [r3, #4]
                    OCTOSPIM_PCR_IOLEN);
        }
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006788:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 800678c:	4613      	mov	r3, r2
 800678e:	005b      	lsls	r3, r3, #1
 8006790:	4413      	add	r3, r2
 8006792:	00db      	lsls	r3, r3, #3
 8006794:	3350      	adds	r3, #80	; 0x50
 8006796:	443b      	add	r3, r7
 8006798:	3b2c      	subs	r3, #44	; 0x2c
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	2b00      	cmp	r3, #0
 800679e:	d023      	beq.n	80067e8 <HAL_OSPIM_Config+0x6a4>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 80067a0:	4967      	ldr	r1, [pc, #412]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80067a2:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80067a6:	4613      	mov	r3, r2
 80067a8:	005b      	lsls	r3, r3, #1
 80067aa:	4413      	add	r3, r2
 80067ac:	00db      	lsls	r3, r3, #3
 80067ae:	3350      	adds	r3, #80	; 0x50
 80067b0:	443b      	add	r3, r7
 80067b2:	3b2c      	subs	r3, #44	; 0x2c
 80067b4:	681b      	ldr	r3, [r3, #0]
 80067b6:	3b01      	subs	r3, #1
 80067b8:	f003 0301 	and.w	r3, r3, #1
 80067bc:	009b      	lsls	r3, r3, #2
 80067be:	440b      	add	r3, r1
 80067c0:	6859      	ldr	r1, [r3, #4]
 80067c2:	485f      	ldr	r0, [pc, #380]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80067c4:	f897 2045 	ldrb.w	r2, [r7, #69]	; 0x45
 80067c8:	4613      	mov	r3, r2
 80067ca:	005b      	lsls	r3, r3, #1
 80067cc:	4413      	add	r3, r2
 80067ce:	00db      	lsls	r3, r3, #3
 80067d0:	3350      	adds	r3, #80	; 0x50
 80067d2:	443b      	add	r3, r7
 80067d4:	3b2c      	subs	r3, #44	; 0x2c
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	3b01      	subs	r3, #1
 80067da:	f003 0301 	and.w	r3, r3, #1
 80067de:	f021 7280 	bic.w	r2, r1, #16777216	; 0x1000000
 80067e2:	009b      	lsls	r3, r3, #2
 80067e4:	4403      	add	r3, r0
 80067e6:	605a      	str	r2, [r3, #4]
        }
      }
    }

    /******************** Activation of new configuration *********************/
    MODIFY_REG(OCTOSPIM->PCR[(cfg->NCSPort - 1U)], (OCTOSPIM_PCR_NCSEN | OCTOSPIM_PCR_NCSSRC),
 80067e8:	4a55      	ldr	r2, [pc, #340]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80067ea:	68bb      	ldr	r3, [r7, #8]
 80067ec:	689b      	ldr	r3, [r3, #8]
 80067ee:	3b01      	subs	r3, #1
 80067f0:	009b      	lsls	r3, r3, #2
 80067f2:	4413      	add	r3, r2
 80067f4:	685b      	ldr	r3, [r3, #4]
 80067f6:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80067fa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80067fc:	025b      	lsls	r3, r3, #9
 80067fe:	431a      	orrs	r2, r3
 8006800:	494f      	ldr	r1, [pc, #316]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006802:	68bb      	ldr	r3, [r7, #8]
 8006804:	689b      	ldr	r3, [r3, #8]
 8006806:	3b01      	subs	r3, #1
 8006808:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800680c:	009b      	lsls	r3, r3, #2
 800680e:	440b      	add	r3, r1
 8006810:	605a      	str	r2, [r3, #4]
               (OCTOSPIM_PCR_NCSEN | (instance << OCTOSPIM_PCR_NCSSRC_Pos)));

    if ((cfg->Req2AckTime - 1U) > ((OCTOSPIM->CR & OCTOSPIM_CR_REQ2ACK_TIME) >> OCTOSPIM_CR_REQ2ACK_TIME_Pos))
 8006812:	68bb      	ldr	r3, [r7, #8]
 8006814:	695b      	ldr	r3, [r3, #20]
 8006816:	1e5a      	subs	r2, r3, #1
 8006818:	4b49      	ldr	r3, [pc, #292]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800681a:	681b      	ldr	r3, [r3, #0]
 800681c:	0c1b      	lsrs	r3, r3, #16
 800681e:	b2db      	uxtb	r3, r3
 8006820:	429a      	cmp	r2, r3
 8006822:	d90a      	bls.n	800683a <HAL_OSPIM_Config+0x6f6>
    {
      MODIFY_REG(OCTOSPIM->CR, OCTOSPIM_CR_REQ2ACK_TIME, ((cfg->Req2AckTime - 1U) << OCTOSPIM_CR_REQ2ACK_TIME_Pos));
 8006824:	4b46      	ldr	r3, [pc, #280]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	f423 027f 	bic.w	r2, r3, #16711680	; 0xff0000
 800682c:	68bb      	ldr	r3, [r7, #8]
 800682e:	695b      	ldr	r3, [r3, #20]
 8006830:	3b01      	subs	r3, #1
 8006832:	041b      	lsls	r3, r3, #16
 8006834:	4942      	ldr	r1, [pc, #264]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006836:	4313      	orrs	r3, r2
 8006838:	600b      	str	r3, [r1, #0]
    }

    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 800683a:	4b41      	ldr	r3, [pc, #260]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	f003 0301 	and.w	r3, r3, #1
 8006842:	2b00      	cmp	r3, #0
 8006844:	f000 809a 	beq.w	800697c <HAL_OSPIM_Config+0x838>
    {
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006848:	4a3d      	ldr	r2, [pc, #244]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800684a:	68bb      	ldr	r3, [r7, #8]
 800684c:	681b      	ldr	r3, [r3, #0]
 800684e:	3b01      	subs	r3, #1
 8006850:	009b      	lsls	r3, r3, #2
 8006852:	4413      	add	r3, r2
 8006854:	685b      	ldr	r3, [r3, #4]
 8006856:	f023 0203 	bic.w	r2, r3, #3
 800685a:	4939      	ldr	r1, [pc, #228]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800685c:	68bb      	ldr	r3, [r7, #8]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	3b01      	subs	r3, #1
 8006862:	f042 0201 	orr.w	r2, r2, #1
 8006866:	009b      	lsls	r3, r3, #2
 8006868:	440b      	add	r3, r1
 800686a:	605a      	str	r2, [r3, #4]
      if (cfg->DQSPort != 0U)
 800686c:	68bb      	ldr	r3, [r7, #8]
 800686e:	685b      	ldr	r3, [r3, #4]
 8006870:	2b00      	cmp	r3, #0
 8006872:	d011      	beq.n	8006898 <HAL_OSPIM_Config+0x754>
      {
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC), OCTOSPIM_PCR_DQSEN);
 8006874:	4a32      	ldr	r2, [pc, #200]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006876:	68bb      	ldr	r3, [r7, #8]
 8006878:	685b      	ldr	r3, [r3, #4]
 800687a:	3b01      	subs	r3, #1
 800687c:	009b      	lsls	r3, r3, #2
 800687e:	4413      	add	r3, r2
 8006880:	685b      	ldr	r3, [r3, #4]
 8006882:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8006886:	492e      	ldr	r1, [pc, #184]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006888:	68bb      	ldr	r3, [r7, #8]
 800688a:	685b      	ldr	r3, [r3, #4]
 800688c:	3b01      	subs	r3, #1
 800688e:	f042 0210 	orr.w	r2, r2, #16
 8006892:	009b      	lsls	r3, r3, #2
 8006894:	440b      	add	r3, r1
 8006896:	605a      	str	r2, [r3, #4]
      }

      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006898:	68bb      	ldr	r3, [r7, #8]
 800689a:	68db      	ldr	r3, [r3, #12]
 800689c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80068a0:	2b00      	cmp	r3, #0
 80068a2:	d016      	beq.n	80068d2 <HAL_OSPIM_Config+0x78e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 80068a4:	4a26      	ldr	r2, [pc, #152]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80068a6:	68bb      	ldr	r3, [r7, #8]
 80068a8:	68db      	ldr	r3, [r3, #12]
 80068aa:	3b01      	subs	r3, #1
 80068ac:	f003 0301 	and.w	r3, r3, #1
 80068b0:	009b      	lsls	r3, r3, #2
 80068b2:	4413      	add	r3, r2
 80068b4:	685b      	ldr	r3, [r3, #4]
 80068b6:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 80068ba:	4921      	ldr	r1, [pc, #132]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80068bc:	68bb      	ldr	r3, [r7, #8]
 80068be:	68db      	ldr	r3, [r3, #12]
 80068c0:	3b01      	subs	r3, #1
 80068c2:	f003 0301 	and.w	r3, r3, #1
 80068c6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80068ca:	009b      	lsls	r3, r3, #2
 80068cc:	440b      	add	r3, r1
 80068ce:	605a      	str	r2, [r3, #4]
 80068d0:	e019      	b.n	8006906 <HAL_OSPIM_Config+0x7c2>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC), OCTOSPIM_PCR_IOLEN);
      }
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80068d2:	68bb      	ldr	r3, [r7, #8]
 80068d4:	68db      	ldr	r3, [r3, #12]
 80068d6:	2b00      	cmp	r3, #0
 80068d8:	d015      	beq.n	8006906 <HAL_OSPIM_Config+0x7c2>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 80068da:	4a19      	ldr	r2, [pc, #100]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80068dc:	68bb      	ldr	r3, [r7, #8]
 80068de:	68db      	ldr	r3, [r3, #12]
 80068e0:	3b01      	subs	r3, #1
 80068e2:	f003 0301 	and.w	r3, r3, #1
 80068e6:	009b      	lsls	r3, r3, #2
 80068e8:	4413      	add	r3, r2
 80068ea:	685b      	ldr	r3, [r3, #4]
 80068ec:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 80068f0:	4913      	ldr	r1, [pc, #76]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 80068f2:	68bb      	ldr	r3, [r7, #8]
 80068f4:	68db      	ldr	r3, [r3, #12]
 80068f6:	3b01      	subs	r3, #1
 80068f8:	f003 0301 	and.w	r3, r3, #1
 80068fc:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006900:	009b      	lsls	r3, r3, #2
 8006902:	440b      	add	r3, r1
 8006904:	605a      	str	r2, [r3, #4]
      else
      {
        /* Nothing to do */
      }

      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006906:	68bb      	ldr	r3, [r7, #8]
 8006908:	691b      	ldr	r3, [r3, #16]
 800690a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800690e:	2b00      	cmp	r3, #0
 8006910:	d018      	beq.n	8006944 <HAL_OSPIM_Config+0x800>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006912:	4a0b      	ldr	r2, [pc, #44]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 8006914:	68bb      	ldr	r3, [r7, #8]
 8006916:	691b      	ldr	r3, [r3, #16]
 8006918:	3b01      	subs	r3, #1
 800691a:	f003 0301 	and.w	r3, r3, #1
 800691e:	009b      	lsls	r3, r3, #2
 8006920:	4413      	add	r3, r2
 8006922:	685b      	ldr	r3, [r3, #4]
 8006924:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8006928:	4905      	ldr	r1, [pc, #20]	; (8006940 <HAL_OSPIM_Config+0x7fc>)
 800692a:	68bb      	ldr	r3, [r7, #8]
 800692c:	691b      	ldr	r3, [r3, #16]
 800692e:	3b01      	subs	r3, #1
 8006930:	f003 0301 	and.w	r3, r3, #1
 8006934:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8006938:	009b      	lsls	r3, r3, #2
 800693a:	440b      	add	r3, r1
 800693c:	605a      	str	r2, [r3, #4]
 800693e:	e0c5      	b.n	8006acc <HAL_OSPIM_Config+0x988>
 8006940:	5200b400 	.word	0x5200b400
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC), (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC_0));
      }
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006944:	68bb      	ldr	r3, [r7, #8]
 8006946:	691b      	ldr	r3, [r3, #16]
 8006948:	2b00      	cmp	r3, #0
 800694a:	f000 80bf 	beq.w	8006acc <HAL_OSPIM_Config+0x988>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 800694e:	4a6e      	ldr	r2, [pc, #440]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006950:	68bb      	ldr	r3, [r7, #8]
 8006952:	691b      	ldr	r3, [r3, #16]
 8006954:	3b01      	subs	r3, #1
 8006956:	f003 0301 	and.w	r3, r3, #1
 800695a:	009b      	lsls	r3, r3, #2
 800695c:	4413      	add	r3, r2
 800695e:	685b      	ldr	r3, [r3, #4]
 8006960:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006964:	4968      	ldr	r1, [pc, #416]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006966:	68bb      	ldr	r3, [r7, #8]
 8006968:	691b      	ldr	r3, [r3, #16]
 800696a:	3b01      	subs	r3, #1
 800696c:	f003 0301 	and.w	r3, r3, #1
 8006970:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8006974:	009b      	lsls	r3, r3, #2
 8006976:	440b      	add	r3, r1
 8006978:	605a      	str	r2, [r3, #4]
 800697a:	e0a7      	b.n	8006acc <HAL_OSPIM_Config+0x988>
        /* Nothing to do */
      }
    }
    else
    {
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC),
 800697c:	4a62      	ldr	r2, [pc, #392]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 800697e:	68bb      	ldr	r3, [r7, #8]
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	3b01      	subs	r3, #1
 8006984:	009b      	lsls	r3, r3, #2
 8006986:	4413      	add	r3, r2
 8006988:	685b      	ldr	r3, [r3, #4]
 800698a:	f023 0203 	bic.w	r2, r3, #3
 800698e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006990:	005b      	lsls	r3, r3, #1
 8006992:	431a      	orrs	r2, r3
 8006994:	495c      	ldr	r1, [pc, #368]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006996:	68bb      	ldr	r3, [r7, #8]
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	3b01      	subs	r3, #1
 800699c:	f042 0201 	orr.w	r2, r2, #1
 80069a0:	009b      	lsls	r3, r3, #2
 80069a2:	440b      	add	r3, r1
 80069a4:	605a      	str	r2, [r3, #4]
                 (OCTOSPIM_PCR_CLKEN | (instance << OCTOSPIM_PCR_CLKSRC_Pos)));
      if (cfg->DQSPort != 0U)
 80069a6:	68bb      	ldr	r3, [r7, #8]
 80069a8:	685b      	ldr	r3, [r3, #4]
 80069aa:	2b00      	cmp	r3, #0
 80069ac:	d014      	beq.n	80069d8 <HAL_OSPIM_Config+0x894>
      {
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC),
 80069ae:	4a56      	ldr	r2, [pc, #344]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 80069b0:	68bb      	ldr	r3, [r7, #8]
 80069b2:	685b      	ldr	r3, [r3, #4]
 80069b4:	3b01      	subs	r3, #1
 80069b6:	009b      	lsls	r3, r3, #2
 80069b8:	4413      	add	r3, r2
 80069ba:	685b      	ldr	r3, [r3, #4]
 80069bc:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80069c0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80069c2:	015b      	lsls	r3, r3, #5
 80069c4:	431a      	orrs	r2, r3
 80069c6:	4950      	ldr	r1, [pc, #320]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 80069c8:	68bb      	ldr	r3, [r7, #8]
 80069ca:	685b      	ldr	r3, [r3, #4]
 80069cc:	3b01      	subs	r3, #1
 80069ce:	f042 0210 	orr.w	r2, r2, #16
 80069d2:	009b      	lsls	r3, r3, #2
 80069d4:	440b      	add	r3, r1
 80069d6:	605a      	str	r2, [r3, #4]
                   (OCTOSPIM_PCR_DQSEN | (instance << OCTOSPIM_PCR_DQSSRC_Pos)));
      }

      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 80069d8:	68bb      	ldr	r3, [r7, #8]
 80069da:	68db      	ldr	r3, [r3, #12]
 80069dc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80069e0:	2b00      	cmp	r3, #0
 80069e2:	d019      	beq.n	8006a18 <HAL_OSPIM_Config+0x8d4>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 80069e4:	4a48      	ldr	r2, [pc, #288]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 80069e6:	68bb      	ldr	r3, [r7, #8]
 80069e8:	68db      	ldr	r3, [r3, #12]
 80069ea:	3b01      	subs	r3, #1
 80069ec:	f003 0301 	and.w	r3, r3, #1
 80069f0:	009b      	lsls	r3, r3, #2
 80069f2:	4413      	add	r3, r2
 80069f4:	685b      	ldr	r3, [r3, #4]
 80069f6:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 80069fa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80069fc:	049b      	lsls	r3, r3, #18
 80069fe:	431a      	orrs	r2, r3
 8006a00:	4941      	ldr	r1, [pc, #260]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a02:	68bb      	ldr	r3, [r7, #8]
 8006a04:	68db      	ldr	r3, [r3, #12]
 8006a06:	3b01      	subs	r3, #1
 8006a08:	f003 0301 	and.w	r3, r3, #1
 8006a0c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006a10:	009b      	lsls	r3, r3, #2
 8006a12:	440b      	add	r3, r1
 8006a14:	605a      	str	r2, [r3, #4]
 8006a16:	e01c      	b.n	8006a52 <HAL_OSPIM_Config+0x90e>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC),
                   (OCTOSPIM_PCR_IOLEN | (instance << (OCTOSPIM_PCR_IOLSRC_Pos + 1U))));
      }
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006a18:	68bb      	ldr	r3, [r7, #8]
 8006a1a:	68db      	ldr	r3, [r3, #12]
 8006a1c:	2b00      	cmp	r3, #0
 8006a1e:	d018      	beq.n	8006a52 <HAL_OSPIM_Config+0x90e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006a20:	4a39      	ldr	r2, [pc, #228]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a22:	68bb      	ldr	r3, [r7, #8]
 8006a24:	68db      	ldr	r3, [r3, #12]
 8006a26:	3b01      	subs	r3, #1
 8006a28:	f003 0301 	and.w	r3, r3, #1
 8006a2c:	009b      	lsls	r3, r3, #2
 8006a2e:	4413      	add	r3, r2
 8006a30:	685b      	ldr	r3, [r3, #4]
 8006a32:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006a36:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006a38:	069b      	lsls	r3, r3, #26
 8006a3a:	431a      	orrs	r2, r3
 8006a3c:	4932      	ldr	r1, [pc, #200]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a3e:	68bb      	ldr	r3, [r7, #8]
 8006a40:	68db      	ldr	r3, [r3, #12]
 8006a42:	3b01      	subs	r3, #1
 8006a44:	f003 0301 	and.w	r3, r3, #1
 8006a48:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8006a4c:	009b      	lsls	r3, r3, #2
 8006a4e:	440b      	add	r3, r1
 8006a50:	605a      	str	r2, [r3, #4]
      else
      {
        /* Nothing to do */
      }

      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006a52:	68bb      	ldr	r3, [r7, #8]
 8006a54:	691b      	ldr	r3, [r3, #16]
 8006a56:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006a5a:	2b00      	cmp	r3, #0
 8006a5c:	d019      	beq.n	8006a92 <HAL_OSPIM_Config+0x94e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006a5e:	4a2a      	ldr	r2, [pc, #168]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a60:	68bb      	ldr	r3, [r7, #8]
 8006a62:	691b      	ldr	r3, [r3, #16]
 8006a64:	3b01      	subs	r3, #1
 8006a66:	f003 0301 	and.w	r3, r3, #1
 8006a6a:	009b      	lsls	r3, r3, #2
 8006a6c:	4413      	add	r3, r2
 8006a6e:	685b      	ldr	r3, [r3, #4]
 8006a70:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8006a74:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006a76:	049b      	lsls	r3, r3, #18
 8006a78:	431a      	orrs	r2, r3
 8006a7a:	4923      	ldr	r1, [pc, #140]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a7c:	68bb      	ldr	r3, [r7, #8]
 8006a7e:	691b      	ldr	r3, [r3, #16]
 8006a80:	3b01      	subs	r3, #1
 8006a82:	f003 0301 	and.w	r3, r3, #1
 8006a86:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8006a8a:	009b      	lsls	r3, r3, #2
 8006a8c:	440b      	add	r3, r1
 8006a8e:	605a      	str	r2, [r3, #4]
 8006a90:	e01c      	b.n	8006acc <HAL_OSPIM_Config+0x988>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC),
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC_0 | (instance << (OCTOSPIM_PCR_IOLSRC_Pos + 1U))));
      }
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006a92:	68bb      	ldr	r3, [r7, #8]
 8006a94:	691b      	ldr	r3, [r3, #16]
 8006a96:	2b00      	cmp	r3, #0
 8006a98:	d018      	beq.n	8006acc <HAL_OSPIM_Config+0x988>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006a9a:	4a1b      	ldr	r2, [pc, #108]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006a9c:	68bb      	ldr	r3, [r7, #8]
 8006a9e:	691b      	ldr	r3, [r3, #16]
 8006aa0:	3b01      	subs	r3, #1
 8006aa2:	f003 0301 	and.w	r3, r3, #1
 8006aa6:	009b      	lsls	r3, r3, #2
 8006aa8:	4413      	add	r3, r2
 8006aaa:	685b      	ldr	r3, [r3, #4]
 8006aac:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8006ab0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006ab2:	069b      	lsls	r3, r3, #26
 8006ab4:	431a      	orrs	r2, r3
 8006ab6:	4914      	ldr	r1, [pc, #80]	; (8006b08 <HAL_OSPIM_Config+0x9c4>)
 8006ab8:	68bb      	ldr	r3, [r7, #8]
 8006aba:	691b      	ldr	r3, [r3, #16]
 8006abc:	3b01      	subs	r3, #1
 8006abe:	f003 0301 	and.w	r3, r3, #1
 8006ac2:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8006ac6:	009b      	lsls	r3, r3, #2
 8006ac8:	440b      	add	r3, r1
 8006aca:	605a      	str	r2, [r3, #4]
        /* Nothing to do */
      }
    }

    /******* Re-enable both OctoSPI after configure OctoSPI IO Manager ********/
    if ((ospi_enabled & 0x1U) != 0U)
 8006acc:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8006ad0:	f003 0301 	and.w	r3, r3, #1
 8006ad4:	2b00      	cmp	r3, #0
 8006ad6:	d005      	beq.n	8006ae4 <HAL_OSPIM_Config+0x9a0>
    {
      SET_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006ad8:	4b0c      	ldr	r3, [pc, #48]	; (8006b0c <HAL_OSPIM_Config+0x9c8>)
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	4a0b      	ldr	r2, [pc, #44]	; (8006b0c <HAL_OSPIM_Config+0x9c8>)
 8006ade:	f043 0301 	orr.w	r3, r3, #1
 8006ae2:	6013      	str	r3, [r2, #0]
    }
    if ((ospi_enabled & 0x2U) != 0U)
 8006ae4:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8006ae8:	f003 0302 	and.w	r3, r3, #2
 8006aec:	2b00      	cmp	r3, #0
 8006aee:	d005      	beq.n	8006afc <HAL_OSPIM_Config+0x9b8>
    {
      SET_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8006af0:	4b07      	ldr	r3, [pc, #28]	; (8006b10 <HAL_OSPIM_Config+0x9cc>)
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	4a06      	ldr	r2, [pc, #24]	; (8006b10 <HAL_OSPIM_Config+0x9cc>)
 8006af6:	f043 0301 	orr.w	r3, r3, #1
 8006afa:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return function status */
  return status;
 8006afc:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
}
 8006b00:	4618      	mov	r0, r3
 8006b02:	3750      	adds	r7, #80	; 0x50
 8006b04:	46bd      	mov	sp, r7
 8006b06:	bd80      	pop	{r7, pc}
 8006b08:	5200b400 	.word	0x5200b400
 8006b0c:	52005000 	.word	0x52005000
 8006b10:	5200a000 	.word	0x5200a000

08006b14 <OSPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart : Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_WaitFlagStateUntilTimeout(OSPI_HandleTypeDef *hospi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8006b14:	b580      	push	{r7, lr}
 8006b16:	b084      	sub	sp, #16
 8006b18:	af00      	add	r7, sp, #0
 8006b1a:	60f8      	str	r0, [r7, #12]
 8006b1c:	60b9      	str	r1, [r7, #8]
 8006b1e:	603b      	str	r3, [r7, #0]
 8006b20:	4613      	mov	r3, r2
 8006b22:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006b24:	e01a      	b.n	8006b5c <OSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006b26:	69bb      	ldr	r3, [r7, #24]
 8006b28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006b2c:	d016      	beq.n	8006b5c <OSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006b2e:	f7fa ffaf 	bl	8001a90 <HAL_GetTick>
 8006b32:	4602      	mov	r2, r0
 8006b34:	683b      	ldr	r3, [r7, #0]
 8006b36:	1ad3      	subs	r3, r2, r3
 8006b38:	69ba      	ldr	r2, [r7, #24]
 8006b3a:	429a      	cmp	r2, r3
 8006b3c:	d302      	bcc.n	8006b44 <OSPI_WaitFlagStateUntilTimeout+0x30>
 8006b3e:	69bb      	ldr	r3, [r7, #24]
 8006b40:	2b00      	cmp	r3, #0
 8006b42:	d10b      	bne.n	8006b5c <OSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hospi->State     = HAL_OSPI_STATE_ERROR;
 8006b44:	68fb      	ldr	r3, [r7, #12]
 8006b46:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006b4a:	651a      	str	r2, [r3, #80]	; 0x50
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 8006b4c:	68fb      	ldr	r3, [r7, #12]
 8006b4e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006b50:	f043 0201 	orr.w	r2, r3, #1
 8006b54:	68fb      	ldr	r3, [r7, #12]
 8006b56:	655a      	str	r2, [r3, #84]	; 0x54

        return HAL_ERROR;
 8006b58:	2301      	movs	r3, #1
 8006b5a:	e00e      	b.n	8006b7a <OSPI_WaitFlagStateUntilTimeout+0x66>
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006b5c:	68fb      	ldr	r3, [r7, #12]
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	6a1a      	ldr	r2, [r3, #32]
 8006b62:	68bb      	ldr	r3, [r7, #8]
 8006b64:	4013      	ands	r3, r2
 8006b66:	2b00      	cmp	r3, #0
 8006b68:	bf14      	ite	ne
 8006b6a:	2301      	movne	r3, #1
 8006b6c:	2300      	moveq	r3, #0
 8006b6e:	b2db      	uxtb	r3, r3
 8006b70:	461a      	mov	r2, r3
 8006b72:	79fb      	ldrb	r3, [r7, #7]
 8006b74:	429a      	cmp	r2, r3
 8006b76:	d1d6      	bne.n	8006b26 <OSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8006b78:	2300      	movs	r3, #0
}
 8006b7a:	4618      	mov	r0, r3
 8006b7c:	3710      	adds	r7, #16
 8006b7e:	46bd      	mov	sp, r7
 8006b80:	bd80      	pop	{r7, pc}
	...

08006b84 <OSPIM_GetConfig>:
  * @param  instance_nb : number of the instance
  * @param  cfg         : configuration of the IO Manager for the instance
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPIM_GetConfig(uint8_t instance_nb, OSPIM_CfgTypeDef *cfg)
{
 8006b84:	b480      	push	{r7}
 8006b86:	b087      	sub	sp, #28
 8006b88:	af00      	add	r7, sp, #0
 8006b8a:	4603      	mov	r3, r0
 8006b8c:	6039      	str	r1, [r7, #0]
 8006b8e:	71fb      	strb	r3, [r7, #7]
  HAL_StatusTypeDef status = HAL_OK;
 8006b90:	2300      	movs	r3, #0
 8006b92:	75fb      	strb	r3, [r7, #23]
  uint32_t reg;
  uint32_t value = 0U;
 8006b94:	2300      	movs	r3, #0
 8006b96:	613b      	str	r3, [r7, #16]
  uint32_t index;

  if ((instance_nb == 0U) || (instance_nb > OSPI_NB_INSTANCE) || (cfg == NULL))
 8006b98:	79fb      	ldrb	r3, [r7, #7]
 8006b9a:	2b00      	cmp	r3, #0
 8006b9c:	d005      	beq.n	8006baa <OSPIM_GetConfig+0x26>
 8006b9e:	79fb      	ldrb	r3, [r7, #7]
 8006ba0:	2b02      	cmp	r3, #2
 8006ba2:	d802      	bhi.n	8006baa <OSPIM_GetConfig+0x26>
 8006ba4:	683b      	ldr	r3, [r7, #0]
 8006ba6:	2b00      	cmp	r3, #0
 8006ba8:	d102      	bne.n	8006bb0 <OSPIM_GetConfig+0x2c>
  {
    /* Invalid parameter -> error returned */
    status = HAL_ERROR;
 8006baa:	2301      	movs	r3, #1
 8006bac:	75fb      	strb	r3, [r7, #23]
 8006bae:	e098      	b.n	8006ce2 <OSPIM_GetConfig+0x15e>
  }
  else
  {
    /* Initialize the structure */
    cfg->ClkPort    = 0U;
 8006bb0:	683b      	ldr	r3, [r7, #0]
 8006bb2:	2200      	movs	r2, #0
 8006bb4:	601a      	str	r2, [r3, #0]
    cfg->DQSPort    = 0U;
 8006bb6:	683b      	ldr	r3, [r7, #0]
 8006bb8:	2200      	movs	r2, #0
 8006bba:	605a      	str	r2, [r3, #4]
    cfg->NCSPort    = 0U;
 8006bbc:	683b      	ldr	r3, [r7, #0]
 8006bbe:	2200      	movs	r2, #0
 8006bc0:	609a      	str	r2, [r3, #8]
    cfg->IOLowPort  = 0U;
 8006bc2:	683b      	ldr	r3, [r7, #0]
 8006bc4:	2200      	movs	r2, #0
 8006bc6:	60da      	str	r2, [r3, #12]
    cfg->IOHighPort = 0U;
 8006bc8:	683b      	ldr	r3, [r7, #0]
 8006bca:	2200      	movs	r2, #0
 8006bcc:	611a      	str	r2, [r3, #16]

    if (instance_nb == 2U)
 8006bce:	79fb      	ldrb	r3, [r7, #7]
 8006bd0:	2b02      	cmp	r3, #2
 8006bd2:	d10b      	bne.n	8006bec <OSPIM_GetConfig+0x68>
    {
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 8006bd4:	4b46      	ldr	r3, [pc, #280]	; (8006cf0 <OSPIM_GetConfig+0x16c>)
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	f003 0301 	and.w	r3, r3, #1
 8006bdc:	2b00      	cmp	r3, #0
 8006bde:	d102      	bne.n	8006be6 <OSPIM_GetConfig+0x62>
      {
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
 8006be0:	4b44      	ldr	r3, [pc, #272]	; (8006cf4 <OSPIM_GetConfig+0x170>)
 8006be2:	613b      	str	r3, [r7, #16]
 8006be4:	e002      	b.n	8006bec <OSPIM_GetConfig+0x68>
                 | OCTOSPIM_PCR_IOLSRC_1 | OCTOSPIM_PCR_IOHSRC_1);
      }
      else
      {
        value = OCTOSPIM_PCR_NCSSRC;
 8006be6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006bea:	613b      	str	r3, [r7, #16]
      }
    }

    /* Get the information about the instance */
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8006bec:	2300      	movs	r3, #0
 8006bee:	60fb      	str	r3, [r7, #12]
 8006bf0:	e074      	b.n	8006cdc <OSPIM_GetConfig+0x158>
    {
      reg = OCTOSPIM->PCR[index];
 8006bf2:	4a3f      	ldr	r2, [pc, #252]	; (8006cf0 <OSPIM_GetConfig+0x16c>)
 8006bf4:	68fb      	ldr	r3, [r7, #12]
 8006bf6:	009b      	lsls	r3, r3, #2
 8006bf8:	4413      	add	r3, r2
 8006bfa:	685b      	ldr	r3, [r3, #4]
 8006bfc:	60bb      	str	r3, [r7, #8]

      if ((reg & OCTOSPIM_PCR_CLKEN) != 0U)
 8006bfe:	68bb      	ldr	r3, [r7, #8]
 8006c00:	f003 0301 	and.w	r3, r3, #1
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d00a      	beq.n	8006c1e <OSPIM_GetConfig+0x9a>
      {
        /* The clock is enabled on this port */
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
 8006c08:	68ba      	ldr	r2, [r7, #8]
 8006c0a:	693b      	ldr	r3, [r7, #16]
 8006c0c:	4053      	eors	r3, r2
 8006c0e:	f003 0302 	and.w	r3, r3, #2
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	d103      	bne.n	8006c1e <OSPIM_GetConfig+0x9a>
        {
          /* The clock correspond to the instance passed as parameter */
          cfg->ClkPort = index + 1U;
 8006c16:	68fb      	ldr	r3, [r7, #12]
 8006c18:	1c5a      	adds	r2, r3, #1
 8006c1a:	683b      	ldr	r3, [r7, #0]
 8006c1c:	601a      	str	r2, [r3, #0]
        }
      }

      if ((reg & OCTOSPIM_PCR_DQSEN) != 0U)
 8006c1e:	68bb      	ldr	r3, [r7, #8]
 8006c20:	f003 0310 	and.w	r3, r3, #16
 8006c24:	2b00      	cmp	r3, #0
 8006c26:	d00a      	beq.n	8006c3e <OSPIM_GetConfig+0xba>
      {
        /* The DQS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_DQSSRC) == (value & OCTOSPIM_PCR_DQSSRC))
 8006c28:	68ba      	ldr	r2, [r7, #8]
 8006c2a:	693b      	ldr	r3, [r7, #16]
 8006c2c:	4053      	eors	r3, r2
 8006c2e:	f003 0320 	and.w	r3, r3, #32
 8006c32:	2b00      	cmp	r3, #0
 8006c34:	d103      	bne.n	8006c3e <OSPIM_GetConfig+0xba>
        {
          /* The DQS correspond to the instance passed as parameter */
          cfg->DQSPort = index + 1U;
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	1c5a      	adds	r2, r3, #1
 8006c3a:	683b      	ldr	r3, [r7, #0]
 8006c3c:	605a      	str	r2, [r3, #4]
        }
      }

      if ((reg & OCTOSPIM_PCR_NCSEN) != 0U)
 8006c3e:	68bb      	ldr	r3, [r7, #8]
 8006c40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006c44:	2b00      	cmp	r3, #0
 8006c46:	d00a      	beq.n	8006c5e <OSPIM_GetConfig+0xda>
      {
        /* The nCS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_NCSSRC) == (value & OCTOSPIM_PCR_NCSSRC))
 8006c48:	68ba      	ldr	r2, [r7, #8]
 8006c4a:	693b      	ldr	r3, [r7, #16]
 8006c4c:	4053      	eors	r3, r2
 8006c4e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006c52:	2b00      	cmp	r3, #0
 8006c54:	d103      	bne.n	8006c5e <OSPIM_GetConfig+0xda>
        {
          /* The nCS correspond to the instance passed as parameter */
          cfg->NCSPort = index + 1U;
 8006c56:	68fb      	ldr	r3, [r7, #12]
 8006c58:	1c5a      	adds	r2, r3, #1
 8006c5a:	683b      	ldr	r3, [r7, #0]
 8006c5c:	609a      	str	r2, [r3, #8]
        }
      }

      if ((reg & OCTOSPIM_PCR_IOLEN) != 0U)
 8006c5e:	68bb      	ldr	r3, [r7, #8]
 8006c60:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006c64:	2b00      	cmp	r3, #0
 8006c66:	d018      	beq.n	8006c9a <OSPIM_GetConfig+0x116>
      {
        /* The IO Low is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOLSRC_1) == (value & OCTOSPIM_PCR_IOLSRC_1))
 8006c68:	68ba      	ldr	r2, [r7, #8]
 8006c6a:	693b      	ldr	r3, [r7, #16]
 8006c6c:	4053      	eors	r3, r2
 8006c6e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8006c72:	2b00      	cmp	r3, #0
 8006c74:	d111      	bne.n	8006c9a <OSPIM_GetConfig+0x116>
        {
          /* The IO Low correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOLSRC_0) == 0U)
 8006c76:	68bb      	ldr	r3, [r7, #8]
 8006c78:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006c7c:	2b00      	cmp	r3, #0
 8006c7e:	d106      	bne.n	8006c8e <OSPIM_GetConfig+0x10a>
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 8006c80:	68fb      	ldr	r3, [r7, #12]
 8006c82:	3301      	adds	r3, #1
 8006c84:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8006c88:	683b      	ldr	r3, [r7, #0]
 8006c8a:	60da      	str	r2, [r3, #12]
 8006c8c:	e005      	b.n	8006c9a <OSPIM_GetConfig+0x116>
          }
          else
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 8006c8e:	68fb      	ldr	r3, [r7, #12]
 8006c90:	3301      	adds	r3, #1
 8006c92:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 8006c96:	683b      	ldr	r3, [r7, #0]
 8006c98:	60da      	str	r2, [r3, #12]
          }
        }
      }

      if ((reg & OCTOSPIM_PCR_IOHEN) != 0U)
 8006c9a:	68bb      	ldr	r3, [r7, #8]
 8006c9c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8006ca0:	2b00      	cmp	r3, #0
 8006ca2:	d018      	beq.n	8006cd6 <OSPIM_GetConfig+0x152>
      {
        /* The IO High is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOHSRC_1) == (value & OCTOSPIM_PCR_IOHSRC_1))
 8006ca4:	68ba      	ldr	r2, [r7, #8]
 8006ca6:	693b      	ldr	r3, [r7, #16]
 8006ca8:	4053      	eors	r3, r2
 8006caa:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8006cae:	2b00      	cmp	r3, #0
 8006cb0:	d111      	bne.n	8006cd6 <OSPIM_GetConfig+0x152>
        {
          /* The IO High correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOHSRC_0) == 0U)
 8006cb2:	68bb      	ldr	r3, [r7, #8]
 8006cb4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006cb8:	2b00      	cmp	r3, #0
 8006cba:	d106      	bne.n	8006cca <OSPIM_GetConfig+0x146>
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 8006cbc:	68fb      	ldr	r3, [r7, #12]
 8006cbe:	3301      	adds	r3, #1
 8006cc0:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8006cc4:	683b      	ldr	r3, [r7, #0]
 8006cc6:	611a      	str	r2, [r3, #16]
 8006cc8:	e005      	b.n	8006cd6 <OSPIM_GetConfig+0x152>
          }
          else
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 8006cca:	68fb      	ldr	r3, [r7, #12]
 8006ccc:	3301      	adds	r3, #1
 8006cce:	f043 7280 	orr.w	r2, r3, #16777216	; 0x1000000
 8006cd2:	683b      	ldr	r3, [r7, #0]
 8006cd4:	611a      	str	r2, [r3, #16]
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8006cd6:	68fb      	ldr	r3, [r7, #12]
 8006cd8:	3301      	adds	r3, #1
 8006cda:	60fb      	str	r3, [r7, #12]
 8006cdc:	68fb      	ldr	r3, [r7, #12]
 8006cde:	2b01      	cmp	r3, #1
 8006ce0:	d987      	bls.n	8006bf2 <OSPIM_GetConfig+0x6e>
      }
    }
  }

  /* Return function status */
  return status;
 8006ce2:	7dfb      	ldrb	r3, [r7, #23]
}
 8006ce4:	4618      	mov	r0, r3
 8006ce6:	371c      	adds	r7, #28
 8006ce8:	46bd      	mov	sp, r7
 8006cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cee:	4770      	bx	lr
 8006cf0:	5200b400 	.word	0x5200b400
 8006cf4:	04040222 	.word	0x04040222

08006cf8 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8006cf8:	b580      	push	{r7, lr}
 8006cfa:	b084      	sub	sp, #16
 8006cfc:	af00      	add	r7, sp, #0
 8006cfe:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 8006d00:	4b19      	ldr	r3, [pc, #100]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d02:	68db      	ldr	r3, [r3, #12]
 8006d04:	f003 0304 	and.w	r3, r3, #4
 8006d08:	2b04      	cmp	r3, #4
 8006d0a:	d00a      	beq.n	8006d22 <HAL_PWREx_ConfigSupply+0x2a>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8006d0c:	4b16      	ldr	r3, [pc, #88]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d0e:	68db      	ldr	r3, [r3, #12]
 8006d10:	f003 0307 	and.w	r3, r3, #7
 8006d14:	687a      	ldr	r2, [r7, #4]
 8006d16:	429a      	cmp	r2, r3
 8006d18:	d001      	beq.n	8006d1e <HAL_PWREx_ConfigSupply+0x26>
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 8006d1a:	2301      	movs	r3, #1
 8006d1c:	e01f      	b.n	8006d5e <HAL_PWREx_ConfigSupply+0x66>
    else
    {
      /* Supply configuration update locked, but new supply configuration
         matches with old supply configuration : nothing to do
      */
      return HAL_OK;
 8006d1e:	2300      	movs	r3, #0
 8006d20:	e01d      	b.n	8006d5e <HAL_PWREx_ConfigSupply+0x66>
    }
  }

  /* Set the power supply configuration */
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 8006d22:	4b11      	ldr	r3, [pc, #68]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d24:	68db      	ldr	r3, [r3, #12]
 8006d26:	f023 0207 	bic.w	r2, r3, #7
 8006d2a:	490f      	ldr	r1, [pc, #60]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	4313      	orrs	r3, r2
 8006d30:	60cb      	str	r3, [r1, #12]

  /* Get tick */
  tickstart = HAL_GetTick ();
 8006d32:	f7fa fead 	bl	8001a90 <HAL_GetTick>
 8006d36:	60f8      	str	r0, [r7, #12]

  /* Wait till voltage level flag is set */
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006d38:	e009      	b.n	8006d4e <HAL_PWREx_ConfigSupply+0x56>
  {
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006d3a:	f7fa fea9 	bl	8001a90 <HAL_GetTick>
 8006d3e:	4602      	mov	r2, r0
 8006d40:	68fb      	ldr	r3, [r7, #12]
 8006d42:	1ad3      	subs	r3, r2, r3
 8006d44:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006d48:	d901      	bls.n	8006d4e <HAL_PWREx_ConfigSupply+0x56>
    {
      return HAL_ERROR;
 8006d4a:	2301      	movs	r3, #1
 8006d4c:	e007      	b.n	8006d5e <HAL_PWREx_ConfigSupply+0x66>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006d4e:	4b06      	ldr	r3, [pc, #24]	; (8006d68 <HAL_PWREx_ConfigSupply+0x70>)
 8006d50:	685b      	ldr	r3, [r3, #4]
 8006d52:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8006d56:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006d5a:	d1ee      	bne.n	8006d3a <HAL_PWREx_ConfigSupply+0x42>
      }
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
 8006d5c:	2300      	movs	r3, #0
}
 8006d5e:	4618      	mov	r0, r3
 8006d60:	3710      	adds	r7, #16
 8006d62:	46bd      	mov	sp, r7
 8006d64:	bd80      	pop	{r7, pc}
 8006d66:	bf00      	nop
 8006d68:	58024800 	.word	0x58024800

08006d6c <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006d6c:	b580      	push	{r7, lr}
 8006d6e:	b08c      	sub	sp, #48	; 0x30
 8006d70:	af00      	add	r7, sp, #0
 8006d72:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	2b00      	cmp	r3, #0
 8006d78:	d101      	bne.n	8006d7e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8006d7a:	2301      	movs	r3, #1
 8006d7c:	e3c8      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	681b      	ldr	r3, [r3, #0]
 8006d82:	f003 0301 	and.w	r3, r3, #1
 8006d86:	2b00      	cmp	r3, #0
 8006d88:	f000 8087 	beq.w	8006e9a <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006d8c:	4b88      	ldr	r3, [pc, #544]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006d8e:	691b      	ldr	r3, [r3, #16]
 8006d90:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006d94:	62fb      	str	r3, [r7, #44]	; 0x2c
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006d96:	4b86      	ldr	r3, [pc, #536]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006d98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006d9a:	62bb      	str	r3, [r7, #40]	; 0x28
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8006d9c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006d9e:	2b10      	cmp	r3, #16
 8006da0:	d007      	beq.n	8006db2 <HAL_RCC_OscConfig+0x46>
 8006da2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006da4:	2b18      	cmp	r3, #24
 8006da6:	d110      	bne.n	8006dca <HAL_RCC_OscConfig+0x5e>
 8006da8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006daa:	f003 0303 	and.w	r3, r3, #3
 8006dae:	2b02      	cmp	r3, #2
 8006db0:	d10b      	bne.n	8006dca <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006db2:	4b7f      	ldr	r3, [pc, #508]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006db4:	681b      	ldr	r3, [r3, #0]
 8006db6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006dba:	2b00      	cmp	r3, #0
 8006dbc:	d06c      	beq.n	8006e98 <HAL_RCC_OscConfig+0x12c>
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	685b      	ldr	r3, [r3, #4]
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d168      	bne.n	8006e98 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 8006dc6:	2301      	movs	r3, #1
 8006dc8:	e3a2      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006dca:	687b      	ldr	r3, [r7, #4]
 8006dcc:	685b      	ldr	r3, [r3, #4]
 8006dce:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006dd2:	d106      	bne.n	8006de2 <HAL_RCC_OscConfig+0x76>
 8006dd4:	4b76      	ldr	r3, [pc, #472]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	4a75      	ldr	r2, [pc, #468]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006dda:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006dde:	6013      	str	r3, [r2, #0]
 8006de0:	e02e      	b.n	8006e40 <HAL_RCC_OscConfig+0xd4>
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	685b      	ldr	r3, [r3, #4]
 8006de6:	2b00      	cmp	r3, #0
 8006de8:	d10c      	bne.n	8006e04 <HAL_RCC_OscConfig+0x98>
 8006dea:	4b71      	ldr	r3, [pc, #452]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006dec:	681b      	ldr	r3, [r3, #0]
 8006dee:	4a70      	ldr	r2, [pc, #448]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006df0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006df4:	6013      	str	r3, [r2, #0]
 8006df6:	4b6e      	ldr	r3, [pc, #440]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	4a6d      	ldr	r2, [pc, #436]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006dfc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006e00:	6013      	str	r3, [r2, #0]
 8006e02:	e01d      	b.n	8006e40 <HAL_RCC_OscConfig+0xd4>
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	685b      	ldr	r3, [r3, #4]
 8006e08:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006e0c:	d10c      	bne.n	8006e28 <HAL_RCC_OscConfig+0xbc>
 8006e0e:	4b68      	ldr	r3, [pc, #416]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e10:	681b      	ldr	r3, [r3, #0]
 8006e12:	4a67      	ldr	r2, [pc, #412]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e14:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006e18:	6013      	str	r3, [r2, #0]
 8006e1a:	4b65      	ldr	r3, [pc, #404]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e1c:	681b      	ldr	r3, [r3, #0]
 8006e1e:	4a64      	ldr	r2, [pc, #400]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e20:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006e24:	6013      	str	r3, [r2, #0]
 8006e26:	e00b      	b.n	8006e40 <HAL_RCC_OscConfig+0xd4>
 8006e28:	4b61      	ldr	r3, [pc, #388]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e2a:	681b      	ldr	r3, [r3, #0]
 8006e2c:	4a60      	ldr	r2, [pc, #384]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e2e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006e32:	6013      	str	r3, [r2, #0]
 8006e34:	4b5e      	ldr	r3, [pc, #376]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	4a5d      	ldr	r2, [pc, #372]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e3a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006e3e:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	685b      	ldr	r3, [r3, #4]
 8006e44:	2b00      	cmp	r3, #0
 8006e46:	d013      	beq.n	8006e70 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006e48:	f7fa fe22 	bl	8001a90 <HAL_GetTick>
 8006e4c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006e4e:	e008      	b.n	8006e62 <HAL_RCC_OscConfig+0xf6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006e50:	f7fa fe1e 	bl	8001a90 <HAL_GetTick>
 8006e54:	4602      	mov	r2, r0
 8006e56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e58:	1ad3      	subs	r3, r2, r3
 8006e5a:	2b64      	cmp	r3, #100	; 0x64
 8006e5c:	d901      	bls.n	8006e62 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8006e5e:	2303      	movs	r3, #3
 8006e60:	e356      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006e62:	4b53      	ldr	r3, [pc, #332]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e64:	681b      	ldr	r3, [r3, #0]
 8006e66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d0f0      	beq.n	8006e50 <HAL_RCC_OscConfig+0xe4>
 8006e6e:	e014      	b.n	8006e9a <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006e70:	f7fa fe0e 	bl	8001a90 <HAL_GetTick>
 8006e74:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006e76:	e008      	b.n	8006e8a <HAL_RCC_OscConfig+0x11e>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006e78:	f7fa fe0a 	bl	8001a90 <HAL_GetTick>
 8006e7c:	4602      	mov	r2, r0
 8006e7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006e80:	1ad3      	subs	r3, r2, r3
 8006e82:	2b64      	cmp	r3, #100	; 0x64
 8006e84:	d901      	bls.n	8006e8a <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 8006e86:	2303      	movs	r3, #3
 8006e88:	e342      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006e8a:	4b49      	ldr	r3, [pc, #292]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d1f0      	bne.n	8006e78 <HAL_RCC_OscConfig+0x10c>
 8006e96:	e000      	b.n	8006e9a <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006e98:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	f003 0302 	and.w	r3, r3, #2
 8006ea2:	2b00      	cmp	r3, #0
 8006ea4:	f000 808c 	beq.w	8006fc0 <HAL_RCC_OscConfig+0x254>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006ea8:	4b41      	ldr	r3, [pc, #260]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006eaa:	691b      	ldr	r3, [r3, #16]
 8006eac:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006eb0:	623b      	str	r3, [r7, #32]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006eb2:	4b3f      	ldr	r3, [pc, #252]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006eb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006eb6:	61fb      	str	r3, [r7, #28]
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8006eb8:	6a3b      	ldr	r3, [r7, #32]
 8006eba:	2b00      	cmp	r3, #0
 8006ebc:	d007      	beq.n	8006ece <HAL_RCC_OscConfig+0x162>
 8006ebe:	6a3b      	ldr	r3, [r7, #32]
 8006ec0:	2b18      	cmp	r3, #24
 8006ec2:	d137      	bne.n	8006f34 <HAL_RCC_OscConfig+0x1c8>
 8006ec4:	69fb      	ldr	r3, [r7, #28]
 8006ec6:	f003 0303 	and.w	r3, r3, #3
 8006eca:	2b00      	cmp	r3, #0
 8006ecc:	d132      	bne.n	8006f34 <HAL_RCC_OscConfig+0x1c8>
    {
      /* When HSI is used as system clock it will not be disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006ece:	4b38      	ldr	r3, [pc, #224]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006ed0:	681b      	ldr	r3, [r3, #0]
 8006ed2:	f003 0304 	and.w	r3, r3, #4
 8006ed6:	2b00      	cmp	r3, #0
 8006ed8:	d005      	beq.n	8006ee6 <HAL_RCC_OscConfig+0x17a>
 8006eda:	687b      	ldr	r3, [r7, #4]
 8006edc:	68db      	ldr	r3, [r3, #12]
 8006ede:	2b00      	cmp	r3, #0
 8006ee0:	d101      	bne.n	8006ee6 <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 8006ee2:	2301      	movs	r3, #1
 8006ee4:	e314      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, only HSI division and calibration are allowed */
      else
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2, HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006ee6:	4b32      	ldr	r3, [pc, #200]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	f023 0219 	bic.w	r2, r3, #25
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	68db      	ldr	r3, [r3, #12]
 8006ef2:	492f      	ldr	r1, [pc, #188]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006ef4:	4313      	orrs	r3, r2
 8006ef6:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006ef8:	f7fa fdca 	bl	8001a90 <HAL_GetTick>
 8006efc:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006efe:	e008      	b.n	8006f12 <HAL_RCC_OscConfig+0x1a6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006f00:	f7fa fdc6 	bl	8001a90 <HAL_GetTick>
 8006f04:	4602      	mov	r2, r0
 8006f06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f08:	1ad3      	subs	r3, r2, r3
 8006f0a:	2b02      	cmp	r3, #2
 8006f0c:	d901      	bls.n	8006f12 <HAL_RCC_OscConfig+0x1a6>
          {
            return HAL_TIMEOUT;
 8006f0e:	2303      	movs	r3, #3
 8006f10:	e2fe      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006f12:	4b27      	ldr	r3, [pc, #156]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f14:	681b      	ldr	r3, [r3, #0]
 8006f16:	f003 0304 	and.w	r3, r3, #4
 8006f1a:	2b00      	cmp	r3, #0
 8006f1c:	d0f0      	beq.n	8006f00 <HAL_RCC_OscConfig+0x194>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006f1e:	4b24      	ldr	r3, [pc, #144]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f20:	685b      	ldr	r3, [r3, #4]
 8006f22:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	691b      	ldr	r3, [r3, #16]
 8006f2a:	061b      	lsls	r3, r3, #24
 8006f2c:	4920      	ldr	r1, [pc, #128]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f2e:	4313      	orrs	r3, r2
 8006f30:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006f32:	e045      	b.n	8006fc0 <HAL_RCC_OscConfig+0x254>
    }

    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006f34:	687b      	ldr	r3, [r7, #4]
 8006f36:	68db      	ldr	r3, [r3, #12]
 8006f38:	2b00      	cmp	r3, #0
 8006f3a:	d026      	beq.n	8006f8a <HAL_RCC_OscConfig+0x21e>
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006f3c:	4b1c      	ldr	r3, [pc, #112]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	f023 0219 	bic.w	r2, r3, #25
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	68db      	ldr	r3, [r3, #12]
 8006f48:	4919      	ldr	r1, [pc, #100]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f4a:	4313      	orrs	r3, r2
 8006f4c:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006f4e:	f7fa fd9f 	bl	8001a90 <HAL_GetTick>
 8006f52:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006f54:	e008      	b.n	8006f68 <HAL_RCC_OscConfig+0x1fc>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006f56:	f7fa fd9b 	bl	8001a90 <HAL_GetTick>
 8006f5a:	4602      	mov	r2, r0
 8006f5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f5e:	1ad3      	subs	r3, r2, r3
 8006f60:	2b02      	cmp	r3, #2
 8006f62:	d901      	bls.n	8006f68 <HAL_RCC_OscConfig+0x1fc>
          {
            return HAL_TIMEOUT;
 8006f64:	2303      	movs	r3, #3
 8006f66:	e2d3      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006f68:	4b11      	ldr	r3, [pc, #68]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f6a:	681b      	ldr	r3, [r3, #0]
 8006f6c:	f003 0304 	and.w	r3, r3, #4
 8006f70:	2b00      	cmp	r3, #0
 8006f72:	d0f0      	beq.n	8006f56 <HAL_RCC_OscConfig+0x1ea>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006f74:	4b0e      	ldr	r3, [pc, #56]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f76:	685b      	ldr	r3, [r3, #4]
 8006f78:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	691b      	ldr	r3, [r3, #16]
 8006f80:	061b      	lsls	r3, r3, #24
 8006f82:	490b      	ldr	r1, [pc, #44]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f84:	4313      	orrs	r3, r2
 8006f86:	604b      	str	r3, [r1, #4]
 8006f88:	e01a      	b.n	8006fc0 <HAL_RCC_OscConfig+0x254>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8006f8a:	4b09      	ldr	r3, [pc, #36]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f8c:	681b      	ldr	r3, [r3, #0]
 8006f8e:	4a08      	ldr	r2, [pc, #32]	; (8006fb0 <HAL_RCC_OscConfig+0x244>)
 8006f90:	f023 0301 	bic.w	r3, r3, #1
 8006f94:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006f96:	f7fa fd7b 	bl	8001a90 <HAL_GetTick>
 8006f9a:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006f9c:	e00a      	b.n	8006fb4 <HAL_RCC_OscConfig+0x248>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006f9e:	f7fa fd77 	bl	8001a90 <HAL_GetTick>
 8006fa2:	4602      	mov	r2, r0
 8006fa4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006fa6:	1ad3      	subs	r3, r2, r3
 8006fa8:	2b02      	cmp	r3, #2
 8006faa:	d903      	bls.n	8006fb4 <HAL_RCC_OscConfig+0x248>
          {
            return HAL_TIMEOUT;
 8006fac:	2303      	movs	r3, #3
 8006fae:	e2af      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
 8006fb0:	58024400 	.word	0x58024400
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006fb4:	4b96      	ldr	r3, [pc, #600]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8006fb6:	681b      	ldr	r3, [r3, #0]
 8006fb8:	f003 0304 	and.w	r3, r3, #4
 8006fbc:	2b00      	cmp	r3, #0
 8006fbe:	d1ee      	bne.n	8006f9e <HAL_RCC_OscConfig+0x232>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8006fc0:	687b      	ldr	r3, [r7, #4]
 8006fc2:	681b      	ldr	r3, [r3, #0]
 8006fc4:	f003 0310 	and.w	r3, r3, #16
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	d06a      	beq.n	80070a2 <HAL_RCC_OscConfig+0x336>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006fcc:	4b90      	ldr	r3, [pc, #576]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8006fce:	691b      	ldr	r3, [r3, #16]
 8006fd0:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8006fd4:	61bb      	str	r3, [r7, #24]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006fd6:	4b8e      	ldr	r3, [pc, #568]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8006fd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006fda:	617b      	str	r3, [r7, #20]
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8006fdc:	69bb      	ldr	r3, [r7, #24]
 8006fde:	2b08      	cmp	r3, #8
 8006fe0:	d007      	beq.n	8006ff2 <HAL_RCC_OscConfig+0x286>
 8006fe2:	69bb      	ldr	r3, [r7, #24]
 8006fe4:	2b18      	cmp	r3, #24
 8006fe6:	d11b      	bne.n	8007020 <HAL_RCC_OscConfig+0x2b4>
 8006fe8:	697b      	ldr	r3, [r7, #20]
 8006fea:	f003 0303 	and.w	r3, r3, #3
 8006fee:	2b01      	cmp	r3, #1
 8006ff0:	d116      	bne.n	8007020 <HAL_RCC_OscConfig+0x2b4>
    {
      /* When CSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8006ff2:	4b87      	ldr	r3, [pc, #540]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8006ff4:	681b      	ldr	r3, [r3, #0]
 8006ff6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d005      	beq.n	800700a <HAL_RCC_OscConfig+0x29e>
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	69db      	ldr	r3, [r3, #28]
 8007002:	2b80      	cmp	r3, #128	; 0x80
 8007004:	d001      	beq.n	800700a <HAL_RCC_OscConfig+0x29e>
      {
        return HAL_ERROR;
 8007006:	2301      	movs	r3, #1
 8007008:	e282      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800700a:	4b81      	ldr	r3, [pc, #516]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800700c:	68db      	ldr	r3, [r3, #12]
 800700e:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	6a1b      	ldr	r3, [r3, #32]
 8007016:	061b      	lsls	r3, r3, #24
 8007018:	497d      	ldr	r1, [pc, #500]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800701a:	4313      	orrs	r3, r2
 800701c:	60cb      	str	r3, [r1, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 800701e:	e040      	b.n	80070a2 <HAL_RCC_OscConfig+0x336>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	69db      	ldr	r3, [r3, #28]
 8007024:	2b00      	cmp	r3, #0
 8007026:	d023      	beq.n	8007070 <HAL_RCC_OscConfig+0x304>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8007028:	4b79      	ldr	r3, [pc, #484]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	4a78      	ldr	r2, [pc, #480]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800702e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007032:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007034:	f7fa fd2c 	bl	8001a90 <HAL_GetTick>
 8007038:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 800703a:	e008      	b.n	800704e <HAL_RCC_OscConfig+0x2e2>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 800703c:	f7fa fd28 	bl	8001a90 <HAL_GetTick>
 8007040:	4602      	mov	r2, r0
 8007042:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007044:	1ad3      	subs	r3, r2, r3
 8007046:	2b02      	cmp	r3, #2
 8007048:	d901      	bls.n	800704e <HAL_RCC_OscConfig+0x2e2>
          {
            return HAL_TIMEOUT;
 800704a:	2303      	movs	r3, #3
 800704c:	e260      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 800704e:	4b70      	ldr	r3, [pc, #448]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007050:	681b      	ldr	r3, [r3, #0]
 8007052:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007056:	2b00      	cmp	r3, #0
 8007058:	d0f0      	beq.n	800703c <HAL_RCC_OscConfig+0x2d0>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 800705a:	4b6d      	ldr	r3, [pc, #436]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800705c:	68db      	ldr	r3, [r3, #12]
 800705e:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8007062:	687b      	ldr	r3, [r7, #4]
 8007064:	6a1b      	ldr	r3, [r3, #32]
 8007066:	061b      	lsls	r3, r3, #24
 8007068:	4969      	ldr	r1, [pc, #420]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800706a:	4313      	orrs	r3, r2
 800706c:	60cb      	str	r3, [r1, #12]
 800706e:	e018      	b.n	80070a2 <HAL_RCC_OscConfig+0x336>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 8007070:	4b67      	ldr	r3, [pc, #412]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007072:	681b      	ldr	r3, [r3, #0]
 8007074:	4a66      	ldr	r2, [pc, #408]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007076:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800707a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800707c:	f7fa fd08 	bl	8001a90 <HAL_GetTick>
 8007080:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till CSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8007082:	e008      	b.n	8007096 <HAL_RCC_OscConfig+0x32a>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8007084:	f7fa fd04 	bl	8001a90 <HAL_GetTick>
 8007088:	4602      	mov	r2, r0
 800708a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800708c:	1ad3      	subs	r3, r2, r3
 800708e:	2b02      	cmp	r3, #2
 8007090:	d901      	bls.n	8007096 <HAL_RCC_OscConfig+0x32a>
          {
            return HAL_TIMEOUT;
 8007092:	2303      	movs	r3, #3
 8007094:	e23c      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8007096:	4b5e      	ldr	r3, [pc, #376]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007098:	681b      	ldr	r3, [r3, #0]
 800709a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800709e:	2b00      	cmp	r3, #0
 80070a0:	d1f0      	bne.n	8007084 <HAL_RCC_OscConfig+0x318>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	681b      	ldr	r3, [r3, #0]
 80070a6:	f003 0308 	and.w	r3, r3, #8
 80070aa:	2b00      	cmp	r3, #0
 80070ac:	d036      	beq.n	800711c <HAL_RCC_OscConfig+0x3b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80070ae:	687b      	ldr	r3, [r7, #4]
 80070b0:	695b      	ldr	r3, [r3, #20]
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	d019      	beq.n	80070ea <HAL_RCC_OscConfig+0x37e>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80070b6:	4b56      	ldr	r3, [pc, #344]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070b8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80070ba:	4a55      	ldr	r2, [pc, #340]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070bc:	f043 0301 	orr.w	r3, r3, #1
 80070c0:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80070c2:	f7fa fce5 	bl	8001a90 <HAL_GetTick>
 80070c6:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80070c8:	e008      	b.n	80070dc <HAL_RCC_OscConfig+0x370>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80070ca:	f7fa fce1 	bl	8001a90 <HAL_GetTick>
 80070ce:	4602      	mov	r2, r0
 80070d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80070d2:	1ad3      	subs	r3, r2, r3
 80070d4:	2b02      	cmp	r3, #2
 80070d6:	d901      	bls.n	80070dc <HAL_RCC_OscConfig+0x370>
        {
          return HAL_TIMEOUT;
 80070d8:	2303      	movs	r3, #3
 80070da:	e219      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 80070dc:	4b4c      	ldr	r3, [pc, #304]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80070e0:	f003 0302 	and.w	r3, r3, #2
 80070e4:	2b00      	cmp	r3, #0
 80070e6:	d0f0      	beq.n	80070ca <HAL_RCC_OscConfig+0x35e>
 80070e8:	e018      	b.n	800711c <HAL_RCC_OscConfig+0x3b0>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80070ea:	4b49      	ldr	r3, [pc, #292]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070ec:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80070ee:	4a48      	ldr	r2, [pc, #288]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80070f0:	f023 0301 	bic.w	r3, r3, #1
 80070f4:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80070f6:	f7fa fccb 	bl	8001a90 <HAL_GetTick>
 80070fa:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 80070fc:	e008      	b.n	8007110 <HAL_RCC_OscConfig+0x3a4>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80070fe:	f7fa fcc7 	bl	8001a90 <HAL_GetTick>
 8007102:	4602      	mov	r2, r0
 8007104:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007106:	1ad3      	subs	r3, r2, r3
 8007108:	2b02      	cmp	r3, #2
 800710a:	d901      	bls.n	8007110 <HAL_RCC_OscConfig+0x3a4>
        {
          return HAL_TIMEOUT;
 800710c:	2303      	movs	r3, #3
 800710e:	e1ff      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8007110:	4b3f      	ldr	r3, [pc, #252]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007112:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007114:	f003 0302 	and.w	r3, r3, #2
 8007118:	2b00      	cmp	r3, #0
 800711a:	d1f0      	bne.n	80070fe <HAL_RCC_OscConfig+0x392>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	681b      	ldr	r3, [r3, #0]
 8007120:	f003 0320 	and.w	r3, r3, #32
 8007124:	2b00      	cmp	r3, #0
 8007126:	d036      	beq.n	8007196 <HAL_RCC_OscConfig+0x42a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	699b      	ldr	r3, [r3, #24]
 800712c:	2b00      	cmp	r3, #0
 800712e:	d019      	beq.n	8007164 <HAL_RCC_OscConfig+0x3f8>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 8007130:	4b37      	ldr	r3, [pc, #220]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	4a36      	ldr	r2, [pc, #216]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007136:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800713a:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 800713c:	f7fa fca8 	bl	8001a90 <HAL_GetTick>
 8007140:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8007142:	e008      	b.n	8007156 <HAL_RCC_OscConfig+0x3ea>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007144:	f7fa fca4 	bl	8001a90 <HAL_GetTick>
 8007148:	4602      	mov	r2, r0
 800714a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800714c:	1ad3      	subs	r3, r2, r3
 800714e:	2b02      	cmp	r3, #2
 8007150:	d901      	bls.n	8007156 <HAL_RCC_OscConfig+0x3ea>
        {
          return HAL_TIMEOUT;
 8007152:	2303      	movs	r3, #3
 8007154:	e1dc      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8007156:	4b2e      	ldr	r3, [pc, #184]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800715e:	2b00      	cmp	r3, #0
 8007160:	d0f0      	beq.n	8007144 <HAL_RCC_OscConfig+0x3d8>
 8007162:	e018      	b.n	8007196 <HAL_RCC_OscConfig+0x42a>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8007164:	4b2a      	ldr	r3, [pc, #168]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	4a29      	ldr	r2, [pc, #164]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800716a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800716e:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 8007170:	f7fa fc8e 	bl	8001a90 <HAL_GetTick>
 8007174:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007176:	e008      	b.n	800718a <HAL_RCC_OscConfig+0x41e>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8007178:	f7fa fc8a 	bl	8001a90 <HAL_GetTick>
 800717c:	4602      	mov	r2, r0
 800717e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007180:	1ad3      	subs	r3, r2, r3
 8007182:	2b02      	cmp	r3, #2
 8007184:	d901      	bls.n	800718a <HAL_RCC_OscConfig+0x41e>
        {
          return HAL_TIMEOUT;
 8007186:	2303      	movs	r3, #3
 8007188:	e1c2      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 800718a:	4b21      	ldr	r3, [pc, #132]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 800718c:	681b      	ldr	r3, [r3, #0]
 800718e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007192:	2b00      	cmp	r3, #0
 8007194:	d1f0      	bne.n	8007178 <HAL_RCC_OscConfig+0x40c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007196:	687b      	ldr	r3, [r7, #4]
 8007198:	681b      	ldr	r3, [r3, #0]
 800719a:	f003 0304 	and.w	r3, r3, #4
 800719e:	2b00      	cmp	r3, #0
 80071a0:	f000 8086 	beq.w	80072b0 <HAL_RCC_OscConfig+0x544>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 80071a4:	4b1b      	ldr	r3, [pc, #108]	; (8007214 <HAL_RCC_OscConfig+0x4a8>)
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	4a1a      	ldr	r2, [pc, #104]	; (8007214 <HAL_RCC_OscConfig+0x4a8>)
 80071aa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80071ae:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80071b0:	f7fa fc6e 	bl	8001a90 <HAL_GetTick>
 80071b4:	6278      	str	r0, [r7, #36]	; 0x24

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80071b6:	e008      	b.n	80071ca <HAL_RCC_OscConfig+0x45e>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80071b8:	f7fa fc6a 	bl	8001a90 <HAL_GetTick>
 80071bc:	4602      	mov	r2, r0
 80071be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80071c0:	1ad3      	subs	r3, r2, r3
 80071c2:	2b64      	cmp	r3, #100	; 0x64
 80071c4:	d901      	bls.n	80071ca <HAL_RCC_OscConfig+0x45e>
      {
        return HAL_TIMEOUT;
 80071c6:	2303      	movs	r3, #3
 80071c8:	e1a2      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80071ca:	4b12      	ldr	r3, [pc, #72]	; (8007214 <HAL_RCC_OscConfig+0x4a8>)
 80071cc:	681b      	ldr	r3, [r3, #0]
 80071ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80071d2:	2b00      	cmp	r3, #0
 80071d4:	d0f0      	beq.n	80071b8 <HAL_RCC_OscConfig+0x44c>
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	689b      	ldr	r3, [r3, #8]
 80071da:	2b01      	cmp	r3, #1
 80071dc:	d106      	bne.n	80071ec <HAL_RCC_OscConfig+0x480>
 80071de:	4b0c      	ldr	r3, [pc, #48]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80071e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80071e2:	4a0b      	ldr	r2, [pc, #44]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80071e4:	f043 0301 	orr.w	r3, r3, #1
 80071e8:	6713      	str	r3, [r2, #112]	; 0x70
 80071ea:	e032      	b.n	8007252 <HAL_RCC_OscConfig+0x4e6>
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	689b      	ldr	r3, [r3, #8]
 80071f0:	2b00      	cmp	r3, #0
 80071f2:	d111      	bne.n	8007218 <HAL_RCC_OscConfig+0x4ac>
 80071f4:	4b06      	ldr	r3, [pc, #24]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80071f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80071f8:	4a05      	ldr	r2, [pc, #20]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 80071fa:	f023 0301 	bic.w	r3, r3, #1
 80071fe:	6713      	str	r3, [r2, #112]	; 0x70
 8007200:	4b03      	ldr	r3, [pc, #12]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007202:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007204:	4a02      	ldr	r2, [pc, #8]	; (8007210 <HAL_RCC_OscConfig+0x4a4>)
 8007206:	f023 0304 	bic.w	r3, r3, #4
 800720a:	6713      	str	r3, [r2, #112]	; 0x70
 800720c:	e021      	b.n	8007252 <HAL_RCC_OscConfig+0x4e6>
 800720e:	bf00      	nop
 8007210:	58024400 	.word	0x58024400
 8007214:	58024800 	.word	0x58024800
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	689b      	ldr	r3, [r3, #8]
 800721c:	2b05      	cmp	r3, #5
 800721e:	d10c      	bne.n	800723a <HAL_RCC_OscConfig+0x4ce>
 8007220:	4b83      	ldr	r3, [pc, #524]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007222:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007224:	4a82      	ldr	r2, [pc, #520]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007226:	f043 0304 	orr.w	r3, r3, #4
 800722a:	6713      	str	r3, [r2, #112]	; 0x70
 800722c:	4b80      	ldr	r3, [pc, #512]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800722e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007230:	4a7f      	ldr	r2, [pc, #508]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007232:	f043 0301 	orr.w	r3, r3, #1
 8007236:	6713      	str	r3, [r2, #112]	; 0x70
 8007238:	e00b      	b.n	8007252 <HAL_RCC_OscConfig+0x4e6>
 800723a:	4b7d      	ldr	r3, [pc, #500]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800723c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800723e:	4a7c      	ldr	r2, [pc, #496]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007240:	f023 0301 	bic.w	r3, r3, #1
 8007244:	6713      	str	r3, [r2, #112]	; 0x70
 8007246:	4b7a      	ldr	r3, [pc, #488]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007248:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800724a:	4a79      	ldr	r2, [pc, #484]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800724c:	f023 0304 	bic.w	r3, r3, #4
 8007250:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007252:	687b      	ldr	r3, [r7, #4]
 8007254:	689b      	ldr	r3, [r3, #8]
 8007256:	2b00      	cmp	r3, #0
 8007258:	d015      	beq.n	8007286 <HAL_RCC_OscConfig+0x51a>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800725a:	f7fa fc19 	bl	8001a90 <HAL_GetTick>
 800725e:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007260:	e00a      	b.n	8007278 <HAL_RCC_OscConfig+0x50c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007262:	f7fa fc15 	bl	8001a90 <HAL_GetTick>
 8007266:	4602      	mov	r2, r0
 8007268:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800726a:	1ad3      	subs	r3, r2, r3
 800726c:	f241 3288 	movw	r2, #5000	; 0x1388
 8007270:	4293      	cmp	r3, r2
 8007272:	d901      	bls.n	8007278 <HAL_RCC_OscConfig+0x50c>
        {
          return HAL_TIMEOUT;
 8007274:	2303      	movs	r3, #3
 8007276:	e14b      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007278:	4b6d      	ldr	r3, [pc, #436]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800727a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800727c:	f003 0302 	and.w	r3, r3, #2
 8007280:	2b00      	cmp	r3, #0
 8007282:	d0ee      	beq.n	8007262 <HAL_RCC_OscConfig+0x4f6>
 8007284:	e014      	b.n	80072b0 <HAL_RCC_OscConfig+0x544>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007286:	f7fa fc03 	bl	8001a90 <HAL_GetTick>
 800728a:	6278      	str	r0, [r7, #36]	; 0x24

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800728c:	e00a      	b.n	80072a4 <HAL_RCC_OscConfig+0x538>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800728e:	f7fa fbff 	bl	8001a90 <HAL_GetTick>
 8007292:	4602      	mov	r2, r0
 8007294:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007296:	1ad3      	subs	r3, r2, r3
 8007298:	f241 3288 	movw	r2, #5000	; 0x1388
 800729c:	4293      	cmp	r3, r2
 800729e:	d901      	bls.n	80072a4 <HAL_RCC_OscConfig+0x538>
        {
          return HAL_TIMEOUT;
 80072a0:	2303      	movs	r3, #3
 80072a2:	e135      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 80072a4:	4b62      	ldr	r3, [pc, #392]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072a6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072a8:	f003 0302 	and.w	r3, r3, #2
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	d1ee      	bne.n	800728e <HAL_RCC_OscConfig+0x522>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072b4:	2b00      	cmp	r3, #0
 80072b6:	f000 812a 	beq.w	800750e <HAL_RCC_OscConfig+0x7a2>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 80072ba:	4b5d      	ldr	r3, [pc, #372]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072bc:	691b      	ldr	r3, [r3, #16]
 80072be:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80072c2:	2b18      	cmp	r3, #24
 80072c4:	f000 80ba 	beq.w	800743c <HAL_RCC_OscConfig+0x6d0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80072c8:	687b      	ldr	r3, [r7, #4]
 80072ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072cc:	2b02      	cmp	r3, #2
 80072ce:	f040 8095 	bne.w	80073fc <HAL_RCC_OscConfig+0x690>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80072d2:	4b57      	ldr	r3, [pc, #348]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072d4:	681b      	ldr	r3, [r3, #0]
 80072d6:	4a56      	ldr	r2, [pc, #344]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072d8:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80072dc:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80072de:	f7fa fbd7 	bl	8001a90 <HAL_GetTick>
 80072e2:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80072e4:	e008      	b.n	80072f8 <HAL_RCC_OscConfig+0x58c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80072e6:	f7fa fbd3 	bl	8001a90 <HAL_GetTick>
 80072ea:	4602      	mov	r2, r0
 80072ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80072ee:	1ad3      	subs	r3, r2, r3
 80072f0:	2b02      	cmp	r3, #2
 80072f2:	d901      	bls.n	80072f8 <HAL_RCC_OscConfig+0x58c>
          {
            return HAL_TIMEOUT;
 80072f4:	2303      	movs	r3, #3
 80072f6:	e10b      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80072f8:	4b4d      	ldr	r3, [pc, #308]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80072fa:	681b      	ldr	r3, [r3, #0]
 80072fc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007300:	2b00      	cmp	r3, #0
 8007302:	d1f0      	bne.n	80072e6 <HAL_RCC_OscConfig+0x57a>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007304:	4b4a      	ldr	r3, [pc, #296]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007306:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007308:	4b4a      	ldr	r3, [pc, #296]	; (8007434 <HAL_RCC_OscConfig+0x6c8>)
 800730a:	4013      	ands	r3, r2
 800730c:	687a      	ldr	r2, [r7, #4]
 800730e:	6a91      	ldr	r1, [r2, #40]	; 0x28
 8007310:	687a      	ldr	r2, [r7, #4]
 8007312:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8007314:	0112      	lsls	r2, r2, #4
 8007316:	430a      	orrs	r2, r1
 8007318:	4945      	ldr	r1, [pc, #276]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800731a:	4313      	orrs	r3, r2
 800731c:	628b      	str	r3, [r1, #40]	; 0x28
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007322:	3b01      	subs	r3, #1
 8007324:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800732c:	3b01      	subs	r3, #1
 800732e:	025b      	lsls	r3, r3, #9
 8007330:	b29b      	uxth	r3, r3
 8007332:	431a      	orrs	r2, r3
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007338:	3b01      	subs	r3, #1
 800733a:	041b      	lsls	r3, r3, #16
 800733c:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8007340:	431a      	orrs	r2, r3
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007346:	3b01      	subs	r3, #1
 8007348:	061b      	lsls	r3, r3, #24
 800734a:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800734e:	4938      	ldr	r1, [pc, #224]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007350:	4313      	orrs	r3, r2
 8007352:	630b      	str	r3, [r1, #48]	; 0x30
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);

        /* Disable PLLFRACN . */
        __HAL_RCC_PLLFRACN_DISABLE();
 8007354:	4b36      	ldr	r3, [pc, #216]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007358:	4a35      	ldr	r2, [pc, #212]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800735a:	f023 0301 	bic.w	r3, r3, #1
 800735e:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 8007360:	4b33      	ldr	r3, [pc, #204]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007362:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007364:	4b34      	ldr	r3, [pc, #208]	; (8007438 <HAL_RCC_OscConfig+0x6cc>)
 8007366:	4013      	ands	r3, r2
 8007368:	687a      	ldr	r2, [r7, #4]
 800736a:	6c92      	ldr	r2, [r2, #72]	; 0x48
 800736c:	00d2      	lsls	r2, r2, #3
 800736e:	4930      	ldr	r1, [pc, #192]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007370:	4313      	orrs	r3, r2
 8007372:	634b      	str	r3, [r1, #52]	; 0x34

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 8007374:	4b2e      	ldr	r3, [pc, #184]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007376:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007378:	f023 020c 	bic.w	r2, r3, #12
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007380:	492b      	ldr	r1, [pc, #172]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007382:	4313      	orrs	r3, r2
 8007384:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8007386:	4b2a      	ldr	r3, [pc, #168]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800738a:	f023 0202 	bic.w	r2, r3, #2
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007392:	4927      	ldr	r1, [pc, #156]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007394:	4313      	orrs	r3, r2
 8007396:	62cb      	str	r3, [r1, #44]	; 0x2c

        /* Enable PLL System Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007398:	4b25      	ldr	r3, [pc, #148]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800739a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800739c:	4a24      	ldr	r2, [pc, #144]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 800739e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80073a2:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1Q Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80073a4:	4b22      	ldr	r3, [pc, #136]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80073a8:	4a21      	ldr	r2, [pc, #132]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073aa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80073ae:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1R  Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 80073b0:	4b1f      	ldr	r3, [pc, #124]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80073b4:	4a1e      	ldr	r2, [pc, #120]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073b6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80073ba:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLLFRACN_ENABLE();
 80073bc:	4b1c      	ldr	r3, [pc, #112]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80073c0:	4a1b      	ldr	r2, [pc, #108]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073c2:	f043 0301 	orr.w	r3, r3, #1
 80073c6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80073c8:	4b19      	ldr	r3, [pc, #100]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073ca:	681b      	ldr	r3, [r3, #0]
 80073cc:	4a18      	ldr	r2, [pc, #96]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073ce:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80073d2:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80073d4:	f7fa fb5c 	bl	8001a90 <HAL_GetTick>
 80073d8:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80073da:	e008      	b.n	80073ee <HAL_RCC_OscConfig+0x682>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80073dc:	f7fa fb58 	bl	8001a90 <HAL_GetTick>
 80073e0:	4602      	mov	r2, r0
 80073e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80073e4:	1ad3      	subs	r3, r2, r3
 80073e6:	2b02      	cmp	r3, #2
 80073e8:	d901      	bls.n	80073ee <HAL_RCC_OscConfig+0x682>
          {
            return HAL_TIMEOUT;
 80073ea:	2303      	movs	r3, #3
 80073ec:	e090      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80073ee:	4b10      	ldr	r3, [pc, #64]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073f0:	681b      	ldr	r3, [r3, #0]
 80073f2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80073f6:	2b00      	cmp	r3, #0
 80073f8:	d0f0      	beq.n	80073dc <HAL_RCC_OscConfig+0x670>
 80073fa:	e088      	b.n	800750e <HAL_RCC_OscConfig+0x7a2>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80073fc:	4b0c      	ldr	r3, [pc, #48]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 80073fe:	681b      	ldr	r3, [r3, #0]
 8007400:	4a0b      	ldr	r2, [pc, #44]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007402:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8007406:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007408:	f7fa fb42 	bl	8001a90 <HAL_GetTick>
 800740c:	6278      	str	r0, [r7, #36]	; 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 800740e:	e008      	b.n	8007422 <HAL_RCC_OscConfig+0x6b6>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007410:	f7fa fb3e 	bl	8001a90 <HAL_GetTick>
 8007414:	4602      	mov	r2, r0
 8007416:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007418:	1ad3      	subs	r3, r2, r3
 800741a:	2b02      	cmp	r3, #2
 800741c:	d901      	bls.n	8007422 <HAL_RCC_OscConfig+0x6b6>
          {
            return HAL_TIMEOUT;
 800741e:	2303      	movs	r3, #3
 8007420:	e076      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007422:	4b03      	ldr	r3, [pc, #12]	; (8007430 <HAL_RCC_OscConfig+0x6c4>)
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800742a:	2b00      	cmp	r3, #0
 800742c:	d1f0      	bne.n	8007410 <HAL_RCC_OscConfig+0x6a4>
 800742e:	e06e      	b.n	800750e <HAL_RCC_OscConfig+0x7a2>
 8007430:	58024400 	.word	0x58024400
 8007434:	fffffc0c 	.word	0xfffffc0c
 8007438:	ffff0007 	.word	0xffff0007
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLLCKSELR;
 800743c:	4b36      	ldr	r3, [pc, #216]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 800743e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007440:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 8007442:	4b35      	ldr	r3, [pc, #212]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 8007444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007446:	60fb      	str	r3, [r7, #12]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800744c:	2b01      	cmp	r3, #1
 800744e:	d031      	beq.n	80074b4 <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007450:	693b      	ldr	r3, [r7, #16]
 8007452:	f003 0203 	and.w	r2, r3, #3
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	6a9b      	ldr	r3, [r3, #40]	; 0x28
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800745a:	429a      	cmp	r2, r3
 800745c:	d12a      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 800745e:	693b      	ldr	r3, [r7, #16]
 8007460:	091b      	lsrs	r3, r3, #4
 8007462:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	6adb      	ldr	r3, [r3, #44]	; 0x2c
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800746a:	429a      	cmp	r2, r3
 800746c:	d122      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 800746e:	68fb      	ldr	r3, [r7, #12]
 8007470:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8007474:	687b      	ldr	r3, [r7, #4]
 8007476:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007478:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 800747a:	429a      	cmp	r2, r3
 800747c:	d11a      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	0a5b      	lsrs	r3, r3, #9
 8007482:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007486:	687b      	ldr	r3, [r7, #4]
 8007488:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800748a:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 800748c:	429a      	cmp	r2, r3
 800748e:	d111      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007490:	68fb      	ldr	r3, [r7, #12]
 8007492:	0c1b      	lsrs	r3, r3, #16
 8007494:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8007498:	687b      	ldr	r3, [r7, #4]
 800749a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800749c:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 800749e:	429a      	cmp	r2, r3
 80074a0:	d108      	bne.n	80074b4 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 80074a2:	68fb      	ldr	r3, [r7, #12]
 80074a4:	0e1b      	lsrs	r3, r3, #24
 80074a6:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80074ae:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80074b0:	429a      	cmp	r2, r3
 80074b2:	d001      	beq.n	80074b8 <HAL_RCC_OscConfig+0x74c>
      {
        return HAL_ERROR;
 80074b4:	2301      	movs	r3, #1
 80074b6:	e02b      	b.n	8007510 <HAL_RCC_OscConfig+0x7a4>
      }
      else
      {
        /* Check if only fractional part needs to be updated  */
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 80074b8:	4b17      	ldr	r3, [pc, #92]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80074bc:	08db      	lsrs	r3, r3, #3
 80074be:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80074c2:	613b      	str	r3, [r7, #16]
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80074c8:	693a      	ldr	r2, [r7, #16]
 80074ca:	429a      	cmp	r2, r3
 80074cc:	d01f      	beq.n	800750e <HAL_RCC_OscConfig+0x7a2>
        {
          assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
          /* Disable PLL1FRACEN */
          __HAL_RCC_PLLFRACN_DISABLE();
 80074ce:	4b12      	ldr	r3, [pc, #72]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80074d2:	4a11      	ldr	r2, [pc, #68]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074d4:	f023 0301 	bic.w	r3, r3, #1
 80074d8:	62d3      	str	r3, [r2, #44]	; 0x2c
          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 80074da:	f7fa fad9 	bl	8001a90 <HAL_GetTick>
 80074de:	6278      	str	r0, [r7, #36]	; 0x24
          /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value will be taken into account. */
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 80074e0:	bf00      	nop
 80074e2:	f7fa fad5 	bl	8001a90 <HAL_GetTick>
 80074e6:	4602      	mov	r2, r0
 80074e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80074ea:	4293      	cmp	r3, r2
 80074ec:	d0f9      	beq.n	80074e2 <HAL_RCC_OscConfig+0x776>
          {
          }
          /* Configure PLL1 PLL1FRACN */
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 80074ee:	4b0a      	ldr	r3, [pc, #40]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80074f2:	4b0a      	ldr	r3, [pc, #40]	; (800751c <HAL_RCC_OscConfig+0x7b0>)
 80074f4:	4013      	ands	r3, r2
 80074f6:	687a      	ldr	r2, [r7, #4]
 80074f8:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80074fa:	00d2      	lsls	r2, r2, #3
 80074fc:	4906      	ldr	r1, [pc, #24]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 80074fe:	4313      	orrs	r3, r2
 8007500:	634b      	str	r3, [r1, #52]	; 0x34
          /* Enable PLL1FRACEN to latch new value. */
          __HAL_RCC_PLLFRACN_ENABLE();
 8007502:	4b05      	ldr	r3, [pc, #20]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 8007504:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007506:	4a04      	ldr	r2, [pc, #16]	; (8007518 <HAL_RCC_OscConfig+0x7ac>)
 8007508:	f043 0301 	orr.w	r3, r3, #1
 800750c:	62d3      	str	r3, [r2, #44]	; 0x2c
        }
      }
    }
  }
  return HAL_OK;
 800750e:	2300      	movs	r3, #0
}
 8007510:	4618      	mov	r0, r3
 8007512:	3730      	adds	r7, #48	; 0x30
 8007514:	46bd      	mov	sp, r7
 8007516:	bd80      	pop	{r7, pc}
 8007518:	58024400 	.word	0x58024400
 800751c:	ffff0007 	.word	0xffff0007

08007520 <HAL_RCC_ClockConfig>:
  *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8007520:	b580      	push	{r7, lr}
 8007522:	b086      	sub	sp, #24
 8007524:	af00      	add	r7, sp, #0
 8007526:	6078      	str	r0, [r7, #4]
 8007528:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;
  uint32_t common_system_clock;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	2b00      	cmp	r3, #0
 800752e:	d101      	bne.n	8007534 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8007530:	2301      	movs	r3, #1
 8007532:	e19c      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8007534:	4b8a      	ldr	r3, [pc, #552]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007536:	681b      	ldr	r3, [r3, #0]
 8007538:	f003 030f 	and.w	r3, r3, #15
 800753c:	683a      	ldr	r2, [r7, #0]
 800753e:	429a      	cmp	r2, r3
 8007540:	d910      	bls.n	8007564 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007542:	4b87      	ldr	r3, [pc, #540]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	f023 020f 	bic.w	r2, r3, #15
 800754a:	4985      	ldr	r1, [pc, #532]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 800754c:	683b      	ldr	r3, [r7, #0]
 800754e:	4313      	orrs	r3, r2
 8007550:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007552:	4b83      	ldr	r3, [pc, #524]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007554:	681b      	ldr	r3, [r3, #0]
 8007556:	f003 030f 	and.w	r3, r3, #15
 800755a:	683a      	ldr	r2, [r7, #0]
 800755c:	429a      	cmp	r2, r3
 800755e:	d001      	beq.n	8007564 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8007560:	2301      	movs	r3, #1
 8007562:	e184      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>

  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8007564:	687b      	ldr	r3, [r7, #4]
 8007566:	681b      	ldr	r3, [r3, #0]
 8007568:	f003 0304 	and.w	r3, r3, #4
 800756c:	2b00      	cmp	r3, #0
 800756e:	d010      	beq.n	8007592 <HAL_RCC_ClockConfig+0x72>
  {
#if defined (RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	691a      	ldr	r2, [r3, #16]
 8007574:	4b7b      	ldr	r3, [pc, #492]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007576:	699b      	ldr	r3, [r3, #24]
 8007578:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800757c:	429a      	cmp	r2, r3
 800757e:	d908      	bls.n	8007592 <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007580:	4b78      	ldr	r3, [pc, #480]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007582:	699b      	ldr	r3, [r3, #24]
 8007584:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	691b      	ldr	r3, [r3, #16]
 800758c:	4975      	ldr	r1, [pc, #468]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800758e:	4313      	orrs	r3, r2
 8007590:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	681b      	ldr	r3, [r3, #0]
 8007596:	f003 0308 	and.w	r3, r3, #8
 800759a:	2b00      	cmp	r3, #0
 800759c:	d010      	beq.n	80075c0 <HAL_RCC_ClockConfig+0xa0>
  {
#if defined (RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	695a      	ldr	r2, [r3, #20]
 80075a2:	4b70      	ldr	r3, [pc, #448]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075a4:	69db      	ldr	r3, [r3, #28]
 80075a6:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80075aa:	429a      	cmp	r2, r3
 80075ac:	d908      	bls.n	80075c0 <HAL_RCC_ClockConfig+0xa0>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80075ae:	4b6d      	ldr	r3, [pc, #436]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075b0:	69db      	ldr	r3, [r3, #28]
 80075b2:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80075b6:	687b      	ldr	r3, [r7, #4]
 80075b8:	695b      	ldr	r3, [r3, #20]
 80075ba:	496a      	ldr	r1, [pc, #424]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075bc:	4313      	orrs	r3, r2
 80075be:	61cb      	str	r3, [r1, #28]
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
    }
#endif
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	681b      	ldr	r3, [r3, #0]
 80075c4:	f003 0310 	and.w	r3, r3, #16
 80075c8:	2b00      	cmp	r3, #0
 80075ca:	d010      	beq.n	80075ee <HAL_RCC_ClockConfig+0xce>
  {
#if defined(RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	699a      	ldr	r2, [r3, #24]
 80075d0:	4b64      	ldr	r3, [pc, #400]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075d2:	69db      	ldr	r3, [r3, #28]
 80075d4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80075d8:	429a      	cmp	r2, r3
 80075da:	d908      	bls.n	80075ee <HAL_RCC_ClockConfig+0xce>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80075dc:	4b61      	ldr	r3, [pc, #388]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075de:	69db      	ldr	r3, [r3, #28]
 80075e0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	699b      	ldr	r3, [r3, #24]
 80075e8:	495e      	ldr	r1, [pc, #376]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80075ea:	4313      	orrs	r3, r2
 80075ec:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	f003 0320 	and.w	r3, r3, #32
 80075f6:	2b00      	cmp	r3, #0
 80075f8:	d010      	beq.n	800761c <HAL_RCC_ClockConfig+0xfc>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	69da      	ldr	r2, [r3, #28]
 80075fe:	4b59      	ldr	r3, [pc, #356]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007600:	6a1b      	ldr	r3, [r3, #32]
 8007602:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007606:	429a      	cmp	r2, r3
 8007608:	d908      	bls.n	800761c <HAL_RCC_ClockConfig+0xfc>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 800760a:	4b56      	ldr	r3, [pc, #344]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800760c:	6a1b      	ldr	r3, [r3, #32]
 800760e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	69db      	ldr	r3, [r3, #28]
 8007616:	4953      	ldr	r1, [pc, #332]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007618:	4313      	orrs	r3, r2
 800761a:	620b      	str	r3, [r1, #32]
    }
#endif
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	681b      	ldr	r3, [r3, #0]
 8007620:	f003 0302 	and.w	r3, r3, #2
 8007624:	2b00      	cmp	r3, #0
 8007626:	d010      	beq.n	800764a <HAL_RCC_ClockConfig+0x12a>
  {
#if defined (RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	68da      	ldr	r2, [r3, #12]
 800762c:	4b4d      	ldr	r3, [pc, #308]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800762e:	699b      	ldr	r3, [r3, #24]
 8007630:	f003 030f 	and.w	r3, r3, #15
 8007634:	429a      	cmp	r2, r3
 8007636:	d908      	bls.n	800764a <HAL_RCC_ClockConfig+0x12a>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007638:	4b4a      	ldr	r3, [pc, #296]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800763a:	699b      	ldr	r3, [r3, #24]
 800763c:	f023 020f 	bic.w	r2, r3, #15
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	68db      	ldr	r3, [r3, #12]
 8007644:	4947      	ldr	r1, [pc, #284]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007646:	4313      	orrs	r3, r2
 8007648:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*------------------------- SYSCLK Configuration -------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800764a:	687b      	ldr	r3, [r7, #4]
 800764c:	681b      	ldr	r3, [r3, #0]
 800764e:	f003 0301 	and.w	r3, r3, #1
 8007652:	2b00      	cmp	r3, #0
 8007654:	d055      	beq.n	8007702 <HAL_RCC_ClockConfig+0x1e2>
  {
    assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
#if defined(RCC_D1CFGR_D1CPRE)
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 8007656:	4b43      	ldr	r3, [pc, #268]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007658:	699b      	ldr	r3, [r3, #24]
 800765a:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	689b      	ldr	r3, [r3, #8]
 8007662:	4940      	ldr	r1, [pc, #256]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007664:	4313      	orrs	r3, r2
 8007666:	618b      	str	r3, [r1, #24]
#else
    MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
#endif
    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	685b      	ldr	r3, [r3, #4]
 800766c:	2b02      	cmp	r3, #2
 800766e:	d107      	bne.n	8007680 <HAL_RCC_ClockConfig+0x160>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007670:	4b3c      	ldr	r3, [pc, #240]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007672:	681b      	ldr	r3, [r3, #0]
 8007674:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007678:	2b00      	cmp	r3, #0
 800767a:	d121      	bne.n	80076c0 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 800767c:	2301      	movs	r3, #1
 800767e:	e0f6      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007680:	687b      	ldr	r3, [r7, #4]
 8007682:	685b      	ldr	r3, [r3, #4]
 8007684:	2b03      	cmp	r3, #3
 8007686:	d107      	bne.n	8007698 <HAL_RCC_ClockConfig+0x178>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007688:	4b36      	ldr	r3, [pc, #216]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800768a:	681b      	ldr	r3, [r3, #0]
 800768c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007690:	2b00      	cmp	r3, #0
 8007692:	d115      	bne.n	80076c0 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 8007694:	2301      	movs	r3, #1
 8007696:	e0ea      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* CSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	685b      	ldr	r3, [r3, #4]
 800769c:	2b01      	cmp	r3, #1
 800769e:	d107      	bne.n	80076b0 <HAL_RCC_ClockConfig+0x190>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80076a0:	4b30      	ldr	r3, [pc, #192]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076a2:	681b      	ldr	r3, [r3, #0]
 80076a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80076a8:	2b00      	cmp	r3, #0
 80076aa:	d109      	bne.n	80076c0 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80076ac:	2301      	movs	r3, #1
 80076ae:	e0de      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80076b0:	4b2c      	ldr	r3, [pc, #176]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076b2:	681b      	ldr	r3, [r3, #0]
 80076b4:	f003 0304 	and.w	r3, r3, #4
 80076b8:	2b00      	cmp	r3, #0
 80076ba:	d101      	bne.n	80076c0 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80076bc:	2301      	movs	r3, #1
 80076be:	e0d6      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80076c0:	4b28      	ldr	r3, [pc, #160]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076c2:	691b      	ldr	r3, [r3, #16]
 80076c4:	f023 0207 	bic.w	r2, r3, #7
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	685b      	ldr	r3, [r3, #4]
 80076cc:	4925      	ldr	r1, [pc, #148]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076ce:	4313      	orrs	r3, r2
 80076d0:	610b      	str	r3, [r1, #16]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80076d2:	f7fa f9dd 	bl	8001a90 <HAL_GetTick>
 80076d6:	6178      	str	r0, [r7, #20]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80076d8:	e00a      	b.n	80076f0 <HAL_RCC_ClockConfig+0x1d0>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80076da:	f7fa f9d9 	bl	8001a90 <HAL_GetTick>
 80076de:	4602      	mov	r2, r0
 80076e0:	697b      	ldr	r3, [r7, #20]
 80076e2:	1ad3      	subs	r3, r2, r3
 80076e4:	f241 3288 	movw	r2, #5000	; 0x1388
 80076e8:	4293      	cmp	r3, r2
 80076ea:	d901      	bls.n	80076f0 <HAL_RCC_ClockConfig+0x1d0>
      {
        return HAL_TIMEOUT;
 80076ec:	2303      	movs	r3, #3
 80076ee:	e0be      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80076f0:	4b1c      	ldr	r3, [pc, #112]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 80076f2:	691b      	ldr	r3, [r3, #16]
 80076f4:	f003 0238 	and.w	r2, r3, #56	; 0x38
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	685b      	ldr	r3, [r3, #4]
 80076fc:	00db      	lsls	r3, r3, #3
 80076fe:	429a      	cmp	r2, r3
 8007700:	d1eb      	bne.n	80076da <HAL_RCC_ClockConfig+0x1ba>

  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	681b      	ldr	r3, [r3, #0]
 8007706:	f003 0302 	and.w	r3, r3, #2
 800770a:	2b00      	cmp	r3, #0
 800770c:	d010      	beq.n	8007730 <HAL_RCC_ClockConfig+0x210>
  {
#if defined(RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	68da      	ldr	r2, [r3, #12]
 8007712:	4b14      	ldr	r3, [pc, #80]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007714:	699b      	ldr	r3, [r3, #24]
 8007716:	f003 030f 	and.w	r3, r3, #15
 800771a:	429a      	cmp	r2, r3
 800771c:	d208      	bcs.n	8007730 <HAL_RCC_ClockConfig+0x210>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800771e:	4b11      	ldr	r3, [pc, #68]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 8007720:	699b      	ldr	r3, [r3, #24]
 8007722:	f023 020f 	bic.w	r2, r3, #15
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	68db      	ldr	r3, [r3, #12]
 800772a:	490e      	ldr	r1, [pc, #56]	; (8007764 <HAL_RCC_ClockConfig+0x244>)
 800772c:	4313      	orrs	r3, r2
 800772e:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8007730:	4b0b      	ldr	r3, [pc, #44]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	f003 030f 	and.w	r3, r3, #15
 8007738:	683a      	ldr	r2, [r7, #0]
 800773a:	429a      	cmp	r2, r3
 800773c:	d214      	bcs.n	8007768 <HAL_RCC_ClockConfig+0x248>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800773e:	4b08      	ldr	r3, [pc, #32]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007740:	681b      	ldr	r3, [r3, #0]
 8007742:	f023 020f 	bic.w	r2, r3, #15
 8007746:	4906      	ldr	r1, [pc, #24]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007748:	683b      	ldr	r3, [r7, #0]
 800774a:	4313      	orrs	r3, r2
 800774c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800774e:	4b04      	ldr	r3, [pc, #16]	; (8007760 <HAL_RCC_ClockConfig+0x240>)
 8007750:	681b      	ldr	r3, [r3, #0]
 8007752:	f003 030f 	and.w	r3, r3, #15
 8007756:	683a      	ldr	r2, [r7, #0]
 8007758:	429a      	cmp	r2, r3
 800775a:	d005      	beq.n	8007768 <HAL_RCC_ClockConfig+0x248>
    {
      return HAL_ERROR;
 800775c:	2301      	movs	r3, #1
 800775e:	e086      	b.n	800786e <HAL_RCC_ClockConfig+0x34e>
 8007760:	52002000 	.word	0x52002000
 8007764:	58024400 	.word	0x58024400
    }
  }

  /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	681b      	ldr	r3, [r3, #0]
 800776c:	f003 0304 	and.w	r3, r3, #4
 8007770:	2b00      	cmp	r3, #0
 8007772:	d010      	beq.n	8007796 <HAL_RCC_ClockConfig+0x276>
  {
#if defined(RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	691a      	ldr	r2, [r3, #16]
 8007778:	4b3f      	ldr	r3, [pc, #252]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 800777a:	699b      	ldr	r3, [r3, #24]
 800777c:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007780:	429a      	cmp	r2, r3
 8007782:	d208      	bcs.n	8007796 <HAL_RCC_ClockConfig+0x276>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007784:	4b3c      	ldr	r3, [pc, #240]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007786:	699b      	ldr	r3, [r3, #24]
 8007788:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	691b      	ldr	r3, [r3, #16]
 8007790:	4939      	ldr	r1, [pc, #228]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007792:	4313      	orrs	r3, r2
 8007794:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	f003 0308 	and.w	r3, r3, #8
 800779e:	2b00      	cmp	r3, #0
 80077a0:	d010      	beq.n	80077c4 <HAL_RCC_ClockConfig+0x2a4>
  {
#if defined(RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	695a      	ldr	r2, [r3, #20]
 80077a6:	4b34      	ldr	r3, [pc, #208]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077a8:	69db      	ldr	r3, [r3, #28]
 80077aa:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80077ae:	429a      	cmp	r2, r3
 80077b0:	d208      	bcs.n	80077c4 <HAL_RCC_ClockConfig+0x2a4>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80077b2:	4b31      	ldr	r3, [pc, #196]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077b4:	69db      	ldr	r3, [r3, #28]
 80077b6:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80077ba:	687b      	ldr	r3, [r7, #4]
 80077bc:	695b      	ldr	r3, [r3, #20]
 80077be:	492e      	ldr	r1, [pc, #184]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077c0:	4313      	orrs	r3, r2
 80077c2:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80077c4:	687b      	ldr	r3, [r7, #4]
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	f003 0310 	and.w	r3, r3, #16
 80077cc:	2b00      	cmp	r3, #0
 80077ce:	d010      	beq.n	80077f2 <HAL_RCC_ClockConfig+0x2d2>
  {
#if defined (RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	699a      	ldr	r2, [r3, #24]
 80077d4:	4b28      	ldr	r3, [pc, #160]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077d6:	69db      	ldr	r3, [r3, #28]
 80077d8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80077dc:	429a      	cmp	r2, r3
 80077de:	d208      	bcs.n	80077f2 <HAL_RCC_ClockConfig+0x2d2>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80077e0:	4b25      	ldr	r3, [pc, #148]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077e2:	69db      	ldr	r3, [r3, #28]
 80077e4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	699b      	ldr	r3, [r3, #24]
 80077ec:	4922      	ldr	r1, [pc, #136]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 80077ee:	4313      	orrs	r3, r2
 80077f0:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	681b      	ldr	r3, [r3, #0]
 80077f6:	f003 0320 	and.w	r3, r3, #32
 80077fa:	2b00      	cmp	r3, #0
 80077fc:	d010      	beq.n	8007820 <HAL_RCC_ClockConfig+0x300>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	69da      	ldr	r2, [r3, #28]
 8007802:	4b1d      	ldr	r3, [pc, #116]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007804:	6a1b      	ldr	r3, [r3, #32]
 8007806:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800780a:	429a      	cmp	r2, r3
 800780c:	d208      	bcs.n	8007820 <HAL_RCC_ClockConfig+0x300>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 800780e:	4b1a      	ldr	r3, [pc, #104]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007810:	6a1b      	ldr	r3, [r3, #32]
 8007812:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	69db      	ldr	r3, [r3, #28]
 800781a:	4917      	ldr	r1, [pc, #92]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 800781c:	4313      	orrs	r3, r2
 800781e:	620b      	str	r3, [r1, #32]
#endif
  }

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8007820:	f000 f834 	bl	800788c <HAL_RCC_GetSysClockFreq>
 8007824:	4602      	mov	r2, r0
 8007826:	4b14      	ldr	r3, [pc, #80]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007828:	699b      	ldr	r3, [r3, #24]
 800782a:	0a1b      	lsrs	r3, r3, #8
 800782c:	f003 030f 	and.w	r3, r3, #15
 8007830:	4912      	ldr	r1, [pc, #72]	; (800787c <HAL_RCC_ClockConfig+0x35c>)
 8007832:	5ccb      	ldrb	r3, [r1, r3]
 8007834:	f003 031f 	and.w	r3, r3, #31
 8007838:	fa22 f303 	lsr.w	r3, r2, r3
 800783c:	613b      	str	r3, [r7, #16]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800783e:	4b0e      	ldr	r3, [pc, #56]	; (8007878 <HAL_RCC_ClockConfig+0x358>)
 8007840:	699b      	ldr	r3, [r3, #24]
 8007842:	f003 030f 	and.w	r3, r3, #15
 8007846:	4a0d      	ldr	r2, [pc, #52]	; (800787c <HAL_RCC_ClockConfig+0x35c>)
 8007848:	5cd3      	ldrb	r3, [r2, r3]
 800784a:	f003 031f 	and.w	r3, r3, #31
 800784e:	693a      	ldr	r2, [r7, #16]
 8007850:	fa22 f303 	lsr.w	r3, r2, r3
 8007854:	4a0a      	ldr	r2, [pc, #40]	; (8007880 <HAL_RCC_ClockConfig+0x360>)
 8007856:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007858:	4a0a      	ldr	r2, [pc, #40]	; (8007884 <HAL_RCC_ClockConfig+0x364>)
 800785a:	693b      	ldr	r3, [r7, #16]
 800785c:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 800785e:	4b0a      	ldr	r3, [pc, #40]	; (8007888 <HAL_RCC_ClockConfig+0x368>)
 8007860:	681b      	ldr	r3, [r3, #0]
 8007862:	4618      	mov	r0, r3
 8007864:	f7fa f8ca 	bl	80019fc <HAL_InitTick>
 8007868:	4603      	mov	r3, r0
 800786a:	73fb      	strb	r3, [r7, #15]

  return halstatus;
 800786c:	7bfb      	ldrb	r3, [r7, #15]
}
 800786e:	4618      	mov	r0, r3
 8007870:	3718      	adds	r7, #24
 8007872:	46bd      	mov	sp, r7
 8007874:	bd80      	pop	{r7, pc}
 8007876:	bf00      	nop
 8007878:	58024400 	.word	0x58024400
 800787c:	0802555c 	.word	0x0802555c
 8007880:	24000008 	.word	0x24000008
 8007884:	24000004 	.word	0x24000004
 8007888:	2400000c 	.word	0x2400000c

0800788c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800788c:	b480      	push	{r7}
 800788e:	b089      	sub	sp, #36	; 0x24
 8007890:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007892:	4bb3      	ldr	r3, [pc, #716]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007894:	691b      	ldr	r3, [r3, #16]
 8007896:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800789a:	2b18      	cmp	r3, #24
 800789c:	f200 8155 	bhi.w	8007b4a <HAL_RCC_GetSysClockFreq+0x2be>
 80078a0:	a201      	add	r2, pc, #4	; (adr r2, 80078a8 <HAL_RCC_GetSysClockFreq+0x1c>)
 80078a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80078a6:	bf00      	nop
 80078a8:	0800790d 	.word	0x0800790d
 80078ac:	08007b4b 	.word	0x08007b4b
 80078b0:	08007b4b 	.word	0x08007b4b
 80078b4:	08007b4b 	.word	0x08007b4b
 80078b8:	08007b4b 	.word	0x08007b4b
 80078bc:	08007b4b 	.word	0x08007b4b
 80078c0:	08007b4b 	.word	0x08007b4b
 80078c4:	08007b4b 	.word	0x08007b4b
 80078c8:	08007933 	.word	0x08007933
 80078cc:	08007b4b 	.word	0x08007b4b
 80078d0:	08007b4b 	.word	0x08007b4b
 80078d4:	08007b4b 	.word	0x08007b4b
 80078d8:	08007b4b 	.word	0x08007b4b
 80078dc:	08007b4b 	.word	0x08007b4b
 80078e0:	08007b4b 	.word	0x08007b4b
 80078e4:	08007b4b 	.word	0x08007b4b
 80078e8:	08007939 	.word	0x08007939
 80078ec:	08007b4b 	.word	0x08007b4b
 80078f0:	08007b4b 	.word	0x08007b4b
 80078f4:	08007b4b 	.word	0x08007b4b
 80078f8:	08007b4b 	.word	0x08007b4b
 80078fc:	08007b4b 	.word	0x08007b4b
 8007900:	08007b4b 	.word	0x08007b4b
 8007904:	08007b4b 	.word	0x08007b4b
 8007908:	0800793f 	.word	0x0800793f
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800790c:	4b94      	ldr	r3, [pc, #592]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800790e:	681b      	ldr	r3, [r3, #0]
 8007910:	f003 0320 	and.w	r3, r3, #32
 8007914:	2b00      	cmp	r3, #0
 8007916:	d009      	beq.n	800792c <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007918:	4b91      	ldr	r3, [pc, #580]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800791a:	681b      	ldr	r3, [r3, #0]
 800791c:	08db      	lsrs	r3, r3, #3
 800791e:	f003 0303 	and.w	r3, r3, #3
 8007922:	4a90      	ldr	r2, [pc, #576]	; (8007b64 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007924:	fa22 f303 	lsr.w	r3, r2, r3
 8007928:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 800792a:	e111      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 800792c:	4b8d      	ldr	r3, [pc, #564]	; (8007b64 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800792e:	61bb      	str	r3, [r7, #24]
      break;
 8007930:	e10e      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 8007932:	4b8d      	ldr	r3, [pc, #564]	; (8007b68 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007934:	61bb      	str	r3, [r7, #24]
      break;
 8007936:	e10b      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 8007938:	4b8c      	ldr	r3, [pc, #560]	; (8007b6c <HAL_RCC_GetSysClockFreq+0x2e0>)
 800793a:	61bb      	str	r3, [r7, #24]
      break;
 800793c:	e108      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800793e:	4b88      	ldr	r3, [pc, #544]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007940:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007942:	f003 0303 	and.w	r3, r3, #3
 8007946:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8007948:	4b85      	ldr	r3, [pc, #532]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800794a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800794c:	091b      	lsrs	r3, r3, #4
 800794e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8007952:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8007954:	4b82      	ldr	r3, [pc, #520]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007956:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007958:	f003 0301 	and.w	r3, r3, #1
 800795c:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 800795e:	4b80      	ldr	r3, [pc, #512]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007960:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007962:	08db      	lsrs	r3, r3, #3
 8007964:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8007968:	68fa      	ldr	r2, [r7, #12]
 800796a:	fb02 f303 	mul.w	r3, r2, r3
 800796e:	ee07 3a90 	vmov	s15, r3
 8007972:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007976:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 800797a:	693b      	ldr	r3, [r7, #16]
 800797c:	2b00      	cmp	r3, #0
 800797e:	f000 80e1 	beq.w	8007b44 <HAL_RCC_GetSysClockFreq+0x2b8>
 8007982:	697b      	ldr	r3, [r7, #20]
 8007984:	2b02      	cmp	r3, #2
 8007986:	f000 8083 	beq.w	8007a90 <HAL_RCC_GetSysClockFreq+0x204>
 800798a:	697b      	ldr	r3, [r7, #20]
 800798c:	2b02      	cmp	r3, #2
 800798e:	f200 80a1 	bhi.w	8007ad4 <HAL_RCC_GetSysClockFreq+0x248>
 8007992:	697b      	ldr	r3, [r7, #20]
 8007994:	2b00      	cmp	r3, #0
 8007996:	d003      	beq.n	80079a0 <HAL_RCC_GetSysClockFreq+0x114>
 8007998:	697b      	ldr	r3, [r7, #20]
 800799a:	2b01      	cmp	r3, #1
 800799c:	d056      	beq.n	8007a4c <HAL_RCC_GetSysClockFreq+0x1c0>
 800799e:	e099      	b.n	8007ad4 <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80079a0:	4b6f      	ldr	r3, [pc, #444]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80079a2:	681b      	ldr	r3, [r3, #0]
 80079a4:	f003 0320 	and.w	r3, r3, #32
 80079a8:	2b00      	cmp	r3, #0
 80079aa:	d02d      	beq.n	8007a08 <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80079ac:	4b6c      	ldr	r3, [pc, #432]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80079ae:	681b      	ldr	r3, [r3, #0]
 80079b0:	08db      	lsrs	r3, r3, #3
 80079b2:	f003 0303 	and.w	r3, r3, #3
 80079b6:	4a6b      	ldr	r2, [pc, #428]	; (8007b64 <HAL_RCC_GetSysClockFreq+0x2d8>)
 80079b8:	fa22 f303 	lsr.w	r3, r2, r3
 80079bc:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80079be:	687b      	ldr	r3, [r7, #4]
 80079c0:	ee07 3a90 	vmov	s15, r3
 80079c4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80079c8:	693b      	ldr	r3, [r7, #16]
 80079ca:	ee07 3a90 	vmov	s15, r3
 80079ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80079d2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80079d6:	4b62      	ldr	r3, [pc, #392]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80079d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80079da:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80079de:	ee07 3a90 	vmov	s15, r3
 80079e2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80079e6:	ed97 6a02 	vldr	s12, [r7, #8]
 80079ea:	eddf 5a61 	vldr	s11, [pc, #388]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 80079ee:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80079f2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80079f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80079fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80079fe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007a02:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 8007a06:	e087      	b.n	8007b18 <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007a08:	693b      	ldr	r3, [r7, #16]
 8007a0a:	ee07 3a90 	vmov	s15, r3
 8007a0e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007a12:	eddf 6a58 	vldr	s13, [pc, #352]	; 8007b74 <HAL_RCC_GetSysClockFreq+0x2e8>
 8007a16:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007a1a:	4b51      	ldr	r3, [pc, #324]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007a1e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007a22:	ee07 3a90 	vmov	s15, r3
 8007a26:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007a2a:	ed97 6a02 	vldr	s12, [r7, #8]
 8007a2e:	eddf 5a50 	vldr	s11, [pc, #320]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007a32:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007a36:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007a3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007a3e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007a42:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007a46:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007a4a:	e065      	b.n	8007b18 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007a4c:	693b      	ldr	r3, [r7, #16]
 8007a4e:	ee07 3a90 	vmov	s15, r3
 8007a52:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007a56:	eddf 6a48 	vldr	s13, [pc, #288]	; 8007b78 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007a5a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007a5e:	4b40      	ldr	r3, [pc, #256]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007a62:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007a66:	ee07 3a90 	vmov	s15, r3
 8007a6a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007a6e:	ed97 6a02 	vldr	s12, [r7, #8]
 8007a72:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007a76:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007a7a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007a7e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007a82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007a86:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007a8a:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007a8e:	e043      	b.n	8007b18 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007a90:	693b      	ldr	r3, [r7, #16]
 8007a92:	ee07 3a90 	vmov	s15, r3
 8007a96:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007a9a:	eddf 6a38 	vldr	s13, [pc, #224]	; 8007b7c <HAL_RCC_GetSysClockFreq+0x2f0>
 8007a9e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007aa2:	4b2f      	ldr	r3, [pc, #188]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007aa4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007aa6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007aaa:	ee07 3a90 	vmov	s15, r3
 8007aae:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007ab2:	ed97 6a02 	vldr	s12, [r7, #8]
 8007ab6:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007aba:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007abe:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007ac2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007ac6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007aca:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007ace:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007ad2:	e021      	b.n	8007b18 <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007ad4:	693b      	ldr	r3, [r7, #16]
 8007ad6:	ee07 3a90 	vmov	s15, r3
 8007ada:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007ade:	eddf 6a26 	vldr	s13, [pc, #152]	; 8007b78 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007ae2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007ae6:	4b1e      	ldr	r3, [pc, #120]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007ae8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007aea:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007aee:	ee07 3a90 	vmov	s15, r3
 8007af2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007af6:	ed97 6a02 	vldr	s12, [r7, #8]
 8007afa:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8007b70 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007afe:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007b02:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007b06:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8007b0a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007b0e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007b12:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007b16:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8007b18:	4b11      	ldr	r3, [pc, #68]	; (8007b60 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007b1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b1c:	0a5b      	lsrs	r3, r3, #9
 8007b1e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007b22:	3301      	adds	r3, #1
 8007b24:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8007b26:	683b      	ldr	r3, [r7, #0]
 8007b28:	ee07 3a90 	vmov	s15, r3
 8007b2c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8007b30:	edd7 6a07 	vldr	s13, [r7, #28]
 8007b34:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007b38:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007b3c:	ee17 3a90 	vmov	r3, s15
 8007b40:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8007b42:	e005      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8007b44:	2300      	movs	r3, #0
 8007b46:	61bb      	str	r3, [r7, #24]
      break;
 8007b48:	e002      	b.n	8007b50 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 8007b4a:	4b07      	ldr	r3, [pc, #28]	; (8007b68 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007b4c:	61bb      	str	r3, [r7, #24]
      break;
 8007b4e:	bf00      	nop
  }

  return sysclockfreq;
 8007b50:	69bb      	ldr	r3, [r7, #24]
}
 8007b52:	4618      	mov	r0, r3
 8007b54:	3724      	adds	r7, #36	; 0x24
 8007b56:	46bd      	mov	sp, r7
 8007b58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b5c:	4770      	bx	lr
 8007b5e:	bf00      	nop
 8007b60:	58024400 	.word	0x58024400
 8007b64:	03d09000 	.word	0x03d09000
 8007b68:	003d0900 	.word	0x003d0900
 8007b6c:	017d7840 	.word	0x017d7840
 8007b70:	46000000 	.word	0x46000000
 8007b74:	4c742400 	.word	0x4c742400
 8007b78:	4a742400 	.word	0x4a742400
 8007b7c:	4bbebc20 	.word	0x4bbebc20

08007b80 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8007b80:	b580      	push	{r7, lr}
 8007b82:	b082      	sub	sp, #8
 8007b84:	af00      	add	r7, sp, #0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 8007b86:	f7ff fe81 	bl	800788c <HAL_RCC_GetSysClockFreq>
 8007b8a:	4602      	mov	r2, r0
 8007b8c:	4b10      	ldr	r3, [pc, #64]	; (8007bd0 <HAL_RCC_GetHCLKFreq+0x50>)
 8007b8e:	699b      	ldr	r3, [r3, #24]
 8007b90:	0a1b      	lsrs	r3, r3, #8
 8007b92:	f003 030f 	and.w	r3, r3, #15
 8007b96:	490f      	ldr	r1, [pc, #60]	; (8007bd4 <HAL_RCC_GetHCLKFreq+0x54>)
 8007b98:	5ccb      	ldrb	r3, [r1, r3]
 8007b9a:	f003 031f 	and.w	r3, r3, #31
 8007b9e:	fa22 f303 	lsr.w	r3, r2, r3
 8007ba2:	607b      	str	r3, [r7, #4]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8007ba4:	4b0a      	ldr	r3, [pc, #40]	; (8007bd0 <HAL_RCC_GetHCLKFreq+0x50>)
 8007ba6:	699b      	ldr	r3, [r3, #24]
 8007ba8:	f003 030f 	and.w	r3, r3, #15
 8007bac:	4a09      	ldr	r2, [pc, #36]	; (8007bd4 <HAL_RCC_GetHCLKFreq+0x54>)
 8007bae:	5cd3      	ldrb	r3, [r2, r3]
 8007bb0:	f003 031f 	and.w	r3, r3, #31
 8007bb4:	687a      	ldr	r2, [r7, #4]
 8007bb6:	fa22 f303 	lsr.w	r3, r2, r3
 8007bba:	4a07      	ldr	r2, [pc, #28]	; (8007bd8 <HAL_RCC_GetHCLKFreq+0x58>)
 8007bbc:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 8007bbe:	4a07      	ldr	r2, [pc, #28]	; (8007bdc <HAL_RCC_GetHCLKFreq+0x5c>)
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
 8007bc4:	4b04      	ldr	r3, [pc, #16]	; (8007bd8 <HAL_RCC_GetHCLKFreq+0x58>)
 8007bc6:	681b      	ldr	r3, [r3, #0]
}
 8007bc8:	4618      	mov	r0, r3
 8007bca:	3708      	adds	r7, #8
 8007bcc:	46bd      	mov	sp, r7
 8007bce:	bd80      	pop	{r7, pc}
 8007bd0:	58024400 	.word	0x58024400
 8007bd4:	0802555c 	.word	0x0802555c
 8007bd8:	24000008 	.word	0x24000008
 8007bdc:	24000004 	.word	0x24000004

08007be0 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007be0:	b580      	push	{r7, lr}
 8007be2:	af00      	add	r7, sp, #0
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8007be4:	f7ff ffcc 	bl	8007b80 <HAL_RCC_GetHCLKFreq>
 8007be8:	4602      	mov	r2, r0
 8007bea:	4b06      	ldr	r3, [pc, #24]	; (8007c04 <HAL_RCC_GetPCLK1Freq+0x24>)
 8007bec:	69db      	ldr	r3, [r3, #28]
 8007bee:	091b      	lsrs	r3, r3, #4
 8007bf0:	f003 0307 	and.w	r3, r3, #7
 8007bf4:	4904      	ldr	r1, [pc, #16]	; (8007c08 <HAL_RCC_GetPCLK1Freq+0x28>)
 8007bf6:	5ccb      	ldrb	r3, [r1, r3]
 8007bf8:	f003 031f 	and.w	r3, r3, #31
 8007bfc:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8007c00:	4618      	mov	r0, r3
 8007c02:	bd80      	pop	{r7, pc}
 8007c04:	58024400 	.word	0x58024400
 8007c08:	0802555c 	.word	0x0802555c

08007c0c <HAL_RCCEx_PeriphCLKConfig>:
  * (*) : Available on some STM32H7 lines only.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8007c0c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007c10:	b0c6      	sub	sp, #280	; 0x118
 8007c12:	af00      	add	r7, sp, #0
 8007c14:	f8c7 0104 	str.w	r0, [r7, #260]	; 0x104
  uint32_t tmpreg;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8007c18:	2300      	movs	r3, #0
 8007c1a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8007c1e:	2300      	movs	r3, #0
 8007c20:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116

  /*---------------------------- SPDIFRX configuration -------------------------------*/

  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8007c24:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c2c:	f002 6400 	and.w	r4, r2, #134217728	; 0x8000000
 8007c30:	2500      	movs	r5, #0
 8007c32:	ea54 0305 	orrs.w	r3, r4, r5
 8007c36:	d049      	beq.n	8007ccc <HAL_RCCEx_PeriphCLKConfig+0xc0>
  {

    switch (PeriphClkInit->SpdifrxClockSelection)
 8007c38:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c3c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007c3e:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007c42:	d02f      	beq.n	8007ca4 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8007c44:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007c48:	d828      	bhi.n	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007c4a:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007c4e:	d01a      	beq.n	8007c86 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8007c50:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007c54:	d822      	bhi.n	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007c56:	2b00      	cmp	r3, #0
 8007c58:	d003      	beq.n	8007c62 <HAL_RCCEx_PeriphCLKConfig+0x56>
 8007c5a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007c5e:	d007      	beq.n	8007c70 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8007c60:	e01c      	b.n	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x90>
    {
      case RCC_SPDIFRXCLKSOURCE_PLL:      /* PLL is used as clock source for SPDIFRX*/
        /* Enable PLL1Q Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c62:	4bab      	ldr	r3, [pc, #684]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007c64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007c66:	4aaa      	ldr	r2, [pc, #680]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007c68:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007c6c:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8007c6e:	e01a      	b.n	8007ca6 <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL2: /* PLL2 is used as clock source for SPDIFRX*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007c70:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c74:	3308      	adds	r3, #8
 8007c76:	2102      	movs	r1, #2
 8007c78:	4618      	mov	r0, r3
 8007c7a:	f002 fa49 	bl	800a110 <RCCEx_PLL2_Config>
 8007c7e:	4603      	mov	r3, r0
 8007c80:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8007c84:	e00f      	b.n	8007ca6 <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPDIFRX*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007c86:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007c8a:	3328      	adds	r3, #40	; 0x28
 8007c8c:	2102      	movs	r1, #2
 8007c8e:	4618      	mov	r0, r3
 8007c90:	f002 faf0 	bl	800a274 <RCCEx_PLL3_Config>
 8007c94:	4603      	mov	r3, r0
 8007c96:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8007c9a:	e004      	b.n	8007ca6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
        /* Internal OSC clock is used as source of SPDIFRX clock*/
        /* SPDIFRX clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007c9c:	2301      	movs	r3, #1
 8007c9e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007ca2:	e000      	b.n	8007ca6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
        break;
 8007ca4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007ca6:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007caa:	2b00      	cmp	r3, #0
 8007cac:	d10a      	bne.n	8007cc4 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    {
      /* Set the source of SPDIFRX clock*/
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8007cae:	4b98      	ldr	r3, [pc, #608]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007cb0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007cb2:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8007cb6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007cba:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007cbc:	4a94      	ldr	r2, [pc, #592]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007cbe:	430b      	orrs	r3, r1
 8007cc0:	6513      	str	r3, [r2, #80]	; 0x50
 8007cc2:	e003      	b.n	8007ccc <HAL_RCCEx_PeriphCLKConfig+0xc0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007cc4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007cc8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SAI1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8007ccc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007cd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cd4:	f402 7880 	and.w	r8, r2, #256	; 0x100
 8007cd8:	f04f 0900 	mov.w	r9, #0
 8007cdc:	ea58 0309 	orrs.w	r3, r8, r9
 8007ce0:	d047      	beq.n	8007d72 <HAL_RCCEx_PeriphCLKConfig+0x166>
  {
    switch (PeriphClkInit->Sai1ClockSelection)
 8007ce2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007ce6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007ce8:	2b04      	cmp	r3, #4
 8007cea:	d82a      	bhi.n	8007d42 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8007cec:	a201      	add	r2, pc, #4	; (adr r2, 8007cf4 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8007cee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007cf2:	bf00      	nop
 8007cf4:	08007d09 	.word	0x08007d09
 8007cf8:	08007d17 	.word	0x08007d17
 8007cfc:	08007d2d 	.word	0x08007d2d
 8007d00:	08007d4b 	.word	0x08007d4b
 8007d04:	08007d4b 	.word	0x08007d4b
    {
      case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007d08:	4b81      	ldr	r3, [pc, #516]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007d0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007d0c:	4a80      	ldr	r2, [pc, #512]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007d0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007d12:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007d14:	e01a      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007d16:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d1a:	3308      	adds	r3, #8
 8007d1c:	2100      	movs	r1, #0
 8007d1e:	4618      	mov	r0, r3
 8007d20:	f002 f9f6 	bl	800a110 <RCCEx_PLL2_Config>
 8007d24:	4603      	mov	r3, r0
 8007d26:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007d2a:	e00f      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007d2c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d30:	3328      	adds	r3, #40	; 0x28
 8007d32:	2100      	movs	r1, #0
 8007d34:	4618      	mov	r0, r3
 8007d36:	f002 fa9d 	bl	800a274 <RCCEx_PLL3_Config>
 8007d3a:	4603      	mov	r3, r0
 8007d3c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007d40:	e004      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x140>
        /* HSI, HSE, or CSI oscillator is used as source of SAI1 clock */
        /* SAI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007d42:	2301      	movs	r3, #1
 8007d44:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007d48:	e000      	b.n	8007d4c <HAL_RCCEx_PeriphCLKConfig+0x140>
        break;
 8007d4a:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007d4c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d10a      	bne.n	8007d6a <HAL_RCCEx_PeriphCLKConfig+0x15e>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007d54:	4b6e      	ldr	r3, [pc, #440]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007d56:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007d58:	f023 0107 	bic.w	r1, r3, #7
 8007d5c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d60:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007d62:	4a6b      	ldr	r2, [pc, #428]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007d64:	430b      	orrs	r3, r1
 8007d66:	6513      	str	r3, [r2, #80]	; 0x50
 8007d68:	e003      	b.n	8007d72 <HAL_RCCEx_PeriphCLKConfig+0x166>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007d6a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007d6e:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif  /*SAI2B*/

#if defined(SAI4)
  /*---------------------------- SAI4A configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8007d72:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d7a:	f402 6a80 	and.w	sl, r2, #1024	; 0x400
 8007d7e:	f04f 0b00 	mov.w	fp, #0
 8007d82:	ea5a 030b 	orrs.w	r3, sl, fp
 8007d86:	d05b      	beq.n	8007e40 <HAL_RCCEx_PeriphCLKConfig+0x234>
  {
    switch (PeriphClkInit->Sai4AClockSelection)
 8007d88:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007d8c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8007d90:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 8007d94:	d03b      	beq.n	8007e0e <HAL_RCCEx_PeriphCLKConfig+0x202>
 8007d96:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 8007d9a:	d834      	bhi.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007d9c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8007da0:	d037      	beq.n	8007e12 <HAL_RCCEx_PeriphCLKConfig+0x206>
 8007da2:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8007da6:	d82e      	bhi.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007da8:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8007dac:	d033      	beq.n	8007e16 <HAL_RCCEx_PeriphCLKConfig+0x20a>
 8007dae:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8007db2:	d828      	bhi.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007db4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007db8:	d01a      	beq.n	8007df0 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 8007dba:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007dbe:	d822      	bhi.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007dc0:	2b00      	cmp	r3, #0
 8007dc2:	d003      	beq.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 8007dc4:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007dc8:	d007      	beq.n	8007dda <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 8007dca:	e01c      	b.n	8007e06 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    {
      case RCC_SAI4ACLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007dcc:	4b50      	ldr	r3, [pc, #320]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007dce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007dd0:	4a4f      	ldr	r2, [pc, #316]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007dd2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007dd6:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007dd8:	e01e      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007dda:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007dde:	3308      	adds	r3, #8
 8007de0:	2100      	movs	r1, #0
 8007de2:	4618      	mov	r0, r3
 8007de4:	f002 f994 	bl	800a110 <RCCEx_PLL2_Config>
 8007de8:	4603      	mov	r3, r0
 8007dea:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8007dee:	e013      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007df0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007df4:	3328      	adds	r3, #40	; 0x28
 8007df6:	2100      	movs	r1, #0
 8007df8:	4618      	mov	r0, r3
 8007dfa:	f002 fa3b 	bl	800a274 <RCCEx_PLL3_Config>
 8007dfe:	4603      	mov	r3, r0
 8007e00:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007e04:	e008      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        /* SAI4A clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8007e06:	2301      	movs	r3, #1
 8007e08:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007e0c:	e004      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007e0e:	bf00      	nop
 8007e10:	e002      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007e12:	bf00      	nop
 8007e14:	e000      	b.n	8007e18 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007e16:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007e18:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007e1c:	2b00      	cmp	r3, #0
 8007e1e:	d10b      	bne.n	8007e38 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    {
      /* Set the source of SAI4A clock*/
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8007e20:	4b3b      	ldr	r3, [pc, #236]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007e22:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007e24:	f423 0160 	bic.w	r1, r3, #14680064	; 0xe00000
 8007e28:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007e2c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8007e30:	4a37      	ldr	r2, [pc, #220]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007e32:	430b      	orrs	r3, r1
 8007e34:	6593      	str	r3, [r2, #88]	; 0x58
 8007e36:	e003      	b.n	8007e40 <HAL_RCCEx_PeriphCLKConfig+0x234>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007e38:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007e3c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  /*---------------------------- SAI4B configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 8007e40:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007e44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e48:	f402 6300 	and.w	r3, r2, #2048	; 0x800
 8007e4c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8007e50:	2300      	movs	r3, #0
 8007e52:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8007e56:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	; 0xf8
 8007e5a:	460b      	mov	r3, r1
 8007e5c:	4313      	orrs	r3, r2
 8007e5e:	d05d      	beq.n	8007f1c <HAL_RCCEx_PeriphCLKConfig+0x310>
  {
    switch (PeriphClkInit->Sai4BClockSelection)
 8007e60:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007e64:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8007e68:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8007e6c:	d03b      	beq.n	8007ee6 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8007e6e:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8007e72:	d834      	bhi.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007e74:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8007e78:	d037      	beq.n	8007eea <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8007e7a:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8007e7e:	d82e      	bhi.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007e80:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8007e84:	d033      	beq.n	8007eee <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8007e86:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8007e8a:	d828      	bhi.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007e8c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007e90:	d01a      	beq.n	8007ec8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 8007e92:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007e96:	d822      	bhi.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007e98:	2b00      	cmp	r3, #0
 8007e9a:	d003      	beq.n	8007ea4 <HAL_RCCEx_PeriphCLKConfig+0x298>
 8007e9c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8007ea0:	d007      	beq.n	8007eb2 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 8007ea2:	e01c      	b.n	8007ede <HAL_RCCEx_PeriphCLKConfig+0x2d2>
    {
      case RCC_SAI4BCLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007ea4:	4b1a      	ldr	r3, [pc, #104]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007ea6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ea8:	4a19      	ldr	r2, [pc, #100]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007eaa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007eae:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007eb0:	e01e      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007eb2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007eb6:	3308      	adds	r3, #8
 8007eb8:	2100      	movs	r1, #0
 8007eba:	4618      	mov	r0, r3
 8007ebc:	f002 f928 	bl	800a110 <RCCEx_PLL2_Config>
 8007ec0:	4603      	mov	r3, r0
 8007ec2:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8007ec6:	e013      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007ec8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007ecc:	3328      	adds	r3, #40	; 0x28
 8007ece:	2100      	movs	r1, #0
 8007ed0:	4618      	mov	r0, r3
 8007ed2:	f002 f9cf 	bl	800a274 <RCCEx_PLL3_Config>
 8007ed6:	4603      	mov	r3, r0
 8007ed8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007edc:	e008      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        /* SAI4B clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8007ede:	2301      	movs	r3, #1
 8007ee0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007ee4:	e004      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007ee6:	bf00      	nop
 8007ee8:	e002      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007eea:	bf00      	nop
 8007eec:	e000      	b.n	8007ef0 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007eee:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007ef0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007ef4:	2b00      	cmp	r3, #0
 8007ef6:	d10d      	bne.n	8007f14 <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Set the source of SAI4B clock*/
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8007ef8:	4b05      	ldr	r3, [pc, #20]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007efa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007efc:	f023 61e0 	bic.w	r1, r3, #117440512	; 0x7000000
 8007f00:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007f04:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8007f08:	4a01      	ldr	r2, [pc, #4]	; (8007f10 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007f0a:	430b      	orrs	r3, r1
 8007f0c:	6593      	str	r3, [r2, #88]	; 0x58
 8007f0e:	e005      	b.n	8007f1c <HAL_RCCEx_PeriphCLKConfig+0x310>
 8007f10:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007f14:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007f18:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif  /*QUADSPI*/

#if defined(OCTOSPI1) || defined(OCTOSPI2)
  /*---------------------------- OCTOSPI configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8007f1c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007f20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f24:	f002 7300 	and.w	r3, r2, #33554432	; 0x2000000
 8007f28:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8007f2c:	2300      	movs	r3, #0
 8007f2e:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8007f32:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	; 0xf0
 8007f36:	460b      	mov	r3, r1
 8007f38:	4313      	orrs	r3, r2
 8007f3a:	d03a      	beq.n	8007fb2 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
  {
    switch (PeriphClkInit->OspiClockSelection)
 8007f3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007f40:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007f42:	2b30      	cmp	r3, #48	; 0x30
 8007f44:	d01f      	beq.n	8007f86 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8007f46:	2b30      	cmp	r3, #48	; 0x30
 8007f48:	d819      	bhi.n	8007f7e <HAL_RCCEx_PeriphCLKConfig+0x372>
 8007f4a:	2b20      	cmp	r3, #32
 8007f4c:	d00c      	beq.n	8007f68 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8007f4e:	2b20      	cmp	r3, #32
 8007f50:	d815      	bhi.n	8007f7e <HAL_RCCEx_PeriphCLKConfig+0x372>
 8007f52:	2b00      	cmp	r3, #0
 8007f54:	d019      	beq.n	8007f8a <HAL_RCCEx_PeriphCLKConfig+0x37e>
 8007f56:	2b10      	cmp	r3, #16
 8007f58:	d111      	bne.n	8007f7e <HAL_RCCEx_PeriphCLKConfig+0x372>
    {
      case RCC_OSPICLKSOURCE_PLL:      /* PLL is used as clock source for OSPI*/
        /* Enable OSPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007f5a:	4baa      	ldr	r3, [pc, #680]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007f5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f5e:	4aa9      	ldr	r2, [pc, #676]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007f60:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007f64:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8007f66:	e011      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x380>

      case RCC_OSPICLKSOURCE_PLL2: /* PLL2 is used as clock source for OSPI*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007f68:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007f6c:	3308      	adds	r3, #8
 8007f6e:	2102      	movs	r1, #2
 8007f70:	4618      	mov	r0, r3
 8007f72:	f002 f8cd 	bl	800a110 <RCCEx_PLL2_Config>
 8007f76:	4603      	mov	r3, r0
 8007f78:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8007f7c:	e006      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x380>
      case RCC_OSPICLKSOURCE_HCLK:
        /* HCLK clock selected as OSPI kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8007f7e:	2301      	movs	r3, #1
 8007f80:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8007f84:	e002      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8007f86:	bf00      	nop
 8007f88:	e000      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8007f8a:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007f8c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007f90:	2b00      	cmp	r3, #0
 8007f92:	d10a      	bne.n	8007faa <HAL_RCCEx_PeriphCLKConfig+0x39e>
    {
      /* Set the source of OSPI clock*/
      __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 8007f94:	4b9b      	ldr	r3, [pc, #620]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007f96:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007f98:	f023 0130 	bic.w	r1, r3, #48	; 0x30
 8007f9c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007fa0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007fa2:	4a98      	ldr	r2, [pc, #608]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007fa4:	430b      	orrs	r3, r1
 8007fa6:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007fa8:	e003      	b.n	8007fb2 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007faa:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8007fae:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif  /*OCTOSPI*/

  /*---------------------------- SPI1/2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 8007fb2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007fb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007fba:	f402 5380 	and.w	r3, r2, #4096	; 0x1000
 8007fbe:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8007fc2:	2300      	movs	r3, #0
 8007fc4:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8007fc8:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	; 0xe8
 8007fcc:	460b      	mov	r3, r1
 8007fce:	4313      	orrs	r3, r2
 8007fd0:	d051      	beq.n	8008076 <HAL_RCCEx_PeriphCLKConfig+0x46a>
  {
    switch (PeriphClkInit->Spi123ClockSelection)
 8007fd2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8007fd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007fd8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007fdc:	d035      	beq.n	800804a <HAL_RCCEx_PeriphCLKConfig+0x43e>
 8007fde:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007fe2:	d82e      	bhi.n	8008042 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007fe4:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8007fe8:	d031      	beq.n	800804e <HAL_RCCEx_PeriphCLKConfig+0x442>
 8007fea:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8007fee:	d828      	bhi.n	8008042 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007ff0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ff4:	d01a      	beq.n	800802c <HAL_RCCEx_PeriphCLKConfig+0x420>
 8007ff6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ffa:	d822      	bhi.n	8008042 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007ffc:	2b00      	cmp	r3, #0
 8007ffe:	d003      	beq.n	8008008 <HAL_RCCEx_PeriphCLKConfig+0x3fc>
 8008000:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008004:	d007      	beq.n	8008016 <HAL_RCCEx_PeriphCLKConfig+0x40a>
 8008006:	e01c      	b.n	8008042 <HAL_RCCEx_PeriphCLKConfig+0x436>
    {
      case RCC_SPI123CLKSOURCE_PLL:      /* PLL is used as clock source for SPI1/2/3 */
        /* Enable SPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008008:	4b7e      	ldr	r3, [pc, #504]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800800a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800800c:	4a7d      	ldr	r2, [pc, #500]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800800e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008012:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8008014:	e01c      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008016:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800801a:	3308      	adds	r3, #8
 800801c:	2100      	movs	r1, #0
 800801e:	4618      	mov	r0, r3
 8008020:	f002 f876 	bl	800a110 <RCCEx_PLL2_Config>
 8008024:	4603      	mov	r3, r0
 8008026:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 800802a:	e011      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 800802c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008030:	3328      	adds	r3, #40	; 0x28
 8008032:	2100      	movs	r1, #0
 8008034:	4618      	mov	r0, r3
 8008036:	f002 f91d 	bl	800a274 <RCCEx_PLL3_Config>
 800803a:	4603      	mov	r3, r0
 800803c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8008040:	e006      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1/2/3 clock */
        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008042:	2301      	movs	r3, #1
 8008044:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008048:	e002      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 800804a:	bf00      	nop
 800804c:	e000      	b.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 800804e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008050:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008054:	2b00      	cmp	r3, #0
 8008056:	d10a      	bne.n	800806e <HAL_RCCEx_PeriphCLKConfig+0x462>
    {
      /* Set the source of SPI1/2/3 clock*/
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8008058:	4b6a      	ldr	r3, [pc, #424]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 800805a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800805c:	f423 41e0 	bic.w	r1, r3, #28672	; 0x7000
 8008060:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008064:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008066:	4a67      	ldr	r2, [pc, #412]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008068:	430b      	orrs	r3, r1
 800806a:	6513      	str	r3, [r2, #80]	; 0x50
 800806c:	e003      	b.n	8008076 <HAL_RCCEx_PeriphCLKConfig+0x46a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800806e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008072:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SPI4/5 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8008076:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800807a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800807e:	f402 5300 	and.w	r3, r2, #8192	; 0x2000
 8008082:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8008086:	2300      	movs	r3, #0
 8008088:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800808c:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	; 0xe0
 8008090:	460b      	mov	r3, r1
 8008092:	4313      	orrs	r3, r2
 8008094:	d053      	beq.n	800813e <HAL_RCCEx_PeriphCLKConfig+0x532>
  {
    switch (PeriphClkInit->Spi45ClockSelection)
 8008096:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800809a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800809c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80080a0:	d033      	beq.n	800810a <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 80080a2:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80080a6:	d82c      	bhi.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80080a8:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80080ac:	d02f      	beq.n	800810e <HAL_RCCEx_PeriphCLKConfig+0x502>
 80080ae:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80080b2:	d826      	bhi.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80080b4:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80080b8:	d02b      	beq.n	8008112 <HAL_RCCEx_PeriphCLKConfig+0x506>
 80080ba:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80080be:	d820      	bhi.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80080c0:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80080c4:	d012      	beq.n	80080ec <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80080c6:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80080ca:	d81a      	bhi.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 80080cc:	2b00      	cmp	r3, #0
 80080ce:	d022      	beq.n	8008116 <HAL_RCCEx_PeriphCLKConfig+0x50a>
 80080d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80080d4:	d115      	bne.n	8008102 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI4/5 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80080d6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80080da:	3308      	adds	r3, #8
 80080dc:	2101      	movs	r1, #1
 80080de:	4618      	mov	r0, r3
 80080e0:	f002 f816 	bl	800a110 <RCCEx_PLL2_Config>
 80080e4:	4603      	mov	r3, r0
 80080e6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 80080ea:	e015      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
      case RCC_SPI45CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80080ec:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80080f0:	3328      	adds	r3, #40	; 0x28
 80080f2:	2101      	movs	r1, #1
 80080f4:	4618      	mov	r0, r3
 80080f6:	f002 f8bd 	bl	800a274 <RCCEx_PLL3_Config>
 80080fa:	4603      	mov	r3, r0
 80080fc:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8008100:	e00a      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        /* HSE,  oscillator is used as source of SPI4/5 clock */
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008102:	2301      	movs	r3, #1
 8008104:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008108:	e006      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 800810a:	bf00      	nop
 800810c:	e004      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 800810e:	bf00      	nop
 8008110:	e002      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8008112:	bf00      	nop
 8008114:	e000      	b.n	8008118 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8008116:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008118:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800811c:	2b00      	cmp	r3, #0
 800811e:	d10a      	bne.n	8008136 <HAL_RCCEx_PeriphCLKConfig+0x52a>
    {
      /* Set the source of SPI4/5 clock*/
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8008120:	4b38      	ldr	r3, [pc, #224]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008122:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008124:	f423 21e0 	bic.w	r1, r3, #458752	; 0x70000
 8008128:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800812c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800812e:	4a35      	ldr	r2, [pc, #212]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8008130:	430b      	orrs	r3, r1
 8008132:	6513      	str	r3, [r2, #80]	; 0x50
 8008134:	e003      	b.n	800813e <HAL_RCCEx_PeriphCLKConfig+0x532>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008136:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800813a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- SPI6 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 800813e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008142:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008146:	f402 4380 	and.w	r3, r2, #16384	; 0x4000
 800814a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800814e:	2300      	movs	r3, #0
 8008150:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8008154:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8008158:	460b      	mov	r3, r1
 800815a:	4313      	orrs	r3, r2
 800815c:	d058      	beq.n	8008210 <HAL_RCCEx_PeriphCLKConfig+0x604>
  {
    switch (PeriphClkInit->Spi6ClockSelection)
 800815e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008162:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8008166:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800816a:	d033      	beq.n	80081d4 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 800816c:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008170:	d82c      	bhi.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8008172:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008176:	d02f      	beq.n	80081d8 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8008178:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800817c:	d826      	bhi.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800817e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008182:	d02b      	beq.n	80081dc <HAL_RCCEx_PeriphCLKConfig+0x5d0>
 8008184:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008188:	d820      	bhi.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 800818a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800818e:	d012      	beq.n	80081b6 <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8008190:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008194:	d81a      	bhi.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8008196:	2b00      	cmp	r3, #0
 8008198:	d022      	beq.n	80081e0 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800819a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800819e:	d115      	bne.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI6*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80081a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80081a4:	3308      	adds	r3, #8
 80081a6:	2101      	movs	r1, #1
 80081a8:	4618      	mov	r0, r3
 80081aa:	f001 ffb1 	bl	800a110 <RCCEx_PLL2_Config>
 80081ae:	4603      	mov	r3, r0
 80081b0:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80081b4:	e015      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
      case RCC_SPI6CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI6*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80081b6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80081ba:	3328      	adds	r3, #40	; 0x28
 80081bc:	2101      	movs	r1, #1
 80081be:	4618      	mov	r0, r3
 80081c0:	f002 f858 	bl	800a274 <RCCEx_PLL3_Config>
 80081c4:	4603      	mov	r3, r0
 80081c6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80081ca:	e00a      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        /* SPI6 clock source configuration done later after clock selection check */
        break;
#endif

      default:
        ret = HAL_ERROR;
 80081cc:	2301      	movs	r3, #1
 80081ce:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80081d2:	e006      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80081d4:	bf00      	nop
 80081d6:	e004      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80081d8:	bf00      	nop
 80081da:	e002      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80081dc:	bf00      	nop
 80081de:	e000      	b.n	80081e2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 80081e0:	bf00      	nop
    }

    if (ret == HAL_OK)
 80081e2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80081e6:	2b00      	cmp	r3, #0
 80081e8:	d10e      	bne.n	8008208 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
    {
      /* Set the source of SPI6 clock*/
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 80081ea:	4b06      	ldr	r3, [pc, #24]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 80081ec:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80081ee:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 80081f2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80081f6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80081fa:	4a02      	ldr	r2, [pc, #8]	; (8008204 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 80081fc:	430b      	orrs	r3, r1
 80081fe:	6593      	str	r3, [r2, #88]	; 0x58
 8008200:	e006      	b.n	8008210 <HAL_RCCEx_PeriphCLKConfig+0x604>
 8008202:	bf00      	nop
 8008204:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008208:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800820c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
  }
#endif /*DSI*/

#if defined(FDCAN1) || defined(FDCAN2)
  /*---------------------------- FDCAN configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8008210:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008214:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008218:	f402 4300 	and.w	r3, r2, #32768	; 0x8000
 800821c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8008220:	2300      	movs	r3, #0
 8008222:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8008226:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	; 0xd0
 800822a:	460b      	mov	r3, r1
 800822c:	4313      	orrs	r3, r2
 800822e:	d037      	beq.n	80082a0 <HAL_RCCEx_PeriphCLKConfig+0x694>
  {
    switch (PeriphClkInit->FdcanClockSelection)
 8008230:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008234:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008236:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800823a:	d00e      	beq.n	800825a <HAL_RCCEx_PeriphCLKConfig+0x64e>
 800823c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008240:	d816      	bhi.n	8008270 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8008242:	2b00      	cmp	r3, #0
 8008244:	d018      	beq.n	8008278 <HAL_RCCEx_PeriphCLKConfig+0x66c>
 8008246:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800824a:	d111      	bne.n	8008270 <HAL_RCCEx_PeriphCLKConfig+0x664>
    {
      case RCC_FDCANCLKSOURCE_PLL:      /* PLL is used as clock source for FDCAN*/
        /* Enable FDCAN Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800824c:	4bc4      	ldr	r3, [pc, #784]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800824e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008250:	4ac3      	ldr	r2, [pc, #780]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008252:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008256:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 8008258:	e00f      	b.n	800827a <HAL_RCCEx_PeriphCLKConfig+0x66e>

      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is used as clock source for FDCAN*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800825a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800825e:	3308      	adds	r3, #8
 8008260:	2101      	movs	r1, #1
 8008262:	4618      	mov	r0, r3
 8008264:	f001 ff54 	bl	800a110 <RCCEx_PLL2_Config>
 8008268:	4603      	mov	r3, r0
 800826a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 800826e:	e004      	b.n	800827a <HAL_RCCEx_PeriphCLKConfig+0x66e>
        /* HSE is used as clock source for FDCAN*/
        /* FDCAN clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008270:	2301      	movs	r3, #1
 8008272:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008276:	e000      	b.n	800827a <HAL_RCCEx_PeriphCLKConfig+0x66e>
        break;
 8008278:	bf00      	nop
    }

    if (ret == HAL_OK)
 800827a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800827e:	2b00      	cmp	r3, #0
 8008280:	d10a      	bne.n	8008298 <HAL_RCCEx_PeriphCLKConfig+0x68c>
    {
      /* Set the source of FDCAN clock*/
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8008282:	4bb7      	ldr	r3, [pc, #732]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008284:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008286:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 800828a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800828e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008290:	4ab3      	ldr	r2, [pc, #716]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008292:	430b      	orrs	r3, r1
 8008294:	6513      	str	r3, [r2, #80]	; 0x50
 8008296:	e003      	b.n	80082a0 <HAL_RCCEx_PeriphCLKConfig+0x694>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008298:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800829c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif /*FDCAN1 || FDCAN2*/

  /*---------------------------- FMC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 80082a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80082a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082a8:	f002 7380 	and.w	r3, r2, #16777216	; 0x1000000
 80082ac:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80082b0:	2300      	movs	r3, #0
 80082b2:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80082b6:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	; 0xc8
 80082ba:	460b      	mov	r3, r1
 80082bc:	4313      	orrs	r3, r2
 80082be:	d039      	beq.n	8008334 <HAL_RCCEx_PeriphCLKConfig+0x728>
  {
    switch (PeriphClkInit->FmcClockSelection)
 80082c0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80082c4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80082c6:	2b03      	cmp	r3, #3
 80082c8:	d81c      	bhi.n	8008304 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
 80082ca:	a201      	add	r2, pc, #4	; (adr r2, 80082d0 <HAL_RCCEx_PeriphCLKConfig+0x6c4>)
 80082cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80082d0:	0800830d 	.word	0x0800830d
 80082d4:	080082e1 	.word	0x080082e1
 80082d8:	080082ef 	.word	0x080082ef
 80082dc:	0800830d 	.word	0x0800830d
    {
      case RCC_FMCCLKSOURCE_PLL:      /* PLL is used as clock source for FMC*/
        /* Enable FMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80082e0:	4b9f      	ldr	r3, [pc, #636]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80082e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082e4:	4a9e      	ldr	r2, [pc, #632]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80082e6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80082ea:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* FMC clock source configuration done later after clock selection check */
        break;
 80082ec:	e00f      	b.n	800830e <HAL_RCCEx_PeriphCLKConfig+0x702>

      case RCC_FMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for FMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80082ee:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80082f2:	3308      	adds	r3, #8
 80082f4:	2102      	movs	r1, #2
 80082f6:	4618      	mov	r0, r3
 80082f8:	f001 ff0a 	bl	800a110 <RCCEx_PLL2_Config>
 80082fc:	4603      	mov	r3, r0
 80082fe:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* FMC clock source configuration done later after clock selection check */
        break;
 8008302:	e004      	b.n	800830e <HAL_RCCEx_PeriphCLKConfig+0x702>
      case RCC_FMCCLKSOURCE_HCLK:
        /* D1/CD HCLK  clock selected as FMC kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8008304:	2301      	movs	r3, #1
 8008306:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800830a:	e000      	b.n	800830e <HAL_RCCEx_PeriphCLKConfig+0x702>
        break;
 800830c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800830e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008312:	2b00      	cmp	r3, #0
 8008314:	d10a      	bne.n	800832c <HAL_RCCEx_PeriphCLKConfig+0x720>
    {
      /* Set the source of FMC clock*/
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8008316:	4b92      	ldr	r3, [pc, #584]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008318:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800831a:	f023 0103 	bic.w	r1, r3, #3
 800831e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008322:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008324:	4a8e      	ldr	r2, [pc, #568]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008326:	430b      	orrs	r3, r1
 8008328:	64d3      	str	r3, [r2, #76]	; 0x4c
 800832a:	e003      	b.n	8008334 <HAL_RCCEx_PeriphCLKConfig+0x728>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800832c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008330:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- RTC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8008334:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008338:	e9d3 2300 	ldrd	r2, r3, [r3]
 800833c:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 8008340:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8008344:	2300      	movs	r3, #0
 8008346:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800834a:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800834e:	460b      	mov	r3, r1
 8008350:	4313      	orrs	r3, r2
 8008352:	f000 8099 	beq.w	8008488 <HAL_RCCEx_PeriphCLKConfig+0x87c>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8008356:	4b83      	ldr	r3, [pc, #524]	; (8008564 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008358:	681b      	ldr	r3, [r3, #0]
 800835a:	4a82      	ldr	r2, [pc, #520]	; (8008564 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800835c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008360:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8008362:	f7f9 fb95 	bl	8001a90 <HAL_GetTick>
 8008366:	f8c7 0110 	str.w	r0, [r7, #272]	; 0x110

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 800836a:	e00b      	b.n	8008384 <HAL_RCCEx_PeriphCLKConfig+0x778>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800836c:	f7f9 fb90 	bl	8001a90 <HAL_GetTick>
 8008370:	4602      	mov	r2, r0
 8008372:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8008376:	1ad3      	subs	r3, r2, r3
 8008378:	2b64      	cmp	r3, #100	; 0x64
 800837a:	d903      	bls.n	8008384 <HAL_RCCEx_PeriphCLKConfig+0x778>
      {
        ret = HAL_TIMEOUT;
 800837c:	2303      	movs	r3, #3
 800837e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008382:	e005      	b.n	8008390 <HAL_RCCEx_PeriphCLKConfig+0x784>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8008384:	4b77      	ldr	r3, [pc, #476]	; (8008564 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008386:	681b      	ldr	r3, [r3, #0]
 8008388:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800838c:	2b00      	cmp	r3, #0
 800838e:	d0ed      	beq.n	800836c <HAL_RCCEx_PeriphCLKConfig+0x760>
      }
    }

    if (ret == HAL_OK)
 8008390:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008394:	2b00      	cmp	r3, #0
 8008396:	d173      	bne.n	8008480 <HAL_RCCEx_PeriphCLKConfig+0x874>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8008398:	4b71      	ldr	r3, [pc, #452]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800839a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800839c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80083a0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80083a4:	4053      	eors	r3, r2
 80083a6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80083aa:	2b00      	cmp	r3, #0
 80083ac:	d015      	beq.n	80083da <HAL_RCCEx_PeriphCLKConfig+0x7ce>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80083ae:	4b6c      	ldr	r3, [pc, #432]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80083b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80083b6:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 80083ba:	4b69      	ldr	r3, [pc, #420]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80083be:	4a68      	ldr	r2, [pc, #416]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083c0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80083c4:	6713      	str	r3, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 80083c6:	4b66      	ldr	r3, [pc, #408]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80083ca:	4a65      	ldr	r2, [pc, #404]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083cc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80083d0:	6713      	str	r3, [r2, #112]	; 0x70
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpreg;
 80083d2:	4a63      	ldr	r2, [pc, #396]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80083d4:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80083d8:	6713      	str	r3, [r2, #112]	; 0x70
      }

      /* If LSE is selected as RTC clock source (and enabled prior to Backup Domain reset), wait for LSE reactivation */
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 80083da:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80083de:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80083e2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80083e6:	d118      	bne.n	800841a <HAL_RCCEx_PeriphCLKConfig+0x80e>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80083e8:	f7f9 fb52 	bl	8001a90 <HAL_GetTick>
 80083ec:	f8c7 0110 	str.w	r0, [r7, #272]	; 0x110

        /* Wait till LSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80083f0:	e00d      	b.n	800840e <HAL_RCCEx_PeriphCLKConfig+0x802>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80083f2:	f7f9 fb4d 	bl	8001a90 <HAL_GetTick>
 80083f6:	4602      	mov	r2, r0
 80083f8:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80083fc:	1ad2      	subs	r2, r2, r3
 80083fe:	f241 3388 	movw	r3, #5000	; 0x1388
 8008402:	429a      	cmp	r2, r3
 8008404:	d903      	bls.n	800840e <HAL_RCCEx_PeriphCLKConfig+0x802>
          {
            ret = HAL_TIMEOUT;
 8008406:	2303      	movs	r3, #3
 8008408:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
            break;
 800840c:	e005      	b.n	800841a <HAL_RCCEx_PeriphCLKConfig+0x80e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800840e:	4b54      	ldr	r3, [pc, #336]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008410:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008412:	f003 0302 	and.w	r3, r3, #2
 8008416:	2b00      	cmp	r3, #0
 8008418:	d0eb      	beq.n	80083f2 <HAL_RCCEx_PeriphCLKConfig+0x7e6>
          }
        }
      }

      if (ret == HAL_OK)
 800841a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800841e:	2b00      	cmp	r3, #0
 8008420:	d129      	bne.n	8008476 <HAL_RCCEx_PeriphCLKConfig+0x86a>
      {
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008422:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008426:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800842a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800842e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008432:	d10e      	bne.n	8008452 <HAL_RCCEx_PeriphCLKConfig+0x846>
 8008434:	4b4a      	ldr	r3, [pc, #296]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008436:	691b      	ldr	r3, [r3, #16]
 8008438:	f423 517c 	bic.w	r1, r3, #16128	; 0x3f00
 800843c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008440:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8008444:	091a      	lsrs	r2, r3, #4
 8008446:	4b48      	ldr	r3, [pc, #288]	; (8008568 <HAL_RCCEx_PeriphCLKConfig+0x95c>)
 8008448:	4013      	ands	r3, r2
 800844a:	4a45      	ldr	r2, [pc, #276]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800844c:	430b      	orrs	r3, r1
 800844e:	6113      	str	r3, [r2, #16]
 8008450:	e005      	b.n	800845e <HAL_RCCEx_PeriphCLKConfig+0x852>
 8008452:	4b43      	ldr	r3, [pc, #268]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008454:	691b      	ldr	r3, [r3, #16]
 8008456:	4a42      	ldr	r2, [pc, #264]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008458:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 800845c:	6113      	str	r3, [r2, #16]
 800845e:	4b40      	ldr	r3, [pc, #256]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008460:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8008462:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008466:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800846a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800846e:	4a3c      	ldr	r2, [pc, #240]	; (8008560 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008470:	430b      	orrs	r3, r1
 8008472:	6713      	str	r3, [r2, #112]	; 0x70
 8008474:	e008      	b.n	8008488 <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
      else
      {
        /* set overall return value */
        status = ret;
 8008476:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800847a:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
 800847e:	e003      	b.n	8008488 <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008480:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008484:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }


  /*-------------------------- USART1/6 configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8008488:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800848c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008490:	f002 0301 	and.w	r3, r2, #1
 8008494:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8008498:	2300      	movs	r3, #0
 800849a:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 800849e:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	; 0xb8
 80084a2:	460b      	mov	r3, r1
 80084a4:	4313      	orrs	r3, r2
 80084a6:	f000 808f 	beq.w	80085c8 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
  {
    switch (PeriphClkInit->Usart16ClockSelection)
 80084aa:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80084ae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80084b0:	2b28      	cmp	r3, #40	; 0x28
 80084b2:	d871      	bhi.n	8008598 <HAL_RCCEx_PeriphCLKConfig+0x98c>
 80084b4:	a201      	add	r2, pc, #4	; (adr r2, 80084bc <HAL_RCCEx_PeriphCLKConfig+0x8b0>)
 80084b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80084ba:	bf00      	nop
 80084bc:	080085a1 	.word	0x080085a1
 80084c0:	08008599 	.word	0x08008599
 80084c4:	08008599 	.word	0x08008599
 80084c8:	08008599 	.word	0x08008599
 80084cc:	08008599 	.word	0x08008599
 80084d0:	08008599 	.word	0x08008599
 80084d4:	08008599 	.word	0x08008599
 80084d8:	08008599 	.word	0x08008599
 80084dc:	0800856d 	.word	0x0800856d
 80084e0:	08008599 	.word	0x08008599
 80084e4:	08008599 	.word	0x08008599
 80084e8:	08008599 	.word	0x08008599
 80084ec:	08008599 	.word	0x08008599
 80084f0:	08008599 	.word	0x08008599
 80084f4:	08008599 	.word	0x08008599
 80084f8:	08008599 	.word	0x08008599
 80084fc:	08008583 	.word	0x08008583
 8008500:	08008599 	.word	0x08008599
 8008504:	08008599 	.word	0x08008599
 8008508:	08008599 	.word	0x08008599
 800850c:	08008599 	.word	0x08008599
 8008510:	08008599 	.word	0x08008599
 8008514:	08008599 	.word	0x08008599
 8008518:	08008599 	.word	0x08008599
 800851c:	080085a1 	.word	0x080085a1
 8008520:	08008599 	.word	0x08008599
 8008524:	08008599 	.word	0x08008599
 8008528:	08008599 	.word	0x08008599
 800852c:	08008599 	.word	0x08008599
 8008530:	08008599 	.word	0x08008599
 8008534:	08008599 	.word	0x08008599
 8008538:	08008599 	.word	0x08008599
 800853c:	080085a1 	.word	0x080085a1
 8008540:	08008599 	.word	0x08008599
 8008544:	08008599 	.word	0x08008599
 8008548:	08008599 	.word	0x08008599
 800854c:	08008599 	.word	0x08008599
 8008550:	08008599 	.word	0x08008599
 8008554:	08008599 	.word	0x08008599
 8008558:	08008599 	.word	0x08008599
 800855c:	080085a1 	.word	0x080085a1
 8008560:	58024400 	.word	0x58024400
 8008564:	58024800 	.word	0x58024800
 8008568:	00ffffcf 	.word	0x00ffffcf
      case RCC_USART16CLKSOURCE_PCLK2: /* CD/D2 PCLK2 as clock source for USART1/6 */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      case RCC_USART16CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART1/6 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800856c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008570:	3308      	adds	r3, #8
 8008572:	2101      	movs	r1, #1
 8008574:	4618      	mov	r0, r3
 8008576:	f001 fdcb 	bl	800a110 <RCCEx_PLL2_Config>
 800857a:	4603      	mov	r3, r0
 800857c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8008580:	e00f      	b.n	80085a2 <HAL_RCCEx_PeriphCLKConfig+0x996>

      case RCC_USART16CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART1/6 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008582:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008586:	3328      	adds	r3, #40	; 0x28
 8008588:	2101      	movs	r1, #1
 800858a:	4618      	mov	r0, r3
 800858c:	f001 fe72 	bl	800a274 <RCCEx_PLL3_Config>
 8008590:	4603      	mov	r3, r0
 8008592:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8008596:	e004      	b.n	80085a2 <HAL_RCCEx_PeriphCLKConfig+0x996>
        /* LSE,  oscillator is used as source of USART1/6 clock */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008598:	2301      	movs	r3, #1
 800859a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 800859e:	e000      	b.n	80085a2 <HAL_RCCEx_PeriphCLKConfig+0x996>
        break;
 80085a0:	bf00      	nop
    }

    if (ret == HAL_OK)
 80085a2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80085a6:	2b00      	cmp	r3, #0
 80085a8:	d10a      	bne.n	80085c0 <HAL_RCCEx_PeriphCLKConfig+0x9b4>
    {
      /* Set the source of USART1/6 clock */
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 80085aa:	4bbf      	ldr	r3, [pc, #764]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80085ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80085ae:	f023 0138 	bic.w	r1, r3, #56	; 0x38
 80085b2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085b6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80085b8:	4abb      	ldr	r2, [pc, #748]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80085ba:	430b      	orrs	r3, r1
 80085bc:	6553      	str	r3, [r2, #84]	; 0x54
 80085be:	e003      	b.n	80085c8 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80085c0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80085c4:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*-------------------------- USART2/3/4/5/7/8 Configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 80085c8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80085d0:	f002 0302 	and.w	r3, r2, #2
 80085d4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80085d8:	2300      	movs	r3, #0
 80085da:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80085de:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	; 0xb0
 80085e2:	460b      	mov	r3, r1
 80085e4:	4313      	orrs	r3, r2
 80085e6:	d041      	beq.n	800866c <HAL_RCCEx_PeriphCLKConfig+0xa60>
  {
    switch (PeriphClkInit->Usart234578ClockSelection)
 80085e8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80085ec:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80085ee:	2b05      	cmp	r3, #5
 80085f0:	d824      	bhi.n	800863c <HAL_RCCEx_PeriphCLKConfig+0xa30>
 80085f2:	a201      	add	r2, pc, #4	; (adr r2, 80085f8 <HAL_RCCEx_PeriphCLKConfig+0x9ec>)
 80085f4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80085f8:	08008645 	.word	0x08008645
 80085fc:	08008611 	.word	0x08008611
 8008600:	08008627 	.word	0x08008627
 8008604:	08008645 	.word	0x08008645
 8008608:	08008645 	.word	0x08008645
 800860c:	08008645 	.word	0x08008645
      case RCC_USART234578CLKSOURCE_PCLK1: /* CD/D2 PCLK1 as clock source for USART2/3/4/5/7/8 */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      case RCC_USART234578CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008610:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008614:	3308      	adds	r3, #8
 8008616:	2101      	movs	r1, #1
 8008618:	4618      	mov	r0, r3
 800861a:	f001 fd79 	bl	800a110 <RCCEx_PLL2_Config>
 800861e:	4603      	mov	r3, r0
 8008620:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 8008624:	e00f      	b.n	8008646 <HAL_RCCEx_PeriphCLKConfig+0xa3a>

      case RCC_USART234578CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008626:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800862a:	3328      	adds	r3, #40	; 0x28
 800862c:	2101      	movs	r1, #1
 800862e:	4618      	mov	r0, r3
 8008630:	f001 fe20 	bl	800a274 <RCCEx_PLL3_Config>
 8008634:	4603      	mov	r3, r0
 8008636:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 800863a:	e004      	b.n	8008646 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        /* LSE,  oscillator is used as source of USART2/3/4/5/7/8 clock */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800863c:	2301      	movs	r3, #1
 800863e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008642:	e000      	b.n	8008646 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        break;
 8008644:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008646:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800864a:	2b00      	cmp	r3, #0
 800864c:	d10a      	bne.n	8008664 <HAL_RCCEx_PeriphCLKConfig+0xa58>
    {
      /* Set the source of USART2/3/4/5/7/8 clock */
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 800864e:	4b96      	ldr	r3, [pc, #600]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008650:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008652:	f023 0107 	bic.w	r1, r3, #7
 8008656:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800865a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800865c:	4a92      	ldr	r2, [pc, #584]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800865e:	430b      	orrs	r3, r1
 8008660:	6553      	str	r3, [r2, #84]	; 0x54
 8008662:	e003      	b.n	800866c <HAL_RCCEx_PeriphCLKConfig+0xa60>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008664:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008668:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*-------------------------- LPUART1 Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 800866c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008670:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008674:	f002 0304 	and.w	r3, r2, #4
 8008678:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800867c:	2300      	movs	r3, #0
 800867e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008682:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8008686:	460b      	mov	r3, r1
 8008688:	4313      	orrs	r3, r2
 800868a:	d044      	beq.n	8008716 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
  {
    switch (PeriphClkInit->Lpuart1ClockSelection)
 800868c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008690:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008694:	2b05      	cmp	r3, #5
 8008696:	d825      	bhi.n	80086e4 <HAL_RCCEx_PeriphCLKConfig+0xad8>
 8008698:	a201      	add	r2, pc, #4	; (adr r2, 80086a0 <HAL_RCCEx_PeriphCLKConfig+0xa94>)
 800869a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800869e:	bf00      	nop
 80086a0:	080086ed 	.word	0x080086ed
 80086a4:	080086b9 	.word	0x080086b9
 80086a8:	080086cf 	.word	0x080086cf
 80086ac:	080086ed 	.word	0x080086ed
 80086b0:	080086ed 	.word	0x080086ed
 80086b4:	080086ed 	.word	0x080086ed
      case RCC_LPUART1CLKSOURCE_PCLK4: /* SRD/D3 PCLK1 (PCLK4) as clock source for LPUART1 */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPUART1 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80086b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80086bc:	3308      	adds	r3, #8
 80086be:	2101      	movs	r1, #1
 80086c0:	4618      	mov	r0, r3
 80086c2:	f001 fd25 	bl	800a110 <RCCEx_PLL2_Config>
 80086c6:	4603      	mov	r3, r0
 80086c8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 80086cc:	e00f      	b.n	80086ee <HAL_RCCEx_PeriphCLKConfig+0xae2>

      case RCC_LPUART1CLKSOURCE_PLL3: /* PLL3 is used as clock source for LPUART1 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80086ce:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80086d2:	3328      	adds	r3, #40	; 0x28
 80086d4:	2101      	movs	r1, #1
 80086d6:	4618      	mov	r0, r3
 80086d8:	f001 fdcc 	bl	800a274 <RCCEx_PLL3_Config>
 80086dc:	4603      	mov	r3, r0
 80086de:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 80086e2:	e004      	b.n	80086ee <HAL_RCCEx_PeriphCLKConfig+0xae2>
        /* LSE,  oscillator is used as source of LPUART1 clock */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80086e4:	2301      	movs	r3, #1
 80086e6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80086ea:	e000      	b.n	80086ee <HAL_RCCEx_PeriphCLKConfig+0xae2>
        break;
 80086ec:	bf00      	nop
    }

    if (ret == HAL_OK)
 80086ee:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80086f2:	2b00      	cmp	r3, #0
 80086f4:	d10b      	bne.n	800870e <HAL_RCCEx_PeriphCLKConfig+0xb02>
    {
      /* Set the source of LPUART1 clock */
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 80086f6:	4b6c      	ldr	r3, [pc, #432]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80086f8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80086fa:	f023 0107 	bic.w	r1, r3, #7
 80086fe:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008702:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008706:	4a68      	ldr	r2, [pc, #416]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008708:	430b      	orrs	r3, r1
 800870a:	6593      	str	r3, [r2, #88]	; 0x58
 800870c:	e003      	b.n	8008716 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800870e:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008712:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8008716:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800871a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800871e:	f002 0320 	and.w	r3, r2, #32
 8008722:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8008726:	2300      	movs	r3, #0
 8008728:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800872c:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	; 0xa0
 8008730:	460b      	mov	r3, r1
 8008732:	4313      	orrs	r3, r2
 8008734:	d055      	beq.n	80087e2 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
  {
    switch (PeriphClkInit->Lptim1ClockSelection)
 8008736:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800873a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800873e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008742:	d033      	beq.n	80087ac <HAL_RCCEx_PeriphCLKConfig+0xba0>
 8008744:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008748:	d82c      	bhi.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800874a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800874e:	d02f      	beq.n	80087b0 <HAL_RCCEx_PeriphCLKConfig+0xba4>
 8008750:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008754:	d826      	bhi.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8008756:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800875a:	d02b      	beq.n	80087b4 <HAL_RCCEx_PeriphCLKConfig+0xba8>
 800875c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008760:	d820      	bhi.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8008762:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008766:	d012      	beq.n	800878e <HAL_RCCEx_PeriphCLKConfig+0xb82>
 8008768:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800876c:	d81a      	bhi.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800876e:	2b00      	cmp	r3, #0
 8008770:	d022      	beq.n	80087b8 <HAL_RCCEx_PeriphCLKConfig+0xbac>
 8008772:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008776:	d115      	bne.n	80087a4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008778:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800877c:	3308      	adds	r3, #8
 800877e:	2100      	movs	r1, #0
 8008780:	4618      	mov	r0, r3
 8008782:	f001 fcc5 	bl	800a110 <RCCEx_PLL2_Config>
 8008786:	4603      	mov	r3, r0
 8008788:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 800878c:	e015      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>

      case RCC_LPTIM1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800878e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008792:	3328      	adds	r3, #40	; 0x28
 8008794:	2102      	movs	r1, #2
 8008796:	4618      	mov	r0, r3
 8008798:	f001 fd6c 	bl	800a274 <RCCEx_PLL3_Config>
 800879c:	4603      	mov	r3, r0
 800879e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 80087a2:	e00a      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM1 clock */
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80087a4:	2301      	movs	r3, #1
 80087a6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 80087aa:	e006      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80087ac:	bf00      	nop
 80087ae:	e004      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80087b0:	bf00      	nop
 80087b2:	e002      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80087b4:	bf00      	nop
 80087b6:	e000      	b.n	80087ba <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 80087b8:	bf00      	nop
    }

    if (ret == HAL_OK)
 80087ba:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80087be:	2b00      	cmp	r3, #0
 80087c0:	d10b      	bne.n	80087da <HAL_RCCEx_PeriphCLKConfig+0xbce>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 80087c2:	4b39      	ldr	r3, [pc, #228]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80087c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80087c6:	f023 41e0 	bic.w	r1, r3, #1879048192	; 0x70000000
 80087ca:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80087ce:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80087d2:	4a35      	ldr	r2, [pc, #212]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80087d4:	430b      	orrs	r3, r1
 80087d6:	6553      	str	r3, [r2, #84]	; 0x54
 80087d8:	e003      	b.n	80087e2 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80087da:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80087de:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 80087e2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80087e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087ea:	f002 0340 	and.w	r3, r2, #64	; 0x40
 80087ee:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80087f2:	2300      	movs	r3, #0
 80087f4:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80087f8:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	; 0x98
 80087fc:	460b      	mov	r3, r1
 80087fe:	4313      	orrs	r3, r2
 8008800:	d058      	beq.n	80088b4 <HAL_RCCEx_PeriphCLKConfig+0xca8>
  {
    switch (PeriphClkInit->Lptim2ClockSelection)
 8008802:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008806:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800880a:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 800880e:	d033      	beq.n	8008878 <HAL_RCCEx_PeriphCLKConfig+0xc6c>
 8008810:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8008814:	d82c      	bhi.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008816:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800881a:	d02f      	beq.n	800887c <HAL_RCCEx_PeriphCLKConfig+0xc70>
 800881c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008820:	d826      	bhi.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008822:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008826:	d02b      	beq.n	8008880 <HAL_RCCEx_PeriphCLKConfig+0xc74>
 8008828:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800882c:	d820      	bhi.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800882e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008832:	d012      	beq.n	800885a <HAL_RCCEx_PeriphCLKConfig+0xc4e>
 8008834:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8008838:	d81a      	bhi.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800883a:	2b00      	cmp	r3, #0
 800883c:	d022      	beq.n	8008884 <HAL_RCCEx_PeriphCLKConfig+0xc78>
 800883e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008842:	d115      	bne.n	8008870 <HAL_RCCEx_PeriphCLKConfig+0xc64>
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008844:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008848:	3308      	adds	r3, #8
 800884a:	2100      	movs	r1, #0
 800884c:	4618      	mov	r0, r3
 800884e:	f001 fc5f 	bl	800a110 <RCCEx_PLL2_Config>
 8008852:	4603      	mov	r3, r0
 8008854:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 8008858:	e015      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>

      case RCC_LPTIM2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800885a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800885e:	3328      	adds	r3, #40	; 0x28
 8008860:	2102      	movs	r1, #2
 8008862:	4618      	mov	r0, r3
 8008864:	f001 fd06 	bl	800a274 <RCCEx_PLL3_Config>
 8008868:	4603      	mov	r3, r0
 800886a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 800886e:	e00a      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM2 clock */
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008870:	2301      	movs	r3, #1
 8008872:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008876:	e006      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008878:	bf00      	nop
 800887a:	e004      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 800887c:	bf00      	nop
 800887e:	e002      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008880:	bf00      	nop
 8008882:	e000      	b.n	8008886 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008884:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008886:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800888a:	2b00      	cmp	r3, #0
 800888c:	d10e      	bne.n	80088ac <HAL_RCCEx_PeriphCLKConfig+0xca0>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 800888e:	4b06      	ldr	r3, [pc, #24]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008890:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008892:	f423 51e0 	bic.w	r1, r3, #7168	; 0x1c00
 8008896:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800889a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800889e:	4a02      	ldr	r2, [pc, #8]	; (80088a8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80088a0:	430b      	orrs	r3, r1
 80088a2:	6593      	str	r3, [r2, #88]	; 0x58
 80088a4:	e006      	b.n	80088b4 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 80088a6:	bf00      	nop
 80088a8:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 80088ac:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80088b0:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*---------------------------- LPTIM345 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 80088b4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80088b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088bc:	f002 0380 	and.w	r3, r2, #128	; 0x80
 80088c0:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80088c4:	2300      	movs	r3, #0
 80088c6:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80088ca:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	; 0x90
 80088ce:	460b      	mov	r3, r1
 80088d0:	4313      	orrs	r3, r2
 80088d2:	d055      	beq.n	8008980 <HAL_RCCEx_PeriphCLKConfig+0xd74>
  {
    switch (PeriphClkInit->Lptim345ClockSelection)
 80088d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80088d8:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80088dc:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 80088e0:	d033      	beq.n	800894a <HAL_RCCEx_PeriphCLKConfig+0xd3e>
 80088e2:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 80088e6:	d82c      	bhi.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 80088e8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80088ec:	d02f      	beq.n	800894e <HAL_RCCEx_PeriphCLKConfig+0xd42>
 80088ee:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80088f2:	d826      	bhi.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 80088f4:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80088f8:	d02b      	beq.n	8008952 <HAL_RCCEx_PeriphCLKConfig+0xd46>
 80088fa:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 80088fe:	d820      	bhi.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008900:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008904:	d012      	beq.n	800892c <HAL_RCCEx_PeriphCLKConfig+0xd20>
 8008906:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800890a:	d81a      	bhi.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800890c:	2b00      	cmp	r3, #0
 800890e:	d022      	beq.n	8008956 <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 8008910:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008914:	d115      	bne.n	8008942 <HAL_RCCEx_PeriphCLKConfig+0xd36>
      case RCC_LPTIM345CLKSOURCE_PCLK4:      /* SRD/D3 PCLK1 (PCLK4) as clock source for LPTIM3/4/5 */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM345CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008916:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800891a:	3308      	adds	r3, #8
 800891c:	2100      	movs	r1, #0
 800891e:	4618      	mov	r0, r3
 8008920:	f001 fbf6 	bl	800a110 <RCCEx_PLL2_Config>
 8008924:	4603      	mov	r3, r0
 8008926:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 800892a:	e015      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>

      case RCC_LPTIM345CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800892c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008930:	3328      	adds	r3, #40	; 0x28
 8008932:	2102      	movs	r1, #2
 8008934:	4618      	mov	r0, r3
 8008936:	f001 fc9d 	bl	800a274 <RCCEx_PLL3_Config>
 800893a:	4603      	mov	r3, r0
 800893c:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 8008940:	e00a      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM3/4/5 clock */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008942:	2301      	movs	r3, #1
 8008944:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008948:	e006      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 800894a:	bf00      	nop
 800894c:	e004      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 800894e:	bf00      	nop
 8008950:	e002      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8008952:	bf00      	nop
 8008954:	e000      	b.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 8008956:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008958:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800895c:	2b00      	cmp	r3, #0
 800895e:	d10b      	bne.n	8008978 <HAL_RCCEx_PeriphCLKConfig+0xd6c>
    {
      /* Set the source of LPTIM3/4/5 clock */
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8008960:	4ba0      	ldr	r3, [pc, #640]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008962:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008964:	f423 4160 	bic.w	r1, r3, #57344	; 0xe000
 8008968:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 800896c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008970:	4a9c      	ldr	r2, [pc, #624]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008972:	430b      	orrs	r3, r1
 8008974:	6593      	str	r3, [r2, #88]	; 0x58
 8008976:	e003      	b.n	8008980 <HAL_RCCEx_PeriphCLKConfig+0xd74>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008978:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 800897c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*------------------------------ I2C1/2/3/5* Configuration ------------------------*/
#if defined(I2C5)
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1235) == RCC_PERIPHCLK_I2C1235)
 8008980:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008984:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008988:	f002 0308 	and.w	r3, r2, #8
 800898c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008990:	2300      	movs	r3, #0
 8008992:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8008996:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	; 0x88
 800899a:	460b      	mov	r3, r1
 800899c:	4313      	orrs	r3, r2
 800899e:	d01e      	beq.n	80089de <HAL_RCCEx_PeriphCLKConfig+0xdd2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1235CLKSOURCE(PeriphClkInit->I2c1235ClockSelection));

    if ((PeriphClkInit->I2c1235ClockSelection) == RCC_I2C1235CLKSOURCE_PLL3)
 80089a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80089a8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80089ac:	d10c      	bne.n	80089c8 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 80089ae:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089b2:	3328      	adds	r3, #40	; 0x28
 80089b4:	2102      	movs	r1, #2
 80089b6:	4618      	mov	r0, r3
 80089b8:	f001 fc5c 	bl	800a274 <RCCEx_PLL3_Config>
 80089bc:	4603      	mov	r3, r0
 80089be:	2b00      	cmp	r3, #0
 80089c0:	d002      	beq.n	80089c8 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      {
        status = HAL_ERROR;
 80089c2:	2301      	movs	r3, #1
 80089c4:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
      }
    }

    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);
 80089c8:	4b86      	ldr	r3, [pc, #536]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80089ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80089cc:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80089d0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80089d8:	4a82      	ldr	r2, [pc, #520]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80089da:	430b      	orrs	r3, r1
 80089dc:	6553      	str	r3, [r2, #84]	; 0x54

  }
#endif /* I2C5 */

  /*------------------------------ I2C4 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80089de:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 80089e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089e6:	f002 0310 	and.w	r3, r2, #16
 80089ea:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80089ee:	2300      	movs	r3, #0
 80089f0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80089f4:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	; 0x80
 80089f8:	460b      	mov	r3, r1
 80089fa:	4313      	orrs	r3, r2
 80089fc:	d01e      	beq.n	8008a3c <HAL_RCCEx_PeriphCLKConfig+0xe30>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 80089fe:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a02:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008a06:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008a0a:	d10c      	bne.n	8008a26 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008a0c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a10:	3328      	adds	r3, #40	; 0x28
 8008a12:	2102      	movs	r1, #2
 8008a14:	4618      	mov	r0, r3
 8008a16:	f001 fc2d 	bl	800a274 <RCCEx_PLL3_Config>
 8008a1a:	4603      	mov	r3, r0
 8008a1c:	2b00      	cmp	r3, #0
 8008a1e:	d002      	beq.n	8008a26 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
      {
        status = HAL_ERROR;
 8008a20:	2301      	movs	r3, #1
 8008a22:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
      }
    }

    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8008a26:	4b6f      	ldr	r3, [pc, #444]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008a28:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008a2a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8008a2e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a32:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008a36:	4a6b      	ldr	r2, [pc, #428]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008a38:	430b      	orrs	r3, r1
 8008a3a:	6593      	str	r3, [r2, #88]	; 0x58

  }

  /*---------------------------- ADC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8008a3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a44:	f402 2300 	and.w	r3, r2, #524288	; 0x80000
 8008a48:	67bb      	str	r3, [r7, #120]	; 0x78
 8008a4a:	2300      	movs	r3, #0
 8008a4c:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008a4e:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	; 0x78
 8008a52:	460b      	mov	r3, r1
 8008a54:	4313      	orrs	r3, r2
 8008a56:	d03e      	beq.n	8008ad6 <HAL_RCCEx_PeriphCLKConfig+0xeca>
  {
    switch (PeriphClkInit->AdcClockSelection)
 8008a58:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a5c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008a60:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008a64:	d022      	beq.n	8008aac <HAL_RCCEx_PeriphCLKConfig+0xea0>
 8008a66:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008a6a:	d81b      	bhi.n	8008aa4 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 8008a6c:	2b00      	cmp	r3, #0
 8008a6e:	d003      	beq.n	8008a78 <HAL_RCCEx_PeriphCLKConfig+0xe6c>
 8008a70:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008a74:	d00b      	beq.n	8008a8e <HAL_RCCEx_PeriphCLKConfig+0xe82>
 8008a76:	e015      	b.n	8008aa4 <HAL_RCCEx_PeriphCLKConfig+0xe98>
    {

      case RCC_ADCCLKSOURCE_PLL2: /* PLL2 is used as clock source for ADC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008a78:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a7c:	3308      	adds	r3, #8
 8008a7e:	2100      	movs	r1, #0
 8008a80:	4618      	mov	r0, r3
 8008a82:	f001 fb45 	bl	800a110 <RCCEx_PLL2_Config>
 8008a86:	4603      	mov	r3, r0
 8008a88:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008a8c:	e00f      	b.n	8008aae <HAL_RCCEx_PeriphCLKConfig+0xea2>

      case RCC_ADCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for ADC*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008a8e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008a92:	3328      	adds	r3, #40	; 0x28
 8008a94:	2102      	movs	r1, #2
 8008a96:	4618      	mov	r0, r3
 8008a98:	f001 fbec 	bl	800a274 <RCCEx_PLL3_Config>
 8008a9c:	4603      	mov	r3, r0
 8008a9e:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008aa2:	e004      	b.n	8008aae <HAL_RCCEx_PeriphCLKConfig+0xea2>
        /* HSI, HSE, or CSI oscillator is used as source of ADC clock */
        /* ADC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008aa4:	2301      	movs	r3, #1
 8008aa6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008aaa:	e000      	b.n	8008aae <HAL_RCCEx_PeriphCLKConfig+0xea2>
        break;
 8008aac:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008aae:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ab2:	2b00      	cmp	r3, #0
 8008ab4:	d10b      	bne.n	8008ace <HAL_RCCEx_PeriphCLKConfig+0xec2>
    {
      /* Set the source of ADC clock*/
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8008ab6:	4b4b      	ldr	r3, [pc, #300]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008ab8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008aba:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8008abe:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ac2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008ac6:	4a47      	ldr	r2, [pc, #284]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008ac8:	430b      	orrs	r3, r1
 8008aca:	6593      	str	r3, [r2, #88]	; 0x58
 8008acc:	e003      	b.n	8008ad6 <HAL_RCCEx_PeriphCLKConfig+0xeca>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ace:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ad2:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

  /*------------------------------ USB Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8008ad6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ada:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ade:	f402 2380 	and.w	r3, r2, #262144	; 0x40000
 8008ae2:	673b      	str	r3, [r7, #112]	; 0x70
 8008ae4:	2300      	movs	r3, #0
 8008ae6:	677b      	str	r3, [r7, #116]	; 0x74
 8008ae8:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	; 0x70
 8008aec:	460b      	mov	r3, r1
 8008aee:	4313      	orrs	r3, r2
 8008af0:	d03b      	beq.n	8008b6a <HAL_RCCEx_PeriphCLKConfig+0xf5e>
  {

    switch (PeriphClkInit->UsbClockSelection)
 8008af2:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008af6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008afa:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008afe:	d01f      	beq.n	8008b40 <HAL_RCCEx_PeriphCLKConfig+0xf34>
 8008b00:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008b04:	d818      	bhi.n	8008b38 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 8008b06:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008b0a:	d003      	beq.n	8008b14 <HAL_RCCEx_PeriphCLKConfig+0xf08>
 8008b0c:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008b10:	d007      	beq.n	8008b22 <HAL_RCCEx_PeriphCLKConfig+0xf16>
 8008b12:	e011      	b.n	8008b38 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
    {
      case RCC_USBCLKSOURCE_PLL:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008b14:	4b33      	ldr	r3, [pc, #204]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b18:	4a32      	ldr	r2, [pc, #200]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b1a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008b1e:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* USB clock source configuration done later after clock selection check */
        break;
 8008b20:	e00f      	b.n	8008b42 <HAL_RCCEx_PeriphCLKConfig+0xf36>

      case RCC_USBCLKSOURCE_PLL3: /* PLL3 is used as clock source for USB*/

        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008b22:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b26:	3328      	adds	r3, #40	; 0x28
 8008b28:	2101      	movs	r1, #1
 8008b2a:	4618      	mov	r0, r3
 8008b2c:	f001 fba2 	bl	800a274 <RCCEx_PLL3_Config>
 8008b30:	4603      	mov	r3, r0
 8008b32:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* USB clock source configuration done later after clock selection check */
        break;
 8008b36:	e004      	b.n	8008b42 <HAL_RCCEx_PeriphCLKConfig+0xf36>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008b38:	2301      	movs	r3, #1
 8008b3a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008b3e:	e000      	b.n	8008b42 <HAL_RCCEx_PeriphCLKConfig+0xf36>
        break;
 8008b40:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008b42:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008b46:	2b00      	cmp	r3, #0
 8008b48:	d10b      	bne.n	8008b62 <HAL_RCCEx_PeriphCLKConfig+0xf56>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8008b4a:	4b26      	ldr	r3, [pc, #152]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b4c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008b4e:	f423 1140 	bic.w	r1, r3, #3145728	; 0x300000
 8008b52:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b56:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8008b5a:	4a22      	ldr	r2, [pc, #136]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b5c:	430b      	orrs	r3, r1
 8008b5e:	6553      	str	r3, [r2, #84]	; 0x54
 8008b60:	e003      	b.n	8008b6a <HAL_RCCEx_PeriphCLKConfig+0xf5e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008b62:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008b66:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }

  }

  /*------------------------------------- SDMMC Configuration ------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8008b6a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b72:	f402 3380 	and.w	r3, r2, #65536	; 0x10000
 8008b76:	66bb      	str	r3, [r7, #104]	; 0x68
 8008b78:	2300      	movs	r3, #0
 8008b7a:	66fb      	str	r3, [r7, #108]	; 0x6c
 8008b7c:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	; 0x68
 8008b80:	460b      	mov	r3, r1
 8008b82:	4313      	orrs	r3, r2
 8008b84:	d034      	beq.n	8008bf0 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC(PeriphClkInit->SdmmcClockSelection));

    switch (PeriphClkInit->SdmmcClockSelection)
 8008b86:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008b8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008b8c:	2b00      	cmp	r3, #0
 8008b8e:	d003      	beq.n	8008b98 <HAL_RCCEx_PeriphCLKConfig+0xf8c>
 8008b90:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008b94:	d007      	beq.n	8008ba6 <HAL_RCCEx_PeriphCLKConfig+0xf9a>
 8008b96:	e011      	b.n	8008bbc <HAL_RCCEx_PeriphCLKConfig+0xfb0>
    {
      case RCC_SDMMCCLKSOURCE_PLL:      /* PLL is used as clock source for SDMMC*/
        /* Enable SDMMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008b98:	4b12      	ldr	r3, [pc, #72]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b9c:	4a11      	ldr	r2, [pc, #68]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008b9e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008ba2:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008ba4:	e00e      	b.n	8008bc4 <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for SDMMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008ba6:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008baa:	3308      	adds	r3, #8
 8008bac:	2102      	movs	r1, #2
 8008bae:	4618      	mov	r0, r3
 8008bb0:	f001 faae 	bl	800a110 <RCCEx_PLL2_Config>
 8008bb4:	4603      	mov	r3, r0
 8008bb6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008bba:	e003      	b.n	8008bc4 <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      default:
        ret = HAL_ERROR;
 8008bbc:	2301      	movs	r3, #1
 8008bbe:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008bc2:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008bc4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008bc8:	2b00      	cmp	r3, #0
 8008bca:	d10d      	bne.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0xfdc>
    {
      /* Set the source of SDMMC clock*/
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8008bcc:	4b05      	ldr	r3, [pc, #20]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008bce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008bd0:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8008bd4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008bd8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008bda:	4a02      	ldr	r2, [pc, #8]	; (8008be4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008bdc:	430b      	orrs	r3, r1
 8008bde:	64d3      	str	r3, [r2, #76]	; 0x4c
 8008be0:	e006      	b.n	8008bf0 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 8008be2:	bf00      	nop
 8008be4:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008be8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008bec:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }

#if defined(LTDC)
  /*-------------------------------------- LTDC Configuration -----------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8008bf0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008bf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008bf8:	f002 5300 	and.w	r3, r2, #536870912	; 0x20000000
 8008bfc:	663b      	str	r3, [r7, #96]	; 0x60
 8008bfe:	2300      	movs	r3, #0
 8008c00:	667b      	str	r3, [r7, #100]	; 0x64
 8008c02:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 8008c06:	460b      	mov	r3, r1
 8008c08:	4313      	orrs	r3, r2
 8008c0a:	d00c      	beq.n	8008c26 <HAL_RCCEx_PeriphCLKConfig+0x101a>
  {
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008c0c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c10:	3328      	adds	r3, #40	; 0x28
 8008c12:	2102      	movs	r1, #2
 8008c14:	4618      	mov	r0, r3
 8008c16:	f001 fb2d 	bl	800a274 <RCCEx_PLL3_Config>
 8008c1a:	4603      	mov	r3, r0
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	d002      	beq.n	8008c26 <HAL_RCCEx_PeriphCLKConfig+0x101a>
    {
      status = HAL_ERROR;
 8008c20:	2301      	movs	r3, #1
 8008c22:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
#endif /* LTDC */

  /*------------------------------ RNG Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8008c26:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c2e:	f402 3300 	and.w	r3, r2, #131072	; 0x20000
 8008c32:	65bb      	str	r3, [r7, #88]	; 0x58
 8008c34:	2300      	movs	r3, #0
 8008c36:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008c38:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	; 0x58
 8008c3c:	460b      	mov	r3, r1
 8008c3e:	4313      	orrs	r3, r2
 8008c40:	d036      	beq.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
  {

    switch (PeriphClkInit->RngClockSelection)
 8008c42:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c46:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008c48:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008c4c:	d018      	beq.n	8008c80 <HAL_RCCEx_PeriphCLKConfig+0x1074>
 8008c4e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008c52:	d811      	bhi.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8008c54:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008c58:	d014      	beq.n	8008c84 <HAL_RCCEx_PeriphCLKConfig+0x1078>
 8008c5a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008c5e:	d80b      	bhi.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8008c60:	2b00      	cmp	r3, #0
 8008c62:	d011      	beq.n	8008c88 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 8008c64:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008c68:	d106      	bne.n	8008c78 <HAL_RCCEx_PeriphCLKConfig+0x106c>
    {
      case RCC_RNGCLKSOURCE_PLL:     /* PLL is used as clock source for RNG*/
        /* Enable RNG Clock output generated form System RNG . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008c6a:	4bb7      	ldr	r3, [pc, #732]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008c6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c6e:	4ab6      	ldr	r2, [pc, #728]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008c70:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008c74:	62d3      	str	r3, [r2, #44]	; 0x2c

        /* RNG clock source configuration done later after clock selection check */
        break;
 8008c76:	e008      	b.n	8008c8a <HAL_RCCEx_PeriphCLKConfig+0x107e>
        /* HSI48 oscillator is used as source of RNG clock */
        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008c78:	2301      	movs	r3, #1
 8008c7a:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        break;
 8008c7e:	e004      	b.n	8008c8a <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8008c80:	bf00      	nop
 8008c82:	e002      	b.n	8008c8a <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8008c84:	bf00      	nop
 8008c86:	e000      	b.n	8008c8a <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8008c88:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008c8a:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008c8e:	2b00      	cmp	r3, #0
 8008c90:	d10a      	bne.n	8008ca8 <HAL_RCCEx_PeriphCLKConfig+0x109c>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8008c92:	4bad      	ldr	r3, [pc, #692]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008c94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008c96:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8008c9a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008c9e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008ca0:	4aa9      	ldr	r2, [pc, #676]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008ca2:	430b      	orrs	r3, r1
 8008ca4:	6553      	str	r3, [r2, #84]	; 0x54
 8008ca6:	e003      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ca8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008cac:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }

  }

  /*------------------------------ SWPMI1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8008cb0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008cb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008cb8:	f402 1380 	and.w	r3, r2, #1048576	; 0x100000
 8008cbc:	653b      	str	r3, [r7, #80]	; 0x50
 8008cbe:	2300      	movs	r3, #0
 8008cc0:	657b      	str	r3, [r7, #84]	; 0x54
 8008cc2:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	; 0x50
 8008cc6:	460b      	mov	r3, r1
 8008cc8:	4313      	orrs	r3, r2
 8008cca:	d009      	beq.n	8008ce0 <HAL_RCCEx_PeriphCLKConfig+0x10d4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 interface clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8008ccc:	4b9e      	ldr	r3, [pc, #632]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008cce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008cd0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8008cd4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008cd8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008cda:	4a9b      	ldr	r2, [pc, #620]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008cdc:	430b      	orrs	r3, r1
 8008cde:	6513      	str	r3, [r2, #80]	; 0x50
    /* Configure the HRTIM1 clock source */
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
  }
#endif  /*HRTIM1*/
  /*------------------------------ DFSDM1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8008ce0:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ce4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ce8:	f402 1300 	and.w	r3, r2, #2097152	; 0x200000
 8008cec:	64bb      	str	r3, [r7, #72]	; 0x48
 8008cee:	2300      	movs	r3, #0
 8008cf0:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008cf2:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	; 0x48
 8008cf6:	460b      	mov	r3, r1
 8008cf8:	4313      	orrs	r3, r2
 8008cfa:	d009      	beq.n	8008d10 <HAL_RCCEx_PeriphCLKConfig+0x1104>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8008cfc:	4b92      	ldr	r3, [pc, #584]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008cfe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008d00:	f023 7180 	bic.w	r1, r3, #16777216	; 0x1000000
 8008d04:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d08:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008d0a:	4a8f      	ldr	r2, [pc, #572]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d0c:	430b      	orrs	r3, r1
 8008d0e:	6513      	str	r3, [r2, #80]	; 0x50
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
  }
#endif  /* DFSDM2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8008d10:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d18:	f002 4380 	and.w	r3, r2, #1073741824	; 0x40000000
 8008d1c:	643b      	str	r3, [r7, #64]	; 0x40
 8008d1e:	2300      	movs	r3, #0
 8008d20:	647b      	str	r3, [r7, #68]	; 0x44
 8008d22:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 8008d26:	460b      	mov	r3, r1
 8008d28:	4313      	orrs	r3, r2
 8008d2a:	d00e      	beq.n	8008d4a <HAL_RCCEx_PeriphCLKConfig+0x113e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8008d2c:	4b86      	ldr	r3, [pc, #536]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d2e:	691b      	ldr	r3, [r3, #16]
 8008d30:	4a85      	ldr	r2, [pc, #532]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d32:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8008d36:	6113      	str	r3, [r2, #16]
 8008d38:	4b83      	ldr	r3, [pc, #524]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d3a:	6919      	ldr	r1, [r3, #16]
 8008d3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d40:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008d44:	4a80      	ldr	r2, [pc, #512]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d46:	430b      	orrs	r3, r1
 8008d48:	6113      	str	r3, [r2, #16]
  }

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8008d4a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d52:	f002 4300 	and.w	r3, r2, #2147483648	; 0x80000000
 8008d56:	63bb      	str	r3, [r7, #56]	; 0x38
 8008d58:	2300      	movs	r3, #0
 8008d5a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008d5c:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
 8008d60:	460b      	mov	r3, r1
 8008d62:	4313      	orrs	r3, r2
 8008d64:	d009      	beq.n	8008d7a <HAL_RCCEx_PeriphCLKConfig+0x116e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(PeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8008d66:	4b78      	ldr	r3, [pc, #480]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d6a:	f023 5140 	bic.w	r1, r3, #805306368	; 0x30000000
 8008d6e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d72:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d74:	4a74      	ldr	r2, [pc, #464]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d76:	430b      	orrs	r3, r1
 8008d78:	64d3      	str	r3, [r2, #76]	; 0x4c
  }

  /*------------------------------ CEC Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8008d7a:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008d7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d82:	f402 0300 	and.w	r3, r2, #8388608	; 0x800000
 8008d86:	633b      	str	r3, [r7, #48]	; 0x30
 8008d88:	2300      	movs	r3, #0
 8008d8a:	637b      	str	r3, [r7, #52]	; 0x34
 8008d8c:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 8008d90:	460b      	mov	r3, r1
 8008d92:	4313      	orrs	r3, r2
 8008d94:	d00a      	beq.n	8008dac <HAL_RCCEx_PeriphCLKConfig+0x11a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC interface clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8008d96:	4b6c      	ldr	r3, [pc, #432]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008d98:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d9a:	f423 0140 	bic.w	r1, r3, #12582912	; 0xc00000
 8008d9e:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008da2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008da6:	4a68      	ldr	r2, [pc, #416]	; (8008f48 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008da8:	430b      	orrs	r3, r1
 8008daa:	6553      	str	r3, [r2, #84]	; 0x54
  }

  /*---------------------------- PLL2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 8008dac:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008db0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008db4:	2100      	movs	r1, #0
 8008db6:	62b9      	str	r1, [r7, #40]	; 0x28
 8008db8:	f003 0301 	and.w	r3, r3, #1
 8008dbc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008dbe:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	; 0x28
 8008dc2:	460b      	mov	r3, r1
 8008dc4:	4313      	orrs	r3, r2
 8008dc6:	d011      	beq.n	8008dec <HAL_RCCEx_PeriphCLKConfig+0x11e0>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008dc8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008dcc:	3308      	adds	r3, #8
 8008dce:	2100      	movs	r1, #0
 8008dd0:	4618      	mov	r0, r3
 8008dd2:	f001 f99d 	bl	800a110 <RCCEx_PLL2_Config>
 8008dd6:	4603      	mov	r3, r0
 8008dd8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008ddc:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008de0:	2b00      	cmp	r3, #0
 8008de2:	d003      	beq.n	8008dec <HAL_RCCEx_PeriphCLKConfig+0x11e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008de4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008de8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    } 
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8008dec:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008df0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008df4:	2100      	movs	r1, #0
 8008df6:	6239      	str	r1, [r7, #32]
 8008df8:	f003 0302 	and.w	r3, r3, #2
 8008dfc:	627b      	str	r3, [r7, #36]	; 0x24
 8008dfe:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8008e02:	460b      	mov	r3, r1
 8008e04:	4313      	orrs	r3, r2
 8008e06:	d011      	beq.n	8008e2c <HAL_RCCEx_PeriphCLKConfig+0x1220>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008e08:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e0c:	3308      	adds	r3, #8
 8008e0e:	2101      	movs	r1, #1
 8008e10:	4618      	mov	r0, r3
 8008e12:	f001 f97d 	bl	800a110 <RCCEx_PLL2_Config>
 8008e16:	4603      	mov	r3, r0
 8008e18:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008e1c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008e20:	2b00      	cmp	r3, #0
 8008e22:	d003      	beq.n	8008e2c <HAL_RCCEx_PeriphCLKConfig+0x1220>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008e24:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008e28:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8008e2c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e34:	2100      	movs	r1, #0
 8008e36:	61b9      	str	r1, [r7, #24]
 8008e38:	f003 0304 	and.w	r3, r3, #4
 8008e3c:	61fb      	str	r3, [r7, #28]
 8008e3e:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8008e42:	460b      	mov	r3, r1
 8008e44:	4313      	orrs	r3, r2
 8008e46:	d011      	beq.n	8008e6c <HAL_RCCEx_PeriphCLKConfig+0x1260>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008e48:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e4c:	3308      	adds	r3, #8
 8008e4e:	2102      	movs	r1, #2
 8008e50:	4618      	mov	r0, r3
 8008e52:	f001 f95d 	bl	800a110 <RCCEx_PLL2_Config>
 8008e56:	4603      	mov	r3, r0
 8008e58:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008e5c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d003      	beq.n	8008e6c <HAL_RCCEx_PeriphCLKConfig+0x1260>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008e64:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008e68:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  

  /*---------------------------- PLL3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8008e6c:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e74:	2100      	movs	r1, #0
 8008e76:	6139      	str	r1, [r7, #16]
 8008e78:	f003 0308 	and.w	r3, r3, #8
 8008e7c:	617b      	str	r3, [r7, #20]
 8008e7e:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8008e82:	460b      	mov	r3, r1
 8008e84:	4313      	orrs	r3, r2
 8008e86:	d011      	beq.n	8008eac <HAL_RCCEx_PeriphCLKConfig+0x12a0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008e88:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008e8c:	3328      	adds	r3, #40	; 0x28
 8008e8e:	2100      	movs	r1, #0
 8008e90:	4618      	mov	r0, r3
 8008e92:	f001 f9ef 	bl	800a274 <RCCEx_PLL3_Config>
 8008e96:	4603      	mov	r3, r0
 8008e98:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  
    if (ret == HAL_OK)
 8008e9c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ea0:	2b00      	cmp	r3, #0
 8008ea2:	d003      	beq.n	8008eac <HAL_RCCEx_PeriphCLKConfig+0x12a0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ea4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ea8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 8008eac:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008eb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008eb4:	2100      	movs	r1, #0
 8008eb6:	60b9      	str	r1, [r7, #8]
 8008eb8:	f003 0310 	and.w	r3, r3, #16
 8008ebc:	60fb      	str	r3, [r7, #12]
 8008ebe:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8008ec2:	460b      	mov	r3, r1
 8008ec4:	4313      	orrs	r3, r2
 8008ec6:	d011      	beq.n	8008eec <HAL_RCCEx_PeriphCLKConfig+0x12e0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008ec8:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ecc:	3328      	adds	r3, #40	; 0x28
 8008ece:	2101      	movs	r1, #1
 8008ed0:	4618      	mov	r0, r3
 8008ed2:	f001 f9cf 	bl	800a274 <RCCEx_PLL3_Config>
 8008ed6:	4603      	mov	r3, r0
 8008ed8:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008edc:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ee0:	2b00      	cmp	r3, #0
 8008ee2:	d003      	beq.n	8008eec <HAL_RCCEx_PeriphCLKConfig+0x12e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ee4:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008ee8:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 8008eec:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ef4:	2100      	movs	r1, #0
 8008ef6:	6039      	str	r1, [r7, #0]
 8008ef8:	f003 0320 	and.w	r3, r3, #32
 8008efc:	607b      	str	r3, [r7, #4]
 8008efe:	e9d7 1200 	ldrd	r1, r2, [r7]
 8008f02:	460b      	mov	r3, r1
 8008f04:	4313      	orrs	r3, r2
 8008f06:	d011      	beq.n	8008f2c <HAL_RCCEx_PeriphCLKConfig+0x1320>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008f08:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8008f0c:	3328      	adds	r3, #40	; 0x28
 8008f0e:	2102      	movs	r1, #2
 8008f10:	4618      	mov	r0, r3
 8008f12:	f001 f9af 	bl	800a274 <RCCEx_PLL3_Config>
 8008f16:	4603      	mov	r3, r0
 8008f18:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
    
    if (ret == HAL_OK)
 8008f1c:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008f20:	2b00      	cmp	r3, #0
 8008f22:	d003      	beq.n	8008f2c <HAL_RCCEx_PeriphCLKConfig+0x1320>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008f24:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8008f28:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
    } 
  }

  if (status == HAL_OK)
 8008f2c:	f897 3116 	ldrb.w	r3, [r7, #278]	; 0x116
 8008f30:	2b00      	cmp	r3, #0
 8008f32:	d101      	bne.n	8008f38 <HAL_RCCEx_PeriphCLKConfig+0x132c>
  {
    return HAL_OK;
 8008f34:	2300      	movs	r3, #0
 8008f36:	e000      	b.n	8008f3a <HAL_RCCEx_PeriphCLKConfig+0x132e>
  }
  return HAL_ERROR;
 8008f38:	2301      	movs	r3, #1
}
 8008f3a:	4618      	mov	r0, r3
 8008f3c:	f507 778c 	add.w	r7, r7, #280	; 0x118
 8008f40:	46bd      	mov	sp, r7
 8008f42:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008f46:	bf00      	nop
 8008f48:	58024400 	.word	0x58024400

08008f4c <HAL_RCCEx_GetPeriphCLKFreq>:
  * @retval Frequency in KHz
  *
  *  (*) : Available on some STM32H7 lines only.
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint64_t PeriphClk)
{
 8008f4c:	b580      	push	{r7, lr}
 8008f4e:	b090      	sub	sp, #64	; 0x40
 8008f50:	af00      	add	r7, sp, #0
 8008f52:	e9c7 0100 	strd	r0, r1, [r7]
  /* This variable is used to store the SAI and CKP clock source */
  uint32_t saiclocksource;
  uint32_t ckpclocksource;
  uint32_t srcclk;

  if (PeriphClk == RCC_PERIPHCLK_SAI1)
 8008f56:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008f5a:	f5a2 7180 	sub.w	r1, r2, #256	; 0x100
 8008f5e:	430b      	orrs	r3, r1
 8008f60:	f040 8094 	bne.w	800908c <HAL_RCCEx_GetPeriphCLKFreq+0x140>
  {

    saiclocksource = __HAL_RCC_GET_SAI1_SOURCE();
 8008f64:	4b9b      	ldr	r3, [pc, #620]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008f66:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008f68:	f003 0307 	and.w	r3, r3, #7
 8008f6c:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8008f6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f70:	2b04      	cmp	r3, #4
 8008f72:	f200 8087 	bhi.w	8009084 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 8008f76:	a201      	add	r2, pc, #4	; (adr r2, 8008f7c <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 8008f78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f7c:	08008f91 	.word	0x08008f91
 8008f80:	08008fb9 	.word	0x08008fb9
 8008f84:	08008fe1 	.word	0x08008fe1
 8008f88:	0800907d 	.word	0x0800907d
 8008f8c:	08009009 	.word	0x08009009
    {
      case RCC_SAI1CLKSOURCE_PLL: /* PLL1 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8008f90:	4b90      	ldr	r3, [pc, #576]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008f92:	681b      	ldr	r3, [r3, #0]
 8008f94:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008f98:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008f9c:	d108      	bne.n	8008fb0 <HAL_RCCEx_GetPeriphCLKFreq+0x64>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8008f9e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008fa2:	4618      	mov	r0, r3
 8008fa4:	f000 ff62 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8008fa8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008faa:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008fac:	f000 bc93 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008fb0:	2300      	movs	r3, #0
 8008fb2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008fb4:	f000 bc8f 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 8008fb8:	4b86      	ldr	r3, [pc, #536]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008fba:	681b      	ldr	r3, [r3, #0]
 8008fbc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008fc0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008fc4:	d108      	bne.n	8008fd8 <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8008fc6:	f107 0318 	add.w	r3, r7, #24
 8008fca:	4618      	mov	r0, r3
 8008fcc:	f000 fca6 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8008fd0:	69bb      	ldr	r3, [r7, #24]
 8008fd2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008fd4:	f000 bc7f 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8008fd8:	2300      	movs	r3, #0
 8008fda:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8008fdc:	f000 bc7b 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI1CLKSOURCE_PLL3: /* PLL3 is the clock source for SAI1 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8008fe0:	4b7c      	ldr	r3, [pc, #496]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8008fe2:	681b      	ldr	r3, [r3, #0]
 8008fe4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8008fe8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008fec:	d108      	bne.n	8009000 <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8008fee:	f107 030c 	add.w	r3, r7, #12
 8008ff2:	4618      	mov	r0, r3
 8008ff4:	f000 fde6 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 8008ff8:	68fb      	ldr	r3, [r7, #12]
 8008ffa:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8008ffc:	f000 bc6b 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009000:	2300      	movs	r3, #0
 8009002:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009004:	f000 bc67 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI1CLKSOURCE_CLKP: /* CKPER is the clock source for SAI1*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009008:	4b72      	ldr	r3, [pc, #456]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800900a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800900c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009010:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009012:	4b70      	ldr	r3, [pc, #448]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009014:	681b      	ldr	r3, [r3, #0]
 8009016:	f003 0304 	and.w	r3, r3, #4
 800901a:	2b04      	cmp	r3, #4
 800901c:	d10c      	bne.n	8009038 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 800901e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009020:	2b00      	cmp	r3, #0
 8009022:	d109      	bne.n	8009038 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009024:	4b6b      	ldr	r3, [pc, #428]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009026:	681b      	ldr	r3, [r3, #0]
 8009028:	08db      	lsrs	r3, r3, #3
 800902a:	f003 0303 	and.w	r3, r3, #3
 800902e:	4a6a      	ldr	r2, [pc, #424]	; (80091d8 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 8009030:	fa22 f303 	lsr.w	r3, r2, r3
 8009034:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009036:	e01f      	b.n	8009078 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009038:	4b66      	ldr	r3, [pc, #408]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800903a:	681b      	ldr	r3, [r3, #0]
 800903c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009040:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009044:	d106      	bne.n	8009054 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 8009046:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009048:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800904c:	d102      	bne.n	8009054 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 800904e:	4b63      	ldr	r3, [pc, #396]	; (80091dc <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 8009050:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009052:	e011      	b.n	8009078 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009054:	4b5f      	ldr	r3, [pc, #380]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009056:	681b      	ldr	r3, [r3, #0]
 8009058:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800905c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009060:	d106      	bne.n	8009070 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 8009062:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009064:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009068:	d102      	bne.n	8009070 <HAL_RCCEx_GetPeriphCLKFreq+0x124>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 800906a:	4b5d      	ldr	r3, [pc, #372]	; (80091e0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800906c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800906e:	e003      	b.n	8009078 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009070:	2300      	movs	r3, #0
 8009072:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009074:	f000 bc2f 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009078:	f000 bc2d 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case (RCC_SAI1CLKSOURCE_PIN): /* External clock is the clock source for SAI1 */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 800907c:	4b59      	ldr	r3, [pc, #356]	; (80091e4 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800907e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009080:	f000 bc29 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 8009084:	2300      	movs	r3, #0
 8009086:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009088:	f000 bc25 	b.w	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
    }
  }
#endif

#if defined(SAI4)
  else if (PeriphClk == RCC_PERIPHCLK_SAI4A)
 800908c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009090:	f5a2 6180 	sub.w	r1, r2, #1024	; 0x400
 8009094:	430b      	orrs	r3, r1
 8009096:	f040 80a7 	bne.w	80091e8 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>
  {

    saiclocksource = __HAL_RCC_GET_SAI4A_SOURCE();
 800909a:	4b4e      	ldr	r3, [pc, #312]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 800909c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800909e:	f403 0360 	and.w	r3, r3, #14680064	; 0xe00000
 80090a2:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 80090a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090a6:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80090aa:	d054      	beq.n	8009156 <HAL_RCCEx_GetPeriphCLKFreq+0x20a>
 80090ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090ae:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80090b2:	f200 808b 	bhi.w	80091cc <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80090b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090b8:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80090bc:	f000 8083 	beq.w	80091c6 <HAL_RCCEx_GetPeriphCLKFreq+0x27a>
 80090c0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090c2:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80090c6:	f200 8081 	bhi.w	80091cc <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80090ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090cc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80090d0:	d02f      	beq.n	8009132 <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 80090d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090d4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80090d8:	d878      	bhi.n	80091cc <HAL_RCCEx_GetPeriphCLKFreq+0x280>
 80090da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090dc:	2b00      	cmp	r3, #0
 80090de:	d004      	beq.n	80090ea <HAL_RCCEx_GetPeriphCLKFreq+0x19e>
 80090e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80090e2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80090e6:	d012      	beq.n	800910e <HAL_RCCEx_GetPeriphCLKFreq+0x1c2>
 80090e8:	e070      	b.n	80091cc <HAL_RCCEx_GetPeriphCLKFreq+0x280>
    {
      case RCC_SAI4ACLKSOURCE_PLL: /* PLL1 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 80090ea:	4b3a      	ldr	r3, [pc, #232]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80090f2:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80090f6:	d107      	bne.n	8009108 <HAL_RCCEx_GetPeriphCLKFreq+0x1bc>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80090f8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80090fc:	4618      	mov	r0, r3
 80090fe:	f000 feb5 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 8009102:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009104:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009106:	e3e6      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009108:	2300      	movs	r3, #0
 800910a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800910c:	e3e3      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI4ACLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 800910e:	4b31      	ldr	r3, [pc, #196]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009110:	681b      	ldr	r3, [r3, #0]
 8009112:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009116:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800911a:	d107      	bne.n	800912c <HAL_RCCEx_GetPeriphCLKFreq+0x1e0>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800911c:	f107 0318 	add.w	r3, r7, #24
 8009120:	4618      	mov	r0, r3
 8009122:	f000 fbfb 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8009126:	69bb      	ldr	r3, [r7, #24]
 8009128:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800912a:	e3d4      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800912c:	2300      	movs	r3, #0
 800912e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009130:	e3d1      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4A */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 8009132:	4b28      	ldr	r3, [pc, #160]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009134:	681b      	ldr	r3, [r3, #0]
 8009136:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800913a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800913e:	d107      	bne.n	8009150 <HAL_RCCEx_GetPeriphCLKFreq+0x204>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 8009140:	f107 030c 	add.w	r3, r7, #12
 8009144:	4618      	mov	r0, r3
 8009146:	f000 fd3d 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 800914a:	68fb      	ldr	r3, [r7, #12]
 800914c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800914e:	e3c2      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009150:	2300      	movs	r3, #0
 8009152:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009154:	e3bf      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_CLKP: /* CKPER is the clock source for SAI4A*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009156:	4b1f      	ldr	r3, [pc, #124]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009158:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800915a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800915e:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009160:	4b1c      	ldr	r3, [pc, #112]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009162:	681b      	ldr	r3, [r3, #0]
 8009164:	f003 0304 	and.w	r3, r3, #4
 8009168:	2b04      	cmp	r3, #4
 800916a:	d10c      	bne.n	8009186 <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
 800916c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800916e:	2b00      	cmp	r3, #0
 8009170:	d109      	bne.n	8009186 <HAL_RCCEx_GetPeriphCLKFreq+0x23a>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009172:	4b18      	ldr	r3, [pc, #96]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009174:	681b      	ldr	r3, [r3, #0]
 8009176:	08db      	lsrs	r3, r3, #3
 8009178:	f003 0303 	and.w	r3, r3, #3
 800917c:	4a16      	ldr	r2, [pc, #88]	; (80091d8 <HAL_RCCEx_GetPeriphCLKFreq+0x28c>)
 800917e:	fa22 f303 	lsr.w	r3, r2, r3
 8009182:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009184:	e01e      	b.n	80091c4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009186:	4b13      	ldr	r3, [pc, #76]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 8009188:	681b      	ldr	r3, [r3, #0]
 800918a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800918e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009192:	d106      	bne.n	80091a2 <HAL_RCCEx_GetPeriphCLKFreq+0x256>
 8009194:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009196:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800919a:	d102      	bne.n	80091a2 <HAL_RCCEx_GetPeriphCLKFreq+0x256>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 800919c:	4b0f      	ldr	r3, [pc, #60]	; (80091dc <HAL_RCCEx_GetPeriphCLKFreq+0x290>)
 800919e:	63fb      	str	r3, [r7, #60]	; 0x3c
 80091a0:	e010      	b.n	80091c4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 80091a2:	4b0c      	ldr	r3, [pc, #48]	; (80091d4 <HAL_RCCEx_GetPeriphCLKFreq+0x288>)
 80091a4:	681b      	ldr	r3, [r3, #0]
 80091a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80091aa:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80091ae:	d106      	bne.n	80091be <HAL_RCCEx_GetPeriphCLKFreq+0x272>
 80091b0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80091b2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80091b6:	d102      	bne.n	80091be <HAL_RCCEx_GetPeriphCLKFreq+0x272>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 80091b8:	4b09      	ldr	r3, [pc, #36]	; (80091e0 <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80091ba:	63fb      	str	r3, [r7, #60]	; 0x3c
 80091bc:	e002      	b.n	80091c4 <HAL_RCCEx_GetPeriphCLKFreq+0x278>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 80091be:	2300      	movs	r3, #0
 80091c0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 80091c2:	e388      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 80091c4:	e387      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4ACLKSOURCE_PIN: /* External clock is the clock source for SAI4A */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 80091c6:	4b07      	ldr	r3, [pc, #28]	; (80091e4 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 80091c8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80091ca:	e384      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 80091cc:	2300      	movs	r3, #0
 80091ce:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80091d0:	e381      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 80091d2:	bf00      	nop
 80091d4:	58024400 	.word	0x58024400
 80091d8:	03d09000 	.word	0x03d09000
 80091dc:	003d0900 	.word	0x003d0900
 80091e0:	017d7840 	.word	0x017d7840
 80091e4:	00bb8000 	.word	0x00bb8000
      }
    }
  }

  else if (PeriphClk == RCC_PERIPHCLK_SAI4B)
 80091e8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80091ec:	f5a2 6100 	sub.w	r1, r2, #2048	; 0x800
 80091f0:	430b      	orrs	r3, r1
 80091f2:	f040 809c 	bne.w	800932e <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
  {

    saiclocksource = __HAL_RCC_GET_SAI4B_SOURCE();
 80091f6:	4b9e      	ldr	r3, [pc, #632]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80091f8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80091fa:	f003 63e0 	and.w	r3, r3, #117440512	; 0x7000000
 80091fe:	633b      	str	r3, [r7, #48]	; 0x30

    switch (saiclocksource)
 8009200:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009202:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8009206:	d054      	beq.n	80092b2 <HAL_RCCEx_GetPeriphCLKFreq+0x366>
 8009208:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800920a:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800920e:	f200 808b 	bhi.w	8009328 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 8009212:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009214:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8009218:	f000 8083 	beq.w	8009322 <HAL_RCCEx_GetPeriphCLKFreq+0x3d6>
 800921c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800921e:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8009222:	f200 8081 	bhi.w	8009328 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 8009226:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009228:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800922c:	d02f      	beq.n	800928e <HAL_RCCEx_GetPeriphCLKFreq+0x342>
 800922e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009230:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009234:	d878      	bhi.n	8009328 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
 8009236:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009238:	2b00      	cmp	r3, #0
 800923a:	d004      	beq.n	8009246 <HAL_RCCEx_GetPeriphCLKFreq+0x2fa>
 800923c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800923e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8009242:	d012      	beq.n	800926a <HAL_RCCEx_GetPeriphCLKFreq+0x31e>
 8009244:	e070      	b.n	8009328 <HAL_RCCEx_GetPeriphCLKFreq+0x3dc>
    {
      case RCC_SAI4BCLKSOURCE_PLL: /* PLL1 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009246:	4b8a      	ldr	r3, [pc, #552]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009248:	681b      	ldr	r3, [r3, #0]
 800924a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800924e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009252:	d107      	bne.n	8009264 <HAL_RCCEx_GetPeriphCLKFreq+0x318>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009254:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009258:	4618      	mov	r0, r3
 800925a:	f000 fe07 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 800925e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009260:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009262:	e338      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009264:	2300      	movs	r3, #0
 8009266:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009268:	e335      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SAI4BCLKSOURCE_PLL2: /* PLLI2 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 800926a:	4b81      	ldr	r3, [pc, #516]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800926c:	681b      	ldr	r3, [r3, #0]
 800926e:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009272:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009276:	d107      	bne.n	8009288 <HAL_RCCEx_GetPeriphCLKFreq+0x33c>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009278:	f107 0318 	add.w	r3, r7, #24
 800927c:	4618      	mov	r0, r3
 800927e:	f000 fb4d 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 8009282:	69bb      	ldr	r3, [r7, #24]
 8009284:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009286:	e326      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009288:	2300      	movs	r3, #0
 800928a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800928c:	e323      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_PLL3: /* PLLI3 is the clock source for SAI4B */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 800928e:	4b78      	ldr	r3, [pc, #480]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009290:	681b      	ldr	r3, [r3, #0]
 8009292:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009296:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800929a:	d107      	bne.n	80092ac <HAL_RCCEx_GetPeriphCLKFreq+0x360>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800929c:	f107 030c 	add.w	r3, r7, #12
 80092a0:	4618      	mov	r0, r3
 80092a2:	f000 fc8f 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80092a6:	68fb      	ldr	r3, [r7, #12]
 80092a8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80092aa:	e314      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80092ac:	2300      	movs	r3, #0
 80092ae:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80092b0:	e311      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_CLKP: /* CKPER is the clock source for SAI4B*/
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80092b2:	4b6f      	ldr	r3, [pc, #444]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80092b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80092b6:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80092ba:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 80092bc:	4b6c      	ldr	r3, [pc, #432]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80092be:	681b      	ldr	r3, [r3, #0]
 80092c0:	f003 0304 	and.w	r3, r3, #4
 80092c4:	2b04      	cmp	r3, #4
 80092c6:	d10c      	bne.n	80092e2 <HAL_RCCEx_GetPeriphCLKFreq+0x396>
 80092c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80092ca:	2b00      	cmp	r3, #0
 80092cc:	d109      	bne.n	80092e2 <HAL_RCCEx_GetPeriphCLKFreq+0x396>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80092ce:	4b68      	ldr	r3, [pc, #416]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80092d0:	681b      	ldr	r3, [r3, #0]
 80092d2:	08db      	lsrs	r3, r3, #3
 80092d4:	f003 0303 	and.w	r3, r3, #3
 80092d8:	4a66      	ldr	r2, [pc, #408]	; (8009474 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 80092da:	fa22 f303 	lsr.w	r3, r2, r3
 80092de:	63fb      	str	r3, [r7, #60]	; 0x3c
 80092e0:	e01e      	b.n	8009320 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 80092e2:	4b63      	ldr	r3, [pc, #396]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80092e4:	681b      	ldr	r3, [r3, #0]
 80092e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80092ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80092ee:	d106      	bne.n	80092fe <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
 80092f0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80092f2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80092f6:	d102      	bne.n	80092fe <HAL_RCCEx_GetPeriphCLKFreq+0x3b2>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 80092f8:	4b5f      	ldr	r3, [pc, #380]	; (8009478 <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 80092fa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80092fc:	e010      	b.n	8009320 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 80092fe:	4b5c      	ldr	r3, [pc, #368]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009306:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800930a:	d106      	bne.n	800931a <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
 800930c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800930e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009312:	d102      	bne.n	800931a <HAL_RCCEx_GetPeriphCLKFreq+0x3ce>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009314:	4b59      	ldr	r3, [pc, #356]	; (800947c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009316:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009318:	e002      	b.n	8009320 <HAL_RCCEx_GetPeriphCLKFreq+0x3d4>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 800931a:	2300      	movs	r3, #0
 800931c:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 800931e:	e2da      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009320:	e2d9      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SAI4BCLKSOURCE_PIN: /* External clock is the clock source for SAI4B */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 8009322:	4b57      	ldr	r3, [pc, #348]	; (8009480 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8009324:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009326:	e2d6      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009328:	2300      	movs	r3, #0
 800932a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800932c:	e2d3      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
#endif /*SAI4*/
  else if (PeriphClk == RCC_PERIPHCLK_SPI123)
 800932e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009332:	f5a2 5180 	sub.w	r1, r2, #4096	; 0x1000
 8009336:	430b      	orrs	r3, r1
 8009338:	f040 80a7 	bne.w	800948a <HAL_RCCEx_GetPeriphCLKFreq+0x53e>
  {
    /* Get SPI1/2/3 clock source */
    srcclk = __HAL_RCC_GET_SPI123_SOURCE();
 800933c:	4b4c      	ldr	r3, [pc, #304]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800933e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009340:	f403 43e0 	and.w	r3, r3, #28672	; 0x7000
 8009344:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009346:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009348:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800934c:	d055      	beq.n	80093fa <HAL_RCCEx_GetPeriphCLKFreq+0x4ae>
 800934e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009350:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009354:	f200 8096 	bhi.w	8009484 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 8009358:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800935a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800935e:	f000 8084 	beq.w	800946a <HAL_RCCEx_GetPeriphCLKFreq+0x51e>
 8009362:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009364:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009368:	f200 808c 	bhi.w	8009484 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800936c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800936e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009372:	d030      	beq.n	80093d6 <HAL_RCCEx_GetPeriphCLKFreq+0x48a>
 8009374:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009376:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800937a:	f200 8083 	bhi.w	8009484 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
 800937e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009380:	2b00      	cmp	r3, #0
 8009382:	d004      	beq.n	800938e <HAL_RCCEx_GetPeriphCLKFreq+0x442>
 8009384:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009386:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800938a:	d012      	beq.n	80093b2 <HAL_RCCEx_GetPeriphCLKFreq+0x466>
 800938c:	e07a      	b.n	8009484 <HAL_RCCEx_GetPeriphCLKFreq+0x538>
    {
      case RCC_SPI123CLKSOURCE_PLL: /* PLL1 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 800938e:	4b38      	ldr	r3, [pc, #224]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009390:	681b      	ldr	r3, [r3, #0]
 8009392:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009396:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800939a:	d107      	bne.n	80093ac <HAL_RCCEx_GetPeriphCLKFreq+0x460>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 800939c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80093a0:	4618      	mov	r0, r3
 80093a2:	f000 fd63 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80093a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093a8:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80093aa:	e294      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80093ac:	2300      	movs	r3, #0
 80093ae:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80093b0:	e291      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80093b2:	4b2f      	ldr	r3, [pc, #188]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80093b4:	681b      	ldr	r3, [r3, #0]
 80093b6:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80093ba:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80093be:	d107      	bne.n	80093d0 <HAL_RCCEx_GetPeriphCLKFreq+0x484>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80093c0:	f107 0318 	add.w	r3, r7, #24
 80093c4:	4618      	mov	r0, r3
 80093c6:	f000 faa9 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80093ca:	69bb      	ldr	r3, [r7, #24]
 80093cc:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80093ce:	e282      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80093d0:	2300      	movs	r3, #0
 80093d2:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80093d4:	e27f      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SPI123CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI123 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80093d6:	4b26      	ldr	r3, [pc, #152]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80093d8:	681b      	ldr	r3, [r3, #0]
 80093da:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80093de:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80093e2:	d107      	bne.n	80093f4 <HAL_RCCEx_GetPeriphCLKFreq+0x4a8>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80093e4:	f107 030c 	add.w	r3, r7, #12
 80093e8:	4618      	mov	r0, r3
 80093ea:	f000 fbeb 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_P_Frequency;
 80093ee:	68fb      	ldr	r3, [r7, #12]
 80093f0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80093f2:	e270      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80093f4:	2300      	movs	r3, #0
 80093f6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80093f8:	e26d      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_SPI123CLKSOURCE_CLKP: /* CKPER is the clock source for SPI123 */
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 80093fa:	4b1d      	ldr	r3, [pc, #116]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 80093fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80093fe:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009402:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 8009404:	4b1a      	ldr	r3, [pc, #104]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	f003 0304 	and.w	r3, r3, #4
 800940c:	2b04      	cmp	r3, #4
 800940e:	d10c      	bne.n	800942a <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
 8009410:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009412:	2b00      	cmp	r3, #0
 8009414:	d109      	bne.n	800942a <HAL_RCCEx_GetPeriphCLKFreq+0x4de>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009416:	4b16      	ldr	r3, [pc, #88]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009418:	681b      	ldr	r3, [r3, #0]
 800941a:	08db      	lsrs	r3, r3, #3
 800941c:	f003 0303 	and.w	r3, r3, #3
 8009420:	4a14      	ldr	r2, [pc, #80]	; (8009474 <HAL_RCCEx_GetPeriphCLKFreq+0x528>)
 8009422:	fa22 f303 	lsr.w	r3, r2, r3
 8009426:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009428:	e01e      	b.n	8009468 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 800942a:	4b11      	ldr	r3, [pc, #68]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 800942c:	681b      	ldr	r3, [r3, #0]
 800942e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009432:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009436:	d106      	bne.n	8009446 <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
 8009438:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800943a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800943e:	d102      	bne.n	8009446 <HAL_RCCEx_GetPeriphCLKFreq+0x4fa>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009440:	4b0d      	ldr	r3, [pc, #52]	; (8009478 <HAL_RCCEx_GetPeriphCLKFreq+0x52c>)
 8009442:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009444:	e010      	b.n	8009468 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 8009446:	4b0a      	ldr	r3, [pc, #40]	; (8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x524>)
 8009448:	681b      	ldr	r3, [r3, #0]
 800944a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800944e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009452:	d106      	bne.n	8009462 <HAL_RCCEx_GetPeriphCLKFreq+0x516>
 8009454:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009456:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800945a:	d102      	bne.n	8009462 <HAL_RCCEx_GetPeriphCLKFreq+0x516>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 800945c:	4b07      	ldr	r3, [pc, #28]	; (800947c <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800945e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009460:	e002      	b.n	8009468 <HAL_RCCEx_GetPeriphCLKFreq+0x51c>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009462:	2300      	movs	r3, #0
 8009464:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 8009466:	e236      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009468:	e235      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case (RCC_SPI123CLKSOURCE_PIN): /* External clock is the clock source for I2S */
      {
        frequency = EXTERNAL_CLOCK_VALUE;
 800946a:	4b05      	ldr	r3, [pc, #20]	; (8009480 <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 800946c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800946e:	e232      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 8009470:	58024400 	.word	0x58024400
 8009474:	03d09000 	.word	0x03d09000
 8009478:	003d0900 	.word	0x003d0900
 800947c:	017d7840 	.word	0x017d7840
 8009480:	00bb8000 	.word	0x00bb8000
      }
      default :
      {
        frequency = 0;
 8009484:	2300      	movs	r3, #0
 8009486:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009488:	e225      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI45)
 800948a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800948e:	f5a2 5100 	sub.w	r1, r2, #8192	; 0x2000
 8009492:	430b      	orrs	r3, r1
 8009494:	f040 8085 	bne.w	80095a2 <HAL_RCCEx_GetPeriphCLKFreq+0x656>
  {
    /* Get SPI45 clock source */
    srcclk = __HAL_RCC_GET_SPI45_SOURCE();
 8009498:	4b9c      	ldr	r3, [pc, #624]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800949a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800949c:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
 80094a0:	63bb      	str	r3, [r7, #56]	; 0x38
    switch (srcclk)
 80094a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094a4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80094a8:	d06b      	beq.n	8009582 <HAL_RCCEx_GetPeriphCLKFreq+0x636>
 80094aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094ac:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80094b0:	d874      	bhi.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80094b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094b4:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80094b8:	d056      	beq.n	8009568 <HAL_RCCEx_GetPeriphCLKFreq+0x61c>
 80094ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094bc:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80094c0:	d86c      	bhi.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80094c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094c4:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80094c8:	d03b      	beq.n	8009542 <HAL_RCCEx_GetPeriphCLKFreq+0x5f6>
 80094ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094cc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80094d0:	d864      	bhi.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80094d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094d4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80094d8:	d021      	beq.n	800951e <HAL_RCCEx_GetPeriphCLKFreq+0x5d2>
 80094da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094dc:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80094e0:	d85c      	bhi.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
 80094e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094e4:	2b00      	cmp	r3, #0
 80094e6:	d004      	beq.n	80094f2 <HAL_RCCEx_GetPeriphCLKFreq+0x5a6>
 80094e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80094ea:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80094ee:	d004      	beq.n	80094fa <HAL_RCCEx_GetPeriphCLKFreq+0x5ae>
 80094f0:	e054      	b.n	800959c <HAL_RCCEx_GetPeriphCLKFreq+0x650>
    {
      case RCC_SPI45CLKSOURCE_PCLK2: /* CD/D2 PCLK2 is the clock source for SPI4/5 */
      {
        frequency = HAL_RCC_GetPCLK1Freq();
 80094f2:	f7fe fb75 	bl	8007be0 <HAL_RCC_GetPCLK1Freq>
 80094f6:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 80094f8:	e1ed      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80094fa:	4b84      	ldr	r3, [pc, #528]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80094fc:	681b      	ldr	r3, [r3, #0]
 80094fe:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009502:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009506:	d107      	bne.n	8009518 <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 8009508:	f107 0318 	add.w	r3, r7, #24
 800950c:	4618      	mov	r0, r3
 800950e:	f000 fa05 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 8009512:	69fb      	ldr	r3, [r7, #28]
 8009514:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009516:	e1de      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009518:	2300      	movs	r3, #0
 800951a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800951c:	e1db      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 800951e:	4b7b      	ldr	r3, [pc, #492]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009520:	681b      	ldr	r3, [r3, #0]
 8009522:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009526:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800952a:	d107      	bne.n	800953c <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800952c:	f107 030c 	add.w	r3, r7, #12
 8009530:	4618      	mov	r0, r3
 8009532:	f000 fb47 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 8009536:	693b      	ldr	r3, [r7, #16]
 8009538:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800953a:	e1cc      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800953c:	2300      	movs	r3, #0
 800953e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009540:	e1c9      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_HSI: /* HSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 8009542:	4b72      	ldr	r3, [pc, #456]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009544:	681b      	ldr	r3, [r3, #0]
 8009546:	f003 0304 	and.w	r3, r3, #4
 800954a:	2b04      	cmp	r3, #4
 800954c:	d109      	bne.n	8009562 <HAL_RCCEx_GetPeriphCLKFreq+0x616>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800954e:	4b6f      	ldr	r3, [pc, #444]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009550:	681b      	ldr	r3, [r3, #0]
 8009552:	08db      	lsrs	r3, r3, #3
 8009554:	f003 0303 	and.w	r3, r3, #3
 8009558:	4a6d      	ldr	r2, [pc, #436]	; (8009710 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 800955a:	fa22 f303 	lsr.w	r3, r2, r3
 800955e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009560:	e1b9      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009562:	2300      	movs	r3, #0
 8009564:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009566:	e1b6      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_CSI: /* CSI is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 8009568:	4b68      	ldr	r3, [pc, #416]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800956a:	681b      	ldr	r3, [r3, #0]
 800956c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009570:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009574:	d102      	bne.n	800957c <HAL_RCCEx_GetPeriphCLKFreq+0x630>
        {
          frequency = CSI_VALUE;
 8009576:	4b67      	ldr	r3, [pc, #412]	; (8009714 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 8009578:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800957a:	e1ac      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800957c:	2300      	movs	r3, #0
 800957e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009580:	e1a9      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI45CLKSOURCE_HSE: /* HSE is the clock source for SPI45 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009582:	4b62      	ldr	r3, [pc, #392]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009584:	681b      	ldr	r3, [r3, #0]
 8009586:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800958a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800958e:	d102      	bne.n	8009596 <HAL_RCCEx_GetPeriphCLKFreq+0x64a>
        {
          frequency = HSE_VALUE;
 8009590:	4b61      	ldr	r3, [pc, #388]	; (8009718 <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 8009592:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009594:	e19f      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009596:	2300      	movs	r3, #0
 8009598:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800959a:	e19c      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 800959c:	2300      	movs	r3, #0
 800959e:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80095a0:	e199      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_ADC)
 80095a2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80095a6:	f5a2 2100 	sub.w	r1, r2, #524288	; 0x80000
 80095aa:	430b      	orrs	r3, r1
 80095ac:	d173      	bne.n	8009696 <HAL_RCCEx_GetPeriphCLKFreq+0x74a>
  {
    /* Get ADC clock source */
    srcclk = __HAL_RCC_GET_ADC_SOURCE();
 80095ae:	4b57      	ldr	r3, [pc, #348]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80095b0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80095b2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80095b6:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 80095b8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095ba:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80095be:	d02f      	beq.n	8009620 <HAL_RCCEx_GetPeriphCLKFreq+0x6d4>
 80095c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095c2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80095c6:	d863      	bhi.n	8009690 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
 80095c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095ca:	2b00      	cmp	r3, #0
 80095cc:	d004      	beq.n	80095d8 <HAL_RCCEx_GetPeriphCLKFreq+0x68c>
 80095ce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80095d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80095d4:	d012      	beq.n	80095fc <HAL_RCCEx_GetPeriphCLKFreq+0x6b0>
 80095d6:	e05b      	b.n	8009690 <HAL_RCCEx_GetPeriphCLKFreq+0x744>
    {
      case RCC_ADCCLKSOURCE_PLL2:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80095d8:	4b4c      	ldr	r3, [pc, #304]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80095da:	681b      	ldr	r3, [r3, #0]
 80095dc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80095e0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80095e4:	d107      	bne.n	80095f6 <HAL_RCCEx_GetPeriphCLKFreq+0x6aa>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80095e6:	f107 0318 	add.w	r3, r7, #24
 80095ea:	4618      	mov	r0, r3
 80095ec:	f000 f996 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_P_Frequency;
 80095f0:	69bb      	ldr	r3, [r7, #24]
 80095f2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80095f4:	e16f      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80095f6:	2300      	movs	r3, #0
 80095f8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80095fa:	e16c      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_ADCCLKSOURCE_PLL3:
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80095fc:	4b43      	ldr	r3, [pc, #268]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80095fe:	681b      	ldr	r3, [r3, #0]
 8009600:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009604:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009608:	d107      	bne.n	800961a <HAL_RCCEx_GetPeriphCLKFreq+0x6ce>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800960a:	f107 030c 	add.w	r3, r7, #12
 800960e:	4618      	mov	r0, r3
 8009610:	f000 fad8 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_R_Frequency;
 8009614:	697b      	ldr	r3, [r7, #20]
 8009616:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009618:	e15d      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800961a:	2300      	movs	r3, #0
 800961c:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800961e:	e15a      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      case RCC_ADCCLKSOURCE_CLKP:
      {

        ckpclocksource = __HAL_RCC_GET_CLKP_SOURCE();
 8009620:	4b3a      	ldr	r3, [pc, #232]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009622:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009624:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009628:	637b      	str	r3, [r7, #52]	; 0x34

        if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSI))
 800962a:	4b38      	ldr	r3, [pc, #224]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800962c:	681b      	ldr	r3, [r3, #0]
 800962e:	f003 0304 	and.w	r3, r3, #4
 8009632:	2b04      	cmp	r3, #4
 8009634:	d10c      	bne.n	8009650 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
 8009636:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009638:	2b00      	cmp	r3, #0
 800963a:	d109      	bne.n	8009650 <HAL_RCCEx_GetPeriphCLKFreq+0x704>
        {
          /* In Case the CKPER Source is HSI */
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 800963c:	4b33      	ldr	r3, [pc, #204]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800963e:	681b      	ldr	r3, [r3, #0]
 8009640:	08db      	lsrs	r3, r3, #3
 8009642:	f003 0303 	and.w	r3, r3, #3
 8009646:	4a32      	ldr	r2, [pc, #200]	; (8009710 <HAL_RCCEx_GetPeriphCLKFreq+0x7c4>)
 8009648:	fa22 f303 	lsr.w	r3, r2, r3
 800964c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800964e:	e01e      	b.n	800968e <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY)) && (ckpclocksource == RCC_CLKPSOURCE_CSI))
 8009650:	4b2e      	ldr	r3, [pc, #184]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 8009652:	681b      	ldr	r3, [r3, #0]
 8009654:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009658:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800965c:	d106      	bne.n	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x720>
 800965e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009660:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009664:	d102      	bne.n	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x720>
        {
          /* In Case the CKPER Source is CSI */
          frequency = CSI_VALUE;
 8009666:	4b2b      	ldr	r3, [pc, #172]	; (8009714 <HAL_RCCEx_GetPeriphCLKFreq+0x7c8>)
 8009668:	63fb      	str	r3, [r7, #60]	; 0x3c
 800966a:	e010      	b.n	800968e <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else if ((HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY)) && (ckpclocksource == RCC_CLKPSOURCE_HSE))
 800966c:	4b27      	ldr	r3, [pc, #156]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 800966e:	681b      	ldr	r3, [r3, #0]
 8009670:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009674:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009678:	d106      	bne.n	8009688 <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
 800967a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800967c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009680:	d102      	bne.n	8009688 <HAL_RCCEx_GetPeriphCLKFreq+0x73c>
        {
          /* In Case the CKPER Source is HSE */
          frequency = HSE_VALUE;
 8009682:	4b25      	ldr	r3, [pc, #148]	; (8009718 <HAL_RCCEx_GetPeriphCLKFreq+0x7cc>)
 8009684:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009686:	e002      	b.n	800968e <HAL_RCCEx_GetPeriphCLKFreq+0x742>
        }

        else
        {
          /* In Case the CKPER is disabled*/
          frequency = 0;
 8009688:	2300      	movs	r3, #0
 800968a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }

        break;
 800968c:	e123      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800968e:	e122      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009690:	2300      	movs	r3, #0
 8009692:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009694:	e11f      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SDMMC)
 8009696:	e9d7 2300 	ldrd	r2, r3, [r7]
 800969a:	f5a2 3180 	sub.w	r1, r2, #65536	; 0x10000
 800969e:	430b      	orrs	r3, r1
 80096a0:	d13c      	bne.n	800971c <HAL_RCCEx_GetPeriphCLKFreq+0x7d0>
  {
    /* Get SDMMC clock source */
    srcclk = __HAL_RCC_GET_SDMMC_SOURCE();
 80096a2:	4b1a      	ldr	r3, [pc, #104]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80096a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80096a6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80096aa:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 80096ac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80096ae:	2b00      	cmp	r3, #0
 80096b0:	d004      	beq.n	80096bc <HAL_RCCEx_GetPeriphCLKFreq+0x770>
 80096b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80096b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80096b8:	d012      	beq.n	80096e0 <HAL_RCCEx_GetPeriphCLKFreq+0x794>
 80096ba:	e023      	b.n	8009704 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>
    {
      case RCC_SDMMCCLKSOURCE_PLL: /* PLL1 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 80096bc:	4b13      	ldr	r3, [pc, #76]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80096be:	681b      	ldr	r3, [r3, #0]
 80096c0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80096c4:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80096c8:	d107      	bne.n	80096da <HAL_RCCEx_GetPeriphCLKFreq+0x78e>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 80096ca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80096ce:	4618      	mov	r0, r3
 80096d0:	f000 fbcc 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 80096d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80096d6:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80096d8:	e0fd      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80096da:	2300      	movs	r3, #0
 80096dc:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80096de:	e0fa      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is the clock source for SDMMC */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80096e0:	4b0a      	ldr	r3, [pc, #40]	; (800970c <HAL_RCCEx_GetPeriphCLKFreq+0x7c0>)
 80096e2:	681b      	ldr	r3, [r3, #0]
 80096e4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80096e8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80096ec:	d107      	bne.n	80096fe <HAL_RCCEx_GetPeriphCLKFreq+0x7b2>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80096ee:	f107 0318 	add.w	r3, r7, #24
 80096f2:	4618      	mov	r0, r3
 80096f4:	f000 f912 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_R_Frequency;
 80096f8:	6a3b      	ldr	r3, [r7, #32]
 80096fa:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80096fc:	e0eb      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80096fe:	2300      	movs	r3, #0
 8009700:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009702:	e0e8      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }

      default :
      {
        frequency = 0;
 8009704:	2300      	movs	r3, #0
 8009706:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009708:	e0e5      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
 800970a:	bf00      	nop
 800970c:	58024400 	.word	0x58024400
 8009710:	03d09000 	.word	0x03d09000
 8009714:	003d0900 	.word	0x003d0900
 8009718:	017d7840 	.word	0x017d7840
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_SPI6)
 800971c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009720:	f5a2 4180 	sub.w	r1, r2, #16384	; 0x4000
 8009724:	430b      	orrs	r3, r1
 8009726:	f040 8085 	bne.w	8009834 <HAL_RCCEx_GetPeriphCLKFreq+0x8e8>
  {
    /* Get SPI6 clock source */
    srcclk = __HAL_RCC_GET_SPI6_SOURCE();
 800972a:	4b6d      	ldr	r3, [pc, #436]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800972c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800972e:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8009732:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 8009734:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009736:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800973a:	d06b      	beq.n	8009814 <HAL_RCCEx_GetPeriphCLKFreq+0x8c8>
 800973c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800973e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009742:	d874      	bhi.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009744:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009746:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800974a:	d056      	beq.n	80097fa <HAL_RCCEx_GetPeriphCLKFreq+0x8ae>
 800974c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800974e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009752:	d86c      	bhi.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009754:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009756:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800975a:	d03b      	beq.n	80097d4 <HAL_RCCEx_GetPeriphCLKFreq+0x888>
 800975c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800975e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009762:	d864      	bhi.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009764:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009766:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800976a:	d021      	beq.n	80097b0 <HAL_RCCEx_GetPeriphCLKFreq+0x864>
 800976c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800976e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009772:	d85c      	bhi.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
 8009774:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009776:	2b00      	cmp	r3, #0
 8009778:	d004      	beq.n	8009784 <HAL_RCCEx_GetPeriphCLKFreq+0x838>
 800977a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800977c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009780:	d004      	beq.n	800978c <HAL_RCCEx_GetPeriphCLKFreq+0x840>
 8009782:	e054      	b.n	800982e <HAL_RCCEx_GetPeriphCLKFreq+0x8e2>
    {
      case RCC_SPI6CLKSOURCE_D3PCLK1: /* D3PCLK1 (PCLK4) is the clock source for SPI6 */
      {
        frequency = HAL_RCCEx_GetD3PCLK1Freq();
 8009784:	f000 f8b4 	bl	80098f0 <HAL_RCCEx_GetD3PCLK1Freq>
 8009788:	63f8      	str	r0, [r7, #60]	; 0x3c
        break;
 800978a:	e0a4      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 800978c:	4b54      	ldr	r3, [pc, #336]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800978e:	681b      	ldr	r3, [r3, #0]
 8009790:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009794:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009798:	d107      	bne.n	80097aa <HAL_RCCEx_GetPeriphCLKFreq+0x85e>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800979a:	f107 0318 	add.w	r3, r7, #24
 800979e:	4618      	mov	r0, r3
 80097a0:	f000 f8bc 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 80097a4:	69fb      	ldr	r3, [r7, #28]
 80097a6:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097a8:	e095      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097aa:	2300      	movs	r3, #0
 80097ac:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097ae:	e092      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_PLL3: /* PLL3 is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3RDY))
 80097b0:	4b4b      	ldr	r3, [pc, #300]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80097b2:	681b      	ldr	r3, [r3, #0]
 80097b4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80097b8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80097bc:	d107      	bne.n	80097ce <HAL_RCCEx_GetPeriphCLKFreq+0x882>
        {
          HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 80097be:	f107 030c 	add.w	r3, r7, #12
 80097c2:	4618      	mov	r0, r3
 80097c4:	f000 f9fe 	bl	8009bc4 <HAL_RCCEx_GetPLL3ClockFreq>
          frequency = pll3_clocks.PLL3_Q_Frequency;
 80097c8:	693b      	ldr	r3, [r7, #16]
 80097ca:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097cc:	e083      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097ce:	2300      	movs	r3, #0
 80097d0:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097d2:	e080      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_HSI: /* HSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSIRDY))
 80097d4:	4b42      	ldr	r3, [pc, #264]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80097d6:	681b      	ldr	r3, [r3, #0]
 80097d8:	f003 0304 	and.w	r3, r3, #4
 80097dc:	2b04      	cmp	r3, #4
 80097de:	d109      	bne.n	80097f4 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
        {
          frequency = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80097e0:	4b3f      	ldr	r3, [pc, #252]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80097e2:	681b      	ldr	r3, [r3, #0]
 80097e4:	08db      	lsrs	r3, r3, #3
 80097e6:	f003 0303 	and.w	r3, r3, #3
 80097ea:	4a3e      	ldr	r2, [pc, #248]	; (80098e4 <HAL_RCCEx_GetPeriphCLKFreq+0x998>)
 80097ec:	fa22 f303 	lsr.w	r3, r2, r3
 80097f0:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80097f2:	e070      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80097f4:	2300      	movs	r3, #0
 80097f6:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80097f8:	e06d      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_CSI: /* CSI is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_CSIRDY))
 80097fa:	4b39      	ldr	r3, [pc, #228]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80097fc:	681b      	ldr	r3, [r3, #0]
 80097fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009802:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009806:	d102      	bne.n	800980e <HAL_RCCEx_GetPeriphCLKFreq+0x8c2>
        {
          frequency = CSI_VALUE;
 8009808:	4b37      	ldr	r3, [pc, #220]	; (80098e8 <HAL_RCCEx_GetPeriphCLKFreq+0x99c>)
 800980a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800980c:	e063      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800980e:	2300      	movs	r3, #0
 8009810:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009812:	e060      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_SPI6CLKSOURCE_HSE: /* HSE is the clock source for SPI6 */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8009814:	4b32      	ldr	r3, [pc, #200]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009816:	681b      	ldr	r3, [r3, #0]
 8009818:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800981c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009820:	d102      	bne.n	8009828 <HAL_RCCEx_GetPeriphCLKFreq+0x8dc>
        {
          frequency = HSE_VALUE;
 8009822:	4b32      	ldr	r3, [pc, #200]	; (80098ec <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 8009824:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 8009826:	e056      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 8009828:	2300      	movs	r3, #0
 800982a:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 800982c:	e053      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
        break;
      }
#endif /* RCC_SPI6CLKSOURCE_PIN */
      default :
      {
        frequency = 0;
 800982e:	2300      	movs	r3, #0
 8009830:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009832:	e050      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else if (PeriphClk == RCC_PERIPHCLK_FDCAN)
 8009834:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009838:	f5a2 4100 	sub.w	r1, r2, #32768	; 0x8000
 800983c:	430b      	orrs	r3, r1
 800983e:	d148      	bne.n	80098d2 <HAL_RCCEx_GetPeriphCLKFreq+0x986>
  {
    /* Get FDCAN clock source */
    srcclk = __HAL_RCC_GET_FDCAN_SOURCE();
 8009840:	4b27      	ldr	r3, [pc, #156]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009842:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009844:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8009848:	63bb      	str	r3, [r7, #56]	; 0x38

    switch (srcclk)
 800984a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800984c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009850:	d02a      	beq.n	80098a8 <HAL_RCCEx_GetPeriphCLKFreq+0x95c>
 8009852:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009854:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009858:	d838      	bhi.n	80098cc <HAL_RCCEx_GetPeriphCLKFreq+0x980>
 800985a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800985c:	2b00      	cmp	r3, #0
 800985e:	d004      	beq.n	800986a <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 8009860:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009862:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009866:	d00d      	beq.n	8009884 <HAL_RCCEx_GetPeriphCLKFreq+0x938>
 8009868:	e030      	b.n	80098cc <HAL_RCCEx_GetPeriphCLKFreq+0x980>
    {
      case RCC_FDCANCLKSOURCE_HSE: /* HSE is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 800986a:	4b1d      	ldr	r3, [pc, #116]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 800986c:	681b      	ldr	r3, [r3, #0]
 800986e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009872:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009876:	d102      	bne.n	800987e <HAL_RCCEx_GetPeriphCLKFreq+0x932>
        {
          frequency = HSE_VALUE;
 8009878:	4b1c      	ldr	r3, [pc, #112]	; (80098ec <HAL_RCCEx_GetPeriphCLKFreq+0x9a0>)
 800987a:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 800987c:	e02b      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 800987e:	2300      	movs	r3, #0
 8009880:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 8009882:	e028      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_FDCANCLKSOURCE_PLL: /* PLL is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL1RDY))
 8009884:	4b16      	ldr	r3, [pc, #88]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 8009886:	681b      	ldr	r3, [r3, #0]
 8009888:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800988c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009890:	d107      	bne.n	80098a2 <HAL_RCCEx_GetPeriphCLKFreq+0x956>
        {
          HAL_RCCEx_GetPLL1ClockFreq(&pll1_clocks);
 8009892:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009896:	4618      	mov	r0, r3
 8009898:	f000 fae8 	bl	8009e6c <HAL_RCCEx_GetPLL1ClockFreq>
          frequency = pll1_clocks.PLL1_Q_Frequency;
 800989c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800989e:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80098a0:	e019      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80098a2:	2300      	movs	r3, #0
 80098a4:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80098a6:	e016      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is the clock source for FDCAN */
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL2RDY))
 80098a8:	4b0d      	ldr	r3, [pc, #52]	; (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x994>)
 80098aa:	681b      	ldr	r3, [r3, #0]
 80098ac:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80098b0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80098b4:	d107      	bne.n	80098c6 <HAL_RCCEx_GetPeriphCLKFreq+0x97a>
        {
          HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 80098b6:	f107 0318 	add.w	r3, r7, #24
 80098ba:	4618      	mov	r0, r3
 80098bc:	f000 f82e 	bl	800991c <HAL_RCCEx_GetPLL2ClockFreq>
          frequency = pll2_clocks.PLL2_Q_Frequency;
 80098c0:	69fb      	ldr	r3, [r7, #28]
 80098c2:	63fb      	str	r3, [r7, #60]	; 0x3c
        }
        else
        {
          frequency = 0;
        }
        break;
 80098c4:	e007      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
          frequency = 0;
 80098c6:	2300      	movs	r3, #0
 80098c8:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80098ca:	e004      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
      default :
      {
        frequency = 0;
 80098cc:	2300      	movs	r3, #0
 80098ce:	63fb      	str	r3, [r7, #60]	; 0x3c
        break;
 80098d0:	e001      	b.n	80098d6 <HAL_RCCEx_GetPeriphCLKFreq+0x98a>
      }
    }
  }
  else
  {
    frequency = 0;
 80098d2:	2300      	movs	r3, #0
 80098d4:	63fb      	str	r3, [r7, #60]	; 0x3c
  }

  return frequency;
 80098d6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 80098d8:	4618      	mov	r0, r3
 80098da:	3740      	adds	r7, #64	; 0x40
 80098dc:	46bd      	mov	sp, r7
 80098de:	bd80      	pop	{r7, pc}
 80098e0:	58024400 	.word	0x58024400
 80098e4:	03d09000 	.word	0x03d09000
 80098e8:	003d0900 	.word	0x003d0900
 80098ec:	017d7840 	.word	0x017d7840

080098f0 <HAL_RCCEx_GetD3PCLK1Freq>:
  * @note   Each time D3PCLK1 changes, this function must be called to update the
  *         right D3PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval D3PCLK1 frequency
  */
uint32_t HAL_RCCEx_GetD3PCLK1Freq(void)
{
 80098f0:	b580      	push	{r7, lr}
 80098f2:	af00      	add	r7, sp, #0
#if defined(RCC_D3CFGR_D3PPRE)
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
 80098f4:	f7fe f944 	bl	8007b80 <HAL_RCC_GetHCLKFreq>
 80098f8:	4602      	mov	r2, r0
 80098fa:	4b06      	ldr	r3, [pc, #24]	; (8009914 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 80098fc:	6a1b      	ldr	r3, [r3, #32]
 80098fe:	091b      	lsrs	r3, r3, #4
 8009900:	f003 0307 	and.w	r3, r3, #7
 8009904:	4904      	ldr	r1, [pc, #16]	; (8009918 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8009906:	5ccb      	ldrb	r3, [r1, r3]
 8009908:	f003 031f 	and.w	r3, r3, #31
 800990c:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE) >> RCC_SRDCFGR_SRDPPRE_Pos] & 0x1FU));
#endif
}
 8009910:	4618      	mov	r0, r3
 8009912:	bd80      	pop	{r7, pc}
 8009914:	58024400 	.word	0x58024400
 8009918:	0802555c 	.word	0x0802555c

0800991c <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef *PLL2_Clocks)
{
 800991c:	b480      	push	{r7}
 800991e:	b089      	sub	sp, #36	; 0x24
 8009920:	af00      	add	r7, sp, #0
 8009922:	6078      	str	r0, [r7, #4]
  float_t fracn2, pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009924:	4ba1      	ldr	r3, [pc, #644]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009926:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009928:	f003 0303 	and.w	r3, r3, #3
 800992c:	61bb      	str	r3, [r7, #24]
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
 800992e:	4b9f      	ldr	r3, [pc, #636]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009930:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009932:	0b1b      	lsrs	r3, r3, #12
 8009934:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009938:	617b      	str	r3, [r7, #20]
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
 800993a:	4b9c      	ldr	r3, [pc, #624]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800993c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800993e:	091b      	lsrs	r3, r3, #4
 8009940:	f003 0301 	and.w	r3, r3, #1
 8009944:	613b      	str	r3, [r7, #16]
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
 8009946:	4b99      	ldr	r3, [pc, #612]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009948:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800994a:	08db      	lsrs	r3, r3, #3
 800994c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009950:	693a      	ldr	r2, [r7, #16]
 8009952:	fb02 f303 	mul.w	r3, r2, r3
 8009956:	ee07 3a90 	vmov	s15, r3
 800995a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800995e:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll2m != 0U)
 8009962:	697b      	ldr	r3, [r7, #20]
 8009964:	2b00      	cmp	r3, #0
 8009966:	f000 8111 	beq.w	8009b8c <HAL_RCCEx_GetPLL2ClockFreq+0x270>
  {
    switch (pllsource)
 800996a:	69bb      	ldr	r3, [r7, #24]
 800996c:	2b02      	cmp	r3, #2
 800996e:	f000 8083 	beq.w	8009a78 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8009972:	69bb      	ldr	r3, [r7, #24]
 8009974:	2b02      	cmp	r3, #2
 8009976:	f200 80a1 	bhi.w	8009abc <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800997a:	69bb      	ldr	r3, [r7, #24]
 800997c:	2b00      	cmp	r3, #0
 800997e:	d003      	beq.n	8009988 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8009980:	69bb      	ldr	r3, [r7, #24]
 8009982:	2b01      	cmp	r3, #1
 8009984:	d056      	beq.n	8009a34 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8009986:	e099      	b.n	8009abc <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009988:	4b88      	ldr	r3, [pc, #544]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	f003 0320 	and.w	r3, r3, #32
 8009990:	2b00      	cmp	r3, #0
 8009992:	d02d      	beq.n	80099f0 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009994:	4b85      	ldr	r3, [pc, #532]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	08db      	lsrs	r3, r3, #3
 800999a:	f003 0303 	and.w	r3, r3, #3
 800999e:	4a84      	ldr	r2, [pc, #528]	; (8009bb0 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 80099a0:	fa22 f303 	lsr.w	r3, r2, r3
 80099a4:	60bb      	str	r3, [r7, #8]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80099a6:	68bb      	ldr	r3, [r7, #8]
 80099a8:	ee07 3a90 	vmov	s15, r3
 80099ac:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80099b0:	697b      	ldr	r3, [r7, #20]
 80099b2:	ee07 3a90 	vmov	s15, r3
 80099b6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80099ba:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80099be:	4b7b      	ldr	r3, [pc, #492]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80099c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80099c2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80099c6:	ee07 3a90 	vmov	s15, r3
 80099ca:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80099ce:	ed97 6a03 	vldr	s12, [r7, #12]
 80099d2:	eddf 5a78 	vldr	s11, [pc, #480]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80099d6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80099da:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80099de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80099e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80099e6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80099ea:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
        }
        break;
 80099ee:	e087      	b.n	8009b00 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 80099f0:	697b      	ldr	r3, [r7, #20]
 80099f2:	ee07 3a90 	vmov	s15, r3
 80099f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80099fa:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8009bb8 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 80099fe:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009a02:	4b6a      	ldr	r3, [pc, #424]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009a04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a06:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a0a:	ee07 3a90 	vmov	s15, r3
 8009a0e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a12:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a16:	eddf 5a67 	vldr	s11, [pc, #412]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009a1a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009a1e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009a22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009a26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009a2a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009a2e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009a32:	e065      	b.n	8009b00 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009a34:	697b      	ldr	r3, [r7, #20]
 8009a36:	ee07 3a90 	vmov	s15, r3
 8009a3a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009a3e:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8009bbc <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009a42:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009a46:	4b59      	ldr	r3, [pc, #356]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009a48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a4a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a4e:	ee07 3a90 	vmov	s15, r3
 8009a52:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a56:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a5a:	eddf 5a56 	vldr	s11, [pc, #344]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009a5e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009a62:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009a66:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009a6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009a6e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009a72:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009a76:	e043      	b.n	8009b00 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009a78:	697b      	ldr	r3, [r7, #20]
 8009a7a:	ee07 3a90 	vmov	s15, r3
 8009a7e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009a82:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8009bc0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 8009a86:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009a8a:	4b48      	ldr	r3, [pc, #288]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009a8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a8e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a92:	ee07 3a90 	vmov	s15, r3
 8009a96:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a9a:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a9e:	eddf 5a45 	vldr	s11, [pc, #276]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009aa2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009aa6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009aaa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009aae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ab2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009ab6:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009aba:	e021      	b.n	8009b00 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      default:
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8009abc:	697b      	ldr	r3, [r7, #20]
 8009abe:	ee07 3a90 	vmov	s15, r3
 8009ac2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ac6:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8009bbc <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009aca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009ace:	4b37      	ldr	r3, [pc, #220]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009ad0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ad2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009ad6:	ee07 3a90 	vmov	s15, r3
 8009ada:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ade:	ed97 6a03 	vldr	s12, [r7, #12]
 8009ae2:	eddf 5a34 	vldr	s11, [pc, #208]	; 8009bb4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009ae6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009aea:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009aee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009af2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009af6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009afa:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009afe:	bf00      	nop
    }
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
 8009b00:	4b2a      	ldr	r3, [pc, #168]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009b02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b04:	0a5b      	lsrs	r3, r3, #9
 8009b06:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b0a:	ee07 3a90 	vmov	s15, r3
 8009b0e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b16:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b1a:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b1e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b22:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b26:	ee17 2a90 	vmov	r2, s15
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
 8009b2e:	4b1f      	ldr	r3, [pc, #124]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009b30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b32:	0c1b      	lsrs	r3, r3, #16
 8009b34:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b38:	ee07 3a90 	vmov	s15, r3
 8009b3c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b40:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b44:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b48:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b4c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b50:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b54:	ee17 2a90 	vmov	r2, s15
 8009b58:	687b      	ldr	r3, [r7, #4]
 8009b5a:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
 8009b5c:	4b13      	ldr	r3, [pc, #76]	; (8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009b5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b60:	0e1b      	lsrs	r3, r3, #24
 8009b62:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b66:	ee07 3a90 	vmov	s15, r3
 8009b6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b6e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b72:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b76:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b7a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b7e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b82:	ee17 2a90 	vmov	r2, s15
 8009b86:	687b      	ldr	r3, [r7, #4]
 8009b88:	609a      	str	r2, [r3, #8]
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
 8009b8a:	e008      	b.n	8009b9e <HAL_RCCEx_GetPLL2ClockFreq+0x282>
    PLL2_Clocks->PLL2_P_Frequency = 0U;
 8009b8c:	687b      	ldr	r3, [r7, #4]
 8009b8e:	2200      	movs	r2, #0
 8009b90:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	2200      	movs	r2, #0
 8009b96:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
 8009b98:	687b      	ldr	r3, [r7, #4]
 8009b9a:	2200      	movs	r2, #0
 8009b9c:	609a      	str	r2, [r3, #8]
}
 8009b9e:	bf00      	nop
 8009ba0:	3724      	adds	r7, #36	; 0x24
 8009ba2:	46bd      	mov	sp, r7
 8009ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ba8:	4770      	bx	lr
 8009baa:	bf00      	nop
 8009bac:	58024400 	.word	0x58024400
 8009bb0:	03d09000 	.word	0x03d09000
 8009bb4:	46000000 	.word	0x46000000
 8009bb8:	4c742400 	.word	0x4c742400
 8009bbc:	4a742400 	.word	0x4a742400
 8009bc0:	4bbebc20 	.word	0x4bbebc20

08009bc4 <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef *PLL3_Clocks)
{
 8009bc4:	b480      	push	{r7}
 8009bc6:	b089      	sub	sp, #36	; 0x24
 8009bc8:	af00      	add	r7, sp, #0
 8009bca:	6078      	str	r0, [r7, #4]
  float_t fracn3, pll3vco;

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
     PLL3xCLK = PLL3_VCO / PLLxR
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009bcc:	4ba1      	ldr	r3, [pc, #644]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009bd0:	f003 0303 	and.w	r3, r3, #3
 8009bd4:	61bb      	str	r3, [r7, #24]
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
 8009bd6:	4b9f      	ldr	r3, [pc, #636]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009bda:	0d1b      	lsrs	r3, r3, #20
 8009bdc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009be0:	617b      	str	r3, [r7, #20]
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
 8009be2:	4b9c      	ldr	r3, [pc, #624]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009be4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009be6:	0a1b      	lsrs	r3, r3, #8
 8009be8:	f003 0301 	and.w	r3, r3, #1
 8009bec:	613b      	str	r3, [r7, #16]
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
 8009bee:	4b99      	ldr	r3, [pc, #612]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009bf2:	08db      	lsrs	r3, r3, #3
 8009bf4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009bf8:	693a      	ldr	r2, [r7, #16]
 8009bfa:	fb02 f303 	mul.w	r3, r2, r3
 8009bfe:	ee07 3a90 	vmov	s15, r3
 8009c02:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009c06:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll3m != 0U)
 8009c0a:	697b      	ldr	r3, [r7, #20]
 8009c0c:	2b00      	cmp	r3, #0
 8009c0e:	f000 8111 	beq.w	8009e34 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
  {
    switch (pllsource)
 8009c12:	69bb      	ldr	r3, [r7, #24]
 8009c14:	2b02      	cmp	r3, #2
 8009c16:	f000 8083 	beq.w	8009d20 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8009c1a:	69bb      	ldr	r3, [r7, #24]
 8009c1c:	2b02      	cmp	r3, #2
 8009c1e:	f200 80a1 	bhi.w	8009d64 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8009c22:	69bb      	ldr	r3, [r7, #24]
 8009c24:	2b00      	cmp	r3, #0
 8009c26:	d003      	beq.n	8009c30 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8009c28:	69bb      	ldr	r3, [r7, #24]
 8009c2a:	2b01      	cmp	r3, #1
 8009c2c:	d056      	beq.n	8009cdc <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8009c2e:	e099      	b.n	8009d64 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009c30:	4b88      	ldr	r3, [pc, #544]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	f003 0320 	and.w	r3, r3, #32
 8009c38:	2b00      	cmp	r3, #0
 8009c3a:	d02d      	beq.n	8009c98 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009c3c:	4b85      	ldr	r3, [pc, #532]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c3e:	681b      	ldr	r3, [r3, #0]
 8009c40:	08db      	lsrs	r3, r3, #3
 8009c42:	f003 0303 	and.w	r3, r3, #3
 8009c46:	4a84      	ldr	r2, [pc, #528]	; (8009e58 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8009c48:	fa22 f303 	lsr.w	r3, r2, r3
 8009c4c:	60bb      	str	r3, [r7, #8]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009c4e:	68bb      	ldr	r3, [r7, #8]
 8009c50:	ee07 3a90 	vmov	s15, r3
 8009c54:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009c58:	697b      	ldr	r3, [r7, #20]
 8009c5a:	ee07 3a90 	vmov	s15, r3
 8009c5e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009c62:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009c66:	4b7b      	ldr	r3, [pc, #492]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c6a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009c6e:	ee07 3a90 	vmov	s15, r3
 8009c72:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009c76:	ed97 6a03 	vldr	s12, [r7, #12]
 8009c7a:	eddf 5a78 	vldr	s11, [pc, #480]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009c7e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009c82:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009c86:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009c8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009c92:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8009c96:	e087      	b.n	8009da8 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009c98:	697b      	ldr	r3, [r7, #20]
 8009c9a:	ee07 3a90 	vmov	s15, r3
 8009c9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ca2:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8009e60 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 8009ca6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009caa:	4b6a      	ldr	r3, [pc, #424]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009cac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009cae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009cb2:	ee07 3a90 	vmov	s15, r3
 8009cb6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009cba:	ed97 6a03 	vldr	s12, [r7, #12]
 8009cbe:	eddf 5a67 	vldr	s11, [pc, #412]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009cc2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009cc6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009cca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009cce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009cd2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009cd6:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009cda:	e065      	b.n	8009da8 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009cdc:	697b      	ldr	r3, [r7, #20]
 8009cde:	ee07 3a90 	vmov	s15, r3
 8009ce2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ce6:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8009e64 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8009cea:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009cee:	4b59      	ldr	r3, [pc, #356]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009cf0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009cf2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009cf6:	ee07 3a90 	vmov	s15, r3
 8009cfa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009cfe:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d02:	eddf 5a56 	vldr	s11, [pc, #344]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009d06:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d0a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d16:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d1a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009d1e:	e043      	b.n	8009da8 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009d20:	697b      	ldr	r3, [r7, #20]
 8009d22:	ee07 3a90 	vmov	s15, r3
 8009d26:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d2a:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8009e68 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 8009d2e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009d32:	4b48      	ldr	r3, [pc, #288]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009d34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d36:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d3a:	ee07 3a90 	vmov	s15, r3
 8009d3e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d42:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d46:	eddf 5a45 	vldr	s11, [pc, #276]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009d4a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d4e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d56:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d5a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d5e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009d62:	e021      	b.n	8009da8 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      default:
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009d64:	697b      	ldr	r3, [r7, #20]
 8009d66:	ee07 3a90 	vmov	s15, r3
 8009d6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d6e:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8009e64 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8009d72:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009d76:	4b37      	ldr	r3, [pc, #220]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009d78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d7a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d7e:	ee07 3a90 	vmov	s15, r3
 8009d82:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d86:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d8a:	eddf 5a34 	vldr	s11, [pc, #208]	; 8009e5c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009d8e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d92:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d9e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009da2:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009da6:	bf00      	nop
    }
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
 8009da8:	4b2a      	ldr	r3, [pc, #168]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009daa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009dac:	0a5b      	lsrs	r3, r3, #9
 8009dae:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009db2:	ee07 3a90 	vmov	s15, r3
 8009db6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009dba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009dbe:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009dc2:	edd7 6a07 	vldr	s13, [r7, #28]
 8009dc6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009dca:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009dce:	ee17 2a90 	vmov	r2, s15
 8009dd2:	687b      	ldr	r3, [r7, #4]
 8009dd4:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
 8009dd6:	4b1f      	ldr	r3, [pc, #124]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009dd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009dda:	0c1b      	lsrs	r3, r3, #16
 8009ddc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009de0:	ee07 3a90 	vmov	s15, r3
 8009de4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009de8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009dec:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009df0:	edd7 6a07 	vldr	s13, [r7, #28]
 8009df4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009df8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009dfc:	ee17 2a90 	vmov	r2, s15
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
 8009e04:	4b13      	ldr	r3, [pc, #76]	; (8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009e06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009e08:	0e1b      	lsrs	r3, r3, #24
 8009e0a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009e0e:	ee07 3a90 	vmov	s15, r3
 8009e12:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e16:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009e1a:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009e1e:	edd7 6a07 	vldr	s13, [r7, #28]
 8009e22:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009e26:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009e2a:	ee17 2a90 	vmov	r2, s15
 8009e2e:	687b      	ldr	r3, [r7, #4]
 8009e30:	609a      	str	r2, [r3, #8]
    PLL3_Clocks->PLL3_P_Frequency = 0U;
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
 8009e32:	e008      	b.n	8009e46 <HAL_RCCEx_GetPLL3ClockFreq+0x282>
    PLL3_Clocks->PLL3_P_Frequency = 0U;
 8009e34:	687b      	ldr	r3, [r7, #4]
 8009e36:	2200      	movs	r2, #0
 8009e38:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	2200      	movs	r2, #0
 8009e3e:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	2200      	movs	r2, #0
 8009e44:	609a      	str	r2, [r3, #8]
}
 8009e46:	bf00      	nop
 8009e48:	3724      	adds	r7, #36	; 0x24
 8009e4a:	46bd      	mov	sp, r7
 8009e4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e50:	4770      	bx	lr
 8009e52:	bf00      	nop
 8009e54:	58024400 	.word	0x58024400
 8009e58:	03d09000 	.word	0x03d09000
 8009e5c:	46000000 	.word	0x46000000
 8009e60:	4c742400 	.word	0x4c742400
 8009e64:	4a742400 	.word	0x4a742400
 8009e68:	4bbebc20 	.word	0x4bbebc20

08009e6c <HAL_RCCEx_GetPLL1ClockFreq>:
  *         right PLL1CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL1_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL1ClockFreq(PLL1_ClocksTypeDef *PLL1_Clocks)
{
 8009e6c:	b480      	push	{r7}
 8009e6e:	b089      	sub	sp, #36	; 0x24
 8009e70:	af00      	add	r7, sp, #0
 8009e72:	6078      	str	r0, [r7, #4]
  uint32_t pllsource, pll1m, pll1fracen, hsivalue;
  float_t fracn1, pll1vco;

  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8009e74:	4ba0      	ldr	r3, [pc, #640]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009e76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e78:	f003 0303 	and.w	r3, r3, #3
 8009e7c:	61bb      	str	r3, [r7, #24]
  pll1m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4);
 8009e7e:	4b9e      	ldr	r3, [pc, #632]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009e80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e82:	091b      	lsrs	r3, r3, #4
 8009e84:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009e88:	617b      	str	r3, [r7, #20]
  pll1fracen = RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN;
 8009e8a:	4b9b      	ldr	r3, [pc, #620]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009e8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e8e:	f003 0301 	and.w	r3, r3, #1
 8009e92:	613b      	str	r3, [r7, #16]
  fracn1 = (float_t)(uint32_t)(pll1fracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8009e94:	4b98      	ldr	r3, [pc, #608]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009e96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009e98:	08db      	lsrs	r3, r3, #3
 8009e9a:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009e9e:	693a      	ldr	r2, [r7, #16]
 8009ea0:	fb02 f303 	mul.w	r3, r2, r3
 8009ea4:	ee07 3a90 	vmov	s15, r3
 8009ea8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009eac:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll1m != 0U)
 8009eb0:	697b      	ldr	r3, [r7, #20]
 8009eb2:	2b00      	cmp	r3, #0
 8009eb4:	f000 8111 	beq.w	800a0da <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
  {
    switch (pllsource)
 8009eb8:	69bb      	ldr	r3, [r7, #24]
 8009eba:	2b02      	cmp	r3, #2
 8009ebc:	f000 8083 	beq.w	8009fc6 <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 8009ec0:	69bb      	ldr	r3, [r7, #24]
 8009ec2:	2b02      	cmp	r3, #2
 8009ec4:	f200 80a1 	bhi.w	800a00a <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 8009ec8:	69bb      	ldr	r3, [r7, #24]
 8009eca:	2b00      	cmp	r3, #0
 8009ecc:	d003      	beq.n	8009ed6 <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 8009ece:	69bb      	ldr	r3, [r7, #24]
 8009ed0:	2b01      	cmp	r3, #1
 8009ed2:	d056      	beq.n	8009f82 <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 8009ed4:	e099      	b.n	800a00a <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009ed6:	4b88      	ldr	r3, [pc, #544]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009ed8:	681b      	ldr	r3, [r3, #0]
 8009eda:	f003 0320 	and.w	r3, r3, #32
 8009ede:	2b00      	cmp	r3, #0
 8009ee0:	d02d      	beq.n	8009f3e <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009ee2:	4b85      	ldr	r3, [pc, #532]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009ee4:	681b      	ldr	r3, [r3, #0]
 8009ee6:	08db      	lsrs	r3, r3, #3
 8009ee8:	f003 0303 	and.w	r3, r3, #3
 8009eec:	4a83      	ldr	r2, [pc, #524]	; (800a0fc <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 8009eee:	fa22 f303 	lsr.w	r3, r2, r3
 8009ef2:	60bb      	str	r3, [r7, #8]
          pll1vco = ((float_t)hsivalue / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8009ef4:	68bb      	ldr	r3, [r7, #8]
 8009ef6:	ee07 3a90 	vmov	s15, r3
 8009efa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009efe:	697b      	ldr	r3, [r7, #20]
 8009f00:	ee07 3a90 	vmov	s15, r3
 8009f04:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f08:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f0c:	4b7a      	ldr	r3, [pc, #488]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009f0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f10:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f14:	ee07 3a90 	vmov	s15, r3
 8009f18:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f1c:	ed97 6a03 	vldr	s12, [r7, #12]
 8009f20:	eddf 5a77 	vldr	s11, [pc, #476]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8009f24:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009f28:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009f2c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009f30:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f34:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009f38:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8009f3c:	e087      	b.n	800a04e <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
          pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8009f3e:	697b      	ldr	r3, [r7, #20]
 8009f40:	ee07 3a90 	vmov	s15, r3
 8009f44:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f48:	eddf 6a6e 	vldr	s13, [pc, #440]	; 800a104 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 8009f4c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f50:	4b69      	ldr	r3, [pc, #420]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009f52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f54:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f58:	ee07 3a90 	vmov	s15, r3
 8009f5c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f60:	ed97 6a03 	vldr	s12, [r7, #12]
 8009f64:	eddf 5a66 	vldr	s11, [pc, #408]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8009f68:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009f6c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009f70:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009f74:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f78:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009f7c:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009f80:	e065      	b.n	800a04e <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll1vco = ((float_t)CSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8009f82:	697b      	ldr	r3, [r7, #20]
 8009f84:	ee07 3a90 	vmov	s15, r3
 8009f88:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f8c:	eddf 6a5e 	vldr	s13, [pc, #376]	; 800a108 <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 8009f90:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f94:	4b58      	ldr	r3, [pc, #352]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009f96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f98:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f9c:	ee07 3a90 	vmov	s15, r3
 8009fa0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009fa4:	ed97 6a03 	vldr	s12, [r7, #12]
 8009fa8:	eddf 5a55 	vldr	s11, [pc, #340]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8009fac:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009fb0:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009fb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009fb8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009fbc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009fc0:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8009fc4:	e043      	b.n	800a04e <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll1vco = ((float_t)HSE_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8009fc6:	697b      	ldr	r3, [r7, #20]
 8009fc8:	ee07 3a90 	vmov	s15, r3
 8009fcc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009fd0:	eddf 6a4e 	vldr	s13, [pc, #312]	; 800a10c <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 8009fd4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009fd8:	4b47      	ldr	r3, [pc, #284]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8009fda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009fdc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009fe0:	ee07 3a90 	vmov	s15, r3
 8009fe4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009fe8:	ed97 6a03 	vldr	s12, [r7, #12]
 8009fec:	eddf 5a44 	vldr	s11, [pc, #272]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8009ff0:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009ff4:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009ff8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009ffc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a000:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a004:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a008:	e021      	b.n	800a04e <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>

      default:
        pll1vco = ((float_t)HSI_VALUE / (float_t)pll1m) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800a00a:	697b      	ldr	r3, [r7, #20]
 800a00c:	ee07 3a90 	vmov	s15, r3
 800a010:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a014:	eddf 6a3b 	vldr	s13, [pc, #236]	; 800a104 <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800a018:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a01c:	4b36      	ldr	r3, [pc, #216]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a01e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a020:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a024:	ee07 3a90 	vmov	s15, r3
 800a028:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a02c:	ed97 6a03 	vldr	s12, [r7, #12]
 800a030:	eddf 5a33 	vldr	s11, [pc, #204]	; 800a100 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a034:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a038:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a03c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a040:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a044:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a048:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800a04c:	bf00      	nop
    }

    PLL1_Clocks->PLL1_P_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9)  + (float_t)1)) ;
 800a04e:	4b2a      	ldr	r3, [pc, #168]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a050:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a052:	0a5b      	lsrs	r3, r3, #9
 800a054:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a058:	ee07 3a90 	vmov	s15, r3
 800a05c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a060:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a064:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a068:	edd7 6a07 	vldr	s13, [r7, #28]
 800a06c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a070:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a074:	ee17 2a90 	vmov	r2, s15
 800a078:	687b      	ldr	r3, [r7, #4]
 800a07a:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> 16) + (float_t)1)) ;
 800a07c:	4b1e      	ldr	r3, [pc, #120]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a07e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a080:	0c1b      	lsrs	r3, r3, #16
 800a082:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a086:	ee07 3a90 	vmov	s15, r3
 800a08a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a08e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a092:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a096:	edd7 6a07 	vldr	s13, [r7, #28]
 800a09a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a09e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a0a2:	ee17 2a90 	vmov	r2, s15
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = (uint32_t)(float_t)(pll1vco / ((float_t)(uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> 24) + (float_t)1)) ;
 800a0aa:	4b13      	ldr	r3, [pc, #76]	; (800a0f8 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a0ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a0ae:	0e1b      	lsrs	r3, r3, #24
 800a0b0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a0b4:	ee07 3a90 	vmov	s15, r3
 800a0b8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a0bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a0c0:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a0c4:	edd7 6a07 	vldr	s13, [r7, #28]
 800a0c8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a0cc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a0d0:	ee17 2a90 	vmov	r2, s15
 800a0d4:	687b      	ldr	r3, [r7, #4]
 800a0d6:	609a      	str	r2, [r3, #8]
    PLL1_Clocks->PLL1_P_Frequency = 0U;
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
    PLL1_Clocks->PLL1_R_Frequency = 0U;
  }

}
 800a0d8:	e008      	b.n	800a0ec <HAL_RCCEx_GetPLL1ClockFreq+0x280>
    PLL1_Clocks->PLL1_P_Frequency = 0U;
 800a0da:	687b      	ldr	r3, [r7, #4]
 800a0dc:	2200      	movs	r2, #0
 800a0de:	601a      	str	r2, [r3, #0]
    PLL1_Clocks->PLL1_Q_Frequency = 0U;
 800a0e0:	687b      	ldr	r3, [r7, #4]
 800a0e2:	2200      	movs	r2, #0
 800a0e4:	605a      	str	r2, [r3, #4]
    PLL1_Clocks->PLL1_R_Frequency = 0U;
 800a0e6:	687b      	ldr	r3, [r7, #4]
 800a0e8:	2200      	movs	r2, #0
 800a0ea:	609a      	str	r2, [r3, #8]
}
 800a0ec:	bf00      	nop
 800a0ee:	3724      	adds	r7, #36	; 0x24
 800a0f0:	46bd      	mov	sp, r7
 800a0f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0f6:	4770      	bx	lr
 800a0f8:	58024400 	.word	0x58024400
 800a0fc:	03d09000 	.word	0x03d09000
 800a100:	46000000 	.word	0x46000000
 800a104:	4c742400 	.word	0x4c742400
 800a108:	4a742400 	.word	0x4a742400
 800a10c:	4bbebc20 	.word	0x4bbebc20

0800a110 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 800a110:	b580      	push	{r7, lr}
 800a112:	b084      	sub	sp, #16
 800a114:	af00      	add	r7, sp, #0
 800a116:	6078      	str	r0, [r7, #4]
 800a118:	6039      	str	r1, [r7, #0]

  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800a11a:	2300      	movs	r3, #0
 800a11c:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800a11e:	4b53      	ldr	r3, [pc, #332]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a120:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a122:	f003 0303 	and.w	r3, r3, #3
 800a126:	2b03      	cmp	r3, #3
 800a128:	d101      	bne.n	800a12e <RCCEx_PLL2_Config+0x1e>
  {
    return HAL_ERROR;
 800a12a:	2301      	movs	r3, #1
 800a12c:	e099      	b.n	800a262 <RCCEx_PLL2_Config+0x152>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 800a12e:	4b4f      	ldr	r3, [pc, #316]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a130:	681b      	ldr	r3, [r3, #0]
 800a132:	4a4e      	ldr	r2, [pc, #312]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a134:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800a138:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a13a:	f7f7 fca9 	bl	8001a90 <HAL_GetTick>
 800a13e:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800a140:	e008      	b.n	800a154 <RCCEx_PLL2_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800a142:	f7f7 fca5 	bl	8001a90 <HAL_GetTick>
 800a146:	4602      	mov	r2, r0
 800a148:	68bb      	ldr	r3, [r7, #8]
 800a14a:	1ad3      	subs	r3, r2, r3
 800a14c:	2b02      	cmp	r3, #2
 800a14e:	d901      	bls.n	800a154 <RCCEx_PLL2_Config+0x44>
      {
        return HAL_TIMEOUT;
 800a150:	2303      	movs	r3, #3
 800a152:	e086      	b.n	800a262 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800a154:	4b45      	ldr	r3, [pc, #276]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a156:	681b      	ldr	r3, [r3, #0]
 800a158:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a15c:	2b00      	cmp	r3, #0
 800a15e:	d1f0      	bne.n	800a142 <RCCEx_PLL2_Config+0x32>
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 800a160:	4b42      	ldr	r3, [pc, #264]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a162:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a164:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	681b      	ldr	r3, [r3, #0]
 800a16c:	031b      	lsls	r3, r3, #12
 800a16e:	493f      	ldr	r1, [pc, #252]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a170:	4313      	orrs	r3, r2
 800a172:	628b      	str	r3, [r1, #40]	; 0x28
 800a174:	687b      	ldr	r3, [r7, #4]
 800a176:	685b      	ldr	r3, [r3, #4]
 800a178:	3b01      	subs	r3, #1
 800a17a:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	689b      	ldr	r3, [r3, #8]
 800a182:	3b01      	subs	r3, #1
 800a184:	025b      	lsls	r3, r3, #9
 800a186:	b29b      	uxth	r3, r3
 800a188:	431a      	orrs	r2, r3
 800a18a:	687b      	ldr	r3, [r7, #4]
 800a18c:	68db      	ldr	r3, [r3, #12]
 800a18e:	3b01      	subs	r3, #1
 800a190:	041b      	lsls	r3, r3, #16
 800a192:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a196:	431a      	orrs	r2, r3
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	691b      	ldr	r3, [r3, #16]
 800a19c:	3b01      	subs	r3, #1
 800a19e:	061b      	lsls	r3, r3, #24
 800a1a0:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a1a4:	4931      	ldr	r1, [pc, #196]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1a6:	4313      	orrs	r3, r2
 800a1a8:	638b      	str	r3, [r1, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 800a1aa:	4b30      	ldr	r3, [pc, #192]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1ae:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800a1b2:	687b      	ldr	r3, [r7, #4]
 800a1b4:	695b      	ldr	r3, [r3, #20]
 800a1b6:	492d      	ldr	r1, [pc, #180]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1b8:	4313      	orrs	r3, r2
 800a1ba:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 800a1bc:	4b2b      	ldr	r3, [pc, #172]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1c0:	f023 0220 	bic.w	r2, r3, #32
 800a1c4:	687b      	ldr	r3, [r7, #4]
 800a1c6:	699b      	ldr	r3, [r3, #24]
 800a1c8:	4928      	ldr	r1, [pc, #160]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1ca:	4313      	orrs	r3, r2
 800a1cc:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 800a1ce:	4b27      	ldr	r3, [pc, #156]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1d2:	4a26      	ldr	r2, [pc, #152]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1d4:	f023 0310 	bic.w	r3, r3, #16
 800a1d8:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 800a1da:	4b24      	ldr	r3, [pc, #144]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1dc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a1de:	4b24      	ldr	r3, [pc, #144]	; (800a270 <RCCEx_PLL2_Config+0x160>)
 800a1e0:	4013      	ands	r3, r2
 800a1e2:	687a      	ldr	r2, [r7, #4]
 800a1e4:	69d2      	ldr	r2, [r2, #28]
 800a1e6:	00d2      	lsls	r2, r2, #3
 800a1e8:	4920      	ldr	r1, [pc, #128]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1ea:	4313      	orrs	r3, r2
 800a1ec:	63cb      	str	r3, [r1, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 800a1ee:	4b1f      	ldr	r3, [pc, #124]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1f2:	4a1e      	ldr	r2, [pc, #120]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a1f4:	f043 0310 	orr.w	r3, r3, #16
 800a1f8:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800a1fa:	683b      	ldr	r3, [r7, #0]
 800a1fc:	2b00      	cmp	r3, #0
 800a1fe:	d106      	bne.n	800a20e <RCCEx_PLL2_Config+0xfe>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 800a200:	4b1a      	ldr	r3, [pc, #104]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a202:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a204:	4a19      	ldr	r2, [pc, #100]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a206:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800a20a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a20c:	e00f      	b.n	800a22e <RCCEx_PLL2_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 800a20e:	683b      	ldr	r3, [r7, #0]
 800a210:	2b01      	cmp	r3, #1
 800a212:	d106      	bne.n	800a222 <RCCEx_PLL2_Config+0x112>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 800a214:	4b15      	ldr	r3, [pc, #84]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a216:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a218:	4a14      	ldr	r2, [pc, #80]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a21a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a21e:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a220:	e005      	b.n	800a22e <RCCEx_PLL2_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 800a222:	4b12      	ldr	r3, [pc, #72]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a226:	4a11      	ldr	r2, [pc, #68]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a228:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800a22c:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 800a22e:	4b0f      	ldr	r3, [pc, #60]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a230:	681b      	ldr	r3, [r3, #0]
 800a232:	4a0e      	ldr	r2, [pc, #56]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a234:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800a238:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a23a:	f7f7 fc29 	bl	8001a90 <HAL_GetTick>
 800a23e:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800a240:	e008      	b.n	800a254 <RCCEx_PLL2_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800a242:	f7f7 fc25 	bl	8001a90 <HAL_GetTick>
 800a246:	4602      	mov	r2, r0
 800a248:	68bb      	ldr	r3, [r7, #8]
 800a24a:	1ad3      	subs	r3, r2, r3
 800a24c:	2b02      	cmp	r3, #2
 800a24e:	d901      	bls.n	800a254 <RCCEx_PLL2_Config+0x144>
      {
        return HAL_TIMEOUT;
 800a250:	2303      	movs	r3, #3
 800a252:	e006      	b.n	800a262 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 800a254:	4b05      	ldr	r3, [pc, #20]	; (800a26c <RCCEx_PLL2_Config+0x15c>)
 800a256:	681b      	ldr	r3, [r3, #0]
 800a258:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a25c:	2b00      	cmp	r3, #0
 800a25e:	d0f0      	beq.n	800a242 <RCCEx_PLL2_Config+0x132>
    }

  }


  return status;
 800a260:	7bfb      	ldrb	r3, [r7, #15]
}
 800a262:	4618      	mov	r0, r3
 800a264:	3710      	adds	r7, #16
 800a266:	46bd      	mov	sp, r7
 800a268:	bd80      	pop	{r7, pc}
 800a26a:	bf00      	nop
 800a26c:	58024400 	.word	0x58024400
 800a270:	ffff0007 	.word	0xffff0007

0800a274 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 800a274:	b580      	push	{r7, lr}
 800a276:	b084      	sub	sp, #16
 800a278:	af00      	add	r7, sp, #0
 800a27a:	6078      	str	r0, [r7, #4]
 800a27c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800a27e:	2300      	movs	r3, #0
 800a280:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800a282:	4b53      	ldr	r3, [pc, #332]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a284:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a286:	f003 0303 	and.w	r3, r3, #3
 800a28a:	2b03      	cmp	r3, #3
 800a28c:	d101      	bne.n	800a292 <RCCEx_PLL3_Config+0x1e>
  {
    return HAL_ERROR;
 800a28e:	2301      	movs	r3, #1
 800a290:	e099      	b.n	800a3c6 <RCCEx_PLL3_Config+0x152>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 800a292:	4b4f      	ldr	r3, [pc, #316]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a294:	681b      	ldr	r3, [r3, #0]
 800a296:	4a4e      	ldr	r2, [pc, #312]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a298:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a29c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a29e:	f7f7 fbf7 	bl	8001a90 <HAL_GetTick>
 800a2a2:	60b8      	str	r0, [r7, #8]
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800a2a4:	e008      	b.n	800a2b8 <RCCEx_PLL3_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800a2a6:	f7f7 fbf3 	bl	8001a90 <HAL_GetTick>
 800a2aa:	4602      	mov	r2, r0
 800a2ac:	68bb      	ldr	r3, [r7, #8]
 800a2ae:	1ad3      	subs	r3, r2, r3
 800a2b0:	2b02      	cmp	r3, #2
 800a2b2:	d901      	bls.n	800a2b8 <RCCEx_PLL3_Config+0x44>
      {
        return HAL_TIMEOUT;
 800a2b4:	2303      	movs	r3, #3
 800a2b6:	e086      	b.n	800a3c6 <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800a2b8:	4b45      	ldr	r3, [pc, #276]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a2ba:	681b      	ldr	r3, [r3, #0]
 800a2bc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a2c0:	2b00      	cmp	r3, #0
 800a2c2:	d1f0      	bne.n	800a2a6 <RCCEx_PLL3_Config+0x32>
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 800a2c4:	4b42      	ldr	r3, [pc, #264]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a2c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a2c8:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 800a2cc:	687b      	ldr	r3, [r7, #4]
 800a2ce:	681b      	ldr	r3, [r3, #0]
 800a2d0:	051b      	lsls	r3, r3, #20
 800a2d2:	493f      	ldr	r1, [pc, #252]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a2d4:	4313      	orrs	r3, r2
 800a2d6:	628b      	str	r3, [r1, #40]	; 0x28
 800a2d8:	687b      	ldr	r3, [r7, #4]
 800a2da:	685b      	ldr	r3, [r3, #4]
 800a2dc:	3b01      	subs	r3, #1
 800a2de:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a2e2:	687b      	ldr	r3, [r7, #4]
 800a2e4:	689b      	ldr	r3, [r3, #8]
 800a2e6:	3b01      	subs	r3, #1
 800a2e8:	025b      	lsls	r3, r3, #9
 800a2ea:	b29b      	uxth	r3, r3
 800a2ec:	431a      	orrs	r2, r3
 800a2ee:	687b      	ldr	r3, [r7, #4]
 800a2f0:	68db      	ldr	r3, [r3, #12]
 800a2f2:	3b01      	subs	r3, #1
 800a2f4:	041b      	lsls	r3, r3, #16
 800a2f6:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a2fa:	431a      	orrs	r2, r3
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	691b      	ldr	r3, [r3, #16]
 800a300:	3b01      	subs	r3, #1
 800a302:	061b      	lsls	r3, r3, #24
 800a304:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a308:	4931      	ldr	r1, [pc, #196]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a30a:	4313      	orrs	r3, r2
 800a30c:	640b      	str	r3, [r1, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 800a30e:	4b30      	ldr	r3, [pc, #192]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a310:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a312:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800a316:	687b      	ldr	r3, [r7, #4]
 800a318:	695b      	ldr	r3, [r3, #20]
 800a31a:	492d      	ldr	r1, [pc, #180]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a31c:	4313      	orrs	r3, r2
 800a31e:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 800a320:	4b2b      	ldr	r3, [pc, #172]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a322:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a324:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800a328:	687b      	ldr	r3, [r7, #4]
 800a32a:	699b      	ldr	r3, [r3, #24]
 800a32c:	4928      	ldr	r1, [pc, #160]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a32e:	4313      	orrs	r3, r2
 800a330:	62cb      	str	r3, [r1, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 800a332:	4b27      	ldr	r3, [pc, #156]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a336:	4a26      	ldr	r2, [pc, #152]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a338:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a33c:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 800a33e:	4b24      	ldr	r3, [pc, #144]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a340:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a342:	4b24      	ldr	r3, [pc, #144]	; (800a3d4 <RCCEx_PLL3_Config+0x160>)
 800a344:	4013      	ands	r3, r2
 800a346:	687a      	ldr	r2, [r7, #4]
 800a348:	69d2      	ldr	r2, [r2, #28]
 800a34a:	00d2      	lsls	r2, r2, #3
 800a34c:	4920      	ldr	r1, [pc, #128]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a34e:	4313      	orrs	r3, r2
 800a350:	644b      	str	r3, [r1, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 800a352:	4b1f      	ldr	r3, [pc, #124]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a356:	4a1e      	ldr	r2, [pc, #120]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a358:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a35c:	62d3      	str	r3, [r2, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800a35e:	683b      	ldr	r3, [r7, #0]
 800a360:	2b00      	cmp	r3, #0
 800a362:	d106      	bne.n	800a372 <RCCEx_PLL3_Config+0xfe>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 800a364:	4b1a      	ldr	r3, [pc, #104]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a366:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a368:	4a19      	ldr	r2, [pc, #100]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a36a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800a36e:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a370:	e00f      	b.n	800a392 <RCCEx_PLL3_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 800a372:	683b      	ldr	r3, [r7, #0]
 800a374:	2b01      	cmp	r3, #1
 800a376:	d106      	bne.n	800a386 <RCCEx_PLL3_Config+0x112>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 800a378:	4b15      	ldr	r3, [pc, #84]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a37a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a37c:	4a14      	ldr	r2, [pc, #80]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a37e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a382:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a384:	e005      	b.n	800a392 <RCCEx_PLL3_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800a386:	4b12      	ldr	r3, [pc, #72]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a38a:	4a11      	ldr	r2, [pc, #68]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a38c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800a390:	62d3      	str	r3, [r2, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 800a392:	4b0f      	ldr	r3, [pc, #60]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a394:	681b      	ldr	r3, [r3, #0]
 800a396:	4a0e      	ldr	r2, [pc, #56]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a398:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a39c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800a39e:	f7f7 fb77 	bl	8001a90 <HAL_GetTick>
 800a3a2:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800a3a4:	e008      	b.n	800a3b8 <RCCEx_PLL3_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800a3a6:	f7f7 fb73 	bl	8001a90 <HAL_GetTick>
 800a3aa:	4602      	mov	r2, r0
 800a3ac:	68bb      	ldr	r3, [r7, #8]
 800a3ae:	1ad3      	subs	r3, r2, r3
 800a3b0:	2b02      	cmp	r3, #2
 800a3b2:	d901      	bls.n	800a3b8 <RCCEx_PLL3_Config+0x144>
      {
        return HAL_TIMEOUT;
 800a3b4:	2303      	movs	r3, #3
 800a3b6:	e006      	b.n	800a3c6 <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 800a3b8:	4b05      	ldr	r3, [pc, #20]	; (800a3d0 <RCCEx_PLL3_Config+0x15c>)
 800a3ba:	681b      	ldr	r3, [r3, #0]
 800a3bc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a3c0:	2b00      	cmp	r3, #0
 800a3c2:	d0f0      	beq.n	800a3a6 <RCCEx_PLL3_Config+0x132>
    }

  }


  return status;
 800a3c4:	7bfb      	ldrb	r3, [r7, #15]
}
 800a3c6:	4618      	mov	r0, r3
 800a3c8:	3710      	adds	r7, #16
 800a3ca:	46bd      	mov	sp, r7
 800a3cc:	bd80      	pop	{r7, pc}
 800a3ce:	bf00      	nop
 800a3d0:	58024400 	.word	0x58024400
 800a3d4:	ffff0007 	.word	0xffff0007

0800a3d8 <HAL_SPI_Init>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800a3d8:	b580      	push	{r7, lr}
 800a3da:	b084      	sub	sp, #16
 800a3dc:	af00      	add	r7, sp, #0
 800a3de:	6078      	str	r0, [r7, #4]
#if (USE_SPI_CRC != 0UL)
  uint32_t crc_poly_msb_mask;
#endif /* USE_SPI_CRC */

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800a3e0:	687b      	ldr	r3, [r7, #4]
 800a3e2:	2b00      	cmp	r3, #0
 800a3e4:	d101      	bne.n	800a3ea <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800a3e6:	2301      	movs	r3, #1
 800a3e8:	e10f      	b.n	800a60a <HAL_SPI_Init+0x232>
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	2200      	movs	r2, #0
 800a3ee:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 800a3f0:	687b      	ldr	r3, [r7, #4]
 800a3f2:	681b      	ldr	r3, [r3, #0]
 800a3f4:	4a87      	ldr	r2, [pc, #540]	; (800a614 <HAL_SPI_Init+0x23c>)
 800a3f6:	4293      	cmp	r3, r2
 800a3f8:	d00f      	beq.n	800a41a <HAL_SPI_Init+0x42>
 800a3fa:	687b      	ldr	r3, [r7, #4]
 800a3fc:	681b      	ldr	r3, [r3, #0]
 800a3fe:	4a86      	ldr	r2, [pc, #536]	; (800a618 <HAL_SPI_Init+0x240>)
 800a400:	4293      	cmp	r3, r2
 800a402:	d00a      	beq.n	800a41a <HAL_SPI_Init+0x42>
 800a404:	687b      	ldr	r3, [r7, #4]
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	4a84      	ldr	r2, [pc, #528]	; (800a61c <HAL_SPI_Init+0x244>)
 800a40a:	4293      	cmp	r3, r2
 800a40c:	d005      	beq.n	800a41a <HAL_SPI_Init+0x42>
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	68db      	ldr	r3, [r3, #12]
 800a412:	2b0f      	cmp	r3, #15
 800a414:	d901      	bls.n	800a41a <HAL_SPI_Init+0x42>
  {
    return HAL_ERROR;
 800a416:	2301      	movs	r3, #1
 800a418:	e0f7      	b.n	800a60a <HAL_SPI_Init+0x232>
  }

  /* Verify that the SPI instance supports requested data packing */
  packet_length = SPI_GetPacketSize(hspi);
 800a41a:	6878      	ldr	r0, [r7, #4]
 800a41c:	f000 ff6c 	bl	800b2f8 <SPI_GetPacketSize>
 800a420:	60f8      	str	r0, [r7, #12]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800a422:	687b      	ldr	r3, [r7, #4]
 800a424:	681b      	ldr	r3, [r3, #0]
 800a426:	4a7b      	ldr	r2, [pc, #492]	; (800a614 <HAL_SPI_Init+0x23c>)
 800a428:	4293      	cmp	r3, r2
 800a42a:	d00c      	beq.n	800a446 <HAL_SPI_Init+0x6e>
 800a42c:	687b      	ldr	r3, [r7, #4]
 800a42e:	681b      	ldr	r3, [r3, #0]
 800a430:	4a79      	ldr	r2, [pc, #484]	; (800a618 <HAL_SPI_Init+0x240>)
 800a432:	4293      	cmp	r3, r2
 800a434:	d007      	beq.n	800a446 <HAL_SPI_Init+0x6e>
 800a436:	687b      	ldr	r3, [r7, #4]
 800a438:	681b      	ldr	r3, [r3, #0]
 800a43a:	4a78      	ldr	r2, [pc, #480]	; (800a61c <HAL_SPI_Init+0x244>)
 800a43c:	4293      	cmp	r3, r2
 800a43e:	d002      	beq.n	800a446 <HAL_SPI_Init+0x6e>
 800a440:	68fb      	ldr	r3, [r7, #12]
 800a442:	2b08      	cmp	r3, #8
 800a444:	d811      	bhi.n	800a46a <HAL_SPI_Init+0x92>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800a446:	687b      	ldr	r3, [r7, #4]
 800a448:	681b      	ldr	r3, [r3, #0]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800a44a:	4a72      	ldr	r2, [pc, #456]	; (800a614 <HAL_SPI_Init+0x23c>)
 800a44c:	4293      	cmp	r3, r2
 800a44e:	d009      	beq.n	800a464 <HAL_SPI_Init+0x8c>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 800a450:	687b      	ldr	r3, [r7, #4]
 800a452:	681b      	ldr	r3, [r3, #0]
 800a454:	4a70      	ldr	r2, [pc, #448]	; (800a618 <HAL_SPI_Init+0x240>)
 800a456:	4293      	cmp	r3, r2
 800a458:	d004      	beq.n	800a464 <HAL_SPI_Init+0x8c>
 800a45a:	687b      	ldr	r3, [r7, #4]
 800a45c:	681b      	ldr	r3, [r3, #0]
 800a45e:	4a6f      	ldr	r2, [pc, #444]	; (800a61c <HAL_SPI_Init+0x244>)
 800a460:	4293      	cmp	r3, r2
 800a462:	d104      	bne.n	800a46e <HAL_SPI_Init+0x96>
 800a464:	68fb      	ldr	r3, [r7, #12]
 800a466:	2b10      	cmp	r3, #16
 800a468:	d901      	bls.n	800a46e <HAL_SPI_Init+0x96>
  {
    return HAL_ERROR;
 800a46a:	2301      	movs	r3, #1
 800a46c:	e0cd      	b.n	800a60a <HAL_SPI_Init+0x232>
  {
    crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
  }
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800a46e:	687b      	ldr	r3, [r7, #4]
 800a470:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800a474:	b2db      	uxtb	r3, r3
 800a476:	2b00      	cmp	r3, #0
 800a478:	d106      	bne.n	800a488 <HAL_SPI_Init+0xb0>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800a47a:	687b      	ldr	r3, [r7, #4]
 800a47c:	2200      	movs	r2, #0
 800a47e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800a482:	6878      	ldr	r0, [r7, #4]
 800a484:	f7f6 ff7c 	bl	8001380 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800a488:	687b      	ldr	r3, [r7, #4]
 800a48a:	2202      	movs	r2, #2
 800a48c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800a490:	687b      	ldr	r3, [r7, #4]
 800a492:	681b      	ldr	r3, [r3, #0]
 800a494:	681a      	ldr	r2, [r3, #0]
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	681b      	ldr	r3, [r3, #0]
 800a49a:	f022 0201 	bic.w	r2, r2, #1
 800a49e:	601a      	str	r2, [r3, #0]

#if (USE_SPI_CRC == 0)
  /* Keep the default value of CRCSIZE in case of CRC is not used */
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	689b      	ldr	r3, [r3, #8]
 800a4a6:	f403 13f8 	and.w	r3, r3, #2031616	; 0x1f0000
 800a4aa:	60bb      	str	r3, [r7, #8]
  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit, CRC calculation state, CRC Length */

  /* SPIx NSS Software Management Configuration */
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800a4ac:	687b      	ldr	r3, [r7, #4]
 800a4ae:	699b      	ldr	r3, [r3, #24]
 800a4b0:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a4b4:	d119      	bne.n	800a4ea <HAL_SPI_Init+0x112>
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	685b      	ldr	r3, [r3, #4]
 800a4ba:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800a4be:	d103      	bne.n	800a4c8 <HAL_SPI_Init+0xf0>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 800a4c0:	687b      	ldr	r3, [r7, #4]
 800a4c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800a4c4:	2b00      	cmp	r3, #0
 800a4c6:	d008      	beq.n	800a4da <HAL_SPI_Init+0x102>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800a4c8:	687b      	ldr	r3, [r7, #4]
 800a4ca:	685b      	ldr	r3, [r3, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 800a4cc:	2b00      	cmp	r3, #0
 800a4ce:	d10c      	bne.n	800a4ea <HAL_SPI_Init+0x112>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800a4d4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800a4d8:	d107      	bne.n	800a4ea <HAL_SPI_Init+0x112>
  {
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 800a4da:	687b      	ldr	r3, [r7, #4]
 800a4dc:	681b      	ldr	r3, [r3, #0]
 800a4de:	681a      	ldr	r2, [r3, #0]
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	681b      	ldr	r3, [r3, #0]
 800a4e4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a4e8:	601a      	str	r2, [r3, #0]
  }

  /* SPIx Master Rx Auto Suspend Configuration */
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	685b      	ldr	r3, [r3, #4]
 800a4ee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a4f2:	2b00      	cmp	r3, #0
 800a4f4:	d00f      	beq.n	800a516 <HAL_SPI_Init+0x13e>
 800a4f6:	687b      	ldr	r3, [r7, #4]
 800a4f8:	68db      	ldr	r3, [r3, #12]
 800a4fa:	2b06      	cmp	r3, #6
 800a4fc:	d90b      	bls.n	800a516 <HAL_SPI_Init+0x13e>
  {
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 800a4fe:	687b      	ldr	r3, [r7, #4]
 800a500:	681b      	ldr	r3, [r3, #0]
 800a502:	681b      	ldr	r3, [r3, #0]
 800a504:	f423 7180 	bic.w	r1, r3, #256	; 0x100
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800a50c:	687b      	ldr	r3, [r7, #4]
 800a50e:	681b      	ldr	r3, [r3, #0]
 800a510:	430a      	orrs	r2, r1
 800a512:	601a      	str	r2, [r3, #0]
 800a514:	e007      	b.n	800a526 <HAL_SPI_Init+0x14e>
  }
  else
  {
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 800a516:	687b      	ldr	r3, [r7, #4]
 800a518:	681b      	ldr	r3, [r3, #0]
 800a51a:	681a      	ldr	r2, [r3, #0]
 800a51c:	687b      	ldr	r3, [r7, #4]
 800a51e:	681b      	ldr	r3, [r3, #0]
 800a520:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a524:	601a      	str	r2, [r3, #0]
  }

  /* SPIx CFG1 Configuration */
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
 800a526:	687b      	ldr	r3, [r7, #4]
 800a528:	69da      	ldr	r2, [r3, #28]
 800a52a:	687b      	ldr	r3, [r7, #4]
 800a52c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a52e:	431a      	orrs	r2, r3
 800a530:	68bb      	ldr	r3, [r7, #8]
 800a532:	431a      	orrs	r2, r3
 800a534:	687b      	ldr	r3, [r7, #4]
 800a536:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a538:	ea42 0103 	orr.w	r1, r2, r3
 800a53c:	687b      	ldr	r3, [r7, #4]
 800a53e:	68da      	ldr	r2, [r3, #12]
 800a540:	687b      	ldr	r3, [r7, #4]
 800a542:	681b      	ldr	r3, [r3, #0]
 800a544:	430a      	orrs	r2, r1
 800a546:	609a      	str	r2, [r3, #8]
                                   hspi->Init.FifoThreshold     | hspi->Init.DataSize));

  /* SPIx CFG2 Configuration */
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 800a548:	687b      	ldr	r3, [r7, #4]
 800a54a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a54c:	687b      	ldr	r3, [r7, #4]
 800a54e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a550:	431a      	orrs	r2, r3
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a556:	431a      	orrs	r2, r3
 800a558:	687b      	ldr	r3, [r7, #4]
 800a55a:	699b      	ldr	r3, [r3, #24]
 800a55c:	431a      	orrs	r2, r3
 800a55e:	687b      	ldr	r3, [r7, #4]
 800a560:	691b      	ldr	r3, [r3, #16]
 800a562:	431a      	orrs	r2, r3
 800a564:	687b      	ldr	r3, [r7, #4]
 800a566:	695b      	ldr	r3, [r3, #20]
 800a568:	431a      	orrs	r2, r3
 800a56a:	687b      	ldr	r3, [r7, #4]
 800a56c:	6a1b      	ldr	r3, [r3, #32]
 800a56e:	431a      	orrs	r2, r3
 800a570:	687b      	ldr	r3, [r7, #4]
 800a572:	685b      	ldr	r3, [r3, #4]
 800a574:	431a      	orrs	r2, r3
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a57a:	431a      	orrs	r2, r3
 800a57c:	687b      	ldr	r3, [r7, #4]
 800a57e:	689b      	ldr	r3, [r3, #8]
 800a580:	431a      	orrs	r2, r3
 800a582:	687b      	ldr	r3, [r7, #4]
 800a584:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a586:	ea42 0103 	orr.w	r1, r2, r3
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	681b      	ldr	r3, [r3, #0]
 800a592:	430a      	orrs	r2, r1
 800a594:	60da      	str	r2, [r3, #12]
    }
  }
#endif /* USE_SPI_CRC */

  /* Insure that Underrun configuration is managed only by Salve */
  if (hspi->Init.Mode == SPI_MODE_SLAVE)
 800a596:	687b      	ldr	r3, [r7, #4]
 800a598:	685b      	ldr	r3, [r3, #4]
 800a59a:	2b00      	cmp	r3, #0
 800a59c:	d113      	bne.n	800a5c6 <HAL_SPI_Init+0x1ee>
    /* Set Default Underrun configuration */
#if (USE_SPI_CRC != 0UL)
    if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
#endif /* USE_SPI_CRC */
    {
      MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 800a59e:	687b      	ldr	r3, [r7, #4]
 800a5a0:	681b      	ldr	r3, [r3, #0]
 800a5a2:	689b      	ldr	r3, [r3, #8]
 800a5a4:	f423 52c0 	bic.w	r2, r3, #6144	; 0x1800
 800a5a8:	687b      	ldr	r3, [r7, #4]
 800a5aa:	681b      	ldr	r3, [r3, #0]
 800a5ac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a5b0:	609a      	str	r2, [r3, #8]
    }
    MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 800a5b2:	687b      	ldr	r3, [r7, #4]
 800a5b4:	681b      	ldr	r3, [r3, #0]
 800a5b6:	689b      	ldr	r3, [r3, #8]
 800a5b8:	f423 62c0 	bic.w	r2, r3, #1536	; 0x600
 800a5bc:	687b      	ldr	r3, [r7, #4]
 800a5be:	681b      	ldr	r3, [r3, #0]
 800a5c0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a5c4:	609a      	str	r2, [r3, #8]
  }

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	681b      	ldr	r3, [r3, #0]
 800a5ca:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	681b      	ldr	r3, [r3, #0]
 800a5d0:	f022 0201 	bic.w	r2, r2, #1
 800a5d4:	651a      	str	r2, [r3, #80]	; 0x50
#endif /* SPI_I2SCFGR_I2SMOD */

  /* Insure that AFCNTR is managed only by Master */
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	685b      	ldr	r3, [r3, #4]
 800a5da:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a5de:	2b00      	cmp	r3, #0
 800a5e0:	d00a      	beq.n	800a5f8 <HAL_SPI_Init+0x220>
  {
    /* Alternate function GPIOs control */
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 800a5e2:	687b      	ldr	r3, [r7, #4]
 800a5e4:	681b      	ldr	r3, [r3, #0]
 800a5e6:	68db      	ldr	r3, [r3, #12]
 800a5e8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800a5ec:	687b      	ldr	r3, [r7, #4]
 800a5ee:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800a5f0:	687b      	ldr	r3, [r7, #4]
 800a5f2:	681b      	ldr	r3, [r3, #0]
 800a5f4:	430a      	orrs	r2, r1
 800a5f6:	60da      	str	r2, [r3, #12]
  }

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800a5f8:	687b      	ldr	r3, [r7, #4]
 800a5fa:	2200      	movs	r2, #0
 800a5fc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->State     = HAL_SPI_STATE_READY;
 800a600:	687b      	ldr	r3, [r7, #4]
 800a602:	2201      	movs	r2, #1
 800a604:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  return HAL_OK;
 800a608:	2300      	movs	r3, #0
}
 800a60a:	4618      	mov	r0, r3
 800a60c:	3710      	adds	r7, #16
 800a60e:	46bd      	mov	sp, r7
 800a610:	bd80      	pop	{r7, pc}
 800a612:	bf00      	nop
 800a614:	40013000 	.word	0x40013000
 800a618:	40003800 	.word	0x40003800
 800a61c:	40003c00 	.word	0x40003c00

0800a620 <HAL_SPI_Transmit>:
  * @param  Size   : amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800a620:	b580      	push	{r7, lr}
 800a622:	b088      	sub	sp, #32
 800a624:	af02      	add	r7, sp, #8
 800a626:	60f8      	str	r0, [r7, #12]
 800a628:	60b9      	str	r1, [r7, #8]
 800a62a:	603b      	str	r3, [r7, #0]
 800a62c:	4613      	mov	r3, r2
 800a62e:	80fb      	strh	r3, [r7, #6]
#if defined (__GNUC__)
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 800a630:	68fb      	ldr	r3, [r7, #12]
 800a632:	681b      	ldr	r3, [r3, #0]
 800a634:	3320      	adds	r3, #32
 800a636:	617b      	str	r3, [r7, #20]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800a638:	f7f7 fa2a 	bl	8001a90 <HAL_GetTick>
 800a63c:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 800a63e:	68fb      	ldr	r3, [r7, #12]
 800a640:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800a644:	b2db      	uxtb	r3, r3
 800a646:	2b01      	cmp	r3, #1
 800a648:	d001      	beq.n	800a64e <HAL_SPI_Transmit+0x2e>
  {
    return HAL_BUSY;
 800a64a:	2302      	movs	r3, #2
 800a64c:	e1d1      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
  }

  if ((pData == NULL) || (Size == 0UL))
 800a64e:	68bb      	ldr	r3, [r7, #8]
 800a650:	2b00      	cmp	r3, #0
 800a652:	d002      	beq.n	800a65a <HAL_SPI_Transmit+0x3a>
 800a654:	88fb      	ldrh	r3, [r7, #6]
 800a656:	2b00      	cmp	r3, #0
 800a658:	d101      	bne.n	800a65e <HAL_SPI_Transmit+0x3e>
  {
    return HAL_ERROR;
 800a65a:	2301      	movs	r3, #1
 800a65c:	e1c9      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800a65e:	68fb      	ldr	r3, [r7, #12]
 800a660:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800a664:	2b01      	cmp	r3, #1
 800a666:	d101      	bne.n	800a66c <HAL_SPI_Transmit+0x4c>
 800a668:	2302      	movs	r3, #2
 800a66a:	e1c2      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
 800a66c:	68fb      	ldr	r3, [r7, #12]
 800a66e:	2201      	movs	r2, #1
 800a670:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800a674:	68fb      	ldr	r3, [r7, #12]
 800a676:	2203      	movs	r2, #3
 800a678:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800a67c:	68fb      	ldr	r3, [r7, #12]
 800a67e:	2200      	movs	r2, #0
 800a680:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800a684:	68fb      	ldr	r3, [r7, #12]
 800a686:	68ba      	ldr	r2, [r7, #8]
 800a688:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800a68a:	68fb      	ldr	r3, [r7, #12]
 800a68c:	88fa      	ldrh	r2, [r7, #6]
 800a68e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 800a692:	68fb      	ldr	r3, [r7, #12]
 800a694:	88fa      	ldrh	r2, [r7, #6]
 800a696:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800a69a:	68fb      	ldr	r3, [r7, #12]
 800a69c:	2200      	movs	r2, #0
 800a69e:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->RxXferSize  = (uint16_t) 0UL;
 800a6a0:	68fb      	ldr	r3, [r7, #12]
 800a6a2:	2200      	movs	r2, #0
 800a6a4:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t) 0UL;
 800a6a8:	68fb      	ldr	r3, [r7, #12]
 800a6aa:	2200      	movs	r2, #0
 800a6ac:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxISR       = NULL;
 800a6b0:	68fb      	ldr	r3, [r7, #12]
 800a6b2:	2200      	movs	r2, #0
 800a6b4:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 800a6b6:	68fb      	ldr	r3, [r7, #12]
 800a6b8:	2200      	movs	r2, #0
 800a6ba:	671a      	str	r2, [r3, #112]	; 0x70

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800a6bc:	68fb      	ldr	r3, [r7, #12]
 800a6be:	689b      	ldr	r3, [r3, #8]
 800a6c0:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800a6c4:	d108      	bne.n	800a6d8 <HAL_SPI_Transmit+0xb8>
  {
    SPI_1LINE_TX(hspi);
 800a6c6:	68fb      	ldr	r3, [r7, #12]
 800a6c8:	681b      	ldr	r3, [r3, #0]
 800a6ca:	681a      	ldr	r2, [r3, #0]
 800a6cc:	68fb      	ldr	r3, [r7, #12]
 800a6ce:	681b      	ldr	r3, [r3, #0]
 800a6d0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a6d4:	601a      	str	r2, [r3, #0]
 800a6d6:	e009      	b.n	800a6ec <HAL_SPI_Transmit+0xcc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800a6d8:	68fb      	ldr	r3, [r7, #12]
 800a6da:	681b      	ldr	r3, [r3, #0]
 800a6dc:	68db      	ldr	r3, [r3, #12]
 800a6de:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800a6e2:	68fb      	ldr	r3, [r7, #12]
 800a6e4:	681b      	ldr	r3, [r3, #0]
 800a6e6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800a6ea:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800a6ec:	68fb      	ldr	r3, [r7, #12]
 800a6ee:	681b      	ldr	r3, [r3, #0]
 800a6f0:	685a      	ldr	r2, [r3, #4]
 800a6f2:	4b96      	ldr	r3, [pc, #600]	; (800a94c <HAL_SPI_Transmit+0x32c>)
 800a6f4:	4013      	ands	r3, r2
 800a6f6:	88f9      	ldrh	r1, [r7, #6]
 800a6f8:	68fa      	ldr	r2, [r7, #12]
 800a6fa:	6812      	ldr	r2, [r2, #0]
 800a6fc:	430b      	orrs	r3, r1
 800a6fe:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800a700:	68fb      	ldr	r3, [r7, #12]
 800a702:	681b      	ldr	r3, [r3, #0]
 800a704:	681a      	ldr	r2, [r3, #0]
 800a706:	68fb      	ldr	r3, [r7, #12]
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	f042 0201 	orr.w	r2, r2, #1
 800a70e:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800a710:	68fb      	ldr	r3, [r7, #12]
 800a712:	685b      	ldr	r3, [r3, #4]
 800a714:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800a718:	d107      	bne.n	800a72a <HAL_SPI_Transmit+0x10a>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800a71a:	68fb      	ldr	r3, [r7, #12]
 800a71c:	681b      	ldr	r3, [r3, #0]
 800a71e:	681a      	ldr	r2, [r3, #0]
 800a720:	68fb      	ldr	r3, [r7, #12]
 800a722:	681b      	ldr	r3, [r3, #0]
 800a724:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a728:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 32 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800a72a:	68fb      	ldr	r3, [r7, #12]
 800a72c:	68db      	ldr	r3, [r3, #12]
 800a72e:	2b0f      	cmp	r3, #15
 800a730:	d947      	bls.n	800a7c2 <HAL_SPI_Transmit+0x1a2>
  {
    /* Transmit data in 32 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800a732:	e03f      	b.n	800a7b4 <HAL_SPI_Transmit+0x194>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800a734:	68fb      	ldr	r3, [r7, #12]
 800a736:	681b      	ldr	r3, [r3, #0]
 800a738:	695b      	ldr	r3, [r3, #20]
 800a73a:	f003 0302 	and.w	r3, r3, #2
 800a73e:	2b02      	cmp	r3, #2
 800a740:	d114      	bne.n	800a76c <HAL_SPI_Transmit+0x14c>
      {
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800a742:	68fb      	ldr	r3, [r7, #12]
 800a744:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a746:	68fb      	ldr	r3, [r7, #12]
 800a748:	681b      	ldr	r3, [r3, #0]
 800a74a:	6812      	ldr	r2, [r2, #0]
 800a74c:	621a      	str	r2, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
 800a74e:	68fb      	ldr	r3, [r7, #12]
 800a750:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a752:	1d1a      	adds	r2, r3, #4
 800a754:	68fb      	ldr	r3, [r7, #12]
 800a756:	65da      	str	r2, [r3, #92]	; 0x5c
        hspi->TxXferCount--;
 800a758:	68fb      	ldr	r3, [r7, #12]
 800a75a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a75e:	b29b      	uxth	r3, r3
 800a760:	3b01      	subs	r3, #1
 800a762:	b29a      	uxth	r2, r3
 800a764:	68fb      	ldr	r3, [r7, #12]
 800a766:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a76a:	e023      	b.n	800a7b4 <HAL_SPI_Transmit+0x194>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a76c:	f7f7 f990 	bl	8001a90 <HAL_GetTick>
 800a770:	4602      	mov	r2, r0
 800a772:	693b      	ldr	r3, [r7, #16]
 800a774:	1ad3      	subs	r3, r2, r3
 800a776:	683a      	ldr	r2, [r7, #0]
 800a778:	429a      	cmp	r2, r3
 800a77a:	d803      	bhi.n	800a784 <HAL_SPI_Transmit+0x164>
 800a77c:	683b      	ldr	r3, [r7, #0]
 800a77e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a782:	d102      	bne.n	800a78a <HAL_SPI_Transmit+0x16a>
 800a784:	683b      	ldr	r3, [r7, #0]
 800a786:	2b00      	cmp	r3, #0
 800a788:	d114      	bne.n	800a7b4 <HAL_SPI_Transmit+0x194>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800a78a:	68f8      	ldr	r0, [r7, #12]
 800a78c:	f000 fce6 	bl	800b15c <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800a790:	68fb      	ldr	r3, [r7, #12]
 800a792:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a796:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800a79a:	68fb      	ldr	r3, [r7, #12]
 800a79c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800a7a0:	68fb      	ldr	r3, [r7, #12]
 800a7a2:	2201      	movs	r2, #1
 800a7a4:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800a7a8:	68fb      	ldr	r3, [r7, #12]
 800a7aa:	2200      	movs	r2, #0
 800a7ac:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800a7b0:	2303      	movs	r3, #3
 800a7b2:	e11e      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800a7b4:	68fb      	ldr	r3, [r7, #12]
 800a7b6:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a7ba:	b29b      	uxth	r3, r3
 800a7bc:	2b00      	cmp	r3, #0
 800a7be:	d1b9      	bne.n	800a734 <HAL_SPI_Transmit+0x114>
 800a7c0:	e0f1      	b.n	800a9a6 <HAL_SPI_Transmit+0x386>
        }
      }
    }
  }
  /* Transmit data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800a7c2:	68fb      	ldr	r3, [r7, #12]
 800a7c4:	68db      	ldr	r3, [r3, #12]
 800a7c6:	2b07      	cmp	r3, #7
 800a7c8:	f240 80e6 	bls.w	800a998 <HAL_SPI_Transmit+0x378>
  {
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800a7cc:	e05d      	b.n	800a88a <HAL_SPI_Transmit+0x26a>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800a7ce:	68fb      	ldr	r3, [r7, #12]
 800a7d0:	681b      	ldr	r3, [r3, #0]
 800a7d2:	695b      	ldr	r3, [r3, #20]
 800a7d4:	f003 0302 	and.w	r3, r3, #2
 800a7d8:	2b02      	cmp	r3, #2
 800a7da:	d132      	bne.n	800a842 <HAL_SPI_Transmit+0x222>
      {
        if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 800a7dc:	68fb      	ldr	r3, [r7, #12]
 800a7de:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a7e2:	b29b      	uxth	r3, r3
 800a7e4:	2b01      	cmp	r3, #1
 800a7e6:	d918      	bls.n	800a81a <HAL_SPI_Transmit+0x1fa>
 800a7e8:	68fb      	ldr	r3, [r7, #12]
 800a7ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a7ec:	2b00      	cmp	r3, #0
 800a7ee:	d014      	beq.n	800a81a <HAL_SPI_Transmit+0x1fa>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800a7f0:	68fb      	ldr	r3, [r7, #12]
 800a7f2:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a7f4:	68fb      	ldr	r3, [r7, #12]
 800a7f6:	681b      	ldr	r3, [r3, #0]
 800a7f8:	6812      	ldr	r2, [r2, #0]
 800a7fa:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 800a7fc:	68fb      	ldr	r3, [r7, #12]
 800a7fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a800:	1d1a      	adds	r2, r3, #4
 800a802:	68fb      	ldr	r3, [r7, #12]
 800a804:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800a806:	68fb      	ldr	r3, [r7, #12]
 800a808:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a80c:	b29b      	uxth	r3, r3
 800a80e:	3b02      	subs	r3, #2
 800a810:	b29a      	uxth	r2, r3
 800a812:	68fb      	ldr	r3, [r7, #12]
 800a814:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a818:	e037      	b.n	800a88a <HAL_SPI_Transmit+0x26a>
        }
        else
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800a81a:	68fb      	ldr	r3, [r7, #12]
 800a81c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a81e:	881a      	ldrh	r2, [r3, #0]
 800a820:	697b      	ldr	r3, [r7, #20]
 800a822:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 800a824:	68fb      	ldr	r3, [r7, #12]
 800a826:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a828:	1c9a      	adds	r2, r3, #2
 800a82a:	68fb      	ldr	r3, [r7, #12]
 800a82c:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800a82e:	68fb      	ldr	r3, [r7, #12]
 800a830:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a834:	b29b      	uxth	r3, r3
 800a836:	3b01      	subs	r3, #1
 800a838:	b29a      	uxth	r2, r3
 800a83a:	68fb      	ldr	r3, [r7, #12]
 800a83c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a840:	e023      	b.n	800a88a <HAL_SPI_Transmit+0x26a>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a842:	f7f7 f925 	bl	8001a90 <HAL_GetTick>
 800a846:	4602      	mov	r2, r0
 800a848:	693b      	ldr	r3, [r7, #16]
 800a84a:	1ad3      	subs	r3, r2, r3
 800a84c:	683a      	ldr	r2, [r7, #0]
 800a84e:	429a      	cmp	r2, r3
 800a850:	d803      	bhi.n	800a85a <HAL_SPI_Transmit+0x23a>
 800a852:	683b      	ldr	r3, [r7, #0]
 800a854:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a858:	d102      	bne.n	800a860 <HAL_SPI_Transmit+0x240>
 800a85a:	683b      	ldr	r3, [r7, #0]
 800a85c:	2b00      	cmp	r3, #0
 800a85e:	d114      	bne.n	800a88a <HAL_SPI_Transmit+0x26a>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800a860:	68f8      	ldr	r0, [r7, #12]
 800a862:	f000 fc7b 	bl	800b15c <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800a866:	68fb      	ldr	r3, [r7, #12]
 800a868:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a86c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800a870:	68fb      	ldr	r3, [r7, #12]
 800a872:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800a876:	68fb      	ldr	r3, [r7, #12]
 800a878:	2201      	movs	r2, #1
 800a87a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800a87e:	68fb      	ldr	r3, [r7, #12]
 800a880:	2200      	movs	r2, #0
 800a882:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800a886:	2303      	movs	r3, #3
 800a888:	e0b3      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800a88a:	68fb      	ldr	r3, [r7, #12]
 800a88c:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a890:	b29b      	uxth	r3, r3
 800a892:	2b00      	cmp	r3, #0
 800a894:	d19b      	bne.n	800a7ce <HAL_SPI_Transmit+0x1ae>
 800a896:	e086      	b.n	800a9a6 <HAL_SPI_Transmit+0x386>
  else
  {
    while (hspi->TxXferCount > 0UL)
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800a898:	68fb      	ldr	r3, [r7, #12]
 800a89a:	681b      	ldr	r3, [r3, #0]
 800a89c:	695b      	ldr	r3, [r3, #20]
 800a89e:	f003 0302 	and.w	r3, r3, #2
 800a8a2:	2b02      	cmp	r3, #2
 800a8a4:	d154      	bne.n	800a950 <HAL_SPI_Transmit+0x330>
      {
        if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 800a8a6:	68fb      	ldr	r3, [r7, #12]
 800a8a8:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a8ac:	b29b      	uxth	r3, r3
 800a8ae:	2b03      	cmp	r3, #3
 800a8b0:	d918      	bls.n	800a8e4 <HAL_SPI_Transmit+0x2c4>
 800a8b2:	68fb      	ldr	r3, [r7, #12]
 800a8b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a8b6:	2b40      	cmp	r3, #64	; 0x40
 800a8b8:	d914      	bls.n	800a8e4 <HAL_SPI_Transmit+0x2c4>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 800a8ba:	68fb      	ldr	r3, [r7, #12]
 800a8bc:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a8be:	68fb      	ldr	r3, [r7, #12]
 800a8c0:	681b      	ldr	r3, [r3, #0]
 800a8c2:	6812      	ldr	r2, [r2, #0]
 800a8c4:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 800a8c6:	68fb      	ldr	r3, [r7, #12]
 800a8c8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a8ca:	1d1a      	adds	r2, r3, #4
 800a8cc:	68fb      	ldr	r3, [r7, #12]
 800a8ce:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)4UL;
 800a8d0:	68fb      	ldr	r3, [r7, #12]
 800a8d2:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a8d6:	b29b      	uxth	r3, r3
 800a8d8:	3b04      	subs	r3, #4
 800a8da:	b29a      	uxth	r2, r3
 800a8dc:	68fb      	ldr	r3, [r7, #12]
 800a8de:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a8e2:	e059      	b.n	800a998 <HAL_SPI_Transmit+0x378>
        }
        else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 800a8e4:	68fb      	ldr	r3, [r7, #12]
 800a8e6:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a8ea:	b29b      	uxth	r3, r3
 800a8ec:	2b01      	cmp	r3, #1
 800a8ee:	d917      	bls.n	800a920 <HAL_SPI_Transmit+0x300>
 800a8f0:	68fb      	ldr	r3, [r7, #12]
 800a8f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a8f4:	2b00      	cmp	r3, #0
 800a8f6:	d013      	beq.n	800a920 <HAL_SPI_Transmit+0x300>
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 800a8f8:	68fb      	ldr	r3, [r7, #12]
 800a8fa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a8fc:	881a      	ldrh	r2, [r3, #0]
 800a8fe:	697b      	ldr	r3, [r7, #20]
 800a900:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 800a902:	68fb      	ldr	r3, [r7, #12]
 800a904:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a906:	1c9a      	adds	r2, r3, #2
 800a908:	68fb      	ldr	r3, [r7, #12]
 800a90a:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 800a90c:	68fb      	ldr	r3, [r7, #12]
 800a90e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a912:	b29b      	uxth	r3, r3
 800a914:	3b02      	subs	r3, #2
 800a916:	b29a      	uxth	r2, r3
 800a918:	68fb      	ldr	r3, [r7, #12]
 800a91a:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a91e:	e03b      	b.n	800a998 <HAL_SPI_Transmit+0x378>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800a920:	68fb      	ldr	r3, [r7, #12]
 800a922:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a924:	68fb      	ldr	r3, [r7, #12]
 800a926:	681b      	ldr	r3, [r3, #0]
 800a928:	3320      	adds	r3, #32
 800a92a:	7812      	ldrb	r2, [r2, #0]
 800a92c:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr += sizeof(uint8_t);
 800a92e:	68fb      	ldr	r3, [r7, #12]
 800a930:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a932:	1c5a      	adds	r2, r3, #1
 800a934:	68fb      	ldr	r3, [r7, #12]
 800a936:	65da      	str	r2, [r3, #92]	; 0x5c
          hspi->TxXferCount--;
 800a938:	68fb      	ldr	r3, [r7, #12]
 800a93a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a93e:	b29b      	uxth	r3, r3
 800a940:	3b01      	subs	r3, #1
 800a942:	b29a      	uxth	r2, r3
 800a944:	68fb      	ldr	r3, [r7, #12]
 800a946:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800a94a:	e025      	b.n	800a998 <HAL_SPI_Transmit+0x378>
 800a94c:	ffff0000 	.word	0xffff0000
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800a950:	f7f7 f89e 	bl	8001a90 <HAL_GetTick>
 800a954:	4602      	mov	r2, r0
 800a956:	693b      	ldr	r3, [r7, #16]
 800a958:	1ad3      	subs	r3, r2, r3
 800a95a:	683a      	ldr	r2, [r7, #0]
 800a95c:	429a      	cmp	r2, r3
 800a95e:	d803      	bhi.n	800a968 <HAL_SPI_Transmit+0x348>
 800a960:	683b      	ldr	r3, [r7, #0]
 800a962:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a966:	d102      	bne.n	800a96e <HAL_SPI_Transmit+0x34e>
 800a968:	683b      	ldr	r3, [r7, #0]
 800a96a:	2b00      	cmp	r3, #0
 800a96c:	d114      	bne.n	800a998 <HAL_SPI_Transmit+0x378>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 800a96e:	68f8      	ldr	r0, [r7, #12]
 800a970:	f000 fbf4 	bl	800b15c <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800a974:	68fb      	ldr	r3, [r7, #12]
 800a976:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a97a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800a97e:	68fb      	ldr	r3, [r7, #12]
 800a980:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          hspi->State = HAL_SPI_STATE_READY;
 800a984:	68fb      	ldr	r3, [r7, #12]
 800a986:	2201      	movs	r2, #1
 800a988:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 800a98c:	68fb      	ldr	r3, [r7, #12]
 800a98e:	2200      	movs	r2, #0
 800a990:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

          return HAL_TIMEOUT;
 800a994:	2303      	movs	r3, #3
 800a996:	e02c      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 800a998:	68fb      	ldr	r3, [r7, #12]
 800a99a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800a99e:	b29b      	uxth	r3, r3
 800a9a0:	2b00      	cmp	r3, #0
 800a9a2:	f47f af79 	bne.w	800a898 <HAL_SPI_Transmit+0x278>
      }
    }
  }

  /* Wait for Tx (and CRC) data to be sent */
  if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
 800a9a6:	693b      	ldr	r3, [r7, #16]
 800a9a8:	9300      	str	r3, [sp, #0]
 800a9aa:	683b      	ldr	r3, [r7, #0]
 800a9ac:	2200      	movs	r2, #0
 800a9ae:	2108      	movs	r1, #8
 800a9b0:	68f8      	ldr	r0, [r7, #12]
 800a9b2:	f000 fc73 	bl	800b29c <SPI_WaitOnFlagUntilTimeout>
 800a9b6:	4603      	mov	r3, r0
 800a9b8:	2b00      	cmp	r3, #0
 800a9ba:	d007      	beq.n	800a9cc <HAL_SPI_Transmit+0x3ac>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800a9bc:	68fb      	ldr	r3, [r7, #12]
 800a9be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a9c2:	f043 0220 	orr.w	r2, r3, #32
 800a9c6:	68fb      	ldr	r3, [r7, #12]
 800a9c8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  }

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 800a9cc:	68f8      	ldr	r0, [r7, #12]
 800a9ce:	f000 fbc5 	bl	800b15c <SPI_CloseTransfer>

  hspi->State = HAL_SPI_STATE_READY;
 800a9d2:	68fb      	ldr	r3, [r7, #12]
 800a9d4:	2201      	movs	r2, #1
 800a9d6:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800a9da:	68fb      	ldr	r3, [r7, #12]
 800a9dc:	2200      	movs	r2, #0
 800a9de:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800a9e2:	68fb      	ldr	r3, [r7, #12]
 800a9e4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a9e8:	2b00      	cmp	r3, #0
 800a9ea:	d001      	beq.n	800a9f0 <HAL_SPI_Transmit+0x3d0>
  {
    return HAL_ERROR;
 800a9ec:	2301      	movs	r3, #1
 800a9ee:	e000      	b.n	800a9f2 <HAL_SPI_Transmit+0x3d2>
  }
  else
  {
    return HAL_OK;
 800a9f0:	2300      	movs	r3, #0
  }
}
 800a9f2:	4618      	mov	r0, r3
 800a9f4:	3718      	adds	r7, #24
 800a9f6:	46bd      	mov	sp, r7
 800a9f8:	bd80      	pop	{r7, pc}
 800a9fa:	bf00      	nop

0800a9fc <HAL_SPI_Transmit_DMA>:
  * @param  pData: pointer to data buffer
  * @param  Size : amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 800a9fc:	b580      	push	{r7, lr}
 800a9fe:	b084      	sub	sp, #16
 800aa00:	af00      	add	r7, sp, #0
 800aa02:	60f8      	str	r0, [r7, #12]
 800aa04:	60b9      	str	r1, [r7, #8]
 800aa06:	4613      	mov	r3, r2
 800aa08:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 800aa0a:	68fb      	ldr	r3, [r7, #12]
 800aa0c:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800aa10:	b2db      	uxtb	r3, r3
 800aa12:	2b01      	cmp	r3, #1
 800aa14:	d001      	beq.n	800aa1a <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 800aa16:	2302      	movs	r3, #2
 800aa18:	e126      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
  }

  if ((pData == NULL) || (Size == 0UL))
 800aa1a:	68bb      	ldr	r3, [r7, #8]
 800aa1c:	2b00      	cmp	r3, #0
 800aa1e:	d002      	beq.n	800aa26 <HAL_SPI_Transmit_DMA+0x2a>
 800aa20:	88fb      	ldrh	r3, [r7, #6]
 800aa22:	2b00      	cmp	r3, #0
 800aa24:	d101      	bne.n	800aa2a <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 800aa26:	2301      	movs	r3, #1
 800aa28:	e11e      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800aa2a:	68fb      	ldr	r3, [r7, #12]
 800aa2c:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800aa30:	2b01      	cmp	r3, #1
 800aa32:	d101      	bne.n	800aa38 <HAL_SPI_Transmit_DMA+0x3c>
 800aa34:	2302      	movs	r3, #2
 800aa36:	e117      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
 800aa38:	68fb      	ldr	r3, [r7, #12]
 800aa3a:	2201      	movs	r2, #1
 800aa3c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800aa40:	68fb      	ldr	r3, [r7, #12]
 800aa42:	2203      	movs	r2, #3
 800aa44:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800aa48:	68fb      	ldr	r3, [r7, #12]
 800aa4a:	2200      	movs	r2, #0
 800aa4c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800aa50:	68fb      	ldr	r3, [r7, #12]
 800aa52:	68ba      	ldr	r2, [r7, #8]
 800aa54:	65da      	str	r2, [r3, #92]	; 0x5c
  hspi->TxXferSize  = Size;
 800aa56:	68fb      	ldr	r3, [r7, #12]
 800aa58:	88fa      	ldrh	r2, [r7, #6]
 800aa5a:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
  hspi->TxXferCount = Size;
 800aa5e:	68fb      	ldr	r3, [r7, #12]
 800aa60:	88fa      	ldrh	r2, [r7, #6]
 800aa62:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800aa66:	68fb      	ldr	r3, [r7, #12]
 800aa68:	2200      	movs	r2, #0
 800aa6a:	665a      	str	r2, [r3, #100]	; 0x64
  hspi->TxISR       = NULL;
 800aa6c:	68fb      	ldr	r3, [r7, #12]
 800aa6e:	2200      	movs	r2, #0
 800aa70:	675a      	str	r2, [r3, #116]	; 0x74
  hspi->RxISR       = NULL;
 800aa72:	68fb      	ldr	r3, [r7, #12]
 800aa74:	2200      	movs	r2, #0
 800aa76:	671a      	str	r2, [r3, #112]	; 0x70
  hspi->RxXferSize  = (uint16_t)0UL;
 800aa78:	68fb      	ldr	r3, [r7, #12]
 800aa7a:	2200      	movs	r2, #0
 800aa7c:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
  hspi->RxXferCount = (uint16_t)0UL;
 800aa80:	68fb      	ldr	r3, [r7, #12]
 800aa82:	2200      	movs	r2, #0
 800aa84:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aa88:	68fb      	ldr	r3, [r7, #12]
 800aa8a:	689b      	ldr	r3, [r3, #8]
 800aa8c:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800aa90:	d108      	bne.n	800aaa4 <HAL_SPI_Transmit_DMA+0xa8>
  {
    SPI_1LINE_TX(hspi);
 800aa92:	68fb      	ldr	r3, [r7, #12]
 800aa94:	681b      	ldr	r3, [r3, #0]
 800aa96:	681a      	ldr	r2, [r3, #0]
 800aa98:	68fb      	ldr	r3, [r7, #12]
 800aa9a:	681b      	ldr	r3, [r3, #0]
 800aa9c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aaa0:	601a      	str	r2, [r3, #0]
 800aaa2:	e009      	b.n	800aab8 <HAL_SPI_Transmit_DMA+0xbc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800aaa4:	68fb      	ldr	r3, [r7, #12]
 800aaa6:	681b      	ldr	r3, [r3, #0]
 800aaa8:	68db      	ldr	r3, [r3, #12]
 800aaaa:	f423 22c0 	bic.w	r2, r3, #393216	; 0x60000
 800aaae:	68fb      	ldr	r3, [r7, #12]
 800aab0:	681b      	ldr	r3, [r3, #0]
 800aab2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800aab6:	60da      	str	r2, [r3, #12]
  }

  /* Packing mode management is enabled by the DMA settings */
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 800aab8:	68fb      	ldr	r3, [r7, #12]
 800aaba:	68db      	ldr	r3, [r3, #12]
 800aabc:	2b0f      	cmp	r3, #15
 800aabe:	d905      	bls.n	800aacc <HAL_SPI_Transmit_DMA+0xd0>
 800aac0:	68fb      	ldr	r3, [r7, #12]
 800aac2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800aac4:	699b      	ldr	r3, [r3, #24]
 800aac6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800aaca:	d10f      	bne.n	800aaec <HAL_SPI_Transmit_DMA+0xf0>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800aacc:	68fb      	ldr	r3, [r7, #12]
 800aace:	68db      	ldr	r3, [r3, #12]
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))    || \
 800aad0:	2b07      	cmp	r3, #7
 800aad2:	d911      	bls.n	800aaf8 <HAL_SPI_Transmit_DMA+0xfc>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800aad4:	68fb      	ldr	r3, [r7, #12]
 800aad6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800aad8:	699b      	ldr	r3, [r3, #24]
 800aada:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800aade:	d00b      	beq.n	800aaf8 <HAL_SPI_Transmit_DMA+0xfc>
                                                     (hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_WORD))))
 800aae0:	68fb      	ldr	r3, [r7, #12]
 800aae2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800aae4:	699b      	ldr	r3, [r3, #24]
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) && ((hspi->hdmatx->Init.MemDataAlignment != DMA_MDATAALIGN_HALFWORD) && \
 800aae6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800aaea:	d005      	beq.n	800aaf8 <HAL_SPI_Transmit_DMA+0xfc>
  {
    /* Restriction the DMA data received is not allowed in this mode */
    __HAL_UNLOCK(hspi);
 800aaec:	68fb      	ldr	r3, [r7, #12]
 800aaee:	2200      	movs	r2, #0
 800aaf0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
    return HAL_ERROR;
 800aaf4:	2301      	movs	r3, #1
 800aaf6:	e0b7      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Adjust XferCount according to DMA alignment / Data size */
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 800aaf8:	68fb      	ldr	r3, [r7, #12]
 800aafa:	68db      	ldr	r3, [r3, #12]
 800aafc:	2b07      	cmp	r3, #7
 800aafe:	d820      	bhi.n	800ab42 <HAL_SPI_Transmit_DMA+0x146>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800ab00:	68fb      	ldr	r3, [r7, #12]
 800ab02:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab04:	699b      	ldr	r3, [r3, #24]
 800ab06:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ab0a:	d109      	bne.n	800ab20 <HAL_SPI_Transmit_DMA+0x124>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800ab0c:	68fb      	ldr	r3, [r7, #12]
 800ab0e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ab12:	b29b      	uxth	r3, r3
 800ab14:	3301      	adds	r3, #1
 800ab16:	105b      	asrs	r3, r3, #1
 800ab18:	b29a      	uxth	r2, r3
 800ab1a:	68fb      	ldr	r3, [r7, #12]
 800ab1c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
    }
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 800ab20:	68fb      	ldr	r3, [r7, #12]
 800ab22:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab24:	699b      	ldr	r3, [r3, #24]
 800ab26:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800ab2a:	d11e      	bne.n	800ab6a <HAL_SPI_Transmit_DMA+0x16e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 800ab2c:	68fb      	ldr	r3, [r7, #12]
 800ab2e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ab32:	b29b      	uxth	r3, r3
 800ab34:	3303      	adds	r3, #3
 800ab36:	109b      	asrs	r3, r3, #2
 800ab38:	b29a      	uxth	r2, r3
 800ab3a:	68fb      	ldr	r3, [r7, #12]
 800ab3c:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 800ab40:	e013      	b.n	800ab6a <HAL_SPI_Transmit_DMA+0x16e>
    }
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 800ab42:	68fb      	ldr	r3, [r7, #12]
 800ab44:	68db      	ldr	r3, [r3, #12]
 800ab46:	2b0f      	cmp	r3, #15
 800ab48:	d80f      	bhi.n	800ab6a <HAL_SPI_Transmit_DMA+0x16e>
  {
    if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_WORD)
 800ab4a:	68fb      	ldr	r3, [r7, #12]
 800ab4c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab4e:	699b      	ldr	r3, [r3, #24]
 800ab50:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800ab54:	d109      	bne.n	800ab6a <HAL_SPI_Transmit_DMA+0x16e>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800ab56:	68fb      	ldr	r3, [r7, #12]
 800ab58:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800ab5c:	b29b      	uxth	r3, r3
 800ab5e:	3301      	adds	r3, #1
 800ab60:	105b      	asrs	r3, r3, #1
 800ab62:	b29a      	uxth	r2, r3
 800ab64:	68fb      	ldr	r3, [r7, #12]
 800ab66:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  {
    /* Adjustment done */
  }

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800ab6a:	68fb      	ldr	r3, [r7, #12]
 800ab6c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab6e:	4a40      	ldr	r2, [pc, #256]	; (800ac70 <HAL_SPI_Transmit_DMA+0x274>)
 800ab70:	641a      	str	r2, [r3, #64]	; 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 800ab72:	68fb      	ldr	r3, [r7, #12]
 800ab74:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab76:	4a3f      	ldr	r2, [pc, #252]	; (800ac74 <HAL_SPI_Transmit_DMA+0x278>)
 800ab78:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 800ab7a:	68fb      	ldr	r3, [r7, #12]
 800ab7c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab7e:	4a3e      	ldr	r2, [pc, #248]	; (800ac78 <HAL_SPI_Transmit_DMA+0x27c>)
 800ab80:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 800ab82:	68fb      	ldr	r3, [r7, #12]
 800ab84:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ab86:	2200      	movs	r2, #0
 800ab88:	651a      	str	r2, [r3, #80]	; 0x50

  /* Clear TXDMAEN bit*/
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800ab8a:	68fb      	ldr	r3, [r7, #12]
 800ab8c:	681b      	ldr	r3, [r3, #0]
 800ab8e:	689a      	ldr	r2, [r3, #8]
 800ab90:	68fb      	ldr	r3, [r7, #12]
 800ab92:	681b      	ldr	r3, [r3, #0]
 800ab94:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800ab98:	609a      	str	r2, [r3, #8]

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 800ab9a:	68fb      	ldr	r3, [r7, #12]
 800ab9c:	6f98      	ldr	r0, [r3, #120]	; 0x78
 800ab9e:	68fb      	ldr	r3, [r7, #12]
 800aba0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800aba2:	4619      	mov	r1, r3
 800aba4:	68fb      	ldr	r3, [r7, #12]
 800aba6:	681b      	ldr	r3, [r3, #0]
 800aba8:	3320      	adds	r3, #32
 800abaa:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 800abac:	68fb      	ldr	r3, [r7, #12]
 800abae:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 800abb2:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 800abb4:	f7f9 f86a 	bl	8003c8c <HAL_DMA_Start_IT>
 800abb8:	4603      	mov	r3, r0
 800abba:	2b00      	cmp	r3, #0
 800abbc:	d011      	beq.n	800abe2 <HAL_SPI_Transmit_DMA+0x1e6>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800abbe:	68fb      	ldr	r3, [r7, #12]
 800abc0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800abc4:	f043 0210 	orr.w	r2, r3, #16
 800abc8:	68fb      	ldr	r3, [r7, #12]
 800abca:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 800abce:	68fb      	ldr	r3, [r7, #12]
 800abd0:	2201      	movs	r2, #1
 800abd2:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

    /* Unlock the process */
    __HAL_UNLOCK(hspi);
 800abd6:	68fb      	ldr	r3, [r7, #12]
 800abd8:	2200      	movs	r2, #0
 800abda:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

    return HAL_ERROR;
 800abde:	2301      	movs	r3, #1
 800abe0:	e042      	b.n	800ac68 <HAL_SPI_Transmit_DMA+0x26c>
  }

  /* Set the number of data at current transfer */
  if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 800abe2:	68fb      	ldr	r3, [r7, #12]
 800abe4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800abe6:	69db      	ldr	r3, [r3, #28]
 800abe8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800abec:	d108      	bne.n	800ac00 <HAL_SPI_Transmit_DMA+0x204>
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 800abee:	68fb      	ldr	r3, [r7, #12]
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	6859      	ldr	r1, [r3, #4]
 800abf4:	68fb      	ldr	r3, [r7, #12]
 800abf6:	681a      	ldr	r2, [r3, #0]
 800abf8:	4b20      	ldr	r3, [pc, #128]	; (800ac7c <HAL_SPI_Transmit_DMA+0x280>)
 800abfa:	400b      	ands	r3, r1
 800abfc:	6053      	str	r3, [r2, #4]
 800abfe:	e009      	b.n	800ac14 <HAL_SPI_Transmit_DMA+0x218>
  }
  else
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800ac00:	68fb      	ldr	r3, [r7, #12]
 800ac02:	681b      	ldr	r3, [r3, #0]
 800ac04:	685a      	ldr	r2, [r3, #4]
 800ac06:	4b1d      	ldr	r3, [pc, #116]	; (800ac7c <HAL_SPI_Transmit_DMA+0x280>)
 800ac08:	4013      	ands	r3, r2
 800ac0a:	88f9      	ldrh	r1, [r7, #6]
 800ac0c:	68fa      	ldr	r2, [r7, #12]
 800ac0e:	6812      	ldr	r2, [r2, #0]
 800ac10:	430b      	orrs	r3, r1
 800ac12:	6053      	str	r3, [r2, #4]
  }

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800ac14:	68fb      	ldr	r3, [r7, #12]
 800ac16:	681b      	ldr	r3, [r3, #0]
 800ac18:	689a      	ldr	r2, [r3, #8]
 800ac1a:	68fb      	ldr	r3, [r7, #12]
 800ac1c:	681b      	ldr	r3, [r3, #0]
 800ac1e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ac22:	609a      	str	r2, [r3, #8]

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 800ac24:	68fb      	ldr	r3, [r7, #12]
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	691a      	ldr	r2, [r3, #16]
 800ac2a:	68fb      	ldr	r3, [r7, #12]
 800ac2c:	681b      	ldr	r3, [r3, #0]
 800ac2e:	f442 7248 	orr.w	r2, r2, #800	; 0x320
 800ac32:	611a      	str	r2, [r3, #16]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 800ac34:	68fb      	ldr	r3, [r7, #12]
 800ac36:	681b      	ldr	r3, [r3, #0]
 800ac38:	681a      	ldr	r2, [r3, #0]
 800ac3a:	68fb      	ldr	r3, [r7, #12]
 800ac3c:	681b      	ldr	r3, [r3, #0]
 800ac3e:	f042 0201 	orr.w	r2, r2, #1
 800ac42:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ac44:	68fb      	ldr	r3, [r7, #12]
 800ac46:	685b      	ldr	r3, [r3, #4]
 800ac48:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800ac4c:	d107      	bne.n	800ac5e <HAL_SPI_Transmit_DMA+0x262>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800ac4e:	68fb      	ldr	r3, [r7, #12]
 800ac50:	681b      	ldr	r3, [r3, #0]
 800ac52:	681a      	ldr	r2, [r3, #0]
 800ac54:	68fb      	ldr	r3, [r7, #12]
 800ac56:	681b      	ldr	r3, [r3, #0]
 800ac58:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac5c:	601a      	str	r2, [r3, #0]
  }

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800ac5e:	68fb      	ldr	r3, [r7, #12]
 800ac60:	2200      	movs	r2, #0
 800ac62:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80

  return HAL_OK;
 800ac66:	2300      	movs	r3, #0
}
 800ac68:	4618      	mov	r0, r3
 800ac6a:	3710      	adds	r7, #16
 800ac6c:	46bd      	mov	sp, r7
 800ac6e:	bd80      	pop	{r7, pc}
 800ac70:	0800b0c7 	.word	0x0800b0c7
 800ac74:	0800b081 	.word	0x0800b081
 800ac78:	0800b0e3 	.word	0x0800b0e3
 800ac7c:	ffff0000 	.word	0xffff0000

0800ac80 <HAL_SPI_IRQHandler>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 800ac80:	b580      	push	{r7, lr}
 800ac82:	b08a      	sub	sp, #40	; 0x28
 800ac84:	af00      	add	r7, sp, #0
 800ac86:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->IER;
 800ac88:	687b      	ldr	r3, [r7, #4]
 800ac8a:	681b      	ldr	r3, [r3, #0]
 800ac8c:	691b      	ldr	r3, [r3, #16]
 800ac8e:	623b      	str	r3, [r7, #32]
  uint32_t itflag   = hspi->Instance->SR;
 800ac90:	687b      	ldr	r3, [r7, #4]
 800ac92:	681b      	ldr	r3, [r3, #0]
 800ac94:	695b      	ldr	r3, [r3, #20]
 800ac96:	61fb      	str	r3, [r7, #28]
  uint32_t trigger  = itsource & itflag;
 800ac98:	6a3a      	ldr	r2, [r7, #32]
 800ac9a:	69fb      	ldr	r3, [r7, #28]
 800ac9c:	4013      	ands	r3, r2
 800ac9e:	61bb      	str	r3, [r7, #24]
  uint32_t cfg1     = hspi->Instance->CFG1;
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	681b      	ldr	r3, [r3, #0]
 800aca4:	689b      	ldr	r3, [r3, #8]
 800aca6:	617b      	str	r3, [r7, #20]
  uint32_t handled  = 0UL;
 800aca8:	2300      	movs	r3, #0
 800acaa:	627b      	str	r3, [r7, #36]	; 0x24

  HAL_SPI_StateTypeDef State = hspi->State;
 800acac:	687b      	ldr	r3, [r7, #4]
 800acae:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800acb2:	74fb      	strb	r3, [r7, #19]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	681b      	ldr	r3, [r3, #0]
 800acb8:	3330      	adds	r3, #48	; 0x30
 800acba:	60fb      	str	r3, [r7, #12]
#endif /* __GNUC__ */

  /* SPI in SUSPEND mode  ----------------------------------------------------*/
  if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
 800acbc:	69fb      	ldr	r3, [r7, #28]
 800acbe:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800acc2:	2b00      	cmp	r3, #0
 800acc4:	d010      	beq.n	800ace8 <HAL_SPI_IRQHandler+0x68>
 800acc6:	6a3b      	ldr	r3, [r7, #32]
 800acc8:	f003 0308 	and.w	r3, r3, #8
 800accc:	2b00      	cmp	r3, #0
 800acce:	d00b      	beq.n	800ace8 <HAL_SPI_IRQHandler+0x68>
  {
    /* Clear the Suspend flag */
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800acd0:	687b      	ldr	r3, [r7, #4]
 800acd2:	681b      	ldr	r3, [r3, #0]
 800acd4:	699a      	ldr	r2, [r3, #24]
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	681b      	ldr	r3, [r3, #0]
 800acda:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800acde:	619a      	str	r2, [r3, #24]

    /* Suspend on going, Call the Suspend callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->SuspendCallback(hspi);
#else
    HAL_SPI_SuspendCallback(hspi);
 800ace0:	6878      	ldr	r0, [r7, #4]
 800ace2:	f000 f9c3 	bl	800b06c <HAL_SPI_SuspendCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
    return;
 800ace6:	e192      	b.n	800b00e <HAL_SPI_IRQHandler+0x38e>
  }

  /* SPI in mode Transmitter and Receiver ------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 800ace8:	69bb      	ldr	r3, [r7, #24]
 800acea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800acee:	2b00      	cmp	r3, #0
 800acf0:	d113      	bne.n	800ad1a <HAL_SPI_IRQHandler+0x9a>
 800acf2:	69bb      	ldr	r3, [r7, #24]
 800acf4:	f003 0320 	and.w	r3, r3, #32
 800acf8:	2b00      	cmp	r3, #0
 800acfa:	d10e      	bne.n	800ad1a <HAL_SPI_IRQHandler+0x9a>
      HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
 800acfc:	69bb      	ldr	r3, [r7, #24]
 800acfe:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 800ad02:	2b00      	cmp	r3, #0
 800ad04:	d009      	beq.n	800ad1a <HAL_SPI_IRQHandler+0x9a>
  {
    hspi->TxISR(hspi);
 800ad06:	687b      	ldr	r3, [r7, #4]
 800ad08:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ad0a:	6878      	ldr	r0, [r7, #4]
 800ad0c:	4798      	blx	r3
    hspi->RxISR(hspi);
 800ad0e:	687b      	ldr	r3, [r7, #4]
 800ad10:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ad12:	6878      	ldr	r0, [r7, #4]
 800ad14:	4798      	blx	r3
    handled = 1UL;
 800ad16:	2301      	movs	r3, #1
 800ad18:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Receiver ----------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 800ad1a:	69bb      	ldr	r3, [r7, #24]
 800ad1c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad20:	2b00      	cmp	r3, #0
 800ad22:	d10f      	bne.n	800ad44 <HAL_SPI_IRQHandler+0xc4>
 800ad24:	69bb      	ldr	r3, [r7, #24]
 800ad26:	f003 0301 	and.w	r3, r3, #1
 800ad2a:	2b00      	cmp	r3, #0
 800ad2c:	d00a      	beq.n	800ad44 <HAL_SPI_IRQHandler+0xc4>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800ad2e:	69bb      	ldr	r3, [r7, #24]
 800ad30:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 800ad34:	2b00      	cmp	r3, #0
 800ad36:	d105      	bne.n	800ad44 <HAL_SPI_IRQHandler+0xc4>
  {
    hspi->RxISR(hspi);
 800ad38:	687b      	ldr	r3, [r7, #4]
 800ad3a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ad3c:	6878      	ldr	r0, [r7, #4]
 800ad3e:	4798      	blx	r3
    handled = 1UL;
 800ad40:	2301      	movs	r3, #1
 800ad42:	627b      	str	r3, [r7, #36]	; 0x24
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800ad44:	69bb      	ldr	r3, [r7, #24]
 800ad46:	f003 0320 	and.w	r3, r3, #32
 800ad4a:	2b00      	cmp	r3, #0
 800ad4c:	d10f      	bne.n	800ad6e <HAL_SPI_IRQHandler+0xee>
 800ad4e:	69bb      	ldr	r3, [r7, #24]
 800ad50:	f003 0302 	and.w	r3, r3, #2
 800ad54:	2b00      	cmp	r3, #0
 800ad56:	d00a      	beq.n	800ad6e <HAL_SPI_IRQHandler+0xee>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800ad58:	69bb      	ldr	r3, [r7, #24]
 800ad5a:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800ad5e:	2b00      	cmp	r3, #0
 800ad60:	d105      	bne.n	800ad6e <HAL_SPI_IRQHandler+0xee>
  {
    hspi->TxISR(hspi);
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ad66:	6878      	ldr	r0, [r7, #4]
 800ad68:	4798      	blx	r3
    handled = 1UL;
 800ad6a:	2301      	movs	r3, #1
 800ad6c:	627b      	str	r3, [r7, #36]	; 0x24
  {
    __HAL_SPI_CLEAR_TSERFFLAG(hspi);
  }
#endif /* USE_SPI_RELOAD_TRANSFER */

  if (handled != 0UL)
 800ad6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ad70:	2b00      	cmp	r3, #0
 800ad72:	f040 8147 	bne.w	800b004 <HAL_SPI_IRQHandler+0x384>
  {
    return;
  }

  /* SPI End Of Transfer: DMA or IT based transfer */
  if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
 800ad76:	69bb      	ldr	r3, [r7, #24]
 800ad78:	f003 0308 	and.w	r3, r3, #8
 800ad7c:	2b00      	cmp	r3, #0
 800ad7e:	f000 808b 	beq.w	800ae98 <HAL_SPI_IRQHandler+0x218>
  {
    /* Clear EOT/TXTF/SUSP flag */
    __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800ad82:	687b      	ldr	r3, [r7, #4]
 800ad84:	681b      	ldr	r3, [r3, #0]
 800ad86:	699a      	ldr	r2, [r3, #24]
 800ad88:	687b      	ldr	r3, [r7, #4]
 800ad8a:	681b      	ldr	r3, [r3, #0]
 800ad8c:	f042 0208 	orr.w	r2, r2, #8
 800ad90:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	681b      	ldr	r3, [r3, #0]
 800ad96:	699a      	ldr	r2, [r3, #24]
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	681b      	ldr	r3, [r3, #0]
 800ad9c:	f042 0210 	orr.w	r2, r2, #16
 800ada0:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800ada2:	687b      	ldr	r3, [r7, #4]
 800ada4:	681b      	ldr	r3, [r3, #0]
 800ada6:	699a      	ldr	r2, [r3, #24]
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	681b      	ldr	r3, [r3, #0]
 800adac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800adb0:	619a      	str	r2, [r3, #24]

    /* Disable EOT interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
 800adb2:	687b      	ldr	r3, [r7, #4]
 800adb4:	681b      	ldr	r3, [r3, #0]
 800adb6:	691a      	ldr	r2, [r3, #16]
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	681b      	ldr	r3, [r3, #0]
 800adbc:	f022 0208 	bic.w	r2, r2, #8
 800adc0:	611a      	str	r2, [r3, #16]

    /* For the IT based receive extra polling maybe required for last packet */
    if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800adc2:	687b      	ldr	r3, [r7, #4]
 800adc4:	681b      	ldr	r3, [r3, #0]
 800adc6:	689b      	ldr	r3, [r3, #8]
 800adc8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800adcc:	2b00      	cmp	r3, #0
 800adce:	d13d      	bne.n	800ae4c <HAL_SPI_IRQHandler+0x1cc>
    {
      /* Pooling remaining data */
      while (hspi->RxXferCount != 0UL)
 800add0:	e036      	b.n	800ae40 <HAL_SPI_IRQHandler+0x1c0>
      {
        /* Receive data in 32 Bit mode */
        if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	68db      	ldr	r3, [r3, #12]
 800add6:	2b0f      	cmp	r3, #15
 800add8:	d90b      	bls.n	800adf2 <HAL_SPI_IRQHandler+0x172>
        {
          *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 800adda:	687b      	ldr	r3, [r7, #4]
 800addc:	681a      	ldr	r2, [r3, #0]
 800adde:	687b      	ldr	r3, [r7, #4]
 800ade0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ade2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800ade4:	601a      	str	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint32_t);
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800adea:	1d1a      	adds	r2, r3, #4
 800adec:	687b      	ldr	r3, [r7, #4]
 800adee:	665a      	str	r2, [r3, #100]	; 0x64
 800adf0:	e01d      	b.n	800ae2e <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 16 Bit mode */
        else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	68db      	ldr	r3, [r3, #12]
 800adf6:	2b07      	cmp	r3, #7
 800adf8:	d90b      	bls.n	800ae12 <HAL_SPI_IRQHandler+0x192>
        {
#if defined (__GNUC__)
          *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800adfa:	687b      	ldr	r3, [r7, #4]
 800adfc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800adfe:	68fa      	ldr	r2, [r7, #12]
 800ae00:	8812      	ldrh	r2, [r2, #0]
 800ae02:	b292      	uxth	r2, r2
 800ae04:	801a      	strh	r2, [r3, #0]
#else
          *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
          hspi->pRxBuffPtr += sizeof(uint16_t);
 800ae06:	687b      	ldr	r3, [r7, #4]
 800ae08:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae0a:	1c9a      	adds	r2, r3, #2
 800ae0c:	687b      	ldr	r3, [r7, #4]
 800ae0e:	665a      	str	r2, [r3, #100]	; 0x64
 800ae10:	e00d      	b.n	800ae2e <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 8 Bit mode */
        else
        {
          *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800ae12:	687b      	ldr	r3, [r7, #4]
 800ae14:	681b      	ldr	r3, [r3, #0]
 800ae16:	f103 0230 	add.w	r2, r3, #48	; 0x30
 800ae1a:	687b      	ldr	r3, [r7, #4]
 800ae1c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae1e:	7812      	ldrb	r2, [r2, #0]
 800ae20:	b2d2      	uxtb	r2, r2
 800ae22:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint8_t);
 800ae24:	687b      	ldr	r3, [r7, #4]
 800ae26:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ae28:	1c5a      	adds	r2, r3, #1
 800ae2a:	687b      	ldr	r3, [r7, #4]
 800ae2c:	665a      	str	r2, [r3, #100]	; 0x64
        }

        hspi->RxXferCount--;
 800ae2e:	687b      	ldr	r3, [r7, #4]
 800ae30:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800ae34:	b29b      	uxth	r3, r3
 800ae36:	3b01      	subs	r3, #1
 800ae38:	b29a      	uxth	r2, r3
 800ae3a:	687b      	ldr	r3, [r7, #4]
 800ae3c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
      while (hspi->RxXferCount != 0UL)
 800ae40:	687b      	ldr	r3, [r7, #4]
 800ae42:	f8b3 306a 	ldrh.w	r3, [r3, #106]	; 0x6a
 800ae46:	b29b      	uxth	r3, r3
 800ae48:	2b00      	cmp	r3, #0
 800ae4a:	d1c2      	bne.n	800add2 <HAL_SPI_IRQHandler+0x152>
      }
    }

    /* Call SPI Standard close procedure */
    SPI_CloseTransfer(hspi);
 800ae4c:	6878      	ldr	r0, [r7, #4]
 800ae4e:	f000 f985 	bl	800b15c <SPI_CloseTransfer>

    hspi->State = HAL_SPI_STATE_READY;
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	2201      	movs	r2, #1
 800ae56:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ae5a:	687b      	ldr	r3, [r7, #4]
 800ae5c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ae60:	2b00      	cmp	r3, #0
 800ae62:	d003      	beq.n	800ae6c <HAL_SPI_IRQHandler+0x1ec>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 800ae64:	6878      	ldr	r0, [r7, #4]
 800ae66:	f000 f8f7 	bl	800b058 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 800ae6a:	e0d0      	b.n	800b00e <HAL_SPI_IRQHandler+0x38e>
    {
      hspi->TxCpltCallback(hspi);
    }
#else
    /* Call appropriate user callback */
    if (State == HAL_SPI_STATE_BUSY_TX_RX)
 800ae6c:	7cfb      	ldrb	r3, [r7, #19]
 800ae6e:	2b05      	cmp	r3, #5
 800ae70:	d103      	bne.n	800ae7a <HAL_SPI_IRQHandler+0x1fa>
    {
      HAL_SPI_TxRxCpltCallback(hspi);
 800ae72:	6878      	ldr	r0, [r7, #4]
 800ae74:	f000 f8dc 	bl	800b030 <HAL_SPI_TxRxCpltCallback>
    else
    {
      /* End of the appropriate call */
    }

    return;
 800ae78:	e0c6      	b.n	800b008 <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_RX)
 800ae7a:	7cfb      	ldrb	r3, [r7, #19]
 800ae7c:	2b04      	cmp	r3, #4
 800ae7e:	d103      	bne.n	800ae88 <HAL_SPI_IRQHandler+0x208>
      HAL_SPI_RxCpltCallback(hspi);
 800ae80:	6878      	ldr	r0, [r7, #4]
 800ae82:	f000 f8cb 	bl	800b01c <HAL_SPI_RxCpltCallback>
    return;
 800ae86:	e0bf      	b.n	800b008 <HAL_SPI_IRQHandler+0x388>
    else if (State == HAL_SPI_STATE_BUSY_TX)
 800ae88:	7cfb      	ldrb	r3, [r7, #19]
 800ae8a:	2b03      	cmp	r3, #3
 800ae8c:	f040 80bc 	bne.w	800b008 <HAL_SPI_IRQHandler+0x388>
      HAL_SPI_TxCpltCallback(hspi);
 800ae90:	6878      	ldr	r0, [r7, #4]
 800ae92:	f003 f96b 	bl	800e16c <HAL_SPI_TxCpltCallback>
    return;
 800ae96:	e0b7      	b.n	800b008 <HAL_SPI_IRQHandler+0x388>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
 800ae98:	69bb      	ldr	r3, [r7, #24]
 800ae9a:	f403 7358 	and.w	r3, r3, #864	; 0x360
 800ae9e:	2b00      	cmp	r3, #0
 800aea0:	f000 80b5 	beq.w	800b00e <HAL_SPI_IRQHandler+0x38e>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if ((trigger & SPI_FLAG_OVR) != 0UL)
 800aea4:	69bb      	ldr	r3, [r7, #24]
 800aea6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aeaa:	2b00      	cmp	r3, #0
 800aeac:	d00f      	beq.n	800aece <HAL_SPI_IRQHandler+0x24e>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800aeae:	687b      	ldr	r3, [r7, #4]
 800aeb0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800aeb4:	f043 0204 	orr.w	r2, r3, #4
 800aeb8:	687b      	ldr	r3, [r7, #4]
 800aeba:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800aebe:	687b      	ldr	r3, [r7, #4]
 800aec0:	681b      	ldr	r3, [r3, #0]
 800aec2:	699a      	ldr	r2, [r3, #24]
 800aec4:	687b      	ldr	r3, [r7, #4]
 800aec6:	681b      	ldr	r3, [r3, #0]
 800aec8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800aecc:	619a      	str	r2, [r3, #24]
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if ((trigger & SPI_FLAG_MODF) != 0UL)
 800aece:	69bb      	ldr	r3, [r7, #24]
 800aed0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800aed4:	2b00      	cmp	r3, #0
 800aed6:	d00f      	beq.n	800aef8 <HAL_SPI_IRQHandler+0x278>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800aed8:	687b      	ldr	r3, [r7, #4]
 800aeda:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800aede:	f043 0201 	orr.w	r2, r3, #1
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	681b      	ldr	r3, [r3, #0]
 800aeec:	699a      	ldr	r2, [r3, #24]
 800aeee:	687b      	ldr	r3, [r7, #4]
 800aef0:	681b      	ldr	r3, [r3, #0]
 800aef2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aef6:	619a      	str	r2, [r3, #24]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_FRE) != 0UL)
 800aef8:	69bb      	ldr	r3, [r7, #24]
 800aefa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800aefe:	2b00      	cmp	r3, #0
 800af00:	d00f      	beq.n	800af22 <HAL_SPI_IRQHandler+0x2a2>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800af02:	687b      	ldr	r3, [r7, #4]
 800af04:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af08:	f043 0208 	orr.w	r2, r3, #8
 800af0c:	687b      	ldr	r3, [r7, #4]
 800af0e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800af12:	687b      	ldr	r3, [r7, #4]
 800af14:	681b      	ldr	r3, [r3, #0]
 800af16:	699a      	ldr	r2, [r3, #24]
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	681b      	ldr	r3, [r3, #0]
 800af1c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800af20:	619a      	str	r2, [r3, #24]
    }

    /* SPI Underrun error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_UDR) != 0UL)
 800af22:	69bb      	ldr	r3, [r7, #24]
 800af24:	f003 0320 	and.w	r3, r3, #32
 800af28:	2b00      	cmp	r3, #0
 800af2a:	d00f      	beq.n	800af4c <HAL_SPI_IRQHandler+0x2cc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800af2c:	687b      	ldr	r3, [r7, #4]
 800af2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af32:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800af3c:	687b      	ldr	r3, [r7, #4]
 800af3e:	681b      	ldr	r3, [r3, #0]
 800af40:	699a      	ldr	r2, [r3, #24]
 800af42:	687b      	ldr	r3, [r7, #4]
 800af44:	681b      	ldr	r3, [r3, #0]
 800af46:	f042 0220 	orr.w	r2, r2, #32
 800af4a:	619a      	str	r2, [r3, #24]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800af4c:	687b      	ldr	r3, [r7, #4]
 800af4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af52:	2b00      	cmp	r3, #0
 800af54:	d05a      	beq.n	800b00c <HAL_SPI_IRQHandler+0x38c>
    {
      /* Disable SPI peripheral */
      __HAL_SPI_DISABLE(hspi);
 800af56:	687b      	ldr	r3, [r7, #4]
 800af58:	681b      	ldr	r3, [r3, #0]
 800af5a:	681a      	ldr	r2, [r3, #0]
 800af5c:	687b      	ldr	r3, [r7, #4]
 800af5e:	681b      	ldr	r3, [r3, #0]
 800af60:	f022 0201 	bic.w	r2, r2, #1
 800af64:	601a      	str	r2, [r3, #0]

      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF |
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	681b      	ldr	r3, [r3, #0]
 800af6a:	6919      	ldr	r1, [r3, #16]
 800af6c:	687b      	ldr	r3, [r7, #4]
 800af6e:	681a      	ldr	r2, [r3, #0]
 800af70:	4b28      	ldr	r3, [pc, #160]	; (800b014 <HAL_SPI_IRQHandler+0x394>)
 800af72:	400b      	ands	r3, r1
 800af74:	6113      	str	r3, [r2, #16]
                                  SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));

      /* Disable the SPI DMA requests if enabled */
      if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800af76:	697b      	ldr	r3, [r7, #20]
 800af78:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800af7c:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 800af80:	d138      	bne.n	800aff4 <HAL_SPI_IRQHandler+0x374>
      {
        /* Disable the SPI DMA requests */
        CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800af82:	687b      	ldr	r3, [r7, #4]
 800af84:	681b      	ldr	r3, [r3, #0]
 800af86:	689a      	ldr	r2, [r3, #8]
 800af88:	687b      	ldr	r3, [r7, #4]
 800af8a:	681b      	ldr	r3, [r3, #0]
 800af8c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800af90:	609a      	str	r2, [r3, #8]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 800af92:	687b      	ldr	r3, [r7, #4]
 800af94:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800af96:	2b00      	cmp	r3, #0
 800af98:	d013      	beq.n	800afc2 <HAL_SPI_IRQHandler+0x342>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800af9a:	687b      	ldr	r3, [r7, #4]
 800af9c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800af9e:	4a1e      	ldr	r2, [pc, #120]	; (800b018 <HAL_SPI_IRQHandler+0x398>)
 800afa0:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 800afa2:	687b      	ldr	r3, [r7, #4]
 800afa4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800afa6:	4618      	mov	r0, r3
 800afa8:	f7f9 f8da 	bl	8004160 <HAL_DMA_Abort_IT>
 800afac:	4603      	mov	r3, r0
 800afae:	2b00      	cmp	r3, #0
 800afb0:	d007      	beq.n	800afc2 <HAL_SPI_IRQHandler+0x342>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800afb2:	687b      	ldr	r3, [r7, #4]
 800afb4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800afb8:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800afbc:	687b      	ldr	r3, [r7, #4]
 800afbe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 800afc2:	687b      	ldr	r3, [r7, #4]
 800afc4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800afc6:	2b00      	cmp	r3, #0
 800afc8:	d020      	beq.n	800b00c <HAL_SPI_IRQHandler+0x38c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 800afca:	687b      	ldr	r3, [r7, #4]
 800afcc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800afce:	4a12      	ldr	r2, [pc, #72]	; (800b018 <HAL_SPI_IRQHandler+0x398>)
 800afd0:	651a      	str	r2, [r3, #80]	; 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 800afd2:	687b      	ldr	r3, [r7, #4]
 800afd4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800afd6:	4618      	mov	r0, r3
 800afd8:	f7f9 f8c2 	bl	8004160 <HAL_DMA_Abort_IT>
 800afdc:	4603      	mov	r3, r0
 800afde:	2b00      	cmp	r3, #0
 800afe0:	d014      	beq.n	800b00c <HAL_SPI_IRQHandler+0x38c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800afe2:	687b      	ldr	r3, [r7, #4]
 800afe4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800afe8:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800afec:	687b      	ldr	r3, [r7, #4]
 800afee:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
#else
        HAL_SPI_ErrorCallback(hspi);
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 800aff2:	e00b      	b.n	800b00c <HAL_SPI_IRQHandler+0x38c>
        hspi->State = HAL_SPI_STATE_READY;
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	2201      	movs	r2, #1
 800aff8:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
        HAL_SPI_ErrorCallback(hspi);
 800affc:	6878      	ldr	r0, [r7, #4]
 800affe:	f000 f82b 	bl	800b058 <HAL_SPI_ErrorCallback>
    return;
 800b002:	e003      	b.n	800b00c <HAL_SPI_IRQHandler+0x38c>
    return;
 800b004:	bf00      	nop
 800b006:	e002      	b.n	800b00e <HAL_SPI_IRQHandler+0x38e>
    return;
 800b008:	bf00      	nop
 800b00a:	e000      	b.n	800b00e <HAL_SPI_IRQHandler+0x38e>
    return;
 800b00c:	bf00      	nop
  }
}
 800b00e:	3728      	adds	r7, #40	; 0x28
 800b010:	46bd      	mov	sp, r7
 800b012:	bd80      	pop	{r7, pc}
 800b014:	fffffc94 	.word	0xfffffc94
 800b018:	0800b129 	.word	0x0800b129

0800b01c <HAL_SPI_RxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b01c:	b480      	push	{r7}
 800b01e:	b083      	sub	sp, #12
 800b020:	af00      	add	r7, sp, #0
 800b022:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 800b024:	bf00      	nop
 800b026:	370c      	adds	r7, #12
 800b028:	46bd      	mov	sp, r7
 800b02a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b02e:	4770      	bx	lr

0800b030 <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b030:	b480      	push	{r7}
 800b032:	b083      	sub	sp, #12
 800b034:	af00      	add	r7, sp, #0
 800b036:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 800b038:	bf00      	nop
 800b03a:	370c      	adds	r7, #12
 800b03c:	46bd      	mov	sp, r7
 800b03e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b042:	4770      	bx	lr

0800b044 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b044:	b480      	push	{r7}
 800b046:	b083      	sub	sp, #12
 800b048:	af00      	add	r7, sp, #0
 800b04a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 800b04c:	bf00      	nop
 800b04e:	370c      	adds	r7, #12
 800b050:	46bd      	mov	sp, r7
 800b052:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b056:	4770      	bx	lr

0800b058 <HAL_SPI_ErrorCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b058:	b480      	push	{r7}
 800b05a:	b083      	sub	sp, #12
 800b05c:	af00      	add	r7, sp, #0
 800b05e:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 800b060:	bf00      	nop
 800b062:	370c      	adds	r7, #12
 800b064:	46bd      	mov	sp, r7
 800b066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b06a:	4770      	bx	lr

0800b06c <HAL_SPI_SuspendCallback>:
  * @brief  SPI Suspend callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_SuspendCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b06c:	b480      	push	{r7}
 800b06e:	b083      	sub	sp, #12
 800b070:	af00      	add	r7, sp, #0
 800b072:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_SuspendCallback can be implemented in the user file.
   */
}
 800b074:	bf00      	nop
 800b076:	370c      	adds	r7, #12
 800b078:	46bd      	mov	sp, r7
 800b07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b07e:	4770      	bx	lr

0800b080 <SPI_DMATransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 800b080:	b580      	push	{r7, lr}
 800b082:	b084      	sub	sp, #16
 800b084:	af00      	add	r7, sp, #0
 800b086:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b088:	687b      	ldr	r3, [r7, #4]
 800b08a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b08c:	60fb      	str	r3, [r7, #12]

  if (hspi->State != HAL_SPI_STATE_ABORT)
 800b08e:	68fb      	ldr	r3, [r7, #12]
 800b090:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b094:	b2db      	uxtb	r3, r3
 800b096:	2b07      	cmp	r3, #7
 800b098:	d011      	beq.n	800b0be <SPI_DMATransmitCplt+0x3e>
  {
    if (hspi->hdmatx->Init.Mode == DMA_CIRCULAR)
 800b09a:	68fb      	ldr	r3, [r7, #12]
 800b09c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b09e:	69db      	ldr	r3, [r3, #28]
 800b0a0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b0a4:	d103      	bne.n	800b0ae <SPI_DMATransmitCplt+0x2e>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->TxCpltCallback(hspi);
#else
      HAL_SPI_TxCpltCallback(hspi);
 800b0a6:	68f8      	ldr	r0, [r7, #12]
 800b0a8:	f003 f860 	bl	800e16c <HAL_SPI_TxCpltCallback>
    {
      /* Enable EOT interrupt */
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
    }
  }
}
 800b0ac:	e007      	b.n	800b0be <SPI_DMATransmitCplt+0x3e>
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
 800b0ae:	68fb      	ldr	r3, [r7, #12]
 800b0b0:	681b      	ldr	r3, [r3, #0]
 800b0b2:	691a      	ldr	r2, [r3, #16]
 800b0b4:	68fb      	ldr	r3, [r7, #12]
 800b0b6:	681b      	ldr	r3, [r3, #0]
 800b0b8:	f042 0208 	orr.w	r2, r2, #8
 800b0bc:	611a      	str	r2, [r3, #16]
}
 800b0be:	bf00      	nop
 800b0c0:	3710      	adds	r7, #16
 800b0c2:	46bd      	mov	sp, r7
 800b0c4:	bd80      	pop	{r7, pc}

0800b0c6 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma) /* Derogation MISRAC2012-Rule-8.13 */
{
 800b0c6:	b580      	push	{r7, lr}
 800b0c8:	b084      	sub	sp, #16
 800b0ca:	af00      	add	r7, sp, #0
 800b0cc:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0d2:	60fb      	str	r3, [r7, #12]
                            ((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-8.13 */

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 800b0d4:	68f8      	ldr	r0, [r7, #12]
 800b0d6:	f7ff ffb5 	bl	800b044 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800b0da:	bf00      	nop
 800b0dc:	3710      	adds	r7, #16
 800b0de:	46bd      	mov	sp, r7
 800b0e0:	bd80      	pop	{r7, pc}

0800b0e2 <SPI_DMAError>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 800b0e2:	b580      	push	{r7, lr}
 800b0e4:	b084      	sub	sp, #16
 800b0e6:	af00      	add	r7, sp, #0
 800b0e8:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b0ea:	687b      	ldr	r3, [r7, #4]
 800b0ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0ee:	60fb      	str	r3, [r7, #12]

  /* if DMA error is FIFO error ignore it */
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
 800b0f0:	6878      	ldr	r0, [r7, #4]
 800b0f2:	f7fa f9a5 	bl	8005440 <HAL_DMA_GetError>
 800b0f6:	4603      	mov	r3, r0
 800b0f8:	2b02      	cmp	r3, #2
 800b0fa:	d011      	beq.n	800b120 <SPI_DMAError+0x3e>
  {
    /* Call SPI standard close procedure */
    SPI_CloseTransfer(hspi);
 800b0fc:	68f8      	ldr	r0, [r7, #12]
 800b0fe:	f000 f82d 	bl	800b15c <SPI_CloseTransfer>

    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800b102:	68fb      	ldr	r3, [r7, #12]
 800b104:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b108:	f043 0210 	orr.w	r2, r3, #16
 800b10c:	68fb      	ldr	r3, [r7, #12]
 800b10e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    hspi->State = HAL_SPI_STATE_READY;
 800b112:	68fb      	ldr	r3, [r7, #12]
 800b114:	2201      	movs	r2, #1
 800b116:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->ErrorCallback(hspi);
#else
    HAL_SPI_ErrorCallback(hspi);
 800b11a:	68f8      	ldr	r0, [r7, #12]
 800b11c:	f7ff ff9c 	bl	800b058 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }
}
 800b120:	bf00      	nop
 800b122:	3710      	adds	r7, #16
 800b124:	46bd      	mov	sp, r7
 800b126:	bd80      	pop	{r7, pc}

0800b128 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 800b128:	b580      	push	{r7, lr}
 800b12a:	b084      	sub	sp, #16
 800b12c:	af00      	add	r7, sp, #0
 800b12e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800b130:	687b      	ldr	r3, [r7, #4]
 800b132:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b134:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = (uint16_t) 0UL;
 800b136:	68fb      	ldr	r3, [r7, #12]
 800b138:	2200      	movs	r2, #0
 800b13a:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
  hspi->TxXferCount = (uint16_t) 0UL;
 800b13e:	68fb      	ldr	r3, [r7, #12]
 800b140:	2200      	movs	r2, #0
 800b142:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62

  /* Restore hspi->State to Ready */
  hspi->State = HAL_SPI_STATE_READY;
 800b146:	68fb      	ldr	r3, [r7, #12]
 800b148:	2201      	movs	r2, #1
 800b14a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 800b14e:	68f8      	ldr	r0, [r7, #12]
 800b150:	f7ff ff82 	bl	800b058 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800b154:	bf00      	nop
 800b156:	3710      	adds	r7, #16
 800b158:	46bd      	mov	sp, r7
 800b15a:	bd80      	pop	{r7, pc}

0800b15c <SPI_CloseTransfer>:
  *               the configuration information for SPI module.
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
 800b15c:	b480      	push	{r7}
 800b15e:	b085      	sub	sp, #20
 800b160:	af00      	add	r7, sp, #0
 800b162:	6078      	str	r0, [r7, #4]
  uint32_t itflag = hspi->Instance->SR;
 800b164:	687b      	ldr	r3, [r7, #4]
 800b166:	681b      	ldr	r3, [r3, #0]
 800b168:	695b      	ldr	r3, [r3, #20]
 800b16a:	60fb      	str	r3, [r7, #12]

  __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800b16c:	687b      	ldr	r3, [r7, #4]
 800b16e:	681b      	ldr	r3, [r3, #0]
 800b170:	699a      	ldr	r2, [r3, #24]
 800b172:	687b      	ldr	r3, [r7, #4]
 800b174:	681b      	ldr	r3, [r3, #0]
 800b176:	f042 0208 	orr.w	r2, r2, #8
 800b17a:	619a      	str	r2, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	681b      	ldr	r3, [r3, #0]
 800b180:	699a      	ldr	r2, [r3, #24]
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	681b      	ldr	r3, [r3, #0]
 800b186:	f042 0210 	orr.w	r2, r2, #16
 800b18a:	619a      	str	r2, [r3, #24]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800b18c:	687b      	ldr	r3, [r7, #4]
 800b18e:	681b      	ldr	r3, [r3, #0]
 800b190:	681a      	ldr	r2, [r3, #0]
 800b192:	687b      	ldr	r3, [r7, #4]
 800b194:	681b      	ldr	r3, [r3, #0]
 800b196:	f022 0201 	bic.w	r2, r2, #1
 800b19a:	601a      	str	r2, [r3, #0]

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
 800b19c:	687b      	ldr	r3, [r7, #4]
 800b19e:	681b      	ldr	r3, [r3, #0]
 800b1a0:	6919      	ldr	r1, [r3, #16]
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	681a      	ldr	r2, [r3, #0]
 800b1a6:	4b3c      	ldr	r3, [pc, #240]	; (800b298 <SPI_CloseTransfer+0x13c>)
 800b1a8:	400b      	ands	r3, r1
 800b1aa:	6113      	str	r3, [r2, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800b1ac:	687b      	ldr	r3, [r7, #4]
 800b1ae:	681b      	ldr	r3, [r3, #0]
 800b1b0:	689a      	ldr	r2, [r3, #8]
 800b1b2:	687b      	ldr	r3, [r7, #4]
 800b1b4:	681b      	ldr	r3, [r3, #0]
 800b1b6:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 800b1ba:	609a      	str	r2, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800b1bc:	687b      	ldr	r3, [r7, #4]
 800b1be:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b1c2:	b2db      	uxtb	r3, r3
 800b1c4:	2b04      	cmp	r3, #4
 800b1c6:	d014      	beq.n	800b1f2 <SPI_CloseTransfer+0x96>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
 800b1c8:	68fb      	ldr	r3, [r7, #12]
 800b1ca:	f003 0320 	and.w	r3, r3, #32
 800b1ce:	2b00      	cmp	r3, #0
 800b1d0:	d00f      	beq.n	800b1f2 <SPI_CloseTransfer+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b1d8:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800b1dc:	687b      	ldr	r3, [r7, #4]
 800b1de:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	681b      	ldr	r3, [r3, #0]
 800b1e6:	699a      	ldr	r2, [r3, #24]
 800b1e8:	687b      	ldr	r3, [r7, #4]
 800b1ea:	681b      	ldr	r3, [r3, #0]
 800b1ec:	f042 0220 	orr.w	r2, r2, #32
 800b1f0:	619a      	str	r2, [r3, #24]
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800b1f8:	b2db      	uxtb	r3, r3
 800b1fa:	2b03      	cmp	r3, #3
 800b1fc:	d014      	beq.n	800b228 <SPI_CloseTransfer+0xcc>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
 800b1fe:	68fb      	ldr	r3, [r7, #12]
 800b200:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b204:	2b00      	cmp	r3, #0
 800b206:	d00f      	beq.n	800b228 <SPI_CloseTransfer+0xcc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800b208:	687b      	ldr	r3, [r7, #4]
 800b20a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b20e:	f043 0204 	orr.w	r2, r3, #4
 800b212:	687b      	ldr	r3, [r7, #4]
 800b214:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800b218:	687b      	ldr	r3, [r7, #4]
 800b21a:	681b      	ldr	r3, [r3, #0]
 800b21c:	699a      	ldr	r2, [r3, #24]
 800b21e:	687b      	ldr	r3, [r7, #4]
 800b220:	681b      	ldr	r3, [r3, #0]
 800b222:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b226:	619a      	str	r2, [r3, #24]
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
 800b228:	68fb      	ldr	r3, [r7, #12]
 800b22a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b22e:	2b00      	cmp	r3, #0
 800b230:	d00f      	beq.n	800b252 <SPI_CloseTransfer+0xf6>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b238:	f043 0201 	orr.w	r2, r3, #1
 800b23c:	687b      	ldr	r3, [r7, #4]
 800b23e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	681b      	ldr	r3, [r3, #0]
 800b246:	699a      	ldr	r2, [r3, #24]
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	681b      	ldr	r3, [r3, #0]
 800b24c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b250:	619a      	str	r2, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
 800b252:	68fb      	ldr	r3, [r7, #12]
 800b254:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b258:	2b00      	cmp	r3, #0
 800b25a:	d00f      	beq.n	800b27c <SPI_CloseTransfer+0x120>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800b25c:	687b      	ldr	r3, [r7, #4]
 800b25e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b262:	f043 0208 	orr.w	r2, r3, #8
 800b266:	687b      	ldr	r3, [r7, #4]
 800b268:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    __HAL_SPI_CLEAR_FREFLAG(hspi);
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	681b      	ldr	r3, [r3, #0]
 800b270:	699a      	ldr	r2, [r3, #24]
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	681b      	ldr	r3, [r3, #0]
 800b276:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b27a:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
 800b27c:	687b      	ldr	r3, [r7, #4]
 800b27e:	2200      	movs	r2, #0
 800b280:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
  hspi->RxXferCount = (uint16_t)0UL;
 800b284:	687b      	ldr	r3, [r7, #4]
 800b286:	2200      	movs	r2, #0
 800b288:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
}
 800b28c:	bf00      	nop
 800b28e:	3714      	adds	r7, #20
 800b290:	46bd      	mov	sp, r7
 800b292:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b296:	4770      	bx	lr
 800b298:	fffffc90 	.word	0xfffffc90

0800b29c <SPI_WaitOnFlagUntilTimeout>:
  * @param Tickstart: Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(const SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 800b29c:	b580      	push	{r7, lr}
 800b29e:	b084      	sub	sp, #16
 800b2a0:	af00      	add	r7, sp, #0
 800b2a2:	60f8      	str	r0, [r7, #12]
 800b2a4:	60b9      	str	r1, [r7, #8]
 800b2a6:	603b      	str	r3, [r7, #0]
 800b2a8:	4613      	mov	r3, r2
 800b2aa:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800b2ac:	e010      	b.n	800b2d0 <SPI_WaitOnFlagUntilTimeout+0x34>
  {
    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b2ae:	f7f6 fbef 	bl	8001a90 <HAL_GetTick>
 800b2b2:	4602      	mov	r2, r0
 800b2b4:	69bb      	ldr	r3, [r7, #24]
 800b2b6:	1ad3      	subs	r3, r2, r3
 800b2b8:	683a      	ldr	r2, [r7, #0]
 800b2ba:	429a      	cmp	r2, r3
 800b2bc:	d803      	bhi.n	800b2c6 <SPI_WaitOnFlagUntilTimeout+0x2a>
 800b2be:	683b      	ldr	r3, [r7, #0]
 800b2c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b2c4:	d102      	bne.n	800b2cc <SPI_WaitOnFlagUntilTimeout+0x30>
 800b2c6:	683b      	ldr	r3, [r7, #0]
 800b2c8:	2b00      	cmp	r3, #0
 800b2ca:	d101      	bne.n	800b2d0 <SPI_WaitOnFlagUntilTimeout+0x34>
    {
      return HAL_TIMEOUT;
 800b2cc:	2303      	movs	r3, #3
 800b2ce:	e00f      	b.n	800b2f0 <SPI_WaitOnFlagUntilTimeout+0x54>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 800b2d0:	68fb      	ldr	r3, [r7, #12]
 800b2d2:	681b      	ldr	r3, [r3, #0]
 800b2d4:	695a      	ldr	r2, [r3, #20]
 800b2d6:	68bb      	ldr	r3, [r7, #8]
 800b2d8:	4013      	ands	r3, r2
 800b2da:	68ba      	ldr	r2, [r7, #8]
 800b2dc:	429a      	cmp	r2, r3
 800b2de:	bf0c      	ite	eq
 800b2e0:	2301      	moveq	r3, #1
 800b2e2:	2300      	movne	r3, #0
 800b2e4:	b2db      	uxtb	r3, r3
 800b2e6:	461a      	mov	r2, r3
 800b2e8:	79fb      	ldrb	r3, [r7, #7]
 800b2ea:	429a      	cmp	r2, r3
 800b2ec:	d0df      	beq.n	800b2ae <SPI_WaitOnFlagUntilTimeout+0x12>
    }
  }
  return HAL_OK;
 800b2ee:	2300      	movs	r3, #0
}
 800b2f0:	4618      	mov	r0, r3
 800b2f2:	3710      	adds	r7, #16
 800b2f4:	46bd      	mov	sp, r7
 800b2f6:	bd80      	pop	{r7, pc}

0800b2f8 <SPI_GetPacketSize>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(const SPI_HandleTypeDef *hspi)
{
 800b2f8:	b480      	push	{r7}
 800b2fa:	b085      	sub	sp, #20
 800b2fc:	af00      	add	r7, sp, #0
 800b2fe:	6078      	str	r0, [r7, #4]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 800b300:	687b      	ldr	r3, [r7, #4]
 800b302:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b304:	095b      	lsrs	r3, r3, #5
 800b306:	3301      	adds	r3, #1
 800b308:	60fb      	str	r3, [r7, #12]
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 800b30a:	687b      	ldr	r3, [r7, #4]
 800b30c:	68db      	ldr	r3, [r3, #12]
 800b30e:	3301      	adds	r3, #1
 800b310:	60bb      	str	r3, [r7, #8]

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
 800b312:	68bb      	ldr	r3, [r7, #8]
 800b314:	3307      	adds	r3, #7
 800b316:	08db      	lsrs	r3, r3, #3
 800b318:	60bb      	str	r3, [r7, #8]

  return data_size * fifo_threashold;
 800b31a:	68bb      	ldr	r3, [r7, #8]
 800b31c:	68fa      	ldr	r2, [r7, #12]
 800b31e:	fb02 f303 	mul.w	r3, r2, r3
}
 800b322:	4618      	mov	r0, r3
 800b324:	3714      	adds	r7, #20
 800b326:	46bd      	mov	sp, r7
 800b328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b32c:	4770      	bx	lr

0800b32e <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800b32e:	b580      	push	{r7, lr}
 800b330:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800b332:	f003 fbe5 	bl	800eb00 <touchgfx_components_init>
  touchgfx_init();
 800b336:	f003 fbb9 	bl	800eaac <touchgfx_init>
}
 800b33a:	bf00      	nop
 800b33c:	bd80      	pop	{r7, pc}

0800b33e <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800b33e:	b580      	push	{r7, lr}
 800b340:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800b342:	f003 fbe5 	bl	800eb10 <touchgfx_taskEntry>
}
 800b346:	bf00      	nop
 800b348:	bd80      	pop	{r7, pc}
	...

0800b34c <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800b34c:	b480      	push	{r7}
 800b34e:	b083      	sub	sp, #12
 800b350:	af00      	add	r7, sp, #0
 800b352:	6078      	str	r0, [r7, #4]
    {
 800b354:	4a04      	ldr	r2, [pc, #16]	; (800b368 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	601a      	str	r2, [r3, #0]
    }
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	4618      	mov	r0, r3
 800b35e:	370c      	adds	r7, #12
 800b360:	46bd      	mov	sp, r7
 800b362:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b366:	4770      	bx	lr
 800b368:	08025590 	.word	0x08025590

0800b36c <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800b36c:	b580      	push	{r7, lr}
 800b36e:	b082      	sub	sp, #8
 800b370:	af00      	add	r7, sp, #0
 800b372:	6078      	str	r0, [r7, #4]
    }
 800b374:	6878      	ldr	r0, [r7, #4]
 800b376:	f7ff ffe9 	bl	800b34c <_ZN8touchgfx12FontProviderD1Ev>
 800b37a:	2104      	movs	r1, #4
 800b37c:	6878      	ldr	r0, [r7, #4]
 800b37e:	f018 f828 	bl	80233d2 <_ZdlPvj>
 800b382:	687b      	ldr	r3, [r7, #4]
 800b384:	4618      	mov	r0, r3
 800b386:	3708      	adds	r7, #8
 800b388:	46bd      	mov	sp, r7
 800b38a:	bd80      	pop	{r7, pc}

0800b38c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800b38c:	b580      	push	{r7, lr}
 800b38e:	b082      	sub	sp, #8
 800b390:	af00      	add	r7, sp, #0
 800b392:	6078      	str	r0, [r7, #4]
 800b394:	460b      	mov	r3, r1
 800b396:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800b398:	887b      	ldrh	r3, [r7, #2]
 800b39a:	2b03      	cmp	r3, #3
 800b39c:	d81e      	bhi.n	800b3dc <_ZN23ApplicationFontProvider7getFontEt+0x50>
 800b39e:	a201      	add	r2, pc, #4	; (adr r2, 800b3a4 <_ZN23ApplicationFontProvider7getFontEt+0x18>)
 800b3a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b3a4:	0800b3b5 	.word	0x0800b3b5
 800b3a8:	0800b3bf 	.word	0x0800b3bf
 800b3ac:	0800b3c9 	.word	0x0800b3c9
 800b3b0:	0800b3d3 	.word	0x0800b3d3
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800b3b4:	f002 f9d6 	bl	800d764 <_ZN17TypedTextDatabase8getFontsEv>
 800b3b8:	4603      	mov	r3, r0
 800b3ba:	681b      	ldr	r3, [r3, #0]
 800b3bc:	e00f      	b.n	800b3de <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800b3be:	f002 f9d1 	bl	800d764 <_ZN17TypedTextDatabase8getFontsEv>
 800b3c2:	4603      	mov	r3, r0
 800b3c4:	685b      	ldr	r3, [r3, #4]
 800b3c6:	e00a      	b.n	800b3de <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800b3c8:	f002 f9cc 	bl	800d764 <_ZN17TypedTextDatabase8getFontsEv>
 800b3cc:	4603      	mov	r3, r0
 800b3ce:	689b      	ldr	r3, [r3, #8]
 800b3d0:	e005      	b.n	800b3de <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::TYPOGRAPHY_00:
        // verdana_160_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800b3d2:	f002 f9c7 	bl	800d764 <_ZN17TypedTextDatabase8getFontsEv>
 800b3d6:	4603      	mov	r3, r0
 800b3d8:	68db      	ldr	r3, [r3, #12]
 800b3da:	e000      	b.n	800b3de <_ZN23ApplicationFontProvider7getFontEt+0x52>
    default:
        return 0;
 800b3dc:	2300      	movs	r3, #0
    }
}
 800b3de:	4618      	mov	r0, r3
 800b3e0:	3708      	adds	r7, #8
 800b3e2:	46bd      	mov	sp, r7
 800b3e4:	bd80      	pop	{r7, pc}
 800b3e6:	bf00      	nop

0800b3e8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;         // verdana_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // verdana_160_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800b3e8:	b580      	push	{r7, lr}
 800b3ea:	b082      	sub	sp, #8
 800b3ec:	af00      	add	r7, sp, #0
 800b3ee:	6078      	str	r0, [r7, #4]
 800b3f0:	4a05      	ldr	r2, [pc, #20]	; (800b408 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800b3f2:	687b      	ldr	r3, [r7, #4]
 800b3f4:	601a      	str	r2, [r3, #0]
 800b3f6:	687b      	ldr	r3, [r7, #4]
 800b3f8:	4618      	mov	r0, r3
 800b3fa:	f7ff ffa7 	bl	800b34c <_ZN8touchgfx12FontProviderD1Ev>
 800b3fe:	687b      	ldr	r3, [r7, #4]
 800b400:	4618      	mov	r0, r3
 800b402:	3708      	adds	r7, #8
 800b404:	46bd      	mov	sp, r7
 800b406:	bd80      	pop	{r7, pc}
 800b408:	0802557c 	.word	0x0802557c

0800b40c <_ZN23ApplicationFontProviderD0Ev>:
 800b40c:	b580      	push	{r7, lr}
 800b40e:	b082      	sub	sp, #8
 800b410:	af00      	add	r7, sp, #0
 800b412:	6078      	str	r0, [r7, #4]
 800b414:	6878      	ldr	r0, [r7, #4]
 800b416:	f7ff ffe7 	bl	800b3e8 <_ZN23ApplicationFontProviderD1Ev>
 800b41a:	2104      	movs	r1, #4
 800b41c:	6878      	ldr	r0, [r7, #4]
 800b41e:	f017 ffd8 	bl	80233d2 <_ZdlPvj>
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	4618      	mov	r0, r3
 800b426:	3708      	adds	r7, #8
 800b428:	46bd      	mov	sp, r7
 800b42a:	bd80      	pop	{r7, pc}

0800b42c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800b42c:	b480      	push	{r7}
 800b42e:	b083      	sub	sp, #12
 800b430:	af00      	add	r7, sp, #0
 800b432:	6078      	str	r0, [r7, #4]
    {
 800b434:	4a04      	ldr	r2, [pc, #16]	; (800b448 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	601a      	str	r2, [r3, #0]
    }
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	4618      	mov	r0, r3
 800b43e:	370c      	adds	r7, #12
 800b440:	46bd      	mov	sp, r7
 800b442:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b446:	4770      	bx	lr
 800b448:	08025868 	.word	0x08025868

0800b44c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800b44c:	b580      	push	{r7, lr}
 800b44e:	b082      	sub	sp, #8
 800b450:	af00      	add	r7, sp, #0
 800b452:	6078      	str	r0, [r7, #4]
    }
 800b454:	6878      	ldr	r0, [r7, #4]
 800b456:	f7ff ffe9 	bl	800b42c <_ZN8touchgfx4FontD1Ev>
 800b45a:	2114      	movs	r1, #20
 800b45c:	6878      	ldr	r0, [r7, #4]
 800b45e:	f017 ffb8 	bl	80233d2 <_ZdlPvj>
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	4618      	mov	r0, r3
 800b466:	3708      	adds	r7, #8
 800b468:	46bd      	mov	sp, r7
 800b46a:	bd80      	pop	{r7, pc}

0800b46c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800b46c:	b590      	push	{r4, r7, lr}
 800b46e:	b087      	sub	sp, #28
 800b470:	af00      	add	r7, sp, #0
 800b472:	6078      	str	r0, [r7, #4]
 800b474:	460b      	mov	r3, r1
 800b476:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800b478:	887b      	ldrh	r3, [r7, #2]
 800b47a:	2b00      	cmp	r3, #0
 800b47c:	d101      	bne.n	800b482 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800b47e:	2300      	movs	r3, #0
 800b480:	e010      	b.n	800b4a4 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800b482:	2300      	movs	r3, #0
 800b484:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800b486:	2300      	movs	r3, #0
 800b488:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800b48a:	687b      	ldr	r3, [r7, #4]
 800b48c:	681b      	ldr	r3, [r3, #0]
 800b48e:	3308      	adds	r3, #8
 800b490:	681c      	ldr	r4, [r3, #0]
 800b492:	f107 030f 	add.w	r3, r7, #15
 800b496:	f107 0210 	add.w	r2, r7, #16
 800b49a:	8879      	ldrh	r1, [r7, #2]
 800b49c:	6878      	ldr	r0, [r7, #4]
 800b49e:	47a0      	blx	r4
 800b4a0:	6178      	str	r0, [r7, #20]
        return glyph;
 800b4a2:	697b      	ldr	r3, [r7, #20]
    }
 800b4a4:	4618      	mov	r0, r3
 800b4a6:	371c      	adds	r7, #28
 800b4a8:	46bd      	mov	sp, r7
 800b4aa:	bd90      	pop	{r4, r7, pc}

0800b4ac <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800b4ac:	b480      	push	{r7}
 800b4ae:	b083      	sub	sp, #12
 800b4b0:	af00      	add	r7, sp, #0
 800b4b2:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	89db      	ldrh	r3, [r3, #14]
    }
 800b4b8:	4618      	mov	r0, r3
 800b4ba:	370c      	adds	r7, #12
 800b4bc:	46bd      	mov	sp, r7
 800b4be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4c2:	4770      	bx	lr

0800b4c4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800b4c4:	b480      	push	{r7}
 800b4c6:	b083      	sub	sp, #12
 800b4c8:	af00      	add	r7, sp, #0
 800b4ca:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800b4cc:	687b      	ldr	r3, [r7, #4]
 800b4ce:	8a1b      	ldrh	r3, [r3, #16]
    }
 800b4d0:	4618      	mov	r0, r3
 800b4d2:	370c      	adds	r7, #12
 800b4d4:	46bd      	mov	sp, r7
 800b4d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4da:	4770      	bx	lr

0800b4dc <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800b4dc:	b480      	push	{r7}
 800b4de:	b083      	sub	sp, #12
 800b4e0:	af00      	add	r7, sp, #0
 800b4e2:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800b4e4:	687b      	ldr	r3, [r7, #4]
 800b4e6:	88db      	ldrh	r3, [r3, #6]
    }
 800b4e8:	4618      	mov	r0, r3
 800b4ea:	370c      	adds	r7, #12
 800b4ec:	46bd      	mov	sp, r7
 800b4ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4f2:	4770      	bx	lr

0800b4f4 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800b4f4:	b480      	push	{r7}
 800b4f6:	b083      	sub	sp, #12
 800b4f8:	af00      	add	r7, sp, #0
 800b4fa:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	889b      	ldrh	r3, [r3, #4]
    }
 800b500:	4618      	mov	r0, r3
 800b502:	370c      	adds	r7, #12
 800b504:	46bd      	mov	sp, r7
 800b506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b50a:	4770      	bx	lr

0800b50c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800b50c:	b480      	push	{r7}
 800b50e:	b083      	sub	sp, #12
 800b510:	af00      	add	r7, sp, #0
 800b512:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800b514:	687b      	ldr	r3, [r7, #4]
 800b516:	7a9b      	ldrb	r3, [r3, #10]
 800b518:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800b51c:	b2db      	uxtb	r3, r3
    }
 800b51e:	4618      	mov	r0, r3
 800b520:	370c      	adds	r7, #12
 800b522:	46bd      	mov	sp, r7
 800b524:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b528:	4770      	bx	lr

0800b52a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800b52a:	b480      	push	{r7}
 800b52c:	b083      	sub	sp, #12
 800b52e:	af00      	add	r7, sp, #0
 800b530:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800b532:	687b      	ldr	r3, [r7, #4]
 800b534:	7a9b      	ldrb	r3, [r3, #10]
 800b536:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800b53a:	b2db      	uxtb	r3, r3
    }
 800b53c:	4618      	mov	r0, r3
 800b53e:	370c      	adds	r7, #12
 800b540:	46bd      	mov	sp, r7
 800b542:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b546:	4770      	bx	lr

0800b548 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800b548:	b580      	push	{r7, lr}
 800b54a:	b082      	sub	sp, #8
 800b54c:	af00      	add	r7, sp, #0
 800b54e:	6078      	str	r0, [r7, #4]
 800b550:	4a05      	ldr	r2, [pc, #20]	; (800b568 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800b552:	687b      	ldr	r3, [r7, #4]
 800b554:	601a      	str	r2, [r3, #0]
 800b556:	687b      	ldr	r3, [r7, #4]
 800b558:	4618      	mov	r0, r3
 800b55a:	f7ff ff67 	bl	800b42c <_ZN8touchgfx4FontD1Ev>
 800b55e:	687b      	ldr	r3, [r7, #4]
 800b560:	4618      	mov	r0, r3
 800b562:	3708      	adds	r7, #8
 800b564:	46bd      	mov	sp, r7
 800b566:	bd80      	pop	{r7, pc}
 800b568:	0802629c 	.word	0x0802629c

0800b56c <_ZN8touchgfx9ConstFontD0Ev>:
 800b56c:	b580      	push	{r7, lr}
 800b56e:	b082      	sub	sp, #8
 800b570:	af00      	add	r7, sp, #0
 800b572:	6078      	str	r0, [r7, #4]
 800b574:	6878      	ldr	r0, [r7, #4]
 800b576:	f7ff ffe7 	bl	800b548 <_ZN8touchgfx9ConstFontD1Ev>
 800b57a:	211c      	movs	r1, #28
 800b57c:	6878      	ldr	r0, [r7, #4]
 800b57e:	f017 ff28 	bl	80233d2 <_ZdlPvj>
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	4618      	mov	r0, r3
 800b586:	3708      	adds	r7, #8
 800b588:	46bd      	mov	sp, r7
 800b58a:	bd80      	pop	{r7, pc}

0800b58c <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800b58c:	b580      	push	{r7, lr}
 800b58e:	b082      	sub	sp, #8
 800b590:	af00      	add	r7, sp, #0
 800b592:	6078      	str	r0, [r7, #4]
 800b594:	4a05      	ldr	r2, [pc, #20]	; (800b5ac <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800b596:	687b      	ldr	r3, [r7, #4]
 800b598:	601a      	str	r2, [r3, #0]
 800b59a:	687b      	ldr	r3, [r7, #4]
 800b59c:	4618      	mov	r0, r3
 800b59e:	f7ff ffd3 	bl	800b548 <_ZN8touchgfx9ConstFontD1Ev>
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	4618      	mov	r0, r3
 800b5a6:	3708      	adds	r7, #8
 800b5a8:	46bd      	mov	sp, r7
 800b5aa:	bd80      	pop	{r7, pc}
 800b5ac:	080255b4 	.word	0x080255b4

0800b5b0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 800b5b0:	b580      	push	{r7, lr}
 800b5b2:	b082      	sub	sp, #8
 800b5b4:	af00      	add	r7, sp, #0
 800b5b6:	6078      	str	r0, [r7, #4]
 800b5b8:	6878      	ldr	r0, [r7, #4]
 800b5ba:	f7ff ffe7 	bl	800b58c <_ZN8touchgfx13GeneratedFontD1Ev>
 800b5be:	212c      	movs	r1, #44	; 0x2c
 800b5c0:	6878      	ldr	r0, [r7, #4]
 800b5c2:	f017 ff06 	bl	80233d2 <_ZdlPvj>
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	4618      	mov	r0, r3
 800b5ca:	3708      	adds	r7, #8
 800b5cc:	46bd      	mov	sp, r7
 800b5ce:	bd80      	pop	{r7, pc}

0800b5d0 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800b5d0:	b480      	push	{r7}
 800b5d2:	b083      	sub	sp, #12
 800b5d4:	af00      	add	r7, sp, #0
 800b5d6:	6078      	str	r0, [r7, #4]
    {
 800b5d8:	4a04      	ldr	r2, [pc, #16]	; (800b5ec <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800b5da:	687b      	ldr	r3, [r7, #4]
 800b5dc:	601a      	str	r2, [r3, #0]
    }
 800b5de:	687b      	ldr	r3, [r7, #4]
 800b5e0:	4618      	mov	r0, r3
 800b5e2:	370c      	adds	r7, #12
 800b5e4:	46bd      	mov	sp, r7
 800b5e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ea:	4770      	bx	lr
 800b5ec:	080255a4 	.word	0x080255a4

0800b5f0 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800b5f0:	b580      	push	{r7, lr}
 800b5f2:	b082      	sub	sp, #8
 800b5f4:	af00      	add	r7, sp, #0
 800b5f6:	6078      	str	r0, [r7, #4]
    }
 800b5f8:	6878      	ldr	r0, [r7, #4]
 800b5fa:	f7ff ffe9 	bl	800b5d0 <_ZN8touchgfx9TypedTextD1Ev>
 800b5fe:	2108      	movs	r1, #8
 800b600:	6878      	ldr	r0, [r7, #4]
 800b602:	f017 fee6 	bl	80233d2 <_ZdlPvj>
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	4618      	mov	r0, r3
 800b60a:	3708      	adds	r7, #8
 800b60c:	46bd      	mov	sp, r7
 800b60e:	bd80      	pop	{r7, pc}

0800b610 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800b610:	b480      	push	{r7}
 800b612:	b083      	sub	sp, #12
 800b614:	af00      	add	r7, sp, #0
 800b616:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800b618:	687b      	ldr	r3, [r7, #4]
 800b61a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 800b61c:	4618      	mov	r0, r3
 800b61e:	370c      	adds	r7, #12
 800b620:	46bd      	mov	sp, r7
 800b622:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b626:	4770      	bx	lr

0800b628 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800b628:	b480      	push	{r7}
 800b62a:	b083      	sub	sp, #12
 800b62c:	af00      	add	r7, sp, #0
 800b62e:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800b630:	687b      	ldr	r3, [r7, #4]
 800b632:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800b634:	4618      	mov	r0, r3
 800b636:	370c      	adds	r7, #12
 800b638:	46bd      	mov	sp, r7
 800b63a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b63e:	4770      	bx	lr

0800b640 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800b640:	b580      	push	{r7, lr}
 800b642:	b08e      	sub	sp, #56	; 0x38
 800b644:	af0a      	add	r7, sp, #40	; 0x28
 800b646:	60f8      	str	r0, [r7, #12]
 800b648:	60b9      	str	r1, [r7, #8]
 800b64a:	4611      	mov	r1, r2
 800b64c:	461a      	mov	r2, r3
 800b64e:	460b      	mov	r3, r1
 800b650:	80fb      	strh	r3, [r7, #6]
 800b652:	4613      	mov	r3, r2
 800b654:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800b656:	68f8      	ldr	r0, [r7, #12]
 800b658:	88b9      	ldrh	r1, [r7, #4]
 800b65a:	88fa      	ldrh	r2, [r7, #6]
 800b65c:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 800b660:	9308      	str	r3, [sp, #32]
 800b662:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 800b664:	9307      	str	r3, [sp, #28]
 800b666:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 800b66a:	9306      	str	r3, [sp, #24]
 800b66c:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800b670:	9305      	str	r3, [sp, #20]
 800b672:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800b676:	9304      	str	r3, [sp, #16]
 800b678:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800b67c:	9303      	str	r3, [sp, #12]
 800b67e:	f897 3020 	ldrb.w	r3, [r7, #32]
 800b682:	9302      	str	r3, [sp, #8]
 800b684:	7f3b      	ldrb	r3, [r7, #28]
 800b686:	9301      	str	r3, [sp, #4]
 800b688:	8b3b      	ldrh	r3, [r7, #24]
 800b68a:	9300      	str	r3, [sp, #0]
 800b68c:	460b      	mov	r3, r1
 800b68e:	68b9      	ldr	r1, [r7, #8]
 800b690:	f008 fea2 	bl	80143d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800b694:	4a09      	ldr	r2, [pc, #36]	; (800b6bc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800b696:	68fb      	ldr	r3, [r7, #12]
 800b698:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800b69a:	68fb      	ldr	r3, [r7, #12]
 800b69c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b69e:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800b6a0:	68fb      	ldr	r3, [r7, #12]
 800b6a2:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b6a4:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800b6a6:	68fb      	ldr	r3, [r7, #12]
 800b6a8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b6aa:	625a      	str	r2, [r3, #36]	; 0x24
      arabicTable(formsTable)
 800b6ac:	68fb      	ldr	r3, [r7, #12]
 800b6ae:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b6b0:	629a      	str	r2, [r3, #40]	; 0x28
{
}
 800b6b2:	68fb      	ldr	r3, [r7, #12]
 800b6b4:	4618      	mov	r0, r3
 800b6b6:	3710      	adds	r7, #16
 800b6b8:	46bd      	mov	sp, r7
 800b6ba:	bd80      	pop	{r7, pc}
 800b6bc:	080255b4 	.word	0x080255b4

0800b6c0 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800b6c0:	b480      	push	{r7}
 800b6c2:	b085      	sub	sp, #20
 800b6c4:	af00      	add	r7, sp, #0
 800b6c6:	6078      	str	r0, [r7, #4]
 800b6c8:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	69db      	ldr	r3, [r3, #28]
 800b6ce:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800b6d0:	683b      	ldr	r3, [r7, #0]
 800b6d2:	889b      	ldrh	r3, [r3, #4]
 800b6d4:	0adb      	lsrs	r3, r3, #11
 800b6d6:	b29b      	uxth	r3, r3
 800b6d8:	009b      	lsls	r3, r3, #2
 800b6da:	68fa      	ldr	r2, [r7, #12]
 800b6dc:	4413      	add	r3, r2
 800b6de:	681a      	ldr	r2, [r3, #0]
 800b6e0:	683b      	ldr	r3, [r7, #0]
 800b6e2:	681b      	ldr	r3, [r3, #0]
 800b6e4:	4413      	add	r3, r2
}
 800b6e6:	4618      	mov	r0, r3
 800b6e8:	3714      	adds	r7, #20
 800b6ea:	46bd      	mov	sp, r7
 800b6ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6f0:	4770      	bx	lr

0800b6f2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800b6f2:	b480      	push	{r7}
 800b6f4:	b089      	sub	sp, #36	; 0x24
 800b6f6:	af00      	add	r7, sp, #0
 800b6f8:	60f8      	str	r0, [r7, #12]
 800b6fa:	460b      	mov	r3, r1
 800b6fc:	607a      	str	r2, [r7, #4]
 800b6fe:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800b700:	687b      	ldr	r3, [r7, #4]
 800b702:	2b00      	cmp	r3, #0
 800b704:	d003      	beq.n	800b70e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	7b1b      	ldrb	r3, [r3, #12]
 800b70a:	2b00      	cmp	r3, #0
 800b70c:	d101      	bne.n	800b712 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800b70e:	2300      	movs	r3, #0
 800b710:	e031      	b.n	800b776 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800b712:	68fb      	ldr	r3, [r7, #12]
 800b714:	6a1a      	ldr	r2, [r3, #32]
 800b716:	687b      	ldr	r3, [r7, #4]
 800b718:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800b71a:	697b      	ldr	r3, [r7, #20]
 800b71c:	7b5b      	ldrb	r3, [r3, #13]
 800b71e:	021b      	lsls	r3, r3, #8
 800b720:	b21b      	sxth	r3, r3
 800b722:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800b726:	b219      	sxth	r1, r3
 800b728:	697b      	ldr	r3, [r7, #20]
 800b72a:	7adb      	ldrb	r3, [r3, #11]
 800b72c:	b21b      	sxth	r3, r3
 800b72e:	430b      	orrs	r3, r1
 800b730:	b21b      	sxth	r3, r3
 800b732:	b29b      	uxth	r3, r3
 800b734:	009b      	lsls	r3, r3, #2
 800b736:	4413      	add	r3, r2
 800b738:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b73a:	687b      	ldr	r3, [r7, #4]
 800b73c:	7b1b      	ldrb	r3, [r3, #12]
 800b73e:	837b      	strh	r3, [r7, #26]
 800b740:	e013      	b.n	800b76a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800b742:	69fb      	ldr	r3, [r7, #28]
 800b744:	881b      	ldrh	r3, [r3, #0]
 800b746:	897a      	ldrh	r2, [r7, #10]
 800b748:	429a      	cmp	r2, r3
 800b74a:	d103      	bne.n	800b754 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800b74c:	69fb      	ldr	r3, [r7, #28]
 800b74e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800b752:	e010      	b.n	800b776 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800b754:	69fb      	ldr	r3, [r7, #28]
 800b756:	881b      	ldrh	r3, [r3, #0]
 800b758:	897a      	ldrh	r2, [r7, #10]
 800b75a:	429a      	cmp	r2, r3
 800b75c:	d309      	bcc.n	800b772 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b75e:	8b7b      	ldrh	r3, [r7, #26]
 800b760:	3b01      	subs	r3, #1
 800b762:	837b      	strh	r3, [r7, #26]
 800b764:	69fb      	ldr	r3, [r7, #28]
 800b766:	3304      	adds	r3, #4
 800b768:	61fb      	str	r3, [r7, #28]
 800b76a:	8b7b      	ldrh	r3, [r7, #26]
 800b76c:	2b00      	cmp	r3, #0
 800b76e:	d1e8      	bne.n	800b742 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800b770:	e000      	b.n	800b774 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800b772:	bf00      	nop
        }
    }
    return 0;
 800b774:	2300      	movs	r3, #0
}
 800b776:	4618      	mov	r0, r3
 800b778:	3724      	adds	r7, #36	; 0x24
 800b77a:	46bd      	mov	sp, r7
 800b77c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b780:	4770      	bx	lr
	...

0800b784 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b784:	b580      	push	{r7, lr}
 800b786:	af00      	add	r7, sp, #0
 800b788:	4801      	ldr	r0, [pc, #4]	; (800b790 <__tcf_0+0xc>)
 800b78a:	f7ff feff 	bl	800b58c <_ZN8touchgfx13GeneratedFontD1Ev>
 800b78e:	bd80      	pop	{r7, pc}
 800b790:	24000394 	.word	0x24000394

0800b794 <_Z23getFont_verdana_10_4bppv>:
{
 800b794:	b580      	push	{r7, lr}
 800b796:	b08e      	sub	sp, #56	; 0x38
 800b798:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b79a:	4b21      	ldr	r3, [pc, #132]	; (800b820 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b79c:	681b      	ldr	r3, [r3, #0]
 800b79e:	f3bf 8f5b 	dmb	ish
 800b7a2:	f003 0301 	and.w	r3, r3, #1
 800b7a6:	2b00      	cmp	r3, #0
 800b7a8:	bf0c      	ite	eq
 800b7aa:	2301      	moveq	r3, #1
 800b7ac:	2300      	movne	r3, #0
 800b7ae:	b2db      	uxtb	r3, r3
 800b7b0:	2b00      	cmp	r3, #0
 800b7b2:	d030      	beq.n	800b816 <_Z23getFont_verdana_10_4bppv+0x82>
 800b7b4:	481a      	ldr	r0, [pc, #104]	; (800b820 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b7b6:	f017 fe0e 	bl	80233d6 <__cxa_guard_acquire>
 800b7ba:	4603      	mov	r3, r0
 800b7bc:	2b00      	cmp	r3, #0
 800b7be:	bf14      	ite	ne
 800b7c0:	2301      	movne	r3, #1
 800b7c2:	2300      	moveq	r3, #0
 800b7c4:	b2db      	uxtb	r3, r3
 800b7c6:	2b00      	cmp	r3, #0
 800b7c8:	d025      	beq.n	800b816 <_Z23getFont_verdana_10_4bppv+0x82>
 800b7ca:	2300      	movs	r3, #0
 800b7cc:	930c      	str	r3, [sp, #48]	; 0x30
 800b7ce:	2300      	movs	r3, #0
 800b7d0:	930b      	str	r3, [sp, #44]	; 0x2c
 800b7d2:	2300      	movs	r3, #0
 800b7d4:	930a      	str	r3, [sp, #40]	; 0x28
 800b7d6:	233f      	movs	r3, #63	; 0x3f
 800b7d8:	9309      	str	r3, [sp, #36]	; 0x24
 800b7da:	4b12      	ldr	r3, [pc, #72]	; (800b824 <_Z23getFont_verdana_10_4bppv+0x90>)
 800b7dc:	9308      	str	r3, [sp, #32]
 800b7de:	4b12      	ldr	r3, [pc, #72]	; (800b828 <_Z23getFont_verdana_10_4bppv+0x94>)
 800b7e0:	9307      	str	r3, [sp, #28]
 800b7e2:	2300      	movs	r3, #0
 800b7e4:	9306      	str	r3, [sp, #24]
 800b7e6:	2300      	movs	r3, #0
 800b7e8:	9305      	str	r3, [sp, #20]
 800b7ea:	2301      	movs	r3, #1
 800b7ec:	9304      	str	r3, [sp, #16]
 800b7ee:	2304      	movs	r3, #4
 800b7f0:	9303      	str	r3, [sp, #12]
 800b7f2:	2300      	movs	r3, #0
 800b7f4:	9302      	str	r3, [sp, #8]
 800b7f6:	2300      	movs	r3, #0
 800b7f8:	9301      	str	r3, [sp, #4]
 800b7fa:	230a      	movs	r3, #10
 800b7fc:	9300      	str	r3, [sp, #0]
 800b7fe:	230a      	movs	r3, #10
 800b800:	2201      	movs	r2, #1
 800b802:	490a      	ldr	r1, [pc, #40]	; (800b82c <_Z23getFont_verdana_10_4bppv+0x98>)
 800b804:	480a      	ldr	r0, [pc, #40]	; (800b830 <_Z23getFont_verdana_10_4bppv+0x9c>)
 800b806:	f7ff ff1b 	bl	800b640 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b80a:	480a      	ldr	r0, [pc, #40]	; (800b834 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800b80c:	f017 fe2e 	bl	802346c <atexit>
 800b810:	4803      	ldr	r0, [pc, #12]	; (800b820 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b812:	f017 fdec 	bl	80233ee <__cxa_guard_release>
    return verdana_10_4bpp;
 800b816:	4b06      	ldr	r3, [pc, #24]	; (800b830 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800b818:	4618      	mov	r0, r3
 800b81a:	46bd      	mov	sp, r7
 800b81c:	bd80      	pop	{r7, pc}
 800b81e:	bf00      	nop
 800b820:	240003c0 	.word	0x240003c0
 800b824:	0802a830 	.word	0x0802a830
 800b828:	0802a884 	.word	0x0802a884
 800b82c:	0802a668 	.word	0x0802a668
 800b830:	24000394 	.word	0x24000394
 800b834:	0800b785 	.word	0x0800b785

0800b838 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_160_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_160_4bpp();

touchgfx::GeneratedFont& getFont_verdana_160_4bpp()
{
    static touchgfx::GeneratedFont verdana_160_4bpp(glyphs_verdana_160_4bpp, 3, 160, 160, 0, 0, 4, 1, 0, 0, unicodes_verdana_160_4bpp, kerning_verdana_160_4bpp, 63, 0, 0, 0);
 800b838:	b580      	push	{r7, lr}
 800b83a:	af00      	add	r7, sp, #0
 800b83c:	4801      	ldr	r0, [pc, #4]	; (800b844 <__tcf_0+0xc>)
 800b83e:	f7ff fea5 	bl	800b58c <_ZN8touchgfx13GeneratedFontD1Ev>
 800b842:	bd80      	pop	{r7, pc}
 800b844:	240003c4 	.word	0x240003c4

0800b848 <_Z24getFont_verdana_160_4bppv>:
{
 800b848:	b580      	push	{r7, lr}
 800b84a:	b08e      	sub	sp, #56	; 0x38
 800b84c:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_160_4bpp(glyphs_verdana_160_4bpp, 3, 160, 160, 0, 0, 4, 1, 0, 0, unicodes_verdana_160_4bpp, kerning_verdana_160_4bpp, 63, 0, 0, 0);
 800b84e:	4b21      	ldr	r3, [pc, #132]	; (800b8d4 <_Z24getFont_verdana_160_4bppv+0x8c>)
 800b850:	681b      	ldr	r3, [r3, #0]
 800b852:	f3bf 8f5b 	dmb	ish
 800b856:	f003 0301 	and.w	r3, r3, #1
 800b85a:	2b00      	cmp	r3, #0
 800b85c:	bf0c      	ite	eq
 800b85e:	2301      	moveq	r3, #1
 800b860:	2300      	movne	r3, #0
 800b862:	b2db      	uxtb	r3, r3
 800b864:	2b00      	cmp	r3, #0
 800b866:	d030      	beq.n	800b8ca <_Z24getFont_verdana_160_4bppv+0x82>
 800b868:	481a      	ldr	r0, [pc, #104]	; (800b8d4 <_Z24getFont_verdana_160_4bppv+0x8c>)
 800b86a:	f017 fdb4 	bl	80233d6 <__cxa_guard_acquire>
 800b86e:	4603      	mov	r3, r0
 800b870:	2b00      	cmp	r3, #0
 800b872:	bf14      	ite	ne
 800b874:	2301      	movne	r3, #1
 800b876:	2300      	moveq	r3, #0
 800b878:	b2db      	uxtb	r3, r3
 800b87a:	2b00      	cmp	r3, #0
 800b87c:	d025      	beq.n	800b8ca <_Z24getFont_verdana_160_4bppv+0x82>
 800b87e:	2300      	movs	r3, #0
 800b880:	930c      	str	r3, [sp, #48]	; 0x30
 800b882:	2300      	movs	r3, #0
 800b884:	930b      	str	r3, [sp, #44]	; 0x2c
 800b886:	2300      	movs	r3, #0
 800b888:	930a      	str	r3, [sp, #40]	; 0x28
 800b88a:	233f      	movs	r3, #63	; 0x3f
 800b88c:	9309      	str	r3, [sp, #36]	; 0x24
 800b88e:	4b12      	ldr	r3, [pc, #72]	; (800b8d8 <_Z24getFont_verdana_160_4bppv+0x90>)
 800b890:	9308      	str	r3, [sp, #32]
 800b892:	4b12      	ldr	r3, [pc, #72]	; (800b8dc <_Z24getFont_verdana_160_4bppv+0x94>)
 800b894:	9307      	str	r3, [sp, #28]
 800b896:	2300      	movs	r3, #0
 800b898:	9306      	str	r3, [sp, #24]
 800b89a:	2300      	movs	r3, #0
 800b89c:	9305      	str	r3, [sp, #20]
 800b89e:	2301      	movs	r3, #1
 800b8a0:	9304      	str	r3, [sp, #16]
 800b8a2:	2304      	movs	r3, #4
 800b8a4:	9303      	str	r3, [sp, #12]
 800b8a6:	2300      	movs	r3, #0
 800b8a8:	9302      	str	r3, [sp, #8]
 800b8aa:	2300      	movs	r3, #0
 800b8ac:	9301      	str	r3, [sp, #4]
 800b8ae:	23a0      	movs	r3, #160	; 0xa0
 800b8b0:	9300      	str	r3, [sp, #0]
 800b8b2:	23a0      	movs	r3, #160	; 0xa0
 800b8b4:	2203      	movs	r2, #3
 800b8b6:	490a      	ldr	r1, [pc, #40]	; (800b8e0 <_Z24getFont_verdana_160_4bppv+0x98>)
 800b8b8:	480a      	ldr	r0, [pc, #40]	; (800b8e4 <_Z24getFont_verdana_160_4bppv+0x9c>)
 800b8ba:	f7ff fec1 	bl	800b640 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b8be:	480a      	ldr	r0, [pc, #40]	; (800b8e8 <_Z24getFont_verdana_160_4bppv+0xa0>)
 800b8c0:	f017 fdd4 	bl	802346c <atexit>
 800b8c4:	4803      	ldr	r0, [pc, #12]	; (800b8d4 <_Z24getFont_verdana_160_4bppv+0x8c>)
 800b8c6:	f017 fd92 	bl	80233ee <__cxa_guard_release>
    return verdana_160_4bpp;
 800b8ca:	4b06      	ldr	r3, [pc, #24]	; (800b8e4 <_Z24getFont_verdana_160_4bppv+0x9c>)
}
 800b8cc:	4618      	mov	r0, r3
 800b8ce:	46bd      	mov	sp, r7
 800b8d0:	bd80      	pop	{r7, pc}
 800b8d2:	bf00      	nop
 800b8d4:	240003f0 	.word	0x240003f0
 800b8d8:	0802a834 	.word	0x0802a834
 800b8dc:	0802a888 	.word	0x0802a888
 800b8e0:	0802a678 	.word	0x0802a678
 800b8e4:	240003c4 	.word	0x240003c4
 800b8e8:	0800b839 	.word	0x0800b839

0800b8ec <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 27, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800b8ec:	b580      	push	{r7, lr}
 800b8ee:	af00      	add	r7, sp, #0
 800b8f0:	4801      	ldr	r0, [pc, #4]	; (800b8f8 <__tcf_0+0xc>)
 800b8f2:	f7ff fe4b 	bl	800b58c <_ZN8touchgfx13GeneratedFontD1Ev>
 800b8f6:	bd80      	pop	{r7, pc}
 800b8f8:	240003f4 	.word	0x240003f4

0800b8fc <_Z23getFont_verdana_20_4bppv>:
{
 800b8fc:	b580      	push	{r7, lr}
 800b8fe:	b08e      	sub	sp, #56	; 0x38
 800b900:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 27, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800b902:	4b21      	ldr	r3, [pc, #132]	; (800b988 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b904:	681b      	ldr	r3, [r3, #0]
 800b906:	f3bf 8f5b 	dmb	ish
 800b90a:	f003 0301 	and.w	r3, r3, #1
 800b90e:	2b00      	cmp	r3, #0
 800b910:	bf0c      	ite	eq
 800b912:	2301      	moveq	r3, #1
 800b914:	2300      	movne	r3, #0
 800b916:	b2db      	uxtb	r3, r3
 800b918:	2b00      	cmp	r3, #0
 800b91a:	d030      	beq.n	800b97e <_Z23getFont_verdana_20_4bppv+0x82>
 800b91c:	481a      	ldr	r0, [pc, #104]	; (800b988 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b91e:	f017 fd5a 	bl	80233d6 <__cxa_guard_acquire>
 800b922:	4603      	mov	r3, r0
 800b924:	2b00      	cmp	r3, #0
 800b926:	bf14      	ite	ne
 800b928:	2301      	movne	r3, #1
 800b92a:	2300      	moveq	r3, #0
 800b92c:	b2db      	uxtb	r3, r3
 800b92e:	2b00      	cmp	r3, #0
 800b930:	d025      	beq.n	800b97e <_Z23getFont_verdana_20_4bppv+0x82>
 800b932:	2300      	movs	r3, #0
 800b934:	930c      	str	r3, [sp, #48]	; 0x30
 800b936:	2300      	movs	r3, #0
 800b938:	930b      	str	r3, [sp, #44]	; 0x2c
 800b93a:	2300      	movs	r3, #0
 800b93c:	930a      	str	r3, [sp, #40]	; 0x28
 800b93e:	233f      	movs	r3, #63	; 0x3f
 800b940:	9309      	str	r3, [sp, #36]	; 0x24
 800b942:	4b12      	ldr	r3, [pc, #72]	; (800b98c <_Z23getFont_verdana_20_4bppv+0x90>)
 800b944:	9308      	str	r3, [sp, #32]
 800b946:	4b12      	ldr	r3, [pc, #72]	; (800b990 <_Z23getFont_verdana_20_4bppv+0x94>)
 800b948:	9307      	str	r3, [sp, #28]
 800b94a:	2301      	movs	r3, #1
 800b94c:	9306      	str	r3, [sp, #24]
 800b94e:	2300      	movs	r3, #0
 800b950:	9305      	str	r3, [sp, #20]
 800b952:	2301      	movs	r3, #1
 800b954:	9304      	str	r3, [sp, #16]
 800b956:	2304      	movs	r3, #4
 800b958:	9303      	str	r3, [sp, #12]
 800b95a:	2300      	movs	r3, #0
 800b95c:	9302      	str	r3, [sp, #8]
 800b95e:	2300      	movs	r3, #0
 800b960:	9301      	str	r3, [sp, #4]
 800b962:	2314      	movs	r3, #20
 800b964:	9300      	str	r3, [sp, #0]
 800b966:	2318      	movs	r3, #24
 800b968:	221b      	movs	r2, #27
 800b96a:	490a      	ldr	r1, [pc, #40]	; (800b994 <_Z23getFont_verdana_20_4bppv+0x98>)
 800b96c:	480a      	ldr	r0, [pc, #40]	; (800b998 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800b96e:	f7ff fe67 	bl	800b640 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b972:	480a      	ldr	r0, [pc, #40]	; (800b99c <_Z23getFont_verdana_20_4bppv+0xa0>)
 800b974:	f017 fd7a 	bl	802346c <atexit>
 800b978:	4803      	ldr	r0, [pc, #12]	; (800b988 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b97a:	f017 fd38 	bl	80233ee <__cxa_guard_release>
    return verdana_20_4bpp;
 800b97e:	4b06      	ldr	r3, [pc, #24]	; (800b998 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800b980:	4618      	mov	r0, r3
 800b982:	46bd      	mov	sp, r7
 800b984:	bd80      	pop	{r7, pc}
 800b986:	bf00      	nop
 800b988:	24000420 	.word	0x24000420
 800b98c:	0802a838 	.word	0x0802a838
 800b990:	0802a88c 	.word	0x0802a88c
 800b994:	0802a6a4 	.word	0x0802a6a4
 800b998:	240003f4 	.word	0x240003f4
 800b99c:	0800b8ed 	.word	0x0800b8ed

0800b9a0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800b9a0:	b580      	push	{r7, lr}
 800b9a2:	af00      	add	r7, sp, #0
 800b9a4:	4801      	ldr	r0, [pc, #4]	; (800b9ac <__tcf_0+0xc>)
 800b9a6:	f7ff fdf1 	bl	800b58c <_ZN8touchgfx13GeneratedFontD1Ev>
 800b9aa:	bd80      	pop	{r7, pc}
 800b9ac:	24000424 	.word	0x24000424

0800b9b0 <_Z23getFont_verdana_40_4bppv>:
{
 800b9b0:	b580      	push	{r7, lr}
 800b9b2:	b08e      	sub	sp, #56	; 0x38
 800b9b4:	af0e      	add	r7, sp, #56	; 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800b9b6:	4b21      	ldr	r3, [pc, #132]	; (800ba3c <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b9b8:	681b      	ldr	r3, [r3, #0]
 800b9ba:	f3bf 8f5b 	dmb	ish
 800b9be:	f003 0301 	and.w	r3, r3, #1
 800b9c2:	2b00      	cmp	r3, #0
 800b9c4:	bf0c      	ite	eq
 800b9c6:	2301      	moveq	r3, #1
 800b9c8:	2300      	movne	r3, #0
 800b9ca:	b2db      	uxtb	r3, r3
 800b9cc:	2b00      	cmp	r3, #0
 800b9ce:	d030      	beq.n	800ba32 <_Z23getFont_verdana_40_4bppv+0x82>
 800b9d0:	481a      	ldr	r0, [pc, #104]	; (800ba3c <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b9d2:	f017 fd00 	bl	80233d6 <__cxa_guard_acquire>
 800b9d6:	4603      	mov	r3, r0
 800b9d8:	2b00      	cmp	r3, #0
 800b9da:	bf14      	ite	ne
 800b9dc:	2301      	movne	r3, #1
 800b9de:	2300      	moveq	r3, #0
 800b9e0:	b2db      	uxtb	r3, r3
 800b9e2:	2b00      	cmp	r3, #0
 800b9e4:	d025      	beq.n	800ba32 <_Z23getFont_verdana_40_4bppv+0x82>
 800b9e6:	2300      	movs	r3, #0
 800b9e8:	930c      	str	r3, [sp, #48]	; 0x30
 800b9ea:	2300      	movs	r3, #0
 800b9ec:	930b      	str	r3, [sp, #44]	; 0x2c
 800b9ee:	2300      	movs	r3, #0
 800b9f0:	930a      	str	r3, [sp, #40]	; 0x28
 800b9f2:	233f      	movs	r3, #63	; 0x3f
 800b9f4:	9309      	str	r3, [sp, #36]	; 0x24
 800b9f6:	4b12      	ldr	r3, [pc, #72]	; (800ba40 <_Z23getFont_verdana_40_4bppv+0x90>)
 800b9f8:	9308      	str	r3, [sp, #32]
 800b9fa:	4b12      	ldr	r3, [pc, #72]	; (800ba44 <_Z23getFont_verdana_40_4bppv+0x94>)
 800b9fc:	9307      	str	r3, [sp, #28]
 800b9fe:	2300      	movs	r3, #0
 800ba00:	9306      	str	r3, [sp, #24]
 800ba02:	2300      	movs	r3, #0
 800ba04:	9305      	str	r3, [sp, #20]
 800ba06:	2301      	movs	r3, #1
 800ba08:	9304      	str	r3, [sp, #16]
 800ba0a:	2304      	movs	r3, #4
 800ba0c:	9303      	str	r3, [sp, #12]
 800ba0e:	2300      	movs	r3, #0
 800ba10:	9302      	str	r3, [sp, #8]
 800ba12:	2300      	movs	r3, #0
 800ba14:	9301      	str	r3, [sp, #4]
 800ba16:	2328      	movs	r3, #40	; 0x28
 800ba18:	9300      	str	r3, [sp, #0]
 800ba1a:	2328      	movs	r3, #40	; 0x28
 800ba1c:	2201      	movs	r2, #1
 800ba1e:	490a      	ldr	r1, [pc, #40]	; (800ba48 <_Z23getFont_verdana_40_4bppv+0x98>)
 800ba20:	480a      	ldr	r0, [pc, #40]	; (800ba4c <_Z23getFont_verdana_40_4bppv+0x9c>)
 800ba22:	f7ff fe0d 	bl	800b640 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800ba26:	480a      	ldr	r0, [pc, #40]	; (800ba50 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800ba28:	f017 fd20 	bl	802346c <atexit>
 800ba2c:	4803      	ldr	r0, [pc, #12]	; (800ba3c <_Z23getFont_verdana_40_4bppv+0x8c>)
 800ba2e:	f017 fcde 	bl	80233ee <__cxa_guard_release>
    return verdana_40_4bpp;
 800ba32:	4b06      	ldr	r3, [pc, #24]	; (800ba4c <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800ba34:	4618      	mov	r0, r3
 800ba36:	46bd      	mov	sp, r7
 800ba38:	bd80      	pop	{r7, pc}
 800ba3a:	bf00      	nop
 800ba3c:	24000450 	.word	0x24000450
 800ba40:	0802a880 	.word	0x0802a880
 800ba44:	0802a890 	.word	0x0802a890
 800ba48:	0802a820 	.word	0x0802a820
 800ba4c:	24000424 	.word	0x24000424
 800ba50:	0800b9a1 	.word	0x0800b9a1

0800ba54 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800ba54:	b480      	push	{r7}
 800ba56:	b083      	sub	sp, #12
 800ba58:	af00      	add	r7, sp, #0
 800ba5a:	6078      	str	r0, [r7, #4]
 800ba5c:	6039      	str	r1, [r7, #0]
 800ba5e:	683b      	ldr	r3, [r7, #0]
 800ba60:	4618      	mov	r0, r3
 800ba62:	370c      	adds	r7, #12
 800ba64:	46bd      	mov	sp, r7
 800ba66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba6a:	4770      	bx	lr

0800ba6c <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800ba6c:	b480      	push	{r7}
 800ba6e:	b083      	sub	sp, #12
 800ba70:	af00      	add	r7, sp, #0
 800ba72:	6078      	str	r0, [r7, #4]
 800ba74:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ba76:	bf00      	nop
 800ba78:	370c      	adds	r7, #12
 800ba7a:	46bd      	mov	sp, r7
 800ba7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba80:	4770      	bx	lr

0800ba82 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800ba82:	b480      	push	{r7}
 800ba84:	b083      	sub	sp, #12
 800ba86:	af00      	add	r7, sp, #0
 800ba88:	6078      	str	r0, [r7, #4]
 800ba8a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ba8c:	bf00      	nop
 800ba8e:	370c      	adds	r7, #12
 800ba90:	46bd      	mov	sp, r7
 800ba92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba96:	4770      	bx	lr

0800ba98 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800ba98:	b480      	push	{r7}
 800ba9a:	b083      	sub	sp, #12
 800ba9c:	af00      	add	r7, sp, #0
 800ba9e:	6078      	str	r0, [r7, #4]
 800baa0:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800baa2:	bf00      	nop
 800baa4:	370c      	adds	r7, #12
 800baa6:	46bd      	mov	sp, r7
 800baa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baac:	4770      	bx	lr

0800baae <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800baae:	b480      	push	{r7}
 800bab0:	b083      	sub	sp, #12
 800bab2:	af00      	add	r7, sp, #0
 800bab4:	6078      	str	r0, [r7, #4]
 800bab6:	460b      	mov	r3, r1
 800bab8:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800baba:	bf00      	nop
 800babc:	370c      	adds	r7, #12
 800babe:	46bd      	mov	sp, r7
 800bac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bac4:	4770      	bx	lr

0800bac6 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800bac6:	b480      	push	{r7}
 800bac8:	b083      	sub	sp, #12
 800baca:	af00      	add	r7, sp, #0
 800bacc:	6078      	str	r0, [r7, #4]
    {
    }
 800bace:	bf00      	nop
 800bad0:	370c      	adds	r7, #12
 800bad2:	46bd      	mov	sp, r7
 800bad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bad8:	4770      	bx	lr

0800bada <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800bada:	b480      	push	{r7}
 800badc:	b083      	sub	sp, #12
 800bade:	af00      	add	r7, sp, #0
 800bae0:	6078      	str	r0, [r7, #4]
    {
    }
 800bae2:	bf00      	nop
 800bae4:	370c      	adds	r7, #12
 800bae6:	46bd      	mov	sp, r7
 800bae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baec:	4770      	bx	lr
	...

0800baf0 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800baf0:	b480      	push	{r7}
 800baf2:	b083      	sub	sp, #12
 800baf4:	af00      	add	r7, sp, #0
 800baf6:	6078      	str	r0, [r7, #4]
    {
 800baf8:	4a04      	ldr	r2, [pc, #16]	; (800bb0c <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800bafa:	687b      	ldr	r3, [r7, #4]
 800bafc:	601a      	str	r2, [r3, #0]
    }
 800bafe:	687b      	ldr	r3, [r7, #4]
 800bb00:	4618      	mov	r0, r3
 800bb02:	370c      	adds	r7, #12
 800bb04:	46bd      	mov	sp, r7
 800bb06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb0a:	4770      	bx	lr
 800bb0c:	08025734 	.word	0x08025734

0800bb10 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800bb10:	b580      	push	{r7, lr}
 800bb12:	b082      	sub	sp, #8
 800bb14:	af00      	add	r7, sp, #0
 800bb16:	6078      	str	r0, [r7, #4]
    }
 800bb18:	6878      	ldr	r0, [r7, #4]
 800bb1a:	f7ff ffe9 	bl	800baf0 <_ZN8touchgfx15UIEventListenerD1Ev>
 800bb1e:	2104      	movs	r1, #4
 800bb20:	6878      	ldr	r0, [r7, #4]
 800bb22:	f017 fc56 	bl	80233d2 <_ZdlPvj>
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	4618      	mov	r0, r3
 800bb2a:	3708      	adds	r7, #8
 800bb2c:	46bd      	mov	sp, r7
 800bb2e:	bd80      	pop	{r7, pc}

0800bb30 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800bb30:	b480      	push	{r7}
 800bb32:	b083      	sub	sp, #12
 800bb34:	af00      	add	r7, sp, #0
 800bb36:	6078      	str	r0, [r7, #4]
    {
    }
 800bb38:	bf00      	nop
 800bb3a:	370c      	adds	r7, #12
 800bb3c:	46bd      	mov	sp, r7
 800bb3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb42:	4770      	bx	lr

0800bb44 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800bb44:	b480      	push	{r7}
 800bb46:	b083      	sub	sp, #12
 800bb48:	af00      	add	r7, sp, #0
 800bb4a:	6078      	str	r0, [r7, #4]
 800bb4c:	460b      	mov	r3, r1
 800bb4e:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800bb50:	bf00      	nop
 800bb52:	370c      	adds	r7, #12
 800bb54:	46bd      	mov	sp, r7
 800bb56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb5a:	4770      	bx	lr

0800bb5c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800bb5c:	b480      	push	{r7}
 800bb5e:	b083      	sub	sp, #12
 800bb60:	af00      	add	r7, sp, #0
 800bb62:	6078      	str	r0, [r7, #4]
 800bb64:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800bb66:	687b      	ldr	r3, [r7, #4]
 800bb68:	683a      	ldr	r2, [r7, #0]
 800bb6a:	f503 7398 	add.w	r3, r3, #304	; 0x130
 800bb6e:	6810      	ldr	r0, [r2, #0]
 800bb70:	6851      	ldr	r1, [r2, #4]
 800bb72:	c303      	stmia	r3!, {r0, r1}
    }
 800bb74:	bf00      	nop
 800bb76:	370c      	adds	r7, #12
 800bb78:	46bd      	mov	sp, r7
 800bb7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb7e:	4770      	bx	lr

0800bb80 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800bb80:	b580      	push	{r7, lr}
 800bb82:	b082      	sub	sp, #8
 800bb84:	af00      	add	r7, sp, #0
 800bb86:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800bb88:	687b      	ldr	r3, [r7, #4]
 800bb8a:	3304      	adds	r3, #4
 800bb8c:	4618      	mov	r0, r3
 800bb8e:	f007 fb22 	bl	80131d6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800bb92:	bf00      	nop
 800bb94:	3708      	adds	r7, #8
 800bb96:	46bd      	mov	sp, r7
 800bb98:	bd80      	pop	{r7, pc}
	...

0800bb9c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800bb9c:	b480      	push	{r7}
 800bb9e:	b083      	sub	sp, #12
 800bba0:	af00      	add	r7, sp, #0
 800bba2:	6078      	str	r0, [r7, #4]
    {
 800bba4:	4a04      	ldr	r2, [pc, #16]	; (800bbb8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800bba6:	687b      	ldr	r3, [r7, #4]
 800bba8:	601a      	str	r2, [r3, #0]
    }
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	4618      	mov	r0, r3
 800bbae:	370c      	adds	r7, #12
 800bbb0:	46bd      	mov	sp, r7
 800bbb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbb6:	4770      	bx	lr
 800bbb8:	0802571c 	.word	0x0802571c

0800bbbc <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800bbbc:	b580      	push	{r7, lr}
 800bbbe:	b082      	sub	sp, #8
 800bbc0:	af00      	add	r7, sp, #0
 800bbc2:	6078      	str	r0, [r7, #4]
    }
 800bbc4:	6878      	ldr	r0, [r7, #4]
 800bbc6:	f7ff ffe9 	bl	800bb9c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800bbca:	2104      	movs	r1, #4
 800bbcc:	6878      	ldr	r0, [r7, #4]
 800bbce:	f017 fc00 	bl	80233d2 <_ZdlPvj>
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	4618      	mov	r0, r3
 800bbd6:	3708      	adds	r7, #8
 800bbd8:	46bd      	mov	sp, r7
 800bbda:	bd80      	pop	{r7, pc}

0800bbdc <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800bbdc:	b480      	push	{r7}
 800bbde:	af00      	add	r7, sp, #0
    {
        return instance;
 800bbe0:	4b03      	ldr	r3, [pc, #12]	; (800bbf0 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800bbe2:	681b      	ldr	r3, [r3, #0]
    }
 800bbe4:	4618      	mov	r0, r3
 800bbe6:	46bd      	mov	sp, r7
 800bbe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbec:	4770      	bx	lr
 800bbee:	bf00      	nop
 800bbf0:	24002074 	.word	0x24002074

0800bbf4 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800bbf4:	b480      	push	{r7}
 800bbf6:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800bbf8:	4b0b      	ldr	r3, [pc, #44]	; (800bc28 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800bbfa:	681b      	ldr	r3, [r3, #0]
 800bbfc:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800bc00:	2b00      	cmp	r3, #0
 800bc02:	d008      	beq.n	800bc16 <_ZN8touchgfx3HAL3lcdEv+0x22>
 800bc04:	4b08      	ldr	r3, [pc, #32]	; (800bc28 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800bc06:	681b      	ldr	r3, [r3, #0]
 800bc08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800bc0a:	2b00      	cmp	r3, #0
 800bc0c:	d003      	beq.n	800bc16 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800bc0e:	4b06      	ldr	r3, [pc, #24]	; (800bc28 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800bc10:	681b      	ldr	r3, [r3, #0]
 800bc12:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800bc14:	e002      	b.n	800bc1c <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800bc16:	4b04      	ldr	r3, [pc, #16]	; (800bc28 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800bc18:	681b      	ldr	r3, [r3, #0]
 800bc1a:	689b      	ldr	r3, [r3, #8]
    }
 800bc1c:	4618      	mov	r0, r3
 800bc1e:	46bd      	mov	sp, r7
 800bc20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc24:	4770      	bx	lr
 800bc26:	bf00      	nop
 800bc28:	24002074 	.word	0x24002074

0800bc2c <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800bc2c:	b480      	push	{r7}
 800bc2e:	b083      	sub	sp, #12
 800bc30:	af00      	add	r7, sp, #0
 800bc32:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800bc34:	4a07      	ldr	r2, [pc, #28]	; (800bc54 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800bc36:	687b      	ldr	r3, [r7, #4]
 800bc38:	601a      	str	r2, [r3, #0]
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	2200      	movs	r2, #0
 800bc3e:	605a      	str	r2, [r3, #4]
 800bc40:	687b      	ldr	r3, [r7, #4]
 800bc42:	2200      	movs	r2, #0
 800bc44:	721a      	strb	r2, [r3, #8]
    {
    }
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	4618      	mov	r0, r3
 800bc4a:	370c      	adds	r7, #12
 800bc4c:	46bd      	mov	sp, r7
 800bc4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc52:	4770      	bx	lr
 800bc54:	080256f8 	.word	0x080256f8

0800bc58 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800bc58:	b480      	push	{r7}
 800bc5a:	b083      	sub	sp, #12
 800bc5c:	af00      	add	r7, sp, #0
 800bc5e:	6078      	str	r0, [r7, #4]
    {
 800bc60:	4a04      	ldr	r2, [pc, #16]	; (800bc74 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	601a      	str	r2, [r3, #0]
    }
 800bc66:	687b      	ldr	r3, [r7, #4]
 800bc68:	4618      	mov	r0, r3
 800bc6a:	370c      	adds	r7, #12
 800bc6c:	46bd      	mov	sp, r7
 800bc6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc72:	4770      	bx	lr
 800bc74:	080256f8 	.word	0x080256f8

0800bc78 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800bc78:	b580      	push	{r7, lr}
 800bc7a:	b082      	sub	sp, #8
 800bc7c:	af00      	add	r7, sp, #0
 800bc7e:	6078      	str	r0, [r7, #4]
    }
 800bc80:	6878      	ldr	r0, [r7, #4]
 800bc82:	f7ff ffe9 	bl	800bc58 <_ZN8touchgfx10TransitionD1Ev>
 800bc86:	210c      	movs	r1, #12
 800bc88:	6878      	ldr	r0, [r7, #4]
 800bc8a:	f017 fba2 	bl	80233d2 <_ZdlPvj>
 800bc8e:	687b      	ldr	r3, [r7, #4]
 800bc90:	4618      	mov	r0, r3
 800bc92:	3708      	adds	r7, #8
 800bc94:	46bd      	mov	sp, r7
 800bc96:	bd80      	pop	{r7, pc}

0800bc98 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800bc98:	b480      	push	{r7}
 800bc9a:	b083      	sub	sp, #12
 800bc9c:	af00      	add	r7, sp, #0
 800bc9e:	6078      	str	r0, [r7, #4]
    {
    }
 800bca0:	bf00      	nop
 800bca2:	370c      	adds	r7, #12
 800bca4:	46bd      	mov	sp, r7
 800bca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcaa:	4770      	bx	lr

0800bcac <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800bcac:	b480      	push	{r7}
 800bcae:	b083      	sub	sp, #12
 800bcb0:	af00      	add	r7, sp, #0
 800bcb2:	6078      	str	r0, [r7, #4]
    {
    }
 800bcb4:	bf00      	nop
 800bcb6:	370c      	adds	r7, #12
 800bcb8:	46bd      	mov	sp, r7
 800bcba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcbe:	4770      	bx	lr

0800bcc0 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800bcc0:	b480      	push	{r7}
 800bcc2:	b083      	sub	sp, #12
 800bcc4:	af00      	add	r7, sp, #0
 800bcc6:	6078      	str	r0, [r7, #4]
    {
    }
 800bcc8:	bf00      	nop
 800bcca:	370c      	adds	r7, #12
 800bccc:	46bd      	mov	sp, r7
 800bcce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcd2:	4770      	bx	lr

0800bcd4 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800bcd4:	b580      	push	{r7, lr}
 800bcd6:	b082      	sub	sp, #8
 800bcd8:	af00      	add	r7, sp, #0
 800bcda:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800bcdc:	f007 fa56 	bl	801318c <_ZN8touchgfx11Application11getInstanceEv>
 800bce0:	4603      	mov	r3, r0
 800bce2:	681a      	ldr	r2, [r3, #0]
 800bce4:	323c      	adds	r2, #60	; 0x3c
 800bce6:	6812      	ldr	r2, [r2, #0]
 800bce8:	4618      	mov	r0, r3
 800bcea:	4790      	blx	r2
    }
 800bcec:	bf00      	nop
 800bcee:	3708      	adds	r7, #8
 800bcf0:	46bd      	mov	sp, r7
 800bcf2:	bd80      	pop	{r7, pc}

0800bcf4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800bcf4:	b480      	push	{r7}
 800bcf6:	b083      	sub	sp, #12
 800bcf8:	af00      	add	r7, sp, #0
 800bcfa:	6078      	str	r0, [r7, #4]
 800bcfc:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800bcfe:	687b      	ldr	r3, [r7, #4]
 800bd00:	683a      	ldr	r2, [r7, #0]
 800bd02:	605a      	str	r2, [r3, #4]
    }
 800bd04:	bf00      	nop
 800bd06:	370c      	adds	r7, #12
 800bd08:	46bd      	mov	sp, r7
 800bd0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd0e:	4770      	bx	lr

0800bd10 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800bd10:	b580      	push	{r7, lr}
 800bd12:	b082      	sub	sp, #8
 800bd14:	af00      	add	r7, sp, #0
 800bd16:	6078      	str	r0, [r7, #4]
 800bd18:	4a05      	ldr	r2, [pc, #20]	; (800bd30 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800bd1a:	687b      	ldr	r3, [r7, #4]
 800bd1c:	601a      	str	r2, [r3, #0]
 800bd1e:	687b      	ldr	r3, [r7, #4]
 800bd20:	4618      	mov	r0, r3
 800bd22:	f7ff fee5 	bl	800baf0 <_ZN8touchgfx15UIEventListenerD1Ev>
 800bd26:	687b      	ldr	r3, [r7, #4]
 800bd28:	4618      	mov	r0, r3
 800bd2a:	3708      	adds	r7, #8
 800bd2c:	46bd      	mov	sp, r7
 800bd2e:	bd80      	pop	{r7, pc}
 800bd30:	080261e0 	.word	0x080261e0

0800bd34 <_ZN8touchgfx11ApplicationD0Ev>:
 800bd34:	b580      	push	{r7, lr}
 800bd36:	b082      	sub	sp, #8
 800bd38:	af00      	add	r7, sp, #0
 800bd3a:	6078      	str	r0, [r7, #4]
 800bd3c:	6878      	ldr	r0, [r7, #4]
 800bd3e:	f7ff ffe7 	bl	800bd10 <_ZN8touchgfx11ApplicationD1Ev>
 800bd42:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800bd46:	6878      	ldr	r0, [r7, #4]
 800bd48:	f017 fb43 	bl	80233d2 <_ZdlPvj>
 800bd4c:	687b      	ldr	r3, [r7, #4]
 800bd4e:	4618      	mov	r0, r3
 800bd50:	3708      	adds	r7, #8
 800bd52:	46bd      	mov	sp, r7
 800bd54:	bd80      	pop	{r7, pc}
	...

0800bd58 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800bd58:	b580      	push	{r7, lr}
 800bd5a:	b082      	sub	sp, #8
 800bd5c:	af00      	add	r7, sp, #0
 800bd5e:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800bd60:	687b      	ldr	r3, [r7, #4]
 800bd62:	4618      	mov	r0, r3
 800bd64:	f007 fad8 	bl	8013318 <_ZN8touchgfx11ApplicationC1Ev>
 800bd68:	4a09      	ldr	r2, [pc, #36]	; (800bd90 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800bd6a:	687b      	ldr	r3, [r7, #4]
 800bd6c:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800bd6e:	687b      	ldr	r3, [r7, #4]
 800bd70:	2200      	movs	r2, #0
 800bd72:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
          pendingScreenTransitionCallback(0)
 800bd76:	687b      	ldr	r3, [r7, #4]
 800bd78:	2200      	movs	r2, #0
 800bd7a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
    {
        instance = this;
 800bd7e:	687b      	ldr	r3, [r7, #4]
 800bd80:	4a04      	ldr	r2, [pc, #16]	; (800bd94 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800bd82:	6013      	str	r3, [r2, #0]
    }
 800bd84:	687b      	ldr	r3, [r7, #4]
 800bd86:	4618      	mov	r0, r3
 800bd88:	3708      	adds	r7, #8
 800bd8a:	46bd      	mov	sp, r7
 800bd8c:	bd80      	pop	{r7, pc}
 800bd8e:	bf00      	nop
 800bd90:	080256a4 	.word	0x080256a4
 800bd94:	240020c0 	.word	0x240020c0

0800bd98 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800bd98:	b580      	push	{r7, lr}
 800bd9a:	b082      	sub	sp, #8
 800bd9c:	af00      	add	r7, sp, #0
 800bd9e:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800bda0:	6878      	ldr	r0, [r7, #4]
 800bda2:	f000 f804 	bl	800bdae <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800bda6:	bf00      	nop
 800bda8:	3708      	adds	r7, #8
 800bdaa:	46bd      	mov	sp, r7
 800bdac:	bd80      	pop	{r7, pc}

0800bdae <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800bdae:	b580      	push	{r7, lr}
 800bdb0:	b082      	sub	sp, #8
 800bdb2:	af00      	add	r7, sp, #0
 800bdb4:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800bdb6:	687b      	ldr	r3, [r7, #4]
 800bdb8:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bdbc:	2b00      	cmp	r3, #0
 800bdbe:	d00f      	beq.n	800bde0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800bdc0:	687b      	ldr	r3, [r7, #4]
 800bdc2:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800bdc6:	687b      	ldr	r3, [r7, #4]
 800bdc8:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bdcc:	681b      	ldr	r3, [r3, #0]
 800bdce:	330c      	adds	r3, #12
 800bdd0:	681b      	ldr	r3, [r3, #0]
 800bdd2:	4610      	mov	r0, r2
 800bdd4:	4798      	blx	r3
 800bdd6:	4603      	mov	r3, r0
 800bdd8:	2b00      	cmp	r3, #0
 800bdda:	d001      	beq.n	800bde0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800bddc:	2301      	movs	r3, #1
 800bdde:	e000      	b.n	800bde2 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800bde0:	2300      	movs	r3, #0
 800bde2:	2b00      	cmp	r3, #0
 800bde4:	d00e      	beq.n	800be04 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800bde6:	687b      	ldr	r3, [r7, #4]
 800bde8:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800bdec:	687b      	ldr	r3, [r7, #4]
 800bdee:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 800bdf2:	681b      	ldr	r3, [r3, #0]
 800bdf4:	3308      	adds	r3, #8
 800bdf6:	681b      	ldr	r3, [r3, #0]
 800bdf8:	4610      	mov	r0, r2
 800bdfa:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	2200      	movs	r2, #0
 800be00:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
        }
    }
 800be04:	bf00      	nop
 800be06:	3708      	adds	r7, #8
 800be08:	46bd      	mov	sp, r7
 800be0a:	bd80      	pop	{r7, pc}

0800be0c <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800be0c:	b480      	push	{r7}
 800be0e:	b083      	sub	sp, #12
 800be10:	af00      	add	r7, sp, #0
 800be12:	6078      	str	r0, [r7, #4]
 800be14:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800be16:	687b      	ldr	r3, [r7, #4]
 800be18:	683a      	ldr	r2, [r7, #0]
 800be1a:	601a      	str	r2, [r3, #0]
    }
 800be1c:	bf00      	nop
 800be1e:	370c      	adds	r7, #12
 800be20:	46bd      	mov	sp, r7
 800be22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be26:	4770      	bx	lr

0800be28 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800be28:	b580      	push	{r7, lr}
 800be2a:	b082      	sub	sp, #8
 800be2c:	af00      	add	r7, sp, #0
 800be2e:	6078      	str	r0, [r7, #4]
 800be30:	4a05      	ldr	r2, [pc, #20]	; (800be48 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800be32:	687b      	ldr	r3, [r7, #4]
 800be34:	601a      	str	r2, [r3, #0]
 800be36:	687b      	ldr	r3, [r7, #4]
 800be38:	4618      	mov	r0, r3
 800be3a:	f7ff ff69 	bl	800bd10 <_ZN8touchgfx11ApplicationD1Ev>
 800be3e:	687b      	ldr	r3, [r7, #4]
 800be40:	4618      	mov	r0, r3
 800be42:	3708      	adds	r7, #8
 800be44:	46bd      	mov	sp, r7
 800be46:	bd80      	pop	{r7, pc}
 800be48:	080256a4 	.word	0x080256a4

0800be4c <_ZN8touchgfx14MVPApplicationD0Ev>:
 800be4c:	b580      	push	{r7, lr}
 800be4e:	b082      	sub	sp, #8
 800be50:	af00      	add	r7, sp, #0
 800be52:	6078      	str	r0, [r7, #4]
 800be54:	6878      	ldr	r0, [r7, #4]
 800be56:	f7ff ffe7 	bl	800be28 <_ZN8touchgfx14MVPApplicationD1Ev>
 800be5a:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800be5e:	6878      	ldr	r0, [r7, #4]
 800be60:	f017 fab7 	bl	80233d2 <_ZdlPvj>
 800be64:	687b      	ldr	r3, [r7, #4]
 800be66:	4618      	mov	r0, r3
 800be68:	3708      	adds	r7, #8
 800be6a:	46bd      	mov	sp, r7
 800be6c:	bd80      	pop	{r7, pc}
	...

0800be70 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800be70:	b580      	push	{r7, lr}
 800be72:	b082      	sub	sp, #8
 800be74:	af00      	add	r7, sp, #0
 800be76:	6078      	str	r0, [r7, #4]
 800be78:	4a08      	ldr	r2, [pc, #32]	; (800be9c <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800be7a:	687b      	ldr	r3, [r7, #4]
 800be7c:	601a      	str	r2, [r3, #0]
 800be7e:	687b      	ldr	r3, [r7, #4]
 800be80:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800be84:	4618      	mov	r0, r3
 800be86:	f000 facd 	bl	800c424 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800be8a:	687b      	ldr	r3, [r7, #4]
 800be8c:	4618      	mov	r0, r3
 800be8e:	f7ff ffcb 	bl	800be28 <_ZN8touchgfx14MVPApplicationD1Ev>
 800be92:	687b      	ldr	r3, [r7, #4]
 800be94:	4618      	mov	r0, r3
 800be96:	3708      	adds	r7, #8
 800be98:	46bd      	mov	sp, r7
 800be9a:	bd80      	pop	{r7, pc}
 800be9c:	08025638 	.word	0x08025638

0800bea0 <_ZN23FrontendApplicationBaseD0Ev>:
 800bea0:	b580      	push	{r7, lr}
 800bea2:	b082      	sub	sp, #8
 800bea4:	af00      	add	r7, sp, #0
 800bea6:	6078      	str	r0, [r7, #4]
 800bea8:	6878      	ldr	r0, [r7, #4]
 800beaa:	f7ff ffe1 	bl	800be70 <_ZN23FrontendApplicationBaseD1Ev>
 800beae:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800beb2:	6878      	ldr	r0, [r7, #4]
 800beb4:	f017 fa8d 	bl	80233d2 <_ZdlPvj>
 800beb8:	687b      	ldr	r3, [r7, #4]
 800beba:	4618      	mov	r0, r3
 800bebc:	3708      	adds	r7, #8
 800bebe:	46bd      	mov	sp, r7
 800bec0:	bd80      	pop	{r7, pc}

0800bec2 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800bec2:	b580      	push	{r7, lr}
 800bec4:	b082      	sub	sp, #8
 800bec6:	af00      	add	r7, sp, #0
 800bec8:	6078      	str	r0, [r7, #4]
    {
        gotoscreen_perf_modeScreenNoTransition();
 800beca:	6878      	ldr	r0, [r7, #4]
 800becc:	f000 f882 	bl	800bfd4 <_ZN23FrontendApplicationBase38gotoscreen_perf_modeScreenNoTransitionEv>
    }
 800bed0:	bf00      	nop
 800bed2:	3708      	adds	r7, #8
 800bed4:	46bd      	mov	sp, r7
 800bed6:	bd80      	pop	{r7, pc}

0800bed8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800bed8:	b480      	push	{r7}
 800beda:	b083      	sub	sp, #12
 800bedc:	af00      	add	r7, sp, #0
 800bede:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800bee0:	687b      	ldr	r3, [r7, #4]
 800bee2:	2201      	movs	r2, #1
 800bee4:	721a      	strb	r2, [r3, #8]
    }
 800bee6:	bf00      	nop
 800bee8:	370c      	adds	r7, #12
 800beea:	46bd      	mov	sp, r7
 800beec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bef0:	4770      	bx	lr

0800bef2 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800bef2:	b480      	push	{r7}
 800bef4:	b083      	sub	sp, #12
 800bef6:	af00      	add	r7, sp, #0
 800bef8:	6078      	str	r0, [r7, #4]
 800befa:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800befc:	687b      	ldr	r3, [r7, #4]
 800befe:	683a      	ldr	r2, [r7, #0]
 800bf00:	605a      	str	r2, [r3, #4]
    }
 800bf02:	bf00      	nop
 800bf04:	370c      	adds	r7, #12
 800bf06:	46bd      	mov	sp, r7
 800bf08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf0c:	4770      	bx	lr
	...

0800bf10 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_settings_screen/screen_settingsView.hpp>
#include <gui/screen_settings_screen/screen_settingsPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800bf10:	b580      	push	{r7, lr}
 800bf12:	b084      	sub	sp, #16
 800bf14:	af00      	add	r7, sp, #0
 800bf16:	60f8      	str	r0, [r7, #12]
 800bf18:	60b9      	str	r1, [r7, #8]
 800bf1a:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800bf1c:	68fb      	ldr	r3, [r7, #12]
 800bf1e:	4618      	mov	r0, r3
 800bf20:	f7ff ff1a 	bl	800bd58 <_ZN8touchgfx14MVPApplicationC1Ev>
 800bf24:	4a16      	ldr	r2, [pc, #88]	; (800bf80 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>)
 800bf26:	68fb      	ldr	r3, [r7, #12]
 800bf28:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800bf2a:	68fb      	ldr	r3, [r7, #12]
 800bf2c:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800bf30:	4618      	mov	r0, r3
 800bf32:	f000 f8a5 	bl	800c080 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800bf36:	68fb      	ldr	r3, [r7, #12]
 800bf38:	687a      	ldr	r2, [r7, #4]
 800bf3a:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
      model(m)
 800bf3e:	68fb      	ldr	r3, [r7, #12]
 800bf40:	68ba      	ldr	r2, [r7, #8]
 800bf42:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800bf46:	f7ff fe49 	bl	800bbdc <_ZN8touchgfx3HAL11getInstanceEv>
 800bf4a:	4603      	mov	r3, r0
 800bf4c:	681a      	ldr	r2, [r3, #0]
 800bf4e:	3208      	adds	r2, #8
 800bf50:	6812      	ldr	r2, [r2, #0]
 800bf52:	2100      	movs	r1, #0
 800bf54:	4618      	mov	r0, r3
 800bf56:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800bf58:	2000      	movs	r0, #0
 800bf5a:	f001 fb8b 	bl	800d674 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800bf5e:	f7ff fe49 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 800bf62:	4603      	mov	r3, r0
 800bf64:	4618      	mov	r0, r3
 800bf66:	f00f feda 	bl	801bd1e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800bf6a:	f7ff fe43 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 800bf6e:	4603      	mov	r3, r0
 800bf70:	4618      	mov	r0, r3
 800bf72:	f00f ff4f 	bl	801be14 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800bf76:	68fb      	ldr	r3, [r7, #12]
 800bf78:	4618      	mov	r0, r3
 800bf7a:	3710      	adds	r7, #16
 800bf7c:	46bd      	mov	sp, r7
 800bf7e:	bd80      	pop	{r7, pc}
 800bf80:	08025638 	.word	0x08025638

0800bf84 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800bf84:	b480      	push	{r7}
 800bf86:	b083      	sub	sp, #12
 800bf88:	af00      	add	r7, sp, #0
 800bf8a:	6078      	str	r0, [r7, #4]
 800bf8c:	6039      	str	r1, [r7, #0]
 800bf8e:	687b      	ldr	r3, [r7, #4]
 800bf90:	4618      	mov	r0, r3
 800bf92:	370c      	adds	r7, #12
 800bf94:	46bd      	mov	sp, r7
 800bf96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf9a:	4770      	bx	lr

0800bf9c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800bf9c:	b580      	push	{r7, lr}
 800bf9e:	b082      	sub	sp, #8
 800bfa0:	af00      	add	r7, sp, #0
 800bfa2:	6078      	str	r0, [r7, #4]
 800bfa4:	6039      	str	r1, [r7, #0]
 800bfa6:	687b      	ldr	r3, [r7, #4]
 800bfa8:	683a      	ldr	r2, [r7, #0]
 800bfaa:	4611      	mov	r1, r2
 800bfac:	4618      	mov	r0, r3
 800bfae:	f7ff ffe9 	bl	800bf84 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800bfb2:	683b      	ldr	r3, [r7, #0]
 800bfb4:	685a      	ldr	r2, [r3, #4]
 800bfb6:	687b      	ldr	r3, [r7, #4]
 800bfb8:	605a      	str	r2, [r3, #4]
 800bfba:	687b      	ldr	r3, [r7, #4]
 800bfbc:	683a      	ldr	r2, [r7, #0]
 800bfbe:	3308      	adds	r3, #8
 800bfc0:	3208      	adds	r2, #8
 800bfc2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bfc6:	e883 0003 	stmia.w	r3, {r0, r1}
 800bfca:	687b      	ldr	r3, [r7, #4]
 800bfcc:	4618      	mov	r0, r3
 800bfce:	3708      	adds	r7, #8
 800bfd0:	46bd      	mov	sp, r7
 800bfd2:	bd80      	pop	{r7, pc}

0800bfd4 <_ZN23FrontendApplicationBase38gotoscreen_perf_modeScreenNoTransitionEv>:
 */

// screen_perf_mode

void FrontendApplicationBase::gotoscreen_perf_modeScreenNoTransition()
{
 800bfd4:	b590      	push	{r4, r7, lr}
 800bfd6:	b089      	sub	sp, #36	; 0x24
 800bfd8:	af00      	add	r7, sp, #0
 800bfda:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_perf_modeScreenNoTransitionImpl);
 800bfdc:	687b      	ldr	r3, [r7, #4]
 800bfde:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800bfe2:	4b10      	ldr	r3, [pc, #64]	; (800c024 <_ZN23FrontendApplicationBase38gotoscreen_perf_modeScreenNoTransitionEv+0x50>)
 800bfe4:	61bb      	str	r3, [r7, #24]
 800bfe6:	2300      	movs	r3, #0
 800bfe8:	61fb      	str	r3, [r7, #28]
 800bfea:	f107 0008 	add.w	r0, r7, #8
 800bfee:	f107 0318 	add.w	r3, r7, #24
 800bff2:	cb0c      	ldmia	r3, {r2, r3}
 800bff4:	6879      	ldr	r1, [r7, #4]
 800bff6:	f000 f85f 	bl	800c0b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800bffa:	f107 0308 	add.w	r3, r7, #8
 800bffe:	4619      	mov	r1, r3
 800c000:	4620      	mov	r0, r4
 800c002:	f7ff ffcb 	bl	800bf9c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800c006:	f107 0308 	add.w	r3, r7, #8
 800c00a:	4618      	mov	r0, r3
 800c00c:	f000 fa0a 	bl	800c424 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800c010:	687b      	ldr	r3, [r7, #4]
 800c012:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800c016:	687b      	ldr	r3, [r7, #4]
 800c018:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
}
 800c01c:	bf00      	nop
 800c01e:	3724      	adds	r7, #36	; 0x24
 800c020:	46bd      	mov	sp, r7
 800c022:	bd90      	pop	{r4, r7, pc}
 800c024:	0800c029 	.word	0x0800c029

0800c028 <_ZN23FrontendApplicationBase42gotoscreen_perf_modeScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreen_perf_modeScreenNoTransitionImpl()
{
 800c028:	b580      	push	{r7, lr}
 800c02a:	b084      	sub	sp, #16
 800c02c:	af02      	add	r7, sp, #8
 800c02e:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screen_perf_modeView, screen_perf_modePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800c030:	687b      	ldr	r3, [r7, #4]
 800c032:	f503 719e 	add.w	r1, r3, #316	; 0x13c
 800c036:	687b      	ldr	r3, [r7, #4]
 800c038:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800c03c:	461a      	mov	r2, r3
 800c03e:	687b      	ldr	r3, [r7, #4]
 800c040:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800c044:	9300      	str	r3, [sp, #0]
 800c046:	4b04      	ldr	r3, [pc, #16]	; (800c058 <_ZN23FrontendApplicationBase42gotoscreen_perf_modeScreenNoTransitionImplEv+0x30>)
 800c048:	4804      	ldr	r0, [pc, #16]	; (800c05c <_ZN23FrontendApplicationBase42gotoscreen_perf_modeScreenNoTransitionImplEv+0x34>)
 800c04a:	f000 f867 	bl	800c11c <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800c04e:	bf00      	nop
 800c050:	3708      	adds	r7, #8
 800c052:	46bd      	mov	sp, r7
 800c054:	bd80      	pop	{r7, pc}
 800c056:	bf00      	nop
 800c058:	240020b4 	.word	0x240020b4
 800c05c:	240020b0 	.word	0x240020b0

0800c060 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800c060:	b480      	push	{r7}
 800c062:	b083      	sub	sp, #12
 800c064:	af00      	add	r7, sp, #0
 800c066:	6078      	str	r0, [r7, #4]
 800c068:	4a04      	ldr	r2, [pc, #16]	; (800c07c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800c06a:	687b      	ldr	r3, [r7, #4]
 800c06c:	601a      	str	r2, [r3, #0]
 800c06e:	687b      	ldr	r3, [r7, #4]
 800c070:	4618      	mov	r0, r3
 800c072:	370c      	adds	r7, #12
 800c074:	46bd      	mov	sp, r7
 800c076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c07a:	4770      	bx	lr
 800c07c:	0802571c 	.word	0x0802571c

0800c080 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800c080:	b580      	push	{r7, lr}
 800c082:	b082      	sub	sp, #8
 800c084:	af00      	add	r7, sp, #0
 800c086:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800c088:	687b      	ldr	r3, [r7, #4]
 800c08a:	4618      	mov	r0, r3
 800c08c:	f7ff ffe8 	bl	800c060 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800c090:	4a08      	ldr	r2, [pc, #32]	; (800c0b4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800c092:	687b      	ldr	r3, [r7, #4]
 800c094:	601a      	str	r2, [r3, #0]
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	2200      	movs	r2, #0
 800c09a:	605a      	str	r2, [r3, #4]
 800c09c:	687b      	ldr	r3, [r7, #4]
 800c09e:	2200      	movs	r2, #0
 800c0a0:	609a      	str	r2, [r3, #8]
 800c0a2:	687b      	ldr	r3, [r7, #4]
 800c0a4:	2200      	movs	r2, #0
 800c0a6:	60da      	str	r2, [r3, #12]
    {
    }
 800c0a8:	687b      	ldr	r3, [r7, #4]
 800c0aa:	4618      	mov	r0, r3
 800c0ac:	3708      	adds	r7, #8
 800c0ae:	46bd      	mov	sp, r7
 800c0b0:	bd80      	pop	{r7, pc}
 800c0b2:	bf00      	nop
 800c0b4:	0802568c 	.word	0x0802568c

0800c0b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800c0b8:	b580      	push	{r7, lr}
 800c0ba:	b084      	sub	sp, #16
 800c0bc:	af00      	add	r7, sp, #0
 800c0be:	60f8      	str	r0, [r7, #12]
 800c0c0:	60b9      	str	r1, [r7, #8]
 800c0c2:	4639      	mov	r1, r7
 800c0c4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800c0c8:	68fb      	ldr	r3, [r7, #12]
 800c0ca:	4618      	mov	r0, r3
 800c0cc:	f7ff ffc8 	bl	800c060 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800c0d0:	4a08      	ldr	r2, [pc, #32]	; (800c0f4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800c0d2:	68fb      	ldr	r3, [r7, #12]
 800c0d4:	601a      	str	r2, [r3, #0]
 800c0d6:	68fb      	ldr	r3, [r7, #12]
 800c0d8:	68ba      	ldr	r2, [r7, #8]
 800c0da:	605a      	str	r2, [r3, #4]
 800c0dc:	68fb      	ldr	r3, [r7, #12]
 800c0de:	3308      	adds	r3, #8
 800c0e0:	463a      	mov	r2, r7
 800c0e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c0e6:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800c0ea:	68fb      	ldr	r3, [r7, #12]
 800c0ec:	4618      	mov	r0, r3
 800c0ee:	3710      	adds	r7, #16
 800c0f0:	46bd      	mov	sp, r7
 800c0f2:	bd80      	pop	{r7, pc}
 800c0f4:	0802568c 	.word	0x0802568c

0800c0f8 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800c0f8:	b580      	push	{r7, lr}
 800c0fa:	b082      	sub	sp, #8
 800c0fc:	af00      	add	r7, sp, #0
 800c0fe:	6078      	str	r0, [r7, #4]
 800c100:	687b      	ldr	r3, [r7, #4]
 800c102:	4618      	mov	r0, r3
 800c104:	f7ff fd92 	bl	800bc2c <_ZN8touchgfx10TransitionC1Ev>
 800c108:	4a03      	ldr	r2, [pc, #12]	; (800c118 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800c10a:	687b      	ldr	r3, [r7, #4]
 800c10c:	601a      	str	r2, [r3, #0]
 800c10e:	687b      	ldr	r3, [r7, #4]
 800c110:	4618      	mov	r0, r3
 800c112:	3708      	adds	r7, #8
 800c114:	46bd      	mov	sp, r7
 800c116:	bd80      	pop	{r7, pc}
 800c118:	08025614 	.word	0x08025614

0800c11c <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800c11c:	b590      	push	{r4, r7, lr}
 800c11e:	b08f      	sub	sp, #60	; 0x3c
 800c120:	af00      	add	r7, sp, #0
 800c122:	60f8      	str	r0, [r7, #12]
 800c124:	60b9      	str	r1, [r7, #8]
 800c126:	607a      	str	r2, [r7, #4]
 800c128:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800c12a:	687b      	ldr	r3, [r7, #4]
 800c12c:	689a      	ldr	r2, [r3, #8]
 800c12e:	687b      	ldr	r3, [r7, #4]
 800c130:	689b      	ldr	r3, [r3, #8]
 800c132:	681b      	ldr	r3, [r3, #0]
 800c134:	3320      	adds	r3, #32
 800c136:	681b      	ldr	r3, [r3, #0]
 800c138:	4610      	mov	r0, r2
 800c13a:	4798      	blx	r3
 800c13c:	4603      	mov	r3, r0
 800c13e:	f5b3 7fb8 	cmp.w	r3, #368	; 0x170
 800c142:	d205      	bcs.n	800c150 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800c144:	4b7d      	ldr	r3, [pc, #500]	; (800c33c <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c146:	4a7e      	ldr	r2, [pc, #504]	; (800c340 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c148:	21a3      	movs	r1, #163	; 0xa3
 800c14a:	487e      	ldr	r0, [pc, #504]	; (800c344 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c14c:	f017 f970 	bl	8023430 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800c150:	687b      	ldr	r3, [r7, #4]
 800c152:	685a      	ldr	r2, [r3, #4]
 800c154:	687b      	ldr	r3, [r7, #4]
 800c156:	685b      	ldr	r3, [r3, #4]
 800c158:	681b      	ldr	r3, [r3, #0]
 800c15a:	3320      	adds	r3, #32
 800c15c:	681b      	ldr	r3, [r3, #0]
 800c15e:	4610      	mov	r0, r2
 800c160:	4798      	blx	r3
 800c162:	4603      	mov	r3, r0
 800c164:	2b0f      	cmp	r3, #15
 800c166:	d805      	bhi.n	800c174 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800c168:	4b77      	ldr	r3, [pc, #476]	; (800c348 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800c16a:	4a75      	ldr	r2, [pc, #468]	; (800c340 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c16c:	21a4      	movs	r1, #164	; 0xa4
 800c16e:	4875      	ldr	r0, [pc, #468]	; (800c344 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c170:	f017 f95e 	bl	8023430 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800c174:	687b      	ldr	r3, [r7, #4]
 800c176:	68da      	ldr	r2, [r3, #12]
 800c178:	687b      	ldr	r3, [r7, #4]
 800c17a:	68db      	ldr	r3, [r3, #12]
 800c17c:	681b      	ldr	r3, [r3, #0]
 800c17e:	3320      	adds	r3, #32
 800c180:	681b      	ldr	r3, [r3, #0]
 800c182:	4610      	mov	r0, r2
 800c184:	4798      	blx	r3
 800c186:	4603      	mov	r3, r0
 800c188:	2b0b      	cmp	r3, #11
 800c18a:	d805      	bhi.n	800c198 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800c18c:	4b6f      	ldr	r3, [pc, #444]	; (800c34c <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800c18e:	4a6c      	ldr	r2, [pc, #432]	; (800c340 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c190:	21a5      	movs	r1, #165	; 0xa5
 800c192:	486c      	ldr	r0, [pc, #432]	; (800c344 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c194:	f017 f94c 	bl	8023430 <__assert_func>
 800c198:	68fb      	ldr	r3, [r7, #12]
 800c19a:	62bb      	str	r3, [r7, #40]	; 0x28
 800c19c:	68bb      	ldr	r3, [r7, #8]
 800c19e:	627b      	str	r3, [r7, #36]	; 0x24
 800c1a0:	683b      	ldr	r3, [r7, #0]
 800c1a2:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c1a4:	f006 fff2 	bl	801318c <_ZN8touchgfx11Application11getInstanceEv>
 800c1a8:	4603      	mov	r3, r0
 800c1aa:	4618      	mov	r0, r3
 800c1ac:	f7ff fce8 	bl	800bb80 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c1b0:	6a3b      	ldr	r3, [r7, #32]
 800c1b2:	681b      	ldr	r3, [r3, #0]
 800c1b4:	2b00      	cmp	r3, #0
 800c1b6:	d008      	beq.n	800c1ca <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800c1b8:	6a3b      	ldr	r3, [r7, #32]
 800c1ba:	681a      	ldr	r2, [r3, #0]
 800c1bc:	6a3b      	ldr	r3, [r7, #32]
 800c1be:	681b      	ldr	r3, [r3, #0]
 800c1c0:	681b      	ldr	r3, [r3, #0]
 800c1c2:	330c      	adds	r3, #12
 800c1c4:	681b      	ldr	r3, [r3, #0]
 800c1c6:	4610      	mov	r0, r2
 800c1c8:	4798      	blx	r3
    if (*currentTrans)
 800c1ca:	6a3b      	ldr	r3, [r7, #32]
 800c1cc:	681b      	ldr	r3, [r3, #0]
 800c1ce:	2b00      	cmp	r3, #0
 800c1d0:	d007      	beq.n	800c1e2 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800c1d2:	6a3b      	ldr	r3, [r7, #32]
 800c1d4:	681a      	ldr	r2, [r3, #0]
 800c1d6:	6a3b      	ldr	r3, [r7, #32]
 800c1d8:	681b      	ldr	r3, [r3, #0]
 800c1da:	681b      	ldr	r3, [r3, #0]
 800c1dc:	681b      	ldr	r3, [r3, #0]
 800c1de:	4610      	mov	r0, r2
 800c1e0:	4798      	blx	r3
    if (*currentScreen)
 800c1e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c1e4:	681b      	ldr	r3, [r3, #0]
 800c1e6:	2b00      	cmp	r3, #0
 800c1e8:	d008      	beq.n	800c1fc <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800c1ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c1ec:	681a      	ldr	r2, [r3, #0]
 800c1ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c1f0:	681b      	ldr	r3, [r3, #0]
 800c1f2:	681b      	ldr	r3, [r3, #0]
 800c1f4:	3314      	adds	r3, #20
 800c1f6:	681b      	ldr	r3, [r3, #0]
 800c1f8:	4610      	mov	r0, r2
 800c1fa:	4798      	blx	r3
    if (*currentPresenter)
 800c1fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c1fe:	681b      	ldr	r3, [r3, #0]
 800c200:	2b00      	cmp	r3, #0
 800c202:	d008      	beq.n	800c216 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800c204:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c206:	681a      	ldr	r2, [r3, #0]
 800c208:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c20a:	681b      	ldr	r3, [r3, #0]
 800c20c:	681b      	ldr	r3, [r3, #0]
 800c20e:	3304      	adds	r3, #4
 800c210:	681b      	ldr	r3, [r3, #0]
 800c212:	4610      	mov	r0, r2
 800c214:	4798      	blx	r3
    if (*currentScreen)
 800c216:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c218:	681b      	ldr	r3, [r3, #0]
 800c21a:	2b00      	cmp	r3, #0
 800c21c:	d007      	beq.n	800c22e <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800c21e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c220:	681a      	ldr	r2, [r3, #0]
 800c222:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c224:	681b      	ldr	r3, [r3, #0]
 800c226:	681b      	ldr	r3, [r3, #0]
 800c228:	681b      	ldr	r3, [r3, #0]
 800c22a:	4610      	mov	r0, r2
 800c22c:	4798      	blx	r3
    if (*currentPresenter)
 800c22e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c230:	681b      	ldr	r3, [r3, #0]
 800c232:	2b00      	cmp	r3, #0
 800c234:	d008      	beq.n	800c248 <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800c236:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c238:	681a      	ldr	r2, [r3, #0]
 800c23a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c23c:	681b      	ldr	r3, [r3, #0]
 800c23e:	681b      	ldr	r3, [r3, #0]
 800c240:	3308      	adds	r3, #8
 800c242:	681b      	ldr	r3, [r3, #0]
 800c244:	4610      	mov	r0, r2
 800c246:	4798      	blx	r3
}
 800c248:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c24a:	687b      	ldr	r3, [r7, #4]
 800c24c:	68db      	ldr	r3, [r3, #12]
 800c24e:	2100      	movs	r1, #0
 800c250:	4618      	mov	r0, r3
 800c252:	f000 f87d 	bl	800c350 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800c256:	4603      	mov	r3, r0
 800c258:	4619      	mov	r1, r3
 800c25a:	200c      	movs	r0, #12
 800c25c:	f7ff fbfa 	bl	800ba54 <_ZnwjPv>
 800c260:	4604      	mov	r4, r0
 800c262:	4620      	mov	r0, r4
 800c264:	f7ff ff48 	bl	800c0f8 <_ZN8touchgfx12NoTransitionC1Ev>
 800c268:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c26a:	687b      	ldr	r3, [r7, #4]
 800c26c:	689b      	ldr	r3, [r3, #8]
 800c26e:	2100      	movs	r1, #0
 800c270:	4618      	mov	r0, r3
 800c272:	f000 f880 	bl	800c376 <_ZN8touchgfx17AbstractPartition2atI20screen_perf_modeViewEERT_t>
 800c276:	4603      	mov	r3, r0
 800c278:	4619      	mov	r1, r3
 800c27a:	f44f 70b8 	mov.w	r0, #368	; 0x170
 800c27e:	f7ff fbe9 	bl	800ba54 <_ZnwjPv>
 800c282:	4604      	mov	r4, r0
 800c284:	4620      	mov	r0, r4
 800c286:	f001 fc0f 	bl	800daa8 <_ZN20screen_perf_modeViewC1Ev>
 800c28a:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c28c:	687b      	ldr	r3, [r7, #4]
 800c28e:	685b      	ldr	r3, [r3, #4]
 800c290:	2100      	movs	r1, #0
 800c292:	4618      	mov	r0, r3
 800c294:	f000 f882 	bl	800c39c <_ZN8touchgfx17AbstractPartition2atI25screen_perf_modePresenterEERT_t>
 800c298:	4603      	mov	r3, r0
 800c29a:	4619      	mov	r1, r3
 800c29c:	2010      	movs	r0, #16
 800c29e:	f7ff fbd9 	bl	800ba54 <_ZnwjPv>
 800c2a2:	4604      	mov	r4, r0
 800c2a4:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c2a6:	4620      	mov	r0, r4
 800c2a8:	f001 fba6 	bl	800d9f8 <_ZN25screen_perf_modePresenterC1ER20screen_perf_modeView>
 800c2ac:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 800c2ae:	683b      	ldr	r3, [r7, #0]
 800c2b0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c2b2:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c2b4:	68bb      	ldr	r3, [r7, #8]
 800c2b6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c2b8:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c2ba:	68fb      	ldr	r3, [r7, #12]
 800c2bc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c2be:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c2c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c2c2:	2b00      	cmp	r3, #0
 800c2c4:	d002      	beq.n	800c2cc <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800c2c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c2c8:	3304      	adds	r3, #4
 800c2ca:	e000      	b.n	800c2ce <_ZN8touchgfx14makeTransitionI20screen_perf_modeView25screen_perf_modePresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c2cc:	2300      	movs	r3, #0
 800c2ce:	4619      	mov	r1, r3
 800c2d0:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800c2d2:	f7ff fd9b 	bl	800be0c <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c2d6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c2d8:	3304      	adds	r3, #4
 800c2da:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800c2dc:	4618      	mov	r0, r3
 800c2de:	f7ff fe08 	bl	800bef2 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c2e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c2e4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c2e6:	4618      	mov	r0, r3
 800c2e8:	f000 f86b 	bl	800c3c2 <_ZN8touchgfx4ViewI25screen_perf_modePresenterE4bindERS1_>
 800c2ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c2ee:	61fb      	str	r3, [r7, #28]
 800c2f0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c2f2:	61bb      	str	r3, [r7, #24]
 800c2f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c2f6:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c2f8:	69fb      	ldr	r3, [r7, #28]
 800c2fa:	681b      	ldr	r3, [r3, #0]
 800c2fc:	330c      	adds	r3, #12
 800c2fe:	681b      	ldr	r3, [r3, #0]
 800c300:	69f8      	ldr	r0, [r7, #28]
 800c302:	4798      	blx	r3
    newPresenter->activate();
 800c304:	69bb      	ldr	r3, [r7, #24]
 800c306:	681b      	ldr	r3, [r3, #0]
 800c308:	681b      	ldr	r3, [r3, #0]
 800c30a:	69b8      	ldr	r0, [r7, #24]
 800c30c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c30e:	6979      	ldr	r1, [r7, #20]
 800c310:	69f8      	ldr	r0, [r7, #28]
 800c312:	f008 fbff 	bl	8014b14 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c316:	697b      	ldr	r3, [r7, #20]
 800c318:	681b      	ldr	r3, [r3, #0]
 800c31a:	3310      	adds	r3, #16
 800c31c:	681b      	ldr	r3, [r3, #0]
 800c31e:	6978      	ldr	r0, [r7, #20]
 800c320:	4798      	blx	r3
    newTransition->invalidate();
 800c322:	697b      	ldr	r3, [r7, #20]
 800c324:	681b      	ldr	r3, [r3, #0]
 800c326:	3314      	adds	r3, #20
 800c328:	681b      	ldr	r3, [r3, #0]
 800c32a:	6978      	ldr	r0, [r7, #20]
 800c32c:	4798      	blx	r3
}
 800c32e:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800c330:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800c332:	4618      	mov	r0, r3
 800c334:	373c      	adds	r7, #60	; 0x3c
 800c336:	46bd      	mov	sp, r7
 800c338:	bd90      	pop	{r4, r7, pc}
 800c33a:	bf00      	nop
 800c33c:	0802449c 	.word	0x0802449c
 800c340:	0802452c 	.word	0x0802452c
 800c344:	08024644 	.word	0x08024644
 800c348:	08024688 	.word	0x08024688
 800c34c:	0802472c 	.word	0x0802472c

0800c350 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800c350:	b580      	push	{r7, lr}
 800c352:	b082      	sub	sp, #8
 800c354:	af00      	add	r7, sp, #0
 800c356:	6078      	str	r0, [r7, #4]
 800c358:	460b      	mov	r3, r1
 800c35a:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800c35c:	687b      	ldr	r3, [r7, #4]
 800c35e:	681b      	ldr	r3, [r3, #0]
 800c360:	3324      	adds	r3, #36	; 0x24
 800c362:	681b      	ldr	r3, [r3, #0]
 800c364:	887a      	ldrh	r2, [r7, #2]
 800c366:	4611      	mov	r1, r2
 800c368:	6878      	ldr	r0, [r7, #4]
 800c36a:	4798      	blx	r3
 800c36c:	4603      	mov	r3, r0
    }
 800c36e:	4618      	mov	r0, r3
 800c370:	3708      	adds	r7, #8
 800c372:	46bd      	mov	sp, r7
 800c374:	bd80      	pop	{r7, pc}

0800c376 <_ZN8touchgfx17AbstractPartition2atI20screen_perf_modeViewEERT_t>:
    T& at(const uint16_t index)
 800c376:	b580      	push	{r7, lr}
 800c378:	b082      	sub	sp, #8
 800c37a:	af00      	add	r7, sp, #0
 800c37c:	6078      	str	r0, [r7, #4]
 800c37e:	460b      	mov	r3, r1
 800c380:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c382:	687b      	ldr	r3, [r7, #4]
 800c384:	681b      	ldr	r3, [r3, #0]
 800c386:	3324      	adds	r3, #36	; 0x24
 800c388:	681b      	ldr	r3, [r3, #0]
 800c38a:	887a      	ldrh	r2, [r7, #2]
 800c38c:	4611      	mov	r1, r2
 800c38e:	6878      	ldr	r0, [r7, #4]
 800c390:	4798      	blx	r3
 800c392:	4603      	mov	r3, r0
    }
 800c394:	4618      	mov	r0, r3
 800c396:	3708      	adds	r7, #8
 800c398:	46bd      	mov	sp, r7
 800c39a:	bd80      	pop	{r7, pc}

0800c39c <_ZN8touchgfx17AbstractPartition2atI25screen_perf_modePresenterEERT_t>:
    T& at(const uint16_t index)
 800c39c:	b580      	push	{r7, lr}
 800c39e:	b082      	sub	sp, #8
 800c3a0:	af00      	add	r7, sp, #0
 800c3a2:	6078      	str	r0, [r7, #4]
 800c3a4:	460b      	mov	r3, r1
 800c3a6:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c3a8:	687b      	ldr	r3, [r7, #4]
 800c3aa:	681b      	ldr	r3, [r3, #0]
 800c3ac:	3324      	adds	r3, #36	; 0x24
 800c3ae:	681b      	ldr	r3, [r3, #0]
 800c3b0:	887a      	ldrh	r2, [r7, #2]
 800c3b2:	4611      	mov	r1, r2
 800c3b4:	6878      	ldr	r0, [r7, #4]
 800c3b6:	4798      	blx	r3
 800c3b8:	4603      	mov	r3, r0
    }
 800c3ba:	4618      	mov	r0, r3
 800c3bc:	3708      	adds	r7, #8
 800c3be:	46bd      	mov	sp, r7
 800c3c0:	bd80      	pop	{r7, pc}

0800c3c2 <_ZN8touchgfx4ViewI25screen_perf_modePresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800c3c2:	b480      	push	{r7}
 800c3c4:	b083      	sub	sp, #12
 800c3c6:	af00      	add	r7, sp, #0
 800c3c8:	6078      	str	r0, [r7, #4]
 800c3ca:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800c3cc:	687b      	ldr	r3, [r7, #4]
 800c3ce:	683a      	ldr	r2, [r7, #0]
 800c3d0:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800c3d2:	bf00      	nop
 800c3d4:	370c      	adds	r7, #12
 800c3d6:	46bd      	mov	sp, r7
 800c3d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3dc:	4770      	bx	lr
	...

0800c3e0 <_ZN8touchgfx12NoTransitionD1Ev>:
 800c3e0:	b580      	push	{r7, lr}
 800c3e2:	b082      	sub	sp, #8
 800c3e4:	af00      	add	r7, sp, #0
 800c3e6:	6078      	str	r0, [r7, #4]
 800c3e8:	4a05      	ldr	r2, [pc, #20]	; (800c400 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800c3ea:	687b      	ldr	r3, [r7, #4]
 800c3ec:	601a      	str	r2, [r3, #0]
 800c3ee:	687b      	ldr	r3, [r7, #4]
 800c3f0:	4618      	mov	r0, r3
 800c3f2:	f7ff fc31 	bl	800bc58 <_ZN8touchgfx10TransitionD1Ev>
 800c3f6:	687b      	ldr	r3, [r7, #4]
 800c3f8:	4618      	mov	r0, r3
 800c3fa:	3708      	adds	r7, #8
 800c3fc:	46bd      	mov	sp, r7
 800c3fe:	bd80      	pop	{r7, pc}
 800c400:	08025614 	.word	0x08025614

0800c404 <_ZN8touchgfx12NoTransitionD0Ev>:
 800c404:	b580      	push	{r7, lr}
 800c406:	b082      	sub	sp, #8
 800c408:	af00      	add	r7, sp, #0
 800c40a:	6078      	str	r0, [r7, #4]
 800c40c:	6878      	ldr	r0, [r7, #4]
 800c40e:	f7ff ffe7 	bl	800c3e0 <_ZN8touchgfx12NoTransitionD1Ev>
 800c412:	210c      	movs	r1, #12
 800c414:	6878      	ldr	r0, [r7, #4]
 800c416:	f016 ffdc 	bl	80233d2 <_ZdlPvj>
 800c41a:	687b      	ldr	r3, [r7, #4]
 800c41c:	4618      	mov	r0, r3
 800c41e:	3708      	adds	r7, #8
 800c420:	46bd      	mov	sp, r7
 800c422:	bd80      	pop	{r7, pc}

0800c424 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c424:	b580      	push	{r7, lr}
 800c426:	b082      	sub	sp, #8
 800c428:	af00      	add	r7, sp, #0
 800c42a:	6078      	str	r0, [r7, #4]
 800c42c:	4a05      	ldr	r2, [pc, #20]	; (800c444 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800c42e:	687b      	ldr	r3, [r7, #4]
 800c430:	601a      	str	r2, [r3, #0]
 800c432:	687b      	ldr	r3, [r7, #4]
 800c434:	4618      	mov	r0, r3
 800c436:	f7ff fbb1 	bl	800bb9c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800c43a:	687b      	ldr	r3, [r7, #4]
 800c43c:	4618      	mov	r0, r3
 800c43e:	3708      	adds	r7, #8
 800c440:	46bd      	mov	sp, r7
 800c442:	bd80      	pop	{r7, pc}
 800c444:	0802568c 	.word	0x0802568c

0800c448 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800c448:	b580      	push	{r7, lr}
 800c44a:	b082      	sub	sp, #8
 800c44c:	af00      	add	r7, sp, #0
 800c44e:	6078      	str	r0, [r7, #4]
 800c450:	6878      	ldr	r0, [r7, #4]
 800c452:	f7ff ffe7 	bl	800c424 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800c456:	2110      	movs	r1, #16
 800c458:	6878      	ldr	r0, [r7, #4]
 800c45a:	f016 ffba 	bl	80233d2 <_ZdlPvj>
 800c45e:	687b      	ldr	r3, [r7, #4]
 800c460:	4618      	mov	r0, r3
 800c462:	3708      	adds	r7, #8
 800c464:	46bd      	mov	sp, r7
 800c466:	bd80      	pop	{r7, pc}

0800c468 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800c468:	b580      	push	{r7, lr}
 800c46a:	b082      	sub	sp, #8
 800c46c:	af00      	add	r7, sp, #0
 800c46e:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800c470:	687b      	ldr	r3, [r7, #4]
 800c472:	685b      	ldr	r3, [r3, #4]
 800c474:	687a      	ldr	r2, [r7, #4]
 800c476:	68d2      	ldr	r2, [r2, #12]
 800c478:	1052      	asrs	r2, r2, #1
 800c47a:	1899      	adds	r1, r3, r2
 800c47c:	687b      	ldr	r3, [r7, #4]
 800c47e:	68db      	ldr	r3, [r3, #12]
 800c480:	f003 0301 	and.w	r3, r3, #1
 800c484:	2b00      	cmp	r3, #0
 800c486:	d102      	bne.n	800c48e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800c488:	687b      	ldr	r3, [r7, #4]
 800c48a:	689b      	ldr	r3, [r3, #8]
 800c48c:	e00a      	b.n	800c4a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800c48e:	687b      	ldr	r3, [r7, #4]
 800c490:	685b      	ldr	r3, [r3, #4]
 800c492:	687a      	ldr	r2, [r7, #4]
 800c494:	68d2      	ldr	r2, [r2, #12]
 800c496:	1052      	asrs	r2, r2, #1
 800c498:	4413      	add	r3, r2
 800c49a:	681b      	ldr	r3, [r3, #0]
 800c49c:	687a      	ldr	r2, [r7, #4]
 800c49e:	6892      	ldr	r2, [r2, #8]
 800c4a0:	4413      	add	r3, r2
 800c4a2:	681b      	ldr	r3, [r3, #0]
 800c4a4:	4608      	mov	r0, r1
 800c4a6:	4798      	blx	r3
    }
 800c4a8:	bf00      	nop
 800c4aa:	3708      	adds	r7, #8
 800c4ac:	46bd      	mov	sp, r7
 800c4ae:	bd80      	pop	{r7, pc}

0800c4b0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800c4b0:	b480      	push	{r7}
 800c4b2:	b083      	sub	sp, #12
 800c4b4:	af00      	add	r7, sp, #0
 800c4b6:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800c4b8:	687b      	ldr	r3, [r7, #4]
 800c4ba:	685b      	ldr	r3, [r3, #4]
 800c4bc:	2b00      	cmp	r3, #0
 800c4be:	d010      	beq.n	800c4e2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c4c0:	687b      	ldr	r3, [r7, #4]
 800c4c2:	689b      	ldr	r3, [r3, #8]
 800c4c4:	2b00      	cmp	r3, #0
 800c4c6:	d107      	bne.n	800c4d8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c4c8:	687b      	ldr	r3, [r7, #4]
 800c4ca:	68db      	ldr	r3, [r3, #12]
 800c4cc:	f003 0301 	and.w	r3, r3, #1
 800c4d0:	2b00      	cmp	r3, #0
 800c4d2:	d101      	bne.n	800c4d8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c4d4:	2301      	movs	r3, #1
 800c4d6:	e000      	b.n	800c4da <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800c4d8:	2300      	movs	r3, #0
 800c4da:	2b01      	cmp	r3, #1
 800c4dc:	d001      	beq.n	800c4e2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c4de:	2301      	movs	r3, #1
 800c4e0:	e000      	b.n	800c4e4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800c4e2:	2300      	movs	r3, #0
    }
 800c4e4:	4618      	mov	r0, r3
 800c4e6:	370c      	adds	r7, #12
 800c4e8:	46bd      	mov	sp, r7
 800c4ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4ee:	4770      	bx	lr

0800c4f0 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800c4f0:	b480      	push	{r7}
 800c4f2:	b083      	sub	sp, #12
 800c4f4:	af00      	add	r7, sp, #0
 800c4f6:	6078      	str	r0, [r7, #4]
 800c4f8:	6039      	str	r1, [r7, #0]
        : color(col)
 800c4fa:	687b      	ldr	r3, [r7, #4]
 800c4fc:	683a      	ldr	r2, [r7, #0]
 800c4fe:	601a      	str	r2, [r3, #0]
    {
    }
 800c500:	687b      	ldr	r3, [r7, #4]
 800c502:	4618      	mov	r0, r3
 800c504:	370c      	adds	r7, #12
 800c506:	46bd      	mov	sp, r7
 800c508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c50c:	4770      	bx	lr

0800c50e <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800c50e:	b480      	push	{r7}
 800c510:	b083      	sub	sp, #12
 800c512:	af00      	add	r7, sp, #0
 800c514:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800c516:	687b      	ldr	r3, [r7, #4]
 800c518:	2200      	movs	r2, #0
 800c51a:	801a      	strh	r2, [r3, #0]
 800c51c:	687b      	ldr	r3, [r7, #4]
 800c51e:	2200      	movs	r2, #0
 800c520:	805a      	strh	r2, [r3, #2]
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	2200      	movs	r2, #0
 800c526:	809a      	strh	r2, [r3, #4]
 800c528:	687b      	ldr	r3, [r7, #4]
 800c52a:	2200      	movs	r2, #0
 800c52c:	80da      	strh	r2, [r3, #6]
    {
    }
 800c52e:	687b      	ldr	r3, [r7, #4]
 800c530:	4618      	mov	r0, r3
 800c532:	370c      	adds	r7, #12
 800c534:	46bd      	mov	sp, r7
 800c536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c53a:	4770      	bx	lr

0800c53c <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800c53c:	b480      	push	{r7}
 800c53e:	b085      	sub	sp, #20
 800c540:	af00      	add	r7, sp, #0
 800c542:	60f8      	str	r0, [r7, #12]
 800c544:	4608      	mov	r0, r1
 800c546:	4611      	mov	r1, r2
 800c548:	461a      	mov	r2, r3
 800c54a:	4603      	mov	r3, r0
 800c54c:	817b      	strh	r3, [r7, #10]
 800c54e:	460b      	mov	r3, r1
 800c550:	813b      	strh	r3, [r7, #8]
 800c552:	4613      	mov	r3, r2
 800c554:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800c556:	68fb      	ldr	r3, [r7, #12]
 800c558:	897a      	ldrh	r2, [r7, #10]
 800c55a:	801a      	strh	r2, [r3, #0]
 800c55c:	68fb      	ldr	r3, [r7, #12]
 800c55e:	893a      	ldrh	r2, [r7, #8]
 800c560:	805a      	strh	r2, [r3, #2]
 800c562:	68fb      	ldr	r3, [r7, #12]
 800c564:	88fa      	ldrh	r2, [r7, #6]
 800c566:	809a      	strh	r2, [r3, #4]
 800c568:	68fb      	ldr	r3, [r7, #12]
 800c56a:	8b3a      	ldrh	r2, [r7, #24]
 800c56c:	80da      	strh	r2, [r3, #6]
    {
    }
 800c56e:	68fb      	ldr	r3, [r7, #12]
 800c570:	4618      	mov	r0, r3
 800c572:	3714      	adds	r7, #20
 800c574:	46bd      	mov	sp, r7
 800c576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c57a:	4770      	bx	lr

0800c57c <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800c57c:	b480      	push	{r7}
 800c57e:	b083      	sub	sp, #12
 800c580:	af00      	add	r7, sp, #0
 800c582:	6078      	str	r0, [r7, #4]
 800c584:	460b      	mov	r3, r1
 800c586:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800c588:	687b      	ldr	r3, [r7, #4]
 800c58a:	887a      	ldrh	r2, [r7, #2]
 800c58c:	801a      	strh	r2, [r3, #0]
    {
    }
 800c58e:	687b      	ldr	r3, [r7, #4]
 800c590:	4618      	mov	r0, r3
 800c592:	370c      	adds	r7, #12
 800c594:	46bd      	mov	sp, r7
 800c596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c59a:	4770      	bx	lr

0800c59c <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800c59c:	b580      	push	{r7, lr}
 800c59e:	b082      	sub	sp, #8
 800c5a0:	af00      	add	r7, sp, #0
 800c5a2:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800c5a4:	4a14      	ldr	r2, [pc, #80]	; (800c5f8 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800c5a6:	687b      	ldr	r3, [r7, #4]
 800c5a8:	601a      	str	r2, [r3, #0]
        : rect(),
 800c5aa:	687b      	ldr	r3, [r7, #4]
 800c5ac:	3304      	adds	r3, #4
 800c5ae:	4618      	mov	r0, r3
 800c5b0:	f7ff ffad 	bl	800c50e <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800c5b4:	687b      	ldr	r3, [r7, #4]
 800c5b6:	330c      	adds	r3, #12
 800c5b8:	4618      	mov	r0, r3
 800c5ba:	f7ff ffa8 	bl	800c50e <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800c5be:	687b      	ldr	r3, [r7, #4]
 800c5c0:	2200      	movs	r2, #0
 800c5c2:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800c5c4:	687b      	ldr	r3, [r7, #4]
 800c5c6:	2200      	movs	r2, #0
 800c5c8:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800c5ca:	687b      	ldr	r3, [r7, #4]
 800c5cc:	2200      	movs	r2, #0
 800c5ce:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800c5d0:	687b      	ldr	r3, [r7, #4]
 800c5d2:	2200      	movs	r2, #0
 800c5d4:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800c5d6:	687b      	ldr	r3, [r7, #4]
 800c5d8:	2200      	movs	r2, #0
 800c5da:	845a      	strh	r2, [r3, #34]	; 0x22
          touchable(false),
 800c5dc:	687b      	ldr	r3, [r7, #4]
 800c5de:	2200      	movs	r2, #0
 800c5e0:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          visible(true)
 800c5e4:	687b      	ldr	r3, [r7, #4]
 800c5e6:	2201      	movs	r2, #1
 800c5e8:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800c5ec:	687b      	ldr	r3, [r7, #4]
 800c5ee:	4618      	mov	r0, r3
 800c5f0:	3708      	adds	r7, #8
 800c5f2:	46bd      	mov	sp, r7
 800c5f4:	bd80      	pop	{r7, pc}
 800c5f6:	bf00      	nop
 800c5f8:	08026234 	.word	0x08026234

0800c5fc <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800c5fc:	b480      	push	{r7}
 800c5fe:	b083      	sub	sp, #12
 800c600:	af00      	add	r7, sp, #0
 800c602:	6078      	str	r0, [r7, #4]
    {
 800c604:	4a04      	ldr	r2, [pc, #16]	; (800c618 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800c606:	687b      	ldr	r3, [r7, #4]
 800c608:	601a      	str	r2, [r3, #0]
    }
 800c60a:	687b      	ldr	r3, [r7, #4]
 800c60c:	4618      	mov	r0, r3
 800c60e:	370c      	adds	r7, #12
 800c610:	46bd      	mov	sp, r7
 800c612:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c616:	4770      	bx	lr
 800c618:	08026234 	.word	0x08026234

0800c61c <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800c61c:	b580      	push	{r7, lr}
 800c61e:	b082      	sub	sp, #8
 800c620:	af00      	add	r7, sp, #0
 800c622:	6078      	str	r0, [r7, #4]
    }
 800c624:	6878      	ldr	r0, [r7, #4]
 800c626:	f7ff ffe9 	bl	800c5fc <_ZN8touchgfx8DrawableD1Ev>
 800c62a:	2128      	movs	r1, #40	; 0x28
 800c62c:	6878      	ldr	r0, [r7, #4]
 800c62e:	f016 fed0 	bl	80233d2 <_ZdlPvj>
 800c632:	687b      	ldr	r3, [r7, #4]
 800c634:	4618      	mov	r0, r3
 800c636:	3708      	adds	r7, #8
 800c638:	46bd      	mov	sp, r7
 800c63a:	bd80      	pop	{r7, pc}

0800c63c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800c63c:	b580      	push	{r7, lr}
 800c63e:	b082      	sub	sp, #8
 800c640:	af00      	add	r7, sp, #0
 800c642:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800c644:	687b      	ldr	r3, [r7, #4]
 800c646:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800c64a:	2b00      	cmp	r3, #0
 800c64c:	d005      	beq.n	800c65a <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800c64e:	687b      	ldr	r3, [r7, #4]
 800c650:	681b      	ldr	r3, [r3, #0]
 800c652:	3314      	adds	r3, #20
 800c654:	681b      	ldr	r3, [r3, #0]
 800c656:	6878      	ldr	r0, [r7, #4]
 800c658:	4798      	blx	r3
        }
    }
 800c65a:	bf00      	nop
 800c65c:	3708      	adds	r7, #8
 800c65e:	46bd      	mov	sp, r7
 800c660:	bd80      	pop	{r7, pc}

0800c662 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800c662:	b480      	push	{r7}
 800c664:	b083      	sub	sp, #12
 800c666:	af00      	add	r7, sp, #0
 800c668:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800c66a:	2300      	movs	r3, #0
    }
 800c66c:	4618      	mov	r0, r3
 800c66e:	370c      	adds	r7, #12
 800c670:	46bd      	mov	sp, r7
 800c672:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c676:	4770      	bx	lr

0800c678 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800c678:	b580      	push	{r7, lr}
 800c67a:	b084      	sub	sp, #16
 800c67c:	af00      	add	r7, sp, #0
 800c67e:	60f8      	str	r0, [r7, #12]
 800c680:	4608      	mov	r0, r1
 800c682:	4611      	mov	r1, r2
 800c684:	461a      	mov	r2, r3
 800c686:	4603      	mov	r3, r0
 800c688:	817b      	strh	r3, [r7, #10]
 800c68a:	460b      	mov	r3, r1
 800c68c:	813b      	strh	r3, [r7, #8]
 800c68e:	4613      	mov	r3, r2
 800c690:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800c692:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800c696:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800c69a:	4619      	mov	r1, r3
 800c69c:	68f8      	ldr	r0, [r7, #12]
 800c69e:	f000 f82a 	bl	800c6f6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800c6a2:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800c6a6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800c6aa:	4619      	mov	r1, r3
 800c6ac:	68f8      	ldr	r0, [r7, #12]
 800c6ae:	f000 f87e 	bl	800c7ae <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800c6b2:	bf00      	nop
 800c6b4:	3710      	adds	r7, #16
 800c6b6:	46bd      	mov	sp, r7
 800c6b8:	bd80      	pop	{r7, pc}

0800c6ba <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800c6ba:	b480      	push	{r7}
 800c6bc:	b083      	sub	sp, #12
 800c6be:	af00      	add	r7, sp, #0
 800c6c0:	6078      	str	r0, [r7, #4]
 800c6c2:	460b      	mov	r3, r1
 800c6c4:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800c6c6:	687b      	ldr	r3, [r7, #4]
 800c6c8:	887a      	ldrh	r2, [r7, #2]
 800c6ca:	809a      	strh	r2, [r3, #4]
    }
 800c6cc:	bf00      	nop
 800c6ce:	370c      	adds	r7, #12
 800c6d0:	46bd      	mov	sp, r7
 800c6d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6d6:	4770      	bx	lr

0800c6d8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800c6d8:	b480      	push	{r7}
 800c6da:	b083      	sub	sp, #12
 800c6dc:	af00      	add	r7, sp, #0
 800c6de:	6078      	str	r0, [r7, #4]
 800c6e0:	460b      	mov	r3, r1
 800c6e2:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800c6e4:	687b      	ldr	r3, [r7, #4]
 800c6e6:	887a      	ldrh	r2, [r7, #2]
 800c6e8:	80da      	strh	r2, [r3, #6]
    }
 800c6ea:	bf00      	nop
 800c6ec:	370c      	adds	r7, #12
 800c6ee:	46bd      	mov	sp, r7
 800c6f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6f4:	4770      	bx	lr

0800c6f6 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800c6f6:	b580      	push	{r7, lr}
 800c6f8:	b082      	sub	sp, #8
 800c6fa:	af00      	add	r7, sp, #0
 800c6fc:	6078      	str	r0, [r7, #4]
 800c6fe:	460b      	mov	r3, r1
 800c700:	807b      	strh	r3, [r7, #2]
 800c702:	4613      	mov	r3, r2
 800c704:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800c706:	687b      	ldr	r3, [r7, #4]
 800c708:	681b      	ldr	r3, [r3, #0]
 800c70a:	3330      	adds	r3, #48	; 0x30
 800c70c:	681b      	ldr	r3, [r3, #0]
 800c70e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c712:	4611      	mov	r1, r2
 800c714:	6878      	ldr	r0, [r7, #4]
 800c716:	4798      	blx	r3
        setY(y);
 800c718:	687b      	ldr	r3, [r7, #4]
 800c71a:	681b      	ldr	r3, [r3, #0]
 800c71c:	3334      	adds	r3, #52	; 0x34
 800c71e:	681b      	ldr	r3, [r3, #0]
 800c720:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c724:	4611      	mov	r1, r2
 800c726:	6878      	ldr	r0, [r7, #4]
 800c728:	4798      	blx	r3
    }
 800c72a:	bf00      	nop
 800c72c:	3708      	adds	r7, #8
 800c72e:	46bd      	mov	sp, r7
 800c730:	bd80      	pop	{r7, pc}

0800c732 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800c732:	b480      	push	{r7}
 800c734:	b083      	sub	sp, #12
 800c736:	af00      	add	r7, sp, #0
 800c738:	6078      	str	r0, [r7, #4]
 800c73a:	460b      	mov	r3, r1
 800c73c:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800c73e:	687b      	ldr	r3, [r7, #4]
 800c740:	887a      	ldrh	r2, [r7, #2]
 800c742:	811a      	strh	r2, [r3, #8]
    }
 800c744:	bf00      	nop
 800c746:	370c      	adds	r7, #12
 800c748:	46bd      	mov	sp, r7
 800c74a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c74e:	4770      	bx	lr

0800c750 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800c750:	b480      	push	{r7}
 800c752:	b083      	sub	sp, #12
 800c754:	af00      	add	r7, sp, #0
 800c756:	6078      	str	r0, [r7, #4]
 800c758:	460b      	mov	r3, r1
 800c75a:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800c75c:	687b      	ldr	r3, [r7, #4]
 800c75e:	887a      	ldrh	r2, [r7, #2]
 800c760:	815a      	strh	r2, [r3, #10]
    }
 800c762:	bf00      	nop
 800c764:	370c      	adds	r7, #12
 800c766:	46bd      	mov	sp, r7
 800c768:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c76c:	4770      	bx	lr

0800c76e <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800c76e:	b480      	push	{r7}
 800c770:	b083      	sub	sp, #12
 800c772:	af00      	add	r7, sp, #0
 800c774:	6078      	str	r0, [r7, #4]
    {
    }
 800c776:	bf00      	nop
 800c778:	370c      	adds	r7, #12
 800c77a:	46bd      	mov	sp, r7
 800c77c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c780:	4770      	bx	lr

0800c782 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800c782:	b480      	push	{r7}
 800c784:	b083      	sub	sp, #12
 800c786:	af00      	add	r7, sp, #0
 800c788:	6078      	str	r0, [r7, #4]
 800c78a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c78c:	bf00      	nop
 800c78e:	370c      	adds	r7, #12
 800c790:	46bd      	mov	sp, r7
 800c792:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c796:	4770      	bx	lr

0800c798 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800c798:	b480      	push	{r7}
 800c79a:	b083      	sub	sp, #12
 800c79c:	af00      	add	r7, sp, #0
 800c79e:	6078      	str	r0, [r7, #4]
 800c7a0:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c7a2:	bf00      	nop
 800c7a4:	370c      	adds	r7, #12
 800c7a6:	46bd      	mov	sp, r7
 800c7a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7ac:	4770      	bx	lr

0800c7ae <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800c7ae:	b580      	push	{r7, lr}
 800c7b0:	b082      	sub	sp, #8
 800c7b2:	af00      	add	r7, sp, #0
 800c7b4:	6078      	str	r0, [r7, #4]
 800c7b6:	460b      	mov	r3, r1
 800c7b8:	807b      	strh	r3, [r7, #2]
 800c7ba:	4613      	mov	r3, r2
 800c7bc:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800c7be:	687b      	ldr	r3, [r7, #4]
 800c7c0:	681b      	ldr	r3, [r3, #0]
 800c7c2:	3338      	adds	r3, #56	; 0x38
 800c7c4:	681b      	ldr	r3, [r3, #0]
 800c7c6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c7ca:	4611      	mov	r1, r2
 800c7cc:	6878      	ldr	r0, [r7, #4]
 800c7ce:	4798      	blx	r3
        setHeight(height);
 800c7d0:	687b      	ldr	r3, [r7, #4]
 800c7d2:	681b      	ldr	r3, [r3, #0]
 800c7d4:	333c      	adds	r3, #60	; 0x3c
 800c7d6:	681b      	ldr	r3, [r3, #0]
 800c7d8:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c7dc:	4611      	mov	r1, r2
 800c7de:	6878      	ldr	r0, [r7, #4]
 800c7e0:	4798      	blx	r3
    }
 800c7e2:	bf00      	nop
 800c7e4:	3708      	adds	r7, #8
 800c7e6:	46bd      	mov	sp, r7
 800c7e8:	bd80      	pop	{r7, pc}

0800c7ea <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800c7ea:	b480      	push	{r7}
 800c7ec:	b083      	sub	sp, #12
 800c7ee:	af00      	add	r7, sp, #0
 800c7f0:	6078      	str	r0, [r7, #4]
 800c7f2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c7f4:	bf00      	nop
 800c7f6:	370c      	adds	r7, #12
 800c7f8:	46bd      	mov	sp, r7
 800c7fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7fe:	4770      	bx	lr

0800c800 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800c800:	b480      	push	{r7}
 800c802:	b083      	sub	sp, #12
 800c804:	af00      	add	r7, sp, #0
 800c806:	6078      	str	r0, [r7, #4]
    {
    }
 800c808:	bf00      	nop
 800c80a:	370c      	adds	r7, #12
 800c80c:	46bd      	mov	sp, r7
 800c80e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c812:	4770      	bx	lr

0800c814 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800c814:	b480      	push	{r7}
 800c816:	b083      	sub	sp, #12
 800c818:	af00      	add	r7, sp, #0
 800c81a:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800c81c:	687b      	ldr	r3, [r7, #4]
 800c81e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800c822:	4618      	mov	r0, r3
 800c824:	370c      	adds	r7, #12
 800c826:	46bd      	mov	sp, r7
 800c828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c82c:	4770      	bx	lr

0800c82e <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800c82e:	b480      	push	{r7}
 800c830:	b083      	sub	sp, #12
 800c832:	af00      	add	r7, sp, #0
 800c834:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800c836:	687b      	ldr	r3, [r7, #4]
 800c838:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800c83c:	4618      	mov	r0, r3
 800c83e:	370c      	adds	r7, #12
 800c840:	46bd      	mov	sp, r7
 800c842:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c846:	4770      	bx	lr

0800c848 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800c848:	b580      	push	{r7, lr}
 800c84a:	b082      	sub	sp, #8
 800c84c:	af00      	add	r7, sp, #0
 800c84e:	6078      	str	r0, [r7, #4]
 800c850:	460b      	mov	r3, r1
 800c852:	807b      	strh	r3, [r7, #2]
 800c854:	4613      	mov	r3, r2
 800c856:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800c858:	687b      	ldr	r3, [r7, #4]
 800c85a:	681b      	ldr	r3, [r3, #0]
 800c85c:	3354      	adds	r3, #84	; 0x54
 800c85e:	681b      	ldr	r3, [r3, #0]
 800c860:	8879      	ldrh	r1, [r7, #2]
 800c862:	687a      	ldr	r2, [r7, #4]
 800c864:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800c868:	b292      	uxth	r2, r2
 800c86a:	1a8a      	subs	r2, r1, r2
 800c86c:	b292      	uxth	r2, r2
 800c86e:	b210      	sxth	r0, r2
 800c870:	8839      	ldrh	r1, [r7, #0]
 800c872:	687a      	ldr	r2, [r7, #4]
 800c874:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800c878:	b292      	uxth	r2, r2
 800c87a:	1a8a      	subs	r2, r1, r2
 800c87c:	b292      	uxth	r2, r2
 800c87e:	b212      	sxth	r2, r2
 800c880:	4601      	mov	r1, r0
 800c882:	6878      	ldr	r0, [r7, #4]
 800c884:	4798      	blx	r3
    }
 800c886:	bf00      	nop
 800c888:	3708      	adds	r7, #8
 800c88a:	46bd      	mov	sp, r7
 800c88c:	bd80      	pop	{r7, pc}

0800c88e <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800c88e:	b480      	push	{r7}
 800c890:	b083      	sub	sp, #12
 800c892:	af00      	add	r7, sp, #0
 800c894:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800c896:	687b      	ldr	r3, [r7, #4]
 800c898:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c89c:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800c89e:	687b      	ldr	r3, [r7, #4]
 800c8a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c8a4:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800c8a6:	687b      	ldr	r3, [r7, #4]
 800c8a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c8ac:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800c8ae:	bf00      	nop
 800c8b0:	370c      	adds	r7, #12
 800c8b2:	46bd      	mov	sp, r7
 800c8b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8b8:	4770      	bx	lr

0800c8ba <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800c8ba:	b580      	push	{r7, lr}
 800c8bc:	b084      	sub	sp, #16
 800c8be:	af00      	add	r7, sp, #0
 800c8c0:	60f8      	str	r0, [r7, #12]
 800c8c2:	60b9      	str	r1, [r7, #8]
 800c8c4:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800c8c6:	68f8      	ldr	r0, [r7, #12]
 800c8c8:	f7ff ffe1 	bl	800c88e <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800c8cc:	687b      	ldr	r3, [r7, #4]
 800c8ce:	681a      	ldr	r2, [r3, #0]
 800c8d0:	68fb      	ldr	r3, [r7, #12]
 800c8d2:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800c8d4:	687b      	ldr	r3, [r7, #4]
 800c8d6:	68fa      	ldr	r2, [r7, #12]
 800c8d8:	601a      	str	r2, [r3, #0]
    }
 800c8da:	bf00      	nop
 800c8dc:	3710      	adds	r7, #16
 800c8de:	46bd      	mov	sp, r7
 800c8e0:	bd80      	pop	{r7, pc}
	...

0800c8e4 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800c8e4:	b580      	push	{r7, lr}
 800c8e6:	b082      	sub	sp, #8
 800c8e8:	af00      	add	r7, sp, #0
 800c8ea:	6078      	str	r0, [r7, #4]
    {
 800c8ec:	4a06      	ldr	r2, [pc, #24]	; (800c908 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800c8ee:	687b      	ldr	r3, [r7, #4]
 800c8f0:	601a      	str	r2, [r3, #0]
 800c8f2:	687b      	ldr	r3, [r7, #4]
 800c8f4:	3304      	adds	r3, #4
 800c8f6:	4618      	mov	r0, r3
 800c8f8:	f000 fcb8 	bl	800d26c <_ZN8touchgfx9ContainerD1Ev>
    }
 800c8fc:	687b      	ldr	r3, [r7, #4]
 800c8fe:	4618      	mov	r0, r3
 800c900:	3708      	adds	r7, #8
 800c902:	46bd      	mov	sp, r7
 800c904:	bd80      	pop	{r7, pc}
 800c906:	bf00      	nop
 800c908:	08026338 	.word	0x08026338

0800c90c <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800c90c:	b580      	push	{r7, lr}
 800c90e:	b082      	sub	sp, #8
 800c910:	af00      	add	r7, sp, #0
 800c912:	6078      	str	r0, [r7, #4]
    }
 800c914:	6878      	ldr	r0, [r7, #4]
 800c916:	f7ff ffe5 	bl	800c8e4 <_ZN8touchgfx6ScreenD1Ev>
 800c91a:	213c      	movs	r1, #60	; 0x3c
 800c91c:	6878      	ldr	r0, [r7, #4]
 800c91e:	f016 fd58 	bl	80233d2 <_ZdlPvj>
 800c922:	687b      	ldr	r3, [r7, #4]
 800c924:	4618      	mov	r0, r3
 800c926:	3708      	adds	r7, #8
 800c928:	46bd      	mov	sp, r7
 800c92a:	bd80      	pop	{r7, pc}

0800c92c <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800c92c:	b480      	push	{r7}
 800c92e:	b083      	sub	sp, #12
 800c930:	af00      	add	r7, sp, #0
 800c932:	6078      	str	r0, [r7, #4]
    {
    }
 800c934:	bf00      	nop
 800c936:	370c      	adds	r7, #12
 800c938:	46bd      	mov	sp, r7
 800c93a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c93e:	4770      	bx	lr

0800c940 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800c940:	b480      	push	{r7}
 800c942:	b083      	sub	sp, #12
 800c944:	af00      	add	r7, sp, #0
 800c946:	6078      	str	r0, [r7, #4]
    {
    }
 800c948:	bf00      	nop
 800c94a:	370c      	adds	r7, #12
 800c94c:	46bd      	mov	sp, r7
 800c94e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c952:	4770      	bx	lr

0800c954 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800c954:	b480      	push	{r7}
 800c956:	b083      	sub	sp, #12
 800c958:	af00      	add	r7, sp, #0
 800c95a:	6078      	str	r0, [r7, #4]
    {
    }
 800c95c:	bf00      	nop
 800c95e:	370c      	adds	r7, #12
 800c960:	46bd      	mov	sp, r7
 800c962:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c966:	4770      	bx	lr

0800c968 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800c968:	b480      	push	{r7}
 800c96a:	b083      	sub	sp, #12
 800c96c:	af00      	add	r7, sp, #0
 800c96e:	6078      	str	r0, [r7, #4]
    {
    }
 800c970:	bf00      	nop
 800c972:	370c      	adds	r7, #12
 800c974:	46bd      	mov	sp, r7
 800c976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c97a:	4770      	bx	lr

0800c97c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800c97c:	b480      	push	{r7}
 800c97e:	b083      	sub	sp, #12
 800c980:	af00      	add	r7, sp, #0
 800c982:	6078      	str	r0, [r7, #4]
 800c984:	460b      	mov	r3, r1
 800c986:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800c988:	bf00      	nop
 800c98a:	370c      	adds	r7, #12
 800c98c:	46bd      	mov	sp, r7
 800c98e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c992:	4770      	bx	lr

0800c994 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800c994:	b580      	push	{r7, lr}
 800c996:	b082      	sub	sp, #8
 800c998:	af00      	add	r7, sp, #0
 800c99a:	6078      	str	r0, [r7, #4]
 800c99c:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800c99e:	687b      	ldr	r3, [r7, #4]
 800c9a0:	3304      	adds	r3, #4
 800c9a2:	6839      	ldr	r1, [r7, #0]
 800c9a4:	4618      	mov	r0, r3
 800c9a6:	f002 ffc3 	bl	800f930 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800c9aa:	bf00      	nop
 800c9ac:	3708      	adds	r7, #8
 800c9ae:	46bd      	mov	sp, r7
 800c9b0:	bd80      	pop	{r7, pc}

0800c9b2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800c9b2:	b580      	push	{r7, lr}
 800c9b4:	b084      	sub	sp, #16
 800c9b6:	af00      	add	r7, sp, #0
 800c9b8:	60f8      	str	r0, [r7, #12]
 800c9ba:	607b      	str	r3, [r7, #4]
 800c9bc:	460b      	mov	r3, r1
 800c9be:	817b      	strh	r3, [r7, #10]
 800c9c0:	4613      	mov	r3, r2
 800c9c2:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800c9c4:	68fb      	ldr	r3, [r7, #12]
 800c9c6:	4618      	mov	r0, r3
 800c9c8:	f7ff ff24 	bl	800c814 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800c9cc:	4603      	mov	r3, r0
 800c9ce:	2b00      	cmp	r3, #0
 800c9d0:	d008      	beq.n	800c9e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800c9d2:	68fb      	ldr	r3, [r7, #12]
 800c9d4:	4618      	mov	r0, r3
 800c9d6:	f7ff ff2a 	bl	800c82e <_ZNK8touchgfx8Drawable11isTouchableEv>
 800c9da:	4603      	mov	r3, r0
 800c9dc:	2b00      	cmp	r3, #0
 800c9de:	d001      	beq.n	800c9e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800c9e0:	2301      	movs	r3, #1
 800c9e2:	e000      	b.n	800c9e6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800c9e4:	2300      	movs	r3, #0
 800c9e6:	2b00      	cmp	r3, #0
 800c9e8:	d002      	beq.n	800c9f0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800c9ea:	68fa      	ldr	r2, [r7, #12]
 800c9ec:	687b      	ldr	r3, [r7, #4]
 800c9ee:	601a      	str	r2, [r3, #0]
        }
    }
 800c9f0:	bf00      	nop
 800c9f2:	3710      	adds	r7, #16
 800c9f4:	46bd      	mov	sp, r7
 800c9f6:	bd80      	pop	{r7, pc}

0800c9f8 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800c9f8:	b580      	push	{r7, lr}
 800c9fa:	b082      	sub	sp, #8
 800c9fc:	af00      	add	r7, sp, #0
 800c9fe:	6078      	str	r0, [r7, #4]
 800ca00:	687b      	ldr	r3, [r7, #4]
 800ca02:	4618      	mov	r0, r3
 800ca04:	f7ff fdca 	bl	800c59c <_ZN8touchgfx8DrawableC1Ev>
 800ca08:	4a03      	ldr	r2, [pc, #12]	; (800ca18 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800ca0a:	687b      	ldr	r3, [r7, #4]
 800ca0c:	601a      	str	r2, [r3, #0]
 800ca0e:	687b      	ldr	r3, [r7, #4]
 800ca10:	4618      	mov	r0, r3
 800ca12:	3708      	adds	r7, #8
 800ca14:	46bd      	mov	sp, r7
 800ca16:	bd80      	pop	{r7, pc}
 800ca18:	080257c4 	.word	0x080257c4

0800ca1c <_ZN8touchgfx6WidgetD1Ev>:
 800ca1c:	b580      	push	{r7, lr}
 800ca1e:	b082      	sub	sp, #8
 800ca20:	af00      	add	r7, sp, #0
 800ca22:	6078      	str	r0, [r7, #4]
 800ca24:	4a05      	ldr	r2, [pc, #20]	; (800ca3c <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	601a      	str	r2, [r3, #0]
 800ca2a:	687b      	ldr	r3, [r7, #4]
 800ca2c:	4618      	mov	r0, r3
 800ca2e:	f7ff fde5 	bl	800c5fc <_ZN8touchgfx8DrawableD1Ev>
 800ca32:	687b      	ldr	r3, [r7, #4]
 800ca34:	4618      	mov	r0, r3
 800ca36:	3708      	adds	r7, #8
 800ca38:	46bd      	mov	sp, r7
 800ca3a:	bd80      	pop	{r7, pc}
 800ca3c:	080257c4 	.word	0x080257c4

0800ca40 <_ZN8touchgfx6WidgetD0Ev>:
 800ca40:	b580      	push	{r7, lr}
 800ca42:	b082      	sub	sp, #8
 800ca44:	af00      	add	r7, sp, #0
 800ca46:	6078      	str	r0, [r7, #4]
 800ca48:	6878      	ldr	r0, [r7, #4]
 800ca4a:	f7ff ffe7 	bl	800ca1c <_ZN8touchgfx6WidgetD1Ev>
 800ca4e:	2128      	movs	r1, #40	; 0x28
 800ca50:	6878      	ldr	r0, [r7, #4]
 800ca52:	f016 fcbe 	bl	80233d2 <_ZdlPvj>
 800ca56:	687b      	ldr	r3, [r7, #4]
 800ca58:	4618      	mov	r0, r3
 800ca5a:	3708      	adds	r7, #8
 800ca5c:	46bd      	mov	sp, r7
 800ca5e:	bd80      	pop	{r7, pc}

0800ca60 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800ca60:	b580      	push	{r7, lr}
 800ca62:	b082      	sub	sp, #8
 800ca64:	af00      	add	r7, sp, #0
 800ca66:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800ca68:	687b      	ldr	r3, [r7, #4]
 800ca6a:	4618      	mov	r0, r3
 800ca6c:	2326      	movs	r3, #38	; 0x26
 800ca6e:	461a      	mov	r2, r3
 800ca70:	2100      	movs	r1, #0
 800ca72:	f016 fee2 	bl	802383a <memset>
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	4618      	mov	r0, r3
 800ca7a:	f7ff ffbd 	bl	800c9f8 <_ZN8touchgfx6WidgetC1Ev>
 800ca7e:	4a09      	ldr	r2, [pc, #36]	; (800caa4 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	601a      	str	r2, [r3, #0]
 800ca84:	687b      	ldr	r3, [r7, #4]
 800ca86:	22ff      	movs	r2, #255	; 0xff
 800ca88:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800ca8c:	687b      	ldr	r3, [r7, #4]
 800ca8e:	3328      	adds	r3, #40	; 0x28
 800ca90:	2100      	movs	r1, #0
 800ca92:	4618      	mov	r0, r3
 800ca94:	f7ff fd2c 	bl	800c4f0 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800ca98:	687b      	ldr	r3, [r7, #4]
 800ca9a:	4618      	mov	r0, r3
 800ca9c:	3708      	adds	r7, #8
 800ca9e:	46bd      	mov	sp, r7
 800caa0:	bd80      	pop	{r7, pc}
 800caa2:	bf00      	nop
 800caa4:	08026038 	.word	0x08026038

0800caa8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800caa8:	b480      	push	{r7}
 800caaa:	b083      	sub	sp, #12
 800caac:	af00      	add	r7, sp, #0
 800caae:	6078      	str	r0, [r7, #4]
 800cab0:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800cab2:	687b      	ldr	r3, [r7, #4]
 800cab4:	683a      	ldr	r2, [r7, #0]
 800cab6:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800cab8:	bf00      	nop
 800caba:	370c      	adds	r7, #12
 800cabc:	46bd      	mov	sp, r7
 800cabe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cac2:	4770      	bx	lr

0800cac4 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800cac4:	b480      	push	{r7}
 800cac6:	b083      	sub	sp, #12
 800cac8:	af00      	add	r7, sp, #0
 800caca:	6078      	str	r0, [r7, #4]
 800cacc:	460b      	mov	r3, r1
 800cace:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800cad0:	4a06      	ldr	r2, [pc, #24]	; (800caec <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800cad2:	687b      	ldr	r3, [r7, #4]
 800cad4:	601a      	str	r2, [r3, #0]
 800cad6:	687b      	ldr	r3, [r7, #4]
 800cad8:	887a      	ldrh	r2, [r7, #2]
 800cada:	809a      	strh	r2, [r3, #4]
    }
 800cadc:	687b      	ldr	r3, [r7, #4]
 800cade:	4618      	mov	r0, r3
 800cae0:	370c      	adds	r7, #12
 800cae2:	46bd      	mov	sp, r7
 800cae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cae8:	4770      	bx	lr
 800caea:	bf00      	nop
 800caec:	080255a4 	.word	0x080255a4

0800caf0 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800caf0:	b580      	push	{r7, lr}
 800caf2:	b082      	sub	sp, #8
 800caf4:	af00      	add	r7, sp, #0
 800caf6:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	4618      	mov	r0, r3
 800cafc:	2326      	movs	r3, #38	; 0x26
 800cafe:	461a      	mov	r2, r3
 800cb00:	2100      	movs	r1, #0
 800cb02:	f016 fe9a 	bl	802383a <memset>
 800cb06:	687b      	ldr	r3, [r7, #4]
 800cb08:	4618      	mov	r0, r3
 800cb0a:	f7ff ff75 	bl	800c9f8 <_ZN8touchgfx6WidgetC1Ev>
 800cb0e:	4a16      	ldr	r2, [pc, #88]	; (800cb68 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800cb10:	687b      	ldr	r3, [r7, #4]
 800cb12:	601a      	str	r2, [r3, #0]
 800cb14:	687b      	ldr	r3, [r7, #4]
 800cb16:	3328      	adds	r3, #40	; 0x28
 800cb18:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800cb1c:	4618      	mov	r0, r3
 800cb1e:	f7ff ffd1 	bl	800cac4 <_ZN8touchgfx9TypedTextC1Et>
 800cb22:	687b      	ldr	r3, [r7, #4]
 800cb24:	3330      	adds	r3, #48	; 0x30
 800cb26:	2100      	movs	r1, #0
 800cb28:	4618      	mov	r0, r3
 800cb2a:	f7ff fce1 	bl	800c4f0 <_ZN8touchgfx9colortypeC1Em>
 800cb2e:	687b      	ldr	r3, [r7, #4]
 800cb30:	2200      	movs	r2, #0
 800cb32:	869a      	strh	r2, [r3, #52]	; 0x34
 800cb34:	687b      	ldr	r3, [r7, #4]
 800cb36:	22ff      	movs	r2, #255	; 0xff
 800cb38:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800cb3c:	687b      	ldr	r3, [r7, #4]
 800cb3e:	2200      	movs	r2, #0
 800cb40:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800cb44:	687b      	ldr	r3, [r7, #4]
 800cb46:	2200      	movs	r2, #0
 800cb48:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800cb4c:	687b      	ldr	r3, [r7, #4]
 800cb4e:	2200      	movs	r2, #0
 800cb50:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800cb54:	687b      	ldr	r3, [r7, #4]
 800cb56:	333c      	adds	r3, #60	; 0x3c
 800cb58:	4618      	mov	r0, r3
 800cb5a:	f000 f807 	bl	800cb6c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800cb5e:	687b      	ldr	r3, [r7, #4]
 800cb60:	4618      	mov	r0, r3
 800cb62:	3708      	adds	r7, #8
 800cb64:	46bd      	mov	sp, r7
 800cb66:	bd80      	pop	{r7, pc}
 800cb68:	08025fa8 	.word	0x08025fa8

0800cb6c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800cb6c:	b580      	push	{r7, lr}
 800cb6e:	b084      	sub	sp, #16
 800cb70:	af02      	add	r7, sp, #8
 800cb72:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800cb74:	6878      	ldr	r0, [r7, #4]
 800cb76:	f04f 33ff 	mov.w	r3, #4294967295
 800cb7a:	9300      	str	r3, [sp, #0]
 800cb7c:	f04f 33ff 	mov.w	r3, #4294967295
 800cb80:	2200      	movs	r2, #0
 800cb82:	2100      	movs	r1, #0
 800cb84:	f7ff fcda 	bl	800c53c <_ZN8touchgfx4RectC1Essss>
              text(0)
 800cb88:	687b      	ldr	r3, [r7, #4]
 800cb8a:	2200      	movs	r2, #0
 800cb8c:	609a      	str	r2, [r3, #8]
        {
        }
 800cb8e:	687b      	ldr	r3, [r7, #4]
 800cb90:	4618      	mov	r0, r3
 800cb92:	3708      	adds	r7, #8
 800cb94:	46bd      	mov	sp, r7
 800cb96:	bd80      	pop	{r7, pc}

0800cb98 <_ZN8touchgfx14AbstractButtonD1Ev>:
/**
 * This class defines an abstract interface for button-like elements. A button is a clickable
 * element that has two states: pressed and released. A button also has an action that
 * is executed when the button goes from state pressed to state released.
 */
class AbstractButton : public Widget
 800cb98:	b580      	push	{r7, lr}
 800cb9a:	b082      	sub	sp, #8
 800cb9c:	af00      	add	r7, sp, #0
 800cb9e:	6078      	str	r0, [r7, #4]
 800cba0:	4a05      	ldr	r2, [pc, #20]	; (800cbb8 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800cba2:	687b      	ldr	r3, [r7, #4]
 800cba4:	601a      	str	r2, [r3, #0]
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	4618      	mov	r0, r3
 800cbaa:	f7ff ff37 	bl	800ca1c <_ZN8touchgfx6WidgetD1Ev>
 800cbae:	687b      	ldr	r3, [r7, #4]
 800cbb0:	4618      	mov	r0, r3
 800cbb2:	3708      	adds	r7, #8
 800cbb4:	46bd      	mov	sp, r7
 800cbb6:	bd80      	pop	{r7, pc}
 800cbb8:	08025f38 	.word	0x08025f38

0800cbbc <_ZN8touchgfx14AbstractButtonD0Ev>:
 800cbbc:	b580      	push	{r7, lr}
 800cbbe:	b082      	sub	sp, #8
 800cbc0:	af00      	add	r7, sp, #0
 800cbc2:	6078      	str	r0, [r7, #4]
 800cbc4:	6878      	ldr	r0, [r7, #4]
 800cbc6:	f7ff ffe7 	bl	800cb98 <_ZN8touchgfx14AbstractButtonD1Ev>
 800cbca:	2130      	movs	r1, #48	; 0x30
 800cbcc:	6878      	ldr	r0, [r7, #4]
 800cbce:	f016 fc00 	bl	80233d2 <_ZdlPvj>
 800cbd2:	687b      	ldr	r3, [r7, #4]
 800cbd4:	4618      	mov	r0, r3
 800cbd6:	3708      	adds	r7, #8
 800cbd8:	46bd      	mov	sp, r7
 800cbda:	bd80      	pop	{r7, pc}

0800cbdc <_ZN8touchgfx9TypedTextaSERKS0_>:
class TypedText
 800cbdc:	b480      	push	{r7}
 800cbde:	b083      	sub	sp, #12
 800cbe0:	af00      	add	r7, sp, #0
 800cbe2:	6078      	str	r0, [r7, #4]
 800cbe4:	6039      	str	r1, [r7, #0]
 800cbe6:	683b      	ldr	r3, [r7, #0]
 800cbe8:	889a      	ldrh	r2, [r3, #4]
 800cbea:	687b      	ldr	r3, [r7, #4]
 800cbec:	809a      	strh	r2, [r3, #4]
 800cbee:	687b      	ldr	r3, [r7, #4]
 800cbf0:	4618      	mov	r0, r3
 800cbf2:	370c      	adds	r7, #12
 800cbf4:	46bd      	mov	sp, r7
 800cbf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbfa:	4770      	bx	lr

0800cbfc <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>:
     *
     * @param  t The text to display.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelText(TypedText t)
 800cbfc:	b580      	push	{r7, lr}
 800cbfe:	b082      	sub	sp, #8
 800cc00:	af00      	add	r7, sp, #0
 800cc02:	6078      	str	r0, [r7, #4]
 800cc04:	6039      	str	r1, [r7, #0]
    {
        typedText = t;
 800cc06:	687b      	ldr	r3, [r7, #4]
 800cc08:	3334      	adds	r3, #52	; 0x34
 800cc0a:	6839      	ldr	r1, [r7, #0]
 800cc0c:	4618      	mov	r0, r3
 800cc0e:	f7ff ffe5 	bl	800cbdc <_ZN8touchgfx9TypedTextaSERKS0_>
        updateTextPosition();
 800cc12:	6878      	ldr	r0, [r7, #4]
 800cc14:	f000 f820 	bl	800cc58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    }
 800cc18:	bf00      	nop
 800cc1a:	3708      	adds	r7, #8
 800cc1c:	46bd      	mov	sp, r7
 800cc1e:	bd80      	pop	{r7, pc}

0800cc20 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>:
     *
     * @note If the button is currently in the normal, released state, the button should be forced
     *       to redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColor(colortype col)
 800cc20:	b480      	push	{r7}
 800cc22:	b083      	sub	sp, #12
 800cc24:	af00      	add	r7, sp, #0
 800cc26:	6078      	str	r0, [r7, #4]
 800cc28:	6039      	str	r1, [r7, #0]
    {
        color = col;
 800cc2a:	687b      	ldr	r3, [r7, #4]
 800cc2c:	683a      	ldr	r2, [r7, #0]
 800cc2e:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800cc30:	bf00      	nop
 800cc32:	370c      	adds	r7, #12
 800cc34:	46bd      	mov	sp, r7
 800cc36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc3a:	4770      	bx	lr

0800cc3c <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>:
     *
     * @note If the button is currently in the pressed state, the button should be forced to
     *       redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColorPressed(colortype col)
 800cc3c:	b480      	push	{r7}
 800cc3e:	b083      	sub	sp, #12
 800cc40:	af00      	add	r7, sp, #0
 800cc42:	6078      	str	r0, [r7, #4]
 800cc44:	6039      	str	r1, [r7, #0]
    {
        colorPressed = col;
 800cc46:	687b      	ldr	r3, [r7, #4]
 800cc48:	683a      	ldr	r2, [r7, #0]
 800cc4a:	641a      	str	r2, [r3, #64]	; 0x40
    }
 800cc4c:	bf00      	nop
 800cc4e:	370c      	adds	r7, #12
 800cc50:	46bd      	mov	sp, r7
 800cc52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc56:	4770      	bx	lr

0800cc58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800cc58:	b590      	push	{r4, r7, lr}
 800cc5a:	b08b      	sub	sp, #44	; 0x2c
 800cc5c:	af00      	add	r7, sp, #0
 800cc5e:	6078      	str	r0, [r7, #4]
    {
        if (typedText.hasValidId())
 800cc60:	687b      	ldr	r3, [r7, #4]
 800cc62:	3334      	adds	r3, #52	; 0x34
 800cc64:	61fb      	str	r3, [r7, #28]
     *
     * @return Is the id valid.
     */
    FORCE_INLINE_FUNCTION bool hasValidId() const
    {
        return typedTextId < numberOfTypedTexts;
 800cc66:	69fb      	ldr	r3, [r7, #28]
 800cc68:	889a      	ldrh	r2, [r3, #4]
 800cc6a:	4b46      	ldr	r3, [pc, #280]	; (800cd84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800cc6c:	881b      	ldrh	r3, [r3, #0]
 800cc6e:	429a      	cmp	r2, r3
 800cc70:	bf34      	ite	cc
 800cc72:	2301      	movcc	r3, #1
 800cc74:	2300      	movcs	r3, #0
 800cc76:	b2db      	uxtb	r3, r3
 800cc78:	2b00      	cmp	r3, #0
 800cc7a:	d07a      	beq.n	800cd72 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x11a>
        {
            const Font* f = typedText.getFont();
 800cc7c:	687b      	ldr	r3, [r7, #4]
 800cc7e:	3334      	adds	r3, #52	; 0x34
 800cc80:	613b      	str	r3, [r7, #16]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800cc82:	4b41      	ldr	r3, [pc, #260]	; (800cd88 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800cc84:	681b      	ldr	r3, [r3, #0]
 800cc86:	2b00      	cmp	r3, #0
 800cc88:	d105      	bne.n	800cc96 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x3e>
 800cc8a:	4b40      	ldr	r3, [pc, #256]	; (800cd8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x134>)
 800cc8c:	4a40      	ldr	r2, [pc, #256]	; (800cd90 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x138>)
 800cc8e:	216c      	movs	r1, #108	; 0x6c
 800cc90:	4840      	ldr	r0, [pc, #256]	; (800cd94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800cc92:	f016 fbcd 	bl	8023430 <__assert_func>
 800cc96:	693b      	ldr	r3, [r7, #16]
 800cc98:	60fb      	str	r3, [r7, #12]
        return typedTextId < numberOfTypedTexts;
 800cc9a:	68fb      	ldr	r3, [r7, #12]
 800cc9c:	889a      	ldrh	r2, [r3, #4]
 800cc9e:	4b39      	ldr	r3, [pc, #228]	; (800cd84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800cca0:	881b      	ldrh	r3, [r3, #0]
 800cca2:	429a      	cmp	r2, r3
 800cca4:	bf34      	ite	cc
 800cca6:	2301      	movcc	r3, #1
 800cca8:	2300      	movcs	r3, #0
 800ccaa:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800ccac:	2b00      	cmp	r3, #0
 800ccae:	d105      	bne.n	800ccbc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
 800ccb0:	4b39      	ldr	r3, [pc, #228]	; (800cd98 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 800ccb2:	4a37      	ldr	r2, [pc, #220]	; (800cd90 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x138>)
 800ccb4:	216d      	movs	r1, #109	; 0x6d
 800ccb6:	4837      	ldr	r0, [pc, #220]	; (800cd94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800ccb8:	f016 fbba 	bl	8023430 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800ccbc:	4b37      	ldr	r3, [pc, #220]	; (800cd9c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x144>)
 800ccbe:	681a      	ldr	r2, [r3, #0]
 800ccc0:	4b31      	ldr	r3, [pc, #196]	; (800cd88 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800ccc2:	6819      	ldr	r1, [r3, #0]
 800ccc4:	693b      	ldr	r3, [r7, #16]
 800ccc6:	889b      	ldrh	r3, [r3, #4]
 800ccc8:	005b      	lsls	r3, r3, #1
 800ccca:	440b      	add	r3, r1
 800cccc:	781b      	ldrb	r3, [r3, #0]
 800ccce:	009b      	lsls	r3, r3, #2
 800ccd0:	4413      	add	r3, r2
 800ccd2:	681b      	ldr	r3, [r3, #0]
 800ccd4:	627b      	str	r3, [r7, #36]	; 0x24
            const Unicode::UnicodeChar* s = typedText.getText();
 800ccd6:	687b      	ldr	r3, [r7, #4]
 800ccd8:	3334      	adds	r3, #52	; 0x34
 800ccda:	61bb      	str	r3, [r7, #24]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800ccdc:	4b2a      	ldr	r3, [pc, #168]	; (800cd88 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800ccde:	681b      	ldr	r3, [r3, #0]
 800cce0:	2b00      	cmp	r3, #0
 800cce2:	d105      	bne.n	800ccf0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x98>
 800cce4:	4b29      	ldr	r3, [pc, #164]	; (800cd8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x134>)
 800cce6:	4a2e      	ldr	r2, [pc, #184]	; (800cda0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 800cce8:	2160      	movs	r1, #96	; 0x60
 800ccea:	482a      	ldr	r0, [pc, #168]	; (800cd94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800ccec:	f016 fba0 	bl	8023430 <__assert_func>
 800ccf0:	69bb      	ldr	r3, [r7, #24]
 800ccf2:	617b      	str	r3, [r7, #20]
        return typedTextId < numberOfTypedTexts;
 800ccf4:	697b      	ldr	r3, [r7, #20]
 800ccf6:	889a      	ldrh	r2, [r3, #4]
 800ccf8:	4b22      	ldr	r3, [pc, #136]	; (800cd84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800ccfa:	881b      	ldrh	r3, [r3, #0]
 800ccfc:	429a      	cmp	r2, r3
 800ccfe:	bf34      	ite	cc
 800cd00:	2301      	movcc	r3, #1
 800cd02:	2300      	movcs	r3, #0
 800cd04:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800cd06:	2b00      	cmp	r3, #0
 800cd08:	d105      	bne.n	800cd16 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0xbe>
 800cd0a:	4b23      	ldr	r3, [pc, #140]	; (800cd98 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 800cd0c:	4a24      	ldr	r2, [pc, #144]	; (800cda0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 800cd0e:	2161      	movs	r1, #97	; 0x61
 800cd10:	4820      	ldr	r0, [pc, #128]	; (800cd94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800cd12:	f016 fb8d 	bl	8023430 <__assert_func>
        return texts->getText(typedTextId);
 800cd16:	4b23      	ldr	r3, [pc, #140]	; (800cda4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x14c>)
 800cd18:	681a      	ldr	r2, [r3, #0]
 800cd1a:	69bb      	ldr	r3, [r7, #24]
 800cd1c:	889b      	ldrh	r3, [r3, #4]
 800cd1e:	4619      	mov	r1, r3
 800cd20:	4610      	mov	r0, r2
 800cd22:	f000 fcfd 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 800cd26:	4603      	mov	r3, r0
 800cd28:	bf00      	nop
 800cd2a:	623b      	str	r3, [r7, #32]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800cd2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cd2e:	681b      	ldr	r3, [r3, #0]
 800cd30:	3338      	adds	r3, #56	; 0x38
 800cd32:	681b      	ldr	r3, [r3, #0]
 800cd34:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cd36:	4798      	blx	r3
 800cd38:	4603      	mov	r3, r0
 800cd3a:	461c      	mov	r4, r3
 800cd3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cd3e:	681b      	ldr	r3, [r3, #0]
 800cd40:	3348      	adds	r3, #72	; 0x48
 800cd42:	681b      	ldr	r3, [r3, #0]
 800cd44:	6a39      	ldr	r1, [r7, #32]
 800cd46:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cd48:	4798      	blx	r3
 800cd4a:	4603      	mov	r3, r0
 800cd4c:	fb14 f303 	smulbb	r3, r4, r3
 800cd50:	b29c      	uxth	r4, r3
 800cd52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cd54:	681b      	ldr	r3, [r3, #0]
 800cd56:	3324      	adds	r3, #36	; 0x24
 800cd58:	681b      	ldr	r3, [r3, #0]
 800cd5a:	6a39      	ldr	r1, [r7, #32]
 800cd5c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cd5e:	4798      	blx	r3
 800cd60:	4603      	mov	r3, r0
 800cd62:	b29b      	uxth	r3, r3
 800cd64:	4423      	add	r3, r4
 800cd66:	b29b      	uxth	r3, r3
 800cd68:	b21a      	sxth	r2, r3
 800cd6a:	687b      	ldr	r3, [r7, #4]
 800cd6c:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800cd70:	e003      	b.n	800cd7a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x122>
            textHeightIncludingSpacing = 0;
 800cd72:	687b      	ldr	r3, [r7, #4]
 800cd74:	2200      	movs	r2, #0
 800cd76:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
    }
 800cd7a:	bf00      	nop
 800cd7c:	372c      	adds	r7, #44	; 0x2c
 800cd7e:	46bd      	mov	sp, r7
 800cd80:	bd90      	pop	{r4, r7, pc}
 800cd82:	bf00      	nop
 800cd84:	240020c8 	.word	0x240020c8
 800cd88:	240020c4 	.word	0x240020c4
 800cd8c:	080247d0 	.word	0x080247d0
 800cd90:	08024814 	.word	0x08024814
 800cd94:	08024850 	.word	0x08024850
 800cd98:	08024894 	.word	0x08024894
 800cd9c:	240020cc 	.word	0x240020cc
 800cda0:	080248d4 	.word	0x080248d4
 800cda4:	240020d0 	.word	0x240020d0

0800cda8 <_ZN8touchgfx4ViewI25screen_perf_modePresenterED1Ev>:
class View : public Screen
 800cda8:	b580      	push	{r7, lr}
 800cdaa:	b082      	sub	sp, #8
 800cdac:	af00      	add	r7, sp, #0
 800cdae:	6078      	str	r0, [r7, #4]
 800cdb0:	4a05      	ldr	r2, [pc, #20]	; (800cdc8 <_ZN8touchgfx4ViewI25screen_perf_modePresenterED1Ev+0x20>)
 800cdb2:	687b      	ldr	r3, [r7, #4]
 800cdb4:	601a      	str	r2, [r3, #0]
 800cdb6:	687b      	ldr	r3, [r7, #4]
 800cdb8:	4618      	mov	r0, r3
 800cdba:	f7ff fd93 	bl	800c8e4 <_ZN8touchgfx6ScreenD1Ev>
 800cdbe:	687b      	ldr	r3, [r7, #4]
 800cdc0:	4618      	mov	r0, r3
 800cdc2:	3708      	adds	r7, #8
 800cdc4:	46bd      	mov	sp, r7
 800cdc6:	bd80      	pop	{r7, pc}
 800cdc8:	08025790 	.word	0x08025790

0800cdcc <_ZN8touchgfx4ViewI25screen_perf_modePresenterED0Ev>:
 800cdcc:	b580      	push	{r7, lr}
 800cdce:	b082      	sub	sp, #8
 800cdd0:	af00      	add	r7, sp, #0
 800cdd2:	6078      	str	r0, [r7, #4]
 800cdd4:	6878      	ldr	r0, [r7, #4]
 800cdd6:	f7ff ffe7 	bl	800cda8 <_ZN8touchgfx4ViewI25screen_perf_modePresenterED1Ev>
 800cdda:	2140      	movs	r1, #64	; 0x40
 800cddc:	6878      	ldr	r0, [r7, #4]
 800cdde:	f016 faf8 	bl	80233d2 <_ZdlPvj>
 800cde2:	687b      	ldr	r3, [r7, #4]
 800cde4:	4618      	mov	r0, r3
 800cde6:	3708      	adds	r7, #8
 800cde8:	46bd      	mov	sp, r7
 800cdea:	bd80      	pop	{r7, pc}

0800cdec <_ZN24screen_perf_modeViewBaseC1Ev>:
#include <gui_generated/screen_perf_mode_screen/screen_perf_modeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

screen_perf_modeViewBase::screen_perf_modeViewBase()
 800cdec:	b590      	push	{r4, r7, lr}
 800cdee:	b0a5      	sub	sp, #148	; 0x94
 800cdf0:	af02      	add	r7, sp, #8
 800cdf2:	6178      	str	r0, [r7, #20]
 800cdf4:	697b      	ldr	r3, [r7, #20]
 800cdf6:	4618      	mov	r0, r3
 800cdf8:	f000 fa22 	bl	800d240 <_ZN8touchgfx4ViewI25screen_perf_modePresenterEC1Ev>
 800cdfc:	4adb      	ldr	r2, [pc, #876]	; (800d16c <_ZN24screen_perf_modeViewBaseC1Ev+0x380>)
 800cdfe:	697b      	ldr	r3, [r7, #20]
 800ce00:	601a      	str	r2, [r3, #0]
 800ce02:	697b      	ldr	r3, [r7, #20]
 800ce04:	3340      	adds	r3, #64	; 0x40
 800ce06:	4618      	mov	r0, r3
 800ce08:	f7ff fe2a 	bl	800ca60 <_ZN8touchgfx3BoxC1Ev>
 800ce0c:	697b      	ldr	r3, [r7, #20]
 800ce0e:	336c      	adds	r3, #108	; 0x6c
 800ce10:	4618      	mov	r0, r3
 800ce12:	f7ff fe25 	bl	800ca60 <_ZN8touchgfx3BoxC1Ev>
 800ce16:	697b      	ldr	r3, [r7, #20]
 800ce18:	3398      	adds	r3, #152	; 0x98
 800ce1a:	4618      	mov	r0, r3
 800ce1c:	f7ff fe68 	bl	800caf0 <_ZN8touchgfx8TextAreaC1Ev>
 800ce20:	697b      	ldr	r3, [r7, #20]
 800ce22:	33e0      	adds	r3, #224	; 0xe0
 800ce24:	4618      	mov	r0, r3
 800ce26:	f7ff fe63 	bl	800caf0 <_ZN8touchgfx8TextAreaC1Ev>
 800ce2a:	697b      	ldr	r3, [r7, #20]
 800ce2c:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800ce30:	4618      	mov	r0, r3
 800ce32:	f004 fcb7 	bl	80117a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
{
    __background.setPosition(0, 0, 320, 240);
 800ce36:	697b      	ldr	r3, [r7, #20]
 800ce38:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800ce3c:	23f0      	movs	r3, #240	; 0xf0
 800ce3e:	9300      	str	r3, [sp, #0]
 800ce40:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ce44:	2200      	movs	r2, #0
 800ce46:	2100      	movs	r1, #0
 800ce48:	f7ff fc16 	bl	800c678 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800ce4c:	697b      	ldr	r3, [r7, #20]
 800ce4e:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800ce52:	2300      	movs	r3, #0
 800ce54:	f887 305d 	strb.w	r3, [r7, #93]	; 0x5d
 800ce58:	2300      	movs	r3, #0
 800ce5a:	f887 305c 	strb.w	r3, [r7, #92]	; 0x5c
 800ce5e:	2300      	movs	r3, #0
 800ce60:	f887 305b 	strb.w	r3, [r7, #91]	; 0x5b
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800ce64:	f897 305d 	ldrb.w	r3, [r7, #93]	; 0x5d
 800ce68:	041b      	lsls	r3, r3, #16
 800ce6a:	461a      	mov	r2, r3
 800ce6c:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 800ce70:	021b      	lsls	r3, r3, #8
 800ce72:	431a      	orrs	r2, r3
 800ce74:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 800ce78:	4313      	orrs	r3, r2
 800ce7a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ce7e:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800ce82:	4611      	mov	r1, r2
 800ce84:	4618      	mov	r0, r3
 800ce86:	f7ff fb33 	bl	800c4f0 <_ZN8touchgfx9colortypeC1Em>
 800ce8a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800ce8c:	4619      	mov	r1, r3
 800ce8e:	4620      	mov	r0, r4
 800ce90:	f7ff fe0a 	bl	800caa8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800ce94:	697a      	ldr	r2, [r7, #20]
 800ce96:	697b      	ldr	r3, [r7, #20]
 800ce98:	3340      	adds	r3, #64	; 0x40
 800ce9a:	4619      	mov	r1, r3
 800ce9c:	4610      	mov	r0, r2
 800ce9e:	f7ff fd79 	bl	800c994 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    MAIN_BACKGROUND.setPosition(0, 0, 320, 240);
 800cea2:	697b      	ldr	r3, [r7, #20]
 800cea4:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800cea8:	23f0      	movs	r3, #240	; 0xf0
 800ceaa:	9300      	str	r3, [sp, #0]
 800ceac:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ceb0:	2200      	movs	r2, #0
 800ceb2:	2100      	movs	r1, #0
 800ceb4:	f7ff fbe0 	bl	800c678 <_ZN8touchgfx8Drawable11setPositionEssss>
    MAIN_BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 98, 255));
 800ceb8:	697b      	ldr	r3, [r7, #20]
 800ceba:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800cebe:	2300      	movs	r3, #0
 800cec0:	f887 3060 	strb.w	r3, [r7, #96]	; 0x60
 800cec4:	2362      	movs	r3, #98	; 0x62
 800cec6:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 800ceca:	23ff      	movs	r3, #255	; 0xff
 800cecc:	f887 305e 	strb.w	r3, [r7, #94]	; 0x5e
 800ced0:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 800ced4:	041b      	lsls	r3, r3, #16
 800ced6:	461a      	mov	r2, r3
 800ced8:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 800cedc:	021b      	lsls	r3, r3, #8
 800cede:	431a      	orrs	r2, r3
 800cee0:	f897 305e 	ldrb.w	r3, [r7, #94]	; 0x5e
 800cee4:	4313      	orrs	r3, r2
 800cee6:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800ceea:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800ceee:	4611      	mov	r1, r2
 800cef0:	4618      	mov	r0, r3
 800cef2:	f7ff fafd 	bl	800c4f0 <_ZN8touchgfx9colortypeC1Em>
 800cef6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800cef8:	4619      	mov	r1, r3
 800cefa:	4620      	mov	r0, r4
 800cefc:	f7ff fdd4 	bl	800caa8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(MAIN_BACKGROUND);
 800cf00:	697a      	ldr	r2, [r7, #20]
 800cf02:	697b      	ldr	r3, [r7, #20]
 800cf04:	336c      	adds	r3, #108	; 0x6c
 800cf06:	4619      	mov	r1, r3
 800cf08:	4610      	mov	r0, r2
 800cf0a:	f7ff fd43 	bl	800c994 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text_preset_num_main.setXY(51, 40);
 800cf0e:	697b      	ldr	r3, [r7, #20]
 800cf10:	3398      	adds	r3, #152	; 0x98
 800cf12:	2228      	movs	r2, #40	; 0x28
 800cf14:	2133      	movs	r1, #51	; 0x33
 800cf16:	4618      	mov	r0, r3
 800cf18:	f7ff fbed 	bl	800c6f6 <_ZN8touchgfx8Drawable5setXYEss>
    text_preset_num_main.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800cf1c:	697b      	ldr	r3, [r7, #20]
 800cf1e:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800cf22:	23ff      	movs	r3, #255	; 0xff
 800cf24:	f887 3063 	strb.w	r3, [r7, #99]	; 0x63
 800cf28:	23ff      	movs	r3, #255	; 0xff
 800cf2a:	f887 3062 	strb.w	r3, [r7, #98]	; 0x62
 800cf2e:	23ff      	movs	r3, #255	; 0xff
 800cf30:	f887 3061 	strb.w	r3, [r7, #97]	; 0x61
 800cf34:	f897 3063 	ldrb.w	r3, [r7, #99]	; 0x63
 800cf38:	041b      	lsls	r3, r3, #16
 800cf3a:	461a      	mov	r2, r3
 800cf3c:	f897 3062 	ldrb.w	r3, [r7, #98]	; 0x62
 800cf40:	021b      	lsls	r3, r3, #8
 800cf42:	431a      	orrs	r2, r3
 800cf44:	f897 3061 	ldrb.w	r3, [r7, #97]	; 0x61
 800cf48:	4313      	orrs	r3, r2
 800cf4a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800cf4e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800cf52:	4611      	mov	r1, r2
 800cf54:	4618      	mov	r0, r3
 800cf56:	f7ff facb 	bl	800c4f0 <_ZN8touchgfx9colortypeC1Em>
 800cf5a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800cf5c:	667c      	str	r4, [r7, #100]	; 0x64
 800cf5e:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800cf60:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800cf62:	69fa      	ldr	r2, [r7, #28]
 800cf64:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800cf66:	bf00      	nop
    text_preset_num_main.setLinespacing(0);
 800cf68:	697b      	ldr	r3, [r7, #20]
 800cf6a:	3398      	adds	r3, #152	; 0x98
 800cf6c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800cf6e:	2300      	movs	r3, #0
 800cf70:	f8a7 306a 	strh.w	r3, [r7, #106]	; 0x6a
        linespace = space;
 800cf74:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cf76:	f8b7 206a 	ldrh.w	r2, [r7, #106]	; 0x6a
 800cf7a:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800cf7c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cf7e:	681b      	ldr	r3, [r3, #0]
 800cf80:	3384      	adds	r3, #132	; 0x84
 800cf82:	681b      	ldr	r3, [r3, #0]
 800cf84:	6efc      	ldr	r4, [r7, #108]	; 0x6c
 800cf86:	463a      	mov	r2, r7
 800cf88:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 800cf8a:	4610      	mov	r0, r2
 800cf8c:	4798      	blx	r3
 800cf8e:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800cf92:	463a      	mov	r2, r7
 800cf94:	ca07      	ldmia	r2, {r0, r1, r2}
 800cf96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cf9a:	bf00      	nop
    text_preset_num_main.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8Z2S));
 800cf9c:	697b      	ldr	r3, [r7, #20]
 800cf9e:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800cfa2:	f107 0320 	add.w	r3, r7, #32
 800cfa6:	2108      	movs	r1, #8
 800cfa8:	4618      	mov	r0, r3
 800cfaa:	f7ff fd8b 	bl	800cac4 <_ZN8touchgfx9TypedTextC1Et>
 800cfae:	f107 0320 	add.w	r3, r7, #32
 800cfb2:	4619      	mov	r1, r3
 800cfb4:	4620      	mov	r0, r4
 800cfb6:	f004 fa33 	bl	8011420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800cfba:	f107 0320 	add.w	r3, r7, #32
 800cfbe:	4618      	mov	r0, r3
 800cfc0:	f7fe fb06 	bl	800b5d0 <_ZN8touchgfx9TypedTextD1Ev>
    add(text_preset_num_main);
 800cfc4:	697a      	ldr	r2, [r7, #20]
 800cfc6:	697b      	ldr	r3, [r7, #20]
 800cfc8:	3398      	adds	r3, #152	; 0x98
 800cfca:	4619      	mov	r1, r3
 800cfcc:	4610      	mov	r0, r2
 800cfce:	f7ff fce1 	bl	800c994 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text_preset_num_queue.setXY(160, 40);
 800cfd2:	697b      	ldr	r3, [r7, #20]
 800cfd4:	33e0      	adds	r3, #224	; 0xe0
 800cfd6:	2228      	movs	r2, #40	; 0x28
 800cfd8:	21a0      	movs	r1, #160	; 0xa0
 800cfda:	4618      	mov	r0, r3
 800cfdc:	f7ff fb8b 	bl	800c6f6 <_ZN8touchgfx8Drawable5setXYEss>
    text_preset_num_queue.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800cfe0:	697b      	ldr	r3, [r7, #20]
 800cfe2:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800cfe6:	23ff      	movs	r3, #255	; 0xff
 800cfe8:	f887 3073 	strb.w	r3, [r7, #115]	; 0x73
 800cfec:	23ff      	movs	r3, #255	; 0xff
 800cfee:	f887 3072 	strb.w	r3, [r7, #114]	; 0x72
 800cff2:	23ff      	movs	r3, #255	; 0xff
 800cff4:	f887 3071 	strb.w	r3, [r7, #113]	; 0x71
 800cff8:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 800cffc:	041b      	lsls	r3, r3, #16
 800cffe:	461a      	mov	r2, r3
 800d000:	f897 3072 	ldrb.w	r3, [r7, #114]	; 0x72
 800d004:	021b      	lsls	r3, r3, #8
 800d006:	431a      	orrs	r2, r3
 800d008:	f897 3071 	ldrb.w	r3, [r7, #113]	; 0x71
 800d00c:	4313      	orrs	r3, r2
 800d00e:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d012:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800d016:	4611      	mov	r1, r2
 800d018:	4618      	mov	r0, r3
 800d01a:	f7ff fa69 	bl	800c4f0 <_ZN8touchgfx9colortypeC1Em>
 800d01e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800d020:	677c      	str	r4, [r7, #116]	; 0x74
 800d022:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800d024:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800d026:	69ba      	ldr	r2, [r7, #24]
 800d028:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d02a:	bf00      	nop
    text_preset_num_queue.setLinespacing(0);
 800d02c:	697b      	ldr	r3, [r7, #20]
 800d02e:	33e0      	adds	r3, #224	; 0xe0
 800d030:	67fb      	str	r3, [r7, #124]	; 0x7c
 800d032:	2300      	movs	r3, #0
 800d034:	f8a7 307a 	strh.w	r3, [r7, #122]	; 0x7a
        linespace = space;
 800d038:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800d03a:	f8b7 207a 	ldrh.w	r2, [r7, #122]	; 0x7a
 800d03e:	869a      	strh	r2, [r3, #52]	; 0x34
        boundingArea = calculateBoundingArea();
 800d040:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800d042:	681b      	ldr	r3, [r3, #0]
 800d044:	3384      	adds	r3, #132	; 0x84
 800d046:	681b      	ldr	r3, [r3, #0]
 800d048:	6ffc      	ldr	r4, [r7, #124]	; 0x7c
 800d04a:	463a      	mov	r2, r7
 800d04c:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800d04e:	4610      	mov	r0, r2
 800d050:	4798      	blx	r3
 800d052:	f104 033c 	add.w	r3, r4, #60	; 0x3c
 800d056:	463a      	mov	r2, r7
 800d058:	ca07      	ldmia	r2, {r0, r1, r2}
 800d05a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d05e:	bf00      	nop
    text_preset_num_queue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1IH8));
 800d060:	697b      	ldr	r3, [r7, #20]
 800d062:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 800d066:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d06a:	2107      	movs	r1, #7
 800d06c:	4618      	mov	r0, r3
 800d06e:	f7ff fd29 	bl	800cac4 <_ZN8touchgfx9TypedTextC1Et>
 800d072:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d076:	4619      	mov	r1, r3
 800d078:	4620      	mov	r0, r4
 800d07a:	f004 f9d1 	bl	8011420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d07e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d082:	4618      	mov	r0, r3
 800d084:	f7fe faa4 	bl	800b5d0 <_ZN8touchgfx9TypedTextD1Ev>
    add(text_preset_num_queue);
 800d088:	697a      	ldr	r2, [r7, #20]
 800d08a:	697b      	ldr	r3, [r7, #20]
 800d08c:	33e0      	adds	r3, #224	; 0xe0
 800d08e:	4619      	mov	r1, r3
 800d090:	4610      	mov	r0, r2
 800d092:	f7ff fc7f 	bl	800c994 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn_back.setXY(0, 0);
 800d096:	697b      	ldr	r3, [r7, #20]
 800d098:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800d09c:	2200      	movs	r2, #0
 800d09e:	2100      	movs	r1, #0
 800d0a0:	4618      	mov	r0, r3
 800d0a2:	f7ff fb28 	bl	800c6f6 <_ZN8touchgfx8Drawable5setXYEss>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_NORMAL_ID));
 800d0a6:	697b      	ldr	r3, [r7, #20]
 800d0a8:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800d0ac:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d0b0:	2100      	movs	r1, #0
 800d0b2:	4618      	mov	r0, r3
 800d0b4:	f7ff fa62 	bl	800c57c <_ZN8touchgfx6BitmapC1Et>
 800d0b8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800d0bc:	2100      	movs	r1, #0
 800d0be:	4618      	mov	r0, r3
 800d0c0:	f7ff fa5c 	bl	800c57c <_ZN8touchgfx6BitmapC1Et>
 800d0c4:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800d0c8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800d0cc:	4619      	mov	r1, r3
 800d0ce:	4620      	mov	r0, r4
 800d0d0:	f004 f9f8 	bl	80114c4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn_back.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4F5J));
 800d0d4:	697b      	ldr	r3, [r7, #20]
 800d0d6:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800d0da:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800d0de:	2100      	movs	r1, #0
 800d0e0:	4618      	mov	r0, r3
 800d0e2:	f7ff fcef 	bl	800cac4 <_ZN8touchgfx9TypedTextC1Et>
 800d0e6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800d0ea:	4619      	mov	r1, r3
 800d0ec:	4620      	mov	r0, r4
 800d0ee:	f7ff fd85 	bl	800cbfc <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800d0f2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800d0f6:	4618      	mov	r0, r3
 800d0f8:	f7fe fa6a 	bl	800b5d0 <_ZN8touchgfx9TypedTextD1Ev>
    btn_back.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800d0fc:	697b      	ldr	r3, [r7, #20]
 800d0fe:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800d102:	23ff      	movs	r3, #255	; 0xff
 800d104:	f887 3084 	strb.w	r3, [r7, #132]	; 0x84
 800d108:	23ff      	movs	r3, #255	; 0xff
 800d10a:	f887 3083 	strb.w	r3, [r7, #131]	; 0x83
 800d10e:	23ff      	movs	r3, #255	; 0xff
 800d110:	f887 3082 	strb.w	r3, [r7, #130]	; 0x82
 800d114:	f897 3084 	ldrb.w	r3, [r7, #132]	; 0x84
 800d118:	041b      	lsls	r3, r3, #16
 800d11a:	461a      	mov	r2, r3
 800d11c:	f897 3083 	ldrb.w	r3, [r7, #131]	; 0x83
 800d120:	021b      	lsls	r3, r3, #8
 800d122:	431a      	orrs	r2, r3
 800d124:	f897 3082 	ldrb.w	r3, [r7, #130]	; 0x82
 800d128:	4313      	orrs	r3, r2
 800d12a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d12e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800d132:	4611      	mov	r1, r2
 800d134:	4618      	mov	r0, r3
 800d136:	f7ff f9db 	bl	800c4f0 <_ZN8touchgfx9colortypeC1Em>
 800d13a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800d13c:	4619      	mov	r1, r3
 800d13e:	4620      	mov	r0, r4
 800d140:	f7ff fd6e 	bl	800cc20 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    btn_back.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800d144:	697b      	ldr	r3, [r7, #20]
 800d146:	f503 7494 	add.w	r4, r3, #296	; 0x128
 800d14a:	23ff      	movs	r3, #255	; 0xff
 800d14c:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 800d150:	23ff      	movs	r3, #255	; 0xff
 800d152:	f887 3086 	strb.w	r3, [r7, #134]	; 0x86
 800d156:	23ff      	movs	r3, #255	; 0xff
 800d158:	f887 3085 	strb.w	r3, [r7, #133]	; 0x85
 800d15c:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
 800d160:	041b      	lsls	r3, r3, #16
 800d162:	461a      	mov	r2, r3
 800d164:	f897 3086 	ldrb.w	r3, [r7, #134]	; 0x86
 800d168:	e002      	b.n	800d170 <_ZN24screen_perf_modeViewBaseC1Ev+0x384>
 800d16a:	bf00      	nop
 800d16c:	0802575c 	.word	0x0802575c
 800d170:	021b      	lsls	r3, r3, #8
 800d172:	431a      	orrs	r2, r3
 800d174:	f897 3085 	ldrb.w	r3, [r7, #133]	; 0x85
 800d178:	4313      	orrs	r3, r2
 800d17a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 800d17e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800d182:	4611      	mov	r1, r2
 800d184:	4618      	mov	r0, r3
 800d186:	f7ff f9b3 	bl	800c4f0 <_ZN8touchgfx9colortypeC1Em>
 800d18a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800d18c:	4619      	mov	r1, r3
 800d18e:	4620      	mov	r0, r4
 800d190:	f7ff fd54 	bl	800cc3c <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    add(btn_back);
 800d194:	697a      	ldr	r2, [r7, #20]
 800d196:	697b      	ldr	r3, [r7, #20]
 800d198:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800d19c:	4619      	mov	r1, r3
 800d19e:	4610      	mov	r0, r2
 800d1a0:	f7ff fbf8 	bl	800c994 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800d1a4:	697b      	ldr	r3, [r7, #20]
 800d1a6:	4618      	mov	r0, r3
 800d1a8:	378c      	adds	r7, #140	; 0x8c
 800d1aa:	46bd      	mov	sp, r7
 800d1ac:	bd90      	pop	{r4, r7, pc}
 800d1ae:	bf00      	nop

0800d1b0 <_ZN24screen_perf_modeViewBaseD1Ev>:

screen_perf_modeViewBase::~screen_perf_modeViewBase()
 800d1b0:	b580      	push	{r7, lr}
 800d1b2:	b082      	sub	sp, #8
 800d1b4:	af00      	add	r7, sp, #0
 800d1b6:	6078      	str	r0, [r7, #4]
 800d1b8:	4a12      	ldr	r2, [pc, #72]	; (800d204 <_ZN24screen_perf_modeViewBaseD1Ev+0x54>)
 800d1ba:	687b      	ldr	r3, [r7, #4]
 800d1bc:	601a      	str	r2, [r3, #0]
 800d1be:	687b      	ldr	r3, [r7, #4]
 800d1c0:	f503 7394 	add.w	r3, r3, #296	; 0x128
 800d1c4:	4618      	mov	r0, r3
 800d1c6:	f000 f8df 	bl	800d388 <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800d1ca:	687b      	ldr	r3, [r7, #4]
 800d1cc:	33e0      	adds	r3, #224	; 0xe0
 800d1ce:	4618      	mov	r0, r3
 800d1d0:	f000 f890 	bl	800d2f4 <_ZN8touchgfx8TextAreaD1Ev>
 800d1d4:	687b      	ldr	r3, [r7, #4]
 800d1d6:	3398      	adds	r3, #152	; 0x98
 800d1d8:	4618      	mov	r0, r3
 800d1da:	f000 f88b 	bl	800d2f4 <_ZN8touchgfx8TextAreaD1Ev>
 800d1de:	687b      	ldr	r3, [r7, #4]
 800d1e0:	336c      	adds	r3, #108	; 0x6c
 800d1e2:	4618      	mov	r0, r3
 800d1e4:	f000 f864 	bl	800d2b0 <_ZN8touchgfx3BoxD1Ev>
 800d1e8:	687b      	ldr	r3, [r7, #4]
 800d1ea:	3340      	adds	r3, #64	; 0x40
 800d1ec:	4618      	mov	r0, r3
 800d1ee:	f000 f85f 	bl	800d2b0 <_ZN8touchgfx3BoxD1Ev>
 800d1f2:	687b      	ldr	r3, [r7, #4]
 800d1f4:	4618      	mov	r0, r3
 800d1f6:	f7ff fdd7 	bl	800cda8 <_ZN8touchgfx4ViewI25screen_perf_modePresenterED1Ev>
{

}
 800d1fa:	687b      	ldr	r3, [r7, #4]
 800d1fc:	4618      	mov	r0, r3
 800d1fe:	3708      	adds	r7, #8
 800d200:	46bd      	mov	sp, r7
 800d202:	bd80      	pop	{r7, pc}
 800d204:	0802575c 	.word	0x0802575c

0800d208 <_ZN24screen_perf_modeViewBaseD0Ev>:
screen_perf_modeViewBase::~screen_perf_modeViewBase()
 800d208:	b580      	push	{r7, lr}
 800d20a:	b082      	sub	sp, #8
 800d20c:	af00      	add	r7, sp, #0
 800d20e:	6078      	str	r0, [r7, #4]
}
 800d210:	6878      	ldr	r0, [r7, #4]
 800d212:	f7ff ffcd 	bl	800d1b0 <_ZN24screen_perf_modeViewBaseD1Ev>
 800d216:	f44f 71b8 	mov.w	r1, #368	; 0x170
 800d21a:	6878      	ldr	r0, [r7, #4]
 800d21c:	f016 f8d9 	bl	80233d2 <_ZdlPvj>
 800d220:	687b      	ldr	r3, [r7, #4]
 800d222:	4618      	mov	r0, r3
 800d224:	3708      	adds	r7, #8
 800d226:	46bd      	mov	sp, r7
 800d228:	bd80      	pop	{r7, pc}

0800d22a <_ZN24screen_perf_modeViewBase11setupScreenEv>:

void screen_perf_modeViewBase::setupScreen()
{
 800d22a:	b480      	push	{r7}
 800d22c:	b083      	sub	sp, #12
 800d22e:	af00      	add	r7, sp, #0
 800d230:	6078      	str	r0, [r7, #4]

}
 800d232:	bf00      	nop
 800d234:	370c      	adds	r7, #12
 800d236:	46bd      	mov	sp, r7
 800d238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d23c:	4770      	bx	lr
	...

0800d240 <_ZN8touchgfx4ViewI25screen_perf_modePresenterEC1Ev>:
    View()
 800d240:	b580      	push	{r7, lr}
 800d242:	b082      	sub	sp, #8
 800d244:	af00      	add	r7, sp, #0
 800d246:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800d248:	687b      	ldr	r3, [r7, #4]
 800d24a:	4618      	mov	r0, r3
 800d24c:	f007 fab6 	bl	80147bc <_ZN8touchgfx6ScreenC1Ev>
 800d250:	4a05      	ldr	r2, [pc, #20]	; (800d268 <_ZN8touchgfx4ViewI25screen_perf_modePresenterEC1Ev+0x28>)
 800d252:	687b      	ldr	r3, [r7, #4]
 800d254:	601a      	str	r2, [r3, #0]
 800d256:	687b      	ldr	r3, [r7, #4]
 800d258:	2200      	movs	r2, #0
 800d25a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800d25c:	687b      	ldr	r3, [r7, #4]
 800d25e:	4618      	mov	r0, r3
 800d260:	3708      	adds	r7, #8
 800d262:	46bd      	mov	sp, r7
 800d264:	bd80      	pop	{r7, pc}
 800d266:	bf00      	nop
 800d268:	08025790 	.word	0x08025790

0800d26c <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800d26c:	b580      	push	{r7, lr}
 800d26e:	b082      	sub	sp, #8
 800d270:	af00      	add	r7, sp, #0
 800d272:	6078      	str	r0, [r7, #4]
 800d274:	4a05      	ldr	r2, [pc, #20]	; (800d28c <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800d276:	687b      	ldr	r3, [r7, #4]
 800d278:	601a      	str	r2, [r3, #0]
 800d27a:	687b      	ldr	r3, [r7, #4]
 800d27c:	4618      	mov	r0, r3
 800d27e:	f7ff f9bd 	bl	800c5fc <_ZN8touchgfx8DrawableD1Ev>
 800d282:	687b      	ldr	r3, [r7, #4]
 800d284:	4618      	mov	r0, r3
 800d286:	3708      	adds	r7, #8
 800d288:	46bd      	mov	sp, r7
 800d28a:	bd80      	pop	{r7, pc}
 800d28c:	08025d50 	.word	0x08025d50

0800d290 <_ZN8touchgfx9ContainerD0Ev>:
 800d290:	b580      	push	{r7, lr}
 800d292:	b082      	sub	sp, #8
 800d294:	af00      	add	r7, sp, #0
 800d296:	6078      	str	r0, [r7, #4]
 800d298:	6878      	ldr	r0, [r7, #4]
 800d29a:	f7ff ffe7 	bl	800d26c <_ZN8touchgfx9ContainerD1Ev>
 800d29e:	212c      	movs	r1, #44	; 0x2c
 800d2a0:	6878      	ldr	r0, [r7, #4]
 800d2a2:	f016 f896 	bl	80233d2 <_ZdlPvj>
 800d2a6:	687b      	ldr	r3, [r7, #4]
 800d2a8:	4618      	mov	r0, r3
 800d2aa:	3708      	adds	r7, #8
 800d2ac:	46bd      	mov	sp, r7
 800d2ae:	bd80      	pop	{r7, pc}

0800d2b0 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800d2b0:	b580      	push	{r7, lr}
 800d2b2:	b082      	sub	sp, #8
 800d2b4:	af00      	add	r7, sp, #0
 800d2b6:	6078      	str	r0, [r7, #4]
 800d2b8:	4a05      	ldr	r2, [pc, #20]	; (800d2d0 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800d2ba:	687b      	ldr	r3, [r7, #4]
 800d2bc:	601a      	str	r2, [r3, #0]
 800d2be:	687b      	ldr	r3, [r7, #4]
 800d2c0:	4618      	mov	r0, r3
 800d2c2:	f7ff fbab 	bl	800ca1c <_ZN8touchgfx6WidgetD1Ev>
 800d2c6:	687b      	ldr	r3, [r7, #4]
 800d2c8:	4618      	mov	r0, r3
 800d2ca:	3708      	adds	r7, #8
 800d2cc:	46bd      	mov	sp, r7
 800d2ce:	bd80      	pop	{r7, pc}
 800d2d0:	08026038 	.word	0x08026038

0800d2d4 <_ZN8touchgfx3BoxD0Ev>:
 800d2d4:	b580      	push	{r7, lr}
 800d2d6:	b082      	sub	sp, #8
 800d2d8:	af00      	add	r7, sp, #0
 800d2da:	6078      	str	r0, [r7, #4]
 800d2dc:	6878      	ldr	r0, [r7, #4]
 800d2de:	f7ff ffe7 	bl	800d2b0 <_ZN8touchgfx3BoxD1Ev>
 800d2e2:	212c      	movs	r1, #44	; 0x2c
 800d2e4:	6878      	ldr	r0, [r7, #4]
 800d2e6:	f016 f874 	bl	80233d2 <_ZdlPvj>
 800d2ea:	687b      	ldr	r3, [r7, #4]
 800d2ec:	4618      	mov	r0, r3
 800d2ee:	3708      	adds	r7, #8
 800d2f0:	46bd      	mov	sp, r7
 800d2f2:	bd80      	pop	{r7, pc}

0800d2f4 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800d2f4:	b580      	push	{r7, lr}
 800d2f6:	b082      	sub	sp, #8
 800d2f8:	af00      	add	r7, sp, #0
 800d2fa:	6078      	str	r0, [r7, #4]
 800d2fc:	4a08      	ldr	r2, [pc, #32]	; (800d320 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800d2fe:	687b      	ldr	r3, [r7, #4]
 800d300:	601a      	str	r2, [r3, #0]
 800d302:	687b      	ldr	r3, [r7, #4]
 800d304:	3328      	adds	r3, #40	; 0x28
 800d306:	4618      	mov	r0, r3
 800d308:	f7fe f962 	bl	800b5d0 <_ZN8touchgfx9TypedTextD1Ev>
 800d30c:	687b      	ldr	r3, [r7, #4]
 800d30e:	4618      	mov	r0, r3
 800d310:	f7ff fb84 	bl	800ca1c <_ZN8touchgfx6WidgetD1Ev>
 800d314:	687b      	ldr	r3, [r7, #4]
 800d316:	4618      	mov	r0, r3
 800d318:	3708      	adds	r7, #8
 800d31a:	46bd      	mov	sp, r7
 800d31c:	bd80      	pop	{r7, pc}
 800d31e:	bf00      	nop
 800d320:	08025fa8 	.word	0x08025fa8

0800d324 <_ZN8touchgfx8TextAreaD0Ev>:
 800d324:	b580      	push	{r7, lr}
 800d326:	b082      	sub	sp, #8
 800d328:	af00      	add	r7, sp, #0
 800d32a:	6078      	str	r0, [r7, #4]
 800d32c:	6878      	ldr	r0, [r7, #4]
 800d32e:	f7ff ffe1 	bl	800d2f4 <_ZN8touchgfx8TextAreaD1Ev>
 800d332:	2148      	movs	r1, #72	; 0x48
 800d334:	6878      	ldr	r0, [r7, #4]
 800d336:	f016 f84c 	bl	80233d2 <_ZdlPvj>
 800d33a:	687b      	ldr	r3, [r7, #4]
 800d33c:	4618      	mov	r0, r3
 800d33e:	3708      	adds	r7, #8
 800d340:	46bd      	mov	sp, r7
 800d342:	bd80      	pop	{r7, pc}

0800d344 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800d344:	b580      	push	{r7, lr}
 800d346:	b082      	sub	sp, #8
 800d348:	af00      	add	r7, sp, #0
 800d34a:	6078      	str	r0, [r7, #4]
 800d34c:	4a05      	ldr	r2, [pc, #20]	; (800d364 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800d34e:	687b      	ldr	r3, [r7, #4]
 800d350:	601a      	str	r2, [r3, #0]
 800d352:	687b      	ldr	r3, [r7, #4]
 800d354:	4618      	mov	r0, r3
 800d356:	f7ff fc1f 	bl	800cb98 <_ZN8touchgfx14AbstractButtonD1Ev>
 800d35a:	687b      	ldr	r3, [r7, #4]
 800d35c:	4618      	mov	r0, r3
 800d35e:	3708      	adds	r7, #8
 800d360:	46bd      	mov	sp, r7
 800d362:	bd80      	pop	{r7, pc}
 800d364:	080260a0 	.word	0x080260a0

0800d368 <_ZN8touchgfx6ButtonD0Ev>:
 800d368:	b580      	push	{r7, lr}
 800d36a:	b082      	sub	sp, #8
 800d36c:	af00      	add	r7, sp, #0
 800d36e:	6078      	str	r0, [r7, #4]
 800d370:	6878      	ldr	r0, [r7, #4]
 800d372:	f7ff ffe7 	bl	800d344 <_ZN8touchgfx6ButtonD1Ev>
 800d376:	2134      	movs	r1, #52	; 0x34
 800d378:	6878      	ldr	r0, [r7, #4]
 800d37a:	f016 f82a 	bl	80233d2 <_ZdlPvj>
 800d37e:	687b      	ldr	r3, [r7, #4]
 800d380:	4618      	mov	r0, r3
 800d382:	3708      	adds	r7, #8
 800d384:	46bd      	mov	sp, r7
 800d386:	bd80      	pop	{r7, pc}

0800d388 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
class ButtonWithLabel : public Button
 800d388:	b580      	push	{r7, lr}
 800d38a:	b082      	sub	sp, #8
 800d38c:	af00      	add	r7, sp, #0
 800d38e:	6078      	str	r0, [r7, #4]
 800d390:	4a08      	ldr	r2, [pc, #32]	; (800d3b4 <_ZN8touchgfx15ButtonWithLabelD1Ev+0x2c>)
 800d392:	687b      	ldr	r3, [r7, #4]
 800d394:	601a      	str	r2, [r3, #0]
 800d396:	687b      	ldr	r3, [r7, #4]
 800d398:	3334      	adds	r3, #52	; 0x34
 800d39a:	4618      	mov	r0, r3
 800d39c:	f7fe f918 	bl	800b5d0 <_ZN8touchgfx9TypedTextD1Ev>
 800d3a0:	687b      	ldr	r3, [r7, #4]
 800d3a2:	4618      	mov	r0, r3
 800d3a4:	f7ff ffce 	bl	800d344 <_ZN8touchgfx6ButtonD1Ev>
 800d3a8:	687b      	ldr	r3, [r7, #4]
 800d3aa:	4618      	mov	r0, r3
 800d3ac:	3708      	adds	r7, #8
 800d3ae:	46bd      	mov	sp, r7
 800d3b0:	bd80      	pop	{r7, pc}
 800d3b2:	bf00      	nop
 800d3b4:	08026114 	.word	0x08026114

0800d3b8 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800d3b8:	b580      	push	{r7, lr}
 800d3ba:	b082      	sub	sp, #8
 800d3bc:	af00      	add	r7, sp, #0
 800d3be:	6078      	str	r0, [r7, #4]
 800d3c0:	6878      	ldr	r0, [r7, #4]
 800d3c2:	f7ff ffe1 	bl	800d388 <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800d3c6:	2148      	movs	r1, #72	; 0x48
 800d3c8:	6878      	ldr	r0, [r7, #4]
 800d3ca:	f016 f802 	bl	80233d2 <_ZdlPvj>
 800d3ce:	687b      	ldr	r3, [r7, #4]
 800d3d0:	4618      	mov	r0, r3
 800d3d2:	3708      	adds	r7, #8
 800d3d4:	46bd      	mov	sp, r7
 800d3d6:	bd80      	pop	{r7, pc}

0800d3d8 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800d3d8:	b480      	push	{r7}
 800d3da:	af00      	add	r7, sp, #0
    return bitmap_database;
 800d3dc:	4b02      	ldr	r3, [pc, #8]	; (800d3e8 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800d3de:	4618      	mov	r0, r3
 800d3e0:	46bd      	mov	sp, r7
 800d3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3e6:	4770      	bx	lr
 800d3e8:	08025824 	.word	0x08025824

0800d3ec <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800d3ec:	b480      	push	{r7}
 800d3ee:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800d3f0:	2303      	movs	r3, #3
}
 800d3f2:	4618      	mov	r0, r3
 800d3f4:	46bd      	mov	sp, r7
 800d3f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3fa:	4770      	bx	lr

0800d3fc <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800d3fc:	b480      	push	{r7}
 800d3fe:	b085      	sub	sp, #20
 800d400:	af00      	add	r7, sp, #0
 800d402:	60f8      	str	r0, [r7, #12]
 800d404:	460b      	mov	r3, r1
 800d406:	607a      	str	r2, [r7, #4]
 800d408:	817b      	strh	r3, [r7, #10]
    {
        (void)prevChar; // Unused variable
        (void)glyph;    // Unused variable
        return 0;
 800d40a:	2300      	movs	r3, #0
    }
 800d40c:	4618      	mov	r0, r3
 800d40e:	3714      	adds	r7, #20
 800d410:	46bd      	mov	sp, r7
 800d412:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d416:	4770      	bx	lr

0800d418 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800d418:	b480      	push	{r7}
 800d41a:	b083      	sub	sp, #12
 800d41c:	af00      	add	r7, sp, #0
 800d41e:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800d420:	2300      	movs	r3, #0
    }
 800d422:	4618      	mov	r0, r3
 800d424:	370c      	adds	r7, #12
 800d426:	46bd      	mov	sp, r7
 800d428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d42c:	4770      	bx	lr

0800d42e <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800d42e:	b480      	push	{r7}
 800d430:	b083      	sub	sp, #12
 800d432:	af00      	add	r7, sp, #0
 800d434:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800d436:	2300      	movs	r3, #0
    }
 800d438:	4618      	mov	r0, r3
 800d43a:	370c      	adds	r7, #12
 800d43c:	46bd      	mov	sp, r7
 800d43e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d442:	4770      	bx	lr

0800d444 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800d444:	b480      	push	{r7}
 800d446:	b085      	sub	sp, #20
 800d448:	af00      	add	r7, sp, #0
 800d44a:	60f8      	str	r0, [r7, #12]
 800d44c:	60b9      	str	r1, [r7, #8]
 800d44e:	4613      	mov	r3, r2
 800d450:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800d452:	4a07      	ldr	r2, [pc, #28]	; (800d470 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800d454:	68fb      	ldr	r3, [r7, #12]
 800d456:	6013      	str	r3, [r2, #0]
        fonts = f;
 800d458:	4a06      	ldr	r2, [pc, #24]	; (800d474 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800d45a:	68bb      	ldr	r3, [r7, #8]
 800d45c:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800d45e:	4a06      	ldr	r2, [pc, #24]	; (800d478 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800d460:	88fb      	ldrh	r3, [r7, #6]
 800d462:	8013      	strh	r3, [r2, #0]
    }
 800d464:	bf00      	nop
 800d466:	3714      	adds	r7, #20
 800d468:	46bd      	mov	sp, r7
 800d46a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d46e:	4770      	bx	lr
 800d470:	240020c4 	.word	0x240020c4
 800d474:	240020cc 	.word	0x240020cc
 800d478:	240020c8 	.word	0x240020c8

0800d47c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d47c:	b40e      	push	{r1, r2, r3}
 800d47e:	b580      	push	{r7, lr}
 800d480:	b085      	sub	sp, #20
 800d482:	af00      	add	r7, sp, #0
 800d484:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800d486:	f107 0320 	add.w	r3, r7, #32
 800d48a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800d48c:	68bb      	ldr	r3, [r7, #8]
 800d48e:	69fa      	ldr	r2, [r7, #28]
 800d490:	2100      	movs	r1, #0
 800d492:	6878      	ldr	r0, [r7, #4]
 800d494:	f006 fdc8 	bl	8014028 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d498:	4603      	mov	r3, r0
 800d49a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d49c:	89fb      	ldrh	r3, [r7, #14]
}
 800d49e:	4618      	mov	r0, r3
 800d4a0:	3714      	adds	r7, #20
 800d4a2:	46bd      	mov	sp, r7
 800d4a4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d4a8:	b003      	add	sp, #12
 800d4aa:	4770      	bx	lr

0800d4ac <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d4ac:	b40c      	push	{r2, r3}
 800d4ae:	b580      	push	{r7, lr}
 800d4b0:	b084      	sub	sp, #16
 800d4b2:	af00      	add	r7, sp, #0
 800d4b4:	6078      	str	r0, [r7, #4]
 800d4b6:	460b      	mov	r3, r1
 800d4b8:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800d4ba:	f107 031c 	add.w	r3, r7, #28
 800d4be:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800d4c0:	78f9      	ldrb	r1, [r7, #3]
 800d4c2:	68bb      	ldr	r3, [r7, #8]
 800d4c4:	69ba      	ldr	r2, [r7, #24]
 800d4c6:	6878      	ldr	r0, [r7, #4]
 800d4c8:	f006 fdae 	bl	8014028 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d4cc:	4603      	mov	r3, r0
 800d4ce:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d4d0:	89fb      	ldrh	r3, [r7, #14]
}
 800d4d2:	4618      	mov	r0, r3
 800d4d4:	3710      	adds	r7, #16
 800d4d6:	46bd      	mov	sp, r7
 800d4d8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d4dc:	b002      	add	sp, #8
 800d4de:	4770      	bx	lr

0800d4e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800d4e0:	b580      	push	{r7, lr}
 800d4e2:	b08a      	sub	sp, #40	; 0x28
 800d4e4:	af00      	add	r7, sp, #0
 800d4e6:	6078      	str	r0, [r7, #4]
 800d4e8:	460b      	mov	r3, r1
 800d4ea:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800d4ec:	687b      	ldr	r3, [r7, #4]
 800d4ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d4f0:	2b00      	cmp	r3, #0
 800d4f2:	d016      	beq.n	800d522 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d4f4:	687b      	ldr	r3, [r7, #4]
 800d4f6:	3322      	adds	r3, #34	; 0x22
 800d4f8:	627b      	str	r3, [r7, #36]	; 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800d4fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d4fc:	8adb      	ldrh	r3, [r3, #22]
 800d4fe:	2b00      	cmp	r3, #0
 800d500:	d105      	bne.n	800d50e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800d502:	4b43      	ldr	r3, [pc, #268]	; (800d610 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d504:	4a43      	ldr	r2, [pc, #268]	; (800d614 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d506:	21c5      	movs	r1, #197	; 0xc5
 800d508:	4843      	ldr	r0, [pc, #268]	; (800d618 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d50a:	f015 ff91 	bl	8023430 <__assert_func>
            return buffer[pos];
 800d50e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d510:	8a9b      	ldrh	r3, [r3, #20]
 800d512:	461a      	mov	r2, r3
 800d514:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d516:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800d51a:	2b00      	cmp	r3, #0
 800d51c:	d001      	beq.n	800d522 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d51e:	2301      	movs	r3, #1
 800d520:	e000      	b.n	800d524 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800d522:	2300      	movs	r3, #0
 800d524:	2b00      	cmp	r3, #0
 800d526:	d06a      	beq.n	800d5fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800d528:	6878      	ldr	r0, [r7, #4]
 800d52a:	f008 f823 	bl	8015574 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800d52e:	687b      	ldr	r3, [r7, #4]
 800d530:	3322      	adds	r3, #34	; 0x22
 800d532:	623b      	str	r3, [r7, #32]
 800d534:	2301      	movs	r3, #1
 800d536:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800d538:	6a3b      	ldr	r3, [r7, #32]
 800d53a:	8adb      	ldrh	r3, [r3, #22]
 800d53c:	8bfa      	ldrh	r2, [r7, #30]
 800d53e:	429a      	cmp	r2, r3
 800d540:	d305      	bcc.n	800d54e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800d542:	4b36      	ldr	r3, [pc, #216]	; (800d61c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800d544:	4a36      	ldr	r2, [pc, #216]	; (800d620 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800d546:	21cb      	movs	r1, #203	; 0xcb
 800d548:	4833      	ldr	r0, [pc, #204]	; (800d618 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d54a:	f015 ff71 	bl	8023430 <__assert_func>
            const uint16_t index = pos + offset;
 800d54e:	6a3b      	ldr	r3, [r7, #32]
 800d550:	8a9a      	ldrh	r2, [r3, #20]
 800d552:	8bfb      	ldrh	r3, [r7, #30]
 800d554:	4413      	add	r3, r2
 800d556:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800d558:	8bbb      	ldrh	r3, [r7, #28]
 800d55a:	2b09      	cmp	r3, #9
 800d55c:	d801      	bhi.n	800d562 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800d55e:	8bbb      	ldrh	r3, [r7, #28]
 800d560:	e001      	b.n	800d566 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800d562:	8bbb      	ldrh	r3, [r7, #28]
 800d564:	3b0a      	subs	r3, #10
 800d566:	6a3a      	ldr	r2, [r7, #32]
 800d568:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800d56c:	f640 123f 	movw	r2, #2367	; 0x93f
 800d570:	4293      	cmp	r3, r2
 800d572:	bf0c      	ite	eq
 800d574:	2301      	moveq	r3, #1
 800d576:	2300      	movne	r3, #0
 800d578:	b2db      	uxtb	r3, r3
 800d57a:	2b00      	cmp	r3, #0
 800d57c:	d03f      	beq.n	800d5fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800d57e:	687b      	ldr	r3, [r7, #4]
 800d580:	3322      	adds	r3, #34	; 0x22
 800d582:	687a      	ldr	r2, [r7, #4]
 800d584:	3222      	adds	r2, #34	; 0x22
 800d586:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800d588:	68ba      	ldr	r2, [r7, #8]
 800d58a:	8ad2      	ldrh	r2, [r2, #22]
 800d58c:	2a00      	cmp	r2, #0
 800d58e:	d105      	bne.n	800d59c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800d590:	4b1f      	ldr	r3, [pc, #124]	; (800d610 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d592:	4a20      	ldr	r2, [pc, #128]	; (800d614 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d594:	21c5      	movs	r1, #197	; 0xc5
 800d596:	4820      	ldr	r0, [pc, #128]	; (800d618 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d598:	f015 ff4a 	bl	8023430 <__assert_func>
            return buffer[pos];
 800d59c:	68ba      	ldr	r2, [r7, #8]
 800d59e:	8a92      	ldrh	r2, [r2, #20]
 800d5a0:	4611      	mov	r1, r2
 800d5a2:	68ba      	ldr	r2, [r7, #8]
 800d5a4:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800d5a8:	613b      	str	r3, [r7, #16]
 800d5aa:	4613      	mov	r3, r2
 800d5ac:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800d5ae:	693b      	ldr	r3, [r7, #16]
 800d5b0:	8adb      	ldrh	r3, [r3, #22]
 800d5b2:	2b01      	cmp	r3, #1
 800d5b4:	d806      	bhi.n	800d5c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800d5b6:	4b1b      	ldr	r3, [pc, #108]	; (800d624 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800d5b8:	4a1b      	ldr	r2, [pc, #108]	; (800d628 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800d5ba:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800d5be:	4816      	ldr	r0, [pc, #88]	; (800d618 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d5c0:	f015 ff36 	bl	8023430 <__assert_func>
            const uint16_t index = pos + 1;
 800d5c4:	693b      	ldr	r3, [r7, #16]
 800d5c6:	8a9b      	ldrh	r3, [r3, #20]
 800d5c8:	3301      	adds	r3, #1
 800d5ca:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800d5cc:	89bb      	ldrh	r3, [r7, #12]
 800d5ce:	2b09      	cmp	r3, #9
 800d5d0:	d801      	bhi.n	800d5d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800d5d2:	89bb      	ldrh	r3, [r7, #12]
 800d5d4:	e000      	b.n	800d5d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800d5d6:	2300      	movs	r3, #0
 800d5d8:	693a      	ldr	r2, [r7, #16]
 800d5da:	89f9      	ldrh	r1, [r7, #14]
 800d5dc:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800d5e0:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800d5e2:	687b      	ldr	r3, [r7, #4]
 800d5e4:	3322      	adds	r3, #34	; 0x22
 800d5e6:	61bb      	str	r3, [r7, #24]
 800d5e8:	f640 133f 	movw	r3, #2367	; 0x93f
 800d5ec:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800d5ee:	69bb      	ldr	r3, [r7, #24]
 800d5f0:	8a9b      	ldrh	r3, [r3, #20]
 800d5f2:	4619      	mov	r1, r3
 800d5f4:	69bb      	ldr	r3, [r7, #24]
 800d5f6:	8afa      	ldrh	r2, [r7, #22]
 800d5f8:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800d5fc:	bf00      	nop
        }
    }
    return getNextChar();
 800d5fe:	6878      	ldr	r0, [r7, #4]
 800d600:	f007 feba 	bl	8015378 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d604:	4603      	mov	r3, r0
}
 800d606:	4618      	mov	r0, r3
 800d608:	3728      	adds	r7, #40	; 0x28
 800d60a:	46bd      	mov	sp, r7
 800d60c:	bd80      	pop	{r7, pc}
 800d60e:	bf00      	nop
 800d610:	0802490c 	.word	0x0802490c
 800d614:	08024918 	.word	0x08024918
 800d618:	080249c4 	.word	0x080249c4
 800d61c:	08024a0c 	.word	0x08024a0c
 800d620:	08024a1c 	.word	0x08024a1c
 800d624:	08024af0 	.word	0x08024af0
 800d628:	08024afc 	.word	0x08024afc

0800d62c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800d62c:	b580      	push	{r7, lr}
 800d62e:	b082      	sub	sp, #8
 800d630:	af00      	add	r7, sp, #0
 800d632:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800d634:	6878      	ldr	r0, [r7, #4]
 800d636:	f007 fe68 	bl	801530a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800d63a:	bf00      	nop
 800d63c:	3708      	adds	r7, #8
 800d63e:	46bd      	mov	sp, r7
 800d640:	bd80      	pop	{r7, pc}

0800d642 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800d642:	b580      	push	{r7, lr}
 800d644:	b088      	sub	sp, #32
 800d646:	af02      	add	r7, sp, #8
 800d648:	60f8      	str	r0, [r7, #12]
 800d64a:	1d38      	adds	r0, r7, #4
 800d64c:	e880 0006 	stmia.w	r0, {r1, r2}
 800d650:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800d652:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800d656:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800d658:	1d39      	adds	r1, r7, #4
 800d65a:	697b      	ldr	r3, [r7, #20]
 800d65c:	9301      	str	r3, [sp, #4]
 800d65e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d660:	9300      	str	r3, [sp, #0]
 800d662:	6a3b      	ldr	r3, [r7, #32]
 800d664:	683a      	ldr	r2, [r7, #0]
 800d666:	68f8      	ldr	r0, [r7, #12]
 800d668:	f005 f938 	bl	80128dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800d66c:	bf00      	nop
 800d66e:	3718      	adds	r7, #24
 800d670:	46bd      	mov	sp, r7
 800d672:	bd80      	pop	{r7, pc}

0800d674 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800d674:	b590      	push	{r4, r7, lr}
 800d676:	b085      	sub	sp, #20
 800d678:	af00      	add	r7, sp, #0
 800d67a:	4603      	mov	r3, r0
 800d67c:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800d67e:	2300      	movs	r3, #0
 800d680:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800d682:	88fb      	ldrh	r3, [r7, #6]
 800d684:	2b00      	cmp	r3, #0
 800d686:	d127      	bne.n	800d6d8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800d688:	88fb      	ldrh	r3, [r7, #6]
 800d68a:	4a1e      	ldr	r2, [pc, #120]	; (800d704 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d68c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d690:	2b00      	cmp	r3, #0
 800d692:	d016      	beq.n	800d6c2 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800d694:	88fb      	ldrh	r3, [r7, #6]
 800d696:	4a1b      	ldr	r2, [pc, #108]	; (800d704 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d698:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d69c:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800d69e:	68bb      	ldr	r3, [r7, #8]
 800d6a0:	681b      	ldr	r3, [r3, #0]
 800d6a2:	68ba      	ldr	r2, [r7, #8]
 800d6a4:	4413      	add	r3, r2
 800d6a6:	4a18      	ldr	r2, [pc, #96]	; (800d708 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d6a8:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800d6aa:	68bb      	ldr	r3, [r7, #8]
 800d6ac:	685b      	ldr	r3, [r3, #4]
 800d6ae:	68ba      	ldr	r2, [r7, #8]
 800d6b0:	4413      	add	r3, r2
 800d6b2:	4a16      	ldr	r2, [pc, #88]	; (800d70c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d6b4:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800d6b6:	68bb      	ldr	r3, [r7, #8]
 800d6b8:	689b      	ldr	r3, [r3, #8]
 800d6ba:	68ba      	ldr	r2, [r7, #8]
 800d6bc:	4413      	add	r3, r2
 800d6be:	60fb      	str	r3, [r7, #12]
 800d6c0:	e00a      	b.n	800d6d8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800d6c2:	4b11      	ldr	r3, [pc, #68]	; (800d708 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d6c4:	4a12      	ldr	r2, [pc, #72]	; (800d710 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800d6c6:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800d6c8:	4a12      	ldr	r2, [pc, #72]	; (800d714 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800d6ca:	4b10      	ldr	r3, [pc, #64]	; (800d70c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d6cc:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800d6ce:	88fb      	ldrh	r3, [r7, #6]
 800d6d0:	4a11      	ldr	r2, [pc, #68]	; (800d718 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800d6d2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d6d6:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800d6d8:	68fb      	ldr	r3, [r7, #12]
 800d6da:	2b00      	cmp	r3, #0
 800d6dc:	d00d      	beq.n	800d6fa <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800d6de:	4a0f      	ldr	r2, [pc, #60]	; (800d71c <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800d6e0:	88fb      	ldrh	r3, [r7, #6]
 800d6e2:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800d6e4:	f000 f83e 	bl	800d764 <_ZN17TypedTextDatabase8getFontsEv>
 800d6e8:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800d6ea:	f000 f833 	bl	800d754 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800d6ee:	4603      	mov	r3, r0
 800d6f0:	461a      	mov	r2, r3
 800d6f2:	4621      	mov	r1, r4
 800d6f4:	68f8      	ldr	r0, [r7, #12]
 800d6f6:	f7ff fea5 	bl	800d444 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800d6fa:	bf00      	nop
 800d6fc:	3714      	adds	r7, #20
 800d6fe:	46bd      	mov	sp, r7
 800d700:	bd90      	pop	{r4, r7, pc}
 800d702:	bf00      	nop
 800d704:	24000454 	.word	0x24000454
 800d708:	2400045c 	.word	0x2400045c
 800d70c:	24000460 	.word	0x24000460
 800d710:	08043db8 	.word	0x08043db8
 800d714:	08043d94 	.word	0x08043d94
 800d718:	08043e30 	.word	0x08043e30
 800d71c:	24000458 	.word	0x24000458

0800d720 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800d720:	b480      	push	{r7}
 800d722:	b083      	sub	sp, #12
 800d724:	af00      	add	r7, sp, #0
 800d726:	6078      	str	r0, [r7, #4]
 800d728:	460b      	mov	r3, r1
 800d72a:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800d72c:	4b07      	ldr	r3, [pc, #28]	; (800d74c <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800d72e:	681a      	ldr	r2, [r3, #0]
 800d730:	4b07      	ldr	r3, [pc, #28]	; (800d750 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800d732:	6819      	ldr	r1, [r3, #0]
 800d734:	887b      	ldrh	r3, [r7, #2]
 800d736:	009b      	lsls	r3, r3, #2
 800d738:	440b      	add	r3, r1
 800d73a:	681b      	ldr	r3, [r3, #0]
 800d73c:	005b      	lsls	r3, r3, #1
 800d73e:	4413      	add	r3, r2
}
 800d740:	4618      	mov	r0, r3
 800d742:	370c      	adds	r7, #12
 800d744:	46bd      	mov	sp, r7
 800d746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d74a:	4770      	bx	lr
 800d74c:	2400045c 	.word	0x2400045c
 800d750:	24000460 	.word	0x24000460

0800d754 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800d754:	b480      	push	{r7}
 800d756:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800d758:	2309      	movs	r3, #9
}
 800d75a:	4618      	mov	r0, r3
 800d75c:	46bd      	mov	sp, r7
 800d75e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d762:	4770      	bx	lr

0800d764 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800d764:	b480      	push	{r7}
 800d766:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800d768:	4b02      	ldr	r3, [pc, #8]	; (800d774 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800d76a:	4618      	mov	r0, r3
 800d76c:	46bd      	mov	sp, r7
 800d76e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d772:	4770      	bx	lr
 800d774:	24000464 	.word	0x24000464

0800d778 <_Z41__static_initialization_and_destruction_0ii>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_160_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800d778:	b580      	push	{r7, lr}
 800d77a:	b082      	sub	sp, #8
 800d77c:	af00      	add	r7, sp, #0
 800d77e:	6078      	str	r0, [r7, #4]
 800d780:	6039      	str	r1, [r7, #0]
 800d782:	687b      	ldr	r3, [r7, #4]
 800d784:	2b01      	cmp	r3, #1
 800d786:	d118      	bne.n	800d7ba <_Z41__static_initialization_and_destruction_0ii+0x42>
 800d788:	683b      	ldr	r3, [r7, #0]
 800d78a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d78e:	4293      	cmp	r3, r2
 800d790:	d113      	bne.n	800d7ba <_Z41__static_initialization_and_destruction_0ii+0x42>
    &(getFont_verdana_20_4bpp()),
 800d792:	f7fe f8b3 	bl	800b8fc <_Z23getFont_verdana_20_4bppv>
 800d796:	4603      	mov	r3, r0
};
 800d798:	4a0a      	ldr	r2, [pc, #40]	; (800d7c4 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800d79a:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800d79c:	f7fe f908 	bl	800b9b0 <_Z23getFont_verdana_40_4bppv>
 800d7a0:	4603      	mov	r3, r0
};
 800d7a2:	4a08      	ldr	r2, [pc, #32]	; (800d7c4 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800d7a4:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp()),
 800d7a6:	f7fd fff5 	bl	800b794 <_Z23getFont_verdana_10_4bppv>
 800d7aa:	4603      	mov	r3, r0
};
 800d7ac:	4a05      	ldr	r2, [pc, #20]	; (800d7c4 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800d7ae:	6093      	str	r3, [r2, #8]
    &(getFont_verdana_160_4bpp())
 800d7b0:	f7fe f84a 	bl	800b848 <_Z24getFont_verdana_160_4bppv>
 800d7b4:	4603      	mov	r3, r0
};
 800d7b6:	4a03      	ldr	r2, [pc, #12]	; (800d7c4 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800d7b8:	60d3      	str	r3, [r2, #12]
} // namespace TypedTextDatabase
 800d7ba:	bf00      	nop
 800d7bc:	3708      	adds	r7, #8
 800d7be:	46bd      	mov	sp, r7
 800d7c0:	bd80      	pop	{r7, pc}
 800d7c2:	bf00      	nop
 800d7c4:	24000464 	.word	0x24000464

0800d7c8 <_GLOBAL__sub_I_touchgfx_fonts>:
 800d7c8:	b580      	push	{r7, lr}
 800d7ca:	af00      	add	r7, sp, #0
 800d7cc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d7d0:	2001      	movs	r0, #1
 800d7d2:	f7ff ffd1 	bl	800d778 <_Z41__static_initialization_and_destruction_0ii>
 800d7d6:	bd80      	pop	{r7, pc}

0800d7d8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800d7d8:	b580      	push	{r7, lr}
 800d7da:	b082      	sub	sp, #8
 800d7dc:	af00      	add	r7, sp, #0
 800d7de:	6078      	str	r0, [r7, #4]
 800d7e0:	4a05      	ldr	r2, [pc, #20]	; (800d7f8 <_ZN19FrontendApplicationD1Ev+0x20>)
 800d7e2:	687b      	ldr	r3, [r7, #4]
 800d7e4:	601a      	str	r2, [r3, #0]
 800d7e6:	687b      	ldr	r3, [r7, #4]
 800d7e8:	4618      	mov	r0, r3
 800d7ea:	f7fe fb41 	bl	800be70 <_ZN23FrontendApplicationBaseD1Ev>
 800d7ee:	687b      	ldr	r3, [r7, #4]
 800d7f0:	4618      	mov	r0, r3
 800d7f2:	3708      	adds	r7, #8
 800d7f4:	46bd      	mov	sp, r7
 800d7f6:	bd80      	pop	{r7, pc}
 800d7f8:	080258c4 	.word	0x080258c4

0800d7fc <_ZN19FrontendApplicationD0Ev>:
 800d7fc:	b580      	push	{r7, lr}
 800d7fe:	b082      	sub	sp, #8
 800d800:	af00      	add	r7, sp, #0
 800d802:	6078      	str	r0, [r7, #4]
 800d804:	6878      	ldr	r0, [r7, #4]
 800d806:	f7ff ffe7 	bl	800d7d8 <_ZN19FrontendApplicationD1Ev>
 800d80a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800d80e:	6878      	ldr	r0, [r7, #4]
 800d810:	f015 fddf 	bl	80233d2 <_ZdlPvj>
 800d814:	687b      	ldr	r3, [r7, #4]
 800d816:	4618      	mov	r0, r3
 800d818:	3708      	adds	r7, #8
 800d81a:	46bd      	mov	sp, r7
 800d81c:	bd80      	pop	{r7, pc}

0800d81e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800d81e:	b580      	push	{r7, lr}
 800d820:	b082      	sub	sp, #8
 800d822:	af00      	add	r7, sp, #0
 800d824:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800d826:	687b      	ldr	r3, [r7, #4]
 800d828:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800d82c:	4618      	mov	r0, r3
 800d82e:	f000 f82d 	bl	800d88c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800d832:	687b      	ldr	r3, [r7, #4]
 800d834:	4618      	mov	r0, r3
 800d836:	f005 fd2b 	bl	8013290 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800d83a:	bf00      	nop
 800d83c:	3708      	adds	r7, #8
 800d83e:	46bd      	mov	sp, r7
 800d840:	bd80      	pop	{r7, pc}
	...

0800d844 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800d844:	b580      	push	{r7, lr}
 800d846:	b084      	sub	sp, #16
 800d848:	af00      	add	r7, sp, #0
 800d84a:	60f8      	str	r0, [r7, #12]
 800d84c:	60b9      	str	r1, [r7, #8]
 800d84e:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800d850:	68fb      	ldr	r3, [r7, #12]
 800d852:	687a      	ldr	r2, [r7, #4]
 800d854:	68b9      	ldr	r1, [r7, #8]
 800d856:	4618      	mov	r0, r3
 800d858:	f7fe fb5a 	bl	800bf10 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800d85c:	4a03      	ldr	r2, [pc, #12]	; (800d86c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800d85e:	68fb      	ldr	r3, [r7, #12]
 800d860:	601a      	str	r2, [r3, #0]
{

}
 800d862:	68fb      	ldr	r3, [r7, #12]
 800d864:	4618      	mov	r0, r3
 800d866:	3710      	adds	r7, #16
 800d868:	46bd      	mov	sp, r7
 800d86a:	bd80      	pop	{r7, pc}
 800d86c:	080258c4 	.word	0x080258c4

0800d870 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800d870:	b480      	push	{r7}
 800d872:	b083      	sub	sp, #12
 800d874:	af00      	add	r7, sp, #0
 800d876:	6078      	str	r0, [r7, #4]
 800d878:	687b      	ldr	r3, [r7, #4]
 800d87a:	2200      	movs	r2, #0
 800d87c:	601a      	str	r2, [r3, #0]
{

}
 800d87e:	687b      	ldr	r3, [r7, #4]
 800d880:	4618      	mov	r0, r3
 800d882:	370c      	adds	r7, #12
 800d884:	46bd      	mov	sp, r7
 800d886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d88a:	4770      	bx	lr

0800d88c <_ZN5Model4tickEv>:

void Model::tick()
{
 800d88c:	b480      	push	{r7}
 800d88e:	b083      	sub	sp, #12
 800d890:	af00      	add	r7, sp, #0
 800d892:	6078      	str	r0, [r7, #4]

}
 800d894:	bf00      	nop
 800d896:	370c      	adds	r7, #12
 800d898:	46bd      	mov	sp, r7
 800d89a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d89e:	4770      	bx	lr

0800d8a0 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800d8a0:	b480      	push	{r7}
 800d8a2:	b083      	sub	sp, #12
 800d8a4:	af00      	add	r7, sp, #0
 800d8a6:	6078      	str	r0, [r7, #4]
    {
    }
 800d8a8:	bf00      	nop
 800d8aa:	370c      	adds	r7, #12
 800d8ac:	46bd      	mov	sp, r7
 800d8ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8b2:	4770      	bx	lr

0800d8b4 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800d8b4:	b480      	push	{r7}
 800d8b6:	b083      	sub	sp, #12
 800d8b8:	af00      	add	r7, sp, #0
 800d8ba:	6078      	str	r0, [r7, #4]
    {
    }
 800d8bc:	bf00      	nop
 800d8be:	370c      	adds	r7, #12
 800d8c0:	46bd      	mov	sp, r7
 800d8c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8c6:	4770      	bx	lr

0800d8c8 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800d8c8:	b480      	push	{r7}
 800d8ca:	b083      	sub	sp, #12
 800d8cc:	af00      	add	r7, sp, #0
 800d8ce:	6078      	str	r0, [r7, #4]
    {
 800d8d0:	4a04      	ldr	r2, [pc, #16]	; (800d8e4 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800d8d2:	687b      	ldr	r3, [r7, #4]
 800d8d4:	601a      	str	r2, [r3, #0]
    }
 800d8d6:	687b      	ldr	r3, [r7, #4]
 800d8d8:	4618      	mov	r0, r3
 800d8da:	370c      	adds	r7, #12
 800d8dc:	46bd      	mov	sp, r7
 800d8de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8e2:	4770      	bx	lr
 800d8e4:	08025950 	.word	0x08025950

0800d8e8 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800d8e8:	b580      	push	{r7, lr}
 800d8ea:	b082      	sub	sp, #8
 800d8ec:	af00      	add	r7, sp, #0
 800d8ee:	6078      	str	r0, [r7, #4]
    }
 800d8f0:	6878      	ldr	r0, [r7, #4]
 800d8f2:	f7ff ffe9 	bl	800d8c8 <_ZN8touchgfx9PresenterD1Ev>
 800d8f6:	2104      	movs	r1, #4
 800d8f8:	6878      	ldr	r0, [r7, #4]
 800d8fa:	f015 fd6a 	bl	80233d2 <_ZdlPvj>
 800d8fe:	687b      	ldr	r3, [r7, #4]
 800d900:	4618      	mov	r0, r3
 800d902:	3708      	adds	r7, #8
 800d904:	46bd      	mov	sp, r7
 800d906:	bd80      	pop	{r7, pc}

0800d908 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800d908:	b480      	push	{r7}
 800d90a:	b083      	sub	sp, #12
 800d90c:	af00      	add	r7, sp, #0
 800d90e:	6078      	str	r0, [r7, #4]
    {
 800d910:	4a04      	ldr	r2, [pc, #16]	; (800d924 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800d912:	687b      	ldr	r3, [r7, #4]
 800d914:	601a      	str	r2, [r3, #0]
    }
 800d916:	687b      	ldr	r3, [r7, #4]
 800d918:	4618      	mov	r0, r3
 800d91a:	370c      	adds	r7, #12
 800d91c:	46bd      	mov	sp, r7
 800d91e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d922:	4770      	bx	lr
 800d924:	08025950 	.word	0x08025950

0800d928 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800d928:	b480      	push	{r7}
 800d92a:	b083      	sub	sp, #12
 800d92c:	af00      	add	r7, sp, #0
 800d92e:	6078      	str	r0, [r7, #4]
 800d930:	4a06      	ldr	r2, [pc, #24]	; (800d94c <_ZN13ModelListenerC1Ev+0x24>)
 800d932:	687b      	ldr	r3, [r7, #4]
 800d934:	601a      	str	r2, [r3, #0]
 800d936:	687b      	ldr	r3, [r7, #4]
 800d938:	2200      	movs	r2, #0
 800d93a:	605a      	str	r2, [r3, #4]
 800d93c:	687b      	ldr	r3, [r7, #4]
 800d93e:	4618      	mov	r0, r3
 800d940:	370c      	adds	r7, #12
 800d942:	46bd      	mov	sp, r7
 800d944:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d948:	4770      	bx	lr
 800d94a:	bf00      	nop
 800d94c:	08025940 	.word	0x08025940

0800d950 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800d950:	b480      	push	{r7}
 800d952:	b083      	sub	sp, #12
 800d954:	af00      	add	r7, sp, #0
 800d956:	6078      	str	r0, [r7, #4]
 800d958:	4a04      	ldr	r2, [pc, #16]	; (800d96c <_ZN13ModelListenerD1Ev+0x1c>)
 800d95a:	687b      	ldr	r3, [r7, #4]
 800d95c:	601a      	str	r2, [r3, #0]
 800d95e:	687b      	ldr	r3, [r7, #4]
 800d960:	4618      	mov	r0, r3
 800d962:	370c      	adds	r7, #12
 800d964:	46bd      	mov	sp, r7
 800d966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d96a:	4770      	bx	lr
 800d96c:	08025940 	.word	0x08025940

0800d970 <_ZN13ModelListenerD0Ev>:
 800d970:	b580      	push	{r7, lr}
 800d972:	b082      	sub	sp, #8
 800d974:	af00      	add	r7, sp, #0
 800d976:	6078      	str	r0, [r7, #4]
 800d978:	6878      	ldr	r0, [r7, #4]
 800d97a:	f7ff ffe9 	bl	800d950 <_ZN13ModelListenerD1Ev>
 800d97e:	2108      	movs	r1, #8
 800d980:	6878      	ldr	r0, [r7, #4]
 800d982:	f015 fd26 	bl	80233d2 <_ZdlPvj>
 800d986:	687b      	ldr	r3, [r7, #4]
 800d988:	4618      	mov	r0, r3
 800d98a:	3708      	adds	r7, #8
 800d98c:	46bd      	mov	sp, r7
 800d98e:	bd80      	pop	{r7, pc}

0800d990 <_ZN25screen_perf_modePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_perf_modePresenter() {}
 800d990:	b580      	push	{r7, lr}
 800d992:	b082      	sub	sp, #8
 800d994:	af00      	add	r7, sp, #0
 800d996:	6078      	str	r0, [r7, #4]
 800d998:	4a09      	ldr	r2, [pc, #36]	; (800d9c0 <_ZN25screen_perf_modePresenterD1Ev+0x30>)
 800d99a:	687b      	ldr	r3, [r7, #4]
 800d99c:	601a      	str	r2, [r3, #0]
 800d99e:	4a09      	ldr	r2, [pc, #36]	; (800d9c4 <_ZN25screen_perf_modePresenterD1Ev+0x34>)
 800d9a0:	687b      	ldr	r3, [r7, #4]
 800d9a2:	605a      	str	r2, [r3, #4]
 800d9a4:	687b      	ldr	r3, [r7, #4]
 800d9a6:	3304      	adds	r3, #4
 800d9a8:	4618      	mov	r0, r3
 800d9aa:	f7ff ffd1 	bl	800d950 <_ZN13ModelListenerD1Ev>
 800d9ae:	687b      	ldr	r3, [r7, #4]
 800d9b0:	4618      	mov	r0, r3
 800d9b2:	f7ff ff89 	bl	800d8c8 <_ZN8touchgfx9PresenterD1Ev>
 800d9b6:	687b      	ldr	r3, [r7, #4]
 800d9b8:	4618      	mov	r0, r3
 800d9ba:	3708      	adds	r7, #8
 800d9bc:	46bd      	mov	sp, r7
 800d9be:	bd80      	pop	{r7, pc}
 800d9c0:	08025918 	.word	0x08025918
 800d9c4:	08025930 	.word	0x08025930

0800d9c8 <_ZThn4_N25screen_perf_modePresenterD1Ev>:
 800d9c8:	f1a0 0004 	sub.w	r0, r0, #4
 800d9cc:	e7e0      	b.n	800d990 <_ZN25screen_perf_modePresenterD1Ev>
 800d9ce:	bf00      	nop

0800d9d0 <_ZN25screen_perf_modePresenterD0Ev>:
 800d9d0:	b580      	push	{r7, lr}
 800d9d2:	b082      	sub	sp, #8
 800d9d4:	af00      	add	r7, sp, #0
 800d9d6:	6078      	str	r0, [r7, #4]
 800d9d8:	6878      	ldr	r0, [r7, #4]
 800d9da:	f7ff ffd9 	bl	800d990 <_ZN25screen_perf_modePresenterD1Ev>
 800d9de:	2110      	movs	r1, #16
 800d9e0:	6878      	ldr	r0, [r7, #4]
 800d9e2:	f015 fcf6 	bl	80233d2 <_ZdlPvj>
 800d9e6:	687b      	ldr	r3, [r7, #4]
 800d9e8:	4618      	mov	r0, r3
 800d9ea:	3708      	adds	r7, #8
 800d9ec:	46bd      	mov	sp, r7
 800d9ee:	bd80      	pop	{r7, pc}

0800d9f0 <_ZThn4_N25screen_perf_modePresenterD0Ev>:
 800d9f0:	f1a0 0004 	sub.w	r0, r0, #4
 800d9f4:	e7ec      	b.n	800d9d0 <_ZN25screen_perf_modePresenterD0Ev>
	...

0800d9f8 <_ZN25screen_perf_modePresenterC1ER20screen_perf_modeView>:
#include <gui/screen_perf_mode_screen/screen_perf_modeView.hpp>
#include <gui/screen_perf_mode_screen/screen_perf_modePresenter.hpp>

screen_perf_modePresenter::screen_perf_modePresenter(screen_perf_modeView& v)
 800d9f8:	b580      	push	{r7, lr}
 800d9fa:	b082      	sub	sp, #8
 800d9fc:	af00      	add	r7, sp, #0
 800d9fe:	6078      	str	r0, [r7, #4]
 800da00:	6039      	str	r1, [r7, #0]
    : view(v)
 800da02:	687b      	ldr	r3, [r7, #4]
 800da04:	4618      	mov	r0, r3
 800da06:	f7ff ff7f 	bl	800d908 <_ZN8touchgfx9PresenterC1Ev>
 800da0a:	687b      	ldr	r3, [r7, #4]
 800da0c:	3304      	adds	r3, #4
 800da0e:	4618      	mov	r0, r3
 800da10:	f7ff ff8a 	bl	800d928 <_ZN13ModelListenerC1Ev>
 800da14:	4a06      	ldr	r2, [pc, #24]	; (800da30 <_ZN25screen_perf_modePresenterC1ER20screen_perf_modeView+0x38>)
 800da16:	687b      	ldr	r3, [r7, #4]
 800da18:	601a      	str	r2, [r3, #0]
 800da1a:	4a06      	ldr	r2, [pc, #24]	; (800da34 <_ZN25screen_perf_modePresenterC1ER20screen_perf_modeView+0x3c>)
 800da1c:	687b      	ldr	r3, [r7, #4]
 800da1e:	605a      	str	r2, [r3, #4]
 800da20:	687b      	ldr	r3, [r7, #4]
 800da22:	683a      	ldr	r2, [r7, #0]
 800da24:	60da      	str	r2, [r3, #12]
{

}
 800da26:	687b      	ldr	r3, [r7, #4]
 800da28:	4618      	mov	r0, r3
 800da2a:	3708      	adds	r7, #8
 800da2c:	46bd      	mov	sp, r7
 800da2e:	bd80      	pop	{r7, pc}
 800da30:	08025918 	.word	0x08025918
 800da34:	08025930 	.word	0x08025930

0800da38 <_ZN25screen_perf_modePresenter8activateEv>:

void screen_perf_modePresenter::activate()
{
 800da38:	b480      	push	{r7}
 800da3a:	b083      	sub	sp, #12
 800da3c:	af00      	add	r7, sp, #0
 800da3e:	6078      	str	r0, [r7, #4]

}
 800da40:	bf00      	nop
 800da42:	370c      	adds	r7, #12
 800da44:	46bd      	mov	sp, r7
 800da46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da4a:	4770      	bx	lr

0800da4c <_ZN25screen_perf_modePresenter10deactivateEv>:

void screen_perf_modePresenter::deactivate()
{
 800da4c:	b480      	push	{r7}
 800da4e:	b083      	sub	sp, #12
 800da50:	af00      	add	r7, sp, #0
 800da52:	6078      	str	r0, [r7, #4]

}
 800da54:	bf00      	nop
 800da56:	370c      	adds	r7, #12
 800da58:	46bd      	mov	sp, r7
 800da5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da5e:	4770      	bx	lr

0800da60 <_ZN20screen_perf_modeViewD1Ev>:

class screen_perf_modeView : public screen_perf_modeViewBase
{
public:
    screen_perf_modeView();
    virtual ~screen_perf_modeView() {}
 800da60:	b580      	push	{r7, lr}
 800da62:	b082      	sub	sp, #8
 800da64:	af00      	add	r7, sp, #0
 800da66:	6078      	str	r0, [r7, #4]
 800da68:	4a05      	ldr	r2, [pc, #20]	; (800da80 <_ZN20screen_perf_modeViewD1Ev+0x20>)
 800da6a:	687b      	ldr	r3, [r7, #4]
 800da6c:	601a      	str	r2, [r3, #0]
 800da6e:	687b      	ldr	r3, [r7, #4]
 800da70:	4618      	mov	r0, r3
 800da72:	f7ff fb9d 	bl	800d1b0 <_ZN24screen_perf_modeViewBaseD1Ev>
 800da76:	687b      	ldr	r3, [r7, #4]
 800da78:	4618      	mov	r0, r3
 800da7a:	3708      	adds	r7, #8
 800da7c:	46bd      	mov	sp, r7
 800da7e:	bd80      	pop	{r7, pc}
 800da80:	08025968 	.word	0x08025968

0800da84 <_ZN20screen_perf_modeViewD0Ev>:
 800da84:	b580      	push	{r7, lr}
 800da86:	b082      	sub	sp, #8
 800da88:	af00      	add	r7, sp, #0
 800da8a:	6078      	str	r0, [r7, #4]
 800da8c:	6878      	ldr	r0, [r7, #4]
 800da8e:	f7ff ffe7 	bl	800da60 <_ZN20screen_perf_modeViewD1Ev>
 800da92:	f44f 71b8 	mov.w	r1, #368	; 0x170
 800da96:	6878      	ldr	r0, [r7, #4]
 800da98:	f015 fc9b 	bl	80233d2 <_ZdlPvj>
 800da9c:	687b      	ldr	r3, [r7, #4]
 800da9e:	4618      	mov	r0, r3
 800daa0:	3708      	adds	r7, #8
 800daa2:	46bd      	mov	sp, r7
 800daa4:	bd80      	pop	{r7, pc}
	...

0800daa8 <_ZN20screen_perf_modeViewC1Ev>:
#include <gui/screen_perf_mode_screen/screen_perf_modeView.hpp>

screen_perf_modeView::screen_perf_modeView()
 800daa8:	b580      	push	{r7, lr}
 800daaa:	b082      	sub	sp, #8
 800daac:	af00      	add	r7, sp, #0
 800daae:	6078      	str	r0, [r7, #4]
 800dab0:	687b      	ldr	r3, [r7, #4]
 800dab2:	4618      	mov	r0, r3
 800dab4:	f7ff f99a 	bl	800cdec <_ZN24screen_perf_modeViewBaseC1Ev>
 800dab8:	4a03      	ldr	r2, [pc, #12]	; (800dac8 <_ZN20screen_perf_modeViewC1Ev+0x20>)
 800daba:	687b      	ldr	r3, [r7, #4]
 800dabc:	601a      	str	r2, [r3, #0]
{

}
 800dabe:	687b      	ldr	r3, [r7, #4]
 800dac0:	4618      	mov	r0, r3
 800dac2:	3708      	adds	r7, #8
 800dac4:	46bd      	mov	sp, r7
 800dac6:	bd80      	pop	{r7, pc}
 800dac8:	08025968 	.word	0x08025968

0800dacc <_ZN20screen_perf_modeView11setupScreenEv>:

void screen_perf_modeView::setupScreen()
{
 800dacc:	b580      	push	{r7, lr}
 800dace:	b082      	sub	sp, #8
 800dad0:	af00      	add	r7, sp, #0
 800dad2:	6078      	str	r0, [r7, #4]
    screen_perf_modeViewBase::setupScreen();
 800dad4:	687b      	ldr	r3, [r7, #4]
 800dad6:	4618      	mov	r0, r3
 800dad8:	f7ff fba7 	bl	800d22a <_ZN24screen_perf_modeViewBase11setupScreenEv>
}
 800dadc:	bf00      	nop
 800dade:	3708      	adds	r7, #8
 800dae0:	46bd      	mov	sp, r7
 800dae2:	bd80      	pop	{r7, pc}

0800dae4 <_ZN20screen_perf_modeView14tearDownScreenEv>:

void screen_perf_modeView::tearDownScreen()
{
 800dae4:	b580      	push	{r7, lr}
 800dae6:	b082      	sub	sp, #8
 800dae8:	af00      	add	r7, sp, #0
 800daea:	6078      	str	r0, [r7, #4]
    screen_perf_modeViewBase::tearDownScreen();
 800daec:	687b      	ldr	r3, [r7, #4]
 800daee:	4618      	mov	r0, r3
 800daf0:	f7fe ff30 	bl	800c954 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800daf4:	bf00      	nop
 800daf6:	3708      	adds	r7, #8
 800daf8:	46bd      	mov	sp, r7
 800dafa:	bd80      	pop	{r7, pc}

0800dafc <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800dafc:	b480      	push	{r7}
 800dafe:	b083      	sub	sp, #12
 800db00:	af00      	add	r7, sp, #0
 800db02:	6078      	str	r0, [r7, #4]
    {
 800db04:	4a04      	ldr	r2, [pc, #16]	; (800db18 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800db06:	687b      	ldr	r3, [r7, #4]
 800db08:	601a      	str	r2, [r3, #0]
    }
 800db0a:	687b      	ldr	r3, [r7, #4]
 800db0c:	4618      	mov	r0, r3
 800db0e:	370c      	adds	r7, #12
 800db10:	46bd      	mov	sp, r7
 800db12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db16:	4770      	bx	lr
 800db18:	080259b4 	.word	0x080259b4

0800db1c <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800db1c:	b580      	push	{r7, lr}
 800db1e:	b082      	sub	sp, #8
 800db20:	af00      	add	r7, sp, #0
 800db22:	6078      	str	r0, [r7, #4]
    }
 800db24:	6878      	ldr	r0, [r7, #4]
 800db26:	f7ff ffe9 	bl	800dafc <_ZN8touchgfx15TouchControllerD1Ev>
 800db2a:	2104      	movs	r1, #4
 800db2c:	6878      	ldr	r0, [r7, #4]
 800db2e:	f015 fc50 	bl	80233d2 <_ZdlPvj>
 800db32:	687b      	ldr	r3, [r7, #4]
 800db34:	4618      	mov	r0, r3
 800db36:	3708      	adds	r7, #8
 800db38:	46bd      	mov	sp, r7
 800db3a:	bd80      	pop	{r7, pc}

0800db3c <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800db3c:	b480      	push	{r7}
 800db3e:	b083      	sub	sp, #12
 800db40:	af00      	add	r7, sp, #0
 800db42:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800db44:	bf00      	nop
 800db46:	370c      	adds	r7, #12
 800db48:	46bd      	mov	sp, r7
 800db4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db4e:	4770      	bx	lr

0800db50 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800db50:	b480      	push	{r7}
 800db52:	b085      	sub	sp, #20
 800db54:	af00      	add	r7, sp, #0
 800db56:	60f8      	str	r0, [r7, #12]
 800db58:	60b9      	str	r1, [r7, #8]
 800db5a:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800db5c:	2300      	movs	r3, #0
}
 800db5e:	4618      	mov	r0, r3
 800db60:	3714      	adds	r7, #20
 800db62:	46bd      	mov	sp, r7
 800db64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db68:	4770      	bx	lr
	...

0800db6c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800db6c:	b580      	push	{r7, lr}
 800db6e:	b082      	sub	sp, #8
 800db70:	af00      	add	r7, sp, #0
 800db72:	6078      	str	r0, [r7, #4]
 800db74:	4a05      	ldr	r2, [pc, #20]	; (800db8c <_ZN20STM32TouchControllerD1Ev+0x20>)
 800db76:	687b      	ldr	r3, [r7, #4]
 800db78:	601a      	str	r2, [r3, #0]
 800db7a:	687b      	ldr	r3, [r7, #4]
 800db7c:	4618      	mov	r0, r3
 800db7e:	f7ff ffbd 	bl	800dafc <_ZN8touchgfx15TouchControllerD1Ev>
 800db82:	687b      	ldr	r3, [r7, #4]
 800db84:	4618      	mov	r0, r3
 800db86:	3708      	adds	r7, #8
 800db88:	46bd      	mov	sp, r7
 800db8a:	bd80      	pop	{r7, pc}
 800db8c:	0802599c 	.word	0x0802599c

0800db90 <_ZN20STM32TouchControllerD0Ev>:
 800db90:	b580      	push	{r7, lr}
 800db92:	b082      	sub	sp, #8
 800db94:	af00      	add	r7, sp, #0
 800db96:	6078      	str	r0, [r7, #4]
 800db98:	6878      	ldr	r0, [r7, #4]
 800db9a:	f7ff ffe7 	bl	800db6c <_ZN20STM32TouchControllerD1Ev>
 800db9e:	2104      	movs	r1, #4
 800dba0:	6878      	ldr	r0, [r7, #4]
 800dba2:	f015 fc16 	bl	80233d2 <_ZdlPvj>
 800dba6:	687b      	ldr	r3, [r7, #4]
 800dba8:	4618      	mov	r0, r3
 800dbaa:	3708      	adds	r7, #8
 800dbac:	46bd      	mov	sp, r7
 800dbae:	bd80      	pop	{r7, pc}

0800dbb0 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800dbb0:	b480      	push	{r7}
 800dbb2:	af00      	add	r7, sp, #0

}
 800dbb4:	bf00      	nop
 800dbb6:	46bd      	mov	sp, r7
 800dbb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbbc:	4770      	bx	lr
	...

0800dbc0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800dbc0:	b480      	push	{r7}
 800dbc2:	b083      	sub	sp, #12
 800dbc4:	af00      	add	r7, sp, #0
 800dbc6:	4603      	mov	r3, r0
 800dbc8:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800dbca:	79fb      	ldrb	r3, [r7, #7]
 800dbcc:	2b03      	cmp	r3, #3
 800dbce:	d80c      	bhi.n	800dbea <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800dbd0:	a201      	add	r2, pc, #4	; (adr r2, 800dbd8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800dbd2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dbd6:	bf00      	nop
 800dbd8:	0800dbe9 	.word	0x0800dbe9
 800dbdc:	0800dbe9 	.word	0x0800dbe9
 800dbe0:	0800dbe9 	.word	0x0800dbe9
 800dbe4:	0800dbe9 	.word	0x0800dbe9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800dbe8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800dbea:	bf00      	nop
 800dbec:	370c      	adds	r7, #12
 800dbee:	46bd      	mov	sp, r7
 800dbf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbf4:	4770      	bx	lr
 800dbf6:	bf00      	nop

0800dbf8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800dbf8:	b480      	push	{r7}
 800dbfa:	b083      	sub	sp, #12
 800dbfc:	af00      	add	r7, sp, #0
 800dbfe:	4603      	mov	r3, r0
 800dc00:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800dc02:	79fb      	ldrb	r3, [r7, #7]
 800dc04:	2b03      	cmp	r3, #3
 800dc06:	d80c      	bhi.n	800dc22 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800dc08:	a201      	add	r2, pc, #4	; (adr r2, 800dc10 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800dc0a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dc0e:	bf00      	nop
 800dc10:	0800dc21 	.word	0x0800dc21
 800dc14:	0800dc21 	.word	0x0800dc21
 800dc18:	0800dc21 	.word	0x0800dc21
 800dc1c:	0800dc21 	.word	0x0800dc21
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800dc20:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800dc22:	bf00      	nop
 800dc24:	370c      	adds	r7, #12
 800dc26:	46bd      	mov	sp, r7
 800dc28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc2c:	4770      	bx	lr
 800dc2e:	bf00      	nop

0800dc30 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800dc30:	b480      	push	{r7}
 800dc32:	b083      	sub	sp, #12
 800dc34:	af00      	add	r7, sp, #0
 800dc36:	4603      	mov	r3, r0
 800dc38:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800dc3a:	79fb      	ldrb	r3, [r7, #7]
 800dc3c:	2b03      	cmp	r3, #3
 800dc3e:	d80c      	bhi.n	800dc5a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800dc40:	a201      	add	r2, pc, #4	; (adr r2, 800dc48 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800dc42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dc46:	bf00      	nop
 800dc48:	0800dc59 	.word	0x0800dc59
 800dc4c:	0800dc59 	.word	0x0800dc59
 800dc50:	0800dc59 	.word	0x0800dc59
 800dc54:	0800dc59 	.word	0x0800dc59
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800dc58:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800dc5a:	bf00      	nop
 800dc5c:	370c      	adds	r7, #12
 800dc5e:	46bd      	mov	sp, r7
 800dc60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc64:	4770      	bx	lr
 800dc66:	bf00      	nop

0800dc68 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800dc68:	b480      	push	{r7}
 800dc6a:	b083      	sub	sp, #12
 800dc6c:	af00      	add	r7, sp, #0
 800dc6e:	6078      	str	r0, [r7, #4]
    {
 800dc70:	4a04      	ldr	r2, [pc, #16]	; (800dc84 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800dc72:	687b      	ldr	r3, [r7, #4]
 800dc74:	601a      	str	r2, [r3, #0]
    }
 800dc76:	687b      	ldr	r3, [r7, #4]
 800dc78:	4618      	mov	r0, r3
 800dc7a:	370c      	adds	r7, #12
 800dc7c:	46bd      	mov	sp, r7
 800dc7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc82:	4770      	bx	lr
 800dc84:	08025dec 	.word	0x08025dec

0800dc88 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800dc88:	b580      	push	{r7, lr}
 800dc8a:	b082      	sub	sp, #8
 800dc8c:	af00      	add	r7, sp, #0
 800dc8e:	6078      	str	r0, [r7, #4]
    }
 800dc90:	6878      	ldr	r0, [r7, #4]
 800dc92:	f7ff ffe9 	bl	800dc68 <_ZN8touchgfx3HALD1Ev>
 800dc96:	217c      	movs	r1, #124	; 0x7c
 800dc98:	6878      	ldr	r0, [r7, #4]
 800dc9a:	f015 fb9a 	bl	80233d2 <_ZdlPvj>
 800dc9e:	687b      	ldr	r3, [r7, #4]
 800dca0:	4618      	mov	r0, r3
 800dca2:	3708      	adds	r7, #8
 800dca4:	46bd      	mov	sp, r7
 800dca6:	bd80      	pop	{r7, pc}

0800dca8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800dca8:	b480      	push	{r7}
 800dcaa:	b083      	sub	sp, #12
 800dcac:	af00      	add	r7, sp, #0
 800dcae:	6078      	str	r0, [r7, #4]
 800dcb0:	460b      	mov	r3, r1
 800dcb2:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800dcb4:	687b      	ldr	r3, [r7, #4]
 800dcb6:	78fa      	ldrb	r2, [r7, #3]
 800dcb8:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800dcbc:	687b      	ldr	r3, [r7, #4]
 800dcbe:	2201      	movs	r2, #1
 800dcc0:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
    }
 800dcc4:	bf00      	nop
 800dcc6:	370c      	adds	r7, #12
 800dcc8:	46bd      	mov	sp, r7
 800dcca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcce:	4770      	bx	lr

0800dcd0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800dcd0:	b580      	push	{r7, lr}
 800dcd2:	b082      	sub	sp, #8
 800dcd4:	af00      	add	r7, sp, #0
 800dcd6:	6078      	str	r0, [r7, #4]
 800dcd8:	460b      	mov	r3, r1
 800dcda:	807b      	strh	r3, [r7, #2]
 800dcdc:	4613      	mov	r3, r2
 800dcde:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800dce0:	4b0c      	ldr	r3, [pc, #48]	; (800dd14 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800dce2:	881b      	ldrh	r3, [r3, #0]
 800dce4:	887a      	ldrh	r2, [r7, #2]
 800dce6:	429a      	cmp	r2, r3
 800dce8:	d304      	bcc.n	800dcf4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800dcea:	4b0b      	ldr	r3, [pc, #44]	; (800dd18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800dcec:	881b      	ldrh	r3, [r3, #0]
 800dcee:	883a      	ldrh	r2, [r7, #0]
 800dcf0:	429a      	cmp	r2, r3
 800dcf2:	d205      	bcs.n	800dd00 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800dcf4:	4b09      	ldr	r3, [pc, #36]	; (800dd1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800dcf6:	4a0a      	ldr	r2, [pc, #40]	; (800dd20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800dcf8:	219e      	movs	r1, #158	; 0x9e
 800dcfa:	480a      	ldr	r0, [pc, #40]	; (800dd24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800dcfc:	f015 fb98 	bl	8023430 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800dd00:	4a09      	ldr	r2, [pc, #36]	; (800dd28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800dd02:	887b      	ldrh	r3, [r7, #2]
 800dd04:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800dd06:	4a09      	ldr	r2, [pc, #36]	; (800dd2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800dd08:	883b      	ldrh	r3, [r7, #0]
 800dd0a:	8013      	strh	r3, [r2, #0]
    }
 800dd0c:	bf00      	nop
 800dd0e:	3708      	adds	r7, #8
 800dd10:	46bd      	mov	sp, r7
 800dd12:	bd80      	pop	{r7, pc}
 800dd14:	24002068 	.word	0x24002068
 800dd18:	2400206a 	.word	0x2400206a
 800dd1c:	08024bb0 	.word	0x08024bb0
 800dd20:	08024c14 	.word	0x08024c14
 800dd24:	08024c58 	.word	0x08024c58
 800dd28:	2400206e 	.word	0x2400206e
 800dd2c:	24002070 	.word	0x24002070

0800dd30 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800dd30:	b580      	push	{r7, lr}
 800dd32:	b082      	sub	sp, #8
 800dd34:	af00      	add	r7, sp, #0
 800dd36:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800dd38:	687b      	ldr	r3, [r7, #4]
 800dd3a:	f893 307a 	ldrb.w	r3, [r3, #122]	; 0x7a
 800dd3e:	2b00      	cmp	r3, #0
 800dd40:	d009      	beq.n	800dd56 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800dd42:	687b      	ldr	r3, [r7, #4]
 800dd44:	685a      	ldr	r2, [r3, #4]
 800dd46:	687b      	ldr	r3, [r7, #4]
 800dd48:	685b      	ldr	r3, [r3, #4]
 800dd4a:	681b      	ldr	r3, [r3, #0]
 800dd4c:	681b      	ldr	r3, [r3, #0]
 800dd4e:	4610      	mov	r0, r2
 800dd50:	4798      	blx	r3
 800dd52:	4603      	mov	r3, r0
 800dd54:	e000      	b.n	800dd58 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800dd56:	2300      	movs	r3, #0
    }
 800dd58:	4618      	mov	r0, r3
 800dd5a:	3708      	adds	r7, #8
 800dd5c:	46bd      	mov	sp, r7
 800dd5e:	bd80      	pop	{r7, pc}

0800dd60 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800dd60:	b580      	push	{r7, lr}
 800dd62:	b082      	sub	sp, #8
 800dd64:	af00      	add	r7, sp, #0
 800dd66:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800dd68:	6878      	ldr	r0, [r7, #4]
 800dd6a:	f002 fe11 	bl	8010990 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800dd6e:	687b      	ldr	r3, [r7, #4]
 800dd70:	681b      	ldr	r3, [r3, #0]
 800dd72:	33ac      	adds	r3, #172	; 0xac
 800dd74:	681b      	ldr	r3, [r3, #0]
 800dd76:	6878      	ldr	r0, [r7, #4]
 800dd78:	4798      	blx	r3
    }
 800dd7a:	bf00      	nop
 800dd7c:	3708      	adds	r7, #8
 800dd7e:	46bd      	mov	sp, r7
 800dd80:	bd80      	pop	{r7, pc}

0800dd82 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800dd82:	b480      	push	{r7}
 800dd84:	b083      	sub	sp, #12
 800dd86:	af00      	add	r7, sp, #0
 800dd88:	6078      	str	r0, [r7, #4]
 800dd8a:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800dd8c:	2300      	movs	r3, #0
    }
 800dd8e:	4618      	mov	r0, r3
 800dd90:	370c      	adds	r7, #12
 800dd92:	46bd      	mov	sp, r7
 800dd94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd98:	4770      	bx	lr
	...

0800dd9c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800dd9c:	b580      	push	{r7, lr}
 800dd9e:	b084      	sub	sp, #16
 800dda0:	af00      	add	r7, sp, #0
 800dda2:	60f8      	str	r0, [r7, #12]
 800dda4:	60b9      	str	r1, [r7, #8]
 800dda6:	607a      	str	r2, [r7, #4]
 800dda8:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800ddaa:	68bb      	ldr	r3, [r7, #8]
 800ddac:	2b00      	cmp	r3, #0
 800ddae:	d106      	bne.n	800ddbe <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800ddb0:	4b0f      	ldr	r3, [pc, #60]	; (800ddf0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800ddb2:	4a10      	ldr	r2, [pc, #64]	; (800ddf4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800ddb4:	f240 21d2 	movw	r1, #722	; 0x2d2
 800ddb8:	480f      	ldr	r0, [pc, #60]	; (800ddf8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800ddba:	f015 fb39 	bl	8023430 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800ddbe:	68fb      	ldr	r3, [r7, #12]
 800ddc0:	68ba      	ldr	r2, [r7, #8]
 800ddc2:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800ddc4:	68fb      	ldr	r3, [r7, #12]
 800ddc6:	687a      	ldr	r2, [r7, #4]
 800ddc8:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800ddca:	687b      	ldr	r3, [r7, #4]
 800ddcc:	2b00      	cmp	r3, #0
 800ddce:	bf14      	ite	ne
 800ddd0:	2301      	movne	r3, #1
 800ddd2:	2300      	moveq	r3, #0
 800ddd4:	b2da      	uxtb	r2, r3
 800ddd6:	4b09      	ldr	r3, [pc, #36]	; (800ddfc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800ddd8:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800ddda:	68fb      	ldr	r3, [r7, #12]
 800dddc:	681b      	ldr	r3, [r3, #0]
 800ddde:	338c      	adds	r3, #140	; 0x8c
 800dde0:	681b      	ldr	r3, [r3, #0]
 800dde2:	6839      	ldr	r1, [r7, #0]
 800dde4:	68f8      	ldr	r0, [r7, #12]
 800dde6:	4798      	blx	r3
    }
 800dde8:	bf00      	nop
 800ddea:	3710      	adds	r7, #16
 800ddec:	46bd      	mov	sp, r7
 800ddee:	bd80      	pop	{r7, pc}
 800ddf0:	08024c9c 	.word	0x08024c9c
 800ddf4:	08024cd4 	.word	0x08024cd4
 800ddf8:	08024c58 	.word	0x08024c58
 800ddfc:	24002072 	.word	0x24002072

0800de00 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800de00:	b480      	push	{r7}
 800de02:	b083      	sub	sp, #12
 800de04:	af00      	add	r7, sp, #0
 800de06:	6078      	str	r0, [r7, #4]
 800de08:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800de0a:	687b      	ldr	r3, [r7, #4]
 800de0c:	683a      	ldr	r2, [r7, #0]
 800de0e:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800de10:	683b      	ldr	r3, [r7, #0]
 800de12:	2b00      	cmp	r3, #0
 800de14:	bf14      	ite	ne
 800de16:	2301      	movne	r3, #1
 800de18:	2300      	moveq	r3, #0
 800de1a:	b2da      	uxtb	r2, r3
 800de1c:	4b03      	ldr	r3, [pc, #12]	; (800de2c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800de1e:	701a      	strb	r2, [r3, #0]
    }
 800de20:	bf00      	nop
 800de22:	370c      	adds	r7, #12
 800de24:	46bd      	mov	sp, r7
 800de26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de2a:	4770      	bx	lr
 800de2c:	24002073 	.word	0x24002073

0800de30 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800de30:	b480      	push	{r7}
 800de32:	b083      	sub	sp, #12
 800de34:	af00      	add	r7, sp, #0
 800de36:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800de38:	2300      	movs	r3, #0
    }
 800de3a:	4618      	mov	r0, r3
 800de3c:	370c      	adds	r7, #12
 800de3e:	46bd      	mov	sp, r7
 800de40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de44:	4770      	bx	lr

0800de46 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800de46:	b580      	push	{r7, lr}
 800de48:	b082      	sub	sp, #8
 800de4a:	af00      	add	r7, sp, #0
 800de4c:	6078      	str	r0, [r7, #4]
 800de4e:	460b      	mov	r3, r1
 800de50:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800de52:	687b      	ldr	r3, [r7, #4]
 800de54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800de56:	2b00      	cmp	r3, #0
 800de58:	d004      	beq.n	800de64 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800de5a:	687b      	ldr	r3, [r7, #4]
 800de5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800de5e:	887a      	ldrh	r2, [r7, #2]
 800de60:	4610      	mov	r0, r2
 800de62:	4798      	blx	r3
        }
    }
 800de64:	bf00      	nop
 800de66:	3708      	adds	r7, #8
 800de68:	46bd      	mov	sp, r7
 800de6a:	bd80      	pop	{r7, pc}

0800de6c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800de6c:	b480      	push	{r7}
 800de6e:	b083      	sub	sp, #12
 800de70:	af00      	add	r7, sp, #0
 800de72:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800de74:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 800de78:	4618      	mov	r0, r3
 800de7a:	370c      	adds	r7, #12
 800de7c:	46bd      	mov	sp, r7
 800de7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de82:	4770      	bx	lr

0800de84 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800de84:	b580      	push	{r7, lr}
 800de86:	b082      	sub	sp, #8
 800de88:	af00      	add	r7, sp, #0
 800de8a:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800de8c:	687b      	ldr	r3, [r7, #4]
 800de8e:	685a      	ldr	r2, [r3, #4]
 800de90:	687b      	ldr	r3, [r7, #4]
 800de92:	685b      	ldr	r3, [r3, #4]
 800de94:	681b      	ldr	r3, [r3, #0]
 800de96:	3318      	adds	r3, #24
 800de98:	681b      	ldr	r3, [r3, #0]
 800de9a:	4610      	mov	r0, r2
 800de9c:	4798      	blx	r3
 800de9e:	4603      	mov	r3, r0
    }
 800dea0:	4618      	mov	r0, r3
 800dea2:	3708      	adds	r7, #8
 800dea4:	46bd      	mov	sp, r7
 800dea6:	bd80      	pop	{r7, pc}

0800dea8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800dea8:	b480      	push	{r7}
 800deaa:	b085      	sub	sp, #20
 800deac:	af00      	add	r7, sp, #0
 800deae:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800deb0:	687b      	ldr	r3, [r7, #4]
 800deb2:	f893 2078 	ldrb.w	r2, [r3, #120]	; 0x78
 800deb6:	687b      	ldr	r3, [r7, #4]
 800deb8:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800debc:	429a      	cmp	r2, r3
 800debe:	d011      	beq.n	800dee4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800dec0:	4b14      	ldr	r3, [pc, #80]	; (800df14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800dec2:	781b      	ldrb	r3, [r3, #0]
 800dec4:	2b00      	cmp	r3, #0
 800dec6:	d11e      	bne.n	800df06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800dec8:	4b13      	ldr	r3, [pc, #76]	; (800df18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800deca:	881b      	ldrh	r3, [r3, #0]
 800decc:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800dece:	4b13      	ldr	r3, [pc, #76]	; (800df1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ded0:	881a      	ldrh	r2, [r3, #0]
 800ded2:	4b11      	ldr	r3, [pc, #68]	; (800df18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ded4:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800ded6:	4a11      	ldr	r2, [pc, #68]	; (800df1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ded8:	89bb      	ldrh	r3, [r7, #12]
 800deda:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800dedc:	4b0d      	ldr	r3, [pc, #52]	; (800df14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800dede:	2201      	movs	r2, #1
 800dee0:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800dee2:	e010      	b.n	800df06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800dee4:	4b0b      	ldr	r3, [pc, #44]	; (800df14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800dee6:	781b      	ldrb	r3, [r3, #0]
 800dee8:	2b00      	cmp	r3, #0
 800deea:	d00c      	beq.n	800df06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800deec:	4b0a      	ldr	r3, [pc, #40]	; (800df18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800deee:	881b      	ldrh	r3, [r3, #0]
 800def0:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800def2:	4b0a      	ldr	r3, [pc, #40]	; (800df1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800def4:	881a      	ldrh	r2, [r3, #0]
 800def6:	4b08      	ldr	r3, [pc, #32]	; (800df18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800def8:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800defa:	4a08      	ldr	r2, [pc, #32]	; (800df1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800defc:	89fb      	ldrh	r3, [r7, #14]
 800defe:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800df00:	4b04      	ldr	r3, [pc, #16]	; (800df14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800df02:	2200      	movs	r2, #0
 800df04:	701a      	strb	r2, [r3, #0]
    }
 800df06:	bf00      	nop
 800df08:	3714      	adds	r7, #20
 800df0a:	46bd      	mov	sp, r7
 800df0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df10:	4770      	bx	lr
 800df12:	bf00      	nop
 800df14:	2400206c 	.word	0x2400206c
 800df18:	2400206a 	.word	0x2400206a
 800df1c:	24002068 	.word	0x24002068

0800df20 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800df20:	b580      	push	{r7, lr}
 800df22:	b082      	sub	sp, #8
 800df24:	af00      	add	r7, sp, #0
 800df26:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800df28:	687b      	ldr	r3, [r7, #4]
 800df2a:	4618      	mov	r0, r3
 800df2c:	f001 ff8e 	bl	800fe4c <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800df30:	bf00      	nop
 800df32:	3708      	adds	r7, #8
 800df34:	46bd      	mov	sp, r7
 800df36:	bd80      	pop	{r7, pc}

0800df38 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800df38:	b580      	push	{r7, lr}
 800df3a:	b082      	sub	sp, #8
 800df3c:	af00      	add	r7, sp, #0
 800df3e:	6078      	str	r0, [r7, #4]
 800df40:	4a05      	ldr	r2, [pc, #20]	; (800df58 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800df42:	687b      	ldr	r3, [r7, #4]
 800df44:	601a      	str	r2, [r3, #0]
 800df46:	687b      	ldr	r3, [r7, #4]
 800df48:	4618      	mov	r0, r3
 800df4a:	f7ff fe8d 	bl	800dc68 <_ZN8touchgfx3HALD1Ev>
 800df4e:	687b      	ldr	r3, [r7, #4]
 800df50:	4618      	mov	r0, r3
 800df52:	3708      	adds	r7, #8
 800df54:	46bd      	mov	sp, r7
 800df56:	bd80      	pop	{r7, pc}
 800df58:	08025c18 	.word	0x08025c18

0800df5c <_ZN20TouchGFXGeneratedHALD0Ev>:
 800df5c:	b580      	push	{r7, lr}
 800df5e:	b082      	sub	sp, #8
 800df60:	af00      	add	r7, sp, #0
 800df62:	6078      	str	r0, [r7, #4]
 800df64:	6878      	ldr	r0, [r7, #4]
 800df66:	f7ff ffe7 	bl	800df38 <_ZN20TouchGFXGeneratedHALD1Ev>
 800df6a:	217c      	movs	r1, #124	; 0x7c
 800df6c:	6878      	ldr	r0, [r7, #4]
 800df6e:	f015 fa30 	bl	80233d2 <_ZdlPvj>
 800df72:	687b      	ldr	r3, [r7, #4]
 800df74:	4618      	mov	r0, r3
 800df76:	3708      	adds	r7, #8
 800df78:	46bd      	mov	sp, r7
 800df7a:	bd80      	pop	{r7, pc}

0800df7c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800df7c:	b580      	push	{r7, lr}
 800df7e:	b082      	sub	sp, #8
 800df80:	af00      	add	r7, sp, #0
 800df82:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800df84:	687b      	ldr	r3, [r7, #4]
 800df86:	4618      	mov	r0, r3
 800df88:	f7ff ffca 	bl	800df20 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800df8c:	bf00      	nop
 800df8e:	3708      	adds	r7, #8
 800df90:	46bd      	mov	sp, r7
 800df92:	bd80      	pop	{r7, pc}

0800df94 <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800df94:	b580      	push	{r7, lr}
 800df96:	b082      	sub	sp, #8
 800df98:	af00      	add	r7, sp, #0
 800df9a:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800df9c:	687b      	ldr	r3, [r7, #4]
 800df9e:	4618      	mov	r0, r3
 800dfa0:	f001 f820 	bl	800efe4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800dfa4:	bf00      	nop
 800dfa6:	3708      	adds	r7, #8
 800dfa8:	46bd      	mov	sp, r7
 800dfaa:	bd80      	pop	{r7, pc}

0800dfac <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800dfac:	b580      	push	{r7, lr}
 800dfae:	b082      	sub	sp, #8
 800dfb0:	af00      	add	r7, sp, #0
 800dfb2:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800dfb4:	687b      	ldr	r3, [r7, #4]
 800dfb6:	4618      	mov	r0, r3
 800dfb8:	f001 f892 	bl	800f0e0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800dfbc:	4603      	mov	r3, r0
}
 800dfbe:	4618      	mov	r0, r3
 800dfc0:	3708      	adds	r7, #8
 800dfc2:	46bd      	mov	sp, r7
 800dfc4:	bd80      	pop	{r7, pc}

0800dfc6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800dfc6:	b580      	push	{r7, lr}
 800dfc8:	b082      	sub	sp, #8
 800dfca:	af00      	add	r7, sp, #0
 800dfcc:	6078      	str	r0, [r7, #4]
 800dfce:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800dfd0:	687b      	ldr	r3, [r7, #4]
 800dfd2:	6839      	ldr	r1, [r7, #0]
 800dfd4:	4618      	mov	r0, r3
 800dfd6:	f001 f88e 	bl	800f0f6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800dfda:	bf00      	nop
 800dfdc:	3708      	adds	r7, #8
 800dfde:	46bd      	mov	sp, r7
 800dfe0:	bd80      	pop	{r7, pc}

0800dfe2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800dfe2:	b580      	push	{r7, lr}
 800dfe4:	b082      	sub	sp, #8
 800dfe6:	af00      	add	r7, sp, #0
 800dfe8:	6078      	str	r0, [r7, #4]
 800dfea:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800dfec:	687b      	ldr	r3, [r7, #4]
 800dfee:	6839      	ldr	r1, [r7, #0]
 800dff0:	4618      	mov	r0, r3
 800dff2:	f001 f88b 	bl	800f10c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800dff6:	bf00      	nop
 800dff8:	3708      	adds	r7, #8
 800dffa:	46bd      	mov	sp, r7
 800dffc:	bd80      	pop	{r7, pc}

0800dffe <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800dffe:	b580      	push	{r7, lr}
 800e000:	b084      	sub	sp, #16
 800e002:	af00      	add	r7, sp, #0
 800e004:	60f8      	str	r0, [r7, #12]
 800e006:	60b9      	str	r1, [r7, #8]
 800e008:	607a      	str	r2, [r7, #4]
 800e00a:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800e00c:	68f8      	ldr	r0, [r7, #12]
 800e00e:	683b      	ldr	r3, [r7, #0]
 800e010:	687a      	ldr	r2, [r7, #4]
 800e012:	68b9      	ldr	r1, [r7, #8]
 800e014:	f001 f8bd 	bl	800f192 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800e018:	4603      	mov	r3, r0
}
 800e01a:	4618      	mov	r0, r3
 800e01c:	3710      	adds	r7, #16
 800e01e:	46bd      	mov	sp, r7
 800e020:	bd80      	pop	{r7, pc}

0800e022 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800e022:	b580      	push	{r7, lr}
 800e024:	b082      	sub	sp, #8
 800e026:	af00      	add	r7, sp, #0
 800e028:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800e02a:	687b      	ldr	r3, [r7, #4]
 800e02c:	4618      	mov	r0, r3
 800e02e:	f001 f809 	bl	800f044 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800e032:	bf00      	nop
 800e034:	3708      	adds	r7, #8
 800e036:	46bd      	mov	sp, r7
 800e038:	bd80      	pop	{r7, pc}

0800e03a <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800e03a:	b580      	push	{r7, lr}
 800e03c:	b082      	sub	sp, #8
 800e03e:	af00      	add	r7, sp, #0
 800e040:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800e042:	687b      	ldr	r3, [r7, #4]
 800e044:	4618      	mov	r0, r3
 800e046:	f001 f807 	bl	800f058 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800e04a:	bf00      	nop
 800e04c:	3708      	adds	r7, #8
 800e04e:	46bd      	mov	sp, r7
 800e050:	bd80      	pop	{r7, pc}

0800e052 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800e052:	b580      	push	{r7, lr}
 800e054:	b082      	sub	sp, #8
 800e056:	af00      	add	r7, sp, #0
 800e058:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800e05a:	687b      	ldr	r3, [r7, #4]
 800e05c:	4618      	mov	r0, r3
 800e05e:	f001 f805 	bl	800f06c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800e062:	bf00      	nop
 800e064:	3708      	adds	r7, #8
 800e066:	46bd      	mov	sp, r7
 800e068:	bd80      	pop	{r7, pc}

0800e06a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800e06a:	b580      	push	{r7, lr}
 800e06c:	b082      	sub	sp, #8
 800e06e:	af00      	add	r7, sp, #0
 800e070:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800e072:	687b      	ldr	r3, [r7, #4]
 800e074:	4618      	mov	r0, r3
 800e076:	f001 f803 	bl	800f080 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800e07a:	bf00      	nop
 800e07c:	3708      	adds	r7, #8
 800e07e:	46bd      	mov	sp, r7
 800e080:	bd80      	pop	{r7, pc}

0800e082 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800e082:	b580      	push	{r7, lr}
 800e084:	b082      	sub	sp, #8
 800e086:	af00      	add	r7, sp, #0
 800e088:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800e08a:	687b      	ldr	r3, [r7, #4]
 800e08c:	4618      	mov	r0, r3
 800e08e:	f001 f801 	bl	800f094 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800e092:	4603      	mov	r3, r0
}
 800e094:	4618      	mov	r0, r3
 800e096:	3708      	adds	r7, #8
 800e098:	46bd      	mov	sp, r7
 800e09a:	bd80      	pop	{r7, pc}

0800e09c <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800e09c:	b580      	push	{r7, lr}
 800e09e:	b082      	sub	sp, #8
 800e0a0:	af00      	add	r7, sp, #0
 800e0a2:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800e0a4:	687b      	ldr	r3, [r7, #4]
 800e0a6:	4618      	mov	r0, r3
 800e0a8:	f001 f801 	bl	800f0ae <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800e0ac:	bf00      	nop
 800e0ae:	3708      	adds	r7, #8
 800e0b0:	46bd      	mov	sp, r7
 800e0b2:	bd80      	pop	{r7, pc}

0800e0b4 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800e0b4:	b580      	push	{r7, lr}
 800e0b6:	b082      	sub	sp, #8
 800e0b8:	af00      	add	r7, sp, #0
 800e0ba:	6078      	str	r0, [r7, #4]
 800e0bc:	4a05      	ldr	r2, [pc, #20]	; (800e0d4 <_ZN11TouchGFXHALD1Ev+0x20>)
 800e0be:	687b      	ldr	r3, [r7, #4]
 800e0c0:	601a      	str	r2, [r3, #0]
 800e0c2:	687b      	ldr	r3, [r7, #4]
 800e0c4:	4618      	mov	r0, r3
 800e0c6:	f7ff ff37 	bl	800df38 <_ZN20TouchGFXGeneratedHALD1Ev>
 800e0ca:	687b      	ldr	r3, [r7, #4]
 800e0cc:	4618      	mov	r0, r3
 800e0ce:	3708      	adds	r7, #8
 800e0d0:	46bd      	mov	sp, r7
 800e0d2:	bd80      	pop	{r7, pc}
 800e0d4:	080259cc 	.word	0x080259cc

0800e0d8 <_ZN11TouchGFXHALD0Ev>:
 800e0d8:	b580      	push	{r7, lr}
 800e0da:	b082      	sub	sp, #8
 800e0dc:	af00      	add	r7, sp, #0
 800e0de:	6078      	str	r0, [r7, #4]
 800e0e0:	6878      	ldr	r0, [r7, #4]
 800e0e2:	f7ff ffe7 	bl	800e0b4 <_ZN11TouchGFXHALD1Ev>
 800e0e6:	217c      	movs	r1, #124	; 0x7c
 800e0e8:	6878      	ldr	r0, [r7, #4]
 800e0ea:	f015 f972 	bl	80233d2 <_ZdlPvj>
 800e0ee:	687b      	ldr	r3, [r7, #4]
 800e0f0:	4618      	mov	r0, r3
 800e0f2:	3708      	adds	r7, #8
 800e0f4:	46bd      	mov	sp, r7
 800e0f6:	bd80      	pop	{r7, pc}

0800e0f8 <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 800e0f8:	b480      	push	{r7}
 800e0fa:	af00      	add	r7, sp, #0
	return isTransmittingData;
 800e0fc:	4b03      	ldr	r3, [pc, #12]	; (800e10c <touchgfxDisplayDriverTransmitActive+0x14>)
 800e0fe:	781b      	ldrb	r3, [r3, #0]
}
 800e100:	4618      	mov	r0, r3
 800e102:	46bd      	mov	sp, r7
 800e104:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e108:	4770      	bx	lr
 800e10a:	bf00      	nop
 800e10c:	24000474 	.word	0x24000474

0800e110 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 800e110:	b590      	push	{r4, r7, lr}
 800e112:	b085      	sub	sp, #20
 800e114:	af00      	add	r7, sp, #0
 800e116:	60f8      	str	r0, [r7, #12]
 800e118:	4608      	mov	r0, r1
 800e11a:	4611      	mov	r1, r2
 800e11c:	461a      	mov	r2, r3
 800e11e:	4603      	mov	r3, r0
 800e120:	817b      	strh	r3, [r7, #10]
 800e122:	460b      	mov	r3, r1
 800e124:	813b      	strh	r3, [r7, #8]
 800e126:	4613      	mov	r3, r2
 800e128:	80fb      	strh	r3, [r7, #6]
	isTransmittingData = 1;
 800e12a:	4b0f      	ldr	r3, [pc, #60]	; (800e168 <touchgfxDisplayDriverTransmitBlock+0x58>)
 800e12c:	2201      	movs	r2, #1
 800e12e:	701a      	strb	r2, [r3, #0]
	ILI9341_SetWindow(x, y, x+w-1, y+h-1);
 800e130:	897a      	ldrh	r2, [r7, #10]
 800e132:	88fb      	ldrh	r3, [r7, #6]
 800e134:	4413      	add	r3, r2
 800e136:	b29b      	uxth	r3, r3
 800e138:	3b01      	subs	r3, #1
 800e13a:	b29c      	uxth	r4, r3
 800e13c:	893a      	ldrh	r2, [r7, #8]
 800e13e:	8c3b      	ldrh	r3, [r7, #32]
 800e140:	4413      	add	r3, r2
 800e142:	b29b      	uxth	r3, r3
 800e144:	3b01      	subs	r3, #1
 800e146:	b29b      	uxth	r3, r3
 800e148:	8939      	ldrh	r1, [r7, #8]
 800e14a:	8978      	ldrh	r0, [r7, #10]
 800e14c:	4622      	mov	r2, r4
 800e14e:	f7f2 fa36 	bl	80005be <ILI9341_SetWindow>
	ILI9341_DrawBitmap(w, h, pixels);
 800e152:	8c39      	ldrh	r1, [r7, #32]
 800e154:	88fb      	ldrh	r3, [r7, #6]
 800e156:	68fa      	ldr	r2, [r7, #12]
 800e158:	4618      	mov	r0, r3
 800e15a:	f7f2 fa9b 	bl	8000694 <ILI9341_DrawBitmap>
}
 800e15e:	bf00      	nop
 800e160:	3714      	adds	r7, #20
 800e162:	46bd      	mov	sp, r7
 800e164:	bd90      	pop	{r4, r7, pc}
 800e166:	bf00      	nop
 800e168:	24000474 	.word	0x24000474

0800e16c <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800e16c:	b580      	push	{r7, lr}
 800e16e:	b082      	sub	sp, #8
 800e170:	af00      	add	r7, sp, #0
 800e172:	6078      	str	r0, [r7, #4]
	if (hspi->Instance == SPI5) {
 800e174:	687b      	ldr	r3, [r7, #4]
 800e176:	681b      	ldr	r3, [r3, #0]
 800e178:	4a06      	ldr	r2, [pc, #24]	; (800e194 <HAL_SPI_TxCpltCallback+0x28>)
 800e17a:	4293      	cmp	r3, r2
 800e17c:	d106      	bne.n	800e18c <HAL_SPI_TxCpltCallback+0x20>
		ILI9341_EndOfDrawBitmap();
 800e17e:	f7f2 fab1 	bl	80006e4 <ILI9341_EndOfDrawBitmap>
		isTransmittingData = 0;
 800e182:	4b05      	ldr	r3, [pc, #20]	; (800e198 <HAL_SPI_TxCpltCallback+0x2c>)
 800e184:	2200      	movs	r2, #0
 800e186:	701a      	strb	r2, [r3, #0]
		DisplayDriver_TransferCompleteCallback();
 800e188:	f001 f903 	bl	800f392 <DisplayDriver_TransferCompleteCallback>
	}
}
 800e18c:	bf00      	nop
 800e18e:	3708      	adds	r7, #8
 800e190:	46bd      	mov	sp, r7
 800e192:	bd80      	pop	{r7, pc}
 800e194:	40015000 	.word	0x40015000
 800e198:	24000474 	.word	0x24000474

0800e19c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800e19c:	b480      	push	{r7}
 800e19e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800e1a0:	4b05      	ldr	r3, [pc, #20]	; (800e1b8 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800e1a2:	2200      	movs	r2, #0
 800e1a4:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800e1a6:	4b05      	ldr	r3, [pc, #20]	; (800e1bc <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800e1a8:	2200      	movs	r2, #0
 800e1aa:	601a      	str	r2, [r3, #0]
}
 800e1ac:	bf00      	nop
 800e1ae:	46bd      	mov	sp, r7
 800e1b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1b4:	4770      	bx	lr
 800e1b6:	bf00      	nop
 800e1b8:	24000478 	.word	0x24000478
 800e1bc:	2400047c 	.word	0x2400047c

0800e1c0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800e1c0:	b480      	push	{r7}
 800e1c2:	af00      	add	r7, sp, #0
    while (fb_sem);
 800e1c4:	bf00      	nop
 800e1c6:	4b08      	ldr	r3, [pc, #32]	; (800e1e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800e1c8:	681b      	ldr	r3, [r3, #0]
 800e1ca:	2b00      	cmp	r3, #0
 800e1cc:	bf14      	ite	ne
 800e1ce:	2301      	movne	r3, #1
 800e1d0:	2300      	moveq	r3, #0
 800e1d2:	b2db      	uxtb	r3, r3
 800e1d4:	2b00      	cmp	r3, #0
 800e1d6:	d1f6      	bne.n	800e1c6 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800e1d8:	4b03      	ldr	r3, [pc, #12]	; (800e1e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800e1da:	2201      	movs	r2, #1
 800e1dc:	601a      	str	r2, [r3, #0]
}
 800e1de:	bf00      	nop
 800e1e0:	46bd      	mov	sp, r7
 800e1e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1e6:	4770      	bx	lr
 800e1e8:	24000478 	.word	0x24000478

0800e1ec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800e1ec:	b480      	push	{r7}
 800e1ee:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800e1f0:	4b03      	ldr	r3, [pc, #12]	; (800e200 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800e1f2:	2200      	movs	r2, #0
 800e1f4:	601a      	str	r2, [r3, #0]
}
 800e1f6:	bf00      	nop
 800e1f8:	46bd      	mov	sp, r7
 800e1fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1fe:	4770      	bx	lr
 800e200:	24000478 	.word	0x24000478

0800e204 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800e204:	b480      	push	{r7}
 800e206:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800e208:	4b03      	ldr	r3, [pc, #12]	; (800e218 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800e20a:	2201      	movs	r2, #1
 800e20c:	601a      	str	r2, [r3, #0]
}
 800e20e:	bf00      	nop
 800e210:	46bd      	mov	sp, r7
 800e212:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e216:	4770      	bx	lr
 800e218:	24000478 	.word	0x24000478

0800e21c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800e21c:	b480      	push	{r7}
 800e21e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800e220:	4b03      	ldr	r3, [pc, #12]	; (800e230 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800e222:	2200      	movs	r2, #0
 800e224:	601a      	str	r2, [r3, #0]
}
 800e226:	bf00      	nop
 800e228:	46bd      	mov	sp, r7
 800e22a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e22e:	4770      	bx	lr
 800e230:	24000478 	.word	0x24000478

0800e234 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800e234:	b480      	push	{r7}
 800e236:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800e238:	4b03      	ldr	r3, [pc, #12]	; (800e248 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800e23a:	2201      	movs	r2, #1
 800e23c:	601a      	str	r2, [r3, #0]
}
 800e23e:	bf00      	nop
 800e240:	46bd      	mov	sp, r7
 800e242:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e246:	4770      	bx	lr
 800e248:	2400047c 	.word	0x2400047c

0800e24c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800e24c:	b480      	push	{r7}
 800e24e:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800e250:	4b03      	ldr	r3, [pc, #12]	; (800e260 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800e252:	2200      	movs	r2, #0
 800e254:	601a      	str	r2, [r3, #0]
}
 800e256:	bf00      	nop
 800e258:	46bd      	mov	sp, r7
 800e25a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e25e:	4770      	bx	lr
 800e260:	2400047c 	.word	0x2400047c

0800e264 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800e264:	b480      	push	{r7}
 800e266:	af00      	add	r7, sp, #0
    return vsync_sem;
 800e268:	4b05      	ldr	r3, [pc, #20]	; (800e280 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800e26a:	681b      	ldr	r3, [r3, #0]
 800e26c:	2b00      	cmp	r3, #0
 800e26e:	bf14      	ite	ne
 800e270:	2301      	movne	r3, #1
 800e272:	2300      	moveq	r3, #0
 800e274:	b2db      	uxtb	r3, r3
}
 800e276:	4618      	mov	r0, r3
 800e278:	46bd      	mov	sp, r7
 800e27a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e27e:	4770      	bx	lr
 800e280:	2400047c 	.word	0x2400047c

0800e284 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800e284:	b580      	push	{r7, lr}
 800e286:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800e288:	4b0a      	ldr	r3, [pc, #40]	; (800e2b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800e28a:	681b      	ldr	r3, [r3, #0]
 800e28c:	2b00      	cmp	r3, #0
 800e28e:	bf14      	ite	ne
 800e290:	2301      	movne	r3, #1
 800e292:	2300      	moveq	r3, #0
 800e294:	b2db      	uxtb	r3, r3
 800e296:	2b00      	cmp	r3, #0
 800e298:	d00a      	beq.n	800e2b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800e29a:	4b06      	ldr	r3, [pc, #24]	; (800e2b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800e29c:	2200      	movs	r2, #0
 800e29e:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800e2a0:	f7fd fc9c 	bl	800bbdc <_ZN8touchgfx3HAL11getInstanceEv>
 800e2a4:	4603      	mov	r3, r0
 800e2a6:	681a      	ldr	r2, [r3, #0]
 800e2a8:	3270      	adds	r2, #112	; 0x70
 800e2aa:	6812      	ldr	r2, [r2, #0]
 800e2ac:	4618      	mov	r0, r3
 800e2ae:	4790      	blx	r2
    }
}
 800e2b0:	bf00      	nop
 800e2b2:	bd80      	pop	{r7, pc}
 800e2b4:	2400047c 	.word	0x2400047c

0800e2b8 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800e2b8:	b480      	push	{r7}
 800e2ba:	b083      	sub	sp, #12
 800e2bc:	af00      	add	r7, sp, #0
 800e2be:	6078      	str	r0, [r7, #4]
        : color(0)
 800e2c0:	687b      	ldr	r3, [r7, #4]
 800e2c2:	2200      	movs	r2, #0
 800e2c4:	601a      	str	r2, [r3, #0]
    }
 800e2c6:	687b      	ldr	r3, [r7, #4]
 800e2c8:	4618      	mov	r0, r3
 800e2ca:	370c      	adds	r7, #12
 800e2cc:	46bd      	mov	sp, r7
 800e2ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2d2:	4770      	bx	lr

0800e2d4 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800e2d4:	b480      	push	{r7}
 800e2d6:	b083      	sub	sp, #12
 800e2d8:	af00      	add	r7, sp, #0
 800e2da:	6078      	str	r0, [r7, #4]
    {
 800e2dc:	4a04      	ldr	r2, [pc, #16]	; (800e2f0 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800e2de:	687b      	ldr	r3, [r7, #4]
 800e2e0:	601a      	str	r2, [r3, #0]
    }
 800e2e2:	687b      	ldr	r3, [r7, #4]
 800e2e4:	4618      	mov	r0, r3
 800e2e6:	370c      	adds	r7, #12
 800e2e8:	46bd      	mov	sp, r7
 800e2ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2ee:	4770      	bx	lr
 800e2f0:	08025af4 	.word	0x08025af4

0800e2f4 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800e2f4:	b580      	push	{r7, lr}
 800e2f6:	b082      	sub	sp, #8
 800e2f8:	af00      	add	r7, sp, #0
 800e2fa:	6078      	str	r0, [r7, #4]
    }
 800e2fc:	6878      	ldr	r0, [r7, #4]
 800e2fe:	f7ff ffe9 	bl	800e2d4 <_ZN8touchgfx9DMA_QueueD1Ev>
 800e302:	2104      	movs	r1, #4
 800e304:	6878      	ldr	r0, [r7, #4]
 800e306:	f015 f864 	bl	80233d2 <_ZdlPvj>
 800e30a:	687b      	ldr	r3, [r7, #4]
 800e30c:	4618      	mov	r0, r3
 800e30e:	3708      	adds	r7, #8
 800e310:	46bd      	mov	sp, r7
 800e312:	bd80      	pop	{r7, pc}

0800e314 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 800e314:	b480      	push	{r7}
 800e316:	b083      	sub	sp, #12
 800e318:	af00      	add	r7, sp, #0
 800e31a:	6078      	str	r0, [r7, #4]
    {
    }
 800e31c:	bf00      	nop
 800e31e:	370c      	adds	r7, #12
 800e320:	46bd      	mov	sp, r7
 800e322:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e326:	4770      	bx	lr

0800e328 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 800e328:	b480      	push	{r7}
 800e32a:	b083      	sub	sp, #12
 800e32c:	af00      	add	r7, sp, #0
 800e32e:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800e330:	2300      	movs	r3, #0
    }
 800e332:	4618      	mov	r0, r3
 800e334:	370c      	adds	r7, #12
 800e336:	46bd      	mov	sp, r7
 800e338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e33c:	4770      	bx	lr
	...

0800e340 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800e340:	b480      	push	{r7}
 800e342:	b083      	sub	sp, #12
 800e344:	af00      	add	r7, sp, #0
 800e346:	6078      	str	r0, [r7, #4]
    {
 800e348:	4a04      	ldr	r2, [pc, #16]	; (800e35c <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800e34a:	687b      	ldr	r3, [r7, #4]
 800e34c:	601a      	str	r2, [r3, #0]
    }
 800e34e:	687b      	ldr	r3, [r7, #4]
 800e350:	4618      	mov	r0, r3
 800e352:	370c      	adds	r7, #12
 800e354:	46bd      	mov	sp, r7
 800e356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e35a:	4770      	bx	lr
 800e35c:	08025ec4 	.word	0x08025ec4

0800e360 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800e360:	b580      	push	{r7, lr}
 800e362:	b082      	sub	sp, #8
 800e364:	af00      	add	r7, sp, #0
 800e366:	6078      	str	r0, [r7, #4]
    }
 800e368:	6878      	ldr	r0, [r7, #4]
 800e36a:	f7ff ffe9 	bl	800e340 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800e36e:	210c      	movs	r1, #12
 800e370:	6878      	ldr	r0, [r7, #4]
 800e372:	f015 f82e 	bl	80233d2 <_ZdlPvj>
 800e376:	687b      	ldr	r3, [r7, #4]
 800e378:	4618      	mov	r0, r3
 800e37a:	3708      	adds	r7, #8
 800e37c:	46bd      	mov	sp, r7
 800e37e:	bd80      	pop	{r7, pc}

0800e380 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800e380:	b480      	push	{r7}
 800e382:	b083      	sub	sp, #12
 800e384:	af00      	add	r7, sp, #0
 800e386:	6078      	str	r0, [r7, #4]
 800e388:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800e38a:	4a09      	ldr	r2, [pc, #36]	; (800e3b0 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800e38c:	687b      	ldr	r3, [r7, #4]
 800e38e:	601a      	str	r2, [r3, #0]
 800e390:	687b      	ldr	r3, [r7, #4]
 800e392:	683a      	ldr	r2, [r7, #0]
 800e394:	605a      	str	r2, [r3, #4]
 800e396:	687b      	ldr	r3, [r7, #4]
 800e398:	2200      	movs	r2, #0
 800e39a:	721a      	strb	r2, [r3, #8]
 800e39c:	687b      	ldr	r3, [r7, #4]
 800e39e:	2200      	movs	r2, #0
 800e3a0:	725a      	strb	r2, [r3, #9]
    {
    }
 800e3a2:	687b      	ldr	r3, [r7, #4]
 800e3a4:	4618      	mov	r0, r3
 800e3a6:	370c      	adds	r7, #12
 800e3a8:	46bd      	mov	sp, r7
 800e3aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3ae:	4770      	bx	lr
 800e3b0:	08025ec4 	.word	0x08025ec4

0800e3b4 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 800e3b4:	b480      	push	{r7}
 800e3b6:	b083      	sub	sp, #12
 800e3b8:	af00      	add	r7, sp, #0
 800e3ba:	6078      	str	r0, [r7, #4]
    {
    }
 800e3bc:	bf00      	nop
 800e3be:	370c      	adds	r7, #12
 800e3c0:	46bd      	mov	sp, r7
 800e3c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3c6:	4770      	bx	lr

0800e3c8 <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 800e3c8:	b480      	push	{r7}
 800e3ca:	b083      	sub	sp, #12
 800e3cc:	af00      	add	r7, sp, #0
 800e3ce:	6078      	str	r0, [r7, #4]
    {
    }
 800e3d0:	bf00      	nop
 800e3d2:	370c      	adds	r7, #12
 800e3d4:	46bd      	mov	sp, r7
 800e3d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3da:	4770      	bx	lr

0800e3dc <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800e3dc:	b580      	push	{r7, lr}
 800e3de:	b082      	sub	sp, #8
 800e3e0:	af00      	add	r7, sp, #0
 800e3e2:	6078      	str	r0, [r7, #4]
 800e3e4:	687b      	ldr	r3, [r7, #4]
 800e3e6:	330c      	adds	r3, #12
 800e3e8:	4618      	mov	r0, r3
 800e3ea:	f7ff ff65 	bl	800e2b8 <_ZN8touchgfx9colortypeC1Ev>
 800e3ee:	687b      	ldr	r3, [r7, #4]
 800e3f0:	4618      	mov	r0, r3
 800e3f2:	3708      	adds	r7, #8
 800e3f4:	46bd      	mov	sp, r7
 800e3f6:	bd80      	pop	{r7, pc}

0800e3f8 <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 800e3f8:	b580      	push	{r7, lr}
 800e3fa:	b082      	sub	sp, #8
 800e3fc:	af00      	add	r7, sp, #0
 800e3fe:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 800e400:	687a      	ldr	r2, [r7, #4]
 800e402:	687b      	ldr	r3, [r7, #4]
 800e404:	330c      	adds	r3, #12
 800e406:	4619      	mov	r1, r3
 800e408:	4610      	mov	r0, r2
 800e40a:	f7ff ffb9 	bl	800e380 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800e40e:	4a0b      	ldr	r2, [pc, #44]	; (800e43c <_ZN8STM32DMAC1Ev+0x44>)
 800e410:	687b      	ldr	r3, [r7, #4]
 800e412:	601a      	str	r2, [r3, #0]
 800e414:	687b      	ldr	r3, [r7, #4]
 800e416:	f103 000c 	add.w	r0, r3, #12
 800e41a:	687b      	ldr	r3, [r7, #4]
 800e41c:	3320      	adds	r3, #32
 800e41e:	2201      	movs	r2, #1
 800e420:	4619      	mov	r1, r3
 800e422:	f002 fbef 	bl	8010c04 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800e426:	687b      	ldr	r3, [r7, #4]
 800e428:	3320      	adds	r3, #32
 800e42a:	4618      	mov	r0, r3
 800e42c:	f7ff ffd6 	bl	800e3dc <_ZN8touchgfx6BlitOpC1Ev>
{
}
 800e430:	687b      	ldr	r3, [r7, #4]
 800e432:	4618      	mov	r0, r3
 800e434:	3708      	adds	r7, #8
 800e436:	46bd      	mov	sp, r7
 800e438:	bd80      	pop	{r7, pc}
 800e43a:	bf00      	nop
 800e43c:	08025aa4 	.word	0x08025aa4

0800e440 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 800e440:	b480      	push	{r7}
 800e442:	b083      	sub	sp, #12
 800e444:	af00      	add	r7, sp, #0
 800e446:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 800e448:	2300      	movs	r3, #0
}
 800e44a:	4618      	mov	r0, r3
 800e44c:	370c      	adds	r7, #12
 800e44e:	46bd      	mov	sp, r7
 800e450:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e454:	4770      	bx	lr
	...

0800e458 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 800e458:	b580      	push	{r7, lr}
 800e45a:	b082      	sub	sp, #8
 800e45c:	af00      	add	r7, sp, #0
 800e45e:	6078      	str	r0, [r7, #4]
 800e460:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800e462:	4b03      	ldr	r3, [pc, #12]	; (800e470 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800e464:	4a03      	ldr	r2, [pc, #12]	; (800e474 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800e466:	2122      	movs	r1, #34	; 0x22
 800e468:	4803      	ldr	r0, [pc, #12]	; (800e478 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800e46a:	f014 ffe1 	bl	8023430 <__assert_func>
 800e46e:	bf00      	nop
 800e470:	08024d24 	.word	0x08024d24
 800e474:	08024d48 	.word	0x08024d48
 800e478:	08024d88 	.word	0x08024d88

0800e47c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800e47c:	b580      	push	{r7, lr}
 800e47e:	b082      	sub	sp, #8
 800e480:	af00      	add	r7, sp, #0
 800e482:	6078      	str	r0, [r7, #4]
 800e484:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800e486:	4b03      	ldr	r3, [pc, #12]	; (800e494 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800e488:	4a03      	ldr	r2, [pc, #12]	; (800e498 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800e48a:	2127      	movs	r1, #39	; 0x27
 800e48c:	4803      	ldr	r0, [pc, #12]	; (800e49c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800e48e:	f014 ffcf 	bl	8023430 <__assert_func>
 800e492:	bf00      	nop
 800e494:	08024d24 	.word	0x08024d24
 800e498:	08024db4 	.word	0x08024db4
 800e49c:	08024d88 	.word	0x08024d88

0800e4a0 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800e4a0:	b580      	push	{r7, lr}
 800e4a2:	b082      	sub	sp, #8
 800e4a4:	af00      	add	r7, sp, #0
 800e4a6:	6078      	str	r0, [r7, #4]
 800e4a8:	4a08      	ldr	r2, [pc, #32]	; (800e4cc <_ZN8STM32DMAD1Ev+0x2c>)
 800e4aa:	687b      	ldr	r3, [r7, #4]
 800e4ac:	601a      	str	r2, [r3, #0]
 800e4ae:	687b      	ldr	r3, [r7, #4]
 800e4b0:	330c      	adds	r3, #12
 800e4b2:	4618      	mov	r0, r3
 800e4b4:	f000 f81c 	bl	800e4f0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800e4b8:	687b      	ldr	r3, [r7, #4]
 800e4ba:	4618      	mov	r0, r3
 800e4bc:	f7ff ff40 	bl	800e340 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800e4c0:	687b      	ldr	r3, [r7, #4]
 800e4c2:	4618      	mov	r0, r3
 800e4c4:	3708      	adds	r7, #8
 800e4c6:	46bd      	mov	sp, r7
 800e4c8:	bd80      	pop	{r7, pc}
 800e4ca:	bf00      	nop
 800e4cc:	08025aa4 	.word	0x08025aa4

0800e4d0 <_ZN8STM32DMAD0Ev>:
 800e4d0:	b580      	push	{r7, lr}
 800e4d2:	b082      	sub	sp, #8
 800e4d4:	af00      	add	r7, sp, #0
 800e4d6:	6078      	str	r0, [r7, #4]
 800e4d8:	6878      	ldr	r0, [r7, #4]
 800e4da:	f7ff ffe1 	bl	800e4a0 <_ZN8STM32DMAD1Ev>
 800e4de:	2144      	movs	r1, #68	; 0x44
 800e4e0:	6878      	ldr	r0, [r7, #4]
 800e4e2:	f014 ff76 	bl	80233d2 <_ZdlPvj>
 800e4e6:	687b      	ldr	r3, [r7, #4]
 800e4e8:	4618      	mov	r0, r3
 800e4ea:	3708      	adds	r7, #8
 800e4ec:	46bd      	mov	sp, r7
 800e4ee:	bd80      	pop	{r7, pc}

0800e4f0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800e4f0:	b580      	push	{r7, lr}
 800e4f2:	b082      	sub	sp, #8
 800e4f4:	af00      	add	r7, sp, #0
 800e4f6:	6078      	str	r0, [r7, #4]
 800e4f8:	4a05      	ldr	r2, [pc, #20]	; (800e510 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800e4fa:	687b      	ldr	r3, [r7, #4]
 800e4fc:	601a      	str	r2, [r3, #0]
 800e4fe:	687b      	ldr	r3, [r7, #4]
 800e500:	4618      	mov	r0, r3
 800e502:	f7ff fee7 	bl	800e2d4 <_ZN8touchgfx9DMA_QueueD1Ev>
 800e506:	687b      	ldr	r3, [r7, #4]
 800e508:	4618      	mov	r0, r3
 800e50a:	3708      	adds	r7, #8
 800e50c:	46bd      	mov	sp, r7
 800e50e:	bd80      	pop	{r7, pc}
 800e510:	08025f14 	.word	0x08025f14

0800e514 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800e514:	b580      	push	{r7, lr}
 800e516:	b082      	sub	sp, #8
 800e518:	af00      	add	r7, sp, #0
 800e51a:	6078      	str	r0, [r7, #4]
 800e51c:	6878      	ldr	r0, [r7, #4]
 800e51e:	f7ff ffe7 	bl	800e4f0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800e522:	2114      	movs	r1, #20
 800e524:	6878      	ldr	r0, [r7, #4]
 800e526:	f014 ff54 	bl	80233d2 <_ZdlPvj>
 800e52a:	687b      	ldr	r3, [r7, #4]
 800e52c:	4618      	mov	r0, r3
 800e52e:	3708      	adds	r7, #8
 800e530:	46bd      	mov	sp, r7
 800e532:	bd80      	pop	{r7, pc}

0800e534 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800e534:	b480      	push	{r7}
 800e536:	b083      	sub	sp, #12
 800e538:	af00      	add	r7, sp, #0
 800e53a:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800e53c:	4a04      	ldr	r2, [pc, #16]	; (800e550 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800e53e:	687b      	ldr	r3, [r7, #4]
 800e540:	6013      	str	r3, [r2, #0]
    }
 800e542:	bf00      	nop
 800e544:	370c      	adds	r7, #12
 800e546:	46bd      	mov	sp, r7
 800e548:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e54c:	4770      	bx	lr
 800e54e:	bf00      	nop
 800e550:	240020d0 	.word	0x240020d0

0800e554 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800e554:	b480      	push	{r7}
 800e556:	b085      	sub	sp, #20
 800e558:	af00      	add	r7, sp, #0
 800e55a:	60f8      	str	r0, [r7, #12]
 800e55c:	60b9      	str	r1, [r7, #8]
 800e55e:	607a      	str	r2, [r7, #4]
 800e560:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800e562:	4a0b      	ldr	r2, [pc, #44]	; (800e590 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800e564:	68fb      	ldr	r3, [r7, #12]
 800e566:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800e568:	68fb      	ldr	r3, [r7, #12]
 800e56a:	68ba      	ldr	r2, [r7, #8]
 800e56c:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800e56e:	68fb      	ldr	r3, [r7, #12]
 800e570:	687a      	ldr	r2, [r7, #4]
 800e572:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800e574:	68fb      	ldr	r3, [r7, #12]
 800e576:	683a      	ldr	r2, [r7, #0]
 800e578:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800e57a:	68fb      	ldr	r3, [r7, #12]
 800e57c:	69ba      	ldr	r2, [r7, #24]
 800e57e:	611a      	str	r2, [r3, #16]
    {
    }
 800e580:	68fb      	ldr	r3, [r7, #12]
 800e582:	4618      	mov	r0, r3
 800e584:	3714      	adds	r7, #20
 800e586:	46bd      	mov	sp, r7
 800e588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e58c:	4770      	bx	lr
 800e58e:	bf00      	nop
 800e590:	08025bdc 	.word	0x08025bdc

0800e594 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800e594:	b480      	push	{r7}
 800e596:	b083      	sub	sp, #12
 800e598:	af00      	add	r7, sp, #0
 800e59a:	6078      	str	r0, [r7, #4]
    {
 800e59c:	4a04      	ldr	r2, [pc, #16]	; (800e5b0 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800e59e:	687b      	ldr	r3, [r7, #4]
 800e5a0:	601a      	str	r2, [r3, #0]
    }
 800e5a2:	687b      	ldr	r3, [r7, #4]
 800e5a4:	4618      	mov	r0, r3
 800e5a6:	370c      	adds	r7, #12
 800e5a8:	46bd      	mov	sp, r7
 800e5aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5ae:	4770      	bx	lr
 800e5b0:	08025bdc 	.word	0x08025bdc

0800e5b4 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800e5b4:	b580      	push	{r7, lr}
 800e5b6:	b082      	sub	sp, #8
 800e5b8:	af00      	add	r7, sp, #0
 800e5ba:	6078      	str	r0, [r7, #4]
    }
 800e5bc:	6878      	ldr	r0, [r7, #4]
 800e5be:	f7ff ffe9 	bl	800e594 <_ZN8touchgfx7MVPHeapD1Ev>
 800e5c2:	2114      	movs	r1, #20
 800e5c4:	6878      	ldr	r0, [r7, #4]
 800e5c6:	f014 ff04 	bl	80233d2 <_ZdlPvj>
 800e5ca:	687b      	ldr	r3, [r7, #4]
 800e5cc:	4618      	mov	r0, r3
 800e5ce:	3708      	adds	r7, #8
 800e5d0:	46bd      	mov	sp, r7
 800e5d2:	bd80      	pop	{r7, pc}

0800e5d4 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800e5d4:	b480      	push	{r7}
 800e5d6:	b083      	sub	sp, #12
 800e5d8:	af00      	add	r7, sp, #0
 800e5da:	6078      	str	r0, [r7, #4]
    {
 800e5dc:	4a04      	ldr	r2, [pc, #16]	; (800e5f0 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800e5de:	687b      	ldr	r3, [r7, #4]
 800e5e0:	601a      	str	r2, [r3, #0]
    }
 800e5e2:	687b      	ldr	r3, [r7, #4]
 800e5e4:	4618      	mov	r0, r3
 800e5e6:	370c      	adds	r7, #12
 800e5e8:	46bd      	mov	sp, r7
 800e5ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5ee:	4770      	bx	lr
 800e5f0:	08026188 	.word	0x08026188

0800e5f4 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800e5f4:	b580      	push	{r7, lr}
 800e5f6:	b082      	sub	sp, #8
 800e5f8:	af00      	add	r7, sp, #0
 800e5fa:	6078      	str	r0, [r7, #4]
    }
 800e5fc:	6878      	ldr	r0, [r7, #4]
 800e5fe:	f7ff ffe9 	bl	800e5d4 <_ZN8touchgfx3LCDD1Ev>
 800e602:	2108      	movs	r1, #8
 800e604:	6878      	ldr	r0, [r7, #4]
 800e606:	f014 fee4 	bl	80233d2 <_ZdlPvj>
 800e60a:	687b      	ldr	r3, [r7, #4]
 800e60c:	4618      	mov	r0, r3
 800e60e:	3708      	adds	r7, #8
 800e610:	46bd      	mov	sp, r7
 800e612:	bd80      	pop	{r7, pc}

0800e614 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800e614:	b480      	push	{r7}
 800e616:	b083      	sub	sp, #12
 800e618:	af00      	add	r7, sp, #0
 800e61a:	6078      	str	r0, [r7, #4]
            : startX(0),
 800e61c:	687b      	ldr	r3, [r7, #4]
 800e61e:	2200      	movs	r2, #0
 800e620:	801a      	strh	r2, [r3, #0]
              startY(0),
 800e622:	687b      	ldr	r3, [r7, #4]
 800e624:	2200      	movs	r2, #0
 800e626:	805a      	strh	r2, [r3, #2]
              downX(0),
 800e628:	687b      	ldr	r3, [r7, #4]
 800e62a:	2200      	movs	r2, #0
 800e62c:	809a      	strh	r2, [r3, #4]
              downY(0),
 800e62e:	687b      	ldr	r3, [r7, #4]
 800e630:	2200      	movs	r2, #0
 800e632:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800e634:	687b      	ldr	r3, [r7, #4]
 800e636:	2200      	movs	r2, #0
 800e638:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800e63a:	687b      	ldr	r3, [r7, #4]
 800e63c:	2200      	movs	r2, #0
 800e63e:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800e640:	687b      	ldr	r3, [r7, #4]
 800e642:	2200      	movs	r2, #0
 800e644:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800e646:	687b      	ldr	r3, [r7, #4]
 800e648:	2200      	movs	r2, #0
 800e64a:	739a      	strb	r2, [r3, #14]
        {
        }
 800e64c:	687b      	ldr	r3, [r7, #4]
 800e64e:	4618      	mov	r0, r3
 800e650:	370c      	adds	r7, #12
 800e652:	46bd      	mov	sp, r7
 800e654:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e658:	4770      	bx	lr

0800e65a <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800e65a:	b580      	push	{r7, lr}
 800e65c:	b082      	sub	sp, #8
 800e65e:	af00      	add	r7, sp, #0
 800e660:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800e662:	687b      	ldr	r3, [r7, #4]
 800e664:	4618      	mov	r0, r3
 800e666:	f7ff ffd5 	bl	800e614 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800e66a:	687b      	ldr	r3, [r7, #4]
 800e66c:	2200      	movs	r2, #0
 800e66e:	611a      	str	r2, [r3, #16]
 800e670:	687b      	ldr	r3, [r7, #4]
 800e672:	2200      	movs	r2, #0
 800e674:	829a      	strh	r2, [r3, #20]
    {
    }
 800e676:	687b      	ldr	r3, [r7, #4]
 800e678:	4618      	mov	r0, r3
 800e67a:	3708      	adds	r7, #8
 800e67c:	46bd      	mov	sp, r7
 800e67e:	bd80      	pop	{r7, pc}

0800e680 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800e680:	b580      	push	{r7, lr}
 800e682:	b084      	sub	sp, #16
 800e684:	af00      	add	r7, sp, #0
 800e686:	60f8      	str	r0, [r7, #12]
 800e688:	60b9      	str	r1, [r7, #8]
 800e68a:	607a      	str	r2, [r7, #4]
 800e68c:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800e68e:	4a55      	ldr	r2, [pc, #340]	; (800e7e4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800e690:	68fb      	ldr	r3, [r7, #12]
 800e692:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800e694:	68fb      	ldr	r3, [r7, #12]
 800e696:	68ba      	ldr	r2, [r7, #8]
 800e698:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800e69a:	68fb      	ldr	r3, [r7, #12]
 800e69c:	687a      	ldr	r2, [r7, #4]
 800e69e:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800e6a0:	68fb      	ldr	r3, [r7, #12]
 800e6a2:	683a      	ldr	r2, [r7, #0]
 800e6a4:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800e6a6:	68fb      	ldr	r3, [r7, #12]
 800e6a8:	2200      	movs	r2, #0
 800e6aa:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800e6ac:	68fb      	ldr	r3, [r7, #12]
 800e6ae:	2200      	movs	r2, #0
 800e6b0:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800e6b2:	68fb      	ldr	r3, [r7, #12]
 800e6b4:	2200      	movs	r2, #0
 800e6b6:	619a      	str	r2, [r3, #24]
          gestures(),
 800e6b8:	68fb      	ldr	r3, [r7, #12]
 800e6ba:	331c      	adds	r3, #28
 800e6bc:	4618      	mov	r0, r3
 800e6be:	f7ff ffcc 	bl	800e65a <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800e6c2:	68fb      	ldr	r3, [r7, #12]
 800e6c4:	2200      	movs	r2, #0
 800e6c6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          taskDelayFunc(0),
 800e6ca:	68fb      	ldr	r3, [r7, #12]
 800e6cc:	2200      	movs	r2, #0
 800e6ce:	639a      	str	r2, [r3, #56]	; 0x38
          frameBuffer0(0),
 800e6d0:	68fb      	ldr	r3, [r7, #12]
 800e6d2:	2200      	movs	r2, #0
 800e6d4:	63da      	str	r2, [r3, #60]	; 0x3c
          frameBuffer1(0),
 800e6d6:	68fb      	ldr	r3, [r7, #12]
 800e6d8:	2200      	movs	r2, #0
 800e6da:	641a      	str	r2, [r3, #64]	; 0x40
          frameBuffer2(0),
 800e6dc:	68fb      	ldr	r3, [r7, #12]
 800e6de:	2200      	movs	r2, #0
 800e6e0:	645a      	str	r2, [r3, #68]	; 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800e6e2:	68fb      	ldr	r3, [r7, #12]
 800e6e4:	2200      	movs	r2, #0
 800e6e6:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
          fingerSize(1),
 800e6ea:	68fb      	ldr	r3, [r7, #12]
 800e6ec:	2201      	movs	r2, #1
 800e6ee:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
          lockDMAToPorch(false),
 800e6f2:	68fb      	ldr	r3, [r7, #12]
 800e6f4:	2200      	movs	r2, #0
 800e6f6:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
          frameBufferUpdatedThisFrame(false),
 800e6fa:	68fb      	ldr	r3, [r7, #12]
 800e6fc:	2200      	movs	r2, #0
 800e6fe:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
          auxiliaryLCD(0),
 800e702:	68fb      	ldr	r3, [r7, #12]
 800e704:	2200      	movs	r2, #0
 800e706:	64da      	str	r2, [r3, #76]	; 0x4c
          partialFrameBufferRect(),
 800e708:	68fb      	ldr	r3, [r7, #12]
 800e70a:	3350      	adds	r3, #80	; 0x50
 800e70c:	4618      	mov	r0, r3
 800e70e:	f7fd fefe 	bl	800c50e <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800e712:	68fb      	ldr	r3, [r7, #12]
 800e714:	2200      	movs	r2, #0
 800e716:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          listener(0),
 800e71a:	68fb      	ldr	r3, [r7, #12]
 800e71c:	2200      	movs	r2, #0
 800e71e:	65da      	str	r2, [r3, #92]	; 0x5c
          lastX(0),
 800e720:	68fb      	ldr	r3, [r7, #12]
 800e722:	2200      	movs	r2, #0
 800e724:	661a      	str	r2, [r3, #96]	; 0x60
          lastY(0),
 800e726:	68fb      	ldr	r3, [r7, #12]
 800e728:	2200      	movs	r2, #0
 800e72a:	665a      	str	r2, [r3, #100]	; 0x64
          touchSampleRate(1),
 800e72c:	68fb      	ldr	r3, [r7, #12]
 800e72e:	2201      	movs	r2, #1
 800e730:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
          mcuLoadPct(0),
 800e734:	68fb      	ldr	r3, [r7, #12]
 800e736:	2200      	movs	r2, #0
 800e738:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
          vSyncCnt(0),
 800e73c:	68fb      	ldr	r3, [r7, #12]
 800e73e:	2200      	movs	r2, #0
 800e740:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
          vSyncForFrame(1),
 800e744:	68fb      	ldr	r3, [r7, #12]
 800e746:	2201      	movs	r2, #1
 800e748:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
          vSyncCompensationEnabled(false),
 800e74c:	68fb      	ldr	r3, [r7, #12]
 800e74e:	2200      	movs	r2, #0
 800e750:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          clientDirty(false),
 800e754:	68fb      	ldr	r3, [r7, #12]
 800e756:	2200      	movs	r2, #0
 800e758:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
          swapRequested(false),
 800e75c:	68fb      	ldr	r3, [r7, #12]
 800e75e:	2200      	movs	r2, #0
 800e760:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
          lastTouched(false),
 800e764:	68fb      	ldr	r3, [r7, #12]
 800e766:	2200      	movs	r2, #0
 800e768:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
          updateMCULoad(0),
 800e76c:	68fb      	ldr	r3, [r7, #12]
 800e76e:	2200      	movs	r2, #0
 800e770:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          cc_begin(0),
 800e774:	68fb      	ldr	r3, [r7, #12]
 800e776:	2200      	movs	r2, #0
 800e778:	675a      	str	r2, [r3, #116]	; 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800e77a:	68fb      	ldr	r3, [r7, #12]
 800e77c:	2200      	movs	r2, #0
 800e77e:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
          displayOrientationChangeRequested(false),
 800e782:	68fb      	ldr	r3, [r7, #12]
 800e784:	2200      	movs	r2, #0
 800e786:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
          useDMAAcceleration(true),
 800e78a:	68fb      	ldr	r3, [r7, #12]
 800e78c:	2201      	movs	r2, #1
 800e78e:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
          lastRenderMethod(HARDWARE)
 800e792:	68fb      	ldr	r3, [r7, #12]
 800e794:	2201      	movs	r2, #1
 800e796:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
        instance = this;
 800e79a:	4a13      	ldr	r2, [pc, #76]	; (800e7e8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800e79c:	68fb      	ldr	r3, [r7, #12]
 800e79e:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800e7a0:	4a12      	ldr	r2, [pc, #72]	; (800e7ec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800e7a2:	8b3b      	ldrh	r3, [r7, #24]
 800e7a4:	8013      	strh	r3, [r2, #0]
 800e7a6:	4b11      	ldr	r3, [pc, #68]	; (800e7ec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800e7a8:	881a      	ldrh	r2, [r3, #0]
 800e7aa:	4b11      	ldr	r3, [pc, #68]	; (800e7f0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800e7ac:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800e7ae:	4a11      	ldr	r2, [pc, #68]	; (800e7f4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800e7b0:	8bbb      	ldrh	r3, [r7, #28]
 800e7b2:	8013      	strh	r3, [r2, #0]
 800e7b4:	4b0f      	ldr	r3, [pc, #60]	; (800e7f4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800e7b6:	881a      	ldrh	r2, [r3, #0]
 800e7b8:	4b0f      	ldr	r3, [pc, #60]	; (800e7f8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800e7ba:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800e7bc:	4b0f      	ldr	r3, [pc, #60]	; (800e7fc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800e7be:	2200      	movs	r2, #0
 800e7c0:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800e7c2:	8b3a      	ldrh	r2, [r7, #24]
 800e7c4:	8bbb      	ldrh	r3, [r7, #28]
 800e7c6:	429a      	cmp	r2, r3
 800e7c8:	bf34      	ite	cc
 800e7ca:	2301      	movcc	r3, #1
 800e7cc:	2300      	movcs	r3, #0
 800e7ce:	b2db      	uxtb	r3, r3
 800e7d0:	461a      	mov	r2, r3
 800e7d2:	68fb      	ldr	r3, [r7, #12]
 800e7d4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800e7d8:	68fb      	ldr	r3, [r7, #12]
 800e7da:	4618      	mov	r0, r3
 800e7dc:	3710      	adds	r7, #16
 800e7de:	46bd      	mov	sp, r7
 800e7e0:	bd80      	pop	{r7, pc}
 800e7e2:	bf00      	nop
 800e7e4:	08025dec 	.word	0x08025dec
 800e7e8:	24002074 	.word	0x24002074
 800e7ec:	24002068 	.word	0x24002068
 800e7f0:	2400206e 	.word	0x2400206e
 800e7f4:	2400206a 	.word	0x2400206a
 800e7f8:	24002070 	.word	0x24002070
 800e7fc:	2400206c 	.word	0x2400206c

0800e800 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800e800:	b580      	push	{r7, lr}
 800e802:	b082      	sub	sp, #8
 800e804:	af00      	add	r7, sp, #0
 800e806:	6078      	str	r0, [r7, #4]
 800e808:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreen_perf_modeScreenNoTransition();
 800e80a:	683b      	ldr	r3, [r7, #0]
 800e80c:	4618      	mov	r0, r3
 800e80e:	f7fd fbe1 	bl	800bfd4 <_ZN23FrontendApplicationBase38gotoscreen_perf_modeScreenNoTransitionEv>
    }
 800e812:	bf00      	nop
 800e814:	3708      	adds	r7, #8
 800e816:	46bd      	mov	sp, r7
 800e818:	bd80      	pop	{r7, pc}
	...

0800e81c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800e81c:	b580      	push	{r7, lr}
 800e81e:	b086      	sub	sp, #24
 800e820:	af02      	add	r7, sp, #8
 800e822:	60f8      	str	r0, [r7, #12]
 800e824:	60b9      	str	r1, [r7, #8]
 800e826:	607a      	str	r2, [r7, #4]
 800e828:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800e82a:	68f8      	ldr	r0, [r7, #12]
 800e82c:	69bb      	ldr	r3, [r7, #24]
 800e82e:	9300      	str	r3, [sp, #0]
 800e830:	683b      	ldr	r3, [r7, #0]
 800e832:	687a      	ldr	r2, [r7, #4]
 800e834:	68b9      	ldr	r1, [r7, #8]
 800e836:	f7ff fe8d 	bl	800e554 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800e83a:	4a04      	ldr	r2, [pc, #16]	; (800e84c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800e83c:	68fb      	ldr	r3, [r7, #12]
 800e83e:	601a      	str	r2, [r3, #0]
    {

    }
 800e840:	68fb      	ldr	r3, [r7, #12]
 800e842:	4618      	mov	r0, r3
 800e844:	3710      	adds	r7, #16
 800e846:	46bd      	mov	sp, r7
 800e848:	bd80      	pop	{r7, pc}
 800e84a:	bf00      	nop
 800e84c:	08025bc8 	.word	0x08025bc8

0800e850 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800e850:	b580      	push	{r7, lr}
 800e852:	af00      	add	r7, sp, #0
 800e854:	4801      	ldr	r0, [pc, #4]	; (800e85c <__tcf_0+0xc>)
 800e856:	f000 f969 	bl	800eb2c <_ZN12FrontendHeapD1Ev>
 800e85a:	bd80      	pop	{r7, pc}
 800e85c:	24000480 	.word	0x24000480

0800e860 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800e860:	b580      	push	{r7, lr}
 800e862:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800e864:	4b11      	ldr	r3, [pc, #68]	; (800e8ac <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e866:	681b      	ldr	r3, [r3, #0]
 800e868:	f3bf 8f5b 	dmb	ish
 800e86c:	f003 0301 	and.w	r3, r3, #1
 800e870:	2b00      	cmp	r3, #0
 800e872:	bf0c      	ite	eq
 800e874:	2301      	moveq	r3, #1
 800e876:	2300      	movne	r3, #0
 800e878:	b2db      	uxtb	r3, r3
 800e87a:	2b00      	cmp	r3, #0
 800e87c:	d013      	beq.n	800e8a6 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800e87e:	480b      	ldr	r0, [pc, #44]	; (800e8ac <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e880:	f014 fda9 	bl	80233d6 <__cxa_guard_acquire>
 800e884:	4603      	mov	r3, r0
 800e886:	2b00      	cmp	r3, #0
 800e888:	bf14      	ite	ne
 800e88a:	2301      	movne	r3, #1
 800e88c:	2300      	moveq	r3, #0
 800e88e:	b2db      	uxtb	r3, r3
 800e890:	2b00      	cmp	r3, #0
 800e892:	d008      	beq.n	800e8a6 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800e894:	4806      	ldr	r0, [pc, #24]	; (800e8b0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800e896:	f000 f867 	bl	800e968 <_ZN12FrontendHeapC1Ev>
 800e89a:	4806      	ldr	r0, [pc, #24]	; (800e8b4 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800e89c:	f014 fde6 	bl	802346c <atexit>
 800e8a0:	4802      	ldr	r0, [pc, #8]	; (800e8ac <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800e8a2:	f014 fda4 	bl	80233ee <__cxa_guard_release>
        return instance;
 800e8a6:	4b02      	ldr	r3, [pc, #8]	; (800e8b0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800e8a8:	4618      	mov	r0, r3
 800e8aa:	bd80      	pop	{r7, pc}
 800e8ac:	24000870 	.word	0x24000870
 800e8b0:	24000480 	.word	0x24000480
 800e8b4:	0800e851 	.word	0x0800e851

0800e8b8 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800e8b8:	b580      	push	{r7, lr}
 800e8ba:	b082      	sub	sp, #8
 800e8bc:	af00      	add	r7, sp, #0
 800e8be:	6078      	str	r0, [r7, #4]
 800e8c0:	4a05      	ldr	r2, [pc, #20]	; (800e8d8 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800e8c2:	687b      	ldr	r3, [r7, #4]
 800e8c4:	601a      	str	r2, [r3, #0]
 800e8c6:	687b      	ldr	r3, [r7, #4]
 800e8c8:	4618      	mov	r0, r3
 800e8ca:	f7ff fe63 	bl	800e594 <_ZN8touchgfx7MVPHeapD1Ev>
 800e8ce:	687b      	ldr	r3, [r7, #4]
 800e8d0:	4618      	mov	r0, r3
 800e8d2:	3708      	adds	r7, #8
 800e8d4:	46bd      	mov	sp, r7
 800e8d6:	bd80      	pop	{r7, pc}
 800e8d8:	08025bc8 	.word	0x08025bc8

0800e8dc <_ZN16FrontendHeapBaseD0Ev>:
 800e8dc:	b580      	push	{r7, lr}
 800e8de:	b082      	sub	sp, #8
 800e8e0:	af00      	add	r7, sp, #0
 800e8e2:	6078      	str	r0, [r7, #4]
 800e8e4:	6878      	ldr	r0, [r7, #4]
 800e8e6:	f7ff ffe7 	bl	800e8b8 <_ZN16FrontendHeapBaseD1Ev>
 800e8ea:	2114      	movs	r1, #20
 800e8ec:	6878      	ldr	r0, [r7, #4]
 800e8ee:	f014 fd70 	bl	80233d2 <_ZdlPvj>
 800e8f2:	687b      	ldr	r3, [r7, #4]
 800e8f4:	4618      	mov	r0, r3
 800e8f6:	3708      	adds	r7, #8
 800e8f8:	46bd      	mov	sp, r7
 800e8fa:	bd80      	pop	{r7, pc}

0800e8fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800e8fc:	b580      	push	{r7, lr}
 800e8fe:	b082      	sub	sp, #8
 800e900:	af00      	add	r7, sp, #0
 800e902:	6078      	str	r0, [r7, #4]
 800e904:	687b      	ldr	r3, [r7, #4]
 800e906:	4618      	mov	r0, r3
 800e908:	f000 fffe 	bl	800f908 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e90c:	4a03      	ldr	r2, [pc, #12]	; (800e91c <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e90e:	687b      	ldr	r3, [r7, #4]
 800e910:	601a      	str	r2, [r3, #0]
 800e912:	687b      	ldr	r3, [r7, #4]
 800e914:	4618      	mov	r0, r3
 800e916:	3708      	adds	r7, #8
 800e918:	46bd      	mov	sp, r7
 800e91a:	bd80      	pop	{r7, pc}
 800e91c:	08025b94 	.word	0x08025b94

0800e920 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800e920:	b580      	push	{r7, lr}
 800e922:	b082      	sub	sp, #8
 800e924:	af00      	add	r7, sp, #0
 800e926:	6078      	str	r0, [r7, #4]
 800e928:	687b      	ldr	r3, [r7, #4]
 800e92a:	4618      	mov	r0, r3
 800e92c:	f000 ffec 	bl	800f908 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e930:	4a03      	ldr	r2, [pc, #12]	; (800e940 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e932:	687b      	ldr	r3, [r7, #4]
 800e934:	601a      	str	r2, [r3, #0]
 800e936:	687b      	ldr	r3, [r7, #4]
 800e938:	4618      	mov	r0, r3
 800e93a:	3708      	adds	r7, #8
 800e93c:	46bd      	mov	sp, r7
 800e93e:	bd80      	pop	{r7, pc}
 800e940:	08025b60 	.word	0x08025b60

0800e944 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800e944:	b580      	push	{r7, lr}
 800e946:	b082      	sub	sp, #8
 800e948:	af00      	add	r7, sp, #0
 800e94a:	6078      	str	r0, [r7, #4]
 800e94c:	687b      	ldr	r3, [r7, #4]
 800e94e:	4618      	mov	r0, r3
 800e950:	f000 ffda 	bl	800f908 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800e954:	4a03      	ldr	r2, [pc, #12]	; (800e964 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800e956:	687b      	ldr	r3, [r7, #4]
 800e958:	601a      	str	r2, [r3, #0]
 800e95a:	687b      	ldr	r3, [r7, #4]
 800e95c:	4618      	mov	r0, r3
 800e95e:	3708      	adds	r7, #8
 800e960:	46bd      	mov	sp, r7
 800e962:	bd80      	pop	{r7, pc}
 800e964:	08025b2c 	.word	0x08025b2c

0800e968 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800e968:	b590      	push	{r4, r7, lr}
 800e96a:	b085      	sub	sp, #20
 800e96c:	af02      	add	r7, sp, #8
 800e96e:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800e970:	6878      	ldr	r0, [r7, #4]
 800e972:	687b      	ldr	r3, [r7, #4]
 800e974:	f103 0114 	add.w	r1, r3, #20
 800e978:	687b      	ldr	r3, [r7, #4]
 800e97a:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	f503 741f 	add.w	r4, r3, #636	; 0x27c
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800e984:	687b      	ldr	r3, [r7, #4]
 800e986:	f503 7325 	add.w	r3, r3, #660	; 0x294
                     app(model, *this)
 800e98a:	9300      	str	r3, [sp, #0]
 800e98c:	4623      	mov	r3, r4
 800e98e:	f7ff ff45 	bl	800e81c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800e992:	4a18      	ldr	r2, [pc, #96]	; (800e9f4 <_ZN12FrontendHeapC1Ev+0x8c>)
 800e994:	687b      	ldr	r3, [r7, #4]
 800e996:	601a      	str	r2, [r3, #0]
 800e998:	687b      	ldr	r3, [r7, #4]
 800e99a:	3314      	adds	r3, #20
 800e99c:	4618      	mov	r0, r3
 800e99e:	f7ff ffad 	bl	800e8fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e9a2:	687b      	ldr	r3, [r7, #4]
 800e9a4:	332c      	adds	r3, #44	; 0x2c
 800e9a6:	4618      	mov	r0, r3
 800e9a8:	f7ff ffba 	bl	800e920 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e9ac:	687b      	ldr	r3, [r7, #4]
 800e9ae:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 800e9b2:	4618      	mov	r0, r3
 800e9b4:	f7ff ffc6 	bl	800e944 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800e9b8:	687b      	ldr	r3, [r7, #4]
 800e9ba:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800e9be:	4618      	mov	r0, r3
 800e9c0:	f7fe ff56 	bl	800d870 <_ZN5ModelC1Ev>
 800e9c4:	687b      	ldr	r3, [r7, #4]
 800e9c6:	f503 7025 	add.w	r0, r3, #660	; 0x294
 800e9ca:	687b      	ldr	r3, [r7, #4]
 800e9cc:	f503 7324 	add.w	r3, r3, #656	; 0x290
 800e9d0:	687a      	ldr	r2, [r7, #4]
 800e9d2:	4619      	mov	r1, r3
 800e9d4:	f7fe ff36 	bl	800d844 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800e9d8:	687a      	ldr	r2, [r7, #4]
 800e9da:	687b      	ldr	r3, [r7, #4]
 800e9dc:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800e9e0:	4619      	mov	r1, r3
 800e9e2:	4610      	mov	r0, r2
 800e9e4:	f7ff ff0c 	bl	800e800 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800e9e8:	687b      	ldr	r3, [r7, #4]
 800e9ea:	4618      	mov	r0, r3
 800e9ec:	370c      	adds	r7, #12
 800e9ee:	46bd      	mov	sp, r7
 800e9f0:	bd90      	pop	{r4, r7, pc}
 800e9f2:	bf00      	nop
 800e9f4:	08025b18 	.word	0x08025b18

0800e9f8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800e9f8:	b580      	push	{r7, lr}
 800e9fa:	b086      	sub	sp, #24
 800e9fc:	af02      	add	r7, sp, #8
 800e9fe:	60f8      	str	r0, [r7, #12]
 800ea00:	60b9      	str	r1, [r7, #8]
 800ea02:	607a      	str	r2, [r7, #4]
 800ea04:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800ea06:	68f8      	ldr	r0, [r7, #12]
 800ea08:	8bbb      	ldrh	r3, [r7, #28]
 800ea0a:	9301      	str	r3, [sp, #4]
 800ea0c:	8b3b      	ldrh	r3, [r7, #24]
 800ea0e:	9300      	str	r3, [sp, #0]
 800ea10:	683b      	ldr	r3, [r7, #0]
 800ea12:	687a      	ldr	r2, [r7, #4]
 800ea14:	68b9      	ldr	r1, [r7, #8]
 800ea16:	f7ff fe33 	bl	800e680 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800ea1a:	4a04      	ldr	r2, [pc, #16]	; (800ea2c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800ea1c:	68fb      	ldr	r3, [r7, #12]
 800ea1e:	601a      	str	r2, [r3, #0]
    }
 800ea20:	68fb      	ldr	r3, [r7, #12]
 800ea22:	4618      	mov	r0, r3
 800ea24:	3710      	adds	r7, #16
 800ea26:	46bd      	mov	sp, r7
 800ea28:	bd80      	pop	{r7, pc}
 800ea2a:	bf00      	nop
 800ea2c:	08025c18 	.word	0x08025c18

0800ea30 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800ea30:	b580      	push	{r7, lr}
 800ea32:	b086      	sub	sp, #24
 800ea34:	af02      	add	r7, sp, #8
 800ea36:	60f8      	str	r0, [r7, #12]
 800ea38:	60b9      	str	r1, [r7, #8]
 800ea3a:	607a      	str	r2, [r7, #4]
 800ea3c:	603b      	str	r3, [r7, #0]
 800ea3e:	68f8      	ldr	r0, [r7, #12]
 800ea40:	8bbb      	ldrh	r3, [r7, #28]
 800ea42:	9301      	str	r3, [sp, #4]
 800ea44:	8b3b      	ldrh	r3, [r7, #24]
 800ea46:	9300      	str	r3, [sp, #0]
 800ea48:	683b      	ldr	r3, [r7, #0]
 800ea4a:	687a      	ldr	r2, [r7, #4]
 800ea4c:	68b9      	ldr	r1, [r7, #8]
 800ea4e:	f7ff ffd3 	bl	800e9f8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800ea52:	4a04      	ldr	r2, [pc, #16]	; (800ea64 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800ea54:	68fb      	ldr	r3, [r7, #12]
 800ea56:	601a      	str	r2, [r3, #0]
    }
 800ea58:	68fb      	ldr	r3, [r7, #12]
 800ea5a:	4618      	mov	r0, r3
 800ea5c:	3710      	adds	r7, #16
 800ea5e:	46bd      	mov	sp, r7
 800ea60:	bd80      	pop	{r7, pc}
 800ea62:	bf00      	nop
 800ea64:	080259cc 	.word	0x080259cc

0800ea68 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800ea68:	b480      	push	{r7}
 800ea6a:	b083      	sub	sp, #12
 800ea6c:	af00      	add	r7, sp, #0
 800ea6e:	6078      	str	r0, [r7, #4]
 800ea70:	4a04      	ldr	r2, [pc, #16]	; (800ea84 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800ea72:	687b      	ldr	r3, [r7, #4]
 800ea74:	601a      	str	r2, [r3, #0]
 800ea76:	687b      	ldr	r3, [r7, #4]
 800ea78:	4618      	mov	r0, r3
 800ea7a:	370c      	adds	r7, #12
 800ea7c:	46bd      	mov	sp, r7
 800ea7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea82:	4770      	bx	lr
 800ea84:	080259b4 	.word	0x080259b4

0800ea88 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800ea88:	b580      	push	{r7, lr}
 800ea8a:	b082      	sub	sp, #8
 800ea8c:	af00      	add	r7, sp, #0
 800ea8e:	6078      	str	r0, [r7, #4]
 800ea90:	687b      	ldr	r3, [r7, #4]
 800ea92:	4618      	mov	r0, r3
 800ea94:	f7ff ffe8 	bl	800ea68 <_ZN8touchgfx15TouchControllerC1Ev>
 800ea98:	4a03      	ldr	r2, [pc, #12]	; (800eaa8 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800ea9a:	687b      	ldr	r3, [r7, #4]
 800ea9c:	601a      	str	r2, [r3, #0]
 800ea9e:	687b      	ldr	r3, [r7, #4]
 800eaa0:	4618      	mov	r0, r3
 800eaa2:	3708      	adds	r7, #8
 800eaa4:	46bd      	mov	sp, r7
 800eaa6:	bd80      	pop	{r7, pc}
 800eaa8:	0802599c 	.word	0x0802599c

0800eaac <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 800eaac:	b590      	push	{r4, r7, lr}
 800eaae:	b085      	sub	sp, #20
 800eab0:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800eab2:	f7fe fc91 	bl	800d3d8 <_ZN14BitmapDatabase11getInstanceEv>
 800eab6:	4604      	mov	r4, r0
 800eab8:	f7fe fc98 	bl	800d3ec <_ZN14BitmapDatabase15getInstanceSizeEv>
 800eabc:	4603      	mov	r3, r0
 800eabe:	4619      	mov	r1, r3
 800eac0:	2300      	movs	r3, #0
 800eac2:	9300      	str	r3, [sp, #0]
 800eac4:	2300      	movs	r3, #0
 800eac6:	2200      	movs	r2, #0
 800eac8:	4620      	mov	r0, r4
 800eaca:	f007 f827 	bl	8015b1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800eace:	4809      	ldr	r0, [pc, #36]	; (800eaf4 <touchgfx_init+0x48>)
 800ead0:	f7ff fd30 	bl	800e534 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800ead4:	2000      	movs	r0, #0
 800ead6:	f7fe fdcd 	bl	800d674 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800eada:	4807      	ldr	r0, [pc, #28]	; (800eaf8 <touchgfx_init+0x4c>)
 800eadc:	f006 ff86 	bl	80159ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800eae0:	f7ff febe 	bl	800e860 <_ZN12FrontendHeap11getInstanceEv>
 800eae4:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800eae6:	4805      	ldr	r0, [pc, #20]	; (800eafc <touchgfx_init+0x50>)
 800eae8:	f7ff fa54 	bl	800df94 <_ZN11TouchGFXHAL10initializeEv>
}
 800eaec:	bf00      	nop
 800eaee:	370c      	adds	r7, #12
 800eaf0:	46bd      	mov	sp, r7
 800eaf2:	bd90      	pop	{r4, r7, pc}
 800eaf4:	24000940 	.word	0x24000940
 800eaf8:	24000014 	.word	0x24000014
 800eafc:	24000944 	.word	0x24000944

0800eb00 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800eb00:	b480      	push	{r7}
 800eb02:	af00      	add	r7, sp, #0
}
 800eb04:	bf00      	nop
 800eb06:	46bd      	mov	sp, r7
 800eb08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb0c:	4770      	bx	lr
	...

0800eb10 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800eb10:	b580      	push	{r7, lr}
 800eb12:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 800eb14:	f7ff fba6 	bl	800e264 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800eb18:	4603      	mov	r3, r0
 800eb1a:	2b00      	cmp	r3, #0
 800eb1c:	d002      	beq.n	800eb24 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 800eb1e:	4802      	ldr	r0, [pc, #8]	; (800eb28 <touchgfx_taskEntry+0x18>)
 800eb20:	f7ff f91e 	bl	800dd60 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 800eb24:	bf00      	nop
 800eb26:	bd80      	pop	{r7, pc}
 800eb28:	24000944 	.word	0x24000944

0800eb2c <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800eb2c:	b580      	push	{r7, lr}
 800eb2e:	b082      	sub	sp, #8
 800eb30:	af00      	add	r7, sp, #0
 800eb32:	6078      	str	r0, [r7, #4]
 800eb34:	4a10      	ldr	r2, [pc, #64]	; (800eb78 <_ZN12FrontendHeapD1Ev+0x4c>)
 800eb36:	687b      	ldr	r3, [r7, #4]
 800eb38:	601a      	str	r2, [r3, #0]
 800eb3a:	687b      	ldr	r3, [r7, #4]
 800eb3c:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800eb40:	4618      	mov	r0, r3
 800eb42:	f7fe fe49 	bl	800d7d8 <_ZN19FrontendApplicationD1Ev>
 800eb46:	687b      	ldr	r3, [r7, #4]
 800eb48:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 800eb4c:	4618      	mov	r0, r3
 800eb4e:	f000 f827 	bl	800eba0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800eb52:	687b      	ldr	r3, [r7, #4]
 800eb54:	332c      	adds	r3, #44	; 0x2c
 800eb56:	4618      	mov	r0, r3
 800eb58:	f000 f844 	bl	800ebe4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800eb5c:	687b      	ldr	r3, [r7, #4]
 800eb5e:	3314      	adds	r3, #20
 800eb60:	4618      	mov	r0, r3
 800eb62:	f000 f863 	bl	800ec2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800eb66:	687b      	ldr	r3, [r7, #4]
 800eb68:	4618      	mov	r0, r3
 800eb6a:	f7ff fea5 	bl	800e8b8 <_ZN16FrontendHeapBaseD1Ev>
 800eb6e:	687b      	ldr	r3, [r7, #4]
 800eb70:	4618      	mov	r0, r3
 800eb72:	3708      	adds	r7, #8
 800eb74:	46bd      	mov	sp, r7
 800eb76:	bd80      	pop	{r7, pc}
 800eb78:	08025b18 	.word	0x08025b18

0800eb7c <_ZN12FrontendHeapD0Ev>:
 800eb7c:	b580      	push	{r7, lr}
 800eb7e:	b082      	sub	sp, #8
 800eb80:	af00      	add	r7, sp, #0
 800eb82:	6078      	str	r0, [r7, #4]
 800eb84:	6878      	ldr	r0, [r7, #4]
 800eb86:	f7ff ffd1 	bl	800eb2c <_ZN12FrontendHeapD1Ev>
 800eb8a:	f44f 717c 	mov.w	r1, #1008	; 0x3f0
 800eb8e:	6878      	ldr	r0, [r7, #4]
 800eb90:	f014 fc1f 	bl	80233d2 <_ZdlPvj>
 800eb94:	687b      	ldr	r3, [r7, #4]
 800eb96:	4618      	mov	r0, r3
 800eb98:	3708      	adds	r7, #8
 800eb9a:	46bd      	mov	sp, r7
 800eb9c:	bd80      	pop	{r7, pc}
	...

0800eba0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800eba0:	b580      	push	{r7, lr}
 800eba2:	b082      	sub	sp, #8
 800eba4:	af00      	add	r7, sp, #0
 800eba6:	6078      	str	r0, [r7, #4]
 800eba8:	4a05      	ldr	r2, [pc, #20]	; (800ebc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800ebaa:	687b      	ldr	r3, [r7, #4]
 800ebac:	601a      	str	r2, [r3, #0]
 800ebae:	687b      	ldr	r3, [r7, #4]
 800ebb0:	4618      	mov	r0, r3
 800ebb2:	f000 fea8 	bl	800f906 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800ebb6:	687b      	ldr	r3, [r7, #4]
 800ebb8:	4618      	mov	r0, r3
 800ebba:	3708      	adds	r7, #8
 800ebbc:	46bd      	mov	sp, r7
 800ebbe:	bd80      	pop	{r7, pc}
 800ebc0:	08025b2c 	.word	0x08025b2c

0800ebc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800ebc4:	b580      	push	{r7, lr}
 800ebc6:	b082      	sub	sp, #8
 800ebc8:	af00      	add	r7, sp, #0
 800ebca:	6078      	str	r0, [r7, #4]
 800ebcc:	6878      	ldr	r0, [r7, #4]
 800ebce:	f7ff ffe7 	bl	800eba0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800ebd2:	2114      	movs	r1, #20
 800ebd4:	6878      	ldr	r0, [r7, #4]
 800ebd6:	f014 fbfc 	bl	80233d2 <_ZdlPvj>
 800ebda:	687b      	ldr	r3, [r7, #4]
 800ebdc:	4618      	mov	r0, r3
 800ebde:	3708      	adds	r7, #8
 800ebe0:	46bd      	mov	sp, r7
 800ebe2:	bd80      	pop	{r7, pc}

0800ebe4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800ebe4:	b580      	push	{r7, lr}
 800ebe6:	b082      	sub	sp, #8
 800ebe8:	af00      	add	r7, sp, #0
 800ebea:	6078      	str	r0, [r7, #4]
 800ebec:	4a05      	ldr	r2, [pc, #20]	; (800ec04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800ebee:	687b      	ldr	r3, [r7, #4]
 800ebf0:	601a      	str	r2, [r3, #0]
 800ebf2:	687b      	ldr	r3, [r7, #4]
 800ebf4:	4618      	mov	r0, r3
 800ebf6:	f000 fe86 	bl	800f906 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800ebfa:	687b      	ldr	r3, [r7, #4]
 800ebfc:	4618      	mov	r0, r3
 800ebfe:	3708      	adds	r7, #8
 800ec00:	46bd      	mov	sp, r7
 800ec02:	bd80      	pop	{r7, pc}
 800ec04:	08025b60 	.word	0x08025b60

0800ec08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800ec08:	b580      	push	{r7, lr}
 800ec0a:	b082      	sub	sp, #8
 800ec0c:	af00      	add	r7, sp, #0
 800ec0e:	6078      	str	r0, [r7, #4]
 800ec10:	6878      	ldr	r0, [r7, #4]
 800ec12:	f7ff ffe7 	bl	800ebe4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800ec16:	f44f 7114 	mov.w	r1, #592	; 0x250
 800ec1a:	6878      	ldr	r0, [r7, #4]
 800ec1c:	f014 fbd9 	bl	80233d2 <_ZdlPvj>
 800ec20:	687b      	ldr	r3, [r7, #4]
 800ec22:	4618      	mov	r0, r3
 800ec24:	3708      	adds	r7, #8
 800ec26:	46bd      	mov	sp, r7
 800ec28:	bd80      	pop	{r7, pc}
	...

0800ec2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800ec2c:	b580      	push	{r7, lr}
 800ec2e:	b082      	sub	sp, #8
 800ec30:	af00      	add	r7, sp, #0
 800ec32:	6078      	str	r0, [r7, #4]
 800ec34:	4a05      	ldr	r2, [pc, #20]	; (800ec4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800ec36:	687b      	ldr	r3, [r7, #4]
 800ec38:	601a      	str	r2, [r3, #0]
 800ec3a:	687b      	ldr	r3, [r7, #4]
 800ec3c:	4618      	mov	r0, r3
 800ec3e:	f000 fe62 	bl	800f906 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800ec42:	687b      	ldr	r3, [r7, #4]
 800ec44:	4618      	mov	r0, r3
 800ec46:	3708      	adds	r7, #8
 800ec48:	46bd      	mov	sp, r7
 800ec4a:	bd80      	pop	{r7, pc}
 800ec4c:	08025b94 	.word	0x08025b94

0800ec50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800ec50:	b580      	push	{r7, lr}
 800ec52:	b082      	sub	sp, #8
 800ec54:	af00      	add	r7, sp, #0
 800ec56:	6078      	str	r0, [r7, #4]
 800ec58:	6878      	ldr	r0, [r7, #4]
 800ec5a:	f7ff ffe7 	bl	800ec2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800ec5e:	2118      	movs	r1, #24
 800ec60:	6878      	ldr	r0, [r7, #4]
 800ec62:	f014 fbb6 	bl	80233d2 <_ZdlPvj>
 800ec66:	687b      	ldr	r3, [r7, #4]
 800ec68:	4618      	mov	r0, r3
 800ec6a:	3708      	adds	r7, #8
 800ec6c:	46bd      	mov	sp, r7
 800ec6e:	bd80      	pop	{r7, pc}

0800ec70 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800ec70:	b580      	push	{r7, lr}
 800ec72:	b082      	sub	sp, #8
 800ec74:	af00      	add	r7, sp, #0
 800ec76:	6078      	str	r0, [r7, #4]
 800ec78:	4a05      	ldr	r2, [pc, #20]	; (800ec90 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800ec7a:	687b      	ldr	r3, [r7, #4]
 800ec7c:	601a      	str	r2, [r3, #0]
 800ec7e:	687b      	ldr	r3, [r7, #4]
 800ec80:	4618      	mov	r0, r3
 800ec82:	f7ff fca7 	bl	800e5d4 <_ZN8touchgfx3LCDD1Ev>
 800ec86:	687b      	ldr	r3, [r7, #4]
 800ec88:	4618      	mov	r0, r3
 800ec8a:	3708      	adds	r7, #8
 800ec8c:	46bd      	mov	sp, r7
 800ec8e:	bd80      	pop	{r7, pc}
 800ec90:	080265f0 	.word	0x080265f0

0800ec94 <_ZN8touchgfx8LCD16bppD0Ev>:
 800ec94:	b580      	push	{r7, lr}
 800ec96:	b082      	sub	sp, #8
 800ec98:	af00      	add	r7, sp, #0
 800ec9a:	6078      	str	r0, [r7, #4]
 800ec9c:	6878      	ldr	r0, [r7, #4]
 800ec9e:	f7ff ffe7 	bl	800ec70 <_ZN8touchgfx8LCD16bppD1Ev>
 800eca2:	2184      	movs	r1, #132	; 0x84
 800eca4:	6878      	ldr	r0, [r7, #4]
 800eca6:	f014 fb94 	bl	80233d2 <_ZdlPvj>
 800ecaa:	687b      	ldr	r3, [r7, #4]
 800ecac:	4618      	mov	r0, r3
 800ecae:	3708      	adds	r7, #8
 800ecb0:	46bd      	mov	sp, r7
 800ecb2:	bd80      	pop	{r7, pc}

0800ecb4 <_Z41__static_initialization_and_destruction_0ii>:
 800ecb4:	b580      	push	{r7, lr}
 800ecb6:	b084      	sub	sp, #16
 800ecb8:	af02      	add	r7, sp, #8
 800ecba:	6078      	str	r0, [r7, #4]
 800ecbc:	6039      	str	r1, [r7, #0]
 800ecbe:	687b      	ldr	r3, [r7, #4]
 800ecc0:	2b01      	cmp	r3, #1
 800ecc2:	d118      	bne.n	800ecf6 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800ecc4:	683b      	ldr	r3, [r7, #0]
 800ecc6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ecca:	4293      	cmp	r3, r2
 800eccc:	d113      	bne.n	800ecf6 <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800ecce:	4817      	ldr	r0, [pc, #92]	; (800ed2c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800ecd0:	f7ff feda 	bl	800ea88 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800ecd4:	4816      	ldr	r0, [pc, #88]	; (800ed30 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ecd6:	f7ff fb8f 	bl	800e3f8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800ecda:	4816      	ldr	r0, [pc, #88]	; (800ed34 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ecdc:	f00b f9f0 	bl	801a0c0 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 800ece0:	23f0      	movs	r3, #240	; 0xf0
 800ece2:	9301      	str	r3, [sp, #4]
 800ece4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800ece8:	9300      	str	r3, [sp, #0]
 800ecea:	4b10      	ldr	r3, [pc, #64]	; (800ed2c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800ecec:	4a11      	ldr	r2, [pc, #68]	; (800ed34 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ecee:	4910      	ldr	r1, [pc, #64]	; (800ed30 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ecf0:	4811      	ldr	r0, [pc, #68]	; (800ed38 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800ecf2:	f7ff fe9d 	bl	800ea30 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800ecf6:	687b      	ldr	r3, [r7, #4]
 800ecf8:	2b00      	cmp	r3, #0
 800ecfa:	d113      	bne.n	800ed24 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800ecfc:	683b      	ldr	r3, [r7, #0]
 800ecfe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ed02:	4293      	cmp	r3, r2
 800ed04:	d10e      	bne.n	800ed24 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800ed06:	480c      	ldr	r0, [pc, #48]	; (800ed38 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800ed08:	f7ff f9d4 	bl	800e0b4 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800ed0c:	480b      	ldr	r0, [pc, #44]	; (800ed3c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800ed0e:	f7fc fb6b 	bl	800b3e8 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800ed12:	4808      	ldr	r0, [pc, #32]	; (800ed34 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800ed14:	f7ff ffac 	bl	800ec70 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800ed18:	4805      	ldr	r0, [pc, #20]	; (800ed30 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800ed1a:	f7ff fbc1 	bl	800e4a0 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800ed1e:	4803      	ldr	r0, [pc, #12]	; (800ed2c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800ed20:	f7fe ff24 	bl	800db6c <_ZN20STM32TouchControllerD1Ev>
}
 800ed24:	bf00      	nop
 800ed26:	3708      	adds	r7, #8
 800ed28:	46bd      	mov	sp, r7
 800ed2a:	bd80      	pop	{r7, pc}
 800ed2c:	24000874 	.word	0x24000874
 800ed30:	24000878 	.word	0x24000878
 800ed34:	240008bc 	.word	0x240008bc
 800ed38:	24000944 	.word	0x24000944
 800ed3c:	24000014 	.word	0x24000014

0800ed40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800ed40:	b480      	push	{r7}
 800ed42:	b083      	sub	sp, #12
 800ed44:	af00      	add	r7, sp, #0
 800ed46:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800ed48:	2301      	movs	r3, #1
    }
 800ed4a:	4618      	mov	r0, r3
 800ed4c:	370c      	adds	r7, #12
 800ed4e:	46bd      	mov	sp, r7
 800ed50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed54:	4770      	bx	lr

0800ed56 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800ed56:	b480      	push	{r7}
 800ed58:	b083      	sub	sp, #12
 800ed5a:	af00      	add	r7, sp, #0
 800ed5c:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800ed5e:	230c      	movs	r3, #12
    }
 800ed60:	4618      	mov	r0, r3
 800ed62:	370c      	adds	r7, #12
 800ed64:	46bd      	mov	sp, r7
 800ed66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed6a:	4770      	bx	lr

0800ed6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800ed6c:	b480      	push	{r7}
 800ed6e:	b083      	sub	sp, #12
 800ed70:	af00      	add	r7, sp, #0
 800ed72:	6078      	str	r0, [r7, #4]
 800ed74:	460b      	mov	r3, r1
 800ed76:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800ed78:	887a      	ldrh	r2, [r7, #2]
 800ed7a:	4613      	mov	r3, r2
 800ed7c:	005b      	lsls	r3, r3, #1
 800ed7e:	4413      	add	r3, r2
 800ed80:	009b      	lsls	r3, r3, #2
 800ed82:	3308      	adds	r3, #8
 800ed84:	687a      	ldr	r2, [r7, #4]
 800ed86:	4413      	add	r3, r2
    }
 800ed88:	4618      	mov	r0, r3
 800ed8a:	370c      	adds	r7, #12
 800ed8c:	46bd      	mov	sp, r7
 800ed8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed92:	4770      	bx	lr

0800ed94 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800ed94:	b480      	push	{r7}
 800ed96:	b083      	sub	sp, #12
 800ed98:	af00      	add	r7, sp, #0
 800ed9a:	6078      	str	r0, [r7, #4]
 800ed9c:	460b      	mov	r3, r1
 800ed9e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800eda0:	887a      	ldrh	r2, [r7, #2]
 800eda2:	4613      	mov	r3, r2
 800eda4:	005b      	lsls	r3, r3, #1
 800eda6:	4413      	add	r3, r2
 800eda8:	009b      	lsls	r3, r3, #2
 800edaa:	3308      	adds	r3, #8
 800edac:	687a      	ldr	r2, [r7, #4]
 800edae:	4413      	add	r3, r2
    }
 800edb0:	4618      	mov	r0, r3
 800edb2:	370c      	adds	r7, #12
 800edb4:	46bd      	mov	sp, r7
 800edb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edba:	4770      	bx	lr

0800edbc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800edbc:	b480      	push	{r7}
 800edbe:	b083      	sub	sp, #12
 800edc0:	af00      	add	r7, sp, #0
 800edc2:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800edc4:	2301      	movs	r3, #1
    }
 800edc6:	4618      	mov	r0, r3
 800edc8:	370c      	adds	r7, #12
 800edca:	46bd      	mov	sp, r7
 800edcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edd0:	4770      	bx	lr

0800edd2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800edd2:	b480      	push	{r7}
 800edd4:	b083      	sub	sp, #12
 800edd6:	af00      	add	r7, sp, #0
 800edd8:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800edda:	f44f 7312 	mov.w	r3, #584	; 0x248
    }
 800edde:	4618      	mov	r0, r3
 800ede0:	370c      	adds	r7, #12
 800ede2:	46bd      	mov	sp, r7
 800ede4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ede8:	4770      	bx	lr

0800edea <_ZN8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800edea:	b480      	push	{r7}
 800edec:	b083      	sub	sp, #12
 800edee:	af00      	add	r7, sp, #0
 800edf0:	6078      	str	r0, [r7, #4]
 800edf2:	460b      	mov	r3, r1
 800edf4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800edf6:	887b      	ldrh	r3, [r7, #2]
 800edf8:	f44f 7212 	mov.w	r2, #584	; 0x248
 800edfc:	fb02 f303 	mul.w	r3, r2, r3
 800ee00:	3308      	adds	r3, #8
 800ee02:	687a      	ldr	r2, [r7, #4]
 800ee04:	4413      	add	r3, r2
    }
 800ee06:	4618      	mov	r0, r3
 800ee08:	370c      	adds	r7, #12
 800ee0a:	46bd      	mov	sp, r7
 800ee0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee10:	4770      	bx	lr

0800ee12 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19screen_settingsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800ee12:	b480      	push	{r7}
 800ee14:	b083      	sub	sp, #12
 800ee16:	af00      	add	r7, sp, #0
 800ee18:	6078      	str	r0, [r7, #4]
 800ee1a:	460b      	mov	r3, r1
 800ee1c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ee1e:	887b      	ldrh	r3, [r7, #2]
 800ee20:	f44f 7212 	mov.w	r2, #584	; 0x248
 800ee24:	fb02 f303 	mul.w	r3, r2, r3
 800ee28:	3308      	adds	r3, #8
 800ee2a:	687a      	ldr	r2, [r7, #4]
 800ee2c:	4413      	add	r3, r2
    }
 800ee2e:	4618      	mov	r0, r3
 800ee30:	370c      	adds	r7, #12
 800ee32:	46bd      	mov	sp, r7
 800ee34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee38:	4770      	bx	lr

0800ee3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800ee3a:	b480      	push	{r7}
 800ee3c:	b083      	sub	sp, #12
 800ee3e:	af00      	add	r7, sp, #0
 800ee40:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800ee42:	2301      	movs	r3, #1
    }
 800ee44:	4618      	mov	r0, r3
 800ee46:	370c      	adds	r7, #12
 800ee48:	46bd      	mov	sp, r7
 800ee4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee4e:	4770      	bx	lr

0800ee50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800ee50:	b480      	push	{r7}
 800ee52:	b083      	sub	sp, #12
 800ee54:	af00      	add	r7, sp, #0
 800ee56:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800ee58:	2310      	movs	r3, #16
    }
 800ee5a:	4618      	mov	r0, r3
 800ee5c:	370c      	adds	r7, #12
 800ee5e:	46bd      	mov	sp, r7
 800ee60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee64:	4770      	bx	lr

0800ee66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800ee66:	b480      	push	{r7}
 800ee68:	b083      	sub	sp, #12
 800ee6a:	af00      	add	r7, sp, #0
 800ee6c:	6078      	str	r0, [r7, #4]
 800ee6e:	460b      	mov	r3, r1
 800ee70:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ee72:	887b      	ldrh	r3, [r7, #2]
 800ee74:	011b      	lsls	r3, r3, #4
 800ee76:	3308      	adds	r3, #8
 800ee78:	687a      	ldr	r2, [r7, #4]
 800ee7a:	4413      	add	r3, r2
    }
 800ee7c:	4618      	mov	r0, r3
 800ee7e:	370c      	adds	r7, #12
 800ee80:	46bd      	mov	sp, r7
 800ee82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee86:	4770      	bx	lr

0800ee88 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI24screen_settingsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800ee88:	b480      	push	{r7}
 800ee8a:	b083      	sub	sp, #12
 800ee8c:	af00      	add	r7, sp, #0
 800ee8e:	6078      	str	r0, [r7, #4]
 800ee90:	460b      	mov	r3, r1
 800ee92:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800ee94:	887b      	ldrh	r3, [r7, #2]
 800ee96:	011b      	lsls	r3, r3, #4
 800ee98:	3308      	adds	r3, #8
 800ee9a:	687a      	ldr	r2, [r7, #4]
 800ee9c:	4413      	add	r3, r2
    }
 800ee9e:	4618      	mov	r0, r3
 800eea0:	370c      	adds	r7, #12
 800eea2:	46bd      	mov	sp, r7
 800eea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eea8:	4770      	bx	lr

0800eeaa <_GLOBAL__sub_I_touchgfx_init>:
 800eeaa:	b580      	push	{r7, lr}
 800eeac:	af00      	add	r7, sp, #0
 800eeae:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800eeb2:	2001      	movs	r0, #1
 800eeb4:	f7ff fefe 	bl	800ecb4 <_Z41__static_initialization_and_destruction_0ii>
 800eeb8:	bd80      	pop	{r7, pc}

0800eeba <_GLOBAL__sub_D_touchgfx_init>:
 800eeba:	b580      	push	{r7, lr}
 800eebc:	af00      	add	r7, sp, #0
 800eebe:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800eec2:	2000      	movs	r0, #0
 800eec4:	f7ff fef6 	bl	800ecb4 <_Z41__static_initialization_and_destruction_0ii>
 800eec8:	bd80      	pop	{r7, pc}
	...

0800eecc <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800eecc:	b480      	push	{r7}
 800eece:	b083      	sub	sp, #12
 800eed0:	af00      	add	r7, sp, #0
 800eed2:	6078      	str	r0, [r7, #4]
    {
 800eed4:	4a04      	ldr	r2, [pc, #16]	; (800eee8 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800eed6:	687b      	ldr	r3, [r7, #4]
 800eed8:	601a      	str	r2, [r3, #0]
    }
 800eeda:	687b      	ldr	r3, [r7, #4]
 800eedc:	4618      	mov	r0, r3
 800eede:	370c      	adds	r7, #12
 800eee0:	46bd      	mov	sp, r7
 800eee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eee6:	4770      	bx	lr
 800eee8:	08025cf0 	.word	0x08025cf0

0800eeec <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800eeec:	b580      	push	{r7, lr}
 800eeee:	b082      	sub	sp, #8
 800eef0:	af00      	add	r7, sp, #0
 800eef2:	6078      	str	r0, [r7, #4]
    }
 800eef4:	6878      	ldr	r0, [r7, #4]
 800eef6:	f7ff ffe9 	bl	800eecc <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800eefa:	2104      	movs	r1, #4
 800eefc:	6878      	ldr	r0, [r7, #4]
 800eefe:	f014 fa68 	bl	80233d2 <_ZdlPvj>
 800ef02:	687b      	ldr	r3, [r7, #4]
 800ef04:	4618      	mov	r0, r3
 800ef06:	3708      	adds	r7, #8
 800ef08:	46bd      	mov	sp, r7
 800ef0a:	bd80      	pop	{r7, pc}

0800ef0c <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800ef0c:	b480      	push	{r7}
 800ef0e:	b083      	sub	sp, #12
 800ef10:	af00      	add	r7, sp, #0
 800ef12:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800ef14:	687b      	ldr	r3, [r7, #4]
 800ef16:	f893 306a 	ldrb.w	r3, [r3, #106]	; 0x6a
 800ef1a:	3301      	adds	r3, #1
 800ef1c:	b2da      	uxtb	r2, r3
 800ef1e:	687b      	ldr	r3, [r7, #4]
 800ef20:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
    }
 800ef24:	bf00      	nop
 800ef26:	370c      	adds	r7, #12
 800ef28:	46bd      	mov	sp, r7
 800ef2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef2e:	4770      	bx	lr

0800ef30 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800ef30:	b480      	push	{r7}
 800ef32:	b083      	sub	sp, #12
 800ef34:	af00      	add	r7, sp, #0
 800ef36:	6078      	str	r0, [r7, #4]
 800ef38:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 800ef3a:	687b      	ldr	r3, [r7, #4]
 800ef3c:	683a      	ldr	r2, [r7, #0]
 800ef3e:	619a      	str	r2, [r3, #24]
    }
 800ef40:	bf00      	nop
 800ef42:	370c      	adds	r7, #12
 800ef44:	46bd      	mov	sp, r7
 800ef46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef4a:	4770      	bx	lr

0800ef4c <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 800ef4c:	b480      	push	{r7}
 800ef4e:	b083      	sub	sp, #12
 800ef50:	af00      	add	r7, sp, #0
 800ef52:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 800ef54:	687b      	ldr	r3, [r7, #4]
 800ef56:	699b      	ldr	r3, [r3, #24]
    }
 800ef58:	4618      	mov	r0, r3
 800ef5a:	370c      	adds	r7, #12
 800ef5c:	46bd      	mov	sp, r7
 800ef5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef62:	4770      	bx	lr

0800ef64 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800ef64:	b580      	push	{r7, lr}
 800ef66:	b082      	sub	sp, #8
 800ef68:	af00      	add	r7, sp, #0
 800ef6a:	6078      	str	r0, [r7, #4]
 800ef6c:	460b      	mov	r3, r1
 800ef6e:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800ef70:	78fb      	ldrb	r3, [r7, #3]
 800ef72:	2b00      	cmp	r3, #0
 800ef74:	d002      	beq.n	800ef7c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800ef76:	78fb      	ldrb	r3, [r7, #3]
 800ef78:	2b02      	cmp	r3, #2
 800ef7a:	d105      	bne.n	800ef88 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800ef7c:	687b      	ldr	r3, [r7, #4]
 800ef7e:	78fa      	ldrb	r2, [r7, #3]
 800ef80:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800ef84:	2301      	movs	r3, #1
 800ef86:	e027      	b.n	800efd8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800ef88:	78fb      	ldrb	r3, [r7, #3]
 800ef8a:	2b01      	cmp	r3, #1
 800ef8c:	d123      	bne.n	800efd6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800ef8e:	687b      	ldr	r3, [r7, #4]
 800ef90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ef92:	2b00      	cmp	r3, #0
 800ef94:	d014      	beq.n	800efc0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ef96:	687b      	ldr	r3, [r7, #4]
 800ef98:	681b      	ldr	r3, [r3, #0]
 800ef9a:	339c      	adds	r3, #156	; 0x9c
 800ef9c:	681b      	ldr	r3, [r3, #0]
 800ef9e:	6878      	ldr	r0, [r7, #4]
 800efa0:	4798      	blx	r3
 800efa2:	4603      	mov	r3, r0
 800efa4:	461a      	mov	r2, r3
 800efa6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800efaa:	429a      	cmp	r2, r3
 800efac:	d008      	beq.n	800efc0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800efae:	4b0c      	ldr	r3, [pc, #48]	; (800efe0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800efb0:	781b      	ldrb	r3, [r3, #0]
 800efb2:	f083 0301 	eor.w	r3, r3, #1
 800efb6:	b2db      	uxtb	r3, r3
 800efb8:	2b00      	cmp	r3, #0
 800efba:	d001      	beq.n	800efc0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800efbc:	2301      	movs	r3, #1
 800efbe:	e000      	b.n	800efc2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800efc0:	2300      	movs	r3, #0
 800efc2:	2b00      	cmp	r3, #0
 800efc4:	d005      	beq.n	800efd2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800efc6:	687b      	ldr	r3, [r7, #4]
 800efc8:	78fa      	ldrb	r2, [r7, #3]
 800efca:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800efce:	2301      	movs	r3, #1
 800efd0:	e002      	b.n	800efd8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800efd2:	2300      	movs	r3, #0
 800efd4:	e000      	b.n	800efd8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800efd6:	2300      	movs	r3, #0
    }
 800efd8:	4618      	mov	r0, r3
 800efda:	3708      	adds	r7, #8
 800efdc:	46bd      	mov	sp, r7
 800efde:	bd80      	pop	{r7, pc}
 800efe0:	24002072 	.word	0x24002072

0800efe4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
                   3, /* number of blocks */
                   2  /* bytes per pixel */
                   > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800efe4:	b5b0      	push	{r4, r5, r7, lr}
 800efe6:	b082      	sub	sp, #8
 800efe8:	af00      	add	r7, sp, #0
 800efea:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800efec:	687b      	ldr	r3, [r7, #4]
 800efee:	4618      	mov	r0, r3
 800eff0:	f000 ff81 	bl	800fef6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800eff4:	687d      	ldr	r5, [r7, #4]
 800eff6:	687b      	ldr	r3, [r7, #4]
 800eff8:	681b      	ldr	r3, [r3, #0]
 800effa:	3364      	adds	r3, #100	; 0x64
 800effc:	681c      	ldr	r4, [r3, #0]
 800effe:	f004 f8c5 	bl	801318c <_ZN8touchgfx11Application11getInstanceEv>
 800f002:	4603      	mov	r3, r0
 800f004:	4619      	mov	r1, r3
 800f006:	4628      	mov	r0, r5
 800f008:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800f00a:	687b      	ldr	r3, [r7, #4]
 800f00c:	681b      	ldr	r3, [r3, #0]
 800f00e:	3380      	adds	r3, #128	; 0x80
 800f010:	681b      	ldr	r3, [r3, #0]
 800f012:	6878      	ldr	r0, [r7, #4]
 800f014:	4798      	blx	r3
    enableInterrupts();
 800f016:	687b      	ldr	r3, [r7, #4]
 800f018:	681b      	ldr	r3, [r3, #0]
 800f01a:	3378      	adds	r3, #120	; 0x78
 800f01c:	681b      	ldr	r3, [r3, #0]
 800f01e:	6878      	ldr	r0, [r7, #4]
 800f020:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800f022:	687b      	ldr	r3, [r7, #4]
 800f024:	4906      	ldr	r1, [pc, #24]	; (800f040 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800f026:	4618      	mov	r0, r3
 800f028:	f7ff ff82 	bl	800ef30 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800f02c:	687b      	ldr	r3, [r7, #4]
 800f02e:	2102      	movs	r1, #2
 800f030:	4618      	mov	r0, r3
 800f032:	f7ff ff97 	bl	800ef64 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800f036:	bf00      	nop
 800f038:	3708      	adds	r7, #8
 800f03a:	46bd      	mov	sp, r7
 800f03c:	bdb0      	pop	{r4, r5, r7, pc}
 800f03e:	bf00      	nop
 800f040:	240009c0 	.word	0x240009c0

0800f044 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800f044:	b480      	push	{r7}
 800f046:	b083      	sub	sp, #12
 800f048:	af00      	add	r7, sp, #0
 800f04a:	6078      	str	r0, [r7, #4]
}
 800f04c:	bf00      	nop
 800f04e:	370c      	adds	r7, #12
 800f050:	46bd      	mov	sp, r7
 800f052:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f056:	4770      	bx	lr

0800f058 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800f058:	b480      	push	{r7}
 800f05a:	b083      	sub	sp, #12
 800f05c:	af00      	add	r7, sp, #0
 800f05e:	6078      	str	r0, [r7, #4]
}
 800f060:	bf00      	nop
 800f062:	370c      	adds	r7, #12
 800f064:	46bd      	mov	sp, r7
 800f066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f06a:	4770      	bx	lr

0800f06c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800f06c:	b480      	push	{r7}
 800f06e:	b083      	sub	sp, #12
 800f070:	af00      	add	r7, sp, #0
 800f072:	6078      	str	r0, [r7, #4]
}
 800f074:	bf00      	nop
 800f076:	370c      	adds	r7, #12
 800f078:	46bd      	mov	sp, r7
 800f07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f07e:	4770      	bx	lr

0800f080 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800f080:	b480      	push	{r7}
 800f082:	b083      	sub	sp, #12
 800f084:	af00      	add	r7, sp, #0
 800f086:	6078      	str	r0, [r7, #4]
}
 800f088:	bf00      	nop
 800f08a:	370c      	adds	r7, #12
 800f08c:	46bd      	mov	sp, r7
 800f08e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f092:	4770      	bx	lr

0800f094 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800f094:	b580      	push	{r7, lr}
 800f096:	b082      	sub	sp, #8
 800f098:	af00      	add	r7, sp, #0
 800f09a:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800f09c:	687b      	ldr	r3, [r7, #4]
 800f09e:	4618      	mov	r0, r3
 800f0a0:	f000 ff10 	bl	800fec4 <_ZN8touchgfx3HAL10beginFrameEv>
 800f0a4:	4603      	mov	r3, r0
}
 800f0a6:	4618      	mov	r0, r3
 800f0a8:	3708      	adds	r7, #8
 800f0aa:	46bd      	mov	sp, r7
 800f0ac:	bd80      	pop	{r7, pc}

0800f0ae <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800f0ae:	b580      	push	{r7, lr}
 800f0b0:	b082      	sub	sp, #8
 800f0b2:	af00      	add	r7, sp, #0
 800f0b4:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800f0b6:	bf00      	nop
 800f0b8:	f7ff f81e 	bl	800e0f8 <touchgfxDisplayDriverTransmitActive>
 800f0bc:	4603      	mov	r3, r0
 800f0be:	2b00      	cmp	r3, #0
 800f0c0:	bf14      	ite	ne
 800f0c2:	2301      	movne	r3, #1
 800f0c4:	2300      	moveq	r3, #0
 800f0c6:	b2db      	uxtb	r3, r3
 800f0c8:	2b00      	cmp	r3, #0
 800f0ca:	d1f5      	bne.n	800f0b8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800f0cc:	687b      	ldr	r3, [r7, #4]
 800f0ce:	4618      	mov	r0, r3
 800f0d0:	f000 ff04 	bl	800fedc <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800f0d4:	f7ff f8ba 	bl	800e24c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800f0d8:	bf00      	nop
 800f0da:	3708      	adds	r7, #8
 800f0dc:	46bd      	mov	sp, r7
 800f0de:	bd80      	pop	{r7, pc}

0800f0e0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800f0e0:	b480      	push	{r7}
 800f0e2:	b083      	sub	sp, #12
 800f0e4:	af00      	add	r7, sp, #0
 800f0e6:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800f0e8:	2300      	movs	r3, #0
}
 800f0ea:	4618      	mov	r0, r3
 800f0ec:	370c      	adds	r7, #12
 800f0ee:	46bd      	mov	sp, r7
 800f0f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0f4:	4770      	bx	lr

0800f0f6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800f0f6:	b480      	push	{r7}
 800f0f8:	b083      	sub	sp, #12
 800f0fa:	af00      	add	r7, sp, #0
 800f0fc:	6078      	str	r0, [r7, #4]
 800f0fe:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800f100:	bf00      	nop
 800f102:	370c      	adds	r7, #12
 800f104:	46bd      	mov	sp, r7
 800f106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f10a:	4770      	bx	lr

0800f10c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800f10c:	b580      	push	{r7, lr}
 800f10e:	b088      	sub	sp, #32
 800f110:	af02      	add	r7, sp, #8
 800f112:	6078      	str	r0, [r7, #4]
 800f114:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800f116:	687b      	ldr	r3, [r7, #4]
 800f118:	6839      	ldr	r1, [r7, #0]
 800f11a:	4618      	mov	r0, r3
 800f11c:	f000 fe9c 	bl	800fe58 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800f120:	687b      	ldr	r3, [r7, #4]
 800f122:	699a      	ldr	r2, [r3, #24]
 800f124:	687b      	ldr	r3, [r7, #4]
 800f126:	699b      	ldr	r3, [r3, #24]
 800f128:	681b      	ldr	r3, [r3, #0]
 800f12a:	3304      	adds	r3, #4
 800f12c:	681b      	ldr	r3, [r3, #0]
 800f12e:	4610      	mov	r0, r2
 800f130:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800f132:	f7fe ffe1 	bl	800e0f8 <touchgfxDisplayDriverTransmitActive>
 800f136:	4603      	mov	r3, r0
 800f138:	2b00      	cmp	r3, #0
 800f13a:	bf0c      	ite	eq
 800f13c:	2301      	moveq	r3, #1
 800f13e:	2300      	movne	r3, #0
 800f140:	b2db      	uxtb	r3, r3
 800f142:	2b00      	cmp	r3, #0
 800f144:	d021      	beq.n	800f18a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800f146:	f107 030c 	add.w	r3, r7, #12
 800f14a:	4618      	mov	r0, r3
 800f14c:	f7fd f9df 	bl	800c50e <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800f150:	687b      	ldr	r3, [r7, #4]
 800f152:	699a      	ldr	r2, [r3, #24]
 800f154:	687b      	ldr	r3, [r7, #4]
 800f156:	699b      	ldr	r3, [r3, #24]
 800f158:	681b      	ldr	r3, [r3, #0]
 800f15a:	330c      	adds	r3, #12
 800f15c:	681b      	ldr	r3, [r3, #0]
 800f15e:	f107 010c 	add.w	r1, r7, #12
 800f162:	4610      	mov	r0, r2
 800f164:	4798      	blx	r3
 800f166:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800f168:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800f16c:	b299      	uxth	r1, r3
 800f16e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800f172:	b29a      	uxth	r2, r3
 800f174:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800f178:	b298      	uxth	r0, r3
 800f17a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800f17e:	b29b      	uxth	r3, r3
 800f180:	9300      	str	r3, [sp, #0]
 800f182:	4603      	mov	r3, r0
 800f184:	6978      	ldr	r0, [r7, #20]
 800f186:	f7fe ffc3 	bl	800e110 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800f18a:	bf00      	nop
 800f18c:	3718      	adds	r7, #24
 800f18e:	46bd      	mov	sp, r7
 800f190:	bd80      	pop	{r7, pc}

0800f192 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800f192:	b580      	push	{r7, lr}
 800f194:	b084      	sub	sp, #16
 800f196:	af00      	add	r7, sp, #0
 800f198:	60f8      	str	r0, [r7, #12]
 800f19a:	60b9      	str	r1, [r7, #8]
 800f19c:	607a      	str	r2, [r7, #4]
 800f19e:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800f1a0:	68f8      	ldr	r0, [r7, #12]
 800f1a2:	683b      	ldr	r3, [r7, #0]
 800f1a4:	687a      	ldr	r2, [r7, #4]
 800f1a6:	68b9      	ldr	r1, [r7, #8]
 800f1a8:	f000 ffc7 	bl	801013a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800f1ac:	4603      	mov	r3, r0
}
 800f1ae:	4618      	mov	r0, r3
 800f1b0:	3710      	adds	r7, #16
 800f1b2:	46bd      	mov	sp, r7
 800f1b4:	bd80      	pop	{r7, pc}
	...

0800f1b8 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 800f1b8:	b480      	push	{r7}
 800f1ba:	b087      	sub	sp, #28
 800f1bc:	af00      	add	r7, sp, #0
 800f1be:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800f1c0:	4b25      	ldr	r3, [pc, #148]	; (800f258 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800f1c2:	695b      	ldr	r3, [r3, #20]
 800f1c4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800f1c8:	2b00      	cmp	r3, #0
 800f1ca:	bf14      	ite	ne
 800f1cc:	2301      	movne	r3, #1
 800f1ce:	2300      	moveq	r3, #0
 800f1d0:	b2db      	uxtb	r3, r3
 800f1d2:	2b00      	cmp	r3, #0
 800f1d4:	d03a      	beq.n	800f24c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800f1d6:	4b20      	ldr	r3, [pc, #128]	; (800f258 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800f1d8:	2200      	movs	r2, #0
 800f1da:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800f1de:	f3bf 8f4f 	dsb	sy
}
 800f1e2:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800f1e4:	4b1c      	ldr	r3, [pc, #112]	; (800f258 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800f1e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f1ea:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800f1ec:	697b      	ldr	r3, [r7, #20]
 800f1ee:	0b5b      	lsrs	r3, r3, #13
 800f1f0:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800f1f4:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800f1f6:	697b      	ldr	r3, [r7, #20]
 800f1f8:	08db      	lsrs	r3, r3, #3
 800f1fa:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f1fe:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f200:	693b      	ldr	r3, [r7, #16]
 800f202:	015a      	lsls	r2, r3, #5
 800f204:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800f208:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800f20a:	68fa      	ldr	r2, [r7, #12]
 800f20c:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f20e:	4912      	ldr	r1, [pc, #72]	; (800f258 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 800f210:	4313      	orrs	r3, r2
 800f212:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800f216:	68fb      	ldr	r3, [r7, #12]
 800f218:	1e5a      	subs	r2, r3, #1
 800f21a:	60fa      	str	r2, [r7, #12]
 800f21c:	2b00      	cmp	r3, #0
 800f21e:	bf14      	ite	ne
 800f220:	2301      	movne	r3, #1
 800f222:	2300      	moveq	r3, #0
 800f224:	b2db      	uxtb	r3, r3
 800f226:	2b00      	cmp	r3, #0
 800f228:	d1ea      	bne.n	800f200 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x48>
    } while(sets-- != 0U);
 800f22a:	693b      	ldr	r3, [r7, #16]
 800f22c:	1e5a      	subs	r2, r3, #1
 800f22e:	613a      	str	r2, [r7, #16]
 800f230:	2b00      	cmp	r3, #0
 800f232:	bf14      	ite	ne
 800f234:	2301      	movne	r3, #1
 800f236:	2300      	moveq	r3, #0
 800f238:	b2db      	uxtb	r3, r3
 800f23a:	2b00      	cmp	r3, #0
 800f23c:	d1db      	bne.n	800f1f6 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 800f23e:	f3bf 8f4f 	dsb	sy
}
 800f242:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800f244:	f3bf 8f6f 	isb	sy
}
 800f248:	bf00      	nop
}
 800f24a:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 800f24c:	bf00      	nop
 800f24e:	371c      	adds	r7, #28
 800f250:	46bd      	mov	sp, r7
 800f252:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f256:	4770      	bx	lr
 800f258:	e000ed00 	.word	0xe000ed00

0800f25c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 800f25c:	b480      	push	{r7}
 800f25e:	b087      	sub	sp, #28
 800f260:	af00      	add	r7, sp, #0
 800f262:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800f264:	4b25      	ldr	r3, [pc, #148]	; (800f2fc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800f266:	695b      	ldr	r3, [r3, #20]
 800f268:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800f26c:	2b00      	cmp	r3, #0
 800f26e:	bf14      	ite	ne
 800f270:	2301      	movne	r3, #1
 800f272:	2300      	moveq	r3, #0
 800f274:	b2db      	uxtb	r3, r3
 800f276:	2b00      	cmp	r3, #0
 800f278:	d03a      	beq.n	800f2f0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800f27a:	4b20      	ldr	r3, [pc, #128]	; (800f2fc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800f27c:	2200      	movs	r2, #0
 800f27e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800f282:	f3bf 8f4f 	dsb	sy
}
 800f286:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800f288:	4b1c      	ldr	r3, [pc, #112]	; (800f2fc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800f28a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f28e:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800f290:	697b      	ldr	r3, [r7, #20]
 800f292:	0b5b      	lsrs	r3, r3, #13
 800f294:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800f298:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800f29a:	697b      	ldr	r3, [r7, #20]
 800f29c:	08db      	lsrs	r3, r3, #3
 800f29e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f2a2:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f2a4:	693b      	ldr	r3, [r7, #16]
 800f2a6:	015a      	lsls	r2, r3, #5
 800f2a8:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800f2ac:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800f2ae:	68fa      	ldr	r2, [r7, #12]
 800f2b0:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f2b2:	4912      	ldr	r1, [pc, #72]	; (800f2fc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 800f2b4:	4313      	orrs	r3, r2
 800f2b6:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 800f2ba:	68fb      	ldr	r3, [r7, #12]
 800f2bc:	1e5a      	subs	r2, r3, #1
 800f2be:	60fa      	str	r2, [r7, #12]
 800f2c0:	2b00      	cmp	r3, #0
 800f2c2:	bf14      	ite	ne
 800f2c4:	2301      	movne	r3, #1
 800f2c6:	2300      	moveq	r3, #0
 800f2c8:	b2db      	uxtb	r3, r3
 800f2ca:	2b00      	cmp	r3, #0
 800f2cc:	d1ea      	bne.n	800f2a4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    } while(sets-- != 0U);
 800f2ce:	693b      	ldr	r3, [r7, #16]
 800f2d0:	1e5a      	subs	r2, r3, #1
 800f2d2:	613a      	str	r2, [r7, #16]
 800f2d4:	2b00      	cmp	r3, #0
 800f2d6:	bf14      	ite	ne
 800f2d8:	2301      	movne	r3, #1
 800f2da:	2300      	moveq	r3, #0
 800f2dc:	b2db      	uxtb	r3, r3
 800f2de:	2b00      	cmp	r3, #0
 800f2e0:	d1db      	bne.n	800f29a <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 800f2e2:	f3bf 8f4f 	dsb	sy
}
 800f2e6:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800f2e8:	f3bf 8f6f 	isb	sy
}
 800f2ec:	bf00      	nop
}
 800f2ee:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 800f2f0:	bf00      	nop
 800f2f2:	371c      	adds	r7, #28
 800f2f4:	46bd      	mov	sp, r7
 800f2f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2fa:	4770      	bx	lr
 800f2fc:	e000ed00 	.word	0xe000ed00

0800f300 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800f300:	b480      	push	{r7}
 800f302:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
   */
}
 800f304:	bf00      	nop
 800f306:	46bd      	mov	sp, r7
 800f308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f30c:	4770      	bx	lr

0800f30e <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800f30e:	b480      	push	{r7}
 800f310:	af00      	add	r7, sp, #0
  /* NOTE: This function should not be modified, when the fuction is needed,
   *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
   */
}
 800f312:	bf00      	nop
 800f314:	46bd      	mov	sp, r7
 800f316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f31a:	4770      	bx	lr

0800f31c <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800f31c:	b580      	push	{r7, lr}
 800f31e:	b086      	sub	sp, #24
 800f320:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800f322:	f7fc fc5b 	bl	800bbdc <_ZN8touchgfx3HAL11getInstanceEv>
 800f326:	4603      	mov	r3, r0
 800f328:	4618      	mov	r0, r3
 800f32a:	f7ff fe0f 	bl	800ef4c <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800f32e:	60f8      	str	r0, [r7, #12]

  // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800f330:	68fb      	ldr	r3, [r7, #12]
 800f332:	681b      	ldr	r3, [r3, #0]
 800f334:	3318      	adds	r3, #24
 800f336:	681b      	ldr	r3, [r3, #0]
 800f338:	68f8      	ldr	r0, [r7, #12]
 800f33a:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800f33c:	68fb      	ldr	r3, [r7, #12]
 800f33e:	681b      	ldr	r3, [r3, #0]
 800f340:	3308      	adds	r3, #8
 800f342:	681b      	ldr	r3, [r3, #0]
 800f344:	68f8      	ldr	r0, [r7, #12]
 800f346:	4798      	blx	r3
 800f348:	4603      	mov	r3, r0
 800f34a:	2b00      	cmp	r3, #0
 800f34c:	d01d      	beq.n	800f38a <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800f34e:	463b      	mov	r3, r7
 800f350:	4618      	mov	r0, r3
 800f352:	f7fd f8dc 	bl	800c50e <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800f356:	68fb      	ldr	r3, [r7, #12]
 800f358:	681b      	ldr	r3, [r3, #0]
 800f35a:	330c      	adds	r3, #12
 800f35c:	681b      	ldr	r3, [r3, #0]
 800f35e:	463a      	mov	r2, r7
 800f360:	4611      	mov	r1, r2
 800f362:	68f8      	ldr	r0, [r7, #12]
 800f364:	4798      	blx	r3
 800f366:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800f368:	f9b7 3000 	ldrsh.w	r3, [r7]
 800f36c:	b299      	uxth	r1, r3
 800f36e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f372:	b29a      	uxth	r2, r3
 800f374:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800f378:	b298      	uxth	r0, r3
 800f37a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800f37e:	b29b      	uxth	r3, r3
 800f380:	9300      	str	r3, [sp, #0]
 800f382:	4603      	mov	r3, r0
 800f384:	68b8      	ldr	r0, [r7, #8]
 800f386:	f7fe fec3 	bl	800e110 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800f38a:	bf00      	nop
 800f38c:	3710      	adds	r7, #16
 800f38e:	46bd      	mov	sp, r7
 800f390:	bd80      	pop	{r7, pc}

0800f392 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800f392:	b580      	push	{r7, lr}
 800f394:	af00      	add	r7, sp, #0
  // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800f396:	f7ff ffc1 	bl	800f31c <_ZN8touchgfx16startNewTransferEv>
}
 800f39a:	bf00      	nop
 800f39c:	bd80      	pop	{r7, pc}

0800f39e <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800f39e:	b580      	push	{r7, lr}
 800f3a0:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800f3a2:	f7fc fc1b 	bl	800bbdc <_ZN8touchgfx3HAL11getInstanceEv>
 800f3a6:	4603      	mov	r3, r0
 800f3a8:	4618      	mov	r0, r3
 800f3aa:	f7ff fdaf 	bl	800ef0c <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800f3ae:	f7fe ff41 	bl	800e234 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800f3b2:	bf00      	nop
 800f3b4:	bd80      	pop	{r7, pc}
	...

0800f3b8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800f3b8:	b480      	push	{r7}
 800f3ba:	b083      	sub	sp, #12
 800f3bc:	af00      	add	r7, sp, #0
 800f3be:	6078      	str	r0, [r7, #4]
 800f3c0:	4a04      	ldr	r2, [pc, #16]	; (800f3d4 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800f3c2:	687b      	ldr	r3, [r7, #4]
 800f3c4:	601a      	str	r2, [r3, #0]
 800f3c6:	687b      	ldr	r3, [r7, #4]
 800f3c8:	4618      	mov	r0, r3
 800f3ca:	370c      	adds	r7, #12
 800f3cc:	46bd      	mov	sp, r7
 800f3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3d2:	4770      	bx	lr
 800f3d4:	08025cf0 	.word	0x08025cf0

0800f3d8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800f3d8:	b5b0      	push	{r4, r5, r7, lr}
 800f3da:	b084      	sub	sp, #16
 800f3dc:	af00      	add	r7, sp, #0
 800f3de:	6078      	str	r0, [r7, #4]
    {
 800f3e0:	687b      	ldr	r3, [r7, #4]
 800f3e2:	4618      	mov	r0, r3
 800f3e4:	f7ff ffe8 	bl	800f3b8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800f3e8:	4a1a      	ldr	r2, [pc, #104]	; (800f454 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x7c>)
 800f3ea:	687b      	ldr	r3, [r7, #4]
 800f3ec:	601a      	str	r2, [r3, #0]
 800f3ee:	687a      	ldr	r2, [r7, #4]
 800f3f0:	f241 6388 	movw	r3, #5768	; 0x1688
 800f3f4:	4413      	add	r3, r2
 800f3f6:	2402      	movs	r4, #2
 800f3f8:	461d      	mov	r5, r3
 800f3fa:	e004      	b.n	800f406 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x2e>
 800f3fc:	4628      	mov	r0, r5
 800f3fe:	f7fd f886 	bl	800c50e <_ZN8touchgfx4RectC1Ev>
 800f402:	3508      	adds	r5, #8
 800f404:	3c01      	subs	r4, #1
 800f406:	2c00      	cmp	r4, #0
 800f408:	daf8      	bge.n	800f3fc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800f40a:	687b      	ldr	r3, [r7, #4]
 800f40c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f410:	461a      	mov	r2, r3
 800f412:	f04f 33ff 	mov.w	r3, #4294967295
 800f416:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        drawingBlock = -1;
 800f41a:	687b      	ldr	r3, [r7, #4]
 800f41c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f420:	461a      	mov	r2, r3
 800f422:	f04f 33ff 	mov.w	r3, #4294967295
 800f426:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        for (uint32_t i = 0; i < blocks; i++)
 800f42a:	2300      	movs	r3, #0
 800f42c:	60fb      	str	r3, [r7, #12]
 800f42e:	e008      	b.n	800f442 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800f430:	687a      	ldr	r2, [r7, #4]
 800f432:	68fb      	ldr	r3, [r7, #12]
 800f434:	4413      	add	r3, r2
 800f436:	3304      	adds	r3, #4
 800f438:	2200      	movs	r2, #0
 800f43a:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800f43c:	68fb      	ldr	r3, [r7, #12]
 800f43e:	3301      	adds	r3, #1
 800f440:	60fb      	str	r3, [r7, #12]
 800f442:	68fb      	ldr	r3, [r7, #12]
 800f444:	2b02      	cmp	r3, #2
 800f446:	d9f3      	bls.n	800f430 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev+0x58>
        }
    }
 800f448:	687b      	ldr	r3, [r7, #4]
 800f44a:	4618      	mov	r0, r3
 800f44c:	3710      	adds	r7, #16
 800f44e:	46bd      	mov	sp, r7
 800f450:	bdb0      	pop	{r4, r5, r7, pc}
 800f452:	bf00      	nop
 800f454:	08025bec 	.word	0x08025bec

0800f458 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800f458:	b580      	push	{r7, lr}
 800f45a:	b082      	sub	sp, #8
 800f45c:	af00      	add	r7, sp, #0
 800f45e:	6078      	str	r0, [r7, #4]
 800f460:	4a05      	ldr	r2, [pc, #20]	; (800f478 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev+0x20>)
 800f462:	687b      	ldr	r3, [r7, #4]
 800f464:	601a      	str	r2, [r3, #0]
 800f466:	687b      	ldr	r3, [r7, #4]
 800f468:	4618      	mov	r0, r3
 800f46a:	f7ff fd2f 	bl	800eecc <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800f46e:	687b      	ldr	r3, [r7, #4]
 800f470:	4618      	mov	r0, r3
 800f472:	3708      	adds	r7, #8
 800f474:	46bd      	mov	sp, r7
 800f476:	bd80      	pop	{r7, pc}
 800f478:	08025bec 	.word	0x08025bec

0800f47c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED0Ev>:
 800f47c:	b580      	push	{r7, lr}
 800f47e:	b082      	sub	sp, #8
 800f480:	af00      	add	r7, sp, #0
 800f482:	6078      	str	r0, [r7, #4]
 800f484:	6878      	ldr	r0, [r7, #4]
 800f486:	f7ff ffe7 	bl	800f458 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
 800f48a:	f241 61a8 	movw	r1, #5800	; 0x16a8
 800f48e:	6878      	ldr	r0, [r7, #4]
 800f490:	f013 ff9f 	bl	80233d2 <_ZdlPvj>
 800f494:	687b      	ldr	r3, [r7, #4]
 800f496:	4618      	mov	r0, r3
 800f498:	3708      	adds	r7, #8
 800f49a:	46bd      	mov	sp, r7
 800f49c:	bd80      	pop	{r7, pc}
	...

0800f4a0 <_Z41__static_initialization_and_destruction_0ii>:
 800f4a0:	b580      	push	{r7, lr}
 800f4a2:	b082      	sub	sp, #8
 800f4a4:	af00      	add	r7, sp, #0
 800f4a6:	6078      	str	r0, [r7, #4]
 800f4a8:	6039      	str	r1, [r7, #0]
 800f4aa:	687b      	ldr	r3, [r7, #4]
 800f4ac:	2b01      	cmp	r3, #1
 800f4ae:	d107      	bne.n	800f4c0 <_Z41__static_initialization_and_destruction_0ii+0x20>
 800f4b0:	683b      	ldr	r3, [r7, #0]
 800f4b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f4b6:	4293      	cmp	r3, r2
 800f4b8:	d102      	bne.n	800f4c0 <_Z41__static_initialization_and_destruction_0ii+0x20>
                   > blockAllocator;
 800f4ba:	4809      	ldr	r0, [pc, #36]	; (800f4e0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800f4bc:	f7ff ff8c 	bl	800f3d8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EEC1Ev>
 800f4c0:	687b      	ldr	r3, [r7, #4]
 800f4c2:	2b00      	cmp	r3, #0
 800f4c4:	d107      	bne.n	800f4d6 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800f4c6:	683b      	ldr	r3, [r7, #0]
 800f4c8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f4cc:	4293      	cmp	r3, r2
 800f4ce:	d102      	bne.n	800f4d6 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800f4d0:	4803      	ldr	r0, [pc, #12]	; (800f4e0 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800f4d2:	f7ff ffc1 	bl	800f458 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EED1Ev>
}
 800f4d6:	bf00      	nop
 800f4d8:	3708      	adds	r7, #8
 800f4da:	46bd      	mov	sp, r7
 800f4dc:	bd80      	pop	{r7, pc}
 800f4de:	bf00      	nop
 800f4e0:	240009c0 	.word	0x240009c0

0800f4e4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800f4e4:	b580      	push	{r7, lr}
 800f4e6:	b086      	sub	sp, #24
 800f4e8:	af00      	add	r7, sp, #0
 800f4ea:	60f8      	str	r0, [r7, #12]
 800f4ec:	4608      	mov	r0, r1
 800f4ee:	4611      	mov	r1, r2
 800f4f0:	461a      	mov	r2, r3
 800f4f2:	4603      	mov	r3, r0
 800f4f4:	817b      	strh	r3, [r7, #10]
 800f4f6:	460b      	mov	r3, r1
 800f4f8:	813b      	strh	r3, [r7, #8]
 800f4fa:	4613      	mov	r3, r2
 800f4fc:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800f4fe:	68fb      	ldr	r3, [r7, #12]
 800f500:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f504:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f508:	3301      	adds	r3, #1
 800f50a:	68fa      	ldr	r2, [r7, #12]
 800f50c:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800f510:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        if (drawingBlock == blocks)
 800f514:	68fb      	ldr	r3, [r7, #12]
 800f516:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f51a:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f51e:	2b03      	cmp	r3, #3
 800f520:	d109      	bne.n	800f536 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800f522:	68fb      	ldr	r3, [r7, #12]
 800f524:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f528:	461a      	mov	r2, r3
 800f52a:	2300      	movs	r3, #0
 800f52c:	f8c2 36a4 	str.w	r3, [r2, #1700]	; 0x6a4
        }
        while (state[drawingBlock] != EMPTY)
 800f530:	e001      	b.n	800f536 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800f532:	f7ff fee5 	bl	800f300 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800f536:	68fb      	ldr	r3, [r7, #12]
 800f538:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f53c:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f540:	68fa      	ldr	r2, [r7, #12]
 800f542:	4413      	add	r3, r2
 800f544:	791b      	ldrb	r3, [r3, #4]
 800f546:	b2db      	uxtb	r3, r3
 800f548:	2b00      	cmp	r3, #0
 800f54a:	bf14      	ite	ne
 800f54c:	2301      	movne	r3, #1
 800f54e:	2300      	moveq	r3, #0
 800f550:	b2db      	uxtb	r3, r3
 800f552:	2b00      	cmp	r3, #0
 800f554:	d1ed      	bne.n	800f532 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800f556:	68fb      	ldr	r3, [r7, #12]
 800f558:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f55c:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f560:	68fa      	ldr	r2, [r7, #12]
 800f562:	4413      	add	r3, r2
 800f564:	791b      	ldrb	r3, [r3, #4]
 800f566:	b2db      	uxtb	r3, r3
 800f568:	2b00      	cmp	r3, #0
 800f56a:	d005      	beq.n	800f578 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800f56c:	4b38      	ldr	r3, [pc, #224]	; (800f650 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800f56e:	4a39      	ldr	r2, [pc, #228]	; (800f654 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800f570:	21aa      	movs	r1, #170	; 0xaa
 800f572:	4839      	ldr	r0, [pc, #228]	; (800f658 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800f574:	f013 ff5c 	bl	8023430 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800f578:	68fb      	ldr	r3, [r7, #12]
 800f57a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f57e:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f582:	68fa      	ldr	r2, [r7, #12]
 800f584:	4413      	add	r3, r2
 800f586:	2201      	movs	r2, #1
 800f588:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800f58a:	88fb      	ldrh	r3, [r7, #6]
 800f58c:	005b      	lsls	r3, r3, #1
 800f58e:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800f590:	697b      	ldr	r3, [r7, #20]
 800f592:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 800f596:	fbb2 f3f3 	udiv	r3, r2, r3
 800f59a:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800f59c:	68fb      	ldr	r3, [r7, #12]
 800f59e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f5a2:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 800f5a6:	4613      	mov	r3, r2
 800f5a8:	011b      	lsls	r3, r3, #4
 800f5aa:	1a9b      	subs	r3, r3, r2
 800f5ac:	01db      	lsls	r3, r3, #7
 800f5ae:	3308      	adds	r3, #8
 800f5b0:	68fa      	ldr	r2, [r7, #12]
 800f5b2:	441a      	add	r2, r3
 800f5b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f5b6:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800f5b8:	68fb      	ldr	r3, [r7, #12]
 800f5ba:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f5be:	f8d3 26a4 	ldr.w	r2, [r3, #1700]	; 0x6a4
 800f5c2:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800f5c6:	68fb      	ldr	r3, [r7, #12]
 800f5c8:	f202 22d1 	addw	r2, r2, #721	; 0x2d1
 800f5cc:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800f5d0:	68fb      	ldr	r3, [r7, #12]
 800f5d2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f5d6:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f5da:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800f5de:	68fa      	ldr	r2, [r7, #12]
 800f5e0:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f5e4:	00db      	lsls	r3, r3, #3
 800f5e6:	4413      	add	r3, r2
 800f5e8:	460a      	mov	r2, r1
 800f5ea:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800f5ec:	68fb      	ldr	r3, [r7, #12]
 800f5ee:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f5f2:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f5f6:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800f5fa:	68fa      	ldr	r2, [r7, #12]
 800f5fc:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f600:	00db      	lsls	r3, r3, #3
 800f602:	4413      	add	r3, r2
 800f604:	460a      	mov	r2, r1
 800f606:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800f608:	8c3a      	ldrh	r2, [r7, #32]
 800f60a:	693b      	ldr	r3, [r7, #16]
 800f60c:	429a      	cmp	r2, r3
 800f60e:	bfa8      	it	ge
 800f610:	461a      	movge	r2, r3
 800f612:	68fb      	ldr	r3, [r7, #12]
 800f614:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f618:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f61c:	b211      	sxth	r1, r2
 800f61e:	68fa      	ldr	r2, [r7, #12]
 800f620:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f624:	00db      	lsls	r3, r3, #3
 800f626:	4413      	add	r3, r2
 800f628:	460a      	mov	r2, r1
 800f62a:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800f62c:	68fb      	ldr	r3, [r7, #12]
 800f62e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f632:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f636:	68fa      	ldr	r2, [r7, #12]
 800f638:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f63c:	00db      	lsls	r3, r3, #3
 800f63e:	4413      	add	r3, r2
 800f640:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800f644:	b29b      	uxth	r3, r3
    }
 800f646:	4618      	mov	r0, r3
 800f648:	3718      	adds	r7, #24
 800f64a:	46bd      	mov	sp, r7
 800f64c:	bd80      	pop	{r7, pc}
 800f64e:	bf00      	nop
 800f650:	08024f68 	.word	0x08024f68
 800f654:	08024f88 	.word	0x08024f88
 800f658:	080250bc 	.word	0x080250bc

0800f65c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800f65c:	b580      	push	{r7, lr}
 800f65e:	b082      	sub	sp, #8
 800f660:	af00      	add	r7, sp, #0
 800f662:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800f664:	687b      	ldr	r3, [r7, #4]
 800f666:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f66a:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f66e:	687a      	ldr	r2, [r7, #4]
 800f670:	4413      	add	r3, r2
 800f672:	791b      	ldrb	r3, [r3, #4]
 800f674:	b2db      	uxtb	r3, r3
 800f676:	2b01      	cmp	r3, #1
 800f678:	d005      	beq.n	800f686 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800f67a:	4b0a      	ldr	r3, [pc, #40]	; (800f6a4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800f67c:	4a0a      	ldr	r2, [pc, #40]	; (800f6a8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800f67e:	21b9      	movs	r1, #185	; 0xb9
 800f680:	480a      	ldr	r0, [pc, #40]	; (800f6ac <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800f682:	f013 fed5 	bl	8023430 <__assert_func>
        state[drawingBlock] = DRAWN;
 800f686:	687b      	ldr	r3, [r7, #4]
 800f688:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f68c:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f690:	687a      	ldr	r2, [r7, #4]
 800f692:	4413      	add	r3, r2
 800f694:	2202      	movs	r2, #2
 800f696:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800f698:	f7ff fe39 	bl	800f30e <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800f69c:	bf00      	nop
 800f69e:	3708      	adds	r7, #8
 800f6a0:	46bd      	mov	sp, r7
 800f6a2:	bd80      	pop	{r7, pc}
 800f6a4:	08025110 	.word	0x08025110
 800f6a8:	08025134 	.word	0x08025134
 800f6ac:	080250bc 	.word	0x080250bc

0800f6b0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800f6b0:	b480      	push	{r7}
 800f6b2:	b085      	sub	sp, #20
 800f6b4:	af00      	add	r7, sp, #0
 800f6b6:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800f6b8:	2300      	movs	r3, #0
 800f6ba:	60fb      	str	r3, [r7, #12]
 800f6bc:	e011      	b.n	800f6e2 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800f6be:	687a      	ldr	r2, [r7, #4]
 800f6c0:	68fb      	ldr	r3, [r7, #12]
 800f6c2:	4413      	add	r3, r2
 800f6c4:	3304      	adds	r3, #4
 800f6c6:	781b      	ldrb	r3, [r3, #0]
 800f6c8:	b2db      	uxtb	r3, r3
 800f6ca:	2b02      	cmp	r3, #2
 800f6cc:	bf0c      	ite	eq
 800f6ce:	2301      	moveq	r3, #1
 800f6d0:	2300      	movne	r3, #0
 800f6d2:	b2db      	uxtb	r3, r3
 800f6d4:	2b00      	cmp	r3, #0
 800f6d6:	d001      	beq.n	800f6dc <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800f6d8:	2301      	movs	r3, #1
 800f6da:	e006      	b.n	800f6ea <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800f6dc:	68fb      	ldr	r3, [r7, #12]
 800f6de:	3301      	adds	r3, #1
 800f6e0:	60fb      	str	r3, [r7, #12]
 800f6e2:	68fb      	ldr	r3, [r7, #12]
 800f6e4:	2b02      	cmp	r3, #2
 800f6e6:	d9ea      	bls.n	800f6be <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800f6e8:	2300      	movs	r3, #0
    }
 800f6ea:	4618      	mov	r0, r3
 800f6ec:	3714      	adds	r7, #20
 800f6ee:	46bd      	mov	sp, r7
 800f6f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6f4:	4770      	bx	lr
	...

0800f6f8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800f6f8:	b580      	push	{r7, lr}
 800f6fa:	b082      	sub	sp, #8
 800f6fc:	af00      	add	r7, sp, #0
 800f6fe:	6078      	str	r0, [r7, #4]
 800f700:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800f702:	687b      	ldr	r3, [r7, #4]
 800f704:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f708:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f70c:	3301      	adds	r3, #1
 800f70e:	687a      	ldr	r2, [r7, #4]
 800f710:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800f714:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        if (sendingBlock == blocks)
 800f718:	687b      	ldr	r3, [r7, #4]
 800f71a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f71e:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f722:	2b03      	cmp	r3, #3
 800f724:	d106      	bne.n	800f734 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800f726:	687b      	ldr	r3, [r7, #4]
 800f728:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f72c:	461a      	mov	r2, r3
 800f72e:	2300      	movs	r3, #0
 800f730:	f8c2 36a0 	str.w	r3, [r2, #1696]	; 0x6a0
        }
        assert(state[sendingBlock] == DRAWN);
 800f734:	687b      	ldr	r3, [r7, #4]
 800f736:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f73a:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f73e:	687a      	ldr	r2, [r7, #4]
 800f740:	4413      	add	r3, r2
 800f742:	791b      	ldrb	r3, [r3, #4]
 800f744:	b2db      	uxtb	r3, r3
 800f746:	2b02      	cmp	r3, #2
 800f748:	d005      	beq.n	800f756 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800f74a:	4b16      	ldr	r3, [pc, #88]	; (800f7a4 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800f74c:	4a16      	ldr	r2, [pc, #88]	; (800f7a8 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800f74e:	21dd      	movs	r1, #221	; 0xdd
 800f750:	4816      	ldr	r0, [pc, #88]	; (800f7ac <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800f752:	f013 fe6d 	bl	8023430 <__assert_func>
        rect = blockRect[sendingBlock];
 800f756:	687b      	ldr	r3, [r7, #4]
 800f758:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f75c:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f760:	683a      	ldr	r2, [r7, #0]
 800f762:	6879      	ldr	r1, [r7, #4]
 800f764:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f768:	00db      	lsls	r3, r3, #3
 800f76a:	440b      	add	r3, r1
 800f76c:	cb03      	ldmia	r3!, {r0, r1}
 800f76e:	6010      	str	r0, [r2, #0]
 800f770:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800f772:	687b      	ldr	r3, [r7, #4]
 800f774:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f778:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f77c:	687a      	ldr	r2, [r7, #4]
 800f77e:	4413      	add	r3, r2
 800f780:	2203      	movs	r2, #3
 800f782:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800f784:	687b      	ldr	r3, [r7, #4]
 800f786:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f78a:	f8d3 26a0 	ldr.w	r2, [r3, #1696]	; 0x6a0
 800f78e:	4613      	mov	r3, r2
 800f790:	011b      	lsls	r3, r3, #4
 800f792:	1a9b      	subs	r3, r3, r2
 800f794:	01db      	lsls	r3, r3, #7
 800f796:	3308      	adds	r3, #8
 800f798:	687a      	ldr	r2, [r7, #4]
 800f79a:	4413      	add	r3, r2
    }
 800f79c:	4618      	mov	r0, r3
 800f79e:	3708      	adds	r7, #8
 800f7a0:	46bd      	mov	sp, r7
 800f7a2:	bd80      	pop	{r7, pc}
 800f7a4:	08025208 	.word	0x08025208
 800f7a8:	08025228 	.word	0x08025228
 800f7ac:	080250bc 	.word	0x080250bc

0800f7b0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800f7b0:	b580      	push	{r7, lr}
 800f7b2:	b084      	sub	sp, #16
 800f7b4:	af00      	add	r7, sp, #0
 800f7b6:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800f7b8:	687b      	ldr	r3, [r7, #4]
 800f7ba:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f7be:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f7c2:	3301      	adds	r3, #1
 800f7c4:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800f7c6:	68fb      	ldr	r3, [r7, #12]
 800f7c8:	2b03      	cmp	r3, #3
 800f7ca:	d101      	bne.n	800f7d0 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800f7cc:	2300      	movs	r3, #0
 800f7ce:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800f7d0:	687a      	ldr	r2, [r7, #4]
 800f7d2:	68fb      	ldr	r3, [r7, #12]
 800f7d4:	4413      	add	r3, r2
 800f7d6:	3304      	adds	r3, #4
 800f7d8:	781b      	ldrb	r3, [r3, #0]
 800f7da:	b2db      	uxtb	r3, r3
 800f7dc:	2b02      	cmp	r3, #2
 800f7de:	d005      	beq.n	800f7ec <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800f7e0:	4b07      	ldr	r3, [pc, #28]	; (800f800 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800f7e2:	4a08      	ldr	r2, [pc, #32]	; (800f804 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800f7e4:	21ea      	movs	r1, #234	; 0xea
 800f7e6:	4808      	ldr	r0, [pc, #32]	; (800f808 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800f7e8:	f013 fe22 	bl	8023430 <__assert_func>
        return blockRect[nextSendingBlock];
 800f7ec:	68fb      	ldr	r3, [r7, #12]
 800f7ee:	f203 23d1 	addw	r3, r3, #721	; 0x2d1
 800f7f2:	00db      	lsls	r3, r3, #3
 800f7f4:	687a      	ldr	r2, [r7, #4]
 800f7f6:	4413      	add	r3, r2
    }
 800f7f8:	4618      	mov	r0, r3
 800f7fa:	3710      	adds	r7, #16
 800f7fc:	46bd      	mov	sp, r7
 800f7fe:	bd80      	pop	{r7, pc}
 800f800:	08025328 	.word	0x08025328
 800f804:	0802534c 	.word	0x0802534c
 800f808:	080250bc 	.word	0x080250bc

0800f80c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800f80c:	b480      	push	{r7}
 800f80e:	b085      	sub	sp, #20
 800f810:	af00      	add	r7, sp, #0
 800f812:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800f814:	687b      	ldr	r3, [r7, #4]
 800f816:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f81a:	f8d3 36a4 	ldr.w	r3, [r3, #1700]	; 0x6a4
 800f81e:	3301      	adds	r3, #1
 800f820:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800f822:	68fb      	ldr	r3, [r7, #12]
 800f824:	2b03      	cmp	r3, #3
 800f826:	d101      	bne.n	800f82c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800f828:	2300      	movs	r3, #0
 800f82a:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800f82c:	687a      	ldr	r2, [r7, #4]
 800f82e:	68fb      	ldr	r3, [r7, #12]
 800f830:	4413      	add	r3, r2
 800f832:	3304      	adds	r3, #4
 800f834:	781b      	ldrb	r3, [r3, #0]
 800f836:	b2db      	uxtb	r3, r3
 800f838:	2b00      	cmp	r3, #0
 800f83a:	bf0c      	ite	eq
 800f83c:	2301      	moveq	r3, #1
 800f83e:	2300      	movne	r3, #0
 800f840:	b2db      	uxtb	r3, r3
    }
 800f842:	4618      	mov	r0, r3
 800f844:	3714      	adds	r7, #20
 800f846:	46bd      	mov	sp, r7
 800f848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f84c:	4770      	bx	lr
	...

0800f850 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800f850:	b580      	push	{r7, lr}
 800f852:	b082      	sub	sp, #8
 800f854:	af00      	add	r7, sp, #0
 800f856:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800f858:	687b      	ldr	r3, [r7, #4]
 800f85a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f85e:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f862:	687a      	ldr	r2, [r7, #4]
 800f864:	4413      	add	r3, r2
 800f866:	791b      	ldrb	r3, [r3, #4]
 800f868:	b2db      	uxtb	r3, r3
 800f86a:	2b03      	cmp	r3, #3
 800f86c:	d005      	beq.n	800f87a <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800f86e:	4b09      	ldr	r3, [pc, #36]	; (800f894 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800f870:	4a09      	ldr	r2, [pc, #36]	; (800f898 <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800f872:	21ff      	movs	r1, #255	; 0xff
 800f874:	4809      	ldr	r0, [pc, #36]	; (800f89c <_ZN8touchgfx18ManyBlockAllocatorILm1920ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800f876:	f013 fddb 	bl	8023430 <__assert_func>
        state[sendingBlock] = EMPTY;
 800f87a:	687b      	ldr	r3, [r7, #4]
 800f87c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f880:	f8d3 36a0 	ldr.w	r3, [r3, #1696]	; 0x6a0
 800f884:	687a      	ldr	r2, [r7, #4]
 800f886:	4413      	add	r3, r2
 800f888:	2200      	movs	r2, #0
 800f88a:	711a      	strb	r2, [r3, #4]
    }
 800f88c:	bf00      	nop
 800f88e:	3708      	adds	r7, #8
 800f890:	46bd      	mov	sp, r7
 800f892:	bd80      	pop	{r7, pc}
 800f894:	0802542c 	.word	0x0802542c
 800f898:	0802544c 	.word	0x0802544c
 800f89c:	080250bc 	.word	0x080250bc

0800f8a0 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800f8a0:	b580      	push	{r7, lr}
 800f8a2:	af00      	add	r7, sp, #0
 800f8a4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f8a8:	2001      	movs	r0, #1
 800f8aa:	f7ff fdf9 	bl	800f4a0 <_Z41__static_initialization_and_destruction_0ii>
 800f8ae:	bd80      	pop	{r7, pc}

0800f8b0 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800f8b0:	b580      	push	{r7, lr}
 800f8b2:	af00      	add	r7, sp, #0
 800f8b4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f8b8:	2000      	movs	r0, #0
 800f8ba:	f7ff fdf1 	bl	800f4a0 <_Z41__static_initialization_and_destruction_0ii>
 800f8be:	bd80      	pop	{r7, pc}

0800f8c0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f8c0:	8880      	ldrh	r0, [r0, #4]
 800f8c2:	4770      	bx	lr

0800f8c4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f8c4:	b570      	push	{r4, r5, r6, lr}
 800f8c6:	6803      	ldr	r3, [r0, #0]
 800f8c8:	460c      	mov	r4, r1
 800f8ca:	2100      	movs	r1, #0
 800f8cc:	4605      	mov	r5, r0
 800f8ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f8d0:	4798      	blx	r3
 800f8d2:	4606      	mov	r6, r0
 800f8d4:	682b      	ldr	r3, [r5, #0]
 800f8d6:	4628      	mov	r0, r5
 800f8d8:	1ba4      	subs	r4, r4, r6
 800f8da:	6a1b      	ldr	r3, [r3, #32]
 800f8dc:	b2a4      	uxth	r4, r4
 800f8de:	4798      	blx	r3
 800f8e0:	fbb4 f0f0 	udiv	r0, r4, r0
 800f8e4:	bd70      	pop	{r4, r5, r6, pc}

0800f8e6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f8e6:	2300      	movs	r3, #0
 800f8e8:	8083      	strh	r3, [r0, #4]
 800f8ea:	4770      	bx	lr

0800f8ec <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f8ec:	b510      	push	{r4, lr}
 800f8ee:	6803      	ldr	r3, [r0, #0]
 800f8f0:	4604      	mov	r4, r0
 800f8f2:	8881      	ldrh	r1, [r0, #4]
 800f8f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f8f6:	4798      	blx	r3
 800f8f8:	88a3      	ldrh	r3, [r4, #4]
 800f8fa:	3301      	adds	r3, #1
 800f8fc:	80a3      	strh	r3, [r4, #4]
 800f8fe:	bd10      	pop	{r4, pc}

0800f900 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f900:	6803      	ldr	r3, [r0, #0]
 800f902:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f904:	4718      	bx	r3

0800f906 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f906:	4770      	bx	lr

0800f908 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f908:	4a02      	ldr	r2, [pc, #8]	; (800f914 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f90a:	6002      	str	r2, [r0, #0]
 800f90c:	2200      	movs	r2, #0
 800f90e:	8082      	strh	r2, [r0, #4]
 800f910:	4770      	bx	lr
 800f912:	bf00      	nop
 800f914:	08025d1c 	.word	0x08025d1c

0800f918 <_ZN8touchgfx9Container13getFirstChildEv>:
 800f918:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800f91a:	4770      	bx	lr

0800f91c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f91c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f91e:	2000      	movs	r0, #0
 800f920:	b12b      	cbz	r3, 800f92e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f922:	b920      	cbnz	r0, 800f92e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f924:	1a5a      	subs	r2, r3, r1
 800f926:	699b      	ldr	r3, [r3, #24]
 800f928:	4250      	negs	r0, r2
 800f92a:	4150      	adcs	r0, r2
 800f92c:	e7f8      	b.n	800f920 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f92e:	4770      	bx	lr

0800f930 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f930:	2300      	movs	r3, #0
 800f932:	6148      	str	r0, [r1, #20]
 800f934:	618b      	str	r3, [r1, #24]
 800f936:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f938:	b913      	cbnz	r3, 800f940 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f93a:	6281      	str	r1, [r0, #40]	; 0x28
 800f93c:	4770      	bx	lr
 800f93e:	4613      	mov	r3, r2
 800f940:	699a      	ldr	r2, [r3, #24]
 800f942:	2a00      	cmp	r2, #0
 800f944:	d1fb      	bne.n	800f93e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f946:	6199      	str	r1, [r3, #24]
 800f948:	4770      	bx	lr

0800f94a <_ZN8touchgfx9Container9removeAllEv>:
 800f94a:	2200      	movs	r2, #0
 800f94c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f94e:	b123      	cbz	r3, 800f95a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f950:	6999      	ldr	r1, [r3, #24]
 800f952:	6281      	str	r1, [r0, #40]	; 0x28
 800f954:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f958:	e7f8      	b.n	800f94c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f95a:	4770      	bx	lr

0800f95c <_ZN8touchgfx9Container6unlinkEv>:
 800f95c:	2300      	movs	r3, #0
 800f95e:	6283      	str	r3, [r0, #40]	; 0x28
 800f960:	4770      	bx	lr

0800f962 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f962:	2200      	movs	r2, #0
 800f964:	8002      	strh	r2, [r0, #0]
 800f966:	8042      	strh	r2, [r0, #2]
 800f968:	8082      	strh	r2, [r0, #4]
 800f96a:	80c2      	strh	r2, [r0, #6]
 800f96c:	4770      	bx	lr

0800f96e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f96e:	b570      	push	{r4, r5, r6, lr}
 800f970:	460d      	mov	r5, r1
 800f972:	4616      	mov	r6, r2
 800f974:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f976:	b13c      	cbz	r4, 800f988 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f978:	6823      	ldr	r3, [r4, #0]
 800f97a:	4620      	mov	r0, r4
 800f97c:	4632      	mov	r2, r6
 800f97e:	4629      	mov	r1, r5
 800f980:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f982:	4798      	blx	r3
 800f984:	69a4      	ldr	r4, [r4, #24]
 800f986:	e7f6      	b.n	800f976 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f988:	bd70      	pop	{r4, r5, r6, pc}

0800f98a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f98a:	b538      	push	{r3, r4, r5, lr}
 800f98c:	460d      	mov	r5, r1
 800f98e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f990:	b134      	cbz	r4, 800f9a0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f992:	682b      	ldr	r3, [r5, #0]
 800f994:	4621      	mov	r1, r4
 800f996:	4628      	mov	r0, r5
 800f998:	689b      	ldr	r3, [r3, #8]
 800f99a:	4798      	blx	r3
 800f99c:	69a4      	ldr	r4, [r4, #24]
 800f99e:	e7f7      	b.n	800f990 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f9a0:	bd38      	pop	{r3, r4, r5, pc}

0800f9a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f9a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f9a4:	b19b      	cbz	r3, 800f9ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f9a6:	428b      	cmp	r3, r1
 800f9a8:	d109      	bne.n	800f9be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f9aa:	699a      	ldr	r2, [r3, #24]
 800f9ac:	2100      	movs	r1, #0
 800f9ae:	6159      	str	r1, [r3, #20]
 800f9b0:	6282      	str	r2, [r0, #40]	; 0x28
 800f9b2:	b902      	cbnz	r2, 800f9b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f9b4:	4770      	bx	lr
 800f9b6:	6199      	str	r1, [r3, #24]
 800f9b8:	4770      	bx	lr
 800f9ba:	4613      	mov	r3, r2
 800f9bc:	b13a      	cbz	r2, 800f9ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f9be:	699a      	ldr	r2, [r3, #24]
 800f9c0:	428a      	cmp	r2, r1
 800f9c2:	d1fa      	bne.n	800f9ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f9c4:	698a      	ldr	r2, [r1, #24]
 800f9c6:	619a      	str	r2, [r3, #24]
 800f9c8:	2300      	movs	r3, #0
 800f9ca:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f9ce:	4770      	bx	lr

0800f9d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f9d0:	b410      	push	{r4}
 800f9d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f9d4:	4604      	mov	r4, r0
 800f9d6:	b92b      	cbnz	r3, 800f9e4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f9d8:	6803      	ldr	r3, [r0, #0]
 800f9da:	4611      	mov	r1, r2
 800f9dc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f9e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f9e2:	4718      	bx	r3
 800f9e4:	b941      	cbnz	r1, 800f9f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f9e6:	6193      	str	r3, [r2, #24]
 800f9e8:	6282      	str	r2, [r0, #40]	; 0x28
 800f9ea:	6154      	str	r4, [r2, #20]
 800f9ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f9f0:	4770      	bx	lr
 800f9f2:	4603      	mov	r3, r0
 800f9f4:	2800      	cmp	r0, #0
 800f9f6:	d0f9      	beq.n	800f9ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f9f8:	4299      	cmp	r1, r3
 800f9fa:	6998      	ldr	r0, [r3, #24]
 800f9fc:	d1f9      	bne.n	800f9f2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f9fe:	6190      	str	r0, [r2, #24]
 800fa00:	618a      	str	r2, [r1, #24]
 800fa02:	e7f2      	b.n	800f9ea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fa04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fa04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fa08:	461f      	mov	r7, r3
 800fa0a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800fa0e:	460d      	mov	r5, r1
 800fa10:	4616      	mov	r6, r2
 800fa12:	b103      	cbz	r3, 800fa16 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fa14:	6038      	str	r0, [r7, #0]
 800fa16:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fa18:	b314      	cbz	r4, 800fa60 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800fa1a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fa1e:	b1eb      	cbz	r3, 800fa5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800fa24:	428d      	cmp	r5, r1
 800fa26:	db19      	blt.n	800fa5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa28:	b289      	uxth	r1, r1
 800fa2a:	8923      	ldrh	r3, [r4, #8]
 800fa2c:	440b      	add	r3, r1
 800fa2e:	b21b      	sxth	r3, r3
 800fa30:	429d      	cmp	r5, r3
 800fa32:	da13      	bge.n	800fa5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa34:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fa38:	4296      	cmp	r6, r2
 800fa3a:	db0f      	blt.n	800fa5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa3c:	b292      	uxth	r2, r2
 800fa3e:	8963      	ldrh	r3, [r4, #10]
 800fa40:	4413      	add	r3, r2
 800fa42:	b21b      	sxth	r3, r3
 800fa44:	429e      	cmp	r6, r3
 800fa46:	da09      	bge.n	800fa5c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fa48:	6823      	ldr	r3, [r4, #0]
 800fa4a:	1ab2      	subs	r2, r6, r2
 800fa4c:	1a69      	subs	r1, r5, r1
 800fa4e:	4620      	mov	r0, r4
 800fa50:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800fa54:	b212      	sxth	r2, r2
 800fa56:	463b      	mov	r3, r7
 800fa58:	b209      	sxth	r1, r1
 800fa5a:	47c0      	blx	r8
 800fa5c:	69a4      	ldr	r4, [r4, #24]
 800fa5e:	e7db      	b.n	800fa18 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800fa60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fa64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800fa64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa68:	4c6d      	ldr	r4, [pc, #436]	; (800fc20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800fa6a:	b0a1      	sub	sp, #132	; 0x84
 800fa6c:	4606      	mov	r6, r0
 800fa6e:	6824      	ldr	r4, [r4, #0]
 800fa70:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800fa72:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800fa76:	2400      	movs	r4, #0
 800fa78:	9303      	str	r3, [sp, #12]
 800fa7a:	802c      	strh	r4, [r5, #0]
 800fa7c:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800fa7e:	802c      	strh	r4, [r5, #0]
 800fa80:	601c      	str	r4, [r3, #0]
 800fa82:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800fa86:	f7ff ffbd 	bl	800fa04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fa8a:	f1b9 0f03 	cmp.w	r9, #3
 800fa8e:	f340 80c1 	ble.w	800fc14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800fa92:	4631      	mov	r1, r6
 800fa94:	a80c      	add	r0, sp, #48	; 0x30
 800fa96:	f004 fc8d 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fa9a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800fa9e:	9306      	str	r3, [sp, #24]
 800faa0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800faa4:	9307      	str	r3, [sp, #28]
 800faa6:	9b03      	ldr	r3, [sp, #12]
 800faa8:	f8d3 a000 	ldr.w	sl, [r3]
 800faac:	f1ba 0f00 	cmp.w	sl, #0
 800fab0:	f000 80b3 	beq.w	800fc1a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800fab4:	4651      	mov	r1, sl
 800fab6:	a810      	add	r0, sp, #64	; 0x40
 800fab8:	f004 fc7c 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fabc:	2002      	movs	r0, #2
 800fabe:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800fac2:	9b01      	ldr	r3, [sp, #4]
 800fac4:	9a06      	ldr	r2, [sp, #24]
 800fac6:	fb91 f1f0 	sdiv	r1, r1, r0
 800faca:	189d      	adds	r5, r3, r2
 800facc:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800fad0:	9a07      	ldr	r2, [sp, #28]
 800fad2:	4419      	add	r1, r3
 800fad4:	9b02      	ldr	r3, [sp, #8]
 800fad6:	4413      	add	r3, r2
 800fad8:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800fadc:	1a6d      	subs	r5, r5, r1
 800fade:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800fae2:	fb92 f2f0 	sdiv	r2, r2, r0
 800fae6:	440a      	add	r2, r1
 800fae8:	1a9b      	subs	r3, r3, r2
 800faea:	435b      	muls	r3, r3
 800faec:	fb05 3505 	mla	r5, r5, r5, r3
 800faf0:	4f4c      	ldr	r7, [pc, #304]	; (800fc24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800faf2:	ac10      	add	r4, sp, #64	; 0x40
 800faf4:	f1b9 0f0c 	cmp.w	r9, #12
 800faf8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fafa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fafc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fafe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fb00:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800fb02:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800fb04:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800fb08:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800fb0c:	f04f 0303 	mov.w	r3, #3
 800fb10:	bfd8      	it	le
 800fb12:	f109 32ff 	addle.w	r2, r9, #4294967295
 800fb16:	f04f 0400 	mov.w	r4, #0
 800fb1a:	f8cd 9000 	str.w	r9, [sp]
 800fb1e:	bfcc      	ite	gt
 800fb20:	4698      	movgt	r8, r3
 800fb22:	fb92 f8f3 	sdivle	r8, r2, r3
 800fb26:	1c63      	adds	r3, r4, #1
 800fb28:	aa10      	add	r2, sp, #64	; 0x40
 800fb2a:	f004 0401 	and.w	r4, r4, #1
 800fb2e:	f04f 0b00 	mov.w	fp, #0
 800fb32:	9308      	str	r3, [sp, #32]
 800fb34:	9b00      	ldr	r3, [sp, #0]
 800fb36:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800fb3a:	fb93 f3f8 	sdiv	r3, r3, r8
 800fb3e:	3404      	adds	r4, #4
 800fb40:	b29b      	uxth	r3, r3
 800fb42:	9304      	str	r3, [sp, #16]
 800fb44:	9a04      	ldr	r2, [sp, #16]
 800fb46:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800fb4a:	fb13 f302 	smulbb	r3, r3, r2
 800fb4e:	9a01      	ldr	r2, [sp, #4]
 800fb50:	b29b      	uxth	r3, r3
 800fb52:	1899      	adds	r1, r3, r2
 800fb54:	9305      	str	r3, [sp, #20]
 800fb56:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800fb5a:	b209      	sxth	r1, r1
 800fb5c:	4299      	cmp	r1, r3
 800fb5e:	db4d      	blt.n	800fbfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fb60:	8932      	ldrh	r2, [r6, #8]
 800fb62:	4413      	add	r3, r2
 800fb64:	b21b      	sxth	r3, r3
 800fb66:	4299      	cmp	r1, r3
 800fb68:	da48      	bge.n	800fbfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fb6a:	9b04      	ldr	r3, [sp, #16]
 800fb6c:	6827      	ldr	r7, [r4, #0]
 800fb6e:	fb17 f703 	smulbb	r7, r7, r3
 800fb72:	9b02      	ldr	r3, [sp, #8]
 800fb74:	b2bf      	uxth	r7, r7
 800fb76:	18fa      	adds	r2, r7, r3
 800fb78:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800fb7c:	b212      	sxth	r2, r2
 800fb7e:	429a      	cmp	r2, r3
 800fb80:	db3c      	blt.n	800fbfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fb82:	8970      	ldrh	r0, [r6, #10]
 800fb84:	4403      	add	r3, r0
 800fb86:	b21b      	sxth	r3, r3
 800fb88:	429a      	cmp	r2, r3
 800fb8a:	da37      	bge.n	800fbfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fb8c:	2300      	movs	r3, #0
 800fb8e:	4630      	mov	r0, r6
 800fb90:	930b      	str	r3, [sp, #44]	; 0x2c
 800fb92:	ab0b      	add	r3, sp, #44	; 0x2c
 800fb94:	f7ff ff36 	bl	800fa04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800fb98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fb9a:	b37a      	cbz	r2, 800fbfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fb9c:	4552      	cmp	r2, sl
 800fb9e:	d02d      	beq.n	800fbfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800fba0:	4611      	mov	r1, r2
 800fba2:	a80e      	add	r0, sp, #56	; 0x38
 800fba4:	9209      	str	r2, [sp, #36]	; 0x24
 800fba6:	f004 fc05 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fbaa:	f04f 0e02 	mov.w	lr, #2
 800fbae:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800fbb2:	9a06      	ldr	r2, [sp, #24]
 800fbb4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800fbb8:	9b01      	ldr	r3, [sp, #4]
 800fbba:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800fbbe:	4413      	add	r3, r2
 800fbc0:	9a07      	ldr	r2, [sp, #28]
 800fbc2:	fb91 f1fe 	sdiv	r1, r1, lr
 800fbc6:	fb9c fcfe 	sdiv	ip, ip, lr
 800fbca:	4401      	add	r1, r0
 800fbcc:	1a58      	subs	r0, r3, r1
 800fbce:	9b02      	ldr	r3, [sp, #8]
 800fbd0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fbd4:	4413      	add	r3, r2
 800fbd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fbd8:	448c      	add	ip, r1
 800fbda:	eba3 030c 	sub.w	r3, r3, ip
 800fbde:	435b      	muls	r3, r3
 800fbe0:	fb00 3300 	mla	r3, r0, r0, r3
 800fbe4:	42ab      	cmp	r3, r5
 800fbe6:	d208      	bcs.n	800fbfa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800fbe8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fbea:	461d      	mov	r5, r3
 800fbec:	9803      	ldr	r0, [sp, #12]
 800fbee:	6001      	str	r1, [r0, #0]
 800fbf0:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800fbf2:	9805      	ldr	r0, [sp, #20]
 800fbf4:	8008      	strh	r0, [r1, #0]
 800fbf6:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fbf8:	800f      	strh	r7, [r1, #0]
 800fbfa:	4692      	mov	sl, r2
 800fbfc:	f10b 0b01 	add.w	fp, fp, #1
 800fc00:	3408      	adds	r4, #8
 800fc02:	f1bb 0f04 	cmp.w	fp, #4
 800fc06:	d19d      	bne.n	800fb44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800fc08:	9b00      	ldr	r3, [sp, #0]
 800fc0a:	9c08      	ldr	r4, [sp, #32]
 800fc0c:	444b      	add	r3, r9
 800fc0e:	4544      	cmp	r4, r8
 800fc10:	9300      	str	r3, [sp, #0]
 800fc12:	d188      	bne.n	800fb26 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fc14:	b021      	add	sp, #132	; 0x84
 800fc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc1a:	f04f 35ff 	mov.w	r5, #4294967295
 800fc1e:	e767      	b.n	800faf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fc20:	24002074 	.word	0x24002074
 800fc24:	0802551c 	.word	0x0802551c

0800fc28 <_ZN8touchgfx4RectaNERKS0_>:
 800fc28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc2c:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fc30:	888c      	ldrh	r4, [r1, #4]
 800fc32:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fc36:	443c      	add	r4, r7
 800fc38:	b2a4      	uxth	r4, r4
 800fc3a:	fa0f f884 	sxth.w	r8, r4
 800fc3e:	45c1      	cmp	r9, r8
 800fc40:	da2f      	bge.n	800fca2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fc42:	8882      	ldrh	r2, [r0, #4]
 800fc44:	444a      	add	r2, r9
 800fc46:	b292      	uxth	r2, r2
 800fc48:	fa0f fe82 	sxth.w	lr, r2
 800fc4c:	4577      	cmp	r7, lr
 800fc4e:	da28      	bge.n	800fca2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fc50:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800fc54:	88cb      	ldrh	r3, [r1, #6]
 800fc56:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fc5a:	442b      	add	r3, r5
 800fc5c:	b21b      	sxth	r3, r3
 800fc5e:	429e      	cmp	r6, r3
 800fc60:	da1f      	bge.n	800fca2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fc62:	88c3      	ldrh	r3, [r0, #6]
 800fc64:	4433      	add	r3, r6
 800fc66:	b29b      	uxth	r3, r3
 800fc68:	fa0f fc83 	sxth.w	ip, r3
 800fc6c:	4565      	cmp	r5, ip
 800fc6e:	da18      	bge.n	800fca2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fc70:	454f      	cmp	r7, r9
 800fc72:	bfb8      	it	lt
 800fc74:	464f      	movlt	r7, r9
 800fc76:	42b5      	cmp	r5, r6
 800fc78:	bfb8      	it	lt
 800fc7a:	4635      	movlt	r5, r6
 800fc7c:	45f0      	cmp	r8, lr
 800fc7e:	bfd8      	it	le
 800fc80:	4622      	movle	r2, r4
 800fc82:	1bd2      	subs	r2, r2, r7
 800fc84:	8082      	strh	r2, [r0, #4]
 800fc86:	884a      	ldrh	r2, [r1, #2]
 800fc88:	88c9      	ldrh	r1, [r1, #6]
 800fc8a:	8007      	strh	r7, [r0, #0]
 800fc8c:	440a      	add	r2, r1
 800fc8e:	8045      	strh	r5, [r0, #2]
 800fc90:	b292      	uxth	r2, r2
 800fc92:	b211      	sxth	r1, r2
 800fc94:	458c      	cmp	ip, r1
 800fc96:	bfa8      	it	ge
 800fc98:	4613      	movge	r3, r2
 800fc9a:	1b5b      	subs	r3, r3, r5
 800fc9c:	80c3      	strh	r3, [r0, #6]
 800fc9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fca2:	2300      	movs	r3, #0
 800fca4:	8003      	strh	r3, [r0, #0]
 800fca6:	8043      	strh	r3, [r0, #2]
 800fca8:	8083      	strh	r3, [r0, #4]
 800fcaa:	80c3      	strh	r3, [r0, #6]
 800fcac:	e7f7      	b.n	800fc9e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800fcae <_ZNK8touchgfx4Rect7isEmptyEv>:
 800fcae:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fcb2:	2b00      	cmp	r3, #0
 800fcb4:	dd06      	ble.n	800fcc4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800fcb6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800fcba:	2800      	cmp	r0, #0
 800fcbc:	bfcc      	ite	gt
 800fcbe:	2000      	movgt	r0, #0
 800fcc0:	2001      	movle	r0, #1
 800fcc2:	4770      	bx	lr
 800fcc4:	2001      	movs	r0, #1
 800fcc6:	4770      	bx	lr

0800fcc8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fcc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fccc:	2300      	movs	r3, #0
 800fcce:	4604      	mov	r4, r0
 800fcd0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fcd2:	8003      	strh	r3, [r0, #0]
 800fcd4:	8043      	strh	r3, [r0, #2]
 800fcd6:	8083      	strh	r3, [r0, #4]
 800fcd8:	80c3      	strh	r3, [r0, #6]
 800fcda:	2d00      	cmp	r5, #0
 800fcdc:	d040      	beq.n	800fd60 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fcde:	1d28      	adds	r0, r5, #4
 800fce0:	f7ff ffe5 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 800fce4:	b988      	cbnz	r0, 800fd0a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fce6:	4620      	mov	r0, r4
 800fce8:	f7ff ffe1 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 800fcec:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fcf0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fcf4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800fcf8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800fcfc:	b138      	cbz	r0, 800fd0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800fcfe:	8022      	strh	r2, [r4, #0]
 800fd00:	8063      	strh	r3, [r4, #2]
 800fd02:	f8a4 e004 	strh.w	lr, [r4, #4]
 800fd06:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fd0a:	69ad      	ldr	r5, [r5, #24]
 800fd0c:	e7e5      	b.n	800fcda <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fd0e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fd12:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fd16:	4290      	cmp	r0, r2
 800fd18:	4607      	mov	r7, r0
 800fd1a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fd1e:	460e      	mov	r6, r1
 800fd20:	bfa8      	it	ge
 800fd22:	4617      	movge	r7, r2
 800fd24:	4299      	cmp	r1, r3
 800fd26:	4472      	add	r2, lr
 800fd28:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800fd2c:	bfa8      	it	ge
 800fd2e:	461e      	movge	r6, r3
 800fd30:	4440      	add	r0, r8
 800fd32:	4471      	add	r1, lr
 800fd34:	4463      	add	r3, ip
 800fd36:	b200      	sxth	r0, r0
 800fd38:	8027      	strh	r7, [r4, #0]
 800fd3a:	b212      	sxth	r2, r2
 800fd3c:	8066      	strh	r6, [r4, #2]
 800fd3e:	b209      	sxth	r1, r1
 800fd40:	b21b      	sxth	r3, r3
 800fd42:	4290      	cmp	r0, r2
 800fd44:	bfac      	ite	ge
 800fd46:	ebc7 0200 	rsbge	r2, r7, r0
 800fd4a:	ebc7 0202 	rsblt	r2, r7, r2
 800fd4e:	4299      	cmp	r1, r3
 800fd50:	bfac      	ite	ge
 800fd52:	ebc6 0301 	rsbge	r3, r6, r1
 800fd56:	ebc6 0303 	rsblt	r3, r6, r3
 800fd5a:	80a2      	strh	r2, [r4, #4]
 800fd5c:	80e3      	strh	r3, [r4, #6]
 800fd5e:	e7d4      	b.n	800fd0a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fd60:	4620      	mov	r0, r4
 800fd62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fd66 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800fd66:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fd6a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fd6e:	b383      	cbz	r3, 800fdd2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fd70:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fd72:	b374      	cbz	r4, 800fdd2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fd74:	f9b1 5000 	ldrsh.w	r5, [r1]
 800fd78:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800fd7c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800fd80:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fd84:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fd88:	b303      	cbz	r3, 800fdcc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fd8a:	4668      	mov	r0, sp
 800fd8c:	1d21      	adds	r1, r4, #4
 800fd8e:	f8ad 5000 	strh.w	r5, [sp]
 800fd92:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fd96:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fd9a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800fd9e:	f7ff ff43 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 800fda2:	4668      	mov	r0, sp
 800fda4:	f7ff ff83 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 800fda8:	b980      	cbnz	r0, 800fdcc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fdaa:	f8bd 3000 	ldrh.w	r3, [sp]
 800fdae:	4669      	mov	r1, sp
 800fdb0:	88a2      	ldrh	r2, [r4, #4]
 800fdb2:	4620      	mov	r0, r4
 800fdb4:	1a9b      	subs	r3, r3, r2
 800fdb6:	88e2      	ldrh	r2, [r4, #6]
 800fdb8:	f8ad 3000 	strh.w	r3, [sp]
 800fdbc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fdc0:	1a9b      	subs	r3, r3, r2
 800fdc2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fdc6:	6823      	ldr	r3, [r4, #0]
 800fdc8:	689b      	ldr	r3, [r3, #8]
 800fdca:	4798      	blx	r3
 800fdcc:	69a4      	ldr	r4, [r4, #24]
 800fdce:	2c00      	cmp	r4, #0
 800fdd0:	d1d8      	bne.n	800fd84 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fdd2:	b002      	add	sp, #8
 800fdd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fdd8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fdd8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fdda:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fdde:	460d      	mov	r5, r1
 800fde0:	4616      	mov	r6, r2
 800fde2:	b323      	cbz	r3, 800fe2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fde4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fde6:	b314      	cbz	r4, 800fe2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fde8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fdec:	b1eb      	cbz	r3, 800fe2a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fdee:	6828      	ldr	r0, [r5, #0]
 800fdf0:	466b      	mov	r3, sp
 800fdf2:	6869      	ldr	r1, [r5, #4]
 800fdf4:	c303      	stmia	r3!, {r0, r1}
 800fdf6:	4668      	mov	r0, sp
 800fdf8:	1d21      	adds	r1, r4, #4
 800fdfa:	f7ff ff15 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 800fdfe:	4668      	mov	r0, sp
 800fe00:	f7ff ff55 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe04:	b988      	cbnz	r0, 800fe2a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fe06:	f8bd 3000 	ldrh.w	r3, [sp]
 800fe0a:	4669      	mov	r1, sp
 800fe0c:	88a2      	ldrh	r2, [r4, #4]
 800fe0e:	4620      	mov	r0, r4
 800fe10:	1a9b      	subs	r3, r3, r2
 800fe12:	88e2      	ldrh	r2, [r4, #6]
 800fe14:	f8ad 3000 	strh.w	r3, [sp]
 800fe18:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fe1c:	1a9b      	subs	r3, r3, r2
 800fe1e:	4632      	mov	r2, r6
 800fe20:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fe24:	6823      	ldr	r3, [r4, #0]
 800fe26:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fe28:	4798      	blx	r3
 800fe2a:	69a4      	ldr	r4, [r4, #24]
 800fe2c:	e7db      	b.n	800fde6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800fe2e:	b002      	add	sp, #8
 800fe30:	bd70      	pop	{r4, r5, r6, pc}

0800fe32 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800fe32:	4770      	bx	lr

0800fe34 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800fe34:	4770      	bx	lr

0800fe36 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800fe36:	6803      	ldr	r3, [r0, #0]
 800fe38:	b513      	push	{r0, r1, r4, lr}
 800fe3a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800fe3e:	2300      	movs	r3, #0
 800fe40:	e9cd 3300 	strd	r3, r3, [sp]
 800fe44:	466b      	mov	r3, sp
 800fe46:	47a0      	blx	r4
 800fe48:	b002      	add	sp, #8
 800fe4a:	bd10      	pop	{r4, pc}

0800fe4c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fe4c:	2301      	movs	r3, #1
 800fe4e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fe52:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fe56:	4770      	bx	lr

0800fe58 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800fe58:	2301      	movs	r3, #1
 800fe5a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fe5e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fe62:	4770      	bx	lr

0800fe64 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fe64:	6843      	ldr	r3, [r0, #4]
 800fe66:	2201      	movs	r2, #1
 800fe68:	725a      	strb	r2, [r3, #9]
 800fe6a:	6840      	ldr	r0, [r0, #4]
 800fe6c:	6803      	ldr	r3, [r0, #0]
 800fe6e:	691b      	ldr	r3, [r3, #16]
 800fe70:	4718      	bx	r3

0800fe72 <_ZN8touchgfx3HAL8flushDMAEv>:
 800fe72:	6840      	ldr	r0, [r0, #4]
 800fe74:	6803      	ldr	r3, [r0, #0]
 800fe76:	689b      	ldr	r3, [r3, #8]
 800fe78:	4718      	bx	r3

0800fe7a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800fe7a:	b530      	push	{r4, r5, lr}
 800fe7c:	b08b      	sub	sp, #44	; 0x2c
 800fe7e:	6804      	ldr	r4, [r0, #0]
 800fe80:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fe84:	9509      	str	r5, [sp, #36]	; 0x24
 800fe86:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fe8a:	9508      	str	r5, [sp, #32]
 800fe8c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fe90:	9507      	str	r5, [sp, #28]
 800fe92:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fe96:	9506      	str	r5, [sp, #24]
 800fe98:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fe9c:	9505      	str	r5, [sp, #20]
 800fe9e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fea2:	9504      	str	r5, [sp, #16]
 800fea4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fea8:	9503      	str	r5, [sp, #12]
 800feaa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800feae:	9502      	str	r5, [sp, #8]
 800feb0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800feb4:	e9cd 3500 	strd	r3, r5, [sp]
 800feb8:	4613      	mov	r3, r2
 800feba:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800febc:	2200      	movs	r2, #0
 800febe:	47a0      	blx	r4
 800fec0:	b00b      	add	sp, #44	; 0x2c
 800fec2:	bd30      	pop	{r4, r5, pc}

0800fec4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fec4:	4b04      	ldr	r3, [pc, #16]	; (800fed8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fec6:	781b      	ldrb	r3, [r3, #0]
 800fec8:	b123      	cbz	r3, 800fed4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800feca:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800fece:	f080 0001 	eor.w	r0, r0, #1
 800fed2:	4770      	bx	lr
 800fed4:	2001      	movs	r0, #1
 800fed6:	4770      	bx	lr
 800fed8:	24002072 	.word	0x24002072

0800fedc <_ZN8touchgfx3HAL8endFrameEv>:
 800fedc:	b510      	push	{r4, lr}
 800fede:	4604      	mov	r4, r0
 800fee0:	6840      	ldr	r0, [r0, #4]
 800fee2:	6803      	ldr	r3, [r0, #0]
 800fee4:	689b      	ldr	r3, [r3, #8]
 800fee6:	4798      	blx	r3
 800fee8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800feec:	b113      	cbz	r3, 800fef4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800feee:	2301      	movs	r3, #1
 800fef0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fef4:	bd10      	pop	{r4, pc}

0800fef6 <_ZN8touchgfx3HAL10initializeEv>:
 800fef6:	b510      	push	{r4, lr}
 800fef8:	4604      	mov	r4, r0
 800fefa:	f7fe f94f 	bl	800e19c <_ZN8touchgfx10OSWrappers10initializeEv>
 800fefe:	f7fd fe57 	bl	800dbb0 <_ZN8touchgfx4GPIO4initEv>
 800ff02:	6860      	ldr	r0, [r4, #4]
 800ff04:	6803      	ldr	r3, [r0, #0]
 800ff06:	68db      	ldr	r3, [r3, #12]
 800ff08:	4798      	blx	r3
 800ff0a:	68e0      	ldr	r0, [r4, #12]
 800ff0c:	6803      	ldr	r3, [r0, #0]
 800ff0e:	689b      	ldr	r3, [r3, #8]
 800ff10:	4798      	blx	r3
 800ff12:	6823      	ldr	r3, [r4, #0]
 800ff14:	4620      	mov	r0, r4
 800ff16:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ff18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff1c:	4718      	bx	r3

0800ff1e <_ZN8touchgfx3HAL9taskEntryEv>:
 800ff1e:	b508      	push	{r3, lr}
 800ff20:	6803      	ldr	r3, [r0, #0]
 800ff22:	4604      	mov	r4, r0
 800ff24:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ff28:	4798      	blx	r3
 800ff2a:	6823      	ldr	r3, [r4, #0]
 800ff2c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ff2e:	4620      	mov	r0, r4
 800ff30:	4798      	blx	r3
 800ff32:	f7fe f9a7 	bl	800e284 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800ff36:	6823      	ldr	r3, [r4, #0]
 800ff38:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ff3a:	e7f8      	b.n	800ff2e <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800ff3c <_ZN8touchgfx3HAL4tickEv>:
 800ff3c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ff3e:	6803      	ldr	r3, [r0, #0]
 800ff40:	4604      	mov	r4, r0
 800ff42:	4d5b      	ldr	r5, [pc, #364]	; (80100b0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800ff44:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800ff48:	4798      	blx	r3
 800ff4a:	2800      	cmp	r0, #0
 800ff4c:	f000 8095 	beq.w	801007a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ff50:	2001      	movs	r0, #1
 800ff52:	2600      	movs	r6, #0
 800ff54:	f7fd fe34 	bl	800dbc0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ff58:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800ff5c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ff60:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ff64:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800ff68:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800ff6c:	b133      	cbz	r3, 800ff7c <_ZN8touchgfx3HAL4tickEv+0x40>
 800ff6e:	6823      	ldr	r3, [r4, #0]
 800ff70:	4620      	mov	r0, r4
 800ff72:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ff76:	4798      	blx	r3
 800ff78:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800ff7c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ff80:	2601      	movs	r6, #1
 800ff82:	6862      	ldr	r2, [r4, #4]
 800ff84:	f083 0301 	eor.w	r3, r3, #1
 800ff88:	702e      	strb	r6, [r5, #0]
 800ff8a:	7253      	strb	r3, [r2, #9]
 800ff8c:	f003 f8fe 	bl	801318c <_ZN8touchgfx11Application11getInstanceEv>
 800ff90:	6803      	ldr	r3, [r0, #0]
 800ff92:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ff94:	4798      	blx	r3
 800ff96:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ff9a:	b90b      	cbnz	r3, 800ffa0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ff9c:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800ffa0:	f003 f8f4 	bl	801318c <_ZN8touchgfx11Application11getInstanceEv>
 800ffa4:	6803      	ldr	r3, [r0, #0]
 800ffa6:	695b      	ldr	r3, [r3, #20]
 800ffa8:	4798      	blx	r3
 800ffaa:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800ffac:	6803      	ldr	r3, [r0, #0]
 800ffae:	691b      	ldr	r3, [r3, #16]
 800ffb0:	4798      	blx	r3
 800ffb2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800ffb6:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800ffba:	3b01      	subs	r3, #1
 800ffbc:	b2db      	uxtb	r3, r3
 800ffbe:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ffc2:	b10a      	cbz	r2, 800ffc8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ffc4:	2b00      	cmp	r3, #0
 800ffc6:	d1eb      	bne.n	800ffa0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ffc8:	4a3a      	ldr	r2, [pc, #232]	; (80100b4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ffca:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800ffce:	7813      	ldrb	r3, [r2, #0]
 800ffd0:	3301      	adds	r3, #1
 800ffd2:	b25b      	sxtb	r3, r3
 800ffd4:	4299      	cmp	r1, r3
 800ffd6:	7013      	strb	r3, [r2, #0]
 800ffd8:	dc10      	bgt.n	800fffc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ffda:	2300      	movs	r3, #0
 800ffdc:	68e0      	ldr	r0, [r4, #12]
 800ffde:	a902      	add	r1, sp, #8
 800ffe0:	7013      	strb	r3, [r2, #0]
 800ffe2:	aa03      	add	r2, sp, #12
 800ffe4:	6803      	ldr	r3, [r0, #0]
 800ffe6:	68db      	ldr	r3, [r3, #12]
 800ffe8:	4798      	blx	r3
 800ffea:	6823      	ldr	r3, [r4, #0]
 800ffec:	2800      	cmp	r0, #0
 800ffee:	d050      	beq.n	8010092 <_ZN8touchgfx3HAL4tickEv+0x156>
 800fff0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fff4:	4620      	mov	r0, r4
 800fff6:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fffa:	4798      	blx	r3
 800fffc:	2300      	movs	r3, #0
 800fffe:	6960      	ldr	r0, [r4, #20]
 8010000:	f88d 3007 	strb.w	r3, [sp, #7]
 8010004:	b158      	cbz	r0, 801001e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010006:	6803      	ldr	r3, [r0, #0]
 8010008:	f10d 0107 	add.w	r1, sp, #7
 801000c:	68db      	ldr	r3, [r3, #12]
 801000e:	4798      	blx	r3
 8010010:	b128      	cbz	r0, 801001e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010012:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010014:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010018:	6803      	ldr	r3, [r0, #0]
 801001a:	68db      	ldr	r3, [r3, #12]
 801001c:	4798      	blx	r3
 801001e:	f104 001c 	add.w	r0, r4, #28
 8010022:	f013 f921 	bl	8023268 <_ZN8touchgfx8Gestures4tickEv>
 8010026:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801002a:	b30b      	cbz	r3, 8010070 <_ZN8touchgfx3HAL4tickEv+0x134>
 801002c:	6920      	ldr	r0, [r4, #16]
 801002e:	6803      	ldr	r3, [r0, #0]
 8010030:	691b      	ldr	r3, [r3, #16]
 8010032:	4798      	blx	r3
 8010034:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010036:	4606      	mov	r6, r0
 8010038:	b903      	cbnz	r3, 801003c <_ZN8touchgfx3HAL4tickEv+0x100>
 801003a:	6760      	str	r0, [r4, #116]	; 0x74
 801003c:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801003e:	4a1e      	ldr	r2, [pc, #120]	; (80100b8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010040:	1af3      	subs	r3, r6, r3
 8010042:	4293      	cmp	r3, r2
 8010044:	d914      	bls.n	8010070 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010046:	6920      	ldr	r0, [r4, #16]
 8010048:	6803      	ldr	r3, [r0, #0]
 801004a:	699b      	ldr	r3, [r3, #24]
 801004c:	4798      	blx	r3
 801004e:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010050:	2264      	movs	r2, #100	; 0x64
 8010052:	1af3      	subs	r3, r6, r3
 8010054:	fbb3 f3f2 	udiv	r3, r3, r2
 8010058:	fbb0 f0f3 	udiv	r0, r0, r3
 801005c:	2800      	cmp	r0, #0
 801005e:	dc1d      	bgt.n	801009c <_ZN8touchgfx3HAL4tickEv+0x160>
 8010060:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010064:	6920      	ldr	r0, [r4, #16]
 8010066:	2100      	movs	r1, #0
 8010068:	6803      	ldr	r3, [r0, #0]
 801006a:	69db      	ldr	r3, [r3, #28]
 801006c:	4798      	blx	r3
 801006e:	6766      	str	r6, [r4, #116]	; 0x74
 8010070:	f003 f88c 	bl	801318c <_ZN8touchgfx11Application11getInstanceEv>
 8010074:	6803      	ldr	r3, [r0, #0]
 8010076:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010078:	4798      	blx	r3
 801007a:	6823      	ldr	r3, [r4, #0]
 801007c:	4620      	mov	r0, r4
 801007e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010082:	4798      	blx	r3
 8010084:	2001      	movs	r0, #1
 8010086:	f7fd fdb7 	bl	800dbf8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801008a:	2300      	movs	r3, #0
 801008c:	702b      	strb	r3, [r5, #0]
 801008e:	b004      	add	sp, #16
 8010090:	bd70      	pop	{r4, r5, r6, pc}
 8010092:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010096:	4620      	mov	r0, r4
 8010098:	4798      	blx	r3
 801009a:	e7af      	b.n	800fffc <_ZN8touchgfx3HAL4tickEv+0xc0>
 801009c:	2863      	cmp	r0, #99	; 0x63
 801009e:	bfcb      	itete	gt
 80100a0:	2300      	movgt	r3, #0
 80100a2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80100a6:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80100aa:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80100ae:	e7d9      	b.n	8010064 <_ZN8touchgfx3HAL4tickEv+0x128>
 80100b0:	24002078 	.word	0x24002078
 80100b4:	24002079 	.word	0x24002079
 80100b8:	05f5e100 	.word	0x05f5e100

080100bc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80100bc:	b510      	push	{r4, lr}
 80100be:	4604      	mov	r4, r0
 80100c0:	f7fe f894 	bl	800e1ec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80100c4:	2200      	movs	r2, #0
 80100c6:	6863      	ldr	r3, [r4, #4]
 80100c8:	729a      	strb	r2, [r3, #10]
 80100ca:	bd10      	pop	{r4, pc}

080100cc <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80100cc:	65c1      	str	r1, [r0, #92]	; 0x5c
 80100ce:	301c      	adds	r0, #28
 80100d0:	f013 b8c8 	b.w	8023264 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080100d4 <_ZN8touchgfx3HAL5touchEll>:
 80100d4:	b530      	push	{r4, r5, lr}
 80100d6:	b087      	sub	sp, #28
 80100d8:	4604      	mov	r4, r0
 80100da:	a804      	add	r0, sp, #16
 80100dc:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80100e0:	f002 fe46 	bl	8012d70 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80100e4:	9b04      	ldr	r3, [sp, #16]
 80100e6:	a906      	add	r1, sp, #24
 80100e8:	a803      	add	r0, sp, #12
 80100ea:	f8ad 300c 	strh.w	r3, [sp, #12]
 80100ee:	9b05      	ldr	r3, [sp, #20]
 80100f0:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80100f4:	f002 fe8e 	bl	8012e14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80100f8:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80100fc:	f104 001c 	add.w	r0, r4, #28
 8010100:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010104:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010108:	b189      	cbz	r1, 801012e <_ZN8touchgfx3HAL5touchEll+0x5a>
 801010a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 801010e:	9300      	str	r3, [sp, #0]
 8010110:	4613      	mov	r3, r2
 8010112:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010116:	462a      	mov	r2, r5
 8010118:	f013 f8b4 	bl	8023284 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 801011c:	b128      	cbz	r0, 801012a <_ZN8touchgfx3HAL5touchEll+0x56>
 801011e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010122:	6623      	str	r3, [r4, #96]	; 0x60
 8010124:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010128:	6663      	str	r3, [r4, #100]	; 0x64
 801012a:	b007      	add	sp, #28
 801012c:	bd30      	pop	{r4, r5, pc}
 801012e:	f013 f8e9 	bl	8023304 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010132:	2301      	movs	r3, #1
 8010134:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010138:	e7f1      	b.n	801011e <_ZN8touchgfx3HAL5touchEll+0x4a>

0801013a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801013a:	b510      	push	{r4, lr}
 801013c:	2b00      	cmp	r3, #0
 801013e:	d046      	beq.n	80101ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010140:	ea81 0002 	eor.w	r0, r1, r2
 8010144:	07c4      	lsls	r4, r0, #31
 8010146:	d508      	bpl.n	801015a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010148:	440b      	add	r3, r1
 801014a:	3a01      	subs	r2, #1
 801014c:	428b      	cmp	r3, r1
 801014e:	d93e      	bls.n	80101ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010150:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010154:	f801 0b01 	strb.w	r0, [r1], #1
 8010158:	e7f8      	b.n	801014c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801015a:	07d0      	lsls	r0, r2, #31
 801015c:	bf42      	ittt	mi
 801015e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010162:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010166:	f801 0b01 	strbmi.w	r0, [r1], #1
 801016a:	2b01      	cmp	r3, #1
 801016c:	d911      	bls.n	8010192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801016e:	ea81 0402 	eor.w	r4, r1, r2
 8010172:	4610      	mov	r0, r2
 8010174:	07a4      	lsls	r4, r4, #30
 8010176:	d022      	beq.n	80101be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010178:	f023 0401 	bic.w	r4, r3, #1
 801017c:	440c      	add	r4, r1
 801017e:	428c      	cmp	r4, r1
 8010180:	4602      	mov	r2, r0
 8010182:	d904      	bls.n	801018e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010184:	8812      	ldrh	r2, [r2, #0]
 8010186:	3002      	adds	r0, #2
 8010188:	f821 2b02 	strh.w	r2, [r1], #2
 801018c:	e7f7      	b.n	801017e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801018e:	f003 0301 	and.w	r3, r3, #1
 8010192:	f023 0003 	bic.w	r0, r3, #3
 8010196:	4408      	add	r0, r1
 8010198:	4288      	cmp	r0, r1
 801019a:	4614      	mov	r4, r2
 801019c:	d904      	bls.n	80101a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801019e:	6824      	ldr	r4, [r4, #0]
 80101a0:	3204      	adds	r2, #4
 80101a2:	f841 4b04 	str.w	r4, [r1], #4
 80101a6:	e7f7      	b.n	8010198 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80101a8:	f003 0303 	and.w	r3, r3, #3
 80101ac:	3a01      	subs	r2, #1
 80101ae:	440b      	add	r3, r1
 80101b0:	428b      	cmp	r3, r1
 80101b2:	d90c      	bls.n	80101ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80101b4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80101b8:	f801 0b01 	strb.w	r0, [r1], #1
 80101bc:	e7f8      	b.n	80101b0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80101be:	0790      	lsls	r0, r2, #30
 80101c0:	d0e7      	beq.n	8010192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80101c2:	f832 0b02 	ldrh.w	r0, [r2], #2
 80101c6:	3b02      	subs	r3, #2
 80101c8:	f821 0b02 	strh.w	r0, [r1], #2
 80101cc:	e7e1      	b.n	8010192 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80101ce:	2001      	movs	r0, #1
 80101d0:	bd10      	pop	{r4, pc}

080101d2 <_ZN8touchgfx3HAL7noTouchEv>:
 80101d2:	b510      	push	{r4, lr}
 80101d4:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80101d8:	4604      	mov	r4, r0
 80101da:	b153      	cbz	r3, 80101f2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80101dc:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80101e0:	2101      	movs	r1, #1
 80101e2:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80101e6:	301c      	adds	r0, #28
 80101e8:	f013 f88c 	bl	8023304 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80101ec:	2300      	movs	r3, #0
 80101ee:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80101f2:	bd10      	pop	{r4, pc}

080101f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80101f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80101f8:	b085      	sub	sp, #20
 80101fa:	4604      	mov	r4, r0
 80101fc:	2000      	movs	r0, #0
 80101fe:	4699      	mov	r9, r3
 8010200:	ad04      	add	r5, sp, #16
 8010202:	460f      	mov	r7, r1
 8010204:	4690      	mov	r8, r2
 8010206:	f845 0d04 	str.w	r0, [r5, #-4]!
 801020a:	69a0      	ldr	r0, [r4, #24]
 801020c:	6806      	ldr	r6, [r0, #0]
 801020e:	9501      	str	r5, [sp, #4]
 8010210:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010214:	9500      	str	r5, [sp, #0]
 8010216:	6835      	ldr	r5, [r6, #0]
 8010218:	47a8      	blx	r5
 801021a:	4d10      	ldr	r5, [pc, #64]	; (801025c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 801021c:	4606      	mov	r6, r0
 801021e:	f8a5 9000 	strh.w	r9, [r5]
 8010222:	f7fb fce7 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 8010226:	6803      	ldr	r3, [r0, #0]
 8010228:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801022a:	4798      	blx	r3
 801022c:	b128      	cbz	r0, 801023a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801022e:	2801      	cmp	r0, #1
 8010230:	d00b      	beq.n	801024a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010232:	4630      	mov	r0, r6
 8010234:	b005      	add	sp, #20
 8010236:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801023a:	882b      	ldrh	r3, [r5, #0]
 801023c:	fb08 7203 	mla	r2, r8, r3, r7
 8010240:	9b03      	ldr	r3, [sp, #12]
 8010242:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010246:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010248:	e7f3      	b.n	8010232 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801024a:	882a      	ldrh	r2, [r5, #0]
 801024c:	9b03      	ldr	r3, [sp, #12]
 801024e:	fb08 7202 	mla	r2, r8, r2, r7
 8010252:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010256:	1a9a      	subs	r2, r3, r2
 8010258:	63e2      	str	r2, [r4, #60]	; 0x3c
 801025a:	e7ea      	b.n	8010232 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801025c:	2400206e 	.word	0x2400206e

08010260 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010260:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010262:	b08b      	sub	sp, #44	; 0x2c
 8010264:	4617      	mov	r7, r2
 8010266:	4604      	mov	r4, r0
 8010268:	460e      	mov	r6, r1
 801026a:	461d      	mov	r5, r3
 801026c:	f7fb fcc2 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 8010270:	6803      	ldr	r3, [r0, #0]
 8010272:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010274:	4798      	blx	r3
 8010276:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801027a:	9007      	str	r0, [sp, #28]
 801027c:	4631      	mov	r1, r6
 801027e:	6822      	ldr	r2, [r4, #0]
 8010280:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010284:	4b0c      	ldr	r3, [pc, #48]	; (80102b8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010286:	4620      	mov	r0, r4
 8010288:	881b      	ldrh	r3, [r3, #0]
 801028a:	9306      	str	r3, [sp, #24]
 801028c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010290:	9305      	str	r3, [sp, #20]
 8010292:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010296:	9304      	str	r3, [sp, #16]
 8010298:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801029c:	9303      	str	r3, [sp, #12]
 801029e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80102a2:	9302      	str	r3, [sp, #8]
 80102a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80102a8:	e9cd 5300 	strd	r5, r3, [sp]
 80102ac:	463b      	mov	r3, r7
 80102ae:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80102b0:	2200      	movs	r2, #0
 80102b2:	47a8      	blx	r5
 80102b4:	b00b      	add	sp, #44	; 0x2c
 80102b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80102b8:	2400206e 	.word	0x2400206e

080102bc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80102bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80102c0:	4698      	mov	r8, r3
 80102c2:	6803      	ldr	r3, [r0, #0]
 80102c4:	b08b      	sub	sp, #44	; 0x2c
 80102c6:	4617      	mov	r7, r2
 80102c8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80102ca:	460e      	mov	r6, r1
 80102cc:	4b13      	ldr	r3, [pc, #76]	; (801031c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80102ce:	4604      	mov	r4, r0
 80102d0:	f8b3 9000 	ldrh.w	r9, [r3]
 80102d4:	f7fb fc8e 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 80102d8:	6803      	ldr	r3, [r0, #0]
 80102da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80102dc:	4798      	blx	r3
 80102de:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80102e2:	2200      	movs	r2, #0
 80102e4:	4631      	mov	r1, r6
 80102e6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80102ea:	2302      	movs	r3, #2
 80102ec:	4620      	mov	r0, r4
 80102ee:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80102f2:	2301      	movs	r3, #1
 80102f4:	9305      	str	r3, [sp, #20]
 80102f6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80102fa:	9304      	str	r3, [sp, #16]
 80102fc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010300:	9303      	str	r3, [sp, #12]
 8010302:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010306:	9302      	str	r3, [sp, #8]
 8010308:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801030c:	e9cd 8300 	strd	r8, r3, [sp]
 8010310:	463b      	mov	r3, r7
 8010312:	47a8      	blx	r5
 8010314:	b00b      	add	sp, #44	; 0x2c
 8010316:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801031a:	bf00      	nop
 801031c:	2400206e 	.word	0x2400206e

08010320 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010320:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010324:	4698      	mov	r8, r3
 8010326:	6803      	ldr	r3, [r0, #0]
 8010328:	b087      	sub	sp, #28
 801032a:	460e      	mov	r6, r1
 801032c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801032e:	4617      	mov	r7, r2
 8010330:	4b0f      	ldr	r3, [pc, #60]	; (8010370 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010332:	4604      	mov	r4, r0
 8010334:	f8b3 9000 	ldrh.w	r9, [r3]
 8010338:	f7fb fc5c 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 801033c:	6803      	ldr	r3, [r0, #0]
 801033e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010340:	4798      	blx	r3
 8010342:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010346:	463a      	mov	r2, r7
 8010348:	4631      	mov	r1, r6
 801034a:	f8cd 900c 	str.w	r9, [sp, #12]
 801034e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010352:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010356:	4620      	mov	r0, r4
 8010358:	9302      	str	r3, [sp, #8]
 801035a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801035e:	9301      	str	r3, [sp, #4]
 8010360:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010364:	9300      	str	r3, [sp, #0]
 8010366:	4643      	mov	r3, r8
 8010368:	47a8      	blx	r5
 801036a:	b007      	add	sp, #28
 801036c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010370:	2400206e 	.word	0x2400206e

08010374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010378:	4604      	mov	r4, r0
 801037a:	b08f      	sub	sp, #60	; 0x3c
 801037c:	4610      	mov	r0, r2
 801037e:	460d      	mov	r5, r1
 8010380:	4691      	mov	r9, r2
 8010382:	461e      	mov	r6, r3
 8010384:	f005 fb4a 	bl	8015a1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010388:	2800      	cmp	r0, #0
 801038a:	f000 809d 	beq.w	80104c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801038e:	6823      	ldr	r3, [r4, #0]
 8010390:	4620      	mov	r0, r4
 8010392:	f8df b198 	ldr.w	fp, [pc, #408]	; 801052c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010396:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801039a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801039c:	4798      	blx	r3
 801039e:	6823      	ldr	r3, [r4, #0]
 80103a0:	4620      	mov	r0, r4
 80103a2:	f8df a18c 	ldr.w	sl, [pc, #396]	; 8010530 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80103a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80103a8:	4798      	blx	r3
 80103aa:	f8bb 3000 	ldrh.w	r3, [fp]
 80103ae:	4f5c      	ldr	r7, [pc, #368]	; (8010520 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80103b0:	9301      	str	r3, [sp, #4]
 80103b2:	f8ba 3000 	ldrh.w	r3, [sl]
 80103b6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80103ba:	4640      	mov	r0, r8
 80103bc:	9302      	str	r3, [sp, #8]
 80103be:	883b      	ldrh	r3, [r7, #0]
 80103c0:	9303      	str	r3, [sp, #12]
 80103c2:	4b58      	ldr	r3, [pc, #352]	; (8010524 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80103c4:	881a      	ldrh	r2, [r3, #0]
 80103c6:	9305      	str	r3, [sp, #20]
 80103c8:	9204      	str	r2, [sp, #16]
 80103ca:	f005 fbbb 	bl	8015b44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80103ce:	8038      	strh	r0, [r7, #0]
 80103d0:	4640      	mov	r0, r8
 80103d2:	f005 fbeb 	bl	8015bac <_ZNK8touchgfx6Bitmap9getHeightEv>
 80103d6:	9b05      	ldr	r3, [sp, #20]
 80103d8:	b280      	uxth	r0, r0
 80103da:	8018      	strh	r0, [r3, #0]
 80103dc:	4b52      	ldr	r3, [pc, #328]	; (8010528 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80103de:	781b      	ldrb	r3, [r3, #0]
 80103e0:	2b00      	cmp	r3, #0
 80103e2:	d174      	bne.n	80104ce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80103e4:	883b      	ldrh	r3, [r7, #0]
 80103e6:	f8aa 0000 	strh.w	r0, [sl]
 80103ea:	f8ab 3000 	strh.w	r3, [fp]
 80103ee:	4648      	mov	r0, r9
 80103f0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80103f4:	f005 fb12 	bl	8015a1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80103f8:	2200      	movs	r2, #0
 80103fa:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80103fe:	4611      	mov	r1, r2
 8010400:	4628      	mov	r0, r5
 8010402:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010406:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801040a:	f7fc f974 	bl	800c6f6 <_ZN8touchgfx8Drawable5setXYEss>
 801040e:	2301      	movs	r3, #1
 8010410:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010414:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8010418:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801041c:	2b00      	cmp	r3, #0
 801041e:	dd5c      	ble.n	80104da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010420:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010424:	2b00      	cmp	r3, #0
 8010426:	dd58      	ble.n	80104da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010428:	462a      	mov	r2, r5
 801042a:	ab0a      	add	r3, sp, #40	; 0x28
 801042c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010430:	6851      	ldr	r1, [r2, #4]
 8010432:	c303      	stmia	r3!, {r0, r1}
 8010434:	4631      	mov	r1, r6
 8010436:	a80a      	add	r0, sp, #40	; 0x28
 8010438:	f7ff fbf6 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 801043c:	4b38      	ldr	r3, [pc, #224]	; (8010520 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801043e:	2100      	movs	r1, #0
 8010440:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010444:	4b37      	ldr	r3, [pc, #220]	; (8010524 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010446:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801044a:	aa0a      	add	r2, sp, #40	; 0x28
 801044c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010450:	910c      	str	r1, [sp, #48]	; 0x30
 8010452:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010456:	ab08      	add	r3, sp, #32
 8010458:	e892 0003 	ldmia.w	r2, {r0, r1}
 801045c:	e883 0003 	stmia.w	r3, {r0, r1}
 8010460:	4618      	mov	r0, r3
 8010462:	a90c      	add	r1, sp, #48	; 0x30
 8010464:	f7ff fbe0 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 8010468:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801046a:	2b00      	cmp	r3, #0
 801046c:	d13c      	bne.n	80104e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801046e:	2000      	movs	r0, #0
 8010470:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010474:	2600      	movs	r6, #0
 8010476:	696b      	ldr	r3, [r5, #20]
 8010478:	a908      	add	r1, sp, #32
 801047a:	682a      	ldr	r2, [r5, #0]
 801047c:	4628      	mov	r0, r5
 801047e:	9305      	str	r3, [sp, #20]
 8010480:	616e      	str	r6, [r5, #20]
 8010482:	6892      	ldr	r2, [r2, #8]
 8010484:	4790      	blx	r2
 8010486:	9b05      	ldr	r3, [sp, #20]
 8010488:	4652      	mov	r2, sl
 801048a:	4649      	mov	r1, r9
 801048c:	616b      	str	r3, [r5, #20]
 801048e:	4628      	mov	r0, r5
 8010490:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010494:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8010498:	f7fc f92d 	bl	800c6f6 <_ZN8touchgfx8Drawable5setXYEss>
 801049c:	9a01      	ldr	r2, [sp, #4]
 801049e:	4b23      	ldr	r3, [pc, #140]	; (801052c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80104a0:	4620      	mov	r0, r4
 80104a2:	801a      	strh	r2, [r3, #0]
 80104a4:	9a02      	ldr	r2, [sp, #8]
 80104a6:	4b22      	ldr	r3, [pc, #136]	; (8010530 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80104a8:	801a      	strh	r2, [r3, #0]
 80104aa:	9a03      	ldr	r2, [sp, #12]
 80104ac:	4b1c      	ldr	r3, [pc, #112]	; (8010520 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80104ae:	801a      	strh	r2, [r3, #0]
 80104b0:	4b1c      	ldr	r3, [pc, #112]	; (8010524 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80104b2:	9a04      	ldr	r2, [sp, #16]
 80104b4:	801a      	strh	r2, [r3, #0]
 80104b6:	6823      	ldr	r3, [r4, #0]
 80104b8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80104bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80104be:	4798      	blx	r3
 80104c0:	6823      	ldr	r3, [r4, #0]
 80104c2:	4620      	mov	r0, r4
 80104c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104c6:	4798      	blx	r3
 80104c8:	b00f      	add	sp, #60	; 0x3c
 80104ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104ce:	883b      	ldrh	r3, [r7, #0]
 80104d0:	f8ab 0000 	strh.w	r0, [fp]
 80104d4:	f8aa 3000 	strh.w	r3, [sl]
 80104d8:	e789      	b.n	80103ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80104da:	462a      	mov	r2, r5
 80104dc:	ab0a      	add	r3, sp, #40	; 0x28
 80104de:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80104e2:	6851      	ldr	r1, [r2, #4]
 80104e4:	c303      	stmia	r3!, {r0, r1}
 80104e6:	e7a9      	b.n	801043c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80104e8:	a807      	add	r0, sp, #28
 80104ea:	f005 fc9b 	bl	8015e24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80104ee:	4606      	mov	r6, r0
 80104f0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80104f2:	6803      	ldr	r3, [r0, #0]
 80104f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104f6:	4798      	blx	r3
 80104f8:	4286      	cmp	r6, r0
 80104fa:	d1b8      	bne.n	801046e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80104fc:	f7fb fb7a 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 8010500:	6803      	ldr	r3, [r0, #0]
 8010502:	4606      	mov	r6, r0
 8010504:	a807      	add	r0, sp, #28
 8010506:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010508:	9305      	str	r3, [sp, #20]
 801050a:	f005 fc8b 	bl	8015e24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801050e:	9b05      	ldr	r3, [sp, #20]
 8010510:	4601      	mov	r1, r0
 8010512:	4630      	mov	r0, r6
 8010514:	4798      	blx	r3
 8010516:	f080 0001 	eor.w	r0, r0, #1
 801051a:	b2c0      	uxtb	r0, r0
 801051c:	e7a8      	b.n	8010470 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801051e:	bf00      	nop
 8010520:	24002068 	.word	0x24002068
 8010524:	2400206a 	.word	0x2400206a
 8010528:	2400206c 	.word	0x2400206c
 801052c:	2400206e 	.word	0x2400206e
 8010530:	24002070 	.word	0x24002070

08010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010534:	4b07      	ldr	r3, [pc, #28]	; (8010554 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010536:	b510      	push	{r4, lr}
 8010538:	781b      	ldrb	r3, [r3, #0]
 801053a:	4604      	mov	r4, r0
 801053c:	b13b      	cbz	r3, 801054e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801053e:	6803      	ldr	r3, [r0, #0]
 8010540:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010542:	4798      	blx	r3
 8010544:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010546:	4283      	cmp	r3, r0
 8010548:	d101      	bne.n	801054e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801054a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 801054c:	bd10      	pop	{r4, pc}
 801054e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010550:	e7fc      	b.n	801054c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010552:	bf00      	nop
 8010554:	24002072 	.word	0x24002072

08010558 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010558:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801055c:	461d      	mov	r5, r3
 801055e:	b08a      	sub	sp, #40	; 0x28
 8010560:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010564:	4690      	mov	r8, r2
 8010566:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801056a:	2400      	movs	r4, #0
 801056c:	4607      	mov	r7, r0
 801056e:	fb06 8505 	mla	r5, r6, r5, r8
 8010572:	9404      	str	r4, [sp, #16]
 8010574:	f88d 4020 	strb.w	r4, [sp, #32]
 8010578:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801057c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010580:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010584:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010588:	f8ad 301a 	strh.w	r3, [sp, #26]
 801058c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010590:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010594:	f7ff ffce 	bl	8010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010598:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801059c:	6878      	ldr	r0, [r7, #4]
 801059e:	f8ad 601e 	strh.w	r6, [sp, #30]
 80105a2:	a901      	add	r1, sp, #4
 80105a4:	9505      	str	r5, [sp, #20]
 80105a6:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80105aa:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80105ae:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80105b2:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80105b6:	6803      	ldr	r3, [r0, #0]
 80105b8:	685b      	ldr	r3, [r3, #4]
 80105ba:	4798      	blx	r3
 80105bc:	b00a      	add	sp, #40	; 0x28
 80105be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080105c2 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80105c2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105c6:	b08b      	sub	sp, #44	; 0x2c
 80105c8:	2400      	movs	r4, #0
 80105ca:	4691      	mov	r9, r2
 80105cc:	461d      	mov	r5, r3
 80105ce:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80105d2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80105d6:	4688      	mov	r8, r1
 80105d8:	4607      	mov	r7, r0
 80105da:	9404      	str	r4, [sp, #16]
 80105dc:	fb06 9505 	mla	r5, r6, r5, r9
 80105e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80105e4:	f7ff ffa6 	bl	8010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80105e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80105ec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80105f0:	6878      	ldr	r0, [r7, #4]
 80105f2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80105f6:	a901      	add	r1, sp, #4
 80105f8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80105fc:	9505      	str	r5, [sp, #20]
 80105fe:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010602:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010606:	f8ad 601e 	strh.w	r6, [sp, #30]
 801060a:	f8cd 8010 	str.w	r8, [sp, #16]
 801060e:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010612:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010616:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801061a:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 801061e:	6803      	ldr	r3, [r0, #0]
 8010620:	685b      	ldr	r3, [r3, #4]
 8010622:	4798      	blx	r3
 8010624:	b00b      	add	sp, #44	; 0x2c
 8010626:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0801062c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 801062c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010630:	b08a      	sub	sp, #40	; 0x28
 8010632:	4698      	mov	r8, r3
 8010634:	2300      	movs	r3, #0
 8010636:	4606      	mov	r6, r0
 8010638:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801063c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010640:	2d0b      	cmp	r5, #11
 8010642:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010646:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 801064a:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 801064e:	9304      	str	r3, [sp, #16]
 8010650:	d137      	bne.n	80106c2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 8010652:	2380      	movs	r3, #128	; 0x80
 8010654:	f88d 0020 	strb.w	r0, [sp, #32]
 8010658:	4630      	mov	r0, r6
 801065a:	9203      	str	r2, [sp, #12]
 801065c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010660:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010664:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010668:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801066c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010670:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010674:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010678:	f7ff ff5c 	bl	8010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801067c:	2c0b      	cmp	r4, #11
 801067e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010682:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010686:	bf94      	ite	ls
 8010688:	4b19      	ldrls	r3, [pc, #100]	; (80106f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801068a:	2100      	movhi	r1, #0
 801068c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010690:	bf98      	it	ls
 8010692:	5d19      	ldrbls	r1, [r3, r4]
 8010694:	fb02 8307 	mla	r3, r2, r7, r8
 8010698:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801069c:	10c9      	asrs	r1, r1, #3
 801069e:	fb01 0003 	mla	r0, r1, r3, r0
 80106a2:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80106a6:	a901      	add	r1, sp, #4
 80106a8:	9005      	str	r0, [sp, #20]
 80106aa:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80106ae:	2300      	movs	r3, #0
 80106b0:	6870      	ldr	r0, [r6, #4]
 80106b2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80106b6:	6803      	ldr	r3, [r0, #0]
 80106b8:	685b      	ldr	r3, [r3, #4]
 80106ba:	4798      	blx	r3
 80106bc:	b00a      	add	sp, #40	; 0x28
 80106be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80106c2:	2d02      	cmp	r5, #2
 80106c4:	d109      	bne.n	80106da <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 80106c6:	28ff      	cmp	r0, #255	; 0xff
 80106c8:	d105      	bne.n	80106d6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 80106ca:	f1bc 0f00 	cmp.w	ip, #0
 80106ce:	bf14      	ite	ne
 80106d0:	2340      	movne	r3, #64	; 0x40
 80106d2:	2320      	moveq	r3, #32
 80106d4:	e7be      	b.n	8010654 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80106d6:	2340      	movs	r3, #64	; 0x40
 80106d8:	e7bc      	b.n	8010654 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80106da:	28ff      	cmp	r0, #255	; 0xff
 80106dc:	d105      	bne.n	80106ea <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 80106de:	f1bc 0f00 	cmp.w	ip, #0
 80106e2:	bf14      	ite	ne
 80106e4:	2304      	movne	r3, #4
 80106e6:	2301      	moveq	r3, #1
 80106e8:	e7b4      	b.n	8010654 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80106ea:	2304      	movs	r3, #4
 80106ec:	e7b2      	b.n	8010654 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80106ee:	bf00      	nop
 80106f0:	08025dd8 	.word	0x08025dd8

080106f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80106f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106f8:	b08b      	sub	sp, #44	; 0x2c
 80106fa:	461d      	mov	r5, r3
 80106fc:	2400      	movs	r4, #0
 80106fe:	4688      	mov	r8, r1
 8010700:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010704:	4693      	mov	fp, r2
 8010706:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 801070a:	4607      	mov	r7, r0
 801070c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010710:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010714:	9404      	str	r4, [sp, #16]
 8010716:	bf14      	ite	ne
 8010718:	2308      	movne	r3, #8
 801071a:	2302      	moveq	r3, #2
 801071c:	fb05 b50a 	mla	r5, r5, sl, fp
 8010720:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010724:	f7ff ff06 	bl	8010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010728:	2e0b      	cmp	r6, #11
 801072a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801072e:	a901      	add	r1, sp, #4
 8010730:	bf98      	it	ls
 8010732:	4b13      	ldrls	r3, [pc, #76]	; (8010780 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010734:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010738:	bf98      	it	ls
 801073a:	5d9c      	ldrbls	r4, [r3, r6]
 801073c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010740:	10e4      	asrs	r4, r4, #3
 8010742:	f8cd 8010 	str.w	r8, [sp, #16]
 8010746:	f8ad 3018 	strh.w	r3, [sp, #24]
 801074a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801074e:	fb04 0405 	mla	r4, r4, r5, r0
 8010752:	6878      	ldr	r0, [r7, #4]
 8010754:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010758:	2300      	movs	r3, #0
 801075a:	9405      	str	r4, [sp, #20]
 801075c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010760:	f88d 9020 	strb.w	r9, [sp, #32]
 8010764:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8010768:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801076c:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010770:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010774:	6803      	ldr	r3, [r0, #0]
 8010776:	685b      	ldr	r3, [r3, #4]
 8010778:	4798      	blx	r3
 801077a:	b00b      	add	sp, #44	; 0x2c
 801077c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010780:	08025dd8 	.word	0x08025dd8

08010784 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010784:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010788:	461e      	mov	r6, r3
 801078a:	4b0a      	ldr	r3, [pc, #40]	; (80107b4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 801078c:	460f      	mov	r7, r1
 801078e:	4690      	mov	r8, r2
 8010790:	881d      	ldrh	r5, [r3, #0]
 8010792:	f7fb fa2f 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 8010796:	6803      	ldr	r3, [r0, #0]
 8010798:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801079a:	4798      	blx	r3
 801079c:	280b      	cmp	r0, #11
 801079e:	bf96      	itet	ls
 80107a0:	4b05      	ldrls	r3, [pc, #20]	; (80107b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80107a2:	2400      	movhi	r4, #0
 80107a4:	5c1c      	ldrbls	r4, [r3, r0]
 80107a6:	fb08 7005 	mla	r0, r8, r5, r7
 80107aa:	10e4      	asrs	r4, r4, #3
 80107ac:	fb04 6000 	mla	r0, r4, r0, r6
 80107b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80107b4:	2400206e 	.word	0x2400206e
 80107b8:	08025dd8 	.word	0x08025dd8

080107bc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80107bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107be:	b08b      	sub	sp, #44	; 0x2c
 80107c0:	461f      	mov	r7, r3
 80107c2:	4604      	mov	r4, r0
 80107c4:	4616      	mov	r6, r2
 80107c6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80107ca:	2500      	movs	r5, #0
 80107cc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80107d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80107d4:	9504      	str	r5, [sp, #16]
 80107d6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80107da:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80107de:	f8ad 301a 	strh.w	r3, [sp, #26]
 80107e2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80107e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80107ea:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80107ee:	f88d 3020 	strb.w	r3, [sp, #32]
 80107f2:	f7ff fe9f 	bl	8010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80107f6:	463a      	mov	r2, r7
 80107f8:	4631      	mov	r1, r6
 80107fa:	4603      	mov	r3, r0
 80107fc:	4620      	mov	r0, r4
 80107fe:	f7ff ffc1 	bl	8010784 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010802:	4b0e      	ldr	r3, [pc, #56]	; (801083c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010804:	9005      	str	r0, [sp, #20]
 8010806:	881b      	ldrh	r3, [r3, #0]
 8010808:	f8ad 301e 	strh.w	r3, [sp, #30]
 801080c:	f7fb f9f2 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 8010810:	6803      	ldr	r3, [r0, #0]
 8010812:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010814:	4798      	blx	r3
 8010816:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010818:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 801081c:	a901      	add	r1, sp, #4
 801081e:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010822:	9304      	str	r3, [sp, #16]
 8010824:	6860      	ldr	r0, [r4, #4]
 8010826:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801082a:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801082e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010832:	6803      	ldr	r3, [r0, #0]
 8010834:	685b      	ldr	r3, [r3, #4]
 8010836:	4798      	blx	r3
 8010838:	b00b      	add	sp, #44	; 0x2c
 801083a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801083c:	2400206e 	.word	0x2400206e

08010840 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010840:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010842:	b08d      	sub	sp, #52	; 0x34
 8010844:	2501      	movs	r5, #1
 8010846:	4604      	mov	r4, r0
 8010848:	466b      	mov	r3, sp
 801084a:	9503      	str	r5, [sp, #12]
 801084c:	e883 0006 	stmia.w	r3, {r1, r2}
 8010850:	2300      	movs	r3, #0
 8010852:	f8bd 6000 	ldrh.w	r6, [sp]
 8010856:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801085a:	9306      	str	r3, [sp, #24]
 801085c:	6803      	ldr	r3, [r0, #0]
 801085e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010860:	4798      	blx	r3
 8010862:	463a      	mov	r2, r7
 8010864:	4631      	mov	r1, r6
 8010866:	4603      	mov	r3, r0
 8010868:	4620      	mov	r0, r4
 801086a:	f7ff ff8b 	bl	8010784 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801086e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010870:	9004      	str	r0, [sp, #16]
 8010872:	9307      	str	r3, [sp, #28]
 8010874:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010878:	f8ad 3020 	strh.w	r3, [sp, #32]
 801087c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010880:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010884:	4b0e      	ldr	r3, [pc, #56]	; (80108c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010886:	881b      	ldrh	r3, [r3, #0]
 8010888:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801088c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010890:	f7fb f9b0 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 8010894:	6803      	ldr	r3, [r0, #0]
 8010896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010898:	4798      	blx	r3
 801089a:	23ff      	movs	r3, #255	; 0xff
 801089c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80108a0:	a903      	add	r1, sp, #12
 80108a2:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80108a6:	6860      	ldr	r0, [r4, #4]
 80108a8:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80108ac:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80108b0:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80108b4:	6803      	ldr	r3, [r0, #0]
 80108b6:	685b      	ldr	r3, [r3, #4]
 80108b8:	4798      	blx	r3
 80108ba:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80108bc:	b00d      	add	sp, #52	; 0x34
 80108be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80108c0:	2400206e 	.word	0x2400206e

080108c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80108c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108c8:	b08c      	sub	sp, #48	; 0x30
 80108ca:	461e      	mov	r6, r3
 80108cc:	2300      	movs	r3, #0
 80108ce:	4604      	mov	r4, r0
 80108d0:	466d      	mov	r5, sp
 80108d2:	9306      	str	r3, [sp, #24]
 80108d4:	6803      	ldr	r3, [r0, #0]
 80108d6:	e885 0006 	stmia.w	r5, {r1, r2}
 80108da:	2501      	movs	r5, #1
 80108dc:	f8bd 7000 	ldrh.w	r7, [sp]
 80108e0:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80108e4:	9503      	str	r5, [sp, #12]
 80108e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80108e8:	4798      	blx	r3
 80108ea:	4642      	mov	r2, r8
 80108ec:	4639      	mov	r1, r7
 80108ee:	4603      	mov	r3, r0
 80108f0:	4620      	mov	r0, r4
 80108f2:	f7ff ff47 	bl	8010784 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80108f6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80108fa:	9004      	str	r0, [sp, #16]
 80108fc:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010900:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010904:	9607      	str	r6, [sp, #28]
 8010906:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801090a:	4b10      	ldr	r3, [pc, #64]	; (801094c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801090c:	881b      	ldrh	r3, [r3, #0]
 801090e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010912:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010914:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010918:	f7fb f96c 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 801091c:	6803      	ldr	r3, [r0, #0]
 801091e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010920:	4798      	blx	r3
 8010922:	23ff      	movs	r3, #255	; 0xff
 8010924:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010928:	a903      	add	r1, sp, #12
 801092a:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801092e:	6860      	ldr	r0, [r4, #4]
 8010930:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010934:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010938:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801093c:	6803      	ldr	r3, [r0, #0]
 801093e:	685b      	ldr	r3, [r3, #4]
 8010940:	4798      	blx	r3
 8010942:	4630      	mov	r0, r6
 8010944:	b00c      	add	sp, #48	; 0x30
 8010946:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801094a:	bf00      	nop
 801094c:	2400206e 	.word	0x2400206e

08010950 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010950:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010952:	b085      	sub	sp, #20
 8010954:	4605      	mov	r5, r0
 8010956:	ac02      	add	r4, sp, #8
 8010958:	e884 0006 	stmia.w	r4, {r1, r2}
 801095c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010960:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010964:	f7ff fde6 	bl	8010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010968:	4631      	mov	r1, r6
 801096a:	4603      	mov	r3, r0
 801096c:	463a      	mov	r2, r7
 801096e:	4628      	mov	r0, r5
 8010970:	f7ff ff08 	bl	8010784 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010974:	4a05      	ldr	r2, [pc, #20]	; (801098c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8010976:	682b      	ldr	r3, [r5, #0]
 8010978:	8812      	ldrh	r2, [r2, #0]
 801097a:	9200      	str	r2, [sp, #0]
 801097c:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801097e:	4603      	mov	r3, r0
 8010980:	4628      	mov	r0, r5
 8010982:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010986:	47b0      	blx	r6
 8010988:	b005      	add	sp, #20
 801098a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801098c:	2400206e 	.word	0x2400206e

08010990 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010990:	b570      	push	{r4, r5, r6, lr}
 8010992:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8010996:	4604      	mov	r4, r0
 8010998:	b19b      	cbz	r3, 80109c2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801099a:	2002      	movs	r0, #2
 801099c:	f7fd f948 	bl	800dc30 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80109a0:	2300      	movs	r3, #0
 80109a2:	4620      	mov	r0, r4
 80109a4:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80109a8:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80109ac:	6823      	ldr	r3, [r4, #0]
 80109ae:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80109b2:	f7ff fdbf 	bl	8010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80109b6:	4601      	mov	r1, r0
 80109b8:	4620      	mov	r0, r4
 80109ba:	462b      	mov	r3, r5
 80109bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109c0:	4718      	bx	r3
 80109c2:	bd70      	pop	{r4, r5, r6, pc}

080109c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80109c4:	b538      	push	{r3, r4, r5, lr}
 80109c6:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80109ca:	4604      	mov	r4, r0
 80109cc:	460d      	mov	r5, r1
 80109ce:	428b      	cmp	r3, r1
 80109d0:	d006      	beq.n	80109e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80109d2:	6803      	ldr	r3, [r0, #0]
 80109d4:	b929      	cbnz	r1, 80109e2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80109d6:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80109da:	4798      	blx	r3
 80109dc:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 80109e0:	bd38      	pop	{r3, r4, r5, pc}
 80109e2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80109e6:	e7f8      	b.n	80109da <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080109e8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80109e8:	4b0d      	ldr	r3, [pc, #52]	; (8010a20 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80109ea:	b510      	push	{r4, lr}
 80109ec:	781b      	ldrb	r3, [r3, #0]
 80109ee:	4604      	mov	r4, r0
 80109f0:	b95b      	cbnz	r3, 8010a0a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80109f2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80109f6:	2b02      	cmp	r3, #2
 80109f8:	d007      	beq.n	8010a0a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80109fa:	6840      	ldr	r0, [r0, #4]
 80109fc:	f000 f90e 	bl	8010c1c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010a00:	b118      	cbz	r0, 8010a0a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010a02:	6862      	ldr	r2, [r4, #4]
 8010a04:	7a53      	ldrb	r3, [r2, #9]
 8010a06:	2b00      	cmp	r3, #0
 8010a08:	d0fc      	beq.n	8010a04 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010a0a:	f7fd fbd9 	bl	800e1c0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010a0e:	4620      	mov	r0, r4
 8010a10:	2100      	movs	r1, #0
 8010a12:	f7ff ffd7 	bl	80109c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010a16:	4620      	mov	r0, r4
 8010a18:	f7ff fd8c 	bl	8010534 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a1c:	bd10      	pop	{r4, pc}
 8010a1e:	bf00      	nop
 8010a20:	24002072 	.word	0x24002072

08010a24 <_ZN8touchgfx13DMA_Interface5flushEv>:
 8010a24:	6803      	ldr	r3, [r0, #0]
 8010a26:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010a28:	4718      	bx	r3

08010a2a <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010a2a:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010a2e:	1a13      	subs	r3, r2, r0
 8010a30:	4258      	negs	r0, r3
 8010a32:	4158      	adcs	r0, r3
 8010a34:	4770      	bx	lr

08010a36 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010a36:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010a3a:	1a9b      	subs	r3, r3, r2
 8010a3c:	2b00      	cmp	r3, #0
 8010a3e:	bfdc      	itt	le
 8010a40:	6882      	ldrle	r2, [r0, #8]
 8010a42:	189b      	addle	r3, r3, r2
 8010a44:	2b01      	cmp	r3, #1
 8010a46:	bfcc      	ite	gt
 8010a48:	2000      	movgt	r0, #0
 8010a4a:	2001      	movle	r0, #1
 8010a4c:	4770      	bx	lr

08010a4e <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010a4e:	6902      	ldr	r2, [r0, #16]
 8010a50:	6843      	ldr	r3, [r0, #4]
 8010a52:	2024      	movs	r0, #36	; 0x24
 8010a54:	fb00 3002 	mla	r0, r0, r2, r3
 8010a58:	4770      	bx	lr

08010a5a <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010a5a:	6803      	ldr	r3, [r0, #0]
 8010a5c:	691b      	ldr	r3, [r3, #16]
 8010a5e:	4718      	bx	r3

08010a60 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010a60:	2301      	movs	r3, #1
 8010a62:	b570      	push	{r4, r5, r6, lr}
 8010a64:	7203      	strb	r3, [r0, #8]
 8010a66:	4604      	mov	r4, r0
 8010a68:	6840      	ldr	r0, [r0, #4]
 8010a6a:	6803      	ldr	r3, [r0, #0]
 8010a6c:	699b      	ldr	r3, [r3, #24]
 8010a6e:	4798      	blx	r3
 8010a70:	6803      	ldr	r3, [r0, #0]
 8010a72:	4605      	mov	r5, r0
 8010a74:	2b40      	cmp	r3, #64	; 0x40
 8010a76:	d00c      	beq.n	8010a92 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010a78:	d810      	bhi.n	8010a9c <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010a7a:	2b04      	cmp	r3, #4
 8010a7c:	d01d      	beq.n	8010aba <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010a7e:	d804      	bhi.n	8010a8a <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010a80:	2b01      	cmp	r3, #1
 8010a82:	d006      	beq.n	8010a92 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010a84:	2b02      	cmp	r3, #2
 8010a86:	d02c      	beq.n	8010ae2 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010a88:	bd70      	pop	{r4, r5, r6, pc}
 8010a8a:	2b08      	cmp	r3, #8
 8010a8c:	d01d      	beq.n	8010aca <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010a8e:	2b20      	cmp	r3, #32
 8010a90:	d1fa      	bne.n	8010a88 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010a92:	6823      	ldr	r3, [r4, #0]
 8010a94:	4620      	mov	r0, r4
 8010a96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010a98:	4798      	blx	r3
 8010a9a:	e013      	b.n	8010ac4 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8010a9c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010aa0:	d0f7      	beq.n	8010a92 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010aa2:	d804      	bhi.n	8010aae <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010aa4:	2b80      	cmp	r3, #128	; 0x80
 8010aa6:	d0f4      	beq.n	8010a92 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010aa8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010aac:	e7f0      	b.n	8010a90 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010aae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010ab2:	d0ee      	beq.n	8010a92 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010ab4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8010ab8:	e7e5      	b.n	8010a86 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010aba:	6823      	ldr	r3, [r4, #0]
 8010abc:	7f01      	ldrb	r1, [r0, #28]
 8010abe:	4620      	mov	r0, r4
 8010ac0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010ac2:	4798      	blx	r3
 8010ac4:	6823      	ldr	r3, [r4, #0]
 8010ac6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010ac8:	e006      	b.n	8010ad8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010aca:	6823      	ldr	r3, [r4, #0]
 8010acc:	7f01      	ldrb	r1, [r0, #28]
 8010ace:	4620      	mov	r0, r4
 8010ad0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010ad2:	4798      	blx	r3
 8010ad4:	6823      	ldr	r3, [r4, #0]
 8010ad6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010ad8:	4629      	mov	r1, r5
 8010ada:	4620      	mov	r0, r4
 8010adc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ae0:	4718      	bx	r3
 8010ae2:	6823      	ldr	r3, [r4, #0]
 8010ae4:	4620      	mov	r0, r4
 8010ae6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ae8:	4798      	blx	r3
 8010aea:	e7f3      	b.n	8010ad4 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010aec <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010aec:	4770      	bx	lr

08010aee <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010aee:	4770      	bx	lr

08010af0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010af0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010af4:	b510      	push	{r4, lr}
 8010af6:	1ad2      	subs	r2, r2, r3
 8010af8:	2a00      	cmp	r2, #0
 8010afa:	bfdc      	itt	le
 8010afc:	6884      	ldrle	r4, [r0, #8]
 8010afe:	1912      	addle	r2, r2, r4
 8010b00:	2a01      	cmp	r2, #1
 8010b02:	dd16      	ble.n	8010b32 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010b04:	6842      	ldr	r2, [r0, #4]
 8010b06:	2424      	movs	r4, #36	; 0x24
 8010b08:	fb04 2303 	mla	r3, r4, r3, r2
 8010b0c:	f101 0220 	add.w	r2, r1, #32
 8010b10:	f851 4b04 	ldr.w	r4, [r1], #4
 8010b14:	4291      	cmp	r1, r2
 8010b16:	f843 4b04 	str.w	r4, [r3], #4
 8010b1a:	d1f9      	bne.n	8010b10 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010b1c:	780a      	ldrb	r2, [r1, #0]
 8010b1e:	701a      	strb	r2, [r3, #0]
 8010b20:	68c3      	ldr	r3, [r0, #12]
 8010b22:	6882      	ldr	r2, [r0, #8]
 8010b24:	f3bf 8f5b 	dmb	ish
 8010b28:	3301      	adds	r3, #1
 8010b2a:	429a      	cmp	r2, r3
 8010b2c:	bfd8      	it	le
 8010b2e:	1a9b      	suble	r3, r3, r2
 8010b30:	60c3      	str	r3, [r0, #12]
 8010b32:	bd10      	pop	{r4, pc}

08010b34 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010b34:	6903      	ldr	r3, [r0, #16]
 8010b36:	6882      	ldr	r2, [r0, #8]
 8010b38:	f3bf 8f5b 	dmb	ish
 8010b3c:	3301      	adds	r3, #1
 8010b3e:	429a      	cmp	r2, r3
 8010b40:	bfd8      	it	le
 8010b42:	1a9b      	suble	r3, r3, r2
 8010b44:	6103      	str	r3, [r0, #16]
 8010b46:	4770      	bx	lr

08010b48 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8010b48:	b570      	push	{r4, r5, r6, lr}
 8010b4a:	4604      	mov	r4, r0
 8010b4c:	460e      	mov	r6, r1
 8010b4e:	6860      	ldr	r0, [r4, #4]
 8010b50:	6803      	ldr	r3, [r0, #0]
 8010b52:	685b      	ldr	r3, [r3, #4]
 8010b54:	4798      	blx	r3
 8010b56:	2800      	cmp	r0, #0
 8010b58:	d1f9      	bne.n	8010b4e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8010b5a:	4d0d      	ldr	r5, [pc, #52]	; (8010b90 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010b5c:	6828      	ldr	r0, [r5, #0]
 8010b5e:	6803      	ldr	r3, [r0, #0]
 8010b60:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010b62:	4798      	blx	r3
 8010b64:	f7fd fb4e 	bl	800e204 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8010b68:	6828      	ldr	r0, [r5, #0]
 8010b6a:	2101      	movs	r1, #1
 8010b6c:	f7ff ff2a 	bl	80109c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010b70:	6860      	ldr	r0, [r4, #4]
 8010b72:	4631      	mov	r1, r6
 8010b74:	6803      	ldr	r3, [r0, #0]
 8010b76:	689b      	ldr	r3, [r3, #8]
 8010b78:	4798      	blx	r3
 8010b7a:	6823      	ldr	r3, [r4, #0]
 8010b7c:	4620      	mov	r0, r4
 8010b7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b80:	4798      	blx	r3
 8010b82:	6828      	ldr	r0, [r5, #0]
 8010b84:	6803      	ldr	r3, [r0, #0]
 8010b86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b8a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010b8c:	4718      	bx	r3
 8010b8e:	bf00      	nop
 8010b90:	24002074 	.word	0x24002074

08010b94 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010b94:	b508      	push	{r3, lr}
 8010b96:	f7fd fb13 	bl	800e1c0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010b9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010b9e:	f7fd bb25 	b.w	800e1ec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010ba2 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010ba2:	b510      	push	{r4, lr}
 8010ba4:	4604      	mov	r4, r0
 8010ba6:	6840      	ldr	r0, [r0, #4]
 8010ba8:	6803      	ldr	r3, [r0, #0]
 8010baa:	681b      	ldr	r3, [r3, #0]
 8010bac:	4798      	blx	r3
 8010bae:	b948      	cbnz	r0, 8010bc4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010bb0:	7a63      	ldrb	r3, [r4, #9]
 8010bb2:	b13b      	cbz	r3, 8010bc4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010bb4:	7a23      	ldrb	r3, [r4, #8]
 8010bb6:	b92b      	cbnz	r3, 8010bc4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010bb8:	6823      	ldr	r3, [r4, #0]
 8010bba:	4620      	mov	r0, r4
 8010bbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010bbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010bc2:	4718      	bx	r3
 8010bc4:	bd10      	pop	{r4, pc}

08010bc6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010bc6:	b570      	push	{r4, r5, r6, lr}
 8010bc8:	4604      	mov	r4, r0
 8010bca:	6840      	ldr	r0, [r0, #4]
 8010bcc:	6803      	ldr	r3, [r0, #0]
 8010bce:	681b      	ldr	r3, [r3, #0]
 8010bd0:	4798      	blx	r3
 8010bd2:	4605      	mov	r5, r0
 8010bd4:	b930      	cbnz	r0, 8010be4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010bd6:	7a23      	ldrb	r3, [r4, #8]
 8010bd8:	b123      	cbz	r3, 8010be4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010bda:	6860      	ldr	r0, [r4, #4]
 8010bdc:	6803      	ldr	r3, [r0, #0]
 8010bde:	695b      	ldr	r3, [r3, #20]
 8010be0:	4798      	blx	r3
 8010be2:	7225      	strb	r5, [r4, #8]
 8010be4:	6860      	ldr	r0, [r4, #4]
 8010be6:	6803      	ldr	r3, [r0, #0]
 8010be8:	681b      	ldr	r3, [r3, #0]
 8010bea:	4798      	blx	r3
 8010bec:	b928      	cbnz	r0, 8010bfa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010bee:	6823      	ldr	r3, [r4, #0]
 8010bf0:	4620      	mov	r0, r4
 8010bf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010bf4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bf8:	4718      	bx	r3
 8010bfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bfe:	f7fd bb0d 	b.w	800e21c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08010c04 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010c04:	b510      	push	{r4, lr}
 8010c06:	6082      	str	r2, [r0, #8]
 8010c08:	2200      	movs	r2, #0
 8010c0a:	4c03      	ldr	r4, [pc, #12]	; (8010c18 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010c0c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010c10:	e9c0 4100 	strd	r4, r1, [r0]
 8010c14:	bd10      	pop	{r4, pc}
 8010c16:	bf00      	nop
 8010c18:	08025f14 	.word	0x08025f14

08010c1c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010c1c:	6840      	ldr	r0, [r0, #4]
 8010c1e:	6803      	ldr	r3, [r0, #0]
 8010c20:	681b      	ldr	r3, [r3, #0]
 8010c22:	4718      	bx	r3

08010c24 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8010c24:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8010c28:	4770      	bx	lr

08010c2a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8010c2a:	b510      	push	{r4, lr}
 8010c2c:	4604      	mov	r4, r0
 8010c2e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010c30:	b150      	cbz	r0, 8010c48 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8010c32:	6803      	ldr	r3, [r0, #0]
 8010c34:	68db      	ldr	r3, [r3, #12]
 8010c36:	4798      	blx	r3
 8010c38:	b130      	cbz	r0, 8010c48 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8010c3a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010c3c:	4621      	mov	r1, r4
 8010c3e:	6803      	ldr	r3, [r0, #0]
 8010c40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c44:	689b      	ldr	r3, [r3, #8]
 8010c46:	4718      	bx	r3
 8010c48:	bd10      	pop	{r4, pc}

08010c4a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8010c4a:	790b      	ldrb	r3, [r1, #4]
 8010c4c:	2b00      	cmp	r3, #0
 8010c4e:	bf0c      	ite	eq
 8010c50:	2301      	moveq	r3, #1
 8010c52:	2300      	movne	r3, #0
 8010c54:	b570      	push	{r4, r5, r6, lr}
 8010c56:	4604      	mov	r4, r0
 8010c58:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8010c5c:	460e      	mov	r6, r1
 8010c5e:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010c62:	d109      	bne.n	8010c78 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8010c64:	b14d      	cbz	r5, 8010c7a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8010c66:	7933      	ldrb	r3, [r6, #4]
 8010c68:	2b01      	cmp	r3, #1
 8010c6a:	d10c      	bne.n	8010c86 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8010c6c:	6823      	ldr	r3, [r4, #0]
 8010c6e:	4620      	mov	r0, r4
 8010c70:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010c72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c76:	4718      	bx	r3
 8010c78:	b12d      	cbz	r5, 8010c86 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8010c7a:	6823      	ldr	r3, [r4, #0]
 8010c7c:	4620      	mov	r0, r4
 8010c7e:	695b      	ldr	r3, [r3, #20]
 8010c80:	4798      	blx	r3
 8010c82:	2d00      	cmp	r5, #0
 8010c84:	d1ef      	bne.n	8010c66 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8010c86:	bd70      	pop	{r4, r5, r6, pc}

08010c88 <_ZN8touchgfx8TextArea8setWidthEs>:
 8010c88:	b530      	push	{r4, r5, lr}
 8010c8a:	b085      	sub	sp, #20
 8010c8c:	6803      	ldr	r3, [r0, #0]
 8010c8e:	4604      	mov	r4, r0
 8010c90:	8101      	strh	r1, [r0, #8]
 8010c92:	466d      	mov	r5, sp
 8010c94:	4601      	mov	r1, r0
 8010c96:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010c9a:	343c      	adds	r4, #60	; 0x3c
 8010c9c:	4628      	mov	r0, r5
 8010c9e:	4798      	blx	r3
 8010ca0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8010ca4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010ca8:	b005      	add	sp, #20
 8010caa:	bd30      	pop	{r4, r5, pc}

08010cac <_ZN8touchgfx8TextArea9setHeightEs>:
 8010cac:	b530      	push	{r4, r5, lr}
 8010cae:	b085      	sub	sp, #20
 8010cb0:	6803      	ldr	r3, [r0, #0]
 8010cb2:	4604      	mov	r4, r0
 8010cb4:	8141      	strh	r1, [r0, #10]
 8010cb6:	466d      	mov	r5, sp
 8010cb8:	4601      	mov	r1, r0
 8010cba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010cbe:	343c      	adds	r4, #60	; 0x3c
 8010cc0:	4628      	mov	r0, r5
 8010cc2:	4798      	blx	r3
 8010cc4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8010cc8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010ccc:	b005      	add	sp, #20
 8010cce:	bd30      	pop	{r4, r5, pc}

08010cd0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8010cd0:	2200      	movs	r2, #0
 8010cd2:	8002      	strh	r2, [r0, #0]
 8010cd4:	8042      	strh	r2, [r0, #2]
 8010cd6:	8082      	strh	r2, [r0, #4]
 8010cd8:	80c2      	strh	r2, [r0, #6]
 8010cda:	4770      	bx	lr

08010cdc <_ZN8touchgfx8TextArea8setAlphaEh>:
 8010cdc:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 8010ce0:	4770      	bx	lr
	...

08010ce4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 8010ce4:	b570      	push	{r4, r5, r6, lr}
 8010ce6:	6803      	ldr	r3, [r0, #0]
 8010ce8:	4604      	mov	r4, r0
 8010cea:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010cec:	460d      	mov	r5, r1
 8010cee:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 8010cf0:	4b08      	ldr	r3, [pc, #32]	; (8010d14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 8010cf2:	681b      	ldr	r3, [r3, #0]
 8010cf4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8010cf8:	4b07      	ldr	r3, [pc, #28]	; (8010d18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 8010cfa:	681b      	ldr	r3, [r3, #0]
 8010cfc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8010d00:	6803      	ldr	r3, [r0, #0]
 8010d02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010d04:	4798      	blx	r3
 8010d06:	1a29      	subs	r1, r5, r0
 8010d08:	4633      	mov	r3, r6
 8010d0a:	4620      	mov	r0, r4
 8010d0c:	b209      	sxth	r1, r1
 8010d0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d12:	4718      	bx	r3
 8010d14:	240020c4 	.word	0x240020c4
 8010d18:	240020cc 	.word	0x240020cc

08010d1c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8010d1c:	b570      	push	{r4, r5, r6, lr}
 8010d1e:	6803      	ldr	r3, [r0, #0]
 8010d20:	4604      	mov	r4, r0
 8010d22:	4615      	mov	r5, r2
 8010d24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010d26:	4798      	blx	r3
 8010d28:	6823      	ldr	r3, [r4, #0]
 8010d2a:	4629      	mov	r1, r5
 8010d2c:	4620      	mov	r0, r4
 8010d2e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8010d30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d34:	4718      	bx	r3

08010d36 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8010d36:	2000      	movs	r0, #0
 8010d38:	4770      	bx	lr

08010d3a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 8010d3a:	2000      	movs	r0, #0
 8010d3c:	4770      	bx	lr
	...

08010d40 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8010d40:	4b07      	ldr	r3, [pc, #28]	; (8010d60 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8010d42:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8010d44:	881b      	ldrh	r3, [r3, #0]
 8010d46:	4293      	cmp	r3, r2
 8010d48:	bf81      	itttt	hi
 8010d4a:	4b06      	ldrhi	r3, [pc, #24]	; (8010d64 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8010d4c:	681b      	ldrhi	r3, [r3, #0]
 8010d4e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8010d52:	7858      	ldrbhi	r0, [r3, #1]
 8010d54:	bf8c      	ite	hi
 8010d56:	f000 0003 	andhi.w	r0, r0, #3
 8010d5a:	2000      	movls	r0, #0
 8010d5c:	4770      	bx	lr
 8010d5e:	bf00      	nop
 8010d60:	240020c8 	.word	0x240020c8
 8010d64:	240020c4 	.word	0x240020c4

08010d68 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8010d68:	4b11      	ldr	r3, [pc, #68]	; (8010db0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8010d6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d6e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010d70:	4604      	mov	r4, r0
 8010d72:	881b      	ldrh	r3, [r3, #0]
 8010d74:	428b      	cmp	r3, r1
 8010d76:	d918      	bls.n	8010daa <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8010d78:	6803      	ldr	r3, [r0, #0]
 8010d7a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8010d7c:	4b0d      	ldr	r3, [pc, #52]	; (8010db4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8010d7e:	6818      	ldr	r0, [r3, #0]
 8010d80:	f7fc fcce 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 8010d84:	6823      	ldr	r3, [r4, #0]
 8010d86:	4606      	mov	r6, r0
 8010d88:	4620      	mov	r0, r4
 8010d8a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010d8c:	4798      	blx	r3
 8010d8e:	6823      	ldr	r3, [r4, #0]
 8010d90:	4607      	mov	r7, r0
 8010d92:	4620      	mov	r0, r4
 8010d94:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010d98:	4798      	blx	r3
 8010d9a:	463a      	mov	r2, r7
 8010d9c:	4603      	mov	r3, r0
 8010d9e:	4631      	mov	r1, r6
 8010da0:	4620      	mov	r0, r4
 8010da2:	46ac      	mov	ip, r5
 8010da4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010da8:	4760      	bx	ip
 8010daa:	2000      	movs	r0, #0
 8010dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010db0:	240020c8 	.word	0x240020c8
 8010db4:	240020d0 	.word	0x240020d0

08010db8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8010db8:	4b18      	ldr	r3, [pc, #96]	; (8010e1c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8010dba:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010dbe:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8010dc0:	4604      	mov	r4, r0
 8010dc2:	881b      	ldrh	r3, [r3, #0]
 8010dc4:	428b      	cmp	r3, r1
 8010dc6:	d926      	bls.n	8010e16 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8010dc8:	4b15      	ldr	r3, [pc, #84]	; (8010e20 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8010dca:	681b      	ldr	r3, [r3, #0]
 8010dcc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8010dd0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8010dd4:	4b13      	ldr	r3, [pc, #76]	; (8010e24 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8010dd6:	7855      	ldrb	r5, [r2, #1]
 8010dd8:	681b      	ldr	r3, [r3, #0]
 8010dda:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8010dde:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8010de2:	6833      	ldr	r3, [r6, #0]
 8010de4:	69df      	ldr	r7, [r3, #28]
 8010de6:	4b10      	ldr	r3, [pc, #64]	; (8010e28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8010de8:	6818      	ldr	r0, [r3, #0]
 8010dea:	f7fc fc99 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 8010dee:	6823      	ldr	r3, [r4, #0]
 8010df0:	4680      	mov	r8, r0
 8010df2:	4620      	mov	r0, r4
 8010df4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010df6:	4798      	blx	r3
 8010df8:	6823      	ldr	r3, [r4, #0]
 8010dfa:	4681      	mov	r9, r0
 8010dfc:	4620      	mov	r0, r4
 8010dfe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010e02:	4798      	blx	r3
 8010e04:	464b      	mov	r3, r9
 8010e06:	9000      	str	r0, [sp, #0]
 8010e08:	4642      	mov	r2, r8
 8010e0a:	4629      	mov	r1, r5
 8010e0c:	4630      	mov	r0, r6
 8010e0e:	47b8      	blx	r7
 8010e10:	b003      	add	sp, #12
 8010e12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e16:	2000      	movs	r0, #0
 8010e18:	e7fa      	b.n	8010e10 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8010e1a:	bf00      	nop
 8010e1c:	240020c8 	.word	0x240020c8
 8010e20:	240020c4 	.word	0x240020c4
 8010e24:	240020cc 	.word	0x240020cc
 8010e28:	240020d0 	.word	0x240020d0

08010e2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8010e2c:	b40e      	push	{r1, r2, r3}
 8010e2e:	4b30      	ldr	r3, [pc, #192]	; (8010ef0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8010e30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010e34:	881a      	ldrh	r2, [r3, #0]
 8010e36:	b09d      	sub	sp, #116	; 0x74
 8010e38:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8010e3a:	4604      	mov	r4, r0
 8010e3c:	429a      	cmp	r2, r3
 8010e3e:	d954      	bls.n	8010eea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8010e40:	aa26      	add	r2, sp, #152	; 0x98
 8010e42:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8010ef4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8010e46:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8010ef8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8010e4a:	9202      	str	r2, [sp, #8]
 8010e4c:	f8d9 2000 	ldr.w	r2, [r9]
 8010e50:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8010e54:	f8d8 3000 	ldr.w	r3, [r8]
 8010e58:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010e5c:	682b      	ldr	r3, [r5, #0]
 8010e5e:	4628      	mov	r0, r5
 8010e60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010e62:	4798      	blx	r3
 8010e64:	4606      	mov	r6, r0
 8010e66:	b207      	sxth	r7, r0
 8010e68:	a803      	add	r0, sp, #12
 8010e6a:	f003 fe59 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 8010e6e:	682b      	ldr	r3, [r5, #0]
 8010e70:	4628      	mov	r0, r5
 8010e72:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010e74:	4798      	blx	r3
 8010e76:	682b      	ldr	r3, [r5, #0]
 8010e78:	4682      	mov	sl, r0
 8010e7a:	4628      	mov	r0, r5
 8010e7c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010e7e:	4798      	blx	r3
 8010e80:	4653      	mov	r3, sl
 8010e82:	9000      	str	r0, [sp, #0]
 8010e84:	a803      	add	r0, sp, #12
 8010e86:	9a02      	ldr	r2, [sp, #8]
 8010e88:	9925      	ldr	r1, [sp, #148]	; 0x94
 8010e8a:	f003 fea4 	bl	8014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010e8e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010e90:	f8d9 3000 	ldr.w	r3, [r9]
 8010e94:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8010e98:	8925      	ldrh	r5, [r4, #8]
 8010e9a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8010e9e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8010ea2:	eba5 050c 	sub.w	r5, r5, ip
 8010ea6:	784a      	ldrb	r2, [r1, #1]
 8010ea8:	f8d8 3000 	ldr.w	r3, [r8]
 8010eac:	b22d      	sxth	r5, r5
 8010eae:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8010eb2:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8010eb6:	9500      	str	r5, [sp, #0]
 8010eb8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8010ebc:	a803      	add	r0, sp, #12
 8010ebe:	f001 fcdd 	bl	801287c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8010ec2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8010ec6:	b203      	sxth	r3, r0
 8010ec8:	18b9      	adds	r1, r7, r2
 8010eca:	2900      	cmp	r1, #0
 8010ecc:	dd0b      	ble.n	8010ee6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8010ece:	3b01      	subs	r3, #1
 8010ed0:	fb13 f302 	smulbb	r3, r3, r2
 8010ed4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8010ed8:	b21f      	sxth	r7, r3
 8010eda:	4638      	mov	r0, r7
 8010edc:	b01d      	add	sp, #116	; 0x74
 8010ede:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010ee2:	b003      	add	sp, #12
 8010ee4:	4770      	bx	lr
 8010ee6:	2b00      	cmp	r3, #0
 8010ee8:	dcf7      	bgt.n	8010eda <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8010eea:	2700      	movs	r7, #0
 8010eec:	e7f5      	b.n	8010eda <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8010eee:	bf00      	nop
 8010ef0:	240020c8 	.word	0x240020c8
 8010ef4:	240020c4 	.word	0x240020c4
 8010ef8:	240020cc 	.word	0x240020cc

08010efc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8010efc:	4bbd      	ldr	r3, [pc, #756]	; (80111f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8010efe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f02:	460c      	mov	r4, r1
 8010f04:	881b      	ldrh	r3, [r3, #0]
 8010f06:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8010f08:	b0a9      	sub	sp, #164	; 0xa4
 8010f0a:	4680      	mov	r8, r0
 8010f0c:	428b      	cmp	r3, r1
 8010f0e:	d809      	bhi.n	8010f24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8010f10:	2300      	movs	r3, #0
 8010f12:	f04f 32ff 	mov.w	r2, #4294967295
 8010f16:	6083      	str	r3, [r0, #8]
 8010f18:	e9c0 3200 	strd	r3, r2, [r0]
 8010f1c:	4640      	mov	r0, r8
 8010f1e:	b029      	add	sp, #164	; 0xa4
 8010f20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f24:	4eb4      	ldr	r6, [pc, #720]	; (80111f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8010f26:	6833      	ldr	r3, [r6, #0]
 8010f28:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8010f2c:	4bb3      	ldr	r3, [pc, #716]	; (80111fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8010f2e:	681b      	ldr	r3, [r3, #0]
 8010f30:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8010f34:	4bb2      	ldr	r3, [pc, #712]	; (8011200 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8010f36:	6818      	ldr	r0, [r3, #0]
 8010f38:	f7fc fbf2 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 8010f3c:	682b      	ldr	r3, [r5, #0]
 8010f3e:	4681      	mov	r9, r0
 8010f40:	4628      	mov	r0, r5
 8010f42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f44:	4798      	blx	r3
 8010f46:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8010f48:	b203      	sxth	r3, r0
 8010f4a:	4682      	mov	sl, r0
 8010f4c:	4407      	add	r7, r0
 8010f4e:	a80f      	add	r0, sp, #60	; 0x3c
 8010f50:	9304      	str	r3, [sp, #16]
 8010f52:	b2bb      	uxth	r3, r7
 8010f54:	9303      	str	r3, [sp, #12]
 8010f56:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8010f5a:	2b00      	cmp	r3, #0
 8010f5c:	f040 80a5 	bne.w	80110aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 8010f60:	f003 fdde 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 8010f64:	682b      	ldr	r3, [r5, #0]
 8010f66:	4628      	mov	r0, r5
 8010f68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010f6a:	4798      	blx	r3
 8010f6c:	682b      	ldr	r3, [r5, #0]
 8010f6e:	4606      	mov	r6, r0
 8010f70:	4628      	mov	r0, r5
 8010f72:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010f74:	4798      	blx	r3
 8010f76:	6823      	ldr	r3, [r4, #0]
 8010f78:	4607      	mov	r7, r0
 8010f7a:	4620      	mov	r0, r4
 8010f7c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010f7e:	4798      	blx	r3
 8010f80:	6823      	ldr	r3, [r4, #0]
 8010f82:	4683      	mov	fp, r0
 8010f84:	4620      	mov	r0, r4
 8010f86:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010f8a:	4798      	blx	r3
 8010f8c:	463b      	mov	r3, r7
 8010f8e:	4649      	mov	r1, r9
 8010f90:	4632      	mov	r2, r6
 8010f92:	2600      	movs	r6, #0
 8010f94:	e9cd b000 	strd	fp, r0, [sp]
 8010f98:	a80f      	add	r0, sp, #60	; 0x3c
 8010f9a:	4637      	mov	r7, r6
 8010f9c:	f003 fe30 	bl	8014c00 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8010fa0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010fa4:	f8df b250 	ldr.w	fp, [pc, #592]	; 80111f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8010fa8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8010fac:	bf0c      	ite	eq
 8010fae:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8010fb2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8010fb6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8010fb8:	4629      	mov	r1, r5
 8010fba:	f8db 3000 	ldr.w	r3, [fp]
 8010fbe:	a80f      	add	r0, sp, #60	; 0x3c
 8010fc0:	3701      	adds	r7, #1
 8010fc2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010fc6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010fca:	b2bf      	uxth	r7, r7
 8010fcc:	785b      	ldrb	r3, [r3, #1]
 8010fce:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8010fd2:	f001 f96e 	bl	80122b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010fd6:	9b03      	ldr	r3, [sp, #12]
 8010fd8:	4286      	cmp	r6, r0
 8010fda:	eba9 0903 	sub.w	r9, r9, r3
 8010fde:	bfb8      	it	lt
 8010fe0:	4606      	movlt	r6, r0
 8010fe2:	a80f      	add	r0, sp, #60	; 0x3c
 8010fe4:	fa0f f989 	sxth.w	r9, r9
 8010fe8:	b236      	sxth	r6, r6
 8010fea:	f003 fdc0 	bl	8014b6e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8010fee:	b918      	cbnz	r0, 8010ff8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 8010ff0:	7a2b      	ldrb	r3, [r5, #8]
 8010ff2:	444b      	add	r3, r9
 8010ff4:	2b00      	cmp	r3, #0
 8010ff6:	dcde      	bgt.n	8010fb6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 8010ff8:	9b03      	ldr	r3, [sp, #12]
 8010ffa:	4620      	mov	r0, r4
 8010ffc:	9a04      	ldr	r2, [sp, #16]
 8010ffe:	fb13 f707 	smulbb	r7, r3, r7
 8011002:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011004:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011008:	1aff      	subs	r7, r7, r3
 801100a:	b2bf      	uxth	r7, r7
 801100c:	b23b      	sxth	r3, r7
 801100e:	429a      	cmp	r2, r3
 8011010:	bfa8      	it	ge
 8011012:	4657      	movge	r7, sl
 8011014:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011018:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801101c:	6823      	ldr	r3, [r4, #0]
 801101e:	444f      	add	r7, r9
 8011020:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011022:	bf08      	it	eq
 8011024:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011028:	fa1f f987 	uxth.w	r9, r7
 801102c:	bf18      	it	ne
 801102e:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011032:	4798      	blx	r3
 8011034:	2801      	cmp	r0, #1
 8011036:	fa0f f789 	sxth.w	r7, r9
 801103a:	b2b3      	uxth	r3, r6
 801103c:	f000 80e2 	beq.w	8011204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011040:	2802      	cmp	r0, #2
 8011042:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011046:	f000 80e3 	beq.w	8011210 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801104a:	7aea      	ldrb	r2, [r5, #11]
 801104c:	b236      	sxth	r6, r6
 801104e:	7b2d      	ldrb	r5, [r5, #12]
 8011050:	1ab6      	subs	r6, r6, r2
 8011052:	442a      	add	r2, r5
 8011054:	fa1f fa86 	uxth.w	sl, r6
 8011058:	4413      	add	r3, r2
 801105a:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801105e:	fa0f fb8a 	sxth.w	fp, sl
 8011062:	b29b      	uxth	r3, r3
 8011064:	2a02      	cmp	r2, #2
 8011066:	b21e      	sxth	r6, r3
 8011068:	f000 80d6 	beq.w	8011218 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801106c:	2a03      	cmp	r2, #3
 801106e:	f000 80de 	beq.w	801122e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011072:	2a01      	cmp	r2, #1
 8011074:	f040 80e6 	bne.w	8011244 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011078:	8925      	ldrh	r5, [r4, #8]
 801107a:	4633      	mov	r3, r6
 801107c:	463e      	mov	r6, r7
 801107e:	eba5 0909 	sub.w	r9, r5, r9
 8011082:	461f      	mov	r7, r3
 8011084:	465d      	mov	r5, fp
 8011086:	fa0f fb89 	sxth.w	fp, r9
 801108a:	4b5d      	ldr	r3, [pc, #372]	; (8011200 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801108c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801108e:	6818      	ldr	r0, [r3, #0]
 8011090:	f7fc fb46 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 8011094:	f8a8 b000 	strh.w	fp, [r8]
 8011098:	f8a8 5002 	strh.w	r5, [r8, #2]
 801109c:	f8a8 6004 	strh.w	r6, [r8, #4]
 80110a0:	f8a8 7006 	strh.w	r7, [r8, #6]
 80110a4:	f8c8 0008 	str.w	r0, [r8, #8]
 80110a8:	e738      	b.n	8010f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80110aa:	f003 fd39 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 80110ae:	682b      	ldr	r3, [r5, #0]
 80110b0:	4628      	mov	r0, r5
 80110b2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80110b4:	4798      	blx	r3
 80110b6:	682b      	ldr	r3, [r5, #0]
 80110b8:	4607      	mov	r7, r0
 80110ba:	4628      	mov	r0, r5
 80110bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80110be:	4798      	blx	r3
 80110c0:	6823      	ldr	r3, [r4, #0]
 80110c2:	4683      	mov	fp, r0
 80110c4:	4620      	mov	r0, r4
 80110c6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80110c8:	4798      	blx	r3
 80110ca:	6822      	ldr	r2, [r4, #0]
 80110cc:	9005      	str	r0, [sp, #20]
 80110ce:	4620      	mov	r0, r4
 80110d0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80110d4:	4790      	blx	r2
 80110d6:	9b05      	ldr	r3, [sp, #20]
 80110d8:	463a      	mov	r2, r7
 80110da:	4649      	mov	r1, r9
 80110dc:	9001      	str	r0, [sp, #4]
 80110de:	a80f      	add	r0, sp, #60	; 0x3c
 80110e0:	9300      	str	r3, [sp, #0]
 80110e2:	465b      	mov	r3, fp
 80110e4:	f003 fd8c 	bl	8014c00 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80110e8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80110ec:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80110f0:	af0f      	add	r7, sp, #60	; 0x3c
 80110f2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80110f6:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80110fa:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80110fc:	bf0a      	itet	eq
 80110fe:	464a      	moveq	r2, r9
 8011100:	461a      	movne	r2, r3
 8011102:	4699      	moveq	r9, r3
 8011104:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011108:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 801110c:	1ad2      	subs	r2, r2, r3
 801110e:	6833      	ldr	r3, [r6, #0]
 8011110:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011114:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011118:	7859      	ldrb	r1, [r3, #1]
 801111a:	2300      	movs	r3, #0
 801111c:	9707      	str	r7, [sp, #28]
 801111e:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011122:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011126:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801112a:	f88d 1020 	strb.w	r1, [sp, #32]
 801112e:	9509      	str	r5, [sp, #36]	; 0x24
 8011130:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011134:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011138:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801113c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011140:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011144:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011148:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801114c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011150:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011154:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011158:	b350      	cbz	r0, 80111b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 801115a:	682b      	ldr	r3, [r5, #0]
 801115c:	4628      	mov	r0, r5
 801115e:	695b      	ldr	r3, [r3, #20]
 8011160:	4798      	blx	r3
 8011162:	4607      	mov	r7, r0
 8011164:	b320      	cbz	r0, 80111b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8011166:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011168:	4639      	mov	r1, r7
 801116a:	6803      	ldr	r3, [r0, #0]
 801116c:	68db      	ldr	r3, [r3, #12]
 801116e:	4798      	blx	r3
 8011170:	4606      	mov	r6, r0
 8011172:	b1e8      	cbz	r0, 80111b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 8011174:	7b43      	ldrb	r3, [r0, #13]
 8011176:	7a82      	ldrb	r2, [r0, #10]
 8011178:	005b      	lsls	r3, r3, #1
 801117a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801117e:	4313      	orrs	r3, r2
 8011180:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011184:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011188:	2b06      	cmp	r3, #6
 801118a:	d111      	bne.n	80111b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 801118c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801118e:	4632      	mov	r2, r6
 8011190:	4639      	mov	r1, r7
 8011192:	6803      	ldr	r3, [r0, #0]
 8011194:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011196:	4798      	blx	r3
 8011198:	7b73      	ldrb	r3, [r6, #13]
 801119a:	005b      	lsls	r3, r3, #1
 801119c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80111a0:	7ab3      	ldrb	r3, [r6, #10]
 80111a2:	4313      	orrs	r3, r2
 80111a4:	4418      	add	r0, r3
 80111a6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80111aa:	4418      	add	r0, r3
 80111ac:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80111b0:	2600      	movs	r6, #0
 80111b2:	4637      	mov	r7, r6
 80111b4:	a806      	add	r0, sp, #24
 80111b6:	3701      	adds	r7, #1
 80111b8:	f001 fa5d 	bl	8012676 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80111bc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80111c0:	9b03      	ldr	r3, [sp, #12]
 80111c2:	b2bf      	uxth	r7, r7
 80111c4:	4286      	cmp	r6, r0
 80111c6:	eba9 0903 	sub.w	r9, r9, r3
 80111ca:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80111ce:	bfb8      	it	lt
 80111d0:	4606      	movlt	r6, r0
 80111d2:	fa0f f989 	sxth.w	r9, r9
 80111d6:	b236      	sxth	r6, r6
 80111d8:	2b00      	cmp	r3, #0
 80111da:	f43f af0d 	beq.w	8010ff8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80111de:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80111e2:	2b00      	cmp	r3, #0
 80111e4:	f47f af08 	bne.w	8010ff8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80111e8:	7a2b      	ldrb	r3, [r5, #8]
 80111ea:	444b      	add	r3, r9
 80111ec:	2b00      	cmp	r3, #0
 80111ee:	dce1      	bgt.n	80111b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 80111f0:	e702      	b.n	8010ff8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 80111f2:	bf00      	nop
 80111f4:	240020c8 	.word	0x240020c8
 80111f8:	240020c4 	.word	0x240020c4
 80111fc:	240020cc 	.word	0x240020cc
 8011200:	240020d0 	.word	0x240020d0
 8011204:	ebaa 0606 	sub.w	r6, sl, r6
 8011208:	2002      	movs	r0, #2
 801120a:	fb96 f6f0 	sdiv	r6, r6, r0
 801120e:	e71c      	b.n	801104a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8011210:	441e      	add	r6, r3
 8011212:	ebaa 0606 	sub.w	r6, sl, r6
 8011216:	e718      	b.n	801104a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 8011218:	8925      	ldrh	r5, [r4, #8]
 801121a:	1aed      	subs	r5, r5, r3
 801121c:	eba5 050a 	sub.w	r5, r5, sl
 8011220:	fa0f fb85 	sxth.w	fp, r5
 8011224:	8965      	ldrh	r5, [r4, #10]
 8011226:	eba5 0509 	sub.w	r5, r5, r9
 801122a:	b22d      	sxth	r5, r5
 801122c:	e72d      	b.n	801108a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 801122e:	8965      	ldrh	r5, [r4, #10]
 8011230:	f04f 0b00 	mov.w	fp, #0
 8011234:	1aed      	subs	r5, r5, r3
 8011236:	4633      	mov	r3, r6
 8011238:	463e      	mov	r6, r7
 801123a:	eba5 050a 	sub.w	r5, r5, sl
 801123e:	461f      	mov	r7, r3
 8011240:	b22d      	sxth	r5, r5
 8011242:	e722      	b.n	801108a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 8011244:	2500      	movs	r5, #0
 8011246:	e720      	b.n	801108a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

08011248 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011248:	b513      	push	{r0, r1, r4, lr}
 801124a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801124e:	4604      	mov	r4, r0
 8011250:	b1fb      	cbz	r3, 8011292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011252:	4b16      	ldr	r3, [pc, #88]	; (80112ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011254:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011256:	881b      	ldrh	r3, [r3, #0]
 8011258:	428b      	cmp	r3, r1
 801125a:	d91a      	bls.n	8011292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801125c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011260:	2b00      	cmp	r3, #0
 8011262:	dd16      	ble.n	8011292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011264:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011268:	2b00      	cmp	r3, #0
 801126a:	dd12      	ble.n	8011292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801126c:	4b10      	ldr	r3, [pc, #64]	; (80112b0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801126e:	6818      	ldr	r0, [r3, #0]
 8011270:	f7fc fa56 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 8011274:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011278:	6822      	ldr	r2, [r4, #0]
 801127a:	2b00      	cmp	r3, #0
 801127c:	db06      	blt.n	801128c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801127e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011282:	2b00      	cmp	r3, #0
 8011284:	db02      	blt.n	801128c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011286:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011288:	4298      	cmp	r0, r3
 801128a:	d004      	beq.n	8011296 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801128c:	6953      	ldr	r3, [r2, #20]
 801128e:	4620      	mov	r0, r4
 8011290:	4798      	blx	r3
 8011292:	b002      	add	sp, #8
 8011294:	bd10      	pop	{r4, pc}
 8011296:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801129a:	466b      	mov	r3, sp
 801129c:	6912      	ldr	r2, [r2, #16]
 801129e:	c903      	ldmia	r1, {r0, r1}
 80112a0:	e883 0003 	stmia.w	r3, {r0, r1}
 80112a4:	4619      	mov	r1, r3
 80112a6:	4620      	mov	r0, r4
 80112a8:	4790      	blx	r2
 80112aa:	e7f2      	b.n	8011292 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80112ac:	240020c8 	.word	0x240020c8
 80112b0:	240020d0 	.word	0x240020d0

080112b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80112b4:	4b45      	ldr	r3, [pc, #276]	; (80113cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80112b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112ba:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80112bc:	b08e      	sub	sp, #56	; 0x38
 80112be:	881b      	ldrh	r3, [r3, #0]
 80112c0:	4604      	mov	r4, r0
 80112c2:	4293      	cmp	r3, r2
 80112c4:	d97e      	bls.n	80113c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80112c6:	6808      	ldr	r0, [r1, #0]
 80112c8:	ab05      	add	r3, sp, #20
 80112ca:	6849      	ldr	r1, [r1, #4]
 80112cc:	4d40      	ldr	r5, [pc, #256]	; (80113d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80112ce:	c303      	stmia	r3!, {r0, r1}
 80112d0:	4611      	mov	r1, r2
 80112d2:	6828      	ldr	r0, [r5, #0]
 80112d4:	f7fc fa24 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 80112d8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80112dc:	2b00      	cmp	r3, #0
 80112de:	db11      	blt.n	8011304 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80112e0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80112e4:	2b00      	cmp	r3, #0
 80112e6:	db0d      	blt.n	8011304 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80112e8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80112ea:	4298      	cmp	r0, r3
 80112ec:	d10a      	bne.n	8011304 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80112ee:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80112f2:	ab09      	add	r3, sp, #36	; 0x24
 80112f4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80112f8:	e883 0003 	stmia.w	r3, {r0, r1}
 80112fc:	4619      	mov	r1, r3
 80112fe:	a805      	add	r0, sp, #20
 8011300:	f7fe fc92 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 8011304:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011308:	2b00      	cmp	r3, #0
 801130a:	dd5b      	ble.n	80113c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801130c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011310:	2b00      	cmp	r3, #0
 8011312:	dd57      	ble.n	80113c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011314:	4f2f      	ldr	r7, [pc, #188]	; (80113d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011316:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011318:	683b      	ldr	r3, [r7, #0]
 801131a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801131e:	4b2e      	ldr	r3, [pc, #184]	; (80113d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011320:	681b      	ldr	r3, [r3, #0]
 8011322:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011326:	2e00      	cmp	r6, #0
 8011328:	d04c      	beq.n	80113c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801132a:	6823      	ldr	r3, [r4, #0]
 801132c:	4620      	mov	r0, r4
 801132e:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011332:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011334:	4798      	blx	r3
 8011336:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011338:	683b      	ldr	r3, [r7, #0]
 801133a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801133e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011342:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011346:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 801134a:	785b      	ldrb	r3, [r3, #1]
 801134c:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011350:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011354:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011356:	9609      	str	r6, [sp, #36]	; 0x24
 8011358:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801135c:	4b1f      	ldr	r3, [pc, #124]	; (80113dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801135e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011362:	681b      	ldr	r3, [r3, #0]
 8011364:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011368:	910b      	str	r1, [sp, #44]	; 0x2c
 801136a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801136e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011372:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011376:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801137a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801137e:	b10a      	cbz	r2, 8011384 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011380:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011382:	b906      	cbnz	r6, 8011386 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011384:	689e      	ldr	r6, [r3, #8]
 8011386:	af07      	add	r7, sp, #28
 8011388:	4621      	mov	r1, r4
 801138a:	4638      	mov	r0, r7
 801138c:	f003 f812 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011390:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011392:	6828      	ldr	r0, [r5, #0]
 8011394:	f7fc f9c4 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 8011398:	6823      	ldr	r3, [r4, #0]
 801139a:	4605      	mov	r5, r0
 801139c:	4620      	mov	r0, r4
 801139e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80113a0:	4798      	blx	r3
 80113a2:	6823      	ldr	r3, [r4, #0]
 80113a4:	4680      	mov	r8, r0
 80113a6:	4620      	mov	r0, r4
 80113a8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80113ac:	4798      	blx	r3
 80113ae:	ab09      	add	r3, sp, #36	; 0x24
 80113b0:	9501      	str	r5, [sp, #4]
 80113b2:	9300      	str	r3, [sp, #0]
 80113b4:	ab05      	add	r3, sp, #20
 80113b6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80113ba:	4630      	mov	r0, r6
 80113bc:	e897 0006 	ldmia.w	r7, {r1, r2}
 80113c0:	f7fc f93f 	bl	800d642 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80113c4:	b00e      	add	sp, #56	; 0x38
 80113c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113ca:	bf00      	nop
 80113cc:	240020c8 	.word	0x240020c8
 80113d0:	240020d0 	.word	0x240020d0
 80113d4:	240020c4 	.word	0x240020c4
 80113d8:	240020cc 	.word	0x240020cc
 80113dc:	24002074 	.word	0x24002074

080113e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80113e0:	b538      	push	{r3, r4, r5, lr}
 80113e2:	4b0e      	ldr	r3, [pc, #56]	; (801141c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80113e4:	4604      	mov	r4, r0
 80113e6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80113e8:	881b      	ldrh	r3, [r3, #0]
 80113ea:	429a      	cmp	r2, r3
 80113ec:	d214      	bcs.n	8011418 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80113ee:	6803      	ldr	r3, [r0, #0]
 80113f0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80113f2:	4798      	blx	r3
 80113f4:	6823      	ldr	r3, [r4, #0]
 80113f6:	4605      	mov	r5, r0
 80113f8:	4620      	mov	r0, r4
 80113fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80113fc:	4798      	blx	r3
 80113fe:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011402:	b22d      	sxth	r5, r5
 8011404:	4601      	mov	r1, r0
 8011406:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801140a:	bf06      	itte	eq
 801140c:	4602      	moveq	r2, r0
 801140e:	4629      	moveq	r1, r5
 8011410:	462a      	movne	r2, r5
 8011412:	4620      	mov	r0, r4
 8011414:	f7fb f9cb 	bl	800c7ae <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011418:	bd38      	pop	{r3, r4, r5, pc}
 801141a:	bf00      	nop
 801141c:	240020c8 	.word	0x240020c8

08011420 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011420:	b530      	push	{r4, r5, lr}
 8011422:	888b      	ldrh	r3, [r1, #4]
 8011424:	b085      	sub	sp, #20
 8011426:	4604      	mov	r4, r0
 8011428:	8583      	strh	r3, [r0, #44]	; 0x2c
 801142a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801142e:	b923      	cbnz	r3, 801143a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011430:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011434:	b90b      	cbnz	r3, 801143a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011436:	f7ff ffd3 	bl	80113e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801143a:	6823      	ldr	r3, [r4, #0]
 801143c:	466d      	mov	r5, sp
 801143e:	4621      	mov	r1, r4
 8011440:	343c      	adds	r4, #60	; 0x3c
 8011442:	4628      	mov	r0, r5
 8011444:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011448:	4798      	blx	r3
 801144a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801144e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011452:	b005      	add	sp, #20
 8011454:	bd30      	pop	{r4, r5, pc}

08011456 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011456:	2300      	movs	r3, #0
 8011458:	8083      	strh	r3, [r0, #4]
 801145a:	80c3      	strh	r3, [r0, #6]
 801145c:	8003      	strh	r3, [r0, #0]
 801145e:	8043      	strh	r3, [r0, #2]
 8011460:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011464:	2bff      	cmp	r3, #255	; 0xff
 8011466:	bf01      	itttt	eq
 8011468:	890b      	ldrheq	r3, [r1, #8]
 801146a:	8083      	strheq	r3, [r0, #4]
 801146c:	894b      	ldrheq	r3, [r1, #10]
 801146e:	80c3      	strheq	r3, [r0, #6]
 8011470:	4770      	bx	lr
	...

08011474 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011474:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011476:	4604      	mov	r4, r0
 8011478:	466b      	mov	r3, sp
 801147a:	6808      	ldr	r0, [r1, #0]
 801147c:	6849      	ldr	r1, [r1, #4]
 801147e:	c303      	stmia	r3!, {r0, r1}
 8011480:	6823      	ldr	r3, [r4, #0]
 8011482:	4669      	mov	r1, sp
 8011484:	4620      	mov	r0, r4
 8011486:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011488:	4798      	blx	r3
 801148a:	4b08      	ldr	r3, [pc, #32]	; (80114ac <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801148c:	681b      	ldr	r3, [r3, #0]
 801148e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011492:	b10a      	cbz	r2, 8011498 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011494:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011496:	b900      	cbnz	r0, 801149a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011498:	6898      	ldr	r0, [r3, #8]
 801149a:	6803      	ldr	r3, [r0, #0]
 801149c:	4669      	mov	r1, sp
 801149e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80114a0:	6a1d      	ldr	r5, [r3, #32]
 80114a2:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80114a6:	47a8      	blx	r5
 80114a8:	b003      	add	sp, #12
 80114aa:	bd30      	pop	{r4, r5, pc}
 80114ac:	24002074 	.word	0x24002074

080114b0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80114b0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80114b4:	b12a      	cbz	r2, 80114c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80114b6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80114ba:	b112      	cbz	r2, 80114c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80114bc:	6803      	ldr	r3, [r0, #0]
 80114be:	695b      	ldr	r3, [r3, #20]
 80114c0:	4718      	bx	r3
 80114c2:	4770      	bx	lr

080114c4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80114c4:	b570      	push	{r4, r5, r6, lr}
 80114c6:	880b      	ldrh	r3, [r1, #0]
 80114c8:	4605      	mov	r5, r0
 80114ca:	4604      	mov	r4, r0
 80114cc:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80114ce:	8813      	ldrh	r3, [r2, #0]
 80114d0:	f825 3f30 	strh.w	r3, [r5, #48]!
 80114d4:	4628      	mov	r0, r5
 80114d6:	f004 fb35 	bl	8015b44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80114da:	4606      	mov	r6, r0
 80114dc:	4628      	mov	r0, r5
 80114de:	f004 fb65 	bl	8015bac <_ZNK8touchgfx6Bitmap9getHeightEv>
 80114e2:	6823      	ldr	r3, [r4, #0]
 80114e4:	4605      	mov	r5, r0
 80114e6:	4631      	mov	r1, r6
 80114e8:	4620      	mov	r0, r4
 80114ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80114ec:	4798      	blx	r3
 80114ee:	6823      	ldr	r3, [r4, #0]
 80114f0:	4629      	mov	r1, r5
 80114f2:	4620      	mov	r0, r4
 80114f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80114f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114fa:	4718      	bx	r3

080114fc <_ZNK8touchgfx6Button12getSolidRectEv>:
 80114fc:	b510      	push	{r4, lr}
 80114fe:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8011502:	4604      	mov	r4, r0
 8011504:	2bff      	cmp	r3, #255	; 0xff
 8011506:	d006      	beq.n	8011516 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011508:	2300      	movs	r3, #0
 801150a:	8003      	strh	r3, [r0, #0]
 801150c:	8043      	strh	r3, [r0, #2]
 801150e:	8083      	strh	r3, [r0, #4]
 8011510:	80c3      	strh	r3, [r0, #6]
 8011512:	4620      	mov	r0, r4
 8011514:	bd10      	pop	{r4, pc}
 8011516:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 801151a:	b11b      	cbz	r3, 8011524 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801151c:	3130      	adds	r1, #48	; 0x30
 801151e:	f004 fb79 	bl	8015c14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011522:	e7f6      	b.n	8011512 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011524:	312e      	adds	r1, #46	; 0x2e
 8011526:	e7fa      	b.n	801151e <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

08011528 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011528:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801152c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011530:	b08a      	sub	sp, #40	; 0x28
 8011532:	4604      	mov	r4, r0
 8011534:	4688      	mov	r8, r1
 8011536:	2b00      	cmp	r3, #0
 8011538:	d066      	beq.n	8011608 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801153a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801153c:	a805      	add	r0, sp, #20
 801153e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011542:	f004 faff 	bl	8015b44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011546:	4607      	mov	r7, r0
 8011548:	a805      	add	r0, sp, #20
 801154a:	f004 fb2f 	bl	8015bac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801154e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011552:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011556:	2300      	movs	r3, #0
 8011558:	4432      	add	r2, r6
 801155a:	9306      	str	r3, [sp, #24]
 801155c:	b292      	uxth	r2, r2
 801155e:	fa0f fc82 	sxth.w	ip, r2
 8011562:	459c      	cmp	ip, r3
 8011564:	dd52      	ble.n	801160c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011566:	42b7      	cmp	r7, r6
 8011568:	dd50      	ble.n	801160c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801156a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801156e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011572:	442b      	add	r3, r5
 8011574:	b29b      	uxth	r3, r3
 8011576:	b219      	sxth	r1, r3
 8011578:	2900      	cmp	r1, #0
 801157a:	dd47      	ble.n	801160c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801157c:	42a8      	cmp	r0, r5
 801157e:	dd45      	ble.n	801160c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011580:	4567      	cmp	r7, ip
 8011582:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8011586:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801158a:	bfb8      	it	lt
 801158c:	b2ba      	uxthlt	r2, r7
 801158e:	4288      	cmp	r0, r1
 8011590:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011594:	bfb8      	it	lt
 8011596:	b283      	uxthlt	r3, r0
 8011598:	1b92      	subs	r2, r2, r6
 801159a:	f8ad 501a 	strh.w	r5, [sp, #26]
 801159e:	1b5b      	subs	r3, r3, r5
 80115a0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80115a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80115a8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80115ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80115b0:	429a      	cmp	r2, r3
 80115b2:	d026      	beq.n	8011602 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80115b4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80115b8:	2b00      	cmp	r3, #0
 80115ba:	dd22      	ble.n	8011602 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80115bc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80115c0:	2b00      	cmp	r3, #0
 80115c2:	dd1e      	ble.n	8011602 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80115c4:	2300      	movs	r3, #0
 80115c6:	a908      	add	r1, sp, #32
 80115c8:	4620      	mov	r0, r4
 80115ca:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80115ce:	6823      	ldr	r3, [r4, #0]
 80115d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115d2:	4798      	blx	r3
 80115d4:	4b0f      	ldr	r3, [pc, #60]	; (8011614 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80115d6:	681b      	ldr	r3, [r3, #0]
 80115d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80115dc:	b10a      	cbz	r2, 80115e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80115de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80115e0:	b900      	cbnz	r0, 80115e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80115e2:	6898      	ldr	r0, [r3, #8]
 80115e4:	2501      	movs	r5, #1
 80115e6:	6801      	ldr	r1, [r0, #0]
 80115e8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80115ec:	9502      	str	r5, [sp, #8]
 80115ee:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80115f2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80115f6:	9401      	str	r4, [sp, #4]
 80115f8:	ac06      	add	r4, sp, #24
 80115fa:	9400      	str	r4, [sp, #0]
 80115fc:	688c      	ldr	r4, [r1, #8]
 80115fe:	a905      	add	r1, sp, #20
 8011600:	47a0      	blx	r4
 8011602:	b00a      	add	sp, #40	; 0x28
 8011604:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011608:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801160a:	e797      	b.n	801153c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801160c:	2300      	movs	r3, #0
 801160e:	9307      	str	r3, [sp, #28]
 8011610:	e7ca      	b.n	80115a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011612:	bf00      	nop
 8011614:	24002074 	.word	0x24002074

08011618 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011618:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 801161c:	b12a      	cbz	r2, 801162a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801161e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011622:	b112      	cbz	r2, 801162a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011624:	6803      	ldr	r3, [r0, #0]
 8011626:	695b      	ldr	r3, [r3, #20]
 8011628:	4718      	bx	r3
 801162a:	4770      	bx	lr

0801162c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 801162c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011630:	b08d      	sub	sp, #52	; 0x34
 8011632:	4604      	mov	r4, r0
 8011634:	460f      	mov	r7, r1
 8011636:	f7ff ff77 	bl	8011528 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801163a:	4a55      	ldr	r2, [pc, #340]	; (8011790 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 801163c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801163e:	8812      	ldrh	r2, [r2, #0]
 8011640:	429a      	cmp	r2, r3
 8011642:	f240 8082 	bls.w	801174a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011646:	4d53      	ldr	r5, [pc, #332]	; (8011794 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8011648:	682a      	ldr	r2, [r5, #0]
 801164a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801164e:	4b52      	ldr	r3, [pc, #328]	; (8011798 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8011650:	681b      	ldr	r3, [r3, #0]
 8011652:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011656:	2200      	movs	r2, #0
 8011658:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 801165c:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8011660:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8011664:	2a03      	cmp	r2, #3
 8011666:	d811      	bhi.n	801168c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011668:	e8df f002 	tbb	[pc, r2]
 801166c:	89727902 	.word	0x89727902
 8011670:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011674:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011678:	1ad2      	subs	r2, r2, r3
 801167a:	2002      	movs	r0, #2
 801167c:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011680:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011684:	fb92 f2f0 	sdiv	r2, r2, r0
 8011688:	f8ad 200e 	strh.w	r2, [sp, #14]
 801168c:	f10d 080c 	add.w	r8, sp, #12
 8011690:	f10d 0914 	add.w	r9, sp, #20
 8011694:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011698:	e889 0003 	stmia.w	r9, {r0, r1}
 801169c:	4639      	mov	r1, r7
 801169e:	4648      	mov	r0, r9
 80116a0:	f7fe fac2 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 80116a4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80116a8:	2b00      	cmp	r3, #0
 80116aa:	dd4e      	ble.n	801174a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80116ac:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80116b0:	2b00      	cmp	r3, #0
 80116b2:	dd4a      	ble.n	801174a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80116b4:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80116b8:	4641      	mov	r1, r8
 80116ba:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80116be:	4620      	mov	r0, r4
 80116c0:	1a9b      	subs	r3, r3, r2
 80116c2:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80116c6:	f8ad 3014 	strh.w	r3, [sp, #20]
 80116ca:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80116ce:	1a9b      	subs	r3, r3, r2
 80116d0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80116d4:	6823      	ldr	r3, [r4, #0]
 80116d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116d8:	4798      	blx	r3
 80116da:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80116de:	2b00      	cmp	r3, #0
 80116e0:	d053      	beq.n	801178a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80116e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80116e4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80116e6:	682b      	ldr	r3, [r5, #0]
 80116e8:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80116ec:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80116f0:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80116f4:	785b      	ldrb	r3, [r3, #1]
 80116f6:	9209      	str	r2, [sp, #36]	; 0x24
 80116f8:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80116fc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011700:	9607      	str	r6, [sp, #28]
 8011702:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8011706:	2300      	movs	r3, #0
 8011708:	f88d 5020 	strb.w	r5, [sp, #32]
 801170c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8011710:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8011714:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8011718:	4b20      	ldr	r3, [pc, #128]	; (801179c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 801171a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801171e:	681b      	ldr	r3, [r3, #0]
 8011720:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011724:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011728:	b10a      	cbz	r2, 801172e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 801172a:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 801172c:	b904      	cbnz	r4, 8011730 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801172e:	689c      	ldr	r4, [r3, #8]
 8011730:	4b1b      	ldr	r3, [pc, #108]	; (80117a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8011732:	6818      	ldr	r0, [r3, #0]
 8011734:	f7fb fff4 	bl	800d720 <_ZNK8touchgfx5Texts7getTextEt>
 8011738:	ab07      	add	r3, sp, #28
 801173a:	9001      	str	r0, [sp, #4]
 801173c:	4620      	mov	r0, r4
 801173e:	9300      	str	r3, [sp, #0]
 8011740:	464b      	mov	r3, r9
 8011742:	e898 0006 	ldmia.w	r8, {r1, r2}
 8011746:	f7fb ff7c 	bl	800d642 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801174a:	b00d      	add	sp, #52	; 0x34
 801174c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011750:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011754:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011758:	1ad2      	subs	r2, r2, r3
 801175a:	3201      	adds	r2, #1
 801175c:	e78d      	b.n	801167a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801175e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011762:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011766:	1ad2      	subs	r2, r2, r3
 8011768:	3201      	adds	r2, #1
 801176a:	2002      	movs	r0, #2
 801176c:	f8ad 3010 	strh.w	r3, [sp, #16]
 8011770:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011774:	fb92 f2f0 	sdiv	r2, r2, r0
 8011778:	f8ad 200c 	strh.w	r2, [sp, #12]
 801177c:	e786      	b.n	801168c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801177e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011782:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011786:	1ad2      	subs	r2, r2, r3
 8011788:	e7ef      	b.n	801176a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 801178a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 801178c:	e7aa      	b.n	80116e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801178e:	bf00      	nop
 8011790:	240020c8 	.word	0x240020c8
 8011794:	240020c4 	.word	0x240020c4
 8011798:	240020cc 	.word	0x240020cc
 801179c:	24002074 	.word	0x24002074
 80117a0:	240020d0 	.word	0x240020d0

080117a4 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80117a4:	2101      	movs	r1, #1
 80117a6:	2200      	movs	r2, #0
 80117a8:	b510      	push	{r4, lr}
 80117aa:	4c13      	ldr	r4, [pc, #76]	; (80117f8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80117ac:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80117b0:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80117b4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80117b8:	6004      	str	r4, [r0, #0]
 80117ba:	4c10      	ldr	r4, [pc, #64]	; (80117fc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80117bc:	8082      	strh	r2, [r0, #4]
 80117be:	80c2      	strh	r2, [r0, #6]
 80117c0:	8102      	strh	r2, [r0, #8]
 80117c2:	8142      	strh	r2, [r0, #10]
 80117c4:	8182      	strh	r2, [r0, #12]
 80117c6:	81c2      	strh	r2, [r0, #14]
 80117c8:	8202      	strh	r2, [r0, #16]
 80117ca:	8242      	strh	r2, [r0, #18]
 80117cc:	61c2      	str	r2, [r0, #28]
 80117ce:	8402      	strh	r2, [r0, #32]
 80117d0:	8442      	strh	r2, [r0, #34]	; 0x22
 80117d2:	6282      	str	r2, [r0, #40]	; 0x28
 80117d4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80117d8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80117da:	8601      	strh	r1, [r0, #48]	; 0x30
 80117dc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80117e0:	6344      	str	r4, [r0, #52]	; 0x34
 80117e2:	8701      	strh	r1, [r0, #56]	; 0x38
 80117e4:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80117e8:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80117ec:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80117f0:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80117f4:	bd10      	pop	{r4, pc}
 80117f6:	bf00      	nop
 80117f8:	08026114 	.word	0x08026114
 80117fc:	080255a4 	.word	0x080255a4

08011800 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8011800:	b510      	push	{r4, lr}
 8011802:	6803      	ldr	r3, [r0, #0]
 8011804:	460c      	mov	r4, r1
 8011806:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011808:	4798      	blx	r3
 801180a:	1b03      	subs	r3, r0, r4
 801180c:	4258      	negs	r0, r3
 801180e:	4158      	adcs	r0, r3
 8011810:	bd10      	pop	{r4, pc}
	...

08011814 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8011814:	4b01      	ldr	r3, [pc, #4]	; (801181c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8011816:	6019      	str	r1, [r3, #0]
 8011818:	4770      	bx	lr
 801181a:	bf00      	nop
 801181c:	2400207c 	.word	0x2400207c

08011820 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8011820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011824:	4696      	mov	lr, r2
 8011826:	b097      	sub	sp, #92	; 0x5c
 8011828:	4605      	mov	r5, r0
 801182a:	4614      	mov	r4, r2
 801182c:	460e      	mov	r6, r1
 801182e:	461f      	mov	r7, r3
 8011830:	f10d 0c1c 	add.w	ip, sp, #28
 8011834:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8011838:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 801183c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8011840:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011844:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011848:	f8de 3000 	ldr.w	r3, [lr]
 801184c:	f104 0e14 	add.w	lr, r4, #20
 8011850:	f8cc 3000 	str.w	r3, [ip]
 8011854:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8011858:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801185c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011860:	f8de 3000 	ldr.w	r3, [lr]
 8011864:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8011868:	f8cc 3000 	str.w	r3, [ip]
 801186c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8011870:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8011874:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8011878:	f8de 3000 	ldr.w	r3, [lr]
 801187c:	4631      	mov	r1, r6
 801187e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8011880:	4628      	mov	r0, r5
 8011882:	f8cc 3000 	str.w	r3, [ip]
 8011886:	682b      	ldr	r3, [r5, #0]
 8011888:	9201      	str	r2, [sp, #4]
 801188a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801188c:	f8cd 8008 	str.w	r8, [sp, #8]
 8011890:	9200      	str	r2, [sp, #0]
 8011892:	aa07      	add	r2, sp, #28
 8011894:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8011898:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801189c:	463b      	mov	r3, r7
 801189e:	47d8      	blx	fp
 80118a0:	46a6      	mov	lr, r4
 80118a2:	f10d 0c1c 	add.w	ip, sp, #28
 80118a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80118aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80118ae:	f8de 3000 	ldr.w	r3, [lr]
 80118b2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80118b6:	343c      	adds	r4, #60	; 0x3c
 80118b8:	f8cc 3000 	str.w	r3, [ip]
 80118bc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80118c0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80118c4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80118c8:	f8de 3000 	ldr.w	r3, [lr]
 80118cc:	f8cc 3000 	str.w	r3, [ip]
 80118d0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80118d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80118d6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80118da:	6823      	ldr	r3, [r4, #0]
 80118dc:	4631      	mov	r1, r6
 80118de:	4628      	mov	r0, r5
 80118e0:	f8cc 3000 	str.w	r3, [ip]
 80118e4:	682b      	ldr	r3, [r5, #0]
 80118e6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80118ea:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80118ec:	f8cd 8008 	str.w	r8, [sp, #8]
 80118f0:	9201      	str	r2, [sp, #4]
 80118f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80118f4:	9200      	str	r2, [sp, #0]
 80118f6:	aa07      	add	r2, sp, #28
 80118f8:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80118fa:	463b      	mov	r3, r7
 80118fc:	47a0      	blx	r4
 80118fe:	b017      	add	sp, #92	; 0x5c
 8011900:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011904 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011904:	2000      	movs	r0, #0
 8011906:	4770      	bx	lr

08011908 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8011908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801190c:	b08d      	sub	sp, #52	; 0x34
 801190e:	4688      	mov	r8, r1
 8011910:	f8d3 c000 	ldr.w	ip, [r3]
 8011914:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011916:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 801191a:	680f      	ldr	r7, [r1, #0]
 801191c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8011920:	eba7 070c 	sub.w	r7, r7, ip
 8011924:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8011928:	edd3 6a07 	vldr	s13, [r3, #28]
 801192c:	42bc      	cmp	r4, r7
 801192e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8011930:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8011934:	bfa8      	it	ge
 8011936:	463c      	movge	r4, r7
 8011938:	f9b1 9000 	ldrsh.w	r9, [r1]
 801193c:	f9ba 1000 	ldrsh.w	r1, [sl]
 8011940:	ee07 4a90 	vmov	s15, r4
 8011944:	eb09 0e0c 	add.w	lr, r9, ip
 8011948:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801194c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8011950:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8011954:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8011958:	4571      	cmp	r1, lr
 801195a:	ee25 4a04 	vmul.f32	s8, s10, s8
 801195e:	ee65 4a24 	vmul.f32	s9, s10, s9
 8011962:	ee25 5a27 	vmul.f32	s10, s10, s15
 8011966:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801196a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801196e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8011972:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8011976:	ee36 0a84 	vadd.f32	s0, s13, s8
 801197a:	ee61 1a87 	vmul.f32	s3, s3, s14
 801197e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8011982:	f340 808c 	ble.w	8011a9e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 8011986:	eba1 060e 	sub.w	r6, r1, lr
 801198a:	fb96 f5f4 	sdiv	r5, r6, r4
 801198e:	ee07 5a10 	vmov	s14, r5
 8011992:	2d00      	cmp	r5, #0
 8011994:	fb04 6615 	mls	r6, r4, r5, r6
 8011998:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801199c:	eea7 0a04 	vfma.f32	s0, s14, s8
 80119a0:	eee7 0a24 	vfma.f32	s1, s14, s9
 80119a4:	eea7 1a05 	vfma.f32	s2, s14, s10
 80119a8:	dd12      	ble.n	80119d0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 80119aa:	ee70 6a44 	vsub.f32	s13, s0, s8
 80119ae:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80119b2:	ee31 2a45 	vsub.f32	s4, s2, s10
 80119b6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80119ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80119be:	bf14      	ite	ne
 80119c0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80119c4:	eeb0 7a67 	vmoveq.f32	s14, s15
 80119c8:	ee61 1a87 	vmul.f32	s3, s3, s14
 80119cc:	ee22 2a07 	vmul.f32	s4, s4, s14
 80119d0:	fb05 f204 	mul.w	r2, r5, r4
 80119d4:	1abf      	subs	r7, r7, r2
 80119d6:	4494      	add	ip, r2
 80119d8:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80119dc:	4411      	add	r1, r2
 80119de:	eb09 020c 	add.w	r2, r9, ip
 80119e2:	b209      	sxth	r1, r1
 80119e4:	443a      	add	r2, r7
 80119e6:	428a      	cmp	r2, r1
 80119e8:	bfc4      	itt	gt
 80119ea:	eba1 0209 	subgt.w	r2, r1, r9
 80119ee:	eba2 070c 	subgt.w	r7, r2, ip
 80119f2:	2f00      	cmp	r7, #0
 80119f4:	dd50      	ble.n	8011a98 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 80119f6:	fb97 f1f4 	sdiv	r1, r7, r4
 80119fa:	fb04 7211 	mls	r2, r4, r1, r7
 80119fe:	b90a      	cbnz	r2, 8011a04 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 8011a00:	3901      	subs	r1, #1
 8011a02:	4622      	mov	r2, r4
 8011a04:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8011a08:	6840      	ldr	r0, [r0, #4]
 8011a0a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8011a0e:	44b6      	add	lr, r6
 8011a10:	f8d0 a000 	ldr.w	sl, [r0]
 8011a14:	2900      	cmp	r1, #0
 8011a16:	bfcc      	ite	gt
 8011a18:	46a1      	movgt	r9, r4
 8011a1a:	4691      	movle	r9, r2
 8011a1c:	900b      	str	r0, [sp, #44]	; 0x2c
 8011a1e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8011a20:	fb04 e505 	mla	r5, r4, r5, lr
 8011a24:	eef0 6a42 	vmov.f32	s13, s4
 8011a28:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8011a2c:	9008      	str	r0, [sp, #32]
 8011a2e:	eeb0 7a61 	vmov.f32	s14, s3
 8011a32:	9818      	ldr	r0, [sp, #96]	; 0x60
 8011a34:	695b      	ldr	r3, [r3, #20]
 8011a36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011a3a:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8011a3e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8011a42:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8011a44:	445b      	add	r3, fp
 8011a46:	9307      	str	r3, [sp, #28]
 8011a48:	ee16 3a90 	vmov	r3, s13
 8011a4c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8011a50:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8011a54:	ee21 3a23 	vmul.f32	s6, s2, s7
 8011a58:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8011a5c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8011a60:	ee17 7a90 	vmov	r7, s15
 8011a64:	ee73 7a42 	vsub.f32	s15, s6, s4
 8011a68:	fb97 f7f4 	sdiv	r7, r7, r4
 8011a6c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8011a70:	ee17 ca90 	vmov	ip, s15
 8011a74:	fb9c fcf4 	sdiv	ip, ip, r4
 8011a78:	fb0c 3306 	mla	r3, ip, r6, r3
 8011a7c:	9302      	str	r3, [sp, #8]
 8011a7e:	ee17 3a10 	vmov	r3, s14
 8011a82:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8011a86:	fb07 3706 	mla	r7, r7, r6, r3
 8011a8a:	eba9 0306 	sub.w	r3, r9, r6
 8011a8e:	e9cd 4700 	strd	r4, r7, [sp]
 8011a92:	f8da 4008 	ldr.w	r4, [sl, #8]
 8011a96:	47a0      	blx	r4
 8011a98:	b00d      	add	sp, #52	; 0x34
 8011a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a9e:	2500      	movs	r5, #0
 8011aa0:	462e      	mov	r6, r5
 8011aa2:	e799      	b.n	80119d8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08011aa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8011aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011aa8:	b0db      	sub	sp, #364	; 0x16c
 8011aaa:	461d      	mov	r5, r3
 8011aac:	4614      	mov	r4, r2
 8011aae:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8011ab2:	910f      	str	r1, [sp, #60]	; 0x3c
 8011ab4:	4629      	mov	r1, r5
 8011ab6:	930a      	str	r3, [sp, #40]	; 0x28
 8011ab8:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8011abc:	9009      	str	r0, [sp, #36]	; 0x24
 8011abe:	930b      	str	r3, [sp, #44]	; 0x2c
 8011ac0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8011ac4:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8011ac8:	9310      	str	r3, [sp, #64]	; 0x40
 8011aca:	6803      	ldr	r3, [r0, #0]
 8011acc:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8011ace:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8011ad2:	47b8      	blx	r7
 8011ad4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011ad6:	6058      	str	r0, [r3, #4]
 8011ad8:	2800      	cmp	r0, #0
 8011ada:	f000 83a1 	beq.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011ade:	682b      	ldr	r3, [r5, #0]
 8011ae0:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8011ae4:	ed94 7a02 	vldr	s14, [r4, #8]
 8011ae8:	9314      	str	r3, [sp, #80]	; 0x50
 8011aea:	686b      	ldr	r3, [r5, #4]
 8011aec:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8011af0:	9315      	str	r3, [sp, #84]	; 0x54
 8011af2:	4bc1      	ldr	r3, [pc, #772]	; (8011df8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8011af4:	7819      	ldrb	r1, [r3, #0]
 8011af6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8011afa:	2900      	cmp	r1, #0
 8011afc:	bf16      	itet	ne
 8011afe:	4619      	movne	r1, r3
 8011b00:	4611      	moveq	r1, r2
 8011b02:	4613      	movne	r3, r2
 8011b04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b08:	9116      	str	r1, [sp, #88]	; 0x58
 8011b0a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8011b0e:	f240 8387 	bls.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b12:	ed94 7a07 	vldr	s14, [r4, #28]
 8011b16:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8011b1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b1e:	f240 837f 	bls.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b22:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8011b26:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8011b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b2e:	f240 8377 	bls.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b32:	6822      	ldr	r2, [r4, #0]
 8011b34:	4bb1      	ldr	r3, [pc, #708]	; (8011dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8011b36:	429a      	cmp	r2, r3
 8011b38:	f2c0 8372 	blt.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b3c:	49b0      	ldr	r1, [pc, #704]	; (8011e00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8011b3e:	6963      	ldr	r3, [r4, #20]
 8011b40:	428a      	cmp	r2, r1
 8011b42:	f300 836d 	bgt.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b46:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8011b4a:	48ae      	ldr	r0, [pc, #696]	; (8011e04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8011b4c:	33ff      	adds	r3, #255	; 0xff
 8011b4e:	4283      	cmp	r3, r0
 8011b50:	f200 8366 	bhi.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b54:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011b56:	4dac      	ldr	r5, [pc, #688]	; (8011e08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8011b58:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8011b5c:	33ff      	adds	r3, #255	; 0xff
 8011b5e:	42ab      	cmp	r3, r5
 8011b60:	f200 835e 	bhi.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b64:	6862      	ldr	r2, [r4, #4]
 8011b66:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8011b6a:	33ff      	adds	r3, #255	; 0xff
 8011b6c:	4283      	cmp	r3, r0
 8011b6e:	f200 8357 	bhi.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b72:	69a1      	ldr	r1, [r4, #24]
 8011b74:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8011b78:	33ff      	adds	r3, #255	; 0xff
 8011b7a:	4283      	cmp	r3, r0
 8011b7c:	f200 8350 	bhi.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b80:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011b82:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8011b86:	30ff      	adds	r0, #255	; 0xff
 8011b88:	42a8      	cmp	r0, r5
 8011b8a:	f200 8349 	bhi.w	8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011b8e:	428a      	cmp	r2, r1
 8011b90:	f280 8110 	bge.w	8011db4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8011b94:	429a      	cmp	r2, r3
 8011b96:	f300 8119 	bgt.w	8011dcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8011b9a:	4299      	cmp	r1, r3
 8011b9c:	f280 811d 	bge.w	8011dda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8011ba0:	2502      	movs	r5, #2
 8011ba2:	2701      	movs	r7, #1
 8011ba4:	46a9      	mov	r9, r5
 8011ba6:	46b8      	mov	r8, r7
 8011ba8:	f04f 0a00 	mov.w	sl, #0
 8011bac:	4621      	mov	r1, r4
 8011bae:	a849      	add	r0, sp, #292	; 0x124
 8011bb0:	f003 fd00 	bl	80155b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8011bb4:	4622      	mov	r2, r4
 8011bb6:	4653      	mov	r3, sl
 8011bb8:	a949      	add	r1, sp, #292	; 0x124
 8011bba:	f8cd 9000 	str.w	r9, [sp]
 8011bbe:	a819      	add	r0, sp, #100	; 0x64
 8011bc0:	f003 fe28 	bl	8015814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011bc4:	4622      	mov	r2, r4
 8011bc6:	4653      	mov	r3, sl
 8011bc8:	a949      	add	r1, sp, #292	; 0x124
 8011bca:	f8cd 8000 	str.w	r8, [sp]
 8011bce:	a829      	add	r0, sp, #164	; 0xa4
 8011bd0:	f003 fe20 	bl	8015814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011bd4:	4643      	mov	r3, r8
 8011bd6:	4622      	mov	r2, r4
 8011bd8:	a949      	add	r1, sp, #292	; 0x124
 8011bda:	f8cd 9000 	str.w	r9, [sp]
 8011bde:	a839      	add	r0, sp, #228	; 0xe4
 8011be0:	f003 fe18 	bl	8015814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011be4:	42af      	cmp	r7, r5
 8011be6:	af12      	add	r7, sp, #72	; 0x48
 8011be8:	bfb7      	itett	lt
 8011bea:	2300      	movlt	r3, #0
 8011bec:	2301      	movge	r3, #1
 8011bee:	ad29      	addlt	r5, sp, #164	; 0xa4
 8011bf0:	ac19      	addlt	r4, sp, #100	; 0x64
 8011bf2:	bfb1      	iteee	lt
 8011bf4:	930e      	strlt	r3, [sp, #56]	; 0x38
 8011bf6:	ad19      	addge	r5, sp, #100	; 0x64
 8011bf8:	930e      	strge	r3, [sp, #56]	; 0x38
 8011bfa:	ac29      	addge	r4, sp, #164	; 0xa4
 8011bfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011bfe:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011c02:	e887 0003 	stmia.w	r7, {r0, r1}
 8011c06:	b928      	cbnz	r0, 8011c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8011c08:	4b80      	ldr	r3, [pc, #512]	; (8011e0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8011c0a:	6818      	ldr	r0, [r3, #0]
 8011c0c:	6803      	ldr	r3, [r0, #0]
 8011c0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011c10:	4798      	blx	r3
 8011c12:	6038      	str	r0, [r7, #0]
 8011c14:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011c16:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8011c1a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8011c1e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8011c20:	930c      	str	r3, [sp, #48]	; 0x30
 8011c22:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011c24:	6963      	ldr	r3, [r4, #20]
 8011c26:	440b      	add	r3, r1
 8011c28:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8011c2c:	4408      	add	r0, r1
 8011c2e:	b200      	sxth	r0, r0
 8011c30:	4283      	cmp	r3, r0
 8011c32:	900d      	str	r0, [sp, #52]	; 0x34
 8011c34:	f280 80dd 	bge.w	8011df2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8011c38:	428b      	cmp	r3, r1
 8011c3a:	da08      	bge.n	8011c4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8011c3c:	2a00      	cmp	r2, #0
 8011c3e:	dd06      	ble.n	8011c4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8011c40:	1acb      	subs	r3, r1, r3
 8011c42:	429a      	cmp	r2, r3
 8011c44:	f2c0 80e4 	blt.w	8011e10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8011c48:	2b00      	cmp	r3, #0
 8011c4a:	f300 80e2 	bgt.w	8011e12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8011c4e:	6967      	ldr	r7, [r4, #20]
 8011c50:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8011c54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011c56:	443b      	add	r3, r7
 8011c58:	461f      	mov	r7, r3
 8011c5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011c5c:	1bdf      	subs	r7, r3, r7
 8011c5e:	4297      	cmp	r7, r2
 8011c60:	bfa8      	it	ge
 8011c62:	4617      	movge	r7, r2
 8011c64:	2f00      	cmp	r7, #0
 8011c66:	f340 8166 	ble.w	8011f36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8011c6a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011c6c:	6829      	ldr	r1, [r5, #0]
 8011c6e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011c72:	f9bb 3000 	ldrsh.w	r3, [fp]
 8011c76:	4411      	add	r1, r2
 8011c78:	6820      	ldr	r0, [r4, #0]
 8011c7a:	4299      	cmp	r1, r3
 8011c7c:	dd1a      	ble.n	8011cb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8011c7e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8011c82:	4402      	add	r2, r0
 8011c84:	440b      	add	r3, r1
 8011c86:	b21b      	sxth	r3, r3
 8011c88:	429a      	cmp	r2, r3
 8011c8a:	dc13      	bgt.n	8011cb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8011c8c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011c8e:	a912      	add	r1, sp, #72	; 0x48
 8011c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011c92:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011c94:	681b      	ldr	r3, [r3, #0]
 8011c96:	9206      	str	r2, [sp, #24]
 8011c98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011c9a:	9500      	str	r5, [sp, #0]
 8011c9c:	9205      	str	r2, [sp, #20]
 8011c9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011ca0:	e9cd b203 	strd	fp, r2, [sp, #12]
 8011ca4:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8011ca6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011caa:	aa49      	add	r2, sp, #292	; 0x124
 8011cac:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8011cb0:	4623      	mov	r3, r4
 8011cb2:	47c8      	blx	r9
 8011cb4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8011cb8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8011cbc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8011cc0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011cc4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8011cc8:	68a1      	ldr	r1, [r4, #8]
 8011cca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011cce:	ed94 6a08 	vldr	s12, [r4, #32]
 8011cd2:	edd4 6a07 	vldr	s13, [r4, #28]
 8011cd6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8011cda:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011cde:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8011ce2:	e9d4 2300 	ldrd	r2, r3, [r4]
 8011ce6:	edc4 6a07 	vstr	s13, [r4, #28]
 8011cea:	441a      	add	r2, r3
 8011cec:	6963      	ldr	r3, [r4, #20]
 8011cee:	3301      	adds	r3, #1
 8011cf0:	6022      	str	r2, [r4, #0]
 8011cf2:	6163      	str	r3, [r4, #20]
 8011cf4:	69a3      	ldr	r3, [r4, #24]
 8011cf6:	3b01      	subs	r3, #1
 8011cf8:	61a3      	str	r3, [r4, #24]
 8011cfa:	6923      	ldr	r3, [r4, #16]
 8011cfc:	440b      	add	r3, r1
 8011cfe:	68e1      	ldr	r1, [r4, #12]
 8011d00:	428b      	cmp	r3, r1
 8011d02:	6123      	str	r3, [r4, #16]
 8011d04:	db15      	blt.n	8011d32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8011d06:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8011d0a:	3201      	adds	r2, #1
 8011d0c:	1a5b      	subs	r3, r3, r1
 8011d0e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011d12:	6022      	str	r2, [r4, #0]
 8011d14:	6123      	str	r3, [r4, #16]
 8011d16:	edc4 6a07 	vstr	s13, [r4, #28]
 8011d1a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8011d1e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011d22:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8011d26:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8011d2a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011d2e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8011d32:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8011d36:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8011d3a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8011d3e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011d42:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8011d46:	68a9      	ldr	r1, [r5, #8]
 8011d48:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011d4c:	ed95 6a08 	vldr	s12, [r5, #32]
 8011d50:	edd5 6a07 	vldr	s13, [r5, #28]
 8011d54:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011d58:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011d5c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8011d60:	e9d5 2300 	ldrd	r2, r3, [r5]
 8011d64:	edc5 6a07 	vstr	s13, [r5, #28]
 8011d68:	441a      	add	r2, r3
 8011d6a:	696b      	ldr	r3, [r5, #20]
 8011d6c:	3301      	adds	r3, #1
 8011d6e:	602a      	str	r2, [r5, #0]
 8011d70:	616b      	str	r3, [r5, #20]
 8011d72:	69ab      	ldr	r3, [r5, #24]
 8011d74:	3b01      	subs	r3, #1
 8011d76:	61ab      	str	r3, [r5, #24]
 8011d78:	692b      	ldr	r3, [r5, #16]
 8011d7a:	440b      	add	r3, r1
 8011d7c:	68e9      	ldr	r1, [r5, #12]
 8011d7e:	428b      	cmp	r3, r1
 8011d80:	612b      	str	r3, [r5, #16]
 8011d82:	db15      	blt.n	8011db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8011d84:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8011d88:	3201      	adds	r2, #1
 8011d8a:	1a5b      	subs	r3, r3, r1
 8011d8c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011d90:	602a      	str	r2, [r5, #0]
 8011d92:	612b      	str	r3, [r5, #16]
 8011d94:	edc5 6a07 	vstr	s13, [r5, #28]
 8011d98:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8011d9c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011da0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011da4:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8011da8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011dac:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8011db0:	3f01      	subs	r7, #1
 8011db2:	e757      	b.n	8011c64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8011db4:	4299      	cmp	r1, r3
 8011db6:	dc13      	bgt.n	8011de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8011db8:	429a      	cmp	r2, r3
 8011dba:	da14      	bge.n	8011de6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8011dbc:	2502      	movs	r5, #2
 8011dbe:	2703      	movs	r7, #3
 8011dc0:	f04f 0800 	mov.w	r8, #0
 8011dc4:	46a9      	mov	r9, r5
 8011dc6:	f04f 0a01 	mov.w	sl, #1
 8011dca:	e6ef      	b.n	8011bac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011dcc:	2501      	movs	r5, #1
 8011dce:	2700      	movs	r7, #0
 8011dd0:	46a9      	mov	r9, r5
 8011dd2:	46b8      	mov	r8, r7
 8011dd4:	f04f 0a02 	mov.w	sl, #2
 8011dd8:	e6e8      	b.n	8011bac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011dda:	2501      	movs	r5, #1
 8011ddc:	2702      	movs	r7, #2
 8011dde:	e6e1      	b.n	8011ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8011de0:	2500      	movs	r5, #0
 8011de2:	2701      	movs	r7, #1
 8011de4:	e7f4      	b.n	8011dd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8011de6:	2702      	movs	r7, #2
 8011de8:	2503      	movs	r5, #3
 8011dea:	f04f 0900 	mov.w	r9, #0
 8011dee:	46b8      	mov	r8, r7
 8011df0:	e7e9      	b.n	8011dc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8011df2:	4613      	mov	r3, r2
 8011df4:	e728      	b.n	8011c48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8011df6:	bf00      	nop
 8011df8:	2400206c 	.word	0x2400206c
 8011dfc:	fffd8f01 	.word	0xfffd8f01
 8011e00:	00027100 	.word	0x00027100
 8011e04:	0004e1ff 	.word	0x0004e1ff
 8011e08:	0004e1fe 	.word	0x0004e1fe
 8011e0c:	24002074 	.word	0x24002074
 8011e10:	4613      	mov	r3, r2
 8011e12:	992b      	ldr	r1, [sp, #172]	; 0xac
 8011e14:	469e      	mov	lr, r3
 8011e16:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8011e18:	469c      	mov	ip, r3
 8011e1a:	9111      	str	r1, [sp, #68]	; 0x44
 8011e1c:	f04f 0900 	mov.w	r9, #0
 8011e20:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8011e24:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8011e28:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8011e2c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8011e30:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8011e34:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8011e38:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8011e3c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8011e40:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8011e44:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8011e48:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8011e4c:	f1bc 0f00 	cmp.w	ip, #0
 8011e50:	d147      	bne.n	8011ee2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8011e52:	eb03 0c07 	add.w	ip, r3, r7
 8011e56:	1ad7      	subs	r7, r2, r3
 8011e58:	f1b9 0f00 	cmp.w	r9, #0
 8011e5c:	d009      	beq.n	8011e72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8011e5e:	9029      	str	r0, [sp, #164]	; 0xa4
 8011e60:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8011e64:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8011e68:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8011e6c:	912d      	str	r1, [sp, #180]	; 0xb4
 8011e6e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8011e72:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8011e74:	f04f 0800 	mov.w	r8, #0
 8011e78:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8011e7c:	9111      	str	r1, [sp, #68]	; 0x44
 8011e7e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8011e82:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8011e86:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8011e8a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8011e8e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8011e92:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8011e96:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8011e9a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8011e9e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8011ea2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8011ea6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8011eaa:	f1be 0f00 	cmp.w	lr, #0
 8011eae:	d031      	beq.n	8011f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8011eb0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8011eb2:	4450      	add	r0, sl
 8011eb4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011eb8:	4431      	add	r1, r6
 8011eba:	ee37 7a04 	vadd.f32	s14, s14, s8
 8011ebe:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8011ec2:	4549      	cmp	r1, r9
 8011ec4:	db08      	blt.n	8011ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8011ec6:	ee77 7a85 	vadd.f32	s15, s15, s10
 8011eca:	3001      	adds	r0, #1
 8011ecc:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8011ed0:	eba1 0109 	sub.w	r1, r1, r9
 8011ed4:	ee37 7a06 	vadd.f32	s14, s14, s12
 8011ed8:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011edc:	f04f 0801 	mov.w	r8, #1
 8011ee0:	e7e3      	b.n	8011eaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8011ee2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8011ee4:	4450      	add	r0, sl
 8011ee6:	ee37 7a24 	vadd.f32	s14, s14, s9
 8011eea:	4431      	add	r1, r6
 8011eec:	ee77 7a84 	vadd.f32	s15, s15, s8
 8011ef0:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8011ef4:	4541      	cmp	r1, r8
 8011ef6:	db08      	blt.n	8011f0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8011ef8:	ee76 6a85 	vadd.f32	s13, s13, s10
 8011efc:	3001      	adds	r0, #1
 8011efe:	ee37 7a25 	vadd.f32	s14, s14, s11
 8011f02:	eba1 0108 	sub.w	r1, r1, r8
 8011f06:	ee77 7a86 	vadd.f32	s15, s15, s12
 8011f0a:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011f0e:	f04f 0901 	mov.w	r9, #1
 8011f12:	e79b      	b.n	8011e4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8011f14:	449c      	add	ip, r3
 8011f16:	1aff      	subs	r7, r7, r3
 8011f18:	f1b8 0f00 	cmp.w	r8, #0
 8011f1c:	d009      	beq.n	8011f32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8011f1e:	9019      	str	r0, [sp, #100]	; 0x64
 8011f20:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8011f24:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8011f28:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8011f2c:	911d      	str	r1, [sp, #116]	; 0x74
 8011f2e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8011f32:	1ad2      	subs	r2, r2, r3
 8011f34:	e68b      	b.n	8011c4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8011f36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011f38:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8011f3a:	2b00      	cmp	r3, #0
 8011f3c:	f000 80d1 	beq.w	80120e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8011f40:	ad19      	add	r5, sp, #100	; 0x64
 8011f42:	ac39      	add	r4, sp, #228	; 0xe4
 8011f44:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011f46:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8011f4a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8011f4e:	930c      	str	r3, [sp, #48]	; 0x30
 8011f50:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011f52:	6963      	ldr	r3, [r4, #20]
 8011f54:	440b      	add	r3, r1
 8011f56:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8011f5a:	4408      	add	r0, r1
 8011f5c:	b200      	sxth	r0, r0
 8011f5e:	4283      	cmp	r3, r0
 8011f60:	900d      	str	r0, [sp, #52]	; 0x34
 8011f62:	f280 80c1 	bge.w	80120e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8011f66:	428b      	cmp	r3, r1
 8011f68:	da08      	bge.n	8011f7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8011f6a:	2a00      	cmp	r2, #0
 8011f6c:	dd06      	ble.n	8011f7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8011f6e:	1acb      	subs	r3, r1, r3
 8011f70:	429a      	cmp	r2, r3
 8011f72:	f2c0 80bb 	blt.w	80120ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8011f76:	2b00      	cmp	r3, #0
 8011f78:	f300 80b9 	bgt.w	80120ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8011f7c:	6967      	ldr	r7, [r4, #20]
 8011f7e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8011f82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011f84:	443b      	add	r3, r7
 8011f86:	461f      	mov	r7, r3
 8011f88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011f8a:	1bdf      	subs	r7, r3, r7
 8011f8c:	4297      	cmp	r7, r2
 8011f8e:	bfa8      	it	ge
 8011f90:	4617      	movge	r7, r2
 8011f92:	2f00      	cmp	r7, #0
 8011f94:	f340 813c 	ble.w	8012210 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8011f98:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011f9a:	6829      	ldr	r1, [r5, #0]
 8011f9c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011fa0:	f9bb 3000 	ldrsh.w	r3, [fp]
 8011fa4:	4411      	add	r1, r2
 8011fa6:	6820      	ldr	r0, [r4, #0]
 8011fa8:	4299      	cmp	r1, r3
 8011faa:	dd1a      	ble.n	8011fe2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011fac:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8011fb0:	4402      	add	r2, r0
 8011fb2:	440b      	add	r3, r1
 8011fb4:	b21b      	sxth	r3, r3
 8011fb6:	429a      	cmp	r2, r3
 8011fb8:	dc13      	bgt.n	8011fe2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011fba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011fbc:	a912      	add	r1, sp, #72	; 0x48
 8011fbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011fc0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011fc2:	681b      	ldr	r3, [r3, #0]
 8011fc4:	9206      	str	r2, [sp, #24]
 8011fc6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011fc8:	9500      	str	r5, [sp, #0]
 8011fca:	9205      	str	r2, [sp, #20]
 8011fcc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011fce:	e9cd b203 	strd	fp, r2, [sp, #12]
 8011fd2:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8011fd4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011fd8:	aa49      	add	r2, sp, #292	; 0x124
 8011fda:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8011fde:	4623      	mov	r3, r4
 8011fe0:	47c8      	blx	r9
 8011fe2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8011fe6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8011fea:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8011fee:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011ff2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8011ff6:	68a1      	ldr	r1, [r4, #8]
 8011ff8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011ffc:	ed94 6a08 	vldr	s12, [r4, #32]
 8012000:	edd4 6a07 	vldr	s13, [r4, #28]
 8012004:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012008:	ee76 6a86 	vadd.f32	s13, s13, s12
 801200c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012010:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012014:	edc4 6a07 	vstr	s13, [r4, #28]
 8012018:	441a      	add	r2, r3
 801201a:	6963      	ldr	r3, [r4, #20]
 801201c:	3301      	adds	r3, #1
 801201e:	6022      	str	r2, [r4, #0]
 8012020:	6163      	str	r3, [r4, #20]
 8012022:	69a3      	ldr	r3, [r4, #24]
 8012024:	3b01      	subs	r3, #1
 8012026:	61a3      	str	r3, [r4, #24]
 8012028:	6923      	ldr	r3, [r4, #16]
 801202a:	440b      	add	r3, r1
 801202c:	68e1      	ldr	r1, [r4, #12]
 801202e:	428b      	cmp	r3, r1
 8012030:	6123      	str	r3, [r4, #16]
 8012032:	db15      	blt.n	8012060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8012034:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8012038:	3201      	adds	r2, #1
 801203a:	1a5b      	subs	r3, r3, r1
 801203c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012040:	6022      	str	r2, [r4, #0]
 8012042:	6123      	str	r3, [r4, #16]
 8012044:	edc4 6a07 	vstr	s13, [r4, #28]
 8012048:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801204c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012050:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012054:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8012058:	ee77 7a27 	vadd.f32	s15, s14, s15
 801205c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012060:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8012064:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8012068:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801206c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012070:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8012074:	68a9      	ldr	r1, [r5, #8]
 8012076:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801207a:	ed95 6a08 	vldr	s12, [r5, #32]
 801207e:	edd5 6a07 	vldr	s13, [r5, #28]
 8012082:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012086:	ee76 6a86 	vadd.f32	s13, s13, s12
 801208a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801208e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012092:	edc5 6a07 	vstr	s13, [r5, #28]
 8012096:	441a      	add	r2, r3
 8012098:	696b      	ldr	r3, [r5, #20]
 801209a:	3301      	adds	r3, #1
 801209c:	602a      	str	r2, [r5, #0]
 801209e:	616b      	str	r3, [r5, #20]
 80120a0:	69ab      	ldr	r3, [r5, #24]
 80120a2:	3b01      	subs	r3, #1
 80120a4:	61ab      	str	r3, [r5, #24]
 80120a6:	692b      	ldr	r3, [r5, #16]
 80120a8:	440b      	add	r3, r1
 80120aa:	68e9      	ldr	r1, [r5, #12]
 80120ac:	428b      	cmp	r3, r1
 80120ae:	612b      	str	r3, [r5, #16]
 80120b0:	db15      	blt.n	80120de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80120b2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80120b6:	3201      	adds	r2, #1
 80120b8:	1a5b      	subs	r3, r3, r1
 80120ba:	ee76 6a26 	vadd.f32	s13, s12, s13
 80120be:	602a      	str	r2, [r5, #0]
 80120c0:	612b      	str	r3, [r5, #16]
 80120c2:	edc5 6a07 	vstr	s13, [r5, #28]
 80120c6:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80120ca:	ee36 7a87 	vadd.f32	s14, s13, s14
 80120ce:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80120d2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80120d6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80120da:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80120de:	3f01      	subs	r7, #1
 80120e0:	e757      	b.n	8011f92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80120e2:	ad39      	add	r5, sp, #228	; 0xe4
 80120e4:	ac19      	add	r4, sp, #100	; 0x64
 80120e6:	e72d      	b.n	8011f44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80120e8:	4613      	mov	r3, r2
 80120ea:	e744      	b.n	8011f76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80120ec:	4613      	mov	r3, r2
 80120ee:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80120f0:	469e      	mov	lr, r3
 80120f2:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80120f6:	461f      	mov	r7, r3
 80120f8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80120fc:	f04f 0900 	mov.w	r9, #0
 8012100:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8012104:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8012108:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 801210c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8012110:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8012114:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8012116:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801211a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801211e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8012122:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8012126:	960e      	str	r6, [sp, #56]	; 0x38
 8012128:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801212c:	2f00      	cmp	r7, #0
 801212e:	d146      	bne.n	80121be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8012130:	449c      	add	ip, r3
 8012132:	1ad7      	subs	r7, r2, r3
 8012134:	f1b9 0f00 	cmp.w	r9, #0
 8012138:	d009      	beq.n	801214e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801213a:	9039      	str	r0, [sp, #228]	; 0xe4
 801213c:	913d      	str	r1, [sp, #244]	; 0xf4
 801213e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8012142:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8012146:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801214a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801214e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8012150:	f04f 0800 	mov.w	r8, #0
 8012154:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8012158:	910e      	str	r1, [sp, #56]	; 0x38
 801215a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801215e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012162:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8012166:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801216a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801216e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012172:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8012176:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801217a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801217e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012182:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8012186:	f1be 0f00 	cmp.w	lr, #0
 801218a:	d030      	beq.n	80121ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801218c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801218e:	4450      	add	r0, sl
 8012190:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012194:	4431      	add	r1, r6
 8012196:	ee37 7a04 	vadd.f32	s14, s14, s8
 801219a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801219e:	4549      	cmp	r1, r9
 80121a0:	db08      	blt.n	80121b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80121a2:	ee77 7a85 	vadd.f32	s15, s15, s10
 80121a6:	3001      	adds	r0, #1
 80121a8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80121ac:	eba1 0109 	sub.w	r1, r1, r9
 80121b0:	ee37 7a06 	vadd.f32	s14, s14, s12
 80121b4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80121b8:	f04f 0801 	mov.w	r8, #1
 80121bc:	e7e3      	b.n	8012186 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80121be:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80121c0:	4450      	add	r0, sl
 80121c2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80121c6:	4431      	add	r1, r6
 80121c8:	ee77 7a84 	vadd.f32	s15, s15, s8
 80121cc:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80121d0:	4541      	cmp	r1, r8
 80121d2:	db08      	blt.n	80121e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80121d4:	ee76 6a85 	vadd.f32	s13, s13, s10
 80121d8:	3001      	adds	r0, #1
 80121da:	ee37 7a25 	vadd.f32	s14, s14, s11
 80121de:	eba1 0108 	sub.w	r1, r1, r8
 80121e2:	ee77 7a86 	vadd.f32	s15, s15, s12
 80121e6:	3f01      	subs	r7, #1
 80121e8:	f04f 0901 	mov.w	r9, #1
 80121ec:	e79e      	b.n	801212c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80121ee:	449c      	add	ip, r3
 80121f0:	1aff      	subs	r7, r7, r3
 80121f2:	f1b8 0f00 	cmp.w	r8, #0
 80121f6:	d009      	beq.n	801220c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80121f8:	9019      	str	r0, [sp, #100]	; 0x64
 80121fa:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80121fe:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8012202:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012206:	911d      	str	r1, [sp, #116]	; 0x74
 8012208:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801220c:	1ad2      	subs	r2, r2, r3
 801220e:	e6b5      	b.n	8011f7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012210:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012212:	681b      	ldr	r3, [r3, #0]
 8012214:	b923      	cbnz	r3, 8012220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012216:	4b04      	ldr	r3, [pc, #16]	; (8012228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8012218:	6818      	ldr	r0, [r3, #0]
 801221a:	6803      	ldr	r3, [r0, #0]
 801221c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801221e:	4798      	blx	r3
 8012220:	b05b      	add	sp, #364	; 0x16c
 8012222:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012226:	bf00      	nop
 8012228:	24002074 	.word	0x24002074

0801222c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 801222c:	b570      	push	{r4, r5, r6, lr}
 801222e:	4604      	mov	r4, r0
 8012230:	2500      	movs	r5, #0
 8012232:	9805      	ldr	r0, [sp, #20]
 8012234:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8012238:	6061      	str	r1, [r4, #4]
 801223a:	8263      	strh	r3, [r4, #18]
 801223c:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8012240:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012244:	8025      	strh	r5, [r4, #0]
 8012246:	7221      	strb	r1, [r4, #8]
 8012248:	7266      	strb	r6, [r4, #9]
 801224a:	60e0      	str	r0, [r4, #12]
 801224c:	8222      	strh	r2, [r4, #16]
 801224e:	82a3      	strh	r3, [r4, #20]
 8012250:	82e5      	strh	r5, [r4, #22]
 8012252:	8325      	strh	r5, [r4, #24]
 8012254:	8365      	strh	r5, [r4, #26]
 8012256:	83a5      	strh	r5, [r4, #28]
 8012258:	83e5      	strh	r5, [r4, #30]
 801225a:	8425      	strh	r5, [r4, #32]
 801225c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8012260:	b32e      	cbz	r6, 80122ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8012262:	6803      	ldr	r3, [r0, #0]
 8012264:	695b      	ldr	r3, [r3, #20]
 8012266:	4798      	blx	r3
 8012268:	4606      	mov	r6, r0
 801226a:	b300      	cbz	r0, 80122ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801226c:	68e0      	ldr	r0, [r4, #12]
 801226e:	4631      	mov	r1, r6
 8012270:	6803      	ldr	r3, [r0, #0]
 8012272:	68db      	ldr	r3, [r3, #12]
 8012274:	4798      	blx	r3
 8012276:	4605      	mov	r5, r0
 8012278:	b1c8      	cbz	r0, 80122ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801227a:	7b43      	ldrb	r3, [r0, #13]
 801227c:	7a82      	ldrb	r2, [r0, #10]
 801227e:	005b      	lsls	r3, r3, #1
 8012280:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012284:	4313      	orrs	r3, r2
 8012286:	8423      	strh	r3, [r4, #32]
 8012288:	7a63      	ldrb	r3, [r4, #9]
 801228a:	2b06      	cmp	r3, #6
 801228c:	d10f      	bne.n	80122ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801228e:	68e0      	ldr	r0, [r4, #12]
 8012290:	462a      	mov	r2, r5
 8012292:	4631      	mov	r1, r6
 8012294:	6803      	ldr	r3, [r0, #0]
 8012296:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012298:	4798      	blx	r3
 801229a:	7b6b      	ldrb	r3, [r5, #13]
 801229c:	005b      	lsls	r3, r3, #1
 801229e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80122a2:	7aab      	ldrb	r3, [r5, #10]
 80122a4:	4313      	orrs	r3, r2
 80122a6:	4418      	add	r0, r3
 80122a8:	8c23      	ldrh	r3, [r4, #32]
 80122aa:	4418      	add	r0, r3
 80122ac:	8420      	strh	r0, [r4, #32]
 80122ae:	4620      	mov	r0, r4
 80122b0:	bd70      	pop	{r4, r5, r6, pc}

080122b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80122b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122b6:	2400      	movs	r4, #0
 80122b8:	b085      	sub	sp, #20
 80122ba:	4681      	mov	r9, r0
 80122bc:	4688      	mov	r8, r1
 80122be:	4692      	mov	sl, r2
 80122c0:	469b      	mov	fp, r3
 80122c2:	4627      	mov	r7, r4
 80122c4:	4625      	mov	r5, r4
 80122c6:	4626      	mov	r6, r4
 80122c8:	4554      	cmp	r4, sl
 80122ca:	da2a      	bge.n	8012322 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80122cc:	2300      	movs	r3, #0
 80122ce:	9303      	str	r3, [sp, #12]
 80122d0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80122d4:	429d      	cmp	r5, r3
 80122d6:	d004      	beq.n	80122e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80122d8:	f242 030b 	movw	r3, #8203	; 0x200b
 80122dc:	429d      	cmp	r5, r3
 80122de:	bf18      	it	ne
 80122e0:	462f      	movne	r7, r5
 80122e2:	ab03      	add	r3, sp, #12
 80122e4:	4642      	mov	r2, r8
 80122e6:	4659      	mov	r1, fp
 80122e8:	4648      	mov	r0, r9
 80122ea:	f002 ff79 	bl	80151e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80122ee:	4605      	mov	r5, r0
 80122f0:	b1b8      	cbz	r0, 8012322 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80122f2:	280a      	cmp	r0, #10
 80122f4:	d015      	beq.n	8012322 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80122f6:	9a03      	ldr	r2, [sp, #12]
 80122f8:	b18a      	cbz	r2, 801231e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80122fa:	7b50      	ldrb	r0, [r2, #13]
 80122fc:	4639      	mov	r1, r7
 80122fe:	7a93      	ldrb	r3, [r2, #10]
 8012300:	0040      	lsls	r0, r0, #1
 8012302:	8895      	ldrh	r5, [r2, #4]
 8012304:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012308:	4303      	orrs	r3, r0
 801230a:	4640      	mov	r0, r8
 801230c:	9301      	str	r3, [sp, #4]
 801230e:	f8d8 3000 	ldr.w	r3, [r8]
 8012312:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012314:	4798      	blx	r3
 8012316:	9b01      	ldr	r3, [sp, #4]
 8012318:	4418      	add	r0, r3
 801231a:	4406      	add	r6, r0
 801231c:	b2b6      	uxth	r6, r6
 801231e:	3401      	adds	r4, #1
 8012320:	e7d2      	b.n	80122c8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8012322:	4630      	mov	r0, r6
 8012324:	b005      	add	sp, #20
 8012326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801232a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801232a:	2a02      	cmp	r2, #2
 801232c:	b530      	push	{r4, r5, lr}
 801232e:	d011      	beq.n	8012354 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8012330:	2a03      	cmp	r2, #3
 8012332:	d01c      	beq.n	801236e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8012334:	2a01      	cmp	r2, #1
 8012336:	d10c      	bne.n	8012352 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8012338:	888b      	ldrh	r3, [r1, #4]
 801233a:	8801      	ldrh	r1, [r0, #0]
 801233c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8012340:	1a5b      	subs	r3, r3, r1
 8012342:	8844      	ldrh	r4, [r0, #2]
 8012344:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012348:	1a9b      	subs	r3, r3, r2
 801234a:	8004      	strh	r4, [r0, #0]
 801234c:	8081      	strh	r1, [r0, #4]
 801234e:	8043      	strh	r3, [r0, #2]
 8012350:	80c2      	strh	r2, [r0, #6]
 8012352:	bd30      	pop	{r4, r5, pc}
 8012354:	88cb      	ldrh	r3, [r1, #6]
 8012356:	8842      	ldrh	r2, [r0, #2]
 8012358:	1a9b      	subs	r3, r3, r2
 801235a:	88c2      	ldrh	r2, [r0, #6]
 801235c:	1a9b      	subs	r3, r3, r2
 801235e:	888a      	ldrh	r2, [r1, #4]
 8012360:	8801      	ldrh	r1, [r0, #0]
 8012362:	8043      	strh	r3, [r0, #2]
 8012364:	1a52      	subs	r2, r2, r1
 8012366:	8881      	ldrh	r1, [r0, #4]
 8012368:	1a52      	subs	r2, r2, r1
 801236a:	8002      	strh	r2, [r0, #0]
 801236c:	e7f1      	b.n	8012352 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801236e:	88cb      	ldrh	r3, [r1, #6]
 8012370:	8841      	ldrh	r1, [r0, #2]
 8012372:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8012376:	1a5b      	subs	r3, r3, r1
 8012378:	f9b0 5000 	ldrsh.w	r5, [r0]
 801237c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8012380:	1a9b      	subs	r3, r3, r2
 8012382:	8045      	strh	r5, [r0, #2]
 8012384:	8082      	strh	r2, [r0, #4]
 8012386:	8003      	strh	r3, [r0, #0]
 8012388:	80c4      	strh	r4, [r0, #6]
 801238a:	e7e2      	b.n	8012352 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801238c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801238c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012390:	b09f      	sub	sp, #124	; 0x7c
 8012392:	9116      	str	r1, [sp, #88]	; 0x58
 8012394:	9317      	str	r3, [sp, #92]	; 0x5c
 8012396:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8012398:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801239a:	8809      	ldrh	r1, [r1, #0]
 801239c:	889b      	ldrh	r3, [r3, #4]
 801239e:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80123a2:	440b      	add	r3, r1
 80123a4:	9212      	str	r2, [sp, #72]	; 0x48
 80123a6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80123aa:	b21b      	sxth	r3, r3
 80123ac:	9011      	str	r0, [sp, #68]	; 0x44
 80123ae:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80123b2:	9310      	str	r3, [sp, #64]	; 0x40
 80123b4:	f8d8 3000 	ldr.w	r3, [r8]
 80123b8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80123bc:	7b19      	ldrb	r1, [r3, #12]
 80123be:	7adb      	ldrb	r3, [r3, #11]
 80123c0:	9114      	str	r1, [sp, #80]	; 0x50
 80123c2:	9315      	str	r3, [sp, #84]	; 0x54
 80123c4:	2a00      	cmp	r2, #0
 80123c6:	d06a      	beq.n	801249e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80123c8:	f898 3010 	ldrb.w	r3, [r8, #16]
 80123cc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80123ce:	2b06      	cmp	r3, #6
 80123d0:	bf14      	ite	ne
 80123d2:	2301      	movne	r3, #1
 80123d4:	2302      	moveq	r3, #2
 80123d6:	4413      	add	r3, r2
 80123d8:	f04f 0900 	mov.w	r9, #0
 80123dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80123de:	464c      	mov	r4, r9
 80123e0:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80123e4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80123e8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80123ec:	4293      	cmp	r3, r2
 80123ee:	f280 808f 	bge.w	8012510 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80123f2:	2300      	movs	r3, #0
 80123f4:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80123f8:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80123fc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012400:	429c      	cmp	r4, r3
 8012402:	d006      	beq.n	8012412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8012404:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012406:	f242 020b 	movw	r2, #8203	; 0x200b
 801240a:	4294      	cmp	r4, r2
 801240c:	bf18      	it	ne
 801240e:	4623      	movne	r3, r4
 8012410:	930d      	str	r3, [sp, #52]	; 0x34
 8012412:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012414:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8012416:	f8d8 2000 	ldr.w	r2, [r8]
 801241a:	428b      	cmp	r3, r1
 801241c:	db41      	blt.n	80124a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801241e:	6813      	ldr	r3, [r2, #0]
 8012420:	4610      	mov	r0, r2
 8012422:	695b      	ldr	r3, [r3, #20]
 8012424:	4798      	blx	r3
 8012426:	4604      	mov	r4, r0
 8012428:	f8d8 0000 	ldr.w	r0, [r8]
 801242c:	aa1d      	add	r2, sp, #116	; 0x74
 801242e:	4621      	mov	r1, r4
 8012430:	6803      	ldr	r3, [r0, #0]
 8012432:	689d      	ldr	r5, [r3, #8]
 8012434:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8012438:	47a8      	blx	r5
 801243a:	901c      	str	r0, [sp, #112]	; 0x70
 801243c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012440:	429c      	cmp	r4, r3
 8012442:	f000 80ec 	beq.w	801261e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012446:	f242 030b 	movw	r3, #8203	; 0x200b
 801244a:	429c      	cmp	r4, r3
 801244c:	f000 80e7 	beq.w	801261e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012450:	2c00      	cmp	r4, #0
 8012452:	f000 80f9 	beq.w	8012648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8012456:	2c0a      	cmp	r4, #10
 8012458:	d060      	beq.n	801251c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801245a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801245c:	b36a      	cbz	r2, 80124ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801245e:	8894      	ldrh	r4, [r2, #4]
 8012460:	f1bb 0f00 	cmp.w	fp, #0
 8012464:	d03b      	beq.n	80124de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8012466:	f892 900d 	ldrb.w	r9, [r2, #13]
 801246a:	f1bb 0f01 	cmp.w	fp, #1
 801246e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8012472:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8012476:	f892 900a 	ldrb.w	r9, [r2, #10]
 801247a:	ea49 0903 	orr.w	r9, r9, r3
 801247e:	d134      	bne.n	80124ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8012480:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012482:	eba6 0609 	sub.w	r6, r6, r9
 8012486:	2b00      	cmp	r3, #0
 8012488:	d14f      	bne.n	801252a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801248a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801248c:	eb09 0306 	add.w	r3, r9, r6
 8012490:	4413      	add	r3, r2
 8012492:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8012494:	f9b2 2000 	ldrsh.w	r2, [r2]
 8012498:	4293      	cmp	r3, r2
 801249a:	da51      	bge.n	8012540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801249c:	e038      	b.n	8012510 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801249e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80124a0:	e79a      	b.n	80123d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80124a2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80124a6:	4659      	mov	r1, fp
 80124a8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80124aa:	9301      	str	r3, [sp, #4]
 80124ac:	ab1d      	add	r3, sp, #116	; 0x74
 80124ae:	9300      	str	r3, [sp, #0]
 80124b0:	ab1c      	add	r3, sp, #112	; 0x70
 80124b2:	f002 fede 	bl	8015272 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80124b6:	4604      	mov	r4, r0
 80124b8:	e7c0      	b.n	801243c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80124ba:	f8d8 0000 	ldr.w	r0, [r8]
 80124be:	6803      	ldr	r3, [r0, #0]
 80124c0:	691b      	ldr	r3, [r3, #16]
 80124c2:	4798      	blx	r3
 80124c4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80124c8:	4298      	cmp	r0, r3
 80124ca:	f000 80a8 	beq.w	801261e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80124ce:	f242 030b 	movw	r3, #8203	; 0x200b
 80124d2:	4298      	cmp	r0, r3
 80124d4:	f000 80a3 	beq.w	801261e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80124d8:	f1bb 0f00 	cmp.w	fp, #0
 80124dc:	d100      	bne.n	80124e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80124de:	444e      	add	r6, r9
 80124e0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80124e2:	2a00      	cmp	r2, #0
 80124e4:	d1bf      	bne.n	8012466 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80124e6:	4691      	mov	r9, r2
 80124e8:	e099      	b.n	801261e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80124ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80124ec:	2b00      	cmp	r3, #0
 80124ee:	f000 80ad 	beq.w	801264c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
 80124f2:	f1bb 0f00 	cmp.w	fp, #0
 80124f6:	d118      	bne.n	801252a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80124f8:	f8d8 0000 	ldr.w	r0, [r8]
 80124fc:	990d      	ldr	r1, [sp, #52]	; 0x34
 80124fe:	6803      	ldr	r3, [r0, #0]
 8012500:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012502:	4798      	blx	r3
 8012504:	4406      	add	r6, r0
 8012506:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012508:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801250a:	1af3      	subs	r3, r6, r3
 801250c:	4293      	cmp	r3, r2
 801250e:	dd17      	ble.n	8012540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8012510:	2c00      	cmp	r4, #0
 8012512:	f000 8099 	beq.w	8012648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8012516:	2c0a      	cmp	r4, #10
 8012518:	f040 8087 	bne.w	801262a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801251c:	240a      	movs	r4, #10
 801251e:	fab4 f084 	clz	r0, r4
 8012522:	0940      	lsrs	r0, r0, #5
 8012524:	b01f      	add	sp, #124	; 0x7c
 8012526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801252a:	f8d8 0000 	ldr.w	r0, [r8]
 801252e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012530:	6803      	ldr	r3, [r0, #0]
 8012532:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012534:	4798      	blx	r3
 8012536:	f1bb 0f01 	cmp.w	fp, #1
 801253a:	eba6 0600 	sub.w	r6, r6, r0
 801253e:	d0a4      	beq.n	801248a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8012540:	981c      	ldr	r0, [sp, #112]	; 0x70
 8012542:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012544:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8012548:	f9b3 7000 	ldrsh.w	r7, [r3]
 801254c:	7b43      	ldrb	r3, [r0, #13]
 801254e:	4431      	add	r1, r6
 8012550:	015b      	lsls	r3, r3, #5
 8012552:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012556:	7983      	ldrb	r3, [r0, #6]
 8012558:	4313      	orrs	r3, r2
 801255a:	440b      	add	r3, r1
 801255c:	42bb      	cmp	r3, r7
 801255e:	db5e      	blt.n	801261e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012560:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012562:	4299      	cmp	r1, r3
 8012564:	da5b      	bge.n	801261e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 8012566:	f8d8 0000 	ldr.w	r0, [r8]
 801256a:	42b7      	cmp	r7, r6
 801256c:	6803      	ldr	r3, [r0, #0]
 801256e:	bfcc      	ite	gt
 8012570:	1bbf      	subgt	r7, r7, r6
 8012572:	2700      	movle	r7, #0
 8012574:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012576:	bfc8      	it	gt
 8012578:	b2bf      	uxthgt	r7, r7
 801257a:	4798      	blx	r3
 801257c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801257e:	7b5a      	ldrb	r2, [r3, #13]
 8012580:	00d1      	lsls	r1, r2, #3
 8012582:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8012586:	7a19      	ldrb	r1, [r3, #8]
 8012588:	4329      	orrs	r1, r5
 801258a:	0655      	lsls	r5, r2, #25
 801258c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 801258e:	bf48      	it	mi
 8012590:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8012594:	4405      	add	r5, r0
 8012596:	bf48      	it	mi
 8012598:	b209      	sxthmi	r1, r1
 801259a:	1a6d      	subs	r5, r5, r1
 801259c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801259e:	b2ad      	uxth	r5, r5
 80125a0:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80125a4:	fa0f fa85 	sxth.w	sl, r5
 80125a8:	4551      	cmp	r1, sl
 80125aa:	dd3c      	ble.n	8012626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 80125ac:	0112      	lsls	r2, r2, #4
 80125ae:	79d8      	ldrb	r0, [r3, #7]
 80125b0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80125b4:	4302      	orrs	r2, r0
 80125b6:	4492      	add	sl, r2
 80125b8:	4551      	cmp	r1, sl
 80125ba:	dc30      	bgt.n	801261e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 80125bc:	1b4d      	subs	r5, r1, r5
 80125be:	468a      	mov	sl, r1
 80125c0:	b22d      	sxth	r5, r5
 80125c2:	9319      	str	r3, [sp, #100]	; 0x64
 80125c4:	b2ad      	uxth	r5, r5
 80125c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80125c8:	f8d8 0000 	ldr.w	r0, [r8]
 80125cc:	681a      	ldr	r2, [r3, #0]
 80125ce:	6801      	ldr	r1, [r0, #0]
 80125d0:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80125d2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80125d4:	9313      	str	r3, [sp, #76]	; 0x4c
 80125d6:	9218      	str	r2, [sp, #96]	; 0x60
 80125d8:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80125da:	4788      	blx	r1
 80125dc:	f898 1006 	ldrb.w	r1, [r8, #6]
 80125e0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80125e2:	910b      	str	r1, [sp, #44]	; 0x2c
 80125e4:	f898 100e 	ldrb.w	r1, [r8, #14]
 80125e8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80125ea:	910a      	str	r1, [sp, #40]	; 0x28
 80125ec:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80125f0:	9109      	str	r1, [sp, #36]	; 0x24
 80125f2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80125f6:	9305      	str	r3, [sp, #20]
 80125f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80125fa:	9206      	str	r2, [sp, #24]
 80125fc:	9304      	str	r3, [sp, #16]
 80125fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012600:	f8cd a004 	str.w	sl, [sp, #4]
 8012604:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8012608:	4437      	add	r7, r6
 801260a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801260c:	b23f      	sxth	r7, r7
 801260e:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8012612:	9700      	str	r7, [sp, #0]
 8012614:	9916      	ldr	r1, [sp, #88]	; 0x58
 8012616:	681a      	ldr	r2, [r3, #0]
 8012618:	9811      	ldr	r0, [sp, #68]	; 0x44
 801261a:	685b      	ldr	r3, [r3, #4]
 801261c:	47a8      	blx	r5
 801261e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012620:	3301      	adds	r3, #1
 8012622:	930e      	str	r3, [sp, #56]	; 0x38
 8012624:	e6e0      	b.n	80123e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8012626:	2500      	movs	r5, #0
 8012628:	e7cb      	b.n	80125c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 801262a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801262c:	3501      	adds	r5, #1
 801262e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012630:	429d      	cmp	r5, r3
 8012632:	f6bf af74 	bge.w	801251e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8012636:	4659      	mov	r1, fp
 8012638:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801263a:	f7fa ff51 	bl	800d4e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801263e:	4604      	mov	r4, r0
 8012640:	b110      	cbz	r0, 8012648 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 8012642:	280a      	cmp	r0, #10
 8012644:	d1f2      	bne.n	801262c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
 8012646:	e769      	b.n	801251c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8012648:	2400      	movs	r4, #0
 801264a:	e768      	b.n	801251e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801264c:	f1bb 0f00 	cmp.w	fp, #0
 8012650:	f43f af59 	beq.w	8012506 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8012654:	e774      	b.n	8012540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08012656 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8012656:	b530      	push	{r4, r5, lr}
 8012658:	8ac4      	ldrh	r4, [r0, #22]
 801265a:	8b45      	ldrh	r5, [r0, #26]
 801265c:	8343      	strh	r3, [r0, #26]
 801265e:	442c      	add	r4, r5
 8012660:	1ae4      	subs	r4, r4, r3
 8012662:	8b83      	ldrh	r3, [r0, #28]
 8012664:	82c4      	strh	r4, [r0, #22]
 8012666:	8b04      	ldrh	r4, [r0, #24]
 8012668:	4422      	add	r2, r4
 801266a:	440c      	add	r4, r1
 801266c:	1a59      	subs	r1, r3, r1
 801266e:	83c2      	strh	r2, [r0, #30]
 8012670:	8304      	strh	r4, [r0, #24]
 8012672:	8381      	strh	r1, [r0, #28]
 8012674:	bd30      	pop	{r4, r5, pc}

08012676 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8012676:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801267a:	4604      	mov	r4, r0
 801267c:	8a47      	ldrh	r7, [r0, #18]
 801267e:	68c0      	ldr	r0, [r0, #12]
 8012680:	b085      	sub	sp, #20
 8012682:	6803      	ldr	r3, [r0, #0]
 8012684:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012686:	4798      	blx	r3
 8012688:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801268c:	7a63      	ldrb	r3, [r4, #9]
 801268e:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8012692:	3b01      	subs	r3, #1
 8012694:	42b7      	cmp	r7, r6
 8012696:	bfac      	ite	ge
 8012698:	f04f 0900 	movge.w	r9, #0
 801269c:	f04f 0901 	movlt.w	r9, #1
 80126a0:	2b05      	cmp	r3, #5
 80126a2:	d804      	bhi.n	80126ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 80126a4:	e8df f003 	tbb	[pc, r3]
 80126a8:	470f0854 	.word	0x470f0854
 80126ac:	4c4c      	.short	0x4c4c
 80126ae:	2500      	movs	r5, #0
 80126b0:	46a9      	mov	r9, r5
 80126b2:	462e      	mov	r6, r5
 80126b4:	462f      	mov	r7, r5
 80126b6:	e00e      	b.n	80126d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80126b8:	42b7      	cmp	r7, r6
 80126ba:	f04f 0500 	mov.w	r5, #0
 80126be:	bfb4      	ite	lt
 80126c0:	2600      	movlt	r6, #0
 80126c2:	2601      	movge	r6, #1
 80126c4:	e7f6      	b.n	80126b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 80126c6:	42b7      	cmp	r7, r6
 80126c8:	464d      	mov	r5, r9
 80126ca:	f04f 0900 	mov.w	r9, #0
 80126ce:	bfb4      	ite	lt
 80126d0:	2600      	movlt	r6, #0
 80126d2:	2601      	movge	r6, #1
 80126d4:	464f      	mov	r7, r9
 80126d6:	f04f 0800 	mov.w	r8, #0
 80126da:	f8a4 8016 	strh.w	r8, [r4, #22]
 80126de:	f8a4 8018 	strh.w	r8, [r4, #24]
 80126e2:	f8cd 8004 	str.w	r8, [sp, #4]
 80126e6:	2300      	movs	r3, #0
 80126e8:	9303      	str	r3, [sp, #12]
 80126ea:	8823      	ldrh	r3, [r4, #0]
 80126ec:	2b20      	cmp	r3, #32
 80126ee:	d033      	beq.n	8012758 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 80126f0:	f242 010b 	movw	r1, #8203	; 0x200b
 80126f4:	1a5a      	subs	r2, r3, r1
 80126f6:	f1d2 0a00 	rsbs	sl, r2, #0
 80126fa:	eb4a 0a02 	adc.w	sl, sl, r2
 80126fe:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8012702:	4293      	cmp	r3, r2
 8012704:	d008      	beq.n	8012718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8012706:	428b      	cmp	r3, r1
 8012708:	9a01      	ldr	r2, [sp, #4]
 801270a:	bf0e      	itee	eq
 801270c:	f04f 0a01 	moveq.w	sl, #1
 8012710:	461a      	movne	r2, r3
 8012712:	f04f 0a00 	movne.w	sl, #0
 8012716:	9201      	str	r2, [sp, #4]
 8012718:	ab03      	add	r3, sp, #12
 801271a:	68e2      	ldr	r2, [r4, #12]
 801271c:	7a21      	ldrb	r1, [r4, #8]
 801271e:	6860      	ldr	r0, [r4, #4]
 8012720:	f002 fd5e 	bl	80151e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012724:	8020      	strh	r0, [r4, #0]
 8012726:	b9d8      	cbnz	r0, 8012760 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 8012728:	8ba2      	ldrh	r2, [r4, #28]
 801272a:	2300      	movs	r3, #0
 801272c:	4611      	mov	r1, r2
 801272e:	4620      	mov	r0, r4
 8012730:	f7ff ff91 	bl	8012656 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8012734:	e06e      	b.n	8012814 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8012736:	2500      	movs	r5, #0
 8012738:	2701      	movs	r7, #1
 801273a:	46a9      	mov	r9, r5
 801273c:	462e      	mov	r6, r5
 801273e:	e7ca      	b.n	80126d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8012740:	42b7      	cmp	r7, r6
 8012742:	f04f 0500 	mov.w	r5, #0
 8012746:	bfb4      	ite	lt
 8012748:	2700      	movlt	r7, #0
 801274a:	2701      	movge	r7, #1
 801274c:	462e      	mov	r6, r5
 801274e:	e7c2      	b.n	80126d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8012750:	2500      	movs	r5, #0
 8012752:	2601      	movs	r6, #1
 8012754:	46a9      	mov	r9, r5
 8012756:	e7ad      	b.n	80126b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8012758:	9301      	str	r3, [sp, #4]
 801275a:	f04f 0a01 	mov.w	sl, #1
 801275e:	e7db      	b.n	8012718 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8012760:	8b63      	ldrh	r3, [r4, #26]
 8012762:	280a      	cmp	r0, #10
 8012764:	f103 0301 	add.w	r3, r3, #1
 8012768:	8363      	strh	r3, [r4, #26]
 801276a:	d0dd      	beq.n	8012728 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 801276c:	9a03      	ldr	r2, [sp, #12]
 801276e:	bb62      	cbnz	r2, 80127ca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 8012770:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012774:	4298      	cmp	r0, r3
 8012776:	d003      	beq.n	8012780 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8012778:	f242 030b 	movw	r3, #8203	; 0x200b
 801277c:	4298      	cmp	r0, r3
 801277e:	d1b2      	bne.n	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012780:	8823      	ldrh	r3, [r4, #0]
 8012782:	8ba1      	ldrh	r1, [r4, #28]
 8012784:	2b20      	cmp	r3, #32
 8012786:	d003      	beq.n	8012790 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 8012788:	f242 000b 	movw	r0, #8203	; 0x200b
 801278c:	4283      	cmp	r3, r0
 801278e:	d131      	bne.n	80127f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 8012790:	f1ba 0f00 	cmp.w	sl, #0
 8012794:	bf0a      	itet	eq
 8012796:	4688      	moveq	r8, r1
 8012798:	4650      	movne	r0, sl
 801279a:	2001      	moveq	r0, #1
 801279c:	440a      	add	r2, r1
 801279e:	8b23      	ldrh	r3, [r4, #24]
 80127a0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80127a4:	b292      	uxth	r2, r2
 80127a6:	83a2      	strh	r2, [r4, #28]
 80127a8:	4413      	add	r3, r2
 80127aa:	f1b9 0f00 	cmp.w	r9, #0
 80127ae:	d102      	bne.n	80127b6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 80127b0:	2d00      	cmp	r5, #0
 80127b2:	d042      	beq.n	801283a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 80127b4:	b300      	cbz	r0, 80127f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 80127b6:	8c21      	ldrh	r1, [r4, #32]
 80127b8:	4419      	add	r1, r3
 80127ba:	458c      	cmp	ip, r1
 80127bc:	da37      	bge.n	801282e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 80127be:	8ae1      	ldrh	r1, [r4, #22]
 80127c0:	2900      	cmp	r1, #0
 80127c2:	d034      	beq.n	801282e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 80127c4:	4563      	cmp	r3, ip
 80127c6:	dd8e      	ble.n	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80127c8:	e01d      	b.n	8012806 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 80127ca:	8893      	ldrh	r3, [r2, #4]
 80127cc:	9901      	ldr	r1, [sp, #4]
 80127ce:	8023      	strh	r3, [r4, #0]
 80127d0:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80127d4:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80127d8:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80127dc:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80127e0:	ea4b 0b00 	orr.w	fp, fp, r0
 80127e4:	68e0      	ldr	r0, [r4, #12]
 80127e6:	6803      	ldr	r3, [r0, #0]
 80127e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80127ea:	4798      	blx	r3
 80127ec:	eb0b 0200 	add.w	r2, fp, r0
 80127f0:	b292      	uxth	r2, r2
 80127f2:	e7c5      	b.n	8012780 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 80127f4:	2000      	movs	r0, #0
 80127f6:	e7d1      	b.n	801279c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 80127f8:	4563      	cmp	r3, ip
 80127fa:	f77f af74 	ble.w	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80127fe:	8ae3      	ldrh	r3, [r4, #22]
 8012800:	2b00      	cmp	r3, #0
 8012802:	f43f af70 	beq.w	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012806:	2301      	movs	r3, #1
 8012808:	8c22      	ldrh	r2, [r4, #32]
 801280a:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 801280e:	8be3      	ldrh	r3, [r4, #30]
 8012810:	4413      	add	r3, r2
 8012812:	83e3      	strh	r3, [r4, #30]
 8012814:	68e0      	ldr	r0, [r4, #12]
 8012816:	6803      	ldr	r3, [r0, #0]
 8012818:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801281a:	4798      	blx	r3
 801281c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8012820:	4418      	add	r0, r3
 8012822:	8a63      	ldrh	r3, [r4, #18]
 8012824:	1a18      	subs	r0, r3, r0
 8012826:	8260      	strh	r0, [r4, #18]
 8012828:	b005      	add	sp, #20
 801282a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801282e:	2300      	movs	r3, #0
 8012830:	4611      	mov	r1, r2
 8012832:	4620      	mov	r0, r4
 8012834:	f7ff ff0f 	bl	8012656 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8012838:	e755      	b.n	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801283a:	4563      	cmp	r3, ip
 801283c:	dd14      	ble.n	8012868 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 801283e:	b117      	cbz	r7, 8012846 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 8012840:	2301      	movs	r3, #1
 8012842:	460a      	mov	r2, r1
 8012844:	e772      	b.n	801272c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 8012846:	2e00      	cmp	r6, #0
 8012848:	f43f af4d 	beq.w	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801284c:	2800      	cmp	r0, #0
 801284e:	f47f af4a 	bne.w	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012852:	f1ba 0f00 	cmp.w	sl, #0
 8012856:	d002      	beq.n	801285e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 8012858:	2301      	movs	r3, #1
 801285a:	4642      	mov	r2, r8
 801285c:	e767      	b.n	801272e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801285e:	8ae3      	ldrh	r3, [r4, #22]
 8012860:	2b00      	cmp	r3, #0
 8012862:	f43f af40 	beq.w	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012866:	e7d5      	b.n	8012814 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8012868:	2800      	cmp	r0, #0
 801286a:	f47f af3c 	bne.w	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801286e:	f1ba 0f00 	cmp.w	sl, #0
 8012872:	f43f af38 	beq.w	80126e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8012876:	2301      	movs	r3, #1
 8012878:	4642      	mov	r2, r8
 801287a:	e7da      	b.n	8012832 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

0801287c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801287c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801287e:	4605      	mov	r5, r0
 8012880:	b08f      	sub	sp, #60	; 0x3c
 8012882:	4617      	mov	r7, r2
 8012884:	461c      	mov	r4, r3
 8012886:	460e      	mov	r6, r1
 8012888:	b1d1      	cbz	r1, 80128c0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801288a:	681b      	ldr	r3, [r3, #0]
 801288c:	4620      	mov	r0, r4
 801288e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012890:	4798      	blx	r3
 8012892:	4240      	negs	r0, r0
 8012894:	9603      	str	r6, [sp, #12]
 8012896:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801289a:	b200      	sxth	r0, r0
 801289c:	9700      	str	r7, [sp, #0]
 801289e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80128a2:	4629      	mov	r1, r5
 80128a4:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80128a8:	2401      	movs	r4, #1
 80128aa:	a805      	add	r0, sp, #20
 80128ac:	f7ff fcbe 	bl	801222c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80128b0:	a805      	add	r0, sp, #20
 80128b2:	f7ff fee0 	bl	8012676 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80128b6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80128ba:	b163      	cbz	r3, 80128d6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80128bc:	3401      	adds	r4, #1
 80128be:	e7f7      	b.n	80128b0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80128c0:	2401      	movs	r4, #1
 80128c2:	f002 fd59 	bl	8015378 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80128c6:	280a      	cmp	r0, #10
 80128c8:	4628      	mov	r0, r5
 80128ca:	bf08      	it	eq
 80128cc:	3401      	addeq	r4, #1
 80128ce:	f002 fd53 	bl	8015378 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80128d2:	2800      	cmp	r0, #0
 80128d4:	d1f7      	bne.n	80128c6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80128d6:	b2a0      	uxth	r0, r4
 80128d8:	b00f      	add	sp, #60	; 0x3c
 80128da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080128dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80128dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128e0:	b0e3      	sub	sp, #396	; 0x18c
 80128e2:	461c      	mov	r4, r3
 80128e4:	4683      	mov	fp, r0
 80128e6:	4688      	mov	r8, r1
 80128e8:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80128ea:	2b00      	cmp	r3, #0
 80128ec:	f000 8112 	beq.w	8012b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80128f0:	6823      	ldr	r3, [r4, #0]
 80128f2:	2b00      	cmp	r3, #0
 80128f4:	f000 810e 	beq.w	8012b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80128f8:	7ba3      	ldrb	r3, [r4, #14]
 80128fa:	2b00      	cmp	r3, #0
 80128fc:	f000 810a 	beq.w	8012b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012900:	ad0a      	add	r5, sp, #40	; 0x28
 8012902:	6810      	ldr	r0, [r2, #0]
 8012904:	6851      	ldr	r1, [r2, #4]
 8012906:	462b      	mov	r3, r5
 8012908:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 801290c:	c303      	stmia	r3!, {r0, r1}
 801290e:	2100      	movs	r1, #0
 8012910:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8012914:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012918:	4628      	mov	r0, r5
 801291a:	910c      	str	r1, [sp, #48]	; 0x30
 801291c:	a90c      	add	r1, sp, #48	; 0x30
 801291e:	79a2      	ldrb	r2, [r4, #6]
 8012920:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012924:	f7ff fd01 	bl	801232a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8012928:	a90c      	add	r1, sp, #48	; 0x30
 801292a:	79a2      	ldrb	r2, [r4, #6]
 801292c:	4608      	mov	r0, r1
 801292e:	f7ff fcfc 	bl	801232a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8012932:	a817      	add	r0, sp, #92	; 0x5c
 8012934:	f002 f8f4 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 8012938:	6820      	ldr	r0, [r4, #0]
 801293a:	6803      	ldr	r3, [r0, #0]
 801293c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801293e:	4798      	blx	r3
 8012940:	4606      	mov	r6, r0
 8012942:	6820      	ldr	r0, [r4, #0]
 8012944:	6803      	ldr	r3, [r0, #0]
 8012946:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012948:	4798      	blx	r3
 801294a:	4633      	mov	r3, r6
 801294c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801294e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8012950:	9000      	str	r0, [sp, #0]
 8012952:	a817      	add	r0, sp, #92	; 0x5c
 8012954:	f002 f93f 	bl	8014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012958:	6820      	ldr	r0, [r4, #0]
 801295a:	f894 a004 	ldrb.w	sl, [r4, #4]
 801295e:	6803      	ldr	r3, [r0, #0]
 8012960:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012962:	4798      	blx	r3
 8012964:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8012968:	6823      	ldr	r3, [r4, #0]
 801296a:	4607      	mov	r7, r0
 801296c:	4406      	add	r6, r0
 801296e:	a830      	add	r0, sp, #192	; 0xc0
 8012970:	f893 9009 	ldrb.w	r9, [r3, #9]
 8012974:	f002 f8d4 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 8012978:	7c23      	ldrb	r3, [r4, #16]
 801297a:	b17b      	cbz	r3, 801299c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801297c:	6820      	ldr	r0, [r4, #0]
 801297e:	6803      	ldr	r3, [r0, #0]
 8012980:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012982:	4798      	blx	r3
 8012984:	9009      	str	r0, [sp, #36]	; 0x24
 8012986:	6820      	ldr	r0, [r4, #0]
 8012988:	6802      	ldr	r2, [r0, #0]
 801298a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 801298c:	4790      	blx	r2
 801298e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012990:	9000      	str	r0, [sp, #0]
 8012992:	a830      	add	r0, sp, #192	; 0xc0
 8012994:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8012996:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8012998:	f002 f91d 	bl	8014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801299c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80129a0:	a80e      	add	r0, sp, #56	; 0x38
 80129a2:	7be2      	ldrb	r2, [r4, #15]
 80129a4:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80129a8:	1a8a      	subs	r2, r1, r2
 80129aa:	7c21      	ldrb	r1, [r4, #16]
 80129ac:	9103      	str	r1, [sp, #12]
 80129ae:	b292      	uxth	r2, r2
 80129b0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80129b4:	9102      	str	r1, [sp, #8]
 80129b6:	6821      	ldr	r1, [r4, #0]
 80129b8:	9101      	str	r1, [sp, #4]
 80129ba:	7961      	ldrb	r1, [r4, #5]
 80129bc:	9100      	str	r1, [sp, #0]
 80129be:	a930      	add	r1, sp, #192	; 0xc0
 80129c0:	f7ff fc34 	bl	801222c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80129c4:	2e00      	cmp	r6, #0
 80129c6:	dc5b      	bgt.n	8012a80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80129c8:	af17      	add	r7, sp, #92	; 0x5c
 80129ca:	f04f 0900 	mov.w	r9, #0
 80129ce:	7c23      	ldrb	r3, [r4, #16]
 80129d0:	2b00      	cmp	r3, #0
 80129d2:	f000 80b1 	beq.w	8012b38 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80129d6:	a80e      	add	r0, sp, #56	; 0x38
 80129d8:	f7ff fe4d 	bl	8012676 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80129dc:	f1ba 0f00 	cmp.w	sl, #0
 80129e0:	f000 80a5 	beq.w	8012b2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80129e4:	7c23      	ldrb	r3, [r4, #16]
 80129e6:	2264      	movs	r2, #100	; 0x64
 80129e8:	4639      	mov	r1, r7
 80129ea:	a849      	add	r0, sp, #292	; 0x124
 80129ec:	9309      	str	r3, [sp, #36]	; 0x24
 80129ee:	f010 fff4 	bl	80239da <memcpy>
 80129f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80129f4:	2b00      	cmp	r3, #0
 80129f6:	f000 80a7 	beq.w	8012b48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80129fa:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80129fe:	7922      	ldrb	r2, [r4, #4]
 8012a00:	2a01      	cmp	r2, #1
 8012a02:	f040 808a 	bne.w	8012b1a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8012a06:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8012a0a:	1ac0      	subs	r0, r0, r3
 8012a0c:	2302      	movs	r3, #2
 8012a0e:	fb90 f0f3 	sdiv	r0, r0, r3
 8012a12:	b200      	sxth	r0, r0
 8012a14:	7c23      	ldrb	r3, [r4, #16]
 8012a16:	2b00      	cmp	r3, #0
 8012a18:	f000 808b 	beq.w	8012b32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8012a1c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8012a20:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8012a24:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012a28:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8012a2c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8012a30:	2100      	movs	r1, #0
 8012a32:	4410      	add	r0, r2
 8012a34:	4642      	mov	r2, r8
 8012a36:	b200      	sxth	r0, r0
 8012a38:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8012a3c:	9000      	str	r0, [sp, #0]
 8012a3e:	4658      	mov	r0, fp
 8012a40:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8012a44:	f7ff fca2 	bl	801238c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8012a48:	2800      	cmp	r0, #0
 8012a4a:	d163      	bne.n	8012b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012a4c:	b2b2      	uxth	r2, r6
 8012a4e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012a52:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8012a56:	4413      	add	r3, r2
 8012a58:	1a8a      	subs	r2, r1, r2
 8012a5a:	b21b      	sxth	r3, r3
 8012a5c:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8012a60:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8012a64:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012a68:	2a00      	cmp	r2, #0
 8012a6a:	d153      	bne.n	8012b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012a6c:	6822      	ldr	r2, [r4, #0]
 8012a6e:	8869      	ldrh	r1, [r5, #2]
 8012a70:	7a12      	ldrb	r2, [r2, #8]
 8012a72:	1a9b      	subs	r3, r3, r2
 8012a74:	88ea      	ldrh	r2, [r5, #6]
 8012a76:	440a      	add	r2, r1
 8012a78:	b212      	sxth	r2, r2
 8012a7a:	4293      	cmp	r3, r2
 8012a7c:	dda7      	ble.n	80129ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8012a7e:	e049      	b.n	8012b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012a80:	7c23      	ldrb	r3, [r4, #16]
 8012a82:	444f      	add	r7, r9
 8012a84:	b1c3      	cbz	r3, 8012ab8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8012a86:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8012a8a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012a8e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012a92:	443b      	add	r3, r7
 8012a94:	4293      	cmp	r3, r2
 8012a96:	da97      	bge.n	80129c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8012a98:	a80e      	add	r0, sp, #56	; 0x38
 8012a9a:	f7ff fdec 	bl	8012676 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012a9e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8012aa2:	3b01      	subs	r3, #1
 8012aa4:	b29b      	uxth	r3, r3
 8012aa6:	454b      	cmp	r3, r9
 8012aa8:	9309      	str	r3, [sp, #36]	; 0x24
 8012aaa:	d021      	beq.n	8012af0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8012aac:	7961      	ldrb	r1, [r4, #5]
 8012aae:	a817      	add	r0, sp, #92	; 0x5c
 8012ab0:	f7fa fd16 	bl	800d4e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012ab4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012ab6:	e7f4      	b.n	8012aa2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8012ab8:	fa1f f986 	uxth.w	r9, r6
 8012abc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012ac0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012ac4:	443b      	add	r3, r7
 8012ac6:	4293      	cmp	r3, r2
 8012ac8:	f6bf af7e 	bge.w	80129c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8012acc:	a817      	add	r0, sp, #92	; 0x5c
 8012ace:	f002 fc53 	bl	8015378 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012ad2:	b1f8      	cbz	r0, 8012b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012ad4:	280a      	cmp	r0, #10
 8012ad6:	d1f1      	bne.n	8012abc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8012ad8:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012adc:	444b      	add	r3, r9
 8012ade:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012ae2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8012ae6:	eba3 0309 	sub.w	r3, r3, r9
 8012aea:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012aee:	e7e5      	b.n	8012abc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8012af0:	b2b3      	uxth	r3, r6
 8012af2:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8012af6:	441a      	add	r2, r3
 8012af8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8012afc:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8012b00:	1ad3      	subs	r3, r2, r3
 8012b02:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012b06:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012b0a:	b11b      	cbz	r3, 8012b14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8012b0c:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8012b10:	2b00      	cmp	r3, #0
 8012b12:	d0ba      	beq.n	8012a8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8012b14:	b063      	add	sp, #396	; 0x18c
 8012b16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b1a:	2a02      	cmp	r2, #2
 8012b1c:	d105      	bne.n	8012b2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8012b1e:	7be2      	ldrb	r2, [r4, #15]
 8012b20:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8012b24:	1a80      	subs	r0, r0, r2
 8012b26:	1ac0      	subs	r0, r0, r3
 8012b28:	e773      	b.n	8012a12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8012b2a:	2000      	movs	r0, #0
 8012b2c:	e772      	b.n	8012a14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8012b2e:	7be0      	ldrb	r0, [r4, #15]
 8012b30:	e770      	b.n	8012a14 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8012b32:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012b36:	e773      	b.n	8012a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8012b38:	f1ba 0f00 	cmp.w	sl, #0
 8012b3c:	d0f7      	beq.n	8012b2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8012b3e:	2264      	movs	r2, #100	; 0x64
 8012b40:	4639      	mov	r1, r7
 8012b42:	a849      	add	r0, sp, #292	; 0x124
 8012b44:	f010 ff49 	bl	80239da <memcpy>
 8012b48:	2300      	movs	r3, #0
 8012b4a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012b4e:	6821      	ldr	r1, [r4, #0]
 8012b50:	a849      	add	r0, sp, #292	; 0x124
 8012b52:	f7ff fbae 	bl	80122b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012b56:	b203      	sxth	r3, r0
 8012b58:	e751      	b.n	80129fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08012b5a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8012b5a:	2b03      	cmp	r3, #3
 8012b5c:	d818      	bhi.n	8012b90 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8012b5e:	e8df f003 	tbb	[pc, r3]
 8012b62:	0602      	.short	0x0602
 8012b64:	130d      	.short	0x130d
 8012b66:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012b6a:	1850      	adds	r0, r2, r1
 8012b6c:	4770      	bx	lr
 8012b6e:	8803      	ldrh	r3, [r0, #0]
 8012b70:	8880      	ldrh	r0, [r0, #4]
 8012b72:	4418      	add	r0, r3
 8012b74:	b200      	sxth	r0, r0
 8012b76:	1a80      	subs	r0, r0, r2
 8012b78:	3801      	subs	r0, #1
 8012b7a:	4770      	bx	lr
 8012b7c:	8803      	ldrh	r3, [r0, #0]
 8012b7e:	8880      	ldrh	r0, [r0, #4]
 8012b80:	4418      	add	r0, r3
 8012b82:	b200      	sxth	r0, r0
 8012b84:	1a40      	subs	r0, r0, r1
 8012b86:	e7f7      	b.n	8012b78 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8012b88:	f9b0 0000 	ldrsh.w	r0, [r0]
 8012b8c:	4410      	add	r0, r2
 8012b8e:	4770      	bx	lr
 8012b90:	2000      	movs	r0, #0
 8012b92:	4770      	bx	lr

08012b94 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8012b94:	2b03      	cmp	r3, #3
 8012b96:	d817      	bhi.n	8012bc8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8012b98:	e8df f003 	tbb	[pc, r3]
 8012b9c:	10090602 	.word	0x10090602
 8012ba0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8012ba4:	1850      	adds	r0, r2, r1
 8012ba6:	4770      	bx	lr
 8012ba8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8012bac:	e7fa      	b.n	8012ba4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8012bae:	8843      	ldrh	r3, [r0, #2]
 8012bb0:	88c0      	ldrh	r0, [r0, #6]
 8012bb2:	4418      	add	r0, r3
 8012bb4:	b200      	sxth	r0, r0
 8012bb6:	1a80      	subs	r0, r0, r2
 8012bb8:	3801      	subs	r0, #1
 8012bba:	4770      	bx	lr
 8012bbc:	8843      	ldrh	r3, [r0, #2]
 8012bbe:	88c0      	ldrh	r0, [r0, #6]
 8012bc0:	4418      	add	r0, r3
 8012bc2:	b200      	sxth	r0, r0
 8012bc4:	1a40      	subs	r0, r0, r1
 8012bc6:	e7f7      	b.n	8012bb8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8012bc8:	2000      	movs	r0, #0
 8012bca:	4770      	bx	lr

08012bcc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8012bcc:	4b01      	ldr	r3, [pc, #4]	; (8012bd4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8012bce:	2200      	movs	r2, #0
 8012bd0:	601a      	str	r2, [r3, #0]
 8012bd2:	4770      	bx	lr
 8012bd4:	2400207c 	.word	0x2400207c

08012bd8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8012bd8:	4603      	mov	r3, r0
 8012bda:	b1c8      	cbz	r0, 8012c10 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8012bdc:	0c02      	lsrs	r2, r0, #16
 8012bde:	0412      	lsls	r2, r2, #16
 8012be0:	b9a2      	cbnz	r2, 8012c0c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8012be2:	0403      	lsls	r3, r0, #16
 8012be4:	2010      	movs	r0, #16
 8012be6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012bea:	bf04      	itt	eq
 8012bec:	021b      	lsleq	r3, r3, #8
 8012bee:	3008      	addeq	r0, #8
 8012bf0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8012bf4:	bf04      	itt	eq
 8012bf6:	011b      	lsleq	r3, r3, #4
 8012bf8:	3004      	addeq	r0, #4
 8012bfa:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012bfe:	bf04      	itt	eq
 8012c00:	009b      	lsleq	r3, r3, #2
 8012c02:	3002      	addeq	r0, #2
 8012c04:	2b00      	cmp	r3, #0
 8012c06:	db04      	blt.n	8012c12 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8012c08:	3001      	adds	r0, #1
 8012c0a:	4770      	bx	lr
 8012c0c:	2000      	movs	r0, #0
 8012c0e:	e7ea      	b.n	8012be6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8012c10:	2020      	movs	r0, #32
 8012c12:	4770      	bx	lr

08012c14 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8012c14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c18:	b087      	sub	sp, #28
 8012c1a:	460d      	mov	r5, r1
 8012c1c:	4616      	mov	r6, r2
 8012c1e:	4698      	mov	r8, r3
 8012c20:	4601      	mov	r1, r0
 8012c22:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8012c26:	b120      	cbz	r0, 8012c32 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8012c28:	b11a      	cbz	r2, 8012c32 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8012c2a:	2d1f      	cmp	r5, #31
 8012c2c:	d801      	bhi.n	8012c32 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8012c2e:	2b1f      	cmp	r3, #31
 8012c30:	d904      	bls.n	8012c3c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8012c32:	2000      	movs	r0, #0
 8012c34:	6038      	str	r0, [r7, #0]
 8012c36:	b007      	add	sp, #28
 8012c38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c3c:	b97d      	cbnz	r5, 8012c5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8012c3e:	b143      	cbz	r3, 8012c52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8012c40:	4602      	mov	r2, r0
 8012c42:	462b      	mov	r3, r5
 8012c44:	4641      	mov	r1, r8
 8012c46:	4630      	mov	r0, r6
 8012c48:	e9cd 4700 	strd	r4, r7, [sp]
 8012c4c:	f7ff ffe2 	bl	8012c14 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012c50:	e7f1      	b.n	8012c36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8012c52:	f04f 33ff 	mov.w	r3, #4294967295
 8012c56:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012c5a:	603b      	str	r3, [r7, #0]
 8012c5c:	e7eb      	b.n	8012c36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8012c5e:	fa32 fa05 	lsrs.w	sl, r2, r5
 8012c62:	d106      	bne.n	8012c72 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8012c64:	4346      	muls	r6, r0
 8012c66:	fbb6 f0f4 	udiv	r0, r6, r4
 8012c6a:	fb04 6610 	mls	r6, r4, r0, r6
 8012c6e:	603e      	str	r6, [r7, #0]
 8012c70:	e7e1      	b.n	8012c36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8012c72:	2201      	movs	r2, #1
 8012c74:	fa00 fb05 	lsl.w	fp, r0, r5
 8012c78:	40aa      	lsls	r2, r5
 8012c7a:	fbbb f9f4 	udiv	r9, fp, r4
 8012c7e:	3a01      	subs	r2, #1
 8012c80:	fb0a f309 	mul.w	r3, sl, r9
 8012c84:	fb04 b919 	mls	r9, r4, r9, fp
 8012c88:	4016      	ands	r6, r2
 8012c8a:	9303      	str	r3, [sp, #12]
 8012c8c:	4630      	mov	r0, r6
 8012c8e:	f7ff ffa3 	bl	8012bd8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012c92:	462b      	mov	r3, r5
 8012c94:	460a      	mov	r2, r1
 8012c96:	4601      	mov	r1, r0
 8012c98:	4630      	mov	r0, r6
 8012c9a:	e9cd 4700 	strd	r4, r7, [sp]
 8012c9e:	f7ff ffb9 	bl	8012c14 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012ca2:	4606      	mov	r6, r0
 8012ca4:	4648      	mov	r0, r9
 8012ca6:	eb05 0108 	add.w	r1, r5, r8
 8012caa:	f7ff ff95 	bl	8012bd8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012cae:	ab05      	add	r3, sp, #20
 8012cb0:	464a      	mov	r2, r9
 8012cb2:	e9cd 4300 	strd	r4, r3, [sp]
 8012cb6:	4603      	mov	r3, r0
 8012cb8:	4650      	mov	r0, sl
 8012cba:	f7ff ffab 	bl	8012c14 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012cbe:	6839      	ldr	r1, [r7, #0]
 8012cc0:	9a05      	ldr	r2, [sp, #20]
 8012cc2:	9b03      	ldr	r3, [sp, #12]
 8012cc4:	4411      	add	r1, r2
 8012cc6:	fbb1 f2f4 	udiv	r2, r1, r4
 8012cca:	18d3      	adds	r3, r2, r3
 8012ccc:	fb04 1412 	mls	r4, r4, r2, r1
 8012cd0:	441e      	add	r6, r3
 8012cd2:	603c      	str	r4, [r7, #0]
 8012cd4:	4430      	add	r0, r6
 8012cd6:	e7ae      	b.n	8012c36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08012cd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8012cd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012cdc:	b085      	sub	sp, #20
 8012cde:	f1b0 0900 	subs.w	r9, r0, #0
 8012ce2:	461d      	mov	r5, r3
 8012ce4:	4617      	mov	r7, r2
 8012ce6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8012ce8:	bfbb      	ittet	lt
 8012cea:	f1c9 0900 	rsblt	r9, r9, #0
 8012cee:	f04f 36ff 	movlt.w	r6, #4294967295
 8012cf2:	2601      	movge	r6, #1
 8012cf4:	6823      	ldrlt	r3, [r4, #0]
 8012cf6:	bfbc      	itt	lt
 8012cf8:	425b      	neglt	r3, r3
 8012cfa:	6023      	strlt	r3, [r4, #0]
 8012cfc:	2a00      	cmp	r2, #0
 8012cfe:	da04      	bge.n	8012d0a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8012d00:	6823      	ldr	r3, [r4, #0]
 8012d02:	4257      	negs	r7, r2
 8012d04:	4276      	negs	r6, r6
 8012d06:	425b      	negs	r3, r3
 8012d08:	6023      	str	r3, [r4, #0]
 8012d0a:	2d00      	cmp	r5, #0
 8012d0c:	4638      	mov	r0, r7
 8012d0e:	bfba      	itte	lt
 8012d10:	426d      	neglt	r5, r5
 8012d12:	f04f 38ff 	movlt.w	r8, #4294967295
 8012d16:	f04f 0801 	movge.w	r8, #1
 8012d1a:	f7ff ff5d 	bl	8012bd8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012d1e:	ab03      	add	r3, sp, #12
 8012d20:	463a      	mov	r2, r7
 8012d22:	e9cd 5300 	strd	r5, r3, [sp]
 8012d26:	4603      	mov	r3, r0
 8012d28:	4648      	mov	r0, r9
 8012d2a:	f7ff ff73 	bl	8012c14 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012d2e:	6823      	ldr	r3, [r4, #0]
 8012d30:	9a03      	ldr	r2, [sp, #12]
 8012d32:	4546      	cmp	r6, r8
 8012d34:	441a      	add	r2, r3
 8012d36:	fb92 f3f5 	sdiv	r3, r2, r5
 8012d3a:	4418      	add	r0, r3
 8012d3c:	fb05 2313 	mls	r3, r5, r3, r2
 8012d40:	bf18      	it	ne
 8012d42:	4240      	negne	r0, r0
 8012d44:	1c72      	adds	r2, r6, #1
 8012d46:	6023      	str	r3, [r4, #0]
 8012d48:	d105      	bne.n	8012d56 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8012d4a:	2b00      	cmp	r3, #0
 8012d4c:	f1c3 0200 	rsb	r2, r3, #0
 8012d50:	db0b      	blt.n	8012d6a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8012d52:	6022      	str	r2, [r4, #0]
 8012d54:	e006      	b.n	8012d64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012d56:	2e01      	cmp	r6, #1
 8012d58:	d104      	bne.n	8012d64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012d5a:	2b00      	cmp	r3, #0
 8012d5c:	da02      	bge.n	8012d64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012d5e:	442b      	add	r3, r5
 8012d60:	3801      	subs	r0, #1
 8012d62:	6023      	str	r3, [r4, #0]
 8012d64:	b005      	add	sp, #20
 8012d66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012d6a:	3801      	subs	r0, #1
 8012d6c:	1b52      	subs	r2, r2, r5
 8012d6e:	e7f0      	b.n	8012d52 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08012d70 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8012d70:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8012d74:	4c1c      	ldr	r4, [pc, #112]	; (8012de8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8012d76:	4605      	mov	r5, r0
 8012d78:	6807      	ldr	r7, [r0, #0]
 8012d7a:	69a3      	ldr	r3, [r4, #24]
 8012d7c:	b92b      	cbnz	r3, 8012d8a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8012d7e:	6840      	ldr	r0, [r0, #4]
 8012d80:	e9c5 7000 	strd	r7, r0, [r5]
 8012d84:	b004      	add	sp, #16
 8012d86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d8a:	f04f 0802 	mov.w	r8, #2
 8012d8e:	68a2      	ldr	r2, [r4, #8]
 8012d90:	ae04      	add	r6, sp, #16
 8012d92:	6820      	ldr	r0, [r4, #0]
 8012d94:	fb93 f1f8 	sdiv	r1, r3, r8
 8012d98:	440a      	add	r2, r1
 8012d9a:	69e1      	ldr	r1, [r4, #28]
 8012d9c:	f846 2d04 	str.w	r2, [r6, #-4]!
 8012da0:	463a      	mov	r2, r7
 8012da2:	9600      	str	r6, [sp, #0]
 8012da4:	f7ff ff98 	bl	8012cd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012da8:	69a3      	ldr	r3, [r4, #24]
 8012daa:	4607      	mov	r7, r0
 8012dac:	686a      	ldr	r2, [r5, #4]
 8012dae:	6a21      	ldr	r1, [r4, #32]
 8012db0:	9600      	str	r6, [sp, #0]
 8012db2:	6860      	ldr	r0, [r4, #4]
 8012db4:	f7ff ff90 	bl	8012cd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012db8:	69a3      	ldr	r3, [r4, #24]
 8012dba:	6962      	ldr	r2, [r4, #20]
 8012dbc:	4407      	add	r7, r0
 8012dbe:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8012dc0:	9600      	str	r6, [sp, #0]
 8012dc2:	68e0      	ldr	r0, [r4, #12]
 8012dc4:	fb93 f8f8 	sdiv	r8, r3, r8
 8012dc8:	4442      	add	r2, r8
 8012dca:	9203      	str	r2, [sp, #12]
 8012dcc:	682a      	ldr	r2, [r5, #0]
 8012dce:	f7ff ff83 	bl	8012cd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012dd2:	4680      	mov	r8, r0
 8012dd4:	9600      	str	r6, [sp, #0]
 8012dd6:	69a3      	ldr	r3, [r4, #24]
 8012dd8:	686a      	ldr	r2, [r5, #4]
 8012dda:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8012ddc:	6920      	ldr	r0, [r4, #16]
 8012dde:	f7ff ff7b 	bl	8012cd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012de2:	4440      	add	r0, r8
 8012de4:	e7cc      	b.n	8012d80 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8012de6:	bf00      	nop
 8012de8:	24002080 	.word	0x24002080

08012dec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8012dec:	4b07      	ldr	r3, [pc, #28]	; (8012e0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8012dee:	781b      	ldrb	r3, [r3, #0]
 8012df0:	2b01      	cmp	r3, #1
 8012df2:	d109      	bne.n	8012e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8012df4:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012df8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012dfc:	8003      	strh	r3, [r0, #0]
 8012dfe:	4b04      	ldr	r3, [pc, #16]	; (8012e10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8012e00:	881b      	ldrh	r3, [r3, #0]
 8012e02:	3b01      	subs	r3, #1
 8012e04:	1a9b      	subs	r3, r3, r2
 8012e06:	800b      	strh	r3, [r1, #0]
 8012e08:	4770      	bx	lr
 8012e0a:	bf00      	nop
 8012e0c:	2400206c 	.word	0x2400206c
 8012e10:	24002068 	.word	0x24002068

08012e14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8012e14:	4b07      	ldr	r3, [pc, #28]	; (8012e34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8012e16:	b510      	push	{r4, lr}
 8012e18:	781b      	ldrb	r3, [r3, #0]
 8012e1a:	2b01      	cmp	r3, #1
 8012e1c:	d108      	bne.n	8012e30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8012e1e:	4b06      	ldr	r3, [pc, #24]	; (8012e38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8012e20:	880c      	ldrh	r4, [r1, #0]
 8012e22:	881b      	ldrh	r3, [r3, #0]
 8012e24:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012e28:	3b01      	subs	r3, #1
 8012e2a:	1b1b      	subs	r3, r3, r4
 8012e2c:	8003      	strh	r3, [r0, #0]
 8012e2e:	800a      	strh	r2, [r1, #0]
 8012e30:	bd10      	pop	{r4, pc}
 8012e32:	bf00      	nop
 8012e34:	2400206c 	.word	0x2400206c
 8012e38:	24002068 	.word	0x24002068

08012e3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8012e3c:	4b0a      	ldr	r3, [pc, #40]	; (8012e68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8012e3e:	b510      	push	{r4, lr}
 8012e40:	781b      	ldrb	r3, [r3, #0]
 8012e42:	2b01      	cmp	r3, #1
 8012e44:	d10e      	bne.n	8012e64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8012e46:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8012e4a:	8843      	ldrh	r3, [r0, #2]
 8012e4c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012e50:	18ca      	adds	r2, r1, r3
 8012e52:	4b06      	ldr	r3, [pc, #24]	; (8012e6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8012e54:	8044      	strh	r4, [r0, #2]
 8012e56:	881b      	ldrh	r3, [r3, #0]
 8012e58:	1a9b      	subs	r3, r3, r2
 8012e5a:	8003      	strh	r3, [r0, #0]
 8012e5c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012e60:	8081      	strh	r1, [r0, #4]
 8012e62:	80c3      	strh	r3, [r0, #6]
 8012e64:	bd10      	pop	{r4, pc}
 8012e66:	bf00      	nop
 8012e68:	2400206c 	.word	0x2400206c
 8012e6c:	24002068 	.word	0x24002068

08012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8012e70:	4b08      	ldr	r3, [pc, #32]	; (8012e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8012e72:	781b      	ldrb	r3, [r3, #0]
 8012e74:	2b01      	cmp	r3, #1
 8012e76:	d10c      	bne.n	8012e92 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8012e78:	8803      	ldrh	r3, [r0, #0]
 8012e7a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8012e7e:	8842      	ldrh	r2, [r0, #2]
 8012e80:	8002      	strh	r2, [r0, #0]
 8012e82:	185a      	adds	r2, r3, r1
 8012e84:	4b04      	ldr	r3, [pc, #16]	; (8012e98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8012e86:	881b      	ldrh	r3, [r3, #0]
 8012e88:	1a9b      	subs	r3, r3, r2
 8012e8a:	8043      	strh	r3, [r0, #2]
 8012e8c:	88c3      	ldrh	r3, [r0, #6]
 8012e8e:	80c1      	strh	r1, [r0, #6]
 8012e90:	8083      	strh	r3, [r0, #4]
 8012e92:	4770      	bx	lr
 8012e94:	2400206c 	.word	0x2400206c
 8012e98:	24002068 	.word	0x24002068

08012e9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8012e9c:	4b07      	ldr	r3, [pc, #28]	; (8012ebc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8012e9e:	b510      	push	{r4, lr}
 8012ea0:	781b      	ldrb	r3, [r3, #0]
 8012ea2:	2b01      	cmp	r3, #1
 8012ea4:	d108      	bne.n	8012eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8012ea6:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012eaa:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012eae:	8003      	strh	r3, [r0, #0]
 8012eb0:	8893      	ldrh	r3, [r2, #4]
 8012eb2:	3b01      	subs	r3, #1
 8012eb4:	1b1b      	subs	r3, r3, r4
 8012eb6:	800b      	strh	r3, [r1, #0]
 8012eb8:	bd10      	pop	{r4, pc}
 8012eba:	bf00      	nop
 8012ebc:	2400206c 	.word	0x2400206c

08012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8012ec0:	4b0a      	ldr	r3, [pc, #40]	; (8012eec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8012ec2:	460a      	mov	r2, r1
 8012ec4:	b510      	push	{r4, lr}
 8012ec6:	781b      	ldrb	r3, [r3, #0]
 8012ec8:	2b01      	cmp	r3, #1
 8012eca:	d10d      	bne.n	8012ee8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8012ecc:	8881      	ldrh	r1, [r0, #4]
 8012ece:	8803      	ldrh	r3, [r0, #0]
 8012ed0:	440b      	add	r3, r1
 8012ed2:	4601      	mov	r1, r0
 8012ed4:	3b01      	subs	r3, #1
 8012ed6:	f821 3b02 	strh.w	r3, [r1], #2
 8012eda:	f7ff ffdf 	bl	8012e9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8012ede:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012ee2:	88c2      	ldrh	r2, [r0, #6]
 8012ee4:	80c3      	strh	r3, [r0, #6]
 8012ee6:	8082      	strh	r2, [r0, #4]
 8012ee8:	bd10      	pop	{r4, pc}
 8012eea:	bf00      	nop
 8012eec:	2400206c 	.word	0x2400206c

08012ef0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8012ef0:	4b06      	ldr	r3, [pc, #24]	; (8012f0c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8012ef2:	2100      	movs	r1, #0
 8012ef4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012ef8:	4b05      	ldr	r3, [pc, #20]	; (8012f10 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8012efa:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8012efe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012f02:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8012f06:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8012f0a:	4770      	bx	lr
 8012f0c:	24002068 	.word	0x24002068
 8012f10:	2400206a 	.word	0x2400206a

08012f14 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8012f14:	4b03      	ldr	r3, [pc, #12]	; (8012f24 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8012f16:	6818      	ldr	r0, [r3, #0]
 8012f18:	b110      	cbz	r0, 8012f20 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8012f1a:	6803      	ldr	r3, [r0, #0]
 8012f1c:	699b      	ldr	r3, [r3, #24]
 8012f1e:	4718      	bx	r3
 8012f20:	4770      	bx	lr
 8012f22:	bf00      	nop
 8012f24:	240020b0 	.word	0x240020b0

08012f28 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8012f28:	4770      	bx	lr
	...

08012f2c <_ZN8touchgfx11Application4drawEv>:
 8012f2c:	4b09      	ldr	r3, [pc, #36]	; (8012f54 <_ZN8touchgfx11Application4drawEv+0x28>)
 8012f2e:	b507      	push	{r0, r1, r2, lr}
 8012f30:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012f34:	2100      	movs	r1, #0
 8012f36:	4b08      	ldr	r3, [pc, #32]	; (8012f58 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8012f38:	9100      	str	r1, [sp, #0]
 8012f3a:	4669      	mov	r1, sp
 8012f3c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012f40:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012f44:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012f48:	6803      	ldr	r3, [r0, #0]
 8012f4a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012f4c:	4798      	blx	r3
 8012f4e:	b003      	add	sp, #12
 8012f50:	f85d fb04 	ldr.w	pc, [sp], #4
 8012f54:	24002068 	.word	0x24002068
 8012f58:	2400206a 	.word	0x2400206a

08012f5c <_ZN8touchgfx11Application10invalidateEv>:
 8012f5c:	4b09      	ldr	r3, [pc, #36]	; (8012f84 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8012f5e:	b082      	sub	sp, #8
 8012f60:	2100      	movs	r1, #0
 8012f62:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012f66:	4b08      	ldr	r3, [pc, #32]	; (8012f88 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8012f68:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012f6c:	aa02      	add	r2, sp, #8
 8012f6e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012f72:	9100      	str	r1, [sp, #0]
 8012f74:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012f78:	6803      	ldr	r3, [r0, #0]
 8012f7a:	e912 0006 	ldmdb	r2, {r1, r2}
 8012f7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012f80:	b002      	add	sp, #8
 8012f82:	4718      	bx	r3
 8012f84:	24002068 	.word	0x24002068
 8012f88:	2400206a 	.word	0x2400206a

08012f8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8012f8c:	4b03      	ldr	r3, [pc, #12]	; (8012f9c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8012f8e:	6818      	ldr	r0, [r3, #0]
 8012f90:	b110      	cbz	r0, 8012f98 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8012f92:	6803      	ldr	r3, [r0, #0]
 8012f94:	69db      	ldr	r3, [r3, #28]
 8012f96:	4718      	bx	r3
 8012f98:	4770      	bx	lr
 8012f9a:	bf00      	nop
 8012f9c:	240020b0 	.word	0x240020b0

08012fa0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8012fa0:	4b03      	ldr	r3, [pc, #12]	; (8012fb0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8012fa2:	6818      	ldr	r0, [r3, #0]
 8012fa4:	b110      	cbz	r0, 8012fac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8012fa6:	6803      	ldr	r3, [r0, #0]
 8012fa8:	6a1b      	ldr	r3, [r3, #32]
 8012faa:	4718      	bx	r3
 8012fac:	4770      	bx	lr
 8012fae:	bf00      	nop
 8012fb0:	240020b0 	.word	0x240020b0

08012fb4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8012fb4:	2300      	movs	r3, #0
 8012fb6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8012fba:	4770      	bx	lr

08012fbc <_ZN8touchgfx11Application14handleKeyEventEh>:
 8012fbc:	4b03      	ldr	r3, [pc, #12]	; (8012fcc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8012fbe:	6818      	ldr	r0, [r3, #0]
 8012fc0:	b110      	cbz	r0, 8012fc8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8012fc2:	6803      	ldr	r3, [r0, #0]
 8012fc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012fc6:	4718      	bx	r3
 8012fc8:	4770      	bx	lr
 8012fca:	bf00      	nop
 8012fcc:	240020b0 	.word	0x240020b0

08012fd0 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8012fd0:	b510      	push	{r4, lr}
 8012fd2:	f9b1 4000 	ldrsh.w	r4, [r1]
 8012fd6:	888a      	ldrh	r2, [r1, #4]
 8012fd8:	f9b0 3000 	ldrsh.w	r3, [r0]
 8012fdc:	4422      	add	r2, r4
 8012fde:	b212      	sxth	r2, r2
 8012fe0:	4293      	cmp	r3, r2
 8012fe2:	da15      	bge.n	8013010 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8012fe4:	8882      	ldrh	r2, [r0, #4]
 8012fe6:	4413      	add	r3, r2
 8012fe8:	b21b      	sxth	r3, r3
 8012fea:	429c      	cmp	r4, r3
 8012fec:	da10      	bge.n	8013010 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8012fee:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012ff2:	88c9      	ldrh	r1, [r1, #6]
 8012ff4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8012ff8:	4419      	add	r1, r3
 8012ffa:	b209      	sxth	r1, r1
 8012ffc:	428a      	cmp	r2, r1
 8012ffe:	da07      	bge.n	8013010 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013000:	88c0      	ldrh	r0, [r0, #6]
 8013002:	4410      	add	r0, r2
 8013004:	b200      	sxth	r0, r0
 8013006:	4283      	cmp	r3, r0
 8013008:	bfac      	ite	ge
 801300a:	2000      	movge	r0, #0
 801300c:	2001      	movlt	r0, #1
 801300e:	bd10      	pop	{r4, pc}
 8013010:	2000      	movs	r0, #0
 8013012:	e7fc      	b.n	801300e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08013014 <_ZN8touchgfx4Rect10restrictToEss>:
 8013014:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013018:	2b00      	cmp	r3, #0
 801301a:	b510      	push	{r4, lr}
 801301c:	da04      	bge.n	8013028 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801301e:	8884      	ldrh	r4, [r0, #4]
 8013020:	4423      	add	r3, r4
 8013022:	8083      	strh	r3, [r0, #4]
 8013024:	2300      	movs	r3, #0
 8013026:	8003      	strh	r3, [r0, #0]
 8013028:	f9b0 4000 	ldrsh.w	r4, [r0]
 801302c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013030:	1b09      	subs	r1, r1, r4
 8013032:	428b      	cmp	r3, r1
 8013034:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8013038:	bfc8      	it	gt
 801303a:	8081      	strhgt	r1, [r0, #4]
 801303c:	2b00      	cmp	r3, #0
 801303e:	da04      	bge.n	801304a <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8013040:	88c1      	ldrh	r1, [r0, #6]
 8013042:	440b      	add	r3, r1
 8013044:	80c3      	strh	r3, [r0, #6]
 8013046:	2300      	movs	r3, #0
 8013048:	8043      	strh	r3, [r0, #2]
 801304a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801304e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8013052:	1a52      	subs	r2, r2, r1
 8013054:	4293      	cmp	r3, r2
 8013056:	bfc8      	it	gt
 8013058:	80c2      	strhgt	r2, [r0, #6]
 801305a:	bd10      	pop	{r4, pc}

0801305c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801305c:	4b10      	ldr	r3, [pc, #64]	; (80130a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801305e:	b510      	push	{r4, lr}
 8013060:	460c      	mov	r4, r1
 8013062:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013066:	4b0f      	ldr	r3, [pc, #60]	; (80130a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8013068:	4620      	mov	r0, r4
 801306a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801306e:	f7ff ffd1 	bl	8013014 <_ZN8touchgfx4Rect10restrictToEss>
 8013072:	4b0d      	ldr	r3, [pc, #52]	; (80130a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8013074:	6818      	ldr	r0, [r3, #0]
 8013076:	b190      	cbz	r0, 801309e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8013078:	6803      	ldr	r3, [r0, #0]
 801307a:	4621      	mov	r1, r4
 801307c:	689b      	ldr	r3, [r3, #8]
 801307e:	4798      	blx	r3
 8013080:	4b0a      	ldr	r3, [pc, #40]	; (80130ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8013082:	6818      	ldr	r0, [r3, #0]
 8013084:	b118      	cbz	r0, 801308e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8013086:	6803      	ldr	r3, [r0, #0]
 8013088:	4621      	mov	r1, r4
 801308a:	689b      	ldr	r3, [r3, #8]
 801308c:	4798      	blx	r3
 801308e:	4b08      	ldr	r3, [pc, #32]	; (80130b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8013090:	4621      	mov	r1, r4
 8013092:	6818      	ldr	r0, [r3, #0]
 8013094:	6803      	ldr	r3, [r0, #0]
 8013096:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801309a:	69db      	ldr	r3, [r3, #28]
 801309c:	4718      	bx	r3
 801309e:	bd10      	pop	{r4, pc}
 80130a0:	2400206a 	.word	0x2400206a
 80130a4:	24002068 	.word	0x24002068
 80130a8:	240020b0 	.word	0x240020b0
 80130ac:	240020ac 	.word	0x240020ac
 80130b0:	24002074 	.word	0x24002074

080130b4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80130b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80130b6:	4606      	mov	r6, r0
 80130b8:	4608      	mov	r0, r1
 80130ba:	460f      	mov	r7, r1
 80130bc:	f7fc fdf7 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 80130c0:	b9e8      	cbnz	r0, 80130fe <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80130c2:	f9b7 5000 	ldrsh.w	r5, [r7]
 80130c6:	f9b6 4000 	ldrsh.w	r4, [r6]
 80130ca:	42a5      	cmp	r5, r4
 80130cc:	db17      	blt.n	80130fe <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80130ce:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80130d2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80130d6:	429a      	cmp	r2, r3
 80130d8:	db11      	blt.n	80130fe <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80130da:	88b9      	ldrh	r1, [r7, #4]
 80130dc:	440d      	add	r5, r1
 80130de:	88b1      	ldrh	r1, [r6, #4]
 80130e0:	440c      	add	r4, r1
 80130e2:	b22d      	sxth	r5, r5
 80130e4:	b224      	sxth	r4, r4
 80130e6:	42a5      	cmp	r5, r4
 80130e8:	dc09      	bgt.n	80130fe <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80130ea:	88f8      	ldrh	r0, [r7, #6]
 80130ec:	4410      	add	r0, r2
 80130ee:	88f2      	ldrh	r2, [r6, #6]
 80130f0:	4413      	add	r3, r2
 80130f2:	b200      	sxth	r0, r0
 80130f4:	b21b      	sxth	r3, r3
 80130f6:	4298      	cmp	r0, r3
 80130f8:	bfcc      	ite	gt
 80130fa:	2000      	movgt	r0, #0
 80130fc:	2001      	movle	r0, #1
 80130fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013100 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8013100:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013102:	4604      	mov	r4, r0
 8013104:	4608      	mov	r0, r1
 8013106:	460d      	mov	r5, r1
 8013108:	f7fc fdd1 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 801310c:	b978      	cbnz	r0, 801312e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801310e:	4620      	mov	r0, r4
 8013110:	f7fc fdcd 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013114:	f9b5 6000 	ldrsh.w	r6, [r5]
 8013118:	b150      	cbz	r0, 8013130 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801311a:	8026      	strh	r6, [r4, #0]
 801311c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013120:	8063      	strh	r3, [r4, #2]
 8013122:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8013126:	80a3      	strh	r3, [r4, #4]
 8013128:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801312c:	80e3      	strh	r3, [r4, #6]
 801312e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013130:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013134:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013138:	42b1      	cmp	r1, r6
 801313a:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801313e:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8013142:	460f      	mov	r7, r1
 8013144:	88ed      	ldrh	r5, [r5, #6]
 8013146:	bfa8      	it	ge
 8013148:	4637      	movge	r7, r6
 801314a:	4293      	cmp	r3, r2
 801314c:	4618      	mov	r0, r3
 801314e:	4466      	add	r6, ip
 8013150:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013154:	bfa8      	it	ge
 8013156:	4610      	movge	r0, r2
 8013158:	442a      	add	r2, r5
 801315a:	88e5      	ldrh	r5, [r4, #6]
 801315c:	4461      	add	r1, ip
 801315e:	b236      	sxth	r6, r6
 8013160:	8027      	strh	r7, [r4, #0]
 8013162:	442b      	add	r3, r5
 8013164:	b209      	sxth	r1, r1
 8013166:	b212      	sxth	r2, r2
 8013168:	8060      	strh	r0, [r4, #2]
 801316a:	b21b      	sxth	r3, r3
 801316c:	428e      	cmp	r6, r1
 801316e:	bfac      	ite	ge
 8013170:	ebc7 0106 	rsbge	r1, r7, r6
 8013174:	ebc7 0101 	rsblt	r1, r7, r1
 8013178:	429a      	cmp	r2, r3
 801317a:	bfac      	ite	ge
 801317c:	ebc0 0202 	rsbge	r2, r0, r2
 8013180:	ebc0 0203 	rsblt	r2, r0, r3
 8013184:	80a1      	strh	r1, [r4, #4]
 8013186:	80e2      	strh	r2, [r4, #6]
 8013188:	e7d1      	b.n	801312e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801318c <_ZN8touchgfx11Application11getInstanceEv>:
 801318c:	4b01      	ldr	r3, [pc, #4]	; (8013194 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801318e:	6818      	ldr	r0, [r3, #0]
 8013190:	4770      	bx	lr
 8013192:	bf00      	nop
 8013194:	240020c0 	.word	0x240020c0

08013198 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8013198:	2300      	movs	r3, #0
 801319a:	b510      	push	{r4, lr}
 801319c:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80131a0:	4604      	mov	r4, r0
 80131a2:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80131a6:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80131aa:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80131ae:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80131b2:	429a      	cmp	r2, r3
 80131b4:	d90e      	bls.n	80131d4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80131b6:	18e2      	adds	r2, r4, r3
 80131b8:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80131bc:	b122      	cbz	r2, 80131c8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80131be:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80131c2:	6803      	ldr	r3, [r0, #0]
 80131c4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80131c6:	4798      	blx	r3
 80131c8:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80131cc:	3301      	adds	r3, #1
 80131ce:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80131d2:	e7ea      	b.n	80131aa <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80131d4:	bd10      	pop	{r4, pc}

080131d6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80131d6:	2300      	movs	r3, #0
 80131d8:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80131dc:	30a4      	adds	r0, #164	; 0xa4
 80131de:	f820 3c24 	strh.w	r3, [r0, #-36]
 80131e2:	f802 3b01 	strb.w	r3, [r2], #1
 80131e6:	4282      	cmp	r2, r0
 80131e8:	d1fb      	bne.n	80131e2 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80131ea:	4770      	bx	lr

080131ec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80131ec:	b570      	push	{r4, r5, r6, lr}
 80131ee:	4c0b      	ldr	r4, [pc, #44]	; (801321c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80131f0:	4605      	mov	r5, r0
 80131f2:	460e      	mov	r6, r1
 80131f4:	6820      	ldr	r0, [r4, #0]
 80131f6:	b110      	cbz	r0, 80131fe <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80131f8:	6803      	ldr	r3, [r0, #0]
 80131fa:	695b      	ldr	r3, [r3, #20]
 80131fc:	4798      	blx	r3
 80131fe:	1d28      	adds	r0, r5, #4
 8013200:	f7ff ffe9 	bl	80131d6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8013204:	6026      	str	r6, [r4, #0]
 8013206:	6833      	ldr	r3, [r6, #0]
 8013208:	4630      	mov	r0, r6
 801320a:	68db      	ldr	r3, [r3, #12]
 801320c:	4798      	blx	r3
 801320e:	682b      	ldr	r3, [r5, #0]
 8013210:	4628      	mov	r0, r5
 8013212:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013214:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013218:	4718      	bx	r3
 801321a:	bf00      	nop
 801321c:	240020b0 	.word	0x240020b0

08013220 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8013220:	2300      	movs	r3, #0
 8013222:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8013226:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 801322a:	461a      	mov	r2, r3
 801322c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801322e:	461c      	mov	r4, r3
 8013230:	461d      	mov	r5, r3
 8013232:	459c      	cmp	ip, r3
 8013234:	dd1a      	ble.n	801326c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8013236:	18c6      	adds	r6, r0, r3
 8013238:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 801323c:	b16e      	cbz	r6, 801325a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801323e:	429a      	cmp	r2, r3
 8013240:	d008      	beq.n	8013254 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8013242:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8013246:	fa1f fe82 	uxth.w	lr, r2
 801324a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801324e:	1887      	adds	r7, r0, r2
 8013250:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8013254:	3201      	adds	r2, #1
 8013256:	3301      	adds	r3, #1
 8013258:	e7eb      	b.n	8013232 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801325a:	4299      	cmp	r1, r3
 801325c:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8013260:	bfa8      	it	ge
 8013262:	3501      	addge	r5, #1
 8013264:	429e      	cmp	r6, r3
 8013266:	bfc8      	it	gt
 8013268:	3401      	addgt	r4, #1
 801326a:	e7f4      	b.n	8013256 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 801326c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8013270:	1b49      	subs	r1, r1, r5
 8013272:	1b1b      	subs	r3, r3, r4
 8013274:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8013278:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801327c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8013280:	4293      	cmp	r3, r2
 8013282:	dd03      	ble.n	801328c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8013284:	3b01      	subs	r3, #1
 8013286:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801328a:	e7f7      	b.n	801327c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801328c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08013290 <_ZN8touchgfx11Application15handleTickEventEv>:
 8013290:	b570      	push	{r4, r5, r6, lr}
 8013292:	4d16      	ldr	r5, [pc, #88]	; (80132ec <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8013294:	4604      	mov	r4, r0
 8013296:	6828      	ldr	r0, [r5, #0]
 8013298:	b140      	cbz	r0, 80132ac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801329a:	7a03      	ldrb	r3, [r0, #8]
 801329c:	b933      	cbnz	r3, 80132ac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801329e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80132a2:	6803      	ldr	r3, [r0, #0]
 80132a4:	689b      	ldr	r3, [r3, #8]
 80132a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80132aa:	4718      	bx	r3
 80132ac:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80132b0:	4e0f      	ldr	r6, [pc, #60]	; (80132f0 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80132b2:	b973      	cbnz	r3, 80132d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80132b4:	b168      	cbz	r0, 80132d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80132b6:	7a03      	ldrb	r3, [r0, #8]
 80132b8:	b15b      	cbz	r3, 80132d2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80132ba:	6830      	ldr	r0, [r6, #0]
 80132bc:	b110      	cbz	r0, 80132c4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80132be:	6803      	ldr	r3, [r0, #0]
 80132c0:	691b      	ldr	r3, [r3, #16]
 80132c2:	4798      	blx	r3
 80132c4:	6828      	ldr	r0, [r5, #0]
 80132c6:	6803      	ldr	r3, [r0, #0]
 80132c8:	68db      	ldr	r3, [r3, #12]
 80132ca:	4798      	blx	r3
 80132cc:	2301      	movs	r3, #1
 80132ce:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80132d2:	3404      	adds	r4, #4
 80132d4:	4620      	mov	r0, r4
 80132d6:	f7ff ff5f 	bl	8013198 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80132da:	4620      	mov	r0, r4
 80132dc:	f7ff ffa0 	bl	8013220 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80132e0:	6830      	ldr	r0, [r6, #0]
 80132e2:	b110      	cbz	r0, 80132ea <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80132e4:	6803      	ldr	r3, [r0, #0]
 80132e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80132e8:	e7dd      	b.n	80132a6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80132ea:	bd70      	pop	{r4, r5, r6, pc}
 80132ec:	240020b4 	.word	0x240020b4
 80132f0:	240020b0 	.word	0x240020b0

080132f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80132f4:	4603      	mov	r3, r0
 80132f6:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80132fa:	2200      	movs	r2, #0
 80132fc:	801a      	strh	r2, [r3, #0]
 80132fe:	3308      	adds	r3, #8
 8013300:	f823 2c06 	strh.w	r2, [r3, #-6]
 8013304:	f823 2c04 	strh.w	r2, [r3, #-4]
 8013308:	f823 2c02 	strh.w	r2, [r3, #-2]
 801330c:	428b      	cmp	r3, r1
 801330e:	d1f5      	bne.n	80132fc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8013310:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8013314:	4770      	bx	lr
	...

08013318 <_ZN8touchgfx11ApplicationC1Ev>:
 8013318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801331a:	4b1d      	ldr	r3, [pc, #116]	; (8013390 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801331c:	4606      	mov	r6, r0
 801331e:	4604      	mov	r4, r0
 8013320:	2500      	movs	r5, #0
 8013322:	f846 3b04 	str.w	r3, [r6], #4
 8013326:	22a8      	movs	r2, #168	; 0xa8
 8013328:	2100      	movs	r1, #0
 801332a:	4630      	mov	r0, r6
 801332c:	f010 fa85 	bl	802383a <memset>
 8013330:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8013334:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8013338:	4f16      	ldr	r7, [pc, #88]	; (8013394 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801333a:	f7ff ffdb 	bl	80132f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801333e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8013342:	f7ff ffd7 	bl	80132f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8013346:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 801334a:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801334e:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8013352:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8013356:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 801335a:	490f      	ldr	r1, [pc, #60]	; (8013398 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801335c:	480f      	ldr	r0, [pc, #60]	; (801339c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801335e:	f00f ff2f 	bl	80231c0 <CRC_Lock>
 8013362:	4b0f      	ldr	r3, [pc, #60]	; (80133a0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8013364:	b158      	cbz	r0, 801337e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8013366:	801d      	strh	r5, [r3, #0]
 8013368:	2300      	movs	r3, #0
 801336a:	4a0e      	ldr	r2, [pc, #56]	; (80133a4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801336c:	4630      	mov	r0, r6
 801336e:	6013      	str	r3, [r2, #0]
 8013370:	4a0d      	ldr	r2, [pc, #52]	; (80133a8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8013372:	603b      	str	r3, [r7, #0]
 8013374:	6013      	str	r3, [r2, #0]
 8013376:	f7ff ff2e 	bl	80131d6 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801337a:	4620      	mov	r0, r4
 801337c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801337e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8013382:	2002      	movs	r0, #2
 8013384:	801a      	strh	r2, [r3, #0]
 8013386:	6038      	str	r0, [r7, #0]
 8013388:	f001 fa50 	bl	801482c <_ZN8touchgfx6Screen4drawEv>
 801338c:	e7ec      	b.n	8013368 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801338e:	bf00      	nop
 8013390:	080261e0 	.word	0x080261e0
 8013394:	240020b0 	.word	0x240020b0
 8013398:	b5e8b5cd 	.word	0xb5e8b5cd
 801339c:	f407a5c2 	.word	0xf407a5c2
 80133a0:	24000018 	.word	0x24000018
 80133a4:	240020c0 	.word	0x240020c0
 80133a8:	240020b4 	.word	0x240020b4

080133ac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80133ac:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80133b0:	3b01      	subs	r3, #1
 80133b2:	b29b      	uxth	r3, r3
 80133b4:	428b      	cmp	r3, r1
 80133b6:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80133ba:	b510      	push	{r4, lr}
 80133bc:	d908      	bls.n	80133d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80133be:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80133c2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80133c6:	681a      	ldr	r2, [r3, #0]
 80133c8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80133cc:	685a      	ldr	r2, [r3, #4]
 80133ce:	6062      	str	r2, [r4, #4]
 80133d0:	bd10      	pop	{r4, pc}
	...

080133d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80133d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133d8:	b08f      	sub	sp, #60	; 0x3c
 80133da:	4b8f      	ldr	r3, [pc, #572]	; (8013618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80133dc:	4683      	mov	fp, r0
 80133de:	ac0a      	add	r4, sp, #40	; 0x28
 80133e0:	e884 0006 	stmia.w	r4, {r1, r2}
 80133e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80133e8:	4620      	mov	r0, r4
 80133ea:	4b8c      	ldr	r3, [pc, #560]	; (801361c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80133ec:	f9b3 1000 	ldrsh.w	r1, [r3]
 80133f0:	f7ff fe10 	bl	8013014 <_ZN8touchgfx4Rect10restrictToEss>
 80133f4:	4620      	mov	r0, r4
 80133f6:	f7fc fc5a 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 80133fa:	2800      	cmp	r0, #0
 80133fc:	d16a      	bne.n	80134d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80133fe:	9403      	str	r4, [sp, #12]
 8013400:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8013404:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8013408:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801340c:	9301      	str	r3, [sp, #4]
 801340e:	35a4      	adds	r5, #164	; 0xa4
 8013410:	b15c      	cbz	r4, 801342a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8013412:	4629      	mov	r1, r5
 8013414:	9803      	ldr	r0, [sp, #12]
 8013416:	f7ff fe4d 	bl	80130b4 <_ZNK8touchgfx4Rect8includesERKS0_>
 801341a:	3c01      	subs	r4, #1
 801341c:	b118      	cbz	r0, 8013426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801341e:	b2a1      	uxth	r1, r4
 8013420:	9801      	ldr	r0, [sp, #4]
 8013422:	f7ff ffc3 	bl	80133ac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013426:	3d08      	subs	r5, #8
 8013428:	e7f2      	b.n	8013410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801342a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801342e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8013432:	f8cd a010 	str.w	sl, [sp, #16]
 8013436:	9302      	str	r3, [sp, #8]
 8013438:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801343c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8013440:	9306      	str	r3, [sp, #24]
 8013442:	445c      	add	r4, fp
 8013444:	2500      	movs	r5, #0
 8013446:	4626      	mov	r6, r4
 8013448:	f8cd a014 	str.w	sl, [sp, #20]
 801344c:	462f      	mov	r7, r5
 801344e:	9b05      	ldr	r3, [sp, #20]
 8013450:	2b00      	cmp	r3, #0
 8013452:	d073      	beq.n	801353c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8013454:	9903      	ldr	r1, [sp, #12]
 8013456:	4630      	mov	r0, r6
 8013458:	f7ff fdba 	bl	8012fd0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801345c:	b350      	cbz	r0, 80134b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801345e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8013462:	f9b6 c000 	ldrsh.w	ip, [r6]
 8013466:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801346a:	45e6      	cmp	lr, ip
 801346c:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8013470:	db33      	blt.n	80134da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8013472:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8013476:	88b3      	ldrh	r3, [r6, #4]
 8013478:	4472      	add	r2, lr
 801347a:	4463      	add	r3, ip
 801347c:	b212      	sxth	r2, r2
 801347e:	b21b      	sxth	r3, r3
 8013480:	429a      	cmp	r2, r3
 8013482:	dc2a      	bgt.n	80134da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8013484:	fa1f f289 	uxth.w	r2, r9
 8013488:	88f3      	ldrh	r3, [r6, #6]
 801348a:	45c8      	cmp	r8, r9
 801348c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013490:	4413      	add	r3, r2
 8013492:	fa1f fc88 	uxth.w	ip, r8
 8013496:	b29b      	uxth	r3, r3
 8013498:	fa0f fe83 	sxth.w	lr, r3
 801349c:	db0f      	blt.n	80134be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801349e:	eba3 030c 	sub.w	r3, r3, ip
 80134a2:	1ac9      	subs	r1, r1, r3
 80134a4:	b209      	sxth	r1, r1
 80134a6:	2900      	cmp	r1, #0
 80134a8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80134ac:	dd12      	ble.n	80134d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80134ae:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80134b2:	4605      	mov	r5, r0
 80134b4:	9b05      	ldr	r3, [sp, #20]
 80134b6:	3e08      	subs	r6, #8
 80134b8:	3b01      	subs	r3, #1
 80134ba:	9305      	str	r3, [sp, #20]
 80134bc:	e7c7      	b.n	801344e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80134be:	4461      	add	r1, ip
 80134c0:	b209      	sxth	r1, r1
 80134c2:	4571      	cmp	r1, lr
 80134c4:	dc38      	bgt.n	8013538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80134c6:	eba2 020c 	sub.w	r2, r2, ip
 80134ca:	b212      	sxth	r2, r2
 80134cc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80134d0:	2a00      	cmp	r2, #0
 80134d2:	dcee      	bgt.n	80134b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80134d4:	b00f      	add	sp, #60	; 0x3c
 80134d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134da:	45c8      	cmp	r8, r9
 80134dc:	db2c      	blt.n	8013538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80134de:	88f3      	ldrh	r3, [r6, #6]
 80134e0:	4499      	add	r9, r3
 80134e2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80134e6:	4498      	add	r8, r3
 80134e8:	fa0f f989 	sxth.w	r9, r9
 80134ec:	fa0f f888 	sxth.w	r8, r8
 80134f0:	45c1      	cmp	r9, r8
 80134f2:	db21      	blt.n	8013538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80134f4:	fa1f f28c 	uxth.w	r2, ip
 80134f8:	88b3      	ldrh	r3, [r6, #4]
 80134fa:	45e6      	cmp	lr, ip
 80134fc:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013500:	4413      	add	r3, r2
 8013502:	fa1f f88e 	uxth.w	r8, lr
 8013506:	b29b      	uxth	r3, r3
 8013508:	fa0f f983 	sxth.w	r9, r3
 801350c:	db0a      	blt.n	8013524 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801350e:	eba3 0308 	sub.w	r3, r3, r8
 8013512:	1ac9      	subs	r1, r1, r3
 8013514:	b209      	sxth	r1, r1
 8013516:	2900      	cmp	r1, #0
 8013518:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801351c:	ddda      	ble.n	80134d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801351e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8013522:	e7c6      	b.n	80134b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8013524:	4441      	add	r1, r8
 8013526:	b209      	sxth	r1, r1
 8013528:	4549      	cmp	r1, r9
 801352a:	dc05      	bgt.n	8013538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801352c:	eba2 0208 	sub.w	r2, r2, r8
 8013530:	b212      	sxth	r2, r2
 8013532:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8013536:	e7cb      	b.n	80134d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8013538:	4607      	mov	r7, r0
 801353a:	e7bb      	b.n	80134b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801353c:	2d00      	cmp	r5, #0
 801353e:	d181      	bne.n	8013444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8013540:	2f00      	cmp	r7, #0
 8013542:	f000 81dd 	beq.w	8013900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013546:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801354a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801354e:	b2b3      	uxth	r3, r6
 8013550:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8013554:	9305      	str	r3, [sp, #20]
 8013556:	9a05      	ldr	r2, [sp, #20]
 8013558:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801355c:	4413      	add	r3, r2
 801355e:	b2ba      	uxth	r2, r7
 8013560:	4492      	add	sl, r2
 8013562:	b29b      	uxth	r3, r3
 8013564:	fa1f fa8a 	uxth.w	sl, sl
 8013568:	fa0f f883 	sxth.w	r8, r3
 801356c:	fa0f f98a 	sxth.w	r9, sl
 8013570:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8013574:	9b04      	ldr	r3, [sp, #16]
 8013576:	2b00      	cmp	r3, #0
 8013578:	d052      	beq.n	8013620 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801357a:	9903      	ldr	r1, [sp, #12]
 801357c:	4620      	mov	r0, r4
 801357e:	f7ff fd27 	bl	8012fd0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013582:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8013586:	b1c0      	cbz	r0, 80135ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013588:	f9b4 e000 	ldrsh.w	lr, [r4]
 801358c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8013590:	4576      	cmp	r6, lr
 8013592:	dc22      	bgt.n	80135da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8013594:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013598:	44f4      	add	ip, lr
 801359a:	fa0f fc8c 	sxth.w	ip, ip
 801359e:	45e0      	cmp	r8, ip
 80135a0:	db1b      	blt.n	80135da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80135a2:	428f      	cmp	r7, r1
 80135a4:	fa1f fc81 	uxth.w	ip, r1
 80135a8:	88e1      	ldrh	r1, [r4, #6]
 80135aa:	dc0d      	bgt.n	80135c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80135ac:	ebaa 0c0c 	sub.w	ip, sl, ip
 80135b0:	f8a4 9002 	strh.w	r9, [r4, #2]
 80135b4:	eba1 010c 	sub.w	r1, r1, ip
 80135b8:	80e1      	strh	r1, [r4, #6]
 80135ba:	4628      	mov	r0, r5
 80135bc:	9904      	ldr	r1, [sp, #16]
 80135be:	3c08      	subs	r4, #8
 80135c0:	4605      	mov	r5, r0
 80135c2:	3901      	subs	r1, #1
 80135c4:	9104      	str	r1, [sp, #16]
 80135c6:	e7d3      	b.n	8013570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80135c8:	4461      	add	r1, ip
 80135ca:	b209      	sxth	r1, r1
 80135cc:	4549      	cmp	r1, r9
 80135ce:	dcf5      	bgt.n	80135bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80135d0:	eba2 0c0c 	sub.w	ip, r2, ip
 80135d4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80135d8:	e7ef      	b.n	80135ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80135da:	428f      	cmp	r7, r1
 80135dc:	dcee      	bgt.n	80135bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80135de:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80135e2:	4461      	add	r1, ip
 80135e4:	b209      	sxth	r1, r1
 80135e6:	4589      	cmp	r9, r1
 80135e8:	dbe8      	blt.n	80135bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80135ea:	4576      	cmp	r6, lr
 80135ec:	fa1f fc8e 	uxth.w	ip, lr
 80135f0:	88a1      	ldrh	r1, [r4, #4]
 80135f2:	dc07      	bgt.n	8013604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80135f4:	eba3 0c0c 	sub.w	ip, r3, ip
 80135f8:	f8a4 8000 	strh.w	r8, [r4]
 80135fc:	eba1 010c 	sub.w	r1, r1, ip
 8013600:	80a1      	strh	r1, [r4, #4]
 8013602:	e7da      	b.n	80135ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013604:	4461      	add	r1, ip
 8013606:	b209      	sxth	r1, r1
 8013608:	4588      	cmp	r8, r1
 801360a:	dbd7      	blt.n	80135bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801360c:	9905      	ldr	r1, [sp, #20]
 801360e:	eba1 0c0c 	sub.w	ip, r1, ip
 8013612:	f8a4 c004 	strh.w	ip, [r4, #4]
 8013616:	e7d0      	b.n	80135ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8013618:	2400206a 	.word	0x2400206a
 801361c:	24002068 	.word	0x24002068
 8013620:	2d00      	cmp	r5, #0
 8013622:	f000 816d 	beq.w	8013900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013626:	9b06      	ldr	r3, [sp, #24]
 8013628:	445b      	add	r3, fp
 801362a:	461c      	mov	r4, r3
 801362c:	9b02      	ldr	r3, [sp, #8]
 801362e:	3301      	adds	r3, #1
 8013630:	f000 8166 	beq.w	8013900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8013634:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8013638:	9803      	ldr	r0, [sp, #12]
 801363a:	4629      	mov	r1, r5
 801363c:	f7ff fd3a 	bl	80130b4 <_ZNK8touchgfx4Rect8includesERKS0_>
 8013640:	b120      	cbz	r0, 801364c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8013642:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013646:	9801      	ldr	r0, [sp, #4]
 8013648:	f7ff feb0 	bl	80133ac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801364c:	9903      	ldr	r1, [sp, #12]
 801364e:	4628      	mov	r0, r5
 8013650:	f7ff fcbe 	bl	8012fd0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013654:	2800      	cmp	r0, #0
 8013656:	f000 809c 	beq.w	8013792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801365a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801365e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8013662:	fa1f f189 	uxth.w	r1, r9
 8013666:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801366a:	9309      	str	r3, [sp, #36]	; 0x24
 801366c:	eb01 0c03 	add.w	ip, r1, r3
 8013670:	b283      	uxth	r3, r0
 8013672:	4548      	cmp	r0, r9
 8013674:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8013678:	fa1f fa8c 	uxth.w	sl, ip
 801367c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8013680:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8013684:	eb03 050c 	add.w	r5, r3, ip
 8013688:	b2ad      	uxth	r5, r5
 801368a:	9505      	str	r5, [sp, #20]
 801368c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8013690:	9504      	str	r5, [sp, #16]
 8013692:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8013696:	f340 8099 	ble.w	80137cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801369a:	1a5b      	subs	r3, r3, r1
 801369c:	4596      	cmp	lr, r2
 801369e:	fa0f f08a 	sxth.w	r0, sl
 80136a2:	b29b      	uxth	r3, r3
 80136a4:	b21e      	sxth	r6, r3
 80136a6:	dd2e      	ble.n	8013706 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80136a8:	9f02      	ldr	r7, [sp, #8]
 80136aa:	fa1f fe8e 	uxth.w	lr, lr
 80136ae:	b292      	uxth	r2, r2
 80136b0:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80136b4:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80136b8:	9f04      	ldr	r7, [sp, #16]
 80136ba:	ebae 0102 	sub.w	r1, lr, r2
 80136be:	44a6      	add	lr, r4
 80136c0:	1a3f      	subs	r7, r7, r0
 80136c2:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80136c6:	b289      	uxth	r1, r1
 80136c8:	4402      	add	r2, r0
 80136ca:	fa0f fe8e 	sxth.w	lr, lr
 80136ce:	b20d      	sxth	r5, r1
 80136d0:	b212      	sxth	r2, r2
 80136d2:	436f      	muls	r7, r5
 80136d4:	ebae 0202 	sub.w	r2, lr, r2
 80136d8:	4372      	muls	r2, r6
 80136da:	4297      	cmp	r7, r2
 80136dc:	db09      	blt.n	80136f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80136de:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80136e2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80136e6:	449c      	add	ip, r3
 80136e8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80136ec:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80136f0:	e686      	b.n	8013400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80136f2:	4421      	add	r1, r4
 80136f4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80136f8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80136fc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8013700:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8013704:	e67c      	b.n	8013400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013706:	9f04      	ldr	r7, [sp, #16]
 8013708:	42b8      	cmp	r0, r7
 801370a:	da27      	bge.n	801375c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801370c:	9902      	ldr	r1, [sp, #8]
 801370e:	1a3f      	subs	r7, r7, r0
 8013710:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8013714:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8013718:	eb05 010e 	add.w	r1, r5, lr
 801371c:	fa1f f881 	uxth.w	r8, r1
 8013720:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8013724:	4411      	add	r1, r2
 8013726:	fa0f f988 	sxth.w	r9, r8
 801372a:	eba2 020e 	sub.w	r2, r2, lr
 801372e:	eba1 0108 	sub.w	r1, r1, r8
 8013732:	4372      	muls	r2, r6
 8013734:	b289      	uxth	r1, r1
 8013736:	fa0f f881 	sxth.w	r8, r1
 801373a:	fb08 f707 	mul.w	r7, r8, r7
 801373e:	42ba      	cmp	r2, r7
 8013740:	dc06      	bgt.n	8013750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8013742:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8013746:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801374a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801374e:	e7ca      	b.n	80136e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8013750:	4429      	add	r1, r5
 8013752:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8013756:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801375a:	e651      	b.n	8013400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801375c:	9805      	ldr	r0, [sp, #20]
 801375e:	2d06      	cmp	r5, #6
 8013760:	ebaa 0000 	sub.w	r0, sl, r0
 8013764:	b280      	uxth	r0, r0
 8013766:	fa0f fe80 	sxth.w	lr, r0
 801376a:	d817      	bhi.n	801379c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801376c:	9b04      	ldr	r3, [sp, #16]
 801376e:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8013772:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8013776:	1c6b      	adds	r3, r5, #1
 8013778:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801377c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8013780:	9b01      	ldr	r3, [sp, #4]
 8013782:	9801      	ldr	r0, [sp, #4]
 8013784:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8013788:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801378c:	805a      	strh	r2, [r3, #2]
 801378e:	809e      	strh	r6, [r3, #4]
 8013790:	80d9      	strh	r1, [r3, #6]
 8013792:	9b02      	ldr	r3, [sp, #8]
 8013794:	3c08      	subs	r4, #8
 8013796:	3b01      	subs	r3, #1
 8013798:	9302      	str	r3, [sp, #8]
 801379a:	e747      	b.n	801362c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801379c:	9a02      	ldr	r2, [sp, #8]
 801379e:	45b6      	cmp	lr, r6
 80137a0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80137a4:	db0d      	blt.n	80137c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80137a6:	449c      	add	ip, r3
 80137a8:	445a      	add	r2, fp
 80137aa:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80137ae:	fa1f fc8c 	uxth.w	ip, ip
 80137b2:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80137b6:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80137ba:	448c      	add	ip, r1
 80137bc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80137c0:	e61e      	b.n	8013400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80137c2:	445a      	add	r2, fp
 80137c4:	4484      	add	ip, r0
 80137c6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80137ca:	e78f      	b.n	80136ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80137cc:	fa1f f18e 	uxth.w	r1, lr
 80137d0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80137d4:	b293      	uxth	r3, r2
 80137d6:	4596      	cmp	lr, r2
 80137d8:	eb01 0806 	add.w	r8, r1, r6
 80137dc:	9306      	str	r3, [sp, #24]
 80137de:	fa1f f888 	uxth.w	r8, r8
 80137e2:	9f06      	ldr	r7, [sp, #24]
 80137e4:	fa0f f388 	sxth.w	r3, r8
 80137e8:	9307      	str	r3, [sp, #28]
 80137ea:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80137ee:	443b      	add	r3, r7
 80137f0:	b29b      	uxth	r3, r3
 80137f2:	9308      	str	r3, [sp, #32]
 80137f4:	da24      	bge.n	8013840 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80137f6:	9905      	ldr	r1, [sp, #20]
 80137f8:	eba3 0308 	sub.w	r3, r3, r8
 80137fc:	eba2 020e 	sub.w	r2, r2, lr
 8013800:	eba9 0000 	sub.w	r0, r9, r0
 8013804:	ebaa 0401 	sub.w	r4, sl, r1
 8013808:	b29b      	uxth	r3, r3
 801380a:	b2a4      	uxth	r4, r4
 801380c:	b219      	sxth	r1, r3
 801380e:	b225      	sxth	r5, r4
 8013810:	4348      	muls	r0, r1
 8013812:	436a      	muls	r2, r5
 8013814:	4282      	cmp	r2, r0
 8013816:	9a02      	ldr	r2, [sp, #8]
 8013818:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801381c:	445a      	add	r2, fp
 801381e:	dc06      	bgt.n	801382e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8013820:	9b07      	ldr	r3, [sp, #28]
 8013822:	44a4      	add	ip, r4
 8013824:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8013828:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801382c:	e75e      	b.n	80136ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801382e:	9904      	ldr	r1, [sp, #16]
 8013830:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8013834:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8013838:	4433      	add	r3, r6
 801383a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801383e:	e5df      	b.n	8013400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013840:	9f06      	ldr	r7, [sp, #24]
 8013842:	9b04      	ldr	r3, [sp, #16]
 8013844:	1bc9      	subs	r1, r1, r7
 8013846:	fa0f f78a 	sxth.w	r7, sl
 801384a:	b289      	uxth	r1, r1
 801384c:	429f      	cmp	r7, r3
 801384e:	fa0f fe81 	sxth.w	lr, r1
 8013852:	dd23      	ble.n	801389c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8013854:	9a05      	ldr	r2, [sp, #20]
 8013856:	eba9 0000 	sub.w	r0, r9, r0
 801385a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801385e:	ebaa 0202 	sub.w	r2, sl, r2
 8013862:	9d07      	ldr	r5, [sp, #28]
 8013864:	fb0e f000 	mul.w	r0, lr, r0
 8013868:	b292      	uxth	r2, r2
 801386a:	eba5 0a03 	sub.w	sl, r5, r3
 801386e:	9b02      	ldr	r3, [sp, #8]
 8013870:	b214      	sxth	r4, r2
 8013872:	00db      	lsls	r3, r3, #3
 8013874:	fb04 fa0a 	mul.w	sl, r4, sl
 8013878:	445b      	add	r3, fp
 801387a:	4550      	cmp	r0, sl
 801387c:	db03      	blt.n	8013886 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801387e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8013882:	4494      	add	ip, r2
 8013884:	e732      	b.n	80136ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8013886:	9a04      	ldr	r2, [sp, #16]
 8013888:	4431      	add	r1, r6
 801388a:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 801388e:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8013892:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8013896:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801389a:	e75c      	b.n	8013756 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801389c:	9b08      	ldr	r3, [sp, #32]
 801389e:	2d06      	cmp	r5, #6
 80138a0:	eba3 0308 	sub.w	r3, r3, r8
 80138a4:	b29b      	uxth	r3, r3
 80138a6:	b218      	sxth	r0, r3
 80138a8:	d813      	bhi.n	80138d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80138aa:	9b07      	ldr	r3, [sp, #28]
 80138ac:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80138b0:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80138b4:	1c6b      	adds	r3, r5, #1
 80138b6:	9901      	ldr	r1, [sp, #4]
 80138b8:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80138bc:	9b01      	ldr	r3, [sp, #4]
 80138be:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80138c2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80138c6:	805a      	strh	r2, [r3, #2]
 80138c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80138ca:	f8a3 e006 	strh.w	lr, [r3, #6]
 80138ce:	809a      	strh	r2, [r3, #4]
 80138d0:	e75f      	b.n	8013792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80138d2:	9c02      	ldr	r4, [sp, #8]
 80138d4:	4570      	cmp	r0, lr
 80138d6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80138da:	db0d      	blt.n	80138f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80138dc:	4431      	add	r1, r6
 80138de:	9b06      	ldr	r3, [sp, #24]
 80138e0:	445c      	add	r4, fp
 80138e2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80138e6:	b289      	uxth	r1, r1
 80138e8:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80138ec:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80138f0:	4419      	add	r1, r3
 80138f2:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80138f6:	e583      	b.n	8013400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80138f8:	445c      	add	r4, fp
 80138fa:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80138fe:	e79b      	b.n	8013838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8013900:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8013904:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8013908:	1e65      	subs	r5, r4, #1
 801390a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801390e:	b2ad      	uxth	r5, r5
 8013910:	42b5      	cmp	r5, r6
 8013912:	d044      	beq.n	801399e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8013914:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8013918:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801391c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8013920:	4282      	cmp	r2, r0
 8013922:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8013926:	d11f      	bne.n	8013968 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8013928:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801392c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8013930:	459c      	cmp	ip, r3
 8013932:	d119      	bne.n	8013968 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8013934:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8013938:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801393c:	19d8      	adds	r0, r3, r7
 801393e:	b200      	sxth	r0, r0
 8013940:	4288      	cmp	r0, r1
 8013942:	d109      	bne.n	8013958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8013944:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8013948:	4413      	add	r3, r2
 801394a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801394e:	4629      	mov	r1, r5
 8013950:	9801      	ldr	r0, [sp, #4]
 8013952:	f7ff fd2b 	bl	80133ac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013956:	e003      	b.n	8013960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013958:	4411      	add	r1, r2
 801395a:	b209      	sxth	r1, r1
 801395c:	42b9      	cmp	r1, r7
 801395e:	d0f3      	beq.n	8013948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8013960:	3d01      	subs	r5, #1
 8013962:	3c08      	subs	r4, #8
 8013964:	b2ad      	uxth	r5, r5
 8013966:	e7d3      	b.n	8013910 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8013968:	42b9      	cmp	r1, r7
 801396a:	d1f9      	bne.n	8013960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801396c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8013970:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8013974:	4299      	cmp	r1, r3
 8013976:	d1f3      	bne.n	8013960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8013978:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801397c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013980:	181f      	adds	r7, r3, r0
 8013982:	b23f      	sxth	r7, r7
 8013984:	42ba      	cmp	r2, r7
 8013986:	d105      	bne.n	8013994 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8013988:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801398c:	440b      	add	r3, r1
 801398e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013992:	e7dc      	b.n	801394e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8013994:	440a      	add	r2, r1
 8013996:	b212      	sxth	r2, r2
 8013998:	4290      	cmp	r0, r2
 801399a:	d1e1      	bne.n	8013960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801399c:	e7f6      	b.n	801398c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801399e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80139a2:	2e07      	cmp	r6, #7
 80139a4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80139a8:	d812      	bhi.n	80139d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80139aa:	1c75      	adds	r5, r6, #1
 80139ac:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80139b0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80139b4:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80139b8:	9d01      	ldr	r5, [sp, #4]
 80139ba:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80139be:	442c      	add	r4, r5
 80139c0:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80139c4:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80139c8:	8061      	strh	r1, [r4, #2]
 80139ca:	80a2      	strh	r2, [r4, #4]
 80139cc:	80e3      	strh	r3, [r4, #6]
 80139ce:	e581      	b.n	80134d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80139d0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80139d4:	3e01      	subs	r6, #1
 80139d6:	445c      	add	r4, fp
 80139d8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80139dc:	f04f 37ff 	mov.w	r7, #4294967295
 80139e0:	2500      	movs	r5, #0
 80139e2:	9305      	str	r3, [sp, #20]
 80139e4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80139e8:	1e72      	subs	r2, r6, #1
 80139ea:	9302      	str	r3, [sp, #8]
 80139ec:	4691      	mov	r9, r2
 80139ee:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80139f2:	9304      	str	r3, [sp, #16]
 80139f4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80139f8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80139fc:	6818      	ldr	r0, [r3, #0]
 80139fe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013a02:	9207      	str	r2, [sp, #28]
 8013a04:	bf16      	itet	ne
 8013a06:	9905      	ldrne	r1, [sp, #20]
 8013a08:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8013a0c:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8013a10:	9306      	str	r3, [sp, #24]
 8013a12:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8013a16:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8013a1a:	fb18 f801 	smulbb	r8, r8, r1
 8013a1e:	6859      	ldr	r1, [r3, #4]
 8013a20:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013a24:	4671      	mov	r1, lr
 8013a26:	a80c      	add	r0, sp, #48	; 0x30
 8013a28:	f7ff fb6a 	bl	8013100 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013a2c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8013a30:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8013a34:	f04f 0c08 	mov.w	ip, #8
 8013a38:	9b04      	ldr	r3, [sp, #16]
 8013a3a:	9a02      	ldr	r2, [sp, #8]
 8013a3c:	fb10 f001 	smulbb	r0, r0, r1
 8013a40:	fb02 8803 	mla	r8, r2, r3, r8
 8013a44:	eba0 0108 	sub.w	r1, r0, r8
 8013a48:	fb90 f0fc 	sdiv	r0, r0, ip
 8013a4c:	4288      	cmp	r0, r1
 8013a4e:	dc20      	bgt.n	8013a92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8013a50:	4551      	cmp	r1, sl
 8013a52:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8013a56:	da03      	bge.n	8013a60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8013a58:	b1d9      	cbz	r1, 8013a92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8013a5a:	468a      	mov	sl, r1
 8013a5c:	464f      	mov	r7, r9
 8013a5e:	4635      	mov	r5, r6
 8013a60:	f109 39ff 	add.w	r9, r9, #4294967295
 8013a64:	f119 0f02 	cmn.w	r9, #2
 8013a68:	d1c6      	bne.n	80139f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8013a6a:	4616      	mov	r6, r2
 8013a6c:	3201      	adds	r2, #1
 8013a6e:	f1a4 0408 	sub.w	r4, r4, #8
 8013a72:	d1b7      	bne.n	80139e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8013a74:	9b01      	ldr	r3, [sp, #4]
 8013a76:	b2ac      	uxth	r4, r5
 8013a78:	00ed      	lsls	r5, r5, #3
 8013a7a:	1958      	adds	r0, r3, r5
 8013a7c:	1c7b      	adds	r3, r7, #1
 8013a7e:	d10b      	bne.n	8013a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8013a80:	4601      	mov	r1, r0
 8013a82:	9803      	ldr	r0, [sp, #12]
 8013a84:	f7ff fb3c 	bl	8013100 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013a88:	4621      	mov	r1, r4
 8013a8a:	9801      	ldr	r0, [sp, #4]
 8013a8c:	f7ff fc8e 	bl	80133ac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013a90:	e4b6      	b.n	8013400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8013a92:	464f      	mov	r7, r9
 8013a94:	4635      	mov	r5, r6
 8013a96:	e7ed      	b.n	8013a74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8013a98:	9b01      	ldr	r3, [sp, #4]
 8013a9a:	00ff      	lsls	r7, r7, #3
 8013a9c:	445d      	add	r5, fp
 8013a9e:	19d9      	adds	r1, r3, r7
 8013aa0:	445f      	add	r7, fp
 8013aa2:	f7ff fb2d 	bl	8013100 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8013aa6:	9b03      	ldr	r3, [sp, #12]
 8013aa8:	cb03      	ldmia	r3!, {r0, r1}
 8013aaa:	9b03      	ldr	r3, [sp, #12]
 8013aac:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8013ab0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8013ab4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8013ab8:	6869      	ldr	r1, [r5, #4]
 8013aba:	c303      	stmia	r3!, {r0, r1}
 8013abc:	e7e4      	b.n	8013a88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 8013abe:	bf00      	nop

08013ac0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8013ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ac4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8013ac8:	b09b      	sub	sp, #108	; 0x6c
 8013aca:	4604      	mov	r4, r0
 8013acc:	4630      	mov	r0, r6
 8013ace:	f7fc f8ee 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013ad2:	4605      	mov	r5, r0
 8013ad4:	b948      	cbnz	r0, 8013aea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8013ad6:	6823      	ldr	r3, [r4, #0]
 8013ad8:	4620      	mov	r0, r4
 8013ada:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013adc:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013ae0:	4798      	blx	r3
 8013ae2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8013ae6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8013aea:	4bc5      	ldr	r3, [pc, #788]	; (8013e00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8013aec:	681b      	ldr	r3, [r3, #0]
 8013aee:	2b00      	cmp	r3, #0
 8013af0:	d03f      	beq.n	8013b72 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8013af2:	4dc4      	ldr	r5, [pc, #784]	; (8013e04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8013af4:	4628      	mov	r0, r5
 8013af6:	f7fc f8da 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013afa:	4606      	mov	r6, r0
 8013afc:	2800      	cmp	r0, #0
 8013afe:	d138      	bne.n	8013b72 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8013b00:	4628      	mov	r0, r5
 8013b02:	f7ff f99b 	bl	8012e3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8013b06:	6823      	ldr	r3, [r4, #0]
 8013b08:	6829      	ldr	r1, [r5, #0]
 8013b0a:	4620      	mov	r0, r4
 8013b0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013b0e:	686a      	ldr	r2, [r5, #4]
 8013b10:	4798      	blx	r3
 8013b12:	802e      	strh	r6, [r5, #0]
 8013b14:	806e      	strh	r6, [r5, #2]
 8013b16:	80ae      	strh	r6, [r5, #4]
 8013b18:	80ee      	strh	r6, [r5, #6]
 8013b1a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8013b1e:	4dba      	ldr	r5, [pc, #744]	; (8013e08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8013b20:	4640      	mov	r0, r8
 8013b22:	f7ff fbe7 	bl	80132f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8013b26:	882e      	ldrh	r6, [r5, #0]
 8013b28:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8013b2c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8013b30:	4633      	mov	r3, r6
 8013b32:	42bb      	cmp	r3, r7
 8013b34:	d224      	bcs.n	8013b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8013b36:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8013b3a:	2907      	cmp	r1, #7
 8013b3c:	d816      	bhi.n	8013b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8013b3e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8013b42:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8013b46:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8013b4a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8013b4e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8013b52:	1c4a      	adds	r2, r1, #1
 8013b54:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8013b58:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8013b5c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8013b60:	f8a2 a002 	strh.w	sl, [r2, #2]
 8013b64:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013b68:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013b6c:	3301      	adds	r3, #1
 8013b6e:	b29b      	uxth	r3, r3
 8013b70:	e7df      	b.n	8013b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8013b72:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8013b76:	2b00      	cmp	r3, #0
 8013b78:	d1cf      	bne.n	8013b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8013b7a:	b01b      	add	sp, #108	; 0x6c
 8013b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b80:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8013b84:	42b3      	cmp	r3, r6
 8013b86:	d90c      	bls.n	8013ba2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8013b88:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8013b8c:	6822      	ldr	r2, [r4, #0]
 8013b8e:	3601      	adds	r6, #1
 8013b90:	4620      	mov	r0, r4
 8013b92:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8013b94:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8013b98:	b2b6      	uxth	r6, r6
 8013b9a:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8013b9e:	47b8      	blx	r7
 8013ba0:	e7ee      	b.n	8013b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8013ba2:	4a9a      	ldr	r2, [pc, #616]	; (8013e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8013ba4:	6813      	ldr	r3, [r2, #0]
 8013ba6:	4691      	mov	r9, r2
 8013ba8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8013bac:	2b01      	cmp	r3, #1
 8013bae:	f040 80e0 	bne.w	8013d72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 8013bb2:	8829      	ldrh	r1, [r5, #0]
 8013bb4:	2600      	movs	r6, #0
 8013bb6:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8013bba:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8013bbe:	33ae      	adds	r3, #174	; 0xae
 8013bc0:	428f      	cmp	r7, r1
 8013bc2:	f103 0308 	add.w	r3, r3, #8
 8013bc6:	dd0a      	ble.n	8013bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8013bc8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8013bcc:	3101      	adds	r1, #1
 8013bce:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8013bd2:	4402      	add	r2, r0
 8013bd4:	b212      	sxth	r2, r2
 8013bd6:	4296      	cmp	r6, r2
 8013bd8:	bfb8      	it	lt
 8013bda:	4616      	movlt	r6, r2
 8013bdc:	e7f0      	b.n	8013bc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8013bde:	4b8c      	ldr	r3, [pc, #560]	; (8013e10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8013be0:	f8df 9228 	ldr.w	r9, [pc, #552]	; 8013e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8013be4:	881b      	ldrh	r3, [r3, #0]
 8013be6:	2b0f      	cmp	r3, #15
 8013be8:	bf8c      	ite	hi
 8013bea:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8013bee:	f04f 0b01 	movls.w	fp, #1
 8013bf2:	2300      	movs	r3, #0
 8013bf4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8013bf8:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8013bfc:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8013c00:	4b82      	ldr	r3, [pc, #520]	; (8013e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8013c02:	4438      	add	r0, r7
 8013c04:	b207      	sxth	r7, r0
 8013c06:	6818      	ldr	r0, [r3, #0]
 8013c08:	42b7      	cmp	r7, r6
 8013c0a:	6803      	ldr	r3, [r0, #0]
 8013c0c:	f280 8083 	bge.w	8013d16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8013c10:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8013c14:	4798      	blx	r3
 8013c16:	eb07 030b 	add.w	r3, r7, fp
 8013c1a:	4298      	cmp	r0, r3
 8013c1c:	da07      	bge.n	8013c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8013c1e:	42b0      	cmp	r0, r6
 8013c20:	da05      	bge.n	8013c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8013c22:	4287      	cmp	r7, r0
 8013c24:	dd6c      	ble.n	8013d00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8013c26:	2f00      	cmp	r7, #0
 8013c28:	dd6a      	ble.n	8013d00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8013c2a:	4630      	mov	r0, r6
 8013c2c:	e004      	b.n	8013c38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 8013c2e:	4287      	cmp	r7, r0
 8013c30:	dcfb      	bgt.n	8013c2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 8013c32:	42b0      	cmp	r0, r6
 8013c34:	bfa8      	it	ge
 8013c36:	4630      	movge	r0, r6
 8013c38:	4b76      	ldr	r3, [pc, #472]	; (8013e14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8013c3a:	1bc0      	subs	r0, r0, r7
 8013c3c:	2200      	movs	r2, #0
 8013c3e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8013c42:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013c46:	882f      	ldrh	r7, [r5, #0]
 8013c48:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013c4c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013c50:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013c54:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8013c58:	42bb      	cmp	r3, r7
 8013c5a:	d9cd      	bls.n	8013bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8013c5c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8013c60:	ab07      	add	r3, sp, #28
 8013c62:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8013c66:	6851      	ldr	r1, [r2, #4]
 8013c68:	c303      	stmia	r3!, {r0, r1}
 8013c6a:	a905      	add	r1, sp, #20
 8013c6c:	a807      	add	r0, sp, #28
 8013c6e:	f7ff f9af 	bl	8012fd0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013c72:	2800      	cmp	r0, #0
 8013c74:	d04c      	beq.n	8013d10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8013c76:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8013c7a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8013c7e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8013c82:	4686      	mov	lr, r0
 8013c84:	4290      	cmp	r0, r2
 8013c86:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8013c8a:	4450      	add	r0, sl
 8013c8c:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8013c90:	bfb8      	it	lt
 8013c92:	4696      	movlt	lr, r2
 8013c94:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013c98:	4452      	add	r2, sl
 8013c9a:	b280      	uxth	r0, r0
 8013c9c:	4299      	cmp	r1, r3
 8013c9e:	468c      	mov	ip, r1
 8013ca0:	b292      	uxth	r2, r2
 8013ca2:	9302      	str	r3, [sp, #8]
 8013ca4:	bfb8      	it	lt
 8013ca6:	469c      	movlt	ip, r3
 8013ca8:	b203      	sxth	r3, r0
 8013caa:	fa0f fa82 	sxth.w	sl, r2
 8013cae:	f8ad e01c 	strh.w	lr, [sp, #28]
 8013cb2:	f8ad c01e 	strh.w	ip, [sp, #30]
 8013cb6:	4553      	cmp	r3, sl
 8013cb8:	bfb8      	it	lt
 8013cba:	4602      	movlt	r2, r0
 8013cbc:	9b02      	ldr	r3, [sp, #8]
 8013cbe:	eba2 020e 	sub.w	r2, r2, lr
 8013cc2:	f8ad 2020 	strh.w	r2, [sp, #32]
 8013cc6:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8013cca:	4411      	add	r1, r2
 8013ccc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013cd0:	4413      	add	r3, r2
 8013cd2:	b289      	uxth	r1, r1
 8013cd4:	b29b      	uxth	r3, r3
 8013cd6:	b208      	sxth	r0, r1
 8013cd8:	b21a      	sxth	r2, r3
 8013cda:	4290      	cmp	r0, r2
 8013cdc:	bfb8      	it	lt
 8013cde:	460b      	movlt	r3, r1
 8013ce0:	eba3 030c 	sub.w	r3, r3, ip
 8013ce4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013ce8:	a807      	add	r0, sp, #28
 8013cea:	f7fb ffe0 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013cee:	b920      	cbnz	r0, 8013cfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8013cf0:	6823      	ldr	r3, [r4, #0]
 8013cf2:	a907      	add	r1, sp, #28
 8013cf4:	4620      	mov	r0, r4
 8013cf6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013cf8:	4798      	blx	r3
 8013cfa:	3701      	adds	r7, #1
 8013cfc:	b2bf      	uxth	r7, r7
 8013cfe:	e7a9      	b.n	8013c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8013d00:	f8d9 0000 	ldr.w	r0, [r9]
 8013d04:	2101      	movs	r1, #1
 8013d06:	6803      	ldr	r3, [r0, #0]
 8013d08:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8013d0c:	4798      	blx	r3
 8013d0e:	e773      	b.n	8013bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8013d10:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8013d14:	e7e8      	b.n	8013ce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8013d16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013d18:	4798      	blx	r3
 8013d1a:	4b3f      	ldr	r3, [pc, #252]	; (8013e18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8013d1c:	781b      	ldrb	r3, [r3, #0]
 8013d1e:	2b00      	cmp	r3, #0
 8013d20:	f43f af2b 	beq.w	8013b7a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8013d24:	2300      	movs	r3, #0
 8013d26:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8013d2a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8013d2e:	882b      	ldrh	r3, [r5, #0]
 8013d30:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8013d34:	42ab      	cmp	r3, r5
 8013d36:	f4bf af20 	bcs.w	8013b7a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8013d3a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8013d3e:	2907      	cmp	r1, #7
 8013d40:	d814      	bhi.n	8013d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 8013d42:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8013d46:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8013d4a:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8013d4e:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8013d52:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8013d56:	1c4a      	adds	r2, r1, #1
 8013d58:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8013d5c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8013d60:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8013d64:	f8a2 c002 	strh.w	ip, [r2, #2]
 8013d68:	8097      	strh	r7, [r2, #4]
 8013d6a:	80d6      	strh	r6, [r2, #6]
 8013d6c:	3301      	adds	r3, #1
 8013d6e:	b29b      	uxth	r3, r3
 8013d70:	e7e0      	b.n	8013d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 8013d72:	2b02      	cmp	r3, #2
 8013d74:	f040 8133 	bne.w	8013fde <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8013d78:	4b28      	ldr	r3, [pc, #160]	; (8013e1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8013d7a:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8013d7e:	781b      	ldrb	r3, [r3, #0]
 8013d80:	2b01      	cmp	r3, #1
 8013d82:	f000 8098 	beq.w	8013eb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8013d86:	882a      	ldrh	r2, [r5, #0]
 8013d88:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8013d8c:	3201      	adds	r2, #1
 8013d8e:	b292      	uxth	r2, r2
 8013d90:	2900      	cmp	r1, #0
 8013d92:	d0c2      	beq.n	8013d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8013d94:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8013d98:	4694      	mov	ip, r2
 8013d9a:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8013d9e:	f04f 0900 	mov.w	r9, #0
 8013da2:	441e      	add	r6, r3
 8013da4:	b236      	sxth	r6, r6
 8013da6:	fa1f f38c 	uxth.w	r3, ip
 8013daa:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8013dae:	4299      	cmp	r1, r3
 8013db0:	f240 80be 	bls.w	8013f30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8013db4:	4427      	add	r7, r4
 8013db6:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8013dba:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8013dbe:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8013dc2:	4283      	cmp	r3, r0
 8013dc4:	f340 80a0 	ble.w	8013f08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8013dc8:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8013dcc:	46e1      	mov	r9, ip
 8013dce:	4406      	add	r6, r0
 8013dd0:	b236      	sxth	r6, r6
 8013dd2:	429e      	cmp	r6, r3
 8013dd4:	bfa8      	it	ge
 8013dd6:	461e      	movge	r6, r3
 8013dd8:	f10c 0c01 	add.w	ip, ip, #1
 8013ddc:	e7e3      	b.n	8013da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 8013dde:	d10a      	bne.n	8013df6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 8013de0:	4562      	cmp	r2, ip
 8013de2:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8013de6:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8013dea:	bfb8      	it	lt
 8013dec:	4662      	movlt	r2, ip
 8013dee:	4288      	cmp	r0, r1
 8013df0:	bfb8      	it	lt
 8013df2:	461f      	movlt	r7, r3
 8013df4:	e086      	b.n	8013f04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8013df6:	428a      	cmp	r2, r1
 8013df8:	bfb8      	it	lt
 8013dfa:	460a      	movlt	r2, r1
 8013dfc:	e082      	b.n	8013f04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8013dfe:	bf00      	nop
 8013e00:	240020ac 	.word	0x240020ac
 8013e04:	240020b8 	.word	0x240020b8
 8013e08:	24000018 	.word	0x24000018
 8013e0c:	24002074 	.word	0x24002074
 8013e10:	2400206a 	.word	0x2400206a
 8013e14:	24002068 	.word	0x24002068
 8013e18:	24002072 	.word	0x24002072
 8013e1c:	2400206c 	.word	0x2400206c
 8013e20:	19a1      	adds	r1, r4, r6
 8013e22:	ab07      	add	r3, sp, #28
 8013e24:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8013e28:	6849      	ldr	r1, [r1, #4]
 8013e2a:	c303      	stmia	r3!, {r0, r1}
 8013e2c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8013e30:	a807      	add	r0, sp, #28
 8013e32:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013e36:	2b13      	cmp	r3, #19
 8013e38:	440b      	add	r3, r1
 8013e3a:	bfd8      	it	le
 8013e3c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8013e40:	1a9b      	subs	r3, r3, r2
 8013e42:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013e46:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013e4a:	f7ff f811 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e4e:	a807      	add	r0, sp, #28
 8013e50:	f7fb ff2d 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013e54:	bb78      	cbnz	r0, 8013eb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8013e56:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8013e5a:	4426      	add	r6, r4
 8013e5c:	f8d9 0000 	ldr.w	r0, [r9]
 8013e60:	f1bc 0f14 	cmp.w	ip, #20
 8013e64:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013e68:	f8d0 e000 	ldr.w	lr, [r0]
 8013e6c:	bfa8      	it	ge
 8013e6e:	f04f 0c14 	movge.w	ip, #20
 8013e72:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8013e76:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013e7a:	fa1f fc8c 	uxth.w	ip, ip
 8013e7e:	f8cd c000 	str.w	ip, [sp]
 8013e82:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8013e86:	47d8      	blx	fp
 8013e88:	4683      	mov	fp, r0
 8013e8a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013e8e:	a807      	add	r0, sp, #28
 8013e90:	f7fe ffd4 	bl	8012e3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8013e94:	6823      	ldr	r3, [r4, #0]
 8013e96:	4620      	mov	r0, r4
 8013e98:	a907      	add	r1, sp, #28
 8013e9a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013e9c:	4798      	blx	r3
 8013e9e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8013ea2:	eba0 000b 	sub.w	r0, r0, fp
 8013ea6:	b200      	sxth	r0, r0
 8013ea8:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8013eac:	b918      	cbnz	r0, 8013eb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8013eae:	b2b9      	uxth	r1, r7
 8013eb0:	4650      	mov	r0, sl
 8013eb2:	f7ff fa7b 	bl	80133ac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013eb6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8013eba:	f1bb 0f00 	cmp.w	fp, #0
 8013ebe:	f43f af2c 	beq.w	8013d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8013ec2:	882b      	ldrh	r3, [r5, #0]
 8013ec4:	2700      	movs	r7, #0
 8013ec6:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8013eca:	3301      	adds	r3, #1
 8013ecc:	b29b      	uxth	r3, r3
 8013ece:	b299      	uxth	r1, r3
 8013ed0:	00fe      	lsls	r6, r7, #3
 8013ed2:	458b      	cmp	fp, r1
 8013ed4:	d9a4      	bls.n	8013e20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 8013ed6:	4426      	add	r6, r4
 8013ed8:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8013edc:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8013ee0:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8013ee4:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8013ee8:	4408      	add	r0, r1
 8013eea:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8013eee:	4461      	add	r1, ip
 8013ef0:	b200      	sxth	r0, r0
 8013ef2:	b209      	sxth	r1, r1
 8013ef4:	4288      	cmp	r0, r1
 8013ef6:	f6bf af72 	bge.w	8013dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8013efa:	4584      	cmp	ip, r0
 8013efc:	4662      	mov	r2, ip
 8013efe:	461f      	mov	r7, r3
 8013f00:	bfb8      	it	lt
 8013f02:	4602      	movlt	r2, r0
 8013f04:	3301      	adds	r3, #1
 8013f06:	e7e2      	b.n	8013ece <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8013f08:	d10e      	bne.n	8013f28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8013f0a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8013f0e:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8013f12:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8013f16:	4473      	add	r3, lr
 8013f18:	b21b      	sxth	r3, r3
 8013f1a:	429e      	cmp	r6, r3
 8013f1c:	bfa8      	it	ge
 8013f1e:	461e      	movge	r6, r3
 8013f20:	4287      	cmp	r7, r0
 8013f22:	bfb8      	it	lt
 8013f24:	46e1      	movlt	r9, ip
 8013f26:	e757      	b.n	8013dd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8013f28:	4286      	cmp	r6, r0
 8013f2a:	bfa8      	it	ge
 8013f2c:	4606      	movge	r6, r0
 8013f2e:	e753      	b.n	8013dd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8013f30:	eb0a 0007 	add.w	r0, sl, r7
 8013f34:	4427      	add	r7, r4
 8013f36:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8013f3a:	f1bb 0f13 	cmp.w	fp, #19
 8013f3e:	bfdc      	itt	le
 8013f40:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8013f44:	445e      	addle	r6, fp
 8013f46:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8013f4a:	bfd8      	it	le
 8013f4c:	b236      	sxthle	r6, r6
 8013f4e:	f7fb feae 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f52:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8013f56:	2800      	cmp	r0, #0
 8013f58:	f47f af1a 	bne.w	8013d90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8013f5c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8013f60:	fa1f fb8b 	uxth.w	fp, fp
 8013f64:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013f68:	1ab6      	subs	r6, r6, r2
 8013f6a:	4829      	ldr	r0, [pc, #164]	; (8014010 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8013f6c:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8013f70:	2e14      	cmp	r6, #20
 8013f72:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8013f76:	6800      	ldr	r0, [r0, #0]
 8013f78:	bfa8      	it	ge
 8013f7a:	2614      	movge	r6, #20
 8013f7c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013f80:	f8ad 201e 	strh.w	r2, [sp, #30]
 8013f84:	b289      	uxth	r1, r1
 8013f86:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013f8a:	b2b6      	uxth	r6, r6
 8013f8c:	f8d0 c000 	ldr.w	ip, [r0]
 8013f90:	b292      	uxth	r2, r2
 8013f92:	455e      	cmp	r6, fp
 8013f94:	bf94      	ite	ls
 8013f96:	9600      	strls	r6, [sp, #0]
 8013f98:	f8cd b000 	strhi.w	fp, [sp]
 8013f9c:	b29b      	uxth	r3, r3
 8013f9e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8013fa2:	47b0      	blx	r6
 8013fa4:	6823      	ldr	r3, [r4, #0]
 8013fa6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013faa:	a907      	add	r1, sp, #28
 8013fac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013fae:	4620      	mov	r0, r4
 8013fb0:	4798      	blx	r3
 8013fb2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013fb6:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8013fba:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8013fbe:	1a5b      	subs	r3, r3, r1
 8013fc0:	440a      	add	r2, r1
 8013fc2:	b21b      	sxth	r3, r3
 8013fc4:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8013fc8:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8013fcc:	2b00      	cmp	r3, #0
 8013fce:	f47f aeda 	bne.w	8013d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8013fd2:	fa1f f189 	uxth.w	r1, r9
 8013fd6:	4650      	mov	r0, sl
 8013fd8:	f7ff f9e8 	bl	80133ac <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8013fdc:	e6d3      	b.n	8013d86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8013fde:	882e      	ldrh	r6, [r5, #0]
 8013fe0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8013fe4:	42b3      	cmp	r3, r6
 8013fe6:	f67f ae98 	bls.w	8013d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8013fea:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8013fee:	ab07      	add	r3, sp, #28
 8013ff0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8013ff4:	6851      	ldr	r1, [r2, #4]
 8013ff6:	c303      	stmia	r3!, {r0, r1}
 8013ff8:	a807      	add	r0, sp, #28
 8013ffa:	f7fb fe58 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013ffe:	b920      	cbnz	r0, 801400a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 8014000:	6823      	ldr	r3, [r4, #0]
 8014002:	a907      	add	r1, sp, #28
 8014004:	4620      	mov	r0, r4
 8014006:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014008:	4798      	blx	r3
 801400a:	3601      	adds	r6, #1
 801400c:	b2b6      	uxth	r6, r6
 801400e:	e7e7      	b.n	8013fe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8014010:	24002074 	.word	0x24002074

08014014 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8014014:	4b03      	ldr	r3, [pc, #12]	; (8014024 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8014016:	2200      	movs	r2, #0
 8014018:	801a      	strh	r2, [r3, #0]
 801401a:	805a      	strh	r2, [r3, #2]
 801401c:	809a      	strh	r2, [r3, #4]
 801401e:	80da      	strh	r2, [r3, #6]
 8014020:	4770      	bx	lr
 8014022:	bf00      	nop
 8014024:	240020b8 	.word	0x240020b8

08014028 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8014028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801402c:	b09d      	sub	sp, #116	; 0x74
 801402e:	4606      	mov	r6, r0
 8014030:	4614      	mov	r4, r2
 8014032:	468a      	mov	sl, r1
 8014034:	a803      	add	r0, sp, #12
 8014036:	461d      	mov	r5, r3
 8014038:	f000 fd72 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 801403c:	6833      	ldr	r3, [r6, #0]
 801403e:	4630      	mov	r0, r6
 8014040:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8014044:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014046:	4798      	blx	r3
 8014048:	6833      	ldr	r3, [r6, #0]
 801404a:	4607      	mov	r7, r0
 801404c:	4630      	mov	r0, r6
 801404e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014050:	4798      	blx	r3
 8014052:	462a      	mov	r2, r5
 8014054:	2500      	movs	r5, #0
 8014056:	4621      	mov	r1, r4
 8014058:	9000      	str	r0, [sp, #0]
 801405a:	463b      	mov	r3, r7
 801405c:	462c      	mov	r4, r5
 801405e:	46a9      	mov	r9, r5
 8014060:	46a8      	mov	r8, r5
 8014062:	a803      	add	r0, sp, #12
 8014064:	f000 fdb7 	bl	8014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014068:	2300      	movs	r3, #0
 801406a:	9302      	str	r3, [sp, #8]
 801406c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014070:	429c      	cmp	r4, r3
 8014072:	d002      	beq.n	801407a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8014074:	455c      	cmp	r4, fp
 8014076:	bf18      	it	ne
 8014078:	4625      	movne	r5, r4
 801407a:	ab02      	add	r3, sp, #8
 801407c:	4632      	mov	r2, r6
 801407e:	4651      	mov	r1, sl
 8014080:	a803      	add	r0, sp, #12
 8014082:	f001 f8ad 	bl	80151e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014086:	4604      	mov	r4, r0
 8014088:	b108      	cbz	r0, 801408e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801408a:	280a      	cmp	r0, #10
 801408c:	d10a      	bne.n	80140a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801408e:	45c1      	cmp	r9, r8
 8014090:	bf38      	it	cc
 8014092:	46c1      	movcc	r9, r8
 8014094:	f04f 0800 	mov.w	r8, #0
 8014098:	2c00      	cmp	r4, #0
 801409a:	d1e5      	bne.n	8014068 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801409c:	4648      	mov	r0, r9
 801409e:	b01d      	add	sp, #116	; 0x74
 80140a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140a4:	9a02      	ldr	r2, [sp, #8]
 80140a6:	2a00      	cmp	r2, #0
 80140a8:	d0de      	beq.n	8014068 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80140aa:	7b57      	ldrb	r7, [r2, #13]
 80140ac:	4629      	mov	r1, r5
 80140ae:	6833      	ldr	r3, [r6, #0]
 80140b0:	007f      	lsls	r7, r7, #1
 80140b2:	8894      	ldrh	r4, [r2, #4]
 80140b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80140b6:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80140ba:	7a97      	ldrb	r7, [r2, #10]
 80140bc:	4307      	orrs	r7, r0
 80140be:	4630      	mov	r0, r6
 80140c0:	4798      	blx	r3
 80140c2:	4438      	add	r0, r7
 80140c4:	4480      	add	r8, r0
 80140c6:	fa1f f888 	uxth.w	r8, r8
 80140ca:	e7e5      	b.n	8014098 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080140cc <_ZNK8touchgfx4Font12getCharWidthEt>:
 80140cc:	b508      	push	{r3, lr}
 80140ce:	6803      	ldr	r3, [r0, #0]
 80140d0:	68db      	ldr	r3, [r3, #12]
 80140d2:	4798      	blx	r3
 80140d4:	b128      	cbz	r0, 80140e2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80140d6:	7b43      	ldrb	r3, [r0, #13]
 80140d8:	7a80      	ldrb	r0, [r0, #10]
 80140da:	005b      	lsls	r3, r3, #1
 80140dc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80140e0:	4318      	orrs	r0, r3
 80140e2:	bd08      	pop	{r3, pc}

080140e4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80140e4:	b40e      	push	{r1, r2, r3}
 80140e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80140e8:	b09e      	sub	sp, #120	; 0x78
 80140ea:	4605      	mov	r5, r0
 80140ec:	ab23      	add	r3, sp, #140	; 0x8c
 80140ee:	a805      	add	r0, sp, #20
 80140f0:	f853 4b04 	ldr.w	r4, [r3], #4
 80140f4:	9303      	str	r3, [sp, #12]
 80140f6:	f000 fd13 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 80140fa:	682b      	ldr	r3, [r5, #0]
 80140fc:	4628      	mov	r0, r5
 80140fe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014100:	4798      	blx	r3
 8014102:	682b      	ldr	r3, [r5, #0]
 8014104:	4606      	mov	r6, r0
 8014106:	4628      	mov	r0, r5
 8014108:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801410a:	4798      	blx	r3
 801410c:	4633      	mov	r3, r6
 801410e:	4621      	mov	r1, r4
 8014110:	ae1e      	add	r6, sp, #120	; 0x78
 8014112:	2400      	movs	r4, #0
 8014114:	9000      	str	r0, [sp, #0]
 8014116:	9a03      	ldr	r2, [sp, #12]
 8014118:	a805      	add	r0, sp, #20
 801411a:	f000 fd5c 	bl	8014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801411e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8014122:	462a      	mov	r2, r5
 8014124:	4633      	mov	r3, r6
 8014126:	4621      	mov	r1, r4
 8014128:	a805      	add	r0, sp, #20
 801412a:	f001 f859 	bl	80151e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801412e:	b300      	cbz	r0, 8014172 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8014130:	280a      	cmp	r0, #10
 8014132:	d01a      	beq.n	801416a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8014134:	9f04      	ldr	r7, [sp, #16]
 8014136:	b1c7      	cbz	r7, 801416a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8014138:	7b78      	ldrb	r0, [r7, #13]
 801413a:	7a3b      	ldrb	r3, [r7, #8]
 801413c:	00c1      	lsls	r1, r0, #3
 801413e:	88ea      	ldrh	r2, [r5, #6]
 8014140:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8014144:	4319      	orrs	r1, r3
 8014146:	0643      	lsls	r3, r0, #25
 8014148:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801414c:	bf48      	it	mi
 801414e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8014152:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014156:	bf48      	it	mi
 8014158:	b219      	sxthmi	r1, r3
 801415a:	79fb      	ldrb	r3, [r7, #7]
 801415c:	4303      	orrs	r3, r0
 801415e:	4413      	add	r3, r2
 8014160:	1a5b      	subs	r3, r3, r1
 8014162:	b21b      	sxth	r3, r3
 8014164:	429c      	cmp	r4, r3
 8014166:	bfb8      	it	lt
 8014168:	461c      	movlt	r4, r3
 801416a:	4633      	mov	r3, r6
 801416c:	462a      	mov	r2, r5
 801416e:	2100      	movs	r1, #0
 8014170:	e7da      	b.n	8014128 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8014172:	b2a0      	uxth	r0, r4
 8014174:	b01e      	add	sp, #120	; 0x78
 8014176:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801417a:	b003      	add	sp, #12
 801417c:	4770      	bx	lr

0801417e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801417e:	7a43      	ldrb	r3, [r0, #9]
 8014180:	8880      	ldrh	r0, [r0, #4]
 8014182:	4418      	add	r0, r3
 8014184:	b280      	uxth	r0, r0
 8014186:	4770      	bx	lr

08014188 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8014188:	6803      	ldr	r3, [r0, #0]
 801418a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801418c:	4718      	bx	r3

0801418e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801418e:	b40e      	push	{r1, r2, r3}
 8014190:	b570      	push	{r4, r5, r6, lr}
 8014192:	b09d      	sub	sp, #116	; 0x74
 8014194:	4604      	mov	r4, r0
 8014196:	ab21      	add	r3, sp, #132	; 0x84
 8014198:	a803      	add	r0, sp, #12
 801419a:	f853 5b04 	ldr.w	r5, [r3], #4
 801419e:	9302      	str	r3, [sp, #8]
 80141a0:	f000 fcbe 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 80141a4:	6823      	ldr	r3, [r4, #0]
 80141a6:	4620      	mov	r0, r4
 80141a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80141aa:	4798      	blx	r3
 80141ac:	6823      	ldr	r3, [r4, #0]
 80141ae:	4606      	mov	r6, r0
 80141b0:	4620      	mov	r0, r4
 80141b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80141b4:	2401      	movs	r4, #1
 80141b6:	4798      	blx	r3
 80141b8:	4633      	mov	r3, r6
 80141ba:	9000      	str	r0, [sp, #0]
 80141bc:	4629      	mov	r1, r5
 80141be:	9a02      	ldr	r2, [sp, #8]
 80141c0:	a803      	add	r0, sp, #12
 80141c2:	f000 fd08 	bl	8014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80141c6:	a803      	add	r0, sp, #12
 80141c8:	f001 f8d6 	bl	8015378 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80141cc:	b2a3      	uxth	r3, r4
 80141ce:	b138      	cbz	r0, 80141e0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 80141d0:	280a      	cmp	r0, #10
 80141d2:	a803      	add	r0, sp, #12
 80141d4:	bf04      	itt	eq
 80141d6:	3301      	addeq	r3, #1
 80141d8:	b21c      	sxtheq	r4, r3
 80141da:	f001 f8cd 	bl	8015378 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80141de:	e7f5      	b.n	80141cc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80141e0:	4618      	mov	r0, r3
 80141e2:	b01d      	add	sp, #116	; 0x74
 80141e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80141e8:	b003      	add	sp, #12
 80141ea:	4770      	bx	lr

080141ec <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80141ec:	b40e      	push	{r1, r2, r3}
 80141ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 80141f0:	b09e      	sub	sp, #120	; 0x78
 80141f2:	4604      	mov	r4, r0
 80141f4:	ab23      	add	r3, sp, #140	; 0x8c
 80141f6:	a805      	add	r0, sp, #20
 80141f8:	f853 5b04 	ldr.w	r5, [r3], #4
 80141fc:	9303      	str	r3, [sp, #12]
 80141fe:	f000 fc8f 	bl	8014b20 <_ZN8touchgfx12TextProviderC1Ev>
 8014202:	6823      	ldr	r3, [r4, #0]
 8014204:	4620      	mov	r0, r4
 8014206:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014208:	4798      	blx	r3
 801420a:	6823      	ldr	r3, [r4, #0]
 801420c:	4606      	mov	r6, r0
 801420e:	4620      	mov	r0, r4
 8014210:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014212:	4798      	blx	r3
 8014214:	4633      	mov	r3, r6
 8014216:	4629      	mov	r1, r5
 8014218:	9000      	str	r0, [sp, #0]
 801421a:	9a03      	ldr	r2, [sp, #12]
 801421c:	a805      	add	r0, sp, #20
 801421e:	f000 fcda 	bl	8014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014222:	ad1e      	add	r5, sp, #120	; 0x78
 8014224:	2100      	movs	r1, #0
 8014226:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801422a:	4622      	mov	r2, r4
 801422c:	a805      	add	r0, sp, #20
 801422e:	f845 1d68 	str.w	r1, [r5, #-104]!
 8014232:	462b      	mov	r3, r5
 8014234:	f000 ffd4 	bl	80151e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014238:	b1d8      	cbz	r0, 8014272 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801423a:	280a      	cmp	r0, #10
 801423c:	d012      	beq.n	8014264 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801423e:	9804      	ldr	r0, [sp, #16]
 8014240:	b180      	cbz	r0, 8014264 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8014242:	7b47      	ldrb	r7, [r0, #13]
 8014244:	88e2      	ldrh	r2, [r4, #6]
 8014246:	00fb      	lsls	r3, r7, #3
 8014248:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801424c:	7a03      	ldrb	r3, [r0, #8]
 801424e:	430b      	orrs	r3, r1
 8014250:	0679      	lsls	r1, r7, #25
 8014252:	bf44      	itt	mi
 8014254:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014258:	b21b      	sxthmi	r3, r3
 801425a:	1ad3      	subs	r3, r2, r3
 801425c:	b21b      	sxth	r3, r3
 801425e:	429e      	cmp	r6, r3
 8014260:	bfa8      	it	ge
 8014262:	461e      	movge	r6, r3
 8014264:	462b      	mov	r3, r5
 8014266:	4622      	mov	r2, r4
 8014268:	2100      	movs	r1, #0
 801426a:	a805      	add	r0, sp, #20
 801426c:	f000 ffb8 	bl	80151e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014270:	e7e2      	b.n	8014238 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8014272:	4630      	mov	r0, r6
 8014274:	b01e      	add	sp, #120	; 0x78
 8014276:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801427a:	b003      	add	sp, #12
 801427c:	4770      	bx	lr

0801427e <_ZNK8touchgfx8Drawable10invalidateEv>:
 801427e:	b513      	push	{r0, r1, r4, lr}
 8014280:	6803      	ldr	r3, [r0, #0]
 8014282:	2400      	movs	r4, #0
 8014284:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8014288:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801428c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014290:	4669      	mov	r1, sp
 8014292:	691b      	ldr	r3, [r3, #16]
 8014294:	9400      	str	r4, [sp, #0]
 8014296:	f8ad 2006 	strh.w	r2, [sp, #6]
 801429a:	4798      	blx	r3
 801429c:	b002      	add	sp, #8
 801429e:	bd10      	pop	{r4, pc}

080142a0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80142a0:	b538      	push	{r3, r4, r5, lr}
 80142a2:	680b      	ldr	r3, [r1, #0]
 80142a4:	460c      	mov	r4, r1
 80142a6:	4605      	mov	r5, r0
 80142a8:	68db      	ldr	r3, [r3, #12]
 80142aa:	4798      	blx	r3
 80142ac:	6823      	ldr	r3, [r4, #0]
 80142ae:	4620      	mov	r0, r4
 80142b0:	4629      	mov	r1, r5
 80142b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80142b4:	4798      	blx	r3
 80142b6:	4628      	mov	r0, r5
 80142b8:	bd38      	pop	{r3, r4, r5, pc}

080142ba <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80142ba:	b410      	push	{r4}
 80142bc:	880a      	ldrh	r2, [r1, #0]
 80142be:	8884      	ldrh	r4, [r0, #4]
 80142c0:	4422      	add	r2, r4
 80142c2:	800a      	strh	r2, [r1, #0]
 80142c4:	884a      	ldrh	r2, [r1, #2]
 80142c6:	88c4      	ldrh	r4, [r0, #6]
 80142c8:	4422      	add	r2, r4
 80142ca:	804a      	strh	r2, [r1, #2]
 80142cc:	6940      	ldr	r0, [r0, #20]
 80142ce:	b120      	cbz	r0, 80142da <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80142d0:	6803      	ldr	r3, [r0, #0]
 80142d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80142d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80142d8:	4718      	bx	r3
 80142da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80142de:	4770      	bx	lr

080142e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80142e0:	b570      	push	{r4, r5, r6, lr}
 80142e2:	8882      	ldrh	r2, [r0, #4]
 80142e4:	460c      	mov	r4, r1
 80142e6:	880b      	ldrh	r3, [r1, #0]
 80142e8:	4605      	mov	r5, r0
 80142ea:	4413      	add	r3, r2
 80142ec:	800b      	strh	r3, [r1, #0]
 80142ee:	884b      	ldrh	r3, [r1, #2]
 80142f0:	88c2      	ldrh	r2, [r0, #6]
 80142f2:	4413      	add	r3, r2
 80142f4:	804b      	strh	r3, [r1, #2]
 80142f6:	1d01      	adds	r1, r0, #4
 80142f8:	4620      	mov	r0, r4
 80142fa:	f7fb fc95 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 80142fe:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8014302:	2b00      	cmp	r3, #0
 8014304:	dd0b      	ble.n	801431e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014306:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801430a:	2b00      	cmp	r3, #0
 801430c:	dd07      	ble.n	801431e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801430e:	6968      	ldr	r0, [r5, #20]
 8014310:	b128      	cbz	r0, 801431e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8014312:	6803      	ldr	r3, [r0, #0]
 8014314:	4621      	mov	r1, r4
 8014316:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014318:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801431c:	4718      	bx	r3
 801431e:	bd70      	pop	{r4, r5, r6, pc}

08014320 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8014320:	b570      	push	{r4, r5, r6, lr}
 8014322:	8882      	ldrh	r2, [r0, #4]
 8014324:	460c      	mov	r4, r1
 8014326:	880b      	ldrh	r3, [r1, #0]
 8014328:	4605      	mov	r5, r0
 801432a:	4413      	add	r3, r2
 801432c:	800b      	strh	r3, [r1, #0]
 801432e:	884b      	ldrh	r3, [r1, #2]
 8014330:	88c2      	ldrh	r2, [r0, #6]
 8014332:	4413      	add	r3, r2
 8014334:	804b      	strh	r3, [r1, #2]
 8014336:	1d01      	adds	r1, r0, #4
 8014338:	4620      	mov	r0, r4
 801433a:	f7fb fc75 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 801433e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8014342:	2b00      	cmp	r3, #0
 8014344:	dd19      	ble.n	801437a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8014346:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801434a:	2b00      	cmp	r3, #0
 801434c:	dd15      	ble.n	801437a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801434e:	6968      	ldr	r0, [r5, #20]
 8014350:	b128      	cbz	r0, 801435e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8014352:	6803      	ldr	r3, [r0, #0]
 8014354:	4621      	mov	r1, r4
 8014356:	691b      	ldr	r3, [r3, #16]
 8014358:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801435c:	4718      	bx	r3
 801435e:	4b07      	ldr	r3, [pc, #28]	; (801437c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8014360:	681b      	ldr	r3, [r3, #0]
 8014362:	3304      	adds	r3, #4
 8014364:	429d      	cmp	r5, r3
 8014366:	d108      	bne.n	801437a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8014368:	f7fe ff10 	bl	801318c <_ZN8touchgfx11Application11getInstanceEv>
 801436c:	6803      	ldr	r3, [r0, #0]
 801436e:	6821      	ldr	r1, [r4, #0]
 8014370:	6862      	ldr	r2, [r4, #4]
 8014372:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014374:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014378:	4718      	bx	r3
 801437a:	bd70      	pop	{r4, r5, r6, pc}
 801437c:	240020b0 	.word	0x240020b0

08014380 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8014380:	b570      	push	{r4, r5, r6, lr}
 8014382:	4604      	mov	r4, r0
 8014384:	4616      	mov	r6, r2
 8014386:	460d      	mov	r5, r1
 8014388:	b901      	cbnz	r1, 801438c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801438a:	b192      	cbz	r2, 80143b2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801438c:	6823      	ldr	r3, [r4, #0]
 801438e:	4620      	mov	r0, r4
 8014390:	699b      	ldr	r3, [r3, #24]
 8014392:	4798      	blx	r3
 8014394:	88e2      	ldrh	r2, [r4, #6]
 8014396:	88a1      	ldrh	r1, [r4, #4]
 8014398:	4620      	mov	r0, r4
 801439a:	4432      	add	r2, r6
 801439c:	4429      	add	r1, r5
 801439e:	b212      	sxth	r2, r2
 80143a0:	b209      	sxth	r1, r1
 80143a2:	f7f8 f9a8 	bl	800c6f6 <_ZN8touchgfx8Drawable5setXYEss>
 80143a6:	6823      	ldr	r3, [r4, #0]
 80143a8:	4620      	mov	r0, r4
 80143aa:	699b      	ldr	r3, [r3, #24]
 80143ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143b0:	4718      	bx	r3
 80143b2:	bd70      	pop	{r4, r5, r6, pc}

080143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80143b4:	b510      	push	{r4, lr}
 80143b6:	2300      	movs	r3, #0
 80143b8:	4604      	mov	r4, r0
 80143ba:	4608      	mov	r0, r1
 80143bc:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80143c0:	8023      	strh	r3, [r4, #0]
 80143c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80143c6:	8063      	strh	r3, [r4, #2]
 80143c8:	6803      	ldr	r3, [r0, #0]
 80143ca:	80a1      	strh	r1, [r4, #4]
 80143cc:	4621      	mov	r1, r4
 80143ce:	80e2      	strh	r2, [r4, #6]
 80143d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80143d2:	4798      	blx	r3
 80143d4:	4620      	mov	r0, r4
 80143d6:	bd10      	pop	{r4, pc}

080143d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80143d8:	b530      	push	{r4, r5, lr}
 80143da:	8083      	strh	r3, [r0, #4]
 80143dc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80143e0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80143e4:	80c3      	strh	r3, [r0, #6]
 80143e6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80143ea:	6141      	str	r1, [r0, #20]
 80143ec:	7203      	strb	r3, [r0, #8]
 80143ee:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80143f2:	8302      	strh	r2, [r0, #24]
 80143f4:	7243      	strb	r3, [r0, #9]
 80143f6:	7a83      	ldrb	r3, [r0, #10]
 80143f8:	f365 0306 	bfi	r3, r5, #0, #7
 80143fc:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8014400:	f365 13c7 	bfi	r3, r5, #7, #1
 8014404:	7283      	strb	r3, [r0, #10]
 8014406:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801440a:	72c3      	strb	r3, [r0, #11]
 801440c:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8014410:	7303      	strb	r3, [r0, #12]
 8014412:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8014416:	81c3      	strh	r3, [r0, #14]
 8014418:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801441c:	8203      	strh	r3, [r0, #16]
 801441e:	4b01      	ldr	r3, [pc, #4]	; (8014424 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8014420:	6003      	str	r3, [r0, #0]
 8014422:	bd30      	pop	{r4, r5, pc}
 8014424:	0802629c 	.word	0x0802629c

08014428 <_ZNK8touchgfx9ConstFont4findEt>:
 8014428:	b5f0      	push	{r4, r5, r6, r7, lr}
 801442a:	6944      	ldr	r4, [r0, #20]
 801442c:	b3bc      	cbz	r4, 801449e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801442e:	88a3      	ldrh	r3, [r4, #4]
 8014430:	8b02      	ldrh	r2, [r0, #24]
 8014432:	1acb      	subs	r3, r1, r3
 8014434:	f102 32ff 	add.w	r2, r2, #4294967295
 8014438:	d431      	bmi.n	801449e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801443a:	4293      	cmp	r3, r2
 801443c:	dd0c      	ble.n	8014458 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801443e:	230e      	movs	r3, #14
 8014440:	fb03 4302 	mla	r3, r3, r2, r4
 8014444:	889b      	ldrh	r3, [r3, #4]
 8014446:	1a5b      	subs	r3, r3, r1
 8014448:	1ad3      	subs	r3, r2, r3
 801444a:	429a      	cmp	r2, r3
 801444c:	db27      	blt.n	801449e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801444e:	2b00      	cmp	r3, #0
 8014450:	bfbc      	itt	lt
 8014452:	2302      	movlt	r3, #2
 8014454:	fb92 f3f3 	sdivlt	r3, r2, r3
 8014458:	2500      	movs	r5, #0
 801445a:	260e      	movs	r6, #14
 801445c:	4295      	cmp	r5, r2
 801445e:	dc1e      	bgt.n	801449e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014460:	fb06 4003 	mla	r0, r6, r3, r4
 8014464:	8887      	ldrh	r7, [r0, #4]
 8014466:	42b9      	cmp	r1, r7
 8014468:	d01a      	beq.n	80144a0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801446a:	d20d      	bcs.n	8014488 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801446c:	1e5a      	subs	r2, r3, #1
 801446e:	4295      	cmp	r5, r2
 8014470:	dc15      	bgt.n	801449e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014472:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8014476:	1a5b      	subs	r3, r3, r1
 8014478:	1ad3      	subs	r3, r2, r3
 801447a:	429a      	cmp	r2, r3
 801447c:	db0f      	blt.n	801449e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801447e:	429d      	cmp	r5, r3
 8014480:	ddec      	ble.n	801445c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014482:	1953      	adds	r3, r2, r5
 8014484:	105b      	asrs	r3, r3, #1
 8014486:	e7e9      	b.n	801445c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8014488:	1c5d      	adds	r5, r3, #1
 801448a:	42aa      	cmp	r2, r5
 801448c:	db07      	blt.n	801449e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801448e:	8a43      	ldrh	r3, [r0, #18]
 8014490:	1acb      	subs	r3, r1, r3
 8014492:	442b      	add	r3, r5
 8014494:	429d      	cmp	r5, r3
 8014496:	dc02      	bgt.n	801449e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8014498:	429a      	cmp	r2, r3
 801449a:	dadf      	bge.n	801445c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801449c:	e7f1      	b.n	8014482 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801449e:	2000      	movs	r0, #0
 80144a0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080144a2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80144a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80144a4:	4604      	mov	r4, r0
 80144a6:	4617      	mov	r7, r2
 80144a8:	461e      	mov	r6, r3
 80144aa:	b911      	cbnz	r1, 80144b2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80144ac:	2500      	movs	r5, #0
 80144ae:	4628      	mov	r0, r5
 80144b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80144b2:	290a      	cmp	r1, #10
 80144b4:	d0fa      	beq.n	80144ac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80144b6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80144ba:	4291      	cmp	r1, r2
 80144bc:	d0f6      	beq.n	80144ac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80144be:	f242 020b 	movw	r2, #8203	; 0x200b
 80144c2:	4291      	cmp	r1, r2
 80144c4:	d0f2      	beq.n	80144ac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80144c6:	f7ff ffaf 	bl	8014428 <_ZNK8touchgfx9ConstFont4findEt>
 80144ca:	4605      	mov	r5, r0
 80144cc:	b950      	cbnz	r0, 80144e4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80144ce:	6823      	ldr	r3, [r4, #0]
 80144d0:	4620      	mov	r0, r4
 80144d2:	691b      	ldr	r3, [r3, #16]
 80144d4:	4798      	blx	r3
 80144d6:	4601      	mov	r1, r0
 80144d8:	4620      	mov	r0, r4
 80144da:	f7ff ffa5 	bl	8014428 <_ZNK8touchgfx9ConstFont4findEt>
 80144de:	4605      	mov	r5, r0
 80144e0:	2800      	cmp	r0, #0
 80144e2:	d0e3      	beq.n	80144ac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80144e4:	6823      	ldr	r3, [r4, #0]
 80144e6:	4629      	mov	r1, r5
 80144e8:	4620      	mov	r0, r4
 80144ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80144ec:	4798      	blx	r3
 80144ee:	6038      	str	r0, [r7, #0]
 80144f0:	6823      	ldr	r3, [r4, #0]
 80144f2:	4620      	mov	r0, r4
 80144f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80144f6:	4798      	blx	r3
 80144f8:	7030      	strb	r0, [r6, #0]
 80144fa:	e7d8      	b.n	80144ae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080144fc <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80144fc:	2000      	movs	r0, #0
 80144fe:	4770      	bx	lr

08014500 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8014500:	2001      	movs	r0, #1
 8014502:	4770      	bx	lr

08014504 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8014504:	2002      	movs	r0, #2
 8014506:	4770      	bx	lr

08014508 <_ZN8touchgfx12GestureEventD1Ev>:
 8014508:	4770      	bx	lr

0801450a <_ZN8touchgfx9DragEventD1Ev>:
 801450a:	4770      	bx	lr

0801450c <_ZN8touchgfx10ClickEventD1Ev>:
 801450c:	4770      	bx	lr

0801450e <_ZN8touchgfx10ClickEventD0Ev>:
 801450e:	b510      	push	{r4, lr}
 8014510:	4604      	mov	r4, r0
 8014512:	210c      	movs	r1, #12
 8014514:	f00e ff5d 	bl	80233d2 <_ZdlPvj>
 8014518:	4620      	mov	r0, r4
 801451a:	bd10      	pop	{r4, pc}

0801451c <_ZN8touchgfx9DragEventD0Ev>:
 801451c:	b510      	push	{r4, lr}
 801451e:	4604      	mov	r4, r0
 8014520:	2110      	movs	r1, #16
 8014522:	f00e ff56 	bl	80233d2 <_ZdlPvj>
 8014526:	4620      	mov	r0, r4
 8014528:	bd10      	pop	{r4, pc}

0801452a <_ZN8touchgfx12GestureEventD0Ev>:
 801452a:	b510      	push	{r4, lr}
 801452c:	4604      	mov	r4, r0
 801452e:	210c      	movs	r1, #12
 8014530:	f00e ff4f 	bl	80233d2 <_ZdlPvj>
 8014534:	4620      	mov	r0, r4
 8014536:	bd10      	pop	{r4, pc}

08014538 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8014538:	b530      	push	{r4, r5, lr}
 801453a:	460d      	mov	r5, r1
 801453c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801453e:	b087      	sub	sp, #28
 8014540:	4604      	mov	r4, r0
 8014542:	b301      	cbz	r1, 8014586 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8014544:	a801      	add	r0, sp, #4
 8014546:	f7ff ff35 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801454a:	892a      	ldrh	r2, [r5, #8]
 801454c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014550:	7928      	ldrb	r0, [r5, #4]
 8014552:	1ad2      	subs	r2, r2, r3
 8014554:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8014556:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801455a:	441a      	add	r2, r3
 801455c:	896b      	ldrh	r3, [r5, #10]
 801455e:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8014562:	f88d 0010 	strb.w	r0, [sp, #16]
 8014566:	1b5b      	subs	r3, r3, r5
 8014568:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801456a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801456c:	442b      	add	r3, r5
 801456e:	4d07      	ldr	r5, [pc, #28]	; (801458c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8014570:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014574:	a903      	add	r1, sp, #12
 8014576:	9503      	str	r5, [sp, #12]
 8014578:	f8ad 2014 	strh.w	r2, [sp, #20]
 801457c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014580:	6803      	ldr	r3, [r0, #0]
 8014582:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014584:	4798      	blx	r3
 8014586:	b007      	add	sp, #28
 8014588:	bd30      	pop	{r4, r5, pc}
 801458a:	bf00      	nop
 801458c:	08026324 	.word	0x08026324

08014590 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8014590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014594:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014596:	b08a      	sub	sp, #40	; 0x28
 8014598:	4604      	mov	r4, r0
 801459a:	460d      	mov	r5, r1
 801459c:	b113      	cbz	r3, 80145a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801459e:	790b      	ldrb	r3, [r1, #4]
 80145a0:	2b00      	cmp	r3, #0
 80145a2:	d044      	beq.n	801462e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80145a4:	f104 0804 	add.w	r8, r4, #4
 80145a8:	a803      	add	r0, sp, #12
 80145aa:	4641      	mov	r1, r8
 80145ac:	f7ff ff02 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80145b0:	792b      	ldrb	r3, [r5, #4]
 80145b2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80145b6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80145ba:	b983      	cbnz	r3, 80145de <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80145bc:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80145c0:	892a      	ldrh	r2, [r5, #8]
 80145c2:	88e9      	ldrh	r1, [r5, #6]
 80145c4:	4640      	mov	r0, r8
 80145c6:	1b92      	subs	r2, r2, r6
 80145c8:	9301      	str	r3, [sp, #4]
 80145ca:	1bc9      	subs	r1, r1, r7
 80145cc:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80145d0:	b212      	sxth	r2, r2
 80145d2:	9300      	str	r3, [sp, #0]
 80145d4:	b209      	sxth	r1, r1
 80145d6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80145da:	f7fb fa43 	bl	800fa64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80145de:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80145e0:	b329      	cbz	r1, 801462e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80145e2:	a805      	add	r0, sp, #20
 80145e4:	f7ff fee6 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80145e8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80145ec:	792b      	ldrb	r3, [r5, #4]
 80145ee:	a907      	add	r1, sp, #28
 80145f0:	1abf      	subs	r7, r7, r2
 80145f2:	88ea      	ldrh	r2, [r5, #6]
 80145f4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80145f6:	4417      	add	r7, r2
 80145f8:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80145fa:	f88d 3020 	strb.w	r3, [sp, #32]
 80145fe:	4417      	add	r7, r2
 8014600:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8014604:	1ab6      	subs	r6, r6, r2
 8014606:	892a      	ldrh	r2, [r5, #8]
 8014608:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801460c:	4416      	add	r6, r2
 801460e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8014610:	4416      	add	r6, r2
 8014612:	4a08      	ldr	r2, [pc, #32]	; (8014634 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8014614:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8014618:	2600      	movs	r6, #0
 801461a:	9207      	str	r2, [sp, #28]
 801461c:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8014620:	6803      	ldr	r3, [r0, #0]
 8014622:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014624:	4798      	blx	r3
 8014626:	792b      	ldrb	r3, [r5, #4]
 8014628:	b10b      	cbz	r3, 801462e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801462a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801462e:	b00a      	add	sp, #40	; 0x28
 8014630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014634:	080262fc 	.word	0x080262fc

08014638 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8014638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801463c:	460c      	mov	r4, r1
 801463e:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8014640:	b088      	sub	sp, #32
 8014642:	4605      	mov	r5, r0
 8014644:	2900      	cmp	r1, #0
 8014646:	d06d      	beq.n	8014724 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8014648:	4668      	mov	r0, sp
 801464a:	f7ff feb3 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801464e:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8014650:	88e3      	ldrh	r3, [r4, #6]
 8014652:	f9bd 8000 	ldrsh.w	r8, [sp]
 8014656:	440b      	add	r3, r1
 8014658:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801465c:	b21b      	sxth	r3, r3
 801465e:	4543      	cmp	r3, r8
 8014660:	db31      	blt.n	80146c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014662:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8014666:	44c4      	add	ip, r8
 8014668:	fa0f fc8c 	sxth.w	ip, ip
 801466c:	4563      	cmp	r3, ip
 801466e:	da2a      	bge.n	80146c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014670:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8014672:	8926      	ldrh	r6, [r4, #8]
 8014674:	4416      	add	r6, r2
 8014676:	b236      	sxth	r6, r6
 8014678:	42be      	cmp	r6, r7
 801467a:	db24      	blt.n	80146c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801467c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8014680:	4438      	add	r0, r7
 8014682:	b200      	sxth	r0, r0
 8014684:	4286      	cmp	r6, r0
 8014686:	da1e      	bge.n	80146c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8014688:	8963      	ldrh	r3, [r4, #10]
 801468a:	4419      	add	r1, r3
 801468c:	b209      	sxth	r1, r1
 801468e:	4541      	cmp	r1, r8
 8014690:	db08      	blt.n	80146a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8014692:	4561      	cmp	r1, ip
 8014694:	da06      	bge.n	80146a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8014696:	89a3      	ldrh	r3, [r4, #12]
 8014698:	441a      	add	r2, r3
 801469a:	b212      	sxth	r2, r2
 801469c:	42ba      	cmp	r2, r7
 801469e:	db01      	blt.n	80146a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80146a0:	4282      	cmp	r2, r0
 80146a2:	db10      	blt.n	80146c6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80146a4:	4b21      	ldr	r3, [pc, #132]	; (801472c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80146a6:	a904      	add	r1, sp, #16
 80146a8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80146aa:	9304      	str	r3, [sp, #16]
 80146ac:	2302      	movs	r3, #2
 80146ae:	f88d 3014 	strb.w	r3, [sp, #20]
 80146b2:	2300      	movs	r3, #0
 80146b4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80146b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80146bc:	f8ad 301a 	strh.w	r3, [sp, #26]
 80146c0:	6803      	ldr	r3, [r0, #0]
 80146c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80146c4:	4798      	blx	r3
 80146c6:	1d29      	adds	r1, r5, #4
 80146c8:	a802      	add	r0, sp, #8
 80146ca:	f7ff fe73 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80146ce:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80146d2:	88e0      	ldrh	r0, [r4, #6]
 80146d4:	eba3 0808 	sub.w	r8, r3, r8
 80146d8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80146dc:	7921      	ldrb	r1, [r4, #4]
 80146de:	fa1f f888 	uxth.w	r8, r8
 80146e2:	1bdf      	subs	r7, r3, r7
 80146e4:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80146e8:	b2bb      	uxth	r3, r7
 80146ea:	4440      	add	r0, r8
 80146ec:	8922      	ldrh	r2, [r4, #8]
 80146ee:	8967      	ldrh	r7, [r4, #10]
 80146f0:	4460      	add	r0, ip
 80146f2:	89a4      	ldrh	r4, [r4, #12]
 80146f4:	441a      	add	r2, r3
 80146f6:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80146f8:	44b8      	add	r8, r7
 80146fa:	4423      	add	r3, r4
 80146fc:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014700:	4432      	add	r2, r6
 8014702:	44e0      	add	r8, ip
 8014704:	4433      	add	r3, r6
 8014706:	4c0a      	ldr	r4, [pc, #40]	; (8014730 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8014708:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801470a:	f88d 1014 	strb.w	r1, [sp, #20]
 801470e:	a904      	add	r1, sp, #16
 8014710:	9404      	str	r4, [sp, #16]
 8014712:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014716:	f8ad 801a 	strh.w	r8, [sp, #26]
 801471a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801471e:	6803      	ldr	r3, [r0, #0]
 8014720:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014722:	4798      	blx	r3
 8014724:	b008      	add	sp, #32
 8014726:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801472a:	bf00      	nop
 801472c:	080262fc 	.word	0x080262fc
 8014730:	08026310 	.word	0x08026310

08014734 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8014734:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014736:	4604      	mov	r4, r0
 8014738:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801473c:	3201      	adds	r2, #1
 801473e:	d112      	bne.n	8014766 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8014740:	2500      	movs	r5, #0
 8014742:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8014746:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801474a:	6803      	ldr	r3, [r0, #0]
 801474c:	9500      	str	r5, [sp, #0]
 801474e:	466d      	mov	r5, sp
 8014750:	f8ad 1004 	strh.w	r1, [sp, #4]
 8014754:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014758:	4629      	mov	r1, r5
 801475a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801475c:	4798      	blx	r3
 801475e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8014762:	e884 0003 	stmia.w	r4, {r0, r1}
 8014766:	4620      	mov	r0, r4
 8014768:	b003      	add	sp, #12
 801476a:	bd30      	pop	{r4, r5, pc}

0801476c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801476c:	b513      	push	{r0, r1, r4, lr}
 801476e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8014772:	4604      	mov	r4, r0
 8014774:	3301      	adds	r3, #1
 8014776:	d109      	bne.n	801478c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8014778:	4601      	mov	r1, r0
 801477a:	4668      	mov	r0, sp
 801477c:	f7ff fe1a 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014780:	f8bd 3000 	ldrh.w	r3, [sp]
 8014784:	8423      	strh	r3, [r4, #32]
 8014786:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801478a:	8463      	strh	r3, [r4, #34]	; 0x22
 801478c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8014790:	b002      	add	sp, #8
 8014792:	bd10      	pop	{r4, pc}

08014794 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8014794:	b513      	push	{r0, r1, r4, lr}
 8014796:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801479a:	4604      	mov	r4, r0
 801479c:	3301      	adds	r3, #1
 801479e:	d109      	bne.n	80147b4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80147a0:	4601      	mov	r1, r0
 80147a2:	4668      	mov	r0, sp
 80147a4:	f7ff fe06 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80147a8:	f8bd 3000 	ldrh.w	r3, [sp]
 80147ac:	8423      	strh	r3, [r4, #32]
 80147ae:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80147b2:	8463      	strh	r3, [r4, #34]	; 0x22
 80147b4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80147b8:	b002      	add	sp, #8
 80147ba:	bd10      	pop	{r4, pc}

080147bc <_ZN8touchgfx6ScreenC1Ev>:
 80147bc:	b570      	push	{r4, r5, r6, lr}
 80147be:	4b17      	ldr	r3, [pc, #92]	; (801481c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80147c0:	4605      	mov	r5, r0
 80147c2:	4a17      	ldr	r2, [pc, #92]	; (8014820 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80147c4:	2101      	movs	r1, #1
 80147c6:	f845 3b04 	str.w	r3, [r5], #4
 80147ca:	2300      	movs	r3, #0
 80147cc:	6042      	str	r2, [r0, #4]
 80147ce:	4604      	mov	r4, r0
 80147d0:	8103      	strh	r3, [r0, #8]
 80147d2:	8143      	strh	r3, [r0, #10]
 80147d4:	8183      	strh	r3, [r0, #12]
 80147d6:	81c3      	strh	r3, [r0, #14]
 80147d8:	8203      	strh	r3, [r0, #16]
 80147da:	8243      	strh	r3, [r0, #18]
 80147dc:	8283      	strh	r3, [r0, #20]
 80147de:	82c3      	strh	r3, [r0, #22]
 80147e0:	6203      	str	r3, [r0, #32]
 80147e2:	8483      	strh	r3, [r0, #36]	; 0x24
 80147e4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80147e6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80147ea:	6343      	str	r3, [r0, #52]	; 0x34
 80147ec:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80147f0:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80147f4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80147f8:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80147fc:	4b09      	ldr	r3, [pc, #36]	; (8014824 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80147fe:	4628      	mov	r0, r5
 8014800:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014804:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8014806:	4a08      	ldr	r2, [pc, #32]	; (8014828 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8014808:	f9b2 1000 	ldrsh.w	r1, [r2]
 801480c:	4798      	blx	r3
 801480e:	6863      	ldr	r3, [r4, #4]
 8014810:	4628      	mov	r0, r5
 8014812:	4631      	mov	r1, r6
 8014814:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014816:	4798      	blx	r3
 8014818:	4620      	mov	r0, r4
 801481a:	bd70      	pop	{r4, r5, r6, pc}
 801481c:	08026338 	.word	0x08026338
 8014820:	08025d50 	.word	0x08025d50
 8014824:	2400206a 	.word	0x2400206a
 8014828:	24002068 	.word	0x24002068

0801482c <_ZN8touchgfx6Screen4drawEv>:
 801482c:	4b09      	ldr	r3, [pc, #36]	; (8014854 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801482e:	b507      	push	{r0, r1, r2, lr}
 8014830:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014834:	2100      	movs	r1, #0
 8014836:	4b08      	ldr	r3, [pc, #32]	; (8014858 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8014838:	9100      	str	r1, [sp, #0]
 801483a:	4669      	mov	r1, sp
 801483c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014840:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014844:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014848:	6803      	ldr	r3, [r0, #0]
 801484a:	689b      	ldr	r3, [r3, #8]
 801484c:	4798      	blx	r3
 801484e:	b003      	add	sp, #12
 8014850:	f85d fb04 	ldr.w	pc, [sp], #4
 8014854:	24002068 	.word	0x24002068
 8014858:	2400206a 	.word	0x2400206a

0801485c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801485c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014860:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8014864:	b089      	sub	sp, #36	; 0x24
 8014866:	4680      	mov	r8, r0
 8014868:	460c      	mov	r4, r1
 801486a:	2b00      	cmp	r3, #0
 801486c:	4615      	mov	r5, r2
 801486e:	dd0e      	ble.n	801488e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014870:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8014874:	2b00      	cmp	r3, #0
 8014876:	dd0a      	ble.n	801488e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014878:	4628      	mov	r0, r5
 801487a:	f7ff ff5b 	bl	8014734 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801487e:	4621      	mov	r1, r4
 8014880:	f7fe fba6 	bl	8012fd0 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014884:	69eb      	ldr	r3, [r5, #28]
 8014886:	b928      	cbnz	r0, 8014894 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8014888:	461d      	mov	r5, r3
 801488a:	2b00      	cmp	r3, #0
 801488c:	d1f4      	bne.n	8014878 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801488e:	b009      	add	sp, #36	; 0x24
 8014890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014894:	ae04      	add	r6, sp, #16
 8014896:	2b00      	cmp	r3, #0
 8014898:	f000 80b5 	beq.w	8014a06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801489c:	682b      	ldr	r3, [r5, #0]
 801489e:	4629      	mov	r1, r5
 80148a0:	a802      	add	r0, sp, #8
 80148a2:	68db      	ldr	r3, [r3, #12]
 80148a4:	4798      	blx	r3
 80148a6:	4628      	mov	r0, r5
 80148a8:	f7ff ff60 	bl	801476c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80148ac:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80148b0:	4407      	add	r7, r0
 80148b2:	4628      	mov	r0, r5
 80148b4:	f7ff ff6e 	bl	8014794 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80148b8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80148bc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80148c0:	b23f      	sxth	r7, r7
 80148c2:	4418      	add	r0, r3
 80148c4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80148c8:	4621      	mov	r1, r4
 80148ca:	f8ad 2014 	strh.w	r2, [sp, #20]
 80148ce:	f8ad 0012 	strh.w	r0, [sp, #18]
 80148d2:	4630      	mov	r0, r6
 80148d4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80148d8:	f8ad 7010 	strh.w	r7, [sp, #16]
 80148dc:	f7fb f9a4 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 80148e0:	4628      	mov	r0, r5
 80148e2:	f7ff ff27 	bl	8014734 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80148e6:	ab06      	add	r3, sp, #24
 80148e8:	4602      	mov	r2, r0
 80148ea:	e896 0003 	ldmia.w	r6, {r0, r1}
 80148ee:	e883 0003 	stmia.w	r3, {r0, r1}
 80148f2:	4611      	mov	r1, r2
 80148f4:	4618      	mov	r0, r3
 80148f6:	f7fb f997 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 80148fa:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80148fe:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014902:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8014906:	4299      	cmp	r1, r3
 8014908:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801490c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8014910:	d10b      	bne.n	801492a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8014912:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014916:	4552      	cmp	r2, sl
 8014918:	d107      	bne.n	801492a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801491a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801491e:	455a      	cmp	r2, fp
 8014920:	d103      	bne.n	801492a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8014922:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8014926:	454a      	cmp	r2, r9
 8014928:	d06d      	beq.n	8014a06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801492a:	f1bb 0f00 	cmp.w	fp, #0
 801492e:	dd65      	ble.n	80149fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8014930:	f1b9 0f00 	cmp.w	r9, #0
 8014934:	dd62      	ble.n	80149fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8014936:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801493a:	fa1f f08a 	uxth.w	r0, sl
 801493e:	4552      	cmp	r2, sl
 8014940:	9000      	str	r0, [sp, #0]
 8014942:	da12      	bge.n	801496a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8014944:	9301      	str	r3, [sp, #4]
 8014946:	9b00      	ldr	r3, [sp, #0]
 8014948:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801494c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8014950:	1a9a      	subs	r2, r3, r2
 8014952:	f8ad 1010 	strh.w	r1, [sp, #16]
 8014956:	4631      	mov	r1, r6
 8014958:	f8ad 0014 	strh.w	r0, [sp, #20]
 801495c:	4640      	mov	r0, r8
 801495e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8014962:	69ea      	ldr	r2, [r5, #28]
 8014964:	f7ff ff7a 	bl	801485c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014968:	9b01      	ldr	r3, [sp, #4]
 801496a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801496e:	b29f      	uxth	r7, r3
 8014970:	429a      	cmp	r2, r3
 8014972:	da0d      	bge.n	8014990 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8014974:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014978:	1aba      	subs	r2, r7, r2
 801497a:	f8ad a012 	strh.w	sl, [sp, #18]
 801497e:	4631      	mov	r1, r6
 8014980:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014984:	4640      	mov	r0, r8
 8014986:	f8ad 9016 	strh.w	r9, [sp, #22]
 801498a:	69ea      	ldr	r2, [r5, #28]
 801498c:	f7ff ff66 	bl	801485c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014990:	8822      	ldrh	r2, [r4, #0]
 8014992:	445f      	add	r7, fp
 8014994:	88a3      	ldrh	r3, [r4, #4]
 8014996:	b2bf      	uxth	r7, r7
 8014998:	4413      	add	r3, r2
 801499a:	b23a      	sxth	r2, r7
 801499c:	b29b      	uxth	r3, r3
 801499e:	b219      	sxth	r1, r3
 80149a0:	4291      	cmp	r1, r2
 80149a2:	dd0d      	ble.n	80149c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80149a4:	1bdb      	subs	r3, r3, r7
 80149a6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80149aa:	f8ad a012 	strh.w	sl, [sp, #18]
 80149ae:	4631      	mov	r1, r6
 80149b0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80149b4:	4640      	mov	r0, r8
 80149b6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80149ba:	69ea      	ldr	r2, [r5, #28]
 80149bc:	f7ff ff4e 	bl	801485c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80149c0:	88e2      	ldrh	r2, [r4, #6]
 80149c2:	8863      	ldrh	r3, [r4, #2]
 80149c4:	4413      	add	r3, r2
 80149c6:	9a00      	ldr	r2, [sp, #0]
 80149c8:	444a      	add	r2, r9
 80149ca:	b29b      	uxth	r3, r3
 80149cc:	fa1f f982 	uxth.w	r9, r2
 80149d0:	b219      	sxth	r1, r3
 80149d2:	fa0f f289 	sxth.w	r2, r9
 80149d6:	428a      	cmp	r2, r1
 80149d8:	da15      	bge.n	8014a06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80149da:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80149de:	eba3 0309 	sub.w	r3, r3, r9
 80149e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80149e6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80149ea:	4631      	mov	r1, r6
 80149ec:	f8ad 0010 	strh.w	r0, [sp, #16]
 80149f0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80149f4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80149f8:	69ea      	ldr	r2, [r5, #28]
 80149fa:	e001      	b.n	8014a00 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80149fc:	69ea      	ldr	r2, [r5, #28]
 80149fe:	4621      	mov	r1, r4
 8014a00:	4640      	mov	r0, r8
 8014a02:	f7ff ff2b 	bl	801485c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014a06:	4628      	mov	r0, r5
 8014a08:	f7ff fe94 	bl	8014734 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8014a0c:	6861      	ldr	r1, [r4, #4]
 8014a0e:	4602      	mov	r2, r0
 8014a10:	4633      	mov	r3, r6
 8014a12:	6820      	ldr	r0, [r4, #0]
 8014a14:	c303      	stmia	r3!, {r0, r1}
 8014a16:	4611      	mov	r1, r2
 8014a18:	4630      	mov	r0, r6
 8014a1a:	f7fb f905 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 8014a1e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8014a22:	2b00      	cmp	r3, #0
 8014a24:	f77f af33 	ble.w	801488e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014a28:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014a2c:	2b00      	cmp	r3, #0
 8014a2e:	f77f af2e 	ble.w	801488e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8014a32:	4628      	mov	r0, r5
 8014a34:	f7ff fe9a 	bl	801476c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8014a38:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8014a3c:	1a18      	subs	r0, r3, r0
 8014a3e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8014a42:	4628      	mov	r0, r5
 8014a44:	f7ff fea6 	bl	8014794 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8014a48:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014a4c:	4631      	mov	r1, r6
 8014a4e:	1a18      	subs	r0, r3, r0
 8014a50:	f8ad 0012 	strh.w	r0, [sp, #18]
 8014a54:	4628      	mov	r0, r5
 8014a56:	682b      	ldr	r3, [r5, #0]
 8014a58:	689b      	ldr	r3, [r3, #8]
 8014a5a:	4798      	blx	r3
 8014a5c:	e717      	b.n	801488e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08014a5e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8014a5e:	b570      	push	{r4, r5, r6, lr}
 8014a60:	1d06      	adds	r6, r0, #4
 8014a62:	b086      	sub	sp, #24
 8014a64:	460c      	mov	r4, r1
 8014a66:	2300      	movs	r3, #0
 8014a68:	4631      	mov	r1, r6
 8014a6a:	4605      	mov	r5, r0
 8014a6c:	a802      	add	r0, sp, #8
 8014a6e:	9301      	str	r3, [sp, #4]
 8014a70:	f7ff fca0 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014a74:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014a78:	8822      	ldrh	r2, [r4, #0]
 8014a7a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8014a7e:	1ad2      	subs	r2, r2, r3
 8014a80:	8863      	ldrh	r3, [r4, #2]
 8014a82:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014a86:	1a5b      	subs	r3, r3, r1
 8014a88:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8014a8c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014a90:	aa01      	add	r2, sp, #4
 8014a92:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014a96:	4630      	mov	r0, r6
 8014a98:	f8ad 1016 	strh.w	r1, [sp, #22]
 8014a9c:	a904      	add	r1, sp, #16
 8014a9e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014aa2:	f7fb f999 	bl	800fdd8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8014aa6:	9a01      	ldr	r2, [sp, #4]
 8014aa8:	b11a      	cbz	r2, 8014ab2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8014aaa:	4621      	mov	r1, r4
 8014aac:	4628      	mov	r0, r5
 8014aae:	f7ff fed5 	bl	801485c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8014ab2:	b006      	add	sp, #24
 8014ab4:	bd70      	pop	{r4, r5, r6, pc}

08014ab6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8014ab6:	4602      	mov	r2, r0
 8014ab8:	b530      	push	{r4, r5, lr}
 8014aba:	4604      	mov	r4, r0
 8014abc:	b085      	sub	sp, #20
 8014abe:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8014ac2:	460d      	mov	r5, r1
 8014ac4:	466b      	mov	r3, sp
 8014ac6:	6851      	ldr	r1, [r2, #4]
 8014ac8:	c303      	stmia	r3!, {r0, r1}
 8014aca:	4629      	mov	r1, r5
 8014acc:	4668      	mov	r0, sp
 8014ace:	f7fb f8ab 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 8014ad2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014ad6:	b12b      	cbz	r3, 8014ae4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8014ad8:	4669      	mov	r1, sp
 8014ada:	4620      	mov	r0, r4
 8014adc:	f7ff ffbf 	bl	8014a5e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8014ae0:	b005      	add	sp, #20
 8014ae2:	bd30      	pop	{r4, r5, pc}
 8014ae4:	3404      	adds	r4, #4
 8014ae6:	a802      	add	r0, sp, #8
 8014ae8:	4621      	mov	r1, r4
 8014aea:	f7ff fc63 	bl	80143b4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014aee:	f8bd 3000 	ldrh.w	r3, [sp]
 8014af2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8014af6:	4669      	mov	r1, sp
 8014af8:	4620      	mov	r0, r4
 8014afa:	1a9b      	subs	r3, r3, r2
 8014afc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014b00:	f8ad 3000 	strh.w	r3, [sp]
 8014b04:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014b08:	1a9b      	subs	r3, r3, r2
 8014b0a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8014b0e:	f7fb f92a 	bl	800fd66 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8014b12:	e7e5      	b.n	8014ae0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08014b14 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8014b14:	460b      	mov	r3, r1
 8014b16:	680a      	ldr	r2, [r1, #0]
 8014b18:	1d01      	adds	r1, r0, #4
 8014b1a:	6992      	ldr	r2, [r2, #24]
 8014b1c:	4618      	mov	r0, r3
 8014b1e:	4710      	bx	r2

08014b20 <_ZN8touchgfx12TextProviderC1Ev>:
 8014b20:	b538      	push	{r3, r4, r5, lr}
 8014b22:	2500      	movs	r5, #0
 8014b24:	2302      	movs	r3, #2
 8014b26:	4604      	mov	r4, r0
 8014b28:	220e      	movs	r2, #14
 8014b2a:	7403      	strb	r3, [r0, #16]
 8014b2c:	4629      	mov	r1, r5
 8014b2e:	6145      	str	r5, [r0, #20]
 8014b30:	7605      	strb	r5, [r0, #24]
 8014b32:	83c5      	strh	r5, [r0, #30]
 8014b34:	8405      	strh	r5, [r0, #32]
 8014b36:	86c5      	strh	r5, [r0, #54]	; 0x36
 8014b38:	8705      	strh	r5, [r0, #56]	; 0x38
 8014b3a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8014b3c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8014b40:	e9c0 5500 	strd	r5, r5, [r0]
 8014b44:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8014b48:	304c      	adds	r0, #76	; 0x4c
 8014b4a:	f00e fe76 	bl	802383a <memset>
 8014b4e:	2301      	movs	r3, #1
 8014b50:	4620      	mov	r0, r4
 8014b52:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8014b56:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8014b5a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8014b5e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8014b62:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8014b66:	f7f8 fd61 	bl	800d62c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8014b6a:	4620      	mov	r0, r4
 8014b6c:	bd38      	pop	{r3, r4, r5, pc}

08014b6e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8014b6e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8014b70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014b74:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8014b76:	fab0 f080 	clz	r0, r0
 8014b7a:	0940      	lsrs	r0, r0, #5
 8014b7c:	4770      	bx	lr

08014b7e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8014b7e:	b530      	push	{r4, r5, lr}
 8014b80:	2500      	movs	r5, #0
 8014b82:	2401      	movs	r4, #1
 8014b84:	6843      	ldr	r3, [r0, #4]
 8014b86:	b913      	cbnz	r3, 8014b8e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8014b88:	6803      	ldr	r3, [r0, #0]
 8014b8a:	b313      	cbz	r3, 8014bd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014b8c:	6043      	str	r3, [r0, #4]
 8014b8e:	7e03      	ldrb	r3, [r0, #24]
 8014b90:	b143      	cbz	r3, 8014ba4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8014b92:	6943      	ldr	r3, [r0, #20]
 8014b94:	b12b      	cbz	r3, 8014ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014b96:	881a      	ldrh	r2, [r3, #0]
 8014b98:	b11a      	cbz	r2, 8014ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014b9a:	1c9a      	adds	r2, r3, #2
 8014b9c:	6142      	str	r2, [r0, #20]
 8014b9e:	8818      	ldrh	r0, [r3, #0]
 8014ba0:	bd30      	pop	{r4, r5, pc}
 8014ba2:	7605      	strb	r5, [r0, #24]
 8014ba4:	6843      	ldr	r3, [r0, #4]
 8014ba6:	8819      	ldrh	r1, [r3, #0]
 8014ba8:	b199      	cbz	r1, 8014bd2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014baa:	1c9a      	adds	r2, r3, #2
 8014bac:	2902      	cmp	r1, #2
 8014bae:	6042      	str	r2, [r0, #4]
 8014bb0:	d1f5      	bne.n	8014b9e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8014bb2:	7c03      	ldrb	r3, [r0, #16]
 8014bb4:	2b01      	cmp	r3, #1
 8014bb6:	d8e5      	bhi.n	8014b84 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014bb8:	1c5a      	adds	r2, r3, #1
 8014bba:	3302      	adds	r3, #2
 8014bbc:	7402      	strb	r2, [r0, #16]
 8014bbe:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8014bc2:	6143      	str	r3, [r0, #20]
 8014bc4:	2b00      	cmp	r3, #0
 8014bc6:	d0dd      	beq.n	8014b84 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014bc8:	881b      	ldrh	r3, [r3, #0]
 8014bca:	2b00      	cmp	r3, #0
 8014bcc:	d0da      	beq.n	8014b84 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014bce:	7604      	strb	r4, [r0, #24]
 8014bd0:	e7d8      	b.n	8014b84 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014bd2:	2000      	movs	r0, #0
 8014bd4:	e7e4      	b.n	8014ba0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8014bd6:	6001      	str	r1, [r0, #0]
 8014bd8:	2100      	movs	r1, #0
 8014bda:	b430      	push	{r4, r5}
 8014bdc:	6041      	str	r1, [r0, #4]
 8014bde:	6815      	ldr	r5, [r2, #0]
 8014be0:	6085      	str	r5, [r0, #8]
 8014be2:	6852      	ldr	r2, [r2, #4]
 8014be4:	6443      	str	r3, [r0, #68]	; 0x44
 8014be6:	9b02      	ldr	r3, [sp, #8]
 8014be8:	60c2      	str	r2, [r0, #12]
 8014bea:	7401      	strb	r1, [r0, #16]
 8014bec:	6141      	str	r1, [r0, #20]
 8014bee:	7601      	strb	r1, [r0, #24]
 8014bf0:	8701      	strh	r1, [r0, #56]	; 0x38
 8014bf2:	8401      	strh	r1, [r0, #32]
 8014bf4:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8014bf8:	6483      	str	r3, [r0, #72]	; 0x48
 8014bfa:	bc30      	pop	{r4, r5}
 8014bfc:	f7f8 bd16 	b.w	800d62c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08014c00 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8014c00:	b408      	push	{r3}
 8014c02:	b510      	push	{r4, lr}
 8014c04:	b085      	sub	sp, #20
 8014c06:	ac07      	add	r4, sp, #28
 8014c08:	f854 3b04 	ldr.w	r3, [r4], #4
 8014c0c:	9300      	str	r3, [sp, #0]
 8014c0e:	4613      	mov	r3, r2
 8014c10:	4622      	mov	r2, r4
 8014c12:	9403      	str	r4, [sp, #12]
 8014c14:	f7ff ffdf 	bl	8014bd6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014c18:	b005      	add	sp, #20
 8014c1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014c1e:	b001      	add	sp, #4
 8014c20:	4770      	bx	lr

08014c22 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8014c22:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014c24:	4605      	mov	r5, r0
 8014c26:	4608      	mov	r0, r1
 8014c28:	b1f1      	cbz	r1, 8014c68 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8014c2a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8014c2e:	460b      	mov	r3, r1
 8014c30:	f101 0708 	add.w	r7, r1, #8
 8014c34:	4622      	mov	r2, r4
 8014c36:	6818      	ldr	r0, [r3, #0]
 8014c38:	3308      	adds	r3, #8
 8014c3a:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8014c3e:	4626      	mov	r6, r4
 8014c40:	42bb      	cmp	r3, r7
 8014c42:	c603      	stmia	r6!, {r0, r1}
 8014c44:	4634      	mov	r4, r6
 8014c46:	d1f6      	bne.n	8014c36 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8014c48:	6818      	ldr	r0, [r3, #0]
 8014c4a:	6030      	str	r0, [r6, #0]
 8014c4c:	4610      	mov	r0, r2
 8014c4e:	889b      	ldrh	r3, [r3, #4]
 8014c50:	80b3      	strh	r3, [r6, #4]
 8014c52:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8014c56:	015b      	lsls	r3, r3, #5
 8014c58:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8014c5c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8014c60:	430b      	orrs	r3, r1
 8014c62:	425b      	negs	r3, r3
 8014c64:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8014c68:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014c6a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8014c6a:	b538      	push	{r3, r4, r5, lr}
 8014c6c:	460c      	mov	r4, r1
 8014c6e:	6811      	ldr	r1, [r2, #0]
 8014c70:	4610      	mov	r0, r2
 8014c72:	68cd      	ldr	r5, [r1, #12]
 8014c74:	4619      	mov	r1, r3
 8014c76:	47a8      	blx	r5
 8014c78:	2800      	cmp	r0, #0
 8014c7a:	bf08      	it	eq
 8014c7c:	4620      	moveq	r0, r4
 8014c7e:	bd38      	pop	{r3, r4, r5, pc}

08014c80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8014c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014c82:	4604      	mov	r4, r0
 8014c84:	4615      	mov	r5, r2
 8014c86:	4608      	mov	r0, r1
 8014c88:	b93a      	cbnz	r2, 8014c9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8014c8a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8014c8e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8014c92:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8014c96:	4628      	mov	r0, r5
 8014c98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014c9a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8014c9e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8014ca2:	8893      	ldrh	r3, [r2, #4]
 8014ca4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8014ca8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8014cac:	79ee      	ldrb	r6, [r5, #7]
 8014cae:	4316      	orrs	r6, r2
 8014cb0:	19da      	adds	r2, r3, r7
 8014cb2:	b291      	uxth	r1, r2
 8014cb4:	b2b7      	uxth	r7, r6
 8014cb6:	291d      	cmp	r1, #29
 8014cb8:	d87b      	bhi.n	8014db2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8014cba:	2201      	movs	r2, #1
 8014cbc:	10f6      	asrs	r6, r6, #3
 8014cbe:	408a      	lsls	r2, r1
 8014cc0:	4974      	ldr	r1, [pc, #464]	; (8014e94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8014cc2:	420a      	tst	r2, r1
 8014cc4:	d12e      	bne.n	8014d24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8014cc6:	f412 7f60 	tst.w	r2, #896	; 0x380
 8014cca:	d072      	beq.n	8014db2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 8014ccc:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8014cd0:	462b      	mov	r3, r5
 8014cd2:	f105 0e08 	add.w	lr, r5, #8
 8014cd6:	4615      	mov	r5, r2
 8014cd8:	6818      	ldr	r0, [r3, #0]
 8014cda:	3308      	adds	r3, #8
 8014cdc:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8014ce0:	4694      	mov	ip, r2
 8014ce2:	4573      	cmp	r3, lr
 8014ce4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014ce8:	4662      	mov	r2, ip
 8014cea:	d1f5      	bne.n	8014cd8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8014cec:	6818      	ldr	r0, [r3, #0]
 8014cee:	f8cc 0000 	str.w	r0, [ip]
 8014cf2:	889b      	ldrh	r3, [r3, #4]
 8014cf4:	f8ac 3004 	strh.w	r3, [ip, #4]
 8014cf8:	b2b3      	uxth	r3, r6
 8014cfa:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8014cfe:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8014d02:	1aca      	subs	r2, r1, r3
 8014d04:	1bcf      	subs	r7, r1, r7
 8014d06:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8014d0a:	b292      	uxth	r2, r2
 8014d0c:	1afb      	subs	r3, r7, r3
 8014d0e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8014d12:	10d2      	asrs	r2, r2, #3
 8014d14:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8014d18:	4302      	orrs	r2, r0
 8014d1a:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8014d1e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8014d22:	e7b8      	b.n	8014c96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8014d24:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8014d26:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014d2a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8014d2c:	f640 6333 	movw	r3, #3635	; 0xe33
 8014d30:	4299      	cmp	r1, r3
 8014d32:	d110      	bne.n	8014d56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8014d34:	6803      	ldr	r3, [r0, #0]
 8014d36:	68db      	ldr	r3, [r3, #12]
 8014d38:	4798      	blx	r3
 8014d3a:	7b41      	ldrb	r1, [r0, #13]
 8014d3c:	00cb      	lsls	r3, r1, #3
 8014d3e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014d42:	7a03      	ldrb	r3, [r0, #8]
 8014d44:	0648      	lsls	r0, r1, #25
 8014d46:	ea43 0302 	orr.w	r3, r3, r2
 8014d4a:	bf44      	itt	mi
 8014d4c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014d50:	b21b      	sxthmi	r3, r3
 8014d52:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8014d56:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8014d5a:	462a      	mov	r2, r5
 8014d5c:	f105 0c08 	add.w	ip, r5, #8
 8014d60:	443b      	add	r3, r7
 8014d62:	4433      	add	r3, r6
 8014d64:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8014d68:	b29b      	uxth	r3, r3
 8014d6a:	4635      	mov	r5, r6
 8014d6c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8014d70:	6810      	ldr	r0, [r2, #0]
 8014d72:	3208      	adds	r2, #8
 8014d74:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8014d78:	4637      	mov	r7, r6
 8014d7a:	4562      	cmp	r2, ip
 8014d7c:	c703      	stmia	r7!, {r0, r1}
 8014d7e:	463e      	mov	r6, r7
 8014d80:	d1f6      	bne.n	8014d70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8014d82:	6810      	ldr	r0, [r2, #0]
 8014d84:	6038      	str	r0, [r7, #0]
 8014d86:	8892      	ldrh	r2, [r2, #4]
 8014d88:	80ba      	strh	r2, [r7, #4]
 8014d8a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8014d8e:	10db      	asrs	r3, r3, #3
 8014d90:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8014d94:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8014d98:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8014d9c:	4313      	orrs	r3, r2
 8014d9e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8014da2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8014da6:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8014daa:	1a9b      	subs	r3, r3, r2
 8014dac:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8014db0:	e771      	b.n	8014c96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8014db2:	f023 0204 	bic.w	r2, r3, #4
 8014db6:	f640 611b 	movw	r1, #3611	; 0xe1b
 8014dba:	428a      	cmp	r2, r1
 8014dbc:	d003      	beq.n	8014dc6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 8014dbe:	f640 621d 	movw	r2, #3613	; 0xe1d
 8014dc2:	4293      	cmp	r3, r2
 8014dc4:	d120      	bne.n	8014e08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 8014dc6:	3b01      	subs	r3, #1
 8014dc8:	4602      	mov	r2, r0
 8014dca:	4629      	mov	r1, r5
 8014dcc:	4620      	mov	r0, r4
 8014dce:	b29b      	uxth	r3, r3
 8014dd0:	f7ff ff4b 	bl	8014c6a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8014dd4:	7b41      	ldrb	r1, [r0, #13]
 8014dd6:	00cb      	lsls	r3, r1, #3
 8014dd8:	0649      	lsls	r1, r1, #25
 8014dda:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014dde:	7a03      	ldrb	r3, [r0, #8]
 8014de0:	ea43 0302 	orr.w	r3, r3, r2
 8014de4:	bf44      	itt	mi
 8014de6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014dea:	b21b      	sxthmi	r3, r3
 8014dec:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8014df0:	7b6b      	ldrb	r3, [r5, #13]
 8014df2:	7aaa      	ldrb	r2, [r5, #10]
 8014df4:	005b      	lsls	r3, r3, #1
 8014df6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014dfa:	4313      	orrs	r3, r2
 8014dfc:	115a      	asrs	r2, r3, #5
 8014dfe:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8014e02:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8014e06:	e035      	b.n	8014e74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8014e08:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8014e0c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8014e10:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8014e14:	7a2a      	ldrb	r2, [r5, #8]
 8014e16:	ea42 0201 	orr.w	r2, r2, r1
 8014e1a:	f640 6109 	movw	r1, #3593	; 0xe09
 8014e1e:	bf1c      	itt	ne
 8014e20:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8014e24:	b212      	sxthne	r2, r2
 8014e26:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8014e2a:	f023 0210 	bic.w	r2, r3, #16
 8014e2e:	428a      	cmp	r2, r1
 8014e30:	d003      	beq.n	8014e3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8014e32:	f640 6213 	movw	r2, #3603	; 0xe13
 8014e36:	4293      	cmp	r3, r2
 8014e38:	d129      	bne.n	8014e8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8014e3a:	7b6e      	ldrb	r6, [r5, #13]
 8014e3c:	4629      	mov	r1, r5
 8014e3e:	0076      	lsls	r6, r6, #1
 8014e40:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8014e44:	7aae      	ldrb	r6, [r5, #10]
 8014e46:	4316      	orrs	r6, r2
 8014e48:	f640 6213 	movw	r2, #3603	; 0xe13
 8014e4c:	4293      	cmp	r3, r2
 8014e4e:	4602      	mov	r2, r0
 8014e50:	4620      	mov	r0, r4
 8014e52:	bf16      	itet	ne
 8014e54:	f103 33ff 	addne.w	r3, r3, #4294967295
 8014e58:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8014e5c:	b29b      	uxthne	r3, r3
 8014e5e:	f7ff ff04 	bl	8014c6a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8014e62:	7b43      	ldrb	r3, [r0, #13]
 8014e64:	7a82      	ldrb	r2, [r0, #10]
 8014e66:	005b      	lsls	r3, r3, #1
 8014e68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014e6c:	4313      	orrs	r3, r2
 8014e6e:	1af6      	subs	r6, r6, r3
 8014e70:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8014e74:	7b69      	ldrb	r1, [r5, #13]
 8014e76:	00cb      	lsls	r3, r1, #3
 8014e78:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014e7c:	7a2b      	ldrb	r3, [r5, #8]
 8014e7e:	4313      	orrs	r3, r2
 8014e80:	064a      	lsls	r2, r1, #25
 8014e82:	bf44      	itt	mi
 8014e84:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014e88:	b21b      	sxthmi	r3, r3
 8014e8a:	1bdb      	subs	r3, r3, r7
 8014e8c:	e747      	b.n	8014d1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8014e8e:	2300      	movs	r3, #0
 8014e90:	e7b7      	b.n	8014e02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 8014e92:	bf00      	nop
 8014e94:	3fc00079 	.word	0x3fc00079

08014e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8014e98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014e9c:	4604      	mov	r4, r0
 8014e9e:	b942      	cbnz	r2, 8014eb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8014ea0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014ea4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8014ea8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8014eac:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8014eb0:	e047      	b.n	8014f42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8014eb2:	7b51      	ldrb	r1, [r2, #13]
 8014eb4:	8893      	ldrh	r3, [r2, #4]
 8014eb6:	010d      	lsls	r5, r1, #4
 8014eb8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8014ebc:	79d5      	ldrb	r5, [r2, #7]
 8014ebe:	4305      	orrs	r5, r0
 8014ec0:	2d04      	cmp	r5, #4
 8014ec2:	bfcc      	ite	gt
 8014ec4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8014ec8:	f04f 0e01 	movle.w	lr, #1
 8014ecc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8014ed0:	f200 80ab 	bhi.w	801502a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8014ed4:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8014ed8:	4283      	cmp	r3, r0
 8014eda:	d216      	bcs.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014edc:	f240 605b 	movw	r0, #1627	; 0x65b
 8014ee0:	4283      	cmp	r3, r0
 8014ee2:	d859      	bhi.n	8014f98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8014ee4:	f240 6057 	movw	r0, #1623	; 0x657
 8014ee8:	4283      	cmp	r3, r0
 8014eea:	d20e      	bcs.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014eec:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8014ef0:	d24a      	bcs.n	8014f88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8014ef2:	f240 604e 	movw	r0, #1614	; 0x64e
 8014ef6:	4283      	cmp	r3, r0
 8014ef8:	d207      	bcs.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014efa:	f240 601a 	movw	r0, #1562	; 0x61a
 8014efe:	4283      	cmp	r3, r0
 8014f00:	d02a      	beq.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014f02:	d821      	bhi.n	8014f48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8014f04:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8014f08:	d35b      	bcc.n	8014fc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014f0a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8014f0e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8014f12:	f040 80d0 	bne.w	80150b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8014f16:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8014f1a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8014f1e:	f040 80ca 	bne.w	80150b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8014f22:	00cb      	lsls	r3, r1, #3
 8014f24:	0649      	lsls	r1, r1, #25
 8014f26:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8014f2a:	7a13      	ldrb	r3, [r2, #8]
 8014f2c:	ea43 0300 	orr.w	r3, r3, r0
 8014f30:	bf44      	itt	mi
 8014f32:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014f36:	b21b      	sxthmi	r3, r3
 8014f38:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8014f3c:	1b5d      	subs	r5, r3, r5
 8014f3e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8014f42:	4610      	mov	r0, r2
 8014f44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014f48:	f240 604b 	movw	r0, #1611	; 0x64b
 8014f4c:	4283      	cmp	r3, r0
 8014f4e:	d338      	bcc.n	8014fc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014f50:	f240 604c 	movw	r0, #1612	; 0x64c
 8014f54:	4283      	cmp	r3, r0
 8014f56:	d9d8      	bls.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014f58:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8014f5c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8014f60:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8014f64:	f040 80f3 	bne.w	801514e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8014f68:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8014f6c:	f040 80ef 	bne.w	801514e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8014f70:	00cb      	lsls	r3, r1, #3
 8014f72:	064e      	lsls	r6, r1, #25
 8014f74:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8014f78:	7a13      	ldrb	r3, [r2, #8]
 8014f7a:	ea43 0300 	orr.w	r3, r3, r0
 8014f7e:	bf44      	itt	mi
 8014f80:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014f84:	b21b      	sxthmi	r3, r3
 8014f86:	e7d9      	b.n	8014f3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8014f88:	f240 6054 	movw	r0, #1620	; 0x654
 8014f8c:	4283      	cmp	r3, r0
 8014f8e:	d8e3      	bhi.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014f90:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8014f94:	d9e0      	bls.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014f96:	e7b8      	b.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014f98:	f240 6074 	movw	r0, #1652	; 0x674
 8014f9c:	4283      	cmp	r3, r0
 8014f9e:	d0b4      	beq.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014fa0:	d82d      	bhi.n	8014ffe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8014fa2:	f240 605e 	movw	r0, #1630	; 0x65e
 8014fa6:	4283      	cmp	r3, r0
 8014fa8:	d804      	bhi.n	8014fb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8014faa:	f240 605d 	movw	r0, #1629	; 0x65d
 8014fae:	4283      	cmp	r3, r0
 8014fb0:	d3d2      	bcc.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014fb2:	e7aa      	b.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014fb4:	f240 605f 	movw	r0, #1631	; 0x65f
 8014fb8:	4283      	cmp	r3, r0
 8014fba:	d0cd      	beq.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014fbc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8014fc0:	d0a3      	beq.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014fc2:	00cb      	lsls	r3, r1, #3
 8014fc4:	0649      	lsls	r1, r1, #25
 8014fc6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8014fca:	7a13      	ldrb	r3, [r2, #8]
 8014fcc:	ea43 0300 	orr.w	r3, r3, r0
 8014fd0:	bf44      	itt	mi
 8014fd2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014fd6:	b21b      	sxthmi	r3, r3
 8014fd8:	1b5d      	subs	r5, r3, r5
 8014fda:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8014fde:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8014fe2:	7b53      	ldrb	r3, [r2, #13]
 8014fe4:	015b      	lsls	r3, r3, #5
 8014fe6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8014fea:	7993      	ldrb	r3, [r2, #6]
 8014fec:	430b      	orrs	r3, r1
 8014fee:	2105      	movs	r1, #5
 8014ff0:	005b      	lsls	r3, r3, #1
 8014ff2:	fb93 f3f1 	sdiv	r3, r3, r1
 8014ff6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8014ffa:	440b      	add	r3, r1
 8014ffc:	e756      	b.n	8014eac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8014ffe:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8015002:	4283      	cmp	r3, r0
 8015004:	d809      	bhi.n	801501a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8015006:	f240 60df 	movw	r0, #1759	; 0x6df
 801500a:	4283      	cmp	r3, r0
 801500c:	f4bf af7d 	bcs.w	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015010:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8015014:	2b05      	cmp	r3, #5
 8015016:	d8d4      	bhi.n	8014fc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015018:	e777      	b.n	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801501a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801501e:	4283      	cmp	r3, r0
 8015020:	d09a      	beq.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015022:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8015026:	4283      	cmp	r3, r0
 8015028:	e7ca      	b.n	8014fc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801502a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801502e:	d22b      	bcs.n	8015088 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8015030:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8015034:	4283      	cmp	r3, r0
 8015036:	d28f      	bcs.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015038:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801503c:	4283      	cmp	r3, r0
 801503e:	d816      	bhi.n	801506e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8015040:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8015044:	4283      	cmp	r3, r0
 8015046:	f4bf af60 	bcs.w	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801504a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801504e:	4283      	cmp	r3, r0
 8015050:	d80a      	bhi.n	8015068 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8015052:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8015056:	4283      	cmp	r3, r0
 8015058:	f4bf af57 	bcs.w	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801505c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8015060:	4283      	cmp	r3, r0
 8015062:	f43f af79 	beq.w	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015066:	e7ac      	b.n	8014fc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015068:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801506c:	e7f8      	b.n	8015060 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801506e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8015072:	4283      	cmp	r3, r0
 8015074:	d802      	bhi.n	801507c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8015076:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801507a:	e798      	b.n	8014fae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801507c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8015080:	4283      	cmp	r3, r0
 8015082:	f47f af42 	bne.w	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015086:	e767      	b.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015088:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801508c:	4283      	cmp	r3, r0
 801508e:	f43f af63 	beq.w	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015092:	d802      	bhi.n	801509a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8015094:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8015098:	e7f2      	b.n	8015080 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801509a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801509e:	4283      	cmp	r3, r0
 80150a0:	d805      	bhi.n	80150ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80150a2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80150a6:	4283      	cmp	r3, r0
 80150a8:	f4ff af2f 	bcc.w	8014f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80150ac:	e754      	b.n	8014f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80150ae:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80150b2:	4283      	cmp	r3, r0
 80150b4:	e7af      	b.n	8015016 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80150b6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80150ba:	4617      	mov	r7, r2
 80150bc:	f102 0808 	add.w	r8, r2, #8
 80150c0:	4666      	mov	r6, ip
 80150c2:	6838      	ldr	r0, [r7, #0]
 80150c4:	3708      	adds	r7, #8
 80150c6:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80150ca:	46e6      	mov	lr, ip
 80150cc:	4547      	cmp	r7, r8
 80150ce:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80150d2:	46f4      	mov	ip, lr
 80150d4:	d1f5      	bne.n	80150c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80150d6:	6838      	ldr	r0, [r7, #0]
 80150d8:	f8ce 0000 	str.w	r0, [lr]
 80150dc:	88b9      	ldrh	r1, [r7, #4]
 80150de:	f8ae 1004 	strh.w	r1, [lr, #4]
 80150e2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80150e6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80150ea:	d009      	beq.n	8015100 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 80150ec:	7b51      	ldrb	r1, [r2, #13]
 80150ee:	7992      	ldrb	r2, [r2, #6]
 80150f0:	0149      	lsls	r1, r1, #5
 80150f2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80150f6:	4311      	orrs	r1, r2
 80150f8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80150fc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8015100:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8015104:	b2ad      	uxth	r5, r5
 8015106:	d00d      	beq.n	8015124 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8015108:	442b      	add	r3, r5
 801510a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801510e:	b29b      	uxth	r3, r3
 8015110:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8015114:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8015118:	10db      	asrs	r3, r3, #3
 801511a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801511e:	4313      	orrs	r3, r2
 8015120:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8015124:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8015128:	00cb      	lsls	r3, r1, #3
 801512a:	064f      	lsls	r7, r1, #25
 801512c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015130:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8015134:	ea43 0302 	orr.w	r3, r3, r2
 8015138:	bf44      	itt	mi
 801513a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801513e:	b21b      	sxthmi	r3, r3
 8015140:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8015144:	1b5b      	subs	r3, r3, r5
 8015146:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801514a:	4632      	mov	r2, r6
 801514c:	e6f9      	b.n	8014f42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801514e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8015152:	4617      	mov	r7, r2
 8015154:	f102 0908 	add.w	r9, r2, #8
 8015158:	4666      	mov	r6, ip
 801515a:	6838      	ldr	r0, [r7, #0]
 801515c:	3708      	adds	r7, #8
 801515e:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8015162:	46e0      	mov	r8, ip
 8015164:	454f      	cmp	r7, r9
 8015166:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801516a:	46c4      	mov	ip, r8
 801516c:	d1f5      	bne.n	801515a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 801516e:	6838      	ldr	r0, [r7, #0]
 8015170:	f8c8 0000 	str.w	r0, [r8]
 8015174:	88b9      	ldrh	r1, [r7, #4]
 8015176:	f8a8 1004 	strh.w	r1, [r8, #4]
 801517a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801517e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8015182:	d009      	beq.n	8015198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8015184:	7b51      	ldrb	r1, [r2, #13]
 8015186:	7992      	ldrb	r2, [r2, #6]
 8015188:	0149      	lsls	r1, r1, #5
 801518a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801518e:	4311      	orrs	r1, r2
 8015190:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015194:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8015198:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801519c:	d00e      	beq.n	80151bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801519e:	eba3 030e 	sub.w	r3, r3, lr
 80151a2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80151a6:	b29b      	uxth	r3, r3
 80151a8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80151ac:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80151b0:	10db      	asrs	r3, r3, #3
 80151b2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80151b6:	4313      	orrs	r3, r2
 80151b8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80151bc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80151c0:	00cb      	lsls	r3, r1, #3
 80151c2:	0648      	lsls	r0, r1, #25
 80151c4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80151c8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80151cc:	ea43 0302 	orr.w	r3, r3, r2
 80151d0:	bf44      	itt	mi
 80151d2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80151d6:	b21b      	sxthmi	r3, r3
 80151d8:	1b5d      	subs	r5, r3, r5
 80151da:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80151de:	e7b4      	b.n	801514a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

080151e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80151e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80151e4:	461e      	mov	r6, r3
 80151e6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80151e8:	4604      	mov	r4, r0
 80151ea:	4617      	mov	r7, r2
 80151ec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80151f0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80151f4:	f7f8 f974 	bl	800d4e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80151f8:	4605      	mov	r5, r0
 80151fa:	b918      	cbnz	r0, 8015204 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80151fc:	6030      	str	r0, [r6, #0]
 80151fe:	4628      	mov	r0, r5
 8015200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015204:	683b      	ldr	r3, [r7, #0]
 8015206:	4601      	mov	r1, r0
 8015208:	4638      	mov	r0, r7
 801520a:	68db      	ldr	r3, [r3, #12]
 801520c:	4798      	blx	r3
 801520e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8015212:	4602      	mov	r2, r0
 8015214:	6030      	str	r0, [r6, #0]
 8015216:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801521a:	d213      	bcs.n	8015244 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801521c:	4643      	mov	r3, r8
 801521e:	4639      	mov	r1, r7
 8015220:	4620      	mov	r0, r4
 8015222:	f7ff fe39 	bl	8014e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8015226:	6030      	str	r0, [r6, #0]
 8015228:	6833      	ldr	r3, [r6, #0]
 801522a:	b143      	cbz	r3, 801523e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801522c:	7b5a      	ldrb	r2, [r3, #13]
 801522e:	7a9b      	ldrb	r3, [r3, #10]
 8015230:	0052      	lsls	r2, r2, #1
 8015232:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015236:	4313      	orrs	r3, r2
 8015238:	bf0c      	ite	eq
 801523a:	2301      	moveq	r3, #1
 801523c:	2300      	movne	r3, #0
 801523e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8015242:	e7dc      	b.n	80151fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8015244:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8015248:	b29b      	uxth	r3, r3
 801524a:	2b7f      	cmp	r3, #127	; 0x7f
 801524c:	d804      	bhi.n	8015258 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801524e:	4639      	mov	r1, r7
 8015250:	4620      	mov	r0, r4
 8015252:	f7ff fd15 	bl	8014c80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8015256:	e7e6      	b.n	8015226 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8015258:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801525c:	2b00      	cmp	r3, #0
 801525e:	d0e3      	beq.n	8015228 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8015260:	f640 1302 	movw	r3, #2306	; 0x902
 8015264:	429d      	cmp	r5, r3
 8015266:	d1df      	bne.n	8015228 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8015268:	4601      	mov	r1, r0
 801526a:	4620      	mov	r0, r4
 801526c:	f7ff fcd9 	bl	8014c22 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8015270:	e7d9      	b.n	8015226 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08015272 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8015272:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015276:	461e      	mov	r6, r3
 8015278:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801527a:	4604      	mov	r4, r0
 801527c:	4617      	mov	r7, r2
 801527e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015282:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015286:	f7f8 f92b 	bl	800d4e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801528a:	4605      	mov	r5, r0
 801528c:	b918      	cbnz	r0, 8015296 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801528e:	6030      	str	r0, [r6, #0]
 8015290:	4628      	mov	r0, r5
 8015292:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015296:	683b      	ldr	r3, [r7, #0]
 8015298:	4601      	mov	r1, r0
 801529a:	4638      	mov	r0, r7
 801529c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80152a0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80152a4:	47c8      	blx	r9
 80152a6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80152aa:	4602      	mov	r2, r0
 80152ac:	6030      	str	r0, [r6, #0]
 80152ae:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80152b2:	d213      	bcs.n	80152dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80152b4:	4643      	mov	r3, r8
 80152b6:	4639      	mov	r1, r7
 80152b8:	4620      	mov	r0, r4
 80152ba:	f7ff fded 	bl	8014e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80152be:	6030      	str	r0, [r6, #0]
 80152c0:	6833      	ldr	r3, [r6, #0]
 80152c2:	b143      	cbz	r3, 80152d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80152c4:	7b5a      	ldrb	r2, [r3, #13]
 80152c6:	7a9b      	ldrb	r3, [r3, #10]
 80152c8:	0052      	lsls	r2, r2, #1
 80152ca:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80152ce:	4313      	orrs	r3, r2
 80152d0:	bf0c      	ite	eq
 80152d2:	2301      	moveq	r3, #1
 80152d4:	2300      	movne	r3, #0
 80152d6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80152da:	e7d9      	b.n	8015290 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80152dc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80152e0:	b29b      	uxth	r3, r3
 80152e2:	2b7f      	cmp	r3, #127	; 0x7f
 80152e4:	d804      	bhi.n	80152f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80152e6:	4639      	mov	r1, r7
 80152e8:	4620      	mov	r0, r4
 80152ea:	f7ff fcc9 	bl	8014c80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80152ee:	e7e6      	b.n	80152be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80152f0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80152f4:	2b00      	cmp	r3, #0
 80152f6:	d0e3      	beq.n	80152c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80152f8:	f640 1302 	movw	r3, #2306	; 0x902
 80152fc:	429d      	cmp	r5, r3
 80152fe:	d1df      	bne.n	80152c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8015300:	4601      	mov	r1, r0
 8015302:	4620      	mov	r0, r4
 8015304:	f7ff fc8d 	bl	8014c22 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8015308:	e7d9      	b.n	80152be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801530a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801530a:	b510      	push	{r4, lr}
 801530c:	4604      	mov	r4, r0
 801530e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8015312:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015314:	b1e1      	cbz	r1, 8015350 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8015316:	2b0a      	cmp	r3, #10
 8015318:	d02d      	beq.n	8015376 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801531a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801531c:	3901      	subs	r1, #1
 801531e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8015322:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8015324:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8015328:	1c51      	adds	r1, r2, #1
 801532a:	b289      	uxth	r1, r1
 801532c:	2901      	cmp	r1, #1
 801532e:	bf8a      	itet	hi
 8015330:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8015334:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8015336:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8015338:	1c5a      	adds	r2, r3, #1
 801533a:	8722      	strh	r2, [r4, #56]	; 0x38
 801533c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801533e:	4413      	add	r3, r2
 8015340:	b29b      	uxth	r3, r3
 8015342:	2b09      	cmp	r3, #9
 8015344:	bf88      	it	hi
 8015346:	3b0a      	subhi	r3, #10
 8015348:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801534c:	8458      	strh	r0, [r3, #34]	; 0x22
 801534e:	e7de      	b.n	801530e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8015350:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015352:	2b0a      	cmp	r3, #10
 8015354:	d00f      	beq.n	8015376 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8015356:	4620      	mov	r0, r4
 8015358:	f7ff fc11 	bl	8014b7e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801535c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801535e:	1c5a      	adds	r2, r3, #1
 8015360:	8722      	strh	r2, [r4, #56]	; 0x38
 8015362:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015364:	4413      	add	r3, r2
 8015366:	b29b      	uxth	r3, r3
 8015368:	2b09      	cmp	r3, #9
 801536a:	bf88      	it	hi
 801536c:	3b0a      	subhi	r3, #10
 801536e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015372:	8458      	strh	r0, [r3, #34]	; 0x22
 8015374:	e7ec      	b.n	8015350 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8015376:	bd10      	pop	{r4, pc}

08015378 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8015378:	b538      	push	{r3, r4, r5, lr}
 801537a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801537c:	4604      	mov	r4, r0
 801537e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8015382:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8015384:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8015386:	3a01      	subs	r2, #1
 8015388:	8702      	strh	r2, [r0, #56]	; 0x38
 801538a:	1c5a      	adds	r2, r3, #1
 801538c:	b292      	uxth	r2, r2
 801538e:	2a09      	cmp	r2, #9
 8015390:	bf8a      	itet	hi
 8015392:	3b09      	subhi	r3, #9
 8015394:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8015396:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8015398:	f7ff ffb7 	bl	801530a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801539c:	8c23      	ldrh	r3, [r4, #32]
 801539e:	2b01      	cmp	r3, #1
 80153a0:	bf9c      	itt	ls
 80153a2:	3301      	addls	r3, #1
 80153a4:	8423      	strhls	r3, [r4, #32]
 80153a6:	8be3      	ldrh	r3, [r4, #30]
 80153a8:	b90b      	cbnz	r3, 80153ae <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80153aa:	2302      	movs	r3, #2
 80153ac:	83e3      	strh	r3, [r4, #30]
 80153ae:	8be3      	ldrh	r3, [r4, #30]
 80153b0:	4628      	mov	r0, r5
 80153b2:	3b01      	subs	r3, #1
 80153b4:	b29b      	uxth	r3, r3
 80153b6:	83e3      	strh	r3, [r4, #30]
 80153b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80153bc:	8365      	strh	r5, [r4, #26]
 80153be:	bd38      	pop	{r3, r4, r5, pc}

080153c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80153c0:	428a      	cmp	r2, r1
 80153c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80153c6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80153c8:	d932      	bls.n	8015430 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 80153ca:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80153cc:	1a54      	subs	r4, r2, r1
 80153ce:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80153d2:	19ee      	adds	r6, r5, r7
 80153d4:	fa1f fe84 	uxth.w	lr, r4
 80153d8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80153dc:	3e01      	subs	r6, #1
 80153de:	b2b4      	uxth	r4, r6
 80153e0:	eba4 090e 	sub.w	r9, r4, lr
 80153e4:	fa1f f989 	uxth.w	r9, r9
 80153e8:	2c09      	cmp	r4, #9
 80153ea:	4626      	mov	r6, r4
 80153ec:	bf88      	it	hi
 80153ee:	f1a4 060a 	subhi.w	r6, r4, #10
 80153f2:	f1bc 0f00 	cmp.w	ip, #0
 80153f6:	f104 34ff 	add.w	r4, r4, #4294967295
 80153fa:	bf08      	it	eq
 80153fc:	f04f 0c02 	moveq.w	ip, #2
 8015400:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015404:	b2a4      	uxth	r4, r4
 8015406:	f10c 3cff 	add.w	ip, ip, #4294967295
 801540a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801540e:	454c      	cmp	r4, r9
 8015410:	fa1f fc8c 	uxth.w	ip, ip
 8015414:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8015418:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801541c:	d1e4      	bne.n	80153e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801541e:	eba5 050e 	sub.w	r5, r5, lr
 8015422:	eb0e 0408 	add.w	r4, lr, r8
 8015426:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801542a:	8705      	strh	r5, [r0, #56]	; 0x38
 801542c:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8015430:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8015432:	250a      	movs	r5, #10
 8015434:	1a64      	subs	r4, r4, r1
 8015436:	4439      	add	r1, r7
 8015438:	b289      	uxth	r1, r1
 801543a:	8704      	strh	r4, [r0, #56]	; 0x38
 801543c:	2909      	cmp	r1, #9
 801543e:	bf88      	it	hi
 8015440:	390a      	subhi	r1, #10
 8015442:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015444:	b18a      	cbz	r2, 801546a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 8015446:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8015448:	3a01      	subs	r2, #1
 801544a:	3101      	adds	r1, #1
 801544c:	b292      	uxth	r2, r2
 801544e:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8015452:	8701      	strh	r1, [r0, #56]	; 0x38
 8015454:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8015456:	b901      	cbnz	r1, 801545a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8015458:	86c5      	strh	r5, [r0, #54]	; 0x36
 801545a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801545c:	3901      	subs	r1, #1
 801545e:	b289      	uxth	r1, r1
 8015460:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015462:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8015466:	844c      	strh	r4, [r1, #34]	; 0x22
 8015468:	e7ec      	b.n	8015444 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 801546a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801546e:	f7ff bf4c 	b.w	801530a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08015472 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8015472:	b570      	push	{r4, r5, r6, lr}
 8015474:	2500      	movs	r5, #0
 8015476:	4295      	cmp	r5, r2
 8015478:	d011      	beq.n	801549e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801547a:	8bc4      	ldrh	r4, [r0, #30]
 801547c:	f831 6b02 	ldrh.w	r6, [r1], #2
 8015480:	4414      	add	r4, r2
 8015482:	3c01      	subs	r4, #1
 8015484:	1b64      	subs	r4, r4, r5
 8015486:	b2a4      	uxth	r4, r4
 8015488:	2c01      	cmp	r4, #1
 801548a:	bf88      	it	hi
 801548c:	3c02      	subhi	r4, #2
 801548e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015492:	8b64      	ldrh	r4, [r4, #26]
 8015494:	42b4      	cmp	r4, r6
 8015496:	d117      	bne.n	80154c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8015498:	3501      	adds	r5, #1
 801549a:	b2ad      	uxth	r5, r5
 801549c:	e7eb      	b.n	8015476 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801549e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80154a2:	2400      	movs	r4, #0
 80154a4:	4413      	add	r3, r2
 80154a6:	b2a2      	uxth	r2, r4
 80154a8:	429a      	cmp	r2, r3
 80154aa:	da0f      	bge.n	80154cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80154ac:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80154ae:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80154b2:	3401      	adds	r4, #1
 80154b4:	4432      	add	r2, r6
 80154b6:	b292      	uxth	r2, r2
 80154b8:	2a09      	cmp	r2, #9
 80154ba:	bf88      	it	hi
 80154bc:	3a0a      	subhi	r2, #10
 80154be:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80154c2:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80154c4:	42aa      	cmp	r2, r5
 80154c6:	d0ee      	beq.n	80154a6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80154c8:	2000      	movs	r0, #0
 80154ca:	bd70      	pop	{r4, r5, r6, pc}
 80154cc:	2001      	movs	r0, #1
 80154ce:	e7fc      	b.n	80154ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080154d0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80154d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154d4:	4605      	mov	r5, r0
 80154d6:	4616      	mov	r6, r2
 80154d8:	1c8c      	adds	r4, r1, #2
 80154da:	8809      	ldrh	r1, [r1, #0]
 80154dc:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80154e0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80154e4:	42b3      	cmp	r3, r6
 80154e6:	d124      	bne.n	8015532 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80154e8:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80154ec:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80154f0:	f001 070f 	and.w	r7, r1, #15
 80154f4:	4652      	mov	r2, sl
 80154f6:	f8cd 8000 	str.w	r8, [sp]
 80154fa:	464b      	mov	r3, r9
 80154fc:	4621      	mov	r1, r4
 80154fe:	4628      	mov	r0, r5
 8015500:	f7ff ffb7 	bl	8015472 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8015504:	4683      	mov	fp, r0
 8015506:	b168      	cbz	r0, 8015524 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8015508:	eb0a 0109 	add.w	r1, sl, r9
 801550c:	463a      	mov	r2, r7
 801550e:	4628      	mov	r0, r5
 8015510:	4441      	add	r1, r8
 8015512:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8015516:	4649      	mov	r1, r9
 8015518:	f7ff ff52 	bl	80153c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801551c:	4658      	mov	r0, fp
 801551e:	b003      	add	sp, #12
 8015520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015524:	eb07 010a 	add.w	r1, r7, sl
 8015528:	4449      	add	r1, r9
 801552a:	4441      	add	r1, r8
 801552c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8015530:	e7d2      	b.n	80154d8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8015532:	f04f 0b00 	mov.w	fp, #0
 8015536:	e7f1      	b.n	801551c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08015538 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8015538:	b570      	push	{r4, r5, r6, lr}
 801553a:	8810      	ldrh	r0, [r2, #0]
 801553c:	4298      	cmp	r0, r3
 801553e:	d817      	bhi.n	8015570 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8015540:	1e48      	subs	r0, r1, #1
 8015542:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8015546:	4298      	cmp	r0, r3
 8015548:	d312      	bcc.n	8015570 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801554a:	2400      	movs	r4, #0
 801554c:	428c      	cmp	r4, r1
 801554e:	d20f      	bcs.n	8015570 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8015550:	1860      	adds	r0, r4, r1
 8015552:	1040      	asrs	r0, r0, #1
 8015554:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8015558:	0085      	lsls	r5, r0, #2
 801555a:	42b3      	cmp	r3, r6
 801555c:	d902      	bls.n	8015564 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801555e:	3001      	adds	r0, #1
 8015560:	b284      	uxth	r4, r0
 8015562:	e7f3      	b.n	801554c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8015564:	d201      	bcs.n	801556a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8015566:	b281      	uxth	r1, r0
 8015568:	e7f0      	b.n	801554c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801556a:	442a      	add	r2, r5
 801556c:	8850      	ldrh	r0, [r2, #2]
 801556e:	bd70      	pop	{r4, r5, r6, pc}
 8015570:	2000      	movs	r0, #0
 8015572:	e7fc      	b.n	801556e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08015574 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8015574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015578:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801557a:	4604      	mov	r4, r0
 801557c:	260b      	movs	r6, #11
 801557e:	886f      	ldrh	r7, [r5, #2]
 8015580:	087f      	lsrs	r7, r7, #1
 8015582:	3e01      	subs	r6, #1
 8015584:	d013      	beq.n	80155ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8015586:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015588:	462a      	mov	r2, r5
 801558a:	4639      	mov	r1, r7
 801558c:	4620      	mov	r0, r4
 801558e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015592:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8015596:	4643      	mov	r3, r8
 8015598:	f7ff ffce 	bl	8015538 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801559c:	b138      	cbz	r0, 80155ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801559e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80155a2:	4642      	mov	r2, r8
 80155a4:	4620      	mov	r0, r4
 80155a6:	f7ff ff93 	bl	80154d0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80155aa:	2800      	cmp	r0, #0
 80155ac:	d1e9      	bne.n	8015582 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80155ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080155b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80155b4:	b570      	push	{r4, r5, r6, lr}
 80155b6:	694a      	ldr	r2, [r1, #20]
 80155b8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80155ba:	684b      	ldr	r3, [r1, #4]
 80155bc:	1b54      	subs	r4, r2, r5
 80155be:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80155c0:	f000 8106 	beq.w	80157d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80155c4:	1b9b      	subs	r3, r3, r6
 80155c6:	d003      	beq.n	80155d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80155c8:	4363      	muls	r3, r4
 80155ca:	2210      	movs	r2, #16
 80155cc:	fb93 f3f2 	sdiv	r3, r3, r2
 80155d0:	680c      	ldr	r4, [r1, #0]
 80155d2:	698a      	ldr	r2, [r1, #24]
 80155d4:	1b65      	subs	r5, r4, r5
 80155d6:	f000 80fd 	beq.w	80157d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80155da:	1b92      	subs	r2, r2, r6
 80155dc:	d003      	beq.n	80155e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80155de:	436a      	muls	r2, r5
 80155e0:	2410      	movs	r4, #16
 80155e2:	fb92 f2f4 	sdiv	r2, r2, r4
 80155e6:	1a9b      	subs	r3, r3, r2
 80155e8:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8015810 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80155ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80155f0:	460a      	mov	r2, r1
 80155f2:	ee07 3a90 	vmov	s15, r3
 80155f6:	f100 040c 	add.w	r4, r0, #12
 80155fa:	4603      	mov	r3, r0
 80155fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015600:	ee67 7a84 	vmul.f32	s15, s15, s8
 8015604:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8015608:	eeb1 6a43 	vneg.f32	s12, s6
 801560c:	edd2 7a02 	vldr	s15, [r2, #8]
 8015610:	3214      	adds	r2, #20
 8015612:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8015616:	ece3 6a01 	vstmia	r3!, {s13}
 801561a:	429c      	cmp	r4, r3
 801561c:	ed52 7a02 	vldr	s15, [r2, #-8]
 8015620:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015624:	edc3 7a02 	vstr	s15, [r3, #8]
 8015628:	ed52 7a01 	vldr	s15, [r2, #-4]
 801562c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8015630:	edc3 7a05 	vstr	s15, [r3, #20]
 8015634:	d1ea      	bne.n	801560c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8015636:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8015638:	698b      	ldr	r3, [r1, #24]
 801563a:	edd0 4a02 	vldr	s9, [r0, #8]
 801563e:	1a9b      	subs	r3, r3, r2
 8015640:	edd0 3a00 	vldr	s7, [r0]
 8015644:	edd0 6a01 	vldr	s13, [r0, #4]
 8015648:	ee07 3a90 	vmov	s15, r3
 801564c:	684b      	ldr	r3, [r1, #4]
 801564e:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8015652:	ed90 5a05 	vldr	s10, [r0, #20]
 8015656:	1a9b      	subs	r3, r3, r2
 8015658:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801565c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8015660:	ed90 2a03 	vldr	s4, [r0, #12]
 8015664:	ee07 3a10 	vmov	s14, r3
 8015668:	edd0 5a04 	vldr	s11, [r0, #16]
 801566c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8015670:	ed90 1a07 	vldr	s2, [r0, #28]
 8015674:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015678:	edd0 2a06 	vldr	s5, [r0, #24]
 801567c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8015680:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8015684:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015688:	ee32 5a45 	vsub.f32	s10, s4, s10
 801568c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8015690:	ee67 7a83 	vmul.f32	s15, s15, s6
 8015694:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8015698:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801569a:	694a      	ldr	r2, [r1, #20]
 801569c:	1b13      	subs	r3, r2, r4
 801569e:	ee07 3a10 	vmov	s14, r3
 80156a2:	680b      	ldr	r3, [r1, #0]
 80156a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80156a8:	1b1b      	subs	r3, r3, r4
 80156aa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80156ae:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80156b2:	ee07 3a10 	vmov	s14, r3
 80156b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80156ba:	ee27 7a04 	vmul.f32	s14, s14, s8
 80156be:	eee6 4a87 	vfma.f32	s9, s13, s14
 80156c2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80156c6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80156ca:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80156cc:	698b      	ldr	r3, [r1, #24]
 80156ce:	1a9b      	subs	r3, r3, r2
 80156d0:	ee06 3a90 	vmov	s13, r3
 80156d4:	684b      	ldr	r3, [r1, #4]
 80156d6:	1a9b      	subs	r3, r3, r2
 80156d8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80156dc:	ee07 3a10 	vmov	s14, r3
 80156e0:	ee66 6a84 	vmul.f32	s13, s13, s8
 80156e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80156e8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80156ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 80156f0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80156f4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80156f8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80156fc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80156fe:	694a      	ldr	r2, [r1, #20]
 8015700:	1b13      	subs	r3, r2, r4
 8015702:	ee07 3a10 	vmov	s14, r3
 8015706:	680b      	ldr	r3, [r1, #0]
 8015708:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801570c:	1b1b      	subs	r3, r3, r4
 801570e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015712:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8015716:	ee07 3a10 	vmov	s14, r3
 801571a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801571e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015722:	eea5 5a87 	vfma.f32	s10, s11, s14
 8015726:	edd0 5a08 	vldr	s11, [r0, #32]
 801572a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801572e:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8015732:	ee25 5a06 	vmul.f32	s10, s10, s12
 8015736:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801573a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801573c:	698b      	ldr	r3, [r1, #24]
 801573e:	1a9b      	subs	r3, r3, r2
 8015740:	ee07 3a10 	vmov	s14, r3
 8015744:	684b      	ldr	r3, [r1, #4]
 8015746:	1a9b      	subs	r3, r3, r2
 8015748:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801574c:	ee01 3a90 	vmov	s3, r3
 8015750:	ee27 7a04 	vmul.f32	s14, s14, s8
 8015754:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8015758:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801575c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8015760:	eea1 7a21 	vfma.f32	s14, s2, s3
 8015764:	ee27 7a03 	vmul.f32	s14, s14, s6
 8015768:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801576c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801576e:	694a      	ldr	r2, [r1, #20]
 8015770:	1b13      	subs	r3, r2, r4
 8015772:	ee03 3a10 	vmov	s6, r3
 8015776:	680b      	ldr	r3, [r1, #0]
 8015778:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801577c:	1b1b      	subs	r3, r3, r4
 801577e:	ee23 3a04 	vmul.f32	s6, s6, s8
 8015782:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8015786:	ee03 3a10 	vmov	s6, r3
 801578a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801578e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8015792:	eee1 5a04 	vfma.f32	s11, s2, s8
 8015796:	ee25 6a86 	vmul.f32	s12, s11, s12
 801579a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801579e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80157a2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80157a6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80157aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80157ae:	dd13      	ble.n	80157d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80157b0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80157b4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80157b8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80157ba:	eee3 7a87 	vfma.f32	s15, s7, s14
 80157be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80157c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80157c6:	dd15      	ble.n	80157f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80157c8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80157cc:	6403      	str	r3, [r0, #64]	; 0x40
 80157ce:	bd70      	pop	{r4, r5, r6, pc}
 80157d0:	4623      	mov	r3, r4
 80157d2:	e6fd      	b.n	80155d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80157d4:	462a      	mov	r2, r5
 80157d6:	e706      	b.n	80155e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80157d8:	d502      	bpl.n	80157e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80157da:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80157de:	e7e9      	b.n	80157b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80157e0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80157e4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80157e8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80157ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80157f0:	dade      	bge.n	80157b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80157f2:	e7f2      	b.n	80157da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80157f4:	d502      	bpl.n	80157fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80157f6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80157fa:	e7e7      	b.n	80157cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80157fc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8015800:	eee3 4a86 	vfma.f32	s9, s7, s12
 8015804:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8015808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801580c:	dadc      	bge.n	80157c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801580e:	e7f2      	b.n	80157f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8015810:	3d800000 	.word	0x3d800000

08015814 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8015814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015818:	2714      	movs	r7, #20
 801581a:	435f      	muls	r7, r3
 801581c:	eb02 0c07 	add.w	ip, r2, r7
 8015820:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8015824:	f115 0e0f 	adds.w	lr, r5, #15
 8015828:	f100 80a2 	bmi.w	8015970 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801582c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8015830:	9c08      	ldr	r4, [sp, #32]
 8015832:	2614      	movs	r6, #20
 8015834:	f8c0 e014 	str.w	lr, [r0, #20]
 8015838:	4366      	muls	r6, r4
 801583a:	eb02 0806 	add.w	r8, r2, r6
 801583e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8015842:	f115 040f 	adds.w	r4, r5, #15
 8015846:	f100 809f 	bmi.w	8015988 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801584a:	1124      	asrs	r4, r4, #4
 801584c:	eba4 040e 	sub.w	r4, r4, lr
 8015850:	6184      	str	r4, [r0, #24]
 8015852:	2c00      	cmp	r4, #0
 8015854:	f000 808a 	beq.w	801596c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8015858:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801585c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8015860:	5995      	ldr	r5, [r2, r6]
 8015862:	eba4 0809 	sub.w	r8, r4, r9
 8015866:	59d4      	ldr	r4, [r2, r7]
 8015868:	eba5 0a04 	sub.w	sl, r5, r4
 801586c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8015870:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8015874:	fb0e fe05 	mul.w	lr, lr, r5
 8015878:	fb0a ee19 	mls	lr, sl, r9, lr
 801587c:	fb08 e404 	mla	r4, r8, r4, lr
 8015880:	3c01      	subs	r4, #1
 8015882:	19a4      	adds	r4, r4, r6
 8015884:	f100 808c 	bmi.w	80159a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8015888:	fb94 fef6 	sdiv	lr, r4, r6
 801588c:	fb06 441e 	mls	r4, r6, lr, r4
 8015890:	f8c0 e000 	str.w	lr, [r0]
 8015894:	6104      	str	r4, [r0, #16]
 8015896:	2d00      	cmp	r5, #0
 8015898:	f2c0 8095 	blt.w	80159c6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801589c:	fb95 f4f6 	sdiv	r4, r5, r6
 80158a0:	fb06 5514 	mls	r5, r6, r4, r5
 80158a4:	6044      	str	r4, [r0, #4]
 80158a6:	6085      	str	r5, [r0, #8]
 80158a8:	60c6      	str	r6, [r0, #12]
 80158aa:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80158ae:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80158b2:	6945      	ldr	r5, [r0, #20]
 80158b4:	59d2      	ldr	r2, [r2, r7]
 80158b6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80158ba:	eddf 6a4b 	vldr	s13, [pc, #300]	; 80159e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80158be:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80158c2:	ee07 4a10 	vmov	s14, r4
 80158c6:	6804      	ldr	r4, [r0, #0]
 80158c8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80158cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80158d0:	ee07 2a90 	vmov	s15, r2
 80158d4:	ee27 7a26 	vmul.f32	s14, s14, s13
 80158d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80158dc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80158e0:	edd3 6a00 	vldr	s13, [r3]
 80158e4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80158e8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80158ec:	eee6 6a27 	vfma.f32	s13, s12, s15
 80158f0:	edc0 6a07 	vstr	s13, [r0, #28]
 80158f4:	edd0 6a01 	vldr	s13, [r0, #4]
 80158f8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80158fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8015900:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8015904:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8015908:	ed80 6a08 	vstr	s12, [r0, #32]
 801590c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801590e:	6242      	str	r2, [r0, #36]	; 0x24
 8015910:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8015914:	ed93 6a03 	vldr	s12, [r3, #12]
 8015918:	eea5 6a87 	vfma.f32	s12, s11, s14
 801591c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8015920:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8015924:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8015928:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801592c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8015930:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8015934:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8015938:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801593a:	6302      	str	r2, [r0, #48]	; 0x30
 801593c:	ed93 6a06 	vldr	s12, [r3, #24]
 8015940:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8015944:	eea5 6a87 	vfma.f32	s12, s11, s14
 8015948:	eeb0 7a46 	vmov.f32	s14, s12
 801594c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8015950:	eea6 7a27 	vfma.f32	s14, s12, s15
 8015954:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8015958:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801595c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8015960:	eee6 7a87 	vfma.f32	s15, s13, s14
 8015964:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8015968:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801596a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801596c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015970:	2410      	movs	r4, #16
 8015972:	f1c5 0501 	rsb	r5, r5, #1
 8015976:	fb9e fef4 	sdiv	lr, lr, r4
 801597a:	f015 050f 	ands.w	r5, r5, #15
 801597e:	bf18      	it	ne
 8015980:	2501      	movne	r5, #1
 8015982:	ebae 0e05 	sub.w	lr, lr, r5
 8015986:	e753      	b.n	8015830 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8015988:	f04f 0910 	mov.w	r9, #16
 801598c:	f1c5 0501 	rsb	r5, r5, #1
 8015990:	fb94 f4f9 	sdiv	r4, r4, r9
 8015994:	f015 050f 	ands.w	r5, r5, #15
 8015998:	bf18      	it	ne
 801599a:	2501      	movne	r5, #1
 801599c:	1b64      	subs	r4, r4, r5
 801599e:	e755      	b.n	801584c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80159a0:	4264      	negs	r4, r4
 80159a2:	fb94 fef6 	sdiv	lr, r4, r6
 80159a6:	f1ce 0800 	rsb	r8, lr, #0
 80159aa:	fb06 441e 	mls	r4, r6, lr, r4
 80159ae:	f8c0 8000 	str.w	r8, [r0]
 80159b2:	6104      	str	r4, [r0, #16]
 80159b4:	2c00      	cmp	r4, #0
 80159b6:	f43f af6e 	beq.w	8015896 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80159ba:	ea6f 0e0e 	mvn.w	lr, lr
 80159be:	1b34      	subs	r4, r6, r4
 80159c0:	f8c0 e000 	str.w	lr, [r0]
 80159c4:	e766      	b.n	8015894 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80159c6:	426d      	negs	r5, r5
 80159c8:	fb95 f4f6 	sdiv	r4, r5, r6
 80159cc:	f1c4 0e00 	rsb	lr, r4, #0
 80159d0:	fb06 5514 	mls	r5, r6, r4, r5
 80159d4:	f8c0 e004 	str.w	lr, [r0, #4]
 80159d8:	6085      	str	r5, [r0, #8]
 80159da:	2d00      	cmp	r5, #0
 80159dc:	f43f af64 	beq.w	80158a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80159e0:	43e4      	mvns	r4, r4
 80159e2:	1b75      	subs	r5, r6, r5
 80159e4:	6044      	str	r4, [r0, #4]
 80159e6:	e75e      	b.n	80158a6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80159e8:	3d800000 	.word	0x3d800000

080159ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80159ec:	4b01      	ldr	r3, [pc, #4]	; (80159f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80159ee:	6018      	str	r0, [r3, #0]
 80159f0:	4770      	bx	lr
 80159f2:	bf00      	nop
 80159f4:	240020d4 	.word	0x240020d4

080159f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80159f8:	4b06      	ldr	r3, [pc, #24]	; (8015a14 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80159fa:	881a      	ldrh	r2, [r3, #0]
 80159fc:	4282      	cmp	r2, r0
 80159fe:	d807      	bhi.n	8015a10 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8015a00:	4b05      	ldr	r3, [pc, #20]	; (8015a18 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8015a02:	881b      	ldrh	r3, [r3, #0]
 8015a04:	4413      	add	r3, r2
 8015a06:	4298      	cmp	r0, r3
 8015a08:	bfac      	ite	ge
 8015a0a:	2000      	movge	r0, #0
 8015a0c:	2001      	movlt	r0, #1
 8015a0e:	4770      	bx	lr
 8015a10:	2000      	movs	r0, #0
 8015a12:	4770      	bx	lr
 8015a14:	240020f4 	.word	0x240020f4
 8015a18:	240020f8 	.word	0x240020f8

08015a1c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8015a1c:	b508      	push	{r3, lr}
 8015a1e:	4601      	mov	r1, r0
 8015a20:	f7ff ffea 	bl	80159f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8015a24:	b118      	cbz	r0, 8015a2e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8015a26:	4b02      	ldr	r3, [pc, #8]	; (8015a30 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8015a28:	681b      	ldr	r3, [r3, #0]
 8015a2a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8015a2e:	bd08      	pop	{r3, pc}
 8015a30:	240020d8 	.word	0x240020d8

08015a34 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8015a34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015a36:	4c24      	ldr	r4, [pc, #144]	; (8015ac8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8015a38:	6823      	ldr	r3, [r4, #0]
 8015a3a:	2b00      	cmp	r3, #0
 8015a3c:	d042      	beq.n	8015ac4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8015a3e:	4a23      	ldr	r2, [pc, #140]	; (8015acc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8015a40:	4d23      	ldr	r5, [pc, #140]	; (8015ad0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8015a42:	8811      	ldrh	r1, [r2, #0]
 8015a44:	f8b5 c000 	ldrh.w	ip, [r5]
 8015a48:	4822      	ldr	r0, [pc, #136]	; (8015ad4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8015a4a:	4461      	add	r1, ip
 8015a4c:	1c4a      	adds	r2, r1, #1
 8015a4e:	008f      	lsls	r7, r1, #2
 8015a50:	f022 0201 	bic.w	r2, r2, #1
 8015a54:	19de      	adds	r6, r3, r7
 8015a56:	0412      	lsls	r2, r2, #16
 8015a58:	6006      	str	r6, [r0, #0]
 8015a5a:	4e1f      	ldr	r6, [pc, #124]	; (8015ad8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8015a5c:	0c12      	lsrs	r2, r2, #16
 8015a5e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8015a62:	19da      	adds	r2, r3, r7
 8015a64:	6032      	str	r2, [r6, #0]
 8015a66:	220e      	movs	r2, #14
 8015a68:	fb02 f20c 	mul.w	r2, r2, ip
 8015a6c:	3203      	adds	r2, #3
 8015a6e:	f022 0203 	bic.w	r2, r2, #3
 8015a72:	443a      	add	r2, r7
 8015a74:	4f19      	ldr	r7, [pc, #100]	; (8015adc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8015a76:	4413      	add	r3, r2
 8015a78:	603b      	str	r3, [r7, #0]
 8015a7a:	2300      	movs	r3, #0
 8015a7c:	4f18      	ldr	r7, [pc, #96]	; (8015ae0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8015a7e:	469c      	mov	ip, r3
 8015a80:	803b      	strh	r3, [r7, #0]
 8015a82:	4f18      	ldr	r7, [pc, #96]	; (8015ae4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8015a84:	683f      	ldr	r7, [r7, #0]
 8015a86:	1aba      	subs	r2, r7, r2
 8015a88:	4f17      	ldr	r7, [pc, #92]	; (8015ae8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8015a8a:	603a      	str	r2, [r7, #0]
 8015a8c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8015a90:	4a16      	ldr	r2, [pc, #88]	; (8015aec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8015a92:	8013      	strh	r3, [r2, #0]
 8015a94:	428b      	cmp	r3, r1
 8015a96:	d10d      	bne.n	8015ab4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8015a98:	882d      	ldrh	r5, [r5, #0]
 8015a9a:	2300      	movs	r3, #0
 8015a9c:	6830      	ldr	r0, [r6, #0]
 8015a9e:	240e      	movs	r4, #14
 8015aa0:	429d      	cmp	r5, r3
 8015aa2:	d90f      	bls.n	8015ac4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8015aa4:	fb04 0203 	mla	r2, r4, r3, r0
 8015aa8:	3301      	adds	r3, #1
 8015aaa:	7b11      	ldrb	r1, [r2, #12]
 8015aac:	f36f 1145 	bfc	r1, #5, #1
 8015ab0:	7311      	strb	r1, [r2, #12]
 8015ab2:	e7f5      	b.n	8015aa0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8015ab4:	6822      	ldr	r2, [r4, #0]
 8015ab6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8015aba:	6802      	ldr	r2, [r0, #0]
 8015abc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8015ac0:	3301      	adds	r3, #1
 8015ac2:	e7e7      	b.n	8015a94 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8015ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015ac6:	bf00      	nop
 8015ac8:	240020d8 	.word	0x240020d8
 8015acc:	240020f4 	.word	0x240020f4
 8015ad0:	240020f8 	.word	0x240020f8
 8015ad4:	240020ec 	.word	0x240020ec
 8015ad8:	240020dc 	.word	0x240020dc
 8015adc:	240020e4 	.word	0x240020e4
 8015ae0:	240020f6 	.word	0x240020f6
 8015ae4:	240020e0 	.word	0x240020e0
 8015ae8:	240020f0 	.word	0x240020f0
 8015aec:	240020e8 	.word	0x240020e8

08015af0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8015af0:	4b06      	ldr	r3, [pc, #24]	; (8015b0c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8015af2:	681b      	ldr	r3, [r3, #0]
 8015af4:	b943      	cbnz	r3, 8015b08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8015af6:	b139      	cbz	r1, 8015b08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8015af8:	4b05      	ldr	r3, [pc, #20]	; (8015b10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8015afa:	801a      	strh	r2, [r3, #0]
 8015afc:	4b05      	ldr	r3, [pc, #20]	; (8015b14 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8015afe:	6019      	str	r1, [r3, #0]
 8015b00:	4b05      	ldr	r3, [pc, #20]	; (8015b18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8015b02:	6018      	str	r0, [r3, #0]
 8015b04:	f7ff bf96 	b.w	8015a34 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8015b08:	4770      	bx	lr
 8015b0a:	bf00      	nop
 8015b0c:	240020e4 	.word	0x240020e4
 8015b10:	240020f8 	.word	0x240020f8
 8015b14:	240020e0 	.word	0x240020e0
 8015b18:	240020d8 	.word	0x240020d8

08015b1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8015b1c:	b470      	push	{r4, r5, r6}
 8015b1e:	4c07      	ldr	r4, [pc, #28]	; (8015b3c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8015b20:	4605      	mov	r5, r0
 8015b22:	4610      	mov	r0, r2
 8015b24:	9a03      	ldr	r2, [sp, #12]
 8015b26:	6826      	ldr	r6, [r4, #0]
 8015b28:	b936      	cbnz	r6, 8015b38 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8015b2a:	6025      	str	r5, [r4, #0]
 8015b2c:	4c04      	ldr	r4, [pc, #16]	; (8015b40 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8015b2e:	8021      	strh	r1, [r4, #0]
 8015b30:	4619      	mov	r1, r3
 8015b32:	bc70      	pop	{r4, r5, r6}
 8015b34:	f7ff bfdc 	b.w	8015af0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8015b38:	bc70      	pop	{r4, r5, r6}
 8015b3a:	4770      	bx	lr
 8015b3c:	240020fc 	.word	0x240020fc
 8015b40:	240020f4 	.word	0x240020f4

08015b44 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8015b44:	4a12      	ldr	r2, [pc, #72]	; (8015b90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8015b46:	8803      	ldrh	r3, [r0, #0]
 8015b48:	8812      	ldrh	r2, [r2, #0]
 8015b4a:	4293      	cmp	r3, r2
 8015b4c:	d207      	bcs.n	8015b5e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8015b4e:	4a11      	ldr	r2, [pc, #68]	; (8015b94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8015b50:	2114      	movs	r1, #20
 8015b52:	6812      	ldr	r2, [r2, #0]
 8015b54:	fb01 2303 	mla	r3, r1, r3, r2
 8015b58:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8015b5c:	4770      	bx	lr
 8015b5e:	490e      	ldr	r1, [pc, #56]	; (8015b98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8015b60:	8809      	ldrh	r1, [r1, #0]
 8015b62:	4411      	add	r1, r2
 8015b64:	428b      	cmp	r3, r1
 8015b66:	da04      	bge.n	8015b72 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8015b68:	1a9b      	subs	r3, r3, r2
 8015b6a:	4a0c      	ldr	r2, [pc, #48]	; (8015b9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8015b6c:	210e      	movs	r1, #14
 8015b6e:	6812      	ldr	r2, [r2, #0]
 8015b70:	e7f0      	b.n	8015b54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8015b72:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015b76:	4293      	cmp	r3, r2
 8015b78:	d108      	bne.n	8015b8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8015b7a:	4b09      	ldr	r3, [pc, #36]	; (8015ba0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8015b7c:	781b      	ldrb	r3, [r3, #0]
 8015b7e:	b91b      	cbnz	r3, 8015b88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8015b80:	4b08      	ldr	r3, [pc, #32]	; (8015ba4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8015b82:	f9b3 0000 	ldrsh.w	r0, [r3]
 8015b86:	4770      	bx	lr
 8015b88:	4b07      	ldr	r3, [pc, #28]	; (8015ba8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8015b8a:	e7fa      	b.n	8015b82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8015b8c:	2000      	movs	r0, #0
 8015b8e:	4770      	bx	lr
 8015b90:	240020f4 	.word	0x240020f4
 8015b94:	240020fc 	.word	0x240020fc
 8015b98:	240020f8 	.word	0x240020f8
 8015b9c:	240020dc 	.word	0x240020dc
 8015ba0:	2400206c 	.word	0x2400206c
 8015ba4:	2400206e 	.word	0x2400206e
 8015ba8:	24002070 	.word	0x24002070

08015bac <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8015bac:	4a12      	ldr	r2, [pc, #72]	; (8015bf8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8015bae:	8803      	ldrh	r3, [r0, #0]
 8015bb0:	8812      	ldrh	r2, [r2, #0]
 8015bb2:	4293      	cmp	r3, r2
 8015bb4:	d207      	bcs.n	8015bc6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8015bb6:	4a11      	ldr	r2, [pc, #68]	; (8015bfc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8015bb8:	2114      	movs	r1, #20
 8015bba:	6812      	ldr	r2, [r2, #0]
 8015bbc:	fb01 2303 	mla	r3, r1, r3, r2
 8015bc0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8015bc4:	4770      	bx	lr
 8015bc6:	490e      	ldr	r1, [pc, #56]	; (8015c00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8015bc8:	8809      	ldrh	r1, [r1, #0]
 8015bca:	4411      	add	r1, r2
 8015bcc:	428b      	cmp	r3, r1
 8015bce:	da04      	bge.n	8015bda <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8015bd0:	1a9b      	subs	r3, r3, r2
 8015bd2:	4a0c      	ldr	r2, [pc, #48]	; (8015c04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8015bd4:	210e      	movs	r1, #14
 8015bd6:	6812      	ldr	r2, [r2, #0]
 8015bd8:	e7f0      	b.n	8015bbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8015bda:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015bde:	4293      	cmp	r3, r2
 8015be0:	d108      	bne.n	8015bf4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8015be2:	4b09      	ldr	r3, [pc, #36]	; (8015c08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8015be4:	781b      	ldrb	r3, [r3, #0]
 8015be6:	b91b      	cbnz	r3, 8015bf0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8015be8:	4b08      	ldr	r3, [pc, #32]	; (8015c0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8015bea:	f9b3 0000 	ldrsh.w	r0, [r3]
 8015bee:	4770      	bx	lr
 8015bf0:	4b07      	ldr	r3, [pc, #28]	; (8015c10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8015bf2:	e7fa      	b.n	8015bea <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8015bf4:	2000      	movs	r0, #0
 8015bf6:	4770      	bx	lr
 8015bf8:	240020f4 	.word	0x240020f4
 8015bfc:	240020fc 	.word	0x240020fc
 8015c00:	240020f8 	.word	0x240020f8
 8015c04:	240020dc 	.word	0x240020dc
 8015c08:	2400206c 	.word	0x2400206c
 8015c0c:	24002070 	.word	0x24002070
 8015c10:	2400206e 	.word	0x2400206e

08015c14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8015c14:	4a1f      	ldr	r2, [pc, #124]	; (8015c94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8015c16:	b510      	push	{r4, lr}
 8015c18:	880b      	ldrh	r3, [r1, #0]
 8015c1a:	8812      	ldrh	r2, [r2, #0]
 8015c1c:	4293      	cmp	r3, r2
 8015c1e:	d213      	bcs.n	8015c48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8015c20:	4a1d      	ldr	r2, [pc, #116]	; (8015c98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8015c22:	2114      	movs	r1, #20
 8015c24:	6812      	ldr	r2, [r2, #0]
 8015c26:	fb01 2303 	mla	r3, r1, r3, r2
 8015c2a:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8015c2e:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8015c32:	8a1a      	ldrh	r2, [r3, #16]
 8015c34:	8a5b      	ldrh	r3, [r3, #18]
 8015c36:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015c3a:	8004      	strh	r4, [r0, #0]
 8015c3c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8015c40:	8041      	strh	r1, [r0, #2]
 8015c42:	8082      	strh	r2, [r0, #4]
 8015c44:	80c3      	strh	r3, [r0, #6]
 8015c46:	e00e      	b.n	8015c66 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8015c48:	4914      	ldr	r1, [pc, #80]	; (8015c9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8015c4a:	8809      	ldrh	r1, [r1, #0]
 8015c4c:	4411      	add	r1, r2
 8015c4e:	428b      	cmp	r3, r1
 8015c50:	da0a      	bge.n	8015c68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8015c52:	1a9b      	subs	r3, r3, r2
 8015c54:	4a12      	ldr	r2, [pc, #72]	; (8015ca0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8015c56:	210e      	movs	r1, #14
 8015c58:	6812      	ldr	r2, [r2, #0]
 8015c5a:	fb01 2303 	mla	r3, r1, r3, r2
 8015c5e:	681a      	ldr	r2, [r3, #0]
 8015c60:	6002      	str	r2, [r0, #0]
 8015c62:	685a      	ldr	r2, [r3, #4]
 8015c64:	6042      	str	r2, [r0, #4]
 8015c66:	bd10      	pop	{r4, pc}
 8015c68:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015c6c:	4293      	cmp	r3, r2
 8015c6e:	d10b      	bne.n	8015c88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8015c70:	4b0c      	ldr	r3, [pc, #48]	; (8015ca4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8015c72:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015c76:	4b0c      	ldr	r3, [pc, #48]	; (8015ca8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8015c78:	8081      	strh	r1, [r0, #4]
 8015c7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015c7e:	2300      	movs	r3, #0
 8015c80:	80c2      	strh	r2, [r0, #6]
 8015c82:	8003      	strh	r3, [r0, #0]
 8015c84:	8043      	strh	r3, [r0, #2]
 8015c86:	e7ee      	b.n	8015c66 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8015c88:	2300      	movs	r3, #0
 8015c8a:	8003      	strh	r3, [r0, #0]
 8015c8c:	8043      	strh	r3, [r0, #2]
 8015c8e:	8083      	strh	r3, [r0, #4]
 8015c90:	e7d8      	b.n	8015c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8015c92:	bf00      	nop
 8015c94:	240020f4 	.word	0x240020f4
 8015c98:	240020fc 	.word	0x240020fc
 8015c9c:	240020f8 	.word	0x240020f8
 8015ca0:	240020dc 	.word	0x240020dc
 8015ca4:	24002068 	.word	0x24002068
 8015ca8:	2400206a 	.word	0x2400206a

08015cac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8015cac:	4a17      	ldr	r2, [pc, #92]	; (8015d0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8015cae:	8803      	ldrh	r3, [r0, #0]
 8015cb0:	8812      	ldrh	r2, [r2, #0]
 8015cb2:	4293      	cmp	r3, r2
 8015cb4:	d213      	bcs.n	8015cde <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8015cb6:	4a16      	ldr	r2, [pc, #88]	; (8015d10 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8015cb8:	2114      	movs	r1, #20
 8015cba:	6812      	ldr	r2, [r2, #0]
 8015cbc:	fb01 2303 	mla	r3, r1, r3, r2
 8015cc0:	8a1a      	ldrh	r2, [r3, #16]
 8015cc2:	8919      	ldrh	r1, [r3, #8]
 8015cc4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015cc8:	428a      	cmp	r2, r1
 8015cca:	db1d      	blt.n	8015d08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015ccc:	8a58      	ldrh	r0, [r3, #18]
 8015cce:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8015cd2:	895b      	ldrh	r3, [r3, #10]
 8015cd4:	4298      	cmp	r0, r3
 8015cd6:	bfac      	ite	ge
 8015cd8:	2000      	movge	r0, #0
 8015cda:	2001      	movlt	r0, #1
 8015cdc:	4770      	bx	lr
 8015cde:	490d      	ldr	r1, [pc, #52]	; (8015d14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8015ce0:	8809      	ldrh	r1, [r1, #0]
 8015ce2:	4411      	add	r1, r2
 8015ce4:	428b      	cmp	r3, r1
 8015ce6:	da0d      	bge.n	8015d04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8015ce8:	1a9b      	subs	r3, r3, r2
 8015cea:	4a0b      	ldr	r2, [pc, #44]	; (8015d18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8015cec:	210e      	movs	r1, #14
 8015cee:	6812      	ldr	r2, [r2, #0]
 8015cf0:	fb01 2303 	mla	r3, r1, r3, r2
 8015cf4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8015cf8:	891a      	ldrh	r2, [r3, #8]
 8015cfa:	4291      	cmp	r1, r2
 8015cfc:	db04      	blt.n	8015d08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015cfe:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8015d02:	e7e6      	b.n	8015cd2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8015d04:	2000      	movs	r0, #0
 8015d06:	4770      	bx	lr
 8015d08:	2001      	movs	r0, #1
 8015d0a:	4770      	bx	lr
 8015d0c:	240020f4 	.word	0x240020f4
 8015d10:	240020fc 	.word	0x240020fc
 8015d14:	240020f8 	.word	0x240020f8
 8015d18:	240020dc 	.word	0x240020dc

08015d1c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8015d1c:	4a12      	ldr	r2, [pc, #72]	; (8015d68 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8015d1e:	8803      	ldrh	r3, [r0, #0]
 8015d20:	8811      	ldrh	r1, [r2, #0]
 8015d22:	428b      	cmp	r3, r1
 8015d24:	d20b      	bcs.n	8015d3e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8015d26:	4a11      	ldr	r2, [pc, #68]	; (8015d6c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015d28:	6812      	ldr	r2, [r2, #0]
 8015d2a:	b112      	cbz	r2, 8015d32 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8015d2c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015d30:	b9c0      	cbnz	r0, 8015d64 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8015d32:	4a0f      	ldr	r2, [pc, #60]	; (8015d70 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8015d34:	6811      	ldr	r1, [r2, #0]
 8015d36:	2214      	movs	r2, #20
 8015d38:	4353      	muls	r3, r2
 8015d3a:	58c8      	ldr	r0, [r1, r3]
 8015d3c:	4770      	bx	lr
 8015d3e:	4a0d      	ldr	r2, [pc, #52]	; (8015d74 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8015d40:	8812      	ldrh	r2, [r2, #0]
 8015d42:	440a      	add	r2, r1
 8015d44:	4293      	cmp	r3, r2
 8015d46:	da04      	bge.n	8015d52 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8015d48:	4a08      	ldr	r2, [pc, #32]	; (8015d6c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015d4a:	6812      	ldr	r2, [r2, #0]
 8015d4c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015d50:	4770      	bx	lr
 8015d52:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015d56:	4293      	cmp	r3, r2
 8015d58:	d103      	bne.n	8015d62 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8015d5a:	4b07      	ldr	r3, [pc, #28]	; (8015d78 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8015d5c:	681b      	ldr	r3, [r3, #0]
 8015d5e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8015d60:	4770      	bx	lr
 8015d62:	2000      	movs	r0, #0
 8015d64:	4770      	bx	lr
 8015d66:	bf00      	nop
 8015d68:	240020f4 	.word	0x240020f4
 8015d6c:	240020d8 	.word	0x240020d8
 8015d70:	240020fc 	.word	0x240020fc
 8015d74:	240020f8 	.word	0x240020f8
 8015d78:	24002074 	.word	0x24002074

08015d7c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8015d7c:	4b24      	ldr	r3, [pc, #144]	; (8015e10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8015d7e:	8802      	ldrh	r2, [r0, #0]
 8015d80:	8818      	ldrh	r0, [r3, #0]
 8015d82:	4282      	cmp	r2, r0
 8015d84:	d221      	bcs.n	8015dca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8015d86:	4b23      	ldr	r3, [pc, #140]	; (8015e14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8015d88:	6819      	ldr	r1, [r3, #0]
 8015d8a:	2314      	movs	r3, #20
 8015d8c:	fb03 1302 	mla	r3, r3, r2, r1
 8015d90:	6858      	ldr	r0, [r3, #4]
 8015d92:	2800      	cmp	r0, #0
 8015d94:	d03a      	beq.n	8015e0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015d96:	4920      	ldr	r1, [pc, #128]	; (8015e18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015d98:	6809      	ldr	r1, [r1, #0]
 8015d9a:	2900      	cmp	r1, #0
 8015d9c:	d036      	beq.n	8015e0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015d9e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8015da2:	2900      	cmp	r1, #0
 8015da4:	d032      	beq.n	8015e0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015da6:	891a      	ldrh	r2, [r3, #8]
 8015da8:	8958      	ldrh	r0, [r3, #10]
 8015daa:	4350      	muls	r0, r2
 8015dac:	7c5a      	ldrb	r2, [r3, #17]
 8015dae:	7cdb      	ldrb	r3, [r3, #19]
 8015db0:	0952      	lsrs	r2, r2, #5
 8015db2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8015db6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8015dba:	2b0b      	cmp	r3, #11
 8015dbc:	bf18      	it	ne
 8015dbe:	0040      	lslne	r0, r0, #1
 8015dc0:	3003      	adds	r0, #3
 8015dc2:	f020 0003 	bic.w	r0, r0, #3
 8015dc6:	4408      	add	r0, r1
 8015dc8:	4770      	bx	lr
 8015dca:	4b14      	ldr	r3, [pc, #80]	; (8015e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8015dcc:	881b      	ldrh	r3, [r3, #0]
 8015dce:	4403      	add	r3, r0
 8015dd0:	429a      	cmp	r2, r3
 8015dd2:	da1a      	bge.n	8015e0a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015dd4:	4b12      	ldr	r3, [pc, #72]	; (8015e20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8015dd6:	1a10      	subs	r0, r2, r0
 8015dd8:	210e      	movs	r1, #14
 8015dda:	681b      	ldr	r3, [r3, #0]
 8015ddc:	fb01 3000 	mla	r0, r1, r0, r3
 8015de0:	7b03      	ldrb	r3, [r0, #12]
 8015de2:	f003 031f 	and.w	r3, r3, #31
 8015de6:	2b0b      	cmp	r3, #11
 8015de8:	d10b      	bne.n	8015e02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8015dea:	8903      	ldrh	r3, [r0, #8]
 8015dec:	8940      	ldrh	r0, [r0, #10]
 8015dee:	4358      	muls	r0, r3
 8015df0:	4b09      	ldr	r3, [pc, #36]	; (8015e18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015df2:	3003      	adds	r0, #3
 8015df4:	6819      	ldr	r1, [r3, #0]
 8015df6:	f020 0303 	bic.w	r3, r0, #3
 8015dfa:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8015dfe:	4418      	add	r0, r3
 8015e00:	4770      	bx	lr
 8015e02:	2b0d      	cmp	r3, #13
 8015e04:	d101      	bne.n	8015e0a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015e06:	300d      	adds	r0, #13
 8015e08:	4770      	bx	lr
 8015e0a:	2000      	movs	r0, #0
 8015e0c:	4770      	bx	lr
 8015e0e:	bf00      	nop
 8015e10:	240020f4 	.word	0x240020f4
 8015e14:	240020fc 	.word	0x240020fc
 8015e18:	240020d8 	.word	0x240020d8
 8015e1c:	240020f8 	.word	0x240020f8
 8015e20:	240020dc 	.word	0x240020dc

08015e24 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8015e24:	4a17      	ldr	r2, [pc, #92]	; (8015e84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8015e26:	b510      	push	{r4, lr}
 8015e28:	8803      	ldrh	r3, [r0, #0]
 8015e2a:	8812      	ldrh	r2, [r2, #0]
 8015e2c:	4293      	cmp	r3, r2
 8015e2e:	d20c      	bcs.n	8015e4a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8015e30:	4a15      	ldr	r2, [pc, #84]	; (8015e88 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8015e32:	2114      	movs	r1, #20
 8015e34:	6812      	ldr	r2, [r2, #0]
 8015e36:	fb01 2303 	mla	r3, r1, r3, r2
 8015e3a:	7c58      	ldrb	r0, [r3, #17]
 8015e3c:	0942      	lsrs	r2, r0, #5
 8015e3e:	7cd8      	ldrb	r0, [r3, #19]
 8015e40:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8015e44:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8015e48:	bd10      	pop	{r4, pc}
 8015e4a:	4910      	ldr	r1, [pc, #64]	; (8015e8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8015e4c:	8809      	ldrh	r1, [r1, #0]
 8015e4e:	4411      	add	r1, r2
 8015e50:	428b      	cmp	r3, r1
 8015e52:	da09      	bge.n	8015e68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8015e54:	1a9b      	subs	r3, r3, r2
 8015e56:	4a0e      	ldr	r2, [pc, #56]	; (8015e90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8015e58:	210e      	movs	r1, #14
 8015e5a:	6812      	ldr	r2, [r2, #0]
 8015e5c:	fb01 2303 	mla	r3, r1, r3, r2
 8015e60:	7b18      	ldrb	r0, [r3, #12]
 8015e62:	f000 001f 	and.w	r0, r0, #31
 8015e66:	e7ef      	b.n	8015e48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8015e68:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015e6c:	4293      	cmp	r3, r2
 8015e6e:	d106      	bne.n	8015e7e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8015e70:	f7f5 fec0 	bl	800bbf4 <_ZN8touchgfx3HAL3lcdEv>
 8015e74:	6803      	ldr	r3, [r0, #0]
 8015e76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015e7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015e7c:	4718      	bx	r3
 8015e7e:	2000      	movs	r0, #0
 8015e80:	e7e2      	b.n	8015e48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8015e82:	bf00      	nop
 8015e84:	240020f4 	.word	0x240020f4
 8015e88:	240020fc 	.word	0x240020fc
 8015e8c:	240020f8 	.word	0x240020f8
 8015e90:	240020dc 	.word	0x240020dc

08015e94 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8015e94:	2010      	movs	r0, #16
 8015e96:	4770      	bx	lr

08015e98 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8015e98:	2000      	movs	r0, #0
 8015e9a:	4770      	bx	lr

08015e9c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8015e9c:	4b02      	ldr	r3, [pc, #8]	; (8015ea8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8015e9e:	8818      	ldrh	r0, [r3, #0]
 8015ea0:	0040      	lsls	r0, r0, #1
 8015ea2:	b280      	uxth	r0, r0
 8015ea4:	4770      	bx	lr
 8015ea6:	bf00      	nop
 8015ea8:	2400206e 	.word	0x2400206e

08015eac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8015eac:	2bff      	cmp	r3, #255	; 0xff
 8015eae:	d050      	beq.n	8015f52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8015eb0:	2a0b      	cmp	r2, #11
 8015eb2:	d04a      	beq.n	8015f4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015eb4:	d80e      	bhi.n	8015ed4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8015eb6:	2a03      	cmp	r2, #3
 8015eb8:	d03f      	beq.n	8015f3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8015eba:	d804      	bhi.n	8015ec6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8015ebc:	2a01      	cmp	r2, #1
 8015ebe:	d03e      	beq.n	8015f3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8015ec0:	d93f      	bls.n	8015f42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8015ec2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8015ec4:	4770      	bx	lr
 8015ec6:	2a09      	cmp	r2, #9
 8015ec8:	d03f      	beq.n	8015f4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015eca:	d83c      	bhi.n	8015f46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8015ecc:	2a08      	cmp	r2, #8
 8015ece:	d03a      	beq.n	8015f46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8015ed0:	2000      	movs	r0, #0
 8015ed2:	4770      	bx	lr
 8015ed4:	2a2f      	cmp	r2, #47	; 0x2f
 8015ed6:	d024      	beq.n	8015f22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8015ed8:	d80d      	bhi.n	8015ef6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8015eda:	2a2d      	cmp	r2, #45	; 0x2d
 8015edc:	d014      	beq.n	8015f08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8015ede:	d826      	bhi.n	8015f2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8015ee0:	2a2c      	cmp	r2, #44	; 0x2c
 8015ee2:	d1f5      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ee4:	684b      	ldr	r3, [r1, #4]
 8015ee6:	781b      	ldrb	r3, [r3, #0]
 8015ee8:	2b01      	cmp	r3, #1
 8015eea:	d018      	beq.n	8015f1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8015eec:	d323      	bcc.n	8015f36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8015eee:	2b02      	cmp	r3, #2
 8015ef0:	d1ee      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ef2:	6880      	ldr	r0, [r0, #8]
 8015ef4:	4770      	bx	lr
 8015ef6:	2a31      	cmp	r2, #49	; 0x31
 8015ef8:	d004      	beq.n	8015f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8015efa:	d328      	bcc.n	8015f4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8015efc:	2a32      	cmp	r2, #50	; 0x32
 8015efe:	d026      	beq.n	8015f4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8015f00:	2a33      	cmp	r2, #51	; 0x33
 8015f02:	d1e5      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015f04:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8015f06:	4770      	bx	lr
 8015f08:	684b      	ldr	r3, [r1, #4]
 8015f0a:	781b      	ldrb	r3, [r3, #0]
 8015f0c:	2b01      	cmp	r3, #1
 8015f0e:	d004      	beq.n	8015f1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8015f10:	d30b      	bcc.n	8015f2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015f12:	2b02      	cmp	r3, #2
 8015f14:	d1dc      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015f16:	6900      	ldr	r0, [r0, #16]
 8015f18:	4770      	bx	lr
 8015f1a:	6a00      	ldr	r0, [r0, #32]
 8015f1c:	4770      	bx	lr
 8015f1e:	6980      	ldr	r0, [r0, #24]
 8015f20:	4770      	bx	lr
 8015f22:	684b      	ldr	r3, [r1, #4]
 8015f24:	781b      	ldrb	r3, [r3, #0]
 8015f26:	2b00      	cmp	r3, #0
 8015f28:	d1d2      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015f2a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8015f2c:	4770      	bx	lr
 8015f2e:	684b      	ldr	r3, [r1, #4]
 8015f30:	781b      	ldrb	r3, [r3, #0]
 8015f32:	2b00      	cmp	r3, #0
 8015f34:	d1cc      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015f36:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015f38:	4770      	bx	lr
 8015f3a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8015f3c:	4770      	bx	lr
 8015f3e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8015f40:	4770      	bx	lr
 8015f42:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8015f44:	4770      	bx	lr
 8015f46:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8015f48:	4770      	bx	lr
 8015f4a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8015f4c:	4770      	bx	lr
 8015f4e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8015f50:	4770      	bx	lr
 8015f52:	2a0b      	cmp	r2, #11
 8015f54:	d049      	beq.n	8015fea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015f56:	d80e      	bhi.n	8015f76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8015f58:	2a03      	cmp	r2, #3
 8015f5a:	d040      	beq.n	8015fde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8015f5c:	d804      	bhi.n	8015f68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8015f5e:	2a01      	cmp	r2, #1
 8015f60:	d03f      	beq.n	8015fe2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8015f62:	d940      	bls.n	8015fe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8015f64:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8015f66:	4770      	bx	lr
 8015f68:	2a09      	cmp	r2, #9
 8015f6a:	d03e      	beq.n	8015fea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015f6c:	d801      	bhi.n	8015f72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8015f6e:	2a08      	cmp	r2, #8
 8015f70:	d1ae      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015f72:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8015f74:	4770      	bx	lr
 8015f76:	2a2f      	cmp	r2, #47	; 0x2f
 8015f78:	d024      	beq.n	8015fc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8015f7a:	d80d      	bhi.n	8015f98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8015f7c:	2a2d      	cmp	r2, #45	; 0x2d
 8015f7e:	d014      	beq.n	8015faa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8015f80:	d826      	bhi.n	8015fd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8015f82:	2a2c      	cmp	r2, #44	; 0x2c
 8015f84:	d1a4      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015f86:	684b      	ldr	r3, [r1, #4]
 8015f88:	781b      	ldrb	r3, [r3, #0]
 8015f8a:	2b01      	cmp	r3, #1
 8015f8c:	d018      	beq.n	8015fc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8015f8e:	d324      	bcc.n	8015fda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8015f90:	2b02      	cmp	r3, #2
 8015f92:	d19d      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015f94:	68c0      	ldr	r0, [r0, #12]
 8015f96:	4770      	bx	lr
 8015f98:	2a31      	cmp	r2, #49	; 0x31
 8015f9a:	d004      	beq.n	8015fa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8015f9c:	d327      	bcc.n	8015fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8015f9e:	2a32      	cmp	r2, #50	; 0x32
 8015fa0:	d025      	beq.n	8015fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8015fa2:	2a33      	cmp	r2, #51	; 0x33
 8015fa4:	d194      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015fa6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8015fa8:	4770      	bx	lr
 8015faa:	684b      	ldr	r3, [r1, #4]
 8015fac:	781b      	ldrb	r3, [r3, #0]
 8015fae:	2b01      	cmp	r3, #1
 8015fb0:	d004      	beq.n	8015fbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8015fb2:	d30b      	bcc.n	8015fcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8015fb4:	2b02      	cmp	r3, #2
 8015fb6:	d18b      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015fb8:	6940      	ldr	r0, [r0, #20]
 8015fba:	4770      	bx	lr
 8015fbc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8015fbe:	4770      	bx	lr
 8015fc0:	69c0      	ldr	r0, [r0, #28]
 8015fc2:	4770      	bx	lr
 8015fc4:	684b      	ldr	r3, [r1, #4]
 8015fc6:	781b      	ldrb	r3, [r3, #0]
 8015fc8:	2b00      	cmp	r3, #0
 8015fca:	d181      	bne.n	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015fcc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8015fce:	4770      	bx	lr
 8015fd0:	684b      	ldr	r3, [r1, #4]
 8015fd2:	781b      	ldrb	r3, [r3, #0]
 8015fd4:	2b00      	cmp	r3, #0
 8015fd6:	f47f af7b 	bne.w	8015ed0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015fda:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8015fdc:	4770      	bx	lr
 8015fde:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8015fe0:	4770      	bx	lr
 8015fe2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8015fe4:	4770      	bx	lr
 8015fe6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8015fe8:	4770      	bx	lr
 8015fea:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8015fec:	4770      	bx	lr
 8015fee:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8015ff0:	4770      	bx	lr

08015ff2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ff2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ff6:	b087      	sub	sp, #28
 8015ff8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015ffa:	9205      	str	r2, [sp, #20]
 8015ffc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016000:	9101      	str	r1, [sp, #4]
 8016002:	9202      	str	r2, [sp, #8]
 8016004:	6841      	ldr	r1, [r0, #4]
 8016006:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801600a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801600e:	fb01 2404 	mla	r4, r1, r4, r2
 8016012:	6802      	ldr	r2, [r0, #0]
 8016014:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016018:	f8de 2000 	ldr.w	r2, [lr]
 801601c:	9203      	str	r2, [sp, #12]
 801601e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016022:	3204      	adds	r2, #4
 8016024:	9204      	str	r2, [sp, #16]
 8016026:	9a02      	ldr	r2, [sp, #8]
 8016028:	43d6      	mvns	r6, r2
 801602a:	b2f6      	uxtb	r6, r6
 801602c:	9a01      	ldr	r2, [sp, #4]
 801602e:	2a00      	cmp	r2, #0
 8016030:	dc03      	bgt.n	801603a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016032:	9a05      	ldr	r2, [sp, #20]
 8016034:	2a00      	cmp	r2, #0
 8016036:	f340 8129 	ble.w	801628c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801603a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801603c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8016040:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016044:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016046:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801604a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801604e:	2b00      	cmp	r3, #0
 8016050:	dd0e      	ble.n	8016070 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016052:	1408      	asrs	r0, r1, #16
 8016054:	d405      	bmi.n	8016062 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016056:	4560      	cmp	r0, ip
 8016058:	da03      	bge.n	8016062 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801605a:	1410      	asrs	r0, r2, #16
 801605c:	d401      	bmi.n	8016062 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801605e:	42b8      	cmp	r0, r7
 8016060:	db07      	blt.n	8016072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016062:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016064:	3b01      	subs	r3, #1
 8016066:	3402      	adds	r4, #2
 8016068:	4401      	add	r1, r0
 801606a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801606c:	4402      	add	r2, r0
 801606e:	e7ee      	b.n	801604e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016070:	d071      	beq.n	8016156 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016072:	1e58      	subs	r0, r3, #1
 8016074:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016076:	fb05 1500 	mla	r5, r5, r0, r1
 801607a:	142d      	asrs	r5, r5, #16
 801607c:	d45f      	bmi.n	801613e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801607e:	4565      	cmp	r5, ip
 8016080:	da5d      	bge.n	801613e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016082:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016084:	fb05 2000 	mla	r0, r5, r0, r2
 8016088:	1400      	asrs	r0, r0, #16
 801608a:	d458      	bmi.n	801613e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801608c:	42b8      	cmp	r0, r7
 801608e:	da56      	bge.n	801613e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8016090:	4699      	mov	r9, r3
 8016092:	46a2      	mov	sl, r4
 8016094:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8016098:	f1b9 0f00 	cmp.w	r9, #0
 801609c:	dd57      	ble.n	801614e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801609e:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80160a2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80160a6:	9803      	ldr	r0, [sp, #12]
 80160a8:	140d      	asrs	r5, r1, #16
 80160aa:	f109 39ff 	add.w	r9, r9, #4294967295
 80160ae:	fb07 000c 	mla	r0, r7, ip, r0
 80160b2:	5d40      	ldrb	r0, [r0, r5]
 80160b4:	9d04      	ldr	r5, [sp, #16]
 80160b6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80160ba:	f8ba 5000 	ldrh.w	r5, [sl]
 80160be:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80160c2:	122f      	asrs	r7, r5, #8
 80160c4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80160c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80160cc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80160d0:	00ed      	lsls	r5, r5, #3
 80160d2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80160d6:	fb17 f706 	smulbb	r7, r7, r6
 80160da:	b2ed      	uxtb	r5, r5
 80160dc:	fb18 f806 	smulbb	r8, r8, r6
 80160e0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80160e4:	10c7      	asrs	r7, r0, #3
 80160e6:	fb15 f506 	smulbb	r5, r5, r6
 80160ea:	00c0      	lsls	r0, r0, #3
 80160ec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80160f0:	fa1f fc8c 	uxth.w	ip, ip
 80160f4:	b2c0      	uxtb	r0, r0
 80160f6:	fb07 870b 	mla	r7, r7, fp, r8
 80160fa:	fb00 500b 	mla	r0, r0, fp, r5
 80160fe:	f10c 0501 	add.w	r5, ip, #1
 8016102:	b2bf      	uxth	r7, r7
 8016104:	b280      	uxth	r0, r0
 8016106:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801610a:	f107 0801 	add.w	r8, r7, #1
 801610e:	1c45      	adds	r5, r0, #1
 8016110:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8016114:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016118:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801611c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801611e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016122:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016126:	4401      	add	r1, r0
 8016128:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801612c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801612e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016132:	4402      	add	r2, r0
 8016134:	ea4c 0c08 	orr.w	ip, ip, r8
 8016138:	f82a cb02 	strh.w	ip, [sl], #2
 801613c:	e7ac      	b.n	8016098 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801613e:	f04f 0800 	mov.w	r8, #0
 8016142:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8016146:	eb03 0008 	add.w	r0, r3, r8
 801614a:	2800      	cmp	r0, #0
 801614c:	dc41      	bgt.n	80161d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801614e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016152:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016156:	9b01      	ldr	r3, [sp, #4]
 8016158:	2b00      	cmp	r3, #0
 801615a:	f340 8097 	ble.w	801628c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801615e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016162:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016164:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016168:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801616c:	eef0 6a62 	vmov.f32	s13, s5
 8016170:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016174:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016178:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801617c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8016180:	eef0 6a43 	vmov.f32	s13, s6
 8016184:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016188:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801618c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016190:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016194:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016198:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801619c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80161a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80161a4:	ee12 2a90 	vmov	r2, s5
 80161a8:	eef0 2a47 	vmov.f32	s5, s14
 80161ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80161b0:	ee13 2a10 	vmov	r2, s6
 80161b4:	9313      	str	r3, [sp, #76]	; 0x4c
 80161b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80161b8:	eeb0 3a67 	vmov.f32	s6, s15
 80161bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80161c0:	9314      	str	r3, [sp, #80]	; 0x50
 80161c2:	9b01      	ldr	r3, [sp, #4]
 80161c4:	9a05      	ldr	r2, [sp, #20]
 80161c6:	3b01      	subs	r3, #1
 80161c8:	9301      	str	r3, [sp, #4]
 80161ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80161cc:	bf08      	it	eq
 80161ce:	4613      	moveq	r3, r2
 80161d0:	e72c      	b.n	801602c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80161d2:	140f      	asrs	r7, r1, #16
 80161d4:	d453      	bmi.n	801627e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80161d6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80161da:	42bd      	cmp	r5, r7
 80161dc:	dd4f      	ble.n	801627e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80161de:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80161e2:	d44c      	bmi.n	801627e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80161e4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80161e8:	4560      	cmp	r0, ip
 80161ea:	dd48      	ble.n	801627e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80161ec:	9803      	ldr	r0, [sp, #12]
 80161ee:	b22d      	sxth	r5, r5
 80161f0:	fb0c 0505 	mla	r5, ip, r5, r0
 80161f4:	5de8      	ldrb	r0, [r5, r7]
 80161f6:	9d04      	ldr	r5, [sp, #16]
 80161f8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80161fc:	f06f 0501 	mvn.w	r5, #1
 8016200:	fb05 fb08 	mul.w	fp, r5, r8
 8016204:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016208:	f834 500b 	ldrh.w	r5, [r4, fp]
 801620c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016210:	122f      	asrs	r7, r5, #8
 8016212:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016216:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801621a:	00ed      	lsls	r5, r5, #3
 801621c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016220:	fb17 f706 	smulbb	r7, r7, r6
 8016224:	b2ed      	uxtb	r5, r5
 8016226:	fb19 f906 	smulbb	r9, r9, r6
 801622a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801622e:	10c7      	asrs	r7, r0, #3
 8016230:	fb15 f506 	smulbb	r5, r5, r6
 8016234:	00c0      	lsls	r0, r0, #3
 8016236:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801623a:	fa1f fc8c 	uxth.w	ip, ip
 801623e:	b2c0      	uxtb	r0, r0
 8016240:	fb07 970a 	mla	r7, r7, sl, r9
 8016244:	fb00 500a 	mla	r0, r0, sl, r5
 8016248:	f10c 0501 	add.w	r5, ip, #1
 801624c:	b2bf      	uxth	r7, r7
 801624e:	b280      	uxth	r0, r0
 8016250:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016254:	f107 0901 	add.w	r9, r7, #1
 8016258:	1c45      	adds	r5, r0, #1
 801625a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801625e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016262:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016266:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801626a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801626e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016272:	ea45 0c0c 	orr.w	ip, r5, ip
 8016276:	ea4c 0c09 	orr.w	ip, ip, r9
 801627a:	f824 c00b 	strh.w	ip, [r4, fp]
 801627e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016280:	f108 38ff 	add.w	r8, r8, #4294967295
 8016284:	4401      	add	r1, r0
 8016286:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016288:	4402      	add	r2, r0
 801628a:	e75c      	b.n	8016146 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801628c:	b007      	add	sp, #28
 801628e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016292:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016296:	b085      	sub	sp, #20
 8016298:	4693      	mov	fp, r2
 801629a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801629e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80162a0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80162a2:	6870      	ldr	r0, [r6, #4]
 80162a4:	9100      	str	r1, [sp, #0]
 80162a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80162aa:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80162ae:	fb00 2404 	mla	r4, r0, r4, r2
 80162b2:	6832      	ldr	r2, [r6, #0]
 80162b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80162b8:	682a      	ldr	r2, [r5, #0]
 80162ba:	9201      	str	r2, [sp, #4]
 80162bc:	686a      	ldr	r2, [r5, #4]
 80162be:	3204      	adds	r2, #4
 80162c0:	9202      	str	r2, [sp, #8]
 80162c2:	9a00      	ldr	r2, [sp, #0]
 80162c4:	2a00      	cmp	r2, #0
 80162c6:	dc03      	bgt.n	80162d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80162c8:	f1bb 0f00 	cmp.w	fp, #0
 80162cc:	f340 80a0 	ble.w	8016410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80162d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80162d2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80162d6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80162da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80162dc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80162e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80162e4:	2b00      	cmp	r3, #0
 80162e6:	dd0c      	ble.n	8016302 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80162e8:	1406      	asrs	r6, r0, #16
 80162ea:	d405      	bmi.n	80162f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162ec:	454e      	cmp	r6, r9
 80162ee:	da03      	bge.n	80162f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162f0:	1416      	asrs	r6, r2, #16
 80162f2:	d401      	bmi.n	80162f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162f4:	4546      	cmp	r6, r8
 80162f6:	db05      	blt.n	8016304 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80162f8:	4470      	add	r0, lr
 80162fa:	4462      	add	r2, ip
 80162fc:	3b01      	subs	r3, #1
 80162fe:	3402      	adds	r4, #2
 8016300:	e7f0      	b.n	80162e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016302:	d00f      	beq.n	8016324 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016304:	1e5e      	subs	r6, r3, #1
 8016306:	fb0e 0706 	mla	r7, lr, r6, r0
 801630a:	143f      	asrs	r7, r7, #16
 801630c:	d541      	bpl.n	8016392 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801630e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016312:	4698      	mov	r8, r3
 8016314:	9603      	str	r6, [sp, #12]
 8016316:	f1b8 0f00 	cmp.w	r8, #0
 801631a:	dc59      	bgt.n	80163d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801631c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016320:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016324:	9b00      	ldr	r3, [sp, #0]
 8016326:	2b00      	cmp	r3, #0
 8016328:	dd72      	ble.n	8016410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801632a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801632e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016330:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016334:	eeb0 6a62 	vmov.f32	s12, s5
 8016338:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801633c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016340:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016344:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016348:	eeb0 6a43 	vmov.f32	s12, s6
 801634c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016350:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016354:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016358:	ee61 7a27 	vmul.f32	s15, s2, s15
 801635c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016360:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016364:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016368:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801636c:	ee12 2a90 	vmov	r2, s5
 8016370:	eef0 2a47 	vmov.f32	s5, s14
 8016374:	fb92 fef3 	sdiv	lr, r2, r3
 8016378:	ee13 2a10 	vmov	r2, s6
 801637c:	eeb0 3a67 	vmov.f32	s6, s15
 8016380:	fb92 fcf3 	sdiv	ip, r2, r3
 8016384:	9b00      	ldr	r3, [sp, #0]
 8016386:	3b01      	subs	r3, #1
 8016388:	9300      	str	r3, [sp, #0]
 801638a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801638c:	bf08      	it	eq
 801638e:	465b      	moveq	r3, fp
 8016390:	e797      	b.n	80162c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016392:	454f      	cmp	r7, r9
 8016394:	dabb      	bge.n	801630e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016396:	fb0c 2606 	mla	r6, ip, r6, r2
 801639a:	1436      	asrs	r6, r6, #16
 801639c:	d4b7      	bmi.n	801630e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801639e:	4546      	cmp	r6, r8
 80163a0:	dab5      	bge.n	801630e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80163a2:	461e      	mov	r6, r3
 80163a4:	46a0      	mov	r8, r4
 80163a6:	2e00      	cmp	r6, #0
 80163a8:	ddb8      	ble.n	801631c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80163aa:	1417      	asrs	r7, r2, #16
 80163ac:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80163b0:	9901      	ldr	r1, [sp, #4]
 80163b2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80163b6:	4462      	add	r2, ip
 80163b8:	4470      	add	r0, lr
 80163ba:	fb0a 1707 	mla	r7, sl, r7, r1
 80163be:	9902      	ldr	r1, [sp, #8]
 80163c0:	3e01      	subs	r6, #1
 80163c2:	f817 7009 	ldrb.w	r7, [r7, r9]
 80163c6:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80163ca:	f828 7b02 	strh.w	r7, [r8], #2
 80163ce:	e7ea      	b.n	80163a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80163d0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80163d4:	d417      	bmi.n	8016406 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80163d6:	68ae      	ldr	r6, [r5, #8]
 80163d8:	454e      	cmp	r6, r9
 80163da:	dd14      	ble.n	8016406 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80163dc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80163e0:	d411      	bmi.n	8016406 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80163e2:	68ef      	ldr	r7, [r5, #12]
 80163e4:	4557      	cmp	r7, sl
 80163e6:	dd0e      	ble.n	8016406 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80163e8:	9f01      	ldr	r7, [sp, #4]
 80163ea:	b236      	sxth	r6, r6
 80163ec:	f06f 0101 	mvn.w	r1, #1
 80163f0:	fb0a 7606 	mla	r6, sl, r6, r7
 80163f4:	9f02      	ldr	r7, [sp, #8]
 80163f6:	f816 6009 	ldrb.w	r6, [r6, r9]
 80163fa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80163fe:	fb01 f608 	mul.w	r6, r1, r8
 8016402:	9903      	ldr	r1, [sp, #12]
 8016404:	538f      	strh	r7, [r1, r6]
 8016406:	4470      	add	r0, lr
 8016408:	4462      	add	r2, ip
 801640a:	f108 38ff 	add.w	r8, r8, #4294967295
 801640e:	e782      	b.n	8016316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016410:	b005      	add	sp, #20
 8016412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016416 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016416:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801641a:	b087      	sub	sp, #28
 801641c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801641e:	9205      	str	r2, [sp, #20]
 8016420:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016424:	9102      	str	r1, [sp, #8]
 8016426:	9203      	str	r2, [sp, #12]
 8016428:	6861      	ldr	r1, [r4, #4]
 801642a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801642e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8016432:	fb01 2000 	mla	r0, r1, r0, r2
 8016436:	6822      	ldr	r2, [r4, #0]
 8016438:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801643c:	9200      	str	r2, [sp, #0]
 801643e:	f8dc 2000 	ldr.w	r2, [ip]
 8016442:	9204      	str	r2, [sp, #16]
 8016444:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8016448:	3204      	adds	r2, #4
 801644a:	9201      	str	r2, [sp, #4]
 801644c:	9a03      	ldr	r2, [sp, #12]
 801644e:	43d5      	mvns	r5, r2
 8016450:	b2ed      	uxtb	r5, r5
 8016452:	9a02      	ldr	r2, [sp, #8]
 8016454:	2a00      	cmp	r2, #0
 8016456:	dc03      	bgt.n	8016460 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016458:	9a05      	ldr	r2, [sp, #20]
 801645a:	2a00      	cmp	r2, #0
 801645c:	f340 812c 	ble.w	80166b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8016460:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016462:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8016466:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801646a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801646c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8016470:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016474:	2b00      	cmp	r3, #0
 8016476:	dd10      	ble.n	801649a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016478:	140c      	asrs	r4, r1, #16
 801647a:	d405      	bmi.n	8016488 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801647c:	4574      	cmp	r4, lr
 801647e:	da03      	bge.n	8016488 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016480:	1414      	asrs	r4, r2, #16
 8016482:	d401      	bmi.n	8016488 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016484:	42bc      	cmp	r4, r7
 8016486:	db09      	blt.n	801649c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8016488:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801648a:	3b01      	subs	r3, #1
 801648c:	9800      	ldr	r0, [sp, #0]
 801648e:	4421      	add	r1, r4
 8016490:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016492:	3002      	adds	r0, #2
 8016494:	4422      	add	r2, r4
 8016496:	9000      	str	r0, [sp, #0]
 8016498:	e7ec      	b.n	8016474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801649a:	d071      	beq.n	8016580 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801649c:	1e5c      	subs	r4, r3, #1
 801649e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80164a0:	fb06 1604 	mla	r6, r6, r4, r1
 80164a4:	1436      	asrs	r6, r6, #16
 80164a6:	d45d      	bmi.n	8016564 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80164a8:	4576      	cmp	r6, lr
 80164aa:	da5b      	bge.n	8016564 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80164ac:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80164ae:	fb06 2404 	mla	r4, r6, r4, r2
 80164b2:	1424      	asrs	r4, r4, #16
 80164b4:	d456      	bmi.n	8016564 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80164b6:	42bc      	cmp	r4, r7
 80164b8:	da54      	bge.n	8016564 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80164ba:	4698      	mov	r8, r3
 80164bc:	f8dd 9000 	ldr.w	r9, [sp]
 80164c0:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80164c4:	f1b8 0f00 	cmp.w	r8, #0
 80164c8:	dd54      	ble.n	8016574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80164ca:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80164ce:	1414      	asrs	r4, r2, #16
 80164d0:	9804      	ldr	r0, [sp, #16]
 80164d2:	140e      	asrs	r6, r1, #16
 80164d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80164d8:	fb07 0404 	mla	r4, r7, r4, r0
 80164dc:	9801      	ldr	r0, [sp, #4]
 80164de:	f814 e006 	ldrb.w	lr, [r4, r6]
 80164e2:	f8b9 4000 	ldrh.w	r4, [r9]
 80164e6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80164ea:	1227      	asrs	r7, r4, #8
 80164ec:	eb00 0b0e 	add.w	fp, r0, lr
 80164f0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80164f4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80164f8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80164fa:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80164fe:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016502:	4401      	add	r1, r0
 8016504:	fb16 f60a 	smulbb	r6, r6, sl
 8016508:	9814      	ldr	r0, [sp, #80]	; 0x50
 801650a:	fb1b fb0a 	smulbb	fp, fp, sl
 801650e:	fb07 6705 	mla	r7, r7, r5, r6
 8016512:	10e6      	asrs	r6, r4, #3
 8016514:	00e4      	lsls	r4, r4, #3
 8016516:	4402      	add	r2, r0
 8016518:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801651c:	b2bf      	uxth	r7, r7
 801651e:	b2e4      	uxtb	r4, r4
 8016520:	fb06 b605 	mla	r6, r6, r5, fp
 8016524:	fb14 f405 	smulbb	r4, r4, r5
 8016528:	b2b6      	uxth	r6, r6
 801652a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801652e:	1c7c      	adds	r4, r7, #1
 8016530:	f106 0b01 	add.w	fp, r6, #1
 8016534:	fa1f fe8e 	uxth.w	lr, lr
 8016538:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801653c:	f10e 0401 	add.w	r4, lr, #1
 8016540:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8016544:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016548:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801654c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016550:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8016554:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016558:	4327      	orrs	r7, r4
 801655a:	ea47 070b 	orr.w	r7, r7, fp
 801655e:	f829 7b02 	strh.w	r7, [r9], #2
 8016562:	e7af      	b.n	80164c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8016564:	f04f 0e00 	mov.w	lr, #0
 8016568:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801656c:	eb03 040e 	add.w	r4, r3, lr
 8016570:	2c00      	cmp	r4, #0
 8016572:	dc43      	bgt.n	80165fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016574:	9a00      	ldr	r2, [sp, #0]
 8016576:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801657a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801657e:	9300      	str	r3, [sp, #0]
 8016580:	9b02      	ldr	r3, [sp, #8]
 8016582:	2b00      	cmp	r3, #0
 8016584:	f340 8098 	ble.w	80166b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8016588:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801658c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801658e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016592:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016596:	eef0 6a62 	vmov.f32	s13, s5
 801659a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801659e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80165a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80165a6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80165aa:	eef0 6a43 	vmov.f32	s13, s6
 80165ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80165b2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80165b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80165ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80165be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80165c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80165c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80165ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80165ce:	ee12 2a90 	vmov	r2, s5
 80165d2:	eef0 2a47 	vmov.f32	s5, s14
 80165d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80165da:	ee13 2a10 	vmov	r2, s6
 80165de:	9313      	str	r3, [sp, #76]	; 0x4c
 80165e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80165e2:	eeb0 3a67 	vmov.f32	s6, s15
 80165e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80165ea:	9314      	str	r3, [sp, #80]	; 0x50
 80165ec:	9b02      	ldr	r3, [sp, #8]
 80165ee:	9a05      	ldr	r2, [sp, #20]
 80165f0:	3b01      	subs	r3, #1
 80165f2:	9302      	str	r3, [sp, #8]
 80165f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80165f6:	bf08      	it	eq
 80165f8:	4613      	moveq	r3, r2
 80165fa:	e72a      	b.n	8016452 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80165fc:	140f      	asrs	r7, r1, #16
 80165fe:	d454      	bmi.n	80166aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016600:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8016604:	42be      	cmp	r6, r7
 8016606:	dd50      	ble.n	80166aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016608:	ea5f 4822 	movs.w	r8, r2, asr #16
 801660c:	d44d      	bmi.n	80166aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801660e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8016612:	4544      	cmp	r4, r8
 8016614:	dd49      	ble.n	80166aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016616:	9c04      	ldr	r4, [sp, #16]
 8016618:	b236      	sxth	r6, r6
 801661a:	f06f 0001 	mvn.w	r0, #1
 801661e:	fb08 4606 	mla	r6, r8, r6, r4
 8016622:	9c01      	ldr	r4, [sp, #4]
 8016624:	fb00 fa0e 	mul.w	sl, r0, lr
 8016628:	9800      	ldr	r0, [sp, #0]
 801662a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801662e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016632:	eb04 0b08 	add.w	fp, r4, r8
 8016636:	f830 400a 	ldrh.w	r4, [r0, sl]
 801663a:	9801      	ldr	r0, [sp, #4]
 801663c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8016640:	1227      	asrs	r7, r4, #8
 8016642:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016646:	fb16 f609 	smulbb	r6, r6, r9
 801664a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801664e:	f810 8008 	ldrb.w	r8, [r0, r8]
 8016652:	fb1b fb09 	smulbb	fp, fp, r9
 8016656:	fb07 6705 	mla	r7, r7, r5, r6
 801665a:	10e6      	asrs	r6, r4, #3
 801665c:	00e4      	lsls	r4, r4, #3
 801665e:	9800      	ldr	r0, [sp, #0]
 8016660:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016664:	b2bf      	uxth	r7, r7
 8016666:	b2e4      	uxtb	r4, r4
 8016668:	fb06 b605 	mla	r6, r6, r5, fp
 801666c:	fb14 f405 	smulbb	r4, r4, r5
 8016670:	b2b6      	uxth	r6, r6
 8016672:	fb08 4809 	mla	r8, r8, r9, r4
 8016676:	1c7c      	adds	r4, r7, #1
 8016678:	f106 0b01 	add.w	fp, r6, #1
 801667c:	fa1f f888 	uxth.w	r8, r8
 8016680:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8016684:	f108 0401 	add.w	r4, r8, #1
 8016688:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801668c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016690:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8016694:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016698:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801669c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80166a0:	4327      	orrs	r7, r4
 80166a2:	ea47 070b 	orr.w	r7, r7, fp
 80166a6:	f820 700a 	strh.w	r7, [r0, sl]
 80166aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80166ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80166b0:	4401      	add	r1, r0
 80166b2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80166b4:	4402      	add	r2, r0
 80166b6:	e759      	b.n	801656c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80166b8:	b007      	add	sp, #28
 80166ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080166c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80166c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166c4:	b085      	sub	sp, #20
 80166c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80166ca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80166cc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80166ce:	9203      	str	r2, [sp, #12]
 80166d0:	6870      	ldr	r0, [r6, #4]
 80166d2:	686f      	ldr	r7, [r5, #4]
 80166d4:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80166d8:	3704      	adds	r7, #4
 80166da:	9101      	str	r1, [sp, #4]
 80166dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80166e0:	fb00 2404 	mla	r4, r0, r4, r2
 80166e4:	6832      	ldr	r2, [r6, #0]
 80166e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80166ea:	682a      	ldr	r2, [r5, #0]
 80166ec:	9202      	str	r2, [sp, #8]
 80166ee:	9a01      	ldr	r2, [sp, #4]
 80166f0:	2a00      	cmp	r2, #0
 80166f2:	dc03      	bgt.n	80166fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80166f4:	9a03      	ldr	r2, [sp, #12]
 80166f6:	2a00      	cmp	r2, #0
 80166f8:	f340 80cc 	ble.w	8016894 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80166fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80166fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016702:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016706:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016708:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801670c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016710:	2b00      	cmp	r3, #0
 8016712:	dd0d      	ble.n	8016730 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016714:	1406      	asrs	r6, r0, #16
 8016716:	d405      	bmi.n	8016724 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016718:	454e      	cmp	r6, r9
 801671a:	da03      	bge.n	8016724 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801671c:	1416      	asrs	r6, r2, #16
 801671e:	d401      	bmi.n	8016724 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016720:	4546      	cmp	r6, r8
 8016722:	db06      	blt.n	8016732 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016724:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8016726:	4460      	add	r0, ip
 8016728:	3b01      	subs	r3, #1
 801672a:	3402      	adds	r4, #2
 801672c:	4432      	add	r2, r6
 801672e:	e7ef      	b.n	8016710 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8016730:	d00f      	beq.n	8016752 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016732:	1e5e      	subs	r6, r3, #1
 8016734:	fb0c 0e06 	mla	lr, ip, r6, r0
 8016738:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801673c:	d543      	bpl.n	80167c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801673e:	4698      	mov	r8, r3
 8016740:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8016744:	f1b8 0f00 	cmp.w	r8, #0
 8016748:	dc71      	bgt.n	801682e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801674a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801674e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016752:	9b01      	ldr	r3, [sp, #4]
 8016754:	2b00      	cmp	r3, #0
 8016756:	f340 809d 	ble.w	8016894 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801675a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801675e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016760:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016764:	eeb0 6a62 	vmov.f32	s12, s5
 8016768:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801676c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016770:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016774:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016778:	eeb0 6a43 	vmov.f32	s12, s6
 801677c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016780:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016784:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016788:	ee61 7a27 	vmul.f32	s15, s2, s15
 801678c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016790:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016794:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016798:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801679c:	ee12 2a90 	vmov	r2, s5
 80167a0:	eef0 2a47 	vmov.f32	s5, s14
 80167a4:	fb92 fcf3 	sdiv	ip, r2, r3
 80167a8:	ee13 2a10 	vmov	r2, s6
 80167ac:	eeb0 3a67 	vmov.f32	s6, s15
 80167b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80167b4:	9312      	str	r3, [sp, #72]	; 0x48
 80167b6:	9b01      	ldr	r3, [sp, #4]
 80167b8:	9a03      	ldr	r2, [sp, #12]
 80167ba:	3b01      	subs	r3, #1
 80167bc:	9301      	str	r3, [sp, #4]
 80167be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80167c0:	bf08      	it	eq
 80167c2:	4613      	moveq	r3, r2
 80167c4:	e793      	b.n	80166ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80167c6:	45ce      	cmp	lr, r9
 80167c8:	dab9      	bge.n	801673e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80167ca:	9912      	ldr	r1, [sp, #72]	; 0x48
 80167cc:	fb01 2606 	mla	r6, r1, r6, r2
 80167d0:	1436      	asrs	r6, r6, #16
 80167d2:	d4b4      	bmi.n	801673e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80167d4:	4546      	cmp	r6, r8
 80167d6:	dab2      	bge.n	801673e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80167d8:	4698      	mov	r8, r3
 80167da:	46a2      	mov	sl, r4
 80167dc:	f1b8 0f00 	cmp.w	r8, #0
 80167e0:	ddb3      	ble.n	801674a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80167e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80167e6:	1416      	asrs	r6, r2, #16
 80167e8:	9902      	ldr	r1, [sp, #8]
 80167ea:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80167ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80167f2:	4460      	add	r0, ip
 80167f4:	fb09 1606 	mla	r6, r9, r6, r1
 80167f8:	4928      	ldr	r1, [pc, #160]	; (801689c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80167fa:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80167fe:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016802:	eb07 0b0e 	add.w	fp, r7, lr
 8016806:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801680a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801680e:	00f6      	lsls	r6, r6, #3
 8016810:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8016814:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016816:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801681a:	440a      	add	r2, r1
 801681c:	ea49 0606 	orr.w	r6, r9, r6
 8016820:	f817 900e 	ldrb.w	r9, [r7, lr]
 8016824:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8016828:	f82a 6b02 	strh.w	r6, [sl], #2
 801682c:	e7d6      	b.n	80167dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801682e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016832:	d429      	bmi.n	8016888 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016834:	68ae      	ldr	r6, [r5, #8]
 8016836:	454e      	cmp	r6, r9
 8016838:	dd26      	ble.n	8016888 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801683a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801683e:	d423      	bmi.n	8016888 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016840:	68e9      	ldr	r1, [r5, #12]
 8016842:	4559      	cmp	r1, fp
 8016844:	dd20      	ble.n	8016888 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016846:	fa0f fe86 	sxth.w	lr, r6
 801684a:	9902      	ldr	r1, [sp, #8]
 801684c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8016850:	f06f 0101 	mvn.w	r1, #1
 8016854:	f81e e009 	ldrb.w	lr, [lr, r9]
 8016858:	fb01 f908 	mul.w	r9, r1, r8
 801685c:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8016860:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016864:	eb07 060e 	add.w	r6, r7, lr
 8016868:	f896 b002 	ldrb.w	fp, [r6, #2]
 801686c:	7876      	ldrb	r6, [r6, #1]
 801686e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8016872:	00f6      	lsls	r6, r6, #3
 8016874:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016878:	ea4b 0606 	orr.w	r6, fp, r6
 801687c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8016880:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8016884:	f82a 6009 	strh.w	r6, [sl, r9]
 8016888:	9912      	ldr	r1, [sp, #72]	; 0x48
 801688a:	4460      	add	r0, ip
 801688c:	f108 38ff 	add.w	r8, r8, #4294967295
 8016890:	440a      	add	r2, r1
 8016892:	e757      	b.n	8016744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016894:	b005      	add	sp, #20
 8016896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801689a:	bf00      	nop
 801689c:	fffff800 	.word	0xfffff800

080168a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80168a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168a4:	b087      	sub	sp, #28
 80168a6:	468b      	mov	fp, r1
 80168a8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80168ac:	9815      	ldr	r0, [sp, #84]	; 0x54
 80168ae:	9204      	str	r2, [sp, #16]
 80168b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80168b4:	6841      	ldr	r1, [r0, #4]
 80168b6:	9205      	str	r2, [sp, #20]
 80168b8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80168bc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80168c0:	fb01 2404 	mla	r4, r1, r4, r2
 80168c4:	6802      	ldr	r2, [r0, #0]
 80168c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80168ca:	f8dc 2000 	ldr.w	r2, [ip]
 80168ce:	9201      	str	r2, [sp, #4]
 80168d0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80168d4:	3204      	adds	r2, #4
 80168d6:	9202      	str	r2, [sp, #8]
 80168d8:	f1bb 0f00 	cmp.w	fp, #0
 80168dc:	dc03      	bgt.n	80168e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80168de:	9a04      	ldr	r2, [sp, #16]
 80168e0:	2a00      	cmp	r2, #0
 80168e2:	f340 8138 	ble.w	8016b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80168e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80168e8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80168ec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80168f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80168f2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80168f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80168fa:	2b00      	cmp	r3, #0
 80168fc:	dd0e      	ble.n	801691c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80168fe:	1402      	asrs	r2, r0, #16
 8016900:	d405      	bmi.n	801690e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016902:	42ba      	cmp	r2, r7
 8016904:	da03      	bge.n	801690e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016906:	140a      	asrs	r2, r1, #16
 8016908:	d401      	bmi.n	801690e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801690a:	42b2      	cmp	r2, r6
 801690c:	db07      	blt.n	801691e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801690e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016910:	3b01      	subs	r3, #1
 8016912:	3402      	adds	r4, #2
 8016914:	4410      	add	r0, r2
 8016916:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016918:	4411      	add	r1, r2
 801691a:	e7ee      	b.n	80168fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801691c:	d019      	beq.n	8016952 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801691e:	1e5a      	subs	r2, r3, #1
 8016920:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016922:	fb05 0502 	mla	r5, r5, r2, r0
 8016926:	142d      	asrs	r5, r5, #16
 8016928:	d409      	bmi.n	801693e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801692a:	42bd      	cmp	r5, r7
 801692c:	da07      	bge.n	801693e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801692e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016930:	fb05 1202 	mla	r2, r5, r2, r1
 8016934:	1412      	asrs	r2, r2, #16
 8016936:	d402      	bmi.n	801693e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016938:	42b2      	cmp	r2, r6
 801693a:	f2c0 80ac 	blt.w	8016a96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801693e:	f04f 0e00 	mov.w	lr, #0
 8016942:	eb03 020e 	add.w	r2, r3, lr
 8016946:	2a00      	cmp	r2, #0
 8016948:	dc3e      	bgt.n	80169c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801694a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801694e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016952:	f1bb 0f00 	cmp.w	fp, #0
 8016956:	f340 80fe 	ble.w	8016b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801695a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801695e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016960:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016964:	f1bb 0b01 	subs.w	fp, fp, #1
 8016968:	eeb0 6a62 	vmov.f32	s12, s5
 801696c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016970:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016974:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016978:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801697c:	eeb0 6a43 	vmov.f32	s12, s6
 8016980:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016984:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016988:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801698c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016990:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016994:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016998:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801699c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80169a0:	ee12 2a90 	vmov	r2, s5
 80169a4:	eef0 2a47 	vmov.f32	s5, s14
 80169a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80169ac:	ee13 2a10 	vmov	r2, s6
 80169b0:	9313      	str	r3, [sp, #76]	; 0x4c
 80169b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80169b4:	eeb0 3a67 	vmov.f32	s6, s15
 80169b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80169bc:	9a04      	ldr	r2, [sp, #16]
 80169be:	9314      	str	r3, [sp, #80]	; 0x50
 80169c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80169c2:	bf08      	it	eq
 80169c4:	4613      	moveq	r3, r2
 80169c6:	e787      	b.n	80168d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80169c8:	1406      	asrs	r6, r0, #16
 80169ca:	d45d      	bmi.n	8016a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80169cc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80169d0:	42b5      	cmp	r5, r6
 80169d2:	dd59      	ble.n	8016a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80169d4:	140f      	asrs	r7, r1, #16
 80169d6:	d457      	bmi.n	8016a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80169d8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80169dc:	42ba      	cmp	r2, r7
 80169de:	dd53      	ble.n	8016a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80169e0:	9a01      	ldr	r2, [sp, #4]
 80169e2:	b22d      	sxth	r5, r5
 80169e4:	fb07 2505 	mla	r5, r7, r5, r2
 80169e8:	5daa      	ldrb	r2, [r5, r6]
 80169ea:	9d02      	ldr	r5, [sp, #8]
 80169ec:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80169f0:	0e2e      	lsrs	r6, r5, #24
 80169f2:	d049      	beq.n	8016a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80169f4:	f06f 0201 	mvn.w	r2, #1
 80169f8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80169fc:	fb02 f20e 	mul.w	r2, r2, lr
 8016a00:	f834 8002 	ldrh.w	r8, [r4, r2]
 8016a04:	9203      	str	r2, [sp, #12]
 8016a06:	9a05      	ldr	r2, [sp, #20]
 8016a08:	ea4f 2728 	mov.w	r7, r8, asr #8
 8016a0c:	4356      	muls	r6, r2
 8016a0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016a12:	1c72      	adds	r2, r6, #1
 8016a14:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016a18:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016a1c:	b2ed      	uxtb	r5, r5
 8016a1e:	1212      	asrs	r2, r2, #8
 8016a20:	fa1f f982 	uxth.w	r9, r2
 8016a24:	43d2      	mvns	r2, r2
 8016a26:	fb16 f609 	smulbb	r6, r6, r9
 8016a2a:	b2d2      	uxtb	r2, r2
 8016a2c:	fb15 f509 	smulbb	r5, r5, r9
 8016a30:	fb07 6702 	mla	r7, r7, r2, r6
 8016a34:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016a38:	fb1a fa09 	smulbb	sl, sl, r9
 8016a3c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016a40:	b2bf      	uxth	r7, r7
 8016a42:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a46:	fa5f f888 	uxtb.w	r8, r8
 8016a4a:	fb06 a602 	mla	r6, r6, r2, sl
 8016a4e:	fb08 5502 	mla	r5, r8, r2, r5
 8016a52:	1c7a      	adds	r2, r7, #1
 8016a54:	b2b6      	uxth	r6, r6
 8016a56:	b2ad      	uxth	r5, r5
 8016a58:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016a5c:	9a03      	ldr	r2, [sp, #12]
 8016a5e:	f105 0a01 	add.w	sl, r5, #1
 8016a62:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016a66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016a6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016a6e:	ea4a 0707 	orr.w	r7, sl, r7
 8016a72:	f106 0a01 	add.w	sl, r6, #1
 8016a76:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016a7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016a7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016a82:	ea47 070a 	orr.w	r7, r7, sl
 8016a86:	52a7      	strh	r7, [r4, r2]
 8016a88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016a8a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016a8e:	4410      	add	r0, r2
 8016a90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016a92:	4411      	add	r1, r2
 8016a94:	e755      	b.n	8016942 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016a96:	f04f 0800 	mov.w	r8, #0
 8016a9a:	eba3 0208 	sub.w	r2, r3, r8
 8016a9e:	2a00      	cmp	r2, #0
 8016aa0:	f77f af53 	ble.w	801694a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016aa4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8016aa8:	140a      	asrs	r2, r1, #16
 8016aaa:	9f01      	ldr	r7, [sp, #4]
 8016aac:	1405      	asrs	r5, r0, #16
 8016aae:	fb06 7202 	mla	r2, r6, r2, r7
 8016ab2:	5d52      	ldrb	r2, [r2, r5]
 8016ab4:	9d02      	ldr	r5, [sp, #8]
 8016ab6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8016aba:	0e2e      	lsrs	r6, r5, #24
 8016abc:	d044      	beq.n	8016b48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016abe:	9a05      	ldr	r2, [sp, #20]
 8016ac0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016ac4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016ac8:	4356      	muls	r6, r2
 8016aca:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016ace:	1c72      	adds	r2, r6, #1
 8016ad0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016ad4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016ad8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016adc:	b2ed      	uxtb	r5, r5
 8016ade:	1212      	asrs	r2, r2, #8
 8016ae0:	fa1f f982 	uxth.w	r9, r2
 8016ae4:	43d2      	mvns	r2, r2
 8016ae6:	fb16 f609 	smulbb	r6, r6, r9
 8016aea:	b2d2      	uxtb	r2, r2
 8016aec:	fb15 f509 	smulbb	r5, r5, r9
 8016af0:	fb07 6702 	mla	r7, r7, r2, r6
 8016af4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016af8:	fb1a fa09 	smulbb	sl, sl, r9
 8016afc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016b00:	b2bf      	uxth	r7, r7
 8016b02:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016b06:	fa5f fe8e 	uxtb.w	lr, lr
 8016b0a:	fb06 a602 	mla	r6, r6, r2, sl
 8016b0e:	fb0e 5502 	mla	r5, lr, r2, r5
 8016b12:	1c7a      	adds	r2, r7, #1
 8016b14:	b2b6      	uxth	r6, r6
 8016b16:	b2ad      	uxth	r5, r5
 8016b18:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016b1c:	f105 0a01 	add.w	sl, r5, #1
 8016b20:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016b24:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016b28:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016b2c:	ea4a 0707 	orr.w	r7, sl, r7
 8016b30:	f106 0a01 	add.w	sl, r6, #1
 8016b34:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016b38:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016b3c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016b40:	ea47 070a 	orr.w	r7, r7, sl
 8016b44:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8016b48:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016b4a:	f108 0801 	add.w	r8, r8, #1
 8016b4e:	4410      	add	r0, r2
 8016b50:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016b52:	4411      	add	r1, r2
 8016b54:	e7a1      	b.n	8016a9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8016b56:	b007      	add	sp, #28
 8016b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016b5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b60:	b085      	sub	sp, #20
 8016b62:	468b      	mov	fp, r1
 8016b64:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016b68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016b6a:	9203      	str	r2, [sp, #12]
 8016b6c:	6841      	ldr	r1, [r0, #4]
 8016b6e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8016b72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016b76:	fb01 2404 	mla	r4, r1, r4, r2
 8016b7a:	6802      	ldr	r2, [r0, #0]
 8016b7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016b80:	f8de 2000 	ldr.w	r2, [lr]
 8016b84:	9200      	str	r2, [sp, #0]
 8016b86:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016b8a:	3204      	adds	r2, #4
 8016b8c:	9201      	str	r2, [sp, #4]
 8016b8e:	f1bb 0f00 	cmp.w	fp, #0
 8016b92:	dc03      	bgt.n	8016b9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016b94:	9a03      	ldr	r2, [sp, #12]
 8016b96:	2a00      	cmp	r2, #0
 8016b98:	f340 8153 	ble.w	8016e42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016b9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016b9e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016ba2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016ba6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016ba8:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016bac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016bb0:	2b00      	cmp	r3, #0
 8016bb2:	dd0e      	ble.n	8016bd2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016bb4:	1408      	asrs	r0, r1, #16
 8016bb6:	d405      	bmi.n	8016bc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016bb8:	42b8      	cmp	r0, r7
 8016bba:	da03      	bge.n	8016bc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016bbc:	1410      	asrs	r0, r2, #16
 8016bbe:	d401      	bmi.n	8016bc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016bc0:	42b0      	cmp	r0, r6
 8016bc2:	db07      	blt.n	8016bd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016bc4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016bc6:	3b01      	subs	r3, #1
 8016bc8:	3402      	adds	r4, #2
 8016bca:	4401      	add	r1, r0
 8016bcc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016bce:	4402      	add	r2, r0
 8016bd0:	e7ee      	b.n	8016bb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016bd2:	d017      	beq.n	8016c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016bd4:	1e58      	subs	r0, r3, #1
 8016bd6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016bd8:	fb05 1500 	mla	r5, r5, r0, r1
 8016bdc:	142d      	asrs	r5, r5, #16
 8016bde:	d409      	bmi.n	8016bf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016be0:	42bd      	cmp	r5, r7
 8016be2:	da07      	bge.n	8016bf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016be4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016be6:	fb05 2000 	mla	r0, r5, r0, r2
 8016bea:	1400      	asrs	r0, r0, #16
 8016bec:	d402      	bmi.n	8016bf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016bee:	42b0      	cmp	r0, r6
 8016bf0:	f2c0 80bc 	blt.w	8016d6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8016bf4:	2600      	movs	r6, #0
 8016bf6:	1998      	adds	r0, r3, r6
 8016bf8:	2800      	cmp	r0, #0
 8016bfa:	dc3e      	bgt.n	8016c7a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016bfc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016c00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016c04:	f1bb 0f00 	cmp.w	fp, #0
 8016c08:	f340 811b 	ble.w	8016e42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016c0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016c10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016c12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016c16:	f1bb 0b01 	subs.w	fp, fp, #1
 8016c1a:	eeb0 6a62 	vmov.f32	s12, s5
 8016c1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016c22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016c26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c2a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016c2e:	eeb0 6a43 	vmov.f32	s12, s6
 8016c32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c36:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016c3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016c3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016c46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c52:	ee12 2a90 	vmov	r2, s5
 8016c56:	eef0 2a47 	vmov.f32	s5, s14
 8016c5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c5e:	ee13 2a10 	vmov	r2, s6
 8016c62:	9311      	str	r3, [sp, #68]	; 0x44
 8016c64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016c66:	eeb0 3a67 	vmov.f32	s6, s15
 8016c6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c6e:	9a03      	ldr	r2, [sp, #12]
 8016c70:	9312      	str	r3, [sp, #72]	; 0x48
 8016c72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016c74:	bf08      	it	eq
 8016c76:	4613      	moveq	r3, r2
 8016c78:	e789      	b.n	8016b8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016c7a:	140f      	asrs	r7, r1, #16
 8016c7c:	d426      	bmi.n	8016ccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016c7e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016c82:	42bd      	cmp	r5, r7
 8016c84:	dd22      	ble.n	8016ccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016c86:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016c8a:	d41f      	bmi.n	8016ccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016c8c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016c90:	4560      	cmp	r0, ip
 8016c92:	dd1b      	ble.n	8016ccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016c94:	9800      	ldr	r0, [sp, #0]
 8016c96:	b22d      	sxth	r5, r5
 8016c98:	fb0c 0505 	mla	r5, ip, r5, r0
 8016c9c:	5de8      	ldrb	r0, [r5, r7]
 8016c9e:	9d01      	ldr	r5, [sp, #4]
 8016ca0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8016ca4:	0e07      	lsrs	r7, r0, #24
 8016ca6:	2fff      	cmp	r7, #255	; 0xff
 8016ca8:	d116      	bne.n	8016cd8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016caa:	f06f 0501 	mvn.w	r5, #1
 8016cae:	fb05 f706 	mul.w	r7, r5, r6
 8016cb2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016cb6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016cba:	0945      	lsrs	r5, r0, #5
 8016cbc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016cc0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016cc4:	ea4c 0505 	orr.w	r5, ip, r5
 8016cc8:	4305      	orrs	r5, r0
 8016cca:	53e5      	strh	r5, [r4, r7]
 8016ccc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016cce:	3e01      	subs	r6, #1
 8016cd0:	4401      	add	r1, r0
 8016cd2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016cd4:	4402      	add	r2, r0
 8016cd6:	e78e      	b.n	8016bf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016cd8:	b2fd      	uxtb	r5, r7
 8016cda:	2f00      	cmp	r7, #0
 8016cdc:	d0f6      	beq.n	8016ccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016cde:	f06f 0701 	mvn.w	r7, #1
 8016ce2:	fa1f f985 	uxth.w	r9, r5
 8016ce6:	43ed      	mvns	r5, r5
 8016ce8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016cec:	4377      	muls	r7, r6
 8016cee:	fb1a fa09 	smulbb	sl, sl, r9
 8016cf2:	b2ed      	uxtb	r5, r5
 8016cf4:	f834 8007 	ldrh.w	r8, [r4, r7]
 8016cf8:	9702      	str	r7, [sp, #8]
 8016cfa:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8016cfe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016d02:	fb17 f709 	smulbb	r7, r7, r9
 8016d06:	b2c0      	uxtb	r0, r0
 8016d08:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016d0c:	fb10 f009 	smulbb	r0, r0, r9
 8016d10:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016d14:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8016d18:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016d1c:	fa1f fc8c 	uxth.w	ip, ip
 8016d20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016d24:	fa5f f888 	uxtb.w	r8, r8
 8016d28:	fb07 a705 	mla	r7, r7, r5, sl
 8016d2c:	fb08 0005 	mla	r0, r8, r5, r0
 8016d30:	f10c 0501 	add.w	r5, ip, #1
 8016d34:	b2bf      	uxth	r7, r7
 8016d36:	b280      	uxth	r0, r0
 8016d38:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016d3c:	f100 0a01 	add.w	sl, r0, #1
 8016d40:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016d44:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016d48:	9802      	ldr	r0, [sp, #8]
 8016d4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d4e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016d52:	f107 0a01 	add.w	sl, r7, #1
 8016d56:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016d5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016d62:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016d66:	f824 c000 	strh.w	ip, [r4, r0]
 8016d6a:	e7af      	b.n	8016ccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016d6c:	f04f 0800 	mov.w	r8, #0
 8016d70:	eba3 0008 	sub.w	r0, r3, r8
 8016d74:	2800      	cmp	r0, #0
 8016d76:	f77f af41 	ble.w	8016bfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016d7a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8016d7e:	1410      	asrs	r0, r2, #16
 8016d80:	9f00      	ldr	r7, [sp, #0]
 8016d82:	140d      	asrs	r5, r1, #16
 8016d84:	fb06 7000 	mla	r0, r6, r0, r7
 8016d88:	5d40      	ldrb	r0, [r0, r5]
 8016d8a:	9d01      	ldr	r5, [sp, #4]
 8016d8c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016d90:	0e2e      	lsrs	r6, r5, #24
 8016d92:	2eff      	cmp	r6, #255	; 0xff
 8016d94:	d112      	bne.n	8016dbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8016d96:	482c      	ldr	r0, [pc, #176]	; (8016e48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8016d98:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016d9c:	0968      	lsrs	r0, r5, #5
 8016d9e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016da2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016da6:	4330      	orrs	r0, r6
 8016da8:	4328      	orrs	r0, r5
 8016daa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8016dae:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016db0:	f108 0801 	add.w	r8, r8, #1
 8016db4:	4401      	add	r1, r0
 8016db6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016db8:	4402      	add	r2, r0
 8016dba:	e7d9      	b.n	8016d70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016dbc:	b2f0      	uxtb	r0, r6
 8016dbe:	2e00      	cmp	r6, #0
 8016dc0:	d0f5      	beq.n	8016dae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016dc2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8016dc6:	fa1f f980 	uxth.w	r9, r0
 8016dca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016dce:	43c0      	mvns	r0, r0
 8016dd0:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016dd4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016dd8:	fb16 f609 	smulbb	r6, r6, r9
 8016ddc:	b2c0      	uxtb	r0, r0
 8016dde:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016de2:	b2ed      	uxtb	r5, r5
 8016de4:	fb1a fa09 	smulbb	sl, sl, r9
 8016de8:	fb07 6700 	mla	r7, r7, r0, r6
 8016dec:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016df0:	fb15 f509 	smulbb	r5, r5, r9
 8016df4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016df8:	b2bf      	uxth	r7, r7
 8016dfa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016dfe:	fa5f fc8c 	uxtb.w	ip, ip
 8016e02:	fb06 a600 	mla	r6, r6, r0, sl
 8016e06:	fb0c 5500 	mla	r5, ip, r0, r5
 8016e0a:	1c78      	adds	r0, r7, #1
 8016e0c:	b2b6      	uxth	r6, r6
 8016e0e:	b2ad      	uxth	r5, r5
 8016e10:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016e14:	f105 0a01 	add.w	sl, r5, #1
 8016e18:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016e1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016e20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016e24:	ea4a 0707 	orr.w	r7, sl, r7
 8016e28:	f106 0a01 	add.w	sl, r6, #1
 8016e2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016e30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016e34:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016e38:	ea47 070a 	orr.w	r7, r7, sl
 8016e3c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8016e40:	e7b5      	b.n	8016dae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016e42:	b005      	add	sp, #20
 8016e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e48:	fffff800 	.word	0xfffff800

08016e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e50:	b087      	sub	sp, #28
 8016e52:	468b      	mov	fp, r1
 8016e54:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016e58:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016e5a:	9204      	str	r2, [sp, #16]
 8016e5c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016e60:	6861      	ldr	r1, [r4, #4]
 8016e62:	9205      	str	r2, [sp, #20]
 8016e64:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8016e68:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8016e6c:	fb01 2000 	mla	r0, r1, r0, r2
 8016e70:	6822      	ldr	r2, [r4, #0]
 8016e72:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016e76:	f8de 2000 	ldr.w	r2, [lr]
 8016e7a:	9201      	str	r2, [sp, #4]
 8016e7c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016e80:	9202      	str	r2, [sp, #8]
 8016e82:	f1bb 0f00 	cmp.w	fp, #0
 8016e86:	dc03      	bgt.n	8016e90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016e88:	9a04      	ldr	r2, [sp, #16]
 8016e8a:	2a00      	cmp	r2, #0
 8016e8c:	f340 8142 	ble.w	8017114 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016e90:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016e92:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016e96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016e9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016e9c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016ea0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016ea4:	2b00      	cmp	r3, #0
 8016ea6:	dd0e      	ble.n	8016ec6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016ea8:	140c      	asrs	r4, r1, #16
 8016eaa:	d405      	bmi.n	8016eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016eac:	42bc      	cmp	r4, r7
 8016eae:	da03      	bge.n	8016eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016eb0:	1414      	asrs	r4, r2, #16
 8016eb2:	d401      	bmi.n	8016eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016eb4:	42b4      	cmp	r4, r6
 8016eb6:	db07      	blt.n	8016ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016eb8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016eba:	3b01      	subs	r3, #1
 8016ebc:	3002      	adds	r0, #2
 8016ebe:	4421      	add	r1, r4
 8016ec0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016ec2:	4422      	add	r2, r4
 8016ec4:	e7ee      	b.n	8016ea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016ec6:	d019      	beq.n	8016efc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016ec8:	1e5c      	subs	r4, r3, #1
 8016eca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016ecc:	fb05 1504 	mla	r5, r5, r4, r1
 8016ed0:	142d      	asrs	r5, r5, #16
 8016ed2:	d409      	bmi.n	8016ee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016ed4:	42bd      	cmp	r5, r7
 8016ed6:	da07      	bge.n	8016ee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016ed8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016eda:	fb05 2404 	mla	r4, r5, r4, r2
 8016ede:	1424      	asrs	r4, r4, #16
 8016ee0:	d402      	bmi.n	8016ee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016ee2:	42b4      	cmp	r4, r6
 8016ee4:	f2c0 80b1 	blt.w	801704a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8016ee8:	f04f 0800 	mov.w	r8, #0
 8016eec:	eb03 0408 	add.w	r4, r3, r8
 8016ef0:	2c00      	cmp	r4, #0
 8016ef2:	dc3e      	bgt.n	8016f72 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016ef4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016ef8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016efc:	f1bb 0f00 	cmp.w	fp, #0
 8016f00:	f340 8108 	ble.w	8017114 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016f04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016f08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016f0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016f0e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016f12:	eeb0 6a62 	vmov.f32	s12, s5
 8016f16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016f1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016f1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f22:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016f26:	eeb0 6a43 	vmov.f32	s12, s6
 8016f2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f2e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016f32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016f36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016f3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016f3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016f42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016f46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016f4a:	ee12 2a90 	vmov	r2, s5
 8016f4e:	eef0 2a47 	vmov.f32	s5, s14
 8016f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8016f56:	ee13 2a10 	vmov	r2, s6
 8016f5a:	9313      	str	r3, [sp, #76]	; 0x4c
 8016f5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016f5e:	eeb0 3a67 	vmov.f32	s6, s15
 8016f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8016f66:	9a04      	ldr	r2, [sp, #16]
 8016f68:	9314      	str	r3, [sp, #80]	; 0x50
 8016f6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016f6c:	bf08      	it	eq
 8016f6e:	4613      	moveq	r3, r2
 8016f70:	e787      	b.n	8016e82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8016f72:	140e      	asrs	r6, r1, #16
 8016f74:	d462      	bmi.n	801703c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016f76:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016f7a:	42b5      	cmp	r5, r6
 8016f7c:	dd5e      	ble.n	801703c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016f7e:	1417      	asrs	r7, r2, #16
 8016f80:	d45c      	bmi.n	801703c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016f82:	f8de 400c 	ldr.w	r4, [lr, #12]
 8016f86:	42bc      	cmp	r4, r7
 8016f88:	dd58      	ble.n	801703c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016f8a:	b22d      	sxth	r5, r5
 8016f8c:	9c02      	ldr	r4, [sp, #8]
 8016f8e:	fb07 6505 	mla	r5, r7, r5, r6
 8016f92:	5d66      	ldrb	r6, [r4, r5]
 8016f94:	2e00      	cmp	r6, #0
 8016f96:	d051      	beq.n	801703c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016f98:	9c01      	ldr	r4, [sp, #4]
 8016f9a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8016f9e:	f06f 0401 	mvn.w	r4, #1
 8016fa2:	fb04 f408 	mul.w	r4, r4, r8
 8016fa6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8016faa:	5b05      	ldrh	r5, [r0, r4]
 8016fac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016fb0:	9403      	str	r4, [sp, #12]
 8016fb2:	9c05      	ldr	r4, [sp, #20]
 8016fb4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016fb8:	4366      	muls	r6, r4
 8016fba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016fbe:	1c74      	adds	r4, r6, #1
 8016fc0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016fc4:	122e      	asrs	r6, r5, #8
 8016fc6:	1224      	asrs	r4, r4, #8
 8016fc8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016fcc:	00ed      	lsls	r5, r5, #3
 8016fce:	b2a7      	uxth	r7, r4
 8016fd0:	43e4      	mvns	r4, r4
 8016fd2:	b2ed      	uxtb	r5, r5
 8016fd4:	b2e4      	uxtb	r4, r4
 8016fd6:	fb16 f604 	smulbb	r6, r6, r4
 8016fda:	fb15 f504 	smulbb	r5, r5, r4
 8016fde:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016fe2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8016fe6:	fb1a fa04 	smulbb	sl, sl, r4
 8016fea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016fee:	fa1f fc8c 	uxth.w	ip, ip
 8016ff2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016ff6:	fa5f f989 	uxtb.w	r9, r9
 8016ffa:	fb06 a607 	mla	r6, r6, r7, sl
 8016ffe:	f10c 0401 	add.w	r4, ip, #1
 8017002:	fb09 5507 	mla	r5, r9, r7, r5
 8017006:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801700a:	9c03      	ldr	r4, [sp, #12]
 801700c:	b2ad      	uxth	r5, r5
 801700e:	b2b6      	uxth	r6, r6
 8017010:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017014:	f105 0a01 	add.w	sl, r5, #1
 8017018:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801701c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017020:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017024:	f106 0a01 	add.w	sl, r6, #1
 8017028:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801702c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017030:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017034:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017038:	f820 c004 	strh.w	ip, [r0, r4]
 801703c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801703e:	f108 38ff 	add.w	r8, r8, #4294967295
 8017042:	4421      	add	r1, r4
 8017044:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017046:	4422      	add	r2, r4
 8017048:	e750      	b.n	8016eec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801704a:	f04f 0900 	mov.w	r9, #0
 801704e:	eba3 0409 	sub.w	r4, r3, r9
 8017052:	2c00      	cmp	r4, #0
 8017054:	f77f af4e 	ble.w	8016ef4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017058:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801705c:	140d      	asrs	r5, r1, #16
 801705e:	1414      	asrs	r4, r2, #16
 8017060:	fb06 5404 	mla	r4, r6, r4, r5
 8017064:	9d02      	ldr	r5, [sp, #8]
 8017066:	5d2e      	ldrb	r6, [r5, r4]
 8017068:	2e00      	cmp	r6, #0
 801706a:	d04c      	beq.n	8017106 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801706c:	9d01      	ldr	r5, [sp, #4]
 801706e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8017072:	9c05      	ldr	r4, [sp, #20]
 8017074:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8017078:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801707c:	4366      	muls	r6, r4
 801707e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8017082:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017086:	1c74      	adds	r4, r6, #1
 8017088:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801708c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8017090:	122e      	asrs	r6, r5, #8
 8017092:	1224      	asrs	r4, r4, #8
 8017094:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017098:	00ed      	lsls	r5, r5, #3
 801709a:	b2a7      	uxth	r7, r4
 801709c:	43e4      	mvns	r4, r4
 801709e:	b2ed      	uxtb	r5, r5
 80170a0:	b2e4      	uxtb	r4, r4
 80170a2:	fb16 f604 	smulbb	r6, r6, r4
 80170a6:	fb15 f504 	smulbb	r5, r5, r4
 80170aa:	fb0c 6c07 	mla	ip, ip, r7, r6
 80170ae:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80170b2:	fb1a fa04 	smulbb	sl, sl, r4
 80170b6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80170ba:	fa1f fc8c 	uxth.w	ip, ip
 80170be:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80170c2:	fa5f f888 	uxtb.w	r8, r8
 80170c6:	fb06 a607 	mla	r6, r6, r7, sl
 80170ca:	f10c 0401 	add.w	r4, ip, #1
 80170ce:	fb08 5507 	mla	r5, r8, r7, r5
 80170d2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80170d6:	b2ad      	uxth	r5, r5
 80170d8:	b2b6      	uxth	r6, r6
 80170da:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80170de:	f105 0a01 	add.w	sl, r5, #1
 80170e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80170e6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80170ea:	ea4a 0c0c 	orr.w	ip, sl, ip
 80170ee:	f106 0a01 	add.w	sl, r6, #1
 80170f2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80170f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80170fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80170fe:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017102:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8017106:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017108:	f109 0901 	add.w	r9, r9, #1
 801710c:	4421      	add	r1, r4
 801710e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017110:	4422      	add	r2, r4
 8017112:	e79c      	b.n	801704e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8017114:	b007      	add	sp, #28
 8017116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801711a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801711a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801711e:	b085      	sub	sp, #20
 8017120:	468b      	mov	fp, r1
 8017122:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017126:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017128:	9203      	str	r2, [sp, #12]
 801712a:	6861      	ldr	r1, [r4, #4]
 801712c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8017130:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8017134:	fb01 2000 	mla	r0, r1, r0, r2
 8017138:	6822      	ldr	r2, [r4, #0]
 801713a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801713e:	f8d8 2000 	ldr.w	r2, [r8]
 8017142:	9200      	str	r2, [sp, #0]
 8017144:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8017148:	9201      	str	r2, [sp, #4]
 801714a:	f1bb 0f00 	cmp.w	fp, #0
 801714e:	dc03      	bgt.n	8017158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017150:	9a03      	ldr	r2, [sp, #12]
 8017152:	2a00      	cmp	r2, #0
 8017154:	f340 8146 	ble.w	80173e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8017158:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801715a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801715e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017162:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017164:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8017168:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801716c:	2b00      	cmp	r3, #0
 801716e:	dd0e      	ble.n	801718e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8017170:	140c      	asrs	r4, r1, #16
 8017172:	d405      	bmi.n	8017180 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017174:	42bc      	cmp	r4, r7
 8017176:	da03      	bge.n	8017180 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017178:	1414      	asrs	r4, r2, #16
 801717a:	d401      	bmi.n	8017180 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801717c:	42b4      	cmp	r4, r6
 801717e:	db07      	blt.n	8017190 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017180:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017182:	3b01      	subs	r3, #1
 8017184:	3002      	adds	r0, #2
 8017186:	4421      	add	r1, r4
 8017188:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801718a:	4422      	add	r2, r4
 801718c:	e7ee      	b.n	801716c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801718e:	d017      	beq.n	80171c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017190:	1e5c      	subs	r4, r3, #1
 8017192:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017194:	fb05 1504 	mla	r5, r5, r4, r1
 8017198:	142d      	asrs	r5, r5, #16
 801719a:	d409      	bmi.n	80171b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801719c:	42bd      	cmp	r5, r7
 801719e:	da07      	bge.n	80171b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80171a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80171a2:	fb05 2404 	mla	r4, r5, r4, r2
 80171a6:	1424      	asrs	r4, r4, #16
 80171a8:	d402      	bmi.n	80171b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80171aa:	42b4      	cmp	r4, r6
 80171ac:	f2c0 80b3 	blt.w	8017316 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80171b0:	2600      	movs	r6, #0
 80171b2:	199c      	adds	r4, r3, r6
 80171b4:	2c00      	cmp	r4, #0
 80171b6:	dc3e      	bgt.n	8017236 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80171b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80171bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80171c0:	f1bb 0f00 	cmp.w	fp, #0
 80171c4:	f340 810e 	ble.w	80173e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80171c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80171cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80171ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80171d2:	f1bb 0b01 	subs.w	fp, fp, #1
 80171d6:	eeb0 6a62 	vmov.f32	s12, s5
 80171da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80171de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80171e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80171e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80171ea:	eeb0 6a43 	vmov.f32	s12, s6
 80171ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80171f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80171f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80171fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80171fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017202:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017206:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801720a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801720e:	ee12 2a90 	vmov	r2, s5
 8017212:	eef0 2a47 	vmov.f32	s5, s14
 8017216:	fb92 f3f3 	sdiv	r3, r2, r3
 801721a:	ee13 2a10 	vmov	r2, s6
 801721e:	9311      	str	r3, [sp, #68]	; 0x44
 8017220:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017222:	eeb0 3a67 	vmov.f32	s6, s15
 8017226:	fb92 f3f3 	sdiv	r3, r2, r3
 801722a:	9a03      	ldr	r2, [sp, #12]
 801722c:	9312      	str	r3, [sp, #72]	; 0x48
 801722e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017230:	bf08      	it	eq
 8017232:	4613      	moveq	r3, r2
 8017234:	e789      	b.n	801714a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017236:	140f      	asrs	r7, r1, #16
 8017238:	d418      	bmi.n	801726c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801723a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801723e:	42bd      	cmp	r5, r7
 8017240:	dd14      	ble.n	801726c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017242:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017246:	d411      	bmi.n	801726c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017248:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801724c:	4564      	cmp	r4, ip
 801724e:	dd0d      	ble.n	801726c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017250:	b22d      	sxth	r5, r5
 8017252:	9c01      	ldr	r4, [sp, #4]
 8017254:	fb0c 7505 	mla	r5, ip, r5, r7
 8017258:	5d64      	ldrb	r4, [r4, r5]
 801725a:	2cff      	cmp	r4, #255	; 0xff
 801725c:	d10c      	bne.n	8017278 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801725e:	9c00      	ldr	r4, [sp, #0]
 8017260:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8017264:	f06f 0401 	mvn.w	r4, #1
 8017268:	4374      	muls	r4, r6
 801726a:	5305      	strh	r5, [r0, r4]
 801726c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801726e:	3e01      	subs	r6, #1
 8017270:	4421      	add	r1, r4
 8017272:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017274:	4422      	add	r2, r4
 8017276:	e79c      	b.n	80171b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017278:	2c00      	cmp	r4, #0
 801727a:	d0f7      	beq.n	801726c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801727c:	9f00      	ldr	r7, [sp, #0]
 801727e:	fa1f fc84 	uxth.w	ip, r4
 8017282:	43e4      	mvns	r4, r4
 8017284:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8017288:	f06f 0501 	mvn.w	r5, #1
 801728c:	b2e4      	uxtb	r4, r4
 801728e:	4375      	muls	r5, r6
 8017290:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8017294:	9502      	str	r5, [sp, #8]
 8017296:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801729a:	5b45      	ldrh	r5, [r0, r5]
 801729c:	122f      	asrs	r7, r5, #8
 801729e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80172a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80172a6:	00ed      	lsls	r5, r5, #3
 80172a8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80172ac:	fb17 f704 	smulbb	r7, r7, r4
 80172b0:	b2ed      	uxtb	r5, r5
 80172b2:	fb1a fa04 	smulbb	sl, sl, r4
 80172b6:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80172ba:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80172be:	fb15 f504 	smulbb	r5, r5, r4
 80172c2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80172c6:	fa1f fe8e 	uxth.w	lr, lr
 80172ca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80172ce:	fa5f f989 	uxtb.w	r9, r9
 80172d2:	fb07 a70c 	mla	r7, r7, ip, sl
 80172d6:	f10e 0401 	add.w	r4, lr, #1
 80172da:	fb09 550c 	mla	r5, r9, ip, r5
 80172de:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80172e2:	9c02      	ldr	r4, [sp, #8]
 80172e4:	b2ad      	uxth	r5, r5
 80172e6:	b2bf      	uxth	r7, r7
 80172e8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80172ec:	f105 0a01 	add.w	sl, r5, #1
 80172f0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80172f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80172f8:	ea4a 0e0e 	orr.w	lr, sl, lr
 80172fc:	f107 0a01 	add.w	sl, r7, #1
 8017300:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017304:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017308:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801730c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8017310:	f820 e004 	strh.w	lr, [r0, r4]
 8017314:	e7aa      	b.n	801726c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017316:	f04f 0900 	mov.w	r9, #0
 801731a:	eba3 0409 	sub.w	r4, r3, r9
 801731e:	2c00      	cmp	r4, #0
 8017320:	f77f af4a 	ble.w	80171b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017324:	1414      	asrs	r4, r2, #16
 8017326:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801732a:	140d      	asrs	r5, r1, #16
 801732c:	fb06 5504 	mla	r5, r6, r4, r5
 8017330:	9c01      	ldr	r4, [sp, #4]
 8017332:	5d64      	ldrb	r4, [r4, r5]
 8017334:	2cff      	cmp	r4, #255	; 0xff
 8017336:	d10b      	bne.n	8017350 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8017338:	9c00      	ldr	r4, [sp, #0]
 801733a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801733e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8017342:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017344:	f109 0901 	add.w	r9, r9, #1
 8017348:	4421      	add	r1, r4
 801734a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801734c:	4422      	add	r2, r4
 801734e:	e7e4      	b.n	801731a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8017350:	2c00      	cmp	r4, #0
 8017352:	d0f6      	beq.n	8017342 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8017354:	9e00      	ldr	r6, [sp, #0]
 8017356:	b2a7      	uxth	r7, r4
 8017358:	43e4      	mvns	r4, r4
 801735a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801735e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8017362:	b2e4      	uxtb	r4, r4
 8017364:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017368:	122e      	asrs	r6, r5, #8
 801736a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801736e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017372:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017376:	00ed      	lsls	r5, r5, #3
 8017378:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801737c:	fb16 f604 	smulbb	r6, r6, r4
 8017380:	b2ed      	uxtb	r5, r5
 8017382:	fb1a fa04 	smulbb	sl, sl, r4
 8017386:	fb0c 6c07 	mla	ip, ip, r7, r6
 801738a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801738e:	fb15 f504 	smulbb	r5, r5, r4
 8017392:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017396:	fa1f fc8c 	uxth.w	ip, ip
 801739a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801739e:	fa5f fe8e 	uxtb.w	lr, lr
 80173a2:	fb06 a607 	mla	r6, r6, r7, sl
 80173a6:	f10c 0401 	add.w	r4, ip, #1
 80173aa:	fb0e 5507 	mla	r5, lr, r7, r5
 80173ae:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80173b2:	b2ad      	uxth	r5, r5
 80173b4:	b2b6      	uxth	r6, r6
 80173b6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80173ba:	f105 0a01 	add.w	sl, r5, #1
 80173be:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80173c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80173c6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80173ca:	f106 0a01 	add.w	sl, r6, #1
 80173ce:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80173d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80173d6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80173da:	ea4c 0c0a 	orr.w	ip, ip, sl
 80173de:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80173e2:	e7ae      	b.n	8017342 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80173e4:	b005      	add	sp, #20
 80173e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080173ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80173ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173ee:	b085      	sub	sp, #20
 80173f0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80173f2:	9203      	str	r2, [sp, #12]
 80173f4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80173f8:	9100      	str	r1, [sp, #0]
 80173fa:	9201      	str	r2, [sp, #4]
 80173fc:	6841      	ldr	r1, [r0, #4]
 80173fe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8017402:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017406:	fb01 2404 	mla	r4, r1, r4, r2
 801740a:	6802      	ldr	r2, [r0, #0]
 801740c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017410:	f8de 2000 	ldr.w	r2, [lr]
 8017414:	9202      	str	r2, [sp, #8]
 8017416:	9a01      	ldr	r2, [sp, #4]
 8017418:	43d6      	mvns	r6, r2
 801741a:	b2f6      	uxtb	r6, r6
 801741c:	9a00      	ldr	r2, [sp, #0]
 801741e:	2a00      	cmp	r2, #0
 8017420:	dc03      	bgt.n	801742a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8017422:	9a03      	ldr	r2, [sp, #12]
 8017424:	2a00      	cmp	r2, #0
 8017426:	f340 8124 	ble.w	8017672 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801742a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801742c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017430:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017434:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017436:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801743a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801743e:	2b00      	cmp	r3, #0
 8017440:	dd0e      	ble.n	8017460 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017442:	1408      	asrs	r0, r1, #16
 8017444:	d405      	bmi.n	8017452 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017446:	4560      	cmp	r0, ip
 8017448:	da03      	bge.n	8017452 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801744a:	1410      	asrs	r0, r2, #16
 801744c:	d401      	bmi.n	8017452 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801744e:	42b8      	cmp	r0, r7
 8017450:	db07      	blt.n	8017462 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017452:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017454:	3b01      	subs	r3, #1
 8017456:	3402      	adds	r4, #2
 8017458:	4401      	add	r1, r0
 801745a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801745c:	4402      	add	r2, r0
 801745e:	e7ee      	b.n	801743e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8017460:	d06e      	beq.n	8017540 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8017462:	1e58      	subs	r0, r3, #1
 8017464:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017466:	fb05 1500 	mla	r5, r5, r0, r1
 801746a:	142d      	asrs	r5, r5, #16
 801746c:	d45c      	bmi.n	8017528 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801746e:	4565      	cmp	r5, ip
 8017470:	da5a      	bge.n	8017528 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017472:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017474:	fb05 2000 	mla	r0, r5, r0, r2
 8017478:	1400      	asrs	r0, r0, #16
 801747a:	d455      	bmi.n	8017528 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801747c:	42b8      	cmp	r0, r7
 801747e:	da53      	bge.n	8017528 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017480:	4699      	mov	r9, r3
 8017482:	46a2      	mov	sl, r4
 8017484:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8017488:	f1b9 0f00 	cmp.w	r9, #0
 801748c:	dd54      	ble.n	8017538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801748e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017492:	140d      	asrs	r5, r1, #16
 8017494:	1410      	asrs	r0, r2, #16
 8017496:	f109 39ff 	add.w	r9, r9, #4294967295
 801749a:	fb07 5000 	mla	r0, r7, r0, r5
 801749e:	9d02      	ldr	r5, [sp, #8]
 80174a0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80174a4:	f8ba 5000 	ldrh.w	r5, [sl]
 80174a8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80174ac:	122f      	asrs	r7, r5, #8
 80174ae:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80174b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80174b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80174ba:	00ed      	lsls	r5, r5, #3
 80174bc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80174c0:	fb17 f706 	smulbb	r7, r7, r6
 80174c4:	b2ed      	uxtb	r5, r5
 80174c6:	fb18 f806 	smulbb	r8, r8, r6
 80174ca:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80174ce:	10c7      	asrs	r7, r0, #3
 80174d0:	fb15 f506 	smulbb	r5, r5, r6
 80174d4:	00c0      	lsls	r0, r0, #3
 80174d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80174da:	fa1f fc8c 	uxth.w	ip, ip
 80174de:	b2c0      	uxtb	r0, r0
 80174e0:	fb07 870b 	mla	r7, r7, fp, r8
 80174e4:	fb00 500b 	mla	r0, r0, fp, r5
 80174e8:	f10c 0501 	add.w	r5, ip, #1
 80174ec:	b2bf      	uxth	r7, r7
 80174ee:	b280      	uxth	r0, r0
 80174f0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80174f4:	f107 0801 	add.w	r8, r7, #1
 80174f8:	1c45      	adds	r5, r0, #1
 80174fa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80174fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017502:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017506:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017508:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801750c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017510:	4401      	add	r1, r0
 8017512:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017516:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017518:	ea45 0c0c 	orr.w	ip, r5, ip
 801751c:	4402      	add	r2, r0
 801751e:	ea4c 0c08 	orr.w	ip, ip, r8
 8017522:	f82a cb02 	strh.w	ip, [sl], #2
 8017526:	e7af      	b.n	8017488 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017528:	f04f 0800 	mov.w	r8, #0
 801752c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8017530:	eb03 0008 	add.w	r0, r3, r8
 8017534:	2800      	cmp	r0, #0
 8017536:	dc41      	bgt.n	80175bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017538:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801753c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017540:	9b00      	ldr	r3, [sp, #0]
 8017542:	2b00      	cmp	r3, #0
 8017544:	f340 8095 	ble.w	8017672 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8017548:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801754c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801754e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017552:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017556:	eef0 6a62 	vmov.f32	s13, s5
 801755a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801755e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017562:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017566:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801756a:	eef0 6a43 	vmov.f32	s13, s6
 801756e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017572:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8017576:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801757a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801757e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017582:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017586:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801758a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801758e:	ee12 2a90 	vmov	r2, s5
 8017592:	eef0 2a47 	vmov.f32	s5, s14
 8017596:	fb92 f3f3 	sdiv	r3, r2, r3
 801759a:	ee13 2a10 	vmov	r2, s6
 801759e:	9311      	str	r3, [sp, #68]	; 0x44
 80175a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80175a2:	eeb0 3a67 	vmov.f32	s6, s15
 80175a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80175aa:	9312      	str	r3, [sp, #72]	; 0x48
 80175ac:	9b00      	ldr	r3, [sp, #0]
 80175ae:	9a03      	ldr	r2, [sp, #12]
 80175b0:	3b01      	subs	r3, #1
 80175b2:	9300      	str	r3, [sp, #0]
 80175b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80175b6:	bf08      	it	eq
 80175b8:	4613      	moveq	r3, r2
 80175ba:	e72f      	b.n	801741c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80175bc:	140f      	asrs	r7, r1, #16
 80175be:	d451      	bmi.n	8017664 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80175c0:	f8de 5008 	ldr.w	r5, [lr, #8]
 80175c4:	42bd      	cmp	r5, r7
 80175c6:	dd4d      	ble.n	8017664 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80175c8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80175cc:	d44a      	bmi.n	8017664 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80175ce:	f8de 000c 	ldr.w	r0, [lr, #12]
 80175d2:	4560      	cmp	r0, ip
 80175d4:	dd46      	ble.n	8017664 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80175d6:	b22d      	sxth	r5, r5
 80175d8:	9802      	ldr	r0, [sp, #8]
 80175da:	fb0c 7505 	mla	r5, ip, r5, r7
 80175de:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80175e2:	f06f 0501 	mvn.w	r5, #1
 80175e6:	fb05 fb08 	mul.w	fp, r5, r8
 80175ea:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80175ee:	f834 500b 	ldrh.w	r5, [r4, fp]
 80175f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80175f6:	122f      	asrs	r7, r5, #8
 80175f8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80175fc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017600:	00ed      	lsls	r5, r5, #3
 8017602:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017606:	fb17 f706 	smulbb	r7, r7, r6
 801760a:	b2ed      	uxtb	r5, r5
 801760c:	fb19 f906 	smulbb	r9, r9, r6
 8017610:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8017614:	10c7      	asrs	r7, r0, #3
 8017616:	fb15 f506 	smulbb	r5, r5, r6
 801761a:	00c0      	lsls	r0, r0, #3
 801761c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017620:	fa1f fc8c 	uxth.w	ip, ip
 8017624:	b2c0      	uxtb	r0, r0
 8017626:	fb07 970a 	mla	r7, r7, sl, r9
 801762a:	fb00 500a 	mla	r0, r0, sl, r5
 801762e:	f10c 0501 	add.w	r5, ip, #1
 8017632:	b2bf      	uxth	r7, r7
 8017634:	b280      	uxth	r0, r0
 8017636:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801763a:	f107 0901 	add.w	r9, r7, #1
 801763e:	1c45      	adds	r5, r0, #1
 8017640:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8017644:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017648:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801764c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017650:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017654:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017658:	ea45 0c0c 	orr.w	ip, r5, ip
 801765c:	ea4c 0c09 	orr.w	ip, ip, r9
 8017660:	f824 c00b 	strh.w	ip, [r4, fp]
 8017664:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017666:	f108 38ff 	add.w	r8, r8, #4294967295
 801766a:	4401      	add	r1, r0
 801766c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801766e:	4402      	add	r2, r0
 8017670:	e75e      	b.n	8017530 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8017672:	b005      	add	sp, #20
 8017674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017678 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801767c:	b085      	sub	sp, #20
 801767e:	4693      	mov	fp, r2
 8017680:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017684:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8017686:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017688:	6870      	ldr	r0, [r6, #4]
 801768a:	9101      	str	r1, [sp, #4]
 801768c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017690:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8017694:	fb00 2404 	mla	r4, r0, r4, r2
 8017698:	6832      	ldr	r2, [r6, #0]
 801769a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801769e:	682a      	ldr	r2, [r5, #0]
 80176a0:	9202      	str	r2, [sp, #8]
 80176a2:	9a01      	ldr	r2, [sp, #4]
 80176a4:	2a00      	cmp	r2, #0
 80176a6:	dc03      	bgt.n	80176b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80176a8:	f1bb 0f00 	cmp.w	fp, #0
 80176ac:	f340 809a 	ble.w	80177e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80176b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80176b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80176b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80176ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80176bc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80176c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80176c4:	2b00      	cmp	r3, #0
 80176c6:	dd0c      	ble.n	80176e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80176c8:	1406      	asrs	r6, r0, #16
 80176ca:	d405      	bmi.n	80176d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80176cc:	454e      	cmp	r6, r9
 80176ce:	da03      	bge.n	80176d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80176d0:	1416      	asrs	r6, r2, #16
 80176d2:	d401      	bmi.n	80176d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80176d4:	4546      	cmp	r6, r8
 80176d6:	db05      	blt.n	80176e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80176d8:	4470      	add	r0, lr
 80176da:	4462      	add	r2, ip
 80176dc:	3b01      	subs	r3, #1
 80176de:	3402      	adds	r4, #2
 80176e0:	e7f0      	b.n	80176c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80176e2:	d00f      	beq.n	8017704 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80176e4:	1e5e      	subs	r6, r3, #1
 80176e6:	fb0e 0706 	mla	r7, lr, r6, r0
 80176ea:	143f      	asrs	r7, r7, #16
 80176ec:	d541      	bpl.n	8017772 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80176ee:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80176f2:	4698      	mov	r8, r3
 80176f4:	9603      	str	r6, [sp, #12]
 80176f6:	f1b8 0f00 	cmp.w	r8, #0
 80176fa:	dc56      	bgt.n	80177aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80176fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017700:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017704:	9b01      	ldr	r3, [sp, #4]
 8017706:	2b00      	cmp	r3, #0
 8017708:	dd6c      	ble.n	80177e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801770a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801770e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017710:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017714:	eeb0 6a62 	vmov.f32	s12, s5
 8017718:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801771c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017720:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017724:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017728:	eeb0 6a43 	vmov.f32	s12, s6
 801772c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017730:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017734:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017738:	ee61 7a27 	vmul.f32	s15, s2, s15
 801773c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017740:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017744:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017748:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801774c:	ee12 2a90 	vmov	r2, s5
 8017750:	eef0 2a47 	vmov.f32	s5, s14
 8017754:	fb92 fef3 	sdiv	lr, r2, r3
 8017758:	ee13 2a10 	vmov	r2, s6
 801775c:	eeb0 3a67 	vmov.f32	s6, s15
 8017760:	fb92 fcf3 	sdiv	ip, r2, r3
 8017764:	9b01      	ldr	r3, [sp, #4]
 8017766:	3b01      	subs	r3, #1
 8017768:	9301      	str	r3, [sp, #4]
 801776a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801776c:	bf08      	it	eq
 801776e:	465b      	moveq	r3, fp
 8017770:	e797      	b.n	80176a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8017772:	454f      	cmp	r7, r9
 8017774:	dabb      	bge.n	80176ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017776:	fb0c 2606 	mla	r6, ip, r6, r2
 801777a:	1436      	asrs	r6, r6, #16
 801777c:	d4b7      	bmi.n	80176ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801777e:	4546      	cmp	r6, r8
 8017780:	dab5      	bge.n	80176ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017782:	461e      	mov	r6, r3
 8017784:	46a0      	mov	r8, r4
 8017786:	2e00      	cmp	r6, #0
 8017788:	ddb8      	ble.n	80176fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801778a:	1417      	asrs	r7, r2, #16
 801778c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017790:	ea4f 4920 	mov.w	r9, r0, asr #16
 8017794:	9902      	ldr	r1, [sp, #8]
 8017796:	4470      	add	r0, lr
 8017798:	4462      	add	r2, ip
 801779a:	fb0a 9707 	mla	r7, sl, r7, r9
 801779e:	3e01      	subs	r6, #1
 80177a0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80177a4:	f828 7b02 	strh.w	r7, [r8], #2
 80177a8:	e7ed      	b.n	8017786 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80177aa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80177ae:	d414      	bmi.n	80177da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80177b0:	68ae      	ldr	r6, [r5, #8]
 80177b2:	454e      	cmp	r6, r9
 80177b4:	dd11      	ble.n	80177da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80177b6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80177ba:	d40e      	bmi.n	80177da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80177bc:	68ef      	ldr	r7, [r5, #12]
 80177be:	4557      	cmp	r7, sl
 80177c0:	dd0b      	ble.n	80177da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80177c2:	b236      	sxth	r6, r6
 80177c4:	f06f 0101 	mvn.w	r1, #1
 80177c8:	9f02      	ldr	r7, [sp, #8]
 80177ca:	fb0a 9606 	mla	r6, sl, r6, r9
 80177ce:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80177d2:	fb01 f608 	mul.w	r6, r1, r8
 80177d6:	9903      	ldr	r1, [sp, #12]
 80177d8:	538f      	strh	r7, [r1, r6]
 80177da:	4470      	add	r0, lr
 80177dc:	4462      	add	r2, ip
 80177de:	f108 38ff 	add.w	r8, r8, #4294967295
 80177e2:	e788      	b.n	80176f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80177e4:	b005      	add	sp, #20
 80177e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080177ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80177ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177ee:	b087      	sub	sp, #28
 80177f0:	468b      	mov	fp, r1
 80177f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80177f6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80177f8:	9203      	str	r2, [sp, #12]
 80177fa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80177fe:	6841      	ldr	r1, [r0, #4]
 8017800:	9204      	str	r2, [sp, #16]
 8017802:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8017806:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801780a:	fb01 2505 	mla	r5, r1, r5, r2
 801780e:	6802      	ldr	r2, [r0, #0]
 8017810:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8017814:	f8d9 2000 	ldr.w	r2, [r9]
 8017818:	9201      	str	r2, [sp, #4]
 801781a:	f1bb 0f00 	cmp.w	fp, #0
 801781e:	dc03      	bgt.n	8017828 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017820:	9a03      	ldr	r2, [sp, #12]
 8017822:	2a00      	cmp	r2, #0
 8017824:	f340 8158 	ble.w	8017ad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8017828:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801782a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801782e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017832:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017834:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017838:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801783c:	2b00      	cmp	r3, #0
 801783e:	dd0e      	ble.n	801785e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8017840:	1402      	asrs	r2, r0, #16
 8017842:	d405      	bmi.n	8017850 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017844:	42ba      	cmp	r2, r7
 8017846:	da03      	bge.n	8017850 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017848:	140a      	asrs	r2, r1, #16
 801784a:	d401      	bmi.n	8017850 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801784c:	42b2      	cmp	r2, r6
 801784e:	db07      	blt.n	8017860 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017850:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017852:	3b01      	subs	r3, #1
 8017854:	3502      	adds	r5, #2
 8017856:	4410      	add	r0, r2
 8017858:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801785a:	4411      	add	r1, r2
 801785c:	e7ee      	b.n	801783c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801785e:	d017      	beq.n	8017890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017860:	1e5a      	subs	r2, r3, #1
 8017862:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017864:	fb04 0402 	mla	r4, r4, r2, r0
 8017868:	1424      	asrs	r4, r4, #16
 801786a:	d409      	bmi.n	8017880 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801786c:	42bc      	cmp	r4, r7
 801786e:	da07      	bge.n	8017880 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017870:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017872:	fb04 1202 	mla	r2, r4, r2, r1
 8017876:	1412      	asrs	r2, r2, #16
 8017878:	d402      	bmi.n	8017880 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801787a:	42b2      	cmp	r2, r6
 801787c:	f2c0 80bf 	blt.w	80179fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017880:	2700      	movs	r7, #0
 8017882:	19da      	adds	r2, r3, r7
 8017884:	2a00      	cmp	r2, #0
 8017886:	dc3e      	bgt.n	8017906 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017888:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801788c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017890:	f1bb 0f00 	cmp.w	fp, #0
 8017894:	f340 8120 	ble.w	8017ad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8017898:	ee30 0a04 	vadd.f32	s0, s0, s8
 801789c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801789e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80178a2:	f1bb 0b01 	subs.w	fp, fp, #1
 80178a6:	eeb0 6a62 	vmov.f32	s12, s5
 80178aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80178ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80178b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80178b6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80178ba:	eeb0 6a43 	vmov.f32	s12, s6
 80178be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80178c2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80178c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80178ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80178ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80178d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80178d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80178da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80178de:	ee12 2a90 	vmov	r2, s5
 80178e2:	eef0 2a47 	vmov.f32	s5, s14
 80178e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80178ea:	ee13 2a10 	vmov	r2, s6
 80178ee:	9313      	str	r3, [sp, #76]	; 0x4c
 80178f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178f2:	eeb0 3a67 	vmov.f32	s6, s15
 80178f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80178fa:	9a03      	ldr	r2, [sp, #12]
 80178fc:	9314      	str	r3, [sp, #80]	; 0x50
 80178fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017900:	bf08      	it	eq
 8017902:	4613      	moveq	r3, r2
 8017904:	e789      	b.n	801781a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017906:	1406      	asrs	r6, r0, #16
 8017908:	d42d      	bmi.n	8017966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801790a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801790e:	42b4      	cmp	r4, r6
 8017910:	dd29      	ble.n	8017966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017912:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8017916:	d426      	bmi.n	8017966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017918:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801791c:	4562      	cmp	r2, ip
 801791e:	dd22      	ble.n	8017966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017920:	b224      	sxth	r4, r4
 8017922:	9a01      	ldr	r2, [sp, #4]
 8017924:	fb0c 6404 	mla	r4, ip, r4, r6
 8017928:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801792c:	0e22      	lsrs	r2, r4, #24
 801792e:	d01a      	beq.n	8017966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017930:	9e04      	ldr	r6, [sp, #16]
 8017932:	4372      	muls	r2, r6
 8017934:	1c56      	adds	r6, r2, #1
 8017936:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801793a:	0a26      	lsrs	r6, r4, #8
 801793c:	1212      	asrs	r2, r2, #8
 801793e:	9605      	str	r6, [sp, #20]
 8017940:	2aff      	cmp	r2, #255	; 0xff
 8017942:	d116      	bne.n	8017972 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017944:	f06f 0201 	mvn.w	r2, #1
 8017948:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801794c:	fb02 fc07 	mul.w	ip, r2, r7
 8017950:	0962      	lsrs	r2, r4, #5
 8017952:	f026 0607 	bic.w	r6, r6, #7
 8017956:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801795a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801795e:	4316      	orrs	r6, r2
 8017960:	4326      	orrs	r6, r4
 8017962:	f825 600c 	strh.w	r6, [r5, ip]
 8017966:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017968:	3f01      	subs	r7, #1
 801796a:	4410      	add	r0, r2
 801796c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801796e:	4411      	add	r1, r2
 8017970:	e787      	b.n	8017882 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017972:	f06f 0601 	mvn.w	r6, #1
 8017976:	fa1f fa82 	uxth.w	sl, r2
 801797a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801797e:	43d2      	mvns	r2, r2
 8017980:	437e      	muls	r6, r7
 8017982:	b2e4      	uxtb	r4, r4
 8017984:	fb1c fc0a 	smulbb	ip, ip, sl
 8017988:	b2d2      	uxtb	r2, r2
 801798a:	f835 8006 	ldrh.w	r8, [r5, r6]
 801798e:	fb14 f40a 	smulbb	r4, r4, sl
 8017992:	9602      	str	r6, [sp, #8]
 8017994:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017998:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801799c:	fb16 f60a 	smulbb	r6, r6, sl
 80179a0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80179a4:	fb0e ce02 	mla	lr, lr, r2, ip
 80179a8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80179ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80179b0:	fa1f fe8e 	uxth.w	lr, lr
 80179b4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80179b8:	fa5f f888 	uxtb.w	r8, r8
 80179bc:	fb0c 6c02 	mla	ip, ip, r2, r6
 80179c0:	fb08 4402 	mla	r4, r8, r2, r4
 80179c4:	f10e 0201 	add.w	r2, lr, #1
 80179c8:	fa1f fc8c 	uxth.w	ip, ip
 80179cc:	b2a4      	uxth	r4, r4
 80179ce:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80179d2:	9a02      	ldr	r2, [sp, #8]
 80179d4:	1c66      	adds	r6, r4, #1
 80179d6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80179da:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80179de:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80179e2:	ea46 0e0e 	orr.w	lr, r6, lr
 80179e6:	f10c 0601 	add.w	r6, ip, #1
 80179ea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80179ee:	0976      	lsrs	r6, r6, #5
 80179f0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80179f4:	ea4e 0e06 	orr.w	lr, lr, r6
 80179f8:	f825 e002 	strh.w	lr, [r5, r2]
 80179fc:	e7b3      	b.n	8017966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80179fe:	f04f 0800 	mov.w	r8, #0
 8017a02:	eba3 0208 	sub.w	r2, r3, r8
 8017a06:	2a00      	cmp	r2, #0
 8017a08:	f77f af3e 	ble.w	8017888 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017a0c:	1404      	asrs	r4, r0, #16
 8017a0e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8017a12:	140a      	asrs	r2, r1, #16
 8017a14:	fb06 4202 	mla	r2, r6, r2, r4
 8017a18:	9c01      	ldr	r4, [sp, #4]
 8017a1a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8017a1e:	0e22      	lsrs	r2, r4, #24
 8017a20:	d015      	beq.n	8017a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017a22:	9e04      	ldr	r6, [sp, #16]
 8017a24:	4372      	muls	r2, r6
 8017a26:	1c56      	adds	r6, r2, #1
 8017a28:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8017a2c:	0a26      	lsrs	r6, r4, #8
 8017a2e:	1212      	asrs	r2, r2, #8
 8017a30:	2aff      	cmp	r2, #255	; 0xff
 8017a32:	d113      	bne.n	8017a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8017a34:	0962      	lsrs	r2, r4, #5
 8017a36:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8017a3a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017a3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a42:	f026 0607 	bic.w	r6, r6, #7
 8017a46:	4316      	orrs	r6, r2
 8017a48:	4326      	orrs	r6, r4
 8017a4a:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8017a4e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017a50:	f108 0801 	add.w	r8, r8, #1
 8017a54:	4410      	add	r0, r2
 8017a56:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017a58:	4411      	add	r1, r2
 8017a5a:	e7d2      	b.n	8017a02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8017a5c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8017a60:	fa1f fa82 	uxth.w	sl, r2
 8017a64:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8017a68:	43d2      	mvns	r2, r2
 8017a6a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017a6e:	fb17 f70a 	smulbb	r7, r7, sl
 8017a72:	b2d2      	uxtb	r2, r2
 8017a74:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017a78:	b2e4      	uxtb	r4, r4
 8017a7a:	b2f6      	uxtb	r6, r6
 8017a7c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8017a80:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017a84:	fb14 f40a 	smulbb	r4, r4, sl
 8017a88:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017a8c:	fa1f fc8c 	uxth.w	ip, ip
 8017a90:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017a94:	fb16 f60a 	smulbb	r6, r6, sl
 8017a98:	fa5f fe8e 	uxtb.w	lr, lr
 8017a9c:	fb0e 4402 	mla	r4, lr, r2, r4
 8017aa0:	fb07 6702 	mla	r7, r7, r2, r6
 8017aa4:	f10c 0201 	add.w	r2, ip, #1
 8017aa8:	b2a4      	uxth	r4, r4
 8017aaa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017aae:	1c66      	adds	r6, r4, #1
 8017ab0:	b2bf      	uxth	r7, r7
 8017ab2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017ab6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8017aba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017abe:	ea46 0c0c 	orr.w	ip, r6, ip
 8017ac2:	1c7e      	adds	r6, r7, #1
 8017ac4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017ac8:	0976      	lsrs	r6, r6, #5
 8017aca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017ace:	ea4c 0c06 	orr.w	ip, ip, r6
 8017ad2:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8017ad6:	e7ba      	b.n	8017a4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017ad8:	b007      	add	sp, #28
 8017ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017ae0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ae4:	b085      	sub	sp, #20
 8017ae6:	468b      	mov	fp, r1
 8017ae8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017aec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017aee:	9203      	str	r2, [sp, #12]
 8017af0:	6841      	ldr	r1, [r0, #4]
 8017af2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8017af6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017afa:	fb01 2404 	mla	r4, r1, r4, r2
 8017afe:	6802      	ldr	r2, [r0, #0]
 8017b00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017b04:	f8d8 2000 	ldr.w	r2, [r8]
 8017b08:	9201      	str	r2, [sp, #4]
 8017b0a:	f1bb 0f00 	cmp.w	fp, #0
 8017b0e:	dc03      	bgt.n	8017b18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8017b10:	9a03      	ldr	r2, [sp, #12]
 8017b12:	2a00      	cmp	r2, #0
 8017b14:	f340 814f 	ble.w	8017db6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8017b18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017b1a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8017b1e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017b22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017b24:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8017b28:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017b2c:	2b00      	cmp	r3, #0
 8017b2e:	dd0e      	ble.n	8017b4e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017b30:	1408      	asrs	r0, r1, #16
 8017b32:	d405      	bmi.n	8017b40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017b34:	42b8      	cmp	r0, r7
 8017b36:	da03      	bge.n	8017b40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017b38:	1410      	asrs	r0, r2, #16
 8017b3a:	d401      	bmi.n	8017b40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017b3c:	42b0      	cmp	r0, r6
 8017b3e:	db07      	blt.n	8017b50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017b40:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017b42:	3b01      	subs	r3, #1
 8017b44:	3402      	adds	r4, #2
 8017b46:	4401      	add	r1, r0
 8017b48:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017b4a:	4402      	add	r2, r0
 8017b4c:	e7ee      	b.n	8017b2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8017b4e:	d017      	beq.n	8017b80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017b50:	1e58      	subs	r0, r3, #1
 8017b52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017b54:	fb05 1500 	mla	r5, r5, r0, r1
 8017b58:	142d      	asrs	r5, r5, #16
 8017b5a:	d409      	bmi.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017b5c:	42bd      	cmp	r5, r7
 8017b5e:	da07      	bge.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017b60:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017b62:	fb05 2000 	mla	r0, r5, r0, r2
 8017b66:	1400      	asrs	r0, r0, #16
 8017b68:	d402      	bmi.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017b6a:	42b0      	cmp	r0, r6
 8017b6c:	f2c0 80ba 	blt.w	8017ce4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8017b70:	2600      	movs	r6, #0
 8017b72:	1998      	adds	r0, r3, r6
 8017b74:	2800      	cmp	r0, #0
 8017b76:	dc3e      	bgt.n	8017bf6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8017b78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017b7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017b80:	f1bb 0f00 	cmp.w	fp, #0
 8017b84:	f340 8117 	ble.w	8017db6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8017b88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017b8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017b8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017b92:	f1bb 0b01 	subs.w	fp, fp, #1
 8017b96:	eeb0 6a62 	vmov.f32	s12, s5
 8017b9a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017b9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017ba2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017ba6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017baa:	eeb0 6a43 	vmov.f32	s12, s6
 8017bae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017bb2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017bb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017bba:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017bbe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017bc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017bc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017bca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017bce:	ee12 2a90 	vmov	r2, s5
 8017bd2:	eef0 2a47 	vmov.f32	s5, s14
 8017bd6:	fb92 f3f3 	sdiv	r3, r2, r3
 8017bda:	ee13 2a10 	vmov	r2, s6
 8017bde:	9311      	str	r3, [sp, #68]	; 0x44
 8017be0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017be2:	eeb0 3a67 	vmov.f32	s6, s15
 8017be6:	fb92 f3f3 	sdiv	r3, r2, r3
 8017bea:	9a03      	ldr	r2, [sp, #12]
 8017bec:	9312      	str	r3, [sp, #72]	; 0x48
 8017bee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017bf0:	bf08      	it	eq
 8017bf2:	4613      	moveq	r3, r2
 8017bf4:	e789      	b.n	8017b0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8017bf6:	140f      	asrs	r7, r1, #16
 8017bf8:	d424      	bmi.n	8017c44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017bfa:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8017bfe:	42bd      	cmp	r5, r7
 8017c00:	dd20      	ble.n	8017c44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017c02:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017c06:	d41d      	bmi.n	8017c44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017c08:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8017c0c:	4560      	cmp	r0, ip
 8017c0e:	dd19      	ble.n	8017c44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017c10:	b22d      	sxth	r5, r5
 8017c12:	9801      	ldr	r0, [sp, #4]
 8017c14:	fb0c 7505 	mla	r5, ip, r5, r7
 8017c18:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8017c1c:	0e07      	lsrs	r7, r0, #24
 8017c1e:	2fff      	cmp	r7, #255	; 0xff
 8017c20:	d116      	bne.n	8017c50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017c22:	f06f 0501 	mvn.w	r5, #1
 8017c26:	fb05 f706 	mul.w	r7, r5, r6
 8017c2a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8017c2e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8017c32:	0945      	lsrs	r5, r0, #5
 8017c34:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017c38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017c3c:	ea4c 0505 	orr.w	r5, ip, r5
 8017c40:	4305      	orrs	r5, r0
 8017c42:	53e5      	strh	r5, [r4, r7]
 8017c44:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017c46:	3e01      	subs	r6, #1
 8017c48:	4401      	add	r1, r0
 8017c4a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017c4c:	4402      	add	r2, r0
 8017c4e:	e790      	b.n	8017b72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017c50:	b2fd      	uxtb	r5, r7
 8017c52:	2f00      	cmp	r7, #0
 8017c54:	d0f6      	beq.n	8017c44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017c56:	f06f 0701 	mvn.w	r7, #1
 8017c5a:	fa1f f985 	uxth.w	r9, r5
 8017c5e:	43ed      	mvns	r5, r5
 8017c60:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8017c64:	4377      	muls	r7, r6
 8017c66:	fb1a fa09 	smulbb	sl, sl, r9
 8017c6a:	b2ed      	uxtb	r5, r5
 8017c6c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8017c70:	9702      	str	r7, [sp, #8]
 8017c72:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8017c76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017c7a:	fb17 f709 	smulbb	r7, r7, r9
 8017c7e:	b2c0      	uxtb	r0, r0
 8017c80:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017c84:	fb10 f009 	smulbb	r0, r0, r9
 8017c88:	fb0c 7c05 	mla	ip, ip, r5, r7
 8017c8c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017c90:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017c94:	fa1f fc8c 	uxth.w	ip, ip
 8017c98:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017c9c:	fa5f fe8e 	uxtb.w	lr, lr
 8017ca0:	fb07 a705 	mla	r7, r7, r5, sl
 8017ca4:	fb0e 0005 	mla	r0, lr, r5, r0
 8017ca8:	f10c 0501 	add.w	r5, ip, #1
 8017cac:	b2bf      	uxth	r7, r7
 8017cae:	b280      	uxth	r0, r0
 8017cb0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017cb4:	f100 0a01 	add.w	sl, r0, #1
 8017cb8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017cbc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8017cc0:	9802      	ldr	r0, [sp, #8]
 8017cc2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017cc6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017cca:	f107 0a01 	add.w	sl, r7, #1
 8017cce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017cd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017cd6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017cda:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017cde:	f824 c000 	strh.w	ip, [r4, r0]
 8017ce2:	e7af      	b.n	8017c44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017ce4:	f04f 0e00 	mov.w	lr, #0
 8017ce8:	eba3 000e 	sub.w	r0, r3, lr
 8017cec:	2800      	cmp	r0, #0
 8017cee:	f77f af43 	ble.w	8017b78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017cf2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8017cf6:	140d      	asrs	r5, r1, #16
 8017cf8:	1410      	asrs	r0, r2, #16
 8017cfa:	fb06 5000 	mla	r0, r6, r0, r5
 8017cfe:	9d01      	ldr	r5, [sp, #4]
 8017d00:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017d04:	0e2e      	lsrs	r6, r5, #24
 8017d06:	2eff      	cmp	r6, #255	; 0xff
 8017d08:	d112      	bne.n	8017d30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017d0a:	482c      	ldr	r0, [pc, #176]	; (8017dbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8017d0c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8017d10:	0968      	lsrs	r0, r5, #5
 8017d12:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017d16:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017d1a:	4330      	orrs	r0, r6
 8017d1c:	4328      	orrs	r0, r5
 8017d1e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8017d22:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017d24:	f10e 0e01 	add.w	lr, lr, #1
 8017d28:	4401      	add	r1, r0
 8017d2a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017d2c:	4402      	add	r2, r0
 8017d2e:	e7db      	b.n	8017ce8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8017d30:	b2f0      	uxtb	r0, r6
 8017d32:	2e00      	cmp	r6, #0
 8017d34:	d0f5      	beq.n	8017d22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017d36:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8017d3a:	fa1f f980 	uxth.w	r9, r0
 8017d3e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017d42:	43c0      	mvns	r0, r0
 8017d44:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017d48:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017d4c:	fb16 f609 	smulbb	r6, r6, r9
 8017d50:	b2c0      	uxtb	r0, r0
 8017d52:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017d56:	b2ed      	uxtb	r5, r5
 8017d58:	fb1a fa09 	smulbb	sl, sl, r9
 8017d5c:	fb07 6700 	mla	r7, r7, r0, r6
 8017d60:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017d64:	fb15 f509 	smulbb	r5, r5, r9
 8017d68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017d6c:	b2bf      	uxth	r7, r7
 8017d6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017d72:	fa5f fc8c 	uxtb.w	ip, ip
 8017d76:	fb06 a600 	mla	r6, r6, r0, sl
 8017d7a:	fb0c 5500 	mla	r5, ip, r0, r5
 8017d7e:	1c78      	adds	r0, r7, #1
 8017d80:	b2b6      	uxth	r6, r6
 8017d82:	b2ad      	uxth	r5, r5
 8017d84:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017d88:	f105 0a01 	add.w	sl, r5, #1
 8017d8c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017d90:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017d94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017d98:	ea4a 0707 	orr.w	r7, sl, r7
 8017d9c:	f106 0a01 	add.w	sl, r6, #1
 8017da0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017da4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017da8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017dac:	ea47 070a 	orr.w	r7, r7, sl
 8017db0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8017db4:	e7b5      	b.n	8017d22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017db6:	b005      	add	sp, #20
 8017db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017dbc:	fffff800 	.word	0xfffff800

08017dc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dc4:	b087      	sub	sp, #28
 8017dc6:	468b      	mov	fp, r1
 8017dc8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017dcc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017dce:	9203      	str	r2, [sp, #12]
 8017dd0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017dd4:	6841      	ldr	r1, [r0, #4]
 8017dd6:	9204      	str	r2, [sp, #16]
 8017dd8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8017ddc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017de0:	fb01 2404 	mla	r4, r1, r4, r2
 8017de4:	6802      	ldr	r2, [r0, #0]
 8017de6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017dea:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017dee:	3201      	adds	r2, #1
 8017df0:	f022 0201 	bic.w	r2, r2, #1
 8017df4:	9200      	str	r2, [sp, #0]
 8017df6:	f8d9 2000 	ldr.w	r2, [r9]
 8017dfa:	9201      	str	r2, [sp, #4]
 8017dfc:	f1bb 0f00 	cmp.w	fp, #0
 8017e00:	dc03      	bgt.n	8017e0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017e02:	9a03      	ldr	r2, [sp, #12]
 8017e04:	2a00      	cmp	r2, #0
 8017e06:	f340 816a 	ble.w	80180de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8017e0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017e0c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8017e10:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017e14:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017e16:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017e1a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017e1e:	2b00      	cmp	r3, #0
 8017e20:	dd0e      	ble.n	8017e40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017e22:	1402      	asrs	r2, r0, #16
 8017e24:	d405      	bmi.n	8017e32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e26:	42ba      	cmp	r2, r7
 8017e28:	da03      	bge.n	8017e32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e2a:	140a      	asrs	r2, r1, #16
 8017e2c:	d401      	bmi.n	8017e32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e2e:	42b2      	cmp	r2, r6
 8017e30:	db07      	blt.n	8017e42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8017e32:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017e34:	3b01      	subs	r3, #1
 8017e36:	3402      	adds	r4, #2
 8017e38:	4410      	add	r0, r2
 8017e3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017e3c:	4411      	add	r1, r2
 8017e3e:	e7ee      	b.n	8017e1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017e40:	d017      	beq.n	8017e72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017e42:	1e5a      	subs	r2, r3, #1
 8017e44:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017e46:	fb05 0502 	mla	r5, r5, r2, r0
 8017e4a:	142d      	asrs	r5, r5, #16
 8017e4c:	d409      	bmi.n	8017e62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017e4e:	42bd      	cmp	r5, r7
 8017e50:	da07      	bge.n	8017e62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017e52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017e54:	fb05 1202 	mla	r2, r5, r2, r1
 8017e58:	1412      	asrs	r2, r2, #16
 8017e5a:	d402      	bmi.n	8017e62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017e5c:	42b2      	cmp	r2, r6
 8017e5e:	f2c0 80c8 	blt.w	8017ff2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8017e62:	2700      	movs	r7, #0
 8017e64:	19da      	adds	r2, r3, r7
 8017e66:	2a00      	cmp	r2, #0
 8017e68:	dc3e      	bgt.n	8017ee8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017e6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017e6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017e72:	f1bb 0f00 	cmp.w	fp, #0
 8017e76:	f340 8132 	ble.w	80180de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8017e7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017e7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017e84:	f1bb 0b01 	subs.w	fp, fp, #1
 8017e88:	eeb0 6a62 	vmov.f32	s12, s5
 8017e8c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017e90:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017e94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017e98:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017e9c:	eeb0 6a43 	vmov.f32	s12, s6
 8017ea0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017ea4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017ea8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017eac:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017eb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017eb4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017eb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017ebc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017ec0:	ee12 2a90 	vmov	r2, s5
 8017ec4:	eef0 2a47 	vmov.f32	s5, s14
 8017ec8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ecc:	ee13 2a10 	vmov	r2, s6
 8017ed0:	9313      	str	r3, [sp, #76]	; 0x4c
 8017ed2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017ed4:	eeb0 3a67 	vmov.f32	s6, s15
 8017ed8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017edc:	9a03      	ldr	r2, [sp, #12]
 8017ede:	9314      	str	r3, [sp, #80]	; 0x50
 8017ee0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017ee2:	bf08      	it	eq
 8017ee4:	4613      	moveq	r3, r2
 8017ee6:	e789      	b.n	8017dfc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017ee8:	1405      	asrs	r5, r0, #16
 8017eea:	d436      	bmi.n	8017f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017eec:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017ef0:	42aa      	cmp	r2, r5
 8017ef2:	dd32      	ble.n	8017f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017ef4:	140e      	asrs	r6, r1, #16
 8017ef6:	d430      	bmi.n	8017f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017ef8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017efc:	42b2      	cmp	r2, r6
 8017efe:	dd2c      	ble.n	8017f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017f00:	9a00      	ldr	r2, [sp, #0]
 8017f02:	fb06 5502 	mla	r5, r6, r2, r5
 8017f06:	9e01      	ldr	r6, [sp, #4]
 8017f08:	086a      	lsrs	r2, r5, #1
 8017f0a:	5cb2      	ldrb	r2, [r6, r2]
 8017f0c:	07ee      	lsls	r6, r5, #31
 8017f0e:	bf54      	ite	pl
 8017f10:	f002 020f 	andpl.w	r2, r2, #15
 8017f14:	1112      	asrmi	r2, r2, #4
 8017f16:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017f1a:	b2d2      	uxtb	r2, r2
 8017f1c:	b1ea      	cbz	r2, 8017f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017f1e:	9d04      	ldr	r5, [sp, #16]
 8017f20:	436a      	muls	r2, r5
 8017f22:	1c55      	adds	r5, r2, #1
 8017f24:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017f28:	4d6e      	ldr	r5, [pc, #440]	; (80180e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017f2a:	1212      	asrs	r2, r2, #8
 8017f2c:	682d      	ldr	r5, [r5, #0]
 8017f2e:	2aff      	cmp	r2, #255	; 0xff
 8017f30:	ea4f 2615 	mov.w	r6, r5, lsr #8
 8017f34:	9605      	str	r6, [sp, #20]
 8017f36:	d116      	bne.n	8017f66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8017f38:	f06f 0201 	mvn.w	r2, #1
 8017f3c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8017f40:	fb02 fc07 	mul.w	ip, r2, r7
 8017f44:	096a      	lsrs	r2, r5, #5
 8017f46:	f026 0607 	bic.w	r6, r6, #7
 8017f4a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017f4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f52:	4316      	orrs	r6, r2
 8017f54:	432e      	orrs	r6, r5
 8017f56:	f824 600c 	strh.w	r6, [r4, ip]
 8017f5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017f5c:	3f01      	subs	r7, #1
 8017f5e:	4410      	add	r0, r2
 8017f60:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017f62:	4411      	add	r1, r2
 8017f64:	e77e      	b.n	8017e64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8017f66:	f06f 0601 	mvn.w	r6, #1
 8017f6a:	fa1f fa82 	uxth.w	sl, r2
 8017f6e:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8017f72:	43d2      	mvns	r2, r2
 8017f74:	437e      	muls	r6, r7
 8017f76:	b2ed      	uxtb	r5, r5
 8017f78:	fb1c fc0a 	smulbb	ip, ip, sl
 8017f7c:	b2d2      	uxtb	r2, r2
 8017f7e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8017f82:	fb15 f50a 	smulbb	r5, r5, sl
 8017f86:	9602      	str	r6, [sp, #8]
 8017f88:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017f8c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8017f90:	fb16 f60a 	smulbb	r6, r6, sl
 8017f94:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8017f98:	fb0e ce02 	mla	lr, lr, r2, ip
 8017f9c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017fa0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017fa4:	fa1f fe8e 	uxth.w	lr, lr
 8017fa8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017fac:	fa5f f888 	uxtb.w	r8, r8
 8017fb0:	fb0c 6c02 	mla	ip, ip, r2, r6
 8017fb4:	fb08 5502 	mla	r5, r8, r2, r5
 8017fb8:	f10e 0201 	add.w	r2, lr, #1
 8017fbc:	fa1f fc8c 	uxth.w	ip, ip
 8017fc0:	b2ad      	uxth	r5, r5
 8017fc2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017fc6:	9a02      	ldr	r2, [sp, #8]
 8017fc8:	1c6e      	adds	r6, r5, #1
 8017fca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8017fce:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8017fd2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017fd6:	ea46 0e0e 	orr.w	lr, r6, lr
 8017fda:	f10c 0601 	add.w	r6, ip, #1
 8017fde:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017fe2:	0976      	lsrs	r6, r6, #5
 8017fe4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017fe8:	ea4e 0e06 	orr.w	lr, lr, r6
 8017fec:	f824 e002 	strh.w	lr, [r4, r2]
 8017ff0:	e7b3      	b.n	8017f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017ff2:	f04f 0800 	mov.w	r8, #0
 8017ff6:	eba3 0208 	sub.w	r2, r3, r8
 8017ffa:	2a00      	cmp	r2, #0
 8017ffc:	f77f af35 	ble.w	8017e6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018000:	1402      	asrs	r2, r0, #16
 8018002:	9e00      	ldr	r6, [sp, #0]
 8018004:	140d      	asrs	r5, r1, #16
 8018006:	fb06 2505 	mla	r5, r6, r5, r2
 801800a:	9e01      	ldr	r6, [sp, #4]
 801800c:	086a      	lsrs	r2, r5, #1
 801800e:	07ed      	lsls	r5, r5, #31
 8018010:	5cb2      	ldrb	r2, [r6, r2]
 8018012:	bf54      	ite	pl
 8018014:	f002 020f 	andpl.w	r2, r2, #15
 8018018:	1112      	asrmi	r2, r2, #4
 801801a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801801e:	b2d2      	uxtb	r2, r2
 8018020:	b1c2      	cbz	r2, 8018054 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018022:	9d04      	ldr	r5, [sp, #16]
 8018024:	436a      	muls	r2, r5
 8018026:	1c55      	adds	r5, r2, #1
 8018028:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801802c:	4d2d      	ldr	r5, [pc, #180]	; (80180e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801802e:	1212      	asrs	r2, r2, #8
 8018030:	682e      	ldr	r6, [r5, #0]
 8018032:	2aff      	cmp	r2, #255	; 0xff
 8018034:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8018038:	d113      	bne.n	8018062 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801803a:	0972      	lsrs	r2, r6, #5
 801803c:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8018040:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8018044:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018048:	f025 0507 	bic.w	r5, r5, #7
 801804c:	4315      	orrs	r5, r2
 801804e:	4335      	orrs	r5, r6
 8018050:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8018054:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018056:	f108 0801 	add.w	r8, r8, #1
 801805a:	4410      	add	r0, r2
 801805c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801805e:	4411      	add	r1, r2
 8018060:	e7c9      	b.n	8017ff6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018062:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018066:	fa1f fa82 	uxth.w	sl, r2
 801806a:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801806e:	43d2      	mvns	r2, r2
 8018070:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018074:	fb17 f70a 	smulbb	r7, r7, sl
 8018078:	b2d2      	uxtb	r2, r2
 801807a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801807e:	b2f6      	uxtb	r6, r6
 8018080:	b2ed      	uxtb	r5, r5
 8018082:	fb0c 7c02 	mla	ip, ip, r2, r7
 8018086:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801808a:	fb16 f60a 	smulbb	r6, r6, sl
 801808e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018092:	fa1f fc8c 	uxth.w	ip, ip
 8018096:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801809a:	fb15 f50a 	smulbb	r5, r5, sl
 801809e:	fa5f fe8e 	uxtb.w	lr, lr
 80180a2:	fb0e 6602 	mla	r6, lr, r2, r6
 80180a6:	fb07 5702 	mla	r7, r7, r2, r5
 80180aa:	f10c 0201 	add.w	r2, ip, #1
 80180ae:	b2b6      	uxth	r6, r6
 80180b0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80180b4:	1c75      	adds	r5, r6, #1
 80180b6:	b2bf      	uxth	r7, r7
 80180b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80180bc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80180c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80180c4:	ea45 0c0c 	orr.w	ip, r5, ip
 80180c8:	1c7d      	adds	r5, r7, #1
 80180ca:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80180ce:	096d      	lsrs	r5, r5, #5
 80180d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180d4:	ea4c 0c05 	orr.w	ip, ip, r5
 80180d8:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80180dc:	e7ba      	b.n	8018054 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80180de:	b007      	add	sp, #28
 80180e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180e4:	2400207c 	.word	0x2400207c

080180e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80180e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180ec:	b087      	sub	sp, #28
 80180ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80180f2:	f8df 8308 	ldr.w	r8, [pc, #776]	; 80183fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80180f6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80180f8:	9101      	str	r1, [sp, #4]
 80180fa:	9205      	str	r2, [sp, #20]
 80180fc:	6841      	ldr	r1, [r0, #4]
 80180fe:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8018102:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018106:	fb01 2404 	mla	r4, r1, r4, r2
 801810a:	6802      	ldr	r2, [r0, #0]
 801810c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018110:	f8db 2008 	ldr.w	r2, [fp, #8]
 8018114:	3201      	adds	r2, #1
 8018116:	f022 0201 	bic.w	r2, r2, #1
 801811a:	9202      	str	r2, [sp, #8]
 801811c:	f8db 2000 	ldr.w	r2, [fp]
 8018120:	9203      	str	r2, [sp, #12]
 8018122:	9a01      	ldr	r2, [sp, #4]
 8018124:	2a00      	cmp	r2, #0
 8018126:	dc03      	bgt.n	8018130 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018128:	9a05      	ldr	r2, [sp, #20]
 801812a:	2a00      	cmp	r2, #0
 801812c:	f340 8162 	ble.w	80183f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8018130:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018132:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8018136:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801813a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801813c:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8018140:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018144:	2b00      	cmp	r3, #0
 8018146:	dd0e      	ble.n	8018166 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018148:	1402      	asrs	r2, r0, #16
 801814a:	d405      	bmi.n	8018158 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801814c:	42ba      	cmp	r2, r7
 801814e:	da03      	bge.n	8018158 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018150:	140a      	asrs	r2, r1, #16
 8018152:	d401      	bmi.n	8018158 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018154:	42b2      	cmp	r2, r6
 8018156:	db07      	blt.n	8018168 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018158:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801815a:	3b01      	subs	r3, #1
 801815c:	3402      	adds	r4, #2
 801815e:	4410      	add	r0, r2
 8018160:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018162:	4411      	add	r1, r2
 8018164:	e7ee      	b.n	8018144 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018166:	d017      	beq.n	8018198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018168:	1e5a      	subs	r2, r3, #1
 801816a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801816c:	fb05 0502 	mla	r5, r5, r2, r0
 8018170:	142d      	asrs	r5, r5, #16
 8018172:	d409      	bmi.n	8018188 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018174:	42bd      	cmp	r5, r7
 8018176:	da07      	bge.n	8018188 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018178:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801817a:	fb05 1202 	mla	r2, r5, r2, r1
 801817e:	1412      	asrs	r2, r2, #16
 8018180:	d402      	bmi.n	8018188 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018182:	42b2      	cmp	r2, r6
 8018184:	f2c0 80c3 	blt.w	801830e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8018188:	2500      	movs	r5, #0
 801818a:	195a      	adds	r2, r3, r5
 801818c:	2a00      	cmp	r2, #0
 801818e:	dc3f      	bgt.n	8018210 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018190:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018194:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018198:	9b01      	ldr	r3, [sp, #4]
 801819a:	2b00      	cmp	r3, #0
 801819c:	f340 812a 	ble.w	80183f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80181a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80181a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80181a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80181aa:	eeb0 6a62 	vmov.f32	s12, s5
 80181ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80181b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80181b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80181ba:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80181be:	eeb0 6a43 	vmov.f32	s12, s6
 80181c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80181c6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80181ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80181ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80181d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80181d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80181da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80181de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80181e2:	ee12 2a90 	vmov	r2, s5
 80181e6:	eef0 2a47 	vmov.f32	s5, s14
 80181ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80181ee:	ee13 2a10 	vmov	r2, s6
 80181f2:	9313      	str	r3, [sp, #76]	; 0x4c
 80181f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80181f6:	eeb0 3a67 	vmov.f32	s6, s15
 80181fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80181fe:	9314      	str	r3, [sp, #80]	; 0x50
 8018200:	9b01      	ldr	r3, [sp, #4]
 8018202:	9a05      	ldr	r2, [sp, #20]
 8018204:	3b01      	subs	r3, #1
 8018206:	9301      	str	r3, [sp, #4]
 8018208:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801820a:	bf08      	it	eq
 801820c:	4613      	moveq	r3, r2
 801820e:	e788      	b.n	8018122 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018210:	1406      	asrs	r6, r0, #16
 8018212:	d42c      	bmi.n	801826e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018214:	f8db 2008 	ldr.w	r2, [fp, #8]
 8018218:	42b2      	cmp	r2, r6
 801821a:	dd28      	ble.n	801826e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801821c:	140f      	asrs	r7, r1, #16
 801821e:	d426      	bmi.n	801826e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018220:	f8db 200c 	ldr.w	r2, [fp, #12]
 8018224:	42ba      	cmp	r2, r7
 8018226:	dd22      	ble.n	801826e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018228:	9a02      	ldr	r2, [sp, #8]
 801822a:	fb07 6602 	mla	r6, r7, r2, r6
 801822e:	9f03      	ldr	r7, [sp, #12]
 8018230:	0872      	lsrs	r2, r6, #1
 8018232:	07f6      	lsls	r6, r6, #31
 8018234:	5cba      	ldrb	r2, [r7, r2]
 8018236:	bf54      	ite	pl
 8018238:	f002 020f 	andpl.w	r2, r2, #15
 801823c:	1112      	asrmi	r2, r2, #4
 801823e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018242:	b2d2      	uxtb	r2, r2
 8018244:	2aff      	cmp	r2, #255	; 0xff
 8018246:	d118      	bne.n	801827a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8018248:	f06f 0601 	mvn.w	r6, #1
 801824c:	f8d8 2000 	ldr.w	r2, [r8]
 8018250:	fb06 f705 	mul.w	r7, r6, r5
 8018254:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8018258:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801825c:	0956      	lsrs	r6, r2, #5
 801825e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018262:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018266:	ea4c 0606 	orr.w	r6, ip, r6
 801826a:	4316      	orrs	r6, r2
 801826c:	53e6      	strh	r6, [r4, r7]
 801826e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018270:	3d01      	subs	r5, #1
 8018272:	4410      	add	r0, r2
 8018274:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018276:	4411      	add	r1, r2
 8018278:	e787      	b.n	801818a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801827a:	2a00      	cmp	r2, #0
 801827c:	d0f7      	beq.n	801826e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801827e:	f06f 0601 	mvn.w	r6, #1
 8018282:	f8d8 c000 	ldr.w	ip, [r8]
 8018286:	fa1f f982 	uxth.w	r9, r2
 801828a:	43d2      	mvns	r2, r2
 801828c:	436e      	muls	r6, r5
 801828e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8018292:	b2d2      	uxtb	r2, r2
 8018294:	f834 e006 	ldrh.w	lr, [r4, r6]
 8018298:	fb1a fa09 	smulbb	sl, sl, r9
 801829c:	9604      	str	r6, [sp, #16]
 801829e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80182a2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80182a6:	fb16 f609 	smulbb	r6, r6, r9
 80182aa:	fa5f fc8c 	uxtb.w	ip, ip
 80182ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80182b2:	fb1c fc09 	smulbb	ip, ip, r9
 80182b6:	fb07 6702 	mla	r7, r7, r2, r6
 80182ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80182be:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80182c2:	b2bf      	uxth	r7, r7
 80182c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80182c8:	fa5f fe8e 	uxtb.w	lr, lr
 80182cc:	fb06 a602 	mla	r6, r6, r2, sl
 80182d0:	fb0e cc02 	mla	ip, lr, r2, ip
 80182d4:	1c7a      	adds	r2, r7, #1
 80182d6:	b2b6      	uxth	r6, r6
 80182d8:	fa1f fc8c 	uxth.w	ip, ip
 80182dc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80182e0:	9a04      	ldr	r2, [sp, #16]
 80182e2:	f10c 0a01 	add.w	sl, ip, #1
 80182e6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80182ea:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80182ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80182f2:	ea4a 0707 	orr.w	r7, sl, r7
 80182f6:	f106 0a01 	add.w	sl, r6, #1
 80182fa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80182fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018302:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018306:	ea47 070a 	orr.w	r7, r7, sl
 801830a:	52a7      	strh	r7, [r4, r2]
 801830c:	e7af      	b.n	801826e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801830e:	f04f 0e00 	mov.w	lr, #0
 8018312:	eba3 020e 	sub.w	r2, r3, lr
 8018316:	2a00      	cmp	r2, #0
 8018318:	f77f af3a 	ble.w	8018190 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801831c:	1402      	asrs	r2, r0, #16
 801831e:	9e02      	ldr	r6, [sp, #8]
 8018320:	140d      	asrs	r5, r1, #16
 8018322:	fb06 2505 	mla	r5, r6, r5, r2
 8018326:	9e03      	ldr	r6, [sp, #12]
 8018328:	086a      	lsrs	r2, r5, #1
 801832a:	07ed      	lsls	r5, r5, #31
 801832c:	5cb2      	ldrb	r2, [r6, r2]
 801832e:	bf54      	ite	pl
 8018330:	f002 020f 	andpl.w	r2, r2, #15
 8018334:	1112      	asrmi	r2, r2, #4
 8018336:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801833a:	b2d2      	uxtb	r2, r2
 801833c:	2aff      	cmp	r2, #255	; 0xff
 801833e:	d115      	bne.n	801836c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8018340:	f8d8 5000 	ldr.w	r5, [r8]
 8018344:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8018348:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801834c:	096a      	lsrs	r2, r5, #5
 801834e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018352:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018356:	4332      	orrs	r2, r6
 8018358:	432a      	orrs	r2, r5
 801835a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801835e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018360:	f10e 0e01 	add.w	lr, lr, #1
 8018364:	4410      	add	r0, r2
 8018366:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018368:	4411      	add	r1, r2
 801836a:	e7d2      	b.n	8018312 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801836c:	2a00      	cmp	r2, #0
 801836e:	d0f6      	beq.n	801835e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018370:	f8d8 7000 	ldr.w	r7, [r8]
 8018374:	fa1f f982 	uxth.w	r9, r2
 8018378:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801837c:	43d2      	mvns	r2, r2
 801837e:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8018382:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8018386:	ea4f 262c 	mov.w	r6, ip, asr #8
 801838a:	fb15 f509 	smulbb	r5, r5, r9
 801838e:	b2d2      	uxtb	r2, r2
 8018390:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018394:	b2ff      	uxtb	r7, r7
 8018396:	fb1a fa09 	smulbb	sl, sl, r9
 801839a:	fb06 5602 	mla	r6, r6, r2, r5
 801839e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80183a2:	fb17 f709 	smulbb	r7, r7, r9
 80183a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80183aa:	b2b6      	uxth	r6, r6
 80183ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80183b0:	fa5f fc8c 	uxtb.w	ip, ip
 80183b4:	fb05 a502 	mla	r5, r5, r2, sl
 80183b8:	fb0c 7702 	mla	r7, ip, r2, r7
 80183bc:	1c72      	adds	r2, r6, #1
 80183be:	b2ad      	uxth	r5, r5
 80183c0:	b2bf      	uxth	r7, r7
 80183c2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80183c6:	f107 0a01 	add.w	sl, r7, #1
 80183ca:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80183ce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80183d2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80183d6:	ea4a 0606 	orr.w	r6, sl, r6
 80183da:	f105 0a01 	add.w	sl, r5, #1
 80183de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80183e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80183e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80183ea:	ea46 060a 	orr.w	r6, r6, sl
 80183ee:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80183f2:	e7b4      	b.n	801835e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80183f4:	b007      	add	sp, #28
 80183f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183fa:	bf00      	nop
 80183fc:	2400207c 	.word	0x2400207c

08018400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8018400:	4770      	bx	lr

08018402 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8018402:	4770      	bx	lr

08018404 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8018404:	4770      	bx	lr

08018406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8018406:	4770      	bx	lr

08018408 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8018408:	4770      	bx	lr

0801840a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801840a:	4770      	bx	lr

0801840c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801840c:	4770      	bx	lr

0801840e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801840e:	4770      	bx	lr

08018410 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018410:	4770      	bx	lr

08018412 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8018412:	4770      	bx	lr

08018414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8018414:	4770      	bx	lr

08018416 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8018416:	4770      	bx	lr

08018418 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018418:	4770      	bx	lr

0801841a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801841a:	4770      	bx	lr

0801841c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801841c:	4770      	bx	lr

0801841e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801841e:	4770      	bx	lr

08018420 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8018420:	4770      	bx	lr

08018422 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8018422:	4770      	bx	lr

08018424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8018424:	4770      	bx	lr

08018426 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8018426:	4770      	bx	lr

08018428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018428:	4770      	bx	lr

0801842a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801842a:	4770      	bx	lr

0801842c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801842c:	4770      	bx	lr

0801842e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801842e:	4770      	bx	lr

08018430 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8018430:	4770      	bx	lr

08018432 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8018432:	4770      	bx	lr

08018434 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8018434:	4770      	bx	lr

08018436 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8018436:	4770      	bx	lr

08018438 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018438:	4770      	bx	lr

0801843a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801843a:	4770      	bx	lr

0801843c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801843c:	4770      	bx	lr

0801843e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801843e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018442:	b088      	sub	sp, #32
 8018444:	4606      	mov	r6, r0
 8018446:	4688      	mov	r8, r1
 8018448:	4691      	mov	r9, r2
 801844a:	ac08      	add	r4, sp, #32
 801844c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8018450:	4620      	mov	r0, r4
 8018452:	f7fd fc63 	bl	8015d1c <_ZNK8touchgfx6Bitmap7getDataEv>
 8018456:	6833      	ldr	r3, [r6, #0]
 8018458:	4605      	mov	r5, r0
 801845a:	4620      	mov	r0, r4
 801845c:	699f      	ldr	r7, [r3, #24]
 801845e:	f7fd fb71 	bl	8015b44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018462:	4682      	mov	sl, r0
 8018464:	4620      	mov	r0, r4
 8018466:	f7fd fba1 	bl	8015bac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801846a:	9500      	str	r5, [sp, #0]
 801846c:	464b      	mov	r3, r9
 801846e:	4642      	mov	r2, r8
 8018470:	4631      	mov	r1, r6
 8018472:	e9cd a001 	strd	sl, r0, [sp, #4]
 8018476:	a806      	add	r0, sp, #24
 8018478:	47b8      	blx	r7
 801847a:	4628      	mov	r0, r5
 801847c:	b008      	add	sp, #32
 801847e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08018484 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8018484:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8018488:	2300      	movs	r3, #0
 801848a:	9300      	str	r3, [sp, #0]
 801848c:	4b3d      	ldr	r3, [pc, #244]	; (8018584 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801848e:	781b      	ldrb	r3, [r3, #0]
 8018490:	2b00      	cmp	r3, #0
 8018492:	d137      	bne.n	8018504 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8018494:	4a3c      	ldr	r2, [pc, #240]	; (8018588 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018496:	f9b2 2000 	ldrsh.w	r2, [r2]
 801849a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801849e:	2b00      	cmp	r3, #0
 80184a0:	d132      	bne.n	8018508 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80184a2:	4b3a      	ldr	r3, [pc, #232]	; (801858c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80184a4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80184a8:	ac02      	add	r4, sp, #8
 80184aa:	6808      	ldr	r0, [r1, #0]
 80184ac:	f8ad 3006 	strh.w	r3, [sp, #6]
 80184b0:	ab02      	add	r3, sp, #8
 80184b2:	6849      	ldr	r1, [r1, #4]
 80184b4:	4d36      	ldr	r5, [pc, #216]	; (8018590 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80184b6:	c303      	stmia	r3!, {r0, r1}
 80184b8:	4669      	mov	r1, sp
 80184ba:	4620      	mov	r0, r4
 80184bc:	f7fa fd00 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80184c0:	4668      	mov	r0, sp
 80184c2:	f7fa fcd5 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80184c6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80184ca:	f8bd 2000 	ldrh.w	r2, [sp]
 80184ce:	462f      	mov	r7, r5
 80184d0:	6828      	ldr	r0, [r5, #0]
 80184d2:	4413      	add	r3, r2
 80184d4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80184d8:	f8ad 3008 	strh.w	r3, [sp, #8]
 80184dc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80184e0:	4413      	add	r3, r2
 80184e2:	f8ad 300a 	strh.w	r3, [sp, #10]
 80184e6:	6803      	ldr	r3, [r0, #0]
 80184e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80184ea:	4798      	blx	r3
 80184ec:	f010 0f01 	tst.w	r0, #1
 80184f0:	d00c      	beq.n	801850c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80184f2:	6828      	ldr	r0, [r5, #0]
 80184f4:	6803      	ldr	r3, [r0, #0]
 80184f6:	e894 0006 	ldmia.w	r4, {r1, r2}
 80184fa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80184fc:	4798      	blx	r3
 80184fe:	b004      	add	sp, #16
 8018500:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018504:	4a21      	ldr	r2, [pc, #132]	; (801858c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8018506:	e7c6      	b.n	8018496 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8018508:	4b1f      	ldr	r3, [pc, #124]	; (8018588 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801850a:	e7cb      	b.n	80184a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801850c:	6838      	ldr	r0, [r7, #0]
 801850e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8018512:	6803      	ldr	r3, [r0, #0]
 8018514:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8018518:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801851c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801851e:	4798      	blx	r3
 8018520:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8018524:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018528:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801852c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8018530:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018534:	6838      	ldr	r0, [r7, #0]
 8018536:	6803      	ldr	r3, [r0, #0]
 8018538:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801853a:	4798      	blx	r3
 801853c:	4a12      	ldr	r2, [pc, #72]	; (8018588 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801853e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8018542:	8813      	ldrh	r3, [r2, #0]
 8018544:	4691      	mov	r9, r2
 8018546:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801854a:	435d      	muls	r5, r3
 801854c:	fb03 1404 	mla	r4, r3, r4, r1
 8018550:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018554:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8018558:	6838      	ldr	r0, [r7, #0]
 801855a:	42ac      	cmp	r4, r5
 801855c:	6803      	ldr	r3, [r0, #0]
 801855e:	d20e      	bcs.n	801857e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8018560:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8018564:	4632      	mov	r2, r6
 8018566:	4643      	mov	r3, r8
 8018568:	4621      	mov	r1, r4
 801856a:	47d0      	blx	sl
 801856c:	f8b9 3000 	ldrh.w	r3, [r9]
 8018570:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018574:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8018578:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801857c:	e7ec      	b.n	8018558 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801857e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018580:	4798      	blx	r3
 8018582:	e7bc      	b.n	80184fe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8018584:	2400206c 	.word	0x2400206c
 8018588:	2400206e 	.word	0x2400206e
 801858c:	24002070 	.word	0x24002070
 8018590:	24002074 	.word	0x24002074

08018594 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8018594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018598:	b08b      	sub	sp, #44	; 0x2c
 801859a:	460f      	mov	r7, r1
 801859c:	4616      	mov	r6, r2
 801859e:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80185a2:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80185a6:	f1bb 0f00 	cmp.w	fp, #0
 80185aa:	d04a      	beq.n	8018642 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80185ac:	6810      	ldr	r0, [r2, #0]
 80185ae:	ad06      	add	r5, sp, #24
 80185b0:	6851      	ldr	r1, [r2, #4]
 80185b2:	c503      	stmia	r5!, {r0, r1}
 80185b4:	6818      	ldr	r0, [r3, #0]
 80185b6:	ad08      	add	r5, sp, #32
 80185b8:	6859      	ldr	r1, [r3, #4]
 80185ba:	c503      	stmia	r5!, {r0, r1}
 80185bc:	a806      	add	r0, sp, #24
 80185be:	f7fa fc57 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80185c2:	4631      	mov	r1, r6
 80185c4:	a808      	add	r0, sp, #32
 80185c6:	f7fa fc7b 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80185ca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80185ce:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80185d2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80185d6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80185da:	fb16 2103 	smlabb	r1, r6, r3, r2
 80185de:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80185e2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80185e6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80185ea:	4f5f      	ldr	r7, [pc, #380]	; (8018768 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80185ec:	440a      	add	r2, r1
 80185ee:	6838      	ldr	r0, [r7, #0]
 80185f0:	46b9      	mov	r9, r7
 80185f2:	f8ad 2020 	strh.w	r2, [sp, #32]
 80185f6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80185fa:	4413      	add	r3, r2
 80185fc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8018600:	6803      	ldr	r3, [r0, #0]
 8018602:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018604:	4798      	blx	r3
 8018606:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801860a:	d11d      	bne.n	8018648 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801860c:	b9fc      	cbnz	r4, 801864e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801860e:	f010 0f01 	tst.w	r0, #1
 8018612:	d01c      	beq.n	801864e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8018614:	f8d9 0000 	ldr.w	r0, [r9]
 8018618:	2700      	movs	r7, #0
 801861a:	b2ad      	uxth	r5, r5
 801861c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8018620:	6801      	ldr	r1, [r0, #0]
 8018622:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8018626:	f8cd b00c 	str.w	fp, [sp, #12]
 801862a:	9501      	str	r5, [sp, #4]
 801862c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8018630:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8018634:	9402      	str	r4, [sp, #8]
 8018636:	fa1f f488 	uxth.w	r4, r8
 801863a:	9400      	str	r4, [sp, #0]
 801863c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801863e:	4631      	mov	r1, r6
 8018640:	47a0      	blx	r4
 8018642:	b00b      	add	sp, #44	; 0x2c
 8018644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018648:	f010 0f04 	tst.w	r0, #4
 801864c:	e7e1      	b.n	8018612 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801864e:	f8d9 0000 	ldr.w	r0, [r9]
 8018652:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8018656:	6803      	ldr	r3, [r0, #0]
 8018658:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801865a:	4798      	blx	r3
 801865c:	4b43      	ldr	r3, [pc, #268]	; (801876c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801865e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8018662:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018666:	881a      	ldrh	r2, [r3, #0]
 8018668:	469a      	mov	sl, r3
 801866a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801866e:	fb05 f502 	mul.w	r5, r5, r2
 8018672:	fb02 1404 	mla	r4, r2, r4, r1
 8018676:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801867a:	d059      	beq.n	8018730 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801867c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8018680:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8018684:	fa1f f28b 	uxth.w	r2, fp
 8018688:	469e      	mov	lr, r3
 801868a:	fa1f f989 	uxth.w	r9, r9
 801868e:	42ac      	cmp	r4, r5
 8018690:	d264      	bcs.n	801875c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8018692:	eb04 0a07 	add.w	sl, r4, r7
 8018696:	4554      	cmp	r4, sl
 8018698:	d23d      	bcs.n	8018716 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801869a:	8821      	ldrh	r1, [r4, #0]
 801869c:	f836 3b02 	ldrh.w	r3, [r6], #2
 80186a0:	1208      	asrs	r0, r1, #8
 80186a2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80186a6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80186aa:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80186ae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80186b2:	00c9      	lsls	r1, r1, #3
 80186b4:	fb10 f009 	smulbb	r0, r0, r9
 80186b8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80186bc:	b2c9      	uxtb	r1, r1
 80186be:	fb0c 0c02 	mla	ip, ip, r2, r0
 80186c2:	10d8      	asrs	r0, r3, #3
 80186c4:	fb1b fb09 	smulbb	fp, fp, r9
 80186c8:	00db      	lsls	r3, r3, #3
 80186ca:	fa1f fc8c 	uxth.w	ip, ip
 80186ce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80186d2:	fb11 f109 	smulbb	r1, r1, r9
 80186d6:	b2db      	uxtb	r3, r3
 80186d8:	fb00 b002 	mla	r0, r0, r2, fp
 80186dc:	f10c 0b01 	add.w	fp, ip, #1
 80186e0:	fb03 1302 	mla	r3, r3, r2, r1
 80186e4:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80186e8:	b29b      	uxth	r3, r3
 80186ea:	b280      	uxth	r0, r0
 80186ec:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80186f0:	f103 0c01 	add.w	ip, r3, #1
 80186f4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80186f8:	1c43      	adds	r3, r0, #1
 80186fa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80186fe:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018702:	0940      	lsrs	r0, r0, #5
 8018704:	ea4c 0c0b 	orr.w	ip, ip, fp
 8018708:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801870c:	ea4c 0c00 	orr.w	ip, ip, r0
 8018710:	f824 cb02 	strh.w	ip, [r4], #2
 8018714:	e7bf      	b.n	8018696 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8018716:	f8be 3000 	ldrh.w	r3, [lr]
 801871a:	eba3 0308 	sub.w	r3, r3, r8
 801871e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018722:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8018726:	eba3 0308 	sub.w	r3, r3, r8
 801872a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801872e:	e7ae      	b.n	801868e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8018730:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8018734:	f8d9 0000 	ldr.w	r0, [r9]
 8018738:	42ac      	cmp	r4, r5
 801873a:	6803      	ldr	r3, [r0, #0]
 801873c:	d20e      	bcs.n	801875c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801873e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8018742:	4632      	mov	r2, r6
 8018744:	463b      	mov	r3, r7
 8018746:	4621      	mov	r1, r4
 8018748:	47c0      	blx	r8
 801874a:	f8ba 3000 	ldrh.w	r3, [sl]
 801874e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018752:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8018756:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801875a:	e7eb      	b.n	8018734 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801875c:	4b02      	ldr	r3, [pc, #8]	; (8018768 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801875e:	6818      	ldr	r0, [r3, #0]
 8018760:	6803      	ldr	r3, [r0, #0]
 8018762:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018764:	4798      	blx	r3
 8018766:	e76c      	b.n	8018642 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8018768:	24002074 	.word	0x24002074
 801876c:	2400206e 	.word	0x2400206e

08018770 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8018770:	b510      	push	{r4, lr}
 8018772:	4604      	mov	r4, r0
 8018774:	2104      	movs	r1, #4
 8018776:	f00a fe2c 	bl	80233d2 <_ZdlPvj>
 801877a:	4620      	mov	r0, r4
 801877c:	bd10      	pop	{r4, pc}

0801877e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801877e:	b510      	push	{r4, lr}
 8018780:	4604      	mov	r4, r0
 8018782:	2104      	movs	r1, #4
 8018784:	f00a fe25 	bl	80233d2 <_ZdlPvj>
 8018788:	4620      	mov	r0, r4
 801878a:	bd10      	pop	{r4, pc}

0801878c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801878c:	b510      	push	{r4, lr}
 801878e:	4604      	mov	r4, r0
 8018790:	f640 0144 	movw	r1, #2116	; 0x844
 8018794:	f00a fe1d 	bl	80233d2 <_ZdlPvj>
 8018798:	4620      	mov	r0, r4
 801879a:	bd10      	pop	{r4, pc}

0801879c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801879c:	b510      	push	{r4, lr}
 801879e:	4604      	mov	r4, r0
 80187a0:	2104      	movs	r1, #4
 80187a2:	f00a fe16 	bl	80233d2 <_ZdlPvj>
 80187a6:	4620      	mov	r0, r4
 80187a8:	bd10      	pop	{r4, pc}

080187aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80187aa:	b510      	push	{r4, lr}
 80187ac:	4604      	mov	r4, r0
 80187ae:	2104      	movs	r1, #4
 80187b0:	f00a fe0f 	bl	80233d2 <_ZdlPvj>
 80187b4:	4620      	mov	r0, r4
 80187b6:	bd10      	pop	{r4, pc}

080187b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80187b8:	b510      	push	{r4, lr}
 80187ba:	4604      	mov	r4, r0
 80187bc:	2104      	movs	r1, #4
 80187be:	f00a fe08 	bl	80233d2 <_ZdlPvj>
 80187c2:	4620      	mov	r0, r4
 80187c4:	bd10      	pop	{r4, pc}

080187c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80187c6:	b510      	push	{r4, lr}
 80187c8:	4604      	mov	r4, r0
 80187ca:	2104      	movs	r1, #4
 80187cc:	f00a fe01 	bl	80233d2 <_ZdlPvj>
 80187d0:	4620      	mov	r0, r4
 80187d2:	bd10      	pop	{r4, pc}

080187d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80187d4:	b510      	push	{r4, lr}
 80187d6:	4604      	mov	r4, r0
 80187d8:	2104      	movs	r1, #4
 80187da:	f00a fdfa 	bl	80233d2 <_ZdlPvj>
 80187de:	4620      	mov	r0, r4
 80187e0:	bd10      	pop	{r4, pc}

080187e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80187e2:	b510      	push	{r4, lr}
 80187e4:	4604      	mov	r4, r0
 80187e6:	2104      	movs	r1, #4
 80187e8:	f00a fdf3 	bl	80233d2 <_ZdlPvj>
 80187ec:	4620      	mov	r0, r4
 80187ee:	bd10      	pop	{r4, pc}

080187f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80187f0:	b510      	push	{r4, lr}
 80187f2:	4604      	mov	r4, r0
 80187f4:	2104      	movs	r1, #4
 80187f6:	f00a fdec 	bl	80233d2 <_ZdlPvj>
 80187fa:	4620      	mov	r0, r4
 80187fc:	bd10      	pop	{r4, pc}

080187fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80187fe:	b510      	push	{r4, lr}
 8018800:	4604      	mov	r4, r0
 8018802:	2104      	movs	r1, #4
 8018804:	f00a fde5 	bl	80233d2 <_ZdlPvj>
 8018808:	4620      	mov	r0, r4
 801880a:	bd10      	pop	{r4, pc}

0801880c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801880c:	b510      	push	{r4, lr}
 801880e:	4604      	mov	r4, r0
 8018810:	2104      	movs	r1, #4
 8018812:	f00a fdde 	bl	80233d2 <_ZdlPvj>
 8018816:	4620      	mov	r0, r4
 8018818:	bd10      	pop	{r4, pc}

0801881a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801881a:	b510      	push	{r4, lr}
 801881c:	4604      	mov	r4, r0
 801881e:	2104      	movs	r1, #4
 8018820:	f00a fdd7 	bl	80233d2 <_ZdlPvj>
 8018824:	4620      	mov	r0, r4
 8018826:	bd10      	pop	{r4, pc}

08018828 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018828:	b510      	push	{r4, lr}
 801882a:	4604      	mov	r4, r0
 801882c:	2104      	movs	r1, #4
 801882e:	f00a fdd0 	bl	80233d2 <_ZdlPvj>
 8018832:	4620      	mov	r0, r4
 8018834:	bd10      	pop	{r4, pc}

08018836 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8018836:	b510      	push	{r4, lr}
 8018838:	4604      	mov	r4, r0
 801883a:	2104      	movs	r1, #4
 801883c:	f00a fdc9 	bl	80233d2 <_ZdlPvj>
 8018840:	4620      	mov	r0, r4
 8018842:	bd10      	pop	{r4, pc}

08018844 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8018844:	b510      	push	{r4, lr}
 8018846:	4604      	mov	r4, r0
 8018848:	2104      	movs	r1, #4
 801884a:	f00a fdc2 	bl	80233d2 <_ZdlPvj>
 801884e:	4620      	mov	r0, r4
 8018850:	bd10      	pop	{r4, pc}

08018852 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8018852:	b510      	push	{r4, lr}
 8018854:	4604      	mov	r4, r0
 8018856:	2104      	movs	r1, #4
 8018858:	f00a fdbb 	bl	80233d2 <_ZdlPvj>
 801885c:	4620      	mov	r0, r4
 801885e:	bd10      	pop	{r4, pc}

08018860 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018860:	b510      	push	{r4, lr}
 8018862:	4604      	mov	r4, r0
 8018864:	2104      	movs	r1, #4
 8018866:	f00a fdb4 	bl	80233d2 <_ZdlPvj>
 801886a:	4620      	mov	r0, r4
 801886c:	bd10      	pop	{r4, pc}

0801886e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801886e:	b510      	push	{r4, lr}
 8018870:	4604      	mov	r4, r0
 8018872:	2104      	movs	r1, #4
 8018874:	f00a fdad 	bl	80233d2 <_ZdlPvj>
 8018878:	4620      	mov	r0, r4
 801887a:	bd10      	pop	{r4, pc}

0801887c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801887c:	b510      	push	{r4, lr}
 801887e:	4604      	mov	r4, r0
 8018880:	2104      	movs	r1, #4
 8018882:	f00a fda6 	bl	80233d2 <_ZdlPvj>
 8018886:	4620      	mov	r0, r4
 8018888:	bd10      	pop	{r4, pc}

0801888a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801888a:	b510      	push	{r4, lr}
 801888c:	4604      	mov	r4, r0
 801888e:	2104      	movs	r1, #4
 8018890:	f00a fd9f 	bl	80233d2 <_ZdlPvj>
 8018894:	4620      	mov	r0, r4
 8018896:	bd10      	pop	{r4, pc}

08018898 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018898:	b510      	push	{r4, lr}
 801889a:	4604      	mov	r4, r0
 801889c:	2104      	movs	r1, #4
 801889e:	f00a fd98 	bl	80233d2 <_ZdlPvj>
 80188a2:	4620      	mov	r0, r4
 80188a4:	bd10      	pop	{r4, pc}

080188a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80188a6:	b510      	push	{r4, lr}
 80188a8:	4604      	mov	r4, r0
 80188aa:	2104      	movs	r1, #4
 80188ac:	f00a fd91 	bl	80233d2 <_ZdlPvj>
 80188b0:	4620      	mov	r0, r4
 80188b2:	bd10      	pop	{r4, pc}

080188b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80188b4:	b510      	push	{r4, lr}
 80188b6:	4604      	mov	r4, r0
 80188b8:	2104      	movs	r1, #4
 80188ba:	f00a fd8a 	bl	80233d2 <_ZdlPvj>
 80188be:	4620      	mov	r0, r4
 80188c0:	bd10      	pop	{r4, pc}

080188c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80188c2:	b510      	push	{r4, lr}
 80188c4:	4604      	mov	r4, r0
 80188c6:	2104      	movs	r1, #4
 80188c8:	f00a fd83 	bl	80233d2 <_ZdlPvj>
 80188cc:	4620      	mov	r0, r4
 80188ce:	bd10      	pop	{r4, pc}

080188d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80188d0:	b510      	push	{r4, lr}
 80188d2:	4604      	mov	r4, r0
 80188d4:	2104      	movs	r1, #4
 80188d6:	f00a fd7c 	bl	80233d2 <_ZdlPvj>
 80188da:	4620      	mov	r0, r4
 80188dc:	bd10      	pop	{r4, pc}

080188de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80188de:	b510      	push	{r4, lr}
 80188e0:	4604      	mov	r4, r0
 80188e2:	2104      	movs	r1, #4
 80188e4:	f00a fd75 	bl	80233d2 <_ZdlPvj>
 80188e8:	4620      	mov	r0, r4
 80188ea:	bd10      	pop	{r4, pc}

080188ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80188ec:	b510      	push	{r4, lr}
 80188ee:	4604      	mov	r4, r0
 80188f0:	2104      	movs	r1, #4
 80188f2:	f00a fd6e 	bl	80233d2 <_ZdlPvj>
 80188f6:	4620      	mov	r0, r4
 80188f8:	bd10      	pop	{r4, pc}

080188fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80188fa:	b510      	push	{r4, lr}
 80188fc:	4604      	mov	r4, r0
 80188fe:	2104      	movs	r1, #4
 8018900:	f00a fd67 	bl	80233d2 <_ZdlPvj>
 8018904:	4620      	mov	r0, r4
 8018906:	bd10      	pop	{r4, pc}

08018908 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8018908:	b510      	push	{r4, lr}
 801890a:	4604      	mov	r4, r0
 801890c:	2104      	movs	r1, #4
 801890e:	f00a fd60 	bl	80233d2 <_ZdlPvj>
 8018912:	4620      	mov	r0, r4
 8018914:	bd10      	pop	{r4, pc}

08018916 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8018916:	b510      	push	{r4, lr}
 8018918:	4604      	mov	r4, r0
 801891a:	2104      	movs	r1, #4
 801891c:	f00a fd59 	bl	80233d2 <_ZdlPvj>
 8018920:	4620      	mov	r0, r4
 8018922:	bd10      	pop	{r4, pc}

08018924 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018928:	b08f      	sub	sp, #60	; 0x3c
 801892a:	461c      	mov	r4, r3
 801892c:	9205      	str	r2, [sp, #20]
 801892e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018932:	9100      	str	r1, [sp, #0]
 8018934:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018936:	9201      	str	r2, [sp, #4]
 8018938:	2a00      	cmp	r2, #0
 801893a:	f000 8116 	beq.w	8018b6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 801893e:	6820      	ldr	r0, [r4, #0]
 8018940:	aa0a      	add	r2, sp, #40	; 0x28
 8018942:	6861      	ldr	r1, [r4, #4]
 8018944:	c203      	stmia	r2!, {r0, r1}
 8018946:	6818      	ldr	r0, [r3, #0]
 8018948:	aa0c      	add	r2, sp, #48	; 0x30
 801894a:	6859      	ldr	r1, [r3, #4]
 801894c:	c203      	stmia	r2!, {r0, r1}
 801894e:	a80a      	add	r0, sp, #40	; 0x28
 8018950:	f7fa fa8e 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018954:	4621      	mov	r1, r4
 8018956:	a80c      	add	r0, sp, #48	; 0x30
 8018958:	f7fa fab2 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801895c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8018960:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8018964:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8018968:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801896c:	bfdb      	ittet	le
 801896e:	b2b3      	uxthle	r3, r6
 8018970:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8018974:	2301      	movgt	r3, #1
 8018976:	fb92 f3f3 	sdivle	r3, r2, r3
 801897a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801897e:	441d      	add	r5, r3
 8018980:	fb92 f1f3 	sdiv	r1, r2, r3
 8018984:	fa1f fc81 	uxth.w	ip, r1
 8018988:	3d01      	subs	r5, #1
 801898a:	fb0c 2413 	mls	r4, ip, r3, r2
 801898e:	4661      	mov	r1, ip
 8018990:	fb14 f406 	smulbb	r4, r4, r6
 8018994:	4404      	add	r4, r0
 8018996:	fb95 f5f3 	sdiv	r5, r5, r3
 801899a:	b2a4      	uxth	r4, r4
 801899c:	b131      	cbz	r1, 80189ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 801899e:	9b05      	ldr	r3, [sp, #20]
 80189a0:	9900      	ldr	r1, [sp, #0]
 80189a2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80189a6:	ba1b      	rev	r3, r3
 80189a8:	4419      	add	r1, r3
 80189aa:	9100      	str	r1, [sp, #0]
 80189ac:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80189b0:	b2ad      	uxth	r5, r5
 80189b2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 80189b6:	4418      	add	r0, r3
 80189b8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80189bc:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80189c0:	00ad      	lsls	r5, r5, #2
 80189c2:	441a      	add	r2, r3
 80189c4:	4b6a      	ldr	r3, [pc, #424]	; (8018b70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80189c6:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 80189ca:	6818      	ldr	r0, [r3, #0]
 80189cc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80189d0:	6803      	ldr	r3, [r0, #0]
 80189d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80189d4:	4798      	blx	r3
 80189d6:	4967      	ldr	r1, [pc, #412]	; (8018b74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80189d8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80189dc:	2c00      	cmp	r4, #0
 80189de:	880b      	ldrh	r3, [r1, #0]
 80189e0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80189e4:	bf0c      	ite	eq
 80189e6:	46c6      	moveq	lr, r8
 80189e8:	f04f 0e00 	movne.w	lr, #0
 80189ec:	9109      	str	r1, [sp, #36]	; 0x24
 80189ee:	fb03 c202 	mla	r2, r3, r2, ip
 80189f2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80189f6:	4373      	muls	r3, r6
 80189f8:	fa1f fe8e 	uxth.w	lr, lr
 80189fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018a00:	9103      	str	r1, [sp, #12]
 8018a02:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018a06:	9306      	str	r3, [sp, #24]
 8018a08:	1d2b      	adds	r3, r5, #4
 8018a0a:	9307      	str	r3, [sp, #28]
 8018a0c:	9b01      	ldr	r3, [sp, #4]
 8018a0e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8018a12:	2300      	movs	r3, #0
 8018a14:	b292      	uxth	r2, r2
 8018a16:	9302      	str	r3, [sp, #8]
 8018a18:	9204      	str	r2, [sp, #16]
 8018a1a:	9a06      	ldr	r2, [sp, #24]
 8018a1c:	4282      	cmp	r2, r0
 8018a1e:	f240 809f 	bls.w	8018b60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8018a22:	b963      	cbnz	r3, 8018a3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8018a24:	9b00      	ldr	r3, [sp, #0]
 8018a26:	781a      	ldrb	r2, [r3, #0]
 8018a28:	0993      	lsrs	r3, r2, #6
 8018a2a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8018a2e:	9202      	str	r2, [sp, #8]
 8018a30:	1e5a      	subs	r2, r3, #1
 8018a32:	2a02      	cmp	r2, #2
 8018a34:	d815      	bhi.n	8018a62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8018a36:	9a00      	ldr	r2, [sp, #0]
 8018a38:	b29b      	uxth	r3, r3
 8018a3a:	3201      	adds	r2, #1
 8018a3c:	9200      	str	r2, [sp, #0]
 8018a3e:	b1b4      	cbz	r4, 8018a6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8018a40:	429c      	cmp	r4, r3
 8018a42:	bf91      	iteee	ls
 8018a44:	1b1c      	subls	r4, r3, r4
 8018a46:	1ae4      	subhi	r4, r4, r3
 8018a48:	4671      	movhi	r1, lr
 8018a4a:	f04f 0a00 	movhi.w	sl, #0
 8018a4e:	bf9b      	ittet	ls
 8018a50:	fa1f fa84 	uxthls.w	sl, r4
 8018a54:	2400      	movls	r4, #0
 8018a56:	b2a4      	uxthhi	r4, r4
 8018a58:	fa1f f188 	uxthls.w	r1, r8
 8018a5c:	4653      	mov	r3, sl
 8018a5e:	468e      	mov	lr, r1
 8018a60:	e7db      	b.n	8018a1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8018a62:	9a00      	ldr	r2, [sp, #0]
 8018a64:	9b00      	ldr	r3, [sp, #0]
 8018a66:	3202      	adds	r2, #2
 8018a68:	785b      	ldrb	r3, [r3, #1]
 8018a6a:	9200      	str	r2, [sp, #0]
 8018a6c:	e7e7      	b.n	8018a3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8018a6e:	2202      	movs	r2, #2
 8018a70:	9907      	ldr	r1, [sp, #28]
 8018a72:	4573      	cmp	r3, lr
 8018a74:	4615      	mov	r5, r2
 8018a76:	9a02      	ldr	r2, [sp, #8]
 8018a78:	bf24      	itt	cs
 8018a7a:	eba3 0a0e 	subcs.w	sl, r3, lr
 8018a7e:	46f1      	movcs	r9, lr
 8018a80:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018a84:	9905      	ldr	r1, [sp, #20]
 8018a86:	bf34      	ite	cc
 8018a88:	4699      	movcc	r9, r3
 8018a8a:	fa1f fa8a 	uxthcs.w	sl, sl
 8018a8e:	f831 c002 	ldrh.w	ip, [r1, r2]
 8018a92:	bf38      	it	cc
 8018a94:	ebae 0103 	subcc.w	r1, lr, r3
 8018a98:	9a01      	ldr	r2, [sp, #4]
 8018a9a:	bf2e      	itee	cs
 8018a9c:	4621      	movcs	r1, r4
 8018a9e:	b289      	uxthcc	r1, r1
 8018aa0:	46a2      	movcc	sl, r4
 8018aa2:	2aff      	cmp	r2, #255	; 0xff
 8018aa4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018aa8:	d105      	bne.n	8018ab6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8018aaa:	4481      	add	r9, r0
 8018aac:	4581      	cmp	r9, r0
 8018aae:	d045      	beq.n	8018b3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8018ab0:	f820 cb02 	strh.w	ip, [r0], #2
 8018ab4:	e7fa      	b.n	8018aac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8018ab6:	ea4f 222c 	mov.w	r2, ip, asr #8
 8018aba:	9d03      	ldr	r5, [sp, #12]
 8018abc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8018ac0:	4481      	add	r9, r0
 8018ac2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018ac6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018aca:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8018ace:	fa5f fc8c 	uxtb.w	ip, ip
 8018ad2:	436a      	muls	r2, r5
 8018ad4:	fb0b fb05 	mul.w	fp, fp, r5
 8018ad8:	fb0c fc05 	mul.w	ip, ip, r5
 8018adc:	9208      	str	r2, [sp, #32]
 8018ade:	4581      	cmp	r9, r0
 8018ae0:	d02c      	beq.n	8018b3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8018ae2:	8802      	ldrh	r2, [r0, #0]
 8018ae4:	9d04      	ldr	r5, [sp, #16]
 8018ae6:	1216      	asrs	r6, r2, #8
 8018ae8:	9f04      	ldr	r7, [sp, #16]
 8018aea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018aee:	fb16 f605 	smulbb	r6, r6, r5
 8018af2:	9d08      	ldr	r5, [sp, #32]
 8018af4:	442e      	add	r6, r5
 8018af6:	10d5      	asrs	r5, r2, #3
 8018af8:	00d2      	lsls	r2, r2, #3
 8018afa:	b2b6      	uxth	r6, r6
 8018afc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018b00:	b2d2      	uxtb	r2, r2
 8018b02:	fb15 f507 	smulbb	r5, r5, r7
 8018b06:	fb12 f207 	smulbb	r2, r2, r7
 8018b0a:	1c77      	adds	r7, r6, #1
 8018b0c:	445d      	add	r5, fp
 8018b0e:	4462      	add	r2, ip
 8018b10:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8018b14:	b2ad      	uxth	r5, r5
 8018b16:	b292      	uxth	r2, r2
 8018b18:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8018b1c:	1c57      	adds	r7, r2, #1
 8018b1e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8018b22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018b26:	4316      	orrs	r6, r2
 8018b28:	1c6a      	adds	r2, r5, #1
 8018b2a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018b2e:	096d      	lsrs	r5, r5, #5
 8018b30:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018b34:	432e      	orrs	r6, r5
 8018b36:	f820 6b02 	strh.w	r6, [r0], #2
 8018b3a:	e7d0      	b.n	8018ade <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8018b3c:	4573      	cmp	r3, lr
 8018b3e:	d38d      	bcc.n	8018a5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8018b40:	fa1f f188 	uxth.w	r1, r8
 8018b44:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8018b48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b4a:	1a64      	subs	r4, r4, r1
 8018b4c:	881b      	ldrh	r3, [r3, #0]
 8018b4e:	b2a4      	uxth	r4, r4
 8018b50:	eba3 0308 	sub.w	r3, r3, r8
 8018b54:	2c00      	cmp	r4, #0
 8018b56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018b5a:	bf18      	it	ne
 8018b5c:	2100      	movne	r1, #0
 8018b5e:	e77d      	b.n	8018a5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8018b60:	4b03      	ldr	r3, [pc, #12]	; (8018b70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8018b62:	6818      	ldr	r0, [r3, #0]
 8018b64:	6803      	ldr	r3, [r0, #0]
 8018b66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018b68:	4798      	blx	r3
 8018b6a:	b00f      	add	sp, #60	; 0x3c
 8018b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b70:	24002074 	.word	0x24002074
 8018b74:	2400206e 	.word	0x2400206e

08018b78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b7c:	b09f      	sub	sp, #124	; 0x7c
 8018b7e:	461d      	mov	r5, r3
 8018b80:	4604      	mov	r4, r0
 8018b82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b84:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8018b88:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8018b8c:	9209      	str	r2, [sp, #36]	; 0x24
 8018b8e:	2a00      	cmp	r2, #0
 8018b90:	f000 81ed 	beq.w	8018f6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8018b94:	6828      	ldr	r0, [r5, #0]
 8018b96:	aa1a      	add	r2, sp, #104	; 0x68
 8018b98:	6869      	ldr	r1, [r5, #4]
 8018b9a:	c203      	stmia	r2!, {r0, r1}
 8018b9c:	6818      	ldr	r0, [r3, #0]
 8018b9e:	aa1c      	add	r2, sp, #112	; 0x70
 8018ba0:	6859      	ldr	r1, [r3, #4]
 8018ba2:	c203      	stmia	r2!, {r0, r1}
 8018ba4:	a81a      	add	r0, sp, #104	; 0x68
 8018ba6:	f7fa f963 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018baa:	4629      	mov	r1, r5
 8018bac:	a81c      	add	r0, sp, #112	; 0x70
 8018bae:	f7fa f987 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018bb2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8018bb6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8018bba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8018bbe:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 8018bc2:	bfdb      	ittet	le
 8018bc4:	b29a      	uxthle	r2, r3
 8018bc6:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8018bca:	2201      	movgt	r2, #1
 8018bcc:	fb91 f2f2 	sdivle	r2, r1, r2
 8018bd0:	9202      	str	r2, [sp, #8]
 8018bd2:	9802      	ldr	r0, [sp, #8]
 8018bd4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8018bd8:	9902      	ldr	r1, [sp, #8]
 8018bda:	fb92 f0f0 	sdiv	r0, r2, r0
 8018bde:	b280      	uxth	r0, r0
 8018be0:	4488      	add	r8, r1
 8018be2:	9010      	str	r0, [sp, #64]	; 0x40
 8018be4:	f108 38ff 	add.w	r8, r8, #4294967295
 8018be8:	9802      	ldr	r0, [sp, #8]
 8018bea:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018bec:	fb05 2510 	mls	r5, r5, r0, r2
 8018bf0:	fb98 f8f1 	sdiv	r8, r8, r1
 8018bf4:	fb15 f503 	smulbb	r5, r5, r3
 8018bf8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8018bfc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8018c00:	f108 0801 	add.w	r8, r8, #1
 8018c04:	440d      	add	r5, r1
 8018c06:	4419      	add	r1, r3
 8018c08:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8018c0c:	fa1f f888 	uxth.w	r8, r8
 8018c10:	441a      	add	r2, r3
 8018c12:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8018c16:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8018c1a:	b2ad      	uxth	r5, r5
 8018c1c:	9304      	str	r3, [sp, #16]
 8018c1e:	4b94      	ldr	r3, [pc, #592]	; (8018e70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8018c20:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8018c24:	6818      	ldr	r0, [r3, #0]
 8018c26:	6803      	ldr	r3, [r0, #0]
 8018c28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018c2a:	4798      	blx	r3
 8018c2c:	4b91      	ldr	r3, [pc, #580]	; (8018e74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8018c2e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8018c32:	2d00      	cmp	r5, #0
 8018c34:	881a      	ldrh	r2, [r3, #0]
 8018c36:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8018c3a:	fb02 f606 	mul.w	r6, r2, r6
 8018c3e:	fb02 7101 	mla	r1, r2, r1, r7
 8018c42:	9318      	str	r3, [sp, #96]	; 0x60
 8018c44:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018c48:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8018c4c:	f04f 0100 	mov.w	r1, #0
 8018c50:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8018c54:	930f      	str	r3, [sp, #60]	; 0x3c
 8018c56:	4b88      	ldr	r3, [pc, #544]	; (8018e78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 8018c58:	920a      	str	r2, [sp, #40]	; 0x28
 8018c5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018c5c:	eba3 0304 	sub.w	r3, r3, r4
 8018c60:	910d      	str	r1, [sp, #52]	; 0x34
 8018c62:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8018c66:	9319      	str	r3, [sp, #100]	; 0x64
 8018c68:	f108 0204 	add.w	r2, r8, #4
 8018c6c:	9211      	str	r2, [sp, #68]	; 0x44
 8018c6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018c70:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 8018c74:	9215      	str	r2, [sp, #84]	; 0x54
 8018c76:	9a04      	ldr	r2, [sp, #16]
 8018c78:	bf18      	it	ne
 8018c7a:	2200      	movne	r2, #0
 8018c7c:	b292      	uxth	r2, r2
 8018c7e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8018c80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c82:	fa11 f383 	uxtah	r3, r1, r3
 8018c86:	9914      	ldr	r1, [sp, #80]	; 0x50
 8018c88:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018c8c:	3304      	adds	r3, #4
 8018c8e:	9306      	str	r3, [sp, #24]
 8018c90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c92:	4283      	cmp	r3, r0
 8018c94:	f240 8166 	bls.w	8018f64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8018c98:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8018c9c:	f04f 0a01 	mov.w	sl, #1
 8018ca0:	9902      	ldr	r1, [sp, #8]
 8018ca2:	9e06      	ldr	r6, [sp, #24]
 8018ca4:	46d3      	mov	fp, sl
 8018ca6:	4657      	mov	r7, sl
 8018ca8:	7836      	ldrb	r6, [r6, #0]
 8018caa:	fbb5 f3f3 	udiv	r3, r5, r3
 8018cae:	1acb      	subs	r3, r1, r3
 8018cb0:	9612      	str	r6, [sp, #72]	; 0x48
 8018cb2:	3601      	adds	r6, #1
 8018cb4:	b29b      	uxth	r3, r3
 8018cb6:	9605      	str	r6, [sp, #20]
 8018cb8:	9316      	str	r3, [sp, #88]	; 0x58
 8018cba:	9b06      	ldr	r3, [sp, #24]
 8018cbc:	7859      	ldrb	r1, [r3, #1]
 8018cbe:	789b      	ldrb	r3, [r3, #2]
 8018cc0:	021b      	lsls	r3, r3, #8
 8018cc2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8018cc6:	9906      	ldr	r1, [sp, #24]
 8018cc8:	78c9      	ldrb	r1, [r1, #3]
 8018cca:	430b      	orrs	r3, r1
 8018ccc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8018cce:	4419      	add	r1, r3
 8018cd0:	1c4e      	adds	r6, r1, #1
 8018cd2:	7849      	ldrb	r1, [r1, #1]
 8018cd4:	9603      	str	r6, [sp, #12]
 8018cd6:	0209      	lsls	r1, r1, #8
 8018cd8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018cda:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 8018cde:	5cf3      	ldrb	r3, [r6, r3]
 8018ce0:	4319      	orrs	r1, r3
 8018ce2:	b28b      	uxth	r3, r1
 8018ce4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8018ce8:	930c      	str	r3, [sp, #48]	; 0x30
 8018cea:	2300      	movs	r3, #0
 8018cec:	9307      	str	r3, [sp, #28]
 8018cee:	469c      	mov	ip, r3
 8018cf0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8018cf4:	930e      	str	r3, [sp, #56]	; 0x38
 8018cf6:	2d00      	cmp	r5, #0
 8018cf8:	d07e      	beq.n	8018df8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 8018cfa:	42af      	cmp	r7, r5
 8018cfc:	d26e      	bcs.n	8018ddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 8018cfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018d00:	1bed      	subs	r5, r5, r7
 8018d02:	9201      	str	r2, [sp, #4]
 8018d04:	4283      	cmp	r3, r0
 8018d06:	b2ad      	uxth	r5, r5
 8018d08:	d802      	bhi.n	8018d10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8018d0a:	e073      	b.n	8018df4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8018d0c:	2b00      	cmp	r3, #0
 8018d0e:	d15f      	bne.n	8018dd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8018d10:	9b03      	ldr	r3, [sp, #12]
 8018d12:	f1cb 0207 	rsb	r2, fp, #7
 8018d16:	785b      	ldrb	r3, [r3, #1]
 8018d18:	4093      	lsls	r3, r2
 8018d1a:	005b      	lsls	r3, r3, #1
 8018d1c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8018d20:	9b03      	ldr	r3, [sp, #12]
 8018d22:	781b      	ldrb	r3, [r3, #0]
 8018d24:	fa43 f30b 	asr.w	r3, r3, fp
 8018d28:	b2db      	uxtb	r3, r3
 8018d2a:	4313      	orrs	r3, r2
 8018d2c:	f10b 0201 	add.w	r2, fp, #1
 8018d30:	fa5f fb82 	uxtb.w	fp, r2
 8018d34:	9a03      	ldr	r2, [sp, #12]
 8018d36:	b29f      	uxth	r7, r3
 8018d38:	f1bb 0f08 	cmp.w	fp, #8
 8018d3c:	bf13      	iteet	ne
 8018d3e:	3201      	addne	r2, #1
 8018d40:	3202      	addeq	r2, #2
 8018d42:	f04f 0b00 	moveq.w	fp, #0
 8018d46:	9203      	strne	r2, [sp, #12]
 8018d48:	bf08      	it	eq
 8018d4a:	9203      	streq	r2, [sp, #12]
 8018d4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018d4e:	42ba      	cmp	r2, r7
 8018d50:	d309      	bcc.n	8018d66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 8018d52:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8018d56:	2301      	movs	r3, #1
 8018d58:	9a05      	ldr	r2, [sp, #20]
 8018d5a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8018d5e:	d30e      	bcc.n	8018d7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8018d60:	469a      	mov	sl, r3
 8018d62:	2600      	movs	r6, #0
 8018d64:	e035      	b.n	8018dd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 8018d66:	9b05      	ldr	r3, [sp, #20]
 8018d68:	429f      	cmp	r7, r3
 8018d6a:	d318      	bcc.n	8018d9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 8018d6c:	eb04 030a 	add.w	r3, r4, sl
 8018d70:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 8018d74:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 8018d78:	f10a 0301 	add.w	r3, sl, #1
 8018d7c:	b29b      	uxth	r3, r3
 8018d7e:	9a05      	ldr	r2, [sp, #20]
 8018d80:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8018d84:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018d88:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018d8a:	7116      	strb	r6, [r2, #4]
 8018d8c:	f10a 0601 	add.w	r6, sl, #1
 8018d90:	80d1      	strh	r1, [r2, #6]
 8018d92:	7156      	strb	r6, [r2, #5]
 8018d94:	9a05      	ldr	r2, [sp, #20]
 8018d96:	3201      	adds	r2, #1
 8018d98:	b292      	uxth	r2, r2
 8018d9a:	9205      	str	r2, [sp, #20]
 8018d9c:	e7e0      	b.n	8018d60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 8018d9e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8018da2:	463a      	mov	r2, r7
 8018da4:	795b      	ldrb	r3, [r3, #5]
 8018da6:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8018daa:	4426      	add	r6, r4
 8018dac:	9919      	ldr	r1, [sp, #100]	; 0x64
 8018dae:	eb01 0c06 	add.w	ip, r1, r6
 8018db2:	f1bc 0f00 	cmp.w	ip, #0
 8018db6:	dd07      	ble.n	8018dc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8018db8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018dbc:	f892 c004 	ldrb.w	ip, [r2, #4]
 8018dc0:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8018dc4:	88d2      	ldrh	r2, [r2, #6]
 8018dc6:	e7f1      	b.n	8018dac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8018dc8:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8018dcc:	b29b      	uxth	r3, r3
 8018dce:	e7c3      	b.n	8018d58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 8018dd0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8018dd2:	970c      	str	r7, [sp, #48]	; 0x30
 8018dd4:	46b4      	mov	ip, r6
 8018dd6:	9a01      	ldr	r2, [sp, #4]
 8018dd8:	461f      	mov	r7, r3
 8018dda:	e78c      	b.n	8018cf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 8018ddc:	1b7b      	subs	r3, r7, r5
 8018dde:	eb0c 0605 	add.w	r6, ip, r5
 8018de2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018de6:	b29b      	uxth	r3, r3
 8018de8:	b2b6      	uxth	r6, r6
 8018dea:	9201      	str	r2, [sp, #4]
 8018dec:	2500      	movs	r5, #0
 8018dee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018df0:	4282      	cmp	r2, r0
 8018df2:	d88b      	bhi.n	8018d0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8018df4:	9a01      	ldr	r2, [sp, #4]
 8018df6:	e74b      	b.n	8018c90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8018df8:	4297      	cmp	r7, r2
 8018dfa:	d332      	bcc.n	8018e62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 8018dfc:	1abb      	subs	r3, r7, r2
 8018dfe:	9208      	str	r2, [sp, #32]
 8018e00:	9501      	str	r5, [sp, #4]
 8018e02:	b29b      	uxth	r3, r3
 8018e04:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018e06:	29ff      	cmp	r1, #255	; 0xff
 8018e08:	9908      	ldr	r1, [sp, #32]
 8018e0a:	eb0c 0601 	add.w	r6, ip, r1
 8018e0e:	d135      	bne.n	8018e7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8018e10:	f1a0 0e02 	sub.w	lr, r0, #2
 8018e14:	b2b6      	uxth	r6, r6
 8018e16:	45b4      	cmp	ip, r6
 8018e18:	f040 808c 	bne.w	8018f34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8018e1c:	9908      	ldr	r1, [sp, #32]
 8018e1e:	4297      	cmp	r7, r2
 8018e20:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018e24:	d3e2      	bcc.n	8018dec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 8018e26:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018e28:	9904      	ldr	r1, [sp, #16]
 8018e2a:	8812      	ldrh	r2, [r2, #0]
 8018e2c:	1a52      	subs	r2, r2, r1
 8018e2e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8018e30:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018e34:	9a07      	ldr	r2, [sp, #28]
 8018e36:	3201      	adds	r2, #1
 8018e38:	428a      	cmp	r2, r1
 8018e3a:	9207      	str	r2, [sp, #28]
 8018e3c:	f040 8087 	bne.w	8018f4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 8018e40:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8018e44:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 8018e48:	9b04      	ldr	r3, [sp, #16]
 8018e4a:	1bed      	subs	r5, r5, r7
 8018e4c:	b2ad      	uxth	r5, r5
 8018e4e:	2d00      	cmp	r5, #0
 8018e50:	bf08      	it	eq
 8018e52:	461a      	moveq	r2, r3
 8018e54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018e56:	bf18      	it	ne
 8018e58:	2200      	movne	r2, #0
 8018e5a:	3301      	adds	r3, #1
 8018e5c:	b292      	uxth	r2, r2
 8018e5e:	930d      	str	r3, [sp, #52]	; 0x34
 8018e60:	e70d      	b.n	8018c7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 8018e62:	1bd1      	subs	r1, r2, r7
 8018e64:	9708      	str	r7, [sp, #32]
 8018e66:	b28b      	uxth	r3, r1
 8018e68:	9301      	str	r3, [sp, #4]
 8018e6a:	462b      	mov	r3, r5
 8018e6c:	e7ca      	b.n	8018e04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 8018e6e:	bf00      	nop
 8018e70:	24002074 	.word	0x24002074
 8018e74:	2400206e 	.word	0x2400206e
 8018e78:	fffff7fb 	.word	0xfffff7fb
 8018e7c:	b2b6      	uxth	r6, r6
 8018e7e:	900b      	str	r0, [sp, #44]	; 0x2c
 8018e80:	45b4      	cmp	ip, r6
 8018e82:	d0cb      	beq.n	8018e1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8018e84:	f10c 0101 	add.w	r1, ip, #1
 8018e88:	44a4      	add	ip, r4
 8018e8a:	9117      	str	r1, [sp, #92]	; 0x5c
 8018e8c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8018e90:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018e92:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018e96:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8018e98:	ea4f 2825 	mov.w	r8, r5, asr #8
 8018e9c:	f8b1 c000 	ldrh.w	ip, [r1]
 8018ea0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018ea2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8018ea6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8018eaa:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8018eae:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018eb2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018eb6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018eba:	fb1e fe01 	smulbb	lr, lr, r1
 8018ebe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8018ec0:	fa5f fc8c 	uxtb.w	ip, ip
 8018ec4:	fb08 e801 	mla	r8, r8, r1, lr
 8018ec8:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8018ecc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018ece:	00ed      	lsls	r5, r5, #3
 8018ed0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018ed4:	fa1f f888 	uxth.w	r8, r8
 8018ed8:	fb19 f901 	smulbb	r9, r9, r1
 8018edc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8018ede:	b2ed      	uxtb	r5, r5
 8018ee0:	fb0e 9e01 	mla	lr, lr, r1, r9
 8018ee4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018ee6:	fb1c fc01 	smulbb	ip, ip, r1
 8018eea:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8018eec:	fa1f fe8e 	uxth.w	lr, lr
 8018ef0:	fb05 c501 	mla	r5, r5, r1, ip
 8018ef4:	f108 0c01 	add.w	ip, r8, #1
 8018ef8:	f10e 0901 	add.w	r9, lr, #1
 8018efc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8018efe:	b2ad      	uxth	r5, r5
 8018f00:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018f04:	f105 0c01 	add.w	ip, r5, #1
 8018f08:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8018f0c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8018f10:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8018f14:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018f18:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018f1c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018f20:	ea4c 0808 	orr.w	r8, ip, r8
 8018f24:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 8018f28:	ea48 0809 	orr.w	r8, r8, r9
 8018f2c:	f821 8b02 	strh.w	r8, [r1], #2
 8018f30:	910b      	str	r1, [sp, #44]	; 0x2c
 8018f32:	e7a5      	b.n	8018e80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 8018f34:	f10c 0801 	add.w	r8, ip, #1
 8018f38:	44a4      	add	ip, r4
 8018f3a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018f3c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8018f40:	fa1f fc88 	uxth.w	ip, r8
 8018f44:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018f48:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8018f4c:	e763      	b.n	8018e16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 8018f4e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018f52:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8018f56:	1aad      	subs	r5, r5, r2
 8018f58:	b2ad      	uxth	r5, r5
 8018f5a:	2d00      	cmp	r5, #0
 8018f5c:	bf18      	it	ne
 8018f5e:	2200      	movne	r2, #0
 8018f60:	9201      	str	r2, [sp, #4]
 8018f62:	e744      	b.n	8018dee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 8018f64:	4b03      	ldr	r3, [pc, #12]	; (8018f74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 8018f66:	6818      	ldr	r0, [r3, #0]
 8018f68:	6803      	ldr	r3, [r0, #0]
 8018f6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018f6c:	4798      	blx	r3
 8018f6e:	b01f      	add	sp, #124	; 0x7c
 8018f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f74:	24002074 	.word	0x24002074

08018f78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8018f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f7c:	b08f      	sub	sp, #60	; 0x3c
 8018f7e:	461c      	mov	r4, r3
 8018f80:	460f      	mov	r7, r1
 8018f82:	9203      	str	r2, [sp, #12]
 8018f84:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018f88:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018f8a:	9202      	str	r2, [sp, #8]
 8018f8c:	2a00      	cmp	r2, #0
 8018f8e:	f000 8128 	beq.w	80191e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8018f92:	6820      	ldr	r0, [r4, #0]
 8018f94:	aa0a      	add	r2, sp, #40	; 0x28
 8018f96:	6861      	ldr	r1, [r4, #4]
 8018f98:	c203      	stmia	r2!, {r0, r1}
 8018f9a:	6818      	ldr	r0, [r3, #0]
 8018f9c:	aa0c      	add	r2, sp, #48	; 0x30
 8018f9e:	6859      	ldr	r1, [r3, #4]
 8018fa0:	c203      	stmia	r2!, {r0, r1}
 8018fa2:	a80a      	add	r0, sp, #40	; 0x28
 8018fa4:	f7f9 ff64 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018fa8:	4621      	mov	r1, r4
 8018faa:	a80c      	add	r0, sp, #48	; 0x30
 8018fac:	f7f9 ff88 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018fb0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8018fb4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8018fb8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8018fbc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8018fc0:	bfdb      	ittet	le
 8018fc2:	b2b3      	uxthle	r3, r6
 8018fc4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8018fc8:	2301      	movgt	r3, #1
 8018fca:	fb92 f3f3 	sdivle	r3, r2, r3
 8018fce:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8018fd2:	441d      	add	r5, r3
 8018fd4:	fb92 f1f3 	sdiv	r1, r2, r3
 8018fd8:	fa1f fc81 	uxth.w	ip, r1
 8018fdc:	3d01      	subs	r5, #1
 8018fde:	fb0c 2413 	mls	r4, ip, r3, r2
 8018fe2:	4661      	mov	r1, ip
 8018fe4:	fb14 f406 	smulbb	r4, r4, r6
 8018fe8:	4404      	add	r4, r0
 8018fea:	fb95 f5f3 	sdiv	r5, r5, r3
 8018fee:	b2a4      	uxth	r4, r4
 8018ff0:	b121      	cbz	r1, 8018ffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 8018ff2:	9b03      	ldr	r3, [sp, #12]
 8018ff4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8018ff8:	ba1b      	rev	r3, r3
 8018ffa:	441f      	add	r7, r3
 8018ffc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019000:	b2ad      	uxth	r5, r5
 8019002:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8019006:	4418      	add	r0, r3
 8019008:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801900c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8019010:	00ad      	lsls	r5, r5, #2
 8019012:	441a      	add	r2, r3
 8019014:	4b74      	ldr	r3, [pc, #464]	; (80191e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8019016:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801901a:	6818      	ldr	r0, [r3, #0]
 801901c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8019020:	6803      	ldr	r3, [r0, #0]
 8019022:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019024:	4798      	blx	r3
 8019026:	4a71      	ldr	r2, [pc, #452]	; (80191ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8019028:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801902c:	2c00      	cmp	r4, #0
 801902e:	8813      	ldrh	r3, [r2, #0]
 8019030:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8019034:	bf0c      	ite	eq
 8019036:	46c8      	moveq	r8, r9
 8019038:	f04f 0800 	movne.w	r8, #0
 801903c:	9209      	str	r2, [sp, #36]	; 0x24
 801903e:	fb03 c101 	mla	r1, r3, r1, ip
 8019042:	4373      	muls	r3, r6
 8019044:	fa1f f888 	uxth.w	r8, r8
 8019048:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801904c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019050:	9304      	str	r3, [sp, #16]
 8019052:	1d2b      	adds	r3, r5, #4
 8019054:	9305      	str	r3, [sp, #20]
 8019056:	2300      	movs	r3, #0
 8019058:	9301      	str	r3, [sp, #4]
 801905a:	9a04      	ldr	r2, [sp, #16]
 801905c:	4282      	cmp	r2, r0
 801905e:	f240 80bb 	bls.w	80191d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8019062:	b95b      	cbnz	r3, 801907c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 8019064:	783a      	ldrb	r2, [r7, #0]
 8019066:	0993      	lsrs	r3, r2, #6
 8019068:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801906c:	9201      	str	r2, [sp, #4]
 801906e:	1e5a      	subs	r2, r3, #1
 8019070:	2a02      	cmp	r2, #2
 8019072:	bf8d      	iteet	hi
 8019074:	787b      	ldrbhi	r3, [r7, #1]
 8019076:	3701      	addls	r7, #1
 8019078:	b29b      	uxthls	r3, r3
 801907a:	3702      	addhi	r7, #2
 801907c:	b184      	cbz	r4, 80190a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801907e:	429c      	cmp	r4, r3
 8019080:	bf91      	iteee	ls
 8019082:	1b1c      	subls	r4, r3, r4
 8019084:	1ae4      	subhi	r4, r4, r3
 8019086:	46c4      	movhi	ip, r8
 8019088:	f04f 0a00 	movhi.w	sl, #0
 801908c:	bf9b      	ittet	ls
 801908e:	fa1f fa84 	uxthls.w	sl, r4
 8019092:	2400      	movls	r4, #0
 8019094:	b2a4      	uxthhi	r4, r4
 8019096:	fa1f fc89 	uxthls.w	ip, r9
 801909a:	4653      	mov	r3, sl
 801909c:	46e0      	mov	r8, ip
 801909e:	e7dc      	b.n	801905a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 80190a0:	2204      	movs	r2, #4
 80190a2:	9905      	ldr	r1, [sp, #20]
 80190a4:	4543      	cmp	r3, r8
 80190a6:	4615      	mov	r5, r2
 80190a8:	9a01      	ldr	r2, [sp, #4]
 80190aa:	bf24      	itt	cs
 80190ac:	eba3 0a08 	subcs.w	sl, r3, r8
 80190b0:	46c6      	movcs	lr, r8
 80190b2:	fb15 1202 	smlabb	r2, r5, r2, r1
 80190b6:	9903      	ldr	r1, [sp, #12]
 80190b8:	bf3c      	itt	cc
 80190ba:	eba8 0c03 	subcc.w	ip, r8, r3
 80190be:	469e      	movcc	lr, r3
 80190c0:	588a      	ldr	r2, [r1, r2]
 80190c2:	bf26      	itte	cs
 80190c4:	fa1f fa8a 	uxthcs.w	sl, sl
 80190c8:	46a4      	movcs	ip, r4
 80190ca:	fa1f fc8c 	uxthcc.w	ip, ip
 80190ce:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80190d2:	bf38      	it	cc
 80190d4:	46a2      	movcc	sl, r4
 80190d6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80190da:	2900      	cmp	r1, #0
 80190dc:	d066      	beq.n	80191ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80190de:	29ff      	cmp	r1, #255	; 0xff
 80190e0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80190e4:	d114      	bne.n	8019110 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80190e6:	9d02      	ldr	r5, [sp, #8]
 80190e8:	2dff      	cmp	r5, #255	; 0xff
 80190ea:	d111      	bne.n	8019110 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80190ec:	0951      	lsrs	r1, r2, #5
 80190ee:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80190f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80190f6:	4486      	add	lr, r0
 80190f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80190fc:	f026 0607 	bic.w	r6, r6, #7
 8019100:	430e      	orrs	r6, r1
 8019102:	4316      	orrs	r6, r2
 8019104:	b2b6      	uxth	r6, r6
 8019106:	4586      	cmp	lr, r0
 8019108:	d051      	beq.n	80191ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801910a:	f820 6b02 	strh.w	r6, [r0], #2
 801910e:	e7fa      	b.n	8019106 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8019110:	9d02      	ldr	r5, [sp, #8]
 8019112:	b2f6      	uxtb	r6, r6
 8019114:	4486      	add	lr, r0
 8019116:	4369      	muls	r1, r5
 8019118:	1c4d      	adds	r5, r1, #1
 801911a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801911e:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8019122:	b2d2      	uxtb	r2, r2
 8019124:	122d      	asrs	r5, r5, #8
 8019126:	ea6f 0b05 	mvn.w	fp, r5
 801912a:	b2ad      	uxth	r5, r5
 801912c:	fb11 f105 	smulbb	r1, r1, r5
 8019130:	fa5f fb8b 	uxtb.w	fp, fp
 8019134:	fb16 f605 	smulbb	r6, r6, r5
 8019138:	fb12 f205 	smulbb	r2, r2, r5
 801913c:	b289      	uxth	r1, r1
 801913e:	b2b6      	uxth	r6, r6
 8019140:	b292      	uxth	r2, r2
 8019142:	9106      	str	r1, [sp, #24]
 8019144:	9607      	str	r6, [sp, #28]
 8019146:	9208      	str	r2, [sp, #32]
 8019148:	4586      	cmp	lr, r0
 801914a:	d030      	beq.n	80191ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801914c:	8802      	ldrh	r2, [r0, #0]
 801914e:	9906      	ldr	r1, [sp, #24]
 8019150:	1216      	asrs	r6, r2, #8
 8019152:	10d5      	asrs	r5, r2, #3
 8019154:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019158:	00d2      	lsls	r2, r2, #3
 801915a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801915e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019162:	b2d2      	uxtb	r2, r2
 8019164:	fb06 160b 	mla	r6, r6, fp, r1
 8019168:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801916c:	9907      	ldr	r1, [sp, #28]
 801916e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019172:	b2b6      	uxth	r6, r6
 8019174:	fb05 150b 	mla	r5, r5, fp, r1
 8019178:	9908      	ldr	r1, [sp, #32]
 801917a:	fb02 120b 	mla	r2, r2, fp, r1
 801917e:	1c71      	adds	r1, r6, #1
 8019180:	b2ad      	uxth	r5, r5
 8019182:	b292      	uxth	r2, r2
 8019184:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8019188:	1c51      	adds	r1, r2, #1
 801918a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801918e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019192:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019196:	4316      	orrs	r6, r2
 8019198:	1c6a      	adds	r2, r5, #1
 801919a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801919e:	096d      	lsrs	r5, r5, #5
 80191a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80191a4:	432e      	orrs	r6, r5
 80191a6:	f820 6b02 	strh.w	r6, [r0], #2
 80191aa:	e7cd      	b.n	8019148 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80191ac:	4470      	add	r0, lr
 80191ae:	4543      	cmp	r3, r8
 80191b0:	f4ff af73 	bcc.w	801909a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80191b4:	fa1f fc89 	uxth.w	ip, r9
 80191b8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80191bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191be:	eba4 040c 	sub.w	r4, r4, ip
 80191c2:	881b      	ldrh	r3, [r3, #0]
 80191c4:	b2a4      	uxth	r4, r4
 80191c6:	eba3 0309 	sub.w	r3, r3, r9
 80191ca:	2c00      	cmp	r4, #0
 80191cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80191d0:	bf18      	it	ne
 80191d2:	f04f 0c00 	movne.w	ip, #0
 80191d6:	e760      	b.n	801909a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80191d8:	4b03      	ldr	r3, [pc, #12]	; (80191e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80191da:	6818      	ldr	r0, [r3, #0]
 80191dc:	6803      	ldr	r3, [r0, #0]
 80191de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80191e0:	4798      	blx	r3
 80191e2:	b00f      	add	sp, #60	; 0x3c
 80191e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191e8:	24002074 	.word	0x24002074
 80191ec:	2400206e 	.word	0x2400206e

080191f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80191f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191f4:	b093      	sub	sp, #76	; 0x4c
 80191f6:	461c      	mov	r4, r3
 80191f8:	9205      	str	r2, [sp, #20]
 80191fa:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 80191fe:	9101      	str	r1, [sp, #4]
 8019200:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019202:	9202      	str	r2, [sp, #8]
 8019204:	2a00      	cmp	r2, #0
 8019206:	f000 812e 	beq.w	8019466 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801920a:	6820      	ldr	r0, [r4, #0]
 801920c:	aa0e      	add	r2, sp, #56	; 0x38
 801920e:	6861      	ldr	r1, [r4, #4]
 8019210:	c203      	stmia	r2!, {r0, r1}
 8019212:	6818      	ldr	r0, [r3, #0]
 8019214:	aa10      	add	r2, sp, #64	; 0x40
 8019216:	6859      	ldr	r1, [r3, #4]
 8019218:	c203      	stmia	r2!, {r0, r1}
 801921a:	a80e      	add	r0, sp, #56	; 0x38
 801921c:	f7f9 fe28 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019220:	4621      	mov	r1, r4
 8019222:	a810      	add	r0, sp, #64	; 0x40
 8019224:	f7f9 fe4c 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019228:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801922c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8019230:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8019234:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8019238:	bfdb      	ittet	le
 801923a:	b2b3      	uxthle	r3, r6
 801923c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8019240:	2301      	movgt	r3, #1
 8019242:	fb92 f3f3 	sdivle	r3, r2, r3
 8019246:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801924a:	441d      	add	r5, r3
 801924c:	fb92 f1f3 	sdiv	r1, r2, r3
 8019250:	fa1f fc81 	uxth.w	ip, r1
 8019254:	3d01      	subs	r5, #1
 8019256:	fb0c 2413 	mls	r4, ip, r3, r2
 801925a:	4661      	mov	r1, ip
 801925c:	fb14 f406 	smulbb	r4, r4, r6
 8019260:	4404      	add	r4, r0
 8019262:	fb95 f5f3 	sdiv	r5, r5, r3
 8019266:	b2a4      	uxth	r4, r4
 8019268:	b131      	cbz	r1, 8019278 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 801926a:	9b05      	ldr	r3, [sp, #20]
 801926c:	9901      	ldr	r1, [sp, #4]
 801926e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019272:	ba1b      	rev	r3, r3
 8019274:	4419      	add	r1, r3
 8019276:	9101      	str	r1, [sp, #4]
 8019278:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801927c:	b2ad      	uxth	r5, r5
 801927e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019282:	4418      	add	r0, r3
 8019284:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8019288:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801928c:	00ad      	lsls	r5, r5, #2
 801928e:	441a      	add	r2, r3
 8019290:	4b76      	ldr	r3, [pc, #472]	; (801946c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8019292:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 8019296:	6818      	ldr	r0, [r3, #0]
 8019298:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801929c:	6803      	ldr	r3, [r0, #0]
 801929e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80192a0:	4798      	blx	r3
 80192a2:	4973      	ldr	r1, [pc, #460]	; (8019470 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80192a4:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 80192a8:	2c00      	cmp	r4, #0
 80192aa:	880b      	ldrh	r3, [r1, #0]
 80192ac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80192b0:	910d      	str	r1, [sp, #52]	; 0x34
 80192b2:	fb03 c202 	mla	r2, r3, r2, ip
 80192b6:	bf08      	it	eq
 80192b8:	46dc      	moveq	ip, fp
 80192ba:	fb03 f306 	mul.w	r3, r3, r6
 80192be:	bf18      	it	ne
 80192c0:	f04f 0c00 	movne.w	ip, #0
 80192c4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80192c8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80192cc:	fa1f fc8c 	uxth.w	ip, ip
 80192d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80192d4:	9106      	str	r1, [sp, #24]
 80192d6:	9308      	str	r3, [sp, #32]
 80192d8:	1d2b      	adds	r3, r5, #4
 80192da:	9309      	str	r3, [sp, #36]	; 0x24
 80192dc:	9b02      	ldr	r3, [sp, #8]
 80192de:	43da      	mvns	r2, r3
 80192e0:	2300      	movs	r3, #0
 80192e2:	b2d2      	uxtb	r2, r2
 80192e4:	9303      	str	r3, [sp, #12]
 80192e6:	9207      	str	r2, [sp, #28]
 80192e8:	9a08      	ldr	r2, [sp, #32]
 80192ea:	4282      	cmp	r2, r0
 80192ec:	f240 80b6 	bls.w	801945c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 80192f0:	b963      	cbnz	r3, 801930c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 80192f2:	9b01      	ldr	r3, [sp, #4]
 80192f4:	781a      	ldrb	r2, [r3, #0]
 80192f6:	0993      	lsrs	r3, r2, #6
 80192f8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80192fc:	9203      	str	r2, [sp, #12]
 80192fe:	1e5a      	subs	r2, r3, #1
 8019300:	2a02      	cmp	r2, #2
 8019302:	d815      	bhi.n	8019330 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8019304:	9a01      	ldr	r2, [sp, #4]
 8019306:	b29b      	uxth	r3, r3
 8019308:	3201      	adds	r2, #1
 801930a:	9201      	str	r2, [sp, #4]
 801930c:	b1b4      	cbz	r4, 801933c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801930e:	429c      	cmp	r4, r3
 8019310:	bf91      	iteee	ls
 8019312:	1b1c      	subls	r4, r3, r4
 8019314:	1ae4      	subhi	r4, r4, r3
 8019316:	4666      	movhi	r6, ip
 8019318:	f04f 0800 	movhi.w	r8, #0
 801931c:	bf9b      	ittet	ls
 801931e:	fa1f f884 	uxthls.w	r8, r4
 8019322:	2400      	movls	r4, #0
 8019324:	b2a4      	uxthhi	r4, r4
 8019326:	fa1f f68b 	uxthls.w	r6, fp
 801932a:	4643      	mov	r3, r8
 801932c:	46b4      	mov	ip, r6
 801932e:	e7db      	b.n	80192e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 8019330:	9a01      	ldr	r2, [sp, #4]
 8019332:	9b01      	ldr	r3, [sp, #4]
 8019334:	3202      	adds	r2, #2
 8019336:	785b      	ldrb	r3, [r3, #1]
 8019338:	9201      	str	r2, [sp, #4]
 801933a:	e7e7      	b.n	801930c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801933c:	2203      	movs	r2, #3
 801933e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019340:	4563      	cmp	r3, ip
 8019342:	4615      	mov	r5, r2
 8019344:	9a03      	ldr	r2, [sp, #12]
 8019346:	bf2c      	ite	cs
 8019348:	eba3 080c 	subcs.w	r8, r3, ip
 801934c:	ebac 0603 	subcc.w	r6, ip, r3
 8019350:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019354:	9905      	ldr	r1, [sp, #20]
 8019356:	bf24      	itt	cs
 8019358:	fa1f f888 	uxthcs.w	r8, r8
 801935c:	46e1      	movcs	r9, ip
 801935e:	eb01 0502 	add.w	r5, r1, r2
 8019362:	9902      	ldr	r1, [sp, #8]
 8019364:	bf2f      	iteee	cs
 8019366:	4626      	movcs	r6, r4
 8019368:	b2b6      	uxthcc	r6, r6
 801936a:	4699      	movcc	r9, r3
 801936c:	46a0      	movcc	r8, r4
 801936e:	29ff      	cmp	r1, #255	; 0xff
 8019370:	d04a      	beq.n	8019408 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8019372:	9f06      	ldr	r7, [sp, #24]
 8019374:	46ca      	mov	sl, r9
 8019376:	78a9      	ldrb	r1, [r5, #2]
 8019378:	9004      	str	r0, [sp, #16]
 801937a:	4379      	muls	r1, r7
 801937c:	910a      	str	r1, [sp, #40]	; 0x28
 801937e:	7869      	ldrb	r1, [r5, #1]
 8019380:	4379      	muls	r1, r7
 8019382:	910b      	str	r1, [sp, #44]	; 0x2c
 8019384:	9905      	ldr	r1, [sp, #20]
 8019386:	5c8a      	ldrb	r2, [r1, r2]
 8019388:	437a      	muls	r2, r7
 801938a:	920c      	str	r2, [sp, #48]	; 0x30
 801938c:	f1ba 0f00 	cmp.w	sl, #0
 8019390:	d03d      	beq.n	801940e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8019392:	9a04      	ldr	r2, [sp, #16]
 8019394:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019398:	9f07      	ldr	r7, [sp, #28]
 801939a:	8812      	ldrh	r2, [r2, #0]
 801939c:	fa1f fa8a 	uxth.w	sl, sl
 80193a0:	46be      	mov	lr, r7
 80193a2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80193a4:	1215      	asrs	r5, r2, #8
 80193a6:	10d1      	asrs	r1, r2, #3
 80193a8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80193ac:	00d2      	lsls	r2, r2, #3
 80193ae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80193b2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80193b6:	b2d2      	uxtb	r2, r2
 80193b8:	fb05 750e 	mla	r5, r5, lr, r7
 80193bc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80193c0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80193c2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80193c6:	b2ad      	uxth	r5, r5
 80193c8:	fb01 710e 	mla	r1, r1, lr, r7
 80193cc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80193ce:	fb02 720e 	mla	r2, r2, lr, r7
 80193d2:	f105 0e01 	add.w	lr, r5, #1
 80193d6:	b289      	uxth	r1, r1
 80193d8:	b292      	uxth	r2, r2
 80193da:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80193de:	f102 0e01 	add.w	lr, r2, #1
 80193e2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80193e6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80193ea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80193ee:	4315      	orrs	r5, r2
 80193f0:	1c4a      	adds	r2, r1, #1
 80193f2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80193f6:	9a04      	ldr	r2, [sp, #16]
 80193f8:	0949      	lsrs	r1, r1, #5
 80193fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80193fe:	430d      	orrs	r5, r1
 8019400:	f822 5b02 	strh.w	r5, [r2], #2
 8019404:	9204      	str	r2, [sp, #16]
 8019406:	e7c1      	b.n	801938c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8019408:	4649      	mov	r1, r9
 801940a:	4686      	mov	lr, r0
 801940c:	b999      	cbnz	r1, 8019436 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801940e:	4563      	cmp	r3, ip
 8019410:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8019414:	d389      	bcc.n	801932a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8019416:	fa1f f68b 	uxth.w	r6, fp
 801941a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801941e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019420:	1ba4      	subs	r4, r4, r6
 8019422:	881b      	ldrh	r3, [r3, #0]
 8019424:	b2a4      	uxth	r4, r4
 8019426:	eba3 030b 	sub.w	r3, r3, fp
 801942a:	2c00      	cmp	r4, #0
 801942c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019430:	bf18      	it	ne
 8019432:	2600      	movne	r6, #0
 8019434:	e779      	b.n	801932a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8019436:	78aa      	ldrb	r2, [r5, #2]
 8019438:	3901      	subs	r1, #1
 801943a:	4f0e      	ldr	r7, [pc, #56]	; (8019474 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 801943c:	b289      	uxth	r1, r1
 801943e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8019442:	786a      	ldrb	r2, [r5, #1]
 8019444:	00d2      	lsls	r2, r2, #3
 8019446:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801944a:	ea4a 0202 	orr.w	r2, sl, r2
 801944e:	f895 a000 	ldrb.w	sl, [r5]
 8019452:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8019456:	f82e 2b02 	strh.w	r2, [lr], #2
 801945a:	e7d7      	b.n	801940c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 801945c:	4b03      	ldr	r3, [pc, #12]	; (801946c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801945e:	6818      	ldr	r0, [r3, #0]
 8019460:	6803      	ldr	r3, [r0, #0]
 8019462:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019464:	4798      	blx	r3
 8019466:	b013      	add	sp, #76	; 0x4c
 8019468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801946c:	24002074 	.word	0x24002074
 8019470:	2400206e 	.word	0x2400206e
 8019474:	fffff800 	.word	0xfffff800

08019478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8019478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801947c:	b09d      	sub	sp, #116	; 0x74
 801947e:	461c      	mov	r4, r3
 8019480:	4683      	mov	fp, r0
 8019482:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019484:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 8019488:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801948c:	920e      	str	r2, [sp, #56]	; 0x38
 801948e:	2a00      	cmp	r2, #0
 8019490:	f000 81e4 	beq.w	801985c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8019494:	6820      	ldr	r0, [r4, #0]
 8019496:	aa18      	add	r2, sp, #96	; 0x60
 8019498:	6861      	ldr	r1, [r4, #4]
 801949a:	c203      	stmia	r2!, {r0, r1}
 801949c:	6818      	ldr	r0, [r3, #0]
 801949e:	aa1a      	add	r2, sp, #104	; 0x68
 80194a0:	6859      	ldr	r1, [r3, #4]
 80194a2:	c203      	stmia	r2!, {r0, r1}
 80194a4:	a818      	add	r0, sp, #96	; 0x60
 80194a6:	f7f9 fce3 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80194aa:	4621      	mov	r1, r4
 80194ac:	a81a      	add	r0, sp, #104	; 0x68
 80194ae:	f7f9 fd07 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80194b2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 80194b6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 80194ba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80194be:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 80194c2:	bfdb      	ittet	le
 80194c4:	b29a      	uxthle	r2, r3
 80194c6:	f44f 6180 	movle.w	r1, #1024	; 0x400
 80194ca:	2201      	movgt	r2, #1
 80194cc:	fb91 f2f2 	sdivle	r2, r1, r2
 80194d0:	9202      	str	r2, [sp, #8]
 80194d2:	9802      	ldr	r0, [sp, #8]
 80194d4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 80194d8:	9902      	ldr	r1, [sp, #8]
 80194da:	fb92 f0f0 	sdiv	r0, r2, r0
 80194de:	b280      	uxth	r0, r0
 80194e0:	440c      	add	r4, r1
 80194e2:	900f      	str	r0, [sp, #60]	; 0x3c
 80194e4:	3c01      	subs	r4, #1
 80194e6:	9802      	ldr	r0, [sp, #8]
 80194e8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80194ea:	fb05 2510 	mls	r5, r5, r0, r2
 80194ee:	fb94 f4f1 	sdiv	r4, r4, r1
 80194f2:	fb15 f503 	smulbb	r5, r5, r3
 80194f6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 80194fa:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 80194fe:	3401      	adds	r4, #1
 8019500:	440d      	add	r5, r1
 8019502:	4419      	add	r1, r3
 8019504:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8019508:	b2a4      	uxth	r4, r4
 801950a:	441a      	add	r2, r3
 801950c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8019510:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 8019514:	00a4      	lsls	r4, r4, #2
 8019516:	9306      	str	r3, [sp, #24]
 8019518:	b2ad      	uxth	r5, r5
 801951a:	4bb3      	ldr	r3, [pc, #716]	; (80197e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801951c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 8019520:	6818      	ldr	r0, [r3, #0]
 8019522:	6803      	ldr	r3, [r0, #0]
 8019524:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019526:	4798      	blx	r3
 8019528:	4bb0      	ldr	r3, [pc, #704]	; (80197ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 801952a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801952e:	2d00      	cmp	r5, #0
 8019530:	881a      	ldrh	r2, [r3, #0]
 8019532:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 8019536:	fb02 f606 	mul.w	r6, r2, r6
 801953a:	fb02 7101 	mla	r1, r2, r1, r7
 801953e:	9316      	str	r3, [sp, #88]	; 0x58
 8019540:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8019544:	4baa      	ldr	r3, [pc, #680]	; (80197f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8019546:	bf18      	it	ne
 8019548:	2100      	movne	r1, #0
 801954a:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801954e:	eba3 030b 	sub.w	r3, r3, fp
 8019552:	920a      	str	r2, [sp, #40]	; 0x28
 8019554:	f104 0204 	add.w	r2, r4, #4
 8019558:	9317      	str	r3, [sp, #92]	; 0x5c
 801955a:	9213      	str	r2, [sp, #76]	; 0x4c
 801955c:	9a06      	ldr	r2, [sp, #24]
 801955e:	bf08      	it	eq
 8019560:	4611      	moveq	r1, r2
 8019562:	2200      	movs	r2, #0
 8019564:	b289      	uxth	r1, r1
 8019566:	920d      	str	r2, [sp, #52]	; 0x34
 8019568:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801956a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801956c:	fa12 f383 	uxtah	r3, r2, r3
 8019570:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019572:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019576:	3304      	adds	r3, #4
 8019578:	9308      	str	r3, [sp, #32]
 801957a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801957c:	4543      	cmp	r3, r8
 801957e:	f240 8168 	bls.w	8019852 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8019582:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8019586:	f04f 0e01 	mov.w	lr, #1
 801958a:	9a02      	ldr	r2, [sp, #8]
 801958c:	9808      	ldr	r0, [sp, #32]
 801958e:	fbb5 f3f3 	udiv	r3, r5, r3
 8019592:	1ad3      	subs	r3, r2, r3
 8019594:	7800      	ldrb	r0, [r0, #0]
 8019596:	b29b      	uxth	r3, r3
 8019598:	9010      	str	r0, [sp, #64]	; 0x40
 801959a:	3001      	adds	r0, #1
 801959c:	9314      	str	r3, [sp, #80]	; 0x50
 801959e:	9b08      	ldr	r3, [sp, #32]
 80195a0:	9007      	str	r0, [sp, #28]
 80195a2:	785a      	ldrb	r2, [r3, #1]
 80195a4:	789b      	ldrb	r3, [r3, #2]
 80195a6:	021b      	lsls	r3, r3, #8
 80195a8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80195ac:	9a08      	ldr	r2, [sp, #32]
 80195ae:	78d2      	ldrb	r2, [r2, #3]
 80195b0:	4313      	orrs	r3, r2
 80195b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80195b4:	441a      	add	r2, r3
 80195b6:	1c50      	adds	r0, r2, #1
 80195b8:	7852      	ldrb	r2, [r2, #1]
 80195ba:	9005      	str	r0, [sp, #20]
 80195bc:	0212      	lsls	r2, r2, #8
 80195be:	9811      	ldr	r0, [sp, #68]	; 0x44
 80195c0:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80195c4:	5cc3      	ldrb	r3, [r0, r3]
 80195c6:	431a      	orrs	r2, r3
 80195c8:	b293      	uxth	r3, r2
 80195ca:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 80195ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80195d0:	2300      	movs	r3, #0
 80195d2:	9309      	str	r3, [sp, #36]	; 0x24
 80195d4:	2301      	movs	r3, #1
 80195d6:	9301      	str	r3, [sp, #4]
 80195d8:	9304      	str	r3, [sp, #16]
 80195da:	2300      	movs	r3, #0
 80195dc:	9303      	str	r3, [sp, #12]
 80195de:	2d00      	cmp	r5, #0
 80195e0:	d07d      	beq.n	80196de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 80195e2:	45ae      	cmp	lr, r5
 80195e4:	d26c      	bcs.n	80196c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 80195e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80195e8:	eba5 050e 	sub.w	r5, r5, lr
 80195ec:	460c      	mov	r4, r1
 80195ee:	4543      	cmp	r3, r8
 80195f0:	b2ad      	uxth	r5, r5
 80195f2:	d802      	bhi.n	80195fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 80195f4:	e071      	b.n	80196da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 80195f6:	2b00      	cmp	r3, #0
 80195f8:	d15d      	bne.n	80196b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 80195fa:	9b05      	ldr	r3, [sp, #20]
 80195fc:	9a04      	ldr	r2, [sp, #16]
 80195fe:	785b      	ldrb	r3, [r3, #1]
 8019600:	f1c2 0207 	rsb	r2, r2, #7
 8019604:	9904      	ldr	r1, [sp, #16]
 8019606:	4093      	lsls	r3, r2
 8019608:	005b      	lsls	r3, r3, #1
 801960a:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801960e:	9b05      	ldr	r3, [sp, #20]
 8019610:	781b      	ldrb	r3, [r3, #0]
 8019612:	410b      	asrs	r3, r1
 8019614:	3101      	adds	r1, #1
 8019616:	b2c9      	uxtb	r1, r1
 8019618:	b2db      	uxtb	r3, r3
 801961a:	2908      	cmp	r1, #8
 801961c:	9104      	str	r1, [sp, #16]
 801961e:	9905      	ldr	r1, [sp, #20]
 8019620:	ea43 0302 	orr.w	r3, r3, r2
 8019624:	bf0c      	ite	eq
 8019626:	3102      	addeq	r1, #2
 8019628:	3101      	addne	r1, #1
 801962a:	b29a      	uxth	r2, r3
 801962c:	bf05      	ittet	eq
 801962e:	9105      	streq	r1, [sp, #20]
 8019630:	2100      	moveq	r1, #0
 8019632:	9105      	strne	r1, [sp, #20]
 8019634:	9104      	streq	r1, [sp, #16]
 8019636:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019638:	4291      	cmp	r1, r2
 801963a:	d30a      	bcc.n	8019652 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 801963c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8019640:	2301      	movs	r3, #1
 8019642:	9907      	ldr	r1, [sp, #28]
 8019644:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8019648:	d30f      	bcc.n	801966a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801964a:	2100      	movs	r1, #0
 801964c:	9301      	str	r3, [sp, #4]
 801964e:	9103      	str	r1, [sp, #12]
 8019650:	e032      	b.n	80196b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8019652:	9b07      	ldr	r3, [sp, #28]
 8019654:	429a      	cmp	r2, r3
 8019656:	d318      	bcc.n	801968a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8019658:	9b01      	ldr	r3, [sp, #4]
 801965a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801965e:	445b      	add	r3, fp
 8019660:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8019664:	9b01      	ldr	r3, [sp, #4]
 8019666:	3301      	adds	r3, #1
 8019668:	b29b      	uxth	r3, r3
 801966a:	9907      	ldr	r1, [sp, #28]
 801966c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8019670:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8019674:	7108      	strb	r0, [r1, #4]
 8019676:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019678:	80c8      	strh	r0, [r1, #6]
 801967a:	9801      	ldr	r0, [sp, #4]
 801967c:	3001      	adds	r0, #1
 801967e:	7148      	strb	r0, [r1, #5]
 8019680:	9907      	ldr	r1, [sp, #28]
 8019682:	3101      	adds	r1, #1
 8019684:	b289      	uxth	r1, r1
 8019686:	9107      	str	r1, [sp, #28]
 8019688:	e7df      	b.n	801964a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801968a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801968e:	4611      	mov	r1, r2
 8019690:	795b      	ldrb	r3, [r3, #5]
 8019692:	f603 0004 	addw	r0, r3, #2052	; 0x804
 8019696:	4458      	add	r0, fp
 8019698:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801969a:	4406      	add	r6, r0
 801969c:	2e00      	cmp	r6, #0
 801969e:	dd06      	ble.n	80196ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80196a0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80196a4:	790e      	ldrb	r6, [r1, #4]
 80196a6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 80196aa:	88c9      	ldrh	r1, [r1, #6]
 80196ac:	e7f4      	b.n	8019698 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 80196ae:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 80196b2:	b29b      	uxth	r3, r3
 80196b4:	e7c5      	b.n	8019642 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80196b6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80196b8:	4621      	mov	r1, r4
 80196ba:	920b      	str	r2, [sp, #44]	; 0x2c
 80196bc:	469e      	mov	lr, r3
 80196be:	e78e      	b.n	80195de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 80196c0:	9a03      	ldr	r2, [sp, #12]
 80196c2:	ebae 0305 	sub.w	r3, lr, r5
 80196c6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80196ca:	442a      	add	r2, r5
 80196cc:	b29b      	uxth	r3, r3
 80196ce:	b292      	uxth	r2, r2
 80196d0:	9203      	str	r2, [sp, #12]
 80196d2:	2500      	movs	r5, #0
 80196d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80196d6:	4542      	cmp	r2, r8
 80196d8:	d88d      	bhi.n	80195f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 80196da:	4621      	mov	r1, r4
 80196dc:	e74d      	b.n	801957a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 80196de:	458e      	cmp	lr, r1
 80196e0:	f04f 0900 	mov.w	r9, #0
 80196e4:	bf2b      	itete	cs
 80196e6:	ebae 0301 	subcs.w	r3, lr, r1
 80196ea:	eba1 040e 	subcc.w	r4, r1, lr
 80196ee:	462c      	movcs	r4, r5
 80196f0:	462b      	movcc	r3, r5
 80196f2:	bf27      	ittee	cs
 80196f4:	b29b      	uxthcs	r3, r3
 80196f6:	910c      	strcs	r1, [sp, #48]	; 0x30
 80196f8:	b2a4      	uxthcc	r4, r4
 80196fa:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 80196fe:	9a03      	ldr	r2, [sp, #12]
 8019700:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019702:	444a      	add	r2, r9
 8019704:	4548      	cmp	r0, r9
 8019706:	b292      	uxth	r2, r2
 8019708:	d074      	beq.n	80197f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 801970a:	2004      	movs	r0, #4
 801970c:	445a      	add	r2, fp
 801970e:	4605      	mov	r5, r0
 8019710:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8019714:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019716:	fb15 0202 	smlabb	r2, r5, r2, r0
 801971a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801971c:	5880      	ldr	r0, [r0, r2]
 801971e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8019722:	d014      	beq.n	801974e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8019724:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019728:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801972c:	d112      	bne.n	8019754 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801972e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019730:	2aff      	cmp	r2, #255	; 0xff
 8019732:	d10f      	bne.n	8019754 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8019734:	0942      	lsrs	r2, r0, #5
 8019736:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801973a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801973e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019742:	f025 0507 	bic.w	r5, r5, #7
 8019746:	4315      	orrs	r5, r2
 8019748:	4305      	orrs	r5, r0
 801974a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801974e:	f109 0901 	add.w	r9, r9, #1
 8019752:	e7d4      	b.n	80196fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8019754:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8019758:	b2ed      	uxtb	r5, r5
 801975a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801975e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019762:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8019766:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801976a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801976e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019772:	9215      	str	r2, [sp, #84]	; 0x54
 8019774:	fa5f fc8c 	uxtb.w	ip, ip
 8019778:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801977a:	b2c0      	uxtb	r0, r0
 801977c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8019780:	fb02 fa0a 	mul.w	sl, r2, sl
 8019784:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8019788:	f10a 0201 	add.w	r2, sl, #1
 801978c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8019790:	1212      	asrs	r2, r2, #8
 8019792:	fa1f fa82 	uxth.w	sl, r2
 8019796:	43d2      	mvns	r2, r2
 8019798:	fb16 f60a 	smulbb	r6, r6, sl
 801979c:	b2d2      	uxtb	r2, r2
 801979e:	fb10 f00a 	smulbb	r0, r0, sl
 80197a2:	fb07 6702 	mla	r7, r7, r2, r6
 80197a6:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80197a8:	fb0c 0002 	mla	r0, ip, r2, r0
 80197ac:	fb15 f50a 	smulbb	r5, r5, sl
 80197b0:	b2bf      	uxth	r7, r7
 80197b2:	b280      	uxth	r0, r0
 80197b4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80197b8:	fb06 5602 	mla	r6, r6, r2, r5
 80197bc:	1c7a      	adds	r2, r7, #1
 80197be:	1c45      	adds	r5, r0, #1
 80197c0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80197c4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80197c8:	b2b6      	uxth	r6, r6
 80197ca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80197ce:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80197d2:	432f      	orrs	r7, r5
 80197d4:	1c75      	adds	r5, r6, #1
 80197d6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80197da:	096d      	lsrs	r5, r5, #5
 80197dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80197e0:	432f      	orrs	r7, r5
 80197e2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 80197e6:	e7b2      	b.n	801974e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 80197e8:	24002074 	.word	0x24002074
 80197ec:	2400206e 	.word	0x2400206e
 80197f0:	fffff7fb 	.word	0xfffff7fb
 80197f4:	9203      	str	r2, [sp, #12]
 80197f6:	458e      	cmp	lr, r1
 80197f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80197fa:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80197fe:	f4ff af68 	bcc.w	80196d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8019802:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019804:	9906      	ldr	r1, [sp, #24]
 8019806:	8812      	ldrh	r2, [r2, #0]
 8019808:	1a52      	subs	r2, r2, r1
 801980a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801980c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8019810:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019812:	3201      	adds	r2, #1
 8019814:	428a      	cmp	r2, r1
 8019816:	9209      	str	r2, [sp, #36]	; 0x24
 8019818:	d111      	bne.n	801983e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 801981a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801981e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8019822:	9b06      	ldr	r3, [sp, #24]
 8019824:	eba5 0509 	sub.w	r5, r5, r9
 8019828:	b2ad      	uxth	r5, r5
 801982a:	2d00      	cmp	r5, #0
 801982c:	bf08      	it	eq
 801982e:	4619      	moveq	r1, r3
 8019830:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019832:	bf18      	it	ne
 8019834:	2100      	movne	r1, #0
 8019836:	3301      	adds	r3, #1
 8019838:	b289      	uxth	r1, r1
 801983a:	930d      	str	r3, [sp, #52]	; 0x34
 801983c:	e694      	b.n	8019568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 801983e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8019842:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019846:	1b2d      	subs	r5, r5, r4
 8019848:	b2ad      	uxth	r5, r5
 801984a:	2d00      	cmp	r5, #0
 801984c:	bf18      	it	ne
 801984e:	2400      	movne	r4, #0
 8019850:	e740      	b.n	80196d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8019852:	4b04      	ldr	r3, [pc, #16]	; (8019864 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8019854:	6818      	ldr	r0, [r3, #0]
 8019856:	6803      	ldr	r3, [r0, #0]
 8019858:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801985a:	4798      	blx	r3
 801985c:	b01d      	add	sp, #116	; 0x74
 801985e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019862:	bf00      	nop
 8019864:	24002074 	.word	0x24002074

08019868 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801986c:	b09f      	sub	sp, #124	; 0x7c
 801986e:	461d      	mov	r5, r3
 8019870:	4604      	mov	r4, r0
 8019872:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019874:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8019878:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801987c:	920a      	str	r2, [sp, #40]	; 0x28
 801987e:	2a00      	cmp	r2, #0
 8019880:	f000 81fe 	beq.w	8019c80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8019884:	6828      	ldr	r0, [r5, #0]
 8019886:	aa1a      	add	r2, sp, #104	; 0x68
 8019888:	6869      	ldr	r1, [r5, #4]
 801988a:	c203      	stmia	r2!, {r0, r1}
 801988c:	6818      	ldr	r0, [r3, #0]
 801988e:	aa1c      	add	r2, sp, #112	; 0x70
 8019890:	6859      	ldr	r1, [r3, #4]
 8019892:	c203      	stmia	r2!, {r0, r1}
 8019894:	a81a      	add	r0, sp, #104	; 0x68
 8019896:	f7f9 faeb 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801989a:	4629      	mov	r1, r5
 801989c:	a81c      	add	r0, sp, #112	; 0x70
 801989e:	f7f9 fb0f 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80198a2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 80198a6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 80198aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80198ae:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 80198b2:	bfdb      	ittet	le
 80198b4:	b29a      	uxthle	r2, r3
 80198b6:	f44f 6180 	movle.w	r1, #1024	; 0x400
 80198ba:	2201      	movgt	r2, #1
 80198bc:	fb91 f2f2 	sdivle	r2, r1, r2
 80198c0:	9201      	str	r2, [sp, #4]
 80198c2:	9801      	ldr	r0, [sp, #4]
 80198c4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 80198c8:	9901      	ldr	r1, [sp, #4]
 80198ca:	fb92 f0f0 	sdiv	r0, r2, r0
 80198ce:	b280      	uxth	r0, r0
 80198d0:	440e      	add	r6, r1
 80198d2:	9010      	str	r0, [sp, #64]	; 0x40
 80198d4:	3e01      	subs	r6, #1
 80198d6:	9801      	ldr	r0, [sp, #4]
 80198d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80198da:	fb05 2510 	mls	r5, r5, r0, r2
 80198de:	fb96 f6f1 	sdiv	r6, r6, r1
 80198e2:	fb15 f503 	smulbb	r5, r5, r3
 80198e6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 80198ea:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80198ee:	3601      	adds	r6, #1
 80198f0:	440d      	add	r5, r1
 80198f2:	4419      	add	r1, r3
 80198f4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 80198f8:	b2b6      	uxth	r6, r6
 80198fa:	441a      	add	r2, r3
 80198fc:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8019900:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8019904:	b2ad      	uxth	r5, r5
 8019906:	9304      	str	r3, [sp, #16]
 8019908:	4b96      	ldr	r3, [pc, #600]	; (8019b64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801990a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801990e:	6818      	ldr	r0, [r3, #0]
 8019910:	6803      	ldr	r3, [r0, #0]
 8019912:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019914:	4798      	blx	r3
 8019916:	4b94      	ldr	r3, [pc, #592]	; (8019b68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8019918:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801991c:	2d00      	cmp	r5, #0
 801991e:	881a      	ldrh	r2, [r3, #0]
 8019920:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8019924:	fb02 f707 	mul.w	r7, r2, r7
 8019928:	fb02 c101 	mla	r1, r2, r1, ip
 801992c:	9318      	str	r3, [sp, #96]	; 0x60
 801992e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8019932:	4b8e      	ldr	r3, [pc, #568]	; (8019b6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 8019934:	bf18      	it	ne
 8019936:	2100      	movne	r1, #0
 8019938:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801993c:	eba3 0304 	sub.w	r3, r3, r4
 8019940:	920b      	str	r2, [sp, #44]	; 0x2c
 8019942:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019944:	9319      	str	r3, [sp, #100]	; 0x64
 8019946:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801994a:	f106 0204 	add.w	r2, r6, #4
 801994e:	9206      	str	r2, [sp, #24]
 8019950:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019952:	ea6f 0202 	mvn.w	r2, r2
 8019956:	b2d2      	uxtb	r2, r2
 8019958:	9215      	str	r2, [sp, #84]	; 0x54
 801995a:	9a04      	ldr	r2, [sp, #16]
 801995c:	bf08      	it	eq
 801995e:	4611      	moveq	r1, r2
 8019960:	2200      	movs	r2, #0
 8019962:	b289      	uxth	r1, r1
 8019964:	920d      	str	r2, [sp, #52]	; 0x34
 8019966:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019968:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801996a:	fa12 f383 	uxtah	r3, r2, r3
 801996e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019970:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019974:	3304      	adds	r3, #4
 8019976:	9307      	str	r3, [sp, #28]
 8019978:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801997a:	455b      	cmp	r3, fp
 801997c:	f240 817b 	bls.w	8019c76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8019980:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8019984:	f04f 0801 	mov.w	r8, #1
 8019988:	9a01      	ldr	r2, [sp, #4]
 801998a:	9807      	ldr	r0, [sp, #28]
 801998c:	46c4      	mov	ip, r8
 801998e:	f8cd 8008 	str.w	r8, [sp, #8]
 8019992:	7800      	ldrb	r0, [r0, #0]
 8019994:	fbb5 f3f3 	udiv	r3, r5, r3
 8019998:	1ad3      	subs	r3, r2, r3
 801999a:	9011      	str	r0, [sp, #68]	; 0x44
 801999c:	3001      	adds	r0, #1
 801999e:	b29b      	uxth	r3, r3
 80199a0:	9005      	str	r0, [sp, #20]
 80199a2:	9316      	str	r3, [sp, #88]	; 0x58
 80199a4:	9b07      	ldr	r3, [sp, #28]
 80199a6:	785a      	ldrb	r2, [r3, #1]
 80199a8:	789b      	ldrb	r3, [r3, #2]
 80199aa:	021b      	lsls	r3, r3, #8
 80199ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80199b0:	9a07      	ldr	r2, [sp, #28]
 80199b2:	78d2      	ldrb	r2, [r2, #3]
 80199b4:	4313      	orrs	r3, r2
 80199b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80199b8:	441a      	add	r2, r3
 80199ba:	1c50      	adds	r0, r2, #1
 80199bc:	7852      	ldrb	r2, [r2, #1]
 80199be:	9003      	str	r0, [sp, #12]
 80199c0:	0212      	lsls	r2, r2, #8
 80199c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80199c4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80199c8:	5cc3      	ldrb	r3, [r0, r3]
 80199ca:	431a      	orrs	r2, r3
 80199cc:	b293      	uxth	r3, r2
 80199ce:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 80199d2:	930c      	str	r3, [sp, #48]	; 0x30
 80199d4:	2300      	movs	r3, #0
 80199d6:	9308      	str	r3, [sp, #32]
 80199d8:	461a      	mov	r2, r3
 80199da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80199de:	930e      	str	r3, [sp, #56]	; 0x38
 80199e0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80199e4:	930f      	str	r3, [sp, #60]	; 0x3c
 80199e6:	2d00      	cmp	r5, #0
 80199e8:	d07d      	beq.n	8019ae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 80199ea:	45ac      	cmp	ip, r5
 80199ec:	d26d      	bcs.n	8019aca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 80199ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80199f0:	eba5 050c 	sub.w	r5, r5, ip
 80199f4:	4608      	mov	r0, r1
 80199f6:	455b      	cmp	r3, fp
 80199f8:	b2ad      	uxth	r5, r5
 80199fa:	d802      	bhi.n	8019a02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 80199fc:	e071      	b.n	8019ae2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 80199fe:	2b00      	cmp	r3, #0
 8019a00:	d15d      	bne.n	8019abe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8019a02:	9b03      	ldr	r3, [sp, #12]
 8019a04:	9a02      	ldr	r2, [sp, #8]
 8019a06:	785b      	ldrb	r3, [r3, #1]
 8019a08:	f1c2 0207 	rsb	r2, r2, #7
 8019a0c:	9902      	ldr	r1, [sp, #8]
 8019a0e:	4093      	lsls	r3, r2
 8019a10:	005b      	lsls	r3, r3, #1
 8019a12:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8019a16:	9b03      	ldr	r3, [sp, #12]
 8019a18:	781b      	ldrb	r3, [r3, #0]
 8019a1a:	410b      	asrs	r3, r1
 8019a1c:	3101      	adds	r1, #1
 8019a1e:	b2c9      	uxtb	r1, r1
 8019a20:	b2db      	uxtb	r3, r3
 8019a22:	2908      	cmp	r1, #8
 8019a24:	9102      	str	r1, [sp, #8]
 8019a26:	9903      	ldr	r1, [sp, #12]
 8019a28:	ea43 0302 	orr.w	r3, r3, r2
 8019a2c:	bf0c      	ite	eq
 8019a2e:	3102      	addeq	r1, #2
 8019a30:	3101      	addne	r1, #1
 8019a32:	b29a      	uxth	r2, r3
 8019a34:	bf05      	ittet	eq
 8019a36:	9103      	streq	r1, [sp, #12]
 8019a38:	2100      	moveq	r1, #0
 8019a3a:	9103      	strne	r1, [sp, #12]
 8019a3c:	9102      	streq	r1, [sp, #8]
 8019a3e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019a40:	4291      	cmp	r1, r2
 8019a42:	d30a      	bcc.n	8019a5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8019a44:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8019a48:	2301      	movs	r3, #1
 8019a4a:	9905      	ldr	r1, [sp, #20]
 8019a4c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8019a50:	d30f      	bcc.n	8019a72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 8019a52:	2100      	movs	r1, #0
 8019a54:	4698      	mov	r8, r3
 8019a56:	9100      	str	r1, [sp, #0]
 8019a58:	e032      	b.n	8019ac0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 8019a5a:	9b05      	ldr	r3, [sp, #20]
 8019a5c:	429a      	cmp	r2, r3
 8019a5e:	d318      	bcc.n	8019a92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 8019a60:	eb04 0308 	add.w	r3, r4, r8
 8019a64:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8019a68:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8019a6c:	f108 0301 	add.w	r3, r8, #1
 8019a70:	b29b      	uxth	r3, r3
 8019a72:	9905      	ldr	r1, [sp, #20]
 8019a74:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8019a78:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019a7c:	710e      	strb	r6, [r1, #4]
 8019a7e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019a80:	80ce      	strh	r6, [r1, #6]
 8019a82:	f108 0601 	add.w	r6, r8, #1
 8019a86:	714e      	strb	r6, [r1, #5]
 8019a88:	9905      	ldr	r1, [sp, #20]
 8019a8a:	3101      	adds	r1, #1
 8019a8c:	b289      	uxth	r1, r1
 8019a8e:	9105      	str	r1, [sp, #20]
 8019a90:	e7df      	b.n	8019a52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8019a92:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8019a96:	4611      	mov	r1, r2
 8019a98:	795b      	ldrb	r3, [r3, #5]
 8019a9a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8019a9e:	4426      	add	r6, r4
 8019aa0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8019aa2:	4437      	add	r7, r6
 8019aa4:	2f00      	cmp	r7, #0
 8019aa6:	dd06      	ble.n	8019ab6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8019aa8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019aac:	790f      	ldrb	r7, [r1, #4]
 8019aae:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8019ab2:	88c9      	ldrh	r1, [r1, #6]
 8019ab4:	e7f4      	b.n	8019aa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8019ab6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8019aba:	b29b      	uxth	r3, r3
 8019abc:	e7c5      	b.n	8019a4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 8019abe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019ac0:	920c      	str	r2, [sp, #48]	; 0x30
 8019ac2:	4601      	mov	r1, r0
 8019ac4:	9a00      	ldr	r2, [sp, #0]
 8019ac6:	469c      	mov	ip, r3
 8019ac8:	e78d      	b.n	80199e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 8019aca:	ebac 0305 	sub.w	r3, ip, r5
 8019ace:	1957      	adds	r7, r2, r5
 8019ad0:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8019ad4:	b2ba      	uxth	r2, r7
 8019ad6:	b29b      	uxth	r3, r3
 8019ad8:	9200      	str	r2, [sp, #0]
 8019ada:	2500      	movs	r5, #0
 8019adc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019ade:	455a      	cmp	r2, fp
 8019ae0:	d88d      	bhi.n	80199fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8019ae2:	4601      	mov	r1, r0
 8019ae4:	e748      	b.n	8019978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8019ae6:	458c      	cmp	ip, r1
 8019ae8:	bf27      	ittee	cs
 8019aea:	ebac 0301 	subcs.w	r3, ip, r1
 8019aee:	4628      	movcs	r0, r5
 8019af0:	eba1 000c 	subcc.w	r0, r1, ip
 8019af4:	462b      	movcc	r3, r5
 8019af6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019af8:	bf27      	ittee	cs
 8019afa:	b29b      	uxthcs	r3, r3
 8019afc:	9109      	strcs	r1, [sp, #36]	; 0x24
 8019afe:	b280      	uxthcc	r0, r0
 8019b00:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8019b04:	2dff      	cmp	r5, #255	; 0xff
 8019b06:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019b08:	eb02 0705 	add.w	r7, r2, r5
 8019b0c:	b2bd      	uxth	r5, r7
 8019b0e:	9500      	str	r5, [sp, #0]
 8019b10:	d12e      	bne.n	8019b70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 8019b12:	465e      	mov	r6, fp
 8019b14:	9d00      	ldr	r5, [sp, #0]
 8019b16:	42aa      	cmp	r2, r5
 8019b18:	f040 8083 	bne.w	8019c22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 8019b1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019b1e:	458c      	cmp	ip, r1
 8019b20:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8019b24:	d3d9      	bcc.n	8019ada <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8019b26:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8019b28:	9904      	ldr	r1, [sp, #16]
 8019b2a:	8812      	ldrh	r2, [r2, #0]
 8019b2c:	1a52      	subs	r2, r2, r1
 8019b2e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8019b30:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8019b34:	9a08      	ldr	r2, [sp, #32]
 8019b36:	3201      	adds	r2, #1
 8019b38:	428a      	cmp	r2, r1
 8019b3a:	9208      	str	r2, [sp, #32]
 8019b3c:	f040 8091 	bne.w	8019c62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 8019b40:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8019b44:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8019b48:	9b04      	ldr	r3, [sp, #16]
 8019b4a:	eba5 050c 	sub.w	r5, r5, ip
 8019b4e:	b2ad      	uxth	r5, r5
 8019b50:	2d00      	cmp	r5, #0
 8019b52:	bf08      	it	eq
 8019b54:	4619      	moveq	r1, r3
 8019b56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019b58:	bf18      	it	ne
 8019b5a:	2100      	movne	r1, #0
 8019b5c:	3301      	adds	r3, #1
 8019b5e:	b289      	uxth	r1, r1
 8019b60:	930d      	str	r3, [sp, #52]	; 0x34
 8019b62:	e700      	b.n	8019966 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 8019b64:	24002074 	.word	0x24002074
 8019b68:	2400206e 	.word	0x2400206e
 8019b6c:	fffff7fb 	.word	0xfffff7fb
 8019b70:	46d9      	mov	r9, fp
 8019b72:	9d00      	ldr	r5, [sp, #0]
 8019b74:	42aa      	cmp	r2, r5
 8019b76:	d0d1      	beq.n	8019b1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8019b78:	1c55      	adds	r5, r2, #1
 8019b7a:	4422      	add	r2, r4
 8019b7c:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8019b80:	9a06      	ldr	r2, [sp, #24]
 8019b82:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019b86:	9517      	str	r5, [sp, #92]	; 0x5c
 8019b88:	4472      	add	r2, lr
 8019b8a:	9212      	str	r2, [sp, #72]	; 0x48
 8019b8c:	f8b9 2000 	ldrh.w	r2, [r9]
 8019b90:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8019b92:	1216      	asrs	r6, r2, #8
 8019b94:	f897 a002 	ldrb.w	sl, [r7, #2]
 8019b98:	10d5      	asrs	r5, r2, #3
 8019b9a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019b9c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019ba0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019ba4:	00d2      	lsls	r2, r2, #3
 8019ba6:	fb1a fa07 	smulbb	sl, sl, r7
 8019baa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019bae:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019bb0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019bb4:	b2d2      	uxtb	r2, r2
 8019bb6:	fb06 a607 	mla	r6, r6, r7, sl
 8019bba:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8019bbc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019bc0:	f897 a001 	ldrb.w	sl, [r7, #1]
 8019bc4:	b2b6      	uxth	r6, r6
 8019bc6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019bc8:	fb1a fa07 	smulbb	sl, sl, r7
 8019bcc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019bce:	fb05 a507 	mla	r5, r5, r7, sl
 8019bd2:	9f06      	ldr	r7, [sp, #24]
 8019bd4:	f106 0a01 	add.w	sl, r6, #1
 8019bd8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019bdc:	b2ad      	uxth	r5, r5
 8019bde:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019be0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8019be4:	f105 0a01 	add.w	sl, r5, #1
 8019be8:	fb1e fe07 	smulbb	lr, lr, r7
 8019bec:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019bee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019bf2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019bf6:	fb02 e207 	mla	r2, r2, r7, lr
 8019bfa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019bfe:	b292      	uxth	r2, r2
 8019c00:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c04:	f102 0e01 	add.w	lr, r2, #1
 8019c08:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8019c0c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8019c10:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019c14:	ea4e 0606 	orr.w	r6, lr, r6
 8019c18:	ea46 060a 	orr.w	r6, r6, sl
 8019c1c:	f829 6b02 	strh.w	r6, [r9], #2
 8019c20:	e7a7      	b.n	8019b72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 8019c22:	f102 0e01 	add.w	lr, r2, #1
 8019c26:	4422      	add	r2, r4
 8019c28:	9f06      	ldr	r7, [sp, #24]
 8019c2a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8019c2e:	9a06      	ldr	r2, [sp, #24]
 8019c30:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019c34:	eb02 0a05 	add.w	sl, r2, r5
 8019c38:	4a13      	ldr	r2, [pc, #76]	; (8019c88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 8019c3a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8019c3e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8019c42:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019c46:	00d2      	lsls	r2, r2, #3
 8019c48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019c4c:	ea49 0202 	orr.w	r2, r9, r2
 8019c50:	f817 9005 	ldrb.w	r9, [r7, r5]
 8019c54:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8019c58:	f826 2b02 	strh.w	r2, [r6], #2
 8019c5c:	fa1f f28e 	uxth.w	r2, lr
 8019c60:	e758      	b.n	8019b14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 8019c62:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8019c66:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8019c6a:	1a2d      	subs	r5, r5, r0
 8019c6c:	b2ad      	uxth	r5, r5
 8019c6e:	2d00      	cmp	r5, #0
 8019c70:	bf18      	it	ne
 8019c72:	2000      	movne	r0, #0
 8019c74:	e732      	b.n	8019adc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8019c76:	4b05      	ldr	r3, [pc, #20]	; (8019c8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8019c78:	6818      	ldr	r0, [r3, #0]
 8019c7a:	6803      	ldr	r3, [r0, #0]
 8019c7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019c7e:	4798      	blx	r3
 8019c80:	b01f      	add	sp, #124	; 0x7c
 8019c82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c86:	bf00      	nop
 8019c88:	fffff800 	.word	0xfffff800
 8019c8c:	24002074 	.word	0x24002074

08019c90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8019c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c94:	b091      	sub	sp, #68	; 0x44
 8019c96:	469b      	mov	fp, r3
 8019c98:	4616      	mov	r6, r2
 8019c9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019c9e:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8019ca2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8019ca6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8019caa:	4604      	mov	r4, r0
 8019cac:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8019cb0:	4640      	mov	r0, r8
 8019cb2:	460d      	mov	r5, r1
 8019cb4:	4659      	mov	r1, fp
 8019cb6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8019cba:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019cbe:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8019cc2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8019cc6:	f7f5 ffaf 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 8019cca:	4631      	mov	r1, r6
 8019ccc:	4640      	mov	r0, r8
 8019cce:	f7f5 ffab 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 8019cd2:	4b74      	ldr	r3, [pc, #464]	; (8019ea4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8019cd4:	8818      	ldrh	r0, [r3, #0]
 8019cd6:	4b74      	ldr	r3, [pc, #464]	; (8019ea8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8019cd8:	b202      	sxth	r2, r0
 8019cda:	8819      	ldrh	r1, [r3, #0]
 8019cdc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8019ce0:	b20e      	sxth	r6, r1
 8019ce2:	2b00      	cmp	r3, #0
 8019ce4:	da07      	bge.n	8019cf6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8019ce6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8019cea:	4463      	add	r3, ip
 8019cec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8019cf0:	2300      	movs	r3, #0
 8019cf2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8019cf6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8019cfa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8019cfe:	1ad2      	subs	r2, r2, r3
 8019d00:	4594      	cmp	ip, r2
 8019d02:	bfc4      	itt	gt
 8019d04:	1ac2      	subgt	r2, r0, r3
 8019d06:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8019d0a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019d0e:	2a00      	cmp	r2, #0
 8019d10:	da07      	bge.n	8019d22 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8019d12:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8019d16:	4462      	add	r2, ip
 8019d18:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8019d1c:	2200      	movs	r2, #0
 8019d1e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8019d22:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8019d26:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8019d2a:	eba6 060a 	sub.w	r6, r6, sl
 8019d2e:	42b2      	cmp	r2, r6
 8019d30:	bfc4      	itt	gt
 8019d32:	eba1 020a 	subgt.w	r2, r1, sl
 8019d36:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8019d3a:	4a5c      	ldr	r2, [pc, #368]	; (8019eac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8019d3c:	7812      	ldrb	r2, [r2, #0]
 8019d3e:	b9a2      	cbnz	r2, 8019d6a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8019d40:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8019d44:	4286      	cmp	r6, r0
 8019d46:	4640      	mov	r0, r8
 8019d48:	9303      	str	r3, [sp, #12]
 8019d4a:	bf14      	ite	ne
 8019d4c:	2600      	movne	r6, #0
 8019d4e:	2601      	moveq	r6, #1
 8019d50:	f7f5 ffad 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8019d54:	9b03      	ldr	r3, [sp, #12]
 8019d56:	b160      	cbz	r0, 8019d72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8019d58:	2300      	movs	r3, #0
 8019d5a:	8023      	strh	r3, [r4, #0]
 8019d5c:	8063      	strh	r3, [r4, #2]
 8019d5e:	80a3      	strh	r3, [r4, #4]
 8019d60:	4620      	mov	r0, r4
 8019d62:	80e3      	strh	r3, [r4, #6]
 8019d64:	b011      	add	sp, #68	; 0x44
 8019d66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d6a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8019d6e:	428e      	cmp	r6, r1
 8019d70:	e7e9      	b.n	8019d46 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8019d72:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8019d76:	a90e      	add	r1, sp, #56	; 0x38
 8019d78:	900e      	str	r0, [sp, #56]	; 0x38
 8019d7a:	a80c      	add	r0, sp, #48	; 0x30
 8019d7c:	9205      	str	r2, [sp, #20]
 8019d7e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8019d82:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8019d86:	9206      	str	r2, [sp, #24]
 8019d88:	f8bb 2000 	ldrh.w	r2, [fp]
 8019d8c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8019d90:	1a9b      	subs	r3, r3, r2
 8019d92:	b21b      	sxth	r3, r3
 8019d94:	9303      	str	r3, [sp, #12]
 8019d96:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019d9a:	f8df b118 	ldr.w	fp, [pc, #280]	; 8019eb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8019d9e:	ebaa 0a03 	sub.w	sl, sl, r3
 8019da2:	fa0f f38a 	sxth.w	r3, sl
 8019da6:	9304      	str	r3, [sp, #16]
 8019da8:	9b03      	ldr	r3, [sp, #12]
 8019daa:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8019dae:	9b04      	ldr	r3, [sp, #16]
 8019db0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019db4:	9b05      	ldr	r3, [sp, #20]
 8019db6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8019dba:	9b06      	ldr	r3, [sp, #24]
 8019dbc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8019dc0:	f7f9 f87e 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019dc4:	4640      	mov	r0, r8
 8019dc6:	f7f9 f853 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019dca:	a80e      	add	r0, sp, #56	; 0x38
 8019dcc:	f7f9 f850 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019dd0:	4b37      	ldr	r3, [pc, #220]	; (8019eb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8019dd2:	4628      	mov	r0, r5
 8019dd4:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8019dd8:	881b      	ldrh	r3, [r3, #0]
 8019dda:	9307      	str	r3, [sp, #28]
 8019ddc:	682b      	ldr	r3, [r5, #0]
 8019dde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019de0:	4798      	blx	r3
 8019de2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8019de6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019dea:	4681      	mov	r9, r0
 8019dec:	f8db 0000 	ldr.w	r0, [fp]
 8019df0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8019df4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019df6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019dfa:	6803      	ldr	r3, [r0, #0]
 8019dfc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019dfe:	4798      	blx	r3
 8019e00:	4607      	mov	r7, r0
 8019e02:	f8db 0000 	ldr.w	r0, [fp]
 8019e06:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019e0a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019e0e:	6803      	ldr	r3, [r0, #0]
 8019e10:	9109      	str	r1, [sp, #36]	; 0x24
 8019e12:	9208      	str	r2, [sp, #32]
 8019e14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019e16:	4798      	blx	r3
 8019e18:	f010 0f01 	tst.w	r0, #1
 8019e1c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019e20:	d012      	beq.n	8019e48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8019e22:	f8db 0000 	ldr.w	r0, [fp]
 8019e26:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8019e2a:	6803      	ldr	r3, [r0, #0]
 8019e2c:	9200      	str	r2, [sp, #0]
 8019e2e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8019e30:	462b      	mov	r3, r5
 8019e32:	e898 0006 	ldmia.w	r8, {r1, r2}
 8019e36:	47b0      	blx	r6
 8019e38:	9b03      	ldr	r3, [sp, #12]
 8019e3a:	8023      	strh	r3, [r4, #0]
 8019e3c:	9b04      	ldr	r3, [sp, #16]
 8019e3e:	8063      	strh	r3, [r4, #2]
 8019e40:	9b05      	ldr	r3, [sp, #20]
 8019e42:	80a3      	strh	r3, [r4, #4]
 8019e44:	9b06      	ldr	r3, [sp, #24]
 8019e46:	e78b      	b.n	8019d60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8019e48:	fb09 f202 	mul.w	r2, r9, r2
 8019e4c:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8019e50:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8019e54:	440f      	add	r7, r1
 8019e56:	b166      	cbz	r6, 8019e72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8019e58:	9a07      	ldr	r2, [sp, #28]
 8019e5a:	4592      	cmp	sl, r2
 8019e5c:	d109      	bne.n	8019e72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8019e5e:	f8db 0000 	ldr.w	r0, [fp]
 8019e62:	fb09 f303 	mul.w	r3, r9, r3
 8019e66:	4629      	mov	r1, r5
 8019e68:	6802      	ldr	r2, [r0, #0]
 8019e6a:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8019e6c:	463a      	mov	r2, r7
 8019e6e:	47b0      	blx	r6
 8019e70:	e7e2      	b.n	8019e38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8019e72:	fb0a f303 	mul.w	r3, sl, r3
 8019e76:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8019e7a:	f8df b038 	ldr.w	fp, [pc, #56]	; 8019eb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8019e7e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8019e82:	4545      	cmp	r5, r8
 8019e84:	d2d8      	bcs.n	8019e38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8019e86:	f8db 0000 	ldr.w	r0, [fp]
 8019e8a:	4629      	mov	r1, r5
 8019e8c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8019e90:	4435      	add	r5, r6
 8019e92:	6802      	ldr	r2, [r0, #0]
 8019e94:	005b      	lsls	r3, r3, #1
 8019e96:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8019e9a:	463a      	mov	r2, r7
 8019e9c:	47d0      	blx	sl
 8019e9e:	444f      	add	r7, r9
 8019ea0:	e7ef      	b.n	8019e82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8019ea2:	bf00      	nop
 8019ea4:	24002068 	.word	0x24002068
 8019ea8:	2400206a 	.word	0x2400206a
 8019eac:	2400206c 	.word	0x2400206c
 8019eb0:	2400206e 	.word	0x2400206e
 8019eb4:	24002074 	.word	0x24002074

08019eb8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8019eb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019eba:	4606      	mov	r6, r0
 8019ebc:	b087      	sub	sp, #28
 8019ebe:	460c      	mov	r4, r1
 8019ec0:	4617      	mov	r7, r2
 8019ec2:	461d      	mov	r5, r3
 8019ec4:	b333      	cbz	r3, 8019f14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019ec6:	4608      	mov	r0, r1
 8019ec8:	f7f5 fef1 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8019ecc:	bb10      	cbnz	r0, 8019f14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019ece:	6820      	ldr	r0, [r4, #0]
 8019ed0:	ab04      	add	r3, sp, #16
 8019ed2:	6861      	ldr	r1, [r4, #4]
 8019ed4:	4c1b      	ldr	r4, [pc, #108]	; (8019f44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8019ed6:	c303      	stmia	r3!, {r0, r1}
 8019ed8:	a804      	add	r0, sp, #16
 8019eda:	f7f8 ffc9 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019ede:	6820      	ldr	r0, [r4, #0]
 8019ee0:	6803      	ldr	r3, [r0, #0]
 8019ee2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019ee4:	4798      	blx	r3
 8019ee6:	2dff      	cmp	r5, #255	; 0xff
 8019ee8:	d016      	beq.n	8019f18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8019eea:	f010 0f08 	tst.w	r0, #8
 8019eee:	6820      	ldr	r0, [r4, #0]
 8019ef0:	d015      	beq.n	8019f1e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8019ef2:	2400      	movs	r4, #0
 8019ef4:	6801      	ldr	r1, [r0, #0]
 8019ef6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8019efa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019efe:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8019f02:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8019f06:	9401      	str	r4, [sp, #4]
 8019f08:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8019f0c:	9400      	str	r4, [sp, #0]
 8019f0e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8019f10:	4639      	mov	r1, r7
 8019f12:	47a0      	blx	r4
 8019f14:	b007      	add	sp, #28
 8019f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019f18:	f010 0f02 	tst.w	r0, #2
 8019f1c:	e7e7      	b.n	8019eee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8019f1e:	6803      	ldr	r3, [r0, #0]
 8019f20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019f22:	4798      	blx	r3
 8019f24:	4b08      	ldr	r3, [pc, #32]	; (8019f48 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8019f26:	4601      	mov	r1, r0
 8019f28:	4630      	mov	r0, r6
 8019f2a:	881a      	ldrh	r2, [r3, #0]
 8019f2c:	6833      	ldr	r3, [r6, #0]
 8019f2e:	e9cd 7500 	strd	r7, r5, [sp]
 8019f32:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8019f34:	ab04      	add	r3, sp, #16
 8019f36:	47a8      	blx	r5
 8019f38:	6820      	ldr	r0, [r4, #0]
 8019f3a:	6803      	ldr	r3, [r0, #0]
 8019f3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019f3e:	4798      	blx	r3
 8019f40:	e7e8      	b.n	8019f14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019f42:	bf00      	nop
 8019f44:	24002074 	.word	0x24002074
 8019f48:	2400206e 	.word	0x2400206e

08019f4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8019f4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019f50:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8019f54:	4688      	mov	r8, r1
 8019f56:	4614      	mov	r4, r2
 8019f58:	461d      	mov	r5, r3
 8019f5a:	9e08      	ldr	r6, [sp, #32]
 8019f5c:	2f00      	cmp	r7, #0
 8019f5e:	f000 80ab 	beq.w	801a0b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8019f62:	4618      	mov	r0, r3
 8019f64:	f7f5 fea3 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 8019f68:	2800      	cmp	r0, #0
 8019f6a:	f040 80a5 	bne.w	801a0b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8019f6e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8019f72:	2fff      	cmp	r7, #255	; 0xff
 8019f74:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8019f78:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8019f7c:	fb04 1303 	mla	r3, r4, r3, r1
 8019f80:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8019f84:	eba4 0200 	sub.w	r2, r4, r0
 8019f88:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8019f8c:	fb04 f505 	mul.w	r5, r4, r5
 8019f90:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8019f94:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8019f98:	d04a      	beq.n	801a030 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8019f9a:	b2bc      	uxth	r4, r7
 8019f9c:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8019fa0:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8019fa4:	fa5f f788 	uxtb.w	r7, r8
 8019fa8:	b2f3      	uxtb	r3, r6
 8019faa:	0040      	lsls	r0, r0, #1
 8019fac:	fb0e fe04 	mul.w	lr, lr, r4
 8019fb0:	4367      	muls	r7, r4
 8019fb2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8019fb6:	4363      	muls	r3, r4
 8019fb8:	fa1f fc8c 	uxth.w	ip, ip
 8019fbc:	42a9      	cmp	r1, r5
 8019fbe:	d27b      	bcs.n	801a0b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8019fc0:	eb01 0900 	add.w	r9, r1, r0
 8019fc4:	4549      	cmp	r1, r9
 8019fc6:	d231      	bcs.n	801a02c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8019fc8:	880a      	ldrh	r2, [r1, #0]
 8019fca:	1214      	asrs	r4, r2, #8
 8019fcc:	10d6      	asrs	r6, r2, #3
 8019fce:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019fd2:	00d2      	lsls	r2, r2, #3
 8019fd4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019fd8:	b2d2      	uxtb	r2, r2
 8019fda:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019fde:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019fe2:	fb14 f40c 	smulbb	r4, r4, ip
 8019fe6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8019fea:	fb12 f20c 	smulbb	r2, r2, ip
 8019fee:	fb16 f60c 	smulbb	r6, r6, ip
 8019ff2:	4474      	add	r4, lr
 8019ff4:	441a      	add	r2, r3
 8019ff6:	b2a4      	uxth	r4, r4
 8019ff8:	443e      	add	r6, r7
 8019ffa:	b292      	uxth	r2, r2
 8019ffc:	f104 0a01 	add.w	sl, r4, #1
 801a000:	b2b6      	uxth	r6, r6
 801a002:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a006:	f102 0a01 	add.w	sl, r2, #1
 801a00a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801a00e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a012:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a016:	4322      	orrs	r2, r4
 801a018:	1c74      	adds	r4, r6, #1
 801a01a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801a01e:	0976      	lsrs	r6, r6, #5
 801a020:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a024:	4332      	orrs	r2, r6
 801a026:	f821 2b02 	strh.w	r2, [r1], #2
 801a02a:	e7cb      	b.n	8019fc4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801a02c:	4441      	add	r1, r8
 801a02e:	e7c5      	b.n	8019fbc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801a030:	0973      	lsrs	r3, r6, #5
 801a032:	4f22      	ldr	r7, [pc, #136]	; (801a0bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 801a034:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a038:	ea08 0707 	and.w	r7, r8, r7
 801a03c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a040:	433b      	orrs	r3, r7
 801a042:	07e7      	lsls	r7, r4, #31
 801a044:	ea43 0306 	orr.w	r3, r3, r6
 801a048:	b29b      	uxth	r3, r3
 801a04a:	d50b      	bpl.n	801a064 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 801a04c:	0040      	lsls	r0, r0, #1
 801a04e:	0052      	lsls	r2, r2, #1
 801a050:	42a9      	cmp	r1, r5
 801a052:	d231      	bcs.n	801a0b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a054:	180c      	adds	r4, r1, r0
 801a056:	42a1      	cmp	r1, r4
 801a058:	d202      	bcs.n	801a060 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801a05a:	f821 3b02 	strh.w	r3, [r1], #2
 801a05e:	e7fa      	b.n	801a056 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801a060:	4411      	add	r1, r2
 801a062:	e7f5      	b.n	801a050 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 801a064:	078e      	lsls	r6, r1, #30
 801a066:	d008      	beq.n	801a07a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 801a068:	0066      	lsls	r6, r4, #1
 801a06a:	460a      	mov	r2, r1
 801a06c:	42aa      	cmp	r2, r5
 801a06e:	d202      	bcs.n	801a076 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801a070:	8013      	strh	r3, [r2, #0]
 801a072:	4432      	add	r2, r6
 801a074:	e7fa      	b.n	801a06c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801a076:	3102      	adds	r1, #2
 801a078:	3801      	subs	r0, #1
 801a07a:	07c2      	lsls	r2, r0, #31
 801a07c:	d50b      	bpl.n	801a096 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801a07e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801a082:	0066      	lsls	r6, r4, #1
 801a084:	3a01      	subs	r2, #1
 801a086:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801a08a:	42aa      	cmp	r2, r5
 801a08c:	d202      	bcs.n	801a094 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801a08e:	8013      	strh	r3, [r2, #0]
 801a090:	4432      	add	r2, r6
 801a092:	e7fa      	b.n	801a08a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801a094:	3801      	subs	r0, #1
 801a096:	b178      	cbz	r0, 801a0b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a098:	1040      	asrs	r0, r0, #1
 801a09a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801a09e:	0080      	lsls	r0, r0, #2
 801a0a0:	0064      	lsls	r4, r4, #1
 801a0a2:	42a9      	cmp	r1, r5
 801a0a4:	d208      	bcs.n	801a0b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801a0a6:	180e      	adds	r6, r1, r0
 801a0a8:	460a      	mov	r2, r1
 801a0aa:	42b2      	cmp	r2, r6
 801a0ac:	d202      	bcs.n	801a0b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a0ae:	f842 3b04 	str.w	r3, [r2], #4
 801a0b2:	e7fa      	b.n	801a0aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 801a0b4:	4421      	add	r1, r4
 801a0b6:	e7f4      	b.n	801a0a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 801a0b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a0bc:	00fff800 	.word	0x00fff800

0801a0c0 <_ZN8touchgfx8LCD16bppC1Ev>:
 801a0c0:	2200      	movs	r2, #0
 801a0c2:	4912      	ldr	r1, [pc, #72]	; (801a10c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801a0c4:	6042      	str	r2, [r0, #4]
 801a0c6:	6001      	str	r1, [r0, #0]
 801a0c8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801a0cc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801a0d0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801a0d4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801a0d8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801a0dc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801a0e0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801a0e4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801a0e8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801a0ec:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801a0f0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801a0f4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801a0f8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801a0fc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801a100:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801a104:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801a108:	4770      	bx	lr
 801a10a:	bf00      	nop
 801a10c:	080265f0 	.word	0x080265f0

0801a110 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801a110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a114:	b08d      	sub	sp, #52	; 0x34
 801a116:	460d      	mov	r5, r1
 801a118:	4604      	mov	r4, r0
 801a11a:	4699      	mov	r9, r3
 801a11c:	6808      	ldr	r0, [r1, #0]
 801a11e:	ab08      	add	r3, sp, #32
 801a120:	6849      	ldr	r1, [r1, #4]
 801a122:	c303      	stmia	r3!, {r0, r1}
 801a124:	6810      	ldr	r0, [r2, #0]
 801a126:	ab0a      	add	r3, sp, #40	; 0x28
 801a128:	6851      	ldr	r1, [r2, #4]
 801a12a:	c303      	stmia	r3!, {r0, r1}
 801a12c:	a808      	add	r0, sp, #32
 801a12e:	f7f8 fe9f 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a132:	4629      	mov	r1, r5
 801a134:	a80a      	add	r0, sp, #40	; 0x28
 801a136:	4d67      	ldr	r5, [pc, #412]	; (801a2d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801a138:	f7f8 fec2 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a13c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801a140:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801a144:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801a148:	6828      	ldr	r0, [r5, #0]
 801a14a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a14e:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801a152:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801a156:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801a15a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801a15e:	440a      	add	r2, r1
 801a160:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801a164:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801a168:	4413      	add	r3, r2
 801a16a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801a16e:	6803      	ldr	r3, [r0, #0]
 801a170:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a172:	4798      	blx	r3
 801a174:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a178:	d119      	bne.n	801a1ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801a17a:	f010 0f20 	tst.w	r0, #32
 801a17e:	6828      	ldr	r0, [r5, #0]
 801a180:	d018      	beq.n	801a1b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801a182:	2500      	movs	r5, #0
 801a184:	6801      	ldr	r1, [r0, #0]
 801a186:	b2b6      	uxth	r6, r6
 801a188:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801a18c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801a190:	9601      	str	r6, [sp, #4]
 801a192:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801a196:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801a19a:	9502      	str	r5, [sp, #8]
 801a19c:	fa1f f588 	uxth.w	r5, r8
 801a1a0:	9500      	str	r5, [sp, #0]
 801a1a2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801a1a4:	4621      	mov	r1, r4
 801a1a6:	47a8      	blx	r5
 801a1a8:	b00d      	add	sp, #52	; 0x34
 801a1aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1ae:	f010 0f40 	tst.w	r0, #64	; 0x40
 801a1b2:	e7e4      	b.n	801a17e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801a1b4:	6803      	ldr	r3, [r0, #0]
 801a1b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a1b8:	4798      	blx	r3
 801a1ba:	4947      	ldr	r1, [pc, #284]	; (801a2d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801a1bc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801a1c0:	880b      	ldrh	r3, [r1, #0]
 801a1c2:	468a      	mov	sl, r1
 801a1c4:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801a1c8:	fb03 5202 	mla	r2, r3, r2, r5
 801a1cc:	4373      	muls	r3, r6
 801a1ce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a1d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a1d6:	9307      	str	r3, [sp, #28]
 801a1d8:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a1dc:	9306      	str	r3, [sp, #24]
 801a1de:	9b07      	ldr	r3, [sp, #28]
 801a1e0:	4298      	cmp	r0, r3
 801a1e2:	d270      	bcs.n	801a2c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801a1e4:	9b06      	ldr	r3, [sp, #24]
 801a1e6:	4621      	mov	r1, r4
 801a1e8:	eb00 0b03 	add.w	fp, r0, r3
 801a1ec:	4558      	cmp	r0, fp
 801a1ee:	d25d      	bcs.n	801a2ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801a1f0:	f851 4b04 	ldr.w	r4, [r1], #4
 801a1f4:	0e23      	lsrs	r3, r4, #24
 801a1f6:	d014      	beq.n	801a222 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a1f8:	2bff      	cmp	r3, #255	; 0xff
 801a1fa:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801a1fe:	d112      	bne.n	801a226 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a200:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a204:	d10f      	bne.n	801a226 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a206:	0963      	lsrs	r3, r4, #5
 801a208:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801a20c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a210:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a214:	f02c 0c07 	bic.w	ip, ip, #7
 801a218:	ea43 0c0c 	orr.w	ip, r3, ip
 801a21c:	ea4c 0404 	orr.w	r4, ip, r4
 801a220:	8004      	strh	r4, [r0, #0]
 801a222:	3002      	adds	r0, #2
 801a224:	e7e2      	b.n	801a1ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801a226:	fb09 f303 	mul.w	r3, r9, r3
 801a22a:	8807      	ldrh	r7, [r0, #0]
 801a22c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801a230:	fa5f fc8c 	uxtb.w	ip, ip
 801a234:	1c5a      	adds	r2, r3, #1
 801a236:	123e      	asrs	r6, r7, #8
 801a238:	10fd      	asrs	r5, r7, #3
 801a23a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801a23e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a242:	00ff      	lsls	r7, r7, #3
 801a244:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a248:	1212      	asrs	r2, r2, #8
 801a24a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a24e:	b293      	uxth	r3, r2
 801a250:	43d2      	mvns	r2, r2
 801a252:	b2ff      	uxtb	r7, r7
 801a254:	fb1e fe03 	smulbb	lr, lr, r3
 801a258:	b2d2      	uxtb	r2, r2
 801a25a:	fb1c fc03 	smulbb	ip, ip, r3
 801a25e:	b2e4      	uxtb	r4, r4
 801a260:	fb06 e602 	mla	r6, r6, r2, lr
 801a264:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a268:	fb14 f403 	smulbb	r4, r4, r3
 801a26c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801a270:	b2b6      	uxth	r6, r6
 801a272:	fb05 c502 	mla	r5, r5, r2, ip
 801a276:	fb07 4702 	mla	r7, r7, r2, r4
 801a27a:	f106 0e01 	add.w	lr, r6, #1
 801a27e:	b2ad      	uxth	r5, r5
 801a280:	b2bf      	uxth	r7, r7
 801a282:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801a286:	f105 0c01 	add.w	ip, r5, #1
 801a28a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801a28e:	1c7e      	adds	r6, r7, #1
 801a290:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a294:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a298:	096d      	lsrs	r5, r5, #5
 801a29a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a29e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a2a2:	ea46 060e 	orr.w	r6, r6, lr
 801a2a6:	432e      	orrs	r6, r5
 801a2a8:	8006      	strh	r6, [r0, #0]
 801a2aa:	e7ba      	b.n	801a222 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a2ac:	f8ba 3000 	ldrh.w	r3, [sl]
 801a2b0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801a2b4:	eba3 0308 	sub.w	r3, r3, r8
 801a2b8:	eba4 0408 	sub.w	r4, r4, r8
 801a2bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a2c0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801a2c4:	e78b      	b.n	801a1de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801a2c6:	4b03      	ldr	r3, [pc, #12]	; (801a2d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801a2c8:	6818      	ldr	r0, [r3, #0]
 801a2ca:	6803      	ldr	r3, [r0, #0]
 801a2cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a2ce:	4798      	blx	r3
 801a2d0:	e76a      	b.n	801a1a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801a2d2:	bf00      	nop
 801a2d4:	24002074 	.word	0x24002074
 801a2d8:	2400206e 	.word	0x2400206e

0801a2dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801a2dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a2e0:	b085      	sub	sp, #20
 801a2e2:	6810      	ldr	r0, [r2, #0]
 801a2e4:	460c      	mov	r4, r1
 801a2e6:	6851      	ldr	r1, [r2, #4]
 801a2e8:	466d      	mov	r5, sp
 801a2ea:	4616      	mov	r6, r2
 801a2ec:	c503      	stmia	r5!, {r0, r1}
 801a2ee:	6818      	ldr	r0, [r3, #0]
 801a2f0:	6859      	ldr	r1, [r3, #4]
 801a2f2:	c503      	stmia	r5!, {r0, r1}
 801a2f4:	4668      	mov	r0, sp
 801a2f6:	4d2e      	ldr	r5, [pc, #184]	; (801a3b0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801a2f8:	f7f8 fdba 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a2fc:	4631      	mov	r1, r6
 801a2fe:	a802      	add	r0, sp, #8
 801a300:	4e2c      	ldr	r6, [pc, #176]	; (801a3b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801a302:	f7f8 fddd 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a306:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801a30a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801a30e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a312:	6828      	ldr	r0, [r5, #0]
 801a314:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a318:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a31c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801a320:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801a324:	f8bd 1000 	ldrh.w	r1, [sp]
 801a328:	440a      	add	r2, r1
 801a32a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801a32e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a332:	4413      	add	r3, r2
 801a334:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a338:	6803      	ldr	r3, [r0, #0]
 801a33a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a33c:	4798      	blx	r3
 801a33e:	8833      	ldrh	r3, [r6, #0]
 801a340:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801a344:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801a348:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a34c:	f8df e068 	ldr.w	lr, [pc, #104]	; 801a3b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801a350:	fb03 1202 	mla	r2, r3, r2, r1
 801a354:	fb08 f303 	mul.w	r3, r8, r3
 801a358:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a35c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a360:	4298      	cmp	r0, r3
 801a362:	d21d      	bcs.n	801a3a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801a364:	eb00 080c 	add.w	r8, r0, ip
 801a368:	4540      	cmp	r0, r8
 801a36a:	d20f      	bcs.n	801a38c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801a36c:	f854 1b04 	ldr.w	r1, [r4], #4
 801a370:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801a374:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801a378:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801a37c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a380:	ea42 0209 	orr.w	r2, r2, r9
 801a384:	430a      	orrs	r2, r1
 801a386:	f820 2b02 	strh.w	r2, [r0], #2
 801a38a:	e7ed      	b.n	801a368 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801a38c:	8832      	ldrh	r2, [r6, #0]
 801a38e:	1bd2      	subs	r2, r2, r7
 801a390:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a394:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801a398:	1bd2      	subs	r2, r2, r7
 801a39a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801a39e:	e7df      	b.n	801a360 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801a3a0:	6828      	ldr	r0, [r5, #0]
 801a3a2:	6803      	ldr	r3, [r0, #0]
 801a3a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a3a6:	4798      	blx	r3
 801a3a8:	b005      	add	sp, #20
 801a3aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a3ae:	bf00      	nop
 801a3b0:	24002074 	.word	0x24002074
 801a3b4:	2400206e 	.word	0x2400206e
 801a3b8:	fffff800 	.word	0xfffff800

0801a3bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801a3bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a3c0:	b08e      	sub	sp, #56	; 0x38
 801a3c2:	460e      	mov	r6, r1
 801a3c4:	4604      	mov	r4, r0
 801a3c6:	461d      	mov	r5, r3
 801a3c8:	6808      	ldr	r0, [r1, #0]
 801a3ca:	ab0a      	add	r3, sp, #40	; 0x28
 801a3cc:	6849      	ldr	r1, [r1, #4]
 801a3ce:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 801a5a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801a3d2:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 801a5a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801a3d6:	c303      	stmia	r3!, {r0, r1}
 801a3d8:	6810      	ldr	r0, [r2, #0]
 801a3da:	ab0c      	add	r3, sp, #48	; 0x30
 801a3dc:	6851      	ldr	r1, [r2, #4]
 801a3de:	c303      	stmia	r3!, {r0, r1}
 801a3e0:	a80a      	add	r0, sp, #40	; 0x28
 801a3e2:	f7f8 fd45 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a3e6:	4631      	mov	r1, r6
 801a3e8:	a80c      	add	r0, sp, #48	; 0x30
 801a3ea:	f7f8 fd69 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a3ee:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801a3f2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801a3f6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801a3fa:	f8d8 0000 	ldr.w	r0, [r8]
 801a3fe:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a402:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801a406:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801a40a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801a40e:	440c      	add	r4, r1
 801a410:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801a414:	440a      	add	r2, r1
 801a416:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801a41a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801a41e:	4413      	add	r3, r2
 801a420:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a424:	6803      	ldr	r3, [r0, #0]
 801a426:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a428:	4798      	blx	r3
 801a42a:	2dff      	cmp	r5, #255	; 0xff
 801a42c:	d124      	bne.n	801a478 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801a42e:	f010 0f01 	tst.w	r0, #1
 801a432:	f8d8 0000 	ldr.w	r0, [r8]
 801a436:	d022      	beq.n	801a47e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801a438:	2100      	movs	r1, #0
 801a43a:	f04f 0e01 	mov.w	lr, #1
 801a43e:	f8d0 c000 	ldr.w	ip, [r0]
 801a442:	b2b6      	uxth	r6, r6
 801a444:	f8cd e018 	str.w	lr, [sp, #24]
 801a448:	b2bf      	uxth	r7, r7
 801a44a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801a44e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801a452:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801a456:	f8b9 e000 	ldrh.w	lr, [r9]
 801a45a:	9503      	str	r5, [sp, #12]
 801a45c:	9601      	str	r6, [sp, #4]
 801a45e:	9700      	str	r7, [sp, #0]
 801a460:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801a464:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801a468:	9102      	str	r1, [sp, #8]
 801a46a:	4621      	mov	r1, r4
 801a46c:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801a470:	47a8      	blx	r5
 801a472:	b00e      	add	sp, #56	; 0x38
 801a474:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a478:	f010 0f04 	tst.w	r0, #4
 801a47c:	e7d9      	b.n	801a432 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801a47e:	6803      	ldr	r3, [r0, #0]
 801a480:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a482:	4798      	blx	r3
 801a484:	f8b9 3000 	ldrh.w	r3, [r9]
 801a488:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801a48c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801a490:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801a494:	435e      	muls	r6, r3
 801a496:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801a49a:	2dff      	cmp	r5, #255	; 0xff
 801a49c:	fb03 1202 	mla	r2, r3, r2, r1
 801a4a0:	ebac 0c07 	sub.w	ip, ip, r7
 801a4a4:	eba3 0707 	sub.w	r7, r3, r7
 801a4a8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a4ac:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a4b0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a4b4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801a4b8:	d049      	beq.n	801a54e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801a4ba:	43eb      	mvns	r3, r5
 801a4bc:	fa1f f985 	uxth.w	r9, r5
 801a4c0:	b2db      	uxtb	r3, r3
 801a4c2:	42b0      	cmp	r0, r6
 801a4c4:	d266      	bcs.n	801a594 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801a4c6:	eb00 0a0e 	add.w	sl, r0, lr
 801a4ca:	4550      	cmp	r0, sl
 801a4cc:	4621      	mov	r1, r4
 801a4ce:	f104 0403 	add.w	r4, r4, #3
 801a4d2:	d25b      	bcs.n	801a58c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801a4d4:	8802      	ldrh	r2, [r0, #0]
 801a4d6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801a4da:	ea4f 2822 	mov.w	r8, r2, asr #8
 801a4de:	fb11 f109 	smulbb	r1, r1, r9
 801a4e2:	10d5      	asrs	r5, r2, #3
 801a4e4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801a4e8:	00d2      	lsls	r2, r2, #3
 801a4ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a4ee:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801a4f2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a4f6:	fb08 1803 	mla	r8, r8, r3, r1
 801a4fa:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801a4fe:	b2d2      	uxtb	r2, r2
 801a500:	fb11 f109 	smulbb	r1, r1, r9
 801a504:	fa1f f888 	uxth.w	r8, r8
 801a508:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a50c:	fb05 1503 	mla	r5, r5, r3, r1
 801a510:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801a514:	fb11 f109 	smulbb	r1, r1, r9
 801a518:	b2ad      	uxth	r5, r5
 801a51a:	fb02 1203 	mla	r2, r2, r3, r1
 801a51e:	f108 0101 	add.w	r1, r8, #1
 801a522:	b292      	uxth	r2, r2
 801a524:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801a528:	1c51      	adds	r1, r2, #1
 801a52a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801a52e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a532:	1c69      	adds	r1, r5, #1
 801a534:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801a538:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a53c:	096d      	lsrs	r5, r5, #5
 801a53e:	ea42 0208 	orr.w	r2, r2, r8
 801a542:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a546:	432a      	orrs	r2, r5
 801a548:	f820 2b02 	strh.w	r2, [r0], #2
 801a54c:	e7bd      	b.n	801a4ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801a54e:	4a14      	ldr	r2, [pc, #80]	; (801a5a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801a550:	42b0      	cmp	r0, r6
 801a552:	d21f      	bcs.n	801a594 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801a554:	eb00 050e 	add.w	r5, r0, lr
 801a558:	42a8      	cmp	r0, r5
 801a55a:	4621      	mov	r1, r4
 801a55c:	f104 0403 	add.w	r4, r4, #3
 801a560:	d210      	bcs.n	801a584 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801a562:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801a566:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801a56a:	00db      	lsls	r3, r3, #3
 801a56c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801a570:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a574:	430b      	orrs	r3, r1
 801a576:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801a57a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801a57e:	f820 3b02 	strh.w	r3, [r0], #2
 801a582:	e7e9      	b.n	801a558 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801a584:	4438      	add	r0, r7
 801a586:	eb01 040c 	add.w	r4, r1, ip
 801a58a:	e7e1      	b.n	801a550 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801a58c:	4438      	add	r0, r7
 801a58e:	eb01 040c 	add.w	r4, r1, ip
 801a592:	e796      	b.n	801a4c2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801a594:	4b03      	ldr	r3, [pc, #12]	; (801a5a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801a596:	6818      	ldr	r0, [r3, #0]
 801a598:	6803      	ldr	r3, [r0, #0]
 801a59a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a59c:	4798      	blx	r3
 801a59e:	e768      	b.n	801a472 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801a5a0:	fffff800 	.word	0xfffff800
 801a5a4:	24002074 	.word	0x24002074
 801a5a8:	2400206e 	.word	0x2400206e

0801a5ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801a5ac:	b4f0      	push	{r4, r5, r6, r7}
 801a5ae:	4616      	mov	r6, r2
 801a5b0:	461c      	mov	r4, r3
 801a5b2:	460d      	mov	r5, r1
 801a5b4:	9a04      	ldr	r2, [sp, #16]
 801a5b6:	2e01      	cmp	r6, #1
 801a5b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801a5bc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801a5c0:	d012      	beq.n	801a5e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801a5c2:	d303      	bcc.n	801a5cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801a5c4:	2e02      	cmp	r6, #2
 801a5c6:	d00a      	beq.n	801a5de <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801a5c8:	bcf0      	pop	{r4, r5, r6, r7}
 801a5ca:	4770      	bx	lr
 801a5cc:	6805      	ldr	r5, [r0, #0]
 801a5ce:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801a5d2:	68ed      	ldr	r5, [r5, #12]
 801a5d4:	4613      	mov	r3, r2
 801a5d6:	4622      	mov	r2, r4
 801a5d8:	46ac      	mov	ip, r5
 801a5da:	bcf0      	pop	{r4, r5, r6, r7}
 801a5dc:	4760      	bx	ip
 801a5de:	4621      	mov	r1, r4
 801a5e0:	4628      	mov	r0, r5
 801a5e2:	bcf0      	pop	{r4, r5, r6, r7}
 801a5e4:	f7ff bd94 	b.w	801a110 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a5e8:	4621      	mov	r1, r4
 801a5ea:	4628      	mov	r0, r5
 801a5ec:	bcf0      	pop	{r4, r5, r6, r7}
 801a5ee:	f7ff bee5 	b.w	801a3bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801a5f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801a5f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5f8:	b093      	sub	sp, #76	; 0x4c
 801a5fa:	4681      	mov	r9, r0
 801a5fc:	4688      	mov	r8, r1
 801a5fe:	6810      	ldr	r0, [r2, #0]
 801a600:	6851      	ldr	r1, [r2, #4]
 801a602:	ac0e      	add	r4, sp, #56	; 0x38
 801a604:	4616      	mov	r6, r2
 801a606:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801a60a:	4f6b      	ldr	r7, [pc, #428]	; (801a7b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801a60c:	c403      	stmia	r4!, {r0, r1}
 801a60e:	6818      	ldr	r0, [r3, #0]
 801a610:	ac10      	add	r4, sp, #64	; 0x40
 801a612:	6859      	ldr	r1, [r3, #4]
 801a614:	c403      	stmia	r4!, {r0, r1}
 801a616:	a80e      	add	r0, sp, #56	; 0x38
 801a618:	f7f8 fc2a 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a61c:	4631      	mov	r1, r6
 801a61e:	a810      	add	r0, sp, #64	; 0x40
 801a620:	4e66      	ldr	r6, [pc, #408]	; (801a7bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801a622:	f7f8 fc4d 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a626:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801a62a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801a62e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801a632:	6830      	ldr	r0, [r6, #0]
 801a634:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a638:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801a63c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801a640:	4489      	add	r9, r1
 801a642:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801a646:	440a      	add	r2, r1
 801a648:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801a64c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801a650:	4413      	add	r3, r2
 801a652:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801a656:	6803      	ldr	r3, [r0, #0]
 801a658:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a65a:	4798      	blx	r3
 801a65c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801a660:	6830      	ldr	r0, [r6, #0]
 801a662:	d01d      	beq.n	801a6a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801a664:	2200      	movs	r2, #0
 801a666:	6801      	ldr	r1, [r0, #0]
 801a668:	b2a4      	uxth	r4, r4
 801a66a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801a66e:	b2ad      	uxth	r5, r5
 801a670:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801a674:	220b      	movs	r2, #11
 801a676:	9207      	str	r2, [sp, #28]
 801a678:	883a      	ldrh	r2, [r7, #0]
 801a67a:	9502      	str	r5, [sp, #8]
 801a67c:	9206      	str	r2, [sp, #24]
 801a67e:	2201      	movs	r2, #1
 801a680:	9401      	str	r4, [sp, #4]
 801a682:	e9cd a204 	strd	sl, r2, [sp, #16]
 801a686:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801a68a:	9203      	str	r2, [sp, #12]
 801a68c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801a690:	9200      	str	r2, [sp, #0]
 801a692:	4642      	mov	r2, r8
 801a694:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801a696:	4649      	mov	r1, r9
 801a698:	47a0      	blx	r4
 801a69a:	b013      	add	sp, #76	; 0x4c
 801a69c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6a0:	6803      	ldr	r3, [r0, #0]
 801a6a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a6a4:	4798      	blx	r3
 801a6a6:	883b      	ldrh	r3, [r7, #0]
 801a6a8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801a6ac:	f04f 0e04 	mov.w	lr, #4
 801a6b0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801a6b4:	435d      	muls	r5, r3
 801a6b6:	fb03 1202 	mla	r2, r3, r2, r1
 801a6ba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a6be:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801a6c2:	920c      	str	r2, [sp, #48]	; 0x30
 801a6c4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801a6c8:	1b12      	subs	r2, r2, r4
 801a6ca:	920d      	str	r2, [sp, #52]	; 0x34
 801a6cc:	0062      	lsls	r2, r4, #1
 801a6ce:	1b1c      	subs	r4, r3, r4
 801a6d0:	920a      	str	r2, [sp, #40]	; 0x28
 801a6d2:	0063      	lsls	r3, r4, #1
 801a6d4:	930b      	str	r3, [sp, #44]	; 0x2c
 801a6d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a6d8:	4298      	cmp	r0, r3
 801a6da:	d266      	bcs.n	801a7aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801a6dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a6de:	eb00 0b03 	add.w	fp, r0, r3
 801a6e2:	4558      	cmp	r0, fp
 801a6e4:	d25c      	bcs.n	801a7a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801a6e6:	f819 3b01 	ldrb.w	r3, [r9], #1
 801a6ea:	fb1e e303 	smlabb	r3, lr, r3, lr
 801a6ee:	f858 2003 	ldr.w	r2, [r8, r3]
 801a6f2:	0e11      	lsrs	r1, r2, #24
 801a6f4:	d012      	beq.n	801a71c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801a6f6:	29ff      	cmp	r1, #255	; 0xff
 801a6f8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801a6fc:	d110      	bne.n	801a720 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801a6fe:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a702:	d10d      	bne.n	801a720 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801a704:	0953      	lsrs	r3, r2, #5
 801a706:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801a70a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a70e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a712:	f027 0707 	bic.w	r7, r7, #7
 801a716:	431f      	orrs	r7, r3
 801a718:	433a      	orrs	r2, r7
 801a71a:	8002      	strh	r2, [r0, #0]
 801a71c:	3002      	adds	r0, #2
 801a71e:	e7e0      	b.n	801a6e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801a720:	fb0a f101 	mul.w	r1, sl, r1
 801a724:	8806      	ldrh	r6, [r0, #0]
 801a726:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801a72a:	b2d2      	uxtb	r2, r2
 801a72c:	1c4b      	adds	r3, r1, #1
 801a72e:	1235      	asrs	r5, r6, #8
 801a730:	10f4      	asrs	r4, r6, #3
 801a732:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801a736:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a73a:	00f6      	lsls	r6, r6, #3
 801a73c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801a740:	121b      	asrs	r3, r3, #8
 801a742:	b2f6      	uxtb	r6, r6
 801a744:	b299      	uxth	r1, r3
 801a746:	43db      	mvns	r3, r3
 801a748:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801a74c:	fb1c fc01 	smulbb	ip, ip, r1
 801a750:	b2db      	uxtb	r3, r3
 801a752:	fb12 f201 	smulbb	r2, r2, r1
 801a756:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a75a:	fb05 c503 	mla	r5, r5, r3, ip
 801a75e:	b2ff      	uxtb	r7, r7
 801a760:	fb06 2203 	mla	r2, r6, r3, r2
 801a764:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801a768:	fb17 f701 	smulbb	r7, r7, r1
 801a76c:	b2ad      	uxth	r5, r5
 801a76e:	b292      	uxth	r2, r2
 801a770:	fb04 7403 	mla	r4, r4, r3, r7
 801a774:	f105 0c01 	add.w	ip, r5, #1
 801a778:	1c57      	adds	r7, r2, #1
 801a77a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a77e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a782:	b2a4      	uxth	r4, r4
 801a784:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a788:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a78c:	433d      	orrs	r5, r7
 801a78e:	1c67      	adds	r7, r4, #1
 801a790:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801a794:	0964      	lsrs	r4, r4, #5
 801a796:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801a79a:	4325      	orrs	r5, r4
 801a79c:	8005      	strh	r5, [r0, #0]
 801a79e:	e7bd      	b.n	801a71c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801a7a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a7a2:	4418      	add	r0, r3
 801a7a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a7a6:	4499      	add	r9, r3
 801a7a8:	e795      	b.n	801a6d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801a7aa:	4b04      	ldr	r3, [pc, #16]	; (801a7bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801a7ac:	6818      	ldr	r0, [r3, #0]
 801a7ae:	6803      	ldr	r3, [r0, #0]
 801a7b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a7b2:	4798      	blx	r3
 801a7b4:	e771      	b.n	801a69a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801a7b6:	bf00      	nop
 801a7b8:	2400206e 	.word	0x2400206e
 801a7bc:	24002074 	.word	0x24002074

0801a7c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801a7c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7c4:	b087      	sub	sp, #28
 801a7c6:	4680      	mov	r8, r0
 801a7c8:	460d      	mov	r5, r1
 801a7ca:	4614      	mov	r4, r2
 801a7cc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801a7d0:	2e00      	cmp	r6, #0
 801a7d2:	f000 80b9 	beq.w	801a948 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801a7d6:	6810      	ldr	r0, [r2, #0]
 801a7d8:	af02      	add	r7, sp, #8
 801a7da:	6851      	ldr	r1, [r2, #4]
 801a7dc:	c703      	stmia	r7!, {r0, r1}
 801a7de:	6818      	ldr	r0, [r3, #0]
 801a7e0:	af04      	add	r7, sp, #16
 801a7e2:	6859      	ldr	r1, [r3, #4]
 801a7e4:	c703      	stmia	r7!, {r0, r1}
 801a7e6:	a802      	add	r0, sp, #8
 801a7e8:	f7f8 fb42 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a7ec:	4621      	mov	r1, r4
 801a7ee:	a804      	add	r0, sp, #16
 801a7f0:	f7f8 fb66 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a7f4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a7f8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a7fc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801a800:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801a804:	fb14 2103 	smlabb	r1, r4, r3, r2
 801a808:	eb08 0401 	add.w	r4, r8, r1
 801a80c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a810:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801a814:	440a      	add	r2, r1
 801a816:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801a81a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a81e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a822:	4413      	add	r3, r2
 801a824:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a828:	4b49      	ldr	r3, [pc, #292]	; (801a950 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801a82a:	6818      	ldr	r0, [r3, #0]
 801a82c:	6803      	ldr	r3, [r0, #0]
 801a82e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a830:	4798      	blx	r3
 801a832:	4b48      	ldr	r3, [pc, #288]	; (801a954 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801a834:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801a838:	2eff      	cmp	r6, #255	; 0xff
 801a83a:	881a      	ldrh	r2, [r3, #0]
 801a83c:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801a840:	fb02 c101 	mla	r1, r2, r1, ip
 801a844:	fb02 f207 	mul.w	r2, r2, r7
 801a848:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a84c:	f105 0104 	add.w	r1, r5, #4
 801a850:	461d      	mov	r5, r3
 801a852:	d05a      	beq.n	801a90a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801a854:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801a858:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a85c:	b2b6      	uxth	r6, r6
 801a85e:	9301      	str	r3, [sp, #4]
 801a860:	fa1f fe8e 	uxth.w	lr, lr
 801a864:	4282      	cmp	r2, r0
 801a866:	d96a      	bls.n	801a93e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801a868:	eb00 0b0a 	add.w	fp, r0, sl
 801a86c:	4583      	cmp	fp, r0
 801a86e:	d940      	bls.n	801a8f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801a870:	8805      	ldrh	r5, [r0, #0]
 801a872:	f814 3b01 	ldrb.w	r3, [r4], #1
 801a876:	122f      	asrs	r7, r5, #8
 801a878:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801a87c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a880:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a884:	00ed      	lsls	r5, r5, #3
 801a886:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a88a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a88e:	fb17 f70e 	smulbb	r7, r7, lr
 801a892:	b2ed      	uxtb	r5, r5
 801a894:	fb19 f90e 	smulbb	r9, r9, lr
 801a898:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a89c:	fb15 f50e 	smulbb	r5, r5, lr
 801a8a0:	fb0c 7c06 	mla	ip, ip, r6, r7
 801a8a4:	10df      	asrs	r7, r3, #3
 801a8a6:	00db      	lsls	r3, r3, #3
 801a8a8:	fa1f fc8c 	uxth.w	ip, ip
 801a8ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a8b0:	b2db      	uxtb	r3, r3
 801a8b2:	fb07 9706 	mla	r7, r7, r6, r9
 801a8b6:	f10c 0901 	add.w	r9, ip, #1
 801a8ba:	fb03 5306 	mla	r3, r3, r6, r5
 801a8be:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801a8c2:	b29b      	uxth	r3, r3
 801a8c4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801a8c8:	b2bf      	uxth	r7, r7
 801a8ca:	f103 0c01 	add.w	ip, r3, #1
 801a8ce:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a8d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a8d6:	ea4c 0c09 	orr.w	ip, ip, r9
 801a8da:	f107 0901 	add.w	r9, r7, #1
 801a8de:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801a8e2:	097f      	lsrs	r7, r7, #5
 801a8e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a8e8:	ea4c 0c07 	orr.w	ip, ip, r7
 801a8ec:	f820 cb02 	strh.w	ip, [r0], #2
 801a8f0:	e7bc      	b.n	801a86c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801a8f2:	9b01      	ldr	r3, [sp, #4]
 801a8f4:	881b      	ldrh	r3, [r3, #0]
 801a8f6:	eba3 0308 	sub.w	r3, r3, r8
 801a8fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a8fe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801a902:	eba3 0308 	sub.w	r3, r3, r8
 801a906:	441c      	add	r4, r3
 801a908:	e7ac      	b.n	801a864 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801a90a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a90e:	4282      	cmp	r2, r0
 801a910:	d915      	bls.n	801a93e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801a912:	eb00 060a 	add.w	r6, r0, sl
 801a916:	4286      	cmp	r6, r0
 801a918:	d906      	bls.n	801a928 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801a91a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801a91e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801a922:	f820 3b02 	strh.w	r3, [r0], #2
 801a926:	e7f6      	b.n	801a916 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801a928:	882b      	ldrh	r3, [r5, #0]
 801a92a:	eba3 0308 	sub.w	r3, r3, r8
 801a92e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a932:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801a936:	eba3 0308 	sub.w	r3, r3, r8
 801a93a:	441c      	add	r4, r3
 801a93c:	e7e7      	b.n	801a90e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801a93e:	4b04      	ldr	r3, [pc, #16]	; (801a950 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801a940:	6818      	ldr	r0, [r3, #0]
 801a942:	6803      	ldr	r3, [r0, #0]
 801a944:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a946:	4798      	blx	r3
 801a948:	b007      	add	sp, #28
 801a94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a94e:	bf00      	nop
 801a950:	24002074 	.word	0x24002074
 801a954:	2400206e 	.word	0x2400206e

0801a958 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801a958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a95c:	b091      	sub	sp, #68	; 0x44
 801a95e:	4680      	mov	r8, r0
 801a960:	460f      	mov	r7, r1
 801a962:	4614      	mov	r4, r2
 801a964:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801a968:	2d00      	cmp	r5, #0
 801a96a:	d051      	beq.n	801aa10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801a96c:	6810      	ldr	r0, [r2, #0]
 801a96e:	ae0c      	add	r6, sp, #48	; 0x30
 801a970:	6851      	ldr	r1, [r2, #4]
 801a972:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801ab74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801a976:	c603      	stmia	r6!, {r0, r1}
 801a978:	6818      	ldr	r0, [r3, #0]
 801a97a:	ae0e      	add	r6, sp, #56	; 0x38
 801a97c:	6859      	ldr	r1, [r3, #4]
 801a97e:	c603      	stmia	r6!, {r0, r1}
 801a980:	a80c      	add	r0, sp, #48	; 0x30
 801a982:	f7f8 fa75 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a986:	4621      	mov	r1, r4
 801a988:	a80e      	add	r0, sp, #56	; 0x38
 801a98a:	f7f8 fa99 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a98e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801a992:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801a996:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801a99a:	f8d9 0000 	ldr.w	r0, [r9]
 801a99e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a9a2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801a9a6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801a9aa:	eb08 0401 	add.w	r4, r8, r1
 801a9ae:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801a9b2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801ab78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801a9b6:	440a      	add	r2, r1
 801a9b8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801a9bc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801a9c0:	4413      	add	r3, r2
 801a9c2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801a9c6:	6803      	ldr	r3, [r0, #0]
 801a9c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a9ca:	4798      	blx	r3
 801a9cc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801a9d0:	f8d9 0000 	ldr.w	r0, [r9]
 801a9d4:	d01f      	beq.n	801aa16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801a9d6:	2200      	movs	r2, #0
 801a9d8:	6801      	ldr	r1, [r0, #0]
 801a9da:	b2b6      	uxth	r6, r6
 801a9dc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801a9e0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801a9e4:	220b      	movs	r2, #11
 801a9e6:	9207      	str	r2, [sp, #28]
 801a9e8:	f8b8 2000 	ldrh.w	r2, [r8]
 801a9ec:	9601      	str	r6, [sp, #4]
 801a9ee:	9206      	str	r2, [sp, #24]
 801a9f0:	2201      	movs	r2, #1
 801a9f2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801a9f6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801a9fa:	9203      	str	r2, [sp, #12]
 801a9fc:	fa1f f28a 	uxth.w	r2, sl
 801aa00:	9202      	str	r2, [sp, #8]
 801aa02:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801aa06:	9200      	str	r2, [sp, #0]
 801aa08:	463a      	mov	r2, r7
 801aa0a:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801aa0c:	4621      	mov	r1, r4
 801aa0e:	47a8      	blx	r5
 801aa10:	b011      	add	sp, #68	; 0x44
 801aa12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa16:	6803      	ldr	r3, [r0, #0]
 801aa18:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801aa1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aa1e:	4798      	blx	r3
 801aa20:	f8b8 2000 	ldrh.w	r2, [r8]
 801aa24:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801aa28:	2dff      	cmp	r5, #255	; 0xff
 801aa2a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801aa2e:	fb0a fa02 	mul.w	sl, sl, r2
 801aa32:	fb02 1303 	mla	r3, r2, r3, r1
 801aa36:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aa3a:	d062      	beq.n	801ab02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801aa3c:	ea6f 0c05 	mvn.w	ip, r5
 801aa40:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801aa44:	b2ad      	uxth	r5, r5
 801aa46:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801aa4a:	fa5f fc8c 	uxtb.w	ip, ip
 801aa4e:	930a      	str	r3, [sp, #40]	; 0x28
 801aa50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa52:	4298      	cmp	r0, r3
 801aa54:	f080 8085 	bcs.w	801ab62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801aa58:	eb00 0b09 	add.w	fp, r0, r9
 801aa5c:	4558      	cmp	r0, fp
 801aa5e:	d246      	bcs.n	801aaee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801aa60:	f814 eb01 	ldrb.w	lr, [r4], #1
 801aa64:	2303      	movs	r3, #3
 801aa66:	2204      	movs	r2, #4
 801aa68:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801aa6c:	8803      	ldrh	r3, [r0, #0]
 801aa6e:	eb07 0a0e 	add.w	sl, r7, lr
 801aa72:	1219      	asrs	r1, r3, #8
 801aa74:	10da      	asrs	r2, r3, #3
 801aa76:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801aa7a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801aa7e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801aa82:	00db      	lsls	r3, r3, #3
 801aa84:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801aa88:	fb18 f805 	smulbb	r8, r8, r5
 801aa8c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801aa90:	fb1e fe05 	smulbb	lr, lr, r5
 801aa94:	b2db      	uxtb	r3, r3
 801aa96:	fb01 810c 	mla	r1, r1, ip, r8
 801aa9a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801aa9e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801aaa2:	fb18 f805 	smulbb	r8, r8, r5
 801aaa6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801aaaa:	b289      	uxth	r1, r1
 801aaac:	fb02 820c 	mla	r2, r2, ip, r8
 801aab0:	fb03 e30c 	mla	r3, r3, ip, lr
 801aab4:	f101 0801 	add.w	r8, r1, #1
 801aab8:	b292      	uxth	r2, r2
 801aaba:	b29b      	uxth	r3, r3
 801aabc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801aac0:	f102 0801 	add.w	r8, r2, #1
 801aac4:	f103 0e01 	add.w	lr, r3, #1
 801aac8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801aacc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801aad0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801aad4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801aad8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801aadc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801aae0:	ea4e 0101 	orr.w	r1, lr, r1
 801aae4:	ea41 0108 	orr.w	r1, r1, r8
 801aae8:	f820 1b02 	strh.w	r1, [r0], #2
 801aaec:	e7b6      	b.n	801aa5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801aaee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aaf0:	881b      	ldrh	r3, [r3, #0]
 801aaf2:	1b9b      	subs	r3, r3, r6
 801aaf4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aaf8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801aafc:	1b9b      	subs	r3, r3, r6
 801aafe:	441c      	add	r4, r3
 801ab00:	e7a6      	b.n	801aa50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801ab02:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801ab06:	2203      	movs	r2, #3
 801ab08:	2504      	movs	r5, #4
 801ab0a:	4919      	ldr	r1, [pc, #100]	; (801ab70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801ab0c:	4550      	cmp	r0, sl
 801ab0e:	d228      	bcs.n	801ab62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ab10:	eb00 0c09 	add.w	ip, r0, r9
 801ab14:	4560      	cmp	r0, ip
 801ab16:	4623      	mov	r3, r4
 801ab18:	d219      	bcs.n	801ab4e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801ab1a:	f893 e000 	ldrb.w	lr, [r3]
 801ab1e:	3401      	adds	r4, #1
 801ab20:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801ab24:	eb07 0b0e 	add.w	fp, r7, lr
 801ab28:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ab2c:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801ab30:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ab34:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801ab38:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801ab3c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ab40:	ea43 030b 	orr.w	r3, r3, fp
 801ab44:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801ab48:	f820 3b02 	strh.w	r3, [r0], #2
 801ab4c:	e7e2      	b.n	801ab14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801ab4e:	f8b8 3000 	ldrh.w	r3, [r8]
 801ab52:	1b9b      	subs	r3, r3, r6
 801ab54:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ab58:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ab5c:	1b9b      	subs	r3, r3, r6
 801ab5e:	441c      	add	r4, r3
 801ab60:	e7d4      	b.n	801ab0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801ab62:	4b04      	ldr	r3, [pc, #16]	; (801ab74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801ab64:	6818      	ldr	r0, [r3, #0]
 801ab66:	6803      	ldr	r3, [r0, #0]
 801ab68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ab6a:	4798      	blx	r3
 801ab6c:	e750      	b.n	801aa10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ab6e:	bf00      	nop
 801ab70:	fffff800 	.word	0xfffff800
 801ab74:	24002074 	.word	0x24002074
 801ab78:	2400206e 	.word	0x2400206e

0801ab7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801ab7c:	b4f0      	push	{r4, r5, r6, r7}
 801ab7e:	460c      	mov	r4, r1
 801ab80:	4611      	mov	r1, r2
 801ab82:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801ab86:	461a      	mov	r2, r3
 801ab88:	780f      	ldrb	r7, [r1, #0]
 801ab8a:	9b04      	ldr	r3, [sp, #16]
 801ab8c:	2f01      	cmp	r7, #1
 801ab8e:	784e      	ldrb	r6, [r1, #1]
 801ab90:	d036      	beq.n	801ac00 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801ab92:	d31e      	bcc.n	801abd2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801ab94:	2f02      	cmp	r7, #2
 801ab96:	d14a      	bne.n	801ac2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ab98:	2e03      	cmp	r6, #3
 801ab9a:	d848      	bhi.n	801ac2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ab9c:	e8df f006 	tbb	[pc, r6]
 801aba0:	16140702 	.word	0x16140702
 801aba4:	9504      	str	r5, [sp, #16]
 801aba6:	4620      	mov	r0, r4
 801aba8:	bcf0      	pop	{r4, r5, r6, r7}
 801abaa:	f7ff be09 	b.w	801a7c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801abae:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801abb0:	2800      	cmp	r0, #0
 801abb2:	d03c      	beq.n	801ac2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801abb4:	6806      	ldr	r6, [r0, #0]
 801abb6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801abba:	68b5      	ldr	r5, [r6, #8]
 801abbc:	4613      	mov	r3, r2
 801abbe:	46ac      	mov	ip, r5
 801abc0:	460a      	mov	r2, r1
 801abc2:	4621      	mov	r1, r4
 801abc4:	bcf0      	pop	{r4, r5, r6, r7}
 801abc6:	4760      	bx	ip
 801abc8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801abca:	e7f1      	b.n	801abb0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801abcc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801abd0:	e7ee      	b.n	801abb0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801abd2:	2e03      	cmp	r6, #3
 801abd4:	d82b      	bhi.n	801ac2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801abd6:	e8df f006 	tbb	[pc, r6]
 801abda:	0702      	.short	0x0702
 801abdc:	100e      	.short	0x100e
 801abde:	9504      	str	r5, [sp, #16]
 801abe0:	4620      	mov	r0, r4
 801abe2:	bcf0      	pop	{r4, r5, r6, r7}
 801abe4:	f7ff bd06 	b.w	801a5f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801abe8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801abea:	b300      	cbz	r0, 801ac2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801abec:	6806      	ldr	r6, [r0, #0]
 801abee:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801abf2:	68f5      	ldr	r5, [r6, #12]
 801abf4:	e7e2      	b.n	801abbc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801abf6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801abf8:	e7f7      	b.n	801abea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801abfa:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801abfe:	e7f4      	b.n	801abea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801ac00:	2e03      	cmp	r6, #3
 801ac02:	d814      	bhi.n	801ac2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ac04:	e8df f006 	tbb	[pc, r6]
 801ac08:	100e0702 	.word	0x100e0702
 801ac0c:	9504      	str	r5, [sp, #16]
 801ac0e:	4620      	mov	r0, r4
 801ac10:	bcf0      	pop	{r4, r5, r6, r7}
 801ac12:	f7ff bea1 	b.w	801a958 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801ac16:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801ac18:	b148      	cbz	r0, 801ac2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801ac1a:	6806      	ldr	r6, [r0, #0]
 801ac1c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801ac20:	6935      	ldr	r5, [r6, #16]
 801ac22:	e7cb      	b.n	801abbc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801ac24:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801ac26:	e7f7      	b.n	801ac18 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801ac28:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801ac2c:	e7f4      	b.n	801ac18 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801ac2e:	bcf0      	pop	{r4, r5, r6, r7}
 801ac30:	4770      	bx	lr
	...

0801ac34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801ac34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac38:	b087      	sub	sp, #28
 801ac3a:	4604      	mov	r4, r0
 801ac3c:	460e      	mov	r6, r1
 801ac3e:	6810      	ldr	r0, [r2, #0]
 801ac40:	6851      	ldr	r1, [r2, #4]
 801ac42:	ad02      	add	r5, sp, #8
 801ac44:	4617      	mov	r7, r2
 801ac46:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801ac4a:	f8df 9230 	ldr.w	r9, [pc, #560]	; 801ae7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801ac4e:	c503      	stmia	r5!, {r0, r1}
 801ac50:	6818      	ldr	r0, [r3, #0]
 801ac52:	ad04      	add	r5, sp, #16
 801ac54:	6859      	ldr	r1, [r3, #4]
 801ac56:	c503      	stmia	r5!, {r0, r1}
 801ac58:	a802      	add	r0, sp, #8
 801ac5a:	f7f8 f909 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ac5e:	4639      	mov	r1, r7
 801ac60:	a804      	add	r0, sp, #16
 801ac62:	f7f8 f92d 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ac66:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ac6a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ac6e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801ac72:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ac76:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ac7a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801ac7e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801ac82:	440e      	add	r6, r1
 801ac84:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ac88:	440a      	add	r2, r1
 801ac8a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ac8e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ac92:	4413      	add	r3, r2
 801ac94:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ac98:	4b77      	ldr	r3, [pc, #476]	; (801ae78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ac9a:	6818      	ldr	r0, [r3, #0]
 801ac9c:	6803      	ldr	r3, [r0, #0]
 801ac9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801aca0:	4798      	blx	r3
 801aca2:	f8b9 b000 	ldrh.w	fp, [r9]
 801aca6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801acaa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801acae:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801acb2:	fb05 f50b 	mul.w	r5, r5, fp
 801acb6:	fb0b 2303 	mla	r3, fp, r3, r2
 801acba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801acbe:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801acc2:	9300      	str	r3, [sp, #0]
 801acc4:	d069      	beq.n	801ad9a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801acc6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801acca:	4558      	cmp	r0, fp
 801accc:	f080 80cc 	bcs.w	801ae68 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801acd0:	9b00      	ldr	r3, [sp, #0]
 801acd2:	4631      	mov	r1, r6
 801acd4:	18c3      	adds	r3, r0, r3
 801acd6:	9301      	str	r3, [sp, #4]
 801acd8:	9b01      	ldr	r3, [sp, #4]
 801acda:	4298      	cmp	r0, r3
 801acdc:	d24f      	bcs.n	801ad7e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801acde:	f811 2b01 	ldrb.w	r2, [r1], #1
 801ace2:	2a00      	cmp	r2, #0
 801ace4:	d048      	beq.n	801ad78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801ace6:	fb0a f202 	mul.w	r2, sl, r2
 801acea:	1c53      	adds	r3, r2, #1
 801acec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801acf0:	121b      	asrs	r3, r3, #8
 801acf2:	d041      	beq.n	801ad78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801acf4:	8802      	ldrh	r2, [r0, #0]
 801acf6:	b29e      	uxth	r6, r3
 801acf8:	f8b4 c000 	ldrh.w	ip, [r4]
 801acfc:	43db      	mvns	r3, r3
 801acfe:	1215      	asrs	r5, r2, #8
 801ad00:	b2db      	uxtb	r3, r3
 801ad02:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ad06:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ad0a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801ad0e:	fb15 f503 	smulbb	r5, r5, r3
 801ad12:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ad16:	00d2      	lsls	r2, r2, #3
 801ad18:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ad1c:	fb07 5706 	mla	r7, r7, r6, r5
 801ad20:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ad24:	b2d2      	uxtb	r2, r2
 801ad26:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ad2a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ad2e:	fb1e fe03 	smulbb	lr, lr, r3
 801ad32:	b2bf      	uxth	r7, r7
 801ad34:	fb12 f203 	smulbb	r2, r2, r3
 801ad38:	fa5f fc8c 	uxtb.w	ip, ip
 801ad3c:	fb05 e506 	mla	r5, r5, r6, lr
 801ad40:	f107 0e01 	add.w	lr, r7, #1
 801ad44:	fb0c 2c06 	mla	ip, ip, r6, r2
 801ad48:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801ad4c:	fa1f fc8c 	uxth.w	ip, ip
 801ad50:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801ad54:	b2ad      	uxth	r5, r5
 801ad56:	f10c 0701 	add.w	r7, ip, #1
 801ad5a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ad5e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ad62:	ea47 070e 	orr.w	r7, r7, lr
 801ad66:	f105 0e01 	add.w	lr, r5, #1
 801ad6a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ad6e:	096d      	lsrs	r5, r5, #5
 801ad70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ad74:	432f      	orrs	r7, r5
 801ad76:	8007      	strh	r7, [r0, #0]
 801ad78:	3002      	adds	r0, #2
 801ad7a:	3402      	adds	r4, #2
 801ad7c:	e7ac      	b.n	801acd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801ad7e:	f8b9 3000 	ldrh.w	r3, [r9]
 801ad82:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801ad86:	eba3 0308 	sub.w	r3, r3, r8
 801ad8a:	eba6 0608 	sub.w	r6, r6, r8
 801ad8e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ad92:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ad96:	440e      	add	r6, r1
 801ad98:	e797      	b.n	801acca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801ad9a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801ad9e:	42a8      	cmp	r0, r5
 801ada0:	d262      	bcs.n	801ae68 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ada2:	9b00      	ldr	r3, [sp, #0]
 801ada4:	4631      	mov	r1, r6
 801ada6:	eb00 0b03 	add.w	fp, r0, r3
 801adaa:	4558      	cmp	r0, fp
 801adac:	d24e      	bcs.n	801ae4c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801adae:	f811 3b01 	ldrb.w	r3, [r1], #1
 801adb2:	b12b      	cbz	r3, 801adc0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801adb4:	2bff      	cmp	r3, #255	; 0xff
 801adb6:	f8b4 e000 	ldrh.w	lr, [r4]
 801adba:	d104      	bne.n	801adc6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801adbc:	f8a0 e000 	strh.w	lr, [r0]
 801adc0:	3002      	adds	r0, #2
 801adc2:	3402      	adds	r4, #2
 801adc4:	e7f1      	b.n	801adaa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801adc6:	8802      	ldrh	r2, [r0, #0]
 801adc8:	b29f      	uxth	r7, r3
 801adca:	43db      	mvns	r3, r3
 801adcc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801add0:	1216      	asrs	r6, r2, #8
 801add2:	b2db      	uxtb	r3, r3
 801add4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801add8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801addc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801ade0:	00d2      	lsls	r2, r2, #3
 801ade2:	fb16 f603 	smulbb	r6, r6, r3
 801ade6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801adea:	b2d2      	uxtb	r2, r2
 801adec:	fb0c 6c07 	mla	ip, ip, r7, r6
 801adf0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801adf4:	fb1a fa03 	smulbb	sl, sl, r3
 801adf8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801adfc:	fa1f fc8c 	uxth.w	ip, ip
 801ae00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ae04:	fb12 f303 	smulbb	r3, r2, r3
 801ae08:	fa5f fe8e 	uxtb.w	lr, lr
 801ae0c:	fb06 a607 	mla	r6, r6, r7, sl
 801ae10:	f10c 0201 	add.w	r2, ip, #1
 801ae14:	fb0e 3307 	mla	r3, lr, r7, r3
 801ae18:	b2b6      	uxth	r6, r6
 801ae1a:	b29b      	uxth	r3, r3
 801ae1c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ae20:	f106 0a01 	add.w	sl, r6, #1
 801ae24:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801ae28:	f103 0c01 	add.w	ip, r3, #1
 801ae2c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801ae30:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ae34:	0976      	lsrs	r6, r6, #5
 801ae36:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ae3a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ae3e:	ea4c 0c02 	orr.w	ip, ip, r2
 801ae42:	ea4c 0c06 	orr.w	ip, ip, r6
 801ae46:	f8a0 c000 	strh.w	ip, [r0]
 801ae4a:	e7b9      	b.n	801adc0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801ae4c:	f8b9 3000 	ldrh.w	r3, [r9]
 801ae50:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801ae54:	eba3 0308 	sub.w	r3, r3, r8
 801ae58:	eba6 0608 	sub.w	r6, r6, r8
 801ae5c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ae60:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ae64:	440e      	add	r6, r1
 801ae66:	e79a      	b.n	801ad9e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801ae68:	4b03      	ldr	r3, [pc, #12]	; (801ae78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ae6a:	6818      	ldr	r0, [r3, #0]
 801ae6c:	6803      	ldr	r3, [r0, #0]
 801ae6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ae70:	4798      	blx	r3
 801ae72:	b007      	add	sp, #28
 801ae74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae78:	24002074 	.word	0x24002074
 801ae7c:	2400206e 	.word	0x2400206e

0801ae80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801ae80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae84:	b089      	sub	sp, #36	; 0x24
 801ae86:	4682      	mov	sl, r0
 801ae88:	460f      	mov	r7, r1
 801ae8a:	4691      	mov	r9, r2
 801ae8c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801ae90:	4698      	mov	r8, r3
 801ae92:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ae94:	2e00      	cmp	r6, #0
 801ae96:	d03d      	beq.n	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801ae98:	4608      	mov	r0, r1
 801ae9a:	f7fa fe53 	bl	8015b44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ae9e:	4605      	mov	r5, r0
 801aea0:	4638      	mov	r0, r7
 801aea2:	f7fa fe83 	bl	8015bac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801aea6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801aeaa:	4638      	mov	r0, r7
 801aeac:	f8ad 9008 	strh.w	r9, [sp, #8]
 801aeb0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801aeb4:	f8ad 800a 	strh.w	r8, [sp, #10]
 801aeb8:	f7fa ff30 	bl	8015d1c <_ZNK8touchgfx6Bitmap7getDataEv>
 801aebc:	4605      	mov	r5, r0
 801aebe:	4638      	mov	r0, r7
 801aec0:	f7fa ff5c 	bl	8015d7c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801aec4:	4681      	mov	r9, r0
 801aec6:	4638      	mov	r0, r7
 801aec8:	f7fa ffac 	bl	8015e24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801aecc:	280b      	cmp	r0, #11
 801aece:	d821      	bhi.n	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801aed0:	e8df f000 	tbb	[pc, r0]
 801aed4:	2006aebe 	.word	0x2006aebe
 801aed8:	20202020 	.word	0x20202020
 801aedc:	b5202020 	.word	0xb5202020
 801aee0:	4bb0      	ldr	r3, [pc, #704]	; (801b1a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801aee2:	6818      	ldr	r0, [r3, #0]
 801aee4:	6803      	ldr	r3, [r0, #0]
 801aee6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801aee8:	4798      	blx	r3
 801aeea:	2eff      	cmp	r6, #255	; 0xff
 801aeec:	d101      	bne.n	801aef2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801aeee:	0683      	lsls	r3, r0, #26
 801aef0:	d506      	bpl.n	801af00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801aef2:	4633      	mov	r3, r6
 801aef4:	4622      	mov	r2, r4
 801aef6:	a902      	add	r1, sp, #8
 801aef8:	4628      	mov	r0, r5
 801aefa:	f7ff f909 	bl	801a110 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801aefe:	e009      	b.n	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801af00:	4638      	mov	r0, r7
 801af02:	f7fa fed3 	bl	8015cac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801af06:	b940      	cbnz	r0, 801af1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801af08:	4623      	mov	r3, r4
 801af0a:	aa02      	add	r2, sp, #8
 801af0c:	4629      	mov	r1, r5
 801af0e:	4650      	mov	r0, sl
 801af10:	f7ff f9e4 	bl	801a2dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801af14:	b009      	add	sp, #36	; 0x24
 801af16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af1a:	f10d 0818 	add.w	r8, sp, #24
 801af1e:	4639      	mov	r1, r7
 801af20:	af04      	add	r7, sp, #16
 801af22:	4640      	mov	r0, r8
 801af24:	f7fa fe76 	bl	8015c14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801af28:	e898 0003 	ldmia.w	r8, {r0, r1}
 801af2c:	e887 0003 	stmia.w	r7, {r0, r1}
 801af30:	4638      	mov	r0, r7
 801af32:	4621      	mov	r1, r4
 801af34:	f7f4 fe78 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 801af38:	4638      	mov	r0, r7
 801af3a:	f7f4 feb8 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 801af3e:	2800      	cmp	r0, #0
 801af40:	d1d7      	bne.n	801aef2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801af42:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801af46:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801af4a:	4293      	cmp	r3, r2
 801af4c:	dd12      	ble.n	801af74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801af4e:	1a9b      	subs	r3, r3, r2
 801af50:	f9b4 0000 	ldrsh.w	r0, [r4]
 801af54:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801af58:	f8ad 0018 	strh.w	r0, [sp, #24]
 801af5c:	4628      	mov	r0, r5
 801af5e:	f8ad 201a 	strh.w	r2, [sp, #26]
 801af62:	4642      	mov	r2, r8
 801af64:	f8ad 101c 	strh.w	r1, [sp, #28]
 801af68:	a902      	add	r1, sp, #8
 801af6a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801af6e:	4633      	mov	r3, r6
 801af70:	f7ff f8ce 	bl	801a110 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801af74:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801af78:	f9b4 2000 	ldrsh.w	r2, [r4]
 801af7c:	4293      	cmp	r3, r2
 801af7e:	dd12      	ble.n	801afa6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801af80:	1a9b      	subs	r3, r3, r2
 801af82:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801af86:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801af8a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801af8e:	4642      	mov	r2, r8
 801af90:	f8ad 001a 	strh.w	r0, [sp, #26]
 801af94:	4628      	mov	r0, r5
 801af96:	f8ad 301c 	strh.w	r3, [sp, #28]
 801af9a:	23ff      	movs	r3, #255	; 0xff
 801af9c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801afa0:	a902      	add	r1, sp, #8
 801afa2:	f7ff f8b5 	bl	801a110 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801afa6:	463b      	mov	r3, r7
 801afa8:	aa02      	add	r2, sp, #8
 801afaa:	4629      	mov	r1, r5
 801afac:	4650      	mov	r0, sl
 801afae:	f7ff f995 	bl	801a2dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801afb2:	88a2      	ldrh	r2, [r4, #4]
 801afb4:	8823      	ldrh	r3, [r4, #0]
 801afb6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801afba:	4413      	add	r3, r2
 801afbc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801afc0:	440a      	add	r2, r1
 801afc2:	b29b      	uxth	r3, r3
 801afc4:	b292      	uxth	r2, r2
 801afc6:	b218      	sxth	r0, r3
 801afc8:	b211      	sxth	r1, r2
 801afca:	4288      	cmp	r0, r1
 801afcc:	dd12      	ble.n	801aff4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801afce:	1a9b      	subs	r3, r3, r2
 801afd0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801afd4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801afd8:	4642      	mov	r2, r8
 801afda:	f8ad 1018 	strh.w	r1, [sp, #24]
 801afde:	a902      	add	r1, sp, #8
 801afe0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801afe4:	23ff      	movs	r3, #255	; 0xff
 801afe6:	f8ad 001e 	strh.w	r0, [sp, #30]
 801afea:	4628      	mov	r0, r5
 801afec:	f8ad 601a 	strh.w	r6, [sp, #26]
 801aff0:	f7ff f88e 	bl	801a110 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801aff4:	88e2      	ldrh	r2, [r4, #6]
 801aff6:	8863      	ldrh	r3, [r4, #2]
 801aff8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801affc:	4413      	add	r3, r2
 801affe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b002:	440a      	add	r2, r1
 801b004:	b29b      	uxth	r3, r3
 801b006:	b292      	uxth	r2, r2
 801b008:	b218      	sxth	r0, r3
 801b00a:	b211      	sxth	r1, r2
 801b00c:	4288      	cmp	r0, r1
 801b00e:	dd81      	ble.n	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b010:	1a9b      	subs	r3, r3, r2
 801b012:	f9b4 6000 	ldrsh.w	r6, [r4]
 801b016:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b01a:	4642      	mov	r2, r8
 801b01c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b020:	23ff      	movs	r3, #255	; 0xff
 801b022:	f8ad 6018 	strh.w	r6, [sp, #24]
 801b026:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b02a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b02e:	e762      	b.n	801aef6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801b030:	4633      	mov	r3, r6
 801b032:	4622      	mov	r2, r4
 801b034:	a902      	add	r1, sp, #8
 801b036:	4628      	mov	r0, r5
 801b038:	f7ff f9c0 	bl	801a3bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801b03c:	e76a      	b.n	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b03e:	e9cd 4600 	strd	r4, r6, [sp]
 801b042:	ab02      	add	r3, sp, #8
 801b044:	464a      	mov	r2, r9
 801b046:	4629      	mov	r1, r5
 801b048:	4650      	mov	r0, sl
 801b04a:	f7ff fd97 	bl	801ab7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801b04e:	e761      	b.n	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b050:	4638      	mov	r0, r7
 801b052:	f7fa fe2b 	bl	8015cac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b056:	b950      	cbnz	r0, 801b06e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801b058:	f8da 3000 	ldr.w	r3, [sl]
 801b05c:	aa02      	add	r2, sp, #8
 801b05e:	4629      	mov	r1, r5
 801b060:	e9cd 6000 	strd	r6, r0, [sp]
 801b064:	4650      	mov	r0, sl
 801b066:	68de      	ldr	r6, [r3, #12]
 801b068:	4623      	mov	r3, r4
 801b06a:	47b0      	blx	r6
 801b06c:	e752      	b.n	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b06e:	f10d 0818 	add.w	r8, sp, #24
 801b072:	4639      	mov	r1, r7
 801b074:	af04      	add	r7, sp, #16
 801b076:	4640      	mov	r0, r8
 801b078:	f7fa fdcc 	bl	8015c14 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b07c:	e898 0003 	ldmia.w	r8, {r0, r1}
 801b080:	e887 0003 	stmia.w	r7, {r0, r1}
 801b084:	4638      	mov	r0, r7
 801b086:	4621      	mov	r1, r4
 801b088:	f7f4 fdce 	bl	800fc28 <_ZN8touchgfx4RectaNERKS0_>
 801b08c:	4638      	mov	r0, r7
 801b08e:	f7f4 fe0e 	bl	800fcae <_ZNK8touchgfx4Rect7isEmptyEv>
 801b092:	b138      	cbz	r0, 801b0a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801b094:	4623      	mov	r3, r4
 801b096:	9600      	str	r6, [sp, #0]
 801b098:	aa02      	add	r2, sp, #8
 801b09a:	4649      	mov	r1, r9
 801b09c:	4628      	mov	r0, r5
 801b09e:	f7ff fdc9 	bl	801ac34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b0a2:	e737      	b.n	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b0a4:	f8da 3000 	ldr.w	r3, [sl]
 801b0a8:	aa02      	add	r2, sp, #8
 801b0aa:	4629      	mov	r1, r5
 801b0ac:	e9cd 6000 	strd	r6, r0, [sp]
 801b0b0:	4650      	mov	r0, sl
 801b0b2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801b0b6:	463b      	mov	r3, r7
 801b0b8:	47d8      	blx	fp
 801b0ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b0be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b0c2:	4293      	cmp	r3, r2
 801b0c4:	dd13      	ble.n	801b0ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801b0c6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b0ca:	1a9b      	subs	r3, r3, r2
 801b0cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b0d0:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b0d4:	4628      	mov	r0, r5
 801b0d6:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b0da:	aa02      	add	r2, sp, #8
 801b0dc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b0e0:	4649      	mov	r1, r9
 801b0e2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b0e6:	4643      	mov	r3, r8
 801b0e8:	9600      	str	r6, [sp, #0]
 801b0ea:	f7ff fda3 	bl	801ac34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b0ee:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b0f2:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b0f6:	4293      	cmp	r3, r2
 801b0f8:	dd13      	ble.n	801b122 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801b0fa:	1a9b      	subs	r3, r3, r2
 801b0fc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b100:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b104:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b108:	aa02      	add	r2, sp, #8
 801b10a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b10e:	4628      	mov	r0, r5
 801b110:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b114:	4643      	mov	r3, r8
 801b116:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b11a:	4649      	mov	r1, r9
 801b11c:	9600      	str	r6, [sp, #0]
 801b11e:	f7ff fd89 	bl	801ac34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b122:	88a2      	ldrh	r2, [r4, #4]
 801b124:	8823      	ldrh	r3, [r4, #0]
 801b126:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801b12a:	4413      	add	r3, r2
 801b12c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b130:	440a      	add	r2, r1
 801b132:	b29b      	uxth	r3, r3
 801b134:	b292      	uxth	r2, r2
 801b136:	b218      	sxth	r0, r3
 801b138:	b211      	sxth	r1, r2
 801b13a:	4288      	cmp	r0, r1
 801b13c:	dd13      	ble.n	801b166 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801b13e:	1a9b      	subs	r3, r3, r2
 801b140:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801b144:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801b148:	aa02      	add	r2, sp, #8
 801b14a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801b14e:	4649      	mov	r1, r9
 801b150:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b154:	4643      	mov	r3, r8
 801b156:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b15a:	4628      	mov	r0, r5
 801b15c:	9600      	str	r6, [sp, #0]
 801b15e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801b162:	f7ff fd67 	bl	801ac34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b166:	88e2      	ldrh	r2, [r4, #6]
 801b168:	8863      	ldrh	r3, [r4, #2]
 801b16a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b16e:	4413      	add	r3, r2
 801b170:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b174:	440a      	add	r2, r1
 801b176:	b29b      	uxth	r3, r3
 801b178:	b292      	uxth	r2, r2
 801b17a:	b218      	sxth	r0, r3
 801b17c:	b211      	sxth	r1, r2
 801b17e:	4288      	cmp	r0, r1
 801b180:	f77f aec8 	ble.w	801af14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801b184:	f9b4 7000 	ldrsh.w	r7, [r4]
 801b188:	1a9b      	subs	r3, r3, r2
 801b18a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b18e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b192:	4643      	mov	r3, r8
 801b194:	f8ad 7018 	strh.w	r7, [sp, #24]
 801b198:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b19c:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b1a0:	9600      	str	r6, [sp, #0]
 801b1a2:	e779      	b.n	801b098 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801b1a4:	24002074 	.word	0x24002074

0801b1a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801b1a8:	b180      	cbz	r0, 801b1cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801b1aa:	2903      	cmp	r1, #3
 801b1ac:	d81c      	bhi.n	801b1e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b1ae:	e8df f001 	tbb	[pc, r1]
 801b1b2:	1d02      	.short	0x1d02
 801b1b4:	1f08      	.short	0x1f08
 801b1b6:	4b10      	ldr	r3, [pc, #64]	; (801b1f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b1b8:	8818      	ldrh	r0, [r3, #0]
 801b1ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b1be:	4240      	negs	r0, r0
 801b1c0:	4770      	bx	lr
 801b1c2:	4b0d      	ldr	r3, [pc, #52]	; (801b1f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b1c4:	8818      	ldrh	r0, [r3, #0]
 801b1c6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b1ca:	4770      	bx	lr
 801b1cc:	2903      	cmp	r1, #3
 801b1ce:	d80b      	bhi.n	801b1e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b1d0:	a301      	add	r3, pc, #4	; (adr r3, 801b1d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801b1d2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801b1d6:	bf00      	nop
 801b1d8:	0801b1ed 	.word	0x0801b1ed
 801b1dc:	0801b1c3 	.word	0x0801b1c3
 801b1e0:	0801b1f1 	.word	0x0801b1f1
 801b1e4:	0801b1b7 	.word	0x0801b1b7
 801b1e8:	2000      	movs	r0, #0
 801b1ea:	4770      	bx	lr
 801b1ec:	2001      	movs	r0, #1
 801b1ee:	4770      	bx	lr
 801b1f0:	f04f 30ff 	mov.w	r0, #4294967295
 801b1f4:	4770      	bx	lr
 801b1f6:	bf00      	nop
 801b1f8:	2400206e 	.word	0x2400206e

0801b1fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801b1fc:	b180      	cbz	r0, 801b220 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801b1fe:	2903      	cmp	r1, #3
 801b200:	d81c      	bhi.n	801b23c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801b202:	e8df f001 	tbb	[pc, r1]
 801b206:	021d      	.short	0x021d
 801b208:	071f      	.short	0x071f
 801b20a:	4b10      	ldr	r3, [pc, #64]	; (801b24c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b20c:	8818      	ldrh	r0, [r3, #0]
 801b20e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b212:	4770      	bx	lr
 801b214:	4b0d      	ldr	r3, [pc, #52]	; (801b24c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b216:	8818      	ldrh	r0, [r3, #0]
 801b218:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b21c:	4240      	negs	r0, r0
 801b21e:	4770      	bx	lr
 801b220:	2903      	cmp	r1, #3
 801b222:	d80b      	bhi.n	801b23c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801b224:	a301      	add	r3, pc, #4	; (adr r3, 801b22c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801b226:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801b22a:	bf00      	nop
 801b22c:	0801b20b 	.word	0x0801b20b
 801b230:	0801b245 	.word	0x0801b245
 801b234:	0801b215 	.word	0x0801b215
 801b238:	0801b241 	.word	0x0801b241
 801b23c:	2000      	movs	r0, #0
 801b23e:	4770      	bx	lr
 801b240:	2001      	movs	r0, #1
 801b242:	4770      	bx	lr
 801b244:	f04f 30ff 	mov.w	r0, #4294967295
 801b248:	4770      	bx	lr
 801b24a:	bf00      	nop
 801b24c:	2400206e 	.word	0x2400206e

0801b250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801b250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b254:	b099      	sub	sp, #100	; 0x64
 801b256:	910b      	str	r1, [sp, #44]	; 0x2c
 801b258:	a914      	add	r1, sp, #80	; 0x50
 801b25a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801b25e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801b262:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801b266:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801b26a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801b26e:	e881 000c 	stmia.w	r1, {r2, r3}
 801b272:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801b276:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801b27a:	9309      	str	r3, [sp, #36]	; 0x24
 801b27c:	f891 900d 	ldrb.w	r9, [r1, #13]
 801b280:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801b284:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801b288:	9310      	str	r3, [sp, #64]	; 0x40
 801b28a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801b28e:	930c      	str	r3, [sp, #48]	; 0x30
 801b290:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801b294:	798f      	ldrb	r7, [r1, #6]
 801b296:	431f      	orrs	r7, r3
 801b298:	f000 8195 	beq.w	801b5c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b29c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801b2a0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801b2a4:	f891 9007 	ldrb.w	r9, [r1, #7]
 801b2a8:	ea59 0903 	orrs.w	r9, r9, r3
 801b2ac:	f000 818b 	beq.w	801b5c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b2b0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801b2b4:	b29b      	uxth	r3, r3
 801b2b6:	2d00      	cmp	r5, #0
 801b2b8:	f000 812e 	beq.w	801b518 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801b2bc:	1aed      	subs	r5, r5, r3
 801b2be:	b2ad      	uxth	r5, r5
 801b2c0:	042b      	lsls	r3, r5, #16
 801b2c2:	d502      	bpl.n	801b2ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801b2c4:	1b64      	subs	r4, r4, r5
 801b2c6:	2500      	movs	r5, #0
 801b2c8:	b224      	sxth	r4, r4
 801b2ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 801b2ce:	a814      	add	r0, sp, #80	; 0x50
 801b2d0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801b2d4:	428c      	cmp	r4, r1
 801b2d6:	b28b      	uxth	r3, r1
 801b2d8:	bfbf      	itttt	lt
 801b2da:	18ed      	addlt	r5, r5, r3
 801b2dc:	1b2c      	sublt	r4, r5, r4
 801b2de:	b2a5      	uxthlt	r5, r4
 801b2e0:	460c      	movlt	r4, r1
 801b2e2:	8891      	ldrh	r1, [r2, #4]
 801b2e4:	440b      	add	r3, r1
 801b2e6:	4621      	mov	r1, r4
 801b2e8:	b21b      	sxth	r3, r3
 801b2ea:	930f      	str	r3, [sp, #60]	; 0x3c
 801b2ec:	88d3      	ldrh	r3, [r2, #6]
 801b2ee:	8852      	ldrh	r2, [r2, #2]
 801b2f0:	4413      	add	r3, r2
 801b2f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b2f4:	b21b      	sxth	r3, r3
 801b2f6:	930d      	str	r3, [sp, #52]	; 0x34
 801b2f8:	4bbd      	ldr	r3, [pc, #756]	; (801b5f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801b2fa:	f893 b000 	ldrb.w	fp, [r3]
 801b2fe:	f10b 3cff 	add.w	ip, fp, #4294967295
 801b302:	f1dc 0300 	rsbs	r3, ip, #0
 801b306:	eb43 030c 	adc.w	r3, r3, ip
 801b30a:	930e      	str	r3, [sp, #56]	; 0x38
 801b30c:	4653      	mov	r3, sl
 801b30e:	f7f7 fc24 	bl	8012b5a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801b312:	4621      	mov	r1, r4
 801b314:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801b318:	4653      	mov	r3, sl
 801b31a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b31c:	a814      	add	r0, sp, #80	; 0x50
 801b31e:	f7f7 fc39 	bl	8012b94 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801b322:	a918      	add	r1, sp, #96	; 0x60
 801b324:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801b328:	a817      	add	r0, sp, #92	; 0x5c
 801b32a:	f7f7 fd5f 	bl	8012dec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801b32e:	f1ba 0f00 	cmp.w	sl, #0
 801b332:	f040 80f4 	bne.w	801b51e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801b336:	f1bb 0f01 	cmp.w	fp, #1
 801b33a:	f040 80f8 	bne.w	801b52e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801b33e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b340:	2b00      	cmp	r3, #0
 801b342:	f040 8145 	bne.w	801b5d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801b346:	b2ba      	uxth	r2, r7
 801b348:	b905      	cbnz	r5, 801b34c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801b34a:	b16e      	cbz	r6, 801b368 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801b34c:	fb06 5302 	mla	r3, r6, r2, r5
 801b350:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801b352:	4631      	mov	r1, r6
 801b354:	fb08 f303 	mul.w	r3, r8, r3
 801b358:	f003 0607 	and.w	r6, r3, #7
 801b35c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801b360:	9328      	str	r3, [sp, #160]	; 0xa0
 801b362:	eba9 0301 	sub.w	r3, r9, r1
 801b366:	930a      	str	r3, [sp, #40]	; 0x28
 801b368:	4651      	mov	r1, sl
 801b36a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b36c:	f7ff ff1c 	bl	801b1a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801b370:	4681      	mov	r9, r0
 801b372:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b374:	f7ff ff42 	bl	801b1fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801b378:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b37a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b37c:	4683      	mov	fp, r0
 801b37e:	eba3 0a01 	sub.w	sl, r3, r1
 801b382:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b384:	459a      	cmp	sl, r3
 801b386:	bfa8      	it	ge
 801b388:	469a      	movge	sl, r3
 801b38a:	f1ba 0f00 	cmp.w	sl, #0
 801b38e:	f340 811a 	ble.w	801b5c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b392:	1b64      	subs	r4, r4, r5
 801b394:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b396:	1b1c      	subs	r4, r3, r4
 801b398:	42bc      	cmp	r4, r7
 801b39a:	bfd4      	ite	le
 801b39c:	ebc5 0504 	rsble	r5, r5, r4
 801b3a0:	ebc5 0507 	rsbgt	r5, r5, r7
 801b3a4:	2d00      	cmp	r5, #0
 801b3a6:	f340 810e 	ble.w	801b5c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b3aa:	1b52      	subs	r2, r2, r5
 801b3ac:	fb08 f302 	mul.w	r3, r8, r2
 801b3b0:	930f      	str	r3, [sp, #60]	; 0x3c
 801b3b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b3b4:	2b00      	cmp	r3, #0
 801b3b6:	f040 8116 	bne.w	801b5e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801b3ba:	4b8e      	ldr	r3, [pc, #568]	; (801b5f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801b3bc:	6818      	ldr	r0, [r3, #0]
 801b3be:	6803      	ldr	r3, [r0, #0]
 801b3c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b3c2:	4798      	blx	r3
 801b3c4:	2301      	movs	r3, #1
 801b3c6:	4a8c      	ldr	r2, [pc, #560]	; (801b5f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801b3c8:	fa03 f308 	lsl.w	r3, r3, r8
 801b3cc:	8811      	ldrh	r1, [r2, #0]
 801b3ce:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801b3d2:	3b01      	subs	r3, #1
 801b3d4:	b2db      	uxtb	r3, r3
 801b3d6:	930e      	str	r3, [sp, #56]	; 0x38
 801b3d8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801b3dc:	fb01 2303 	mla	r3, r1, r3, r2
 801b3e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b3e4:	930a      	str	r3, [sp, #40]	; 0x28
 801b3e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b3e8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801b3ec:	9313      	str	r3, [sp, #76]	; 0x4c
 801b3ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b3f0:	0a19      	lsrs	r1, r3, #8
 801b3f2:	b2cb      	uxtb	r3, r1
 801b3f4:	9312      	str	r3, [sp, #72]	; 0x48
 801b3f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b3f8:	b2db      	uxtb	r3, r3
 801b3fa:	9311      	str	r3, [sp, #68]	; 0x44
 801b3fc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b3fe:	095a      	lsrs	r2, r3, #5
 801b400:	4b7e      	ldr	r3, [pc, #504]	; (801b5fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801b402:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b406:	400b      	ands	r3, r1
 801b408:	4313      	orrs	r3, r2
 801b40a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b40c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b410:	4313      	orrs	r3, r2
 801b412:	b29b      	uxth	r3, r3
 801b414:	9310      	str	r3, [sp, #64]	; 0x40
 801b416:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b418:	781a      	ldrb	r2, [r3, #0]
 801b41a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801b41e:	fb05 b919 	mls	r9, r5, r9, fp
 801b422:	4132      	asrs	r2, r6
 801b424:	fb03 fb05 	mul.w	fp, r3, r5
 801b428:	930d      	str	r3, [sp, #52]	; 0x34
 801b42a:	b2d2      	uxtb	r2, r2
 801b42c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801b430:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801b434:	f0c0 80f5 	bcc.w	801b622 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801b438:	46ae      	mov	lr, r5
 801b43a:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801b43e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801b442:	f0c0 80dd 	bcc.w	801b600 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801b446:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b448:	4013      	ands	r3, r2
 801b44a:	d055      	beq.n	801b4f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801b44c:	20ff      	movs	r0, #255	; 0xff
 801b44e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b450:	fb90 f1f1 	sdiv	r1, r0, r1
 801b454:	434b      	muls	r3, r1
 801b456:	2bfe      	cmp	r3, #254	; 0xfe
 801b458:	dd03      	ble.n	801b462 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801b45a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b45c:	4281      	cmp	r1, r0
 801b45e:	f000 80c4 	beq.w	801b5ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801b462:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b464:	f8bc 4000 	ldrh.w	r4, [ip]
 801b468:	fb11 f303 	smulbb	r3, r1, r3
 801b46c:	1220      	asrs	r0, r4, #8
 801b46e:	b29b      	uxth	r3, r3
 801b470:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b474:	1c59      	adds	r1, r3, #1
 801b476:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801b47a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b47e:	10e1      	asrs	r1, r4, #3
 801b480:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b484:	00e4      	lsls	r4, r4, #3
 801b486:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b48a:	b29f      	uxth	r7, r3
 801b48c:	43db      	mvns	r3, r3
 801b48e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b492:	b2db      	uxtb	r3, r3
 801b494:	b2e4      	uxtb	r4, r4
 801b496:	9309      	str	r3, [sp, #36]	; 0x24
 801b498:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b49a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b49e:	fb13 f907 	smulbb	r9, r3, r7
 801b4a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4a4:	fb00 9003 	mla	r0, r0, r3, r9
 801b4a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b4aa:	fb13 f907 	smulbb	r9, r3, r7
 801b4ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4b0:	b280      	uxth	r0, r0
 801b4b2:	fb01 9103 	mla	r1, r1, r3, r9
 801b4b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b4b8:	fb13 f707 	smulbb	r7, r3, r7
 801b4bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4be:	b289      	uxth	r1, r1
 801b4c0:	fb04 7403 	mla	r4, r4, r3, r7
 801b4c4:	1c43      	adds	r3, r0, #1
 801b4c6:	b2a4      	uxth	r4, r4
 801b4c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b4cc:	f104 0901 	add.w	r9, r4, #1
 801b4d0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b4d4:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801b4d8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801b4dc:	ea49 0000 	orr.w	r0, r9, r0
 801b4e0:	f101 0901 	add.w	r9, r1, #1
 801b4e4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801b4e8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b4ec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b4f0:	ea40 0009 	orr.w	r0, r0, r9
 801b4f4:	f8ac 0000 	strh.w	r0, [ip]
 801b4f8:	4446      	add	r6, r8
 801b4fa:	b2b6      	uxth	r6, r6
 801b4fc:	2e07      	cmp	r6, #7
 801b4fe:	bf89      	itett	hi
 801b500:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801b502:	fa42 f208 	asrls.w	r2, r2, r8
 801b506:	2600      	movhi	r6, #0
 801b508:	785a      	ldrbhi	r2, [r3, #1]
 801b50a:	bf8a      	itet	hi
 801b50c:	3301      	addhi	r3, #1
 801b50e:	b2d2      	uxtbls	r2, r2
 801b510:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801b512:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b514:	449c      	add	ip, r3
 801b516:	e792      	b.n	801b43e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801b518:	441c      	add	r4, r3
 801b51a:	b224      	sxth	r4, r4
 801b51c:	e6d5      	b.n	801b2ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801b51e:	f1ba 0f01 	cmp.w	sl, #1
 801b522:	f47f af0c 	bne.w	801b33e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801b526:	f1bb 0f01 	cmp.w	fp, #1
 801b52a:	f47f af08 	bne.w	801b33e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801b52e:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 801b5f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801b532:	f8db 0000 	ldr.w	r0, [fp]
 801b536:	6803      	ldr	r3, [r0, #0]
 801b538:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b53a:	4798      	blx	r3
 801b53c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801b540:	465a      	mov	r2, fp
 801b542:	d006      	beq.n	801b552 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801b544:	f1b8 0f04 	cmp.w	r8, #4
 801b548:	d140      	bne.n	801b5cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801b54a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b54c:	3300      	adds	r3, #0
 801b54e:	bf18      	it	ne
 801b550:	2301      	movne	r3, #1
 801b552:	0580      	lsls	r0, r0, #22
 801b554:	d56e      	bpl.n	801b634 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801b556:	f1b8 0f08 	cmp.w	r8, #8
 801b55a:	d16b      	bne.n	801b634 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801b55c:	2b00      	cmp	r3, #0
 801b55e:	bf0c      	ite	eq
 801b560:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801b564:	f44f 7180 	movne.w	r1, #256	; 0x100
 801b568:	2d00      	cmp	r5, #0
 801b56a:	f47f aee8 	bne.w	801b33e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801b56e:	2e00      	cmp	r6, #0
 801b570:	f47f aee5 	bne.w	801b33e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801b574:	19e3      	adds	r3, r4, r7
 801b576:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b578:	4283      	cmp	r3, r0
 801b57a:	f73f aee0 	bgt.w	801b33e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801b57e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b580:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b582:	444b      	add	r3, r9
 801b584:	4283      	cmp	r3, r0
 801b586:	f73f aeda 	bgt.w	801b33e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801b58a:	b2bf      	uxth	r7, r7
 801b58c:	f1b8 0f08 	cmp.w	r8, #8
 801b590:	6810      	ldr	r0, [r2, #0]
 801b592:	f04f 0500 	mov.w	r5, #0
 801b596:	bf18      	it	ne
 801b598:	3701      	addne	r7, #1
 801b59a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801b59e:	6804      	ldr	r4, [r0, #0]
 801b5a0:	bf18      	it	ne
 801b5a2:	f027 0701 	bicne.w	r7, r7, #1
 801b5a6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801b5aa:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801b5ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b5b0:	bf18      	it	ne
 801b5b2:	b2bf      	uxthne	r7, r7
 801b5b4:	9104      	str	r1, [sp, #16]
 801b5b6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801b5b8:	e9cd 7900 	strd	r7, r9, [sp]
 801b5bc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801b5c0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b5c2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801b5c4:	47a0      	blx	r4
 801b5c6:	b019      	add	sp, #100	; 0x64
 801b5c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5cc:	2300      	movs	r3, #0
 801b5ce:	e7c0      	b.n	801b552 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801b5d0:	2208      	movs	r2, #8
 801b5d2:	fb92 f3f8 	sdiv	r3, r2, r8
 801b5d6:	1e5a      	subs	r2, r3, #1
 801b5d8:	443a      	add	r2, r7
 801b5da:	fb92 f2f3 	sdiv	r2, r2, r3
 801b5de:	fb12 f203 	smulbb	r2, r2, r3
 801b5e2:	b292      	uxth	r2, r2
 801b5e4:	e6b0      	b.n	801b348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801b5e6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b5e8:	e6ec      	b.n	801b3c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801b5ea:	9810      	ldr	r0, [sp, #64]	; 0x40
 801b5ec:	e782      	b.n	801b4f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801b5ee:	bf00      	nop
 801b5f0:	2400206c 	.word	0x2400206c
 801b5f4:	24002074 	.word	0x24002074
 801b5f8:	2400206e 	.word	0x2400206e
 801b5fc:	00fff800 	.word	0x00fff800
 801b600:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b602:	b153      	cbz	r3, 801b61a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801b604:	441e      	add	r6, r3
 801b606:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b608:	b2b6      	uxth	r6, r6
 801b60a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801b60e:	f006 0607 	and.w	r6, r6, #7
 801b612:	781a      	ldrb	r2, [r3, #0]
 801b614:	9328      	str	r3, [sp, #160]	; 0xa0
 801b616:	4132      	asrs	r2, r6
 801b618:	b2d2      	uxtb	r2, r2
 801b61a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b61c:	445b      	add	r3, fp
 801b61e:	930a      	str	r3, [sp, #40]	; 0x28
 801b620:	e706      	b.n	801b430 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801b622:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b624:	2b00      	cmp	r3, #0
 801b626:	d1ce      	bne.n	801b5c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b628:	4b05      	ldr	r3, [pc, #20]	; (801b640 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801b62a:	6818      	ldr	r0, [r3, #0]
 801b62c:	6803      	ldr	r3, [r0, #0]
 801b62e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b630:	4798      	blx	r3
 801b632:	e7c8      	b.n	801b5c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801b634:	2b00      	cmp	r3, #0
 801b636:	f43f ae82 	beq.w	801b33e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801b63a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801b63e:	e793      	b.n	801b568 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801b640:	24002074 	.word	0x24002074

0801b644 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801b644:	b538      	push	{r3, r4, r5, lr}
 801b646:	4c15      	ldr	r4, [pc, #84]	; (801b69c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801b648:	4605      	mov	r5, r0
 801b64a:	7823      	ldrb	r3, [r4, #0]
 801b64c:	f3bf 8f5b 	dmb	ish
 801b650:	07da      	lsls	r2, r3, #31
 801b652:	d40b      	bmi.n	801b66c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801b654:	4620      	mov	r0, r4
 801b656:	f007 febe 	bl	80233d6 <__cxa_guard_acquire>
 801b65a:	b138      	cbz	r0, 801b66c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801b65c:	4620      	mov	r0, r4
 801b65e:	f007 fec6 	bl	80233ee <__cxa_guard_release>
 801b662:	4a0f      	ldr	r2, [pc, #60]	; (801b6a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801b664:	490f      	ldr	r1, [pc, #60]	; (801b6a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801b666:	4810      	ldr	r0, [pc, #64]	; (801b6a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801b668:	f007 feae 	bl	80233c8 <__aeabi_atexit>
 801b66c:	4c0f      	ldr	r4, [pc, #60]	; (801b6ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801b66e:	7823      	ldrb	r3, [r4, #0]
 801b670:	f3bf 8f5b 	dmb	ish
 801b674:	07db      	lsls	r3, r3, #31
 801b676:	d40b      	bmi.n	801b690 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801b678:	4620      	mov	r0, r4
 801b67a:	f007 feac 	bl	80233d6 <__cxa_guard_acquire>
 801b67e:	b138      	cbz	r0, 801b690 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801b680:	4620      	mov	r0, r4
 801b682:	f007 feb4 	bl	80233ee <__cxa_guard_release>
 801b686:	4a06      	ldr	r2, [pc, #24]	; (801b6a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801b688:	4909      	ldr	r1, [pc, #36]	; (801b6b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801b68a:	480a      	ldr	r0, [pc, #40]	; (801b6b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801b68c:	f007 fe9c 	bl	80233c8 <__aeabi_atexit>
 801b690:	4b05      	ldr	r3, [pc, #20]	; (801b6a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801b692:	612b      	str	r3, [r5, #16]
 801b694:	4b07      	ldr	r3, [pc, #28]	; (801b6b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801b696:	616b      	str	r3, [r5, #20]
 801b698:	bd38      	pop	{r3, r4, r5, pc}
 801b69a:	bf00      	nop
 801b69c:	2400214c 	.word	0x2400214c
 801b6a0:	24000000 	.word	0x24000000
 801b6a4:	08018439 	.word	0x08018439
 801b6a8:	24000064 	.word	0x24000064
 801b6ac:	24002150 	.word	0x24002150
 801b6b0:	08018437 	.word	0x08018437
 801b6b4:	24000068 	.word	0x24000068

0801b6b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801b6b8:	b538      	push	{r3, r4, r5, lr}
 801b6ba:	4c15      	ldr	r4, [pc, #84]	; (801b710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801b6bc:	4605      	mov	r5, r0
 801b6be:	7823      	ldrb	r3, [r4, #0]
 801b6c0:	f3bf 8f5b 	dmb	ish
 801b6c4:	07da      	lsls	r2, r3, #31
 801b6c6:	d40b      	bmi.n	801b6e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801b6c8:	4620      	mov	r0, r4
 801b6ca:	f007 fe84 	bl	80233d6 <__cxa_guard_acquire>
 801b6ce:	b138      	cbz	r0, 801b6e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801b6d0:	4620      	mov	r0, r4
 801b6d2:	f007 fe8c 	bl	80233ee <__cxa_guard_release>
 801b6d6:	4a0f      	ldr	r2, [pc, #60]	; (801b714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801b6d8:	490f      	ldr	r1, [pc, #60]	; (801b718 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801b6da:	4810      	ldr	r0, [pc, #64]	; (801b71c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801b6dc:	f007 fe74 	bl	80233c8 <__aeabi_atexit>
 801b6e0:	4c0f      	ldr	r4, [pc, #60]	; (801b720 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801b6e2:	7823      	ldrb	r3, [r4, #0]
 801b6e4:	f3bf 8f5b 	dmb	ish
 801b6e8:	07db      	lsls	r3, r3, #31
 801b6ea:	d40b      	bmi.n	801b704 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801b6ec:	4620      	mov	r0, r4
 801b6ee:	f007 fe72 	bl	80233d6 <__cxa_guard_acquire>
 801b6f2:	b138      	cbz	r0, 801b704 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801b6f4:	4620      	mov	r0, r4
 801b6f6:	f007 fe7a 	bl	80233ee <__cxa_guard_release>
 801b6fa:	4a06      	ldr	r2, [pc, #24]	; (801b714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801b6fc:	4909      	ldr	r1, [pc, #36]	; (801b724 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801b6fe:	480a      	ldr	r0, [pc, #40]	; (801b728 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801b700:	f007 fe62 	bl	80233c8 <__aeabi_atexit>
 801b704:	4b05      	ldr	r3, [pc, #20]	; (801b71c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801b706:	60ab      	str	r3, [r5, #8]
 801b708:	4b07      	ldr	r3, [pc, #28]	; (801b728 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801b70a:	60eb      	str	r3, [r5, #12]
 801b70c:	bd38      	pop	{r3, r4, r5, pc}
 801b70e:	bf00      	nop
 801b710:	24002124 	.word	0x24002124
 801b714:	24000000 	.word	0x24000000
 801b718:	0801843d 	.word	0x0801843d
 801b71c:	2400003c 	.word	0x2400003c
 801b720:	24002128 	.word	0x24002128
 801b724:	0801843b 	.word	0x0801843b
 801b728:	24000040 	.word	0x24000040

0801b72c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801b72c:	b510      	push	{r4, lr}
 801b72e:	4604      	mov	r4, r0
 801b730:	f7ff ff88 	bl	801b644 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801b734:	4620      	mov	r0, r4
 801b736:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b73a:	f7ff bfbd 	b.w	801b6b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801b740 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801b740:	b538      	push	{r3, r4, r5, lr}
 801b742:	4c15      	ldr	r4, [pc, #84]	; (801b798 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801b744:	4605      	mov	r5, r0
 801b746:	7823      	ldrb	r3, [r4, #0]
 801b748:	f3bf 8f5b 	dmb	ish
 801b74c:	07da      	lsls	r2, r3, #31
 801b74e:	d40b      	bmi.n	801b768 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801b750:	4620      	mov	r0, r4
 801b752:	f007 fe40 	bl	80233d6 <__cxa_guard_acquire>
 801b756:	b138      	cbz	r0, 801b768 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801b758:	4620      	mov	r0, r4
 801b75a:	f007 fe48 	bl	80233ee <__cxa_guard_release>
 801b75e:	4a0f      	ldr	r2, [pc, #60]	; (801b79c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801b760:	490f      	ldr	r1, [pc, #60]	; (801b7a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801b762:	4810      	ldr	r0, [pc, #64]	; (801b7a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801b764:	f007 fe30 	bl	80233c8 <__aeabi_atexit>
 801b768:	4c0f      	ldr	r4, [pc, #60]	; (801b7a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801b76a:	7823      	ldrb	r3, [r4, #0]
 801b76c:	f3bf 8f5b 	dmb	ish
 801b770:	07db      	lsls	r3, r3, #31
 801b772:	d40b      	bmi.n	801b78c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801b774:	4620      	mov	r0, r4
 801b776:	f007 fe2e 	bl	80233d6 <__cxa_guard_acquire>
 801b77a:	b138      	cbz	r0, 801b78c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801b77c:	4620      	mov	r0, r4
 801b77e:	f007 fe36 	bl	80233ee <__cxa_guard_release>
 801b782:	4a06      	ldr	r2, [pc, #24]	; (801b79c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801b784:	4909      	ldr	r1, [pc, #36]	; (801b7ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801b786:	480a      	ldr	r0, [pc, #40]	; (801b7b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801b788:	f007 fe1e 	bl	80233c8 <__aeabi_atexit>
 801b78c:	4b05      	ldr	r3, [pc, #20]	; (801b7a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801b78e:	622b      	str	r3, [r5, #32]
 801b790:	4b07      	ldr	r3, [pc, #28]	; (801b7b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801b792:	626b      	str	r3, [r5, #36]	; 0x24
 801b794:	bd38      	pop	{r3, r4, r5, pc}
 801b796:	bf00      	nop
 801b798:	24002154 	.word	0x24002154
 801b79c:	24000000 	.word	0x24000000
 801b7a0:	08018431 	.word	0x08018431
 801b7a4:	2400006c 	.word	0x2400006c
 801b7a8:	24002158 	.word	0x24002158
 801b7ac:	0801842f 	.word	0x0801842f
 801b7b0:	24000070 	.word	0x24000070

0801b7b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801b7b4:	b538      	push	{r3, r4, r5, lr}
 801b7b6:	4c15      	ldr	r4, [pc, #84]	; (801b80c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801b7b8:	4605      	mov	r5, r0
 801b7ba:	7823      	ldrb	r3, [r4, #0]
 801b7bc:	f3bf 8f5b 	dmb	ish
 801b7c0:	07da      	lsls	r2, r3, #31
 801b7c2:	d40b      	bmi.n	801b7dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801b7c4:	4620      	mov	r0, r4
 801b7c6:	f007 fe06 	bl	80233d6 <__cxa_guard_acquire>
 801b7ca:	b138      	cbz	r0, 801b7dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801b7cc:	4620      	mov	r0, r4
 801b7ce:	f007 fe0e 	bl	80233ee <__cxa_guard_release>
 801b7d2:	4a0f      	ldr	r2, [pc, #60]	; (801b810 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801b7d4:	490f      	ldr	r1, [pc, #60]	; (801b814 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801b7d6:	4810      	ldr	r0, [pc, #64]	; (801b818 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801b7d8:	f007 fdf6 	bl	80233c8 <__aeabi_atexit>
 801b7dc:	4c0f      	ldr	r4, [pc, #60]	; (801b81c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801b7de:	7823      	ldrb	r3, [r4, #0]
 801b7e0:	f3bf 8f5b 	dmb	ish
 801b7e4:	07db      	lsls	r3, r3, #31
 801b7e6:	d40b      	bmi.n	801b800 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801b7e8:	4620      	mov	r0, r4
 801b7ea:	f007 fdf4 	bl	80233d6 <__cxa_guard_acquire>
 801b7ee:	b138      	cbz	r0, 801b800 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801b7f0:	4620      	mov	r0, r4
 801b7f2:	f007 fdfc 	bl	80233ee <__cxa_guard_release>
 801b7f6:	4a06      	ldr	r2, [pc, #24]	; (801b810 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801b7f8:	4909      	ldr	r1, [pc, #36]	; (801b820 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801b7fa:	480a      	ldr	r0, [pc, #40]	; (801b824 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801b7fc:	f007 fde4 	bl	80233c8 <__aeabi_atexit>
 801b800:	4b05      	ldr	r3, [pc, #20]	; (801b818 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801b802:	61ab      	str	r3, [r5, #24]
 801b804:	4b07      	ldr	r3, [pc, #28]	; (801b824 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801b806:	61eb      	str	r3, [r5, #28]
 801b808:	bd38      	pop	{r3, r4, r5, pc}
 801b80a:	bf00      	nop
 801b80c:	2400212c 	.word	0x2400212c
 801b810:	24000000 	.word	0x24000000
 801b814:	08018435 	.word	0x08018435
 801b818:	24000044 	.word	0x24000044
 801b81c:	24002130 	.word	0x24002130
 801b820:	08018433 	.word	0x08018433
 801b824:	24000048 	.word	0x24000048

0801b828 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801b828:	b510      	push	{r4, lr}
 801b82a:	4604      	mov	r4, r0
 801b82c:	f7ff ff88 	bl	801b740 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801b830:	4620      	mov	r0, r4
 801b832:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b836:	f7ff bfbd 	b.w	801b7b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801b83c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801b83c:	b538      	push	{r3, r4, r5, lr}
 801b83e:	4c15      	ldr	r4, [pc, #84]	; (801b894 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801b840:	4605      	mov	r5, r0
 801b842:	7823      	ldrb	r3, [r4, #0]
 801b844:	f3bf 8f5b 	dmb	ish
 801b848:	07da      	lsls	r2, r3, #31
 801b84a:	d40b      	bmi.n	801b864 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801b84c:	4620      	mov	r0, r4
 801b84e:	f007 fdc2 	bl	80233d6 <__cxa_guard_acquire>
 801b852:	b138      	cbz	r0, 801b864 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801b854:	4620      	mov	r0, r4
 801b856:	f007 fdca 	bl	80233ee <__cxa_guard_release>
 801b85a:	4a0f      	ldr	r2, [pc, #60]	; (801b898 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801b85c:	490f      	ldr	r1, [pc, #60]	; (801b89c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801b85e:	4810      	ldr	r0, [pc, #64]	; (801b8a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801b860:	f007 fdb2 	bl	80233c8 <__aeabi_atexit>
 801b864:	4c0f      	ldr	r4, [pc, #60]	; (801b8a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801b866:	7823      	ldrb	r3, [r4, #0]
 801b868:	f3bf 8f5b 	dmb	ish
 801b86c:	07db      	lsls	r3, r3, #31
 801b86e:	d40b      	bmi.n	801b888 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801b870:	4620      	mov	r0, r4
 801b872:	f007 fdb0 	bl	80233d6 <__cxa_guard_acquire>
 801b876:	b138      	cbz	r0, 801b888 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801b878:	4620      	mov	r0, r4
 801b87a:	f007 fdb8 	bl	80233ee <__cxa_guard_release>
 801b87e:	4a06      	ldr	r2, [pc, #24]	; (801b898 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801b880:	4909      	ldr	r1, [pc, #36]	; (801b8a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801b882:	480a      	ldr	r0, [pc, #40]	; (801b8ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801b884:	f007 fda0 	bl	80233c8 <__aeabi_atexit>
 801b888:	4b05      	ldr	r3, [pc, #20]	; (801b8a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801b88a:	632b      	str	r3, [r5, #48]	; 0x30
 801b88c:	4b07      	ldr	r3, [pc, #28]	; (801b8ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801b88e:	636b      	str	r3, [r5, #52]	; 0x34
 801b890:	bd38      	pop	{r3, r4, r5, pc}
 801b892:	bf00      	nop
 801b894:	24002164 	.word	0x24002164
 801b898:	24000000 	.word	0x24000000
 801b89c:	08018429 	.word	0x08018429
 801b8a0:	2400007c 	.word	0x2400007c
 801b8a4:	24002168 	.word	0x24002168
 801b8a8:	08018427 	.word	0x08018427
 801b8ac:	24000080 	.word	0x24000080

0801b8b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801b8b0:	b538      	push	{r3, r4, r5, lr}
 801b8b2:	4c15      	ldr	r4, [pc, #84]	; (801b908 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801b8b4:	4605      	mov	r5, r0
 801b8b6:	7823      	ldrb	r3, [r4, #0]
 801b8b8:	f3bf 8f5b 	dmb	ish
 801b8bc:	07da      	lsls	r2, r3, #31
 801b8be:	d40b      	bmi.n	801b8d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801b8c0:	4620      	mov	r0, r4
 801b8c2:	f007 fd88 	bl	80233d6 <__cxa_guard_acquire>
 801b8c6:	b138      	cbz	r0, 801b8d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801b8c8:	4620      	mov	r0, r4
 801b8ca:	f007 fd90 	bl	80233ee <__cxa_guard_release>
 801b8ce:	4a0f      	ldr	r2, [pc, #60]	; (801b90c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801b8d0:	490f      	ldr	r1, [pc, #60]	; (801b910 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801b8d2:	4810      	ldr	r0, [pc, #64]	; (801b914 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801b8d4:	f007 fd78 	bl	80233c8 <__aeabi_atexit>
 801b8d8:	4c0f      	ldr	r4, [pc, #60]	; (801b918 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801b8da:	7823      	ldrb	r3, [r4, #0]
 801b8dc:	f3bf 8f5b 	dmb	ish
 801b8e0:	07db      	lsls	r3, r3, #31
 801b8e2:	d40b      	bmi.n	801b8fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801b8e4:	4620      	mov	r0, r4
 801b8e6:	f007 fd76 	bl	80233d6 <__cxa_guard_acquire>
 801b8ea:	b138      	cbz	r0, 801b8fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801b8ec:	4620      	mov	r0, r4
 801b8ee:	f007 fd7e 	bl	80233ee <__cxa_guard_release>
 801b8f2:	4a06      	ldr	r2, [pc, #24]	; (801b90c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801b8f4:	4909      	ldr	r1, [pc, #36]	; (801b91c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801b8f6:	480a      	ldr	r0, [pc, #40]	; (801b920 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801b8f8:	f007 fd66 	bl	80233c8 <__aeabi_atexit>
 801b8fc:	4b05      	ldr	r3, [pc, #20]	; (801b914 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801b8fe:	62ab      	str	r3, [r5, #40]	; 0x28
 801b900:	4b07      	ldr	r3, [pc, #28]	; (801b920 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801b902:	62eb      	str	r3, [r5, #44]	; 0x2c
 801b904:	bd38      	pop	{r3, r4, r5, pc}
 801b906:	bf00      	nop
 801b908:	24002134 	.word	0x24002134
 801b90c:	24000000 	.word	0x24000000
 801b910:	0801842d 	.word	0x0801842d
 801b914:	2400004c 	.word	0x2400004c
 801b918:	24002138 	.word	0x24002138
 801b91c:	0801842b 	.word	0x0801842b
 801b920:	24000050 	.word	0x24000050

0801b924 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801b924:	b510      	push	{r4, lr}
 801b926:	4604      	mov	r4, r0
 801b928:	f7ff ff88 	bl	801b83c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801b92c:	4620      	mov	r0, r4
 801b92e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b932:	f7ff bfbd 	b.w	801b8b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801b938 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801b938:	b538      	push	{r3, r4, r5, lr}
 801b93a:	4c15      	ldr	r4, [pc, #84]	; (801b990 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801b93c:	4605      	mov	r5, r0
 801b93e:	7823      	ldrb	r3, [r4, #0]
 801b940:	f3bf 8f5b 	dmb	ish
 801b944:	07da      	lsls	r2, r3, #31
 801b946:	d40b      	bmi.n	801b960 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b948:	4620      	mov	r0, r4
 801b94a:	f007 fd44 	bl	80233d6 <__cxa_guard_acquire>
 801b94e:	b138      	cbz	r0, 801b960 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b950:	4620      	mov	r0, r4
 801b952:	f007 fd4c 	bl	80233ee <__cxa_guard_release>
 801b956:	4a0f      	ldr	r2, [pc, #60]	; (801b994 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b958:	490f      	ldr	r1, [pc, #60]	; (801b998 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801b95a:	4810      	ldr	r0, [pc, #64]	; (801b99c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b95c:	f007 fd34 	bl	80233c8 <__aeabi_atexit>
 801b960:	4c0f      	ldr	r4, [pc, #60]	; (801b9a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801b962:	7823      	ldrb	r3, [r4, #0]
 801b964:	f3bf 8f5b 	dmb	ish
 801b968:	07db      	lsls	r3, r3, #31
 801b96a:	d40b      	bmi.n	801b984 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b96c:	4620      	mov	r0, r4
 801b96e:	f007 fd32 	bl	80233d6 <__cxa_guard_acquire>
 801b972:	b138      	cbz	r0, 801b984 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b974:	4620      	mov	r0, r4
 801b976:	f007 fd3a 	bl	80233ee <__cxa_guard_release>
 801b97a:	4a06      	ldr	r2, [pc, #24]	; (801b994 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b97c:	4909      	ldr	r1, [pc, #36]	; (801b9a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801b97e:	480a      	ldr	r0, [pc, #40]	; (801b9a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b980:	f007 fd22 	bl	80233c8 <__aeabi_atexit>
 801b984:	4b05      	ldr	r3, [pc, #20]	; (801b99c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b986:	652b      	str	r3, [r5, #80]	; 0x50
 801b988:	4b07      	ldr	r3, [pc, #28]	; (801b9a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b98a:	656b      	str	r3, [r5, #84]	; 0x54
 801b98c:	bd38      	pop	{r3, r4, r5, pc}
 801b98e:	bf00      	nop
 801b990:	2400216c 	.word	0x2400216c
 801b994:	24000000 	.word	0x24000000
 801b998:	08018419 	.word	0x08018419
 801b99c:	24000084 	.word	0x24000084
 801b9a0:	24002170 	.word	0x24002170
 801b9a4:	08018417 	.word	0x08018417
 801b9a8:	24000088 	.word	0x24000088

0801b9ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801b9ac:	b538      	push	{r3, r4, r5, lr}
 801b9ae:	4c15      	ldr	r4, [pc, #84]	; (801ba04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801b9b0:	4605      	mov	r5, r0
 801b9b2:	7823      	ldrb	r3, [r4, #0]
 801b9b4:	f3bf 8f5b 	dmb	ish
 801b9b8:	07da      	lsls	r2, r3, #31
 801b9ba:	d40b      	bmi.n	801b9d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b9bc:	4620      	mov	r0, r4
 801b9be:	f007 fd0a 	bl	80233d6 <__cxa_guard_acquire>
 801b9c2:	b138      	cbz	r0, 801b9d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b9c4:	4620      	mov	r0, r4
 801b9c6:	f007 fd12 	bl	80233ee <__cxa_guard_release>
 801b9ca:	4a0f      	ldr	r2, [pc, #60]	; (801ba08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b9cc:	490f      	ldr	r1, [pc, #60]	; (801ba0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801b9ce:	4810      	ldr	r0, [pc, #64]	; (801ba10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b9d0:	f007 fcfa 	bl	80233c8 <__aeabi_atexit>
 801b9d4:	4c0f      	ldr	r4, [pc, #60]	; (801ba14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801b9d6:	7823      	ldrb	r3, [r4, #0]
 801b9d8:	f3bf 8f5b 	dmb	ish
 801b9dc:	07db      	lsls	r3, r3, #31
 801b9de:	d40b      	bmi.n	801b9f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b9e0:	4620      	mov	r0, r4
 801b9e2:	f007 fcf8 	bl	80233d6 <__cxa_guard_acquire>
 801b9e6:	b138      	cbz	r0, 801b9f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b9e8:	4620      	mov	r0, r4
 801b9ea:	f007 fd00 	bl	80233ee <__cxa_guard_release>
 801b9ee:	4a06      	ldr	r2, [pc, #24]	; (801ba08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b9f0:	4909      	ldr	r1, [pc, #36]	; (801ba18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801b9f2:	480a      	ldr	r0, [pc, #40]	; (801ba1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b9f4:	f007 fce8 	bl	80233c8 <__aeabi_atexit>
 801b9f8:	4b05      	ldr	r3, [pc, #20]	; (801ba10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b9fa:	64ab      	str	r3, [r5, #72]	; 0x48
 801b9fc:	4b07      	ldr	r3, [pc, #28]	; (801ba1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b9fe:	64eb      	str	r3, [r5, #76]	; 0x4c
 801ba00:	bd38      	pop	{r3, r4, r5, pc}
 801ba02:	bf00      	nop
 801ba04:	24002174 	.word	0x24002174
 801ba08:	24000000 	.word	0x24000000
 801ba0c:	0801841d 	.word	0x0801841d
 801ba10:	2400008c 	.word	0x2400008c
 801ba14:	24002178 	.word	0x24002178
 801ba18:	0801841b 	.word	0x0801841b
 801ba1c:	24000090 	.word	0x24000090

0801ba20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ba20:	b538      	push	{r3, r4, r5, lr}
 801ba22:	4c15      	ldr	r4, [pc, #84]	; (801ba78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801ba24:	4605      	mov	r5, r0
 801ba26:	7823      	ldrb	r3, [r4, #0]
 801ba28:	f3bf 8f5b 	dmb	ish
 801ba2c:	07da      	lsls	r2, r3, #31
 801ba2e:	d40b      	bmi.n	801ba48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ba30:	4620      	mov	r0, r4
 801ba32:	f007 fcd0 	bl	80233d6 <__cxa_guard_acquire>
 801ba36:	b138      	cbz	r0, 801ba48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ba38:	4620      	mov	r0, r4
 801ba3a:	f007 fcd8 	bl	80233ee <__cxa_guard_release>
 801ba3e:	4a0f      	ldr	r2, [pc, #60]	; (801ba7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ba40:	490f      	ldr	r1, [pc, #60]	; (801ba80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ba42:	4810      	ldr	r0, [pc, #64]	; (801ba84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ba44:	f007 fcc0 	bl	80233c8 <__aeabi_atexit>
 801ba48:	4c0f      	ldr	r4, [pc, #60]	; (801ba88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801ba4a:	7823      	ldrb	r3, [r4, #0]
 801ba4c:	f3bf 8f5b 	dmb	ish
 801ba50:	07db      	lsls	r3, r3, #31
 801ba52:	d40b      	bmi.n	801ba6c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ba54:	4620      	mov	r0, r4
 801ba56:	f007 fcbe 	bl	80233d6 <__cxa_guard_acquire>
 801ba5a:	b138      	cbz	r0, 801ba6c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ba5c:	4620      	mov	r0, r4
 801ba5e:	f007 fcc6 	bl	80233ee <__cxa_guard_release>
 801ba62:	4a06      	ldr	r2, [pc, #24]	; (801ba7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ba64:	4909      	ldr	r1, [pc, #36]	; (801ba8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801ba66:	480a      	ldr	r0, [pc, #40]	; (801ba90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ba68:	f007 fcae 	bl	80233c8 <__aeabi_atexit>
 801ba6c:	4b05      	ldr	r3, [pc, #20]	; (801ba84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ba6e:	642b      	str	r3, [r5, #64]	; 0x40
 801ba70:	4b07      	ldr	r3, [pc, #28]	; (801ba90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ba72:	646b      	str	r3, [r5, #68]	; 0x44
 801ba74:	bd38      	pop	{r3, r4, r5, pc}
 801ba76:	bf00      	nop
 801ba78:	2400213c 	.word	0x2400213c
 801ba7c:	24000000 	.word	0x24000000
 801ba80:	08018421 	.word	0x08018421
 801ba84:	24000054 	.word	0x24000054
 801ba88:	24002140 	.word	0x24002140
 801ba8c:	0801841f 	.word	0x0801841f
 801ba90:	24000058 	.word	0x24000058

0801ba94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801ba94:	b538      	push	{r3, r4, r5, lr}
 801ba96:	4c15      	ldr	r4, [pc, #84]	; (801baec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801ba98:	4605      	mov	r5, r0
 801ba9a:	7823      	ldrb	r3, [r4, #0]
 801ba9c:	f3bf 8f5b 	dmb	ish
 801baa0:	07da      	lsls	r2, r3, #31
 801baa2:	d40b      	bmi.n	801babc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801baa4:	4620      	mov	r0, r4
 801baa6:	f007 fc96 	bl	80233d6 <__cxa_guard_acquire>
 801baaa:	b138      	cbz	r0, 801babc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801baac:	4620      	mov	r0, r4
 801baae:	f007 fc9e 	bl	80233ee <__cxa_guard_release>
 801bab2:	4a0f      	ldr	r2, [pc, #60]	; (801baf0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801bab4:	490f      	ldr	r1, [pc, #60]	; (801baf4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801bab6:	4810      	ldr	r0, [pc, #64]	; (801baf8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801bab8:	f007 fc86 	bl	80233c8 <__aeabi_atexit>
 801babc:	4c0f      	ldr	r4, [pc, #60]	; (801bafc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801babe:	7823      	ldrb	r3, [r4, #0]
 801bac0:	f3bf 8f5b 	dmb	ish
 801bac4:	07db      	lsls	r3, r3, #31
 801bac6:	d40b      	bmi.n	801bae0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801bac8:	4620      	mov	r0, r4
 801baca:	f007 fc84 	bl	80233d6 <__cxa_guard_acquire>
 801bace:	b138      	cbz	r0, 801bae0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801bad0:	4620      	mov	r0, r4
 801bad2:	f007 fc8c 	bl	80233ee <__cxa_guard_release>
 801bad6:	4a06      	ldr	r2, [pc, #24]	; (801baf0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801bad8:	4909      	ldr	r1, [pc, #36]	; (801bb00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801bada:	480a      	ldr	r0, [pc, #40]	; (801bb04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801badc:	f007 fc74 	bl	80233c8 <__aeabi_atexit>
 801bae0:	4b05      	ldr	r3, [pc, #20]	; (801baf8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801bae2:	63ab      	str	r3, [r5, #56]	; 0x38
 801bae4:	4b07      	ldr	r3, [pc, #28]	; (801bb04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801bae6:	63eb      	str	r3, [r5, #60]	; 0x3c
 801bae8:	bd38      	pop	{r3, r4, r5, pc}
 801baea:	bf00      	nop
 801baec:	2400215c 	.word	0x2400215c
 801baf0:	24000000 	.word	0x24000000
 801baf4:	08018425 	.word	0x08018425
 801baf8:	24000074 	.word	0x24000074
 801bafc:	24002160 	.word	0x24002160
 801bb00:	08018423 	.word	0x08018423
 801bb04:	24000078 	.word	0x24000078

0801bb08 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801bb08:	b510      	push	{r4, lr}
 801bb0a:	4604      	mov	r4, r0
 801bb0c:	f7ff ff14 	bl	801b938 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801bb10:	4620      	mov	r0, r4
 801bb12:	f7ff ff85 	bl	801ba20 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801bb16:	4620      	mov	r0, r4
 801bb18:	f7ff ff48 	bl	801b9ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801bb1c:	4620      	mov	r0, r4
 801bb1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bb22:	f7ff bfb7 	b.w	801ba94 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801bb28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801bb28:	b538      	push	{r3, r4, r5, lr}
 801bb2a:	4c15      	ldr	r4, [pc, #84]	; (801bb80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801bb2c:	4605      	mov	r5, r0
 801bb2e:	7823      	ldrb	r3, [r4, #0]
 801bb30:	f3bf 8f5b 	dmb	ish
 801bb34:	07da      	lsls	r2, r3, #31
 801bb36:	d40b      	bmi.n	801bb50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801bb38:	4620      	mov	r0, r4
 801bb3a:	f007 fc4c 	bl	80233d6 <__cxa_guard_acquire>
 801bb3e:	b138      	cbz	r0, 801bb50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801bb40:	4620      	mov	r0, r4
 801bb42:	f007 fc54 	bl	80233ee <__cxa_guard_release>
 801bb46:	4a0f      	ldr	r2, [pc, #60]	; (801bb84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801bb48:	490f      	ldr	r1, [pc, #60]	; (801bb88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801bb4a:	4810      	ldr	r0, [pc, #64]	; (801bb8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801bb4c:	f007 fc3c 	bl	80233c8 <__aeabi_atexit>
 801bb50:	4c0f      	ldr	r4, [pc, #60]	; (801bb90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801bb52:	7823      	ldrb	r3, [r4, #0]
 801bb54:	f3bf 8f5b 	dmb	ish
 801bb58:	07db      	lsls	r3, r3, #31
 801bb5a:	d40b      	bmi.n	801bb74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801bb5c:	4620      	mov	r0, r4
 801bb5e:	f007 fc3a 	bl	80233d6 <__cxa_guard_acquire>
 801bb62:	b138      	cbz	r0, 801bb74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801bb64:	4620      	mov	r0, r4
 801bb66:	f007 fc42 	bl	80233ee <__cxa_guard_release>
 801bb6a:	4a06      	ldr	r2, [pc, #24]	; (801bb84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801bb6c:	4909      	ldr	r1, [pc, #36]	; (801bb94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801bb6e:	480a      	ldr	r0, [pc, #40]	; (801bb98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801bb70:	f007 fc2a 	bl	80233c8 <__aeabi_atexit>
 801bb74:	4b05      	ldr	r3, [pc, #20]	; (801bb8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801bb76:	662b      	str	r3, [r5, #96]	; 0x60
 801bb78:	4b07      	ldr	r3, [pc, #28]	; (801bb98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801bb7a:	666b      	str	r3, [r5, #100]	; 0x64
 801bb7c:	bd38      	pop	{r3, r4, r5, pc}
 801bb7e:	bf00      	nop
 801bb80:	24002144 	.word	0x24002144
 801bb84:	24000000 	.word	0x24000000
 801bb88:	08018411 	.word	0x08018411
 801bb8c:	2400005c 	.word	0x2400005c
 801bb90:	24002148 	.word	0x24002148
 801bb94:	0801840f 	.word	0x0801840f
 801bb98:	24000060 	.word	0x24000060

0801bb9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801bb9c:	b538      	push	{r3, r4, r5, lr}
 801bb9e:	4c15      	ldr	r4, [pc, #84]	; (801bbf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801bba0:	4605      	mov	r5, r0
 801bba2:	7823      	ldrb	r3, [r4, #0]
 801bba4:	f3bf 8f5b 	dmb	ish
 801bba8:	07da      	lsls	r2, r3, #31
 801bbaa:	d40b      	bmi.n	801bbc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801bbac:	4620      	mov	r0, r4
 801bbae:	f007 fc12 	bl	80233d6 <__cxa_guard_acquire>
 801bbb2:	b138      	cbz	r0, 801bbc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801bbb4:	4620      	mov	r0, r4
 801bbb6:	f007 fc1a 	bl	80233ee <__cxa_guard_release>
 801bbba:	4a0f      	ldr	r2, [pc, #60]	; (801bbf8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801bbbc:	490f      	ldr	r1, [pc, #60]	; (801bbfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801bbbe:	4810      	ldr	r0, [pc, #64]	; (801bc00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801bbc0:	f007 fc02 	bl	80233c8 <__aeabi_atexit>
 801bbc4:	4c0f      	ldr	r4, [pc, #60]	; (801bc04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801bbc6:	7823      	ldrb	r3, [r4, #0]
 801bbc8:	f3bf 8f5b 	dmb	ish
 801bbcc:	07db      	lsls	r3, r3, #31
 801bbce:	d40b      	bmi.n	801bbe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801bbd0:	4620      	mov	r0, r4
 801bbd2:	f007 fc00 	bl	80233d6 <__cxa_guard_acquire>
 801bbd6:	b138      	cbz	r0, 801bbe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801bbd8:	4620      	mov	r0, r4
 801bbda:	f007 fc08 	bl	80233ee <__cxa_guard_release>
 801bbde:	4a06      	ldr	r2, [pc, #24]	; (801bbf8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801bbe0:	4909      	ldr	r1, [pc, #36]	; (801bc08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801bbe2:	480a      	ldr	r0, [pc, #40]	; (801bc0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801bbe4:	f007 fbf0 	bl	80233c8 <__aeabi_atexit>
 801bbe8:	4b05      	ldr	r3, [pc, #20]	; (801bc00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801bbea:	65ab      	str	r3, [r5, #88]	; 0x58
 801bbec:	4b07      	ldr	r3, [pc, #28]	; (801bc0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801bbee:	65eb      	str	r3, [r5, #92]	; 0x5c
 801bbf0:	bd38      	pop	{r3, r4, r5, pc}
 801bbf2:	bf00      	nop
 801bbf4:	2400211c 	.word	0x2400211c
 801bbf8:	24000000 	.word	0x24000000
 801bbfc:	08018415 	.word	0x08018415
 801bc00:	24000034 	.word	0x24000034
 801bc04:	24002120 	.word	0x24002120
 801bc08:	08018413 	.word	0x08018413
 801bc0c:	24000038 	.word	0x24000038

0801bc10 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801bc10:	b510      	push	{r4, lr}
 801bc12:	4604      	mov	r4, r0
 801bc14:	f7ff ff88 	bl	801bb28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801bc18:	4620      	mov	r0, r4
 801bc1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bc1e:	f7ff bfbd 	b.w	801bb9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801bc24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801bc24:	b538      	push	{r3, r4, r5, lr}
 801bc26:	4c15      	ldr	r4, [pc, #84]	; (801bc7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801bc28:	4605      	mov	r5, r0
 801bc2a:	7823      	ldrb	r3, [r4, #0]
 801bc2c:	f3bf 8f5b 	dmb	ish
 801bc30:	07da      	lsls	r2, r3, #31
 801bc32:	d40b      	bmi.n	801bc4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801bc34:	4620      	mov	r0, r4
 801bc36:	f007 fbce 	bl	80233d6 <__cxa_guard_acquire>
 801bc3a:	b138      	cbz	r0, 801bc4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801bc3c:	4620      	mov	r0, r4
 801bc3e:	f007 fbd6 	bl	80233ee <__cxa_guard_release>
 801bc42:	4a0f      	ldr	r2, [pc, #60]	; (801bc80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801bc44:	490f      	ldr	r1, [pc, #60]	; (801bc84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801bc46:	4810      	ldr	r0, [pc, #64]	; (801bc88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801bc48:	f007 fbbe 	bl	80233c8 <__aeabi_atexit>
 801bc4c:	4c0f      	ldr	r4, [pc, #60]	; (801bc8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801bc4e:	7823      	ldrb	r3, [r4, #0]
 801bc50:	f3bf 8f5b 	dmb	ish
 801bc54:	07db      	lsls	r3, r3, #31
 801bc56:	d40b      	bmi.n	801bc70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801bc58:	4620      	mov	r0, r4
 801bc5a:	f007 fbbc 	bl	80233d6 <__cxa_guard_acquire>
 801bc5e:	b138      	cbz	r0, 801bc70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801bc60:	4620      	mov	r0, r4
 801bc62:	f007 fbc4 	bl	80233ee <__cxa_guard_release>
 801bc66:	4a06      	ldr	r2, [pc, #24]	; (801bc80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801bc68:	4909      	ldr	r1, [pc, #36]	; (801bc90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801bc6a:	480a      	ldr	r0, [pc, #40]	; (801bc94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801bc6c:	f007 fbac 	bl	80233c8 <__aeabi_atexit>
 801bc70:	4b05      	ldr	r3, [pc, #20]	; (801bc88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801bc72:	672b      	str	r3, [r5, #112]	; 0x70
 801bc74:	4b07      	ldr	r3, [pc, #28]	; (801bc94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801bc76:	676b      	str	r3, [r5, #116]	; 0x74
 801bc78:	bd38      	pop	{r3, r4, r5, pc}
 801bc7a:	bf00      	nop
 801bc7c:	24002114 	.word	0x24002114
 801bc80:	24000000 	.word	0x24000000
 801bc84:	08018409 	.word	0x08018409
 801bc88:	2400002c 	.word	0x2400002c
 801bc8c:	24002118 	.word	0x24002118
 801bc90:	08018407 	.word	0x08018407
 801bc94:	24000030 	.word	0x24000030

0801bc98 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801bc98:	b538      	push	{r3, r4, r5, lr}
 801bc9a:	4c15      	ldr	r4, [pc, #84]	; (801bcf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801bc9c:	4605      	mov	r5, r0
 801bc9e:	7823      	ldrb	r3, [r4, #0]
 801bca0:	f3bf 8f5b 	dmb	ish
 801bca4:	07da      	lsls	r2, r3, #31
 801bca6:	d40b      	bmi.n	801bcc0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801bca8:	4620      	mov	r0, r4
 801bcaa:	f007 fb94 	bl	80233d6 <__cxa_guard_acquire>
 801bcae:	b138      	cbz	r0, 801bcc0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801bcb0:	4620      	mov	r0, r4
 801bcb2:	f007 fb9c 	bl	80233ee <__cxa_guard_release>
 801bcb6:	4a0f      	ldr	r2, [pc, #60]	; (801bcf4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801bcb8:	490f      	ldr	r1, [pc, #60]	; (801bcf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801bcba:	4810      	ldr	r0, [pc, #64]	; (801bcfc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801bcbc:	f007 fb84 	bl	80233c8 <__aeabi_atexit>
 801bcc0:	4c0f      	ldr	r4, [pc, #60]	; (801bd00 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801bcc2:	7823      	ldrb	r3, [r4, #0]
 801bcc4:	f3bf 8f5b 	dmb	ish
 801bcc8:	07db      	lsls	r3, r3, #31
 801bcca:	d40b      	bmi.n	801bce4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801bccc:	4620      	mov	r0, r4
 801bcce:	f007 fb82 	bl	80233d6 <__cxa_guard_acquire>
 801bcd2:	b138      	cbz	r0, 801bce4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801bcd4:	4620      	mov	r0, r4
 801bcd6:	f007 fb8a 	bl	80233ee <__cxa_guard_release>
 801bcda:	4a06      	ldr	r2, [pc, #24]	; (801bcf4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801bcdc:	4909      	ldr	r1, [pc, #36]	; (801bd04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801bcde:	480a      	ldr	r0, [pc, #40]	; (801bd08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801bce0:	f007 fb72 	bl	80233c8 <__aeabi_atexit>
 801bce4:	4b05      	ldr	r3, [pc, #20]	; (801bcfc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801bce6:	66ab      	str	r3, [r5, #104]	; 0x68
 801bce8:	4b07      	ldr	r3, [pc, #28]	; (801bd08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801bcea:	66eb      	str	r3, [r5, #108]	; 0x6c
 801bcec:	bd38      	pop	{r3, r4, r5, pc}
 801bcee:	bf00      	nop
 801bcf0:	2400210c 	.word	0x2400210c
 801bcf4:	24000000 	.word	0x24000000
 801bcf8:	0801840d 	.word	0x0801840d
 801bcfc:	24000024 	.word	0x24000024
 801bd00:	24002110 	.word	0x24002110
 801bd04:	0801840b 	.word	0x0801840b
 801bd08:	24000028 	.word	0x24000028

0801bd0c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801bd0c:	b510      	push	{r4, lr}
 801bd0e:	4604      	mov	r4, r0
 801bd10:	f7ff ff88 	bl	801bc24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801bd14:	4620      	mov	r0, r4
 801bd16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bd1a:	f7ff bfbd 	b.w	801bc98 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801bd1e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801bd1e:	b510      	push	{r4, lr}
 801bd20:	4604      	mov	r4, r0
 801bd22:	f7ff fff3 	bl	801bd0c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801bd26:	4620      	mov	r0, r4
 801bd28:	f7ff ff72 	bl	801bc10 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801bd2c:	4620      	mov	r0, r4
 801bd2e:	f7ff fdf9 	bl	801b924 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801bd32:	4620      	mov	r0, r4
 801bd34:	f7ff fcfa 	bl	801b72c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801bd38:	4620      	mov	r0, r4
 801bd3a:	f7ff fd75 	bl	801b828 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801bd3e:	4620      	mov	r0, r4
 801bd40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bd44:	f7ff bee0 	b.w	801bb08 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801bd48 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801bd48:	b538      	push	{r3, r4, r5, lr}
 801bd4a:	4c0b      	ldr	r4, [pc, #44]	; (801bd78 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801bd4c:	4605      	mov	r5, r0
 801bd4e:	7823      	ldrb	r3, [r4, #0]
 801bd50:	f3bf 8f5b 	dmb	ish
 801bd54:	07db      	lsls	r3, r3, #31
 801bd56:	d40b      	bmi.n	801bd70 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801bd58:	4620      	mov	r0, r4
 801bd5a:	f007 fb3c 	bl	80233d6 <__cxa_guard_acquire>
 801bd5e:	b138      	cbz	r0, 801bd70 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801bd60:	4620      	mov	r0, r4
 801bd62:	f007 fb44 	bl	80233ee <__cxa_guard_release>
 801bd66:	4a05      	ldr	r2, [pc, #20]	; (801bd7c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801bd68:	4905      	ldr	r1, [pc, #20]	; (801bd80 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801bd6a:	4806      	ldr	r0, [pc, #24]	; (801bd84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801bd6c:	f007 fb2c 	bl	80233c8 <__aeabi_atexit>
 801bd70:	4b04      	ldr	r3, [pc, #16]	; (801bd84 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801bd72:	67ab      	str	r3, [r5, #120]	; 0x78
 801bd74:	bd38      	pop	{r3, r4, r5, pc}
 801bd76:	bf00      	nop
 801bd78:	24002100 	.word	0x24002100
 801bd7c:	24000000 	.word	0x24000000
 801bd80:	08018405 	.word	0x08018405
 801bd84:	2400001c 	.word	0x2400001c

0801bd88 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801bd88:	b538      	push	{r3, r4, r5, lr}
 801bd8a:	4c0b      	ldr	r4, [pc, #44]	; (801bdb8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801bd8c:	4605      	mov	r5, r0
 801bd8e:	7823      	ldrb	r3, [r4, #0]
 801bd90:	f3bf 8f5b 	dmb	ish
 801bd94:	07db      	lsls	r3, r3, #31
 801bd96:	d40b      	bmi.n	801bdb0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801bd98:	4620      	mov	r0, r4
 801bd9a:	f007 fb1c 	bl	80233d6 <__cxa_guard_acquire>
 801bd9e:	b138      	cbz	r0, 801bdb0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801bda0:	4620      	mov	r0, r4
 801bda2:	f007 fb24 	bl	80233ee <__cxa_guard_release>
 801bda6:	4a05      	ldr	r2, [pc, #20]	; (801bdbc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801bda8:	4905      	ldr	r1, [pc, #20]	; (801bdc0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801bdaa:	4806      	ldr	r0, [pc, #24]	; (801bdc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801bdac:	f007 fb0c 	bl	80233c8 <__aeabi_atexit>
 801bdb0:	4b04      	ldr	r3, [pc, #16]	; (801bdc4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801bdb2:	67eb      	str	r3, [r5, #124]	; 0x7c
 801bdb4:	bd38      	pop	{r3, r4, r5, pc}
 801bdb6:	bf00      	nop
 801bdb8:	24002104 	.word	0x24002104
 801bdbc:	24000000 	.word	0x24000000
 801bdc0:	08018403 	.word	0x08018403
 801bdc4:	24000020 	.word	0x24000020

0801bdc8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801bdc8:	b570      	push	{r4, r5, r6, lr}
 801bdca:	4d0d      	ldr	r5, [pc, #52]	; (801be00 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801bdcc:	4606      	mov	r6, r0
 801bdce:	4c0d      	ldr	r4, [pc, #52]	; (801be04 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801bdd0:	782b      	ldrb	r3, [r5, #0]
 801bdd2:	f3bf 8f5b 	dmb	ish
 801bdd6:	f013 0f01 	tst.w	r3, #1
 801bdda:	d10d      	bne.n	801bdf8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801bddc:	4628      	mov	r0, r5
 801bdde:	f007 fafa 	bl	80233d6 <__cxa_guard_acquire>
 801bde2:	b148      	cbz	r0, 801bdf8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801bde4:	4b08      	ldr	r3, [pc, #32]	; (801be08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801bde6:	4628      	mov	r0, r5
 801bde8:	6023      	str	r3, [r4, #0]
 801bdea:	f007 fb00 	bl	80233ee <__cxa_guard_release>
 801bdee:	4a07      	ldr	r2, [pc, #28]	; (801be0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801bdf0:	4620      	mov	r0, r4
 801bdf2:	4907      	ldr	r1, [pc, #28]	; (801be10 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801bdf4:	f007 fae8 	bl	80233c8 <__aeabi_atexit>
 801bdf8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801bdfc:	bd70      	pop	{r4, r5, r6, pc}
 801bdfe:	bf00      	nop
 801be00:	24002108 	.word	0x24002108
 801be04:	2400217c 	.word	0x2400217c
 801be08:	080263a4 	.word	0x080263a4
 801be0c:	24000000 	.word	0x24000000
 801be10:	08018401 	.word	0x08018401

0801be14 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801be14:	b510      	push	{r4, lr}
 801be16:	4604      	mov	r4, r0
 801be18:	f7ff ff96 	bl	801bd48 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801be1c:	4620      	mov	r0, r4
 801be1e:	f7ff ffb3 	bl	801bd88 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801be22:	4620      	mov	r0, r4
 801be24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801be28:	f7ff bfce 	b.w	801bdc8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801be2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801be2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be30:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801be34:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801be38:	2d00      	cmp	r5, #0
 801be3a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801be3e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801be42:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801be46:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801be4a:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801be4e:	eb02 0a0c 	add.w	sl, r2, ip
 801be52:	8808      	ldrh	r0, [r1, #0]
 801be54:	f2c0 80b0 	blt.w	801bfb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801be58:	45ab      	cmp	fp, r5
 801be5a:	f340 80ad 	ble.w	801bfb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801be5e:	2c00      	cmp	r4, #0
 801be60:	f2c0 80a8 	blt.w	801bfb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801be64:	45a6      	cmp	lr, r4
 801be66:	f340 80a5 	ble.w	801bfb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801be6a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801be6e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801be72:	1c62      	adds	r2, r4, #1
 801be74:	f100 80a3 	bmi.w	801bfbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801be78:	4596      	cmp	lr, r2
 801be7a:	f340 80a0 	ble.w	801bfbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801be7e:	f1b9 0f00 	cmp.w	r9, #0
 801be82:	f000 809c 	beq.w	801bfbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801be86:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801be8a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801be8e:	3501      	adds	r5, #1
 801be90:	f100 8099 	bmi.w	801bfc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801be94:	45ab      	cmp	fp, r5
 801be96:	f340 8096 	ble.w	801bfc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801be9a:	2f00      	cmp	r7, #0
 801be9c:	f000 8093 	beq.w	801bfc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801bea0:	2c00      	cmp	r4, #0
 801bea2:	f2c0 808e 	blt.w	801bfc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801bea6:	45a6      	cmp	lr, r4
 801bea8:	f340 808b 	ble.w	801bfc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801beac:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801beb0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801beb4:	3401      	adds	r4, #1
 801beb6:	f100 8089 	bmi.w	801bfcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801beba:	45a6      	cmp	lr, r4
 801bebc:	f340 8086 	ble.w	801bfcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801bec0:	f1b9 0f00 	cmp.w	r9, #0
 801bec4:	f000 8082 	beq.w	801bfcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801bec8:	44d6      	add	lr, sl
 801beca:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bece:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801bed2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801bed6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801beda:	fb19 fe07 	smulbb	lr, r9, r7
 801bede:	f1c7 0210 	rsb	r2, r7, #16
 801bee2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bee6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801beea:	eba2 0209 	sub.w	r2, r2, r9
 801beee:	ea44 0808 	orr.w	r8, r4, r8
 801bef2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801bef6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801befa:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801befe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bf02:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801bf06:	ea44 0c0c 	orr.w	ip, r4, ip
 801bf0a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801bf0e:	fb04 f40c 	mul.w	r4, r4, ip
 801bf12:	fb02 4808 	mla	r8, r2, r8, r4
 801bf16:	041a      	lsls	r2, r3, #16
 801bf18:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801bf1c:	b2b4      	uxth	r4, r6
 801bf1e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801bf22:	43f6      	mvns	r6, r6
 801bf24:	4313      	orrs	r3, r2
 801bf26:	042a      	lsls	r2, r5, #16
 801bf28:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801bf2c:	b2f6      	uxtb	r6, r6
 801bf2e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801bf32:	fb0e 8303 	mla	r3, lr, r3, r8
 801bf36:	432a      	orrs	r2, r5
 801bf38:	fb07 3202 	mla	r2, r7, r2, r3
 801bf3c:	10c7      	asrs	r7, r0, #3
 801bf3e:	0d53      	lsrs	r3, r2, #21
 801bf40:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bf44:	0952      	lsrs	r2, r2, #5
 801bf46:	fb17 f706 	smulbb	r7, r7, r6
 801bf4a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bf4e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bf52:	431a      	orrs	r2, r3
 801bf54:	b293      	uxth	r3, r2
 801bf56:	1202      	asrs	r2, r0, #8
 801bf58:	121d      	asrs	r5, r3, #8
 801bf5a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801bf5e:	00c0      	lsls	r0, r0, #3
 801bf60:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bf64:	fb12 f206 	smulbb	r2, r2, r6
 801bf68:	b2c0      	uxtb	r0, r0
 801bf6a:	fb05 2504 	mla	r5, r5, r4, r2
 801bf6e:	10da      	asrs	r2, r3, #3
 801bf70:	fb10 f006 	smulbb	r0, r0, r6
 801bf74:	00db      	lsls	r3, r3, #3
 801bf76:	b2ad      	uxth	r5, r5
 801bf78:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bf7c:	b2db      	uxtb	r3, r3
 801bf7e:	fb02 7204 	mla	r2, r2, r4, r7
 801bf82:	fb03 0004 	mla	r0, r3, r4, r0
 801bf86:	1c6b      	adds	r3, r5, #1
 801bf88:	b292      	uxth	r2, r2
 801bf8a:	b280      	uxth	r0, r0
 801bf8c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bf90:	1c43      	adds	r3, r0, #1
 801bf92:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bf96:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bf9a:	1c50      	adds	r0, r2, #1
 801bf9c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801bfa0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bfa4:	0952      	lsrs	r2, r2, #5
 801bfa6:	432b      	orrs	r3, r5
 801bfa8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfac:	4313      	orrs	r3, r2
 801bfae:	800b      	strh	r3, [r1, #0]
 801bfb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfb4:	4680      	mov	r8, r0
 801bfb6:	e75c      	b.n	801be72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801bfb8:	4684      	mov	ip, r0
 801bfba:	4680      	mov	r8, r0
 801bfbc:	e767      	b.n	801be8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801bfbe:	4684      	mov	ip, r0
 801bfc0:	e765      	b.n	801be8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801bfc2:	4605      	mov	r5, r0
 801bfc4:	e776      	b.n	801beb4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801bfc6:	4603      	mov	r3, r0
 801bfc8:	4605      	mov	r5, r0
 801bfca:	e782      	b.n	801bed2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801bfcc:	4603      	mov	r3, r0
 801bfce:	e780      	b.n	801bed2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801bfd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bfd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfd4:	b099      	sub	sp, #100	; 0x64
 801bfd6:	9215      	str	r2, [sp, #84]	; 0x54
 801bfd8:	9309      	str	r3, [sp, #36]	; 0x24
 801bfda:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801bfdc:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801bfe0:	9016      	str	r0, [sp, #88]	; 0x58
 801bfe2:	930d      	str	r3, [sp, #52]	; 0x34
 801bfe4:	6850      	ldr	r0, [r2, #4]
 801bfe6:	910c      	str	r1, [sp, #48]	; 0x30
 801bfe8:	6812      	ldr	r2, [r2, #0]
 801bfea:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801bfee:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801bff2:	fb00 1303 	mla	r3, r0, r3, r1
 801bff6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801bffa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801bffc:	681b      	ldr	r3, [r3, #0]
 801bffe:	930b      	str	r3, [sp, #44]	; 0x2c
 801c000:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c002:	685e      	ldr	r6, [r3, #4]
 801c004:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c006:	3604      	adds	r6, #4
 801c008:	43db      	mvns	r3, r3
 801c00a:	b2db      	uxtb	r3, r3
 801c00c:	930a      	str	r3, [sp, #40]	; 0x28
 801c00e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c010:	2b00      	cmp	r3, #0
 801c012:	dc03      	bgt.n	801c01c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c014:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801c016:	2b00      	cmp	r3, #0
 801c018:	f340 8225 	ble.w	801c466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801c01c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c01e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c022:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c026:	1e48      	subs	r0, r1, #1
 801c028:	1e57      	subs	r7, r2, #1
 801c02a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c02c:	2b00      	cmp	r3, #0
 801c02e:	f340 80e3 	ble.w	801c1f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c032:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801c036:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c03a:	d406      	bmi.n	801c04a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c03c:	4584      	cmp	ip, r0
 801c03e:	da04      	bge.n	801c04a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c040:	2b00      	cmp	r3, #0
 801c042:	db02      	blt.n	801c04a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c044:	42bb      	cmp	r3, r7
 801c046:	f2c0 80d8 	blt.w	801c1fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c04a:	f11c 0c01 	adds.w	ip, ip, #1
 801c04e:	f100 80c9 	bmi.w	801c1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c052:	4561      	cmp	r1, ip
 801c054:	f2c0 80c6 	blt.w	801c1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c058:	3301      	adds	r3, #1
 801c05a:	f100 80c3 	bmi.w	801c1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c05e:	429a      	cmp	r2, r3
 801c060:	f2c0 80c0 	blt.w	801c1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c064:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801c068:	4647      	mov	r7, r8
 801c06a:	f1bb 0f00 	cmp.w	fp, #0
 801c06e:	f340 80e3 	ble.w	801c238 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801c072:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801c074:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c078:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c07a:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801c07e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c082:	ea5f 422a 	movs.w	r2, sl, asr #16
 801c086:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c08a:	689b      	ldr	r3, [r3, #8]
 801c08c:	f100 8121 	bmi.w	801c2d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c090:	f103 39ff 	add.w	r9, r3, #4294967295
 801c094:	454a      	cmp	r2, r9
 801c096:	f280 811c 	bge.w	801c2d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c09a:	f1bc 0f00 	cmp.w	ip, #0
 801c09e:	f2c0 8118 	blt.w	801c2d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c0a2:	f10e 39ff 	add.w	r9, lr, #4294967295
 801c0a6:	45cc      	cmp	ip, r9
 801c0a8:	f280 8113 	bge.w	801c2d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c0ac:	b21b      	sxth	r3, r3
 801c0ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c0b0:	fb0c 2203 	mla	r2, ip, r3, r2
 801c0b4:	eb04 0902 	add.w	r9, r4, r2
 801c0b8:	5ca2      	ldrb	r2, [r4, r2]
 801c0ba:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801c0be:	2800      	cmp	r0, #0
 801c0c0:	f000 80fe 	beq.w	801c2c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c0c4:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c0c8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801c0cc:	9211      	str	r2, [sp, #68]	; 0x44
 801c0ce:	b151      	cbz	r1, 801c0e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c0d0:	eb09 0203 	add.w	r2, r9, r3
 801c0d4:	f819 3003 	ldrb.w	r3, [r9, r3]
 801c0d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c0dc:	930f      	str	r3, [sp, #60]	; 0x3c
 801c0de:	7853      	ldrb	r3, [r2, #1]
 801c0e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c0e4:	9312      	str	r3, [sp, #72]	; 0x48
 801c0e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c0e8:	fb10 f201 	smulbb	r2, r0, r1
 801c0ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c0ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c0f2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c0f6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c0fa:	10d2      	asrs	r2, r2, #3
 801c0fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c100:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801c104:	ea4c 0c03 	orr.w	ip, ip, r3
 801c108:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801c10a:	041b      	lsls	r3, r3, #16
 801c10c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c110:	4323      	orrs	r3, r4
 801c112:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c114:	4353      	muls	r3, r2
 801c116:	fb09 330c 	mla	r3, r9, ip, r3
 801c11a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801c11e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c122:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c126:	ea4c 0e0e 	orr.w	lr, ip, lr
 801c12a:	f1c1 0c10 	rsb	ip, r1, #16
 801c12e:	ebac 0c00 	sub.w	ip, ip, r0
 801c132:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c136:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801c13a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801c13e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c140:	0418      	lsls	r0, r3, #16
 801c142:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c146:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c14a:	4318      	orrs	r0, r3
 801c14c:	fb02 c200 	mla	r2, r2, r0, ip
 801c150:	8838      	ldrh	r0, [r7, #0]
 801c152:	0d53      	lsrs	r3, r2, #21
 801c154:	0952      	lsrs	r2, r2, #5
 801c156:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c15a:	1201      	asrs	r1, r0, #8
 801c15c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c160:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801c164:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c168:	00c0      	lsls	r0, r0, #3
 801c16a:	431a      	orrs	r2, r3
 801c16c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801c170:	fb11 f104 	smulbb	r1, r1, r4
 801c174:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c178:	b292      	uxth	r2, r2
 801c17a:	fb1e fe04 	smulbb	lr, lr, r4
 801c17e:	b2c0      	uxtb	r0, r0
 801c180:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801c184:	fb10 f004 	smulbb	r0, r0, r4
 801c188:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c18c:	fb0c 1c03 	mla	ip, ip, r3, r1
 801c190:	10d1      	asrs	r1, r2, #3
 801c192:	00d2      	lsls	r2, r2, #3
 801c194:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c198:	fa1f fc8c 	uxth.w	ip, ip
 801c19c:	b2d2      	uxtb	r2, r2
 801c19e:	fb01 e103 	mla	r1, r1, r3, lr
 801c1a2:	fb02 0303 	mla	r3, r2, r3, r0
 801c1a6:	b289      	uxth	r1, r1
 801c1a8:	b29a      	uxth	r2, r3
 801c1aa:	f10c 0301 	add.w	r3, ip, #1
 801c1ae:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c1b2:	1c53      	adds	r3, r2, #1
 801c1b4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c1b8:	1c4a      	adds	r2, r1, #1
 801c1ba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c1be:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c1c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c1c6:	0949      	lsrs	r1, r1, #5
 801c1c8:	ea43 030c 	orr.w	r3, r3, ip
 801c1cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c1d0:	430b      	orrs	r3, r1
 801c1d2:	803b      	strh	r3, [r7, #0]
 801c1d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c1d6:	3702      	adds	r7, #2
 801c1d8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c1dc:	449a      	add	sl, r3
 801c1de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c1e0:	441d      	add	r5, r3
 801c1e2:	e742      	b.n	801c06a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c1e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c1e6:	f108 0802 	add.w	r8, r8, #2
 801c1ea:	449a      	add	sl, r3
 801c1ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c1ee:	441d      	add	r5, r3
 801c1f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1f2:	3b01      	subs	r3, #1
 801c1f4:	9309      	str	r3, [sp, #36]	; 0x24
 801c1f6:	e718      	b.n	801c02a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801c1f8:	d023      	beq.n	801c242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801c1fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1fc:	9825      	ldr	r0, [sp, #148]	; 0x94
 801c1fe:	3b01      	subs	r3, #1
 801c200:	fb00 a003 	mla	r0, r0, r3, sl
 801c204:	1400      	asrs	r0, r0, #16
 801c206:	f53f af2d 	bmi.w	801c064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c20a:	3901      	subs	r1, #1
 801c20c:	4288      	cmp	r0, r1
 801c20e:	f6bf af29 	bge.w	801c064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c212:	9926      	ldr	r1, [sp, #152]	; 0x98
 801c214:	fb01 5303 	mla	r3, r1, r3, r5
 801c218:	141b      	asrs	r3, r3, #16
 801c21a:	f53f af23 	bmi.w	801c064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c21e:	3a01      	subs	r2, #1
 801c220:	4293      	cmp	r3, r2
 801c222:	f6bf af1f 	bge.w	801c064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c226:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c22a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801c22e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801c232:	f1be 0f00 	cmp.w	lr, #0
 801c236:	dc6c      	bgt.n	801c312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c238:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c23a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c23e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801c242:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c244:	2b00      	cmp	r3, #0
 801c246:	f340 810e 	ble.w	801c466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801c24a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c24e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c250:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c254:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c258:	eef0 6a62 	vmov.f32	s13, s5
 801c25c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c260:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c264:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c268:	ee16 aa90 	vmov	sl, s13
 801c26c:	eef0 6a43 	vmov.f32	s13, s6
 801c270:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c274:	ee16 5a90 	vmov	r5, s13
 801c278:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c27c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c280:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c284:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c288:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c28c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c290:	ee12 2a90 	vmov	r2, s5
 801c294:	eef0 2a47 	vmov.f32	s5, s14
 801c298:	fb92 f3f3 	sdiv	r3, r2, r3
 801c29c:	ee13 2a10 	vmov	r2, s6
 801c2a0:	9325      	str	r3, [sp, #148]	; 0x94
 801c2a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c2a4:	eeb0 3a67 	vmov.f32	s6, s15
 801c2a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2ac:	9326      	str	r3, [sp, #152]	; 0x98
 801c2ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c2b0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801c2b2:	3b01      	subs	r3, #1
 801c2b4:	930c      	str	r3, [sp, #48]	; 0x30
 801c2b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c2b8:	bf08      	it	eq
 801c2ba:	4613      	moveq	r3, r2
 801c2bc:	9309      	str	r3, [sp, #36]	; 0x24
 801c2be:	e6a6      	b.n	801c00e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c2c0:	2900      	cmp	r1, #0
 801c2c2:	f43f af10 	beq.w	801c0e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c2c6:	f819 3003 	ldrb.w	r3, [r9, r3]
 801c2ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c2ce:	930f      	str	r3, [sp, #60]	; 0x3c
 801c2d0:	e709      	b.n	801c0e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c2d2:	f112 0901 	adds.w	r9, r2, #1
 801c2d6:	f53f af7d 	bmi.w	801c1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c2da:	454b      	cmp	r3, r9
 801c2dc:	f6ff af7a 	blt.w	801c1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c2e0:	f11c 0901 	adds.w	r9, ip, #1
 801c2e4:	f53f af76 	bmi.w	801c1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c2e8:	45ce      	cmp	lr, r9
 801c2ea:	f6ff af73 	blt.w	801c1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c2ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c2f0:	b21b      	sxth	r3, r3
 801c2f2:	9202      	str	r2, [sp, #8]
 801c2f4:	fa0f f28e 	sxth.w	r2, lr
 801c2f8:	9300      	str	r3, [sp, #0]
 801c2fa:	4633      	mov	r3, r6
 801c2fc:	9201      	str	r2, [sp, #4]
 801c2fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c300:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c304:	e9cd c003 	strd	ip, r0, [sp, #12]
 801c308:	4639      	mov	r1, r7
 801c30a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801c30c:	f7ff fd8e 	bl	801be2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801c310:	e760      	b.n	801c1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c312:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c314:	ea4f 422a 	mov.w	r2, sl, asr #16
 801c318:	1429      	asrs	r1, r5, #16
 801c31a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c31c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c320:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801c324:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c328:	fb03 2101 	mla	r1, r3, r1, r2
 801c32c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c32e:	440a      	add	r2, r1
 801c330:	5c61      	ldrb	r1, [r4, r1]
 801c332:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801c336:	f1bc 0f00 	cmp.w	ip, #0
 801c33a:	f000 808c 	beq.w	801c456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801c33e:	7857      	ldrb	r7, [r2, #1]
 801c340:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801c344:	9413      	str	r4, [sp, #76]	; 0x4c
 801c346:	b140      	cbz	r0, 801c35a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c348:	18d7      	adds	r7, r2, r3
 801c34a:	5cd3      	ldrb	r3, [r2, r3]
 801c34c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c350:	9310      	str	r3, [sp, #64]	; 0x40
 801c352:	787b      	ldrb	r3, [r7, #1]
 801c354:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c358:	9314      	str	r3, [sp, #80]	; 0x50
 801c35a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c35c:	fb1c f200 	smulbb	r2, ip, r0
 801c360:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c362:	f10e 3eff 	add.w	lr, lr, #4294967295
 801c366:	041f      	lsls	r7, r3, #16
 801c368:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c36c:	10d2      	asrs	r2, r2, #3
 801c36e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801c372:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801c376:	431f      	orrs	r7, r3
 801c378:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801c37c:	9317      	str	r3, [sp, #92]	; 0x5c
 801c37e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c380:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c382:	041b      	lsls	r3, r3, #16
 801c384:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c388:	ea43 030b 	orr.w	r3, r3, fp
 801c38c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c390:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c394:	4353      	muls	r3, r2
 801c396:	fb04 3707 	mla	r7, r4, r7, r3
 801c39a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801c39e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c3a0:	ea43 0b01 	orr.w	fp, r3, r1
 801c3a4:	f1c0 0110 	rsb	r1, r0, #16
 801c3a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c3aa:	eba1 0c0c 	sub.w	ip, r1, ip
 801c3ae:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c3b2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801c3b6:	fb0c 770b 	mla	r7, ip, fp, r7
 801c3ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c3be:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801c3c2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c3c6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801c3ca:	fb02 770c 	mla	r7, r2, ip, r7
 801c3ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c3d0:	0d79      	lsrs	r1, r7, #21
 801c3d2:	8812      	ldrh	r2, [r2, #0]
 801c3d4:	097f      	lsrs	r7, r7, #5
 801c3d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c3da:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c3de:	430f      	orrs	r7, r1
 801c3e0:	1211      	asrs	r1, r2, #8
 801c3e2:	b2bb      	uxth	r3, r7
 801c3e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c3e8:	10d7      	asrs	r7, r2, #3
 801c3ea:	fb11 f104 	smulbb	r1, r1, r4
 801c3ee:	1218      	asrs	r0, r3, #8
 801c3f0:	00d2      	lsls	r2, r2, #3
 801c3f2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c3f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c3fa:	fb17 f704 	smulbb	r7, r7, r4
 801c3fe:	b2d2      	uxtb	r2, r2
 801c400:	fb00 1009 	mla	r0, r0, r9, r1
 801c404:	10d9      	asrs	r1, r3, #3
 801c406:	fb12 f204 	smulbb	r2, r2, r4
 801c40a:	00db      	lsls	r3, r3, #3
 801c40c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c410:	b280      	uxth	r0, r0
 801c412:	b2db      	uxtb	r3, r3
 801c414:	fb01 7109 	mla	r1, r1, r9, r7
 801c418:	fb03 2309 	mla	r3, r3, r9, r2
 801c41c:	1c42      	adds	r2, r0, #1
 801c41e:	b289      	uxth	r1, r1
 801c420:	b29b      	uxth	r3, r3
 801c422:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c426:	1c4f      	adds	r7, r1, #1
 801c428:	1c5a      	adds	r2, r3, #1
 801c42a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c42e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c432:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c436:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c438:	0949      	lsrs	r1, r1, #5
 801c43a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c43e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c442:	4310      	orrs	r0, r2
 801c444:	4308      	orrs	r0, r1
 801c446:	f823 0b02 	strh.w	r0, [r3], #2
 801c44a:	930e      	str	r3, [sp, #56]	; 0x38
 801c44c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c44e:	449a      	add	sl, r3
 801c450:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c452:	441d      	add	r5, r3
 801c454:	e6ed      	b.n	801c232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801c456:	2800      	cmp	r0, #0
 801c458:	f43f af7f 	beq.w	801c35a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c45c:	5cd3      	ldrb	r3, [r2, r3]
 801c45e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c462:	9310      	str	r3, [sp, #64]	; 0x40
 801c464:	e779      	b.n	801c35a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c466:	b019      	add	sp, #100	; 0x64
 801c468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c46c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c46c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c470:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801c474:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801c478:	f1b8 0f00 	cmp.w	r8, #0
 801c47c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801c480:	fb08 470e 	mla	r7, r8, lr, r4
 801c484:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801c488:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801c48c:	eb02 0907 	add.w	r9, r2, r7
 801c490:	8808      	ldrh	r0, [r1, #0]
 801c492:	db67      	blt.n	801c564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801c494:	45c2      	cmp	sl, r8
 801c496:	dd65      	ble.n	801c564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801c498:	2c00      	cmp	r4, #0
 801c49a:	db61      	blt.n	801c560 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801c49c:	45a6      	cmp	lr, r4
 801c49e:	dd5f      	ble.n	801c560 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801c4a0:	5dd2      	ldrb	r2, [r2, r7]
 801c4a2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801c4a6:	1c62      	adds	r2, r4, #1
 801c4a8:	d45f      	bmi.n	801c56a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801c4aa:	4596      	cmp	lr, r2
 801c4ac:	dd5d      	ble.n	801c56a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801c4ae:	2d00      	cmp	r5, #0
 801c4b0:	d05b      	beq.n	801c56a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801c4b2:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c4b6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801c4ba:	f118 0801 	adds.w	r8, r8, #1
 801c4be:	d458      	bmi.n	801c572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801c4c0:	45c2      	cmp	sl, r8
 801c4c2:	dd56      	ble.n	801c572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801c4c4:	2e00      	cmp	r6, #0
 801c4c6:	d054      	beq.n	801c572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801c4c8:	2c00      	cmp	r4, #0
 801c4ca:	db50      	blt.n	801c56e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801c4cc:	45a6      	cmp	lr, r4
 801c4ce:	dd4e      	ble.n	801c56e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801c4d0:	f819 200e 	ldrb.w	r2, [r9, lr]
 801c4d4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801c4d8:	3401      	adds	r4, #1
 801c4da:	d407      	bmi.n	801c4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801c4dc:	45a6      	cmp	lr, r4
 801c4de:	dd05      	ble.n	801c4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801c4e0:	b125      	cbz	r5, 801c4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801c4e2:	44ce      	add	lr, r9
 801c4e4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801c4e8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801c4ec:	fb15 f406 	smulbb	r4, r5, r6
 801c4f0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801c4f4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801c4f8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c4fc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c500:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801c504:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c508:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c50c:	ea43 0c0c 	orr.w	ip, r3, ip
 801c510:	f1c6 0310 	rsb	r3, r6, #16
 801c514:	ea4e 0707 	orr.w	r7, lr, r7
 801c518:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801c51c:	1b5b      	subs	r3, r3, r5
 801c51e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801c522:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801c526:	437d      	muls	r5, r7
 801c528:	fb03 5c0c 	mla	ip, r3, ip, r5
 801c52c:	0403      	lsls	r3, r0, #16
 801c52e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c532:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c536:	4318      	orrs	r0, r3
 801c538:	0413      	lsls	r3, r2, #16
 801c53a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c53e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c542:	fb04 c000 	mla	r0, r4, r0, ip
 801c546:	4313      	orrs	r3, r2
 801c548:	fb06 0003 	mla	r0, r6, r3, r0
 801c54c:	0d43      	lsrs	r3, r0, #21
 801c54e:	0940      	lsrs	r0, r0, #5
 801c550:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c554:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c558:	4318      	orrs	r0, r3
 801c55a:	8008      	strh	r0, [r1, #0]
 801c55c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c560:	4684      	mov	ip, r0
 801c562:	e7a0      	b.n	801c4a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801c564:	4607      	mov	r7, r0
 801c566:	4684      	mov	ip, r0
 801c568:	e7a7      	b.n	801c4ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801c56a:	4607      	mov	r7, r0
 801c56c:	e7a5      	b.n	801c4ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801c56e:	4602      	mov	r2, r0
 801c570:	e7b2      	b.n	801c4d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801c572:	4602      	mov	r2, r0
 801c574:	e7ba      	b.n	801c4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801c576 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c576:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c57a:	b093      	sub	sp, #76	; 0x4c
 801c57c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c580:	920f      	str	r2, [sp, #60]	; 0x3c
 801c582:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c584:	9010      	str	r0, [sp, #64]	; 0x40
 801c586:	9108      	str	r1, [sp, #32]
 801c588:	6850      	ldr	r0, [r2, #4]
 801c58a:	9306      	str	r3, [sp, #24]
 801c58c:	6812      	ldr	r2, [r2, #0]
 801c58e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801c592:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801c596:	fb00 1303 	mla	r3, r0, r3, r1
 801c59a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c59e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c5a0:	681b      	ldr	r3, [r3, #0]
 801c5a2:	9307      	str	r3, [sp, #28]
 801c5a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c5a6:	685f      	ldr	r7, [r3, #4]
 801c5a8:	3704      	adds	r7, #4
 801c5aa:	9b08      	ldr	r3, [sp, #32]
 801c5ac:	2b00      	cmp	r3, #0
 801c5ae:	dc03      	bgt.n	801c5b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801c5b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c5b2:	2b00      	cmp	r3, #0
 801c5b4:	f340 81b2 	ble.w	801c91c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c5b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c5ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c5c2:	1e48      	subs	r0, r1, #1
 801c5c4:	f102 3cff 	add.w	ip, r2, #4294967295
 801c5c8:	9b06      	ldr	r3, [sp, #24]
 801c5ca:	2b00      	cmp	r3, #0
 801c5cc:	f340 80a9 	ble.w	801c722 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801c5d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c5d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c5d8:	d406      	bmi.n	801c5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c5da:	4586      	cmp	lr, r0
 801c5dc:	da04      	bge.n	801c5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c5de:	2b00      	cmp	r3, #0
 801c5e0:	db02      	blt.n	801c5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c5e2:	4563      	cmp	r3, ip
 801c5e4:	f2c0 809e 	blt.w	801c724 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c5e8:	f11e 0e01 	adds.w	lr, lr, #1
 801c5ec:	f100 808f 	bmi.w	801c70e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c5f0:	4571      	cmp	r1, lr
 801c5f2:	f2c0 808c 	blt.w	801c70e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c5f6:	3301      	adds	r3, #1
 801c5f8:	f100 8089 	bmi.w	801c70e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c5fc:	429a      	cmp	r2, r3
 801c5fe:	f2c0 8086 	blt.w	801c70e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c602:	f8dd b018 	ldr.w	fp, [sp, #24]
 801c606:	46c8      	mov	r8, r9
 801c608:	f1bb 0f00 	cmp.w	fp, #0
 801c60c:	f340 80a6 	ble.w	801c75c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801c610:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801c612:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801c616:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c618:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c61c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c620:	1422      	asrs	r2, r4, #16
 801c622:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c626:	689b      	ldr	r3, [r3, #8]
 801c628:	f100 80e3 	bmi.w	801c7f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801c62c:	f103 3aff 	add.w	sl, r3, #4294967295
 801c630:	4552      	cmp	r2, sl
 801c632:	f280 80de 	bge.w	801c7f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801c636:	f1bc 0f00 	cmp.w	ip, #0
 801c63a:	f2c0 80da 	blt.w	801c7f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801c63e:	f10e 3aff 	add.w	sl, lr, #4294967295
 801c642:	45d4      	cmp	ip, sl
 801c644:	f280 80d5 	bge.w	801c7f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801c648:	b21b      	sxth	r3, r3
 801c64a:	9d07      	ldr	r5, [sp, #28]
 801c64c:	fb0c 2203 	mla	r2, ip, r3, r2
 801c650:	eb05 0a02 	add.w	sl, r5, r2
 801c654:	5caa      	ldrb	r2, [r5, r2]
 801c656:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801c65a:	2800      	cmp	r0, #0
 801c65c:	f000 80c0 	beq.w	801c7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801c660:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c664:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801c668:	920b      	str	r2, [sp, #44]	; 0x2c
 801c66a:	b151      	cbz	r1, 801c682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801c66c:	eb0a 0203 	add.w	r2, sl, r3
 801c670:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801c674:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c678:	9309      	str	r3, [sp, #36]	; 0x24
 801c67a:	7853      	ldrb	r3, [r2, #1]
 801c67c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c680:	930c      	str	r3, [sp, #48]	; 0x30
 801c682:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c684:	fb10 f201 	smulbb	r2, r0, r1
 801c688:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c68a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c68e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c692:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c696:	10d2      	asrs	r2, r2, #3
 801c698:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c69c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801c6a0:	ea4c 0c03 	orr.w	ip, ip, r3
 801c6a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c6a6:	041b      	lsls	r3, r3, #16
 801c6a8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c6ac:	432b      	orrs	r3, r5
 801c6ae:	4353      	muls	r3, r2
 801c6b0:	fb0a 330c 	mla	r3, sl, ip, r3
 801c6b4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801c6b8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c6bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c6c0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801c6c4:	f1c1 0c10 	rsb	ip, r1, #16
 801c6c8:	ebac 0c00 	sub.w	ip, ip, r0
 801c6cc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c6d0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801c6d4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801c6d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c6da:	0418      	lsls	r0, r3, #16
 801c6dc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c6e0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c6e4:	4318      	orrs	r0, r3
 801c6e6:	fb02 c200 	mla	r2, r2, r0, ip
 801c6ea:	0d53      	lsrs	r3, r2, #21
 801c6ec:	0952      	lsrs	r2, r2, #5
 801c6ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c6f6:	431a      	orrs	r2, r3
 801c6f8:	f8a8 2000 	strh.w	r2, [r8]
 801c6fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c6fe:	f108 0802 	add.w	r8, r8, #2
 801c702:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c706:	441c      	add	r4, r3
 801c708:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c70a:	441e      	add	r6, r3
 801c70c:	e77c      	b.n	801c608 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c70e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c710:	f109 0902 	add.w	r9, r9, #2
 801c714:	441c      	add	r4, r3
 801c716:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c718:	441e      	add	r6, r3
 801c71a:	9b06      	ldr	r3, [sp, #24]
 801c71c:	3b01      	subs	r3, #1
 801c71e:	9306      	str	r3, [sp, #24]
 801c720:	e752      	b.n	801c5c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c722:	d020      	beq.n	801c766 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c724:	9b06      	ldr	r3, [sp, #24]
 801c726:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801c728:	3b01      	subs	r3, #1
 801c72a:	fb00 4003 	mla	r0, r0, r3, r4
 801c72e:	1400      	asrs	r0, r0, #16
 801c730:	f53f af67 	bmi.w	801c602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c734:	3901      	subs	r1, #1
 801c736:	4288      	cmp	r0, r1
 801c738:	f6bf af63 	bge.w	801c602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c73c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801c73e:	fb01 6303 	mla	r3, r1, r3, r6
 801c742:	141b      	asrs	r3, r3, #16
 801c744:	f53f af5d 	bmi.w	801c602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c748:	3a01      	subs	r2, #1
 801c74a:	4293      	cmp	r3, r2
 801c74c:	f6bf af59 	bge.w	801c602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c750:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801c754:	46ca      	mov	sl, r9
 801c756:	f1b8 0f00 	cmp.w	r8, #0
 801c75a:	dc67      	bgt.n	801c82c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801c75c:	9b06      	ldr	r3, [sp, #24]
 801c75e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c762:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c766:	9b08      	ldr	r3, [sp, #32]
 801c768:	2b00      	cmp	r3, #0
 801c76a:	f340 80d7 	ble.w	801c91c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c76e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c772:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c774:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c778:	eeb0 6a62 	vmov.f32	s12, s5
 801c77c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c780:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c784:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c788:	ee16 4a10 	vmov	r4, s12
 801c78c:	eeb0 6a43 	vmov.f32	s12, s6
 801c790:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c794:	ee16 6a10 	vmov	r6, s12
 801c798:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c79c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c7a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c7a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c7a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c7ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c7b0:	ee12 2a90 	vmov	r2, s5
 801c7b4:	eef0 2a47 	vmov.f32	s5, s14
 801c7b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7bc:	ee13 2a10 	vmov	r2, s6
 801c7c0:	931f      	str	r3, [sp, #124]	; 0x7c
 801c7c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c7c4:	eeb0 3a67 	vmov.f32	s6, s15
 801c7c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7cc:	9320      	str	r3, [sp, #128]	; 0x80
 801c7ce:	9b08      	ldr	r3, [sp, #32]
 801c7d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c7d2:	3b01      	subs	r3, #1
 801c7d4:	9308      	str	r3, [sp, #32]
 801c7d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c7d8:	bf08      	it	eq
 801c7da:	4613      	moveq	r3, r2
 801c7dc:	9306      	str	r3, [sp, #24]
 801c7de:	e6e4      	b.n	801c5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801c7e0:	2900      	cmp	r1, #0
 801c7e2:	f43f af4e 	beq.w	801c682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801c7e6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801c7ea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c7ee:	9309      	str	r3, [sp, #36]	; 0x24
 801c7f0:	e747      	b.n	801c682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801c7f2:	f112 0a01 	adds.w	sl, r2, #1
 801c7f6:	d481      	bmi.n	801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c7f8:	4553      	cmp	r3, sl
 801c7fa:	f6ff af7f 	blt.w	801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c7fe:	f11c 0a01 	adds.w	sl, ip, #1
 801c802:	f53f af7b 	bmi.w	801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c806:	45d6      	cmp	lr, sl
 801c808:	f6ff af78 	blt.w	801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c80c:	b21b      	sxth	r3, r3
 801c80e:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801c812:	fa0f f28e 	sxth.w	r2, lr
 801c816:	9300      	str	r3, [sp, #0]
 801c818:	463b      	mov	r3, r7
 801c81a:	9201      	str	r2, [sp, #4]
 801c81c:	9a07      	ldr	r2, [sp, #28]
 801c81e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801c822:	4641      	mov	r1, r8
 801c824:	9810      	ldr	r0, [sp, #64]	; 0x40
 801c826:	f7ff fe21 	bl	801c46c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801c82a:	e767      	b.n	801c6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c82c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c82e:	1422      	asrs	r2, r4, #16
 801c830:	1431      	asrs	r1, r6, #16
 801c832:	9d07      	ldr	r5, [sp, #28]
 801c834:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c838:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801c83c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c840:	fb03 2101 	mla	r1, r3, r1, r2
 801c844:	9a07      	ldr	r2, [sp, #28]
 801c846:	440a      	add	r2, r1
 801c848:	5c69      	ldrb	r1, [r5, r1]
 801c84a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801c84e:	f1be 0f00 	cmp.w	lr, #0
 801c852:	d05c      	beq.n	801c90e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801c854:	f892 c001 	ldrb.w	ip, [r2, #1]
 801c858:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801c85c:	950d      	str	r5, [sp, #52]	; 0x34
 801c85e:	b150      	cbz	r0, 801c876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c860:	eb02 0c03 	add.w	ip, r2, r3
 801c864:	5cd3      	ldrb	r3, [r2, r3]
 801c866:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c86a:	930a      	str	r3, [sp, #40]	; 0x28
 801c86c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801c870:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c874:	930e      	str	r3, [sp, #56]	; 0x38
 801c876:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c878:	fb1e f200 	smulbb	r2, lr, r0
 801c87c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c87e:	f108 38ff 	add.w	r8, r8, #4294967295
 801c882:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c886:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c88a:	10d2      	asrs	r2, r2, #3
 801c88c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801c890:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c894:	ea4c 0c03 	orr.w	ip, ip, r3
 801c898:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801c89c:	9311      	str	r3, [sp, #68]	; 0x44
 801c89e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c8a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c8a2:	041b      	lsls	r3, r3, #16
 801c8a4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c8a8:	ea43 030b 	orr.w	r3, r3, fp
 801c8ac:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c8b0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c8b4:	4353      	muls	r3, r2
 801c8b6:	fb05 3c0c 	mla	ip, r5, ip, r3
 801c8ba:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801c8be:	ea43 0b01 	orr.w	fp, r3, r1
 801c8c2:	f1c0 0110 	rsb	r1, r0, #16
 801c8c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c8c8:	eba1 0e0e 	sub.w	lr, r1, lr
 801c8cc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801c8d0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801c8d4:	fb0e cc0b 	mla	ip, lr, fp, ip
 801c8d8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801c8dc:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801c8e0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c8e4:	ea4b 0e0e 	orr.w	lr, fp, lr
 801c8e8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c8ec:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801c8f0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c8f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c8f8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c8fc:	ea43 0c0c 	orr.w	ip, r3, ip
 801c900:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c902:	441c      	add	r4, r3
 801c904:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c906:	f82a cb02 	strh.w	ip, [sl], #2
 801c90a:	441e      	add	r6, r3
 801c90c:	e723      	b.n	801c756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c90e:	2800      	cmp	r0, #0
 801c910:	d0b1      	beq.n	801c876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c912:	5cd3      	ldrb	r3, [r2, r3]
 801c914:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c918:	930a      	str	r3, [sp, #40]	; 0x28
 801c91a:	e7ac      	b.n	801c876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c91c:	b013      	add	sp, #76	; 0x4c
 801c91e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801c922:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c926:	880d      	ldrh	r5, [r1, #0]
 801c928:	b087      	sub	sp, #28
 801c92a:	10ef      	asrs	r7, r5, #3
 801c92c:	9103      	str	r1, [sp, #12]
 801c92e:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801c932:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801c936:	00ed      	lsls	r5, r5, #3
 801c938:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c93c:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801c940:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801c944:	b2ed      	uxtb	r5, r5
 801c946:	9701      	str	r7, [sp, #4]
 801c948:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801c94c:	9502      	str	r5, [sp, #8]
 801c94e:	9d01      	ldr	r5, [sp, #4]
 801c950:	9902      	ldr	r1, [sp, #8]
 801c952:	022d      	lsls	r5, r5, #8
 801c954:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801c958:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801c95c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801c960:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801c964:	430d      	orrs	r5, r1
 801c966:	fb06 0709 	mla	r7, r6, r9, r0
 801c96a:	2e00      	cmp	r6, #0
 801c96c:	9505      	str	r5, [sp, #20]
 801c96e:	eb02 0c07 	add.w	ip, r2, r7
 801c972:	f2c0 80b6 	blt.w	801cae2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801c976:	45b3      	cmp	fp, r6
 801c978:	f340 80b3 	ble.w	801cae2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801c97c:	2800      	cmp	r0, #0
 801c97e:	f2c0 80ae 	blt.w	801cade <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801c982:	4581      	cmp	r9, r0
 801c984:	f340 80ab 	ble.w	801cade <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801c988:	5dd7      	ldrb	r7, [r2, r7]
 801c98a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c98e:	441f      	add	r7, r3
 801c990:	1c42      	adds	r2, r0, #1
 801c992:	f100 80a9 	bmi.w	801cae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c996:	4591      	cmp	r9, r2
 801c998:	f340 80a6 	ble.w	801cae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c99c:	2c00      	cmp	r4, #0
 801c99e:	f000 80a3 	beq.w	801cae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c9a2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801c9a6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c9aa:	441d      	add	r5, r3
 801c9ac:	3601      	adds	r6, #1
 801c9ae:	f100 809f 	bmi.w	801caf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c9b2:	45b3      	cmp	fp, r6
 801c9b4:	f340 809c 	ble.w	801caf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c9b8:	f1be 0f00 	cmp.w	lr, #0
 801c9bc:	f000 8098 	beq.w	801caf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c9c0:	2800      	cmp	r0, #0
 801c9c2:	f2c0 8093 	blt.w	801caec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801c9c6:	4581      	cmp	r9, r0
 801c9c8:	f340 8090 	ble.w	801caec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801c9cc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801c9d0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c9d4:	441e      	add	r6, r3
 801c9d6:	3001      	adds	r0, #1
 801c9d8:	f100 808d 	bmi.w	801caf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c9dc:	4581      	cmp	r9, r0
 801c9de:	f340 808a 	ble.w	801caf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c9e2:	2c00      	cmp	r4, #0
 801c9e4:	f000 8087 	beq.w	801caf6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c9e8:	44e1      	add	r9, ip
 801c9ea:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c9ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c9f2:	4413      	add	r3, r2
 801c9f4:	b2a4      	uxth	r4, r4
 801c9f6:	f897 c002 	ldrb.w	ip, [r7, #2]
 801c9fa:	fa1f fe8e 	uxth.w	lr, lr
 801c9fe:	9901      	ldr	r1, [sp, #4]
 801ca00:	fb04 fb0e 	mul.w	fp, r4, lr
 801ca04:	0124      	lsls	r4, r4, #4
 801ca06:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801ca0a:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801ca0e:	eba4 040b 	sub.w	r4, r4, fp
 801ca12:	fa1f f08e 	uxth.w	r0, lr
 801ca16:	b2a2      	uxth	r2, r4
 801ca18:	78ac      	ldrb	r4, [r5, #2]
 801ca1a:	eba9 0900 	sub.w	r9, r9, r0
 801ca1e:	fa1f fe88 	uxth.w	lr, r8
 801ca22:	4354      	muls	r4, r2
 801ca24:	ea6f 0808 	mvn.w	r8, r8
 801ca28:	fa1f f989 	uxth.w	r9, r9
 801ca2c:	fa5f f888 	uxtb.w	r8, r8
 801ca30:	fb09 440c 	mla	r4, r9, ip, r4
 801ca34:	f896 c002 	ldrb.w	ip, [r6, #2]
 801ca38:	fb1a fa08 	smulbb	sl, sl, r8
 801ca3c:	fb00 440c 	mla	r4, r0, ip, r4
 801ca40:	f893 c002 	ldrb.w	ip, [r3, #2]
 801ca44:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801ca48:	787c      	ldrb	r4, [r7, #1]
 801ca4a:	783f      	ldrb	r7, [r7, #0]
 801ca4c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801ca50:	fb0c ac0e 	mla	ip, ip, lr, sl
 801ca54:	f895 a001 	ldrb.w	sl, [r5, #1]
 801ca58:	782d      	ldrb	r5, [r5, #0]
 801ca5a:	fb02 fa0a 	mul.w	sl, r2, sl
 801ca5e:	fa1f fc8c 	uxth.w	ip, ip
 801ca62:	436a      	muls	r2, r5
 801ca64:	7835      	ldrb	r5, [r6, #0]
 801ca66:	fb09 aa04 	mla	sl, r9, r4, sl
 801ca6a:	7874      	ldrb	r4, [r6, #1]
 801ca6c:	fb09 2207 	mla	r2, r9, r7, r2
 801ca70:	fb00 aa04 	mla	sl, r0, r4, sl
 801ca74:	785c      	ldrb	r4, [r3, #1]
 801ca76:	fb00 2005 	mla	r0, r0, r5, r2
 801ca7a:	781b      	ldrb	r3, [r3, #0]
 801ca7c:	fb0b a404 	mla	r4, fp, r4, sl
 801ca80:	fb11 fa08 	smulbb	sl, r1, r8
 801ca84:	fb0b 0b03 	mla	fp, fp, r3, r0
 801ca88:	9b02      	ldr	r3, [sp, #8]
 801ca8a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801ca8e:	fb13 f808 	smulbb	r8, r3, r8
 801ca92:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801ca96:	fb04 a40e 	mla	r4, r4, lr, sl
 801ca9a:	f10c 0301 	add.w	r3, ip, #1
 801ca9e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801caa2:	b2a4      	uxth	r4, r4
 801caa4:	fa1f fe8e 	uxth.w	lr, lr
 801caa8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801caac:	f104 0a01 	add.w	sl, r4, #1
 801cab0:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801cab4:	f10e 0c01 	add.w	ip, lr, #1
 801cab8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801cabc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801cac0:	0964      	lsrs	r4, r4, #5
 801cac2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cac6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801caca:	ea4c 0c03 	orr.w	ip, ip, r3
 801cace:	9b03      	ldr	r3, [sp, #12]
 801cad0:	ea4c 0c04 	orr.w	ip, ip, r4
 801cad4:	f8a3 c000 	strh.w	ip, [r3]
 801cad8:	b007      	add	sp, #28
 801cada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cade:	af05      	add	r7, sp, #20
 801cae0:	e756      	b.n	801c990 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801cae2:	ad05      	add	r5, sp, #20
 801cae4:	462f      	mov	r7, r5
 801cae6:	e761      	b.n	801c9ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801cae8:	ad05      	add	r5, sp, #20
 801caea:	e75f      	b.n	801c9ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801caec:	ae05      	add	r6, sp, #20
 801caee:	e772      	b.n	801c9d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801caf0:	ab05      	add	r3, sp, #20
 801caf2:	461e      	mov	r6, r3
 801caf4:	e77e      	b.n	801c9f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801caf6:	ab05      	add	r3, sp, #20
 801caf8:	e77c      	b.n	801c9f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801cafa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cafa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cafe:	b095      	sub	sp, #84	; 0x54
 801cb00:	9212      	str	r2, [sp, #72]	; 0x48
 801cb02:	9309      	str	r3, [sp, #36]	; 0x24
 801cb04:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801cb06:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801cb0a:	9013      	str	r0, [sp, #76]	; 0x4c
 801cb0c:	930f      	str	r3, [sp, #60]	; 0x3c
 801cb0e:	6850      	ldr	r0, [r2, #4]
 801cb10:	910e      	str	r1, [sp, #56]	; 0x38
 801cb12:	6812      	ldr	r2, [r2, #0]
 801cb14:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801cb18:	fb00 1303 	mla	r3, r0, r3, r1
 801cb1c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cb20:	930a      	str	r3, [sp, #40]	; 0x28
 801cb22:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cb24:	681b      	ldr	r3, [r3, #0]
 801cb26:	930d      	str	r3, [sp, #52]	; 0x34
 801cb28:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cb2a:	685c      	ldr	r4, [r3, #4]
 801cb2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cb2e:	3404      	adds	r4, #4
 801cb30:	43db      	mvns	r3, r3
 801cb32:	b2db      	uxtb	r3, r3
 801cb34:	930b      	str	r3, [sp, #44]	; 0x2c
 801cb36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb38:	2b00      	cmp	r3, #0
 801cb3a:	dc03      	bgt.n	801cb44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cb3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801cb3e:	2b00      	cmp	r3, #0
 801cb40:	f340 8255 	ble.w	801cfee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801cb44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cb46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cb4a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cb4e:	1e48      	subs	r0, r1, #1
 801cb50:	1e55      	subs	r5, r2, #1
 801cb52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb54:	2b00      	cmp	r3, #0
 801cb56:	f340 80f9 	ble.w	801cd4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801cb5a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801cb5c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cb5e:	1436      	asrs	r6, r6, #16
 801cb60:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cb64:	d406      	bmi.n	801cb74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801cb66:	4286      	cmp	r6, r0
 801cb68:	da04      	bge.n	801cb74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801cb6a:	2b00      	cmp	r3, #0
 801cb6c:	db02      	blt.n	801cb74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801cb6e:	42ab      	cmp	r3, r5
 801cb70:	f2c0 80ed 	blt.w	801cd4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801cb74:	3601      	adds	r6, #1
 801cb76:	f100 80da 	bmi.w	801cd2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801cb7a:	42b1      	cmp	r1, r6
 801cb7c:	f2c0 80d7 	blt.w	801cd2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801cb80:	3301      	adds	r3, #1
 801cb82:	f100 80d4 	bmi.w	801cd2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801cb86:	429a      	cmp	r2, r3
 801cb88:	f2c0 80d1 	blt.w	801cd2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801cb8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cb8e:	9311      	str	r3, [sp, #68]	; 0x44
 801cb90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cb92:	930c      	str	r3, [sp, #48]	; 0x30
 801cb94:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cb96:	2b00      	cmp	r3, #0
 801cb98:	f340 80fa 	ble.w	801cd90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801cb9c:	9826      	ldr	r0, [sp, #152]	; 0x98
 801cb9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cba0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801cba2:	68c6      	ldr	r6, [r0, #12]
 801cba4:	141d      	asrs	r5, r3, #16
 801cba6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cba8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801cbac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cbae:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801cbb0:	1400      	asrs	r0, r0, #16
 801cbb2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801cbb6:	6892      	ldr	r2, [r2, #8]
 801cbb8:	f100 813e 	bmi.w	801ce38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801cbbc:	1e57      	subs	r7, r2, #1
 801cbbe:	42b8      	cmp	r0, r7
 801cbc0:	f280 813a 	bge.w	801ce38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801cbc4:	2d00      	cmp	r5, #0
 801cbc6:	f2c0 8137 	blt.w	801ce38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801cbca:	1e77      	subs	r7, r6, #1
 801cbcc:	42bd      	cmp	r5, r7
 801cbce:	f280 8133 	bge.w	801ce38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801cbd2:	b212      	sxth	r2, r2
 801cbd4:	fb05 0002 	mla	r0, r5, r2, r0
 801cbd8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801cbda:	f815 a000 	ldrb.w	sl, [r5, r0]
 801cbde:	182e      	adds	r6, r5, r0
 801cbe0:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801cbe4:	eb04 050a 	add.w	r5, r4, sl
 801cbe8:	2b00      	cmp	r3, #0
 801cbea:	f000 8117 	beq.w	801ce1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801cbee:	f896 c001 	ldrb.w	ip, [r6, #1]
 801cbf2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cbf6:	44a4      	add	ip, r4
 801cbf8:	2900      	cmp	r1, #0
 801cbfa:	f000 8117 	beq.w	801ce2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801cbfe:	18b0      	adds	r0, r6, r2
 801cc00:	5cb2      	ldrb	r2, [r6, r2]
 801cc02:	7840      	ldrb	r0, [r0, #1]
 801cc04:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cc08:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cc0c:	4422      	add	r2, r4
 801cc0e:	4420      	add	r0, r4
 801cc10:	b29b      	uxth	r3, r3
 801cc12:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801cc16:	b289      	uxth	r1, r1
 801cc18:	f895 b002 	ldrb.w	fp, [r5, #2]
 801cc1c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801cc1e:	fb03 f901 	mul.w	r9, r3, r1
 801cc22:	011b      	lsls	r3, r3, #4
 801cc24:	f8b6 e000 	ldrh.w	lr, [r6]
 801cc28:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cc2c:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801cc30:	eba3 0309 	sub.w	r3, r3, r9
 801cc34:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801cc38:	b289      	uxth	r1, r1
 801cc3a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801cc3e:	b29b      	uxth	r3, r3
 801cc40:	eba8 0801 	sub.w	r8, r8, r1
 801cc44:	435f      	muls	r7, r3
 801cc46:	fa1f f888 	uxth.w	r8, r8
 801cc4a:	9310      	str	r3, [sp, #64]	; 0x40
 801cc4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cc4e:	fb08 770b 	mla	r7, r8, fp, r7
 801cc52:	f892 b002 	ldrb.w	fp, [r2, #2]
 801cc56:	fb01 770b 	mla	r7, r1, fp, r7
 801cc5a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801cc5e:	fb09 770b 	mla	r7, r9, fp, r7
 801cc62:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801cc66:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801cc6a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801cc6e:	fb1b fb03 	smulbb	fp, fp, r3
 801cc72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc74:	fb07 b706 	mla	r7, r7, r6, fp
 801cc78:	f895 b001 	ldrb.w	fp, [r5, #1]
 801cc7c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801cc80:	f89c c000 	ldrb.w	ip, [ip]
 801cc84:	b2bf      	uxth	r7, r7
 801cc86:	435d      	muls	r5, r3
 801cc88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cc8a:	fb08 550b 	mla	r5, r8, fp, r5
 801cc8e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801cc92:	fb01 550b 	mla	r5, r1, fp, r5
 801cc96:	f890 b001 	ldrb.w	fp, [r0, #1]
 801cc9a:	fb09 550b 	mla	r5, r9, fp, r5
 801cc9e:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801cca2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cca6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ccaa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ccae:	fa5f fe8e 	uxtb.w	lr, lr
 801ccb2:	fb1b fb03 	smulbb	fp, fp, r3
 801ccb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ccb8:	fb03 f30c 	mul.w	r3, r3, ip
 801ccbc:	f892 c000 	ldrb.w	ip, [r2]
 801ccc0:	fb05 b506 	mla	r5, r5, r6, fp
 801ccc4:	fb08 330a 	mla	r3, r8, sl, r3
 801ccc8:	b2ad      	uxth	r5, r5
 801ccca:	fb01 330c 	mla	r3, r1, ip, r3
 801ccce:	f890 c000 	ldrb.w	ip, [r0]
 801ccd2:	f105 0b01 	add.w	fp, r5, #1
 801ccd6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ccda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ccdc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801cce0:	fb1e fe03 	smulbb	lr, lr, r3
 801cce4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801cce8:	1c7b      	adds	r3, r7, #1
 801ccea:	096d      	lsrs	r5, r5, #5
 801ccec:	fb0c e606 	mla	r6, ip, r6, lr
 801ccf0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801ccf4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ccf8:	b2b6      	uxth	r6, r6
 801ccfa:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801ccfe:	1c77      	adds	r7, r6, #1
 801cd00:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801cd04:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cd08:	431f      	orrs	r7, r3
 801cd0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cd0c:	433d      	orrs	r5, r7
 801cd0e:	801d      	strh	r5, [r3, #0]
 801cd10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cd12:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cd14:	3302      	adds	r3, #2
 801cd16:	930c      	str	r3, [sp, #48]	; 0x30
 801cd18:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cd1a:	4413      	add	r3, r2
 801cd1c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801cd1e:	931f      	str	r3, [sp, #124]	; 0x7c
 801cd20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cd22:	4413      	add	r3, r2
 801cd24:	9320      	str	r3, [sp, #128]	; 0x80
 801cd26:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cd28:	3b01      	subs	r3, #1
 801cd2a:	9311      	str	r3, [sp, #68]	; 0x44
 801cd2c:	e732      	b.n	801cb94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cd2e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cd30:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801cd32:	4433      	add	r3, r6
 801cd34:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801cd36:	931f      	str	r3, [sp, #124]	; 0x7c
 801cd38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cd3a:	4433      	add	r3, r6
 801cd3c:	9320      	str	r3, [sp, #128]	; 0x80
 801cd3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd40:	3b01      	subs	r3, #1
 801cd42:	9309      	str	r3, [sp, #36]	; 0x24
 801cd44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cd46:	3302      	adds	r3, #2
 801cd48:	930a      	str	r3, [sp, #40]	; 0x28
 801cd4a:	e702      	b.n	801cb52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801cd4c:	d027      	beq.n	801cd9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801cd4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd50:	9821      	ldr	r0, [sp, #132]	; 0x84
 801cd52:	3b01      	subs	r3, #1
 801cd54:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801cd56:	fb00 5003 	mla	r0, r0, r3, r5
 801cd5a:	1400      	asrs	r0, r0, #16
 801cd5c:	f53f af16 	bmi.w	801cb8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cd60:	3901      	subs	r1, #1
 801cd62:	4288      	cmp	r0, r1
 801cd64:	f6bf af12 	bge.w	801cb8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cd68:	9922      	ldr	r1, [sp, #136]	; 0x88
 801cd6a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801cd6c:	fb01 0303 	mla	r3, r1, r3, r0
 801cd70:	141b      	asrs	r3, r3, #16
 801cd72:	f53f af0b 	bmi.w	801cb8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cd76:	3a01      	subs	r2, #1
 801cd78:	4293      	cmp	r3, r2
 801cd7a:	f6bf af07 	bge.w	801cb8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cd7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd80:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801cd84:	9311      	str	r3, [sp, #68]	; 0x44
 801cd86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cd88:	930c      	str	r3, [sp, #48]	; 0x30
 801cd8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cd8c:	2b00      	cmp	r3, #0
 801cd8e:	dc70      	bgt.n	801ce72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801cd90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cd94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cd98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cd9c:	930a      	str	r3, [sp, #40]	; 0x28
 801cd9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cda0:	2b00      	cmp	r3, #0
 801cda2:	f340 8124 	ble.w	801cfee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801cda6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cdaa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cdac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cdb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cdb4:	eef0 6a62 	vmov.f32	s13, s5
 801cdb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cdbc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cdc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdc4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801cdc8:	eef0 6a43 	vmov.f32	s13, s6
 801cdcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdd0:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801cdd4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cdd8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cddc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cde0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cde4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cde8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cdec:	ee12 2a90 	vmov	r2, s5
 801cdf0:	eef0 2a47 	vmov.f32	s5, s14
 801cdf4:	fb92 f3f3 	sdiv	r3, r2, r3
 801cdf8:	ee13 2a10 	vmov	r2, s6
 801cdfc:	9321      	str	r3, [sp, #132]	; 0x84
 801cdfe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ce00:	eeb0 3a67 	vmov.f32	s6, s15
 801ce04:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce08:	9322      	str	r3, [sp, #136]	; 0x88
 801ce0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ce0e:	3b01      	subs	r3, #1
 801ce10:	930e      	str	r3, [sp, #56]	; 0x38
 801ce12:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ce14:	bf08      	it	eq
 801ce16:	4613      	moveq	r3, r2
 801ce18:	9309      	str	r3, [sp, #36]	; 0x24
 801ce1a:	e68c      	b.n	801cb36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ce1c:	b149      	cbz	r1, 801ce32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801ce1e:	5cb2      	ldrb	r2, [r6, r2]
 801ce20:	4628      	mov	r0, r5
 801ce22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ce26:	4422      	add	r2, r4
 801ce28:	46ac      	mov	ip, r5
 801ce2a:	e6f1      	b.n	801cc10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ce2c:	4628      	mov	r0, r5
 801ce2e:	462a      	mov	r2, r5
 801ce30:	e6ee      	b.n	801cc10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ce32:	4628      	mov	r0, r5
 801ce34:	462a      	mov	r2, r5
 801ce36:	e7f7      	b.n	801ce28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801ce38:	1c47      	adds	r7, r0, #1
 801ce3a:	f53f af69 	bmi.w	801cd10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ce3e:	42ba      	cmp	r2, r7
 801ce40:	f6ff af66 	blt.w	801cd10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ce44:	1c6f      	adds	r7, r5, #1
 801ce46:	f53f af63 	bmi.w	801cd10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ce4a:	42be      	cmp	r6, r7
 801ce4c:	f6ff af60 	blt.w	801cd10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ce50:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ce52:	b236      	sxth	r6, r6
 801ce54:	b212      	sxth	r2, r2
 801ce56:	9002      	str	r0, [sp, #8]
 801ce58:	9601      	str	r6, [sp, #4]
 801ce5a:	9200      	str	r2, [sp, #0]
 801ce5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ce5e:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801ce62:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801ce66:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801ce6a:	4623      	mov	r3, r4
 801ce6c:	f7ff fd59 	bl	801c922 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801ce70:	e74e      	b.n	801cd10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ce72:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ce74:	9820      	ldr	r0, [sp, #128]	; 0x80
 801ce76:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ce7a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801ce7c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ce7e:	1400      	asrs	r0, r0, #16
 801ce80:	142d      	asrs	r5, r5, #16
 801ce82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ce84:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ce88:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ce8c:	fb02 5000 	mla	r0, r2, r0, r5
 801ce90:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ce92:	f815 9000 	ldrb.w	r9, [r5, r0]
 801ce96:	182e      	adds	r6, r5, r0
 801ce98:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801ce9c:	eb04 0509 	add.w	r5, r4, r9
 801cea0:	2b00      	cmp	r3, #0
 801cea2:	f000 8096 	beq.w	801cfd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801cea6:	7877      	ldrb	r7, [r6, #1]
 801cea8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ceac:	4427      	add	r7, r4
 801ceae:	2900      	cmp	r1, #0
 801ceb0:	f000 8097 	beq.w	801cfe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801ceb4:	18b0      	adds	r0, r6, r2
 801ceb6:	5cb2      	ldrb	r2, [r6, r2]
 801ceb8:	7840      	ldrb	r0, [r0, #1]
 801ceba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cebe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cec2:	4422      	add	r2, r4
 801cec4:	4420      	add	r0, r4
 801cec6:	b29b      	uxth	r3, r3
 801cec8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801ceca:	b289      	uxth	r1, r1
 801cecc:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ced0:	f8b6 c000 	ldrh.w	ip, [r6]
 801ced4:	fb03 f801 	mul.w	r8, r3, r1
 801ced8:	011b      	lsls	r3, r3, #4
 801ceda:	78be      	ldrb	r6, [r7, #2]
 801cedc:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801cee0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801cee4:	eba3 0308 	sub.w	r3, r3, r8
 801cee8:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ceec:	b289      	uxth	r1, r1
 801ceee:	b29b      	uxth	r3, r3
 801cef0:	ebae 0e01 	sub.w	lr, lr, r1
 801cef4:	435e      	muls	r6, r3
 801cef6:	fa1f fe8e 	uxth.w	lr, lr
 801cefa:	9310      	str	r3, [sp, #64]	; 0x40
 801cefc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cefe:	fb0e 660b 	mla	r6, lr, fp, r6
 801cf02:	f892 b002 	ldrb.w	fp, [r2, #2]
 801cf06:	fb01 660b 	mla	r6, r1, fp, r6
 801cf0a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801cf0e:	fb08 660b 	mla	r6, r8, fp, r6
 801cf12:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801cf16:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801cf1a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801cf1e:	fb1b fb03 	smulbb	fp, fp, r3
 801cf22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf24:	fb06 b60a 	mla	r6, r6, sl, fp
 801cf28:	f895 b001 	ldrb.w	fp, [r5, #1]
 801cf2c:	787d      	ldrb	r5, [r7, #1]
 801cf2e:	783f      	ldrb	r7, [r7, #0]
 801cf30:	b2b6      	uxth	r6, r6
 801cf32:	435d      	muls	r5, r3
 801cf34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cf36:	fb0e 550b 	mla	r5, lr, fp, r5
 801cf3a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801cf3e:	fb01 550b 	mla	r5, r1, fp, r5
 801cf42:	f890 b001 	ldrb.w	fp, [r0, #1]
 801cf46:	fb08 550b 	mla	r5, r8, fp, r5
 801cf4a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801cf4e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cf52:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801cf56:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801cf5a:	fa5f fc8c 	uxtb.w	ip, ip
 801cf5e:	fb1b fb03 	smulbb	fp, fp, r3
 801cf62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf64:	437b      	muls	r3, r7
 801cf66:	7817      	ldrb	r7, [r2, #0]
 801cf68:	fb05 b50a 	mla	r5, r5, sl, fp
 801cf6c:	fb0e 3309 	mla	r3, lr, r9, r3
 801cf70:	b2ad      	uxth	r5, r5
 801cf72:	fb01 3307 	mla	r3, r1, r7, r3
 801cf76:	7807      	ldrb	r7, [r0, #0]
 801cf78:	f105 0b01 	add.w	fp, r5, #1
 801cf7c:	fb08 3707 	mla	r7, r8, r7, r3
 801cf80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cf82:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801cf86:	fb1c fc03 	smulbb	ip, ip, r3
 801cf8a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801cf8e:	1c73      	adds	r3, r6, #1
 801cf90:	096d      	lsrs	r5, r5, #5
 801cf92:	fb07 c70a 	mla	r7, r7, sl, ip
 801cf96:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801cf9a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cf9e:	b2bf      	uxth	r7, r7
 801cfa0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cfa2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cfa6:	1c7a      	adds	r2, r7, #1
 801cfa8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cfac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cfb0:	4316      	orrs	r6, r2
 801cfb2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cfb4:	432e      	orrs	r6, r5
 801cfb6:	f823 6b02 	strh.w	r6, [r3], #2
 801cfba:	930c      	str	r3, [sp, #48]	; 0x30
 801cfbc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cfbe:	4413      	add	r3, r2
 801cfc0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801cfc2:	931f      	str	r3, [sp, #124]	; 0x7c
 801cfc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cfc6:	4413      	add	r3, r2
 801cfc8:	9320      	str	r3, [sp, #128]	; 0x80
 801cfca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cfcc:	3b01      	subs	r3, #1
 801cfce:	9311      	str	r3, [sp, #68]	; 0x44
 801cfd0:	e6db      	b.n	801cd8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801cfd2:	b149      	cbz	r1, 801cfe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801cfd4:	5cb2      	ldrb	r2, [r6, r2]
 801cfd6:	4628      	mov	r0, r5
 801cfd8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cfdc:	4422      	add	r2, r4
 801cfde:	462f      	mov	r7, r5
 801cfe0:	e771      	b.n	801cec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801cfe2:	4628      	mov	r0, r5
 801cfe4:	462a      	mov	r2, r5
 801cfe6:	e76e      	b.n	801cec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801cfe8:	4628      	mov	r0, r5
 801cfea:	462a      	mov	r2, r5
 801cfec:	e7f7      	b.n	801cfde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801cfee:	b015      	add	sp, #84	; 0x54
 801cff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cff4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801cff4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cff8:	880f      	ldrh	r7, [r1, #0]
 801cffa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801cffe:	023c      	lsls	r4, r7, #8
 801d000:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801d004:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801d008:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801d00c:	017c      	lsls	r4, r7, #5
 801d00e:	00ff      	lsls	r7, r7, #3
 801d010:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801d014:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801d018:	b2ff      	uxtb	r7, r7
 801d01a:	ea4b 0404 	orr.w	r4, fp, r4
 801d01e:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801d022:	4327      	orrs	r7, r4
 801d024:	fb05 ca0e 	mla	sl, r5, lr, ip
 801d028:	2d00      	cmp	r5, #0
 801d02a:	9701      	str	r7, [sp, #4]
 801d02c:	eb02 080a 	add.w	r8, r2, sl
 801d030:	db7e      	blt.n	801d130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801d032:	45a9      	cmp	r9, r5
 801d034:	dd7c      	ble.n	801d130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801d036:	f1bc 0f00 	cmp.w	ip, #0
 801d03a:	db77      	blt.n	801d12c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801d03c:	45e6      	cmp	lr, ip
 801d03e:	dd75      	ble.n	801d12c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801d040:	f812 700a 	ldrb.w	r7, [r2, sl]
 801d044:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d048:	441f      	add	r7, r3
 801d04a:	f11c 0201 	adds.w	r2, ip, #1
 801d04e:	d472      	bmi.n	801d136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d050:	4596      	cmp	lr, r2
 801d052:	dd70      	ble.n	801d136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d054:	2800      	cmp	r0, #0
 801d056:	d06e      	beq.n	801d136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d058:	f898 4001 	ldrb.w	r4, [r8, #1]
 801d05c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801d060:	441c      	add	r4, r3
 801d062:	3501      	adds	r5, #1
 801d064:	d46b      	bmi.n	801d13e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d066:	45a9      	cmp	r9, r5
 801d068:	dd69      	ble.n	801d13e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d06a:	2e00      	cmp	r6, #0
 801d06c:	d067      	beq.n	801d13e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d06e:	f1bc 0f00 	cmp.w	ip, #0
 801d072:	db62      	blt.n	801d13a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801d074:	45e6      	cmp	lr, ip
 801d076:	dd60      	ble.n	801d13a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801d078:	f818 500e 	ldrb.w	r5, [r8, lr]
 801d07c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d080:	441d      	add	r5, r3
 801d082:	f11c 0201 	adds.w	r2, ip, #1
 801d086:	d45d      	bmi.n	801d144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d088:	4596      	cmp	lr, r2
 801d08a:	dd5b      	ble.n	801d144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d08c:	2800      	cmp	r0, #0
 801d08e:	d059      	beq.n	801d144 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d090:	44c6      	add	lr, r8
 801d092:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d096:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d09a:	4413      	add	r3, r2
 801d09c:	b280      	uxth	r0, r0
 801d09e:	f897 e002 	ldrb.w	lr, [r7, #2]
 801d0a2:	b2b2      	uxth	r2, r6
 801d0a4:	f897 9000 	ldrb.w	r9, [r7]
 801d0a8:	787f      	ldrb	r7, [r7, #1]
 801d0aa:	fb00 f602 	mul.w	r6, r0, r2
 801d0ae:	0100      	lsls	r0, r0, #4
 801d0b0:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801d0b4:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801d0b8:	1b80      	subs	r0, r0, r6
 801d0ba:	fa1f fc82 	uxth.w	ip, r2
 801d0be:	b282      	uxth	r2, r0
 801d0c0:	78a0      	ldrb	r0, [r4, #2]
 801d0c2:	eba8 080c 	sub.w	r8, r8, ip
 801d0c6:	4350      	muls	r0, r2
 801d0c8:	fa1f f888 	uxth.w	r8, r8
 801d0cc:	fb08 0e0e 	mla	lr, r8, lr, r0
 801d0d0:	78a8      	ldrb	r0, [r5, #2]
 801d0d2:	fb0c e000 	mla	r0, ip, r0, lr
 801d0d6:	f893 e002 	ldrb.w	lr, [r3, #2]
 801d0da:	fb06 0e0e 	mla	lr, r6, lr, r0
 801d0de:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801d0e2:	f894 e000 	ldrb.w	lr, [r4]
 801d0e6:	fb02 fe0e 	mul.w	lr, r2, lr
 801d0ea:	fb08 e909 	mla	r9, r8, r9, lr
 801d0ee:	f895 e000 	ldrb.w	lr, [r5]
 801d0f2:	fb0c 990e 	mla	r9, ip, lr, r9
 801d0f6:	f893 e000 	ldrb.w	lr, [r3]
 801d0fa:	785b      	ldrb	r3, [r3, #1]
 801d0fc:	fb06 9e0e 	mla	lr, r6, lr, r9
 801d100:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d104:	ea4e 0e00 	orr.w	lr, lr, r0
 801d108:	7860      	ldrb	r0, [r4, #1]
 801d10a:	4350      	muls	r0, r2
 801d10c:	786a      	ldrb	r2, [r5, #1]
 801d10e:	fb08 0007 	mla	r0, r8, r7, r0
 801d112:	fb0c 0202 	mla	r2, ip, r2, r0
 801d116:	fb06 2303 	mla	r3, r6, r3, r2
 801d11a:	095b      	lsrs	r3, r3, #5
 801d11c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d120:	ea4e 0303 	orr.w	r3, lr, r3
 801d124:	800b      	strh	r3, [r1, #0]
 801d126:	b003      	add	sp, #12
 801d128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d12c:	af01      	add	r7, sp, #4
 801d12e:	e78c      	b.n	801d04a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801d130:	ac01      	add	r4, sp, #4
 801d132:	4627      	mov	r7, r4
 801d134:	e795      	b.n	801d062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801d136:	ac01      	add	r4, sp, #4
 801d138:	e793      	b.n	801d062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801d13a:	ad01      	add	r5, sp, #4
 801d13c:	e7a1      	b.n	801d082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801d13e:	ab01      	add	r3, sp, #4
 801d140:	461d      	mov	r5, r3
 801d142:	e7ab      	b.n	801d09c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801d144:	ab01      	add	r3, sp, #4
 801d146:	e7a9      	b.n	801d09c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801d148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d14c:	b08f      	sub	sp, #60	; 0x3c
 801d14e:	920c      	str	r2, [sp, #48]	; 0x30
 801d150:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801d152:	900d      	str	r0, [sp, #52]	; 0x34
 801d154:	910a      	str	r1, [sp, #40]	; 0x28
 801d156:	6850      	ldr	r0, [r2, #4]
 801d158:	9306      	str	r3, [sp, #24]
 801d15a:	6812      	ldr	r2, [r2, #0]
 801d15c:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801d160:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801d164:	fb00 1303 	mla	r3, r0, r3, r1
 801d168:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d16c:	9307      	str	r3, [sp, #28]
 801d16e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d170:	681b      	ldr	r3, [r3, #0]
 801d172:	9308      	str	r3, [sp, #32]
 801d174:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d176:	685c      	ldr	r4, [r3, #4]
 801d178:	3404      	adds	r4, #4
 801d17a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d17c:	2b00      	cmp	r3, #0
 801d17e:	dc03      	bgt.n	801d188 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d180:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d182:	2b00      	cmp	r3, #0
 801d184:	f340 81d5 	ble.w	801d532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d188:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d18a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d18e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d192:	1e48      	subs	r0, r1, #1
 801d194:	1e56      	subs	r6, r2, #1
 801d196:	9b06      	ldr	r3, [sp, #24]
 801d198:	2b00      	cmp	r3, #0
 801d19a:	f340 80b6 	ble.w	801d30a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d19e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801d1a2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d1a6:	d406      	bmi.n	801d1b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d1a8:	4287      	cmp	r7, r0
 801d1aa:	da04      	bge.n	801d1b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d1ac:	2b00      	cmp	r3, #0
 801d1ae:	db02      	blt.n	801d1b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d1b0:	42b3      	cmp	r3, r6
 801d1b2:	f2c0 80ab 	blt.w	801d30c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801d1b6:	3701      	adds	r7, #1
 801d1b8:	f100 809c 	bmi.w	801d2f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d1bc:	42b9      	cmp	r1, r7
 801d1be:	f2c0 8099 	blt.w	801d2f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d1c2:	3301      	adds	r3, #1
 801d1c4:	f100 8096 	bmi.w	801d2f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d1c8:	429a      	cmp	r2, r3
 801d1ca:	f2c0 8093 	blt.w	801d2f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801d1ce:	9b06      	ldr	r3, [sp, #24]
 801d1d0:	930b      	str	r3, [sp, #44]	; 0x2c
 801d1d2:	9b07      	ldr	r3, [sp, #28]
 801d1d4:	9309      	str	r3, [sp, #36]	; 0x24
 801d1d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d1d8:	2b00      	cmp	r3, #0
 801d1da:	f340 80b4 	ble.w	801d346 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d1de:	9820      	ldr	r0, [sp, #128]	; 0x80
 801d1e0:	142e      	asrs	r6, r5, #16
 801d1e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801d1e4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801d1e8:	68c7      	ldr	r7, [r0, #12]
 801d1ea:	ea5f 402b 	movs.w	r0, fp, asr #16
 801d1ee:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d1f2:	6892      	ldr	r2, [r2, #8]
 801d1f4:	f100 80fb 	bmi.w	801d3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d1f8:	f102 3cff 	add.w	ip, r2, #4294967295
 801d1fc:	4560      	cmp	r0, ip
 801d1fe:	f280 80f6 	bge.w	801d3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d202:	2e00      	cmp	r6, #0
 801d204:	f2c0 80f3 	blt.w	801d3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d208:	f107 3cff 	add.w	ip, r7, #4294967295
 801d20c:	4566      	cmp	r6, ip
 801d20e:	f280 80ee 	bge.w	801d3ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801d212:	b212      	sxth	r2, r2
 801d214:	fb06 0002 	mla	r0, r6, r2, r0
 801d218:	9e08      	ldr	r6, [sp, #32]
 801d21a:	1837      	adds	r7, r6, r0
 801d21c:	5c30      	ldrb	r0, [r6, r0]
 801d21e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801d222:	eb04 0c08 	add.w	ip, r4, r8
 801d226:	2b00      	cmp	r3, #0
 801d228:	f000 80d3 	beq.w	801d3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801d22c:	787e      	ldrb	r6, [r7, #1]
 801d22e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d232:	4426      	add	r6, r4
 801d234:	2900      	cmp	r1, #0
 801d236:	f000 80d4 	beq.w	801d3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801d23a:	18b8      	adds	r0, r7, r2
 801d23c:	5cba      	ldrb	r2, [r7, r2]
 801d23e:	7840      	ldrb	r0, [r0, #1]
 801d240:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d244:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d248:	4422      	add	r2, r4
 801d24a:	4420      	add	r0, r4
 801d24c:	b29b      	uxth	r3, r3
 801d24e:	78b7      	ldrb	r7, [r6, #2]
 801d250:	b289      	uxth	r1, r1
 801d252:	f89c a002 	ldrb.w	sl, [ip, #2]
 801d256:	f89c c001 	ldrb.w	ip, [ip, #1]
 801d25a:	fb03 f901 	mul.w	r9, r3, r1
 801d25e:	011b      	lsls	r3, r3, #4
 801d260:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d264:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801d268:	eba3 0309 	sub.w	r3, r3, r9
 801d26c:	b289      	uxth	r1, r1
 801d26e:	b29b      	uxth	r3, r3
 801d270:	ebae 0e01 	sub.w	lr, lr, r1
 801d274:	435f      	muls	r7, r3
 801d276:	fa1f fe8e 	uxth.w	lr, lr
 801d27a:	fb0e 770a 	mla	r7, lr, sl, r7
 801d27e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801d282:	fb01 770a 	mla	r7, r1, sl, r7
 801d286:	f890 a002 	ldrb.w	sl, [r0, #2]
 801d28a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801d28e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801d292:	f896 8000 	ldrb.w	r8, [r6]
 801d296:	7876      	ldrb	r6, [r6, #1]
 801d298:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801d29c:	fb03 f808 	mul.w	r8, r3, r8
 801d2a0:	4373      	muls	r3, r6
 801d2a2:	fb0e 8807 	mla	r8, lr, r7, r8
 801d2a6:	7817      	ldrb	r7, [r2, #0]
 801d2a8:	fb0e 330c 	mla	r3, lr, ip, r3
 801d2ac:	fb01 8807 	mla	r8, r1, r7, r8
 801d2b0:	7807      	ldrb	r7, [r0, #0]
 801d2b2:	fb09 8707 	mla	r7, r9, r7, r8
 801d2b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d2ba:	ea47 070a 	orr.w	r7, r7, sl
 801d2be:	f892 a001 	ldrb.w	sl, [r2, #1]
 801d2c2:	fb01 310a 	mla	r1, r1, sl, r3
 801d2c6:	f890 a001 	ldrb.w	sl, [r0, #1]
 801d2ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d2cc:	fb09 1a0a 	mla	sl, r9, sl, r1
 801d2d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d2d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d2d8:	ea47 070a 	orr.w	r7, r7, sl
 801d2dc:	801f      	strh	r7, [r3, #0]
 801d2de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d2e0:	3302      	adds	r3, #2
 801d2e2:	9309      	str	r3, [sp, #36]	; 0x24
 801d2e4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d2e6:	449b      	add	fp, r3
 801d2e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d2ea:	441d      	add	r5, r3
 801d2ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d2ee:	3b01      	subs	r3, #1
 801d2f0:	930b      	str	r3, [sp, #44]	; 0x2c
 801d2f2:	e770      	b.n	801d1d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d2f4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d2f6:	449b      	add	fp, r3
 801d2f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d2fa:	441d      	add	r5, r3
 801d2fc:	9b06      	ldr	r3, [sp, #24]
 801d2fe:	3b01      	subs	r3, #1
 801d300:	9306      	str	r3, [sp, #24]
 801d302:	9b07      	ldr	r3, [sp, #28]
 801d304:	3302      	adds	r3, #2
 801d306:	9307      	str	r3, [sp, #28]
 801d308:	e745      	b.n	801d196 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801d30a:	d023      	beq.n	801d354 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801d30c:	9b06      	ldr	r3, [sp, #24]
 801d30e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d310:	3b01      	subs	r3, #1
 801d312:	fb00 b003 	mla	r0, r0, r3, fp
 801d316:	1400      	asrs	r0, r0, #16
 801d318:	f53f af59 	bmi.w	801d1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d31c:	3901      	subs	r1, #1
 801d31e:	4288      	cmp	r0, r1
 801d320:	f6bf af55 	bge.w	801d1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d324:	991c      	ldr	r1, [sp, #112]	; 0x70
 801d326:	fb01 5303 	mla	r3, r1, r3, r5
 801d32a:	141b      	asrs	r3, r3, #16
 801d32c:	f53f af4f 	bmi.w	801d1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d330:	3a01      	subs	r2, #1
 801d332:	4293      	cmp	r3, r2
 801d334:	f6bf af4b 	bge.w	801d1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801d338:	9b06      	ldr	r3, [sp, #24]
 801d33a:	9309      	str	r3, [sp, #36]	; 0x24
 801d33c:	9b07      	ldr	r3, [sp, #28]
 801d33e:	930b      	str	r3, [sp, #44]	; 0x2c
 801d340:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d342:	2b00      	cmp	r3, #0
 801d344:	dc70      	bgt.n	801d428 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d346:	9b06      	ldr	r3, [sp, #24]
 801d348:	9a07      	ldr	r2, [sp, #28]
 801d34a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d34e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d352:	9307      	str	r3, [sp, #28]
 801d354:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d356:	2b00      	cmp	r3, #0
 801d358:	f340 80eb 	ble.w	801d532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d35c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d360:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d362:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d366:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d36a:	eef0 6a62 	vmov.f32	s13, s5
 801d36e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d372:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d376:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d37a:	ee16 ba90 	vmov	fp, s13
 801d37e:	eef0 6a43 	vmov.f32	s13, s6
 801d382:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d386:	ee16 5a90 	vmov	r5, s13
 801d38a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d38e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d392:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d396:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d39a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d39e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d3a2:	ee12 2a90 	vmov	r2, s5
 801d3a6:	eef0 2a47 	vmov.f32	s5, s14
 801d3aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3ae:	ee13 2a10 	vmov	r2, s6
 801d3b2:	931b      	str	r3, [sp, #108]	; 0x6c
 801d3b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d3b6:	eeb0 3a67 	vmov.f32	s6, s15
 801d3ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3be:	931c      	str	r3, [sp, #112]	; 0x70
 801d3c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d3c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d3c4:	3b01      	subs	r3, #1
 801d3c6:	930a      	str	r3, [sp, #40]	; 0x28
 801d3c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d3ca:	bf08      	it	eq
 801d3cc:	4613      	moveq	r3, r2
 801d3ce:	9306      	str	r3, [sp, #24]
 801d3d0:	e6d3      	b.n	801d17a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d3d2:	b149      	cbz	r1, 801d3e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801d3d4:	5cba      	ldrb	r2, [r7, r2]
 801d3d6:	4660      	mov	r0, ip
 801d3d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d3dc:	4422      	add	r2, r4
 801d3de:	4666      	mov	r6, ip
 801d3e0:	e734      	b.n	801d24c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801d3e2:	4660      	mov	r0, ip
 801d3e4:	4662      	mov	r2, ip
 801d3e6:	e731      	b.n	801d24c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801d3e8:	4660      	mov	r0, ip
 801d3ea:	4662      	mov	r2, ip
 801d3ec:	e7f7      	b.n	801d3de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d3ee:	f110 0c01 	adds.w	ip, r0, #1
 801d3f2:	f53f af74 	bmi.w	801d2de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d3f6:	4562      	cmp	r2, ip
 801d3f8:	f6ff af71 	blt.w	801d2de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d3fc:	f116 0c01 	adds.w	ip, r6, #1
 801d400:	f53f af6d 	bmi.w	801d2de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d404:	4567      	cmp	r7, ip
 801d406:	f6ff af6a 	blt.w	801d2de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d40a:	b23f      	sxth	r7, r7
 801d40c:	b212      	sxth	r2, r2
 801d40e:	9701      	str	r7, [sp, #4]
 801d410:	9200      	str	r2, [sp, #0]
 801d412:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801d416:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801d41a:	4623      	mov	r3, r4
 801d41c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d41e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d422:	f7ff fde7 	bl	801cff4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801d426:	e75a      	b.n	801d2de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d428:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801d42a:	ea4f 462b 	mov.w	r6, fp, asr #16
 801d42e:	1428      	asrs	r0, r5, #16
 801d430:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801d434:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d438:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d43c:	fb02 6000 	mla	r0, r2, r0, r6
 801d440:	9e08      	ldr	r6, [sp, #32]
 801d442:	f816 8000 	ldrb.w	r8, [r6, r0]
 801d446:	1837      	adds	r7, r6, r0
 801d448:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801d44c:	eb04 0c08 	add.w	ip, r4, r8
 801d450:	2b00      	cmp	r3, #0
 801d452:	d060      	beq.n	801d516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801d454:	787e      	ldrb	r6, [r7, #1]
 801d456:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d45a:	4426      	add	r6, r4
 801d45c:	2900      	cmp	r1, #0
 801d45e:	d062      	beq.n	801d526 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801d460:	18b8      	adds	r0, r7, r2
 801d462:	5cba      	ldrb	r2, [r7, r2]
 801d464:	7840      	ldrb	r0, [r0, #1]
 801d466:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d46a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d46e:	4422      	add	r2, r4
 801d470:	4420      	add	r0, r4
 801d472:	b29b      	uxth	r3, r3
 801d474:	78b7      	ldrb	r7, [r6, #2]
 801d476:	b289      	uxth	r1, r1
 801d478:	f89c a002 	ldrb.w	sl, [ip, #2]
 801d47c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801d480:	fb03 f901 	mul.w	r9, r3, r1
 801d484:	011b      	lsls	r3, r3, #4
 801d486:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d48a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801d48e:	eba3 0309 	sub.w	r3, r3, r9
 801d492:	b289      	uxth	r1, r1
 801d494:	b29b      	uxth	r3, r3
 801d496:	ebae 0e01 	sub.w	lr, lr, r1
 801d49a:	435f      	muls	r7, r3
 801d49c:	fa1f fe8e 	uxth.w	lr, lr
 801d4a0:	fb0e 770a 	mla	r7, lr, sl, r7
 801d4a4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801d4a8:	fb01 770a 	mla	r7, r1, sl, r7
 801d4ac:	f890 a002 	ldrb.w	sl, [r0, #2]
 801d4b0:	fb09 7a0a 	mla	sl, r9, sl, r7
 801d4b4:	f814 7008 	ldrb.w	r7, [r4, r8]
 801d4b8:	f896 8000 	ldrb.w	r8, [r6]
 801d4bc:	7876      	ldrb	r6, [r6, #1]
 801d4be:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801d4c2:	fb03 f808 	mul.w	r8, r3, r8
 801d4c6:	4373      	muls	r3, r6
 801d4c8:	7856      	ldrb	r6, [r2, #1]
 801d4ca:	fb0e 8807 	mla	r8, lr, r7, r8
 801d4ce:	7817      	ldrb	r7, [r2, #0]
 801d4d0:	fb0e 330c 	mla	r3, lr, ip, r3
 801d4d4:	fb01 8807 	mla	r8, r1, r7, r8
 801d4d8:	7807      	ldrb	r7, [r0, #0]
 801d4da:	fb01 3306 	mla	r3, r1, r6, r3
 801d4de:	fb09 8707 	mla	r7, r9, r7, r8
 801d4e2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d4e6:	ea47 070a 	orr.w	r7, r7, sl
 801d4ea:	f890 a001 	ldrb.w	sl, [r0, #1]
 801d4ee:	fb09 3a0a 	mla	sl, r9, sl, r3
 801d4f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d4f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d4f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d4fc:	ea47 070a 	orr.w	r7, r7, sl
 801d500:	f823 7b02 	strh.w	r7, [r3], #2
 801d504:	930b      	str	r3, [sp, #44]	; 0x2c
 801d506:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d508:	449b      	add	fp, r3
 801d50a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d50c:	441d      	add	r5, r3
 801d50e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d510:	3b01      	subs	r3, #1
 801d512:	9309      	str	r3, [sp, #36]	; 0x24
 801d514:	e714      	b.n	801d340 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801d516:	b149      	cbz	r1, 801d52c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801d518:	5cba      	ldrb	r2, [r7, r2]
 801d51a:	4660      	mov	r0, ip
 801d51c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d520:	4422      	add	r2, r4
 801d522:	4666      	mov	r6, ip
 801d524:	e7a5      	b.n	801d472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801d526:	4660      	mov	r0, ip
 801d528:	4662      	mov	r2, ip
 801d52a:	e7a2      	b.n	801d472 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801d52c:	4660      	mov	r0, ip
 801d52e:	4662      	mov	r2, ip
 801d530:	e7f7      	b.n	801d522 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801d532:	b00f      	add	sp, #60	; 0x3c
 801d534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d538 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801d538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d53c:	b085      	sub	sp, #20
 801d53e:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801d542:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801d546:	9102      	str	r1, [sp, #8]
 801d548:	2c00      	cmp	r4, #0
 801d54a:	fb04 710c 	mla	r1, r4, ip, r7
 801d54e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801d552:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801d556:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801d55a:	eb02 0e01 	add.w	lr, r2, r1
 801d55e:	f2c0 8122 	blt.w	801d7a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801d562:	45a0      	cmp	r8, r4
 801d564:	f340 811f 	ble.w	801d7a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801d568:	2f00      	cmp	r7, #0
 801d56a:	f2c0 811a 	blt.w	801d7a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801d56e:	45bc      	cmp	ip, r7
 801d570:	f340 8117 	ble.w	801d7a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801d574:	5c52      	ldrb	r2, [r2, r1]
 801d576:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801d57a:	1c7a      	adds	r2, r7, #1
 801d57c:	f100 8116 	bmi.w	801d7ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801d580:	4594      	cmp	ip, r2
 801d582:	f340 8113 	ble.w	801d7ac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801d586:	2e00      	cmp	r6, #0
 801d588:	f000 8112 	beq.w	801d7b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801d58c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d590:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801d594:	3401      	adds	r4, #1
 801d596:	f100 810f 	bmi.w	801d7b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801d59a:	45a0      	cmp	r8, r4
 801d59c:	f340 810c 	ble.w	801d7b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801d5a0:	2800      	cmp	r0, #0
 801d5a2:	f000 810c 	beq.w	801d7be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801d5a6:	2f00      	cmp	r7, #0
 801d5a8:	f2c0 8104 	blt.w	801d7b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801d5ac:	45bc      	cmp	ip, r7
 801d5ae:	f340 8101 	ble.w	801d7b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801d5b2:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801d5b6:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801d5ba:	3701      	adds	r7, #1
 801d5bc:	f100 8102 	bmi.w	801d7c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801d5c0:	45bc      	cmp	ip, r7
 801d5c2:	f340 80ff 	ble.w	801d7c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801d5c6:	2e00      	cmp	r6, #0
 801d5c8:	f000 80fe 	beq.w	801d7c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801d5cc:	44f4      	add	ip, lr
 801d5ce:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801d5d2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801d5d6:	b2b6      	uxth	r6, r6
 801d5d8:	b280      	uxth	r0, r0
 801d5da:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801d5de:	fb00 fe06 	mul.w	lr, r0, r6
 801d5e2:	0136      	lsls	r6, r6, #4
 801d5e4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801d5e8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801d5ec:	eba6 070e 	sub.w	r7, r6, lr
 801d5f0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801d5f4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d5f8:	b280      	uxth	r0, r0
 801d5fa:	b2bf      	uxth	r7, r7
 801d5fc:	1a1b      	subs	r3, r3, r0
 801d5fe:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801d602:	fb0a f607 	mul.w	r6, sl, r7
 801d606:	b29b      	uxth	r3, r3
 801d608:	fb0b 6603 	mla	r6, fp, r3, r6
 801d60c:	fb00 6609 	mla	r6, r0, r9, r6
 801d610:	fb0e 6608 	mla	r6, lr, r8, r6
 801d614:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d618:	9600      	str	r6, [sp, #0]
 801d61a:	2e00      	cmp	r6, #0
 801d61c:	f000 80be 	beq.w	801d79c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801d620:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d624:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801d628:	9e02      	ldr	r6, [sp, #8]
 801d62a:	fb0b fc0c 	mul.w	ip, fp, ip
 801d62e:	fb0b f505 	mul.w	r5, fp, r5
 801d632:	8836      	ldrh	r6, [r6, #0]
 801d634:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801d638:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d63c:	9501      	str	r5, [sp, #4]
 801d63e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801d642:	44dc      	add	ip, fp
 801d644:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d648:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801d64c:	9503      	str	r5, [sp, #12]
 801d64e:	9d01      	ldr	r5, [sp, #4]
 801d650:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801d654:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d658:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801d65c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d660:	fb0a fc0c 	mul.w	ip, sl, ip
 801d664:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801d668:	fb0a fa01 	mul.w	sl, sl, r1
 801d66c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801d670:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d674:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801d678:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d67c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801d680:	4465      	add	r5, ip
 801d682:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d686:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d68a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d68e:	fb09 fc0c 	mul.w	ip, r9, ip
 801d692:	0a2d      	lsrs	r5, r5, #8
 801d694:	fb09 f904 	mul.w	r9, r9, r4
 801d698:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d69c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801d6a0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d6a4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801d6a8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d6ac:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801d6b0:	437d      	muls	r5, r7
 801d6b2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801d6b6:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801d6ba:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d6be:	4461      	add	r1, ip
 801d6c0:	fb08 f404 	mul.w	r4, r8, r4
 801d6c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d6c8:	fb08 f802 	mul.w	r8, r8, r2
 801d6cc:	0a09      	lsrs	r1, r1, #8
 801d6ce:	0a22      	lsrs	r2, r4, #8
 801d6d0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801d6d4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801d6d8:	fb07 f70a 	mul.w	r7, r7, sl
 801d6dc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d6e0:	4414      	add	r4, r2
 801d6e2:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801d6e6:	0a24      	lsrs	r4, r4, #8
 801d6e8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801d6ec:	9a03      	ldr	r2, [sp, #12]
 801d6ee:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d6f2:	fb02 5503 	mla	r5, r2, r3, r5
 801d6f6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801d6fa:	9a00      	ldr	r2, [sp, #0]
 801d6fc:	fb04 540e 	mla	r4, r4, lr, r5
 801d700:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801d704:	1235      	asrs	r5, r6, #8
 801d706:	fb01 4100 	mla	r1, r1, r0, r4
 801d70a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d70e:	0a09      	lsrs	r1, r1, #8
 801d710:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801d714:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801d718:	fb03 7101 	mla	r1, r3, r1, r7
 801d71c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801d720:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801d724:	fb00 e101 	mla	r1, r0, r1, lr
 801d728:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801d72c:	b287      	uxth	r7, r0
 801d72e:	0a09      	lsrs	r1, r1, #8
 801d730:	437a      	muls	r2, r7
 801d732:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d736:	1c53      	adds	r3, r2, #1
 801d738:	4321      	orrs	r1, r4
 801d73a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d73e:	0c0a      	lsrs	r2, r1, #16
 801d740:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801d744:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801d748:	b2c8      	uxtb	r0, r1
 801d74a:	fb12 f207 	smulbb	r2, r2, r7
 801d74e:	fb14 f407 	smulbb	r4, r4, r7
 801d752:	b2db      	uxtb	r3, r3
 801d754:	fb10 f007 	smulbb	r0, r0, r7
 801d758:	fb05 2503 	mla	r5, r5, r3, r2
 801d75c:	10f2      	asrs	r2, r6, #3
 801d75e:	00f6      	lsls	r6, r6, #3
 801d760:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d764:	b2ad      	uxth	r5, r5
 801d766:	b2f6      	uxtb	r6, r6
 801d768:	fb02 4203 	mla	r2, r2, r3, r4
 801d76c:	fb06 0303 	mla	r3, r6, r3, r0
 801d770:	b294      	uxth	r4, r2
 801d772:	b299      	uxth	r1, r3
 801d774:	1c6b      	adds	r3, r5, #1
 801d776:	1c62      	adds	r2, r4, #1
 801d778:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d77c:	1c4b      	adds	r3, r1, #1
 801d77e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d782:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d786:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d78a:	0952      	lsrs	r2, r2, #5
 801d78c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d790:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d794:	432b      	orrs	r3, r5
 801d796:	4313      	orrs	r3, r2
 801d798:	9a02      	ldr	r2, [sp, #8]
 801d79a:	8013      	strh	r3, [r2, #0]
 801d79c:	b005      	add	sp, #20
 801d79e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7a2:	2500      	movs	r5, #0
 801d7a4:	e6e9      	b.n	801d57a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801d7a6:	2100      	movs	r1, #0
 801d7a8:	460d      	mov	r5, r1
 801d7aa:	e6f3      	b.n	801d594 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801d7ac:	2100      	movs	r1, #0
 801d7ae:	e6f1      	b.n	801d594 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801d7b0:	4631      	mov	r1, r6
 801d7b2:	e6ef      	b.n	801d594 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801d7b4:	2400      	movs	r4, #0
 801d7b6:	e700      	b.n	801d5ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801d7b8:	2200      	movs	r2, #0
 801d7ba:	4614      	mov	r4, r2
 801d7bc:	e70b      	b.n	801d5d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801d7be:	4602      	mov	r2, r0
 801d7c0:	4604      	mov	r4, r0
 801d7c2:	e708      	b.n	801d5d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801d7c4:	2200      	movs	r2, #0
 801d7c6:	e706      	b.n	801d5d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801d7c8:	4632      	mov	r2, r6
 801d7ca:	e704      	b.n	801d5d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801d7cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d7cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7d0:	b09f      	sub	sp, #124	; 0x7c
 801d7d2:	921b      	str	r2, [sp, #108]	; 0x6c
 801d7d4:	9309      	str	r3, [sp, #36]	; 0x24
 801d7d6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801d7d8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801d7dc:	901d      	str	r0, [sp, #116]	; 0x74
 801d7de:	931c      	str	r3, [sp, #112]	; 0x70
 801d7e0:	6850      	ldr	r0, [r2, #4]
 801d7e2:	9119      	str	r1, [sp, #100]	; 0x64
 801d7e4:	6812      	ldr	r2, [r2, #0]
 801d7e6:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801d7e8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801d7ec:	fb00 1303 	mla	r3, r0, r3, r1
 801d7f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d7f4:	930c      	str	r3, [sp, #48]	; 0x30
 801d7f6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801d7f8:	681b      	ldr	r3, [r3, #0]
 801d7fa:	9312      	str	r3, [sp, #72]	; 0x48
 801d7fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801d7fe:	685e      	ldr	r6, [r3, #4]
 801d800:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801d804:	3604      	adds	r6, #4
 801d806:	930d      	str	r3, [sp, #52]	; 0x34
 801d808:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801d80a:	2b00      	cmp	r3, #0
 801d80c:	dc03      	bgt.n	801d816 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d80e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d810:	2b00      	cmp	r3, #0
 801d812:	f340 8387 	ble.w	801df24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801d816:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801d818:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d81c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d820:	1e48      	subs	r0, r1, #1
 801d822:	1e57      	subs	r7, r2, #1
 801d824:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d826:	2b00      	cmp	r3, #0
 801d828:	f340 8194 	ble.w	801db54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801d82c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801d82e:	142b      	asrs	r3, r5, #16
 801d830:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d834:	d406      	bmi.n	801d844 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d836:	4584      	cmp	ip, r0
 801d838:	da04      	bge.n	801d844 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d83a:	2b00      	cmp	r3, #0
 801d83c:	db02      	blt.n	801d844 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d83e:	42bb      	cmp	r3, r7
 801d840:	f2c0 8189 	blt.w	801db56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801d844:	f11c 0c01 	adds.w	ip, ip, #1
 801d848:	f100 8177 	bmi.w	801db3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801d84c:	4561      	cmp	r1, ip
 801d84e:	f2c0 8174 	blt.w	801db3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801d852:	3301      	adds	r3, #1
 801d854:	f100 8171 	bmi.w	801db3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801d858:	429a      	cmp	r2, r3
 801d85a:	f2c0 816e 	blt.w	801db3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801d85e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d860:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d862:	931a      	str	r3, [sp, #104]	; 0x68
 801d864:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801d866:	2b00      	cmp	r3, #0
 801d868:	f340 8193 	ble.w	801db92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801d86c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d86e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d872:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d876:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d87a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801d87c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801d880:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d882:	141b      	asrs	r3, r3, #16
 801d884:	f100 81d6 	bmi.w	801dc34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801d888:	f100 38ff 	add.w	r8, r0, #4294967295
 801d88c:	4543      	cmp	r3, r8
 801d88e:	f280 81d1 	bge.w	801dc34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801d892:	f1bc 0f00 	cmp.w	ip, #0
 801d896:	f2c0 81cd 	blt.w	801dc34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801d89a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d89e:	45c4      	cmp	ip, r8
 801d8a0:	f280 81c8 	bge.w	801dc34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801d8a4:	b200      	sxth	r0, r0
 801d8a6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d8a8:	fb0c 3300 	mla	r3, ip, r0, r3
 801d8ac:	eb04 0803 	add.w	r8, r4, r3
 801d8b0:	5ce3      	ldrb	r3, [r4, r3]
 801d8b2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d8b6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801d8ba:	2a00      	cmp	r2, #0
 801d8bc:	f000 81af 	beq.w	801dc1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d8c0:	f898 c001 	ldrb.w	ip, [r8, #1]
 801d8c4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801d8c8:	940e      	str	r4, [sp, #56]	; 0x38
 801d8ca:	0e24      	lsrs	r4, r4, #24
 801d8cc:	9415      	str	r4, [sp, #84]	; 0x54
 801d8ce:	b179      	cbz	r1, 801d8f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801d8d0:	eb08 0c00 	add.w	ip, r8, r0
 801d8d4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d8d8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d8dc:	900a      	str	r0, [sp, #40]	; 0x28
 801d8de:	0e00      	lsrs	r0, r0, #24
 801d8e0:	9013      	str	r0, [sp, #76]	; 0x4c
 801d8e2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801d8e6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d8ea:	900f      	str	r0, [sp, #60]	; 0x3c
 801d8ec:	0e00      	lsrs	r0, r0, #24
 801d8ee:	9016      	str	r0, [sp, #88]	; 0x58
 801d8f0:	b292      	uxth	r2, r2
 801d8f2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d8f4:	b289      	uxth	r1, r1
 801d8f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d8f8:	fb02 f901 	mul.w	r9, r2, r1
 801d8fc:	0112      	lsls	r2, r2, #4
 801d8fe:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d902:	eba2 0809 	sub.w	r8, r2, r9
 801d906:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d90a:	b289      	uxth	r1, r1
 801d90c:	fa1f f888 	uxth.w	r8, r8
 801d910:	1a52      	subs	r2, r2, r1
 801d912:	fb08 f000 	mul.w	r0, r8, r0
 801d916:	b292      	uxth	r2, r2
 801d918:	fb02 000e 	mla	r0, r2, lr, r0
 801d91c:	fb01 0004 	mla	r0, r1, r4, r0
 801d920:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801d922:	fb09 0004 	mla	r0, r9, r4, r0
 801d926:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d92a:	2800      	cmp	r0, #0
 801d92c:	f000 80fa 	beq.w	801db24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801d930:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d934:	d01b      	beq.n	801d96e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801d936:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d93a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d93e:	fb0e fa0a 	mul.w	sl, lr, sl
 801d942:	fb0e fe03 	mul.w	lr, lr, r3
 801d946:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d94a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d94e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d952:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d956:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d95a:	4453      	add	r3, sl
 801d95c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d960:	0a1b      	lsrs	r3, r3, #8
 801d962:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d966:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d96a:	ea43 030c 	orr.w	r3, r3, ip
 801d96e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d970:	2cff      	cmp	r4, #255	; 0xff
 801d972:	d021      	beq.n	801d9b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801d974:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d976:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d97a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d97c:	fb04 fb0b 	mul.w	fp, r4, fp
 801d980:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d982:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d986:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d988:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d98c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d990:	fb04 fa0a 	mul.w	sl, r4, sl
 801d994:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d998:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d99c:	44de      	add	lr, fp
 801d99e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d9a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d9a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d9aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d9b2:	ea4e 040a 	orr.w	r4, lr, sl
 801d9b6:	940e      	str	r4, [sp, #56]	; 0x38
 801d9b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d9ba:	2cff      	cmp	r4, #255	; 0xff
 801d9bc:	d021      	beq.n	801da02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d9be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d9c0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801d9c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d9c6:	fb04 fb0b 	mul.w	fp, r4, fp
 801d9ca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d9cc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d9d0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d9d2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d9d6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d9da:	fb04 fa0a 	mul.w	sl, r4, sl
 801d9de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9e2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d9e6:	44de      	add	lr, fp
 801d9e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d9ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d9f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d9f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d9f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d9fc:	ea4e 040a 	orr.w	r4, lr, sl
 801da00:	940a      	str	r4, [sp, #40]	; 0x28
 801da02:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801da04:	2cff      	cmp	r4, #255	; 0xff
 801da06:	d021      	beq.n	801da4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801da08:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801da0a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801da0e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801da10:	fb04 fb0b 	mul.w	fp, r4, fp
 801da14:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801da16:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801da1a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801da1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801da20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801da24:	fb04 fa0a 	mul.w	sl, r4, sl
 801da28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801da2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801da30:	44de      	add	lr, fp
 801da32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801da36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801da3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801da3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801da42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801da46:	ea4e 040a 	orr.w	r4, lr, sl
 801da4a:	940f      	str	r4, [sp, #60]	; 0x3c
 801da4c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801da4e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801da52:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801da56:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801da5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801da5c:	fb08 fc0c 	mul.w	ip, r8, ip
 801da60:	fb02 cc0e 	mla	ip, r2, lr, ip
 801da64:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801da68:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801da6a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801da6e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801da72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801da74:	fb09 cc0e 	mla	ip, r9, lr, ip
 801da78:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801da7c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801da7e:	fb08 f80e 	mul.w	r8, r8, lr
 801da82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801da86:	fb02 8303 	mla	r3, r2, r3, r8
 801da8a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801da8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801da90:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801da94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801da96:	fb01 330a 	mla	r3, r1, sl, r3
 801da9a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801da9e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801daa0:	fb09 3901 	mla	r9, r9, r1, r3
 801daa4:	883b      	ldrh	r3, [r7, #0]
 801daa6:	4342      	muls	r2, r0
 801daa8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801daac:	1c50      	adds	r0, r2, #1
 801daae:	1219      	asrs	r1, r3, #8
 801dab0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801dab4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801dab8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801dabc:	ea4c 0c09 	orr.w	ip, ip, r9
 801dac0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801dac4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801dac8:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801dacc:	b2c0      	uxtb	r0, r0
 801dace:	fb12 f204 	smulbb	r2, r2, r4
 801dad2:	fa5f fc8c 	uxtb.w	ip, ip
 801dad6:	fb1e fe04 	smulbb	lr, lr, r4
 801dada:	fb01 2100 	mla	r1, r1, r0, r2
 801dade:	10da      	asrs	r2, r3, #3
 801dae0:	fb1c fc04 	smulbb	ip, ip, r4
 801dae4:	00db      	lsls	r3, r3, #3
 801dae6:	b289      	uxth	r1, r1
 801dae8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801daec:	b2db      	uxtb	r3, r3
 801daee:	fb02 e200 	mla	r2, r2, r0, lr
 801daf2:	fb03 c300 	mla	r3, r3, r0, ip
 801daf6:	b292      	uxth	r2, r2
 801daf8:	fa1f fc83 	uxth.w	ip, r3
 801dafc:	1c4b      	adds	r3, r1, #1
 801dafe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801db02:	f10c 0301 	add.w	r3, ip, #1
 801db06:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801db0a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801db0e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801db12:	430b      	orrs	r3, r1
 801db14:	1c51      	adds	r1, r2, #1
 801db16:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801db1a:	0952      	lsrs	r2, r2, #5
 801db1c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db20:	4313      	orrs	r3, r2
 801db22:	803b      	strh	r3, [r7, #0]
 801db24:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801db26:	3702      	adds	r7, #2
 801db28:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801db2a:	441a      	add	r2, r3
 801db2c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801db2e:	441d      	add	r5, r3
 801db30:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801db32:	9229      	str	r2, [sp, #164]	; 0xa4
 801db34:	3b01      	subs	r3, #1
 801db36:	931a      	str	r3, [sp, #104]	; 0x68
 801db38:	e694      	b.n	801d864 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801db3a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801db3c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801db3e:	441c      	add	r4, r3
 801db40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801db42:	441d      	add	r5, r3
 801db44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801db46:	9429      	str	r4, [sp, #164]	; 0xa4
 801db48:	3b01      	subs	r3, #1
 801db4a:	9309      	str	r3, [sp, #36]	; 0x24
 801db4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801db4e:	3302      	adds	r3, #2
 801db50:	930c      	str	r3, [sp, #48]	; 0x30
 801db52:	e667      	b.n	801d824 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801db54:	d024      	beq.n	801dba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801db56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801db58:	982b      	ldr	r0, [sp, #172]	; 0xac
 801db5a:	3b01      	subs	r3, #1
 801db5c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801db5e:	fb00 4003 	mla	r0, r0, r3, r4
 801db62:	1400      	asrs	r0, r0, #16
 801db64:	f53f ae7b 	bmi.w	801d85e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801db68:	3901      	subs	r1, #1
 801db6a:	4288      	cmp	r0, r1
 801db6c:	f6bf ae77 	bge.w	801d85e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801db70:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801db72:	fb01 5303 	mla	r3, r1, r3, r5
 801db76:	141b      	asrs	r3, r3, #16
 801db78:	f53f ae71 	bmi.w	801d85e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801db7c:	3a01      	subs	r2, #1
 801db7e:	4293      	cmp	r3, r2
 801db80:	f6bf ae6d 	bge.w	801d85e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801db84:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801db88:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801db8c:	f1bb 0f00 	cmp.w	fp, #0
 801db90:	dc70      	bgt.n	801dc74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801db92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801db94:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801db98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801db9a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801db9e:	930c      	str	r3, [sp, #48]	; 0x30
 801dba0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801dba2:	2b00      	cmp	r3, #0
 801dba4:	f340 81be 	ble.w	801df24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801dba8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dbac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dbae:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dbb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dbb6:	eef0 6a62 	vmov.f32	s13, s5
 801dbba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dbbe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dbc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbc6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801dbca:	eef0 6a43 	vmov.f32	s13, s6
 801dbce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbd2:	ee16 5a90 	vmov	r5, s13
 801dbd6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dbda:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dbde:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dbe2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dbe6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dbea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dbee:	ee12 2a90 	vmov	r2, s5
 801dbf2:	eef0 2a47 	vmov.f32	s5, s14
 801dbf6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbfa:	ee13 2a10 	vmov	r2, s6
 801dbfe:	932b      	str	r3, [sp, #172]	; 0xac
 801dc00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dc02:	eeb0 3a67 	vmov.f32	s6, s15
 801dc06:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc0a:	932c      	str	r3, [sp, #176]	; 0xb0
 801dc0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801dc0e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801dc10:	3b01      	subs	r3, #1
 801dc12:	9319      	str	r3, [sp, #100]	; 0x64
 801dc14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dc16:	bf08      	it	eq
 801dc18:	4613      	moveq	r3, r2
 801dc1a:	9309      	str	r3, [sp, #36]	; 0x24
 801dc1c:	e5f4      	b.n	801d808 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801dc1e:	2900      	cmp	r1, #0
 801dc20:	f43f ae66 	beq.w	801d8f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801dc24:	f818 0000 	ldrb.w	r0, [r8, r0]
 801dc28:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801dc2c:	900a      	str	r0, [sp, #40]	; 0x28
 801dc2e:	0e00      	lsrs	r0, r0, #24
 801dc30:	9013      	str	r0, [sp, #76]	; 0x4c
 801dc32:	e65d      	b.n	801d8f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801dc34:	f113 0801 	adds.w	r8, r3, #1
 801dc38:	f53f af74 	bmi.w	801db24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801dc3c:	4540      	cmp	r0, r8
 801dc3e:	f6ff af71 	blt.w	801db24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801dc42:	f11c 0801 	adds.w	r8, ip, #1
 801dc46:	f53f af6d 	bmi.w	801db24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801dc4a:	45c6      	cmp	lr, r8
 801dc4c:	f6ff af6a 	blt.w	801db24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801dc50:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801dc52:	b200      	sxth	r0, r0
 801dc54:	9302      	str	r3, [sp, #8]
 801dc56:	fa0f f38e 	sxth.w	r3, lr
 801dc5a:	9000      	str	r0, [sp, #0]
 801dc5c:	9301      	str	r3, [sp, #4]
 801dc5e:	4633      	mov	r3, r6
 801dc60:	981d      	ldr	r0, [sp, #116]	; 0x74
 801dc62:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801dc66:	e9cd c203 	strd	ip, r2, [sp, #12]
 801dc6a:	4639      	mov	r1, r7
 801dc6c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801dc6e:	f7ff fc63 	bl	801d538 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801dc72:	e757      	b.n	801db24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801dc74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801dc76:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801dc7a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801dc7c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801dc80:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801dc82:	1427      	asrs	r7, r4, #16
 801dc84:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dc86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc8a:	142b      	asrs	r3, r5, #16
 801dc8c:	fb01 7303 	mla	r3, r1, r3, r7
 801dc90:	18e7      	adds	r7, r4, r3
 801dc92:	5ce3      	ldrb	r3, [r4, r3]
 801dc94:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801dc98:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801dc9c:	2a00      	cmp	r2, #0
 801dc9e:	f000 8137 	beq.w	801df10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801dca2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801dca6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801dcaa:	9410      	str	r4, [sp, #64]	; 0x40
 801dcac:	0e24      	lsrs	r4, r4, #24
 801dcae:	9417      	str	r4, [sp, #92]	; 0x5c
 801dcb0:	b170      	cbz	r0, 801dcd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801dcb2:	eb07 0e01 	add.w	lr, r7, r1
 801dcb6:	5c79      	ldrb	r1, [r7, r1]
 801dcb8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dcbc:	910b      	str	r1, [sp, #44]	; 0x2c
 801dcbe:	0e09      	lsrs	r1, r1, #24
 801dcc0:	9114      	str	r1, [sp, #80]	; 0x50
 801dcc2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801dcc6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801dcca:	9111      	str	r1, [sp, #68]	; 0x44
 801dccc:	0e09      	lsrs	r1, r1, #24
 801dcce:	9118      	str	r1, [sp, #96]	; 0x60
 801dcd0:	b292      	uxth	r2, r2
 801dcd2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801dcd4:	b280      	uxth	r0, r0
 801dcd6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dcd8:	fb02 f800 	mul.w	r8, r2, r0
 801dcdc:	0112      	lsls	r2, r2, #4
 801dcde:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801dce2:	eba2 0e08 	sub.w	lr, r2, r8
 801dce6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801dcea:	b280      	uxth	r0, r0
 801dcec:	fa1f fe8e 	uxth.w	lr, lr
 801dcf0:	1a12      	subs	r2, r2, r0
 801dcf2:	fb0e f101 	mul.w	r1, lr, r1
 801dcf6:	b292      	uxth	r2, r2
 801dcf8:	fb02 110c 	mla	r1, r2, ip, r1
 801dcfc:	fb00 1104 	mla	r1, r0, r4, r1
 801dd00:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801dd02:	fb08 1104 	mla	r1, r8, r4, r1
 801dd06:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801dd0a:	2900      	cmp	r1, #0
 801dd0c:	f000 80f5 	beq.w	801defa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801dd10:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801dd14:	d019      	beq.n	801dd4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801dd16:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801dd1a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dd1e:	fb0c fa0a 	mul.w	sl, ip, sl
 801dd22:	fb0c fc03 	mul.w	ip, ip, r3
 801dd26:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801dd2a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dd2e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801dd32:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dd36:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dd3a:	4453      	add	r3, sl
 801dd3c:	0a3f      	lsrs	r7, r7, #8
 801dd3e:	0a1b      	lsrs	r3, r3, #8
 801dd40:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801dd44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dd48:	433b      	orrs	r3, r7
 801dd4a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801dd4c:	2cff      	cmp	r4, #255	; 0xff
 801dd4e:	d020      	beq.n	801dd92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801dd50:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801dd52:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dd56:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801dd58:	4367      	muls	r7, r4
 801dd5a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801dd5c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd60:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801dd64:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801dd66:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dd6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd6e:	fb04 fa0a 	mul.w	sl, r4, sl
 801dd72:	44bc      	add	ip, r7
 801dd74:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dd78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd7c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dd80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd8c:	ea4c 040a 	orr.w	r4, ip, sl
 801dd90:	9410      	str	r4, [sp, #64]	; 0x40
 801dd92:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dd94:	2cff      	cmp	r4, #255	; 0xff
 801dd96:	d020      	beq.n	801ddda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801dd98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801dd9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dd9e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801dda0:	4367      	muls	r7, r4
 801dda2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801dda4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dda8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ddac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ddae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ddb2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ddb6:	fb04 fa0a 	mul.w	sl, r4, sl
 801ddba:	44bc      	add	ip, r7
 801ddbc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ddc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ddc4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ddc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ddcc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ddd0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ddd4:	ea4c 040a 	orr.w	r4, ip, sl
 801ddd8:	940b      	str	r4, [sp, #44]	; 0x2c
 801ddda:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801dddc:	2cff      	cmp	r4, #255	; 0xff
 801ddde:	d020      	beq.n	801de22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801dde0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801dde2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801dde6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801dde8:	4367      	muls	r7, r4
 801ddea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ddec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ddf0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ddf4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801ddf6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ddfa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ddfe:	fb04 fa0a 	mul.w	sl, r4, sl
 801de02:	44bc      	add	ip, r7
 801de04:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801de08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801de10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801de14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801de1c:	ea4c 040a 	orr.w	r4, ip, sl
 801de20:	9411      	str	r4, [sp, #68]	; 0x44
 801de22:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801de24:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801de28:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801de2c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801de30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801de32:	fb0e f707 	mul.w	r7, lr, r7
 801de36:	fb02 770c 	mla	r7, r2, ip, r7
 801de3a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801de3e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801de40:	fb00 770c 	mla	r7, r0, ip, r7
 801de44:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801de48:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801de4a:	fb08 770c 	mla	r7, r8, ip, r7
 801de4e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801de52:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801de54:	fb0e fe0c 	mul.w	lr, lr, ip
 801de58:	0a3f      	lsrs	r7, r7, #8
 801de5a:	fb02 e303 	mla	r3, r2, r3, lr
 801de5e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801de60:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801de64:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801de68:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801de6a:	fb00 330a 	mla	r3, r0, sl, r3
 801de6e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801de72:	f8b9 0000 	ldrh.w	r0, [r9]
 801de76:	fb08 3c0c 	mla	ip, r8, ip, r3
 801de7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de7c:	1202      	asrs	r2, r0, #8
 801de7e:	434b      	muls	r3, r1
 801de80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de84:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801de88:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801de8c:	1c59      	adds	r1, r3, #1
 801de8e:	ea47 070c 	orr.w	r7, r7, ip
 801de92:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801de96:	0c3b      	lsrs	r3, r7, #16
 801de98:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801de9c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801dea0:	b2ff      	uxtb	r7, r7
 801dea2:	fb13 f304 	smulbb	r3, r3, r4
 801dea6:	b2c9      	uxtb	r1, r1
 801dea8:	fb1c fc04 	smulbb	ip, ip, r4
 801deac:	fb02 3201 	mla	r2, r2, r1, r3
 801deb0:	10c3      	asrs	r3, r0, #3
 801deb2:	fb17 f704 	smulbb	r7, r7, r4
 801deb6:	00c0      	lsls	r0, r0, #3
 801deb8:	b292      	uxth	r2, r2
 801deba:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801debe:	b2c0      	uxtb	r0, r0
 801dec0:	fb03 c301 	mla	r3, r3, r1, ip
 801dec4:	f102 0c01 	add.w	ip, r2, #1
 801dec8:	fb00 7001 	mla	r0, r0, r1, r7
 801decc:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801ded0:	b280      	uxth	r0, r0
 801ded2:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801ded6:	b29b      	uxth	r3, r3
 801ded8:	1c42      	adds	r2, r0, #1
 801deda:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801dede:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dee2:	ea42 020c 	orr.w	r2, r2, ip
 801dee6:	f103 0c01 	add.w	ip, r3, #1
 801deea:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801deee:	095b      	lsrs	r3, r3, #5
 801def0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801def4:	431a      	orrs	r2, r3
 801def6:	f8a9 2000 	strh.w	r2, [r9]
 801defa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801defc:	f109 0902 	add.w	r9, r9, #2
 801df00:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801df02:	f10b 3bff 	add.w	fp, fp, #4294967295
 801df06:	441a      	add	r2, r3
 801df08:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801df0a:	9229      	str	r2, [sp, #164]	; 0xa4
 801df0c:	441d      	add	r5, r3
 801df0e:	e63d      	b.n	801db8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801df10:	2800      	cmp	r0, #0
 801df12:	f43f aedd 	beq.w	801dcd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801df16:	5c79      	ldrb	r1, [r7, r1]
 801df18:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801df1c:	910b      	str	r1, [sp, #44]	; 0x2c
 801df1e:	0e09      	lsrs	r1, r1, #24
 801df20:	9114      	str	r1, [sp, #80]	; 0x50
 801df22:	e6d5      	b.n	801dcd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801df24:	b01f      	add	sp, #124	; 0x7c
 801df26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801df2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801df2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df2e:	b089      	sub	sp, #36	; 0x24
 801df30:	9101      	str	r1, [sp, #4]
 801df32:	9801      	ldr	r0, [sp, #4]
 801df34:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801df38:	8800      	ldrh	r0, [r0, #0]
 801df3a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801df3e:	1206      	asrs	r6, r0, #8
 801df40:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801df44:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801df48:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801df4c:	9602      	str	r6, [sp, #8]
 801df4e:	10c6      	asrs	r6, r0, #3
 801df50:	00c0      	lsls	r0, r0, #3
 801df52:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801df56:	b2c0      	uxtb	r0, r0
 801df58:	9603      	str	r6, [sp, #12]
 801df5a:	9004      	str	r0, [sp, #16]
 801df5c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801df60:	fb07 100c 	mla	r0, r7, ip, r1
 801df64:	2f00      	cmp	r7, #0
 801df66:	eb02 0e00 	add.w	lr, r2, r0
 801df6a:	f2c0 810a 	blt.w	801e182 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801df6e:	45b8      	cmp	r8, r7
 801df70:	f340 8107 	ble.w	801e182 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801df74:	2900      	cmp	r1, #0
 801df76:	f2c0 8102 	blt.w	801e17e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801df7a:	458c      	cmp	ip, r1
 801df7c:	f340 80ff 	ble.w	801e17e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801df80:	5c12      	ldrb	r2, [r2, r0]
 801df82:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801df86:	1c4a      	adds	r2, r1, #1
 801df88:	f100 80fe 	bmi.w	801e188 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801df8c:	4594      	cmp	ip, r2
 801df8e:	f340 80fb 	ble.w	801e188 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801df92:	2d00      	cmp	r5, #0
 801df94:	f000 80fa 	beq.w	801e18c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801df98:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801df9c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801dfa0:	3701      	adds	r7, #1
 801dfa2:	f100 80f7 	bmi.w	801e194 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801dfa6:	45b8      	cmp	r8, r7
 801dfa8:	f340 80f4 	ble.w	801e194 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801dfac:	2c00      	cmp	r4, #0
 801dfae:	f000 80f4 	beq.w	801e19a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801dfb2:	2900      	cmp	r1, #0
 801dfb4:	eb0e 020c 	add.w	r2, lr, ip
 801dfb8:	f2c0 80ea 	blt.w	801e190 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801dfbc:	458c      	cmp	ip, r1
 801dfbe:	f340 80e7 	ble.w	801e190 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801dfc2:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801dfc6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801dfca:	3101      	adds	r1, #1
 801dfcc:	f100 80e8 	bmi.w	801e1a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801dfd0:	458c      	cmp	ip, r1
 801dfd2:	f340 80e5 	ble.w	801e1a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801dfd6:	2d00      	cmp	r5, #0
 801dfd8:	f000 80e4 	beq.w	801e1a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801dfdc:	7852      	ldrb	r2, [r2, #1]
 801dfde:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801dfe2:	0e0b      	lsrs	r3, r1, #24
 801dfe4:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801dfe8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801dfec:	9300      	str	r3, [sp, #0]
 801dfee:	b2a4      	uxth	r4, r4
 801dff0:	b2ab      	uxth	r3, r5
 801dff2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801dff6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801dffa:	fb03 f904 	mul.w	r9, r3, r4
 801dffe:	011b      	lsls	r3, r3, #4
 801e000:	fb0a f505 	mul.w	r5, sl, r5
 801e004:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801e008:	eba3 0e09 	sub.w	lr, r3, r9
 801e00c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801e010:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801e014:	0a28      	lsrs	r0, r5, #8
 801e016:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801e01a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e01e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801e022:	fb0a f303 	mul.w	r3, sl, r3
 801e026:	fb08 f707 	mul.w	r7, r8, r7
 801e02a:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801e02e:	4405      	add	r5, r0
 801e030:	fb08 fc0c 	mul.w	ip, r8, ip
 801e034:	b2a4      	uxth	r4, r4
 801e036:	0a2d      	lsrs	r5, r5, #8
 801e038:	fa1f fe8e 	uxth.w	lr, lr
 801e03c:	1b12      	subs	r2, r2, r4
 801e03e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801e042:	b292      	uxth	r2, r2
 801e044:	9005      	str	r0, [sp, #20]
 801e046:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801e04a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e04e:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801e052:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e056:	0a1b      	lsrs	r3, r3, #8
 801e058:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801e05c:	9306      	str	r3, [sp, #24]
 801e05e:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801e062:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801e066:	4460      	add	r0, ip
 801e068:	fb0b f303 	mul.w	r3, fp, r3
 801e06c:	fb0b f606 	mul.w	r6, fp, r6
 801e070:	0a00      	lsrs	r0, r0, #8
 801e072:	0a1d      	lsrs	r5, r3, #8
 801e074:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801e078:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801e07c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e080:	441d      	add	r5, r3
 801e082:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801e086:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e08a:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801e08e:	0a2d      	lsrs	r5, r5, #8
 801e090:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801e094:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801e098:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e09c:	0a36      	lsrs	r6, r6, #8
 801e09e:	0a1b      	lsrs	r3, r3, #8
 801e0a0:	fb05 f50e 	mul.w	r5, r5, lr
 801e0a4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801e0a8:	9307      	str	r3, [sp, #28]
 801e0aa:	0e0b      	lsrs	r3, r1, #24
 801e0ac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e0b0:	fb0e f606 	mul.w	r6, lr, r6
 801e0b4:	435f      	muls	r7, r3
 801e0b6:	4359      	muls	r1, r3
 801e0b8:	9b05      	ldr	r3, [sp, #20]
 801e0ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e0be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e0c2:	fb03 5502 	mla	r5, r3, r2, r5
 801e0c6:	9b06      	ldr	r3, [sp, #24]
 801e0c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e0cc:	fb0e fe0b 	mul.w	lr, lr, fp
 801e0d0:	44bc      	add	ip, r7
 801e0d2:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801e0d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e0da:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e0de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e0e2:	0a09      	lsrs	r1, r1, #8
 801e0e4:	fb0c 5509 	mla	r5, ip, r9, r5
 801e0e8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e0ec:	fb00 5504 	mla	r5, r0, r4, r5
 801e0f0:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801e0f4:	9b07      	ldr	r3, [sp, #28]
 801e0f6:	fb02 6000 	mla	r0, r2, r0, r6
 801e0fa:	0a2d      	lsrs	r5, r5, #8
 801e0fc:	fb02 e20a 	mla	r2, r2, sl, lr
 801e100:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e104:	fb09 0001 	mla	r0, r9, r1, r0
 801e108:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e10c:	fb04 0003 	mla	r0, r4, r3, r0
 801e110:	9b00      	ldr	r3, [sp, #0]
 801e112:	fb04 2408 	mla	r4, r4, r8, r2
 801e116:	9a04      	ldr	r2, [sp, #16]
 801e118:	0a00      	lsrs	r0, r0, #8
 801e11a:	fb09 4903 	mla	r9, r9, r3, r4
 801e11e:	9b02      	ldr	r3, [sp, #8]
 801e120:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801e124:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801e128:	4305      	orrs	r5, r0
 801e12a:	fa5f f989 	uxtb.w	r9, r9
 801e12e:	fb03 f109 	mul.w	r1, r3, r9
 801e132:	9b03      	ldr	r3, [sp, #12]
 801e134:	fb03 f309 	mul.w	r3, r3, r9
 801e138:	fb02 f909 	mul.w	r9, r2, r9
 801e13c:	1c4a      	adds	r2, r1, #1
 801e13e:	1c58      	adds	r0, r3, #1
 801e140:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e144:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e148:	0c2a      	lsrs	r2, r5, #16
 801e14a:	0a2b      	lsrs	r3, r5, #8
 801e14c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801e150:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e154:	0212      	lsls	r2, r2, #8
 801e156:	00db      	lsls	r3, r3, #3
 801e158:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e15c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e160:	4313      	orrs	r3, r2
 801e162:	f109 0201 	add.w	r2, r9, #1
 801e166:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801e16a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801e16e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e172:	431d      	orrs	r5, r3
 801e174:	9b01      	ldr	r3, [sp, #4]
 801e176:	801d      	strh	r5, [r3, #0]
 801e178:	b009      	add	sp, #36	; 0x24
 801e17a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e17e:	2000      	movs	r0, #0
 801e180:	e701      	b.n	801df86 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801e182:	2600      	movs	r6, #0
 801e184:	4630      	mov	r0, r6
 801e186:	e70b      	b.n	801dfa0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e188:	2600      	movs	r6, #0
 801e18a:	e709      	b.n	801dfa0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e18c:	462e      	mov	r6, r5
 801e18e:	e707      	b.n	801dfa0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e190:	2700      	movs	r7, #0
 801e192:	e71a      	b.n	801dfca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801e194:	2100      	movs	r1, #0
 801e196:	460f      	mov	r7, r1
 801e198:	e723      	b.n	801dfe2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e19a:	4621      	mov	r1, r4
 801e19c:	4627      	mov	r7, r4
 801e19e:	e720      	b.n	801dfe2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e1a0:	2100      	movs	r1, #0
 801e1a2:	e71e      	b.n	801dfe2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e1a4:	4629      	mov	r1, r5
 801e1a6:	e71c      	b.n	801dfe2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801e1a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1ac:	b09b      	sub	sp, #108	; 0x6c
 801e1ae:	9218      	str	r2, [sp, #96]	; 0x60
 801e1b0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e1b2:	9019      	str	r0, [sp, #100]	; 0x64
 801e1b4:	9116      	str	r1, [sp, #88]	; 0x58
 801e1b6:	6850      	ldr	r0, [r2, #4]
 801e1b8:	9307      	str	r3, [sp, #28]
 801e1ba:	6812      	ldr	r2, [r2, #0]
 801e1bc:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801e1be:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e1c2:	fb00 1303 	mla	r3, r0, r3, r1
 801e1c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e1ca:	930a      	str	r3, [sp, #40]	; 0x28
 801e1cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e1ce:	681b      	ldr	r3, [r3, #0]
 801e1d0:	930f      	str	r3, [sp, #60]	; 0x3c
 801e1d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e1d4:	685e      	ldr	r6, [r3, #4]
 801e1d6:	3604      	adds	r6, #4
 801e1d8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e1da:	2b00      	cmp	r3, #0
 801e1dc:	dc03      	bgt.n	801e1e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e1de:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e1e0:	2b00      	cmp	r3, #0
 801e1e2:	f340 8373 	ble.w	801e8cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801e1e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e1e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e1ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e1f0:	1e48      	subs	r0, r1, #1
 801e1f2:	1e57      	subs	r7, r2, #1
 801e1f4:	9b07      	ldr	r3, [sp, #28]
 801e1f6:	2b00      	cmp	r3, #0
 801e1f8:	f340 818f 	ble.w	801e51a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801e1fc:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801e1fe:	142b      	asrs	r3, r5, #16
 801e200:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e204:	d406      	bmi.n	801e214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e206:	4584      	cmp	ip, r0
 801e208:	da04      	bge.n	801e214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e20a:	2b00      	cmp	r3, #0
 801e20c:	db02      	blt.n	801e214 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e20e:	42bb      	cmp	r3, r7
 801e210:	f2c0 8184 	blt.w	801e51c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801e214:	f11c 0c01 	adds.w	ip, ip, #1
 801e218:	f100 8172 	bmi.w	801e500 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e21c:	4561      	cmp	r1, ip
 801e21e:	f2c0 816f 	blt.w	801e500 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e222:	3301      	adds	r3, #1
 801e224:	f100 816c 	bmi.w	801e500 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e228:	429a      	cmp	r2, r3
 801e22a:	f2c0 8169 	blt.w	801e500 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801e22e:	9b07      	ldr	r3, [sp, #28]
 801e230:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e232:	9317      	str	r3, [sp, #92]	; 0x5c
 801e234:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e236:	2b00      	cmp	r3, #0
 801e238:	f340 818e 	ble.w	801e558 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801e23c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e23e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e242:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e246:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e24a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e24c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801e250:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e252:	141b      	asrs	r3, r3, #16
 801e254:	f100 81d1 	bmi.w	801e5fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e258:	f101 38ff 	add.w	r8, r1, #4294967295
 801e25c:	4543      	cmp	r3, r8
 801e25e:	f280 81cc 	bge.w	801e5fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e262:	f1bc 0f00 	cmp.w	ip, #0
 801e266:	f2c0 81c8 	blt.w	801e5fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e26a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e26e:	45c4      	cmp	ip, r8
 801e270:	f280 81c3 	bge.w	801e5fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e274:	b209      	sxth	r1, r1
 801e276:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801e278:	fb0c 3301 	mla	r3, ip, r1, r3
 801e27c:	eb04 0803 	add.w	r8, r4, r3
 801e280:	5ce3      	ldrb	r3, [r4, r3]
 801e282:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e286:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801e28a:	2a00      	cmp	r2, #0
 801e28c:	f000 81aa 	beq.w	801e5e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801e290:	f898 c001 	ldrb.w	ip, [r8, #1]
 801e294:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801e298:	940b      	str	r4, [sp, #44]	; 0x2c
 801e29a:	0e24      	lsrs	r4, r4, #24
 801e29c:	9412      	str	r4, [sp, #72]	; 0x48
 801e29e:	b178      	cbz	r0, 801e2c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801e2a0:	eb08 0c01 	add.w	ip, r8, r1
 801e2a4:	f818 1001 	ldrb.w	r1, [r8, r1]
 801e2a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e2ac:	9108      	str	r1, [sp, #32]
 801e2ae:	0e09      	lsrs	r1, r1, #24
 801e2b0:	9110      	str	r1, [sp, #64]	; 0x40
 801e2b2:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801e2b6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e2ba:	910c      	str	r1, [sp, #48]	; 0x30
 801e2bc:	0e09      	lsrs	r1, r1, #24
 801e2be:	9113      	str	r1, [sp, #76]	; 0x4c
 801e2c0:	b292      	uxth	r2, r2
 801e2c2:	9912      	ldr	r1, [sp, #72]	; 0x48
 801e2c4:	b280      	uxth	r0, r0
 801e2c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e2c8:	fb02 f900 	mul.w	r9, r2, r0
 801e2cc:	0112      	lsls	r2, r2, #4
 801e2ce:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e2d2:	eba2 0809 	sub.w	r8, r2, r9
 801e2d6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e2da:	b280      	uxth	r0, r0
 801e2dc:	fa1f f888 	uxth.w	r8, r8
 801e2e0:	1a12      	subs	r2, r2, r0
 801e2e2:	fb08 f101 	mul.w	r1, r8, r1
 801e2e6:	b292      	uxth	r2, r2
 801e2e8:	fb02 110e 	mla	r1, r2, lr, r1
 801e2ec:	fb00 1104 	mla	r1, r0, r4, r1
 801e2f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e2f2:	fb09 1104 	mla	r1, r9, r4, r1
 801e2f6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e2fa:	2900      	cmp	r1, #0
 801e2fc:	f000 80f5 	beq.w	801e4ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e300:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e304:	d01b      	beq.n	801e33e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801e306:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e30a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e30e:	fb0e fa0a 	mul.w	sl, lr, sl
 801e312:	fb0e fe03 	mul.w	lr, lr, r3
 801e316:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e31a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e31e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e322:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e326:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e32a:	4453      	add	r3, sl
 801e32c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e330:	0a1b      	lsrs	r3, r3, #8
 801e332:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e336:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e33a:	ea43 030c 	orr.w	r3, r3, ip
 801e33e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e340:	2cff      	cmp	r4, #255	; 0xff
 801e342:	d021      	beq.n	801e388 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801e344:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e346:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e34a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e34c:	fb04 fb0b 	mul.w	fp, r4, fp
 801e350:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e352:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e356:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e358:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e35c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e360:	fb04 fa0a 	mul.w	sl, r4, sl
 801e364:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e368:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e36c:	44de      	add	lr, fp
 801e36e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e372:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e376:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e37a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e37e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e382:	ea4e 040a 	orr.w	r4, lr, sl
 801e386:	940b      	str	r4, [sp, #44]	; 0x2c
 801e388:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e38a:	2cff      	cmp	r4, #255	; 0xff
 801e38c:	d021      	beq.n	801e3d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e38e:	9c08      	ldr	r4, [sp, #32]
 801e390:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e394:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e396:	fb04 fb0b 	mul.w	fp, r4, fp
 801e39a:	9c08      	ldr	r4, [sp, #32]
 801e39c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e3a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801e3a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e3a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e3aa:	fb04 fa0a 	mul.w	sl, r4, sl
 801e3ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e3b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e3b6:	44de      	add	lr, fp
 801e3b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e3bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e3c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e3c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e3c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e3cc:	ea4e 040a 	orr.w	r4, lr, sl
 801e3d0:	9408      	str	r4, [sp, #32]
 801e3d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e3d4:	2cff      	cmp	r4, #255	; 0xff
 801e3d6:	d021      	beq.n	801e41c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e3d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e3da:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801e3de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e3e0:	fb04 fb0b 	mul.w	fp, r4, fp
 801e3e4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e3e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e3ea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e3ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e3f0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e3f4:	fb04 fa0a 	mul.w	sl, r4, sl
 801e3f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e3fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e400:	44de      	add	lr, fp
 801e402:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e406:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e40a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e40e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e412:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e416:	ea4e 040a 	orr.w	r4, lr, sl
 801e41a:	940c      	str	r4, [sp, #48]	; 0x30
 801e41c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e41e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801e422:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e426:	43c9      	mvns	r1, r1
 801e428:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e42c:	9c08      	ldr	r4, [sp, #32]
 801e42e:	fb08 fc0c 	mul.w	ip, r8, ip
 801e432:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e436:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801e43a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e43c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e440:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801e444:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e446:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e44a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801e44e:	fb08 f80e 	mul.w	r8, r8, lr
 801e452:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e456:	fa5f fe81 	uxtb.w	lr, r1
 801e45a:	fb02 8303 	mla	r3, r2, r3, r8
 801e45e:	9a08      	ldr	r2, [sp, #32]
 801e460:	f8b7 8000 	ldrh.w	r8, [r7]
 801e464:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e468:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e46c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e46e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801e472:	fb00 330a 	mla	r3, r0, sl, r3
 801e476:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801e47a:	ea4f 2228 	mov.w	r2, r8, asr #8
 801e47e:	fb09 3900 	mla	r9, r9, r0, r3
 801e482:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801e486:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e48a:	b2c9      	uxtb	r1, r1
 801e48c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e490:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e494:	fb02 f20e 	mul.w	r2, r2, lr
 801e498:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e49c:	fb00 f00e 	mul.w	r0, r0, lr
 801e4a0:	1c53      	adds	r3, r2, #1
 801e4a2:	fb01 f10e 	mul.w	r1, r1, lr
 801e4a6:	ea4c 0c09 	orr.w	ip, ip, r9
 801e4aa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801e4ae:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801e4b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e4b6:	4a60      	ldr	r2, [pc, #384]	; (801e638 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801e4b8:	b2db      	uxtb	r3, r3
 801e4ba:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801e4be:	1c43      	adds	r3, r0, #1
 801e4c0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e4c4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801e4c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e4cc:	00db      	lsls	r3, r3, #3
 801e4ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e4d2:	4313      	orrs	r3, r2
 801e4d4:	1c4a      	adds	r2, r1, #1
 801e4d6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e4da:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e4de:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e4e2:	ea4c 0c03 	orr.w	ip, ip, r3
 801e4e6:	f8a7 c000 	strh.w	ip, [r7]
 801e4ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e4ec:	3702      	adds	r7, #2
 801e4ee:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801e4f0:	441a      	add	r2, r3
 801e4f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e4f4:	441d      	add	r5, r3
 801e4f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e4f8:	9225      	str	r2, [sp, #148]	; 0x94
 801e4fa:	3b01      	subs	r3, #1
 801e4fc:	9317      	str	r3, [sp, #92]	; 0x5c
 801e4fe:	e699      	b.n	801e234 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801e500:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e502:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801e504:	441c      	add	r4, r3
 801e506:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e508:	441d      	add	r5, r3
 801e50a:	9b07      	ldr	r3, [sp, #28]
 801e50c:	9425      	str	r4, [sp, #148]	; 0x94
 801e50e:	3b01      	subs	r3, #1
 801e510:	9307      	str	r3, [sp, #28]
 801e512:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e514:	3302      	adds	r3, #2
 801e516:	930a      	str	r3, [sp, #40]	; 0x28
 801e518:	e66c      	b.n	801e1f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e51a:	d024      	beq.n	801e566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801e51c:	9b07      	ldr	r3, [sp, #28]
 801e51e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801e520:	3b01      	subs	r3, #1
 801e522:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801e524:	fb00 4003 	mla	r0, r0, r3, r4
 801e528:	1400      	asrs	r0, r0, #16
 801e52a:	f53f ae80 	bmi.w	801e22e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e52e:	3901      	subs	r1, #1
 801e530:	4288      	cmp	r0, r1
 801e532:	f6bf ae7c 	bge.w	801e22e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e536:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e538:	fb01 5303 	mla	r3, r1, r3, r5
 801e53c:	141b      	asrs	r3, r3, #16
 801e53e:	f53f ae76 	bmi.w	801e22e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e542:	3a01      	subs	r2, #1
 801e544:	4293      	cmp	r3, r2
 801e546:	f6bf ae72 	bge.w	801e22e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801e54a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e54e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e552:	f1bb 0f00 	cmp.w	fp, #0
 801e556:	dc71      	bgt.n	801e63c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801e558:	9b07      	ldr	r3, [sp, #28]
 801e55a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e55e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e560:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e564:	930a      	str	r3, [sp, #40]	; 0x28
 801e566:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e568:	2b00      	cmp	r3, #0
 801e56a:	f340 81af 	ble.w	801e8cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801e56e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e572:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e574:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e578:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e57c:	eef0 6a62 	vmov.f32	s13, s5
 801e580:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e584:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e588:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e58c:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801e590:	eef0 6a43 	vmov.f32	s13, s6
 801e594:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e598:	ee16 5a90 	vmov	r5, s13
 801e59c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e5a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e5a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e5a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e5ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e5b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e5b4:	ee12 2a90 	vmov	r2, s5
 801e5b8:	eef0 2a47 	vmov.f32	s5, s14
 801e5bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5c0:	ee13 2a10 	vmov	r2, s6
 801e5c4:	9327      	str	r3, [sp, #156]	; 0x9c
 801e5c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e5c8:	eeb0 3a67 	vmov.f32	s6, s15
 801e5cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5d0:	9328      	str	r3, [sp, #160]	; 0xa0
 801e5d2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e5d4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e5d6:	3b01      	subs	r3, #1
 801e5d8:	9316      	str	r3, [sp, #88]	; 0x58
 801e5da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e5dc:	bf08      	it	eq
 801e5de:	4613      	moveq	r3, r2
 801e5e0:	9307      	str	r3, [sp, #28]
 801e5e2:	e5f9      	b.n	801e1d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e5e4:	2800      	cmp	r0, #0
 801e5e6:	f43f ae6b 	beq.w	801e2c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801e5ea:	f818 1001 	ldrb.w	r1, [r8, r1]
 801e5ee:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e5f2:	9108      	str	r1, [sp, #32]
 801e5f4:	0e09      	lsrs	r1, r1, #24
 801e5f6:	9110      	str	r1, [sp, #64]	; 0x40
 801e5f8:	e662      	b.n	801e2c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801e5fa:	f113 0801 	adds.w	r8, r3, #1
 801e5fe:	f53f af74 	bmi.w	801e4ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e602:	4541      	cmp	r1, r8
 801e604:	f6ff af71 	blt.w	801e4ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e608:	f11c 0801 	adds.w	r8, ip, #1
 801e60c:	f53f af6d 	bmi.w	801e4ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e610:	45c6      	cmp	lr, r8
 801e612:	f6ff af6a 	blt.w	801e4ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e616:	b209      	sxth	r1, r1
 801e618:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801e61c:	fa0f f38e 	sxth.w	r3, lr
 801e620:	9100      	str	r1, [sp, #0]
 801e622:	4639      	mov	r1, r7
 801e624:	9301      	str	r3, [sp, #4]
 801e626:	4633      	mov	r3, r6
 801e628:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801e62c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e62e:	9819      	ldr	r0, [sp, #100]	; 0x64
 801e630:	f7ff fc7b 	bl	801df2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801e634:	e759      	b.n	801e4ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e636:	bf00      	nop
 801e638:	fffff800 	.word	0xfffff800
 801e63c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e63e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e642:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801e644:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e648:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e64a:	1427      	asrs	r7, r4, #16
 801e64c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801e64e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e652:	142b      	asrs	r3, r5, #16
 801e654:	fb01 7303 	mla	r3, r1, r3, r7
 801e658:	18e7      	adds	r7, r4, r3
 801e65a:	5ce3      	ldrb	r3, [r4, r3]
 801e65c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e660:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e664:	2a00      	cmp	r2, #0
 801e666:	f000 8127 	beq.w	801e8b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801e66a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801e66e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801e672:	940d      	str	r4, [sp, #52]	; 0x34
 801e674:	0e24      	lsrs	r4, r4, #24
 801e676:	9414      	str	r4, [sp, #80]	; 0x50
 801e678:	b170      	cbz	r0, 801e698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801e67a:	eb07 0e01 	add.w	lr, r7, r1
 801e67e:	5c79      	ldrb	r1, [r7, r1]
 801e680:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e684:	9109      	str	r1, [sp, #36]	; 0x24
 801e686:	0e09      	lsrs	r1, r1, #24
 801e688:	9111      	str	r1, [sp, #68]	; 0x44
 801e68a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801e68e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e692:	910e      	str	r1, [sp, #56]	; 0x38
 801e694:	0e09      	lsrs	r1, r1, #24
 801e696:	9115      	str	r1, [sp, #84]	; 0x54
 801e698:	b292      	uxth	r2, r2
 801e69a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e69c:	b280      	uxth	r0, r0
 801e69e:	fb02 f800 	mul.w	r8, r2, r0
 801e6a2:	0112      	lsls	r2, r2, #4
 801e6a4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e6a8:	eba2 0e08 	sub.w	lr, r2, r8
 801e6ac:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801e6b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e6b2:	b280      	uxth	r0, r0
 801e6b4:	fa1f fe8e 	uxth.w	lr, lr
 801e6b8:	1a09      	subs	r1, r1, r0
 801e6ba:	fb0e f202 	mul.w	r2, lr, r2
 801e6be:	b289      	uxth	r1, r1
 801e6c0:	fb01 220c 	mla	r2, r1, ip, r2
 801e6c4:	fb00 2204 	mla	r2, r0, r4, r2
 801e6c8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801e6ca:	fb08 2204 	mla	r2, r8, r4, r2
 801e6ce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e6d2:	2a00      	cmp	r2, #0
 801e6d4:	f000 80e5 	beq.w	801e8a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801e6d8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e6dc:	d019      	beq.n	801e712 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801e6de:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e6e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e6e6:	fb0c fa0a 	mul.w	sl, ip, sl
 801e6ea:	fb0c fc03 	mul.w	ip, ip, r3
 801e6ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e6f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e6f6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e6fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e6fe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e702:	4453      	add	r3, sl
 801e704:	0a3f      	lsrs	r7, r7, #8
 801e706:	0a1b      	lsrs	r3, r3, #8
 801e708:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e70c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e710:	433b      	orrs	r3, r7
 801e712:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e714:	2cff      	cmp	r4, #255	; 0xff
 801e716:	d020      	beq.n	801e75a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801e718:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e71a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e71e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e720:	4367      	muls	r7, r4
 801e722:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e724:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e728:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e72c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e72e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e732:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e736:	fb04 fa0a 	mul.w	sl, r4, sl
 801e73a:	44bc      	add	ip, r7
 801e73c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e740:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e744:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e748:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e74c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e750:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e754:	ea4c 040a 	orr.w	r4, ip, sl
 801e758:	940d      	str	r4, [sp, #52]	; 0x34
 801e75a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e75c:	2cff      	cmp	r4, #255	; 0xff
 801e75e:	d020      	beq.n	801e7a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801e760:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801e762:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e766:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e768:	4367      	muls	r7, r4
 801e76a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801e76c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e770:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e774:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801e776:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e77a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e77e:	fb04 fa0a 	mul.w	sl, r4, sl
 801e782:	44bc      	add	ip, r7
 801e784:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e788:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e78c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e790:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e794:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e798:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e79c:	ea4c 040a 	orr.w	r4, ip, sl
 801e7a0:	9409      	str	r4, [sp, #36]	; 0x24
 801e7a2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801e7a4:	2cff      	cmp	r4, #255	; 0xff
 801e7a6:	d020      	beq.n	801e7ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801e7a8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e7aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e7ae:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801e7b0:	4367      	muls	r7, r4
 801e7b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e7b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e7b8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801e7bc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801e7be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e7c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e7c6:	fb04 fa0a 	mul.w	sl, r4, sl
 801e7ca:	44bc      	add	ip, r7
 801e7cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e7d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e7d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e7d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e7dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e7e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e7e4:	ea4c 040a 	orr.w	r4, ip, sl
 801e7e8:	940e      	str	r4, [sp, #56]	; 0x38
 801e7ea:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e7ec:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e7f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e7f4:	43d2      	mvns	r2, r2
 801e7f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801e7fa:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801e7fc:	b2d2      	uxtb	r2, r2
 801e7fe:	fb0e f707 	mul.w	r7, lr, r7
 801e802:	fb01 770c 	mla	r7, r1, ip, r7
 801e806:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e80a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801e80c:	fb00 770c 	mla	r7, r0, ip, r7
 801e810:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e814:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e816:	fb08 770c 	mla	r7, r8, ip, r7
 801e81a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801e81e:	fb0e fe0c 	mul.w	lr, lr, ip
 801e822:	0a3f      	lsrs	r7, r7, #8
 801e824:	fb01 e303 	mla	r3, r1, r3, lr
 801e828:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e82a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e82e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e832:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e834:	fb00 330a 	mla	r3, r0, sl, r3
 801e838:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801e83c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e840:	f8b9 3000 	ldrh.w	r3, [r9]
 801e844:	1218      	asrs	r0, r3, #8
 801e846:	10d9      	asrs	r1, r3, #3
 801e848:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e84c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e850:	00db      	lsls	r3, r3, #3
 801e852:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e856:	4350      	muls	r0, r2
 801e858:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e85c:	b2db      	uxtb	r3, r3
 801e85e:	4351      	muls	r1, r2
 801e860:	ea47 070c 	orr.w	r7, r7, ip
 801e864:	4353      	muls	r3, r2
 801e866:	1c42      	adds	r2, r0, #1
 801e868:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e86c:	0c3a      	lsrs	r2, r7, #16
 801e86e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e872:	4a18      	ldr	r2, [pc, #96]	; (801e8d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801e874:	b2c0      	uxtb	r0, r0
 801e876:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801e87a:	1c4a      	adds	r2, r1, #1
 801e87c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e880:	0a3a      	lsrs	r2, r7, #8
 801e882:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e886:	00c9      	lsls	r1, r1, #3
 801e888:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e88c:	4301      	orrs	r1, r0
 801e88e:	1c58      	adds	r0, r3, #1
 801e890:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e894:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801e898:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801e89c:	4308      	orrs	r0, r1
 801e89e:	f8a9 0000 	strh.w	r0, [r9]
 801e8a2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e8a4:	f109 0902 	add.w	r9, r9, #2
 801e8a8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801e8aa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e8ae:	441a      	add	r2, r3
 801e8b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e8b2:	9225      	str	r2, [sp, #148]	; 0x94
 801e8b4:	441d      	add	r5, r3
 801e8b6:	e64c      	b.n	801e552 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801e8b8:	2800      	cmp	r0, #0
 801e8ba:	f43f aeed 	beq.w	801e698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801e8be:	5c79      	ldrb	r1, [r7, r1]
 801e8c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e8c4:	9109      	str	r1, [sp, #36]	; 0x24
 801e8c6:	0e09      	lsrs	r1, r1, #24
 801e8c8:	9111      	str	r1, [sp, #68]	; 0x44
 801e8ca:	e6e5      	b.n	801e698 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801e8cc:	b01b      	add	sp, #108	; 0x6c
 801e8ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8d2:	bf00      	nop
 801e8d4:	fffff800 	.word	0xfffff800

0801e8d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801e8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8dc:	b085      	sub	sp, #20
 801e8de:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801e8e2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801e8e6:	2800      	cmp	r0, #0
 801e8e8:	9103      	str	r1, [sp, #12]
 801e8ea:	fb00 7406 	mla	r4, r0, r6, r7
 801e8ee:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801e8f2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801e8f6:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801e8fa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801e8fe:	eb03 0904 	add.w	r9, r3, r4
 801e902:	9501      	str	r5, [sp, #4]
 801e904:	f2c0 8150 	blt.w	801eba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801e908:	4583      	cmp	fp, r0
 801e90a:	f340 814d 	ble.w	801eba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801e90e:	2f00      	cmp	r7, #0
 801e910:	f2c0 8146 	blt.w	801eba0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801e914:	42be      	cmp	r6, r7
 801e916:	f340 8143 	ble.w	801eba0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801e91a:	f813 c004 	ldrb.w	ip, [r3, r4]
 801e91e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801e922:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801e926:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801e92a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801e92e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e932:	4355      	muls	r5, r2
 801e934:	fb0c f203 	mul.w	r2, ip, r3
 801e938:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801e93c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801e940:	441d      	add	r5, r3
 801e942:	f102 0320 	add.w	r3, r2, #32
 801e946:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e94a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801e94e:	0a1b      	lsrs	r3, r3, #8
 801e950:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e954:	431c      	orrs	r4, r3
 801e956:	1c7b      	adds	r3, r7, #1
 801e958:	f100 812b 	bmi.w	801ebb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801e95c:	429e      	cmp	r6, r3
 801e95e:	f340 8128 	ble.w	801ebb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801e962:	2900      	cmp	r1, #0
 801e964:	f000 8128 	beq.w	801ebb8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801e968:	9a01      	ldr	r2, [sp, #4]
 801e96a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801e96e:	8855      	ldrh	r5, [r2, #2]
 801e970:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801e974:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801e978:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e97c:	fb08 f802 	mul.w	r8, r8, r2
 801e980:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801e984:	435d      	muls	r5, r3
 801e986:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801e98a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e98e:	44d0      	add	r8, sl
 801e990:	f105 0a20 	add.w	sl, r5, #32
 801e994:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801e998:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801e99c:	0a2d      	lsrs	r5, r5, #8
 801e99e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e9a2:	432a      	orrs	r2, r5
 801e9a4:	3001      	adds	r0, #1
 801e9a6:	f100 810d 	bmi.w	801ebc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801e9aa:	4583      	cmp	fp, r0
 801e9ac:	f340 810a 	ble.w	801ebc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801e9b0:	f1be 0f00 	cmp.w	lr, #0
 801e9b4:	f000 810b 	beq.w	801ebce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801e9b8:	2f00      	cmp	r7, #0
 801e9ba:	f2c0 8100 	blt.w	801ebbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801e9be:	42be      	cmp	r6, r7
 801e9c0:	f340 80fd 	ble.w	801ebbe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801e9c4:	9801      	ldr	r0, [sp, #4]
 801e9c6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801e9ca:	f819 5006 	ldrb.w	r5, [r9, r6]
 801e9ce:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801e9d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e9d6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801e9da:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e9de:	fb0a fa00 	mul.w	sl, sl, r0
 801e9e2:	fb05 f808 	mul.w	r8, r5, r8
 801e9e6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801e9ea:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801e9ee:	4482      	add	sl, r0
 801e9f0:	f108 0020 	add.w	r0, r8, #32
 801e9f4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e9f8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801e9fc:	0a00      	lsrs	r0, r0, #8
 801e9fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ea02:	ea4b 0b00 	orr.w	fp, fp, r0
 801ea06:	3701      	adds	r7, #1
 801ea08:	f100 80e6 	bmi.w	801ebd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ea0c:	42be      	cmp	r6, r7
 801ea0e:	f340 80e3 	ble.w	801ebd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ea12:	2900      	cmp	r1, #0
 801ea14:	f000 80e3 	beq.w	801ebde <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801ea18:	3601      	adds	r6, #1
 801ea1a:	9801      	ldr	r0, [sp, #4]
 801ea1c:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ea20:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ea24:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ea28:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801ea2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ea30:	fb09 f906 	mul.w	r9, r9, r6
 801ea34:	fb07 f800 	mul.w	r8, r7, r0
 801ea38:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801ea3c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ea40:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801ea44:	44d1      	add	r9, sl
 801ea46:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ea4a:	f108 0020 	add.w	r0, r8, #32
 801ea4e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ea52:	0a00      	lsrs	r0, r0, #8
 801ea54:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ea58:	4330      	orrs	r0, r6
 801ea5a:	b28e      	uxth	r6, r1
 801ea5c:	fa1f f98e 	uxth.w	r9, lr
 801ea60:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ea64:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ea68:	fb06 f809 	mul.w	r8, r6, r9
 801ea6c:	0136      	lsls	r6, r6, #4
 801ea6e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ea72:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ea76:	9601      	str	r6, [sp, #4]
 801ea78:	ea4a 0404 	orr.w	r4, sl, r4
 801ea7c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ea80:	fa1f f689 	uxth.w	r6, r9
 801ea84:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ea88:	fb11 f90e 	smulbb	r9, r1, lr
 801ea8c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ea90:	9602      	str	r6, [sp, #8]
 801ea92:	4626      	mov	r6, r4
 801ea94:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ea98:	f1ce 0410 	rsb	r4, lr, #16
 801ea9c:	ea4a 0202 	orr.w	r2, sl, r2
 801eaa0:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801eaa4:	1a64      	subs	r4, r4, r1
 801eaa6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801eaaa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eaae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801eab2:	434a      	muls	r2, r1
 801eab4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801eab8:	ea4a 0000 	orr.w	r0, sl, r0
 801eabc:	9903      	ldr	r1, [sp, #12]
 801eabe:	fb04 2406 	mla	r4, r4, r6, r2
 801eac2:	9e02      	ldr	r6, [sp, #8]
 801eac4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801eac8:	fb09 4200 	mla	r2, r9, r0, r4
 801eacc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ead0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ead4:	8808      	ldrh	r0, [r1, #0]
 801ead6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801eada:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801eade:	ea44 0b0b 	orr.w	fp, r4, fp
 801eae2:	9c01      	ldr	r4, [sp, #4]
 801eae4:	b289      	uxth	r1, r1
 801eae6:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801eaea:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801eaee:	1ba4      	subs	r4, r4, r6
 801eaf0:	9e01      	ldr	r6, [sp, #4]
 801eaf2:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801eaf6:	eba6 0608 	sub.w	r6, r6, r8
 801eafa:	b2a4      	uxth	r4, r4
 801eafc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801eb00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb04:	b2b6      	uxth	r6, r6
 801eb06:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eb0a:	4373      	muls	r3, r6
 801eb0c:	ea42 0e0e 	orr.w	lr, r2, lr
 801eb10:	fb0c 3304 	mla	r3, ip, r4, r3
 801eb14:	9c02      	ldr	r4, [sp, #8]
 801eb16:	fa1f f28e 	uxth.w	r2, lr
 801eb1a:	fb04 3505 	mla	r5, r4, r5, r3
 801eb1e:	10d4      	asrs	r4, r2, #3
 801eb20:	fb08 5707 	mla	r7, r8, r7, r5
 801eb24:	1215      	asrs	r5, r2, #8
 801eb26:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801eb2a:	00d2      	lsls	r2, r2, #3
 801eb2c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801eb30:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eb34:	b2d2      	uxtb	r2, r2
 801eb36:	434f      	muls	r7, r1
 801eb38:	1c7b      	adds	r3, r7, #1
 801eb3a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801eb3e:	1203      	asrs	r3, r0, #8
 801eb40:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801eb44:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801eb48:	b2ff      	uxtb	r7, r7
 801eb4a:	fb13 f307 	smulbb	r3, r3, r7
 801eb4e:	fb05 3501 	mla	r5, r5, r1, r3
 801eb52:	10c3      	asrs	r3, r0, #3
 801eb54:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801eb58:	b2ad      	uxth	r5, r5
 801eb5a:	fb13 f307 	smulbb	r3, r3, r7
 801eb5e:	fb04 3401 	mla	r4, r4, r1, r3
 801eb62:	00c3      	lsls	r3, r0, #3
 801eb64:	b2db      	uxtb	r3, r3
 801eb66:	b2a4      	uxth	r4, r4
 801eb68:	fb13 f307 	smulbb	r3, r3, r7
 801eb6c:	fb02 3101 	mla	r1, r2, r1, r3
 801eb70:	1c6b      	adds	r3, r5, #1
 801eb72:	1c62      	adds	r2, r4, #1
 801eb74:	b289      	uxth	r1, r1
 801eb76:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801eb7a:	1c4b      	adds	r3, r1, #1
 801eb7c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801eb80:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801eb84:	9a03      	ldr	r2, [sp, #12]
 801eb86:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801eb8a:	0964      	lsrs	r4, r4, #5
 801eb8c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eb90:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801eb94:	432b      	orrs	r3, r5
 801eb96:	4323      	orrs	r3, r4
 801eb98:	8013      	strh	r3, [r2, #0]
 801eb9a:	b005      	add	sp, #20
 801eb9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eba0:	f04f 0c00 	mov.w	ip, #0
 801eba4:	4664      	mov	r4, ip
 801eba6:	e6d6      	b.n	801e956 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801eba8:	2300      	movs	r3, #0
 801ebaa:	469c      	mov	ip, r3
 801ebac:	461a      	mov	r2, r3
 801ebae:	461c      	mov	r4, r3
 801ebb0:	e6f8      	b.n	801e9a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ebb2:	2300      	movs	r3, #0
 801ebb4:	461a      	mov	r2, r3
 801ebb6:	e6f5      	b.n	801e9a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ebb8:	460b      	mov	r3, r1
 801ebba:	460a      	mov	r2, r1
 801ebbc:	e6f2      	b.n	801e9a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ebbe:	2500      	movs	r5, #0
 801ebc0:	46ab      	mov	fp, r5
 801ebc2:	e720      	b.n	801ea06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801ebc4:	2700      	movs	r7, #0
 801ebc6:	463d      	mov	r5, r7
 801ebc8:	4638      	mov	r0, r7
 801ebca:	46bb      	mov	fp, r7
 801ebcc:	e745      	b.n	801ea5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ebce:	4677      	mov	r7, lr
 801ebd0:	4675      	mov	r5, lr
 801ebd2:	4670      	mov	r0, lr
 801ebd4:	46f3      	mov	fp, lr
 801ebd6:	e740      	b.n	801ea5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ebd8:	2700      	movs	r7, #0
 801ebda:	4638      	mov	r0, r7
 801ebdc:	e73d      	b.n	801ea5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ebde:	460f      	mov	r7, r1
 801ebe0:	4608      	mov	r0, r1
 801ebe2:	e73a      	b.n	801ea5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801ebe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ebe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ebe8:	b097      	sub	sp, #92	; 0x5c
 801ebea:	9214      	str	r2, [sp, #80]	; 0x50
 801ebec:	9308      	str	r3, [sp, #32]
 801ebee:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ebf0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ebf4:	9015      	str	r0, [sp, #84]	; 0x54
 801ebf6:	9312      	str	r3, [sp, #72]	; 0x48
 801ebf8:	6850      	ldr	r0, [r2, #4]
 801ebfa:	9111      	str	r1, [sp, #68]	; 0x44
 801ebfc:	6812      	ldr	r2, [r2, #0]
 801ebfe:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801ec02:	fb00 1303 	mla	r3, r0, r3, r1
 801ec06:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ec0a:	9309      	str	r3, [sp, #36]	; 0x24
 801ec0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec0e:	681b      	ldr	r3, [r3, #0]
 801ec10:	930b      	str	r3, [sp, #44]	; 0x2c
 801ec12:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec14:	685b      	ldr	r3, [r3, #4]
 801ec16:	930c      	str	r3, [sp, #48]	; 0x30
 801ec18:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801ec1c:	930a      	str	r3, [sp, #40]	; 0x28
 801ec1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ec20:	2b00      	cmp	r3, #0
 801ec22:	dc03      	bgt.n	801ec2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ec24:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ec26:	2b00      	cmp	r3, #0
 801ec28:	f340 83cd 	ble.w	801f3c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801ec2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec32:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ec36:	1e48      	subs	r0, r1, #1
 801ec38:	1e55      	subs	r5, r2, #1
 801ec3a:	9b08      	ldr	r3, [sp, #32]
 801ec3c:	2b00      	cmp	r3, #0
 801ec3e:	f340 81a5 	ble.w	801ef8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801ec42:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801ec44:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ec46:	1436      	asrs	r6, r6, #16
 801ec48:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ec4c:	d406      	bmi.n	801ec5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ec4e:	4286      	cmp	r6, r0
 801ec50:	da04      	bge.n	801ec5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ec52:	2b00      	cmp	r3, #0
 801ec54:	db02      	blt.n	801ec5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ec56:	42ab      	cmp	r3, r5
 801ec58:	f2c0 8199 	blt.w	801ef8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ec5c:	3601      	adds	r6, #1
 801ec5e:	f100 8186 	bmi.w	801ef6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec62:	42b1      	cmp	r1, r6
 801ec64:	f2c0 8183 	blt.w	801ef6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec68:	3301      	adds	r3, #1
 801ec6a:	f100 8180 	bmi.w	801ef6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec6e:	429a      	cmp	r2, r3
 801ec70:	f2c0 817d 	blt.w	801ef6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec74:	9b08      	ldr	r3, [sp, #32]
 801ec76:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ec7a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801ec7c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ec7e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ec80:	2b00      	cmp	r3, #0
 801ec82:	f340 81a6 	ble.w	801efd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801ec86:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ec88:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801ec8a:	1418      	asrs	r0, r3, #16
 801ec8c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ec8e:	142d      	asrs	r5, r5, #16
 801ec90:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ec94:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ec96:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ec9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec9c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801eca0:	f100 81fa 	bmi.w	801f098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801eca4:	f102 3eff 	add.w	lr, r2, #4294967295
 801eca8:	4575      	cmp	r5, lr
 801ecaa:	f280 81f5 	bge.w	801f098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801ecae:	2800      	cmp	r0, #0
 801ecb0:	f2c0 81f2 	blt.w	801f098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801ecb4:	f103 3eff 	add.w	lr, r3, #4294967295
 801ecb8:	4570      	cmp	r0, lr
 801ecba:	f280 81ed 	bge.w	801f098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801ecbe:	b212      	sxth	r2, r2
 801ecc0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ecc2:	fa1f fe81 	uxth.w	lr, r1
 801ecc6:	fb00 5002 	mla	r0, r0, r2, r5
 801ecca:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ecce:	eb03 0a00 	add.w	sl, r3, r0
 801ecd2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ecd6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ecda:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ecde:	b29b      	uxth	r3, r3
 801ece0:	f1bc 0f00 	cmp.w	ip, #0
 801ece4:	f000 81bb 	beq.w	801f05e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801ece8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ecec:	eb0a 0b02 	add.w	fp, sl, r2
 801ecf0:	fa1f fa8c 	uxth.w	sl, ip
 801ecf4:	940d      	str	r4, [sp, #52]	; 0x34
 801ecf6:	fb0a fe0e 	mul.w	lr, sl, lr
 801ecfa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ecfe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ed02:	eba5 050e 	sub.w	r5, r5, lr
 801ed06:	940e      	str	r4, [sp, #56]	; 0x38
 801ed08:	fa1f fa8a 	uxth.w	sl, sl
 801ed0c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ed0e:	b2ad      	uxth	r5, r5
 801ed10:	eba3 030a 	sub.w	r3, r3, sl
 801ed14:	fb08 f505 	mul.w	r5, r8, r5
 801ed18:	b29b      	uxth	r3, r3
 801ed1a:	fb09 5303 	mla	r3, r9, r3, r5
 801ed1e:	fb0a 3304 	mla	r3, sl, r4, r3
 801ed22:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ed24:	fb0e 3304 	mla	r3, lr, r4, r3
 801ed28:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ed2c:	2b00      	cmp	r3, #0
 801ed2e:	f000 8111 	beq.w	801ef54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ed32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ed34:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ed38:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ed3c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ed40:	f000 8192 	beq.w	801f068 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801ed44:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ed48:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ed4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ed50:	fb0a fe0e 	mul.w	lr, sl, lr
 801ed54:	fb09 f000 	mul.w	r0, r9, r0
 801ed58:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ed5c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ed60:	f100 0b20 	add.w	fp, r0, #32
 801ed64:	44ce      	add	lr, r9
 801ed66:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ed6a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ed6e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed72:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ed76:	ea4e 0909 	orr.w	r9, lr, r9
 801ed7a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ed7e:	8868      	ldrh	r0, [r5, #2]
 801ed80:	d019      	beq.n	801edb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801ed82:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ed86:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ed8a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ed8e:	fb0a fe0e 	mul.w	lr, sl, lr
 801ed92:	fb08 f800 	mul.w	r8, r8, r0
 801ed96:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ed9a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ed9e:	f108 0b20 	add.w	fp, r8, #32
 801eda2:	4486      	add	lr, r0
 801eda4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801eda8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801edac:	0a00      	lsrs	r0, r0, #8
 801edae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801edb2:	ea4e 0000 	orr.w	r0, lr, r0
 801edb6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801edba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801edbe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801edc2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801edc6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801edca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801edce:	ea4e 0909 	orr.w	r9, lr, r9
 801edd2:	ea4a 0000 	orr.w	r0, sl, r0
 801edd6:	f1bc 0f00 	cmp.w	ip, #0
 801edda:	f000 8147 	beq.w	801f06c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801edde:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801ede2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ede4:	3a01      	subs	r2, #1
 801ede6:	2cff      	cmp	r4, #255	; 0xff
 801ede8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801edec:	f102 0202 	add.w	r2, r2, #2
 801edf0:	eb05 0e02 	add.w	lr, r5, r2
 801edf4:	5aaa      	ldrh	r2, [r5, r2]
 801edf6:	d018      	beq.n	801ee2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801edf8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801edfc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee00:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ee04:	fb04 fa02 	mul.w	sl, r4, r2
 801ee08:	fb08 f805 	mul.w	r8, r8, r5
 801ee0c:	f10a 0520 	add.w	r5, sl, #32
 801ee10:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ee14:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ee18:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ee1c:	4442      	add	r2, r8
 801ee1e:	0a2d      	lsrs	r5, r5, #8
 801ee20:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ee24:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ee28:	432a      	orrs	r2, r5
 801ee2a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ee2c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ee30:	2cff      	cmp	r4, #255	; 0xff
 801ee32:	d01a      	beq.n	801ee6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801ee34:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801ee38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ee3c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ee40:	fb04 fa05 	mul.w	sl, r4, r5
 801ee44:	fb08 f80e 	mul.w	r8, r8, lr
 801ee48:	f10a 0e20 	add.w	lr, sl, #32
 801ee4c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ee50:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ee54:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801ee58:	4445      	add	r5, r8
 801ee5a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ee5e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ee62:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ee66:	ea45 050e 	orr.w	r5, r5, lr
 801ee6a:	fb1c fe01 	smulbb	lr, ip, r1
 801ee6e:	f1cc 0810 	rsb	r8, ip, #16
 801ee72:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ee76:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ee7a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ee7e:	eba8 0801 	sub.w	r8, r8, r1
 801ee82:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ee86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ee8a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ee8e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ee92:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ee96:	ea4a 0202 	orr.w	r2, sl, r2
 801ee9a:	4341      	muls	r1, r0
 801ee9c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801eea0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801eea4:	fb09 1108 	mla	r1, r9, r8, r1
 801eea8:	ea4b 0505 	orr.w	r5, fp, r5
 801eeac:	fb0c 1102 	mla	r1, ip, r2, r1
 801eeb0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801eeb4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801eeb8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801eebc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eec0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eec4:	ea42 0e0e 	orr.w	lr, r2, lr
 801eec8:	fa1f f28e 	uxth.w	r2, lr
 801eecc:	2bff      	cmp	r3, #255	; 0xff
 801eece:	d103      	bne.n	801eed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eed0:	9912      	ldr	r1, [sp, #72]	; 0x48
 801eed2:	29ff      	cmp	r1, #255	; 0xff
 801eed4:	f000 80de 	beq.w	801f094 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801eed8:	990a      	ldr	r1, [sp, #40]	; 0x28
 801eeda:	1215      	asrs	r5, r2, #8
 801eedc:	8838      	ldrh	r0, [r7, #0]
 801eede:	434b      	muls	r3, r1
 801eee0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eee4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801eee6:	f103 0c01 	add.w	ip, r3, #1
 801eeea:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801eeee:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801eef2:	fa5f fc83 	uxtb.w	ip, r3
 801eef6:	1203      	asrs	r3, r0, #8
 801eef8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801eefc:	fb13 f30c 	smulbb	r3, r3, ip
 801ef00:	fb05 3501 	mla	r5, r5, r1, r3
 801ef04:	10c3      	asrs	r3, r0, #3
 801ef06:	10d1      	asrs	r1, r2, #3
 801ef08:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801ef0c:	00d2      	lsls	r2, r2, #3
 801ef0e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ef12:	b2ad      	uxth	r5, r5
 801ef14:	fb13 f30c 	smulbb	r3, r3, ip
 801ef18:	b2d2      	uxtb	r2, r2
 801ef1a:	fb01 3104 	mla	r1, r1, r4, r3
 801ef1e:	00c3      	lsls	r3, r0, #3
 801ef20:	b2db      	uxtb	r3, r3
 801ef22:	b289      	uxth	r1, r1
 801ef24:	fb13 f30c 	smulbb	r3, r3, ip
 801ef28:	fb02 3304 	mla	r3, r2, r4, r3
 801ef2c:	b29a      	uxth	r2, r3
 801ef2e:	1c6b      	adds	r3, r5, #1
 801ef30:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ef34:	1c53      	adds	r3, r2, #1
 801ef36:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ef3a:	1c4a      	adds	r2, r1, #1
 801ef3c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ef40:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ef44:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ef48:	0949      	lsrs	r1, r1, #5
 801ef4a:	432b      	orrs	r3, r5
 801ef4c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ef50:	430b      	orrs	r3, r1
 801ef52:	803b      	strh	r3, [r7, #0]
 801ef54:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ef56:	3702      	adds	r7, #2
 801ef58:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801ef5a:	4413      	add	r3, r2
 801ef5c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801ef5e:	9321      	str	r3, [sp, #132]	; 0x84
 801ef60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ef62:	441a      	add	r2, r3
 801ef64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ef66:	3b01      	subs	r3, #1
 801ef68:	9222      	str	r2, [sp, #136]	; 0x88
 801ef6a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ef6c:	e687      	b.n	801ec7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ef6e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ef70:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801ef72:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801ef74:	4433      	add	r3, r6
 801ef76:	9321      	str	r3, [sp, #132]	; 0x84
 801ef78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ef7a:	441c      	add	r4, r3
 801ef7c:	9b08      	ldr	r3, [sp, #32]
 801ef7e:	3b01      	subs	r3, #1
 801ef80:	9422      	str	r4, [sp, #136]	; 0x88
 801ef82:	9308      	str	r3, [sp, #32]
 801ef84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef86:	3302      	adds	r3, #2
 801ef88:	9309      	str	r3, [sp, #36]	; 0x24
 801ef8a:	e656      	b.n	801ec3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801ef8c:	d028      	beq.n	801efe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801ef8e:	9b08      	ldr	r3, [sp, #32]
 801ef90:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801ef92:	3b01      	subs	r3, #1
 801ef94:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801ef96:	fb00 5003 	mla	r0, r0, r3, r5
 801ef9a:	1400      	asrs	r0, r0, #16
 801ef9c:	f53f ae6a 	bmi.w	801ec74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801efa0:	3901      	subs	r1, #1
 801efa2:	4288      	cmp	r0, r1
 801efa4:	f6bf ae66 	bge.w	801ec74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801efa8:	9924      	ldr	r1, [sp, #144]	; 0x90
 801efaa:	9822      	ldr	r0, [sp, #136]	; 0x88
 801efac:	fb01 0303 	mla	r3, r1, r3, r0
 801efb0:	141b      	asrs	r3, r3, #16
 801efb2:	f53f ae5f 	bmi.w	801ec74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801efb6:	3a01      	subs	r2, #1
 801efb8:	4293      	cmp	r3, r2
 801efba:	f6bf ae5b 	bge.w	801ec74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801efbe:	9b08      	ldr	r3, [sp, #32]
 801efc0:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801efc4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801efc8:	9313      	str	r3, [sp, #76]	; 0x4c
 801efca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801efcc:	2b00      	cmp	r3, #0
 801efce:	f300 8082 	bgt.w	801f0d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801efd2:	9b08      	ldr	r3, [sp, #32]
 801efd4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801efd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801efda:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801efde:	9309      	str	r3, [sp, #36]	; 0x24
 801efe0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801efe2:	2b00      	cmp	r3, #0
 801efe4:	f340 81ef 	ble.w	801f3c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801efe8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801efec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801efee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eff2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eff6:	eef0 6a62 	vmov.f32	s13, s5
 801effa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801effe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f002:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f006:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801f00a:	eef0 6a43 	vmov.f32	s13, s6
 801f00e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f012:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801f016:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f01a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f01e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f022:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f026:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f02a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f02e:	ee12 2a90 	vmov	r2, s5
 801f032:	eef0 2a47 	vmov.f32	s5, s14
 801f036:	fb92 f3f3 	sdiv	r3, r2, r3
 801f03a:	ee13 2a10 	vmov	r2, s6
 801f03e:	9323      	str	r3, [sp, #140]	; 0x8c
 801f040:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f042:	eeb0 3a67 	vmov.f32	s6, s15
 801f046:	fb92 f3f3 	sdiv	r3, r2, r3
 801f04a:	9324      	str	r3, [sp, #144]	; 0x90
 801f04c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f04e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f050:	3b01      	subs	r3, #1
 801f052:	9311      	str	r3, [sp, #68]	; 0x44
 801f054:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f056:	bf08      	it	eq
 801f058:	4613      	moveq	r3, r2
 801f05a:	9308      	str	r3, [sp, #32]
 801f05c:	e5df      	b.n	801ec1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f05e:	fb08 f505 	mul.w	r5, r8, r5
 801f062:	fb09 5303 	mla	r3, r9, r3, r5
 801f066:	e65f      	b.n	801ed28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801f068:	4681      	mov	r9, r0
 801f06a:	e686      	b.n	801ed7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f06c:	f1c1 0210 	rsb	r2, r1, #16
 801f070:	4341      	muls	r1, r0
 801f072:	fb09 1902 	mla	r9, r9, r2, r1
 801f076:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f07a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801f07e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f082:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f086:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f08a:	ea42 0909 	orr.w	r9, r2, r9
 801f08e:	fa1f f289 	uxth.w	r2, r9
 801f092:	e71b      	b.n	801eecc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f094:	803a      	strh	r2, [r7, #0]
 801f096:	e75d      	b.n	801ef54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f098:	f115 0e01 	adds.w	lr, r5, #1
 801f09c:	f53f af5a 	bmi.w	801ef54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f0a0:	4572      	cmp	r2, lr
 801f0a2:	f6ff af57 	blt.w	801ef54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f0a6:	f110 0e01 	adds.w	lr, r0, #1
 801f0aa:	f53f af53 	bmi.w	801ef54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f0ae:	4573      	cmp	r3, lr
 801f0b0:	f6ff af50 	blt.w	801ef54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f0b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f0b6:	b21b      	sxth	r3, r3
 801f0b8:	b212      	sxth	r2, r2
 801f0ba:	9502      	str	r5, [sp, #8]
 801f0bc:	9301      	str	r3, [sp, #4]
 801f0be:	9200      	str	r2, [sp, #0]
 801f0c0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801f0c4:	e9cd c405 	strd	ip, r4, [sp, #20]
 801f0c8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801f0cc:	4639      	mov	r1, r7
 801f0ce:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f0d0:	f7ff fc02 	bl	801e8d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801f0d4:	e73e      	b.n	801ef54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f0d6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f0d8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f0dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f0de:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801f0e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f0e4:	fa1f fc82 	uxth.w	ip, r2
 801f0e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f0ee:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801f0f2:	141f      	asrs	r7, r3, #16
 801f0f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f0f6:	141b      	asrs	r3, r3, #16
 801f0f8:	fb01 3707 	mla	r7, r1, r7, r3
 801f0fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0fe:	eb03 0a07 	add.w	sl, r3, r7
 801f102:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f106:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801f10a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f10e:	b29b      	uxth	r3, r3
 801f110:	2d00      	cmp	r5, #0
 801f112:	f000 813d 	beq.w	801f390 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801f116:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f11a:	eb0a 0b01 	add.w	fp, sl, r1
 801f11e:	fa1f fa85 	uxth.w	sl, r5
 801f122:	940f      	str	r4, [sp, #60]	; 0x3c
 801f124:	fb0a fc0c 	mul.w	ip, sl, ip
 801f128:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f12c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f130:	eba0 000c 	sub.w	r0, r0, ip
 801f134:	9410      	str	r4, [sp, #64]	; 0x40
 801f136:	fa1f fa8a 	uxth.w	sl, sl
 801f13a:	b280      	uxth	r0, r0
 801f13c:	eba3 030a 	sub.w	r3, r3, sl
 801f140:	fb08 f000 	mul.w	r0, r8, r0
 801f144:	b29b      	uxth	r3, r3
 801f146:	fb09 0303 	mla	r3, r9, r3, r0
 801f14a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f14c:	fb0a 3300 	mla	r3, sl, r0, r3
 801f150:	fb0c 3304 	mla	r3, ip, r4, r3
 801f154:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f158:	2b00      	cmp	r3, #0
 801f15a:	f000 810b 	beq.w	801f374 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801f15e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801f160:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f164:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f166:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f16a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f16e:	f000 8114 	beq.w	801f39a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801f172:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f176:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f17a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f17e:	fb0a fc0c 	mul.w	ip, sl, ip
 801f182:	fb09 f707 	mul.w	r7, r9, r7
 801f186:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f18a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f18e:	f107 0b20 	add.w	fp, r7, #32
 801f192:	44cc      	add	ip, r9
 801f194:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f198:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f19c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f1a0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f1a4:	ea4c 0909 	orr.w	r9, ip, r9
 801f1a8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f1ac:	8847      	ldrh	r7, [r0, #2]
 801f1ae:	d019      	beq.n	801f1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801f1b0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801f1b4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f1b8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f1bc:	fb0a fc0c 	mul.w	ip, sl, ip
 801f1c0:	fb08 f807 	mul.w	r8, r8, r7
 801f1c4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f1c8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801f1cc:	f108 0b20 	add.w	fp, r8, #32
 801f1d0:	44bc      	add	ip, r7
 801f1d2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f1d6:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f1da:	0a3f      	lsrs	r7, r7, #8
 801f1dc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f1e0:	ea4c 0707 	orr.w	r7, ip, r7
 801f1e4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f1e8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f1ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f1f0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f1f4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f1f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f1fc:	ea4c 0909 	orr.w	r9, ip, r9
 801f200:	ea4a 0707 	orr.w	r7, sl, r7
 801f204:	2d00      	cmp	r5, #0
 801f206:	f000 80ca 	beq.w	801f39e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801f20a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801f20e:	3901      	subs	r1, #1
 801f210:	0049      	lsls	r1, r1, #1
 801f212:	3102      	adds	r1, #2
 801f214:	eb00 0c01 	add.w	ip, r0, r1
 801f218:	5a41      	ldrh	r1, [r0, r1]
 801f21a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801f21c:	28ff      	cmp	r0, #255	; 0xff
 801f21e:	d019      	beq.n	801f254 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801f220:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801f224:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f226:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f22a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f22e:	fb04 fa01 	mul.w	sl, r4, r1
 801f232:	fb08 f800 	mul.w	r8, r8, r0
 801f236:	f10a 0020 	add.w	r0, sl, #32
 801f23a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801f23e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f242:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f246:	4441      	add	r1, r8
 801f248:	0a00      	lsrs	r0, r0, #8
 801f24a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801f24e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f252:	4301      	orrs	r1, r0
 801f254:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f256:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801f25a:	2cff      	cmp	r4, #255	; 0xff
 801f25c:	d01a      	beq.n	801f294 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801f25e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801f262:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f266:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f26a:	fb04 fa00 	mul.w	sl, r4, r0
 801f26e:	fb08 f80c 	mul.w	r8, r8, ip
 801f272:	f10a 0c20 	add.w	ip, sl, #32
 801f276:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801f27a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f27e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801f282:	4440      	add	r0, r8
 801f284:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f288:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801f28c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f290:	ea40 000c 	orr.w	r0, r0, ip
 801f294:	fb15 fc02 	smulbb	ip, r5, r2
 801f298:	f1c5 0810 	rsb	r8, r5, #16
 801f29c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f2a0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f2a4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f2a8:	eba8 0802 	sub.w	r8, r8, r2
 801f2ac:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f2b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f2b4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801f2b8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f2bc:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801f2c0:	ea4a 0101 	orr.w	r1, sl, r1
 801f2c4:	437a      	muls	r2, r7
 801f2c6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801f2ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f2ce:	fb09 2208 	mla	r2, r9, r8, r2
 801f2d2:	ea4b 0000 	orr.w	r0, fp, r0
 801f2d6:	fb05 2201 	mla	r2, r5, r1, r2
 801f2da:	fb0c 2200 	mla	r2, ip, r0, r2
 801f2de:	0d57      	lsrs	r7, r2, #21
 801f2e0:	0952      	lsrs	r2, r2, #5
 801f2e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f2e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f2ea:	433a      	orrs	r2, r7
 801f2ec:	2bff      	cmp	r3, #255	; 0xff
 801f2ee:	b292      	uxth	r2, r2
 801f2f0:	d102      	bne.n	801f2f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801f2f2:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f2f4:	29ff      	cmp	r1, #255	; 0xff
 801f2f6:	d063      	beq.n	801f3c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801f2f8:	980a      	ldr	r0, [sp, #40]	; 0x28
 801f2fa:	1215      	asrs	r5, r2, #8
 801f2fc:	f8be 1000 	ldrh.w	r1, [lr]
 801f300:	4343      	muls	r3, r0
 801f302:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f304:	10cf      	asrs	r7, r1, #3
 801f306:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f30a:	1c58      	adds	r0, r3, #1
 801f30c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f310:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801f314:	1208      	asrs	r0, r1, #8
 801f316:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f31a:	00c9      	lsls	r1, r1, #3
 801f31c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f320:	b2db      	uxtb	r3, r3
 801f322:	b2c9      	uxtb	r1, r1
 801f324:	fb10 f003 	smulbb	r0, r0, r3
 801f328:	fb11 f103 	smulbb	r1, r1, r3
 801f32c:	fb05 0504 	mla	r5, r5, r4, r0
 801f330:	10d0      	asrs	r0, r2, #3
 801f332:	fb17 f703 	smulbb	r7, r7, r3
 801f336:	00d2      	lsls	r2, r2, #3
 801f338:	b2ad      	uxth	r5, r5
 801f33a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f33e:	b2d2      	uxtb	r2, r2
 801f340:	fb00 7004 	mla	r0, r0, r4, r7
 801f344:	1c6b      	adds	r3, r5, #1
 801f346:	fb02 1204 	mla	r2, r2, r4, r1
 801f34a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f34e:	b292      	uxth	r2, r2
 801f350:	b280      	uxth	r0, r0
 801f352:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f356:	1c57      	adds	r7, r2, #1
 801f358:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f35c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f360:	433d      	orrs	r5, r7
 801f362:	1c47      	adds	r7, r0, #1
 801f364:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801f368:	097f      	lsrs	r7, r7, #5
 801f36a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f36e:	433d      	orrs	r5, r7
 801f370:	f8ae 5000 	strh.w	r5, [lr]
 801f374:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801f376:	f10e 0e02 	add.w	lr, lr, #2
 801f37a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f37c:	4413      	add	r3, r2
 801f37e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f380:	9321      	str	r3, [sp, #132]	; 0x84
 801f382:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f384:	441a      	add	r2, r3
 801f386:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f388:	3b01      	subs	r3, #1
 801f38a:	9222      	str	r2, [sp, #136]	; 0x88
 801f38c:	9313      	str	r3, [sp, #76]	; 0x4c
 801f38e:	e61c      	b.n	801efca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f390:	fb08 f000 	mul.w	r0, r8, r0
 801f394:	fb09 0303 	mla	r3, r9, r3, r0
 801f398:	e6dc      	b.n	801f154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801f39a:	46b9      	mov	r9, r7
 801f39c:	e704      	b.n	801f1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801f39e:	f1c2 0110 	rsb	r1, r2, #16
 801f3a2:	437a      	muls	r2, r7
 801f3a4:	fb09 2901 	mla	r9, r9, r1, r2
 801f3a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f3ac:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801f3b0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801f3b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f3b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f3bc:	4302      	orrs	r2, r0
 801f3be:	e795      	b.n	801f2ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801f3c0:	f8ae 2000 	strh.w	r2, [lr]
 801f3c4:	e7d6      	b.n	801f374 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801f3c6:	b017      	add	sp, #92	; 0x5c
 801f3c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f3cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f3cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3d0:	b085      	sub	sp, #20
 801f3d2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801f3d6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801f3da:	2800      	cmp	r0, #0
 801f3dc:	9103      	str	r1, [sp, #12]
 801f3de:	fb00 7406 	mla	r4, r0, r6, r7
 801f3e2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801f3e6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801f3ea:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801f3ee:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801f3f2:	eb02 0904 	add.w	r9, r2, r4
 801f3f6:	9501      	str	r5, [sp, #4]
 801f3f8:	f2c0 8141 	blt.w	801f67e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801f3fc:	4583      	cmp	fp, r0
 801f3fe:	f340 813e 	ble.w	801f67e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801f402:	2f00      	cmp	r7, #0
 801f404:	f2c0 8137 	blt.w	801f676 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801f408:	42be      	cmp	r6, r7
 801f40a:	f340 8134 	ble.w	801f676 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801f40e:	f812 c004 	ldrb.w	ip, [r2, r4]
 801f412:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801f416:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801f41a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f41e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801f422:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f426:	4355      	muls	r5, r2
 801f428:	fb0c f203 	mul.w	r2, ip, r3
 801f42c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801f430:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801f434:	441d      	add	r5, r3
 801f436:	f102 0320 	add.w	r3, r2, #32
 801f43a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f43e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801f442:	0a1b      	lsrs	r3, r3, #8
 801f444:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f448:	431c      	orrs	r4, r3
 801f44a:	1c7b      	adds	r3, r7, #1
 801f44c:	f100 811c 	bmi.w	801f688 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801f450:	429e      	cmp	r6, r3
 801f452:	f340 8119 	ble.w	801f688 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801f456:	2900      	cmp	r1, #0
 801f458:	f000 8119 	beq.w	801f68e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801f45c:	9a01      	ldr	r2, [sp, #4]
 801f45e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801f462:	8855      	ldrh	r5, [r2, #2]
 801f464:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801f468:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801f46c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f470:	fb08 f802 	mul.w	r8, r8, r2
 801f474:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801f478:	435d      	muls	r5, r3
 801f47a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801f47e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f482:	44d0      	add	r8, sl
 801f484:	f105 0a20 	add.w	sl, r5, #32
 801f488:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801f48c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801f490:	0a2d      	lsrs	r5, r5, #8
 801f492:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f496:	432a      	orrs	r2, r5
 801f498:	3001      	adds	r0, #1
 801f49a:	f100 80fe 	bmi.w	801f69a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801f49e:	4583      	cmp	fp, r0
 801f4a0:	f340 80fb 	ble.w	801f69a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801f4a4:	f1be 0f00 	cmp.w	lr, #0
 801f4a8:	f000 80fc 	beq.w	801f6a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801f4ac:	2f00      	cmp	r7, #0
 801f4ae:	f2c0 80f1 	blt.w	801f694 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801f4b2:	42be      	cmp	r6, r7
 801f4b4:	f340 80ee 	ble.w	801f694 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801f4b8:	9801      	ldr	r0, [sp, #4]
 801f4ba:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801f4be:	f819 5006 	ldrb.w	r5, [r9, r6]
 801f4c2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801f4c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801f4ca:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801f4ce:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f4d2:	fb0a fa00 	mul.w	sl, sl, r0
 801f4d6:	fb05 f808 	mul.w	r8, r5, r8
 801f4da:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801f4de:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801f4e2:	4482      	add	sl, r0
 801f4e4:	f108 0020 	add.w	r0, r8, #32
 801f4e8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f4ec:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801f4f0:	0a00      	lsrs	r0, r0, #8
 801f4f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f4f6:	ea4b 0b00 	orr.w	fp, fp, r0
 801f4fa:	3701      	adds	r7, #1
 801f4fc:	f100 80d7 	bmi.w	801f6ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801f500:	42be      	cmp	r6, r7
 801f502:	f340 80d4 	ble.w	801f6ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801f506:	2900      	cmp	r1, #0
 801f508:	f000 80d4 	beq.w	801f6b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801f50c:	3601      	adds	r6, #1
 801f50e:	9801      	ldr	r0, [sp, #4]
 801f510:	f819 7006 	ldrb.w	r7, [r9, r6]
 801f514:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801f518:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801f51c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801f520:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f524:	fb09 f906 	mul.w	r9, r9, r6
 801f528:	fb07 f800 	mul.w	r8, r7, r0
 801f52c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801f530:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801f534:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801f538:	44d1      	add	r9, sl
 801f53a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801f53e:	f108 0020 	add.w	r0, r8, #32
 801f542:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f546:	0a00      	lsrs	r0, r0, #8
 801f548:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f54c:	4330      	orrs	r0, r6
 801f54e:	b28e      	uxth	r6, r1
 801f550:	fa1f f98e 	uxth.w	r9, lr
 801f554:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801f558:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801f55c:	fb06 f809 	mul.w	r8, r6, r9
 801f560:	0136      	lsls	r6, r6, #4
 801f562:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f566:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801f56a:	9601      	str	r6, [sp, #4]
 801f56c:	ea4a 0404 	orr.w	r4, sl, r4
 801f570:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f574:	fa1f f689 	uxth.w	r6, r9
 801f578:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f57c:	fb11 f90e 	smulbb	r9, r1, lr
 801f580:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f584:	9602      	str	r6, [sp, #8]
 801f586:	4626      	mov	r6, r4
 801f588:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801f58c:	f1ce 0410 	rsb	r4, lr, #16
 801f590:	ea4a 0202 	orr.w	r2, sl, r2
 801f594:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f598:	1a64      	subs	r4, r4, r1
 801f59a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801f59e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f5a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f5a6:	434a      	muls	r2, r1
 801f5a8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801f5ac:	ea4a 0000 	orr.w	r0, sl, r0
 801f5b0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801f5b4:	fb04 2406 	mla	r4, r4, r6, r2
 801f5b8:	9903      	ldr	r1, [sp, #12]
 801f5ba:	fb09 4200 	mla	r2, r9, r0, r4
 801f5be:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801f5c2:	9801      	ldr	r0, [sp, #4]
 801f5c4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801f5c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f5cc:	8809      	ldrh	r1, [r1, #0]
 801f5ce:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801f5d2:	ea44 0b0b 	orr.w	fp, r4, fp
 801f5d6:	9c02      	ldr	r4, [sp, #8]
 801f5d8:	1b00      	subs	r0, r0, r4
 801f5da:	9c01      	ldr	r4, [sp, #4]
 801f5dc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801f5e0:	eba4 0608 	sub.w	r6, r4, r8
 801f5e4:	b280      	uxth	r0, r0
 801f5e6:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f5ea:	b2b6      	uxth	r6, r6
 801f5ec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f5f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f5f4:	4373      	muls	r3, r6
 801f5f6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f5fa:	fb0c 3300 	mla	r3, ip, r0, r3
 801f5fe:	9802      	ldr	r0, [sp, #8]
 801f600:	ea42 0e0e 	orr.w	lr, r2, lr
 801f604:	fb00 3505 	mla	r5, r0, r5, r3
 801f608:	120b      	asrs	r3, r1, #8
 801f60a:	10c8      	asrs	r0, r1, #3
 801f60c:	fb08 5707 	mla	r7, r8, r7, r5
 801f610:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801f614:	00c9      	lsls	r1, r1, #3
 801f616:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f61a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801f61e:	fa1f f28e 	uxth.w	r2, lr
 801f622:	b2c9      	uxtb	r1, r1
 801f624:	b2ff      	uxtb	r7, r7
 801f626:	437b      	muls	r3, r7
 801f628:	4378      	muls	r0, r7
 801f62a:	434f      	muls	r7, r1
 801f62c:	1c59      	adds	r1, r3, #1
 801f62e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f632:	1213      	asrs	r3, r2, #8
 801f634:	f023 0307 	bic.w	r3, r3, #7
 801f638:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f63c:	1c41      	adds	r1, r0, #1
 801f63e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f642:	10d1      	asrs	r1, r2, #3
 801f644:	021b      	lsls	r3, r3, #8
 801f646:	f021 0103 	bic.w	r1, r1, #3
 801f64a:	00d2      	lsls	r2, r2, #3
 801f64c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801f650:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f654:	00c9      	lsls	r1, r1, #3
 801f656:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f65a:	430b      	orrs	r3, r1
 801f65c:	1c79      	adds	r1, r7, #1
 801f65e:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801f662:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f666:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f66a:	431a      	orrs	r2, r3
 801f66c:	9b03      	ldr	r3, [sp, #12]
 801f66e:	801a      	strh	r2, [r3, #0]
 801f670:	b005      	add	sp, #20
 801f672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f676:	f04f 0c00 	mov.w	ip, #0
 801f67a:	4664      	mov	r4, ip
 801f67c:	e6e5      	b.n	801f44a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801f67e:	2300      	movs	r3, #0
 801f680:	469c      	mov	ip, r3
 801f682:	461a      	mov	r2, r3
 801f684:	461c      	mov	r4, r3
 801f686:	e707      	b.n	801f498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801f688:	2300      	movs	r3, #0
 801f68a:	461a      	mov	r2, r3
 801f68c:	e704      	b.n	801f498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801f68e:	460b      	mov	r3, r1
 801f690:	460a      	mov	r2, r1
 801f692:	e701      	b.n	801f498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801f694:	2500      	movs	r5, #0
 801f696:	46ab      	mov	fp, r5
 801f698:	e72f      	b.n	801f4fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801f69a:	2700      	movs	r7, #0
 801f69c:	463d      	mov	r5, r7
 801f69e:	4638      	mov	r0, r7
 801f6a0:	46bb      	mov	fp, r7
 801f6a2:	e754      	b.n	801f54e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801f6a4:	4677      	mov	r7, lr
 801f6a6:	4675      	mov	r5, lr
 801f6a8:	4670      	mov	r0, lr
 801f6aa:	46f3      	mov	fp, lr
 801f6ac:	e74f      	b.n	801f54e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801f6ae:	2700      	movs	r7, #0
 801f6b0:	4638      	mov	r0, r7
 801f6b2:	e74c      	b.n	801f54e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801f6b4:	460f      	mov	r7, r1
 801f6b6:	4608      	mov	r0, r1
 801f6b8:	e749      	b.n	801f54e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801f6bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f6bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6c0:	b093      	sub	sp, #76	; 0x4c
 801f6c2:	9210      	str	r2, [sp, #64]	; 0x40
 801f6c4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f6c6:	9011      	str	r0, [sp, #68]	; 0x44
 801f6c8:	910e      	str	r1, [sp, #56]	; 0x38
 801f6ca:	6850      	ldr	r0, [r2, #4]
 801f6cc:	9306      	str	r3, [sp, #24]
 801f6ce:	6812      	ldr	r2, [r2, #0]
 801f6d0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f6d4:	fb00 1303 	mla	r3, r0, r3, r1
 801f6d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f6dc:	9307      	str	r3, [sp, #28]
 801f6de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6e0:	681b      	ldr	r3, [r3, #0]
 801f6e2:	9308      	str	r3, [sp, #32]
 801f6e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6e6:	685b      	ldr	r3, [r3, #4]
 801f6e8:	9309      	str	r3, [sp, #36]	; 0x24
 801f6ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f6ec:	2b00      	cmp	r3, #0
 801f6ee:	dc03      	bgt.n	801f6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f6f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f6f2:	2b00      	cmp	r3, #0
 801f6f4:	f340 83b6 	ble.w	801fe64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801f6f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f6fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f702:	1e48      	subs	r0, r1, #1
 801f704:	1e55      	subs	r5, r2, #1
 801f706:	9b06      	ldr	r3, [sp, #24]
 801f708:	2b00      	cmp	r3, #0
 801f70a:	f340 8165 	ble.w	801f9d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f70e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801f710:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f712:	1436      	asrs	r6, r6, #16
 801f714:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f718:	d406      	bmi.n	801f728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801f71a:	4286      	cmp	r6, r0
 801f71c:	da04      	bge.n	801f728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801f71e:	2b00      	cmp	r3, #0
 801f720:	db02      	blt.n	801f728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801f722:	42ab      	cmp	r3, r5
 801f724:	f2c0 8159 	blt.w	801f9da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f728:	3601      	adds	r6, #1
 801f72a:	f100 8146 	bmi.w	801f9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801f72e:	42b1      	cmp	r1, r6
 801f730:	f2c0 8143 	blt.w	801f9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801f734:	3301      	adds	r3, #1
 801f736:	f100 8140 	bmi.w	801f9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801f73a:	429a      	cmp	r2, r3
 801f73c:	f2c0 813d 	blt.w	801f9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801f740:	9b06      	ldr	r3, [sp, #24]
 801f742:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801f746:	9f07      	ldr	r7, [sp, #28]
 801f748:	930f      	str	r3, [sp, #60]	; 0x3c
 801f74a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f74c:	2b00      	cmp	r3, #0
 801f74e:	f340 8166 	ble.w	801fa1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f752:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f754:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801f756:	1418      	asrs	r0, r3, #16
 801f758:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f75a:	142d      	asrs	r5, r5, #16
 801f75c:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801f760:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f762:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801f766:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f768:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801f76c:	f100 81f0 	bmi.w	801fb50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801f770:	f102 3eff 	add.w	lr, r2, #4294967295
 801f774:	4575      	cmp	r5, lr
 801f776:	f280 81eb 	bge.w	801fb50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801f77a:	2800      	cmp	r0, #0
 801f77c:	f2c0 81e8 	blt.w	801fb50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801f780:	f103 3eff 	add.w	lr, r3, #4294967295
 801f784:	4570      	cmp	r0, lr
 801f786:	f280 81e3 	bge.w	801fb50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801f78a:	b212      	sxth	r2, r2
 801f78c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f78e:	fa1f fe81 	uxth.w	lr, r1
 801f792:	fb00 5002 	mla	r0, r0, r2, r5
 801f796:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801f79a:	eb03 0a00 	add.w	sl, r3, r0
 801f79e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801f7a2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801f7a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f7aa:	b29b      	uxth	r3, r3
 801f7ac:	f1bc 0f00 	cmp.w	ip, #0
 801f7b0:	f000 817b 	beq.w	801faaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801f7b4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801f7b8:	eb0a 0b02 	add.w	fp, sl, r2
 801f7bc:	fa1f fa8c 	uxth.w	sl, ip
 801f7c0:	940a      	str	r4, [sp, #40]	; 0x28
 801f7c2:	fb0a fe0e 	mul.w	lr, sl, lr
 801f7c6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f7ca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801f7ce:	eba5 050e 	sub.w	r5, r5, lr
 801f7d2:	940b      	str	r4, [sp, #44]	; 0x2c
 801f7d4:	fa1f fa8a 	uxth.w	sl, sl
 801f7d8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f7da:	b2ad      	uxth	r5, r5
 801f7dc:	eba3 030a 	sub.w	r3, r3, sl
 801f7e0:	fb08 f505 	mul.w	r5, r8, r5
 801f7e4:	b29b      	uxth	r3, r3
 801f7e6:	fb09 5303 	mla	r3, r9, r3, r5
 801f7ea:	fb0a 3304 	mla	r3, sl, r4, r3
 801f7ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f7f0:	fb0e 3304 	mla	r3, lr, r4, r3
 801f7f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f7f8:	2b00      	cmp	r3, #0
 801f7fa:	f000 80d1 	beq.w	801f9a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801f7fe:	9c08      	ldr	r4, [sp, #32]
 801f800:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f804:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801f808:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801f80c:	f000 8152 	beq.w	801fab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f810:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801f814:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f818:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f81c:	fb0a fe0e 	mul.w	lr, sl, lr
 801f820:	fb09 f000 	mul.w	r0, r9, r0
 801f824:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801f828:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801f82c:	f100 0b20 	add.w	fp, r0, #32
 801f830:	44ce      	add	lr, r9
 801f832:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f836:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f83a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f83e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f842:	ea4e 0909 	orr.w	r9, lr, r9
 801f846:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f84a:	8868      	ldrh	r0, [r5, #2]
 801f84c:	d019      	beq.n	801f882 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f84e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801f852:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f856:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f85a:	fb0a fe0e 	mul.w	lr, sl, lr
 801f85e:	fb08 f800 	mul.w	r8, r8, r0
 801f862:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f866:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801f86a:	f108 0b20 	add.w	fp, r8, #32
 801f86e:	4486      	add	lr, r0
 801f870:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f874:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f878:	0a00      	lsrs	r0, r0, #8
 801f87a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f87e:	ea4e 0000 	orr.w	r0, lr, r0
 801f882:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f886:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801f88a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f88e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f892:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f896:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f89a:	ea4e 0909 	orr.w	r9, lr, r9
 801f89e:	ea4a 0000 	orr.w	r0, sl, r0
 801f8a2:	f1bc 0f00 	cmp.w	ip, #0
 801f8a6:	f000 8107 	beq.w	801fab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801f8aa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801f8ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f8b0:	3a01      	subs	r2, #1
 801f8b2:	2cff      	cmp	r4, #255	; 0xff
 801f8b4:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801f8b8:	f102 0202 	add.w	r2, r2, #2
 801f8bc:	eb05 0e02 	add.w	lr, r5, r2
 801f8c0:	5aaa      	ldrh	r2, [r5, r2]
 801f8c2:	d018      	beq.n	801f8f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801f8c4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801f8c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f8cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f8d0:	fb04 fa02 	mul.w	sl, r4, r2
 801f8d4:	fb08 f805 	mul.w	r8, r8, r5
 801f8d8:	f10a 0520 	add.w	r5, sl, #32
 801f8dc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f8e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f8e4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f8e8:	4442      	add	r2, r8
 801f8ea:	0a2d      	lsrs	r5, r5, #8
 801f8ec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f8f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f8f4:	432a      	orrs	r2, r5
 801f8f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f8f8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f8fc:	2cff      	cmp	r4, #255	; 0xff
 801f8fe:	d01a      	beq.n	801f936 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801f900:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801f904:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f908:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f90c:	fb04 fa05 	mul.w	sl, r4, r5
 801f910:	fb08 f80e 	mul.w	r8, r8, lr
 801f914:	f10a 0e20 	add.w	lr, sl, #32
 801f918:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f91c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801f920:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f924:	4445      	add	r5, r8
 801f926:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f92a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f92e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801f932:	ea45 050e 	orr.w	r5, r5, lr
 801f936:	fb1c fe01 	smulbb	lr, ip, r1
 801f93a:	f1cc 0810 	rsb	r8, ip, #16
 801f93e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f942:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f946:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f94a:	eba8 0801 	sub.w	r8, r8, r1
 801f94e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f952:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801f956:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f95a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f95e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f962:	ea4a 0202 	orr.w	r2, sl, r2
 801f966:	4341      	muls	r1, r0
 801f968:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f96c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f970:	fb09 1108 	mla	r1, r9, r8, r1
 801f974:	ea4b 0505 	orr.w	r5, fp, r5
 801f978:	fb0c 1102 	mla	r1, ip, r2, r1
 801f97c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f980:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f984:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f98c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f990:	ea42 0e0e 	orr.w	lr, r2, lr
 801f994:	fa1f f28e 	uxth.w	r2, lr
 801f998:	2bff      	cmp	r3, #255	; 0xff
 801f99a:	f040 80a1 	bne.w	801fae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801f99e:	803a      	strh	r2, [r7, #0]
 801f9a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f9a2:	3702      	adds	r7, #2
 801f9a4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801f9a6:	4413      	add	r3, r2
 801f9a8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801f9aa:	931d      	str	r3, [sp, #116]	; 0x74
 801f9ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9ae:	441a      	add	r2, r3
 801f9b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f9b2:	3b01      	subs	r3, #1
 801f9b4:	921e      	str	r2, [sp, #120]	; 0x78
 801f9b6:	930f      	str	r3, [sp, #60]	; 0x3c
 801f9b8:	e6c7      	b.n	801f74a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f9ba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801f9bc:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f9be:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801f9c0:	4433      	add	r3, r6
 801f9c2:	931d      	str	r3, [sp, #116]	; 0x74
 801f9c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f9c6:	441c      	add	r4, r3
 801f9c8:	9b06      	ldr	r3, [sp, #24]
 801f9ca:	3b01      	subs	r3, #1
 801f9cc:	941e      	str	r4, [sp, #120]	; 0x78
 801f9ce:	9306      	str	r3, [sp, #24]
 801f9d0:	9b07      	ldr	r3, [sp, #28]
 801f9d2:	3302      	adds	r3, #2
 801f9d4:	9307      	str	r3, [sp, #28]
 801f9d6:	e696      	b.n	801f706 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f9d8:	d028      	beq.n	801fa2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f9da:	9b06      	ldr	r3, [sp, #24]
 801f9dc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f9de:	3b01      	subs	r3, #1
 801f9e0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801f9e2:	fb00 5003 	mla	r0, r0, r3, r5
 801f9e6:	1400      	asrs	r0, r0, #16
 801f9e8:	f53f aeaa 	bmi.w	801f740 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f9ec:	3901      	subs	r1, #1
 801f9ee:	4288      	cmp	r0, r1
 801f9f0:	f6bf aea6 	bge.w	801f740 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f9f4:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f9f6:	981e      	ldr	r0, [sp, #120]	; 0x78
 801f9f8:	fb01 0303 	mla	r3, r1, r3, r0
 801f9fc:	141b      	asrs	r3, r3, #16
 801f9fe:	f53f ae9f 	bmi.w	801f740 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801fa02:	3a01      	subs	r2, #1
 801fa04:	4293      	cmp	r3, r2
 801fa06:	f6bf ae9b 	bge.w	801f740 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801fa0a:	9b06      	ldr	r3, [sp, #24]
 801fa0c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801fa10:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801fa14:	930f      	str	r3, [sp, #60]	; 0x3c
 801fa16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fa18:	2b00      	cmp	r3, #0
 801fa1a:	f300 80b6 	bgt.w	801fb8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801fa1e:	9b06      	ldr	r3, [sp, #24]
 801fa20:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fa24:	9b07      	ldr	r3, [sp, #28]
 801fa26:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801fa2a:	9307      	str	r3, [sp, #28]
 801fa2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fa2e:	2b00      	cmp	r3, #0
 801fa30:	f340 8218 	ble.w	801fe64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801fa34:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fa38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fa3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa42:	eef0 6a62 	vmov.f32	s13, s5
 801fa46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa52:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801fa56:	eef0 6a43 	vmov.f32	s13, s6
 801fa5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa5e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801fa62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa66:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fa6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fa72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fa76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fa7a:	ee12 2a90 	vmov	r2, s5
 801fa7e:	eef0 2a47 	vmov.f32	s5, s14
 801fa82:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa86:	ee13 2a10 	vmov	r2, s6
 801fa8a:	931f      	str	r3, [sp, #124]	; 0x7c
 801fa8c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fa8e:	eeb0 3a67 	vmov.f32	s6, s15
 801fa92:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa96:	9320      	str	r3, [sp, #128]	; 0x80
 801fa98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fa9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fa9c:	3b01      	subs	r3, #1
 801fa9e:	930e      	str	r3, [sp, #56]	; 0x38
 801faa0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801faa2:	bf08      	it	eq
 801faa4:	4613      	moveq	r3, r2
 801faa6:	9306      	str	r3, [sp, #24]
 801faa8:	e61f      	b.n	801f6ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801faaa:	fb08 f505 	mul.w	r5, r8, r5
 801faae:	fb09 5303 	mla	r3, r9, r3, r5
 801fab2:	e69f      	b.n	801f7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801fab4:	4681      	mov	r9, r0
 801fab6:	e6c6      	b.n	801f846 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801fab8:	f1c1 0210 	rsb	r2, r1, #16
 801fabc:	4341      	muls	r1, r0
 801fabe:	fb09 1902 	mla	r9, r9, r2, r1
 801fac2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801fac6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801faca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801face:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fad2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801fad6:	ea42 0909 	orr.w	r9, r2, r9
 801fada:	fa1f f289 	uxth.w	r2, r9
 801fade:	e75b      	b.n	801f998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801fae0:	f8b7 c000 	ldrh.w	ip, [r7]
 801fae4:	43db      	mvns	r3, r3
 801fae6:	ea4f 202c 	mov.w	r0, ip, asr #8
 801faea:	fa5f fe83 	uxtb.w	lr, r3
 801faee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801faf2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801faf6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801fafa:	fb00 f00e 	mul.w	r0, r0, lr
 801fafe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fb02:	b2db      	uxtb	r3, r3
 801fb04:	1c41      	adds	r1, r0, #1
 801fb06:	fb05 f50e 	mul.w	r5, r5, lr
 801fb0a:	fb03 f30e 	mul.w	r3, r3, lr
 801fb0e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fb12:	1211      	asrs	r1, r2, #8
 801fb14:	f021 0107 	bic.w	r1, r1, #7
 801fb18:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fb1c:	48d3      	ldr	r0, [pc, #844]	; (801fe6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801fb1e:	b2c9      	uxtb	r1, r1
 801fb20:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801fb24:	1c69      	adds	r1, r5, #1
 801fb26:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801fb2a:	10d1      	asrs	r1, r2, #3
 801fb2c:	00d2      	lsls	r2, r2, #3
 801fb2e:	f021 0103 	bic.w	r1, r1, #3
 801fb32:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801fb36:	00c9      	lsls	r1, r1, #3
 801fb38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fb3c:	4301      	orrs	r1, r0
 801fb3e:	1c58      	adds	r0, r3, #1
 801fb40:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801fb44:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fb48:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb4c:	430a      	orrs	r2, r1
 801fb4e:	e726      	b.n	801f99e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fb50:	f115 0e01 	adds.w	lr, r5, #1
 801fb54:	f53f af24 	bmi.w	801f9a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801fb58:	4572      	cmp	r2, lr
 801fb5a:	f6ff af21 	blt.w	801f9a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801fb5e:	f110 0e01 	adds.w	lr, r0, #1
 801fb62:	f53f af1d 	bmi.w	801f9a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801fb66:	4573      	cmp	r3, lr
 801fb68:	f6ff af1a 	blt.w	801f9a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801fb6c:	b21b      	sxth	r3, r3
 801fb6e:	b212      	sxth	r2, r2
 801fb70:	9301      	str	r3, [sp, #4]
 801fb72:	9200      	str	r2, [sp, #0]
 801fb74:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801fb78:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801fb7c:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801fb80:	4639      	mov	r1, r7
 801fb82:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fb84:	f7ff fc22 	bl	801f3cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801fb88:	e70a      	b.n	801f9a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801fb8a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801fb8c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fb90:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fb92:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801fb96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fb98:	fa1f fc82 	uxth.w	ip, r2
 801fb9c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fba0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801fba2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801fba6:	141f      	asrs	r7, r3, #16
 801fba8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801fbaa:	141b      	asrs	r3, r3, #16
 801fbac:	fb01 3707 	mla	r7, r1, r7, r3
 801fbb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbb2:	eb03 0a07 	add.w	sl, r3, r7
 801fbb6:	f813 9007 	ldrb.w	r9, [r3, r7]
 801fbba:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801fbbe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801fbc2:	b29b      	uxth	r3, r3
 801fbc4:	2d00      	cmp	r5, #0
 801fbc6:	f000 80fe 	beq.w	801fdc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801fbca:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801fbce:	eb0a 0b01 	add.w	fp, sl, r1
 801fbd2:	fa1f fa85 	uxth.w	sl, r5
 801fbd6:	940c      	str	r4, [sp, #48]	; 0x30
 801fbd8:	fb0a fc0c 	mul.w	ip, sl, ip
 801fbdc:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801fbe0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801fbe4:	eba0 000c 	sub.w	r0, r0, ip
 801fbe8:	940d      	str	r4, [sp, #52]	; 0x34
 801fbea:	fa1f fa8a 	uxth.w	sl, sl
 801fbee:	b280      	uxth	r0, r0
 801fbf0:	eba3 030a 	sub.w	r3, r3, sl
 801fbf4:	fb08 f000 	mul.w	r0, r8, r0
 801fbf8:	b29b      	uxth	r3, r3
 801fbfa:	fb09 0303 	mla	r3, r9, r3, r0
 801fbfe:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fc00:	fb0a 3300 	mla	r3, sl, r0, r3
 801fc04:	fb0c 3304 	mla	r3, ip, r4, r3
 801fc08:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fc0c:	2b00      	cmp	r3, #0
 801fc0e:	f000 80cc 	beq.w	801fdaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801fc12:	9808      	ldr	r0, [sp, #32]
 801fc14:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801fc18:	9c08      	ldr	r4, [sp, #32]
 801fc1a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801fc1e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801fc22:	f000 80d5 	beq.w	801fdd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801fc26:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801fc2a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801fc2e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801fc32:	fb0a fc0c 	mul.w	ip, sl, ip
 801fc36:	fb09 f707 	mul.w	r7, r9, r7
 801fc3a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801fc3e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801fc42:	f107 0b20 	add.w	fp, r7, #32
 801fc46:	44cc      	add	ip, r9
 801fc48:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801fc4c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801fc50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fc54:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fc58:	ea4c 0909 	orr.w	r9, ip, r9
 801fc5c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801fc60:	8847      	ldrh	r7, [r0, #2]
 801fc62:	d019      	beq.n	801fc98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801fc64:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801fc68:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801fc6c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801fc70:	fb0a fc0c 	mul.w	ip, sl, ip
 801fc74:	fb08 f807 	mul.w	r8, r8, r7
 801fc78:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801fc7c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801fc80:	f108 0b20 	add.w	fp, r8, #32
 801fc84:	44bc      	add	ip, r7
 801fc86:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801fc8a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801fc8e:	0a3f      	lsrs	r7, r7, #8
 801fc90:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801fc94:	ea4c 0707 	orr.w	r7, ip, r7
 801fc98:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801fc9c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801fca0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801fca4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fca8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fcac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fcb0:	ea4c 0909 	orr.w	r9, ip, r9
 801fcb4:	ea4a 0707 	orr.w	r7, sl, r7
 801fcb8:	2d00      	cmp	r5, #0
 801fcba:	f000 808b 	beq.w	801fdd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801fcbe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801fcc2:	3901      	subs	r1, #1
 801fcc4:	0049      	lsls	r1, r1, #1
 801fcc6:	3102      	adds	r1, #2
 801fcc8:	eb00 0c01 	add.w	ip, r0, r1
 801fccc:	5a41      	ldrh	r1, [r0, r1]
 801fcce:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fcd0:	28ff      	cmp	r0, #255	; 0xff
 801fcd2:	d019      	beq.n	801fd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801fcd4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801fcd8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801fcda:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fcde:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fce2:	fb04 fa01 	mul.w	sl, r4, r1
 801fce6:	fb08 f800 	mul.w	r8, r8, r0
 801fcea:	f10a 0020 	add.w	r0, sl, #32
 801fcee:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801fcf2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fcf6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801fcfa:	4441      	add	r1, r8
 801fcfc:	0a00      	lsrs	r0, r0, #8
 801fcfe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801fd02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fd06:	4301      	orrs	r1, r0
 801fd08:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd0a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801fd0e:	2cff      	cmp	r4, #255	; 0xff
 801fd10:	d01a      	beq.n	801fd48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801fd12:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801fd16:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fd1a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fd1e:	fb04 fa00 	mul.w	sl, r4, r0
 801fd22:	fb08 f80c 	mul.w	r8, r8, ip
 801fd26:	f10a 0c20 	add.w	ip, sl, #32
 801fd2a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801fd2e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801fd32:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801fd36:	4440      	add	r0, r8
 801fd38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd3c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801fd40:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801fd44:	ea40 000c 	orr.w	r0, r0, ip
 801fd48:	fb15 fc02 	smulbb	ip, r5, r2
 801fd4c:	f1c5 0810 	rsb	r8, r5, #16
 801fd50:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801fd54:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fd58:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801fd5c:	eba8 0802 	sub.w	r8, r8, r2
 801fd60:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801fd64:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801fd68:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801fd6c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fd70:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801fd74:	ea4a 0101 	orr.w	r1, sl, r1
 801fd78:	437a      	muls	r2, r7
 801fd7a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801fd7e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fd82:	fb09 2208 	mla	r2, r9, r8, r2
 801fd86:	ea4b 0000 	orr.w	r0, fp, r0
 801fd8a:	fb05 2201 	mla	r2, r5, r1, r2
 801fd8e:	fb0c 2200 	mla	r2, ip, r0, r2
 801fd92:	0d57      	lsrs	r7, r2, #21
 801fd94:	0952      	lsrs	r2, r2, #5
 801fd96:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801fd9a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fd9e:	433a      	orrs	r2, r7
 801fda0:	2bff      	cmp	r3, #255	; 0xff
 801fda2:	b292      	uxth	r2, r2
 801fda4:	d127      	bne.n	801fdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801fda6:	f8ae 2000 	strh.w	r2, [lr]
 801fdaa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801fdac:	f10e 0e02 	add.w	lr, lr, #2
 801fdb0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801fdb2:	4413      	add	r3, r2
 801fdb4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801fdb6:	931d      	str	r3, [sp, #116]	; 0x74
 801fdb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fdba:	441a      	add	r2, r3
 801fdbc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fdbe:	3b01      	subs	r3, #1
 801fdc0:	921e      	str	r2, [sp, #120]	; 0x78
 801fdc2:	930f      	str	r3, [sp, #60]	; 0x3c
 801fdc4:	e627      	b.n	801fa16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fdc6:	fb08 f000 	mul.w	r0, r8, r0
 801fdca:	fb09 0303 	mla	r3, r9, r3, r0
 801fdce:	e71b      	b.n	801fc08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801fdd0:	46b9      	mov	r9, r7
 801fdd2:	e743      	b.n	801fc5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801fdd4:	f1c2 0110 	rsb	r1, r2, #16
 801fdd8:	437a      	muls	r2, r7
 801fdda:	fb09 2901 	mla	r9, r9, r1, r2
 801fdde:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801fde2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801fde6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801fdea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fdee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fdf2:	4302      	orrs	r2, r0
 801fdf4:	e7d4      	b.n	801fda0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801fdf6:	f8be 7000 	ldrh.w	r7, [lr]
 801fdfa:	43db      	mvns	r3, r3
 801fdfc:	4c1b      	ldr	r4, [pc, #108]	; (801fe6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801fdfe:	1238      	asrs	r0, r7, #8
 801fe00:	fa5f fc83 	uxtb.w	ip, r3
 801fe04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fe08:	10fd      	asrs	r5, r7, #3
 801fe0a:	00fb      	lsls	r3, r7, #3
 801fe0c:	fb00 f00c 	mul.w	r0, r0, ip
 801fe10:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801fe14:	b2db      	uxtb	r3, r3
 801fe16:	fb05 f10c 	mul.w	r1, r5, ip
 801fe1a:	1c45      	adds	r5, r0, #1
 801fe1c:	fb03 f30c 	mul.w	r3, r3, ip
 801fe20:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801fe24:	1215      	asrs	r5, r2, #8
 801fe26:	f025 0507 	bic.w	r5, r5, #7
 801fe2a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801fe2e:	1c4d      	adds	r5, r1, #1
 801fe30:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801fe34:	10d1      	asrs	r1, r2, #3
 801fe36:	b2c0      	uxtb	r0, r0
 801fe38:	f021 0103 	bic.w	r1, r1, #3
 801fe3c:	00d2      	lsls	r2, r2, #3
 801fe3e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801fe42:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801fe46:	00c9      	lsls	r1, r1, #3
 801fe48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe4c:	4308      	orrs	r0, r1
 801fe4e:	1c59      	adds	r1, r3, #1
 801fe50:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fe54:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fe58:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801fe5c:	4318      	orrs	r0, r3
 801fe5e:	f8ae 0000 	strh.w	r0, [lr]
 801fe62:	e7a2      	b.n	801fdaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801fe64:	b013      	add	sp, #76	; 0x4c
 801fe66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe6a:	bf00      	nop
 801fe6c:	fffff800 	.word	0xfffff800

0801fe70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801fe70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fe74:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801fe78:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801fe7c:	fb05 4c03 	mla	ip, r5, r3, r4
 801fe80:	2d00      	cmp	r5, #0
 801fe82:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801fe86:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801fe8a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801fe8e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801fe92:	8808      	ldrh	r0, [r1, #0]
 801fe94:	f2c0 80a7 	blt.w	801ffe6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801fe98:	45aa      	cmp	sl, r5
 801fe9a:	f340 80a4 	ble.w	801ffe6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801fe9e:	2c00      	cmp	r4, #0
 801fea0:	f2c0 809f 	blt.w	801ffe2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801fea4:	42a3      	cmp	r3, r4
 801fea6:	f340 809c 	ble.w	801ffe2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801feaa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801feae:	1c62      	adds	r2, r4, #1
 801feb0:	f100 809c 	bmi.w	801ffec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801feb4:	4293      	cmp	r3, r2
 801feb6:	f340 8099 	ble.w	801ffec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801feba:	f1b9 0f00 	cmp.w	r9, #0
 801febe:	f000 8095 	beq.w	801ffec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801fec2:	f8be c002 	ldrh.w	ip, [lr, #2]
 801fec6:	3501      	adds	r5, #1
 801fec8:	f100 8094 	bmi.w	801fff4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801fecc:	45aa      	cmp	sl, r5
 801fece:	f340 8091 	ble.w	801fff4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801fed2:	2f00      	cmp	r7, #0
 801fed4:	f000 808e 	beq.w	801fff4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801fed8:	2c00      	cmp	r4, #0
 801feda:	f2c0 8089 	blt.w	801fff0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801fede:	42a3      	cmp	r3, r4
 801fee0:	f340 8086 	ble.w	801fff0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801fee4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801fee8:	3401      	adds	r4, #1
 801feea:	f100 8086 	bmi.w	801fffa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801feee:	42a3      	cmp	r3, r4
 801fef0:	f340 8083 	ble.w	801fffa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801fef4:	f1b9 0f00 	cmp.w	r9, #0
 801fef8:	d07f      	beq.n	801fffa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801fefa:	3301      	adds	r3, #1
 801fefc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801ff00:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ff04:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801ff08:	fb19 fe07 	smulbb	lr, r9, r7
 801ff0c:	f1c7 0210 	rsb	r2, r7, #16
 801ff10:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ff14:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ff18:	eba2 0209 	sub.w	r2, r2, r9
 801ff1c:	ea44 0808 	orr.w	r8, r4, r8
 801ff20:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ff24:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ff28:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ff2c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ff30:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ff34:	ea44 0c0c 	orr.w	ip, r4, ip
 801ff38:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ff3c:	fb04 f40c 	mul.w	r4, r4, ip
 801ff40:	fb02 4808 	mla	r8, r2, r8, r4
 801ff44:	041a      	lsls	r2, r3, #16
 801ff46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ff4a:	b2b4      	uxth	r4, r6
 801ff4c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ff50:	43f6      	mvns	r6, r6
 801ff52:	4313      	orrs	r3, r2
 801ff54:	042a      	lsls	r2, r5, #16
 801ff56:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ff5a:	b2f6      	uxtb	r6, r6
 801ff5c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ff60:	fb0e 8303 	mla	r3, lr, r3, r8
 801ff64:	432a      	orrs	r2, r5
 801ff66:	fb07 3202 	mla	r2, r7, r2, r3
 801ff6a:	10c7      	asrs	r7, r0, #3
 801ff6c:	0d53      	lsrs	r3, r2, #21
 801ff6e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ff72:	0952      	lsrs	r2, r2, #5
 801ff74:	fb17 f706 	smulbb	r7, r7, r6
 801ff78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ff7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ff80:	431a      	orrs	r2, r3
 801ff82:	b293      	uxth	r3, r2
 801ff84:	1202      	asrs	r2, r0, #8
 801ff86:	121d      	asrs	r5, r3, #8
 801ff88:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ff8c:	00c0      	lsls	r0, r0, #3
 801ff8e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ff92:	fb12 f206 	smulbb	r2, r2, r6
 801ff96:	b2c0      	uxtb	r0, r0
 801ff98:	fb05 2504 	mla	r5, r5, r4, r2
 801ff9c:	10da      	asrs	r2, r3, #3
 801ff9e:	fb10 f006 	smulbb	r0, r0, r6
 801ffa2:	00db      	lsls	r3, r3, #3
 801ffa4:	b2ad      	uxth	r5, r5
 801ffa6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ffaa:	b2db      	uxtb	r3, r3
 801ffac:	fb02 7204 	mla	r2, r2, r4, r7
 801ffb0:	fb03 0004 	mla	r0, r3, r4, r0
 801ffb4:	1c6b      	adds	r3, r5, #1
 801ffb6:	b292      	uxth	r2, r2
 801ffb8:	b280      	uxth	r0, r0
 801ffba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ffbe:	1c43      	adds	r3, r0, #1
 801ffc0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ffc4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ffc8:	1c50      	adds	r0, r2, #1
 801ffca:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ffce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ffd2:	0952      	lsrs	r2, r2, #5
 801ffd4:	432b      	orrs	r3, r5
 801ffd6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ffda:	4313      	orrs	r3, r2
 801ffdc:	800b      	strh	r3, [r1, #0]
 801ffde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ffe2:	4680      	mov	r8, r0
 801ffe4:	e763      	b.n	801feae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801ffe6:	4684      	mov	ip, r0
 801ffe8:	4680      	mov	r8, r0
 801ffea:	e76c      	b.n	801fec6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ffec:	4684      	mov	ip, r0
 801ffee:	e76a      	b.n	801fec6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801fff0:	4605      	mov	r5, r0
 801fff2:	e779      	b.n	801fee8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801fff4:	4603      	mov	r3, r0
 801fff6:	4605      	mov	r5, r0
 801fff8:	e782      	b.n	801ff00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801fffa:	4603      	mov	r3, r0
 801fffc:	e780      	b.n	801ff00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801fffe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fffe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020002:	b093      	sub	sp, #76	; 0x4c
 8020004:	461d      	mov	r5, r3
 8020006:	9210      	str	r2, [sp, #64]	; 0x40
 8020008:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802000a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802000e:	910a      	str	r1, [sp, #40]	; 0x28
 8020010:	920b      	str	r2, [sp, #44]	; 0x2c
 8020012:	6859      	ldr	r1, [r3, #4]
 8020014:	681b      	ldr	r3, [r3, #0]
 8020016:	9011      	str	r0, [sp, #68]	; 0x44
 8020018:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 802001c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020020:	fb01 2707 	mla	r7, r1, r7, r2
 8020024:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8020028:	9307      	str	r3, [sp, #28]
 802002a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802002c:	681b      	ldr	r3, [r3, #0]
 802002e:	9309      	str	r3, [sp, #36]	; 0x24
 8020030:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020032:	43db      	mvns	r3, r3
 8020034:	b2db      	uxtb	r3, r3
 8020036:	9308      	str	r3, [sp, #32]
 8020038:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802003a:	2b00      	cmp	r3, #0
 802003c:	dc03      	bgt.n	8020046 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802003e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020040:	2b00      	cmp	r3, #0
 8020042:	f340 8205 	ble.w	8020450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020046:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020048:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802004c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020050:	1e48      	subs	r0, r1, #1
 8020052:	f102 3cff 	add.w	ip, r2, #4294967295
 8020056:	2d00      	cmp	r5, #0
 8020058:	f340 80da 	ble.w	8020210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802005c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020060:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020064:	d406      	bmi.n	8020074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020066:	4586      	cmp	lr, r0
 8020068:	da04      	bge.n	8020074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802006a:	2b00      	cmp	r3, #0
 802006c:	db02      	blt.n	8020074 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802006e:	4563      	cmp	r3, ip
 8020070:	f2c0 80cf 	blt.w	8020212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020074:	f11e 0e01 	adds.w	lr, lr, #1
 8020078:	f100 80c1 	bmi.w	80201fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802007c:	4571      	cmp	r1, lr
 802007e:	f2c0 80be 	blt.w	80201fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020082:	3301      	adds	r3, #1
 8020084:	f100 80bb 	bmi.w	80201fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020088:	429a      	cmp	r2, r3
 802008a:	f2c0 80b8 	blt.w	80201fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802008e:	46a9      	mov	r9, r5
 8020090:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8020094:	f1b9 0f00 	cmp.w	r9, #0
 8020098:	f340 80d8 	ble.w	802024c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802009c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802009e:	1421      	asrs	r1, r4, #16
 80200a0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80200a4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80200a8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80200ac:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80200b0:	f100 8112 	bmi.w	80202d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80200b4:	f10e 3aff 	add.w	sl, lr, #4294967295
 80200b8:	4551      	cmp	r1, sl
 80200ba:	f280 810d 	bge.w	80202d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80200be:	2800      	cmp	r0, #0
 80200c0:	f2c0 810a 	blt.w	80202d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80200c4:	f103 3aff 	add.w	sl, r3, #4294967295
 80200c8:	4550      	cmp	r0, sl
 80200ca:	f280 8105 	bge.w	80202d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80200ce:	fa0f f38e 	sxth.w	r3, lr
 80200d2:	fb00 1103 	mla	r1, r0, r3, r1
 80200d6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80200d8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80200dc:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80200e0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80200e4:	f1bc 0f00 	cmp.w	ip, #0
 80200e8:	d007      	beq.n	80200fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80200ea:	005b      	lsls	r3, r3, #1
 80200ec:	eb0a 0003 	add.w	r0, sl, r3
 80200f0:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80200f4:	930c      	str	r3, [sp, #48]	; 0x30
 80200f6:	8843      	ldrh	r3, [r0, #2]
 80200f8:	930d      	str	r3, [sp, #52]	; 0x34
 80200fa:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80200fe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020102:	fb12 f30c 	smulbb	r3, r2, ip
 8020106:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802010a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802010e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020112:	10db      	asrs	r3, r3, #3
 8020114:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020118:	ea40 000e 	orr.w	r0, r0, lr
 802011c:	f1cc 0e10 	rsb	lr, ip, #16
 8020120:	ea4a 0101 	orr.w	r1, sl, r1
 8020124:	9f08      	ldr	r7, [sp, #32]
 8020126:	ebae 0e02 	sub.w	lr, lr, r2
 802012a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802012e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8020132:	4351      	muls	r1, r2
 8020134:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020136:	fb0e 1e00 	mla	lr, lr, r0, r1
 802013a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802013c:	0410      	lsls	r0, r2, #16
 802013e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020142:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020146:	4310      	orrs	r0, r2
 8020148:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802014a:	0412      	lsls	r2, r2, #16
 802014c:	fb03 e000 	mla	r0, r3, r0, lr
 8020150:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8020154:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020158:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802015c:	ea42 020e 	orr.w	r2, r2, lr
 8020160:	fb03 0302 	mla	r3, r3, r2, r0
 8020164:	f8b8 0000 	ldrh.w	r0, [r8]
 8020168:	0d5a      	lsrs	r2, r3, #21
 802016a:	095b      	lsrs	r3, r3, #5
 802016c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020170:	1201      	asrs	r1, r0, #8
 8020172:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020176:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802017a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802017e:	00c0      	lsls	r0, r0, #3
 8020180:	4313      	orrs	r3, r2
 8020182:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8020186:	fb11 f107 	smulbb	r1, r1, r7
 802018a:	b2c0      	uxtb	r0, r0
 802018c:	b29b      	uxth	r3, r3
 802018e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020192:	fb10 f007 	smulbb	r0, r0, r7
 8020196:	fb1e fe07 	smulbb	lr, lr, r7
 802019a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802019e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80201a2:	fb0c 1c02 	mla	ip, ip, r2, r1
 80201a6:	10d9      	asrs	r1, r3, #3
 80201a8:	00db      	lsls	r3, r3, #3
 80201aa:	fa1f fc8c 	uxth.w	ip, ip
 80201ae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80201b2:	b2db      	uxtb	r3, r3
 80201b4:	fb01 e102 	mla	r1, r1, r2, lr
 80201b8:	fb03 0302 	mla	r3, r3, r2, r0
 80201bc:	b289      	uxth	r1, r1
 80201be:	b29a      	uxth	r2, r3
 80201c0:	f10c 0301 	add.w	r3, ip, #1
 80201c4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80201c8:	1c53      	adds	r3, r2, #1
 80201ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80201ce:	1c4a      	adds	r2, r1, #1
 80201d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80201d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80201d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80201dc:	0949      	lsrs	r1, r1, #5
 80201de:	ea43 030c 	orr.w	r3, r3, ip
 80201e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80201e6:	430b      	orrs	r3, r1
 80201e8:	f8a8 3000 	strh.w	r3, [r8]
 80201ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80201ee:	f108 0802 	add.w	r8, r8, #2
 80201f2:	f109 39ff 	add.w	r9, r9, #4294967295
 80201f6:	441c      	add	r4, r3
 80201f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80201fa:	441e      	add	r6, r3
 80201fc:	e74a      	b.n	8020094 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80201fe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020200:	3d01      	subs	r5, #1
 8020202:	441c      	add	r4, r3
 8020204:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020206:	441e      	add	r6, r3
 8020208:	9b07      	ldr	r3, [sp, #28]
 802020a:	3302      	adds	r3, #2
 802020c:	9307      	str	r3, [sp, #28]
 802020e:	e722      	b.n	8020056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020210:	d022      	beq.n	8020258 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8020212:	1e6b      	subs	r3, r5, #1
 8020214:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020216:	fb00 4003 	mla	r0, r0, r3, r4
 802021a:	1400      	asrs	r0, r0, #16
 802021c:	f53f af37 	bmi.w	802008e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020220:	3901      	subs	r1, #1
 8020222:	4288      	cmp	r0, r1
 8020224:	f6bf af33 	bge.w	802008e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020228:	9920      	ldr	r1, [sp, #128]	; 0x80
 802022a:	fb01 6303 	mla	r3, r1, r3, r6
 802022e:	141b      	asrs	r3, r3, #16
 8020230:	f53f af2d 	bmi.w	802008e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020234:	3a01      	subs	r2, #1
 8020236:	4293      	cmp	r3, r2
 8020238:	f6bf af29 	bge.w	802008e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802023c:	46a8      	mov	r8, r5
 802023e:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8020242:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8020246:	f1b8 0f00 	cmp.w	r8, #0
 802024a:	dc60      	bgt.n	802030e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 802024c:	9b07      	ldr	r3, [sp, #28]
 802024e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020252:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020256:	9307      	str	r3, [sp, #28]
 8020258:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802025a:	2b00      	cmp	r3, #0
 802025c:	f340 80f8 	ble.w	8020450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020260:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020264:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020266:	ee30 0a04 	vadd.f32	s0, s0, s8
 802026a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802026e:	eef0 6a62 	vmov.f32	s13, s5
 8020272:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020276:	ee31 1a05 	vadd.f32	s2, s2, s10
 802027a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802027e:	ee16 4a90 	vmov	r4, s13
 8020282:	eef0 6a43 	vmov.f32	s13, s6
 8020286:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802028a:	ee16 6a90 	vmov	r6, s13
 802028e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020292:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020296:	ee77 2a62 	vsub.f32	s5, s14, s5
 802029a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802029e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202a6:	ee12 2a90 	vmov	r2, s5
 80202aa:	eef0 2a47 	vmov.f32	s5, s14
 80202ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80202b2:	ee13 2a10 	vmov	r2, s6
 80202b6:	931f      	str	r3, [sp, #124]	; 0x7c
 80202b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80202ba:	eeb0 3a67 	vmov.f32	s6, s15
 80202be:	fb92 f3f3 	sdiv	r3, r2, r3
 80202c2:	9320      	str	r3, [sp, #128]	; 0x80
 80202c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80202c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80202c8:	3b01      	subs	r3, #1
 80202ca:	930a      	str	r3, [sp, #40]	; 0x28
 80202cc:	bf08      	it	eq
 80202ce:	4615      	moveq	r5, r2
 80202d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80202d2:	bf18      	it	ne
 80202d4:	461d      	movne	r5, r3
 80202d6:	e6af      	b.n	8020038 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80202d8:	f111 0a01 	adds.w	sl, r1, #1
 80202dc:	d486      	bmi.n	80201ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80202de:	45d6      	cmp	lr, sl
 80202e0:	db84      	blt.n	80201ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80202e2:	f110 0a01 	adds.w	sl, r0, #1
 80202e6:	d481      	bmi.n	80201ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80202e8:	4553      	cmp	r3, sl
 80202ea:	f6ff af7f 	blt.w	80201ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80202ee:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80202f0:	b21b      	sxth	r3, r3
 80202f2:	9101      	str	r1, [sp, #4]
 80202f4:	4641      	mov	r1, r8
 80202f6:	9300      	str	r3, [sp, #0]
 80202f8:	fa0f f38e 	sxth.w	r3, lr
 80202fc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8020300:	e9cd c704 	strd	ip, r7, [sp, #16]
 8020304:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020306:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020308:	f7ff fdb2 	bl	801fe70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 802030c:	e76e      	b.n	80201ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802030e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020310:	1430      	asrs	r0, r6, #16
 8020312:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8020314:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020318:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802031c:	1423      	asrs	r3, r4, #16
 802031e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020322:	fb01 3000 	mla	r0, r1, r0, r3
 8020326:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020328:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 802032c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8020330:	8858      	ldrh	r0, [r3, #2]
 8020332:	f1be 0f00 	cmp.w	lr, #0
 8020336:	d00b      	beq.n	8020350 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8020338:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802033c:	3901      	subs	r1, #1
 802033e:	0049      	lsls	r1, r1, #1
 8020340:	3102      	adds	r1, #2
 8020342:	eb03 0b01 	add.w	fp, r3, r1
 8020346:	5a5b      	ldrh	r3, [r3, r1]
 8020348:	930e      	str	r3, [sp, #56]	; 0x38
 802034a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802034e:	930f      	str	r3, [sp, #60]	; 0x3c
 8020350:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8020354:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020358:	fb12 f30e 	smulbb	r3, r2, lr
 802035c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8020360:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8020364:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020368:	10db      	asrs	r3, r3, #3
 802036a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802036e:	ea41 010c 	orr.w	r1, r1, ip
 8020372:	f1ce 0c10 	rsb	ip, lr, #16
 8020376:	ea4b 0000 	orr.w	r0, fp, r0
 802037a:	9f08      	ldr	r7, [sp, #32]
 802037c:	ebac 0c02 	sub.w	ip, ip, r2
 8020380:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020384:	f108 38ff 	add.w	r8, r8, #4294967295
 8020388:	4350      	muls	r0, r2
 802038a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802038e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020390:	fb0c 0c01 	mla	ip, ip, r1, r0
 8020394:	980e      	ldr	r0, [sp, #56]	; 0x38
 8020396:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802039a:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 802039e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80203a0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80203a4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80203a8:	0412      	lsls	r2, r2, #16
 80203aa:	ea4b 0101 	orr.w	r1, fp, r1
 80203ae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80203b2:	fb03 c101 	mla	r1, r3, r1, ip
 80203b6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80203ba:	4302      	orrs	r2, r0
 80203bc:	fb03 1202 	mla	r2, r3, r2, r1
 80203c0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80203c4:	0952      	lsrs	r2, r2, #5
 80203c6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80203ca:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80203ce:	f8b9 2000 	ldrh.w	r2, [r9]
 80203d2:	ea4b 0303 	orr.w	r3, fp, r3
 80203d6:	1211      	asrs	r1, r2, #8
 80203d8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80203dc:	b29b      	uxth	r3, r3
 80203de:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80203e2:	00d2      	lsls	r2, r2, #3
 80203e4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80203e8:	fb11 f107 	smulbb	r1, r1, r7
 80203ec:	1218      	asrs	r0, r3, #8
 80203ee:	fb1c fc07 	smulbb	ip, ip, r7
 80203f2:	b2d2      	uxtb	r2, r2
 80203f4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80203f8:	fb12 f207 	smulbb	r2, r2, r7
 80203fc:	fb00 100a 	mla	r0, r0, sl, r1
 8020400:	10d9      	asrs	r1, r3, #3
 8020402:	00db      	lsls	r3, r3, #3
 8020404:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020408:	b280      	uxth	r0, r0
 802040a:	b2db      	uxtb	r3, r3
 802040c:	fb01 c10a 	mla	r1, r1, sl, ip
 8020410:	fb03 230a 	mla	r3, r3, sl, r2
 8020414:	1c42      	adds	r2, r0, #1
 8020416:	b289      	uxth	r1, r1
 8020418:	b29b      	uxth	r3, r3
 802041a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802041e:	f101 0c01 	add.w	ip, r1, #1
 8020422:	1c5a      	adds	r2, r3, #1
 8020424:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020428:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802042c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020430:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020432:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020436:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802043a:	441c      	add	r4, r3
 802043c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020440:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020442:	4310      	orrs	r0, r2
 8020444:	441e      	add	r6, r3
 8020446:	ea40 000c 	orr.w	r0, r0, ip
 802044a:	f829 0b02 	strh.w	r0, [r9], #2
 802044e:	e6fa      	b.n	8020246 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8020450:	b013      	add	sp, #76	; 0x4c
 8020452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020456 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8020456:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802045a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 802045e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8020462:	fb0e 4703 	mla	r7, lr, r3, r4
 8020466:	f1be 0f00 	cmp.w	lr, #0
 802046a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 802046e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8020472:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8020476:	8808      	ldrh	r0, [r1, #0]
 8020478:	db60      	blt.n	802053c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802047a:	45f1      	cmp	r9, lr
 802047c:	dd5e      	ble.n	802053c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802047e:	2c00      	cmp	r4, #0
 8020480:	db5a      	blt.n	8020538 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020482:	42a3      	cmp	r3, r4
 8020484:	dd58      	ble.n	8020538 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020486:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802048a:	1c62      	adds	r2, r4, #1
 802048c:	d459      	bmi.n	8020542 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802048e:	4293      	cmp	r3, r2
 8020490:	dd57      	ble.n	8020542 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020492:	2d00      	cmp	r5, #0
 8020494:	d055      	beq.n	8020542 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020496:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802049a:	f11e 0e01 	adds.w	lr, lr, #1
 802049e:	d454      	bmi.n	802054a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80204a0:	45f1      	cmp	r9, lr
 80204a2:	dd52      	ble.n	802054a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80204a4:	2e00      	cmp	r6, #0
 80204a6:	d050      	beq.n	802054a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80204a8:	2c00      	cmp	r4, #0
 80204aa:	db4c      	blt.n	8020546 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80204ac:	42a3      	cmp	r3, r4
 80204ae:	dd4a      	ble.n	8020546 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80204b0:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80204b4:	3401      	adds	r4, #1
 80204b6:	d405      	bmi.n	80204c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80204b8:	42a3      	cmp	r3, r4
 80204ba:	dd03      	ble.n	80204c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80204bc:	b115      	cbz	r5, 80204c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80204be:	3301      	adds	r3, #1
 80204c0:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80204c4:	fb15 f406 	smulbb	r4, r5, r6
 80204c8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80204cc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80204d0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80204d4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80204d8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80204dc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80204e0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80204e4:	ea43 0c0c 	orr.w	ip, r3, ip
 80204e8:	f1c6 0310 	rsb	r3, r6, #16
 80204ec:	ea4e 0707 	orr.w	r7, lr, r7
 80204f0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80204f4:	1b5b      	subs	r3, r3, r5
 80204f6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80204fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80204fe:	437d      	muls	r5, r7
 8020500:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020504:	0403      	lsls	r3, r0, #16
 8020506:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802050a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802050e:	4318      	orrs	r0, r3
 8020510:	0413      	lsls	r3, r2, #16
 8020512:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020516:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802051a:	fb04 c000 	mla	r0, r4, r0, ip
 802051e:	4313      	orrs	r3, r2
 8020520:	fb06 0003 	mla	r0, r6, r3, r0
 8020524:	0d43      	lsrs	r3, r0, #21
 8020526:	0940      	lsrs	r0, r0, #5
 8020528:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802052c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020530:	4318      	orrs	r0, r3
 8020532:	8008      	strh	r0, [r1, #0]
 8020534:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020538:	4684      	mov	ip, r0
 802053a:	e7a6      	b.n	802048a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 802053c:	4607      	mov	r7, r0
 802053e:	4684      	mov	ip, r0
 8020540:	e7ab      	b.n	802049a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020542:	4607      	mov	r7, r0
 8020544:	e7a9      	b.n	802049a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020546:	4602      	mov	r2, r0
 8020548:	e7b4      	b.n	80204b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802054a:	4602      	mov	r2, r0
 802054c:	e7ba      	b.n	80204c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802054e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802054e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020552:	b08f      	sub	sp, #60	; 0x3c
 8020554:	461d      	mov	r5, r3
 8020556:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8020558:	9107      	str	r1, [sp, #28]
 802055a:	920c      	str	r2, [sp, #48]	; 0x30
 802055c:	6859      	ldr	r1, [r3, #4]
 802055e:	681b      	ldr	r3, [r3, #0]
 8020560:	900d      	str	r0, [sp, #52]	; 0x34
 8020562:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8020566:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 802056a:	fb01 2707 	mla	r7, r1, r7, r2
 802056e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8020572:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020574:	f8d3 8000 	ldr.w	r8, [r3]
 8020578:	9b07      	ldr	r3, [sp, #28]
 802057a:	2b00      	cmp	r3, #0
 802057c:	dc03      	bgt.n	8020586 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802057e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020580:	2b00      	cmp	r3, #0
 8020582:	f340 8182 	ble.w	802088a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8020586:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020588:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802058c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020590:	1e48      	subs	r0, r1, #1
 8020592:	f102 3cff 	add.w	ip, r2, #4294967295
 8020596:	2d00      	cmp	r5, #0
 8020598:	f340 809b 	ble.w	80206d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 802059c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80205a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80205a4:	d406      	bmi.n	80205b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80205a6:	4586      	cmp	lr, r0
 80205a8:	da04      	bge.n	80205b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80205aa:	2b00      	cmp	r3, #0
 80205ac:	db02      	blt.n	80205b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80205ae:	4563      	cmp	r3, ip
 80205b0:	f2c0 8090 	blt.w	80206d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80205b4:	f11e 0e01 	adds.w	lr, lr, #1
 80205b8:	f100 8084 	bmi.w	80206c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80205bc:	4571      	cmp	r1, lr
 80205be:	f2c0 8081 	blt.w	80206c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80205c2:	3301      	adds	r3, #1
 80205c4:	d47e      	bmi.n	80206c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80205c6:	429a      	cmp	r2, r3
 80205c8:	db7c      	blt.n	80206c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80205ca:	46aa      	mov	sl, r5
 80205cc:	46b9      	mov	r9, r7
 80205ce:	f1ba 0f00 	cmp.w	sl, #0
 80205d2:	f340 8099 	ble.w	8020708 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80205d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205d8:	1421      	asrs	r1, r4, #16
 80205da:	ea4f 4026 	mov.w	r0, r6, asr #16
 80205de:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80205e2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80205e6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80205ea:	f100 80d1 	bmi.w	8020790 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80205ee:	f10e 3bff 	add.w	fp, lr, #4294967295
 80205f2:	4559      	cmp	r1, fp
 80205f4:	f280 80cc 	bge.w	8020790 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80205f8:	2800      	cmp	r0, #0
 80205fa:	f2c0 80c9 	blt.w	8020790 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80205fe:	f103 3bff 	add.w	fp, r3, #4294967295
 8020602:	4558      	cmp	r0, fp
 8020604:	f280 80c4 	bge.w	8020790 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8020608:	fa0f fe8e 	sxth.w	lr, lr
 802060c:	fb00 110e 	mla	r1, r0, lr, r1
 8020610:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8020614:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8020618:	8841      	ldrh	r1, [r0, #2]
 802061a:	f1bc 0f00 	cmp.w	ip, #0
 802061e:	d00b      	beq.n	8020638 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8020620:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8020624:	3b01      	subs	r3, #1
 8020626:	005b      	lsls	r3, r3, #1
 8020628:	3302      	adds	r3, #2
 802062a:	eb00 0e03 	add.w	lr, r0, r3
 802062e:	5ac3      	ldrh	r3, [r0, r3]
 8020630:	9308      	str	r3, [sp, #32]
 8020632:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8020636:	9309      	str	r3, [sp, #36]	; 0x24
 8020638:	ea4f 400b 	mov.w	r0, fp, lsl #16
 802063c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020640:	fb12 f30c 	smulbb	r3, r2, ip
 8020644:	f1cc 0e10 	rsb	lr, ip, #16
 8020648:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802064c:	10db      	asrs	r3, r3, #3
 802064e:	ebae 0e02 	sub.w	lr, lr, r2
 8020652:	ea40 000b 	orr.w	r0, r0, fp
 8020656:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802065a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802065e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020662:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020666:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802066a:	ea4b 0101 	orr.w	r1, fp, r1
 802066e:	4351      	muls	r1, r2
 8020670:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020672:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020676:	0410      	lsls	r0, r2, #16
 8020678:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802067c:	9908      	ldr	r1, [sp, #32]
 802067e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020682:	4310      	orrs	r0, r2
 8020684:	9a08      	ldr	r2, [sp, #32]
 8020686:	0412      	lsls	r2, r2, #16
 8020688:	fb03 e000 	mla	r0, r3, r0, lr
 802068c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8020690:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020694:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020698:	ea42 020e 	orr.w	r2, r2, lr
 802069c:	fb03 0302 	mla	r3, r3, r2, r0
 80206a0:	0d5a      	lsrs	r2, r3, #21
 80206a2:	095b      	lsrs	r3, r3, #5
 80206a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80206a8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80206ac:	4313      	orrs	r3, r2
 80206ae:	f8a9 3000 	strh.w	r3, [r9]
 80206b2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80206b4:	f109 0902 	add.w	r9, r9, #2
 80206b8:	f10a 3aff 	add.w	sl, sl, #4294967295
 80206bc:	441c      	add	r4, r3
 80206be:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80206c0:	441e      	add	r6, r3
 80206c2:	e784      	b.n	80205ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80206c4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80206c6:	3d01      	subs	r5, #1
 80206c8:	3702      	adds	r7, #2
 80206ca:	441c      	add	r4, r3
 80206cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80206ce:	441e      	add	r6, r3
 80206d0:	e761      	b.n	8020596 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80206d2:	d01d      	beq.n	8020710 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80206d4:	1e6b      	subs	r3, r5, #1
 80206d6:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80206d8:	fb00 4003 	mla	r0, r0, r3, r4
 80206dc:	1400      	asrs	r0, r0, #16
 80206de:	f53f af74 	bmi.w	80205ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80206e2:	3901      	subs	r1, #1
 80206e4:	4288      	cmp	r0, r1
 80206e6:	f6bf af70 	bge.w	80205ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80206ea:	991c      	ldr	r1, [sp, #112]	; 0x70
 80206ec:	fb01 6303 	mla	r3, r1, r3, r6
 80206f0:	141b      	asrs	r3, r3, #16
 80206f2:	f53f af6a 	bmi.w	80205ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80206f6:	3a01      	subs	r2, #1
 80206f8:	4293      	cmp	r3, r2
 80206fa:	f6bf af66 	bge.w	80205ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80206fe:	46a9      	mov	r9, r5
 8020700:	46ba      	mov	sl, r7
 8020702:	f1b9 0f00 	cmp.w	r9, #0
 8020706:	dc5b      	bgt.n	80207c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020708:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802070c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8020710:	9b07      	ldr	r3, [sp, #28]
 8020712:	2b00      	cmp	r3, #0
 8020714:	f340 80b9 	ble.w	802088a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8020718:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802071c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802071e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020722:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020726:	eef0 6a62 	vmov.f32	s13, s5
 802072a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802072e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020732:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020736:	ee16 4a90 	vmov	r4, s13
 802073a:	eef0 6a43 	vmov.f32	s13, s6
 802073e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020742:	ee16 6a90 	vmov	r6, s13
 8020746:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802074a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802074e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020752:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020756:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802075a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802075e:	ee12 2a90 	vmov	r2, s5
 8020762:	eef0 2a47 	vmov.f32	s5, s14
 8020766:	fb92 f3f3 	sdiv	r3, r2, r3
 802076a:	ee13 2a10 	vmov	r2, s6
 802076e:	931b      	str	r3, [sp, #108]	; 0x6c
 8020770:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020772:	eeb0 3a67 	vmov.f32	s6, s15
 8020776:	fb92 f3f3 	sdiv	r3, r2, r3
 802077a:	931c      	str	r3, [sp, #112]	; 0x70
 802077c:	9b07      	ldr	r3, [sp, #28]
 802077e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020780:	3b01      	subs	r3, #1
 8020782:	9307      	str	r3, [sp, #28]
 8020784:	bf08      	it	eq
 8020786:	4615      	moveq	r5, r2
 8020788:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802078a:	bf18      	it	ne
 802078c:	461d      	movne	r5, r3
 802078e:	e6f3      	b.n	8020578 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8020790:	f111 0b01 	adds.w	fp, r1, #1
 8020794:	d48d      	bmi.n	80206b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020796:	45de      	cmp	lr, fp
 8020798:	db8b      	blt.n	80206b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802079a:	f110 0b01 	adds.w	fp, r0, #1
 802079e:	d488      	bmi.n	80206b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80207a0:	455b      	cmp	r3, fp
 80207a2:	db86      	blt.n	80206b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80207a4:	b21b      	sxth	r3, r3
 80207a6:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80207aa:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80207ae:	9300      	str	r3, [sp, #0]
 80207b0:	4642      	mov	r2, r8
 80207b2:	fa0f f38e 	sxth.w	r3, lr
 80207b6:	4649      	mov	r1, r9
 80207b8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80207ba:	f7ff fe4c 	bl	8020456 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80207be:	e778      	b.n	80206b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80207c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80207c2:	1420      	asrs	r0, r4, #16
 80207c4:	1431      	asrs	r1, r6, #16
 80207c6:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80207ca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80207ce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80207d2:	fb03 0101 	mla	r1, r3, r1, r0
 80207d6:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80207da:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80207de:	8841      	ldrh	r1, [r0, #2]
 80207e0:	f1be 0f00 	cmp.w	lr, #0
 80207e4:	d00b      	beq.n	80207fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80207e6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80207ea:	3b01      	subs	r3, #1
 80207ec:	005b      	lsls	r3, r3, #1
 80207ee:	3302      	adds	r3, #2
 80207f0:	eb00 0b03 	add.w	fp, r0, r3
 80207f4:	5ac3      	ldrh	r3, [r0, r3]
 80207f6:	930a      	str	r3, [sp, #40]	; 0x28
 80207f8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80207fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80207fe:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8020802:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020806:	fb12 f30e 	smulbb	r3, r2, lr
 802080a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802080e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020812:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020816:	10db      	asrs	r3, r3, #3
 8020818:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802081c:	ea40 000c 	orr.w	r0, r0, ip
 8020820:	f1ce 0c10 	rsb	ip, lr, #16
 8020824:	ea4b 0101 	orr.w	r1, fp, r1
 8020828:	f109 39ff 	add.w	r9, r9, #4294967295
 802082c:	ebac 0c02 	sub.w	ip, ip, r2
 8020830:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020834:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8020838:	4351      	muls	r1, r2
 802083a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802083c:	fb0c 1c00 	mla	ip, ip, r0, r1
 8020840:	990a      	ldr	r1, [sp, #40]	; 0x28
 8020842:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020846:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802084a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802084c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020850:	0412      	lsls	r2, r2, #16
 8020852:	ea4b 0000 	orr.w	r0, fp, r0
 8020856:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802085a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802085e:	fb03 c000 	mla	r0, r3, r0, ip
 8020862:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8020866:	ea42 0b0b 	orr.w	fp, r2, fp
 802086a:	fb03 000b 	mla	r0, r3, fp, r0
 802086e:	0d43      	lsrs	r3, r0, #21
 8020870:	0940      	lsrs	r0, r0, #5
 8020872:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020876:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802087a:	4318      	orrs	r0, r3
 802087c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802087e:	441c      	add	r4, r3
 8020880:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020882:	f82a 0b02 	strh.w	r0, [sl], #2
 8020886:	441e      	add	r6, r3
 8020888:	e73b      	b.n	8020702 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802088a:	b00f      	add	sp, #60	; 0x3c
 802088c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8020890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020894:	b085      	sub	sp, #20
 8020896:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802089a:	9102      	str	r1, [sp, #8]
 802089c:	2c00      	cmp	r4, #0
 802089e:	fb04 7103 	mla	r1, r4, r3, r7
 80208a2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80208a6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80208aa:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80208ae:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80208b2:	f2c0 811b 	blt.w	8020aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80208b6:	45a6      	cmp	lr, r4
 80208b8:	f340 8118 	ble.w	8020aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80208bc:	2f00      	cmp	r7, #0
 80208be:	f2c0 8113 	blt.w	8020ae8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80208c2:	42bb      	cmp	r3, r7
 80208c4:	f340 8110 	ble.w	8020ae8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80208c8:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80208cc:	1c7a      	adds	r2, r7, #1
 80208ce:	f100 8110 	bmi.w	8020af2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80208d2:	4293      	cmp	r3, r2
 80208d4:	f340 810d 	ble.w	8020af2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80208d8:	2e00      	cmp	r6, #0
 80208da:	f000 810c 	beq.w	8020af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80208de:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80208e2:	3401      	adds	r4, #1
 80208e4:	f100 810b 	bmi.w	8020afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80208e8:	45a6      	cmp	lr, r4
 80208ea:	f340 8108 	ble.w	8020afe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80208ee:	2800      	cmp	r0, #0
 80208f0:	f000 8108 	beq.w	8020b04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80208f4:	2f00      	cmp	r7, #0
 80208f6:	f2c0 8100 	blt.w	8020afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80208fa:	42bb      	cmp	r3, r7
 80208fc:	f340 80fd 	ble.w	8020afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8020900:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8020904:	3701      	adds	r7, #1
 8020906:	f100 8100 	bmi.w	8020b0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802090a:	42bb      	cmp	r3, r7
 802090c:	f340 80fd 	ble.w	8020b0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8020910:	2e00      	cmp	r6, #0
 8020912:	f000 80fc 	beq.w	8020b0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8020916:	3301      	adds	r3, #1
 8020918:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802091c:	b2b6      	uxth	r6, r6
 802091e:	b280      	uxth	r0, r0
 8020920:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020924:	fb00 fe06 	mul.w	lr, r0, r6
 8020928:	0136      	lsls	r6, r6, #4
 802092a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802092e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020932:	eba6 070e 	sub.w	r7, r6, lr
 8020936:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802093a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802093e:	b280      	uxth	r0, r0
 8020940:	b2bf      	uxth	r7, r7
 8020942:	1a1b      	subs	r3, r3, r0
 8020944:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020948:	fb0a f607 	mul.w	r6, sl, r7
 802094c:	b29b      	uxth	r3, r3
 802094e:	fb0b 6603 	mla	r6, fp, r3, r6
 8020952:	fb00 6609 	mla	r6, r0, r9, r6
 8020956:	fb0e 6608 	mla	r6, lr, r8, r6
 802095a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802095e:	9600      	str	r6, [sp, #0]
 8020960:	2e00      	cmp	r6, #0
 8020962:	f000 80be 	beq.w	8020ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8020966:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802096a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802096e:	9e02      	ldr	r6, [sp, #8]
 8020970:	fb0b fc0c 	mul.w	ip, fp, ip
 8020974:	fb0b f505 	mul.w	r5, fp, r5
 8020978:	8836      	ldrh	r6, [r6, #0]
 802097a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802097e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020982:	9501      	str	r5, [sp, #4]
 8020984:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020988:	44dc      	add	ip, fp
 802098a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802098e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8020992:	9503      	str	r5, [sp, #12]
 8020994:	9d01      	ldr	r5, [sp, #4]
 8020996:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802099a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802099e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80209a2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80209a6:	fb0a fc0c 	mul.w	ip, sl, ip
 80209aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80209ae:	fb0a fa01 	mul.w	sl, sl, r1
 80209b2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80209b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80209ba:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80209be:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80209c2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80209c6:	4465      	add	r5, ip
 80209c8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80209cc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80209d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209d4:	fb09 fc0c 	mul.w	ip, r9, ip
 80209d8:	0a2d      	lsrs	r5, r5, #8
 80209da:	fb09 f904 	mul.w	r9, r9, r4
 80209de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80209e2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80209e6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80209ea:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80209ee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80209f2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80209f6:	437d      	muls	r5, r7
 80209f8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80209fc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020a00:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020a04:	4461      	add	r1, ip
 8020a06:	fb08 f404 	mul.w	r4, r8, r4
 8020a0a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020a0e:	fb08 f802 	mul.w	r8, r8, r2
 8020a12:	0a09      	lsrs	r1, r1, #8
 8020a14:	0a22      	lsrs	r2, r4, #8
 8020a16:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020a1a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020a1e:	fb07 f70a 	mul.w	r7, r7, sl
 8020a22:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020a26:	4414      	add	r4, r2
 8020a28:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020a2c:	0a24      	lsrs	r4, r4, #8
 8020a2e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020a32:	9a03      	ldr	r2, [sp, #12]
 8020a34:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020a38:	fb02 5503 	mla	r5, r2, r3, r5
 8020a3c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020a40:	9a00      	ldr	r2, [sp, #0]
 8020a42:	fb04 540e 	mla	r4, r4, lr, r5
 8020a46:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020a4a:	1235      	asrs	r5, r6, #8
 8020a4c:	fb01 4100 	mla	r1, r1, r0, r4
 8020a50:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020a54:	0a09      	lsrs	r1, r1, #8
 8020a56:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020a5a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020a5e:	fb03 7101 	mla	r1, r3, r1, r7
 8020a62:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020a66:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020a6a:	fb00 e101 	mla	r1, r0, r1, lr
 8020a6e:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020a72:	b287      	uxth	r7, r0
 8020a74:	0a09      	lsrs	r1, r1, #8
 8020a76:	437a      	muls	r2, r7
 8020a78:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020a7c:	1c53      	adds	r3, r2, #1
 8020a7e:	4321      	orrs	r1, r4
 8020a80:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020a84:	0c0a      	lsrs	r2, r1, #16
 8020a86:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020a8a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020a8e:	b2c8      	uxtb	r0, r1
 8020a90:	fb12 f207 	smulbb	r2, r2, r7
 8020a94:	fb14 f407 	smulbb	r4, r4, r7
 8020a98:	b2db      	uxtb	r3, r3
 8020a9a:	fb10 f007 	smulbb	r0, r0, r7
 8020a9e:	fb05 2503 	mla	r5, r5, r3, r2
 8020aa2:	10f2      	asrs	r2, r6, #3
 8020aa4:	00f6      	lsls	r6, r6, #3
 8020aa6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020aaa:	b2ad      	uxth	r5, r5
 8020aac:	b2f6      	uxtb	r6, r6
 8020aae:	fb02 4203 	mla	r2, r2, r3, r4
 8020ab2:	fb06 0303 	mla	r3, r6, r3, r0
 8020ab6:	b294      	uxth	r4, r2
 8020ab8:	b299      	uxth	r1, r3
 8020aba:	1c6b      	adds	r3, r5, #1
 8020abc:	1c62      	adds	r2, r4, #1
 8020abe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020ac2:	1c4b      	adds	r3, r1, #1
 8020ac4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020ac8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020acc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020ad0:	0952      	lsrs	r2, r2, #5
 8020ad2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020ad6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020ada:	432b      	orrs	r3, r5
 8020adc:	4313      	orrs	r3, r2
 8020ade:	9a02      	ldr	r2, [sp, #8]
 8020ae0:	8013      	strh	r3, [r2, #0]
 8020ae2:	b005      	add	sp, #20
 8020ae4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ae8:	2500      	movs	r5, #0
 8020aea:	e6ef      	b.n	80208cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8020aec:	2100      	movs	r1, #0
 8020aee:	460d      	mov	r5, r1
 8020af0:	e6f7      	b.n	80208e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8020af2:	2100      	movs	r1, #0
 8020af4:	e6f5      	b.n	80208e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8020af6:	4631      	mov	r1, r6
 8020af8:	e6f3      	b.n	80208e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8020afa:	2400      	movs	r4, #0
 8020afc:	e702      	b.n	8020904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8020afe:	2200      	movs	r2, #0
 8020b00:	4614      	mov	r4, r2
 8020b02:	e70b      	b.n	802091c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8020b04:	4602      	mov	r2, r0
 8020b06:	4604      	mov	r4, r0
 8020b08:	e708      	b.n	802091c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8020b0a:	2200      	movs	r2, #0
 8020b0c:	e706      	b.n	802091c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8020b0e:	4632      	mov	r2, r6
 8020b10:	e704      	b.n	802091c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08020b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b16:	b09d      	sub	sp, #116	; 0x74
 8020b18:	9219      	str	r2, [sp, #100]	; 0x64
 8020b1a:	9307      	str	r3, [sp, #28]
 8020b1c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8020b1e:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8020b22:	901b      	str	r0, [sp, #108]	; 0x6c
 8020b24:	931a      	str	r3, [sp, #104]	; 0x68
 8020b26:	6850      	ldr	r0, [r2, #4]
 8020b28:	9117      	str	r1, [sp, #92]	; 0x5c
 8020b2a:	6812      	ldr	r2, [r2, #0]
 8020b2c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8020b30:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8020b34:	fb00 1303 	mla	r3, r0, r3, r1
 8020b38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020b3c:	930a      	str	r3, [sp, #40]	; 0x28
 8020b3e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020b40:	681b      	ldr	r3, [r3, #0]
 8020b42:	9310      	str	r3, [sp, #64]	; 0x40
 8020b44:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8020b48:	930b      	str	r3, [sp, #44]	; 0x2c
 8020b4a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020b4c:	2b00      	cmp	r3, #0
 8020b4e:	dc03      	bgt.n	8020b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8020b50:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020b52:	2b00      	cmp	r3, #0
 8020b54:	f340 8375 	ble.w	8021242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020b58:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020b5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020b62:	1e48      	subs	r0, r1, #1
 8020b64:	1e57      	subs	r7, r2, #1
 8020b66:	9b07      	ldr	r3, [sp, #28]
 8020b68:	2b00      	cmp	r3, #0
 8020b6a:	f340 818e 	ble.w	8020e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020b6e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020b72:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020b76:	d406      	bmi.n	8020b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8020b78:	4584      	cmp	ip, r0
 8020b7a:	da04      	bge.n	8020b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8020b7c:	2b00      	cmp	r3, #0
 8020b7e:	db02      	blt.n	8020b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8020b80:	42bb      	cmp	r3, r7
 8020b82:	f2c0 8183 	blt.w	8020e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8020b86:	f11c 0c01 	adds.w	ip, ip, #1
 8020b8a:	f100 8173 	bmi.w	8020e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020b8e:	4561      	cmp	r1, ip
 8020b90:	f2c0 8170 	blt.w	8020e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020b94:	3301      	adds	r3, #1
 8020b96:	f100 816d 	bmi.w	8020e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020b9a:	429a      	cmp	r2, r3
 8020b9c:	f2c0 816a 	blt.w	8020e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020ba0:	9b07      	ldr	r3, [sp, #28]
 8020ba2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020ba4:	9318      	str	r3, [sp, #96]	; 0x60
 8020ba6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020ba8:	2b00      	cmp	r3, #0
 8020baa:	f340 818c 	ble.w	8020ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8020bae:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8020bb0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020bb4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020bb6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020bba:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020bbe:	1422      	asrs	r2, r4, #16
 8020bc0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020bc4:	689b      	ldr	r3, [r3, #8]
 8020bc6:	f100 81cd 	bmi.w	8020f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020bca:	f103 38ff 	add.w	r8, r3, #4294967295
 8020bce:	4542      	cmp	r2, r8
 8020bd0:	f280 81c8 	bge.w	8020f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020bd4:	f1bc 0f00 	cmp.w	ip, #0
 8020bd8:	f2c0 81c4 	blt.w	8020f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020bdc:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020be0:	45c4      	cmp	ip, r8
 8020be2:	f280 81bf 	bge.w	8020f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020be6:	b21b      	sxth	r3, r3
 8020be8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020bea:	fb0c 2203 	mla	r2, ip, r3, r2
 8020bee:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8020bf2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8020bf6:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8020bfa:	2800      	cmp	r0, #0
 8020bfc:	f000 81a9 	beq.w	8020f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8020c00:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8020c04:	950c      	str	r5, [sp, #48]	; 0x30
 8020c06:	0e2d      	lsrs	r5, r5, #24
 8020c08:	9513      	str	r5, [sp, #76]	; 0x4c
 8020c0a:	b181      	cbz	r1, 8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020c0c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8020c10:	3b01      	subs	r3, #1
 8020c12:	009b      	lsls	r3, r3, #2
 8020c14:	3304      	adds	r3, #4
 8020c16:	eb08 0c03 	add.w	ip, r8, r3
 8020c1a:	f858 3003 	ldr.w	r3, [r8, r3]
 8020c1e:	9308      	str	r3, [sp, #32]
 8020c20:	0e1b      	lsrs	r3, r3, #24
 8020c22:	9311      	str	r3, [sp, #68]	; 0x44
 8020c24:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8020c28:	930d      	str	r3, [sp, #52]	; 0x34
 8020c2a:	0e1b      	lsrs	r3, r3, #24
 8020c2c:	9314      	str	r3, [sp, #80]	; 0x50
 8020c2e:	b280      	uxth	r0, r0
 8020c30:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020c32:	b289      	uxth	r1, r1
 8020c34:	fb00 f901 	mul.w	r9, r0, r1
 8020c38:	0100      	lsls	r0, r0, #4
 8020c3a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020c3e:	eba0 0809 	sub.w	r8, r0, r9
 8020c42:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8020c46:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020c48:	b289      	uxth	r1, r1
 8020c4a:	fa1f f888 	uxth.w	r8, r8
 8020c4e:	1a5b      	subs	r3, r3, r1
 8020c50:	fb08 f000 	mul.w	r0, r8, r0
 8020c54:	b29b      	uxth	r3, r3
 8020c56:	fb03 000e 	mla	r0, r3, lr, r0
 8020c5a:	fb01 0005 	mla	r0, r1, r5, r0
 8020c5e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020c60:	fb09 0005 	mla	r0, r9, r5, r0
 8020c64:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020c68:	2800      	cmp	r0, #0
 8020c6a:	f000 80fa 	beq.w	8020e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020c6e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020c72:	d01b      	beq.n	8020cac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8020c74:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8020c78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020c7c:	fb0e fa0a 	mul.w	sl, lr, sl
 8020c80:	fb0e fe02 	mul.w	lr, lr, r2
 8020c84:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020c88:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020c8c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020c90:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020c94:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020c98:	4452      	add	r2, sl
 8020c9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c9e:	0a12      	lsrs	r2, r2, #8
 8020ca0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020ca4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020ca8:	ea42 020c 	orr.w	r2, r2, ip
 8020cac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020cae:	2dff      	cmp	r5, #255	; 0xff
 8020cb0:	d021      	beq.n	8020cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8020cb2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020cb4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020cb8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020cba:	fb05 fb0b 	mul.w	fp, r5, fp
 8020cbe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020cc0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020cc4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020cc6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020cca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020cce:	fb05 fa0a 	mul.w	sl, r5, sl
 8020cd2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020cd6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020cda:	44de      	add	lr, fp
 8020cdc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020ce0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020ce4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ce8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020cec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020cf0:	ea4e 050a 	orr.w	r5, lr, sl
 8020cf4:	950c      	str	r5, [sp, #48]	; 0x30
 8020cf6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020cf8:	2dff      	cmp	r5, #255	; 0xff
 8020cfa:	d021      	beq.n	8020d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8020cfc:	9d08      	ldr	r5, [sp, #32]
 8020cfe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020d02:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020d04:	fb05 fb0b 	mul.w	fp, r5, fp
 8020d08:	9d08      	ldr	r5, [sp, #32]
 8020d0a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020d0e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020d10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020d14:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020d18:	fb05 fa0a 	mul.w	sl, r5, sl
 8020d1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d20:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020d24:	44de      	add	lr, fp
 8020d26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020d2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020d2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020d3a:	ea4e 050a 	orr.w	r5, lr, sl
 8020d3e:	9508      	str	r5, [sp, #32]
 8020d40:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020d42:	2dff      	cmp	r5, #255	; 0xff
 8020d44:	d021      	beq.n	8020d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8020d46:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020d48:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020d4c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020d4e:	fb05 fb0b 	mul.w	fp, r5, fp
 8020d52:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020d54:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020d58:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020d5a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020d5e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020d62:	fb05 fa0a 	mul.w	sl, r5, sl
 8020d66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d6a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020d6e:	44de      	add	lr, fp
 8020d70:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020d74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020d78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d80:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020d84:	ea4e 050a 	orr.w	r5, lr, sl
 8020d88:	950d      	str	r5, [sp, #52]	; 0x34
 8020d8a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020d8c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8020d90:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020d94:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020d98:	9d08      	ldr	r5, [sp, #32]
 8020d9a:	fb08 fc0c 	mul.w	ip, r8, ip
 8020d9e:	fb03 cc0e 	mla	ip, r3, lr, ip
 8020da2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020da6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020da8:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020dac:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020db0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020db2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020db6:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8020dba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020dbc:	fb08 f80e 	mul.w	r8, r8, lr
 8020dc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020dc4:	fb03 8202 	mla	r2, r3, r2, r8
 8020dc8:	9b08      	ldr	r3, [sp, #32]
 8020dca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020dce:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8020dd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020dd4:	fb01 220a 	mla	r2, r1, sl, r2
 8020dd8:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8020ddc:	883b      	ldrh	r3, [r7, #0]
 8020dde:	fb09 2901 	mla	r9, r9, r1, r2
 8020de2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020de4:	1219      	asrs	r1, r3, #8
 8020de6:	4342      	muls	r2, r0
 8020de8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020dec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020df0:	1c50      	adds	r0, r2, #1
 8020df2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020df6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020dfa:	ea4c 0c09 	orr.w	ip, ip, r9
 8020dfe:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020e02:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020e06:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020e0a:	fa5f fc8c 	uxtb.w	ip, ip
 8020e0e:	fb12 f205 	smulbb	r2, r2, r5
 8020e12:	b2c0      	uxtb	r0, r0
 8020e14:	fb1c fc05 	smulbb	ip, ip, r5
 8020e18:	fb01 2100 	mla	r1, r1, r0, r2
 8020e1c:	10da      	asrs	r2, r3, #3
 8020e1e:	fb1e fe05 	smulbb	lr, lr, r5
 8020e22:	00db      	lsls	r3, r3, #3
 8020e24:	b289      	uxth	r1, r1
 8020e26:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020e2a:	b2db      	uxtb	r3, r3
 8020e2c:	fb02 e200 	mla	r2, r2, r0, lr
 8020e30:	fb03 c300 	mla	r3, r3, r0, ip
 8020e34:	b292      	uxth	r2, r2
 8020e36:	fa1f fc83 	uxth.w	ip, r3
 8020e3a:	1c4b      	adds	r3, r1, #1
 8020e3c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020e40:	f10c 0301 	add.w	r3, ip, #1
 8020e44:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020e48:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020e4c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020e50:	430b      	orrs	r3, r1
 8020e52:	1c51      	adds	r1, r2, #1
 8020e54:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020e58:	0952      	lsrs	r2, r2, #5
 8020e5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020e5e:	4313      	orrs	r3, r2
 8020e60:	803b      	strh	r3, [r7, #0]
 8020e62:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020e64:	3702      	adds	r7, #2
 8020e66:	441c      	add	r4, r3
 8020e68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020e6a:	441e      	add	r6, r3
 8020e6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020e6e:	3b01      	subs	r3, #1
 8020e70:	9318      	str	r3, [sp, #96]	; 0x60
 8020e72:	e698      	b.n	8020ba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020e74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020e76:	441c      	add	r4, r3
 8020e78:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020e7a:	441e      	add	r6, r3
 8020e7c:	9b07      	ldr	r3, [sp, #28]
 8020e7e:	3b01      	subs	r3, #1
 8020e80:	9307      	str	r3, [sp, #28]
 8020e82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e84:	3302      	adds	r3, #2
 8020e86:	930a      	str	r3, [sp, #40]	; 0x28
 8020e88:	e66d      	b.n	8020b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8020e8a:	d023      	beq.n	8020ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020e8c:	9b07      	ldr	r3, [sp, #28]
 8020e8e:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8020e90:	3b01      	subs	r3, #1
 8020e92:	fb00 4003 	mla	r0, r0, r3, r4
 8020e96:	1400      	asrs	r0, r0, #16
 8020e98:	f53f ae82 	bmi.w	8020ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020e9c:	3901      	subs	r1, #1
 8020e9e:	4288      	cmp	r0, r1
 8020ea0:	f6bf ae7e 	bge.w	8020ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020ea4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8020ea6:	fb01 6303 	mla	r3, r1, r3, r6
 8020eaa:	141b      	asrs	r3, r3, #16
 8020eac:	f53f ae78 	bmi.w	8020ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020eb0:	3a01      	subs	r2, #1
 8020eb2:	4293      	cmp	r3, r2
 8020eb4:	f6bf ae74 	bge.w	8020ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020eb8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020ebc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020ec0:	f1bb 0f00 	cmp.w	fp, #0
 8020ec4:	dc6c      	bgt.n	8020fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020ec6:	9b07      	ldr	r3, [sp, #28]
 8020ec8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020ecc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ece:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020ed2:	930a      	str	r3, [sp, #40]	; 0x28
 8020ed4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020ed6:	2b00      	cmp	r3, #0
 8020ed8:	f340 81b3 	ble.w	8021242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020edc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020ee0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020ee2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020ee6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020eea:	eef0 6a62 	vmov.f32	s13, s5
 8020eee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020ef2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020ef6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020efa:	ee16 4a90 	vmov	r4, s13
 8020efe:	eef0 6a43 	vmov.f32	s13, s6
 8020f02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f06:	ee16 6a90 	vmov	r6, s13
 8020f0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020f0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020f12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020f16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020f1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020f1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020f22:	ee12 2a90 	vmov	r2, s5
 8020f26:	eef0 2a47 	vmov.f32	s5, s14
 8020f2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f2e:	ee13 2a10 	vmov	r2, s6
 8020f32:	9329      	str	r3, [sp, #164]	; 0xa4
 8020f34:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020f36:	eeb0 3a67 	vmov.f32	s6, s15
 8020f3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f3e:	932a      	str	r3, [sp, #168]	; 0xa8
 8020f40:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020f42:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8020f44:	3b01      	subs	r3, #1
 8020f46:	9317      	str	r3, [sp, #92]	; 0x5c
 8020f48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020f4a:	bf08      	it	eq
 8020f4c:	4613      	moveq	r3, r2
 8020f4e:	9307      	str	r3, [sp, #28]
 8020f50:	e5fb      	b.n	8020b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020f52:	2900      	cmp	r1, #0
 8020f54:	f43f ae6b 	beq.w	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020f58:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8020f5c:	9308      	str	r3, [sp, #32]
 8020f5e:	0e1b      	lsrs	r3, r3, #24
 8020f60:	9311      	str	r3, [sp, #68]	; 0x44
 8020f62:	e664      	b.n	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020f64:	f112 0801 	adds.w	r8, r2, #1
 8020f68:	f53f af7b 	bmi.w	8020e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020f6c:	4543      	cmp	r3, r8
 8020f6e:	f6ff af78 	blt.w	8020e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020f72:	f11c 0801 	adds.w	r8, ip, #1
 8020f76:	f53f af74 	bmi.w	8020e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020f7a:	45c6      	cmp	lr, r8
 8020f7c:	f6ff af71 	blt.w	8020e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020f80:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8020f82:	b21b      	sxth	r3, r3
 8020f84:	9201      	str	r2, [sp, #4]
 8020f86:	fa0f f28e 	sxth.w	r2, lr
 8020f8a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8020f8e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8020f92:	9200      	str	r2, [sp, #0]
 8020f94:	4639      	mov	r1, r7
 8020f96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020f98:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020f9a:	f7ff fc79 	bl	8020890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8020f9e:	e760      	b.n	8020e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020fa0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020fa2:	1427      	asrs	r7, r4, #16
 8020fa4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020fa6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020faa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fae:	1433      	asrs	r3, r6, #16
 8020fb0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020fb4:	fb01 7303 	mla	r3, r1, r3, r7
 8020fb8:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8020fbc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8020fc0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020fc4:	2a00      	cmp	r2, #0
 8020fc6:	f000 8133 	beq.w	8021230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8020fca:	687d      	ldr	r5, [r7, #4]
 8020fcc:	950e      	str	r5, [sp, #56]	; 0x38
 8020fce:	0e2d      	lsrs	r5, r5, #24
 8020fd0:	9515      	str	r5, [sp, #84]	; 0x54
 8020fd2:	b178      	cbz	r0, 8020ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020fd4:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8020fd8:	3901      	subs	r1, #1
 8020fda:	0089      	lsls	r1, r1, #2
 8020fdc:	3104      	adds	r1, #4
 8020fde:	eb07 0e01 	add.w	lr, r7, r1
 8020fe2:	5879      	ldr	r1, [r7, r1]
 8020fe4:	9109      	str	r1, [sp, #36]	; 0x24
 8020fe6:	0e09      	lsrs	r1, r1, #24
 8020fe8:	9112      	str	r1, [sp, #72]	; 0x48
 8020fea:	f8de 1004 	ldr.w	r1, [lr, #4]
 8020fee:	910f      	str	r1, [sp, #60]	; 0x3c
 8020ff0:	0e09      	lsrs	r1, r1, #24
 8020ff2:	9116      	str	r1, [sp, #88]	; 0x58
 8020ff4:	b292      	uxth	r2, r2
 8020ff6:	9915      	ldr	r1, [sp, #84]	; 0x54
 8020ff8:	b280      	uxth	r0, r0
 8020ffa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020ffc:	fb02 f800 	mul.w	r8, r2, r0
 8021000:	0112      	lsls	r2, r2, #4
 8021002:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021006:	eba2 0e08 	sub.w	lr, r2, r8
 802100a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802100e:	b280      	uxth	r0, r0
 8021010:	fa1f fe8e 	uxth.w	lr, lr
 8021014:	1a12      	subs	r2, r2, r0
 8021016:	fb0e f101 	mul.w	r1, lr, r1
 802101a:	b292      	uxth	r2, r2
 802101c:	fb02 110c 	mla	r1, r2, ip, r1
 8021020:	fb00 1105 	mla	r1, r0, r5, r1
 8021024:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8021026:	fb08 1105 	mla	r1, r8, r5, r1
 802102a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802102e:	2900      	cmp	r1, #0
 8021030:	f000 80f5 	beq.w	802121e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8021034:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021038:	d019      	beq.n	802106e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802103a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802103e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021042:	fb0c fa0a 	mul.w	sl, ip, sl
 8021046:	fb0c fc03 	mul.w	ip, ip, r3
 802104a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802104e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021052:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021056:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802105a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802105e:	4453      	add	r3, sl
 8021060:	0a3f      	lsrs	r7, r7, #8
 8021062:	0a1b      	lsrs	r3, r3, #8
 8021064:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021068:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802106c:	433b      	orrs	r3, r7
 802106e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021070:	2dff      	cmp	r5, #255	; 0xff
 8021072:	d020      	beq.n	80210b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8021074:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021076:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802107a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802107c:	436f      	muls	r7, r5
 802107e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021080:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021084:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021088:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802108a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802108e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021092:	fb05 fa0a 	mul.w	sl, r5, sl
 8021096:	44bc      	add	ip, r7
 8021098:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802109c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80210a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80210b0:	ea4c 050a 	orr.w	r5, ip, sl
 80210b4:	950e      	str	r5, [sp, #56]	; 0x38
 80210b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80210b8:	2dff      	cmp	r5, #255	; 0xff
 80210ba:	d020      	beq.n	80210fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80210bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80210be:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80210c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80210c4:	436f      	muls	r7, r5
 80210c6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80210c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80210cc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80210d0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80210d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80210d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210da:	fb05 fa0a 	mul.w	sl, r5, sl
 80210de:	44bc      	add	ip, r7
 80210e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80210e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80210ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80210f8:	ea4c 050a 	orr.w	r5, ip, sl
 80210fc:	9509      	str	r5, [sp, #36]	; 0x24
 80210fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8021100:	2dff      	cmp	r5, #255	; 0xff
 8021102:	d020      	beq.n	8021146 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8021104:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021106:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802110a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802110c:	436f      	muls	r7, r5
 802110e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021110:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021114:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021118:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802111a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802111e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021122:	fb05 fa0a 	mul.w	sl, r5, sl
 8021126:	44bc      	add	ip, r7
 8021128:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802112c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021130:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021134:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021138:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802113c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021140:	ea4c 050a 	orr.w	r5, ip, sl
 8021144:	950f      	str	r5, [sp, #60]	; 0x3c
 8021146:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021148:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802114c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021150:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021154:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021156:	fb0e f707 	mul.w	r7, lr, r7
 802115a:	fb02 770c 	mla	r7, r2, ip, r7
 802115e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021162:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021164:	fb00 770c 	mla	r7, r0, ip, r7
 8021168:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802116c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802116e:	fb08 770c 	mla	r7, r8, ip, r7
 8021172:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8021176:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8021178:	fb0e fe0c 	mul.w	lr, lr, ip
 802117c:	0a3f      	lsrs	r7, r7, #8
 802117e:	fb02 e303 	mla	r3, r2, r3, lr
 8021182:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021184:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021188:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802118c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802118e:	fb00 330a 	mla	r3, r0, sl, r3
 8021192:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8021196:	f8b9 0000 	ldrh.w	r0, [r9]
 802119a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802119e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80211a0:	1202      	asrs	r2, r0, #8
 80211a2:	4359      	muls	r1, r3
 80211a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80211a8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80211ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80211b0:	1c4b      	adds	r3, r1, #1
 80211b2:	ea47 070c 	orr.w	r7, r7, ip
 80211b6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80211ba:	0c3b      	lsrs	r3, r7, #16
 80211bc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80211c0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80211c4:	b2ff      	uxtb	r7, r7
 80211c6:	fb13 f305 	smulbb	r3, r3, r5
 80211ca:	b2c9      	uxtb	r1, r1
 80211cc:	fb17 f705 	smulbb	r7, r7, r5
 80211d0:	fb02 3201 	mla	r2, r2, r1, r3
 80211d4:	10c3      	asrs	r3, r0, #3
 80211d6:	fb1c fc05 	smulbb	ip, ip, r5
 80211da:	00c0      	lsls	r0, r0, #3
 80211dc:	b292      	uxth	r2, r2
 80211de:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80211e2:	b2c0      	uxtb	r0, r0
 80211e4:	fb03 c301 	mla	r3, r3, r1, ip
 80211e8:	fb00 7001 	mla	r0, r0, r1, r7
 80211ec:	1c51      	adds	r1, r2, #1
 80211ee:	b29b      	uxth	r3, r3
 80211f0:	b280      	uxth	r0, r0
 80211f2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80211f6:	f100 0c01 	add.w	ip, r0, #1
 80211fa:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80211fe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8021202:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021206:	ea4c 0202 	orr.w	r2, ip, r2
 802120a:	f103 0c01 	add.w	ip, r3, #1
 802120e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021212:	095b      	lsrs	r3, r3, #5
 8021214:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021218:	431a      	orrs	r2, r3
 802121a:	f8a9 2000 	strh.w	r2, [r9]
 802121e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021220:	f109 0902 	add.w	r9, r9, #2
 8021224:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021228:	441c      	add	r4, r3
 802122a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802122c:	441e      	add	r6, r3
 802122e:	e647      	b.n	8020ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021230:	2800      	cmp	r0, #0
 8021232:	f43f aedf 	beq.w	8020ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021236:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802123a:	9109      	str	r1, [sp, #36]	; 0x24
 802123c:	0e09      	lsrs	r1, r1, #24
 802123e:	9112      	str	r1, [sp, #72]	; 0x48
 8021240:	e6d8      	b.n	8020ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021242:	b01d      	add	sp, #116	; 0x74
 8021244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021248 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8021248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802124c:	b085      	sub	sp, #20
 802124e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8021252:	9102      	str	r1, [sp, #8]
 8021254:	2c00      	cmp	r4, #0
 8021256:	fb04 7103 	mla	r1, r4, r3, r7
 802125a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802125e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021262:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021266:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802126a:	f2c0 810c 	blt.w	8021486 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802126e:	45a6      	cmp	lr, r4
 8021270:	f340 8109 	ble.w	8021486 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8021274:	2f00      	cmp	r7, #0
 8021276:	f2c0 8104 	blt.w	8021482 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802127a:	42bb      	cmp	r3, r7
 802127c:	f340 8101 	ble.w	8021482 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021280:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021284:	1c7a      	adds	r2, r7, #1
 8021286:	f100 8101 	bmi.w	802148c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802128a:	4293      	cmp	r3, r2
 802128c:	f340 80fe 	ble.w	802148c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021290:	2e00      	cmp	r6, #0
 8021292:	f000 80fd 	beq.w	8021490 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8021296:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802129a:	3401      	adds	r4, #1
 802129c:	f100 80fc 	bmi.w	8021498 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80212a0:	45a6      	cmp	lr, r4
 80212a2:	f340 80f9 	ble.w	8021498 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80212a6:	2800      	cmp	r0, #0
 80212a8:	f000 80f9 	beq.w	802149e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80212ac:	2f00      	cmp	r7, #0
 80212ae:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80212b2:	f2c0 80ef 	blt.w	8021494 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80212b6:	42bb      	cmp	r3, r7
 80212b8:	f340 80ec 	ble.w	8021494 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80212bc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80212c0:	3701      	adds	r7, #1
 80212c2:	f100 80ef 	bmi.w	80214a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80212c6:	42bb      	cmp	r3, r7
 80212c8:	f340 80ec 	ble.w	80214a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80212cc:	2e00      	cmp	r6, #0
 80212ce:	f000 80eb 	beq.w	80214a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80212d2:	6852      	ldr	r2, [r2, #4]
 80212d4:	b2b6      	uxth	r6, r6
 80212d6:	b280      	uxth	r0, r0
 80212d8:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80212dc:	fb00 fe06 	mul.w	lr, r0, r6
 80212e0:	0136      	lsls	r6, r6, #4
 80212e2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80212e6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80212ea:	eba6 070e 	sub.w	r7, r6, lr
 80212ee:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80212f2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80212f6:	b280      	uxth	r0, r0
 80212f8:	b2bf      	uxth	r7, r7
 80212fa:	1a1b      	subs	r3, r3, r0
 80212fc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021300:	fb07 f60a 	mul.w	r6, r7, sl
 8021304:	b29b      	uxth	r3, r3
 8021306:	fb0b 6603 	mla	r6, fp, r3, r6
 802130a:	fb00 6609 	mla	r6, r0, r9, r6
 802130e:	fb0e 6608 	mla	r6, lr, r8, r6
 8021312:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021316:	9600      	str	r6, [sp, #0]
 8021318:	2e00      	cmp	r6, #0
 802131a:	f000 80af 	beq.w	802147c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802131e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021322:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021326:	9e02      	ldr	r6, [sp, #8]
 8021328:	fb0b fc0c 	mul.w	ip, fp, ip
 802132c:	fb0b f505 	mul.w	r5, fp, r5
 8021330:	8836      	ldrh	r6, [r6, #0]
 8021332:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021336:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802133a:	9501      	str	r5, [sp, #4]
 802133c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8021340:	44dc      	add	ip, fp
 8021342:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021346:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802134a:	9503      	str	r5, [sp, #12]
 802134c:	9d01      	ldr	r5, [sp, #4]
 802134e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021352:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021356:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802135a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802135e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021362:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021366:	fb0a fa01 	mul.w	sl, sl, r1
 802136a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802136e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021372:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021376:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802137a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802137e:	4465      	add	r5, ip
 8021380:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021384:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021388:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802138c:	fb09 fc0c 	mul.w	ip, r9, ip
 8021390:	0a2d      	lsrs	r5, r5, #8
 8021392:	fb09 f904 	mul.w	r9, r9, r4
 8021396:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802139a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802139e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80213a2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80213a6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80213aa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80213ae:	437d      	muls	r5, r7
 80213b0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80213b4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80213b8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80213bc:	4461      	add	r1, ip
 80213be:	fb08 f404 	mul.w	r4, r8, r4
 80213c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80213c6:	fb08 f802 	mul.w	r8, r8, r2
 80213ca:	0a09      	lsrs	r1, r1, #8
 80213cc:	0a22      	lsrs	r2, r4, #8
 80213ce:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80213d2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80213d6:	fb07 f70a 	mul.w	r7, r7, sl
 80213da:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80213de:	4414      	add	r4, r2
 80213e0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80213e4:	0a24      	lsrs	r4, r4, #8
 80213e6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80213ea:	9a03      	ldr	r2, [sp, #12]
 80213ec:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80213f0:	fb02 5503 	mla	r5, r2, r3, r5
 80213f4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80213f8:	fb04 540e 	mla	r4, r4, lr, r5
 80213fc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021400:	fb01 4100 	mla	r1, r1, r0, r4
 8021404:	0a09      	lsrs	r1, r1, #8
 8021406:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802140a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802140e:	fb03 7101 	mla	r1, r3, r1, r7
 8021412:	9b00      	ldr	r3, [sp, #0]
 8021414:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021418:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802141c:	43da      	mvns	r2, r3
 802141e:	1233      	asrs	r3, r6, #8
 8021420:	fb00 e101 	mla	r1, r0, r1, lr
 8021424:	10f0      	asrs	r0, r6, #3
 8021426:	b2d2      	uxtb	r2, r2
 8021428:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802142c:	0a09      	lsrs	r1, r1, #8
 802142e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021432:	00f6      	lsls	r6, r6, #3
 8021434:	4353      	muls	r3, r2
 8021436:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802143a:	4350      	muls	r0, r2
 802143c:	b2f6      	uxtb	r6, r6
 802143e:	4321      	orrs	r1, r4
 8021440:	4356      	muls	r6, r2
 8021442:	1c5a      	adds	r2, r3, #1
 8021444:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021448:	0c0b      	lsrs	r3, r1, #16
 802144a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802144e:	1c42      	adds	r2, r0, #1
 8021450:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021454:	0a0a      	lsrs	r2, r1, #8
 8021456:	021b      	lsls	r3, r3, #8
 8021458:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802145c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021460:	00d2      	lsls	r2, r2, #3
 8021462:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021466:	4313      	orrs	r3, r2
 8021468:	1c72      	adds	r2, r6, #1
 802146a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802146e:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8021472:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021476:	4319      	orrs	r1, r3
 8021478:	9b02      	ldr	r3, [sp, #8]
 802147a:	8019      	strh	r1, [r3, #0]
 802147c:	b005      	add	sp, #20
 802147e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021482:	2500      	movs	r5, #0
 8021484:	e6fe      	b.n	8021284 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8021486:	2100      	movs	r1, #0
 8021488:	460d      	mov	r5, r1
 802148a:	e706      	b.n	802129a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802148c:	2100      	movs	r1, #0
 802148e:	e704      	b.n	802129a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021490:	4631      	mov	r1, r6
 8021492:	e702      	b.n	802129a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021494:	2400      	movs	r4, #0
 8021496:	e713      	b.n	80212c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8021498:	2200      	movs	r2, #0
 802149a:	4614      	mov	r4, r2
 802149c:	e71a      	b.n	80212d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802149e:	4602      	mov	r2, r0
 80214a0:	4604      	mov	r4, r0
 80214a2:	e717      	b.n	80212d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80214a4:	2200      	movs	r2, #0
 80214a6:	e715      	b.n	80212d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80214a8:	4632      	mov	r2, r6
 80214aa:	e713      	b.n	80212d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

080214ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80214ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214b0:	b09b      	sub	sp, #108	; 0x6c
 80214b2:	9218      	str	r2, [sp, #96]	; 0x60
 80214b4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80214b6:	9019      	str	r0, [sp, #100]	; 0x64
 80214b8:	9116      	str	r1, [sp, #88]	; 0x58
 80214ba:	6850      	ldr	r0, [r2, #4]
 80214bc:	9307      	str	r3, [sp, #28]
 80214be:	6812      	ldr	r2, [r2, #0]
 80214c0:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80214c4:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80214c8:	fb00 1303 	mla	r3, r0, r3, r1
 80214cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80214d0:	930a      	str	r3, [sp, #40]	; 0x28
 80214d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80214d4:	681b      	ldr	r3, [r3, #0]
 80214d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80214d8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80214da:	2b00      	cmp	r3, #0
 80214dc:	dc03      	bgt.n	80214e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80214de:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80214e0:	2b00      	cmp	r3, #0
 80214e2:	f340 8387 	ble.w	8021bf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80214e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80214e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80214ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80214f0:	1e48      	subs	r0, r1, #1
 80214f2:	1e57      	subs	r7, r2, #1
 80214f4:	9b07      	ldr	r3, [sp, #28]
 80214f6:	2b00      	cmp	r3, #0
 80214f8:	f340 8166 	ble.w	80217c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80214fc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021500:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021504:	d406      	bmi.n	8021514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021506:	4584      	cmp	ip, r0
 8021508:	da04      	bge.n	8021514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802150a:	2b00      	cmp	r3, #0
 802150c:	db02      	blt.n	8021514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802150e:	42bb      	cmp	r3, r7
 8021510:	f2c0 815b 	blt.w	80217ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8021514:	f11c 0c01 	adds.w	ip, ip, #1
 8021518:	f100 814b 	bmi.w	80217b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802151c:	4561      	cmp	r1, ip
 802151e:	f2c0 8148 	blt.w	80217b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021522:	3301      	adds	r3, #1
 8021524:	f100 8145 	bmi.w	80217b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021528:	429a      	cmp	r2, r3
 802152a:	f2c0 8142 	blt.w	80217b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802152e:	9b07      	ldr	r3, [sp, #28]
 8021530:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021532:	9317      	str	r3, [sp, #92]	; 0x5c
 8021534:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021536:	2b00      	cmp	r3, #0
 8021538:	f340 8165 	ble.w	8021806 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802153c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802153e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021542:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021544:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021548:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802154c:	1422      	asrs	r2, r4, #16
 802154e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021552:	689b      	ldr	r3, [r3, #8]
 8021554:	f100 81d5 	bmi.w	8021902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021558:	f103 38ff 	add.w	r8, r3, #4294967295
 802155c:	4542      	cmp	r2, r8
 802155e:	f280 81d0 	bge.w	8021902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021562:	f1bc 0f00 	cmp.w	ip, #0
 8021566:	f2c0 81cc 	blt.w	8021902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802156a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802156e:	45c4      	cmp	ip, r8
 8021570:	f280 81c7 	bge.w	8021902 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021574:	b21b      	sxth	r3, r3
 8021576:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021578:	fb0c 2203 	mla	r2, ip, r3, r2
 802157c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021580:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021584:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021588:	2900      	cmp	r1, #0
 802158a:	f000 8182 	beq.w	8021892 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802158e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8021592:	950b      	str	r5, [sp, #44]	; 0x2c
 8021594:	0e2d      	lsrs	r5, r5, #24
 8021596:	9512      	str	r5, [sp, #72]	; 0x48
 8021598:	b180      	cbz	r0, 80215bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802159a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802159e:	3b01      	subs	r3, #1
 80215a0:	009b      	lsls	r3, r3, #2
 80215a2:	3304      	adds	r3, #4
 80215a4:	eb08 0c03 	add.w	ip, r8, r3
 80215a8:	f858 3003 	ldr.w	r3, [r8, r3]
 80215ac:	9308      	str	r3, [sp, #32]
 80215ae:	0e1b      	lsrs	r3, r3, #24
 80215b0:	9310      	str	r3, [sp, #64]	; 0x40
 80215b2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80215b6:	930c      	str	r3, [sp, #48]	; 0x30
 80215b8:	0e1b      	lsrs	r3, r3, #24
 80215ba:	9313      	str	r3, [sp, #76]	; 0x4c
 80215bc:	b289      	uxth	r1, r1
 80215be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80215c0:	b280      	uxth	r0, r0
 80215c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80215c4:	fb01 f900 	mul.w	r9, r1, r0
 80215c8:	0109      	lsls	r1, r1, #4
 80215ca:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80215ce:	eba1 0809 	sub.w	r8, r1, r9
 80215d2:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 80215d6:	b280      	uxth	r0, r0
 80215d8:	fa1f f888 	uxth.w	r8, r8
 80215dc:	1a09      	subs	r1, r1, r0
 80215de:	fb08 f303 	mul.w	r3, r8, r3
 80215e2:	b289      	uxth	r1, r1
 80215e4:	fb01 330e 	mla	r3, r1, lr, r3
 80215e8:	fb00 3305 	mla	r3, r0, r5, r3
 80215ec:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80215ee:	fb09 3305 	mla	r3, r9, r5, r3
 80215f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80215f6:	2b00      	cmp	r3, #0
 80215f8:	f000 80d2 	beq.w	80217a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80215fc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021600:	d01b      	beq.n	802163a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8021602:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8021606:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802160a:	fb0e fa0a 	mul.w	sl, lr, sl
 802160e:	fb0e fe02 	mul.w	lr, lr, r2
 8021612:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8021616:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802161a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802161e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021622:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021626:	4452      	add	r2, sl
 8021628:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802162c:	0a12      	lsrs	r2, r2, #8
 802162e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021632:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021636:	ea42 020c 	orr.w	r2, r2, ip
 802163a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802163c:	2dff      	cmp	r5, #255	; 0xff
 802163e:	d021      	beq.n	8021684 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8021640:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8021642:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021646:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021648:	fb05 fb0b 	mul.w	fp, r5, fp
 802164c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802164e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021652:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8021654:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021658:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802165c:	fb05 fa0a 	mul.w	sl, r5, sl
 8021660:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021664:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021668:	44de      	add	lr, fp
 802166a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802166e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021672:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021676:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802167a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802167e:	ea4e 050a 	orr.w	r5, lr, sl
 8021682:	950b      	str	r5, [sp, #44]	; 0x2c
 8021684:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021686:	2dff      	cmp	r5, #255	; 0xff
 8021688:	d021      	beq.n	80216ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802168a:	9d08      	ldr	r5, [sp, #32]
 802168c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8021690:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021692:	fb05 fb0b 	mul.w	fp, r5, fp
 8021696:	9d08      	ldr	r5, [sp, #32]
 8021698:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802169c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802169e:	fb05 fa0e 	mul.w	sl, r5, lr
 80216a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80216a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80216aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80216ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80216b2:	44de      	add	lr, fp
 80216b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80216b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80216bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80216c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80216c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80216c8:	ea4e 050a 	orr.w	r5, lr, sl
 80216cc:	9508      	str	r5, [sp, #32]
 80216ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80216d0:	2dff      	cmp	r5, #255	; 0xff
 80216d2:	d021      	beq.n	8021718 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80216d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80216d6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80216da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80216dc:	fb05 fb0b 	mul.w	fp, r5, fp
 80216e0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80216e2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80216e6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80216e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80216ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80216f0:	fb05 fa0a 	mul.w	sl, r5, sl
 80216f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80216f8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80216fc:	44de      	add	lr, fp
 80216fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021702:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021706:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802170a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802170e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021712:	ea4e 050a 	orr.w	r5, lr, sl
 8021716:	950c      	str	r5, [sp, #48]	; 0x30
 8021718:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802171a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802171e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021722:	2bff      	cmp	r3, #255	; 0xff
 8021724:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021728:	9d08      	ldr	r5, [sp, #32]
 802172a:	fb08 fc0c 	mul.w	ip, r8, ip
 802172e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021732:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8021736:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021738:	fb00 cc0e 	mla	ip, r0, lr, ip
 802173c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8021740:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8021742:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021746:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802174a:	fb08 f80e 	mul.w	r8, r8, lr
 802174e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021752:	fb01 8202 	mla	r2, r1, r2, r8
 8021756:	9908      	ldr	r1, [sp, #32]
 8021758:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802175c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021760:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021762:	fb00 220a 	mla	r2, r0, sl, r2
 8021766:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802176a:	fb09 2900 	mla	r9, r9, r0, r2
 802176e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021772:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021776:	ea4c 0c09 	orr.w	ip, ip, r9
 802177a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802177e:	f040 8091 	bne.w	80218a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021782:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8021786:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802178a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802178e:	f022 0207 	bic.w	r2, r2, #7
 8021792:	431a      	orrs	r2, r3
 8021794:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021798:	ea4c 0c02 	orr.w	ip, ip, r2
 802179c:	f8a7 c000 	strh.w	ip, [r7]
 80217a0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80217a2:	3702      	adds	r7, #2
 80217a4:	441c      	add	r4, r3
 80217a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80217a8:	441e      	add	r6, r3
 80217aa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80217ac:	3b01      	subs	r3, #1
 80217ae:	9317      	str	r3, [sp, #92]	; 0x5c
 80217b0:	e6c0      	b.n	8021534 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80217b2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80217b4:	441c      	add	r4, r3
 80217b6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80217b8:	441e      	add	r6, r3
 80217ba:	9b07      	ldr	r3, [sp, #28]
 80217bc:	3b01      	subs	r3, #1
 80217be:	9307      	str	r3, [sp, #28]
 80217c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80217c2:	3302      	adds	r3, #2
 80217c4:	930a      	str	r3, [sp, #40]	; 0x28
 80217c6:	e695      	b.n	80214f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80217c8:	d024      	beq.n	8021814 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80217ca:	9b07      	ldr	r3, [sp, #28]
 80217cc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80217ce:	3b01      	subs	r3, #1
 80217d0:	fb00 4003 	mla	r0, r0, r3, r4
 80217d4:	1400      	asrs	r0, r0, #16
 80217d6:	f53f aeaa 	bmi.w	802152e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80217da:	3901      	subs	r1, #1
 80217dc:	4288      	cmp	r0, r1
 80217de:	f6bf aea6 	bge.w	802152e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80217e2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80217e4:	fb01 6303 	mla	r3, r1, r3, r6
 80217e8:	141b      	asrs	r3, r3, #16
 80217ea:	f53f aea0 	bmi.w	802152e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80217ee:	3a01      	subs	r2, #1
 80217f0:	4293      	cmp	r3, r2
 80217f2:	f6bf ae9c 	bge.w	802152e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80217f6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80217fa:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80217fe:	f1bb 0f00 	cmp.w	fp, #0
 8021802:	f300 809a 	bgt.w	802193a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8021806:	9b07      	ldr	r3, [sp, #28]
 8021808:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802180c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802180e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021812:	930a      	str	r3, [sp, #40]	; 0x28
 8021814:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021816:	2b00      	cmp	r3, #0
 8021818:	f340 81ec 	ble.w	8021bf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 802181c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021820:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021822:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021826:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802182a:	eef0 6a62 	vmov.f32	s13, s5
 802182e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021832:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021836:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802183a:	ee16 4a90 	vmov	r4, s13
 802183e:	eef0 6a43 	vmov.f32	s13, s6
 8021842:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021846:	ee16 6a90 	vmov	r6, s13
 802184a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802184e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021852:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021856:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802185a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802185e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021862:	ee12 2a90 	vmov	r2, s5
 8021866:	eef0 2a47 	vmov.f32	s5, s14
 802186a:	fb92 f3f3 	sdiv	r3, r2, r3
 802186e:	ee13 2a10 	vmov	r2, s6
 8021872:	9327      	str	r3, [sp, #156]	; 0x9c
 8021874:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021876:	eeb0 3a67 	vmov.f32	s6, s15
 802187a:	fb92 f3f3 	sdiv	r3, r2, r3
 802187e:	9328      	str	r3, [sp, #160]	; 0xa0
 8021880:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021882:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021884:	3b01      	subs	r3, #1
 8021886:	9316      	str	r3, [sp, #88]	; 0x58
 8021888:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802188a:	bf08      	it	eq
 802188c:	4613      	moveq	r3, r2
 802188e:	9307      	str	r3, [sp, #28]
 8021890:	e622      	b.n	80214d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8021892:	2800      	cmp	r0, #0
 8021894:	f43f ae92 	beq.w	80215bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021898:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802189c:	9308      	str	r3, [sp, #32]
 802189e:	0e1b      	lsrs	r3, r3, #24
 80218a0:	9310      	str	r3, [sp, #64]	; 0x40
 80218a2:	e68b      	b.n	80215bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80218a4:	8839      	ldrh	r1, [r7, #0]
 80218a6:	43db      	mvns	r3, r3
 80218a8:	4dd4      	ldr	r5, [pc, #848]	; (8021bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 80218aa:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80218ae:	fa5f f883 	uxtb.w	r8, r3
 80218b2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80218b6:	10c8      	asrs	r0, r1, #3
 80218b8:	00cb      	lsls	r3, r1, #3
 80218ba:	fb0e fe08 	mul.w	lr, lr, r8
 80218be:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80218c2:	b2db      	uxtb	r3, r3
 80218c4:	f10e 0101 	add.w	r1, lr, #1
 80218c8:	fb00 f008 	mul.w	r0, r0, r8
 80218cc:	fb03 f308 	mul.w	r3, r3, r8
 80218d0:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80218d4:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80218d8:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80218dc:	f100 0e01 	add.w	lr, r0, #1
 80218e0:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80218e4:	b2c9      	uxtb	r1, r1
 80218e6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80218ea:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80218ee:	00d2      	lsls	r2, r2, #3
 80218f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80218f4:	430a      	orrs	r2, r1
 80218f6:	1c59      	adds	r1, r3, #1
 80218f8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80218fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021900:	e748      	b.n	8021794 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8021902:	f112 0801 	adds.w	r8, r2, #1
 8021906:	f53f af4b 	bmi.w	80217a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802190a:	4543      	cmp	r3, r8
 802190c:	f6ff af48 	blt.w	80217a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021910:	f11c 0801 	adds.w	r8, ip, #1
 8021914:	f53f af44 	bmi.w	80217a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021918:	45c6      	cmp	lr, r8
 802191a:	f6ff af41 	blt.w	80217a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802191e:	b21b      	sxth	r3, r3
 8021920:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8021924:	fa0f f28e 	sxth.w	r2, lr
 8021928:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802192c:	9200      	str	r2, [sp, #0]
 802192e:	4639      	mov	r1, r7
 8021930:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021932:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021934:	f7ff fc88 	bl	8021248 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8021938:	e732      	b.n	80217a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802193a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802193c:	1421      	asrs	r1, r4, #16
 802193e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8021940:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021944:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8021948:	1433      	asrs	r3, r6, #16
 802194a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802194e:	fb07 1303 	mla	r3, r7, r3, r1
 8021952:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8021954:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8021958:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802195c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021960:	2a00      	cmp	r2, #0
 8021962:	f000 8108 	beq.w	8021b76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8021966:	684d      	ldr	r5, [r1, #4]
 8021968:	950d      	str	r5, [sp, #52]	; 0x34
 802196a:	0e2d      	lsrs	r5, r5, #24
 802196c:	9514      	str	r5, [sp, #80]	; 0x50
 802196e:	b178      	cbz	r0, 8021990 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021970:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8021974:	3f01      	subs	r7, #1
 8021976:	00bf      	lsls	r7, r7, #2
 8021978:	3704      	adds	r7, #4
 802197a:	eb01 0e07 	add.w	lr, r1, r7
 802197e:	59c9      	ldr	r1, [r1, r7]
 8021980:	9109      	str	r1, [sp, #36]	; 0x24
 8021982:	0e09      	lsrs	r1, r1, #24
 8021984:	9111      	str	r1, [sp, #68]	; 0x44
 8021986:	f8de 1004 	ldr.w	r1, [lr, #4]
 802198a:	910e      	str	r1, [sp, #56]	; 0x38
 802198c:	0e09      	lsrs	r1, r1, #24
 802198e:	9115      	str	r1, [sp, #84]	; 0x54
 8021990:	b292      	uxth	r2, r2
 8021992:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021994:	b280      	uxth	r0, r0
 8021996:	fb02 f900 	mul.w	r9, r2, r0
 802199a:	0112      	lsls	r2, r2, #4
 802199c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80219a0:	eba2 0e09 	sub.w	lr, r2, r9
 80219a4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80219a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80219aa:	b280      	uxth	r0, r0
 80219ac:	fa1f fe8e 	uxth.w	lr, lr
 80219b0:	1a09      	subs	r1, r1, r0
 80219b2:	fb0e f202 	mul.w	r2, lr, r2
 80219b6:	b289      	uxth	r1, r1
 80219b8:	fb01 220c 	mla	r2, r1, ip, r2
 80219bc:	fb00 2205 	mla	r2, r0, r5, r2
 80219c0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80219c2:	fb09 2205 	mla	r2, r9, r5, r2
 80219c6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80219ca:	2a00      	cmp	r2, #0
 80219cc:	f000 80ca 	beq.w	8021b64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 80219d0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80219d4:	d019      	beq.n	8021a0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80219d6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80219da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80219de:	fb0c fa0a 	mul.w	sl, ip, sl
 80219e2:	fb0c fc03 	mul.w	ip, ip, r3
 80219e6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80219ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80219ee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80219f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80219f6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80219fa:	4453      	add	r3, sl
 80219fc:	0a3f      	lsrs	r7, r7, #8
 80219fe:	0a1b      	lsrs	r3, r3, #8
 8021a00:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021a04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021a08:	433b      	orrs	r3, r7
 8021a0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021a0c:	2dff      	cmp	r5, #255	; 0xff
 8021a0e:	d020      	beq.n	8021a52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8021a10:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021a12:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021a16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021a18:	436f      	muls	r7, r5
 8021a1a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021a1c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021a20:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021a24:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8021a26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021a2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a2e:	fb05 fa0a 	mul.w	sl, r5, sl
 8021a32:	44bc      	add	ip, r7
 8021a34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021a38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021a40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021a4c:	ea4c 050a 	orr.w	r5, ip, sl
 8021a50:	950d      	str	r5, [sp, #52]	; 0x34
 8021a52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021a54:	2dff      	cmp	r5, #255	; 0xff
 8021a56:	d020      	beq.n	8021a9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8021a58:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021a5a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021a5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021a60:	436f      	muls	r7, r5
 8021a62:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021a64:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8021a68:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021a6a:	fb05 fa0c 	mul.w	sl, r5, ip
 8021a6e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021a72:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021a76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a7a:	44bc      	add	ip, r7
 8021a7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021a80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021a84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021a88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021a90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021a94:	ea4c 050a 	orr.w	r5, ip, sl
 8021a98:	9509      	str	r5, [sp, #36]	; 0x24
 8021a9a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021a9c:	2dff      	cmp	r5, #255	; 0xff
 8021a9e:	d020      	beq.n	8021ae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8021aa0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021aa2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021aa6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021aa8:	436f      	muls	r7, r5
 8021aaa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021aac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021ab0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8021ab4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8021ab6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021aba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021abe:	fb05 fa0a 	mul.w	sl, r5, sl
 8021ac2:	44bc      	add	ip, r7
 8021ac4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021ac8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021acc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021ad0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021ad4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021ad8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021adc:	ea4c 050a 	orr.w	r5, ip, sl
 8021ae0:	950e      	str	r5, [sp, #56]	; 0x38
 8021ae2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021ae4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021ae8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021aec:	2aff      	cmp	r2, #255	; 0xff
 8021aee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8021af2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8021af4:	fb0e f707 	mul.w	r7, lr, r7
 8021af8:	fb01 770c 	mla	r7, r1, ip, r7
 8021afc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021b00:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8021b02:	fb00 770c 	mla	r7, r0, ip, r7
 8021b06:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021b0a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021b0c:	fb09 770c 	mla	r7, r9, ip, r7
 8021b10:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8021b14:	fb0e fe0c 	mul.w	lr, lr, ip
 8021b18:	ea4f 2717 	mov.w	r7, r7, lsr #8
 8021b1c:	fb01 e303 	mla	r3, r1, r3, lr
 8021b20:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021b22:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021b26:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021b2a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021b2c:	fb00 330a 	mla	r3, r0, sl, r3
 8021b30:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8021b34:	fb09 3c0c 	mla	ip, r9, ip, r3
 8021b38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b3c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021b40:	ea47 070c 	orr.w	r7, r7, ip
 8021b44:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8021b48:	d11e      	bne.n	8021b88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8021b4a:	097a      	lsrs	r2, r7, #5
 8021b4c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8021b50:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8021b54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021b58:	f023 0307 	bic.w	r3, r3, #7
 8021b5c:	4313      	orrs	r3, r2
 8021b5e:	431f      	orrs	r7, r3
 8021b60:	f8a8 7000 	strh.w	r7, [r8]
 8021b64:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021b66:	f108 0802 	add.w	r8, r8, #2
 8021b6a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021b6e:	441c      	add	r4, r3
 8021b70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021b72:	441e      	add	r6, r3
 8021b74:	e643      	b.n	80217fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8021b76:	2800      	cmp	r0, #0
 8021b78:	f43f af0a 	beq.w	8021990 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021b7c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8021b80:	9109      	str	r1, [sp, #36]	; 0x24
 8021b82:	0e09      	lsrs	r1, r1, #24
 8021b84:	9111      	str	r1, [sp, #68]	; 0x44
 8021b86:	e703      	b.n	8021990 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021b88:	f8b8 1000 	ldrh.w	r1, [r8]
 8021b8c:	43d2      	mvns	r2, r2
 8021b8e:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8021b92:	fa5f fe82 	uxtb.w	lr, r2
 8021b96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021b9a:	10c8      	asrs	r0, r1, #3
 8021b9c:	00ca      	lsls	r2, r1, #3
 8021b9e:	fb0c fc0e 	mul.w	ip, ip, lr
 8021ba2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021ba6:	b2d2      	uxtb	r2, r2
 8021ba8:	f10c 0101 	add.w	r1, ip, #1
 8021bac:	fb00 f00e 	mul.w	r0, r0, lr
 8021bb0:	fb02 f20e 	mul.w	r2, r2, lr
 8021bb4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021bb8:	0c39      	lsrs	r1, r7, #16
 8021bba:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021bbe:	490f      	ldr	r1, [pc, #60]	; (8021bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8021bc0:	fa5f fc8c 	uxtb.w	ip, ip
 8021bc4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8021bc8:	1c41      	adds	r1, r0, #1
 8021bca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021bce:	1c51      	adds	r1, r2, #1
 8021bd0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021bd4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021bd8:	00c0      	lsls	r0, r0, #3
 8021bda:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021bde:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021be2:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8021be6:	ea4c 0c00 	orr.w	ip, ip, r0
 8021bea:	ea47 0c0c 	orr.w	ip, r7, ip
 8021bee:	f8a8 c000 	strh.w	ip, [r8]
 8021bf2:	e7b7      	b.n	8021b64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8021bf4:	b01b      	add	sp, #108	; 0x6c
 8021bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bfa:	bf00      	nop
 8021bfc:	fffff800 	.word	0xfffff800

08021c00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8021c00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021c04:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8021c08:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8021c0c:	2d00      	cmp	r5, #0
 8021c0e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8021c12:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8021c16:	fb05 0e03 	mla	lr, r5, r3, r0
 8021c1a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8021c1e:	f2c0 808c 	blt.w	8021d3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8021c22:	45a9      	cmp	r9, r5
 8021c24:	f340 8089 	ble.w	8021d3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8021c28:	2800      	cmp	r0, #0
 8021c2a:	f2c0 8084 	blt.w	8021d36 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8021c2e:	4580      	cmp	r8, r0
 8021c30:	f340 8081 	ble.w	8021d36 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8021c34:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8021c38:	f01e 0f01 	tst.w	lr, #1
 8021c3c:	5d16      	ldrb	r6, [r2, r4]
 8021c3e:	bf0c      	ite	eq
 8021c40:	f006 060f 	andeq.w	r6, r6, #15
 8021c44:	1136      	asrne	r6, r6, #4
 8021c46:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8021c4a:	b2f6      	uxtb	r6, r6
 8021c4c:	1c44      	adds	r4, r0, #1
 8021c4e:	d477      	bmi.n	8021d40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8021c50:	45a0      	cmp	r8, r4
 8021c52:	dd75      	ble.n	8021d40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8021c54:	2f00      	cmp	r7, #0
 8021c56:	d075      	beq.n	8021d44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8021c58:	f10e 0a01 	add.w	sl, lr, #1
 8021c5c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8021c60:	f01a 0f01 	tst.w	sl, #1
 8021c64:	5d14      	ldrb	r4, [r2, r4]
 8021c66:	bf0c      	ite	eq
 8021c68:	f004 040f 	andeq.w	r4, r4, #15
 8021c6c:	1124      	asrne	r4, r4, #4
 8021c6e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8021c72:	b2e4      	uxtb	r4, r4
 8021c74:	3501      	adds	r5, #1
 8021c76:	d469      	bmi.n	8021d4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8021c78:	45a9      	cmp	r9, r5
 8021c7a:	dd67      	ble.n	8021d4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8021c7c:	f1bc 0f00 	cmp.w	ip, #0
 8021c80:	d067      	beq.n	8021d52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8021c82:	2800      	cmp	r0, #0
 8021c84:	db60      	blt.n	8021d48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8021c86:	4580      	cmp	r8, r0
 8021c88:	dd5e      	ble.n	8021d48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8021c8a:	eb03 090e 	add.w	r9, r3, lr
 8021c8e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8021c92:	f019 0f01 	tst.w	r9, #1
 8021c96:	5d55      	ldrb	r5, [r2, r5]
 8021c98:	bf0c      	ite	eq
 8021c9a:	f005 050f 	andeq.w	r5, r5, #15
 8021c9e:	112d      	asrne	r5, r5, #4
 8021ca0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8021ca4:	b2ed      	uxtb	r5, r5
 8021ca6:	3001      	adds	r0, #1
 8021ca8:	d456      	bmi.n	8021d58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8021caa:	4580      	cmp	r8, r0
 8021cac:	dd54      	ble.n	8021d58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8021cae:	2f00      	cmp	r7, #0
 8021cb0:	d054      	beq.n	8021d5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8021cb2:	3301      	adds	r3, #1
 8021cb4:	449e      	add	lr, r3
 8021cb6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8021cba:	f01e 0f01 	tst.w	lr, #1
 8021cbe:	5cd0      	ldrb	r0, [r2, r3]
 8021cc0:	bf0c      	ite	eq
 8021cc2:	f000 000f 	andeq.w	r0, r0, #15
 8021cc6:	1100      	asrne	r0, r0, #4
 8021cc8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021ccc:	b2c3      	uxtb	r3, r0
 8021cce:	b2ba      	uxth	r2, r7
 8021cd0:	fa1f fc8c 	uxth.w	ip, ip
 8021cd4:	fb02 f00c 	mul.w	r0, r2, ip
 8021cd8:	0112      	lsls	r2, r2, #4
 8021cda:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8021cde:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8021ce2:	1a12      	subs	r2, r2, r0
 8021ce4:	fa1f fc8c 	uxth.w	ip, ip
 8021ce8:	b292      	uxth	r2, r2
 8021cea:	eba7 070c 	sub.w	r7, r7, ip
 8021cee:	4362      	muls	r2, r4
 8021cf0:	b2bf      	uxth	r7, r7
 8021cf2:	fb06 2207 	mla	r2, r6, r7, r2
 8021cf6:	fb0c 2505 	mla	r5, ip, r5, r2
 8021cfa:	fb00 5303 	mla	r3, r0, r3, r5
 8021cfe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021d02:	b1b3      	cbz	r3, 8021d32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8021d04:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8021d08:	435a      	muls	r2, r3
 8021d0a:	1c53      	adds	r3, r2, #1
 8021d0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d10:	4a2d      	ldr	r2, [pc, #180]	; (8021dc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8021d12:	121b      	asrs	r3, r3, #8
 8021d14:	6812      	ldr	r2, [r2, #0]
 8021d16:	2bff      	cmp	r3, #255	; 0xff
 8021d18:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8021d1c:	d120      	bne.n	8021d60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8021d1e:	0950      	lsrs	r0, r2, #5
 8021d20:	4b2a      	ldr	r3, [pc, #168]	; (8021dcc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8021d22:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021d26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021d2a:	4033      	ands	r3, r6
 8021d2c:	4318      	orrs	r0, r3
 8021d2e:	4302      	orrs	r2, r0
 8021d30:	800a      	strh	r2, [r1, #0]
 8021d32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021d36:	2600      	movs	r6, #0
 8021d38:	e788      	b.n	8021c4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8021d3a:	2400      	movs	r4, #0
 8021d3c:	4626      	mov	r6, r4
 8021d3e:	e799      	b.n	8021c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021d40:	2400      	movs	r4, #0
 8021d42:	e797      	b.n	8021c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021d44:	463c      	mov	r4, r7
 8021d46:	e795      	b.n	8021c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021d48:	2500      	movs	r5, #0
 8021d4a:	e7ac      	b.n	8021ca6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8021d4c:	2300      	movs	r3, #0
 8021d4e:	461d      	mov	r5, r3
 8021d50:	e7bd      	b.n	8021cce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021d52:	4663      	mov	r3, ip
 8021d54:	4665      	mov	r5, ip
 8021d56:	e7ba      	b.n	8021cce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021d58:	2300      	movs	r3, #0
 8021d5a:	e7b8      	b.n	8021cce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021d5c:	463b      	mov	r3, r7
 8021d5e:	e7b6      	b.n	8021cce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021d60:	880d      	ldrh	r5, [r1, #0]
 8021d62:	b29f      	uxth	r7, r3
 8021d64:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8021d68:	43db      	mvns	r3, r3
 8021d6a:	122c      	asrs	r4, r5, #8
 8021d6c:	fb10 f007 	smulbb	r0, r0, r7
 8021d70:	b2db      	uxtb	r3, r3
 8021d72:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8021d76:	b2f6      	uxtb	r6, r6
 8021d78:	b2d2      	uxtb	r2, r2
 8021d7a:	fb04 0403 	mla	r4, r4, r3, r0
 8021d7e:	10e8      	asrs	r0, r5, #3
 8021d80:	fb12 f207 	smulbb	r2, r2, r7
 8021d84:	00ed      	lsls	r5, r5, #3
 8021d86:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021d8a:	b2a4      	uxth	r4, r4
 8021d8c:	fb16 f607 	smulbb	r6, r6, r7
 8021d90:	b2ed      	uxtb	r5, r5
 8021d92:	fb00 6603 	mla	r6, r0, r3, r6
 8021d96:	fb05 2303 	mla	r3, r5, r3, r2
 8021d9a:	b2b0      	uxth	r0, r6
 8021d9c:	b29a      	uxth	r2, r3
 8021d9e:	1c63      	adds	r3, r4, #1
 8021da0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8021da4:	1c53      	adds	r3, r2, #1
 8021da6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021daa:	1c42      	adds	r2, r0, #1
 8021dac:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8021db0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021db4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021db8:	0940      	lsrs	r0, r0, #5
 8021dba:	4323      	orrs	r3, r4
 8021dbc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dc0:	4303      	orrs	r3, r0
 8021dc2:	800b      	strh	r3, [r1, #0]
 8021dc4:	e7b5      	b.n	8021d32 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8021dc6:	bf00      	nop
 8021dc8:	2400207c 	.word	0x2400207c
 8021dcc:	00fff800 	.word	0x00fff800

08021dd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021dd4:	b097      	sub	sp, #92	; 0x5c
 8021dd6:	9214      	str	r2, [sp, #80]	; 0x50
 8021dd8:	9309      	str	r3, [sp, #36]	; 0x24
 8021dda:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021ddc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021de0:	9015      	str	r0, [sp, #84]	; 0x54
 8021de2:	910d      	str	r1, [sp, #52]	; 0x34
 8021de4:	6850      	ldr	r0, [r2, #4]
 8021de6:	930f      	str	r3, [sp, #60]	; 0x3c
 8021de8:	6812      	ldr	r2, [r2, #0]
 8021dea:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021dee:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8021df2:	fb00 1303 	mla	r3, r0, r3, r1
 8021df6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021dfa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021dfc:	689b      	ldr	r3, [r3, #8]
 8021dfe:	3301      	adds	r3, #1
 8021e00:	f023 0301 	bic.w	r3, r3, #1
 8021e04:	930a      	str	r3, [sp, #40]	; 0x28
 8021e06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e08:	681f      	ldr	r7, [r3, #0]
 8021e0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021e0c:	2b00      	cmp	r3, #0
 8021e0e:	dc03      	bgt.n	8021e18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021e10:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021e12:	2b00      	cmp	r3, #0
 8021e14:	f340 8289 	ble.w	802232a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 8021e18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021e22:	1e48      	subs	r0, r1, #1
 8021e24:	f102 3cff 	add.w	ip, r2, #4294967295
 8021e28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e2a:	2b00      	cmp	r3, #0
 8021e2c:	f340 80c5 	ble.w	8021fba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8021e30:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021e34:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021e38:	d406      	bmi.n	8021e48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021e3a:	4586      	cmp	lr, r0
 8021e3c:	da04      	bge.n	8021e48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021e3e:	2b00      	cmp	r3, #0
 8021e40:	db02      	blt.n	8021e48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021e42:	4563      	cmp	r3, ip
 8021e44:	f2c0 80ba 	blt.w	8021fbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8021e48:	f11e 0e01 	adds.w	lr, lr, #1
 8021e4c:	f100 80ab 	bmi.w	8021fa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8021e50:	4571      	cmp	r1, lr
 8021e52:	f2c0 80a8 	blt.w	8021fa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8021e56:	3301      	adds	r3, #1
 8021e58:	f100 80a5 	bmi.w	8021fa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8021e5c:	429a      	cmp	r2, r3
 8021e5e:	f2c0 80a2 	blt.w	8021fa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8021e62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e64:	46c8      	mov	r8, r9
 8021e66:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8021e6a:	930e      	str	r3, [sp, #56]	; 0x38
 8021e6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021e6e:	2b00      	cmp	r3, #0
 8021e70:	f340 80c4 	ble.w	8021ffc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021e74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e76:	1430      	asrs	r0, r6, #16
 8021e78:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021e7c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021e80:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8021e84:	1423      	asrs	r3, r4, #16
 8021e86:	f100 814f 	bmi.w	8022128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021e8a:	f10c 3bff 	add.w	fp, ip, #4294967295
 8021e8e:	455b      	cmp	r3, fp
 8021e90:	f280 814a 	bge.w	8022128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021e94:	2800      	cmp	r0, #0
 8021e96:	f2c0 8147 	blt.w	8022128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021e9a:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021e9e:	4558      	cmp	r0, fp
 8021ea0:	f280 8142 	bge.w	8022128 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021ea4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8021ea6:	fb00 3305 	mla	r3, r0, r5, r3
 8021eaa:	0858      	lsrs	r0, r3, #1
 8021eac:	07dd      	lsls	r5, r3, #31
 8021eae:	f817 c000 	ldrb.w	ip, [r7, r0]
 8021eb2:	bf54      	ite	pl
 8021eb4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021eb8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021ebc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021ec0:	fa5f fc8c 	uxtb.w	ip, ip
 8021ec4:	2a00      	cmp	r2, #0
 8021ec6:	f000 80dd 	beq.w	8022084 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8021eca:	1c58      	adds	r0, r3, #1
 8021ecc:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8021ed0:	07c0      	lsls	r0, r0, #31
 8021ed2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021ed6:	bf54      	ite	pl
 8021ed8:	f00e 0e0f 	andpl.w	lr, lr, #15
 8021edc:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8021ee0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8021ee4:	fa5f f08e 	uxtb.w	r0, lr
 8021ee8:	9010      	str	r0, [sp, #64]	; 0x40
 8021eea:	b1d9      	cbz	r1, 8021f24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8021eec:	4453      	add	r3, sl
 8021eee:	0858      	lsrs	r0, r3, #1
 8021ef0:	07dd      	lsls	r5, r3, #31
 8021ef2:	f103 0301 	add.w	r3, r3, #1
 8021ef6:	5c38      	ldrb	r0, [r7, r0]
 8021ef8:	bf54      	ite	pl
 8021efa:	f000 000f 	andpl.w	r0, r0, #15
 8021efe:	1100      	asrmi	r0, r0, #4
 8021f00:	07dd      	lsls	r5, r3, #31
 8021f02:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021f06:	b2c0      	uxtb	r0, r0
 8021f08:	900b      	str	r0, [sp, #44]	; 0x2c
 8021f0a:	ea4f 0053 	mov.w	r0, r3, lsr #1
 8021f0e:	f817 e000 	ldrb.w	lr, [r7, r0]
 8021f12:	bf54      	ite	pl
 8021f14:	f00e 030f 	andpl.w	r3, lr, #15
 8021f18:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8021f1c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021f20:	b2db      	uxtb	r3, r3
 8021f22:	9311      	str	r3, [sp, #68]	; 0x44
 8021f24:	b292      	uxth	r2, r2
 8021f26:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8021f28:	b289      	uxth	r1, r1
 8021f2a:	fb02 f301 	mul.w	r3, r2, r1
 8021f2e:	0112      	lsls	r2, r2, #4
 8021f30:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8021f34:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8021f38:	1ad2      	subs	r2, r2, r3
 8021f3a:	b289      	uxth	r1, r1
 8021f3c:	b292      	uxth	r2, r2
 8021f3e:	1a40      	subs	r0, r0, r1
 8021f40:	436a      	muls	r2, r5
 8021f42:	b280      	uxth	r0, r0
 8021f44:	fb0c 2c00 	mla	ip, ip, r0, r2
 8021f48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021f4a:	fb01 c102 	mla	r1, r1, r2, ip
 8021f4e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8021f50:	fb03 1302 	mla	r3, r3, r2, r1
 8021f54:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021f58:	b1db      	cbz	r3, 8021f92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8021f5a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021f5c:	4353      	muls	r3, r2
 8021f5e:	1c5a      	adds	r2, r3, #1
 8021f60:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021f64:	4ac6      	ldr	r2, [pc, #792]	; (8022280 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8021f66:	121b      	asrs	r3, r3, #8
 8021f68:	6812      	ldr	r2, [r2, #0]
 8021f6a:	2bff      	cmp	r3, #255	; 0xff
 8021f6c:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8021f70:	f040 8099 	bne.w	80220a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8021f74:	0953      	lsrs	r3, r2, #5
 8021f76:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8021f7a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021f7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021f82:	f02c 0c07 	bic.w	ip, ip, #7
 8021f86:	ea43 0c0c 	orr.w	ip, r3, ip
 8021f8a:	ea4c 0202 	orr.w	r2, ip, r2
 8021f8e:	f8a8 2000 	strh.w	r2, [r8]
 8021f92:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021f94:	f108 0802 	add.w	r8, r8, #2
 8021f98:	441c      	add	r4, r3
 8021f9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f9c:	441e      	add	r6, r3
 8021f9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021fa0:	3b01      	subs	r3, #1
 8021fa2:	930e      	str	r3, [sp, #56]	; 0x38
 8021fa4:	e762      	b.n	8021e6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8021fa6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021fa8:	f109 0902 	add.w	r9, r9, #2
 8021fac:	441c      	add	r4, r3
 8021fae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fb0:	441e      	add	r6, r3
 8021fb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021fb4:	3b01      	subs	r3, #1
 8021fb6:	9309      	str	r3, [sp, #36]	; 0x24
 8021fb8:	e736      	b.n	8021e28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021fba:	d024      	beq.n	8022006 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8021fbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021fbe:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021fc0:	3b01      	subs	r3, #1
 8021fc2:	fb00 4003 	mla	r0, r0, r3, r4
 8021fc6:	1400      	asrs	r0, r0, #16
 8021fc8:	f53f af4b 	bmi.w	8021e62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021fcc:	3901      	subs	r1, #1
 8021fce:	4288      	cmp	r0, r1
 8021fd0:	f6bf af47 	bge.w	8021e62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021fd4:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021fd6:	fb01 6303 	mla	r3, r1, r3, r6
 8021fda:	141b      	asrs	r3, r3, #16
 8021fdc:	f53f af41 	bmi.w	8021e62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021fe0:	3a01      	subs	r2, #1
 8021fe2:	4293      	cmp	r3, r2
 8021fe4:	f6bf af3d 	bge.w	8021e62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021fe8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8021fec:	46c8      	mov	r8, r9
 8021fee:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021ff2:	930e      	str	r3, [sp, #56]	; 0x38
 8021ff4:	f1bb 0f00 	cmp.w	fp, #0
 8021ff8:	f300 80b7 	bgt.w	802216a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8021ffc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ffe:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022002:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022006:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022008:	2b00      	cmp	r3, #0
 802200a:	f340 818e 	ble.w	802232a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 802200e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022012:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022014:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022018:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802201c:	eef0 6a62 	vmov.f32	s13, s5
 8022020:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022024:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022028:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802202c:	ee16 4a90 	vmov	r4, s13
 8022030:	eef0 6a43 	vmov.f32	s13, s6
 8022034:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022038:	ee16 6a90 	vmov	r6, s13
 802203c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022040:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022044:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022048:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802204c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022050:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022054:	ee12 2a90 	vmov	r2, s5
 8022058:	eef0 2a47 	vmov.f32	s5, s14
 802205c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022060:	ee13 2a10 	vmov	r2, s6
 8022064:	9323      	str	r3, [sp, #140]	; 0x8c
 8022066:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022068:	eeb0 3a67 	vmov.f32	s6, s15
 802206c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022070:	9324      	str	r3, [sp, #144]	; 0x90
 8022072:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022074:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022076:	3b01      	subs	r3, #1
 8022078:	930d      	str	r3, [sp, #52]	; 0x34
 802207a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802207c:	bf08      	it	eq
 802207e:	4613      	moveq	r3, r2
 8022080:	9309      	str	r3, [sp, #36]	; 0x24
 8022082:	e6c2      	b.n	8021e0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022084:	2900      	cmp	r1, #0
 8022086:	f43f af4d 	beq.w	8021f24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802208a:	eb0a 0003 	add.w	r0, sl, r3
 802208e:	0843      	lsrs	r3, r0, #1
 8022090:	07c0      	lsls	r0, r0, #31
 8022092:	5cfb      	ldrb	r3, [r7, r3]
 8022094:	bf54      	ite	pl
 8022096:	f003 030f 	andpl.w	r3, r3, #15
 802209a:	111b      	asrmi	r3, r3, #4
 802209c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80220a0:	b2db      	uxtb	r3, r3
 80220a2:	930b      	str	r3, [sp, #44]	; 0x2c
 80220a4:	e73e      	b.n	8021f24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80220a6:	f8b8 e000 	ldrh.w	lr, [r8]
 80220aa:	fa1f fb83 	uxth.w	fp, r3
 80220ae:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80220b2:	43db      	mvns	r3, r3
 80220b4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80220b8:	fb11 f10b 	smulbb	r1, r1, fp
 80220bc:	b2db      	uxtb	r3, r3
 80220be:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80220c2:	fa5f fc8c 	uxtb.w	ip, ip
 80220c6:	b2d2      	uxtb	r2, r2
 80220c8:	fb00 1003 	mla	r0, r0, r3, r1
 80220cc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80220d0:	fb1c fc0b 	smulbb	ip, ip, fp
 80220d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80220d8:	b280      	uxth	r0, r0
 80220da:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80220de:	fb12 fb0b 	smulbb	fp, r2, fp
 80220e2:	fa5f fe8e 	uxtb.w	lr, lr
 80220e6:	fb01 cc03 	mla	ip, r1, r3, ip
 80220ea:	fb0e bb03 	mla	fp, lr, r3, fp
 80220ee:	1c43      	adds	r3, r0, #1
 80220f0:	fa1f fc8c 	uxth.w	ip, ip
 80220f4:	fa1f fb8b 	uxth.w	fp, fp
 80220f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80220fc:	f10c 0101 	add.w	r1, ip, #1
 8022100:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8022104:	f10b 0001 	add.w	r0, fp, #1
 8022108:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802210c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8022110:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022114:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022118:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802211c:	4318      	orrs	r0, r3
 802211e:	ea40 000c 	orr.w	r0, r0, ip
 8022122:	f8a8 0000 	strh.w	r0, [r8]
 8022126:	e734      	b.n	8021f92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022128:	f113 0b01 	adds.w	fp, r3, #1
 802212c:	f53f af31 	bmi.w	8021f92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022130:	45dc      	cmp	ip, fp
 8022132:	f6ff af2e 	blt.w	8021f92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022136:	f110 0b01 	adds.w	fp, r0, #1
 802213a:	f53f af2a 	bmi.w	8021f92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802213e:	45de      	cmp	lr, fp
 8022140:	f6ff af27 	blt.w	8021f92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022144:	9302      	str	r3, [sp, #8]
 8022146:	fa0f f38e 	sxth.w	r3, lr
 802214a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802214c:	9301      	str	r3, [sp, #4]
 802214e:	fa0f f38c 	sxth.w	r3, ip
 8022152:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022156:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802215a:	9300      	str	r3, [sp, #0]
 802215c:	463a      	mov	r2, r7
 802215e:	4653      	mov	r3, sl
 8022160:	4641      	mov	r1, r8
 8022162:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022164:	f7ff fd4c 	bl	8021c00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8022168:	e713      	b.n	8021f92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802216a:	1422      	asrs	r2, r4, #16
 802216c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802216e:	1433      	asrs	r3, r6, #16
 8022170:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8022174:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022178:	fb05 2303 	mla	r3, r5, r3, r2
 802217c:	085a      	lsrs	r2, r3, #1
 802217e:	07dd      	lsls	r5, r3, #31
 8022180:	5cba      	ldrb	r2, [r7, r2]
 8022182:	bf54      	ite	pl
 8022184:	f002 020f 	andpl.w	r2, r2, #15
 8022188:	1112      	asrmi	r2, r2, #4
 802218a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802218e:	b2d2      	uxtb	r2, r2
 8022190:	2900      	cmp	r1, #0
 8022192:	d077      	beq.n	8022284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8022194:	f103 0e01 	add.w	lr, r3, #1
 8022198:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802219c:	f01e 0f01 	tst.w	lr, #1
 80221a0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80221a4:	bf0c      	ite	eq
 80221a6:	f00c 0c0f 	andeq.w	ip, ip, #15
 80221aa:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80221ae:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80221b2:	fa5f f58c 	uxtb.w	r5, ip
 80221b6:	9512      	str	r5, [sp, #72]	; 0x48
 80221b8:	b308      	cbz	r0, 80221fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80221ba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80221bc:	442b      	add	r3, r5
 80221be:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80221c2:	07dd      	lsls	r5, r3, #31
 80221c4:	f103 0301 	add.w	r3, r3, #1
 80221c8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80221cc:	bf54      	ite	pl
 80221ce:	f00c 0c0f 	andpl.w	ip, ip, #15
 80221d2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80221d6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80221da:	fa5f f58c 	uxtb.w	r5, ip
 80221de:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80221e2:	950c      	str	r5, [sp, #48]	; 0x30
 80221e4:	07dd      	lsls	r5, r3, #31
 80221e6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80221ea:	bf54      	ite	pl
 80221ec:	f00c 0c0f 	andpl.w	ip, ip, #15
 80221f0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80221f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80221f8:	fa5f f38c 	uxtb.w	r3, ip
 80221fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80221fe:	b289      	uxth	r1, r1
 8022200:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022202:	b280      	uxth	r0, r0
 8022204:	fb01 f300 	mul.w	r3, r1, r0
 8022208:	0109      	lsls	r1, r1, #4
 802220a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802220e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8022212:	1ac9      	subs	r1, r1, r3
 8022214:	b280      	uxth	r0, r0
 8022216:	b289      	uxth	r1, r1
 8022218:	ebac 0c00 	sub.w	ip, ip, r0
 802221c:	4369      	muls	r1, r5
 802221e:	fa1f fc8c 	uxth.w	ip, ip
 8022222:	fb02 120c 	mla	r2, r2, ip, r1
 8022226:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022228:	fb00 2001 	mla	r0, r0, r1, r2
 802222c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802222e:	fb03 0302 	mla	r3, r3, r2, r0
 8022232:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022236:	b1d3      	cbz	r3, 802226e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8022238:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802223a:	4353      	muls	r3, r2
 802223c:	1c5a      	adds	r2, r3, #1
 802223e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022242:	4a0f      	ldr	r2, [pc, #60]	; (8022280 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8022244:	121b      	asrs	r3, r3, #8
 8022246:	6812      	ldr	r2, [r2, #0]
 8022248:	2bff      	cmp	r3, #255	; 0xff
 802224a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802224e:	d12d      	bne.n	80222ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 8022250:	0953      	lsrs	r3, r2, #5
 8022252:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8022256:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802225a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802225e:	f02c 0c07 	bic.w	ip, ip, #7
 8022262:	ea43 0c0c 	orr.w	ip, r3, ip
 8022266:	ea4c 0202 	orr.w	r2, ip, r2
 802226a:	f8a8 2000 	strh.w	r2, [r8]
 802226e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8022270:	f108 0802 	add.w	r8, r8, #2
 8022274:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022278:	441c      	add	r4, r3
 802227a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802227c:	441e      	add	r6, r3
 802227e:	e6b9      	b.n	8021ff4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8022280:	2400207c 	.word	0x2400207c
 8022284:	2800      	cmp	r0, #0
 8022286:	d0ba      	beq.n	80221fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8022288:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802228a:	442b      	add	r3, r5
 802228c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022290:	07db      	lsls	r3, r3, #31
 8022292:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022296:	bf54      	ite	pl
 8022298:	f00c 0c0f 	andpl.w	ip, ip, #15
 802229c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80222a0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80222a4:	fa5f f38c 	uxtb.w	r3, ip
 80222a8:	930c      	str	r3, [sp, #48]	; 0x30
 80222aa:	e7a8      	b.n	80221fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 80222ac:	f8b8 e000 	ldrh.w	lr, [r8]
 80222b0:	fa1f fa83 	uxth.w	sl, r3
 80222b4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80222b8:	43db      	mvns	r3, r3
 80222ba:	ea4f 202e 	mov.w	r0, lr, asr #8
 80222be:	fb11 f10a 	smulbb	r1, r1, sl
 80222c2:	b2db      	uxtb	r3, r3
 80222c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80222c8:	b2d2      	uxtb	r2, r2
 80222ca:	fa5f fc8c 	uxtb.w	ip, ip
 80222ce:	fb00 1003 	mla	r0, r0, r3, r1
 80222d2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80222d6:	fb12 f20a 	smulbb	r2, r2, sl
 80222da:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80222de:	b280      	uxth	r0, r0
 80222e0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80222e4:	fb1c fc0a 	smulbb	ip, ip, sl
 80222e8:	fa5f fe8e 	uxtb.w	lr, lr
 80222ec:	fb0e 2203 	mla	r2, lr, r3, r2
 80222f0:	fb01 cc03 	mla	ip, r1, r3, ip
 80222f4:	1c43      	adds	r3, r0, #1
 80222f6:	b292      	uxth	r2, r2
 80222f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80222fc:	1c51      	adds	r1, r2, #1
 80222fe:	fa1f fc8c 	uxth.w	ip, ip
 8022302:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022306:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802230a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802230e:	4308      	orrs	r0, r1
 8022310:	f10c 0101 	add.w	r1, ip, #1
 8022314:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022318:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802231c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022320:	ea40 000c 	orr.w	r0, r0, ip
 8022324:	f8a8 0000 	strh.w	r0, [r8]
 8022328:	e7a1      	b.n	802226e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 802232a:	b017      	add	sp, #92	; 0x5c
 802232c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022330 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8022330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022334:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8022338:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802233c:	2d00      	cmp	r5, #0
 802233e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8022342:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022346:	fb05 0e03 	mla	lr, r5, r3, r0
 802234a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802234e:	f2c0 80b0 	blt.w	80224b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8022352:	45a9      	cmp	r9, r5
 8022354:	f340 80ad 	ble.w	80224b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8022358:	2800      	cmp	r0, #0
 802235a:	f2c0 80a8 	blt.w	80224ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802235e:	4580      	cmp	r8, r0
 8022360:	f340 80a5 	ble.w	80224ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8022364:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8022368:	f01e 0f01 	tst.w	lr, #1
 802236c:	5d16      	ldrb	r6, [r2, r4]
 802236e:	bf0c      	ite	eq
 8022370:	f006 060f 	andeq.w	r6, r6, #15
 8022374:	1136      	asrne	r6, r6, #4
 8022376:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802237a:	b2f6      	uxtb	r6, r6
 802237c:	1c44      	adds	r4, r0, #1
 802237e:	f100 809b 	bmi.w	80224b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022382:	45a0      	cmp	r8, r4
 8022384:	f340 8098 	ble.w	80224b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022388:	2f00      	cmp	r7, #0
 802238a:	f000 8097 	beq.w	80224bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802238e:	f10e 0a01 	add.w	sl, lr, #1
 8022392:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8022396:	f01a 0f01 	tst.w	sl, #1
 802239a:	5d14      	ldrb	r4, [r2, r4]
 802239c:	bf0c      	ite	eq
 802239e:	f004 040f 	andeq.w	r4, r4, #15
 80223a2:	1124      	asrne	r4, r4, #4
 80223a4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80223a8:	b2e4      	uxtb	r4, r4
 80223aa:	3501      	adds	r5, #1
 80223ac:	f100 808a 	bmi.w	80224c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80223b0:	45a9      	cmp	r9, r5
 80223b2:	f340 8087 	ble.w	80224c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80223b6:	f1bc 0f00 	cmp.w	ip, #0
 80223ba:	f000 8086 	beq.w	80224ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80223be:	2800      	cmp	r0, #0
 80223c0:	db7e      	blt.n	80224c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80223c2:	4580      	cmp	r8, r0
 80223c4:	dd7c      	ble.n	80224c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80223c6:	eb03 090e 	add.w	r9, r3, lr
 80223ca:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80223ce:	f019 0f01 	tst.w	r9, #1
 80223d2:	5d55      	ldrb	r5, [r2, r5]
 80223d4:	bf0c      	ite	eq
 80223d6:	f005 050f 	andeq.w	r5, r5, #15
 80223da:	112d      	asrne	r5, r5, #4
 80223dc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80223e0:	b2ed      	uxtb	r5, r5
 80223e2:	3001      	adds	r0, #1
 80223e4:	d474      	bmi.n	80224d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80223e6:	4580      	cmp	r8, r0
 80223e8:	dd72      	ble.n	80224d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80223ea:	2f00      	cmp	r7, #0
 80223ec:	d072      	beq.n	80224d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80223ee:	3301      	adds	r3, #1
 80223f0:	449e      	add	lr, r3
 80223f2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80223f6:	f01e 0f01 	tst.w	lr, #1
 80223fa:	5cd0      	ldrb	r0, [r2, r3]
 80223fc:	bf0c      	ite	eq
 80223fe:	f000 000f 	andeq.w	r0, r0, #15
 8022402:	1100      	asrne	r0, r0, #4
 8022404:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022408:	b2c3      	uxtb	r3, r0
 802240a:	b2ba      	uxth	r2, r7
 802240c:	fa1f fc8c 	uxth.w	ip, ip
 8022410:	fb02 f00c 	mul.w	r0, r2, ip
 8022414:	0112      	lsls	r2, r2, #4
 8022416:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802241a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802241e:	1a12      	subs	r2, r2, r0
 8022420:	fa1f fc8c 	uxth.w	ip, ip
 8022424:	b292      	uxth	r2, r2
 8022426:	eba7 070c 	sub.w	r7, r7, ip
 802242a:	4362      	muls	r2, r4
 802242c:	b2bf      	uxth	r7, r7
 802242e:	fb06 2207 	mla	r2, r6, r7, r2
 8022432:	fb0c 2505 	mla	r5, ip, r5, r2
 8022436:	fb00 5303 	mla	r3, r0, r3, r5
 802243a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802243e:	b3a3      	cbz	r3, 80224aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8022440:	4a25      	ldr	r2, [pc, #148]	; (80224d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8022442:	880e      	ldrh	r6, [r1, #0]
 8022444:	6815      	ldr	r5, [r2, #0]
 8022446:	b29a      	uxth	r2, r3
 8022448:	1234      	asrs	r4, r6, #8
 802244a:	43db      	mvns	r3, r3
 802244c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8022450:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8022454:	b2db      	uxtb	r3, r3
 8022456:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802245a:	fb10 f002 	smulbb	r0, r0, r2
 802245e:	b2ed      	uxtb	r5, r5
 8022460:	fb17 f702 	smulbb	r7, r7, r2
 8022464:	fb04 0403 	mla	r4, r4, r3, r0
 8022468:	10f0      	asrs	r0, r6, #3
 802246a:	fb15 f202 	smulbb	r2, r5, r2
 802246e:	00f6      	lsls	r6, r6, #3
 8022470:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022474:	b2a4      	uxth	r4, r4
 8022476:	b2f6      	uxtb	r6, r6
 8022478:	fb00 7003 	mla	r0, r0, r3, r7
 802247c:	fb06 2303 	mla	r3, r6, r3, r2
 8022480:	b280      	uxth	r0, r0
 8022482:	b29a      	uxth	r2, r3
 8022484:	1c63      	adds	r3, r4, #1
 8022486:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802248a:	1c53      	adds	r3, r2, #1
 802248c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022490:	1c42      	adds	r2, r0, #1
 8022492:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8022496:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802249a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802249e:	0940      	lsrs	r0, r0, #5
 80224a0:	4323      	orrs	r3, r4
 80224a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80224a6:	4303      	orrs	r3, r0
 80224a8:	800b      	strh	r3, [r1, #0]
 80224aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80224ae:	2600      	movs	r6, #0
 80224b0:	e764      	b.n	802237c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80224b2:	2400      	movs	r4, #0
 80224b4:	4626      	mov	r6, r4
 80224b6:	e778      	b.n	80223aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80224b8:	2400      	movs	r4, #0
 80224ba:	e776      	b.n	80223aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80224bc:	463c      	mov	r4, r7
 80224be:	e774      	b.n	80223aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80224c0:	2500      	movs	r5, #0
 80224c2:	e78e      	b.n	80223e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80224c4:	2300      	movs	r3, #0
 80224c6:	461d      	mov	r5, r3
 80224c8:	e79f      	b.n	802240a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80224ca:	4663      	mov	r3, ip
 80224cc:	4665      	mov	r5, ip
 80224ce:	e79c      	b.n	802240a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80224d0:	2300      	movs	r3, #0
 80224d2:	e79a      	b.n	802240a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80224d4:	463b      	mov	r3, r7
 80224d6:	e798      	b.n	802240a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80224d8:	2400207c 	.word	0x2400207c

080224dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80224dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80224e0:	b093      	sub	sp, #76	; 0x4c
 80224e2:	461d      	mov	r5, r3
 80224e4:	920c      	str	r2, [sp, #48]	; 0x30
 80224e6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80224e8:	9011      	str	r0, [sp, #68]	; 0x44
 80224ea:	9107      	str	r1, [sp, #28]
 80224ec:	6850      	ldr	r0, [r2, #4]
 80224ee:	6812      	ldr	r2, [r2, #0]
 80224f0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80224f4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80224f8:	fb00 1303 	mla	r3, r0, r3, r1
 80224fc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022500:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022502:	689b      	ldr	r3, [r3, #8]
 8022504:	3301      	adds	r3, #1
 8022506:	f023 0301 	bic.w	r3, r3, #1
 802250a:	9306      	str	r3, [sp, #24]
 802250c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802250e:	681f      	ldr	r7, [r3, #0]
 8022510:	9b07      	ldr	r3, [sp, #28]
 8022512:	2b00      	cmp	r3, #0
 8022514:	dc03      	bgt.n	802251e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022516:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022518:	2b00      	cmp	r3, #0
 802251a:	f340 8267 	ble.w	80229ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802251e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022520:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022524:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022528:	1e48      	subs	r0, r1, #1
 802252a:	f102 3cff 	add.w	ip, r2, #4294967295
 802252e:	2d00      	cmp	r5, #0
 8022530:	f340 80b7 	ble.w	80226a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022534:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022538:	ea4f 4326 	mov.w	r3, r6, asr #16
 802253c:	d406      	bmi.n	802254c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802253e:	4586      	cmp	lr, r0
 8022540:	da04      	bge.n	802254c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022542:	2b00      	cmp	r3, #0
 8022544:	db02      	blt.n	802254c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022546:	4563      	cmp	r3, ip
 8022548:	f2c0 80ac 	blt.w	80226a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802254c:	f11e 0e01 	adds.w	lr, lr, #1
 8022550:	f100 809f 	bmi.w	8022692 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8022554:	4571      	cmp	r1, lr
 8022556:	f2c0 809c 	blt.w	8022692 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802255a:	3301      	adds	r3, #1
 802255c:	f100 8099 	bmi.w	8022692 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8022560:	429a      	cmp	r2, r3
 8022562:	f2c0 8096 	blt.w	8022692 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8022566:	46c8      	mov	r8, r9
 8022568:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802256c:	9509      	str	r5, [sp, #36]	; 0x24
 802256e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022570:	2b00      	cmp	r3, #0
 8022572:	f340 80b5 	ble.w	80226e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022576:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802257a:	1430      	asrs	r0, r6, #16
 802257c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022580:	9308      	str	r3, [sp, #32]
 8022582:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022584:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8022588:	1423      	asrs	r3, r4, #16
 802258a:	f100 813f 	bmi.w	802280c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802258e:	f10c 3bff 	add.w	fp, ip, #4294967295
 8022592:	455b      	cmp	r3, fp
 8022594:	f280 813a 	bge.w	802280c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022598:	2800      	cmp	r0, #0
 802259a:	f2c0 8137 	blt.w	802280c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802259e:	f10e 3bff 	add.w	fp, lr, #4294967295
 80225a2:	4558      	cmp	r0, fp
 80225a4:	f280 8132 	bge.w	802280c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80225a8:	9a06      	ldr	r2, [sp, #24]
 80225aa:	fb00 3302 	mla	r3, r0, r2, r3
 80225ae:	0858      	lsrs	r0, r3, #1
 80225b0:	07da      	lsls	r2, r3, #31
 80225b2:	9a08      	ldr	r2, [sp, #32]
 80225b4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80225b8:	bf54      	ite	pl
 80225ba:	f00c 0c0f 	andpl.w	ip, ip, #15
 80225be:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80225c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80225c6:	fa5f fc8c 	uxtb.w	ip, ip
 80225ca:	2a00      	cmp	r2, #0
 80225cc:	f000 80cc 	beq.w	8022768 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80225d0:	1c58      	adds	r0, r3, #1
 80225d2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80225d6:	07c0      	lsls	r0, r0, #31
 80225d8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80225dc:	bf54      	ite	pl
 80225de:	f00e 0e0f 	andpl.w	lr, lr, #15
 80225e2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80225e6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80225ea:	fa5f fe8e 	uxtb.w	lr, lr
 80225ee:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80225f2:	b1b9      	cbz	r1, 8022624 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80225f4:	4453      	add	r3, sl
 80225f6:	0858      	lsrs	r0, r3, #1
 80225f8:	07da      	lsls	r2, r3, #31
 80225fa:	5c38      	ldrb	r0, [r7, r0]
 80225fc:	bf54      	ite	pl
 80225fe:	f000 000f 	andpl.w	r0, r0, #15
 8022602:	1100      	asrmi	r0, r0, #4
 8022604:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022608:	b2c0      	uxtb	r0, r0
 802260a:	900a      	str	r0, [sp, #40]	; 0x28
 802260c:	1c58      	adds	r0, r3, #1
 802260e:	0843      	lsrs	r3, r0, #1
 8022610:	07c2      	lsls	r2, r0, #31
 8022612:	5cfb      	ldrb	r3, [r7, r3]
 8022614:	bf54      	ite	pl
 8022616:	f003 030f 	andpl.w	r3, r3, #15
 802261a:	111b      	asrmi	r3, r3, #4
 802261c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022620:	b2db      	uxtb	r3, r3
 8022622:	930e      	str	r3, [sp, #56]	; 0x38
 8022624:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8022628:	b289      	uxth	r1, r1
 802262a:	fb02 f301 	mul.w	r3, r2, r1
 802262e:	0112      	lsls	r2, r2, #4
 8022630:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8022634:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8022638:	1ad2      	subs	r2, r2, r3
 802263a:	b289      	uxth	r1, r1
 802263c:	b292      	uxth	r2, r2
 802263e:	1a40      	subs	r0, r0, r1
 8022640:	fa1f fe80 	uxth.w	lr, r0
 8022644:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022646:	4342      	muls	r2, r0
 8022648:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802264c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802264e:	fb01 c102 	mla	r1, r1, r2, ip
 8022652:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022654:	fb03 1302 	mla	r3, r3, r2, r1
 8022658:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802265c:	2bff      	cmp	r3, #255	; 0xff
 802265e:	f040 8094 	bne.w	802278a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022662:	4bbf      	ldr	r3, [pc, #764]	; (8022960 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022664:	681a      	ldr	r2, [r3, #0]
 8022666:	4bbf      	ldr	r3, [pc, #764]	; (8022964 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8022668:	0951      	lsrs	r1, r2, #5
 802266a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802266e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022672:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022676:	430b      	orrs	r3, r1
 8022678:	4313      	orrs	r3, r2
 802267a:	f8a8 3000 	strh.w	r3, [r8]
 802267e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022680:	f108 0802 	add.w	r8, r8, #2
 8022684:	441c      	add	r4, r3
 8022686:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022688:	441e      	add	r6, r3
 802268a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802268c:	3b01      	subs	r3, #1
 802268e:	9309      	str	r3, [sp, #36]	; 0x24
 8022690:	e76d      	b.n	802256e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022692:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022694:	3d01      	subs	r5, #1
 8022696:	f109 0902 	add.w	r9, r9, #2
 802269a:	441c      	add	r4, r3
 802269c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802269e:	441e      	add	r6, r3
 80226a0:	e745      	b.n	802252e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80226a2:	d021      	beq.n	80226e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80226a4:	1e6b      	subs	r3, r5, #1
 80226a6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80226a8:	fb00 4003 	mla	r0, r0, r3, r4
 80226ac:	1400      	asrs	r0, r0, #16
 80226ae:	f53f af5a 	bmi.w	8022566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80226b2:	3901      	subs	r1, #1
 80226b4:	4288      	cmp	r0, r1
 80226b6:	f6bf af56 	bge.w	8022566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80226ba:	9920      	ldr	r1, [sp, #128]	; 0x80
 80226bc:	fb01 6303 	mla	r3, r1, r3, r6
 80226c0:	141b      	asrs	r3, r3, #16
 80226c2:	f53f af50 	bmi.w	8022566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80226c6:	3a01      	subs	r2, #1
 80226c8:	4293      	cmp	r3, r2
 80226ca:	f6bf af4c 	bge.w	8022566 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80226ce:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80226d2:	46a8      	mov	r8, r5
 80226d4:	46ce      	mov	lr, r9
 80226d6:	9308      	str	r3, [sp, #32]
 80226d8:	f1b8 0f00 	cmp.w	r8, #0
 80226dc:	f300 80b6 	bgt.w	802284c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80226e0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80226e4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80226e8:	9b07      	ldr	r3, [sp, #28]
 80226ea:	2b00      	cmp	r3, #0
 80226ec:	f340 817e 	ble.w	80229ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80226f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80226f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80226f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80226fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80226fe:	eef0 6a62 	vmov.f32	s13, s5
 8022702:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022706:	ee31 1a05 	vadd.f32	s2, s2, s10
 802270a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802270e:	ee16 4a90 	vmov	r4, s13
 8022712:	eef0 6a43 	vmov.f32	s13, s6
 8022716:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802271a:	ee16 6a90 	vmov	r6, s13
 802271e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022722:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022726:	ee77 2a62 	vsub.f32	s5, s14, s5
 802272a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802272e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022732:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022736:	ee12 2a90 	vmov	r2, s5
 802273a:	eef0 2a47 	vmov.f32	s5, s14
 802273e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022742:	ee13 2a10 	vmov	r2, s6
 8022746:	931f      	str	r3, [sp, #124]	; 0x7c
 8022748:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802274a:	eeb0 3a67 	vmov.f32	s6, s15
 802274e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022752:	9320      	str	r3, [sp, #128]	; 0x80
 8022754:	9b07      	ldr	r3, [sp, #28]
 8022756:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022758:	3b01      	subs	r3, #1
 802275a:	9307      	str	r3, [sp, #28]
 802275c:	bf08      	it	eq
 802275e:	4615      	moveq	r5, r2
 8022760:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022762:	bf18      	it	ne
 8022764:	461d      	movne	r5, r3
 8022766:	e6d3      	b.n	8022510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022768:	2900      	cmp	r1, #0
 802276a:	f43f af5b 	beq.w	8022624 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802276e:	eb0a 0003 	add.w	r0, sl, r3
 8022772:	0843      	lsrs	r3, r0, #1
 8022774:	07c0      	lsls	r0, r0, #31
 8022776:	5cfb      	ldrb	r3, [r7, r3]
 8022778:	bf54      	ite	pl
 802277a:	f003 030f 	andpl.w	r3, r3, #15
 802277e:	111b      	asrmi	r3, r3, #4
 8022780:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022784:	b2db      	uxtb	r3, r3
 8022786:	930a      	str	r3, [sp, #40]	; 0x28
 8022788:	e74c      	b.n	8022624 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 802278a:	2b00      	cmp	r3, #0
 802278c:	f43f af77 	beq.w	802267e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022790:	4a73      	ldr	r2, [pc, #460]	; (8022960 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022792:	fa1f fe83 	uxth.w	lr, r3
 8022796:	f8b8 c000 	ldrh.w	ip, [r8]
 802279a:	43db      	mvns	r3, r3
 802279c:	6810      	ldr	r0, [r2, #0]
 802279e:	ea4f 212c 	mov.w	r1, ip, asr #8
 80227a2:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80227a6:	b2db      	uxtb	r3, r3
 80227a8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80227ac:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80227b0:	fb12 f20e 	smulbb	r2, r2, lr
 80227b4:	b2c0      	uxtb	r0, r0
 80227b6:	fb1b fb0e 	smulbb	fp, fp, lr
 80227ba:	fb01 2103 	mla	r1, r1, r3, r2
 80227be:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80227c2:	fb10 fe0e 	smulbb	lr, r0, lr
 80227c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80227ca:	b289      	uxth	r1, r1
 80227cc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80227d0:	fa5f fc8c 	uxtb.w	ip, ip
 80227d4:	fb02 b203 	mla	r2, r2, r3, fp
 80227d8:	1c48      	adds	r0, r1, #1
 80227da:	fb0c e303 	mla	r3, ip, r3, lr
 80227de:	b292      	uxth	r2, r2
 80227e0:	b29b      	uxth	r3, r3
 80227e2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80227e6:	f102 0b01 	add.w	fp, r2, #1
 80227ea:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80227ee:	1c59      	adds	r1, r3, #1
 80227f0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80227f4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80227f8:	0952      	lsrs	r2, r2, #5
 80227fa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80227fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022802:	4301      	orrs	r1, r0
 8022804:	4311      	orrs	r1, r2
 8022806:	f8a8 1000 	strh.w	r1, [r8]
 802280a:	e738      	b.n	802267e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802280c:	f113 0b01 	adds.w	fp, r3, #1
 8022810:	f53f af35 	bmi.w	802267e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022814:	45dc      	cmp	ip, fp
 8022816:	f6ff af32 	blt.w	802267e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802281a:	f110 0b01 	adds.w	fp, r0, #1
 802281e:	f53f af2e 	bmi.w	802267e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022822:	45de      	cmp	lr, fp
 8022824:	f6ff af2b 	blt.w	802267e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8022828:	9302      	str	r3, [sp, #8]
 802282a:	fa0f f38e 	sxth.w	r3, lr
 802282e:	9a08      	ldr	r2, [sp, #32]
 8022830:	9301      	str	r3, [sp, #4]
 8022832:	fa0f f38c 	sxth.w	r3, ip
 8022836:	9105      	str	r1, [sp, #20]
 8022838:	4641      	mov	r1, r8
 802283a:	9300      	str	r3, [sp, #0]
 802283c:	4653      	mov	r3, sl
 802283e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022842:	463a      	mov	r2, r7
 8022844:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022846:	f7ff fd73 	bl	8022330 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802284a:	e718      	b.n	802267e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802284c:	1422      	asrs	r2, r4, #16
 802284e:	9906      	ldr	r1, [sp, #24]
 8022850:	1433      	asrs	r3, r6, #16
 8022852:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022856:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802285a:	fb01 2303 	mla	r3, r1, r3, r2
 802285e:	085a      	lsrs	r2, r3, #1
 8022860:	07d9      	lsls	r1, r3, #31
 8022862:	5cba      	ldrb	r2, [r7, r2]
 8022864:	bf54      	ite	pl
 8022866:	f002 020f 	andpl.w	r2, r2, #15
 802286a:	1112      	asrmi	r2, r2, #4
 802286c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022870:	b2d2      	uxtb	r2, r2
 8022872:	2800      	cmp	r0, #0
 8022874:	d063      	beq.n	802293e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8022876:	f103 0a01 	add.w	sl, r3, #1
 802287a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802287e:	f01a 0f01 	tst.w	sl, #1
 8022882:	5c79      	ldrb	r1, [r7, r1]
 8022884:	bf0c      	ite	eq
 8022886:	f001 010f 	andeq.w	r1, r1, #15
 802288a:	1109      	asrne	r1, r1, #4
 802288c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022890:	b2c9      	uxtb	r1, r1
 8022892:	910f      	str	r1, [sp, #60]	; 0x3c
 8022894:	f1bc 0f00 	cmp.w	ip, #0
 8022898:	d01a      	beq.n	80228d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802289a:	9908      	ldr	r1, [sp, #32]
 802289c:	440b      	add	r3, r1
 802289e:	0859      	lsrs	r1, r3, #1
 80228a0:	f013 0f01 	tst.w	r3, #1
 80228a4:	f103 0301 	add.w	r3, r3, #1
 80228a8:	5c79      	ldrb	r1, [r7, r1]
 80228aa:	bf0c      	ite	eq
 80228ac:	f001 010f 	andeq.w	r1, r1, #15
 80228b0:	1109      	asrne	r1, r1, #4
 80228b2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80228b6:	b2c9      	uxtb	r1, r1
 80228b8:	910b      	str	r1, [sp, #44]	; 0x2c
 80228ba:	0859      	lsrs	r1, r3, #1
 80228bc:	07db      	lsls	r3, r3, #31
 80228be:	5c79      	ldrb	r1, [r7, r1]
 80228c0:	bf54      	ite	pl
 80228c2:	f001 010f 	andpl.w	r1, r1, #15
 80228c6:	1109      	asrmi	r1, r1, #4
 80228c8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80228cc:	b2c9      	uxtb	r1, r1
 80228ce:	9110      	str	r1, [sp, #64]	; 0x40
 80228d0:	b280      	uxth	r0, r0
 80228d2:	fa1f fc8c 	uxth.w	ip, ip
 80228d6:	fb00 f30c 	mul.w	r3, r0, ip
 80228da:	0100      	lsls	r0, r0, #4
 80228dc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80228e0:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80228e4:	1ac0      	subs	r0, r0, r3
 80228e6:	fa1f fc8c 	uxth.w	ip, ip
 80228ea:	b280      	uxth	r0, r0
 80228ec:	eba1 010c 	sub.w	r1, r1, ip
 80228f0:	fa1f fa81 	uxth.w	sl, r1
 80228f4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80228f6:	4348      	muls	r0, r1
 80228f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80228fa:	fb02 020a 	mla	r2, r2, sl, r0
 80228fe:	fb0c 2c01 	mla	ip, ip, r1, r2
 8022902:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022904:	fb03 c302 	mla	r3, r3, r2, ip
 8022908:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802290c:	2bff      	cmp	r3, #255	; 0xff
 802290e:	d12b      	bne.n	8022968 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8022910:	4b13      	ldr	r3, [pc, #76]	; (8022960 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022912:	681a      	ldr	r2, [r3, #0]
 8022914:	4b13      	ldr	r3, [pc, #76]	; (8022964 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8022916:	0951      	lsrs	r1, r2, #5
 8022918:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802291c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022920:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022924:	430b      	orrs	r3, r1
 8022926:	4313      	orrs	r3, r2
 8022928:	f8ae 3000 	strh.w	r3, [lr]
 802292c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802292e:	f10e 0e02 	add.w	lr, lr, #2
 8022932:	f108 38ff 	add.w	r8, r8, #4294967295
 8022936:	441c      	add	r4, r3
 8022938:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802293a:	441e      	add	r6, r3
 802293c:	e6cc      	b.n	80226d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802293e:	f1bc 0f00 	cmp.w	ip, #0
 8022942:	d0c5      	beq.n	80228d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022944:	9908      	ldr	r1, [sp, #32]
 8022946:	440b      	add	r3, r1
 8022948:	0859      	lsrs	r1, r3, #1
 802294a:	07db      	lsls	r3, r3, #31
 802294c:	5c79      	ldrb	r1, [r7, r1]
 802294e:	bf54      	ite	pl
 8022950:	f001 010f 	andpl.w	r1, r1, #15
 8022954:	1109      	asrmi	r1, r1, #4
 8022956:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802295a:	b2c9      	uxtb	r1, r1
 802295c:	910b      	str	r1, [sp, #44]	; 0x2c
 802295e:	e7b7      	b.n	80228d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022960:	2400207c 	.word	0x2400207c
 8022964:	fffff800 	.word	0xfffff800
 8022968:	2b00      	cmp	r3, #0
 802296a:	d0df      	beq.n	802292c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 802296c:	4a21      	ldr	r2, [pc, #132]	; (80229f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802296e:	fa1f fa83 	uxth.w	sl, r3
 8022972:	f8be c000 	ldrh.w	ip, [lr]
 8022976:	43db      	mvns	r3, r3
 8022978:	6810      	ldr	r0, [r2, #0]
 802297a:	ea4f 212c 	mov.w	r1, ip, asr #8
 802297e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8022982:	b2db      	uxtb	r3, r3
 8022984:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022988:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802298c:	fb12 f20a 	smulbb	r2, r2, sl
 8022990:	b2c0      	uxtb	r0, r0
 8022992:	fb1b fb0a 	smulbb	fp, fp, sl
 8022996:	fb01 2103 	mla	r1, r1, r3, r2
 802299a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802299e:	fb10 f00a 	smulbb	r0, r0, sl
 80229a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80229a6:	b289      	uxth	r1, r1
 80229a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80229ac:	fa5f fc8c 	uxtb.w	ip, ip
 80229b0:	fb02 b203 	mla	r2, r2, r3, fp
 80229b4:	fb0c 0003 	mla	r0, ip, r3, r0
 80229b8:	1c4b      	adds	r3, r1, #1
 80229ba:	b292      	uxth	r2, r2
 80229bc:	b280      	uxth	r0, r0
 80229be:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80229c2:	f100 0b01 	add.w	fp, r0, #1
 80229c6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80229ca:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80229ce:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80229d2:	ea4b 0101 	orr.w	r1, fp, r1
 80229d6:	f102 0b01 	add.w	fp, r2, #1
 80229da:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80229de:	0952      	lsrs	r2, r2, #5
 80229e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80229e4:	4311      	orrs	r1, r2
 80229e6:	f8ae 1000 	strh.w	r1, [lr]
 80229ea:	e79f      	b.n	802292c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 80229ec:	b013      	add	sp, #76	; 0x4c
 80229ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80229f2:	bf00      	nop
 80229f4:	2400207c 	.word	0x2400207c

080229f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80229f8:	b570      	push	{r4, r5, r6, lr}
 80229fa:	1208      	asrs	r0, r1, #8
 80229fc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8022a00:	b29e      	uxth	r6, r3
 8022a02:	1213      	asrs	r3, r2, #8
 8022a04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022a08:	10cc      	asrs	r4, r1, #3
 8022a0a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022a0e:	00c9      	lsls	r1, r1, #3
 8022a10:	fb10 f006 	smulbb	r0, r0, r6
 8022a14:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022a18:	fb13 f305 	smulbb	r3, r3, r5
 8022a1c:	fb14 f406 	smulbb	r4, r4, r6
 8022a20:	4418      	add	r0, r3
 8022a22:	10d3      	asrs	r3, r2, #3
 8022a24:	00d2      	lsls	r2, r2, #3
 8022a26:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022a2a:	b280      	uxth	r0, r0
 8022a2c:	b2d2      	uxtb	r2, r2
 8022a2e:	fb13 f305 	smulbb	r3, r3, r5
 8022a32:	fb12 f205 	smulbb	r2, r2, r5
 8022a36:	441c      	add	r4, r3
 8022a38:	b2cb      	uxtb	r3, r1
 8022a3a:	fb13 f306 	smulbb	r3, r3, r6
 8022a3e:	b2a4      	uxth	r4, r4
 8022a40:	4413      	add	r3, r2
 8022a42:	1c42      	adds	r2, r0, #1
 8022a44:	b29b      	uxth	r3, r3
 8022a46:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022a4a:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8022a4e:	1c58      	adds	r0, r3, #1
 8022a50:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022a54:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022a58:	4310      	orrs	r0, r2
 8022a5a:	1c62      	adds	r2, r4, #1
 8022a5c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022a60:	0964      	lsrs	r4, r4, #5
 8022a62:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022a66:	4320      	orrs	r0, r4
 8022a68:	bd70      	pop	{r4, r5, r6, pc}
	...

08022a6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8022a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a70:	b08f      	sub	sp, #60	; 0x3c
 8022a72:	461c      	mov	r4, r3
 8022a74:	460d      	mov	r5, r1
 8022a76:	4616      	mov	r6, r2
 8022a78:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8022a7c:	9004      	str	r0, [sp, #16]
 8022a7e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022a80:	2f00      	cmp	r7, #0
 8022a82:	f000 80f6 	beq.w	8022c72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8022a86:	6820      	ldr	r0, [r4, #0]
 8022a88:	aa0a      	add	r2, sp, #40	; 0x28
 8022a8a:	6861      	ldr	r1, [r4, #4]
 8022a8c:	f04f 0802 	mov.w	r8, #2
 8022a90:	3604      	adds	r6, #4
 8022a92:	c203      	stmia	r2!, {r0, r1}
 8022a94:	6818      	ldr	r0, [r3, #0]
 8022a96:	aa0c      	add	r2, sp, #48	; 0x30
 8022a98:	6859      	ldr	r1, [r3, #4]
 8022a9a:	c203      	stmia	r2!, {r0, r1}
 8022a9c:	a80a      	add	r0, sp, #40	; 0x28
 8022a9e:	f7f0 f9e7 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022aa2:	4621      	mov	r1, r4
 8022aa4:	a80c      	add	r0, sp, #48	; 0x30
 8022aa6:	f7f0 fa0b 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022aaa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8022aae:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8022ab2:	f002 0301 	and.w	r3, r2, #1
 8022ab6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8022aba:	9306      	str	r3, [sp, #24]
 8022abc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8022ac0:	f003 0101 	and.w	r1, r3, #1
 8022ac4:	9105      	str	r1, [sp, #20]
 8022ac6:	9805      	ldr	r0, [sp, #20]
 8022ac8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8022acc:	4403      	add	r3, r0
 8022ace:	fb01 2303 	mla	r3, r1, r3, r2
 8022ad2:	fb93 f3f8 	sdiv	r3, r3, r8
 8022ad6:	441d      	add	r5, r3
 8022ad8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8022adc:	441a      	add	r2, r3
 8022ade:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8022ae2:	4419      	add	r1, r3
 8022ae4:	4b64      	ldr	r3, [pc, #400]	; (8022c78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8022ae6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8022aea:	6818      	ldr	r0, [r3, #0]
 8022aec:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8022af0:	6803      	ldr	r3, [r0, #0]
 8022af2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8022af4:	4798      	blx	r3
 8022af6:	4a61      	ldr	r2, [pc, #388]	; (8022c7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8022af8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8022afc:	2fff      	cmp	r7, #255	; 0xff
 8022afe:	8813      	ldrh	r3, [r2, #0]
 8022b00:	4611      	mov	r1, r2
 8022b02:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8022b06:	fb03 fb0b 	mul.w	fp, r3, fp
 8022b0a:	fb03 a404 	mla	r4, r3, r4, sl
 8022b0e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022b12:	d06b      	beq.n	8022bec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8022b14:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8022b18:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8022b1c:	9303      	str	r3, [sp, #12]
 8022b1e:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8022b22:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8022b26:	9b07      	ldr	r3, [sp, #28]
 8022b28:	42a3      	cmp	r3, r4
 8022b2a:	f240 809d 	bls.w	8022c68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8022b2e:	9b06      	ldr	r3, [sp, #24]
 8022b30:	2b00      	cmp	r3, #0
 8022b32:	d039      	beq.n	8022ba8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8022b34:	782b      	ldrb	r3, [r5, #0]
 8022b36:	f105 0801 	add.w	r8, r5, #1
 8022b3a:	f109 3bff 	add.w	fp, r9, #4294967295
 8022b3e:	8822      	ldrh	r2, [r4, #0]
 8022b40:	f003 030f 	and.w	r3, r3, #15
 8022b44:	9804      	ldr	r0, [sp, #16]
 8022b46:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022b4a:	9b03      	ldr	r3, [sp, #12]
 8022b4c:	9300      	str	r3, [sp, #0]
 8022b4e:	463b      	mov	r3, r7
 8022b50:	f7ff ff52 	bl	80229f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022b54:	f824 0b02 	strh.w	r0, [r4], #2
 8022b58:	f1bb 0f01 	cmp.w	fp, #1
 8022b5c:	46a2      	mov	sl, r4
 8022b5e:	f104 0404 	add.w	r4, r4, #4
 8022b62:	dd24      	ble.n	8022bae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8022b64:	f898 3000 	ldrb.w	r3, [r8]
 8022b68:	f1ab 0b02 	sub.w	fp, fp, #2
 8022b6c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8022b70:	091b      	lsrs	r3, r3, #4
 8022b72:	9804      	ldr	r0, [sp, #16]
 8022b74:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022b78:	9b03      	ldr	r3, [sp, #12]
 8022b7a:	9300      	str	r3, [sp, #0]
 8022b7c:	463b      	mov	r3, r7
 8022b7e:	f7ff ff3b 	bl	80229f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022b82:	f824 0c04 	strh.w	r0, [r4, #-4]
 8022b86:	f818 3b01 	ldrb.w	r3, [r8], #1
 8022b8a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8022b8e:	f003 030f 	and.w	r3, r3, #15
 8022b92:	9804      	ldr	r0, [sp, #16]
 8022b94:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022b98:	9b03      	ldr	r3, [sp, #12]
 8022b9a:	9300      	str	r3, [sp, #0]
 8022b9c:	463b      	mov	r3, r7
 8022b9e:	f7ff ff2b 	bl	80229f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022ba2:	f824 0c02 	strh.w	r0, [r4, #-2]
 8022ba6:	e7d7      	b.n	8022b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8022ba8:	46a8      	mov	r8, r5
 8022baa:	46cb      	mov	fp, r9
 8022bac:	e7d4      	b.n	8022b58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8022bae:	d10e      	bne.n	8022bce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 8022bb0:	f898 3000 	ldrb.w	r3, [r8]
 8022bb4:	f8ba 2000 	ldrh.w	r2, [sl]
 8022bb8:	091b      	lsrs	r3, r3, #4
 8022bba:	9804      	ldr	r0, [sp, #16]
 8022bbc:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022bc0:	9b03      	ldr	r3, [sp, #12]
 8022bc2:	9300      	str	r3, [sp, #0]
 8022bc4:	463b      	mov	r3, r7
 8022bc6:	f7ff ff17 	bl	80229f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022bca:	f82a 0b02 	strh.w	r0, [sl], #2
 8022bce:	9b08      	ldr	r3, [sp, #32]
 8022bd0:	9a05      	ldr	r2, [sp, #20]
 8022bd2:	881c      	ldrh	r4, [r3, #0]
 8022bd4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8022bd8:	eba4 0409 	sub.w	r4, r4, r9
 8022bdc:	4413      	add	r3, r2
 8022bde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022be0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8022be4:	fb93 f3f2 	sdiv	r3, r3, r2
 8022be8:	441d      	add	r5, r3
 8022bea:	e79c      	b.n	8022b26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 8022bec:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8022bf0:	45a3      	cmp	fp, r4
 8022bf2:	d939      	bls.n	8022c68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8022bf4:	9b06      	ldr	r3, [sp, #24]
 8022bf6:	b1fb      	cbz	r3, 8022c38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8022bf8:	782b      	ldrb	r3, [r5, #0]
 8022bfa:	1c6a      	adds	r2, r5, #1
 8022bfc:	f109 30ff 	add.w	r0, r9, #4294967295
 8022c00:	3402      	adds	r4, #2
 8022c02:	f003 030f 	and.w	r3, r3, #15
 8022c06:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022c0a:	f824 3c02 	strh.w	r3, [r4, #-2]
 8022c0e:	2801      	cmp	r0, #1
 8022c10:	4623      	mov	r3, r4
 8022c12:	f104 0404 	add.w	r4, r4, #4
 8022c16:	dd12      	ble.n	8022c3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8022c18:	7813      	ldrb	r3, [r2, #0]
 8022c1a:	3802      	subs	r0, #2
 8022c1c:	091b      	lsrs	r3, r3, #4
 8022c1e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022c22:	f824 3c04 	strh.w	r3, [r4, #-4]
 8022c26:	f812 3b01 	ldrb.w	r3, [r2], #1
 8022c2a:	f003 030f 	and.w	r3, r3, #15
 8022c2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022c32:	f824 3c02 	strh.w	r3, [r4, #-2]
 8022c36:	e7ea      	b.n	8022c0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8022c38:	462a      	mov	r2, r5
 8022c3a:	4648      	mov	r0, r9
 8022c3c:	e7e7      	b.n	8022c0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8022c3e:	d106      	bne.n	8022c4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8022c40:	7812      	ldrb	r2, [r2, #0]
 8022c42:	3302      	adds	r3, #2
 8022c44:	0912      	lsrs	r2, r2, #4
 8022c46:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8022c4a:	f823 2c02 	strh.w	r2, [r3, #-2]
 8022c4e:	880c      	ldrh	r4, [r1, #0]
 8022c50:	9a05      	ldr	r2, [sp, #20]
 8022c52:	eba4 0409 	sub.w	r4, r4, r9
 8022c56:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8022c5a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8022c5e:	4413      	add	r3, r2
 8022c60:	fb93 f3f8 	sdiv	r3, r3, r8
 8022c64:	441d      	add	r5, r3
 8022c66:	e7c3      	b.n	8022bf0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 8022c68:	4b03      	ldr	r3, [pc, #12]	; (8022c78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8022c6a:	6818      	ldr	r0, [r3, #0]
 8022c6c:	6803      	ldr	r3, [r0, #0]
 8022c6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8022c70:	4798      	blx	r3
 8022c72:	b00f      	add	sp, #60	; 0x3c
 8022c74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c78:	24002074 	.word	0x24002074
 8022c7c:	2400206e 	.word	0x2400206e

08022c80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8022c80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022c82:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8022c86:	0a0f      	lsrs	r7, r1, #8
 8022c88:	2dff      	cmp	r5, #255	; 0xff
 8022c8a:	d10c      	bne.n	8022ca6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8022c8c:	2bff      	cmp	r3, #255	; 0xff
 8022c8e:	d10a      	bne.n	8022ca6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8022c90:	0948      	lsrs	r0, r1, #5
 8022c92:	4b25      	ldr	r3, [pc, #148]	; (8022d28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8022c94:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8022c98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c9c:	403b      	ands	r3, r7
 8022c9e:	4318      	orrs	r0, r3
 8022ca0:	4308      	orrs	r0, r1
 8022ca2:	b280      	uxth	r0, r0
 8022ca4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022ca6:	fb15 f503 	smulbb	r5, r5, r3
 8022caa:	1214      	asrs	r4, r2, #8
 8022cac:	10d6      	asrs	r6, r2, #3
 8022cae:	b2ab      	uxth	r3, r5
 8022cb0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8022cb4:	00d0      	lsls	r0, r2, #3
 8022cb6:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8022cba:	1c5d      	adds	r5, r3, #1
 8022cbc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8022cc0:	b2c0      	uxtb	r0, r0
 8022cc2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022cc6:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8022cca:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8022cce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022cd2:	fa1f fc85 	uxth.w	ip, r5
 8022cd6:	43ed      	mvns	r5, r5
 8022cd8:	fb12 f20c 	smulbb	r2, r2, ip
 8022cdc:	b2eb      	uxtb	r3, r5
 8022cde:	b2fd      	uxtb	r5, r7
 8022ce0:	fb04 2403 	mla	r4, r4, r3, r2
 8022ce4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8022ce8:	fb15 f50c 	smulbb	r5, r5, ip
 8022cec:	b2c8      	uxtb	r0, r1
 8022cee:	b2a4      	uxth	r4, r4
 8022cf0:	fb10 f00c 	smulbb	r0, r0, ip
 8022cf4:	fb06 5503 	mla	r5, r6, r3, r5
 8022cf8:	fb02 0003 	mla	r0, r2, r3, r0
 8022cfc:	b2ad      	uxth	r5, r5
 8022cfe:	b283      	uxth	r3, r0
 8022d00:	1c60      	adds	r0, r4, #1
 8022d02:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8022d06:	1c58      	adds	r0, r3, #1
 8022d08:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022d0c:	1c6b      	adds	r3, r5, #1
 8022d0e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8022d12:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022d16:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022d1a:	096d      	lsrs	r5, r5, #5
 8022d1c:	4320      	orrs	r0, r4
 8022d1e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022d22:	4328      	orrs	r0, r5
 8022d24:	e7be      	b.n	8022ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 8022d26:	bf00      	nop
 8022d28:	00fff800 	.word	0x00fff800

08022d2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8022d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d30:	461c      	mov	r4, r3
 8022d32:	b08d      	sub	sp, #52	; 0x34
 8022d34:	460d      	mov	r5, r1
 8022d36:	4616      	mov	r6, r2
 8022d38:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022d3a:	4680      	mov	r8, r0
 8022d3c:	6861      	ldr	r1, [r4, #4]
 8022d3e:	aa08      	add	r2, sp, #32
 8022d40:	6820      	ldr	r0, [r4, #0]
 8022d42:	f04f 0a02 	mov.w	sl, #2
 8022d46:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8022d4a:	3604      	adds	r6, #4
 8022d4c:	c203      	stmia	r2!, {r0, r1}
 8022d4e:	6818      	ldr	r0, [r3, #0]
 8022d50:	aa0a      	add	r2, sp, #40	; 0x28
 8022d52:	6859      	ldr	r1, [r3, #4]
 8022d54:	c203      	stmia	r2!, {r0, r1}
 8022d56:	a808      	add	r0, sp, #32
 8022d58:	f7f0 f88a 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022d5c:	4621      	mov	r1, r4
 8022d5e:	a80a      	add	r0, sp, #40	; 0x28
 8022d60:	f7f0 f8ae 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022d64:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8022d68:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8022d6c:	f002 0301 	and.w	r3, r2, #1
 8022d70:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8022d74:	9303      	str	r3, [sp, #12]
 8022d76:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8022d7a:	f003 0101 	and.w	r1, r3, #1
 8022d7e:	9102      	str	r1, [sp, #8]
 8022d80:	9802      	ldr	r0, [sp, #8]
 8022d82:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8022d86:	4403      	add	r3, r0
 8022d88:	fb01 2303 	mla	r3, r1, r3, r2
 8022d8c:	fb93 f3fa 	sdiv	r3, r3, sl
 8022d90:	441d      	add	r5, r3
 8022d92:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8022d96:	441a      	add	r2, r3
 8022d98:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8022d9c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8022da0:	4419      	add	r1, r3
 8022da2:	4a3e      	ldr	r2, [pc, #248]	; (8022e9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8022da4:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8022da8:	6810      	ldr	r0, [r2, #0]
 8022daa:	9205      	str	r2, [sp, #20]
 8022dac:	6803      	ldr	r3, [r0, #0]
 8022dae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8022db0:	4798      	blx	r3
 8022db2:	4b3b      	ldr	r3, [pc, #236]	; (8022ea0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8022db4:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8022db8:	8819      	ldrh	r1, [r3, #0]
 8022dba:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8022dbe:	434f      	muls	r7, r1
 8022dc0:	fb01 c404 	mla	r4, r1, r4, ip
 8022dc4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022dc8:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8022dcc:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8022dd0:	9204      	str	r2, [sp, #16]
 8022dd2:	9b04      	ldr	r3, [sp, #16]
 8022dd4:	429c      	cmp	r4, r3
 8022dd6:	d258      	bcs.n	8022e8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8022dd8:	9b03      	ldr	r3, [sp, #12]
 8022dda:	2b00      	cmp	r3, #0
 8022ddc:	d034      	beq.n	8022e48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8022dde:	782b      	ldrb	r3, [r5, #0]
 8022de0:	1c6f      	adds	r7, r5, #1
 8022de2:	f003 030f 	and.w	r3, r3, #15
 8022de6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8022dea:	0e0b      	lsrs	r3, r1, #24
 8022dec:	d006      	beq.n	8022dfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8022dee:	8822      	ldrh	r2, [r4, #0]
 8022df0:	4640      	mov	r0, r8
 8022df2:	9300      	str	r3, [sp, #0]
 8022df4:	464b      	mov	r3, r9
 8022df6:	f7ff ff43 	bl	8022c80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8022dfa:	8020      	strh	r0, [r4, #0]
 8022dfc:	3402      	adds	r4, #2
 8022dfe:	f10b 3aff 	add.w	sl, fp, #4294967295
 8022e02:	f1ba 0f01 	cmp.w	sl, #1
 8022e06:	dd22      	ble.n	8022e4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8022e08:	783b      	ldrb	r3, [r7, #0]
 8022e0a:	091b      	lsrs	r3, r3, #4
 8022e0c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8022e10:	0e0b      	lsrs	r3, r1, #24
 8022e12:	d006      	beq.n	8022e22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8022e14:	8822      	ldrh	r2, [r4, #0]
 8022e16:	4640      	mov	r0, r8
 8022e18:	9300      	str	r3, [sp, #0]
 8022e1a:	464b      	mov	r3, r9
 8022e1c:	f7ff ff30 	bl	8022c80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8022e20:	8020      	strh	r0, [r4, #0]
 8022e22:	f817 3b01 	ldrb.w	r3, [r7], #1
 8022e26:	f003 030f 	and.w	r3, r3, #15
 8022e2a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8022e2e:	0e0b      	lsrs	r3, r1, #24
 8022e30:	d006      	beq.n	8022e40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8022e32:	8862      	ldrh	r2, [r4, #2]
 8022e34:	4640      	mov	r0, r8
 8022e36:	9300      	str	r3, [sp, #0]
 8022e38:	464b      	mov	r3, r9
 8022e3a:	f7ff ff21 	bl	8022c80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8022e3e:	8060      	strh	r0, [r4, #2]
 8022e40:	3404      	adds	r4, #4
 8022e42:	f1aa 0a02 	sub.w	sl, sl, #2
 8022e46:	e7dc      	b.n	8022e02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8022e48:	462f      	mov	r7, r5
 8022e4a:	46da      	mov	sl, fp
 8022e4c:	e7d9      	b.n	8022e02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8022e4e:	d10d      	bne.n	8022e6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8022e50:	783b      	ldrb	r3, [r7, #0]
 8022e52:	091b      	lsrs	r3, r3, #4
 8022e54:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8022e58:	0e0b      	lsrs	r3, r1, #24
 8022e5a:	d006      	beq.n	8022e6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8022e5c:	8822      	ldrh	r2, [r4, #0]
 8022e5e:	4640      	mov	r0, r8
 8022e60:	9300      	str	r3, [sp, #0]
 8022e62:	464b      	mov	r3, r9
 8022e64:	f7ff ff0c 	bl	8022c80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8022e68:	8020      	strh	r0, [r4, #0]
 8022e6a:	3402      	adds	r4, #2
 8022e6c:	9b06      	ldr	r3, [sp, #24]
 8022e6e:	9a02      	ldr	r2, [sp, #8]
 8022e70:	881b      	ldrh	r3, [r3, #0]
 8022e72:	eba3 030b 	sub.w	r3, r3, fp
 8022e76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022e7a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8022e7e:	4413      	add	r3, r2
 8022e80:	9a07      	ldr	r2, [sp, #28]
 8022e82:	fb93 f3f2 	sdiv	r3, r3, r2
 8022e86:	441d      	add	r5, r3
 8022e88:	e7a3      	b.n	8022dd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8022e8a:	9b05      	ldr	r3, [sp, #20]
 8022e8c:	6818      	ldr	r0, [r3, #0]
 8022e8e:	6803      	ldr	r3, [r0, #0]
 8022e90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8022e92:	4798      	blx	r3
 8022e94:	b00d      	add	sp, #52	; 0x34
 8022e96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e9a:	bf00      	nop
 8022e9c:	24002074 	.word	0x24002074
 8022ea0:	2400206e 	.word	0x2400206e

08022ea4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8022ea4:	b570      	push	{r4, r5, r6, lr}
 8022ea6:	1214      	asrs	r4, r2, #8
 8022ea8:	788d      	ldrb	r5, [r1, #2]
 8022eaa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8022eae:	10d0      	asrs	r0, r2, #3
 8022eb0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8022eb4:	00d2      	lsls	r2, r2, #3
 8022eb6:	fb15 f503 	smulbb	r5, r5, r3
 8022eba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022ebe:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8022ec2:	b2d2      	uxtb	r2, r2
 8022ec4:	fb04 5506 	mla	r5, r4, r6, r5
 8022ec8:	784c      	ldrb	r4, [r1, #1]
 8022eca:	7809      	ldrb	r1, [r1, #0]
 8022ecc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8022ed0:	fb14 f403 	smulbb	r4, r4, r3
 8022ed4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022ed8:	fb11 f303 	smulbb	r3, r1, r3
 8022edc:	b2ad      	uxth	r5, r5
 8022ede:	fb00 4406 	mla	r4, r0, r6, r4
 8022ee2:	fb02 3306 	mla	r3, r2, r6, r3
 8022ee6:	1c68      	adds	r0, r5, #1
 8022ee8:	b2a4      	uxth	r4, r4
 8022eea:	b29b      	uxth	r3, r3
 8022eec:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8022ef0:	1c62      	adds	r2, r4, #1
 8022ef2:	1c58      	adds	r0, r3, #1
 8022ef4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022ef8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022efc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022f00:	0964      	lsrs	r4, r4, #5
 8022f02:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022f06:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8022f0a:	4328      	orrs	r0, r5
 8022f0c:	4320      	orrs	r0, r4
 8022f0e:	bd70      	pop	{r4, r5, r6, pc}

08022f10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8022f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f14:	b08f      	sub	sp, #60	; 0x3c
 8022f16:	461c      	mov	r4, r3
 8022f18:	4682      	mov	sl, r0
 8022f1a:	460e      	mov	r6, r1
 8022f1c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8022f20:	4615      	mov	r5, r2
 8022f22:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022f24:	2f00      	cmp	r7, #0
 8022f26:	f000 8141 	beq.w	80231ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 8022f2a:	6820      	ldr	r0, [r4, #0]
 8022f2c:	aa0a      	add	r2, sp, #40	; 0x28
 8022f2e:	6861      	ldr	r1, [r4, #4]
 8022f30:	f04f 0802 	mov.w	r8, #2
 8022f34:	3504      	adds	r5, #4
 8022f36:	c203      	stmia	r2!, {r0, r1}
 8022f38:	6818      	ldr	r0, [r3, #0]
 8022f3a:	aa0c      	add	r2, sp, #48	; 0x30
 8022f3c:	6859      	ldr	r1, [r3, #4]
 8022f3e:	c203      	stmia	r2!, {r0, r1}
 8022f40:	a80a      	add	r0, sp, #40	; 0x28
 8022f42:	f7ef ff95 	bl	8012e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022f46:	4621      	mov	r1, r4
 8022f48:	a80c      	add	r0, sp, #48	; 0x30
 8022f4a:	f7ef ffb9 	bl	8012ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022f4e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8022f52:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8022f56:	f002 0301 	and.w	r3, r2, #1
 8022f5a:	9306      	str	r3, [sp, #24]
 8022f5c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8022f60:	f003 0101 	and.w	r1, r3, #1
 8022f64:	9105      	str	r1, [sp, #20]
 8022f66:	9805      	ldr	r0, [sp, #20]
 8022f68:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8022f6c:	4403      	add	r3, r0
 8022f6e:	fb01 2303 	mla	r3, r1, r3, r2
 8022f72:	fb93 f3f8 	sdiv	r3, r3, r8
 8022f76:	441e      	add	r6, r3
 8022f78:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8022f7c:	441a      	add	r2, r3
 8022f7e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8022f82:	4419      	add	r1, r3
 8022f84:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8022f88:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8022f8c:	9303      	str	r3, [sp, #12]
 8022f8e:	4b89      	ldr	r3, [pc, #548]	; (80231b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8022f90:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8022f94:	6818      	ldr	r0, [r3, #0]
 8022f96:	6803      	ldr	r3, [r0, #0]
 8022f98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8022f9a:	4798      	blx	r3
 8022f9c:	4a86      	ldr	r2, [pc, #536]	; (80231b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8022f9e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8022fa2:	2fff      	cmp	r7, #255	; 0xff
 8022fa4:	8813      	ldrh	r3, [r2, #0]
 8022fa6:	4694      	mov	ip, r2
 8022fa8:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8022fac:	fb03 9404 	mla	r4, r3, r4, r9
 8022fb0:	fb03 f30b 	mul.w	r3, r3, fp
 8022fb4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022fb8:	d071      	beq.n	802309e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 8022fba:	43f9      	mvns	r1, r7
 8022fbc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022fc0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8022fc4:	b2c9      	uxtb	r1, r1
 8022fc6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8022fca:	9104      	str	r1, [sp, #16]
 8022fcc:	9b07      	ldr	r3, [sp, #28]
 8022fce:	42a3      	cmp	r3, r4
 8022fd0:	f240 80e7 	bls.w	80231a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8022fd4:	9b06      	ldr	r3, [sp, #24]
 8022fd6:	2b00      	cmp	r3, #0
 8022fd8:	d03d      	beq.n	8023056 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8022fda:	7831      	ldrb	r1, [r6, #0]
 8022fdc:	4650      	mov	r0, sl
 8022fde:	9b04      	ldr	r3, [sp, #16]
 8022fe0:	f106 0801 	add.w	r8, r6, #1
 8022fe4:	f001 010f 	and.w	r1, r1, #15
 8022fe8:	8822      	ldrh	r2, [r4, #0]
 8022fea:	9300      	str	r3, [sp, #0]
 8022fec:	463b      	mov	r3, r7
 8022fee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022ff2:	4429      	add	r1, r5
 8022ff4:	f7ff ff56 	bl	8022ea4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8022ff8:	9b03      	ldr	r3, [sp, #12]
 8022ffa:	f824 0b02 	strh.w	r0, [r4], #2
 8022ffe:	f103 3bff 	add.w	fp, r3, #4294967295
 8023002:	f1bb 0f01 	cmp.w	fp, #1
 8023006:	46a1      	mov	r9, r4
 8023008:	f104 0404 	add.w	r4, r4, #4
 802300c:	dd27      	ble.n	802305e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 802300e:	f898 1000 	ldrb.w	r1, [r8]
 8023012:	4650      	mov	r0, sl
 8023014:	9b04      	ldr	r3, [sp, #16]
 8023016:	f1ab 0b02 	sub.w	fp, fp, #2
 802301a:	0909      	lsrs	r1, r1, #4
 802301c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8023020:	9300      	str	r3, [sp, #0]
 8023022:	463b      	mov	r3, r7
 8023024:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023028:	4429      	add	r1, r5
 802302a:	f7ff ff3b 	bl	8022ea4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802302e:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023032:	f818 1b01 	ldrb.w	r1, [r8], #1
 8023036:	4650      	mov	r0, sl
 8023038:	9b04      	ldr	r3, [sp, #16]
 802303a:	f001 010f 	and.w	r1, r1, #15
 802303e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8023042:	9300      	str	r3, [sp, #0]
 8023044:	463b      	mov	r3, r7
 8023046:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802304a:	4429      	add	r1, r5
 802304c:	f7ff ff2a 	bl	8022ea4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8023050:	f824 0c02 	strh.w	r0, [r4, #-2]
 8023054:	e7d5      	b.n	8023002 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8023056:	46b0      	mov	r8, r6
 8023058:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802305c:	e7d1      	b.n	8023002 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 802305e:	d10f      	bne.n	8023080 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 8023060:	f898 1000 	ldrb.w	r1, [r8]
 8023064:	4650      	mov	r0, sl
 8023066:	9b04      	ldr	r3, [sp, #16]
 8023068:	0909      	lsrs	r1, r1, #4
 802306a:	f8b9 2000 	ldrh.w	r2, [r9]
 802306e:	9300      	str	r3, [sp, #0]
 8023070:	463b      	mov	r3, r7
 8023072:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023076:	4429      	add	r1, r5
 8023078:	f7ff ff14 	bl	8022ea4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802307c:	f829 0b02 	strh.w	r0, [r9], #2
 8023080:	9b08      	ldr	r3, [sp, #32]
 8023082:	9a05      	ldr	r2, [sp, #20]
 8023084:	881c      	ldrh	r4, [r3, #0]
 8023086:	9b03      	ldr	r3, [sp, #12]
 8023088:	1ae4      	subs	r4, r4, r3
 802308a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802308e:	4413      	add	r3, r2
 8023090:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023092:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023096:	fb93 f3f2 	sdiv	r3, r3, r2
 802309a:	441e      	add	r6, r3
 802309c:	e796      	b.n	8022fcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 802309e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80230a2:	4f46      	ldr	r7, [pc, #280]	; (80231bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80230a4:	42a3      	cmp	r3, r4
 80230a6:	d97c      	bls.n	80231a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80230a8:	9a06      	ldr	r2, [sp, #24]
 80230aa:	2a00      	cmp	r2, #0
 80230ac:	d054      	beq.n	8023158 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 80230ae:	7830      	ldrb	r0, [r6, #0]
 80230b0:	1c71      	adds	r1, r6, #1
 80230b2:	f000 000f 	and.w	r0, r0, #15
 80230b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80230ba:	eb05 0e00 	add.w	lr, r5, r0
 80230be:	5c28      	ldrb	r0, [r5, r0]
 80230c0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80230c4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80230c8:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80230cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80230d0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80230d4:	ea42 020e 	orr.w	r2, r2, lr
 80230d8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80230dc:	f824 2b02 	strh.w	r2, [r4], #2
 80230e0:	9a03      	ldr	r2, [sp, #12]
 80230e2:	f102 3eff 	add.w	lr, r2, #4294967295
 80230e6:	f1be 0f01 	cmp.w	lr, #1
 80230ea:	4620      	mov	r0, r4
 80230ec:	f104 0404 	add.w	r4, r4, #4
 80230f0:	dd36      	ble.n	8023160 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 80230f2:	7808      	ldrb	r0, [r1, #0]
 80230f4:	f1ae 0e02 	sub.w	lr, lr, #2
 80230f8:	0900      	lsrs	r0, r0, #4
 80230fa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80230fe:	eb05 0a00 	add.w	sl, r5, r0
 8023102:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023106:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802310a:	00d2      	lsls	r2, r2, #3
 802310c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023110:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023114:	ea49 0202 	orr.w	r2, r9, r2
 8023118:	f815 9000 	ldrb.w	r9, [r5, r0]
 802311c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023120:	f824 2c04 	strh.w	r2, [r4, #-4]
 8023124:	f811 0b01 	ldrb.w	r0, [r1], #1
 8023128:	f000 000f 	and.w	r0, r0, #15
 802312c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023130:	eb05 0a00 	add.w	sl, r5, r0
 8023134:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023138:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802313c:	00d2      	lsls	r2, r2, #3
 802313e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023142:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023146:	ea49 0202 	orr.w	r2, r9, r2
 802314a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802314e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023152:	f824 2c02 	strh.w	r2, [r4, #-2]
 8023156:	e7c6      	b.n	80230e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8023158:	4631      	mov	r1, r6
 802315a:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802315e:	e7c2      	b.n	80230e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8023160:	d111      	bne.n	8023186 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8023162:	7809      	ldrb	r1, [r1, #0]
 8023164:	0909      	lsrs	r1, r1, #4
 8023166:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802316a:	186c      	adds	r4, r5, r1
 802316c:	5c69      	ldrb	r1, [r5, r1]
 802316e:	78a2      	ldrb	r2, [r4, #2]
 8023170:	7864      	ldrb	r4, [r4, #1]
 8023172:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8023176:	00e4      	lsls	r4, r4, #3
 8023178:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802317c:	4322      	orrs	r2, r4
 802317e:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8023182:	f820 2b02 	strh.w	r2, [r0], #2
 8023186:	9a03      	ldr	r2, [sp, #12]
 8023188:	f8bc 4000 	ldrh.w	r4, [ip]
 802318c:	9905      	ldr	r1, [sp, #20]
 802318e:	1aa4      	subs	r4, r4, r2
 8023190:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8023194:	440a      	add	r2, r1
 8023196:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802319a:	fb92 f2f8 	sdiv	r2, r2, r8
 802319e:	4416      	add	r6, r2
 80231a0:	e780      	b.n	80230a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 80231a2:	4b04      	ldr	r3, [pc, #16]	; (80231b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80231a4:	6818      	ldr	r0, [r3, #0]
 80231a6:	6803      	ldr	r3, [r0, #0]
 80231a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80231aa:	4798      	blx	r3
 80231ac:	b00f      	add	sp, #60	; 0x3c
 80231ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231b2:	bf00      	nop
 80231b4:	24002074 	.word	0x24002074
 80231b8:	2400206e 	.word	0x2400206e
 80231bc:	fffff800 	.word	0xfffff800

080231c0 <CRC_Lock>:
 80231c0:	4a20      	ldr	r2, [pc, #128]	; (8023244 <CRC_Lock+0x84>)
 80231c2:	b530      	push	{r4, r5, lr}
 80231c4:	6813      	ldr	r3, [r2, #0]
 80231c6:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80231ca:	f24c 2540 	movw	r5, #49728	; 0xc240
 80231ce:	f023 0301 	bic.w	r3, r3, #1
 80231d2:	6013      	str	r3, [r2, #0]
 80231d4:	4b1c      	ldr	r3, [pc, #112]	; (8023248 <CRC_Lock+0x88>)
 80231d6:	681a      	ldr	r2, [r3, #0]
 80231d8:	4022      	ands	r2, r4
 80231da:	42aa      	cmp	r2, r5
 80231dc:	d005      	beq.n	80231ea <CRC_Lock+0x2a>
 80231de:	681b      	ldr	r3, [r3, #0]
 80231e0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80231e4:	4023      	ands	r3, r4
 80231e6:	4293      	cmp	r3, r2
 80231e8:	d124      	bne.n	8023234 <CRC_Lock+0x74>
 80231ea:	4b18      	ldr	r3, [pc, #96]	; (802324c <CRC_Lock+0x8c>)
 80231ec:	681b      	ldr	r3, [r3, #0]
 80231ee:	bb0b      	cbnz	r3, 8023234 <CRC_Lock+0x74>
 80231f0:	4b17      	ldr	r3, [pc, #92]	; (8023250 <CRC_Lock+0x90>)
 80231f2:	681a      	ldr	r2, [r3, #0]
 80231f4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80231f8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80231fc:	d00d      	beq.n	802321a <CRC_Lock+0x5a>
 80231fe:	681a      	ldr	r2, [r3, #0]
 8023200:	f240 4483 	movw	r4, #1155	; 0x483
 8023204:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8023208:	42a2      	cmp	r2, r4
 802320a:	d006      	beq.n	802321a <CRC_Lock+0x5a>
 802320c:	681b      	ldr	r3, [r3, #0]
 802320e:	f240 4285 	movw	r2, #1157	; 0x485
 8023212:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8023216:	4293      	cmp	r3, r2
 8023218:	d10c      	bne.n	8023234 <CRC_Lock+0x74>
 802321a:	4b0e      	ldr	r3, [pc, #56]	; (8023254 <CRC_Lock+0x94>)
 802321c:	2201      	movs	r2, #1
 802321e:	601a      	str	r2, [r3, #0]
 8023220:	681a      	ldr	r2, [r3, #0]
 8023222:	2a00      	cmp	r2, #0
 8023224:	d1fc      	bne.n	8023220 <CRC_Lock+0x60>
 8023226:	4b0c      	ldr	r3, [pc, #48]	; (8023258 <CRC_Lock+0x98>)
 8023228:	6018      	str	r0, [r3, #0]
 802322a:	6818      	ldr	r0, [r3, #0]
 802322c:	1a43      	subs	r3, r0, r1
 802322e:	4258      	negs	r0, r3
 8023230:	4158      	adcs	r0, r3
 8023232:	bd30      	pop	{r4, r5, pc}
 8023234:	4b09      	ldr	r3, [pc, #36]	; (802325c <CRC_Lock+0x9c>)
 8023236:	2201      	movs	r2, #1
 8023238:	601a      	str	r2, [r3, #0]
 802323a:	681a      	ldr	r2, [r3, #0]
 802323c:	2a00      	cmp	r2, #0
 802323e:	d1fc      	bne.n	802323a <CRC_Lock+0x7a>
 8023240:	4b07      	ldr	r3, [pc, #28]	; (8023260 <CRC_Lock+0xa0>)
 8023242:	e7f1      	b.n	8023228 <CRC_Lock+0x68>
 8023244:	e0002000 	.word	0xe0002000
 8023248:	e000ed00 	.word	0xe000ed00
 802324c:	e0042000 	.word	0xe0042000
 8023250:	5c001000 	.word	0x5c001000
 8023254:	58024c08 	.word	0x58024c08
 8023258:	58024c00 	.word	0x58024c00
 802325c:	40023008 	.word	0x40023008
 8023260:	40023000 	.word	0x40023000

08023264 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8023264:	6101      	str	r1, [r0, #16]
 8023266:	4770      	bx	lr

08023268 <_ZN8touchgfx8Gestures4tickEv>:
 8023268:	7b83      	ldrb	r3, [r0, #14]
 802326a:	b14b      	cbz	r3, 8023280 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802326c:	8903      	ldrh	r3, [r0, #8]
 802326e:	3301      	adds	r3, #1
 8023270:	b29b      	uxth	r3, r3
 8023272:	2b07      	cmp	r3, #7
 8023274:	8103      	strh	r3, [r0, #8]
 8023276:	bf81      	itttt	hi
 8023278:	2300      	movhi	r3, #0
 802327a:	8143      	strhhi	r3, [r0, #10]
 802327c:	8183      	strhhi	r3, [r0, #12]
 802327e:	7383      	strbhi	r3, [r0, #14]
 8023280:	4770      	bx	lr
	...

08023284 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8023284:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8023288:	4698      	mov	r8, r3
 802328a:	8883      	ldrh	r3, [r0, #4]
 802328c:	4604      	mov	r4, r0
 802328e:	4617      	mov	r7, r2
 8023290:	f8ad 3006 	strh.w	r3, [sp, #6]
 8023294:	eba8 0303 	sub.w	r3, r8, r3
 8023298:	4a19      	ldr	r2, [pc, #100]	; (8023300 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802329a:	460e      	mov	r6, r1
 802329c:	b21b      	sxth	r3, r3
 802329e:	88c1      	ldrh	r1, [r0, #6]
 80232a0:	9200      	str	r2, [sp, #0]
 80232a2:	2000      	movs	r0, #0
 80232a4:	2b00      	cmp	r3, #0
 80232a6:	8aa2      	ldrh	r2, [r4, #20]
 80232a8:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80232ac:	bfb8      	it	lt
 80232ae:	425b      	neglt	r3, r3
 80232b0:	f88d 0004 	strb.w	r0, [sp, #4]
 80232b4:	f8ad 1008 	strh.w	r1, [sp, #8]
 80232b8:	b21b      	sxth	r3, r3
 80232ba:	f8ad 800a 	strh.w	r8, [sp, #10]
 80232be:	f8ad 500c 	strh.w	r5, [sp, #12]
 80232c2:	4293      	cmp	r3, r2
 80232c4:	dc07      	bgt.n	80232d6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80232c6:	1a69      	subs	r1, r5, r1
 80232c8:	b209      	sxth	r1, r1
 80232ca:	2900      	cmp	r1, #0
 80232cc:	bfb8      	it	lt
 80232ce:	4249      	neglt	r1, r1
 80232d0:	b209      	sxth	r1, r1
 80232d2:	428a      	cmp	r2, r1
 80232d4:	da10      	bge.n	80232f8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80232d6:	6920      	ldr	r0, [r4, #16]
 80232d8:	4669      	mov	r1, sp
 80232da:	eba8 0606 	sub.w	r6, r8, r6
 80232de:	1bef      	subs	r7, r5, r7
 80232e0:	6803      	ldr	r3, [r0, #0]
 80232e2:	685b      	ldr	r3, [r3, #4]
 80232e4:	4798      	blx	r3
 80232e6:	2300      	movs	r3, #0
 80232e8:	2001      	movs	r0, #1
 80232ea:	8166      	strh	r6, [r4, #10]
 80232ec:	8123      	strh	r3, [r4, #8]
 80232ee:	81a7      	strh	r7, [r4, #12]
 80232f0:	f8a4 8004 	strh.w	r8, [r4, #4]
 80232f4:	80e5      	strh	r5, [r4, #6]
 80232f6:	73a0      	strb	r0, [r4, #14]
 80232f8:	b004      	add	sp, #16
 80232fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80232fe:	bf00      	nop
 8023300:	08026310 	.word	0x08026310

08023304 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8023304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023306:	461e      	mov	r6, r3
 8023308:	1e4b      	subs	r3, r1, #1
 802330a:	b085      	sub	sp, #20
 802330c:	4604      	mov	r4, r0
 802330e:	2b01      	cmp	r3, #1
 8023310:	460d      	mov	r5, r1
 8023312:	4617      	mov	r7, r2
 8023314:	d84b      	bhi.n	80233ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8023316:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802331a:	1cd3      	adds	r3, r2, #3
 802331c:	b29b      	uxth	r3, r3
 802331e:	2b06      	cmp	r3, #6
 8023320:	d916      	bls.n	8023350 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8023322:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80233c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023326:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802332a:	f8cd c004 	str.w	ip, [sp, #4]
 802332e:	f04f 0c00 	mov.w	ip, #0
 8023332:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023336:	6900      	ldr	r0, [r0, #16]
 8023338:	f8ad 100c 	strh.w	r1, [sp, #12]
 802333c:	a901      	add	r1, sp, #4
 802333e:	f88d c008 	strb.w	ip, [sp, #8]
 8023342:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023346:	f8ad 300e 	strh.w	r3, [sp, #14]
 802334a:	6803      	ldr	r3, [r0, #0]
 802334c:	689b      	ldr	r3, [r3, #8]
 802334e:	4798      	blx	r3
 8023350:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023354:	1cd3      	adds	r3, r2, #3
 8023356:	b29b      	uxth	r3, r3
 8023358:	2b06      	cmp	r3, #6
 802335a:	d916      	bls.n	802338a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802335c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80233c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023360:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8023364:	f8cd c004 	str.w	ip, [sp, #4]
 8023368:	f04f 0c01 	mov.w	ip, #1
 802336c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023370:	6920      	ldr	r0, [r4, #16]
 8023372:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023376:	a901      	add	r1, sp, #4
 8023378:	f88d c008 	strb.w	ip, [sp, #8]
 802337c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023380:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023384:	6803      	ldr	r3, [r0, #0]
 8023386:	689b      	ldr	r3, [r3, #8]
 8023388:	4798      	blx	r3
 802338a:	4b0d      	ldr	r3, [pc, #52]	; (80233c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802338c:	a901      	add	r1, sp, #4
 802338e:	6920      	ldr	r0, [r4, #16]
 8023390:	9301      	str	r3, [sp, #4]
 8023392:	2300      	movs	r3, #0
 8023394:	f88d 5008 	strb.w	r5, [sp, #8]
 8023398:	f8ad 700a 	strh.w	r7, [sp, #10]
 802339c:	f8ad 600c 	strh.w	r6, [sp, #12]
 80233a0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80233a4:	6803      	ldr	r3, [r0, #0]
 80233a6:	681b      	ldr	r3, [r3, #0]
 80233a8:	4798      	blx	r3
 80233aa:	b005      	add	sp, #20
 80233ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80233ae:	2900      	cmp	r1, #0
 80233b0:	d1eb      	bne.n	802338a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80233b2:	80a2      	strh	r2, [r4, #4]
 80233b4:	80c6      	strh	r6, [r0, #6]
 80233b6:	60a1      	str	r1, [r4, #8]
 80233b8:	81a1      	strh	r1, [r4, #12]
 80233ba:	73a1      	strb	r1, [r4, #14]
 80233bc:	e7e5      	b.n	802338a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80233be:	bf00      	nop
 80233c0:	080262fc 	.word	0x080262fc
 80233c4:	08026324 	.word	0x08026324

080233c8 <__aeabi_atexit>:
 80233c8:	460b      	mov	r3, r1
 80233ca:	4601      	mov	r1, r0
 80233cc:	4618      	mov	r0, r3
 80233ce:	f000 b90f 	b.w	80235f0 <__cxa_atexit>

080233d2 <_ZdlPvj>:
 80233d2:	f000 b812 	b.w	80233fa <_ZdlPv>

080233d6 <__cxa_guard_acquire>:
 80233d6:	6803      	ldr	r3, [r0, #0]
 80233d8:	07db      	lsls	r3, r3, #31
 80233da:	d406      	bmi.n	80233ea <__cxa_guard_acquire+0x14>
 80233dc:	7843      	ldrb	r3, [r0, #1]
 80233de:	b103      	cbz	r3, 80233e2 <__cxa_guard_acquire+0xc>
 80233e0:	deff      	udf	#255	; 0xff
 80233e2:	2301      	movs	r3, #1
 80233e4:	7043      	strb	r3, [r0, #1]
 80233e6:	4618      	mov	r0, r3
 80233e8:	4770      	bx	lr
 80233ea:	2000      	movs	r0, #0
 80233ec:	4770      	bx	lr

080233ee <__cxa_guard_release>:
 80233ee:	2301      	movs	r3, #1
 80233f0:	6003      	str	r3, [r0, #0]
 80233f2:	4770      	bx	lr

080233f4 <__cxa_pure_virtual>:
 80233f4:	b508      	push	{r3, lr}
 80233f6:	f000 f80f 	bl	8023418 <_ZSt9terminatev>

080233fa <_ZdlPv>:
 80233fa:	f000 b845 	b.w	8023488 <free>

080233fe <_ZN10__cxxabiv111__terminateEPFvvE>:
 80233fe:	b508      	push	{r3, lr}
 8023400:	4780      	blx	r0
 8023402:	f000 f80e 	bl	8023422 <abort>
	...

08023408 <_ZSt13get_terminatev>:
 8023408:	4b02      	ldr	r3, [pc, #8]	; (8023414 <_ZSt13get_terminatev+0xc>)
 802340a:	6818      	ldr	r0, [r3, #0]
 802340c:	f3bf 8f5b 	dmb	ish
 8023410:	4770      	bx	lr
 8023412:	bf00      	nop
 8023414:	24000094 	.word	0x24000094

08023418 <_ZSt9terminatev>:
 8023418:	b508      	push	{r3, lr}
 802341a:	f7ff fff5 	bl	8023408 <_ZSt13get_terminatev>
 802341e:	f7ff ffee 	bl	80233fe <_ZN10__cxxabiv111__terminateEPFvvE>

08023422 <abort>:
 8023422:	b508      	push	{r3, lr}
 8023424:	2006      	movs	r0, #6
 8023426:	f000 fa39 	bl	802389c <raise>
 802342a:	2001      	movs	r0, #1
 802342c:	f7de f95a 	bl	80016e4 <_exit>

08023430 <__assert_func>:
 8023430:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023432:	4614      	mov	r4, r2
 8023434:	461a      	mov	r2, r3
 8023436:	4b09      	ldr	r3, [pc, #36]	; (802345c <__assert_func+0x2c>)
 8023438:	681b      	ldr	r3, [r3, #0]
 802343a:	4605      	mov	r5, r0
 802343c:	68d8      	ldr	r0, [r3, #12]
 802343e:	b14c      	cbz	r4, 8023454 <__assert_func+0x24>
 8023440:	4b07      	ldr	r3, [pc, #28]	; (8023460 <__assert_func+0x30>)
 8023442:	9100      	str	r1, [sp, #0]
 8023444:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8023448:	4906      	ldr	r1, [pc, #24]	; (8023464 <__assert_func+0x34>)
 802344a:	462b      	mov	r3, r5
 802344c:	f000 f982 	bl	8023754 <fiprintf>
 8023450:	f7ff ffe7 	bl	8023422 <abort>
 8023454:	4b04      	ldr	r3, [pc, #16]	; (8023468 <__assert_func+0x38>)
 8023456:	461c      	mov	r4, r3
 8023458:	e7f3      	b.n	8023442 <__assert_func+0x12>
 802345a:	bf00      	nop
 802345c:	240000f0 	.word	0x240000f0
 8023460:	08026640 	.word	0x08026640
 8023464:	0802664d 	.word	0x0802664d
 8023468:	0802667b 	.word	0x0802667b

0802346c <atexit>:
 802346c:	2300      	movs	r3, #0
 802346e:	4601      	mov	r1, r0
 8023470:	461a      	mov	r2, r3
 8023472:	4618      	mov	r0, r3
 8023474:	f000 bac0 	b.w	80239f8 <__register_exitproc>

08023478 <malloc>:
 8023478:	4b02      	ldr	r3, [pc, #8]	; (8023484 <malloc+0xc>)
 802347a:	4601      	mov	r1, r0
 802347c:	6818      	ldr	r0, [r3, #0]
 802347e:	f000 b82b 	b.w	80234d8 <_malloc_r>
 8023482:	bf00      	nop
 8023484:	240000f0 	.word	0x240000f0

08023488 <free>:
 8023488:	4b02      	ldr	r3, [pc, #8]	; (8023494 <free+0xc>)
 802348a:	4601      	mov	r1, r0
 802348c:	6818      	ldr	r0, [r3, #0]
 802348e:	f000 bb11 	b.w	8023ab4 <_free_r>
 8023492:	bf00      	nop
 8023494:	240000f0 	.word	0x240000f0

08023498 <sbrk_aligned>:
 8023498:	b570      	push	{r4, r5, r6, lr}
 802349a:	4e0e      	ldr	r6, [pc, #56]	; (80234d4 <sbrk_aligned+0x3c>)
 802349c:	460c      	mov	r4, r1
 802349e:	6831      	ldr	r1, [r6, #0]
 80234a0:	4605      	mov	r5, r0
 80234a2:	b911      	cbnz	r1, 80234aa <sbrk_aligned+0x12>
 80234a4:	f000 fa4a 	bl	802393c <_sbrk_r>
 80234a8:	6030      	str	r0, [r6, #0]
 80234aa:	4621      	mov	r1, r4
 80234ac:	4628      	mov	r0, r5
 80234ae:	f000 fa45 	bl	802393c <_sbrk_r>
 80234b2:	1c43      	adds	r3, r0, #1
 80234b4:	d00a      	beq.n	80234cc <sbrk_aligned+0x34>
 80234b6:	1cc4      	adds	r4, r0, #3
 80234b8:	f024 0403 	bic.w	r4, r4, #3
 80234bc:	42a0      	cmp	r0, r4
 80234be:	d007      	beq.n	80234d0 <sbrk_aligned+0x38>
 80234c0:	1a21      	subs	r1, r4, r0
 80234c2:	4628      	mov	r0, r5
 80234c4:	f000 fa3a 	bl	802393c <_sbrk_r>
 80234c8:	3001      	adds	r0, #1
 80234ca:	d101      	bne.n	80234d0 <sbrk_aligned+0x38>
 80234cc:	f04f 34ff 	mov.w	r4, #4294967295
 80234d0:	4620      	mov	r0, r4
 80234d2:	bd70      	pop	{r4, r5, r6, pc}
 80234d4:	240029c4 	.word	0x240029c4

080234d8 <_malloc_r>:
 80234d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80234dc:	1ccd      	adds	r5, r1, #3
 80234de:	f025 0503 	bic.w	r5, r5, #3
 80234e2:	3508      	adds	r5, #8
 80234e4:	2d0c      	cmp	r5, #12
 80234e6:	bf38      	it	cc
 80234e8:	250c      	movcc	r5, #12
 80234ea:	2d00      	cmp	r5, #0
 80234ec:	4607      	mov	r7, r0
 80234ee:	db01      	blt.n	80234f4 <_malloc_r+0x1c>
 80234f0:	42a9      	cmp	r1, r5
 80234f2:	d905      	bls.n	8023500 <_malloc_r+0x28>
 80234f4:	230c      	movs	r3, #12
 80234f6:	603b      	str	r3, [r7, #0]
 80234f8:	2600      	movs	r6, #0
 80234fa:	4630      	mov	r0, r6
 80234fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023500:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80235d4 <_malloc_r+0xfc>
 8023504:	f000 f868 	bl	80235d8 <__malloc_lock>
 8023508:	f8d8 3000 	ldr.w	r3, [r8]
 802350c:	461c      	mov	r4, r3
 802350e:	bb5c      	cbnz	r4, 8023568 <_malloc_r+0x90>
 8023510:	4629      	mov	r1, r5
 8023512:	4638      	mov	r0, r7
 8023514:	f7ff ffc0 	bl	8023498 <sbrk_aligned>
 8023518:	1c43      	adds	r3, r0, #1
 802351a:	4604      	mov	r4, r0
 802351c:	d155      	bne.n	80235ca <_malloc_r+0xf2>
 802351e:	f8d8 4000 	ldr.w	r4, [r8]
 8023522:	4626      	mov	r6, r4
 8023524:	2e00      	cmp	r6, #0
 8023526:	d145      	bne.n	80235b4 <_malloc_r+0xdc>
 8023528:	2c00      	cmp	r4, #0
 802352a:	d048      	beq.n	80235be <_malloc_r+0xe6>
 802352c:	6823      	ldr	r3, [r4, #0]
 802352e:	4631      	mov	r1, r6
 8023530:	4638      	mov	r0, r7
 8023532:	eb04 0903 	add.w	r9, r4, r3
 8023536:	f000 fa01 	bl	802393c <_sbrk_r>
 802353a:	4581      	cmp	r9, r0
 802353c:	d13f      	bne.n	80235be <_malloc_r+0xe6>
 802353e:	6821      	ldr	r1, [r4, #0]
 8023540:	1a6d      	subs	r5, r5, r1
 8023542:	4629      	mov	r1, r5
 8023544:	4638      	mov	r0, r7
 8023546:	f7ff ffa7 	bl	8023498 <sbrk_aligned>
 802354a:	3001      	adds	r0, #1
 802354c:	d037      	beq.n	80235be <_malloc_r+0xe6>
 802354e:	6823      	ldr	r3, [r4, #0]
 8023550:	442b      	add	r3, r5
 8023552:	6023      	str	r3, [r4, #0]
 8023554:	f8d8 3000 	ldr.w	r3, [r8]
 8023558:	2b00      	cmp	r3, #0
 802355a:	d038      	beq.n	80235ce <_malloc_r+0xf6>
 802355c:	685a      	ldr	r2, [r3, #4]
 802355e:	42a2      	cmp	r2, r4
 8023560:	d12b      	bne.n	80235ba <_malloc_r+0xe2>
 8023562:	2200      	movs	r2, #0
 8023564:	605a      	str	r2, [r3, #4]
 8023566:	e00f      	b.n	8023588 <_malloc_r+0xb0>
 8023568:	6822      	ldr	r2, [r4, #0]
 802356a:	1b52      	subs	r2, r2, r5
 802356c:	d41f      	bmi.n	80235ae <_malloc_r+0xd6>
 802356e:	2a0b      	cmp	r2, #11
 8023570:	d917      	bls.n	80235a2 <_malloc_r+0xca>
 8023572:	1961      	adds	r1, r4, r5
 8023574:	42a3      	cmp	r3, r4
 8023576:	6025      	str	r5, [r4, #0]
 8023578:	bf18      	it	ne
 802357a:	6059      	strne	r1, [r3, #4]
 802357c:	6863      	ldr	r3, [r4, #4]
 802357e:	bf08      	it	eq
 8023580:	f8c8 1000 	streq.w	r1, [r8]
 8023584:	5162      	str	r2, [r4, r5]
 8023586:	604b      	str	r3, [r1, #4]
 8023588:	4638      	mov	r0, r7
 802358a:	f104 060b 	add.w	r6, r4, #11
 802358e:	f000 f829 	bl	80235e4 <__malloc_unlock>
 8023592:	f026 0607 	bic.w	r6, r6, #7
 8023596:	1d23      	adds	r3, r4, #4
 8023598:	1af2      	subs	r2, r6, r3
 802359a:	d0ae      	beq.n	80234fa <_malloc_r+0x22>
 802359c:	1b9b      	subs	r3, r3, r6
 802359e:	50a3      	str	r3, [r4, r2]
 80235a0:	e7ab      	b.n	80234fa <_malloc_r+0x22>
 80235a2:	42a3      	cmp	r3, r4
 80235a4:	6862      	ldr	r2, [r4, #4]
 80235a6:	d1dd      	bne.n	8023564 <_malloc_r+0x8c>
 80235a8:	f8c8 2000 	str.w	r2, [r8]
 80235ac:	e7ec      	b.n	8023588 <_malloc_r+0xb0>
 80235ae:	4623      	mov	r3, r4
 80235b0:	6864      	ldr	r4, [r4, #4]
 80235b2:	e7ac      	b.n	802350e <_malloc_r+0x36>
 80235b4:	4634      	mov	r4, r6
 80235b6:	6876      	ldr	r6, [r6, #4]
 80235b8:	e7b4      	b.n	8023524 <_malloc_r+0x4c>
 80235ba:	4613      	mov	r3, r2
 80235bc:	e7cc      	b.n	8023558 <_malloc_r+0x80>
 80235be:	230c      	movs	r3, #12
 80235c0:	603b      	str	r3, [r7, #0]
 80235c2:	4638      	mov	r0, r7
 80235c4:	f000 f80e 	bl	80235e4 <__malloc_unlock>
 80235c8:	e797      	b.n	80234fa <_malloc_r+0x22>
 80235ca:	6025      	str	r5, [r4, #0]
 80235cc:	e7dc      	b.n	8023588 <_malloc_r+0xb0>
 80235ce:	605b      	str	r3, [r3, #4]
 80235d0:	deff      	udf	#255	; 0xff
 80235d2:	bf00      	nop
 80235d4:	240029c0 	.word	0x240029c0

080235d8 <__malloc_lock>:
 80235d8:	4801      	ldr	r0, [pc, #4]	; (80235e0 <__malloc_lock+0x8>)
 80235da:	f000 b9fc 	b.w	80239d6 <__retarget_lock_acquire_recursive>
 80235de:	bf00      	nop
 80235e0:	24002b09 	.word	0x24002b09

080235e4 <__malloc_unlock>:
 80235e4:	4801      	ldr	r0, [pc, #4]	; (80235ec <__malloc_unlock+0x8>)
 80235e6:	f000 b9f7 	b.w	80239d8 <__retarget_lock_release_recursive>
 80235ea:	bf00      	nop
 80235ec:	24002b09 	.word	0x24002b09

080235f0 <__cxa_atexit>:
 80235f0:	b510      	push	{r4, lr}
 80235f2:	4c05      	ldr	r4, [pc, #20]	; (8023608 <__cxa_atexit+0x18>)
 80235f4:	4613      	mov	r3, r2
 80235f6:	b12c      	cbz	r4, 8023604 <__cxa_atexit+0x14>
 80235f8:	460a      	mov	r2, r1
 80235fa:	4601      	mov	r1, r0
 80235fc:	2002      	movs	r0, #2
 80235fe:	f000 f9fb 	bl	80239f8 <__register_exitproc>
 8023602:	bd10      	pop	{r4, pc}
 8023604:	4620      	mov	r0, r4
 8023606:	e7fc      	b.n	8023602 <__cxa_atexit+0x12>
 8023608:	080239f9 	.word	0x080239f9

0802360c <std>:
 802360c:	2300      	movs	r3, #0
 802360e:	b510      	push	{r4, lr}
 8023610:	4604      	mov	r4, r0
 8023612:	e9c0 3300 	strd	r3, r3, [r0]
 8023616:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802361a:	6083      	str	r3, [r0, #8]
 802361c:	8181      	strh	r1, [r0, #12]
 802361e:	6643      	str	r3, [r0, #100]	; 0x64
 8023620:	81c2      	strh	r2, [r0, #14]
 8023622:	6183      	str	r3, [r0, #24]
 8023624:	4619      	mov	r1, r3
 8023626:	2208      	movs	r2, #8
 8023628:	305c      	adds	r0, #92	; 0x5c
 802362a:	f000 f906 	bl	802383a <memset>
 802362e:	4b0d      	ldr	r3, [pc, #52]	; (8023664 <std+0x58>)
 8023630:	6263      	str	r3, [r4, #36]	; 0x24
 8023632:	4b0d      	ldr	r3, [pc, #52]	; (8023668 <std+0x5c>)
 8023634:	62a3      	str	r3, [r4, #40]	; 0x28
 8023636:	4b0d      	ldr	r3, [pc, #52]	; (802366c <std+0x60>)
 8023638:	62e3      	str	r3, [r4, #44]	; 0x2c
 802363a:	4b0d      	ldr	r3, [pc, #52]	; (8023670 <std+0x64>)
 802363c:	6323      	str	r3, [r4, #48]	; 0x30
 802363e:	4b0d      	ldr	r3, [pc, #52]	; (8023674 <std+0x68>)
 8023640:	6224      	str	r4, [r4, #32]
 8023642:	429c      	cmp	r4, r3
 8023644:	d006      	beq.n	8023654 <std+0x48>
 8023646:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802364a:	4294      	cmp	r4, r2
 802364c:	d002      	beq.n	8023654 <std+0x48>
 802364e:	33d0      	adds	r3, #208	; 0xd0
 8023650:	429c      	cmp	r4, r3
 8023652:	d105      	bne.n	8023660 <std+0x54>
 8023654:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8023658:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802365c:	f000 b9ba 	b.w	80239d4 <__retarget_lock_init_recursive>
 8023660:	bd10      	pop	{r4, pc}
 8023662:	bf00      	nop
 8023664:	080237b5 	.word	0x080237b5
 8023668:	080237d7 	.word	0x080237d7
 802366c:	0802380f 	.word	0x0802380f
 8023670:	08023833 	.word	0x08023833
 8023674:	240029c8 	.word	0x240029c8

08023678 <stdio_exit_handler>:
 8023678:	4a02      	ldr	r2, [pc, #8]	; (8023684 <stdio_exit_handler+0xc>)
 802367a:	4903      	ldr	r1, [pc, #12]	; (8023688 <stdio_exit_handler+0x10>)
 802367c:	4803      	ldr	r0, [pc, #12]	; (802368c <stdio_exit_handler+0x14>)
 802367e:	f000 b87b 	b.w	8023778 <_fwalk_sglue>
 8023682:	bf00      	nop
 8023684:	24000098 	.word	0x24000098
 8023688:	08024201 	.word	0x08024201
 802368c:	240000a4 	.word	0x240000a4

08023690 <cleanup_stdio>:
 8023690:	6841      	ldr	r1, [r0, #4]
 8023692:	4b0c      	ldr	r3, [pc, #48]	; (80236c4 <cleanup_stdio+0x34>)
 8023694:	4299      	cmp	r1, r3
 8023696:	b510      	push	{r4, lr}
 8023698:	4604      	mov	r4, r0
 802369a:	d001      	beq.n	80236a0 <cleanup_stdio+0x10>
 802369c:	f000 fdb0 	bl	8024200 <_fflush_r>
 80236a0:	68a1      	ldr	r1, [r4, #8]
 80236a2:	4b09      	ldr	r3, [pc, #36]	; (80236c8 <cleanup_stdio+0x38>)
 80236a4:	4299      	cmp	r1, r3
 80236a6:	d002      	beq.n	80236ae <cleanup_stdio+0x1e>
 80236a8:	4620      	mov	r0, r4
 80236aa:	f000 fda9 	bl	8024200 <_fflush_r>
 80236ae:	68e1      	ldr	r1, [r4, #12]
 80236b0:	4b06      	ldr	r3, [pc, #24]	; (80236cc <cleanup_stdio+0x3c>)
 80236b2:	4299      	cmp	r1, r3
 80236b4:	d004      	beq.n	80236c0 <cleanup_stdio+0x30>
 80236b6:	4620      	mov	r0, r4
 80236b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80236bc:	f000 bda0 	b.w	8024200 <_fflush_r>
 80236c0:	bd10      	pop	{r4, pc}
 80236c2:	bf00      	nop
 80236c4:	240029c8 	.word	0x240029c8
 80236c8:	24002a30 	.word	0x24002a30
 80236cc:	24002a98 	.word	0x24002a98

080236d0 <global_stdio_init.part.0>:
 80236d0:	b510      	push	{r4, lr}
 80236d2:	4b0b      	ldr	r3, [pc, #44]	; (8023700 <global_stdio_init.part.0+0x30>)
 80236d4:	4c0b      	ldr	r4, [pc, #44]	; (8023704 <global_stdio_init.part.0+0x34>)
 80236d6:	4a0c      	ldr	r2, [pc, #48]	; (8023708 <global_stdio_init.part.0+0x38>)
 80236d8:	601a      	str	r2, [r3, #0]
 80236da:	4620      	mov	r0, r4
 80236dc:	2200      	movs	r2, #0
 80236de:	2104      	movs	r1, #4
 80236e0:	f7ff ff94 	bl	802360c <std>
 80236e4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80236e8:	2201      	movs	r2, #1
 80236ea:	2109      	movs	r1, #9
 80236ec:	f7ff ff8e 	bl	802360c <std>
 80236f0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80236f4:	2202      	movs	r2, #2
 80236f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80236fa:	2112      	movs	r1, #18
 80236fc:	f7ff bf86 	b.w	802360c <std>
 8023700:	24002b00 	.word	0x24002b00
 8023704:	240029c8 	.word	0x240029c8
 8023708:	08023679 	.word	0x08023679

0802370c <__sfp_lock_acquire>:
 802370c:	4801      	ldr	r0, [pc, #4]	; (8023714 <__sfp_lock_acquire+0x8>)
 802370e:	f000 b962 	b.w	80239d6 <__retarget_lock_acquire_recursive>
 8023712:	bf00      	nop
 8023714:	24002b0a 	.word	0x24002b0a

08023718 <__sfp_lock_release>:
 8023718:	4801      	ldr	r0, [pc, #4]	; (8023720 <__sfp_lock_release+0x8>)
 802371a:	f000 b95d 	b.w	80239d8 <__retarget_lock_release_recursive>
 802371e:	bf00      	nop
 8023720:	24002b0a 	.word	0x24002b0a

08023724 <__sinit>:
 8023724:	b510      	push	{r4, lr}
 8023726:	4604      	mov	r4, r0
 8023728:	f7ff fff0 	bl	802370c <__sfp_lock_acquire>
 802372c:	6a23      	ldr	r3, [r4, #32]
 802372e:	b11b      	cbz	r3, 8023738 <__sinit+0x14>
 8023730:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023734:	f7ff bff0 	b.w	8023718 <__sfp_lock_release>
 8023738:	4b04      	ldr	r3, [pc, #16]	; (802374c <__sinit+0x28>)
 802373a:	6223      	str	r3, [r4, #32]
 802373c:	4b04      	ldr	r3, [pc, #16]	; (8023750 <__sinit+0x2c>)
 802373e:	681b      	ldr	r3, [r3, #0]
 8023740:	2b00      	cmp	r3, #0
 8023742:	d1f5      	bne.n	8023730 <__sinit+0xc>
 8023744:	f7ff ffc4 	bl	80236d0 <global_stdio_init.part.0>
 8023748:	e7f2      	b.n	8023730 <__sinit+0xc>
 802374a:	bf00      	nop
 802374c:	08023691 	.word	0x08023691
 8023750:	24002b00 	.word	0x24002b00

08023754 <fiprintf>:
 8023754:	b40e      	push	{r1, r2, r3}
 8023756:	b503      	push	{r0, r1, lr}
 8023758:	4601      	mov	r1, r0
 802375a:	ab03      	add	r3, sp, #12
 802375c:	4805      	ldr	r0, [pc, #20]	; (8023774 <fiprintf+0x20>)
 802375e:	f853 2b04 	ldr.w	r2, [r3], #4
 8023762:	6800      	ldr	r0, [r0, #0]
 8023764:	9301      	str	r3, [sp, #4]
 8023766:	f000 fa1b 	bl	8023ba0 <_vfiprintf_r>
 802376a:	b002      	add	sp, #8
 802376c:	f85d eb04 	ldr.w	lr, [sp], #4
 8023770:	b003      	add	sp, #12
 8023772:	4770      	bx	lr
 8023774:	240000f0 	.word	0x240000f0

08023778 <_fwalk_sglue>:
 8023778:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802377c:	4607      	mov	r7, r0
 802377e:	4688      	mov	r8, r1
 8023780:	4614      	mov	r4, r2
 8023782:	2600      	movs	r6, #0
 8023784:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8023788:	f1b9 0901 	subs.w	r9, r9, #1
 802378c:	d505      	bpl.n	802379a <_fwalk_sglue+0x22>
 802378e:	6824      	ldr	r4, [r4, #0]
 8023790:	2c00      	cmp	r4, #0
 8023792:	d1f7      	bne.n	8023784 <_fwalk_sglue+0xc>
 8023794:	4630      	mov	r0, r6
 8023796:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802379a:	89ab      	ldrh	r3, [r5, #12]
 802379c:	2b01      	cmp	r3, #1
 802379e:	d907      	bls.n	80237b0 <_fwalk_sglue+0x38>
 80237a0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80237a4:	3301      	adds	r3, #1
 80237a6:	d003      	beq.n	80237b0 <_fwalk_sglue+0x38>
 80237a8:	4629      	mov	r1, r5
 80237aa:	4638      	mov	r0, r7
 80237ac:	47c0      	blx	r8
 80237ae:	4306      	orrs	r6, r0
 80237b0:	3568      	adds	r5, #104	; 0x68
 80237b2:	e7e9      	b.n	8023788 <_fwalk_sglue+0x10>

080237b4 <__sread>:
 80237b4:	b510      	push	{r4, lr}
 80237b6:	460c      	mov	r4, r1
 80237b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80237bc:	f000 f898 	bl	80238f0 <_read_r>
 80237c0:	2800      	cmp	r0, #0
 80237c2:	bfab      	itete	ge
 80237c4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80237c6:	89a3      	ldrhlt	r3, [r4, #12]
 80237c8:	181b      	addge	r3, r3, r0
 80237ca:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80237ce:	bfac      	ite	ge
 80237d0:	6563      	strge	r3, [r4, #84]	; 0x54
 80237d2:	81a3      	strhlt	r3, [r4, #12]
 80237d4:	bd10      	pop	{r4, pc}

080237d6 <__swrite>:
 80237d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80237da:	461f      	mov	r7, r3
 80237dc:	898b      	ldrh	r3, [r1, #12]
 80237de:	05db      	lsls	r3, r3, #23
 80237e0:	4605      	mov	r5, r0
 80237e2:	460c      	mov	r4, r1
 80237e4:	4616      	mov	r6, r2
 80237e6:	d505      	bpl.n	80237f4 <__swrite+0x1e>
 80237e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80237ec:	2302      	movs	r3, #2
 80237ee:	2200      	movs	r2, #0
 80237f0:	f000 f86c 	bl	80238cc <_lseek_r>
 80237f4:	89a3      	ldrh	r3, [r4, #12]
 80237f6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80237fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80237fe:	81a3      	strh	r3, [r4, #12]
 8023800:	4632      	mov	r2, r6
 8023802:	463b      	mov	r3, r7
 8023804:	4628      	mov	r0, r5
 8023806:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802380a:	f000 b8a7 	b.w	802395c <_write_r>

0802380e <__sseek>:
 802380e:	b510      	push	{r4, lr}
 8023810:	460c      	mov	r4, r1
 8023812:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023816:	f000 f859 	bl	80238cc <_lseek_r>
 802381a:	1c43      	adds	r3, r0, #1
 802381c:	89a3      	ldrh	r3, [r4, #12]
 802381e:	bf15      	itete	ne
 8023820:	6560      	strne	r0, [r4, #84]	; 0x54
 8023822:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8023826:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802382a:	81a3      	strheq	r3, [r4, #12]
 802382c:	bf18      	it	ne
 802382e:	81a3      	strhne	r3, [r4, #12]
 8023830:	bd10      	pop	{r4, pc}

08023832 <__sclose>:
 8023832:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023836:	f000 b839 	b.w	80238ac <_close_r>

0802383a <memset>:
 802383a:	4402      	add	r2, r0
 802383c:	4603      	mov	r3, r0
 802383e:	4293      	cmp	r3, r2
 8023840:	d100      	bne.n	8023844 <memset+0xa>
 8023842:	4770      	bx	lr
 8023844:	f803 1b01 	strb.w	r1, [r3], #1
 8023848:	e7f9      	b.n	802383e <memset+0x4>

0802384a <_raise_r>:
 802384a:	291f      	cmp	r1, #31
 802384c:	b538      	push	{r3, r4, r5, lr}
 802384e:	4604      	mov	r4, r0
 8023850:	460d      	mov	r5, r1
 8023852:	d904      	bls.n	802385e <_raise_r+0x14>
 8023854:	2316      	movs	r3, #22
 8023856:	6003      	str	r3, [r0, #0]
 8023858:	f04f 30ff 	mov.w	r0, #4294967295
 802385c:	bd38      	pop	{r3, r4, r5, pc}
 802385e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8023860:	b112      	cbz	r2, 8023868 <_raise_r+0x1e>
 8023862:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8023866:	b94b      	cbnz	r3, 802387c <_raise_r+0x32>
 8023868:	4620      	mov	r0, r4
 802386a:	f000 f865 	bl	8023938 <_getpid_r>
 802386e:	462a      	mov	r2, r5
 8023870:	4601      	mov	r1, r0
 8023872:	4620      	mov	r0, r4
 8023874:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023878:	f000 b84c 	b.w	8023914 <_kill_r>
 802387c:	2b01      	cmp	r3, #1
 802387e:	d00a      	beq.n	8023896 <_raise_r+0x4c>
 8023880:	1c59      	adds	r1, r3, #1
 8023882:	d103      	bne.n	802388c <_raise_r+0x42>
 8023884:	2316      	movs	r3, #22
 8023886:	6003      	str	r3, [r0, #0]
 8023888:	2001      	movs	r0, #1
 802388a:	e7e7      	b.n	802385c <_raise_r+0x12>
 802388c:	2400      	movs	r4, #0
 802388e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8023892:	4628      	mov	r0, r5
 8023894:	4798      	blx	r3
 8023896:	2000      	movs	r0, #0
 8023898:	e7e0      	b.n	802385c <_raise_r+0x12>
	...

0802389c <raise>:
 802389c:	4b02      	ldr	r3, [pc, #8]	; (80238a8 <raise+0xc>)
 802389e:	4601      	mov	r1, r0
 80238a0:	6818      	ldr	r0, [r3, #0]
 80238a2:	f7ff bfd2 	b.w	802384a <_raise_r>
 80238a6:	bf00      	nop
 80238a8:	240000f0 	.word	0x240000f0

080238ac <_close_r>:
 80238ac:	b538      	push	{r3, r4, r5, lr}
 80238ae:	4d06      	ldr	r5, [pc, #24]	; (80238c8 <_close_r+0x1c>)
 80238b0:	2300      	movs	r3, #0
 80238b2:	4604      	mov	r4, r0
 80238b4:	4608      	mov	r0, r1
 80238b6:	602b      	str	r3, [r5, #0]
 80238b8:	f7dd ff57 	bl	800176a <_close>
 80238bc:	1c43      	adds	r3, r0, #1
 80238be:	d102      	bne.n	80238c6 <_close_r+0x1a>
 80238c0:	682b      	ldr	r3, [r5, #0]
 80238c2:	b103      	cbz	r3, 80238c6 <_close_r+0x1a>
 80238c4:	6023      	str	r3, [r4, #0]
 80238c6:	bd38      	pop	{r3, r4, r5, pc}
 80238c8:	24002b04 	.word	0x24002b04

080238cc <_lseek_r>:
 80238cc:	b538      	push	{r3, r4, r5, lr}
 80238ce:	4d07      	ldr	r5, [pc, #28]	; (80238ec <_lseek_r+0x20>)
 80238d0:	4604      	mov	r4, r0
 80238d2:	4608      	mov	r0, r1
 80238d4:	4611      	mov	r1, r2
 80238d6:	2200      	movs	r2, #0
 80238d8:	602a      	str	r2, [r5, #0]
 80238da:	461a      	mov	r2, r3
 80238dc:	f7dd ff6c 	bl	80017b8 <_lseek>
 80238e0:	1c43      	adds	r3, r0, #1
 80238e2:	d102      	bne.n	80238ea <_lseek_r+0x1e>
 80238e4:	682b      	ldr	r3, [r5, #0]
 80238e6:	b103      	cbz	r3, 80238ea <_lseek_r+0x1e>
 80238e8:	6023      	str	r3, [r4, #0]
 80238ea:	bd38      	pop	{r3, r4, r5, pc}
 80238ec:	24002b04 	.word	0x24002b04

080238f0 <_read_r>:
 80238f0:	b538      	push	{r3, r4, r5, lr}
 80238f2:	4d07      	ldr	r5, [pc, #28]	; (8023910 <_read_r+0x20>)
 80238f4:	4604      	mov	r4, r0
 80238f6:	4608      	mov	r0, r1
 80238f8:	4611      	mov	r1, r2
 80238fa:	2200      	movs	r2, #0
 80238fc:	602a      	str	r2, [r5, #0]
 80238fe:	461a      	mov	r2, r3
 8023900:	f7dd fefa 	bl	80016f8 <_read>
 8023904:	1c43      	adds	r3, r0, #1
 8023906:	d102      	bne.n	802390e <_read_r+0x1e>
 8023908:	682b      	ldr	r3, [r5, #0]
 802390a:	b103      	cbz	r3, 802390e <_read_r+0x1e>
 802390c:	6023      	str	r3, [r4, #0]
 802390e:	bd38      	pop	{r3, r4, r5, pc}
 8023910:	24002b04 	.word	0x24002b04

08023914 <_kill_r>:
 8023914:	b538      	push	{r3, r4, r5, lr}
 8023916:	4d07      	ldr	r5, [pc, #28]	; (8023934 <_kill_r+0x20>)
 8023918:	2300      	movs	r3, #0
 802391a:	4604      	mov	r4, r0
 802391c:	4608      	mov	r0, r1
 802391e:	4611      	mov	r1, r2
 8023920:	602b      	str	r3, [r5, #0]
 8023922:	f7dd fecf 	bl	80016c4 <_kill>
 8023926:	1c43      	adds	r3, r0, #1
 8023928:	d102      	bne.n	8023930 <_kill_r+0x1c>
 802392a:	682b      	ldr	r3, [r5, #0]
 802392c:	b103      	cbz	r3, 8023930 <_kill_r+0x1c>
 802392e:	6023      	str	r3, [r4, #0]
 8023930:	bd38      	pop	{r3, r4, r5, pc}
 8023932:	bf00      	nop
 8023934:	24002b04 	.word	0x24002b04

08023938 <_getpid_r>:
 8023938:	f7dd bebc 	b.w	80016b4 <_getpid>

0802393c <_sbrk_r>:
 802393c:	b538      	push	{r3, r4, r5, lr}
 802393e:	4d06      	ldr	r5, [pc, #24]	; (8023958 <_sbrk_r+0x1c>)
 8023940:	2300      	movs	r3, #0
 8023942:	4604      	mov	r4, r0
 8023944:	4608      	mov	r0, r1
 8023946:	602b      	str	r3, [r5, #0]
 8023948:	f7dd ff44 	bl	80017d4 <_sbrk>
 802394c:	1c43      	adds	r3, r0, #1
 802394e:	d102      	bne.n	8023956 <_sbrk_r+0x1a>
 8023950:	682b      	ldr	r3, [r5, #0]
 8023952:	b103      	cbz	r3, 8023956 <_sbrk_r+0x1a>
 8023954:	6023      	str	r3, [r4, #0]
 8023956:	bd38      	pop	{r3, r4, r5, pc}
 8023958:	24002b04 	.word	0x24002b04

0802395c <_write_r>:
 802395c:	b538      	push	{r3, r4, r5, lr}
 802395e:	4d07      	ldr	r5, [pc, #28]	; (802397c <_write_r+0x20>)
 8023960:	4604      	mov	r4, r0
 8023962:	4608      	mov	r0, r1
 8023964:	4611      	mov	r1, r2
 8023966:	2200      	movs	r2, #0
 8023968:	602a      	str	r2, [r5, #0]
 802396a:	461a      	mov	r2, r3
 802396c:	f7dd fee1 	bl	8001732 <_write>
 8023970:	1c43      	adds	r3, r0, #1
 8023972:	d102      	bne.n	802397a <_write_r+0x1e>
 8023974:	682b      	ldr	r3, [r5, #0]
 8023976:	b103      	cbz	r3, 802397a <_write_r+0x1e>
 8023978:	6023      	str	r3, [r4, #0]
 802397a:	bd38      	pop	{r3, r4, r5, pc}
 802397c:	24002b04 	.word	0x24002b04

08023980 <__errno>:
 8023980:	4b01      	ldr	r3, [pc, #4]	; (8023988 <__errno+0x8>)
 8023982:	6818      	ldr	r0, [r3, #0]
 8023984:	4770      	bx	lr
 8023986:	bf00      	nop
 8023988:	240000f0 	.word	0x240000f0

0802398c <__libc_init_array>:
 802398c:	b570      	push	{r4, r5, r6, lr}
 802398e:	4d0d      	ldr	r5, [pc, #52]	; (80239c4 <__libc_init_array+0x38>)
 8023990:	4c0d      	ldr	r4, [pc, #52]	; (80239c8 <__libc_init_array+0x3c>)
 8023992:	1b64      	subs	r4, r4, r5
 8023994:	10a4      	asrs	r4, r4, #2
 8023996:	2600      	movs	r6, #0
 8023998:	42a6      	cmp	r6, r4
 802399a:	d109      	bne.n	80239b0 <__libc_init_array+0x24>
 802399c:	4d0b      	ldr	r5, [pc, #44]	; (80239cc <__libc_init_array+0x40>)
 802399e:	4c0c      	ldr	r4, [pc, #48]	; (80239d0 <__libc_init_array+0x44>)
 80239a0:	f000 fd70 	bl	8024484 <_init>
 80239a4:	1b64      	subs	r4, r4, r5
 80239a6:	10a4      	asrs	r4, r4, #2
 80239a8:	2600      	movs	r6, #0
 80239aa:	42a6      	cmp	r6, r4
 80239ac:	d105      	bne.n	80239ba <__libc_init_array+0x2e>
 80239ae:	bd70      	pop	{r4, r5, r6, pc}
 80239b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80239b4:	4798      	blx	r3
 80239b6:	3601      	adds	r6, #1
 80239b8:	e7ee      	b.n	8023998 <__libc_init_array+0xc>
 80239ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80239be:	4798      	blx	r3
 80239c0:	3601      	adds	r6, #1
 80239c2:	e7f2      	b.n	80239aa <__libc_init_array+0x1e>
 80239c4:	08043e34 	.word	0x08043e34
 80239c8:	08043e34 	.word	0x08043e34
 80239cc:	08043e34 	.word	0x08043e34
 80239d0:	08043e4c 	.word	0x08043e4c

080239d4 <__retarget_lock_init_recursive>:
 80239d4:	4770      	bx	lr

080239d6 <__retarget_lock_acquire_recursive>:
 80239d6:	4770      	bx	lr

080239d8 <__retarget_lock_release_recursive>:
 80239d8:	4770      	bx	lr

080239da <memcpy>:
 80239da:	440a      	add	r2, r1
 80239dc:	4291      	cmp	r1, r2
 80239de:	f100 33ff 	add.w	r3, r0, #4294967295
 80239e2:	d100      	bne.n	80239e6 <memcpy+0xc>
 80239e4:	4770      	bx	lr
 80239e6:	b510      	push	{r4, lr}
 80239e8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80239ec:	f803 4f01 	strb.w	r4, [r3, #1]!
 80239f0:	4291      	cmp	r1, r2
 80239f2:	d1f9      	bne.n	80239e8 <memcpy+0xe>
 80239f4:	bd10      	pop	{r4, pc}
	...

080239f8 <__register_exitproc>:
 80239f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80239fc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8023ab0 <__register_exitproc+0xb8>
 8023a00:	4606      	mov	r6, r0
 8023a02:	f8d8 0000 	ldr.w	r0, [r8]
 8023a06:	461f      	mov	r7, r3
 8023a08:	460d      	mov	r5, r1
 8023a0a:	4691      	mov	r9, r2
 8023a0c:	f7ff ffe3 	bl	80239d6 <__retarget_lock_acquire_recursive>
 8023a10:	4b23      	ldr	r3, [pc, #140]	; (8023aa0 <__register_exitproc+0xa8>)
 8023a12:	681c      	ldr	r4, [r3, #0]
 8023a14:	b934      	cbnz	r4, 8023a24 <__register_exitproc+0x2c>
 8023a16:	4c23      	ldr	r4, [pc, #140]	; (8023aa4 <__register_exitproc+0xac>)
 8023a18:	601c      	str	r4, [r3, #0]
 8023a1a:	4b23      	ldr	r3, [pc, #140]	; (8023aa8 <__register_exitproc+0xb0>)
 8023a1c:	b113      	cbz	r3, 8023a24 <__register_exitproc+0x2c>
 8023a1e:	681b      	ldr	r3, [r3, #0]
 8023a20:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8023a24:	6863      	ldr	r3, [r4, #4]
 8023a26:	2b1f      	cmp	r3, #31
 8023a28:	dd07      	ble.n	8023a3a <__register_exitproc+0x42>
 8023a2a:	f8d8 0000 	ldr.w	r0, [r8]
 8023a2e:	f7ff ffd3 	bl	80239d8 <__retarget_lock_release_recursive>
 8023a32:	f04f 30ff 	mov.w	r0, #4294967295
 8023a36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023a3a:	b32e      	cbz	r6, 8023a88 <__register_exitproc+0x90>
 8023a3c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8023a40:	b968      	cbnz	r0, 8023a5e <__register_exitproc+0x66>
 8023a42:	4b1a      	ldr	r3, [pc, #104]	; (8023aac <__register_exitproc+0xb4>)
 8023a44:	2b00      	cmp	r3, #0
 8023a46:	d0f0      	beq.n	8023a2a <__register_exitproc+0x32>
 8023a48:	f44f 7084 	mov.w	r0, #264	; 0x108
 8023a4c:	f7ff fd14 	bl	8023478 <malloc>
 8023a50:	2800      	cmp	r0, #0
 8023a52:	d0ea      	beq.n	8023a2a <__register_exitproc+0x32>
 8023a54:	2300      	movs	r3, #0
 8023a56:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8023a5a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8023a5e:	6863      	ldr	r3, [r4, #4]
 8023a60:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8023a64:	2201      	movs	r2, #1
 8023a66:	409a      	lsls	r2, r3
 8023a68:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8023a6c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8023a70:	4313      	orrs	r3, r2
 8023a72:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8023a76:	2e02      	cmp	r6, #2
 8023a78:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8023a7c:	bf02      	ittt	eq
 8023a7e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8023a82:	4313      	orreq	r3, r2
 8023a84:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8023a88:	6863      	ldr	r3, [r4, #4]
 8023a8a:	f8d8 0000 	ldr.w	r0, [r8]
 8023a8e:	1c5a      	adds	r2, r3, #1
 8023a90:	3302      	adds	r3, #2
 8023a92:	6062      	str	r2, [r4, #4]
 8023a94:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8023a98:	f7ff ff9e 	bl	80239d8 <__retarget_lock_release_recursive>
 8023a9c:	2000      	movs	r0, #0
 8023a9e:	e7ca      	b.n	8023a36 <__register_exitproc+0x3e>
 8023aa0:	24002b98 	.word	0x24002b98
 8023aa4:	24002b0c 	.word	0x24002b0c
 8023aa8:	0802667c 	.word	0x0802667c
 8023aac:	08023479 	.word	0x08023479
 8023ab0:	240000f4 	.word	0x240000f4

08023ab4 <_free_r>:
 8023ab4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023ab6:	2900      	cmp	r1, #0
 8023ab8:	d044      	beq.n	8023b44 <_free_r+0x90>
 8023aba:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8023abe:	9001      	str	r0, [sp, #4]
 8023ac0:	2b00      	cmp	r3, #0
 8023ac2:	f1a1 0404 	sub.w	r4, r1, #4
 8023ac6:	bfb8      	it	lt
 8023ac8:	18e4      	addlt	r4, r4, r3
 8023aca:	f7ff fd85 	bl	80235d8 <__malloc_lock>
 8023ace:	4a1e      	ldr	r2, [pc, #120]	; (8023b48 <_free_r+0x94>)
 8023ad0:	9801      	ldr	r0, [sp, #4]
 8023ad2:	6813      	ldr	r3, [r2, #0]
 8023ad4:	b933      	cbnz	r3, 8023ae4 <_free_r+0x30>
 8023ad6:	6063      	str	r3, [r4, #4]
 8023ad8:	6014      	str	r4, [r2, #0]
 8023ada:	b003      	add	sp, #12
 8023adc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8023ae0:	f7ff bd80 	b.w	80235e4 <__malloc_unlock>
 8023ae4:	42a3      	cmp	r3, r4
 8023ae6:	d908      	bls.n	8023afa <_free_r+0x46>
 8023ae8:	6825      	ldr	r5, [r4, #0]
 8023aea:	1961      	adds	r1, r4, r5
 8023aec:	428b      	cmp	r3, r1
 8023aee:	bf01      	itttt	eq
 8023af0:	6819      	ldreq	r1, [r3, #0]
 8023af2:	685b      	ldreq	r3, [r3, #4]
 8023af4:	1949      	addeq	r1, r1, r5
 8023af6:	6021      	streq	r1, [r4, #0]
 8023af8:	e7ed      	b.n	8023ad6 <_free_r+0x22>
 8023afa:	461a      	mov	r2, r3
 8023afc:	685b      	ldr	r3, [r3, #4]
 8023afe:	b10b      	cbz	r3, 8023b04 <_free_r+0x50>
 8023b00:	42a3      	cmp	r3, r4
 8023b02:	d9fa      	bls.n	8023afa <_free_r+0x46>
 8023b04:	6811      	ldr	r1, [r2, #0]
 8023b06:	1855      	adds	r5, r2, r1
 8023b08:	42a5      	cmp	r5, r4
 8023b0a:	d10b      	bne.n	8023b24 <_free_r+0x70>
 8023b0c:	6824      	ldr	r4, [r4, #0]
 8023b0e:	4421      	add	r1, r4
 8023b10:	1854      	adds	r4, r2, r1
 8023b12:	42a3      	cmp	r3, r4
 8023b14:	6011      	str	r1, [r2, #0]
 8023b16:	d1e0      	bne.n	8023ada <_free_r+0x26>
 8023b18:	681c      	ldr	r4, [r3, #0]
 8023b1a:	685b      	ldr	r3, [r3, #4]
 8023b1c:	6053      	str	r3, [r2, #4]
 8023b1e:	440c      	add	r4, r1
 8023b20:	6014      	str	r4, [r2, #0]
 8023b22:	e7da      	b.n	8023ada <_free_r+0x26>
 8023b24:	d902      	bls.n	8023b2c <_free_r+0x78>
 8023b26:	230c      	movs	r3, #12
 8023b28:	6003      	str	r3, [r0, #0]
 8023b2a:	e7d6      	b.n	8023ada <_free_r+0x26>
 8023b2c:	6825      	ldr	r5, [r4, #0]
 8023b2e:	1961      	adds	r1, r4, r5
 8023b30:	428b      	cmp	r3, r1
 8023b32:	bf04      	itt	eq
 8023b34:	6819      	ldreq	r1, [r3, #0]
 8023b36:	685b      	ldreq	r3, [r3, #4]
 8023b38:	6063      	str	r3, [r4, #4]
 8023b3a:	bf04      	itt	eq
 8023b3c:	1949      	addeq	r1, r1, r5
 8023b3e:	6021      	streq	r1, [r4, #0]
 8023b40:	6054      	str	r4, [r2, #4]
 8023b42:	e7ca      	b.n	8023ada <_free_r+0x26>
 8023b44:	b003      	add	sp, #12
 8023b46:	bd30      	pop	{r4, r5, pc}
 8023b48:	240029c0 	.word	0x240029c0

08023b4c <__sfputc_r>:
 8023b4c:	6893      	ldr	r3, [r2, #8]
 8023b4e:	3b01      	subs	r3, #1
 8023b50:	2b00      	cmp	r3, #0
 8023b52:	b410      	push	{r4}
 8023b54:	6093      	str	r3, [r2, #8]
 8023b56:	da08      	bge.n	8023b6a <__sfputc_r+0x1e>
 8023b58:	6994      	ldr	r4, [r2, #24]
 8023b5a:	42a3      	cmp	r3, r4
 8023b5c:	db01      	blt.n	8023b62 <__sfputc_r+0x16>
 8023b5e:	290a      	cmp	r1, #10
 8023b60:	d103      	bne.n	8023b6a <__sfputc_r+0x1e>
 8023b62:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023b66:	f000 bb73 	b.w	8024250 <__swbuf_r>
 8023b6a:	6813      	ldr	r3, [r2, #0]
 8023b6c:	1c58      	adds	r0, r3, #1
 8023b6e:	6010      	str	r0, [r2, #0]
 8023b70:	7019      	strb	r1, [r3, #0]
 8023b72:	4608      	mov	r0, r1
 8023b74:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023b78:	4770      	bx	lr

08023b7a <__sfputs_r>:
 8023b7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023b7c:	4606      	mov	r6, r0
 8023b7e:	460f      	mov	r7, r1
 8023b80:	4614      	mov	r4, r2
 8023b82:	18d5      	adds	r5, r2, r3
 8023b84:	42ac      	cmp	r4, r5
 8023b86:	d101      	bne.n	8023b8c <__sfputs_r+0x12>
 8023b88:	2000      	movs	r0, #0
 8023b8a:	e007      	b.n	8023b9c <__sfputs_r+0x22>
 8023b8c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023b90:	463a      	mov	r2, r7
 8023b92:	4630      	mov	r0, r6
 8023b94:	f7ff ffda 	bl	8023b4c <__sfputc_r>
 8023b98:	1c43      	adds	r3, r0, #1
 8023b9a:	d1f3      	bne.n	8023b84 <__sfputs_r+0xa>
 8023b9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08023ba0 <_vfiprintf_r>:
 8023ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ba4:	460d      	mov	r5, r1
 8023ba6:	b09d      	sub	sp, #116	; 0x74
 8023ba8:	4614      	mov	r4, r2
 8023baa:	4698      	mov	r8, r3
 8023bac:	4606      	mov	r6, r0
 8023bae:	b118      	cbz	r0, 8023bb8 <_vfiprintf_r+0x18>
 8023bb0:	6a03      	ldr	r3, [r0, #32]
 8023bb2:	b90b      	cbnz	r3, 8023bb8 <_vfiprintf_r+0x18>
 8023bb4:	f7ff fdb6 	bl	8023724 <__sinit>
 8023bb8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023bba:	07d9      	lsls	r1, r3, #31
 8023bbc:	d405      	bmi.n	8023bca <_vfiprintf_r+0x2a>
 8023bbe:	89ab      	ldrh	r3, [r5, #12]
 8023bc0:	059a      	lsls	r2, r3, #22
 8023bc2:	d402      	bmi.n	8023bca <_vfiprintf_r+0x2a>
 8023bc4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023bc6:	f7ff ff06 	bl	80239d6 <__retarget_lock_acquire_recursive>
 8023bca:	89ab      	ldrh	r3, [r5, #12]
 8023bcc:	071b      	lsls	r3, r3, #28
 8023bce:	d501      	bpl.n	8023bd4 <_vfiprintf_r+0x34>
 8023bd0:	692b      	ldr	r3, [r5, #16]
 8023bd2:	b99b      	cbnz	r3, 8023bfc <_vfiprintf_r+0x5c>
 8023bd4:	4629      	mov	r1, r5
 8023bd6:	4630      	mov	r0, r6
 8023bd8:	f000 fb78 	bl	80242cc <__swsetup_r>
 8023bdc:	b170      	cbz	r0, 8023bfc <_vfiprintf_r+0x5c>
 8023bde:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023be0:	07dc      	lsls	r4, r3, #31
 8023be2:	d504      	bpl.n	8023bee <_vfiprintf_r+0x4e>
 8023be4:	f04f 30ff 	mov.w	r0, #4294967295
 8023be8:	b01d      	add	sp, #116	; 0x74
 8023bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023bee:	89ab      	ldrh	r3, [r5, #12]
 8023bf0:	0598      	lsls	r0, r3, #22
 8023bf2:	d4f7      	bmi.n	8023be4 <_vfiprintf_r+0x44>
 8023bf4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023bf6:	f7ff feef 	bl	80239d8 <__retarget_lock_release_recursive>
 8023bfa:	e7f3      	b.n	8023be4 <_vfiprintf_r+0x44>
 8023bfc:	2300      	movs	r3, #0
 8023bfe:	9309      	str	r3, [sp, #36]	; 0x24
 8023c00:	2320      	movs	r3, #32
 8023c02:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8023c06:	f8cd 800c 	str.w	r8, [sp, #12]
 8023c0a:	2330      	movs	r3, #48	; 0x30
 8023c0c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8023dc0 <_vfiprintf_r+0x220>
 8023c10:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8023c14:	f04f 0901 	mov.w	r9, #1
 8023c18:	4623      	mov	r3, r4
 8023c1a:	469a      	mov	sl, r3
 8023c1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023c20:	b10a      	cbz	r2, 8023c26 <_vfiprintf_r+0x86>
 8023c22:	2a25      	cmp	r2, #37	; 0x25
 8023c24:	d1f9      	bne.n	8023c1a <_vfiprintf_r+0x7a>
 8023c26:	ebba 0b04 	subs.w	fp, sl, r4
 8023c2a:	d00b      	beq.n	8023c44 <_vfiprintf_r+0xa4>
 8023c2c:	465b      	mov	r3, fp
 8023c2e:	4622      	mov	r2, r4
 8023c30:	4629      	mov	r1, r5
 8023c32:	4630      	mov	r0, r6
 8023c34:	f7ff ffa1 	bl	8023b7a <__sfputs_r>
 8023c38:	3001      	adds	r0, #1
 8023c3a:	f000 80a9 	beq.w	8023d90 <_vfiprintf_r+0x1f0>
 8023c3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023c40:	445a      	add	r2, fp
 8023c42:	9209      	str	r2, [sp, #36]	; 0x24
 8023c44:	f89a 3000 	ldrb.w	r3, [sl]
 8023c48:	2b00      	cmp	r3, #0
 8023c4a:	f000 80a1 	beq.w	8023d90 <_vfiprintf_r+0x1f0>
 8023c4e:	2300      	movs	r3, #0
 8023c50:	f04f 32ff 	mov.w	r2, #4294967295
 8023c54:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023c58:	f10a 0a01 	add.w	sl, sl, #1
 8023c5c:	9304      	str	r3, [sp, #16]
 8023c5e:	9307      	str	r3, [sp, #28]
 8023c60:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8023c64:	931a      	str	r3, [sp, #104]	; 0x68
 8023c66:	4654      	mov	r4, sl
 8023c68:	2205      	movs	r2, #5
 8023c6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023c6e:	4854      	ldr	r0, [pc, #336]	; (8023dc0 <_vfiprintf_r+0x220>)
 8023c70:	f7dc fb4e 	bl	8000310 <memchr>
 8023c74:	9a04      	ldr	r2, [sp, #16]
 8023c76:	b9d8      	cbnz	r0, 8023cb0 <_vfiprintf_r+0x110>
 8023c78:	06d1      	lsls	r1, r2, #27
 8023c7a:	bf44      	itt	mi
 8023c7c:	2320      	movmi	r3, #32
 8023c7e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023c82:	0713      	lsls	r3, r2, #28
 8023c84:	bf44      	itt	mi
 8023c86:	232b      	movmi	r3, #43	; 0x2b
 8023c88:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023c8c:	f89a 3000 	ldrb.w	r3, [sl]
 8023c90:	2b2a      	cmp	r3, #42	; 0x2a
 8023c92:	d015      	beq.n	8023cc0 <_vfiprintf_r+0x120>
 8023c94:	9a07      	ldr	r2, [sp, #28]
 8023c96:	4654      	mov	r4, sl
 8023c98:	2000      	movs	r0, #0
 8023c9a:	f04f 0c0a 	mov.w	ip, #10
 8023c9e:	4621      	mov	r1, r4
 8023ca0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023ca4:	3b30      	subs	r3, #48	; 0x30
 8023ca6:	2b09      	cmp	r3, #9
 8023ca8:	d94d      	bls.n	8023d46 <_vfiprintf_r+0x1a6>
 8023caa:	b1b0      	cbz	r0, 8023cda <_vfiprintf_r+0x13a>
 8023cac:	9207      	str	r2, [sp, #28]
 8023cae:	e014      	b.n	8023cda <_vfiprintf_r+0x13a>
 8023cb0:	eba0 0308 	sub.w	r3, r0, r8
 8023cb4:	fa09 f303 	lsl.w	r3, r9, r3
 8023cb8:	4313      	orrs	r3, r2
 8023cba:	9304      	str	r3, [sp, #16]
 8023cbc:	46a2      	mov	sl, r4
 8023cbe:	e7d2      	b.n	8023c66 <_vfiprintf_r+0xc6>
 8023cc0:	9b03      	ldr	r3, [sp, #12]
 8023cc2:	1d19      	adds	r1, r3, #4
 8023cc4:	681b      	ldr	r3, [r3, #0]
 8023cc6:	9103      	str	r1, [sp, #12]
 8023cc8:	2b00      	cmp	r3, #0
 8023cca:	bfbb      	ittet	lt
 8023ccc:	425b      	neglt	r3, r3
 8023cce:	f042 0202 	orrlt.w	r2, r2, #2
 8023cd2:	9307      	strge	r3, [sp, #28]
 8023cd4:	9307      	strlt	r3, [sp, #28]
 8023cd6:	bfb8      	it	lt
 8023cd8:	9204      	strlt	r2, [sp, #16]
 8023cda:	7823      	ldrb	r3, [r4, #0]
 8023cdc:	2b2e      	cmp	r3, #46	; 0x2e
 8023cde:	d10c      	bne.n	8023cfa <_vfiprintf_r+0x15a>
 8023ce0:	7863      	ldrb	r3, [r4, #1]
 8023ce2:	2b2a      	cmp	r3, #42	; 0x2a
 8023ce4:	d134      	bne.n	8023d50 <_vfiprintf_r+0x1b0>
 8023ce6:	9b03      	ldr	r3, [sp, #12]
 8023ce8:	1d1a      	adds	r2, r3, #4
 8023cea:	681b      	ldr	r3, [r3, #0]
 8023cec:	9203      	str	r2, [sp, #12]
 8023cee:	2b00      	cmp	r3, #0
 8023cf0:	bfb8      	it	lt
 8023cf2:	f04f 33ff 	movlt.w	r3, #4294967295
 8023cf6:	3402      	adds	r4, #2
 8023cf8:	9305      	str	r3, [sp, #20]
 8023cfa:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8023dd0 <_vfiprintf_r+0x230>
 8023cfe:	7821      	ldrb	r1, [r4, #0]
 8023d00:	2203      	movs	r2, #3
 8023d02:	4650      	mov	r0, sl
 8023d04:	f7dc fb04 	bl	8000310 <memchr>
 8023d08:	b138      	cbz	r0, 8023d1a <_vfiprintf_r+0x17a>
 8023d0a:	9b04      	ldr	r3, [sp, #16]
 8023d0c:	eba0 000a 	sub.w	r0, r0, sl
 8023d10:	2240      	movs	r2, #64	; 0x40
 8023d12:	4082      	lsls	r2, r0
 8023d14:	4313      	orrs	r3, r2
 8023d16:	3401      	adds	r4, #1
 8023d18:	9304      	str	r3, [sp, #16]
 8023d1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023d1e:	4829      	ldr	r0, [pc, #164]	; (8023dc4 <_vfiprintf_r+0x224>)
 8023d20:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8023d24:	2206      	movs	r2, #6
 8023d26:	f7dc faf3 	bl	8000310 <memchr>
 8023d2a:	2800      	cmp	r0, #0
 8023d2c:	d03f      	beq.n	8023dae <_vfiprintf_r+0x20e>
 8023d2e:	4b26      	ldr	r3, [pc, #152]	; (8023dc8 <_vfiprintf_r+0x228>)
 8023d30:	bb1b      	cbnz	r3, 8023d7a <_vfiprintf_r+0x1da>
 8023d32:	9b03      	ldr	r3, [sp, #12]
 8023d34:	3307      	adds	r3, #7
 8023d36:	f023 0307 	bic.w	r3, r3, #7
 8023d3a:	3308      	adds	r3, #8
 8023d3c:	9303      	str	r3, [sp, #12]
 8023d3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d40:	443b      	add	r3, r7
 8023d42:	9309      	str	r3, [sp, #36]	; 0x24
 8023d44:	e768      	b.n	8023c18 <_vfiprintf_r+0x78>
 8023d46:	fb0c 3202 	mla	r2, ip, r2, r3
 8023d4a:	460c      	mov	r4, r1
 8023d4c:	2001      	movs	r0, #1
 8023d4e:	e7a6      	b.n	8023c9e <_vfiprintf_r+0xfe>
 8023d50:	2300      	movs	r3, #0
 8023d52:	3401      	adds	r4, #1
 8023d54:	9305      	str	r3, [sp, #20]
 8023d56:	4619      	mov	r1, r3
 8023d58:	f04f 0c0a 	mov.w	ip, #10
 8023d5c:	4620      	mov	r0, r4
 8023d5e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8023d62:	3a30      	subs	r2, #48	; 0x30
 8023d64:	2a09      	cmp	r2, #9
 8023d66:	d903      	bls.n	8023d70 <_vfiprintf_r+0x1d0>
 8023d68:	2b00      	cmp	r3, #0
 8023d6a:	d0c6      	beq.n	8023cfa <_vfiprintf_r+0x15a>
 8023d6c:	9105      	str	r1, [sp, #20]
 8023d6e:	e7c4      	b.n	8023cfa <_vfiprintf_r+0x15a>
 8023d70:	fb0c 2101 	mla	r1, ip, r1, r2
 8023d74:	4604      	mov	r4, r0
 8023d76:	2301      	movs	r3, #1
 8023d78:	e7f0      	b.n	8023d5c <_vfiprintf_r+0x1bc>
 8023d7a:	ab03      	add	r3, sp, #12
 8023d7c:	9300      	str	r3, [sp, #0]
 8023d7e:	462a      	mov	r2, r5
 8023d80:	4b12      	ldr	r3, [pc, #72]	; (8023dcc <_vfiprintf_r+0x22c>)
 8023d82:	a904      	add	r1, sp, #16
 8023d84:	4630      	mov	r0, r6
 8023d86:	f3af 8000 	nop.w
 8023d8a:	4607      	mov	r7, r0
 8023d8c:	1c78      	adds	r0, r7, #1
 8023d8e:	d1d6      	bne.n	8023d3e <_vfiprintf_r+0x19e>
 8023d90:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023d92:	07d9      	lsls	r1, r3, #31
 8023d94:	d405      	bmi.n	8023da2 <_vfiprintf_r+0x202>
 8023d96:	89ab      	ldrh	r3, [r5, #12]
 8023d98:	059a      	lsls	r2, r3, #22
 8023d9a:	d402      	bmi.n	8023da2 <_vfiprintf_r+0x202>
 8023d9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023d9e:	f7ff fe1b 	bl	80239d8 <__retarget_lock_release_recursive>
 8023da2:	89ab      	ldrh	r3, [r5, #12]
 8023da4:	065b      	lsls	r3, r3, #25
 8023da6:	f53f af1d 	bmi.w	8023be4 <_vfiprintf_r+0x44>
 8023daa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023dac:	e71c      	b.n	8023be8 <_vfiprintf_r+0x48>
 8023dae:	ab03      	add	r3, sp, #12
 8023db0:	9300      	str	r3, [sp, #0]
 8023db2:	462a      	mov	r2, r5
 8023db4:	4b05      	ldr	r3, [pc, #20]	; (8023dcc <_vfiprintf_r+0x22c>)
 8023db6:	a904      	add	r1, sp, #16
 8023db8:	4630      	mov	r0, r6
 8023dba:	f000 f879 	bl	8023eb0 <_printf_i>
 8023dbe:	e7e4      	b.n	8023d8a <_vfiprintf_r+0x1ea>
 8023dc0:	08026680 	.word	0x08026680
 8023dc4:	0802668a 	.word	0x0802668a
 8023dc8:	00000000 	.word	0x00000000
 8023dcc:	08023b7b 	.word	0x08023b7b
 8023dd0:	08026686 	.word	0x08026686

08023dd4 <_printf_common>:
 8023dd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023dd8:	4616      	mov	r6, r2
 8023dda:	4699      	mov	r9, r3
 8023ddc:	688a      	ldr	r2, [r1, #8]
 8023dde:	690b      	ldr	r3, [r1, #16]
 8023de0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8023de4:	4293      	cmp	r3, r2
 8023de6:	bfb8      	it	lt
 8023de8:	4613      	movlt	r3, r2
 8023dea:	6033      	str	r3, [r6, #0]
 8023dec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8023df0:	4607      	mov	r7, r0
 8023df2:	460c      	mov	r4, r1
 8023df4:	b10a      	cbz	r2, 8023dfa <_printf_common+0x26>
 8023df6:	3301      	adds	r3, #1
 8023df8:	6033      	str	r3, [r6, #0]
 8023dfa:	6823      	ldr	r3, [r4, #0]
 8023dfc:	0699      	lsls	r1, r3, #26
 8023dfe:	bf42      	ittt	mi
 8023e00:	6833      	ldrmi	r3, [r6, #0]
 8023e02:	3302      	addmi	r3, #2
 8023e04:	6033      	strmi	r3, [r6, #0]
 8023e06:	6825      	ldr	r5, [r4, #0]
 8023e08:	f015 0506 	ands.w	r5, r5, #6
 8023e0c:	d106      	bne.n	8023e1c <_printf_common+0x48>
 8023e0e:	f104 0a19 	add.w	sl, r4, #25
 8023e12:	68e3      	ldr	r3, [r4, #12]
 8023e14:	6832      	ldr	r2, [r6, #0]
 8023e16:	1a9b      	subs	r3, r3, r2
 8023e18:	42ab      	cmp	r3, r5
 8023e1a:	dc26      	bgt.n	8023e6a <_printf_common+0x96>
 8023e1c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8023e20:	1e13      	subs	r3, r2, #0
 8023e22:	6822      	ldr	r2, [r4, #0]
 8023e24:	bf18      	it	ne
 8023e26:	2301      	movne	r3, #1
 8023e28:	0692      	lsls	r2, r2, #26
 8023e2a:	d42b      	bmi.n	8023e84 <_printf_common+0xb0>
 8023e2c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8023e30:	4649      	mov	r1, r9
 8023e32:	4638      	mov	r0, r7
 8023e34:	47c0      	blx	r8
 8023e36:	3001      	adds	r0, #1
 8023e38:	d01e      	beq.n	8023e78 <_printf_common+0xa4>
 8023e3a:	6823      	ldr	r3, [r4, #0]
 8023e3c:	6922      	ldr	r2, [r4, #16]
 8023e3e:	f003 0306 	and.w	r3, r3, #6
 8023e42:	2b04      	cmp	r3, #4
 8023e44:	bf02      	ittt	eq
 8023e46:	68e5      	ldreq	r5, [r4, #12]
 8023e48:	6833      	ldreq	r3, [r6, #0]
 8023e4a:	1aed      	subeq	r5, r5, r3
 8023e4c:	68a3      	ldr	r3, [r4, #8]
 8023e4e:	bf0c      	ite	eq
 8023e50:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8023e54:	2500      	movne	r5, #0
 8023e56:	4293      	cmp	r3, r2
 8023e58:	bfc4      	itt	gt
 8023e5a:	1a9b      	subgt	r3, r3, r2
 8023e5c:	18ed      	addgt	r5, r5, r3
 8023e5e:	2600      	movs	r6, #0
 8023e60:	341a      	adds	r4, #26
 8023e62:	42b5      	cmp	r5, r6
 8023e64:	d11a      	bne.n	8023e9c <_printf_common+0xc8>
 8023e66:	2000      	movs	r0, #0
 8023e68:	e008      	b.n	8023e7c <_printf_common+0xa8>
 8023e6a:	2301      	movs	r3, #1
 8023e6c:	4652      	mov	r2, sl
 8023e6e:	4649      	mov	r1, r9
 8023e70:	4638      	mov	r0, r7
 8023e72:	47c0      	blx	r8
 8023e74:	3001      	adds	r0, #1
 8023e76:	d103      	bne.n	8023e80 <_printf_common+0xac>
 8023e78:	f04f 30ff 	mov.w	r0, #4294967295
 8023e7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023e80:	3501      	adds	r5, #1
 8023e82:	e7c6      	b.n	8023e12 <_printf_common+0x3e>
 8023e84:	18e1      	adds	r1, r4, r3
 8023e86:	1c5a      	adds	r2, r3, #1
 8023e88:	2030      	movs	r0, #48	; 0x30
 8023e8a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8023e8e:	4422      	add	r2, r4
 8023e90:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8023e94:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8023e98:	3302      	adds	r3, #2
 8023e9a:	e7c7      	b.n	8023e2c <_printf_common+0x58>
 8023e9c:	2301      	movs	r3, #1
 8023e9e:	4622      	mov	r2, r4
 8023ea0:	4649      	mov	r1, r9
 8023ea2:	4638      	mov	r0, r7
 8023ea4:	47c0      	blx	r8
 8023ea6:	3001      	adds	r0, #1
 8023ea8:	d0e6      	beq.n	8023e78 <_printf_common+0xa4>
 8023eaa:	3601      	adds	r6, #1
 8023eac:	e7d9      	b.n	8023e62 <_printf_common+0x8e>
	...

08023eb0 <_printf_i>:
 8023eb0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023eb4:	7e0f      	ldrb	r7, [r1, #24]
 8023eb6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023eb8:	2f78      	cmp	r7, #120	; 0x78
 8023eba:	4691      	mov	r9, r2
 8023ebc:	4680      	mov	r8, r0
 8023ebe:	460c      	mov	r4, r1
 8023ec0:	469a      	mov	sl, r3
 8023ec2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8023ec6:	d807      	bhi.n	8023ed8 <_printf_i+0x28>
 8023ec8:	2f62      	cmp	r7, #98	; 0x62
 8023eca:	d80a      	bhi.n	8023ee2 <_printf_i+0x32>
 8023ecc:	2f00      	cmp	r7, #0
 8023ece:	f000 80d4 	beq.w	802407a <_printf_i+0x1ca>
 8023ed2:	2f58      	cmp	r7, #88	; 0x58
 8023ed4:	f000 80c0 	beq.w	8024058 <_printf_i+0x1a8>
 8023ed8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8023edc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8023ee0:	e03a      	b.n	8023f58 <_printf_i+0xa8>
 8023ee2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8023ee6:	2b15      	cmp	r3, #21
 8023ee8:	d8f6      	bhi.n	8023ed8 <_printf_i+0x28>
 8023eea:	a101      	add	r1, pc, #4	; (adr r1, 8023ef0 <_printf_i+0x40>)
 8023eec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8023ef0:	08023f49 	.word	0x08023f49
 8023ef4:	08023f5d 	.word	0x08023f5d
 8023ef8:	08023ed9 	.word	0x08023ed9
 8023efc:	08023ed9 	.word	0x08023ed9
 8023f00:	08023ed9 	.word	0x08023ed9
 8023f04:	08023ed9 	.word	0x08023ed9
 8023f08:	08023f5d 	.word	0x08023f5d
 8023f0c:	08023ed9 	.word	0x08023ed9
 8023f10:	08023ed9 	.word	0x08023ed9
 8023f14:	08023ed9 	.word	0x08023ed9
 8023f18:	08023ed9 	.word	0x08023ed9
 8023f1c:	08024061 	.word	0x08024061
 8023f20:	08023f89 	.word	0x08023f89
 8023f24:	0802401b 	.word	0x0802401b
 8023f28:	08023ed9 	.word	0x08023ed9
 8023f2c:	08023ed9 	.word	0x08023ed9
 8023f30:	08024083 	.word	0x08024083
 8023f34:	08023ed9 	.word	0x08023ed9
 8023f38:	08023f89 	.word	0x08023f89
 8023f3c:	08023ed9 	.word	0x08023ed9
 8023f40:	08023ed9 	.word	0x08023ed9
 8023f44:	08024023 	.word	0x08024023
 8023f48:	682b      	ldr	r3, [r5, #0]
 8023f4a:	1d1a      	adds	r2, r3, #4
 8023f4c:	681b      	ldr	r3, [r3, #0]
 8023f4e:	602a      	str	r2, [r5, #0]
 8023f50:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8023f54:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8023f58:	2301      	movs	r3, #1
 8023f5a:	e09f      	b.n	802409c <_printf_i+0x1ec>
 8023f5c:	6820      	ldr	r0, [r4, #0]
 8023f5e:	682b      	ldr	r3, [r5, #0]
 8023f60:	0607      	lsls	r7, r0, #24
 8023f62:	f103 0104 	add.w	r1, r3, #4
 8023f66:	6029      	str	r1, [r5, #0]
 8023f68:	d501      	bpl.n	8023f6e <_printf_i+0xbe>
 8023f6a:	681e      	ldr	r6, [r3, #0]
 8023f6c:	e003      	b.n	8023f76 <_printf_i+0xc6>
 8023f6e:	0646      	lsls	r6, r0, #25
 8023f70:	d5fb      	bpl.n	8023f6a <_printf_i+0xba>
 8023f72:	f9b3 6000 	ldrsh.w	r6, [r3]
 8023f76:	2e00      	cmp	r6, #0
 8023f78:	da03      	bge.n	8023f82 <_printf_i+0xd2>
 8023f7a:	232d      	movs	r3, #45	; 0x2d
 8023f7c:	4276      	negs	r6, r6
 8023f7e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8023f82:	485a      	ldr	r0, [pc, #360]	; (80240ec <_printf_i+0x23c>)
 8023f84:	230a      	movs	r3, #10
 8023f86:	e012      	b.n	8023fae <_printf_i+0xfe>
 8023f88:	682b      	ldr	r3, [r5, #0]
 8023f8a:	6820      	ldr	r0, [r4, #0]
 8023f8c:	1d19      	adds	r1, r3, #4
 8023f8e:	6029      	str	r1, [r5, #0]
 8023f90:	0605      	lsls	r5, r0, #24
 8023f92:	d501      	bpl.n	8023f98 <_printf_i+0xe8>
 8023f94:	681e      	ldr	r6, [r3, #0]
 8023f96:	e002      	b.n	8023f9e <_printf_i+0xee>
 8023f98:	0641      	lsls	r1, r0, #25
 8023f9a:	d5fb      	bpl.n	8023f94 <_printf_i+0xe4>
 8023f9c:	881e      	ldrh	r6, [r3, #0]
 8023f9e:	4853      	ldr	r0, [pc, #332]	; (80240ec <_printf_i+0x23c>)
 8023fa0:	2f6f      	cmp	r7, #111	; 0x6f
 8023fa2:	bf0c      	ite	eq
 8023fa4:	2308      	moveq	r3, #8
 8023fa6:	230a      	movne	r3, #10
 8023fa8:	2100      	movs	r1, #0
 8023faa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8023fae:	6865      	ldr	r5, [r4, #4]
 8023fb0:	60a5      	str	r5, [r4, #8]
 8023fb2:	2d00      	cmp	r5, #0
 8023fb4:	bfa2      	ittt	ge
 8023fb6:	6821      	ldrge	r1, [r4, #0]
 8023fb8:	f021 0104 	bicge.w	r1, r1, #4
 8023fbc:	6021      	strge	r1, [r4, #0]
 8023fbe:	b90e      	cbnz	r6, 8023fc4 <_printf_i+0x114>
 8023fc0:	2d00      	cmp	r5, #0
 8023fc2:	d04b      	beq.n	802405c <_printf_i+0x1ac>
 8023fc4:	4615      	mov	r5, r2
 8023fc6:	fbb6 f1f3 	udiv	r1, r6, r3
 8023fca:	fb03 6711 	mls	r7, r3, r1, r6
 8023fce:	5dc7      	ldrb	r7, [r0, r7]
 8023fd0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8023fd4:	4637      	mov	r7, r6
 8023fd6:	42bb      	cmp	r3, r7
 8023fd8:	460e      	mov	r6, r1
 8023fda:	d9f4      	bls.n	8023fc6 <_printf_i+0x116>
 8023fdc:	2b08      	cmp	r3, #8
 8023fde:	d10b      	bne.n	8023ff8 <_printf_i+0x148>
 8023fe0:	6823      	ldr	r3, [r4, #0]
 8023fe2:	07de      	lsls	r6, r3, #31
 8023fe4:	d508      	bpl.n	8023ff8 <_printf_i+0x148>
 8023fe6:	6923      	ldr	r3, [r4, #16]
 8023fe8:	6861      	ldr	r1, [r4, #4]
 8023fea:	4299      	cmp	r1, r3
 8023fec:	bfde      	ittt	le
 8023fee:	2330      	movle	r3, #48	; 0x30
 8023ff0:	f805 3c01 	strble.w	r3, [r5, #-1]
 8023ff4:	f105 35ff 	addle.w	r5, r5, #4294967295
 8023ff8:	1b52      	subs	r2, r2, r5
 8023ffa:	6122      	str	r2, [r4, #16]
 8023ffc:	f8cd a000 	str.w	sl, [sp]
 8024000:	464b      	mov	r3, r9
 8024002:	aa03      	add	r2, sp, #12
 8024004:	4621      	mov	r1, r4
 8024006:	4640      	mov	r0, r8
 8024008:	f7ff fee4 	bl	8023dd4 <_printf_common>
 802400c:	3001      	adds	r0, #1
 802400e:	d14a      	bne.n	80240a6 <_printf_i+0x1f6>
 8024010:	f04f 30ff 	mov.w	r0, #4294967295
 8024014:	b004      	add	sp, #16
 8024016:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802401a:	6823      	ldr	r3, [r4, #0]
 802401c:	f043 0320 	orr.w	r3, r3, #32
 8024020:	6023      	str	r3, [r4, #0]
 8024022:	4833      	ldr	r0, [pc, #204]	; (80240f0 <_printf_i+0x240>)
 8024024:	2778      	movs	r7, #120	; 0x78
 8024026:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802402a:	6823      	ldr	r3, [r4, #0]
 802402c:	6829      	ldr	r1, [r5, #0]
 802402e:	061f      	lsls	r7, r3, #24
 8024030:	f851 6b04 	ldr.w	r6, [r1], #4
 8024034:	d402      	bmi.n	802403c <_printf_i+0x18c>
 8024036:	065f      	lsls	r7, r3, #25
 8024038:	bf48      	it	mi
 802403a:	b2b6      	uxthmi	r6, r6
 802403c:	07df      	lsls	r7, r3, #31
 802403e:	bf48      	it	mi
 8024040:	f043 0320 	orrmi.w	r3, r3, #32
 8024044:	6029      	str	r1, [r5, #0]
 8024046:	bf48      	it	mi
 8024048:	6023      	strmi	r3, [r4, #0]
 802404a:	b91e      	cbnz	r6, 8024054 <_printf_i+0x1a4>
 802404c:	6823      	ldr	r3, [r4, #0]
 802404e:	f023 0320 	bic.w	r3, r3, #32
 8024052:	6023      	str	r3, [r4, #0]
 8024054:	2310      	movs	r3, #16
 8024056:	e7a7      	b.n	8023fa8 <_printf_i+0xf8>
 8024058:	4824      	ldr	r0, [pc, #144]	; (80240ec <_printf_i+0x23c>)
 802405a:	e7e4      	b.n	8024026 <_printf_i+0x176>
 802405c:	4615      	mov	r5, r2
 802405e:	e7bd      	b.n	8023fdc <_printf_i+0x12c>
 8024060:	682b      	ldr	r3, [r5, #0]
 8024062:	6826      	ldr	r6, [r4, #0]
 8024064:	6961      	ldr	r1, [r4, #20]
 8024066:	1d18      	adds	r0, r3, #4
 8024068:	6028      	str	r0, [r5, #0]
 802406a:	0635      	lsls	r5, r6, #24
 802406c:	681b      	ldr	r3, [r3, #0]
 802406e:	d501      	bpl.n	8024074 <_printf_i+0x1c4>
 8024070:	6019      	str	r1, [r3, #0]
 8024072:	e002      	b.n	802407a <_printf_i+0x1ca>
 8024074:	0670      	lsls	r0, r6, #25
 8024076:	d5fb      	bpl.n	8024070 <_printf_i+0x1c0>
 8024078:	8019      	strh	r1, [r3, #0]
 802407a:	2300      	movs	r3, #0
 802407c:	6123      	str	r3, [r4, #16]
 802407e:	4615      	mov	r5, r2
 8024080:	e7bc      	b.n	8023ffc <_printf_i+0x14c>
 8024082:	682b      	ldr	r3, [r5, #0]
 8024084:	1d1a      	adds	r2, r3, #4
 8024086:	602a      	str	r2, [r5, #0]
 8024088:	681d      	ldr	r5, [r3, #0]
 802408a:	6862      	ldr	r2, [r4, #4]
 802408c:	2100      	movs	r1, #0
 802408e:	4628      	mov	r0, r5
 8024090:	f7dc f93e 	bl	8000310 <memchr>
 8024094:	b108      	cbz	r0, 802409a <_printf_i+0x1ea>
 8024096:	1b40      	subs	r0, r0, r5
 8024098:	6060      	str	r0, [r4, #4]
 802409a:	6863      	ldr	r3, [r4, #4]
 802409c:	6123      	str	r3, [r4, #16]
 802409e:	2300      	movs	r3, #0
 80240a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80240a4:	e7aa      	b.n	8023ffc <_printf_i+0x14c>
 80240a6:	6923      	ldr	r3, [r4, #16]
 80240a8:	462a      	mov	r2, r5
 80240aa:	4649      	mov	r1, r9
 80240ac:	4640      	mov	r0, r8
 80240ae:	47d0      	blx	sl
 80240b0:	3001      	adds	r0, #1
 80240b2:	d0ad      	beq.n	8024010 <_printf_i+0x160>
 80240b4:	6823      	ldr	r3, [r4, #0]
 80240b6:	079b      	lsls	r3, r3, #30
 80240b8:	d413      	bmi.n	80240e2 <_printf_i+0x232>
 80240ba:	68e0      	ldr	r0, [r4, #12]
 80240bc:	9b03      	ldr	r3, [sp, #12]
 80240be:	4298      	cmp	r0, r3
 80240c0:	bfb8      	it	lt
 80240c2:	4618      	movlt	r0, r3
 80240c4:	e7a6      	b.n	8024014 <_printf_i+0x164>
 80240c6:	2301      	movs	r3, #1
 80240c8:	4632      	mov	r2, r6
 80240ca:	4649      	mov	r1, r9
 80240cc:	4640      	mov	r0, r8
 80240ce:	47d0      	blx	sl
 80240d0:	3001      	adds	r0, #1
 80240d2:	d09d      	beq.n	8024010 <_printf_i+0x160>
 80240d4:	3501      	adds	r5, #1
 80240d6:	68e3      	ldr	r3, [r4, #12]
 80240d8:	9903      	ldr	r1, [sp, #12]
 80240da:	1a5b      	subs	r3, r3, r1
 80240dc:	42ab      	cmp	r3, r5
 80240de:	dcf2      	bgt.n	80240c6 <_printf_i+0x216>
 80240e0:	e7eb      	b.n	80240ba <_printf_i+0x20a>
 80240e2:	2500      	movs	r5, #0
 80240e4:	f104 0619 	add.w	r6, r4, #25
 80240e8:	e7f5      	b.n	80240d6 <_printf_i+0x226>
 80240ea:	bf00      	nop
 80240ec:	08026691 	.word	0x08026691
 80240f0:	080266a2 	.word	0x080266a2

080240f4 <__sflush_r>:
 80240f4:	898a      	ldrh	r2, [r1, #12]
 80240f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80240fa:	4605      	mov	r5, r0
 80240fc:	0710      	lsls	r0, r2, #28
 80240fe:	460c      	mov	r4, r1
 8024100:	d458      	bmi.n	80241b4 <__sflush_r+0xc0>
 8024102:	684b      	ldr	r3, [r1, #4]
 8024104:	2b00      	cmp	r3, #0
 8024106:	dc05      	bgt.n	8024114 <__sflush_r+0x20>
 8024108:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802410a:	2b00      	cmp	r3, #0
 802410c:	dc02      	bgt.n	8024114 <__sflush_r+0x20>
 802410e:	2000      	movs	r0, #0
 8024110:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024114:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8024116:	2e00      	cmp	r6, #0
 8024118:	d0f9      	beq.n	802410e <__sflush_r+0x1a>
 802411a:	2300      	movs	r3, #0
 802411c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8024120:	682f      	ldr	r7, [r5, #0]
 8024122:	6a21      	ldr	r1, [r4, #32]
 8024124:	602b      	str	r3, [r5, #0]
 8024126:	d032      	beq.n	802418e <__sflush_r+0x9a>
 8024128:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802412a:	89a3      	ldrh	r3, [r4, #12]
 802412c:	075a      	lsls	r2, r3, #29
 802412e:	d505      	bpl.n	802413c <__sflush_r+0x48>
 8024130:	6863      	ldr	r3, [r4, #4]
 8024132:	1ac0      	subs	r0, r0, r3
 8024134:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8024136:	b10b      	cbz	r3, 802413c <__sflush_r+0x48>
 8024138:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802413a:	1ac0      	subs	r0, r0, r3
 802413c:	2300      	movs	r3, #0
 802413e:	4602      	mov	r2, r0
 8024140:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8024142:	6a21      	ldr	r1, [r4, #32]
 8024144:	4628      	mov	r0, r5
 8024146:	47b0      	blx	r6
 8024148:	1c43      	adds	r3, r0, #1
 802414a:	89a3      	ldrh	r3, [r4, #12]
 802414c:	d106      	bne.n	802415c <__sflush_r+0x68>
 802414e:	6829      	ldr	r1, [r5, #0]
 8024150:	291d      	cmp	r1, #29
 8024152:	d82b      	bhi.n	80241ac <__sflush_r+0xb8>
 8024154:	4a29      	ldr	r2, [pc, #164]	; (80241fc <__sflush_r+0x108>)
 8024156:	410a      	asrs	r2, r1
 8024158:	07d6      	lsls	r6, r2, #31
 802415a:	d427      	bmi.n	80241ac <__sflush_r+0xb8>
 802415c:	2200      	movs	r2, #0
 802415e:	6062      	str	r2, [r4, #4]
 8024160:	04d9      	lsls	r1, r3, #19
 8024162:	6922      	ldr	r2, [r4, #16]
 8024164:	6022      	str	r2, [r4, #0]
 8024166:	d504      	bpl.n	8024172 <__sflush_r+0x7e>
 8024168:	1c42      	adds	r2, r0, #1
 802416a:	d101      	bne.n	8024170 <__sflush_r+0x7c>
 802416c:	682b      	ldr	r3, [r5, #0]
 802416e:	b903      	cbnz	r3, 8024172 <__sflush_r+0x7e>
 8024170:	6560      	str	r0, [r4, #84]	; 0x54
 8024172:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8024174:	602f      	str	r7, [r5, #0]
 8024176:	2900      	cmp	r1, #0
 8024178:	d0c9      	beq.n	802410e <__sflush_r+0x1a>
 802417a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802417e:	4299      	cmp	r1, r3
 8024180:	d002      	beq.n	8024188 <__sflush_r+0x94>
 8024182:	4628      	mov	r0, r5
 8024184:	f7ff fc96 	bl	8023ab4 <_free_r>
 8024188:	2000      	movs	r0, #0
 802418a:	6360      	str	r0, [r4, #52]	; 0x34
 802418c:	e7c0      	b.n	8024110 <__sflush_r+0x1c>
 802418e:	2301      	movs	r3, #1
 8024190:	4628      	mov	r0, r5
 8024192:	47b0      	blx	r6
 8024194:	1c41      	adds	r1, r0, #1
 8024196:	d1c8      	bne.n	802412a <__sflush_r+0x36>
 8024198:	682b      	ldr	r3, [r5, #0]
 802419a:	2b00      	cmp	r3, #0
 802419c:	d0c5      	beq.n	802412a <__sflush_r+0x36>
 802419e:	2b1d      	cmp	r3, #29
 80241a0:	d001      	beq.n	80241a6 <__sflush_r+0xb2>
 80241a2:	2b16      	cmp	r3, #22
 80241a4:	d101      	bne.n	80241aa <__sflush_r+0xb6>
 80241a6:	602f      	str	r7, [r5, #0]
 80241a8:	e7b1      	b.n	802410e <__sflush_r+0x1a>
 80241aa:	89a3      	ldrh	r3, [r4, #12]
 80241ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80241b0:	81a3      	strh	r3, [r4, #12]
 80241b2:	e7ad      	b.n	8024110 <__sflush_r+0x1c>
 80241b4:	690f      	ldr	r7, [r1, #16]
 80241b6:	2f00      	cmp	r7, #0
 80241b8:	d0a9      	beq.n	802410e <__sflush_r+0x1a>
 80241ba:	0793      	lsls	r3, r2, #30
 80241bc:	680e      	ldr	r6, [r1, #0]
 80241be:	bf08      	it	eq
 80241c0:	694b      	ldreq	r3, [r1, #20]
 80241c2:	600f      	str	r7, [r1, #0]
 80241c4:	bf18      	it	ne
 80241c6:	2300      	movne	r3, #0
 80241c8:	eba6 0807 	sub.w	r8, r6, r7
 80241cc:	608b      	str	r3, [r1, #8]
 80241ce:	f1b8 0f00 	cmp.w	r8, #0
 80241d2:	dd9c      	ble.n	802410e <__sflush_r+0x1a>
 80241d4:	6a21      	ldr	r1, [r4, #32]
 80241d6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80241d8:	4643      	mov	r3, r8
 80241da:	463a      	mov	r2, r7
 80241dc:	4628      	mov	r0, r5
 80241de:	47b0      	blx	r6
 80241e0:	2800      	cmp	r0, #0
 80241e2:	dc06      	bgt.n	80241f2 <__sflush_r+0xfe>
 80241e4:	89a3      	ldrh	r3, [r4, #12]
 80241e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80241ea:	81a3      	strh	r3, [r4, #12]
 80241ec:	f04f 30ff 	mov.w	r0, #4294967295
 80241f0:	e78e      	b.n	8024110 <__sflush_r+0x1c>
 80241f2:	4407      	add	r7, r0
 80241f4:	eba8 0800 	sub.w	r8, r8, r0
 80241f8:	e7e9      	b.n	80241ce <__sflush_r+0xda>
 80241fa:	bf00      	nop
 80241fc:	dfbffffe 	.word	0xdfbffffe

08024200 <_fflush_r>:
 8024200:	b538      	push	{r3, r4, r5, lr}
 8024202:	690b      	ldr	r3, [r1, #16]
 8024204:	4605      	mov	r5, r0
 8024206:	460c      	mov	r4, r1
 8024208:	b913      	cbnz	r3, 8024210 <_fflush_r+0x10>
 802420a:	2500      	movs	r5, #0
 802420c:	4628      	mov	r0, r5
 802420e:	bd38      	pop	{r3, r4, r5, pc}
 8024210:	b118      	cbz	r0, 802421a <_fflush_r+0x1a>
 8024212:	6a03      	ldr	r3, [r0, #32]
 8024214:	b90b      	cbnz	r3, 802421a <_fflush_r+0x1a>
 8024216:	f7ff fa85 	bl	8023724 <__sinit>
 802421a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802421e:	2b00      	cmp	r3, #0
 8024220:	d0f3      	beq.n	802420a <_fflush_r+0xa>
 8024222:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8024224:	07d0      	lsls	r0, r2, #31
 8024226:	d404      	bmi.n	8024232 <_fflush_r+0x32>
 8024228:	0599      	lsls	r1, r3, #22
 802422a:	d402      	bmi.n	8024232 <_fflush_r+0x32>
 802422c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802422e:	f7ff fbd2 	bl	80239d6 <__retarget_lock_acquire_recursive>
 8024232:	4628      	mov	r0, r5
 8024234:	4621      	mov	r1, r4
 8024236:	f7ff ff5d 	bl	80240f4 <__sflush_r>
 802423a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802423c:	07da      	lsls	r2, r3, #31
 802423e:	4605      	mov	r5, r0
 8024240:	d4e4      	bmi.n	802420c <_fflush_r+0xc>
 8024242:	89a3      	ldrh	r3, [r4, #12]
 8024244:	059b      	lsls	r3, r3, #22
 8024246:	d4e1      	bmi.n	802420c <_fflush_r+0xc>
 8024248:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802424a:	f7ff fbc5 	bl	80239d8 <__retarget_lock_release_recursive>
 802424e:	e7dd      	b.n	802420c <_fflush_r+0xc>

08024250 <__swbuf_r>:
 8024250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024252:	460e      	mov	r6, r1
 8024254:	4614      	mov	r4, r2
 8024256:	4605      	mov	r5, r0
 8024258:	b118      	cbz	r0, 8024262 <__swbuf_r+0x12>
 802425a:	6a03      	ldr	r3, [r0, #32]
 802425c:	b90b      	cbnz	r3, 8024262 <__swbuf_r+0x12>
 802425e:	f7ff fa61 	bl	8023724 <__sinit>
 8024262:	69a3      	ldr	r3, [r4, #24]
 8024264:	60a3      	str	r3, [r4, #8]
 8024266:	89a3      	ldrh	r3, [r4, #12]
 8024268:	071a      	lsls	r2, r3, #28
 802426a:	d525      	bpl.n	80242b8 <__swbuf_r+0x68>
 802426c:	6923      	ldr	r3, [r4, #16]
 802426e:	b31b      	cbz	r3, 80242b8 <__swbuf_r+0x68>
 8024270:	6823      	ldr	r3, [r4, #0]
 8024272:	6922      	ldr	r2, [r4, #16]
 8024274:	1a98      	subs	r0, r3, r2
 8024276:	6963      	ldr	r3, [r4, #20]
 8024278:	b2f6      	uxtb	r6, r6
 802427a:	4283      	cmp	r3, r0
 802427c:	4637      	mov	r7, r6
 802427e:	dc04      	bgt.n	802428a <__swbuf_r+0x3a>
 8024280:	4621      	mov	r1, r4
 8024282:	4628      	mov	r0, r5
 8024284:	f7ff ffbc 	bl	8024200 <_fflush_r>
 8024288:	b9e0      	cbnz	r0, 80242c4 <__swbuf_r+0x74>
 802428a:	68a3      	ldr	r3, [r4, #8]
 802428c:	3b01      	subs	r3, #1
 802428e:	60a3      	str	r3, [r4, #8]
 8024290:	6823      	ldr	r3, [r4, #0]
 8024292:	1c5a      	adds	r2, r3, #1
 8024294:	6022      	str	r2, [r4, #0]
 8024296:	701e      	strb	r6, [r3, #0]
 8024298:	6962      	ldr	r2, [r4, #20]
 802429a:	1c43      	adds	r3, r0, #1
 802429c:	429a      	cmp	r2, r3
 802429e:	d004      	beq.n	80242aa <__swbuf_r+0x5a>
 80242a0:	89a3      	ldrh	r3, [r4, #12]
 80242a2:	07db      	lsls	r3, r3, #31
 80242a4:	d506      	bpl.n	80242b4 <__swbuf_r+0x64>
 80242a6:	2e0a      	cmp	r6, #10
 80242a8:	d104      	bne.n	80242b4 <__swbuf_r+0x64>
 80242aa:	4621      	mov	r1, r4
 80242ac:	4628      	mov	r0, r5
 80242ae:	f7ff ffa7 	bl	8024200 <_fflush_r>
 80242b2:	b938      	cbnz	r0, 80242c4 <__swbuf_r+0x74>
 80242b4:	4638      	mov	r0, r7
 80242b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80242b8:	4621      	mov	r1, r4
 80242ba:	4628      	mov	r0, r5
 80242bc:	f000 f806 	bl	80242cc <__swsetup_r>
 80242c0:	2800      	cmp	r0, #0
 80242c2:	d0d5      	beq.n	8024270 <__swbuf_r+0x20>
 80242c4:	f04f 37ff 	mov.w	r7, #4294967295
 80242c8:	e7f4      	b.n	80242b4 <__swbuf_r+0x64>
	...

080242cc <__swsetup_r>:
 80242cc:	b538      	push	{r3, r4, r5, lr}
 80242ce:	4b2a      	ldr	r3, [pc, #168]	; (8024378 <__swsetup_r+0xac>)
 80242d0:	4605      	mov	r5, r0
 80242d2:	6818      	ldr	r0, [r3, #0]
 80242d4:	460c      	mov	r4, r1
 80242d6:	b118      	cbz	r0, 80242e0 <__swsetup_r+0x14>
 80242d8:	6a03      	ldr	r3, [r0, #32]
 80242da:	b90b      	cbnz	r3, 80242e0 <__swsetup_r+0x14>
 80242dc:	f7ff fa22 	bl	8023724 <__sinit>
 80242e0:	89a3      	ldrh	r3, [r4, #12]
 80242e2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80242e6:	0718      	lsls	r0, r3, #28
 80242e8:	d422      	bmi.n	8024330 <__swsetup_r+0x64>
 80242ea:	06d9      	lsls	r1, r3, #27
 80242ec:	d407      	bmi.n	80242fe <__swsetup_r+0x32>
 80242ee:	2309      	movs	r3, #9
 80242f0:	602b      	str	r3, [r5, #0]
 80242f2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80242f6:	81a3      	strh	r3, [r4, #12]
 80242f8:	f04f 30ff 	mov.w	r0, #4294967295
 80242fc:	e034      	b.n	8024368 <__swsetup_r+0x9c>
 80242fe:	0758      	lsls	r0, r3, #29
 8024300:	d512      	bpl.n	8024328 <__swsetup_r+0x5c>
 8024302:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8024304:	b141      	cbz	r1, 8024318 <__swsetup_r+0x4c>
 8024306:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802430a:	4299      	cmp	r1, r3
 802430c:	d002      	beq.n	8024314 <__swsetup_r+0x48>
 802430e:	4628      	mov	r0, r5
 8024310:	f7ff fbd0 	bl	8023ab4 <_free_r>
 8024314:	2300      	movs	r3, #0
 8024316:	6363      	str	r3, [r4, #52]	; 0x34
 8024318:	89a3      	ldrh	r3, [r4, #12]
 802431a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802431e:	81a3      	strh	r3, [r4, #12]
 8024320:	2300      	movs	r3, #0
 8024322:	6063      	str	r3, [r4, #4]
 8024324:	6923      	ldr	r3, [r4, #16]
 8024326:	6023      	str	r3, [r4, #0]
 8024328:	89a3      	ldrh	r3, [r4, #12]
 802432a:	f043 0308 	orr.w	r3, r3, #8
 802432e:	81a3      	strh	r3, [r4, #12]
 8024330:	6923      	ldr	r3, [r4, #16]
 8024332:	b94b      	cbnz	r3, 8024348 <__swsetup_r+0x7c>
 8024334:	89a3      	ldrh	r3, [r4, #12]
 8024336:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802433a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802433e:	d003      	beq.n	8024348 <__swsetup_r+0x7c>
 8024340:	4621      	mov	r1, r4
 8024342:	4628      	mov	r0, r5
 8024344:	f000 f840 	bl	80243c8 <__smakebuf_r>
 8024348:	89a0      	ldrh	r0, [r4, #12]
 802434a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802434e:	f010 0301 	ands.w	r3, r0, #1
 8024352:	d00a      	beq.n	802436a <__swsetup_r+0x9e>
 8024354:	2300      	movs	r3, #0
 8024356:	60a3      	str	r3, [r4, #8]
 8024358:	6963      	ldr	r3, [r4, #20]
 802435a:	425b      	negs	r3, r3
 802435c:	61a3      	str	r3, [r4, #24]
 802435e:	6923      	ldr	r3, [r4, #16]
 8024360:	b943      	cbnz	r3, 8024374 <__swsetup_r+0xa8>
 8024362:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8024366:	d1c4      	bne.n	80242f2 <__swsetup_r+0x26>
 8024368:	bd38      	pop	{r3, r4, r5, pc}
 802436a:	0781      	lsls	r1, r0, #30
 802436c:	bf58      	it	pl
 802436e:	6963      	ldrpl	r3, [r4, #20]
 8024370:	60a3      	str	r3, [r4, #8]
 8024372:	e7f4      	b.n	802435e <__swsetup_r+0x92>
 8024374:	2000      	movs	r0, #0
 8024376:	e7f7      	b.n	8024368 <__swsetup_r+0x9c>
 8024378:	240000f0 	.word	0x240000f0

0802437c <__swhatbuf_r>:
 802437c:	b570      	push	{r4, r5, r6, lr}
 802437e:	460c      	mov	r4, r1
 8024380:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024384:	2900      	cmp	r1, #0
 8024386:	b096      	sub	sp, #88	; 0x58
 8024388:	4615      	mov	r5, r2
 802438a:	461e      	mov	r6, r3
 802438c:	da0d      	bge.n	80243aa <__swhatbuf_r+0x2e>
 802438e:	89a3      	ldrh	r3, [r4, #12]
 8024390:	f013 0f80 	tst.w	r3, #128	; 0x80
 8024394:	f04f 0100 	mov.w	r1, #0
 8024398:	bf0c      	ite	eq
 802439a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802439e:	2340      	movne	r3, #64	; 0x40
 80243a0:	2000      	movs	r0, #0
 80243a2:	6031      	str	r1, [r6, #0]
 80243a4:	602b      	str	r3, [r5, #0]
 80243a6:	b016      	add	sp, #88	; 0x58
 80243a8:	bd70      	pop	{r4, r5, r6, pc}
 80243aa:	466a      	mov	r2, sp
 80243ac:	f000 f848 	bl	8024440 <_fstat_r>
 80243b0:	2800      	cmp	r0, #0
 80243b2:	dbec      	blt.n	802438e <__swhatbuf_r+0x12>
 80243b4:	9901      	ldr	r1, [sp, #4]
 80243b6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80243ba:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80243be:	4259      	negs	r1, r3
 80243c0:	4159      	adcs	r1, r3
 80243c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80243c6:	e7eb      	b.n	80243a0 <__swhatbuf_r+0x24>

080243c8 <__smakebuf_r>:
 80243c8:	898b      	ldrh	r3, [r1, #12]
 80243ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80243cc:	079d      	lsls	r5, r3, #30
 80243ce:	4606      	mov	r6, r0
 80243d0:	460c      	mov	r4, r1
 80243d2:	d507      	bpl.n	80243e4 <__smakebuf_r+0x1c>
 80243d4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80243d8:	6023      	str	r3, [r4, #0]
 80243da:	6123      	str	r3, [r4, #16]
 80243dc:	2301      	movs	r3, #1
 80243de:	6163      	str	r3, [r4, #20]
 80243e0:	b002      	add	sp, #8
 80243e2:	bd70      	pop	{r4, r5, r6, pc}
 80243e4:	ab01      	add	r3, sp, #4
 80243e6:	466a      	mov	r2, sp
 80243e8:	f7ff ffc8 	bl	802437c <__swhatbuf_r>
 80243ec:	9900      	ldr	r1, [sp, #0]
 80243ee:	4605      	mov	r5, r0
 80243f0:	4630      	mov	r0, r6
 80243f2:	f7ff f871 	bl	80234d8 <_malloc_r>
 80243f6:	b948      	cbnz	r0, 802440c <__smakebuf_r+0x44>
 80243f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80243fc:	059a      	lsls	r2, r3, #22
 80243fe:	d4ef      	bmi.n	80243e0 <__smakebuf_r+0x18>
 8024400:	f023 0303 	bic.w	r3, r3, #3
 8024404:	f043 0302 	orr.w	r3, r3, #2
 8024408:	81a3      	strh	r3, [r4, #12]
 802440a:	e7e3      	b.n	80243d4 <__smakebuf_r+0xc>
 802440c:	89a3      	ldrh	r3, [r4, #12]
 802440e:	6020      	str	r0, [r4, #0]
 8024410:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8024414:	81a3      	strh	r3, [r4, #12]
 8024416:	9b00      	ldr	r3, [sp, #0]
 8024418:	6163      	str	r3, [r4, #20]
 802441a:	9b01      	ldr	r3, [sp, #4]
 802441c:	6120      	str	r0, [r4, #16]
 802441e:	b15b      	cbz	r3, 8024438 <__smakebuf_r+0x70>
 8024420:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8024424:	4630      	mov	r0, r6
 8024426:	f000 f81d 	bl	8024464 <_isatty_r>
 802442a:	b128      	cbz	r0, 8024438 <__smakebuf_r+0x70>
 802442c:	89a3      	ldrh	r3, [r4, #12]
 802442e:	f023 0303 	bic.w	r3, r3, #3
 8024432:	f043 0301 	orr.w	r3, r3, #1
 8024436:	81a3      	strh	r3, [r4, #12]
 8024438:	89a3      	ldrh	r3, [r4, #12]
 802443a:	431d      	orrs	r5, r3
 802443c:	81a5      	strh	r5, [r4, #12]
 802443e:	e7cf      	b.n	80243e0 <__smakebuf_r+0x18>

08024440 <_fstat_r>:
 8024440:	b538      	push	{r3, r4, r5, lr}
 8024442:	4d07      	ldr	r5, [pc, #28]	; (8024460 <_fstat_r+0x20>)
 8024444:	2300      	movs	r3, #0
 8024446:	4604      	mov	r4, r0
 8024448:	4608      	mov	r0, r1
 802444a:	4611      	mov	r1, r2
 802444c:	602b      	str	r3, [r5, #0]
 802444e:	f7dd f998 	bl	8001782 <_fstat>
 8024452:	1c43      	adds	r3, r0, #1
 8024454:	d102      	bne.n	802445c <_fstat_r+0x1c>
 8024456:	682b      	ldr	r3, [r5, #0]
 8024458:	b103      	cbz	r3, 802445c <_fstat_r+0x1c>
 802445a:	6023      	str	r3, [r4, #0]
 802445c:	bd38      	pop	{r3, r4, r5, pc}
 802445e:	bf00      	nop
 8024460:	24002b04 	.word	0x24002b04

08024464 <_isatty_r>:
 8024464:	b538      	push	{r3, r4, r5, lr}
 8024466:	4d06      	ldr	r5, [pc, #24]	; (8024480 <_isatty_r+0x1c>)
 8024468:	2300      	movs	r3, #0
 802446a:	4604      	mov	r4, r0
 802446c:	4608      	mov	r0, r1
 802446e:	602b      	str	r3, [r5, #0]
 8024470:	f7dd f997 	bl	80017a2 <_isatty>
 8024474:	1c43      	adds	r3, r0, #1
 8024476:	d102      	bne.n	802447e <_isatty_r+0x1a>
 8024478:	682b      	ldr	r3, [r5, #0]
 802447a:	b103      	cbz	r3, 802447e <_isatty_r+0x1a>
 802447c:	6023      	str	r3, [r4, #0]
 802447e:	bd38      	pop	{r3, r4, r5, pc}
 8024480:	24002b04 	.word	0x24002b04

08024484 <_init>:
 8024484:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024486:	bf00      	nop
 8024488:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802448a:	bc08      	pop	{r3}
 802448c:	469e      	mov	lr, r3
 802448e:	4770      	bx	lr

08024490 <_fini>:
 8024490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024492:	bf00      	nop
 8024494:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8024496:	bc08      	pop	{r3}
 8024498:	469e      	mov	lr, r3
 802449a:	4770      	bx	lr
